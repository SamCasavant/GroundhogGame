<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1045.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="315069"><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="0.1920%" y="965" width="0.0108%" height="15" fill="rgb(227,0,7)" fg:x="605" fg:w="34"/><text x="0.4420%" y="975.50"></text></g><g><title>_int_free (54 samples, 0.02%)</title><rect x="0.2120%" y="965" width="0.0171%" height="15" fill="rgb(217,0,24)" fg:x="668" fg:w="54"/><text x="0.4620%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.01%)</title><rect x="0.2304%" y="965" width="0.0124%" height="15" fill="rgb(221,193,54)" fg:x="726" fg:w="39"/><text x="0.4804%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.01%)</title><rect x="0.2320%" y="949" width="0.0108%" height="15" fill="rgb(248,212,6)" fg:x="731" fg:w="34"/><text x="0.4820%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (83 samples, 0.03%)</title><rect x="0.2428%" y="965" width="0.0263%" height="15" fill="rgb(208,68,35)" fg:x="765" fg:w="83"/><text x="0.4928%" y="975.50"></text></g><g><title>[[heap]] (448 samples, 0.14%)</title><rect x="0.1831%" y="981" width="0.1422%" height="15" fill="rgb(232,128,0)" fg:x="577" fg:w="448"/><text x="0.4331%" y="991.50"></text></g><g><title>__GI___libc_free (105 samples, 0.03%)</title><rect x="0.3466%" y="965" width="0.0333%" height="15" fill="rgb(207,160,47)" fg:x="1092" fg:w="105"/><text x="0.5966%" y="975.50"></text></g><g><title>__GI___libc_malloc (51 samples, 0.02%)</title><rect x="0.3799%" y="965" width="0.0162%" height="15" fill="rgb(228,23,34)" fg:x="1197" fg:w="51"/><text x="0.6299%" y="975.50"></text></g><g><title>__GI___libc_realloc (101 samples, 0.03%)</title><rect x="0.3961%" y="965" width="0.0321%" height="15" fill="rgb(218,30,26)" fg:x="1248" fg:w="101"/><text x="0.6461%" y="975.50"></text></g><g><title>_int_free (158 samples, 0.05%)</title><rect x="0.4307%" y="965" width="0.0501%" height="15" fill="rgb(220,122,19)" fg:x="1357" fg:w="158"/><text x="0.6807%" y="975.50"></text></g><g><title>_int_malloc (45 samples, 0.01%)</title><rect x="0.4808%" y="965" width="0.0143%" height="15" fill="rgb(250,228,42)" fg:x="1515" fg:w="45"/><text x="0.7308%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (118 samples, 0.04%)</title><rect x="0.5008%" y="965" width="0.0375%" height="15" fill="rgb(240,193,28)" fg:x="1578" fg:w="118"/><text x="0.7508%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (68 samples, 0.02%)</title><rect x="0.5167%" y="949" width="0.0216%" height="15" fill="rgb(216,20,37)" fg:x="1628" fg:w="68"/><text x="0.7667%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (154 samples, 0.05%)</title><rect x="0.5424%" y="965" width="0.0489%" height="15" fill="rgb(206,188,39)" fg:x="1709" fg:w="154"/><text x="0.7924%" y="975.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (78 samples, 0.02%)</title><rect x="0.6265%" y="965" width="0.0248%" height="15" fill="rgb(217,207,13)" fg:x="1974" fg:w="78"/><text x="0.8765%" y="975.50"></text></g><g><title>[anon] (1,096 samples, 0.35%)</title><rect x="0.3288%" y="981" width="0.3479%" height="15" fill="rgb(231,73,38)" fg:x="1036" fg:w="1096"/><text x="0.5788%" y="991.50"></text></g><g><title>[engine] (71 samples, 0.02%)</title><rect x="0.6767%" y="981" width="0.0225%" height="15" fill="rgb(225,20,46)" fg:x="2132" fg:w="71"/><text x="0.9267%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (43 samples, 0.01%)</title><rect x="0.7151%" y="965" width="0.0136%" height="15" fill="rgb(210,31,41)" fg:x="2253" fg:w="43"/><text x="0.9651%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 0.04%)</title><rect x="0.7456%" y="965" width="0.0387%" height="15" fill="rgb(221,200,47)" fg:x="2349" fg:w="122"/><text x="0.9956%" y="975.50"></text></g><g><title>__GI___libc_free (119 samples, 0.04%)</title><rect x="0.7852%" y="965" width="0.0378%" height="15" fill="rgb(226,26,5)" fg:x="2474" fg:w="119"/><text x="1.0352%" y="975.50"></text></g><g><title>__GI___libc_malloc (102 samples, 0.03%)</title><rect x="0.8230%" y="965" width="0.0324%" height="15" fill="rgb(249,33,26)" fg:x="2593" fg:w="102"/><text x="1.0730%" y="975.50"></text></g><g><title>__GI___libc_realloc (54 samples, 0.02%)</title><rect x="0.8554%" y="965" width="0.0171%" height="15" fill="rgb(235,183,28)" fg:x="2695" fg:w="54"/><text x="1.1054%" y="975.50"></text></g><g><title>_int_free (213 samples, 0.07%)</title><rect x="0.8763%" y="965" width="0.0676%" height="15" fill="rgb(221,5,38)" fg:x="2761" fg:w="213"/><text x="1.1263%" y="975.50"></text></g><g><title>_int_malloc (137 samples, 0.04%)</title><rect x="0.9439%" y="965" width="0.0435%" height="15" fill="rgb(247,18,42)" fg:x="2974" fg:w="137"/><text x="1.1939%" y="975.50"></text></g><g><title>_int_realloc (194 samples, 0.06%)</title><rect x="0.9874%" y="965" width="0.0616%" height="15" fill="rgb(241,131,45)" fg:x="3111" fg:w="194"/><text x="1.2374%" y="975.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (44 samples, 0.01%)</title><rect x="1.0490%" y="965" width="0.0140%" height="15" fill="rgb(249,31,29)" fg:x="3305" fg:w="44"/><text x="1.2990%" y="975.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (330 samples, 0.10%)</title><rect x="1.0629%" y="965" width="0.1047%" height="15" fill="rgb(225,111,53)" fg:x="3349" fg:w="330"/><text x="1.3129%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (234 samples, 0.07%)</title><rect x="1.1683%" y="965" width="0.0743%" height="15" fill="rgb(238,160,17)" fg:x="3681" fg:w="234"/><text x="1.4183%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (211 samples, 0.07%)</title><rect x="1.1756%" y="949" width="0.0670%" height="15" fill="rgb(214,148,48)" fg:x="3704" fg:w="211"/><text x="1.4256%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (89 samples, 0.03%)</title><rect x="1.2143%" y="933" width="0.0282%" height="15" fill="rgb(232,36,49)" fg:x="3826" fg:w="89"/><text x="1.4643%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (89 samples, 0.03%)</title><rect x="1.2143%" y="917" width="0.0282%" height="15" fill="rgb(209,103,24)" fg:x="3826" fg:w="89"/><text x="1.4643%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (267 samples, 0.08%)</title><rect x="1.2429%" y="965" width="0.0847%" height="15" fill="rgb(229,88,8)" fg:x="3916" fg:w="267"/><text x="1.4929%" y="975.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (161 samples, 0.05%)</title><rect x="1.3775%" y="965" width="0.0511%" height="15" fill="rgb(213,181,19)" fg:x="4340" fg:w="161"/><text x="1.6275%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (33 samples, 0.01%)</title><rect x="1.4181%" y="949" width="0.0105%" height="15" fill="rgb(254,191,54)" fg:x="4468" fg:w="33"/><text x="1.6681%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="1.4181%" y="933" width="0.0105%" height="15" fill="rgb(241,83,37)" fg:x="4468" fg:w="33"/><text x="1.6681%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (33 samples, 0.01%)</title><rect x="1.4181%" y="917" width="0.0105%" height="15" fill="rgb(233,36,39)" fg:x="4468" fg:w="33"/><text x="1.6681%" y="927.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="1.4181%" y="901" width="0.0105%" height="15" fill="rgb(226,3,54)" fg:x="4468" fg:w="33"/><text x="1.6681%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (33 samples, 0.01%)</title><rect x="1.4181%" y="885" width="0.0105%" height="15" fill="rgb(245,192,40)" fg:x="4468" fg:w="33"/><text x="1.6681%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="1.4181%" y="869" width="0.0105%" height="15" fill="rgb(238,167,29)" fg:x="4468" fg:w="33"/><text x="1.6681%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.01%)</title><rect x="1.4181%" y="853" width="0.0105%" height="15" fill="rgb(232,182,51)" fg:x="4468" fg:w="33"/><text x="1.6681%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.01%)</title><rect x="1.4181%" y="837" width="0.0105%" height="15" fill="rgb(231,60,39)" fg:x="4468" fg:w="33"/><text x="1.6681%" y="847.50"></text></g><g><title>__rdl_dealloc (33 samples, 0.01%)</title><rect x="1.4181%" y="821" width="0.0105%" height="15" fill="rgb(208,69,12)" fg:x="4468" fg:w="33"/><text x="1.6681%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (33 samples, 0.01%)</title><rect x="1.4181%" y="805" width="0.0105%" height="15" fill="rgb(235,93,37)" fg:x="4468" fg:w="33"/><text x="1.6681%" y="815.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (469 samples, 0.15%)</title><rect x="1.4511%" y="965" width="0.1489%" height="15" fill="rgb(213,116,39)" fg:x="4572" fg:w="469"/><text x="1.7011%" y="975.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (174 samples, 0.06%)</title><rect x="1.6235%" y="949" width="0.0552%" height="15" fill="rgb(222,207,29)" fg:x="5115" fg:w="174"/><text x="1.8735%" y="959.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (174 samples, 0.06%)</title><rect x="1.6235%" y="933" width="0.0552%" height="15" fill="rgb(206,96,30)" fg:x="5115" fg:w="174"/><text x="1.8735%" y="943.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (174 samples, 0.06%)</title><rect x="1.6235%" y="917" width="0.0552%" height="15" fill="rgb(218,138,4)" fg:x="5115" fg:w="174"/><text x="1.8735%" y="927.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (44 samples, 0.01%)</title><rect x="1.6787%" y="949" width="0.0140%" height="15" fill="rgb(250,191,14)" fg:x="5289" fg:w="44"/><text x="1.9287%" y="959.50"></text></g><g><title>pathfinding::directed::astar::astar (290 samples, 0.09%)</title><rect x="1.6009%" y="965" width="0.0920%" height="15" fill="rgb(239,60,40)" fg:x="5044" fg:w="290"/><text x="1.8509%" y="975.50"></text></g><g><title>[unknown] (3,173 samples, 1.01%)</title><rect x="0.7011%" y="981" width="1.0071%" height="15" fill="rgb(206,27,48)" fg:x="2209" fg:w="3173"/><text x="0.9511%" y="991.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (62 samples, 0.02%)</title><rect x="1.7155%" y="629" width="0.0197%" height="15" fill="rgb(225,35,8)" fg:x="5405" fg:w="62"/><text x="1.9655%" y="639.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (98 samples, 0.03%)</title><rect x="1.7130%" y="645" width="0.0311%" height="15" fill="rgb(250,213,24)" fg:x="5397" fg:w="98"/><text x="1.9630%" y="655.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (59 samples, 0.02%)</title><rect x="1.7625%" y="485" width="0.0187%" height="15" fill="rgb(247,123,22)" fg:x="5553" fg:w="59"/><text x="2.0125%" y="495.50"></text></g><g><title>async_executor::steal (100 samples, 0.03%)</title><rect x="1.7615%" y="501" width="0.0317%" height="15" fill="rgb(231,138,38)" fg:x="5550" fg:w="100"/><text x="2.0115%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (50 samples, 0.02%)</title><rect x="1.7987%" y="485" width="0.0159%" height="15" fill="rgb(231,145,46)" fg:x="5667" fg:w="50"/><text x="2.0487%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (111 samples, 0.04%)</title><rect x="1.7933%" y="501" width="0.0352%" height="15" fill="rgb(251,118,11)" fg:x="5650" fg:w="111"/><text x="2.0433%" y="511.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (44 samples, 0.01%)</title><rect x="1.8145%" y="485" width="0.0140%" height="15" fill="rgb(217,147,25)" fg:x="5717" fg:w="44"/><text x="2.0645%" y="495.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (270 samples, 0.09%)</title><rect x="1.7539%" y="517" width="0.0857%" height="15" fill="rgb(247,81,37)" fg:x="5526" fg:w="270"/><text x="2.0039%" y="527.50"></text></g><g><title>async_executor::State::notify (43 samples, 0.01%)</title><rect x="1.8396%" y="517" width="0.0136%" height="15" fill="rgb(209,12,38)" fg:x="5796" fg:w="43"/><text x="2.0896%" y="527.50"></text></g><g><title>async_executor::Ticker::sleep (41 samples, 0.01%)</title><rect x="1.8532%" y="517" width="0.0130%" height="15" fill="rgb(227,1,9)" fg:x="5839" fg:w="41"/><text x="2.1032%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (404 samples, 0.13%)</title><rect x="1.7495%" y="581" width="0.1282%" height="15" fill="rgb(248,47,43)" fg:x="5512" fg:w="404"/><text x="1.9995%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (404 samples, 0.13%)</title><rect x="1.7495%" y="565" width="0.1282%" height="15" fill="rgb(221,10,30)" fg:x="5512" fg:w="404"/><text x="1.9995%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (401 samples, 0.13%)</title><rect x="1.7504%" y="549" width="0.1273%" height="15" fill="rgb(210,229,1)" fg:x="5515" fg:w="401"/><text x="2.0004%" y="559.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (399 samples, 0.13%)</title><rect x="1.7510%" y="533" width="0.1266%" height="15" fill="rgb(222,148,37)" fg:x="5517" fg:w="399"/><text x="2.0010%" y="543.50"></text></g><g><title>async_executor::Ticker::wake (36 samples, 0.01%)</title><rect x="1.8663%" y="517" width="0.0114%" height="15" fill="rgb(234,67,33)" fg:x="5880" fg:w="36"/><text x="2.1163%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (420 samples, 0.13%)</title><rect x="1.7469%" y="613" width="0.1333%" height="15" fill="rgb(247,98,35)" fg:x="5504" fg:w="420"/><text x="1.9969%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (418 samples, 0.13%)</title><rect x="1.7476%" y="597" width="0.1327%" height="15" fill="rgb(247,138,52)" fg:x="5506" fg:w="418"/><text x="1.9976%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.01%)</title><rect x="1.9024%" y="517" width="0.0117%" height="15" fill="rgb(213,79,30)" fg:x="5994" fg:w="37"/><text x="2.1524%" y="527.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (36 samples, 0.01%)</title><rect x="1.9028%" y="501" width="0.0114%" height="15" fill="rgb(246,177,23)" fg:x="5995" fg:w="36"/><text x="2.1528%" y="511.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (115 samples, 0.04%)</title><rect x="1.8923%" y="533" width="0.0365%" height="15" fill="rgb(230,62,27)" fg:x="5962" fg:w="115"/><text x="2.1423%" y="543.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (43 samples, 0.01%)</title><rect x="1.9377%" y="485" width="0.0136%" height="15" fill="rgb(216,154,8)" fg:x="6105" fg:w="43"/><text x="2.1877%" y="495.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (54 samples, 0.02%)</title><rect x="1.9361%" y="501" width="0.0171%" height="15" fill="rgb(244,35,45)" fg:x="6100" fg:w="54"/><text x="2.1861%" y="511.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (83 samples, 0.03%)</title><rect x="1.9313%" y="517" width="0.0263%" height="15" fill="rgb(251,115,12)" fg:x="6085" fg:w="83"/><text x="2.1813%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (64 samples, 0.02%)</title><rect x="1.9596%" y="485" width="0.0203%" height="15" fill="rgb(240,54,50)" fg:x="6174" fg:w="64"/><text x="2.2096%" y="495.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (58 samples, 0.02%)</title><rect x="1.9615%" y="469" width="0.0184%" height="15" fill="rgb(233,84,52)" fg:x="6180" fg:w="58"/><text x="2.2115%" y="479.50"></text></g><g><title>event_listener::List::notify (41 samples, 0.01%)</title><rect x="1.9862%" y="469" width="0.0130%" height="15" fill="rgb(207,117,47)" fg:x="6258" fg:w="41"/><text x="2.2362%" y="479.50"></text></g><g><title>core::task::wake::Waker::wake (38 samples, 0.01%)</title><rect x="1.9872%" y="453" width="0.0121%" height="15" fill="rgb(249,43,39)" fg:x="6261" fg:w="38"/><text x="2.2372%" y="463.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (38 samples, 0.01%)</title><rect x="1.9872%" y="437" width="0.0121%" height="15" fill="rgb(209,38,44)" fg:x="6261" fg:w="38"/><text x="2.2372%" y="447.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (136 samples, 0.04%)</title><rect x="1.9586%" y="501" width="0.0432%" height="15" fill="rgb(236,212,23)" fg:x="6171" fg:w="136"/><text x="2.2086%" y="511.50"></text></g><g><title>event_listener::Event::notify (69 samples, 0.02%)</title><rect x="1.9799%" y="485" width="0.0219%" height="15" fill="rgb(242,79,21)" fg:x="6238" fg:w="69"/><text x="2.2299%" y="495.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (146 samples, 0.05%)</title><rect x="1.9577%" y="517" width="0.0463%" height="15" fill="rgb(211,96,35)" fg:x="6168" fg:w="146"/><text x="2.2077%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::draw::RenderCommand]&gt; (384 samples, 0.12%)</title><rect x="2.0294%" y="389" width="0.1219%" height="15" fill="rgb(253,215,40)" fg:x="6394" fg:w="384"/><text x="2.2794%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::draw::RenderCommand&gt; (383 samples, 0.12%)</title><rect x="2.0297%" y="373" width="0.1216%" height="15" fill="rgb(211,81,21)" fg:x="6395" fg:w="383"/><text x="2.2797%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (174 samples, 0.06%)</title><rect x="2.0960%" y="357" width="0.0552%" height="15" fill="rgb(208,190,38)" fg:x="6604" fg:w="174"/><text x="2.3460%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (167 samples, 0.05%)</title><rect x="2.0983%" y="341" width="0.0530%" height="15" fill="rgb(235,213,38)" fg:x="6611" fg:w="167"/><text x="2.3483%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (167 samples, 0.05%)</title><rect x="2.0983%" y="325" width="0.0530%" height="15" fill="rgb(237,122,38)" fg:x="6611" fg:w="167"/><text x="2.3483%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (167 samples, 0.05%)</title><rect x="2.0983%" y="309" width="0.0530%" height="15" fill="rgb(244,218,35)" fg:x="6611" fg:w="167"/><text x="2.3483%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_sub (167 samples, 0.05%)</title><rect x="2.0983%" y="293" width="0.0530%" height="15" fill="rgb(240,68,47)" fg:x="6611" fg:w="167"/><text x="2.3483%" y="303.50"></text></g><g><title>bevy_render::draw::clear_draw_system (404 samples, 0.13%)</title><rect x="2.0237%" y="453" width="0.1282%" height="15" fill="rgb(210,16,53)" fg:x="6376" fg:w="404"/><text x="2.2737%" y="463.50"></text></g><g><title>bevy_render::draw::Draw::clear_render_commands (397 samples, 0.13%)</title><rect x="2.0259%" y="437" width="0.1260%" height="15" fill="rgb(235,124,12)" fg:x="6383" fg:w="397"/><text x="2.2759%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (394 samples, 0.13%)</title><rect x="2.0269%" y="421" width="0.1251%" height="15" fill="rgb(224,169,11)" fg:x="6386" fg:w="394"/><text x="2.2769%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (394 samples, 0.13%)</title><rect x="2.0269%" y="405" width="0.1251%" height="15" fill="rgb(250,166,2)" fg:x="6386" fg:w="394"/><text x="2.2769%" y="415.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (104 samples, 0.03%)</title><rect x="2.1519%" y="453" width="0.0330%" height="15" fill="rgb(242,216,29)" fg:x="6780" fg:w="104"/><text x="2.4019%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (80 samples, 0.03%)</title><rect x="2.1595%" y="437" width="0.0254%" height="15" fill="rgb(230,116,27)" fg:x="6804" fg:w="80"/><text x="2.4095%" y="447.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (80 samples, 0.03%)</title><rect x="2.1595%" y="421" width="0.0254%" height="15" fill="rgb(228,99,48)" fg:x="6804" fg:w="80"/><text x="2.4095%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (80 samples, 0.03%)</title><rect x="2.1595%" y="405" width="0.0254%" height="15" fill="rgb(253,11,6)" fg:x="6804" fg:w="80"/><text x="2.4095%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (80 samples, 0.03%)</title><rect x="2.1595%" y="389" width="0.0254%" height="15" fill="rgb(247,143,39)" fg:x="6804" fg:w="80"/><text x="2.4095%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (74 samples, 0.02%)</title><rect x="2.1614%" y="373" width="0.0235%" height="15" fill="rgb(236,97,10)" fg:x="6810" fg:w="74"/><text x="2.4114%" y="383.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (61 samples, 0.02%)</title><rect x="2.1849%" y="453" width="0.0194%" height="15" fill="rgb(233,208,19)" fg:x="6884" fg:w="61"/><text x="2.4349%" y="463.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (36 samples, 0.01%)</title><rect x="2.2176%" y="405" width="0.0114%" height="15" fill="rgb(216,164,2)" fg:x="6987" fg:w="36"/><text x="2.4676%" y="415.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.01%)</title><rect x="2.2176%" y="421" width="0.0130%" height="15" fill="rgb(220,129,5)" fg:x="6987" fg:w="41"/><text x="2.4676%" y="431.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.01%)</title><rect x="2.2176%" y="437" width="0.0136%" height="15" fill="rgb(242,17,10)" fg:x="6987" fg:w="43"/><text x="2.4676%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (758 samples, 0.24%)</title><rect x="2.0056%" y="501" width="0.2406%" height="15" fill="rgb(242,107,0)" fg:x="6319" fg:w="758"/><text x="2.2556%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (743 samples, 0.24%)</title><rect x="2.0104%" y="485" width="0.2358%" height="15" fill="rgb(251,28,31)" fg:x="6334" fg:w="743"/><text x="2.2604%" y="495.50"></text></g><g><title>core::ops::function::Fn::call (720 samples, 0.23%)</title><rect x="2.0177%" y="469" width="0.2285%" height="15" fill="rgb(233,223,10)" fg:x="6357" fg:w="720"/><text x="2.2677%" y="479.50"></text></g><g><title>engine::engine::render::animate_sprite_system (132 samples, 0.04%)</title><rect x="2.2043%" y="453" width="0.0419%" height="15" fill="rgb(215,21,27)" fg:x="6945" fg:w="132"/><text x="2.4543%" y="463.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (39 samples, 0.01%)</title><rect x="2.2506%" y="453" width="0.0124%" height="15" fill="rgb(232,23,21)" fg:x="7091" fg:w="39"/><text x="2.5006%" y="463.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (38 samples, 0.01%)</title><rect x="2.2509%" y="437" width="0.0121%" height="15" fill="rgb(244,5,23)" fg:x="7092" fg:w="38"/><text x="2.5009%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (65 samples, 0.02%)</title><rect x="2.2462%" y="501" width="0.0206%" height="15" fill="rgb(226,81,46)" fg:x="7077" fg:w="65"/><text x="2.4962%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (57 samples, 0.02%)</title><rect x="2.2487%" y="485" width="0.0181%" height="15" fill="rgb(247,70,30)" fg:x="7085" fg:w="57"/><text x="2.4987%" y="495.50"></text></g><g><title>core::ops::function::Fn::call (57 samples, 0.02%)</title><rect x="2.2487%" y="469" width="0.0181%" height="15" fill="rgb(212,68,19)" fg:x="7085" fg:w="57"/><text x="2.4987%" y="479.50"></text></g><g><title>engine::engine::actor::pathfinding::best_nearest_valid_destination (34 samples, 0.01%)</title><rect x="2.2846%" y="437" width="0.0108%" height="15" fill="rgb(240,187,13)" fg:x="7198" fg:w="34"/><text x="2.5346%" y="447.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (62 samples, 0.02%)</title><rect x="2.3017%" y="405" width="0.0197%" height="15" fill="rgb(223,113,26)" fg:x="7252" fg:w="62"/><text x="2.5517%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (62 samples, 0.02%)</title><rect x="2.3017%" y="389" width="0.0197%" height="15" fill="rgb(206,192,2)" fg:x="7252" fg:w="62"/><text x="2.5517%" y="399.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (61 samples, 0.02%)</title><rect x="2.3020%" y="373" width="0.0194%" height="15" fill="rgb(241,108,4)" fg:x="7253" fg:w="61"/><text x="2.5520%" y="383.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (60 samples, 0.02%)</title><rect x="2.3024%" y="357" width="0.0190%" height="15" fill="rgb(247,173,49)" fg:x="7254" fg:w="60"/><text x="2.5524%" y="367.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (33 samples, 0.01%)</title><rect x="2.3214%" y="405" width="0.0105%" height="15" fill="rgb(224,114,35)" fg:x="7314" fg:w="33"/><text x="2.5714%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (38 samples, 0.01%)</title><rect x="2.3319%" y="405" width="0.0121%" height="15" fill="rgb(245,159,27)" fg:x="7347" fg:w="38"/><text x="2.5819%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.01%)</title><rect x="2.3319%" y="389" width="0.0121%" height="15" fill="rgb(245,172,44)" fg:x="7347" fg:w="38"/><text x="2.5819%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (38 samples, 0.01%)</title><rect x="2.3319%" y="373" width="0.0121%" height="15" fill="rgb(236,23,11)" fg:x="7347" fg:w="38"/><text x="2.5819%" y="383.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.01%)</title><rect x="2.3319%" y="357" width="0.0121%" height="15" fill="rgb(205,117,38)" fg:x="7347" fg:w="38"/><text x="2.5819%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (38 samples, 0.01%)</title><rect x="2.3319%" y="341" width="0.0121%" height="15" fill="rgb(237,72,25)" fg:x="7347" fg:w="38"/><text x="2.5819%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.01%)</title><rect x="2.3319%" y="325" width="0.0121%" height="15" fill="rgb(244,70,9)" fg:x="7347" fg:w="38"/><text x="2.5819%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (38 samples, 0.01%)</title><rect x="2.3319%" y="309" width="0.0121%" height="15" fill="rgb(217,125,39)" fg:x="7347" fg:w="38"/><text x="2.5819%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (38 samples, 0.01%)</title><rect x="2.3319%" y="293" width="0.0121%" height="15" fill="rgb(235,36,10)" fg:x="7347" fg:w="38"/><text x="2.5819%" y="303.50"></text></g><g><title>__rdl_dealloc (38 samples, 0.01%)</title><rect x="2.3319%" y="277" width="0.0121%" height="15" fill="rgb(251,123,47)" fg:x="7347" fg:w="38"/><text x="2.5819%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (38 samples, 0.01%)</title><rect x="2.3319%" y="261" width="0.0121%" height="15" fill="rgb(221,13,13)" fg:x="7347" fg:w="38"/><text x="2.5819%" y="271.50"></text></g><g><title>__GI___libc_free (38 samples, 0.01%)</title><rect x="2.3319%" y="245" width="0.0121%" height="15" fill="rgb(238,131,9)" fg:x="7347" fg:w="38"/><text x="2.5819%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (57 samples, 0.02%)</title><rect x="2.3595%" y="277" width="0.0181%" height="15" fill="rgb(211,50,8)" fg:x="7434" fg:w="57"/><text x="2.6095%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (57 samples, 0.02%)</title><rect x="2.3595%" y="261" width="0.0181%" height="15" fill="rgb(245,182,24)" fg:x="7434" fg:w="57"/><text x="2.6095%" y="271.50"></text></g><g><title>alloc::alloc::realloc (56 samples, 0.02%)</title><rect x="2.3598%" y="245" width="0.0178%" height="15" fill="rgb(242,14,37)" fg:x="7435" fg:w="56"/><text x="2.6098%" y="255.50"></text></g><g><title>__rdl_realloc (56 samples, 0.02%)</title><rect x="2.3598%" y="229" width="0.0178%" height="15" fill="rgb(246,228,12)" fg:x="7435" fg:w="56"/><text x="2.6098%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (56 samples, 0.02%)</title><rect x="2.3598%" y="213" width="0.0178%" height="15" fill="rgb(213,55,15)" fg:x="7435" fg:w="56"/><text x="2.6098%" y="223.50"></text></g><g><title>__GI___libc_realloc (56 samples, 0.02%)</title><rect x="2.3598%" y="197" width="0.0178%" height="15" fill="rgb(209,9,3)" fg:x="7435" fg:w="56"/><text x="2.6098%" y="207.50"></text></g><g><title>_int_realloc (36 samples, 0.01%)</title><rect x="2.3661%" y="181" width="0.0114%" height="15" fill="rgb(230,59,30)" fg:x="7455" fg:w="36"/><text x="2.6161%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (66 samples, 0.02%)</title><rect x="2.3595%" y="293" width="0.0209%" height="15" fill="rgb(209,121,21)" fg:x="7434" fg:w="66"/><text x="2.6095%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (73 samples, 0.02%)</title><rect x="2.3585%" y="309" width="0.0232%" height="15" fill="rgb(220,109,13)" fg:x="7431" fg:w="73"/><text x="2.6085%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (76 samples, 0.02%)</title><rect x="2.3579%" y="341" width="0.0241%" height="15" fill="rgb(232,18,1)" fg:x="7429" fg:w="76"/><text x="2.6079%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (74 samples, 0.02%)</title><rect x="2.3585%" y="325" width="0.0235%" height="15" fill="rgb(215,41,42)" fg:x="7431" fg:w="74"/><text x="2.6085%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (77 samples, 0.02%)</title><rect x="2.3579%" y="357" width="0.0244%" height="15" fill="rgb(224,123,36)" fg:x="7429" fg:w="77"/><text x="2.6079%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (102 samples, 0.03%)</title><rect x="2.3566%" y="373" width="0.0324%" height="15" fill="rgb(240,125,3)" fg:x="7425" fg:w="102"/><text x="2.6066%" y="383.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path_around_entities::{{closure}} (258 samples, 0.08%)</title><rect x="2.3439%" y="405" width="0.0819%" height="15" fill="rgb(205,98,50)" fg:x="7385" fg:w="258"/><text x="2.5939%" y="415.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_except_entities (251 samples, 0.08%)</title><rect x="2.3462%" y="389" width="0.0797%" height="15" fill="rgb(205,185,37)" fg:x="7392" fg:w="251"/><text x="2.5962%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.01%)</title><rect x="2.4341%" y="357" width="0.0117%" height="15" fill="rgb(238,207,15)" fg:x="7669" fg:w="37"/><text x="2.6841%" y="367.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (93 samples, 0.03%)</title><rect x="2.4258%" y="405" width="0.0295%" height="15" fill="rgb(213,199,42)" fg:x="7643" fg:w="93"/><text x="2.6758%" y="415.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (86 samples, 0.03%)</title><rect x="2.4280%" y="389" width="0.0273%" height="15" fill="rgb(235,201,11)" fg:x="7650" fg:w="86"/><text x="2.6780%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (84 samples, 0.03%)</title><rect x="2.4287%" y="373" width="0.0267%" height="15" fill="rgb(207,46,11)" fg:x="7652" fg:w="84"/><text x="2.6787%" y="383.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (34 samples, 0.01%)</title><rect x="2.4566%" y="405" width="0.0108%" height="15" fill="rgb(241,35,35)" fg:x="7740" fg:w="34"/><text x="2.7066%" y="415.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (32 samples, 0.01%)</title><rect x="2.4572%" y="389" width="0.0102%" height="15" fill="rgb(243,32,47)" fg:x="7742" fg:w="32"/><text x="2.7072%" y="399.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path_around_entities (547 samples, 0.17%)</title><rect x="2.2954%" y="437" width="0.1736%" height="15" fill="rgb(247,202,23)" fg:x="7232" fg:w="547"/><text x="2.5454%" y="447.50"></text></g><g><title>pathfinding::directed::astar::astar (545 samples, 0.17%)</title><rect x="2.2960%" y="421" width="0.1730%" height="15" fill="rgb(219,102,11)" fg:x="7234" fg:w="545"/><text x="2.5460%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (34 samples, 0.01%)</title><rect x="2.4769%" y="405" width="0.0108%" height="15" fill="rgb(243,110,44)" fg:x="7804" fg:w="34"/><text x="2.7269%" y="415.50"></text></g><g><title>engine::engine::world::Position::neighbors (38 samples, 0.01%)</title><rect x="2.4766%" y="421" width="0.0121%" height="15" fill="rgb(222,74,54)" fg:x="7803" fg:w="38"/><text x="2.7266%" y="431.50"></text></g><g><title>engine::engine::actor::pathfinding::nearby_entities (65 samples, 0.02%)</title><rect x="2.4690%" y="437" width="0.0206%" height="15" fill="rgb(216,99,12)" fg:x="7779" fg:w="65"/><text x="2.7190%" y="447.50"></text></g><g><title>engine::engine::actor::pathfinding::local_avoidance (674 samples, 0.21%)</title><rect x="2.2760%" y="453" width="0.2139%" height="15" fill="rgb(226,22,26)" fg:x="7171" fg:w="674"/><text x="2.5260%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (119 samples, 0.04%)</title><rect x="2.4899%" y="389" width="0.0378%" height="15" fill="rgb(217,163,10)" fg:x="7845" fg:w="119"/><text x="2.7399%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (118 samples, 0.04%)</title><rect x="2.4902%" y="373" width="0.0375%" height="15" fill="rgb(213,25,53)" fg:x="7846" fg:w="118"/><text x="2.7402%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (118 samples, 0.04%)</title><rect x="2.4902%" y="357" width="0.0375%" height="15" fill="rgb(252,105,26)" fg:x="7846" fg:w="118"/><text x="2.7402%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (118 samples, 0.04%)</title><rect x="2.4902%" y="341" width="0.0375%" height="15" fill="rgb(220,39,43)" fg:x="7846" fg:w="118"/><text x="2.7402%" y="351.50"></text></g><g><title>alloc::alloc::alloc (118 samples, 0.04%)</title><rect x="2.4902%" y="325" width="0.0375%" height="15" fill="rgb(229,68,48)" fg:x="7846" fg:w="118"/><text x="2.7402%" y="335.50"></text></g><g><title>__rdl_alloc (118 samples, 0.04%)</title><rect x="2.4902%" y="309" width="0.0375%" height="15" fill="rgb(252,8,32)" fg:x="7846" fg:w="118"/><text x="2.7402%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (118 samples, 0.04%)</title><rect x="2.4902%" y="293" width="0.0375%" height="15" fill="rgb(223,20,43)" fg:x="7846" fg:w="118"/><text x="2.7402%" y="303.50"></text></g><g><title>__GI___libc_malloc (118 samples, 0.04%)</title><rect x="2.4902%" y="277" width="0.0375%" height="15" fill="rgb(229,81,49)" fg:x="7846" fg:w="118"/><text x="2.7402%" y="287.50"></text></g><g><title>_int_malloc (100 samples, 0.03%)</title><rect x="2.4960%" y="261" width="0.0317%" height="15" fill="rgb(236,28,36)" fg:x="7864" fg:w="100"/><text x="2.7460%" y="271.50"></text></g><g><title>bevy_ecs::system::commands::EntityCommands::insert (132 samples, 0.04%)</title><rect x="2.4899%" y="437" width="0.0419%" height="15" fill="rgb(249,185,26)" fg:x="7845" fg:w="132"/><text x="2.7399%" y="447.50"></text></g><g><title>bevy_ecs::system::commands::Commands::add (132 samples, 0.04%)</title><rect x="2.4899%" y="421" width="0.0419%" height="15" fill="rgb(249,174,33)" fg:x="7845" fg:w="132"/><text x="2.7399%" y="431.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push (132 samples, 0.04%)</title><rect x="2.4899%" y="405" width="0.0419%" height="15" fill="rgb(233,201,37)" fg:x="7845" fg:w="132"/><text x="2.7399%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.01%)</title><rect x="2.5353%" y="421" width="0.0102%" height="15" fill="rgb(221,78,26)" fg:x="7988" fg:w="32"/><text x="2.7853%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (38 samples, 0.01%)</title><rect x="2.5966%" y="213" width="0.0121%" height="15" fill="rgb(250,127,30)" fg:x="8181" fg:w="38"/><text x="2.8466%" y="223.50"></text></g><g><title>_int_free (37 samples, 0.01%)</title><rect x="2.6086%" y="213" width="0.0117%" height="15" fill="rgb(230,49,44)" fg:x="8219" fg:w="37"/><text x="2.8586%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (452 samples, 0.14%)</title><rect x="2.5664%" y="325" width="0.1435%" height="15" fill="rgb(229,67,23)" fg:x="8086" fg:w="452"/><text x="2.8164%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (452 samples, 0.14%)</title><rect x="2.5664%" y="309" width="0.1435%" height="15" fill="rgb(249,83,47)" fg:x="8086" fg:w="452"/><text x="2.8164%" y="319.50"></text></g><g><title>alloc::alloc::realloc (452 samples, 0.14%)</title><rect x="2.5664%" y="293" width="0.1435%" height="15" fill="rgb(215,43,3)" fg:x="8086" fg:w="452"/><text x="2.8164%" y="303.50"></text></g><g><title>__rdl_realloc (452 samples, 0.14%)</title><rect x="2.5664%" y="277" width="0.1435%" height="15" fill="rgb(238,154,13)" fg:x="8086" fg:w="452"/><text x="2.8164%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (452 samples, 0.14%)</title><rect x="2.5664%" y="261" width="0.1435%" height="15" fill="rgb(219,56,2)" fg:x="8086" fg:w="452"/><text x="2.8164%" y="271.50"></text></g><g><title>__GI___libc_realloc (451 samples, 0.14%)</title><rect x="2.5667%" y="245" width="0.1431%" height="15" fill="rgb(233,0,4)" fg:x="8087" fg:w="451"/><text x="2.8167%" y="255.50"></text></g><g><title>_int_realloc (371 samples, 0.12%)</title><rect x="2.5921%" y="229" width="0.1178%" height="15" fill="rgb(235,30,7)" fg:x="8167" fg:w="371"/><text x="2.8421%" y="239.50"></text></g><g><title>_int_malloc (282 samples, 0.09%)</title><rect x="2.6204%" y="213" width="0.0895%" height="15" fill="rgb(250,79,13)" fg:x="8256" fg:w="282"/><text x="2.8704%" y="223.50"></text></g><g><title>unlink_chunk.constprop.0 (33 samples, 0.01%)</title><rect x="2.6994%" y="197" width="0.0105%" height="15" fill="rgb(211,146,34)" fg:x="8505" fg:w="33"/><text x="2.9494%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (464 samples, 0.15%)</title><rect x="2.5655%" y="341" width="0.1473%" height="15" fill="rgb(228,22,38)" fg:x="8083" fg:w="464"/><text x="2.8155%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (480 samples, 0.15%)</title><rect x="2.5626%" y="357" width="0.1523%" height="15" fill="rgb(235,168,5)" fg:x="8074" fg:w="480"/><text x="2.8126%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (493 samples, 0.16%)</title><rect x="2.5591%" y="405" width="0.1565%" height="15" fill="rgb(221,155,16)" fg:x="8063" fg:w="493"/><text x="2.8091%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (485 samples, 0.15%)</title><rect x="2.5617%" y="389" width="0.1539%" height="15" fill="rgb(215,215,53)" fg:x="8071" fg:w="485"/><text x="2.8117%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (482 samples, 0.15%)</title><rect x="2.5626%" y="373" width="0.1530%" height="15" fill="rgb(223,4,10)" fg:x="8074" fg:w="482"/><text x="2.8126%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (595 samples, 0.19%)</title><rect x="2.5474%" y="421" width="0.1888%" height="15" fill="rgb(234,103,6)" fg:x="8026" fg:w="595"/><text x="2.7974%" y="431.50"></text></g><g><title>core::ptr::write (53 samples, 0.02%)</title><rect x="2.7194%" y="405" width="0.0168%" height="15" fill="rgb(227,97,0)" fg:x="8568" fg:w="53"/><text x="2.9694%" y="415.50"></text></g><g><title>core::ptr::read (183 samples, 0.06%)</title><rect x="2.9514%" y="389" width="0.0581%" height="15" fill="rgb(234,150,53)" fg:x="9299" fg:w="183"/><text x="3.2014%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (405 samples, 0.13%)</title><rect x="2.9321%" y="405" width="0.1285%" height="15" fill="rgb(228,201,54)" fg:x="9238" fg:w="405"/><text x="3.1821%" y="415.50"></text></g><g><title>pathfinding::directed::astar::astar (161 samples, 0.05%)</title><rect x="3.0095%" y="389" width="0.0511%" height="15" fill="rgb(222,22,37)" fg:x="9482" fg:w="161"/><text x="3.2595%" y="399.50"></text></g><g><title>__GI___libc_free (87 samples, 0.03%)</title><rect x="3.0698%" y="405" width="0.0276%" height="15" fill="rgb(237,53,32)" fg:x="9672" fg:w="87"/><text x="3.3198%" y="415.50"></text></g><g><title>_int_free (79 samples, 0.03%)</title><rect x="3.0723%" y="389" width="0.0251%" height="15" fill="rgb(233,25,53)" fg:x="9680" fg:w="79"/><text x="3.3223%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (33 samples, 0.01%)</title><rect x="3.0981%" y="389" width="0.0105%" height="15" fill="rgb(210,40,34)" fg:x="9761" fg:w="33"/><text x="3.3481%" y="399.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (159 samples, 0.05%)</title><rect x="3.1253%" y="357" width="0.0505%" height="15" fill="rgb(241,220,44)" fg:x="9847" fg:w="159"/><text x="3.3753%" y="367.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (70 samples, 0.02%)</title><rect x="3.2212%" y="341" width="0.0222%" height="15" fill="rgb(235,28,35)" fg:x="10149" fg:w="70"/><text x="3.4712%" y="351.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (301 samples, 0.10%)</title><rect x="3.2590%" y="325" width="0.0955%" height="15" fill="rgb(210,56,17)" fg:x="10268" fg:w="301"/><text x="3.5090%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (100 samples, 0.03%)</title><rect x="3.3545%" y="325" width="0.0317%" height="15" fill="rgb(224,130,29)" fg:x="10569" fg:w="100"/><text x="3.6045%" y="335.50"></text></g><g><title>core::cmp::PartialOrd::le (100 samples, 0.03%)</title><rect x="3.3545%" y="309" width="0.0317%" height="15" fill="rgb(235,212,8)" fg:x="10569" fg:w="100"/><text x="3.6045%" y="319.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (77 samples, 0.02%)</title><rect x="3.3618%" y="293" width="0.0244%" height="15" fill="rgb(223,33,50)" fg:x="10592" fg:w="77"/><text x="3.6118%" y="303.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (77 samples, 0.02%)</title><rect x="3.3618%" y="277" width="0.0244%" height="15" fill="rgb(219,149,13)" fg:x="10592" fg:w="77"/><text x="3.6118%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (50 samples, 0.02%)</title><rect x="3.3704%" y="261" width="0.0159%" height="15" fill="rgb(250,156,29)" fg:x="10619" fg:w="50"/><text x="3.6204%" y="271.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (475 samples, 0.15%)</title><rect x="3.2434%" y="341" width="0.1508%" height="15" fill="rgb(216,193,19)" fg:x="10219" fg:w="475"/><text x="3.4934%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (436 samples, 0.14%)</title><rect x="3.3942%" y="325" width="0.1384%" height="15" fill="rgb(216,135,14)" fg:x="10694" fg:w="436"/><text x="3.6442%" y="335.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (529 samples, 0.17%)</title><rect x="3.3942%" y="341" width="0.1679%" height="15" fill="rgb(241,47,5)" fg:x="10694" fg:w="529"/><text x="3.6442%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (93 samples, 0.03%)</title><rect x="3.5326%" y="325" width="0.0295%" height="15" fill="rgb(233,42,35)" fg:x="11130" fg:w="93"/><text x="3.7826%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (93 samples, 0.03%)</title><rect x="3.5326%" y="309" width="0.0295%" height="15" fill="rgb(231,13,6)" fg:x="11130" fg:w="93"/><text x="3.7826%" y="319.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (45 samples, 0.01%)</title><rect x="3.5621%" y="341" width="0.0143%" height="15" fill="rgb(207,181,40)" fg:x="11223" fg:w="45"/><text x="3.8121%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (613 samples, 0.19%)</title><rect x="3.5764%" y="341" width="0.1946%" height="15" fill="rgb(254,173,49)" fg:x="11268" fg:w="613"/><text x="3.8264%" y="351.50"></text></g><g><title>core::cmp::PartialOrd::le (613 samples, 0.19%)</title><rect x="3.5764%" y="325" width="0.1946%" height="15" fill="rgb(221,1,38)" fg:x="11268" fg:w="613"/><text x="3.8264%" y="335.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (467 samples, 0.15%)</title><rect x="3.6227%" y="309" width="0.1482%" height="15" fill="rgb(206,124,46)" fg:x="11414" fg:w="467"/><text x="3.8727%" y="319.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (355 samples, 0.11%)</title><rect x="3.6582%" y="293" width="0.1127%" height="15" fill="rgb(249,21,11)" fg:x="11526" fg:w="355"/><text x="3.9082%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (128 samples, 0.04%)</title><rect x="3.7303%" y="277" width="0.0406%" height="15" fill="rgb(222,201,40)" fg:x="11753" fg:w="128"/><text x="3.9803%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (57 samples, 0.02%)</title><rect x="3.7709%" y="293" width="0.0181%" height="15" fill="rgb(235,61,29)" fg:x="11881" fg:w="57"/><text x="4.0209%" y="303.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (1,934 samples, 0.61%)</title><rect x="3.1758%" y="357" width="0.6138%" height="15" fill="rgb(219,207,3)" fg:x="10006" fg:w="1934"/><text x="3.4258%" y="367.50"></text></g><g><title>core::mem::drop (59 samples, 0.02%)</title><rect x="3.7709%" y="341" width="0.0187%" height="15" fill="rgb(222,56,46)" fg:x="11881" fg:w="59"/><text x="4.0209%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (59 samples, 0.02%)</title><rect x="3.7709%" y="325" width="0.0187%" height="15" fill="rgb(239,76,54)" fg:x="11881" fg:w="59"/><text x="4.0209%" y="335.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (59 samples, 0.02%)</title><rect x="3.7709%" y="309" width="0.0187%" height="15" fill="rgb(231,124,27)" fg:x="11881" fg:w="59"/><text x="4.0209%" y="319.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (2,215 samples, 0.70%)</title><rect x="3.0974%" y="405" width="0.7030%" height="15" fill="rgb(249,195,6)" fg:x="9759" fg:w="2215"/><text x="3.3474%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2,180 samples, 0.69%)</title><rect x="3.1085%" y="389" width="0.6919%" height="15" fill="rgb(237,174,47)" fg:x="9794" fg:w="2180"/><text x="3.3585%" y="399.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (2,153 samples, 0.68%)</title><rect x="3.1171%" y="373" width="0.6833%" height="15" fill="rgb(206,201,31)" fg:x="9821" fg:w="2153"/><text x="3.3671%" y="383.50"></text></g><g><title>core::mem::swap (34 samples, 0.01%)</title><rect x="3.7896%" y="357" width="0.0108%" height="15" fill="rgb(231,57,52)" fg:x="11940" fg:w="34"/><text x="4.0396%" y="367.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (34 samples, 0.01%)</title><rect x="3.7896%" y="341" width="0.0108%" height="15" fill="rgb(248,177,22)" fg:x="11940" fg:w="34"/><text x="4.0396%" y="351.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (437 samples, 0.14%)</title><rect x="3.8201%" y="389" width="0.1387%" height="15" fill="rgb(215,211,37)" fg:x="12036" fg:w="437"/><text x="4.0701%" y="399.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::get (171 samples, 0.05%)</title><rect x="4.1239%" y="373" width="0.0543%" height="15" fill="rgb(241,128,51)" fg:x="12993" fg:w="171"/><text x="4.3739%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (171 samples, 0.05%)</title><rect x="4.1239%" y="357" width="0.0543%" height="15" fill="rgb(227,165,31)" fg:x="12993" fg:w="171"/><text x="4.3739%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (171 samples, 0.05%)</title><rect x="4.1239%" y="341" width="0.0543%" height="15" fill="rgb(228,167,24)" fg:x="12993" fg:w="171"/><text x="4.3739%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (171 samples, 0.05%)</title><rect x="4.1239%" y="325" width="0.0543%" height="15" fill="rgb(228,143,12)" fg:x="12993" fg:w="171"/><text x="4.3739%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (171 samples, 0.05%)</title><rect x="4.1239%" y="309" width="0.0543%" height="15" fill="rgb(249,149,8)" fg:x="12993" fg:w="171"/><text x="4.3739%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (722 samples, 0.23%)</title><rect x="4.1781%" y="357" width="0.2292%" height="15" fill="rgb(243,35,44)" fg:x="13164" fg:w="722"/><text x="4.4281%" y="367.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (858 samples, 0.27%)</title><rect x="4.1781%" y="373" width="0.2723%" height="15" fill="rgb(246,89,9)" fg:x="13164" fg:w="858"/><text x="4.4281%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (136 samples, 0.04%)</title><rect x="4.4073%" y="357" width="0.0432%" height="15" fill="rgb(233,213,13)" fg:x="13886" fg:w="136"/><text x="4.6573%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (136 samples, 0.04%)</title><rect x="4.4073%" y="341" width="0.0432%" height="15" fill="rgb(233,141,41)" fg:x="13886" fg:w="136"/><text x="4.6573%" y="351.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (1,377 samples, 0.44%)</title><rect x="4.4505%" y="373" width="0.4370%" height="15" fill="rgb(239,167,4)" fg:x="14022" fg:w="1377"/><text x="4.7005%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1,783 samples, 0.57%)</title><rect x="4.8875%" y="373" width="0.5659%" height="15" fill="rgb(209,217,16)" fg:x="15399" fg:w="1783"/><text x="5.1375%" y="383.50"></text></g><g><title>core::cmp::PartialOrd::le (1,783 samples, 0.57%)</title><rect x="4.8875%" y="357" width="0.5659%" height="15" fill="rgb(219,88,35)" fg:x="15399" fg:w="1783"/><text x="5.1375%" y="367.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (1,420 samples, 0.45%)</title><rect x="5.0027%" y="341" width="0.4507%" height="15" fill="rgb(220,193,23)" fg:x="15762" fg:w="1420"/><text x="5.2527%" y="351.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (1,420 samples, 0.45%)</title><rect x="5.0027%" y="325" width="0.4507%" height="15" fill="rgb(230,90,52)" fg:x="15762" fg:w="1420"/><text x="5.2527%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (491 samples, 0.16%)</title><rect x="5.2976%" y="309" width="0.1558%" height="15" fill="rgb(252,106,19)" fg:x="16691" fg:w="491"/><text x="5.5476%" y="319.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (5,091 samples, 1.62%)</title><rect x="3.9588%" y="389" width="1.6158%" height="15" fill="rgb(206,74,20)" fg:x="12473" fg:w="5091"/><text x="4.2088%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (382 samples, 0.12%)</title><rect x="5.4534%" y="373" width="0.1212%" height="15" fill="rgb(230,138,44)" fg:x="17182" fg:w="382"/><text x="5.7034%" y="383.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (382 samples, 0.12%)</title><rect x="5.4534%" y="357" width="0.1212%" height="15" fill="rgb(235,182,43)" fg:x="17182" fg:w="382"/><text x="5.7034%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (382 samples, 0.12%)</title><rect x="5.4534%" y="341" width="0.1212%" height="15" fill="rgb(242,16,51)" fg:x="17182" fg:w="382"/><text x="5.7034%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (171 samples, 0.05%)</title><rect x="5.6715%" y="181" width="0.0543%" height="15" fill="rgb(248,9,4)" fg:x="17869" fg:w="171"/><text x="5.9215%" y="191.50"></text></g><g><title>_int_free (71 samples, 0.02%)</title><rect x="5.7257%" y="181" width="0.0225%" height="15" fill="rgb(210,31,22)" fg:x="18040" fg:w="71"/><text x="5.9757%" y="191.50"></text></g><g><title>_int_malloc (408 samples, 0.13%)</title><rect x="5.7483%" y="181" width="0.1295%" height="15" fill="rgb(239,54,39)" fg:x="18111" fg:w="408"/><text x="5.9983%" y="191.50"></text></g><g><title>unlink_chunk.constprop.0 (41 samples, 0.01%)</title><rect x="5.8647%" y="165" width="0.0130%" height="15" fill="rgb(230,99,41)" fg:x="18478" fg:w="41"/><text x="6.1147%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (845 samples, 0.27%)</title><rect x="5.6105%" y="293" width="0.2682%" height="15" fill="rgb(253,106,12)" fg:x="17677" fg:w="845"/><text x="5.8605%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (845 samples, 0.27%)</title><rect x="5.6105%" y="277" width="0.2682%" height="15" fill="rgb(213,46,41)" fg:x="17677" fg:w="845"/><text x="5.8605%" y="287.50"></text></g><g><title>alloc::alloc::realloc (844 samples, 0.27%)</title><rect x="5.6108%" y="261" width="0.2679%" height="15" fill="rgb(215,133,35)" fg:x="17678" fg:w="844"/><text x="5.8608%" y="271.50"></text></g><g><title>__rdl_realloc (844 samples, 0.27%)</title><rect x="5.6108%" y="245" width="0.2679%" height="15" fill="rgb(213,28,5)" fg:x="17678" fg:w="844"/><text x="5.8608%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (844 samples, 0.27%)</title><rect x="5.6108%" y="229" width="0.2679%" height="15" fill="rgb(215,77,49)" fg:x="17678" fg:w="844"/><text x="5.8608%" y="239.50"></text></g><g><title>__GI___libc_realloc (843 samples, 0.27%)</title><rect x="5.6112%" y="213" width="0.2676%" height="15" fill="rgb(248,100,22)" fg:x="17679" fg:w="843"/><text x="5.8612%" y="223.50"></text></g><g><title>_int_realloc (697 samples, 0.22%)</title><rect x="5.6575%" y="197" width="0.2212%" height="15" fill="rgb(208,67,9)" fg:x="17825" fg:w="697"/><text x="5.9075%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (858 samples, 0.27%)</title><rect x="5.6086%" y="309" width="0.2723%" height="15" fill="rgb(219,133,21)" fg:x="17671" fg:w="858"/><text x="5.8586%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (887 samples, 0.28%)</title><rect x="5.6032%" y="325" width="0.2815%" height="15" fill="rgb(246,46,29)" fg:x="17654" fg:w="887"/><text x="5.8532%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (904 samples, 0.29%)</title><rect x="5.5991%" y="373" width="0.2869%" height="15" fill="rgb(246,185,52)" fg:x="17641" fg:w="904"/><text x="5.8491%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (904 samples, 0.29%)</title><rect x="5.5991%" y="357" width="0.2869%" height="15" fill="rgb(252,136,11)" fg:x="17641" fg:w="904"/><text x="5.8491%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (891 samples, 0.28%)</title><rect x="5.6032%" y="341" width="0.2828%" height="15" fill="rgb(219,138,53)" fg:x="17654" fg:w="891"/><text x="5.8532%" y="351.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (8,502 samples, 2.70%)</title><rect x="3.8004%" y="405" width="2.6985%" height="15" fill="rgb(211,51,23)" fg:x="11974" fg:w="8502"/><text x="4.0504%" y="415.50">al..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,912 samples, 0.92%)</title><rect x="5.5747%" y="389" width="0.9242%" height="15" fill="rgb(247,221,28)" fg:x="17564" fg:w="2912"/><text x="5.8247%" y="399.50"></text></g><g><title>core::ptr::write (1,922 samples, 0.61%)</title><rect x="5.8889%" y="373" width="0.6100%" height="15" fill="rgb(251,222,45)" fg:x="18554" fg:w="1922"/><text x="6.1389%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,632 samples, 0.52%)</title><rect x="6.5094%" y="309" width="0.5180%" height="15" fill="rgb(217,162,53)" fg:x="20509" fg:w="1632"/><text x="6.7594%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (1,632 samples, 0.52%)</title><rect x="6.5094%" y="293" width="0.5180%" height="15" fill="rgb(229,93,14)" fg:x="20509" fg:w="1632"/><text x="6.7594%" y="303.50"></text></g><g><title>__rdl_dealloc (1,632 samples, 0.52%)</title><rect x="6.5094%" y="277" width="0.5180%" height="15" fill="rgb(209,67,49)" fg:x="20509" fg:w="1632"/><text x="6.7594%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,618 samples, 0.51%)</title><rect x="6.5138%" y="261" width="0.5135%" height="15" fill="rgb(213,87,29)" fg:x="20523" fg:w="1618"/><text x="6.7638%" y="271.50"></text></g><g><title>__GI___libc_free (1,618 samples, 0.51%)</title><rect x="6.5138%" y="245" width="0.5135%" height="15" fill="rgb(205,151,52)" fg:x="20523" fg:w="1618"/><text x="6.7638%" y="255.50"></text></g><g><title>_int_free (1,464 samples, 0.46%)</title><rect x="6.5627%" y="229" width="0.4647%" height="15" fill="rgb(253,215,39)" fg:x="20677" fg:w="1464"/><text x="6.8127%" y="239.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,669 samples, 0.53%)</title><rect x="6.5094%" y="325" width="0.5297%" height="15" fill="rgb(221,220,41)" fg:x="20509" fg:w="1669"/><text x="6.7594%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (1,672 samples, 0.53%)</title><rect x="6.5094%" y="405" width="0.5307%" height="15" fill="rgb(218,133,21)" fg:x="20509" fg:w="1672"/><text x="6.7594%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,672 samples, 0.53%)</title><rect x="6.5094%" y="389" width="0.5307%" height="15" fill="rgb(221,193,43)" fg:x="20509" fg:w="1672"/><text x="6.7594%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (1,672 samples, 0.53%)</title><rect x="6.5094%" y="373" width="0.5307%" height="15" fill="rgb(240,128,52)" fg:x="20509" fg:w="1672"/><text x="6.7594%" y="383.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,672 samples, 0.53%)</title><rect x="6.5094%" y="357" width="0.5307%" height="15" fill="rgb(253,114,12)" fg:x="20509" fg:w="1672"/><text x="6.7594%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (1,672 samples, 0.53%)</title><rect x="6.5094%" y="341" width="0.5307%" height="15" fill="rgb(215,223,47)" fg:x="20509" fg:w="1672"/><text x="6.7594%" y="351.50"></text></g><g><title>engine::engine::actor::pathfinding::diagonal_distance (597 samples, 0.19%)</title><rect x="7.0670%" y="389" width="0.1895%" height="15" fill="rgb(248,225,23)" fg:x="22266" fg:w="597"/><text x="7.3170%" y="399.50"></text></g><g><title>pathfinding::utils::absdiff (466 samples, 0.15%)</title><rect x="7.1086%" y="373" width="0.1479%" height="15" fill="rgb(250,108,0)" fg:x="22397" fg:w="466"/><text x="7.3586%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (412 samples, 0.13%)</title><rect x="7.1257%" y="357" width="0.1308%" height="15" fill="rgb(228,208,7)" fg:x="22451" fg:w="412"/><text x="7.3757%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (47 samples, 0.01%)</title><rect x="7.6323%" y="341" width="0.0149%" height="15" fill="rgb(244,45,10)" fg:x="24047" fg:w="47"/><text x="7.8823%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (85 samples, 0.03%)</title><rect x="7.6215%" y="373" width="0.0270%" height="15" fill="rgb(207,125,25)" fg:x="24013" fg:w="85"/><text x="7.8715%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (51 samples, 0.02%)</title><rect x="7.6323%" y="357" width="0.0162%" height="15" fill="rgb(210,195,18)" fg:x="24047" fg:w="51"/><text x="7.8823%" y="367.50"></text></g><g><title>core::ptr::read (106 samples, 0.03%)</title><rect x="7.6942%" y="357" width="0.0336%" height="15" fill="rgb(249,80,12)" fg:x="24242" fg:w="106"/><text x="7.9442%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (258 samples, 0.08%)</title><rect x="7.6485%" y="373" width="0.0819%" height="15" fill="rgb(221,65,9)" fg:x="24098" fg:w="258"/><text x="7.8985%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (52 samples, 0.02%)</title><rect x="7.8142%" y="357" width="0.0165%" height="15" fill="rgb(235,49,36)" fg:x="24620" fg:w="52"/><text x="8.0642%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (34 samples, 0.01%)</title><rect x="7.8538%" y="293" width="0.0108%" height="15" fill="rgb(225,32,20)" fg:x="24745" fg:w="34"/><text x="8.1038%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (72 samples, 0.02%)</title><rect x="7.8745%" y="293" width="0.0229%" height="15" fill="rgb(215,141,46)" fg:x="24810" fg:w="72"/><text x="8.1245%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (33 samples, 0.01%)</title><rect x="7.8868%" y="277" width="0.0105%" height="15" fill="rgb(250,160,47)" fg:x="24849" fg:w="33"/><text x="8.1368%" y="287.50"></text></g><g><title>__memmove_avx_unaligned_erms (208 samples, 0.07%)</title><rect x="8.3851%" y="165" width="0.0660%" height="15" fill="rgb(216,222,40)" fg:x="26419" fg:w="208"/><text x="8.6351%" y="175.50"></text></g><g><title>_int_free (242 samples, 0.08%)</title><rect x="8.4512%" y="165" width="0.0768%" height="15" fill="rgb(234,217,39)" fg:x="26627" fg:w="242"/><text x="8.7012%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,128 samples, 0.99%)</title><rect x="7.9306%" y="277" width="0.9928%" height="15" fill="rgb(207,178,40)" fg:x="24987" fg:w="3128"/><text x="8.1806%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,128 samples, 0.99%)</title><rect x="7.9306%" y="261" width="0.9928%" height="15" fill="rgb(221,136,13)" fg:x="24987" fg:w="3128"/><text x="8.1806%" y="271.50"></text></g><g><title>alloc::alloc::realloc (3,127 samples, 0.99%)</title><rect x="7.9310%" y="245" width="0.9925%" height="15" fill="rgb(249,199,10)" fg:x="24988" fg:w="3127"/><text x="8.1810%" y="255.50"></text></g><g><title>__rdl_realloc (3,127 samples, 0.99%)</title><rect x="7.9310%" y="229" width="0.9925%" height="15" fill="rgb(249,222,13)" fg:x="24988" fg:w="3127"/><text x="8.1810%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3,127 samples, 0.99%)</title><rect x="7.9310%" y="213" width="0.9925%" height="15" fill="rgb(244,185,38)" fg:x="24988" fg:w="3127"/><text x="8.1810%" y="223.50"></text></g><g><title>__GI___libc_realloc (3,110 samples, 0.99%)</title><rect x="7.9364%" y="197" width="0.9871%" height="15" fill="rgb(236,202,9)" fg:x="25005" fg:w="3110"/><text x="8.1864%" y="207.50"></text></g><g><title>_int_realloc (1,965 samples, 0.62%)</title><rect x="8.2998%" y="181" width="0.6237%" height="15" fill="rgb(250,229,37)" fg:x="26150" fg:w="1965"/><text x="8.5498%" y="191.50"></text></g><g><title>_int_malloc (1,246 samples, 0.40%)</title><rect x="8.5280%" y="165" width="0.3955%" height="15" fill="rgb(206,174,23)" fg:x="26869" fg:w="1246"/><text x="8.7780%" y="175.50"></text></g><g><title>unlink_chunk.constprop.0 (69 samples, 0.02%)</title><rect x="8.9015%" y="149" width="0.0219%" height="15" fill="rgb(211,33,43)" fg:x="28046" fg:w="69"/><text x="9.1515%" y="159.50"></text></g><g><title>__GI___libc_malloc (282 samples, 0.09%)</title><rect x="8.9234%" y="277" width="0.0895%" height="15" fill="rgb(245,58,50)" fg:x="28115" fg:w="282"/><text x="9.1734%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,574 samples, 1.13%)</title><rect x="7.8973%" y="293" width="1.1344%" height="15" fill="rgb(244,68,36)" fg:x="24882" fg:w="3574"/><text x="8.1473%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (59 samples, 0.02%)</title><rect x="9.0129%" y="277" width="0.0187%" height="15" fill="rgb(232,229,15)" fg:x="28397" fg:w="59"/><text x="9.2629%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array (42 samples, 0.01%)</title><rect x="9.0317%" y="293" width="0.0133%" height="15" fill="rgb(254,30,23)" fg:x="28456" fg:w="42"/><text x="9.2817%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::repeat (42 samples, 0.01%)</title><rect x="9.0317%" y="277" width="0.0133%" height="15" fill="rgb(235,160,14)" fg:x="28456" fg:w="42"/><text x="9.2817%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (35 samples, 0.01%)</title><rect x="9.0339%" y="261" width="0.0111%" height="15" fill="rgb(212,155,44)" fg:x="28463" fg:w="35"/><text x="9.2839%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (35 samples, 0.01%)</title><rect x="9.0339%" y="245" width="0.0111%" height="15" fill="rgb(226,2,50)" fg:x="28463" fg:w="35"/><text x="9.2839%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (69 samples, 0.02%)</title><rect x="9.0450%" y="261" width="0.0219%" height="15" fill="rgb(234,177,6)" fg:x="28498" fg:w="69"/><text x="9.2950%" y="271.50"></text></g><g><title>core::cmp::max (79 samples, 0.03%)</title><rect x="9.0450%" y="293" width="0.0251%" height="15" fill="rgb(217,24,9)" fg:x="28498" fg:w="79"/><text x="9.2950%" y="303.50"></text></g><g><title>core::cmp::Ord::max (79 samples, 0.03%)</title><rect x="9.0450%" y="277" width="0.0251%" height="15" fill="rgb(220,13,46)" fg:x="28498" fg:w="79"/><text x="9.2950%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,873 samples, 1.23%)</title><rect x="7.8440%" y="309" width="1.2293%" height="15" fill="rgb(239,221,27)" fg:x="24714" fg:w="3873"/><text x="8.0940%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,987 samples, 1.27%)</title><rect x="7.8307%" y="341" width="1.2654%" height="15" fill="rgb(222,198,25)" fg:x="24672" fg:w="3987"/><text x="8.0807%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3,945 samples, 1.25%)</title><rect x="7.8440%" y="325" width="1.2521%" height="15" fill="rgb(211,99,13)" fg:x="24714" fg:w="3945"/><text x="8.0940%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (72 samples, 0.02%)</title><rect x="9.0733%" y="309" width="0.0229%" height="15" fill="rgb(232,111,31)" fg:x="28587" fg:w="72"/><text x="9.3233%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4,006 samples, 1.27%)</title><rect x="7.8307%" y="357" width="1.2715%" height="15" fill="rgb(245,82,37)" fg:x="24672" fg:w="4006"/><text x="8.0807%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,675 samples, 1.48%)</title><rect x="7.7304%" y="373" width="1.4838%" height="15" fill="rgb(227,149,46)" fg:x="24356" fg:w="4675"/><text x="7.9804%" y="383.50"></text></g><g><title>core::ptr::write (353 samples, 0.11%)</title><rect x="9.1021%" y="357" width="0.1120%" height="15" fill="rgb(218,36,50)" fg:x="28678" fg:w="353"/><text x="9.3521%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (39 samples, 0.01%)</title><rect x="9.2142%" y="373" width="0.0124%" height="15" fill="rgb(226,80,48)" fg:x="29031" fg:w="39"/><text x="9.4642%" y="383.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (908 samples, 0.29%)</title><rect x="9.2266%" y="293" width="0.2882%" height="15" fill="rgb(238,224,15)" fg:x="29070" fg:w="908"/><text x="9.4766%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (908 samples, 0.29%)</title><rect x="9.2266%" y="277" width="0.2882%" height="15" fill="rgb(241,136,10)" fg:x="29070" fg:w="908"/><text x="9.4766%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (908 samples, 0.29%)</title><rect x="9.2266%" y="261" width="0.2882%" height="15" fill="rgb(208,32,45)" fg:x="29070" fg:w="908"/><text x="9.4766%" y="271.50"></text></g><g><title>__rdl_dealloc (908 samples, 0.29%)</title><rect x="9.2266%" y="245" width="0.2882%" height="15" fill="rgb(207,135,9)" fg:x="29070" fg:w="908"/><text x="9.4766%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (908 samples, 0.29%)</title><rect x="9.2266%" y="229" width="0.2882%" height="15" fill="rgb(206,86,44)" fg:x="29070" fg:w="908"/><text x="9.4766%" y="239.50"></text></g><g><title>__GI___libc_free (908 samples, 0.29%)</title><rect x="9.2266%" y="213" width="0.2882%" height="15" fill="rgb(245,177,15)" fg:x="29070" fg:w="908"/><text x="9.4766%" y="223.50"></text></g><g><title>_int_free (539 samples, 0.17%)</title><rect x="9.3437%" y="197" width="0.1711%" height="15" fill="rgb(206,64,50)" fg:x="29439" fg:w="539"/><text x="9.5937%" y="207.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (924 samples, 0.29%)</title><rect x="9.2266%" y="373" width="0.2933%" height="15" fill="rgb(234,36,40)" fg:x="29070" fg:w="924"/><text x="9.4766%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (924 samples, 0.29%)</title><rect x="9.2266%" y="357" width="0.2933%" height="15" fill="rgb(213,64,8)" fg:x="29070" fg:w="924"/><text x="9.4766%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (924 samples, 0.29%)</title><rect x="9.2266%" y="341" width="0.2933%" height="15" fill="rgb(210,75,36)" fg:x="29070" fg:w="924"/><text x="9.4766%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (924 samples, 0.29%)</title><rect x="9.2266%" y="325" width="0.2933%" height="15" fill="rgb(229,88,21)" fg:x="29070" fg:w="924"/><text x="9.4766%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (924 samples, 0.29%)</title><rect x="9.2266%" y="309" width="0.2933%" height="15" fill="rgb(252,204,47)" fg:x="29070" fg:w="924"/><text x="9.4766%" y="319.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (81 samples, 0.03%)</title><rect x="9.5198%" y="373" width="0.0257%" height="15" fill="rgb(208,77,27)" fg:x="29994" fg:w="81"/><text x="9.7698%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (33 samples, 0.01%)</title><rect x="9.5998%" y="277" width="0.0105%" height="15" fill="rgb(221,76,26)" fg:x="30246" fg:w="33"/><text x="9.8498%" y="287.50"></text></g><g><title>__GI___libc_malloc (317 samples, 0.10%)</title><rect x="9.6426%" y="261" width="0.1006%" height="15" fill="rgb(225,139,18)" fg:x="30381" fg:w="317"/><text x="9.8926%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (405 samples, 0.13%)</title><rect x="9.6182%" y="277" width="0.1285%" height="15" fill="rgb(230,137,11)" fg:x="30304" fg:w="405"/><text x="9.8682%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array (40 samples, 0.01%)</title><rect x="9.7468%" y="277" width="0.0127%" height="15" fill="rgb(212,28,1)" fg:x="30709" fg:w="40"/><text x="9.9968%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::repeat (40 samples, 0.01%)</title><rect x="9.7468%" y="261" width="0.0127%" height="15" fill="rgb(248,164,17)" fg:x="30709" fg:w="40"/><text x="9.9968%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (50 samples, 0.02%)</title><rect x="9.7594%" y="245" width="0.0159%" height="15" fill="rgb(222,171,42)" fg:x="30749" fg:w="50"/><text x="10.0094%" y="255.50"></text></g><g><title>core::cmp::max (56 samples, 0.02%)</title><rect x="9.7594%" y="277" width="0.0178%" height="15" fill="rgb(243,84,45)" fg:x="30749" fg:w="56"/><text x="10.0094%" y="287.50"></text></g><g><title>core::cmp::Ord::max (56 samples, 0.02%)</title><rect x="9.7594%" y="261" width="0.0178%" height="15" fill="rgb(252,49,23)" fg:x="30749" fg:w="56"/><text x="10.0094%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (588 samples, 0.19%)</title><rect x="9.5931%" y="293" width="0.1866%" height="15" fill="rgb(215,19,7)" fg:x="30225" fg:w="588"/><text x="9.8431%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (621 samples, 0.20%)</title><rect x="9.5893%" y="341" width="0.1971%" height="15" fill="rgb(238,81,41)" fg:x="30213" fg:w="621"/><text x="9.8393%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (621 samples, 0.20%)</title><rect x="9.5893%" y="325" width="0.1971%" height="15" fill="rgb(210,199,37)" fg:x="30213" fg:w="621"/><text x="9.8393%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (609 samples, 0.19%)</title><rect x="9.5931%" y="309" width="0.1933%" height="15" fill="rgb(244,192,49)" fg:x="30225" fg:w="609"/><text x="9.8431%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,150 samples, 0.36%)</title><rect x="9.5541%" y="357" width="0.3650%" height="15" fill="rgb(226,211,11)" fg:x="30102" fg:w="1150"/><text x="9.8041%" y="367.50"></text></g><g><title>core::ptr::write (418 samples, 0.13%)</title><rect x="9.7864%" y="341" width="0.1327%" height="15" fill="rgb(236,162,54)" fg:x="30834" fg:w="418"/><text x="10.0364%" y="351.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (1,207 samples, 0.38%)</title><rect x="9.5455%" y="373" width="0.3831%" height="15" fill="rgb(220,229,9)" fg:x="30075" fg:w="1207"/><text x="9.7955%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (38 samples, 0.01%)</title><rect x="9.9857%" y="277" width="0.0121%" height="15" fill="rgb(250,87,22)" fg:x="31462" fg:w="38"/><text x="10.2357%" y="287.50"></text></g><g><title>__GI___libc_malloc (324 samples, 0.10%)</title><rect x="10.0315%" y="261" width="0.1028%" height="15" fill="rgb(239,43,17)" fg:x="31606" fg:w="324"/><text x="10.2815%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (413 samples, 0.13%)</title><rect x="10.0054%" y="277" width="0.1311%" height="15" fill="rgb(231,177,25)" fg:x="31524" fg:w="413"/><text x="10.2554%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array (32 samples, 0.01%)</title><rect x="10.1365%" y="277" width="0.0102%" height="15" fill="rgb(219,179,1)" fg:x="31937" fg:w="32"/><text x="10.3865%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::repeat (32 samples, 0.01%)</title><rect x="10.1365%" y="261" width="0.0102%" height="15" fill="rgb(238,219,53)" fg:x="31937" fg:w="32"/><text x="10.3865%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.01%)</title><rect x="10.1467%" y="245" width="0.0124%" height="15" fill="rgb(232,167,36)" fg:x="31969" fg:w="39"/><text x="10.3967%" y="255.50"></text></g><g><title>core::cmp::max (43 samples, 0.01%)</title><rect x="10.1467%" y="277" width="0.0136%" height="15" fill="rgb(244,19,51)" fg:x="31969" fg:w="43"/><text x="10.3967%" y="287.50"></text></g><g><title>core::cmp::Ord::max (43 samples, 0.01%)</title><rect x="10.1467%" y="261" width="0.0136%" height="15" fill="rgb(224,6,22)" fg:x="31969" fg:w="43"/><text x="10.3967%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (574 samples, 0.18%)</title><rect x="9.9791%" y="293" width="0.1822%" height="15" fill="rgb(224,145,5)" fg:x="31441" fg:w="574"/><text x="10.2291%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (607 samples, 0.19%)</title><rect x="9.9737%" y="341" width="0.1927%" height="15" fill="rgb(234,130,49)" fg:x="31424" fg:w="607"/><text x="10.2237%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (607 samples, 0.19%)</title><rect x="9.9737%" y="325" width="0.1927%" height="15" fill="rgb(254,6,2)" fg:x="31424" fg:w="607"/><text x="10.2237%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (590 samples, 0.19%)</title><rect x="9.9791%" y="309" width="0.1873%" height="15" fill="rgb(208,96,46)" fg:x="31441" fg:w="590"/><text x="10.2291%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (972 samples, 0.31%)</title><rect x="9.9397%" y="357" width="0.3085%" height="15" fill="rgb(239,3,39)" fg:x="31317" fg:w="972"/><text x="10.1897%" y="367.50"></text></g><g><title>core::ptr::write (258 samples, 0.08%)</title><rect x="10.1663%" y="341" width="0.0819%" height="15" fill="rgb(233,210,1)" fg:x="32031" fg:w="258"/><text x="10.4163%" y="351.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (1,037 samples, 0.33%)</title><rect x="9.9286%" y="373" width="0.3291%" height="15" fill="rgb(244,137,37)" fg:x="31282" fg:w="1037"/><text x="10.1786%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (55 samples, 0.02%)</title><rect x="10.5583%" y="341" width="0.0175%" height="15" fill="rgb(240,136,2)" fg:x="33266" fg:w="55"/><text x="10.8083%" y="351.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path::{{closure}} (11,183 samples, 3.55%)</title><rect x="7.0400%" y="405" width="3.5494%" height="15" fill="rgb(239,18,37)" fg:x="22181" fg:w="11183"/><text x="7.2900%" y="415.50">engi..</text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (10,501 samples, 3.33%)</title><rect x="7.2565%" y="389" width="3.3329%" height="15" fill="rgb(218,185,22)" fg:x="22863" fg:w="10501"/><text x="7.5065%" y="399.50">eng..</text></g><g><title>engine::engine::world::TileWeightMap::get (1,045 samples, 0.33%)</title><rect x="10.2578%" y="373" width="0.3317%" height="15" fill="rgb(225,218,4)" fg:x="32319" fg:w="1045"/><text x="10.5078%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (98 samples, 0.03%)</title><rect x="10.5583%" y="357" width="0.0311%" height="15" fill="rgb(230,182,32)" fg:x="33266" fg:w="98"/><text x="10.8083%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (43 samples, 0.01%)</title><rect x="10.5758%" y="341" width="0.0136%" height="15" fill="rgb(242,56,43)" fg:x="33321" fg:w="43"/><text x="10.8258%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (43 samples, 0.01%)</title><rect x="10.5758%" y="325" width="0.0136%" height="15" fill="rgb(233,99,24)" fg:x="33321" fg:w="43"/><text x="10.8258%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (62 samples, 0.02%)</title><rect x="10.5913%" y="293" width="0.0197%" height="15" fill="rgb(234,209,42)" fg:x="33370" fg:w="62"/><text x="10.8413%" y="303.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (347 samples, 0.11%)</title><rect x="10.5894%" y="389" width="0.1101%" height="15" fill="rgb(227,7,12)" fg:x="33364" fg:w="347"/><text x="10.8394%" y="399.50"></text></g><g><title>&lt;engine::engine::world::Position as core::hash::Hash&gt;::hash (347 samples, 0.11%)</title><rect x="10.5894%" y="373" width="0.1101%" height="15" fill="rgb(245,203,43)" fg:x="33364" fg:w="347"/><text x="10.8394%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (347 samples, 0.11%)</title><rect x="10.5894%" y="357" width="0.1101%" height="15" fill="rgb(238,205,33)" fg:x="33364" fg:w="347"/><text x="10.8394%" y="367.50"></text></g><g><title>core::hash::Hasher::write_i64 (347 samples, 0.11%)</title><rect x="10.5894%" y="341" width="0.1101%" height="15" fill="rgb(231,56,7)" fg:x="33364" fg:w="347"/><text x="10.8394%" y="351.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u64 (347 samples, 0.11%)</title><rect x="10.5894%" y="325" width="0.1101%" height="15" fill="rgb(244,186,29)" fg:x="33364" fg:w="347"/><text x="10.8394%" y="335.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (347 samples, 0.11%)</title><rect x="10.5894%" y="309" width="0.1101%" height="15" fill="rgb(234,111,31)" fg:x="33364" fg:w="347"/><text x="10.8394%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (279 samples, 0.09%)</title><rect x="10.6110%" y="293" width="0.0886%" height="15" fill="rgb(241,149,10)" fg:x="33432" fg:w="279"/><text x="10.8610%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (39 samples, 0.01%)</title><rect x="10.6996%" y="373" width="0.0124%" height="15" fill="rgb(249,206,44)" fg:x="33711" fg:w="39"/><text x="10.9496%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (37 samples, 0.01%)</title><rect x="10.7002%" y="357" width="0.0117%" height="15" fill="rgb(251,153,30)" fg:x="33713" fg:w="37"/><text x="10.9502%" y="367.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (169 samples, 0.05%)</title><rect x="11.3445%" y="309" width="0.0536%" height="15" fill="rgb(239,152,38)" fg:x="35743" fg:w="169"/><text x="11.5945%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (477 samples, 0.15%)</title><rect x="11.2579%" y="325" width="0.1514%" height="15" fill="rgb(249,139,47)" fg:x="35470" fg:w="477"/><text x="11.5079%" y="335.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::remove_lowest_bit (35 samples, 0.01%)</title><rect x="11.3981%" y="309" width="0.0111%" height="15" fill="rgb(244,64,35)" fg:x="35912" fg:w="35"/><text x="11.6481%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,093 samples, 0.35%)</title><rect x="11.0973%" y="341" width="0.3469%" height="15" fill="rgb(216,46,15)" fg:x="34964" fg:w="1093"/><text x="11.3473%" y="351.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (68 samples, 0.02%)</title><rect x="11.4226%" y="325" width="0.0216%" height="15" fill="rgb(250,74,19)" fg:x="35989" fg:w="68"/><text x="11.6726%" y="335.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (68 samples, 0.02%)</title><rect x="11.4226%" y="309" width="0.0216%" height="15" fill="rgb(249,42,33)" fg:x="35989" fg:w="68"/><text x="11.6726%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (68 samples, 0.02%)</title><rect x="11.4226%" y="293" width="0.0216%" height="15" fill="rgb(242,149,17)" fg:x="35989" fg:w="68"/><text x="11.6726%" y="303.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (93 samples, 0.03%)</title><rect x="11.4442%" y="325" width="0.0295%" height="15" fill="rgb(244,29,21)" fg:x="36057" fg:w="93"/><text x="11.6942%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (93 samples, 0.03%)</title><rect x="11.4442%" y="309" width="0.0295%" height="15" fill="rgb(220,130,37)" fg:x="36057" fg:w="93"/><text x="11.6942%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (93 samples, 0.03%)</title><rect x="11.4442%" y="293" width="0.0295%" height="15" fill="rgb(211,67,2)" fg:x="36057" fg:w="93"/><text x="11.6942%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,568 samples, 0.50%)</title><rect x="10.9935%" y="357" width="0.4977%" height="15" fill="rgb(235,68,52)" fg:x="34637" fg:w="1568"/><text x="11.2435%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket (148 samples, 0.05%)</title><rect x="11.4442%" y="341" width="0.0470%" height="15" fill="rgb(246,142,3)" fg:x="36057" fg:w="148"/><text x="11.6942%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::data_end (55 samples, 0.02%)</title><rect x="11.4737%" y="325" width="0.0175%" height="15" fill="rgb(241,25,7)" fg:x="36150" fg:w="55"/><text x="11.7237%" y="335.50"></text></g><g><title>hashbrown::raw::inner::h2 (107 samples, 0.03%)</title><rect x="11.4946%" y="309" width="0.0340%" height="15" fill="rgb(242,119,39)" fg:x="36216" fg:w="107"/><text x="11.7446%" y="319.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (405 samples, 0.13%)</title><rect x="11.5286%" y="309" width="0.1285%" height="15" fill="rgb(241,98,45)" fg:x="36323" fg:w="405"/><text x="11.7786%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (405 samples, 0.13%)</title><rect x="11.5286%" y="293" width="0.1285%" height="15" fill="rgb(254,28,30)" fg:x="36323" fg:w="405"/><text x="11.7786%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (405 samples, 0.13%)</title><rect x="11.5286%" y="277" width="0.1285%" height="15" fill="rgb(241,142,54)" fg:x="36323" fg:w="405"/><text x="11.7786%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (286 samples, 0.09%)</title><rect x="11.6571%" y="293" width="0.0908%" height="15" fill="rgb(222,85,15)" fg:x="36728" fg:w="286"/><text x="11.9071%" y="303.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (444 samples, 0.14%)</title><rect x="11.6571%" y="309" width="0.1409%" height="15" fill="rgb(210,85,47)" fg:x="36728" fg:w="444"/><text x="11.9071%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (158 samples, 0.05%)</title><rect x="11.7479%" y="293" width="0.0501%" height="15" fill="rgb(224,206,25)" fg:x="37014" fg:w="158"/><text x="11.9979%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (158 samples, 0.05%)</title><rect x="11.7479%" y="277" width="0.0501%" height="15" fill="rgb(243,201,19)" fg:x="37014" fg:w="158"/><text x="11.9979%" y="287.50"></text></g><g><title>core::core_arch::simd::i8x16::new (158 samples, 0.05%)</title><rect x="11.7479%" y="261" width="0.0501%" height="15" fill="rgb(236,59,4)" fg:x="37014" fg:w="158"/><text x="11.9979%" y="271.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (1,009 samples, 0.32%)</title><rect x="11.4911%" y="357" width="0.3202%" height="15" fill="rgb(254,179,45)" fg:x="36205" fg:w="1009"/><text x="11.7411%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (1,009 samples, 0.32%)</title><rect x="11.4911%" y="341" width="0.3202%" height="15" fill="rgb(226,14,10)" fg:x="36205" fg:w="1009"/><text x="11.7411%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (1,009 samples, 0.32%)</title><rect x="11.4911%" y="325" width="0.3202%" height="15" fill="rgb(244,27,41)" fg:x="36205" fg:w="1009"/><text x="11.7411%" y="335.50"></text></g><g><title>pathfinding::directed::astar::astar (42 samples, 0.01%)</title><rect x="11.7981%" y="309" width="0.0133%" height="15" fill="rgb(235,35,32)" fg:x="37172" fg:w="42"/><text x="12.0481%" y="319.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (4,280 samples, 1.36%)</title><rect x="10.5894%" y="405" width="1.3584%" height="15" fill="rgb(218,68,31)" fg:x="33364" fg:w="4280"/><text x="10.8394%" y="415.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (3,933 samples, 1.25%)</title><rect x="10.6996%" y="389" width="1.2483%" height="15" fill="rgb(207,120,37)" fg:x="33711" fg:w="3933"/><text x="10.9496%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (3,894 samples, 1.24%)</title><rect x="10.7119%" y="373" width="1.2359%" height="15" fill="rgb(227,98,0)" fg:x="33750" fg:w="3894"/><text x="10.9619%" y="383.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (430 samples, 0.14%)</title><rect x="11.8114%" y="357" width="0.1365%" height="15" fill="rgb(207,7,3)" fg:x="37214" fg:w="430"/><text x="12.0614%" y="367.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (368 samples, 0.12%)</title><rect x="11.8311%" y="341" width="0.1168%" height="15" fill="rgb(206,98,19)" fg:x="37276" fg:w="368"/><text x="12.0811%" y="351.50"></text></g><g><title>&lt;engine::engine::world::Position as core::cmp::PartialEq&gt;::eq (352 samples, 0.11%)</title><rect x="11.8361%" y="325" width="0.1117%" height="15" fill="rgb(217,5,26)" fg:x="37292" fg:w="352"/><text x="12.0861%" y="335.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (72 samples, 0.02%)</title><rect x="11.9479%" y="405" width="0.0229%" height="15" fill="rgb(235,190,38)" fg:x="37644" fg:w="72"/><text x="12.1979%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (47 samples, 0.01%)</title><rect x="11.9558%" y="389" width="0.0149%" height="15" fill="rgb(247,86,24)" fg:x="37669" fg:w="47"/><text x="12.2058%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (47 samples, 0.01%)</title><rect x="11.9558%" y="373" width="0.0149%" height="15" fill="rgb(205,101,16)" fg:x="37669" fg:w="47"/><text x="12.2058%" y="383.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (38 samples, 0.01%)</title><rect x="11.9755%" y="341" width="0.0121%" height="15" fill="rgb(246,168,33)" fg:x="37731" fg:w="38"/><text x="12.2255%" y="351.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (67 samples, 0.02%)</title><rect x="11.9707%" y="405" width="0.0213%" height="15" fill="rgb(231,114,1)" fg:x="37716" fg:w="67"/><text x="12.2207%" y="415.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (67 samples, 0.02%)</title><rect x="11.9707%" y="389" width="0.0213%" height="15" fill="rgb(207,184,53)" fg:x="37716" fg:w="67"/><text x="12.2207%" y="399.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (67 samples, 0.02%)</title><rect x="11.9707%" y="373" width="0.0213%" height="15" fill="rgb(224,95,51)" fg:x="37716" fg:w="67"/><text x="12.2207%" y="383.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (61 samples, 0.02%)</title><rect x="11.9726%" y="357" width="0.0194%" height="15" fill="rgb(212,188,45)" fg:x="37722" fg:w="61"/><text x="12.2226%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::len (74 samples, 0.02%)</title><rect x="11.9920%" y="373" width="0.0235%" height="15" fill="rgb(223,154,38)" fg:x="37783" fg:w="74"/><text x="12.2420%" y="383.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::index (111 samples, 0.04%)</title><rect x="11.9920%" y="405" width="0.0352%" height="15" fill="rgb(251,22,52)" fg:x="37783" fg:w="111"/><text x="12.2420%" y="415.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::len (111 samples, 0.04%)</title><rect x="11.9920%" y="389" width="0.0352%" height="15" fill="rgb(229,209,22)" fg:x="37783" fg:w="111"/><text x="12.2420%" y="399.50"></text></g><g><title>pathfinding::directed::astar::astar (37 samples, 0.01%)</title><rect x="12.0155%" y="373" width="0.0117%" height="15" fill="rgb(234,138,34)" fg:x="37857" fg:w="37"/><text x="12.2655%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (104 samples, 0.03%)</title><rect x="12.0780%" y="389" width="0.0330%" height="15" fill="rgb(212,95,11)" fg:x="38054" fg:w="104"/><text x="12.3280%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (92 samples, 0.03%)</title><rect x="12.0818%" y="373" width="0.0292%" height="15" fill="rgb(240,179,47)" fg:x="38066" fg:w="92"/><text x="12.3318%" y="383.50"></text></g><g><title>pathfinding::directed::astar::astar (70 samples, 0.02%)</title><rect x="12.0888%" y="357" width="0.0222%" height="15" fill="rgb(240,163,11)" fg:x="38088" fg:w="70"/><text x="12.3388%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (101 samples, 0.03%)</title><rect x="12.1881%" y="373" width="0.0321%" height="15" fill="rgb(236,37,12)" fg:x="38401" fg:w="101"/><text x="12.4381%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (100 samples, 0.03%)</title><rect x="12.2500%" y="357" width="0.0317%" height="15" fill="rgb(232,164,16)" fg:x="38596" fg:w="100"/><text x="12.5000%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (402 samples, 0.13%)</title><rect x="12.2202%" y="373" width="0.1276%" height="15" fill="rgb(244,205,15)" fg:x="38502" fg:w="402"/><text x="12.4702%" y="383.50"></text></g><g><title>core::ptr::write (208 samples, 0.07%)</title><rect x="12.2818%" y="357" width="0.0660%" height="15" fill="rgb(223,117,47)" fg:x="38696" fg:w="208"/><text x="12.5318%" y="367.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::remove_lowest_bit (85 samples, 0.03%)</title><rect x="12.4078%" y="277" width="0.0270%" height="15" fill="rgb(244,107,35)" fg:x="39093" fg:w="85"/><text x="12.6578%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (137 samples, 0.04%)</title><rect x="12.3941%" y="309" width="0.0435%" height="15" fill="rgb(205,140,8)" fg:x="39050" fg:w="137"/><text x="12.6441%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (137 samples, 0.04%)</title><rect x="12.3941%" y="293" width="0.0435%" height="15" fill="rgb(228,84,46)" fg:x="39050" fg:w="137"/><text x="12.6441%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::deallocate (89 samples, 0.03%)</title><rect x="12.4398%" y="245" width="0.0282%" height="15" fill="rgb(254,188,9)" fg:x="39194" fg:w="89"/><text x="12.6898%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (89 samples, 0.03%)</title><rect x="12.4398%" y="229" width="0.0282%" height="15" fill="rgb(206,112,54)" fg:x="39194" fg:w="89"/><text x="12.6898%" y="239.50"></text></g><g><title>__rdl_dealloc (89 samples, 0.03%)</title><rect x="12.4398%" y="213" width="0.0282%" height="15" fill="rgb(216,84,49)" fg:x="39194" fg:w="89"/><text x="12.6898%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (89 samples, 0.03%)</title><rect x="12.4398%" y="197" width="0.0282%" height="15" fill="rgb(214,194,35)" fg:x="39194" fg:w="89"/><text x="12.6898%" y="207.50"></text></g><g><title>__GI___libc_free (89 samples, 0.03%)</title><rect x="12.4398%" y="181" width="0.0282%" height="15" fill="rgb(249,28,3)" fg:x="39194" fg:w="89"/><text x="12.6898%" y="191.50"></text></g><g><title>_int_free (69 samples, 0.02%)</title><rect x="12.4462%" y="165" width="0.0219%" height="15" fill="rgb(222,56,52)" fg:x="39214" fg:w="69"/><text x="12.6962%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;,hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (94 samples, 0.03%)</title><rect x="12.4395%" y="309" width="0.0298%" height="15" fill="rgb(245,217,50)" fg:x="39193" fg:w="94"/><text x="12.6895%" y="319.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (94 samples, 0.03%)</title><rect x="12.4395%" y="293" width="0.0298%" height="15" fill="rgb(213,201,24)" fg:x="39193" fg:w="94"/><text x="12.6895%" y="303.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (94 samples, 0.03%)</title><rect x="12.4395%" y="277" width="0.0298%" height="15" fill="rgb(248,116,28)" fg:x="39193" fg:w="94"/><text x="12.6895%" y="287.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::free_buckets (93 samples, 0.03%)</title><rect x="12.4398%" y="261" width="0.0295%" height="15" fill="rgb(219,72,43)" fg:x="39194" fg:w="93"/><text x="12.6898%" y="271.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ref (56 samples, 0.02%)</title><rect x="12.4693%" y="309" width="0.0178%" height="15" fill="rgb(209,138,14)" fg:x="39287" fg:w="56"/><text x="12.7193%" y="319.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ptr (56 samples, 0.02%)</title><rect x="12.4693%" y="293" width="0.0178%" height="15" fill="rgb(222,18,33)" fg:x="39287" fg:w="56"/><text x="12.7193%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (56 samples, 0.02%)</title><rect x="12.4693%" y="277" width="0.0178%" height="15" fill="rgb(213,199,7)" fg:x="39287" fg:w="56"/><text x="12.7193%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (56 samples, 0.02%)</title><rect x="12.4693%" y="261" width="0.0178%" height="15" fill="rgb(250,110,10)" fg:x="39287" fg:w="56"/><text x="12.7193%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (142 samples, 0.05%)</title><rect x="12.4874%" y="277" width="0.0451%" height="15" fill="rgb(248,123,6)" fg:x="39344" fg:w="142"/><text x="12.7374%" y="287.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::copy_from_nonoverlapping (173 samples, 0.05%)</title><rect x="12.4871%" y="309" width="0.0549%" height="15" fill="rgb(206,91,31)" fg:x="39343" fg:w="173"/><text x="12.7371%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (172 samples, 0.05%)</title><rect x="12.4874%" y="293" width="0.0546%" height="15" fill="rgb(211,154,13)" fg:x="39344" fg:w="172"/><text x="12.7374%" y="303.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (40 samples, 0.01%)</title><rect x="12.6579%" y="277" width="0.0127%" height="15" fill="rgb(225,148,7)" fg:x="39881" fg:w="40"/><text x="12.9079%" y="287.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (193 samples, 0.06%)</title><rect x="12.6706%" y="277" width="0.0613%" height="15" fill="rgb(220,160,43)" fg:x="39921" fg:w="193"/><text x="12.9206%" y="287.50"></text></g><g><title>hashbrown::raw::inner::is_full (637 samples, 0.20%)</title><rect x="12.7318%" y="277" width="0.2022%" height="15" fill="rgb(213,52,39)" fg:x="40114" fg:w="637"/><text x="12.9818%" y="287.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (277 samples, 0.09%)</title><rect x="12.9340%" y="277" width="0.0879%" height="15" fill="rgb(243,137,7)" fg:x="40751" fg:w="277"/><text x="13.1840%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (277 samples, 0.09%)</title><rect x="12.9340%" y="261" width="0.0879%" height="15" fill="rgb(230,79,13)" fg:x="40751" fg:w="277"/><text x="13.1840%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (277 samples, 0.09%)</title><rect x="12.9340%" y="245" width="0.0879%" height="15" fill="rgb(247,105,23)" fg:x="40751" fg:w="277"/><text x="13.1840%" y="255.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (1,710 samples, 0.54%)</title><rect x="12.5449%" y="293" width="0.5427%" height="15" fill="rgb(223,179,41)" fg:x="39525" fg:w="1710"/><text x="12.7949%" y="303.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (207 samples, 0.07%)</title><rect x="13.0219%" y="277" width="0.0657%" height="15" fill="rgb(218,9,34)" fg:x="41028" fg:w="207"/><text x="13.2719%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (207 samples, 0.07%)</title><rect x="13.0219%" y="261" width="0.0657%" height="15" fill="rgb(222,106,8)" fg:x="41028" fg:w="207"/><text x="13.2719%" y="271.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (266 samples, 0.08%)</title><rect x="13.0876%" y="277" width="0.0844%" height="15" fill="rgb(211,220,0)" fg:x="41235" fg:w="266"/><text x="13.3376%" y="287.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (1,978 samples, 0.63%)</title><rect x="12.5449%" y="309" width="0.6278%" height="15" fill="rgb(229,52,16)" fg:x="39525" fg:w="1978"/><text x="12.7949%" y="319.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (268 samples, 0.09%)</title><rect x="13.0876%" y="293" width="0.0851%" height="15" fill="rgb(212,155,18)" fg:x="41235" fg:w="268"/><text x="13.3376%" y="303.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (303 samples, 0.10%)</title><rect x="13.1876%" y="261" width="0.0962%" height="15" fill="rgb(242,21,14)" fg:x="41550" fg:w="303"/><text x="13.4376%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (303 samples, 0.10%)</title><rect x="13.1876%" y="245" width="0.0962%" height="15" fill="rgb(222,19,48)" fg:x="41550" fg:w="303"/><text x="13.4376%" y="255.50"></text></g><g><title>alloc::alloc::alloc (303 samples, 0.10%)</title><rect x="13.1876%" y="229" width="0.0962%" height="15" fill="rgb(232,45,27)" fg:x="41550" fg:w="303"/><text x="13.4376%" y="239.50"></text></g><g><title>__rdl_alloc (303 samples, 0.10%)</title><rect x="13.1876%" y="213" width="0.0962%" height="15" fill="rgb(249,103,42)" fg:x="41550" fg:w="303"/><text x="13.4376%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (303 samples, 0.10%)</title><rect x="13.1876%" y="197" width="0.0962%" height="15" fill="rgb(246,81,33)" fg:x="41550" fg:w="303"/><text x="13.4376%" y="207.50"></text></g><g><title>__GI___libc_malloc (301 samples, 0.10%)</title><rect x="13.1882%" y="181" width="0.0955%" height="15" fill="rgb(252,33,42)" fg:x="41552" fg:w="301"/><text x="13.4382%" y="191.50"></text></g><g><title>_int_malloc (178 samples, 0.06%)</title><rect x="13.2273%" y="165" width="0.0565%" height="15" fill="rgb(209,212,41)" fg:x="41675" fg:w="178"/><text x="13.4773%" y="175.50"></text></g><g><title>unlink_chunk.constprop.0 (33 samples, 0.01%)</title><rect x="13.2733%" y="149" width="0.0105%" height="15" fill="rgb(207,154,6)" fg:x="41820" fg:w="33"/><text x="13.5233%" y="159.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (320 samples, 0.10%)</title><rect x="13.1825%" y="277" width="0.1016%" height="15" fill="rgb(223,64,47)" fg:x="41534" fg:w="320"/><text x="13.4325%" y="287.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (375 samples, 0.12%)</title><rect x="13.1727%" y="309" width="0.1190%" height="15" fill="rgb(211,161,38)" fg:x="41503" fg:w="375"/><text x="13.4227%" y="319.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (375 samples, 0.12%)</title><rect x="13.1727%" y="293" width="0.1190%" height="15" fill="rgb(219,138,40)" fg:x="41503" fg:w="375"/><text x="13.4227%" y="303.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (2,997 samples, 0.95%)</title><rect x="12.3754%" y="325" width="0.9512%" height="15" fill="rgb(241,228,46)" fg:x="38991" fg:w="2997"/><text x="12.6254%" y="335.50"></text></g><g><title>indexmap::map::core::get_hash::{{closure}} (110 samples, 0.03%)</title><rect x="13.2917%" y="309" width="0.0349%" height="15" fill="rgb(223,209,38)" fg:x="41878" fg:w="110"/><text x="13.5417%" y="319.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (3,023 samples, 0.96%)</title><rect x="12.3687%" y="357" width="0.9595%" height="15" fill="rgb(236,164,45)" fg:x="38970" fg:w="3023"/><text x="12.6187%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (3,021 samples, 0.96%)</title><rect x="12.3694%" y="341" width="0.9588%" height="15" fill="rgb(231,15,5)" fg:x="38972" fg:w="3021"/><text x="12.6194%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (79 samples, 0.03%)</title><rect x="13.4656%" y="341" width="0.0251%" height="15" fill="rgb(252,35,15)" fg:x="42426" fg:w="79"/><text x="13.7156%" y="351.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (42 samples, 0.01%)</title><rect x="13.4907%" y="341" width="0.0133%" height="15" fill="rgb(248,181,18)" fg:x="42505" fg:w="42"/><text x="13.7407%" y="351.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (100 samples, 0.03%)</title><rect x="13.5075%" y="341" width="0.0317%" height="15" fill="rgb(233,39,42)" fg:x="42558" fg:w="100"/><text x="13.7575%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (100 samples, 0.03%)</title><rect x="13.5075%" y="325" width="0.0317%" height="15" fill="rgb(238,110,33)" fg:x="42558" fg:w="100"/><text x="13.7575%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (100 samples, 0.03%)</title><rect x="13.5075%" y="309" width="0.0317%" height="15" fill="rgb(233,195,10)" fg:x="42558" fg:w="100"/><text x="13.7575%" y="319.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (904 samples, 0.29%)</title><rect x="13.3282%" y="357" width="0.2869%" height="15" fill="rgb(254,105,3)" fg:x="41993" fg:w="904"/><text x="13.5782%" y="367.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (234 samples, 0.07%)</title><rect x="13.5408%" y="341" width="0.0743%" height="15" fill="rgb(221,225,9)" fg:x="42663" fg:w="234"/><text x="13.7908%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (234 samples, 0.07%)</title><rect x="13.5408%" y="325" width="0.0743%" height="15" fill="rgb(224,227,45)" fg:x="42663" fg:w="234"/><text x="13.7908%" y="335.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (93 samples, 0.03%)</title><rect x="13.7281%" y="325" width="0.0295%" height="15" fill="rgb(229,198,43)" fg:x="43253" fg:w="93"/><text x="13.9781%" y="335.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (451 samples, 0.14%)</title><rect x="13.6151%" y="357" width="0.1431%" height="15" fill="rgb(206,209,35)" fg:x="42897" fg:w="451"/><text x="13.8651%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (95 samples, 0.03%)</title><rect x="13.7281%" y="341" width="0.0302%" height="15" fill="rgb(245,195,53)" fg:x="43253" fg:w="95"/><text x="13.9781%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (4,446 samples, 1.41%)</title><rect x="12.3478%" y="373" width="1.4111%" height="15" fill="rgb(240,92,26)" fg:x="38904" fg:w="4446"/><text x="12.5978%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (348 samples, 0.11%)</title><rect x="13.8316%" y="165" width="0.1105%" height="15" fill="rgb(207,40,23)" fg:x="43579" fg:w="348"/><text x="14.0816%" y="175.50"></text></g><g><title>_int_free (76 samples, 0.02%)</title><rect x="13.9420%" y="165" width="0.0241%" height="15" fill="rgb(223,111,35)" fg:x="43927" fg:w="76"/><text x="14.1920%" y="175.50"></text></g><g><title>malloc_consolidate (33 samples, 0.01%)</title><rect x="14.0610%" y="149" width="0.0105%" height="15" fill="rgb(229,147,28)" fg:x="44302" fg:w="33"/><text x="14.3110%" y="159.50"></text></g><g><title>_int_malloc (386 samples, 0.12%)</title><rect x="13.9661%" y="165" width="0.1225%" height="15" fill="rgb(211,29,28)" fg:x="44003" fg:w="386"/><text x="14.2161%" y="175.50"></text></g><g><title>unlink_chunk.constprop.0 (54 samples, 0.02%)</title><rect x="14.0715%" y="149" width="0.0171%" height="15" fill="rgb(228,72,33)" fg:x="44335" fg:w="54"/><text x="14.3215%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,021 samples, 0.32%)</title><rect x="13.7656%" y="277" width="0.3241%" height="15" fill="rgb(205,214,31)" fg:x="43371" fg:w="1021"/><text x="14.0156%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,021 samples, 0.32%)</title><rect x="13.7656%" y="261" width="0.3241%" height="15" fill="rgb(224,111,15)" fg:x="43371" fg:w="1021"/><text x="14.0156%" y="271.50"></text></g><g><title>alloc::alloc::realloc (1,021 samples, 0.32%)</title><rect x="13.7656%" y="245" width="0.3241%" height="15" fill="rgb(253,21,26)" fg:x="43371" fg:w="1021"/><text x="14.0156%" y="255.50"></text></g><g><title>__rdl_realloc (1,021 samples, 0.32%)</title><rect x="13.7656%" y="229" width="0.3241%" height="15" fill="rgb(245,139,43)" fg:x="43371" fg:w="1021"/><text x="14.0156%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,021 samples, 0.32%)</title><rect x="13.7656%" y="213" width="0.3241%" height="15" fill="rgb(252,170,7)" fg:x="43371" fg:w="1021"/><text x="14.0156%" y="223.50"></text></g><g><title>__GI___libc_realloc (1,020 samples, 0.32%)</title><rect x="13.7659%" y="197" width="0.3237%" height="15" fill="rgb(231,118,14)" fg:x="43372" fg:w="1020"/><text x="14.0159%" y="207.50"></text></g><g><title>_int_realloc (841 samples, 0.27%)</title><rect x="13.8227%" y="181" width="0.2669%" height="15" fill="rgb(238,83,0)" fg:x="43551" fg:w="841"/><text x="14.0727%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,027 samples, 0.33%)</title><rect x="13.7646%" y="293" width="0.3260%" height="15" fill="rgb(221,39,39)" fg:x="43368" fg:w="1027"/><text x="14.0146%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (1,047 samples, 0.33%)</title><rect x="13.7602%" y="309" width="0.3323%" height="15" fill="rgb(222,119,46)" fg:x="43354" fg:w="1047"/><text x="14.0102%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (1,051 samples, 0.33%)</title><rect x="13.7602%" y="357" width="0.3336%" height="15" fill="rgb(222,165,49)" fg:x="43354" fg:w="1051"/><text x="14.0102%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (1,051 samples, 0.33%)</title><rect x="13.7602%" y="341" width="0.3336%" height="15" fill="rgb(219,113,52)" fg:x="43354" fg:w="1051"/><text x="14.0102%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (1,051 samples, 0.33%)</title><rect x="13.7602%" y="325" width="0.3336%" height="15" fill="rgb(214,7,15)" fg:x="43354" fg:w="1051"/><text x="14.0102%" y="335.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (6,518 samples, 2.07%)</title><rect x="12.0272%" y="405" width="2.0688%" height="15" fill="rgb(235,32,4)" fg:x="37894" fg:w="6518"/><text x="12.2772%" y="415.50">i..</text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (6,254 samples, 1.98%)</title><rect x="12.1110%" y="389" width="1.9850%" height="15" fill="rgb(238,90,54)" fg:x="38158" fg:w="6254"/><text x="12.3610%" y="399.50">i..</text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (1,059 samples, 0.34%)</title><rect x="13.7598%" y="373" width="0.3361%" height="15" fill="rgb(213,208,19)" fg:x="43353" fg:w="1059"/><text x="14.0098%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (65 samples, 0.02%)</title><rect x="14.0960%" y="373" width="0.0206%" height="15" fill="rgb(233,156,4)" fg:x="44412" fg:w="65"/><text x="14.3460%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (49 samples, 0.02%)</title><rect x="14.1010%" y="357" width="0.0156%" height="15" fill="rgb(207,194,5)" fg:x="44428" fg:w="49"/><text x="14.3510%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (70 samples, 0.02%)</title><rect x="14.0960%" y="389" width="0.0222%" height="15" fill="rgb(206,111,30)" fg:x="44412" fg:w="70"/><text x="14.3460%" y="399.50"></text></g><g><title>indexmap::map::core::raw::OccupiedEntry&lt;K,V&gt;::get (71 samples, 0.02%)</title><rect x="14.0960%" y="405" width="0.0225%" height="15" fill="rgb(243,70,54)" fg:x="44412" fg:w="71"/><text x="14.3460%" y="415.50"></text></g><g><title>pathfinding::directed::astar::astar (104 samples, 0.03%)</title><rect x="14.1185%" y="405" width="0.0330%" height="15" fill="rgb(242,28,8)" fg:x="44483" fg:w="104"/><text x="14.3685%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (136 samples, 0.04%)</title><rect x="14.1629%" y="261" width="0.0432%" height="15" fill="rgb(219,106,18)" fg:x="44623" fg:w="136"/><text x="14.4129%" y="271.50"></text></g><g><title>pathfinding::directed::reverse_path::{{closure}}::{{closure}} (136 samples, 0.04%)</title><rect x="14.1629%" y="245" width="0.0432%" height="15" fill="rgb(244,222,10)" fg:x="44623" fg:w="136"/><text x="14.4129%" y="255.50"></text></g><g><title>&lt;itertools::sources::Unfold&lt;St,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (176 samples, 0.06%)</title><rect x="14.1588%" y="293" width="0.0559%" height="15" fill="rgb(236,179,52)" fg:x="44610" fg:w="176"/><text x="14.4088%" y="303.50"></text></g><g><title>pathfinding::directed::reverse_path::{{closure}} (176 samples, 0.06%)</title><rect x="14.1588%" y="277" width="0.0559%" height="15" fill="rgb(213,23,39)" fg:x="44610" fg:w="176"/><text x="14.4088%" y="287.50"></text></g><g><title>_int_free (56 samples, 0.02%)</title><rect x="14.2886%" y="101" width="0.0178%" height="15" fill="rgb(238,48,10)" fg:x="45019" fg:w="56"/><text x="14.5386%" y="111.50"></text></g><g><title>malloc_consolidate (43 samples, 0.01%)</title><rect x="14.3692%" y="85" width="0.0136%" height="15" fill="rgb(251,196,23)" fg:x="45273" fg:w="43"/><text x="14.6192%" y="95.50"></text></g><g><title>_int_malloc (267 samples, 0.08%)</title><rect x="14.3064%" y="101" width="0.0847%" height="15" fill="rgb(250,152,24)" fg:x="45075" fg:w="267"/><text x="14.5564%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (516 samples, 0.16%)</title><rect x="14.2283%" y="213" width="0.1638%" height="15" fill="rgb(209,150,17)" fg:x="44829" fg:w="516"/><text x="14.4783%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (516 samples, 0.16%)</title><rect x="14.2283%" y="197" width="0.1638%" height="15" fill="rgb(234,202,34)" fg:x="44829" fg:w="516"/><text x="14.4783%" y="207.50"></text></g><g><title>alloc::alloc::realloc (516 samples, 0.16%)</title><rect x="14.2283%" y="181" width="0.1638%" height="15" fill="rgb(253,148,53)" fg:x="44829" fg:w="516"/><text x="14.4783%" y="191.50"></text></g><g><title>__rdl_realloc (516 samples, 0.16%)</title><rect x="14.2283%" y="165" width="0.1638%" height="15" fill="rgb(218,129,16)" fg:x="44829" fg:w="516"/><text x="14.4783%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (516 samples, 0.16%)</title><rect x="14.2283%" y="149" width="0.1638%" height="15" fill="rgb(216,85,19)" fg:x="44829" fg:w="516"/><text x="14.4783%" y="159.50"></text></g><g><title>__GI___libc_realloc (513 samples, 0.16%)</title><rect x="14.2293%" y="133" width="0.1628%" height="15" fill="rgb(235,228,7)" fg:x="44832" fg:w="513"/><text x="14.4793%" y="143.50"></text></g><g><title>_int_realloc (394 samples, 0.13%)</title><rect x="14.2670%" y="117" width="0.1251%" height="15" fill="rgb(245,175,0)" fg:x="44951" fg:w="394"/><text x="14.5170%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (518 samples, 0.16%)</title><rect x="14.2280%" y="229" width="0.1644%" height="15" fill="rgb(208,168,36)" fg:x="44828" fg:w="518"/><text x="14.4780%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (532 samples, 0.17%)</title><rect x="14.2251%" y="245" width="0.1689%" height="15" fill="rgb(246,171,24)" fg:x="44819" fg:w="532"/><text x="14.4751%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (535 samples, 0.17%)</title><rect x="14.2245%" y="293" width="0.1698%" height="15" fill="rgb(215,142,24)" fg:x="44817" fg:w="535"/><text x="14.4745%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (535 samples, 0.17%)</title><rect x="14.2245%" y="277" width="0.1698%" height="15" fill="rgb(250,187,7)" fg:x="44817" fg:w="535"/><text x="14.4745%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (533 samples, 0.17%)</title><rect x="14.2251%" y="261" width="0.1692%" height="15" fill="rgb(228,66,33)" fg:x="44819" fg:w="533"/><text x="14.4751%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (767 samples, 0.24%)</title><rect x="14.1579%" y="309" width="0.2434%" height="15" fill="rgb(234,215,21)" fg:x="44607" fg:w="767"/><text x="14.4079%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (861 samples, 0.27%)</title><rect x="14.1569%" y="325" width="0.2733%" height="15" fill="rgb(222,191,20)" fg:x="44604" fg:w="861"/><text x="14.4069%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (91 samples, 0.03%)</title><rect x="14.4013%" y="309" width="0.0289%" height="15" fill="rgb(245,79,54)" fg:x="45374" fg:w="91"/><text x="14.6513%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (91 samples, 0.03%)</title><rect x="14.4013%" y="293" width="0.0289%" height="15" fill="rgb(240,10,37)" fg:x="45374" fg:w="91"/><text x="14.6513%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (91 samples, 0.03%)</title><rect x="14.4013%" y="277" width="0.0289%" height="15" fill="rgb(214,192,32)" fg:x="45374" fg:w="91"/><text x="14.6513%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (91 samples, 0.03%)</title><rect x="14.4013%" y="261" width="0.0289%" height="15" fill="rgb(209,36,54)" fg:x="45374" fg:w="91"/><text x="14.6513%" y="271.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (91 samples, 0.03%)</title><rect x="14.4013%" y="245" width="0.0289%" height="15" fill="rgb(220,10,11)" fg:x="45374" fg:w="91"/><text x="14.6513%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;engine::engine::world::Position&gt;&gt; (41 samples, 0.01%)</title><rect x="14.4172%" y="229" width="0.0130%" height="15" fill="rgb(221,106,17)" fg:x="45424" fg:w="41"/><text x="14.6672%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.01%)</title><rect x="14.4172%" y="213" width="0.0130%" height="15" fill="rgb(251,142,44)" fg:x="45424" fg:w="41"/><text x="14.6672%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (41 samples, 0.01%)</title><rect x="14.4172%" y="197" width="0.0130%" height="15" fill="rgb(238,13,15)" fg:x="45424" fg:w="41"/><text x="14.6672%" y="207.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.01%)</title><rect x="14.4172%" y="181" width="0.0130%" height="15" fill="rgb(208,107,27)" fg:x="45424" fg:w="41"/><text x="14.6672%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;engine::engine::world::Position&gt;&gt; (41 samples, 0.01%)</title><rect x="14.4172%" y="165" width="0.0130%" height="15" fill="rgb(205,136,37)" fg:x="45424" fg:w="41"/><text x="14.6672%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.01%)</title><rect x="14.4172%" y="149" width="0.0130%" height="15" fill="rgb(250,205,27)" fg:x="45424" fg:w="41"/><text x="14.6672%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (41 samples, 0.01%)</title><rect x="14.4172%" y="133" width="0.0130%" height="15" fill="rgb(210,80,43)" fg:x="45424" fg:w="41"/><text x="14.6672%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (41 samples, 0.01%)</title><rect x="14.4172%" y="117" width="0.0130%" height="15" fill="rgb(247,160,36)" fg:x="45424" fg:w="41"/><text x="14.6672%" y="127.50"></text></g><g><title>__rdl_dealloc (41 samples, 0.01%)</title><rect x="14.4172%" y="101" width="0.0130%" height="15" fill="rgb(234,13,49)" fg:x="45424" fg:w="41"/><text x="14.6672%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (41 samples, 0.01%)</title><rect x="14.4172%" y="85" width="0.0130%" height="15" fill="rgb(234,122,0)" fg:x="45424" fg:w="41"/><text x="14.6672%" y="95.50"></text></g><g><title>__GI___libc_free (41 samples, 0.01%)</title><rect x="14.4172%" y="69" width="0.0130%" height="15" fill="rgb(207,146,38)" fg:x="45424" fg:w="41"/><text x="14.6672%" y="79.50"></text></g><g><title>_int_free (36 samples, 0.01%)</title><rect x="14.4187%" y="53" width="0.0114%" height="15" fill="rgb(207,177,25)" fg:x="45429" fg:w="36"/><text x="14.6687%" y="63.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (38,422 samples, 12.19%)</title><rect x="2.2668%" y="501" width="12.1948%" height="15" fill="rgb(211,178,42)" fg:x="7142" fg:w="38422"/><text x="2.5168%" y="511.50">&lt;Func as bevy_ecs:..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (38,418 samples, 12.19%)</title><rect x="2.2681%" y="485" width="12.1935%" height="15" fill="rgb(230,69,54)" fg:x="7146" fg:w="38418"/><text x="2.5181%" y="495.50">core::ops::functio..</text></g><g><title>core::ops::function::Fn::call (38,417 samples, 12.19%)</title><rect x="2.2684%" y="469" width="12.1932%" height="15" fill="rgb(214,135,41)" fg:x="7147" fg:w="38417"/><text x="2.5184%" y="479.50">core::ops::functio..</text></g><g><title>engine::engine::actor::pathfinding::plan_path (37,719 samples, 11.97%)</title><rect x="2.4899%" y="453" width="11.9717%" height="15" fill="rgb(237,67,25)" fg:x="7845" fg:w="37719"/><text x="2.7399%" y="463.50">engine::engine::ac..</text></g><g><title>engine::engine::actor::pathfinding::get_path (37,585 samples, 11.93%)</title><rect x="2.5325%" y="437" width="11.9291%" height="15" fill="rgb(222,189,50)" fg:x="7979" fg:w="37585"/><text x="2.7825%" y="447.50">engine::engine::ac..</text></g><g><title>pathfinding::directed::astar::astar (36,895 samples, 11.71%)</title><rect x="2.7515%" y="421" width="11.7101%" height="15" fill="rgb(245,148,34)" fg:x="8669" fg:w="36895"/><text x="3.0015%" y="431.50">pathfinding::dire..</text></g><g><title>pathfinding::directed::reverse_path (977 samples, 0.31%)</title><rect x="14.1515%" y="405" width="0.3101%" height="15" fill="rgb(222,29,6)" fg:x="44587" fg:w="977"/><text x="14.4015%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (977 samples, 0.31%)</title><rect x="14.1515%" y="389" width="0.3101%" height="15" fill="rgb(221,189,43)" fg:x="44587" fg:w="977"/><text x="14.4015%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (977 samples, 0.31%)</title><rect x="14.1515%" y="373" width="0.3101%" height="15" fill="rgb(207,36,27)" fg:x="44587" fg:w="977"/><text x="14.4015%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (975 samples, 0.31%)</title><rect x="14.1521%" y="357" width="0.3095%" height="15" fill="rgb(217,90,24)" fg:x="44589" fg:w="975"/><text x="14.4021%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (967 samples, 0.31%)</title><rect x="14.1547%" y="341" width="0.3069%" height="15" fill="rgb(224,66,35)" fg:x="44597" fg:w="967"/><text x="14.4047%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (94 samples, 0.03%)</title><rect x="14.4318%" y="325" width="0.0298%" height="15" fill="rgb(221,13,50)" fg:x="45470" fg:w="94"/><text x="14.6818%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (94 samples, 0.03%)</title><rect x="14.4318%" y="309" width="0.0298%" height="15" fill="rgb(236,68,49)" fg:x="45470" fg:w="94"/><text x="14.6818%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (94 samples, 0.03%)</title><rect x="14.4318%" y="293" width="0.0298%" height="15" fill="rgb(229,146,28)" fg:x="45470" fg:w="94"/><text x="14.6818%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (94 samples, 0.03%)</title><rect x="14.4318%" y="277" width="0.0298%" height="15" fill="rgb(225,31,38)" fg:x="45470" fg:w="94"/><text x="14.6818%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (94 samples, 0.03%)</title><rect x="14.4318%" y="261" width="0.0298%" height="15" fill="rgb(250,208,3)" fg:x="45470" fg:w="94"/><text x="14.6818%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (94 samples, 0.03%)</title><rect x="14.4318%" y="245" width="0.0298%" height="15" fill="rgb(246,54,23)" fg:x="45470" fg:w="94"/><text x="14.6818%" y="255.50"></text></g><g><title>alloc::alloc::alloc (93 samples, 0.03%)</title><rect x="14.4321%" y="229" width="0.0295%" height="15" fill="rgb(243,76,11)" fg:x="45471" fg:w="93"/><text x="14.6821%" y="239.50"></text></g><g><title>__rdl_alloc (93 samples, 0.03%)</title><rect x="14.4321%" y="213" width="0.0295%" height="15" fill="rgb(245,21,50)" fg:x="45471" fg:w="93"/><text x="14.6821%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (93 samples, 0.03%)</title><rect x="14.4321%" y="197" width="0.0295%" height="15" fill="rgb(228,9,43)" fg:x="45471" fg:w="93"/><text x="14.6821%" y="207.50"></text></g><g><title>__GI___libc_malloc (93 samples, 0.03%)</title><rect x="14.4321%" y="181" width="0.0295%" height="15" fill="rgb(208,100,47)" fg:x="45471" fg:w="93"/><text x="14.6821%" y="191.50"></text></g><g><title>_int_malloc (51 samples, 0.02%)</title><rect x="14.4454%" y="165" width="0.0162%" height="15" fill="rgb(232,26,8)" fg:x="45513" fg:w="51"/><text x="14.6954%" y="175.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (41 samples, 0.01%)</title><rect x="14.4641%" y="437" width="0.0130%" height="15" fill="rgb(216,166,38)" fg:x="45572" fg:w="41"/><text x="14.7141%" y="447.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (69 samples, 0.02%)</title><rect x="14.4641%" y="453" width="0.0219%" height="15" fill="rgb(251,202,51)" fg:x="45572" fg:w="69"/><text x="14.7141%" y="463.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (54 samples, 0.02%)</title><rect x="14.4867%" y="453" width="0.0171%" height="15" fill="rgb(254,216,34)" fg:x="45643" fg:w="54"/><text x="14.7367%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (142 samples, 0.05%)</title><rect x="14.4616%" y="501" width="0.0451%" height="15" fill="rgb(251,32,27)" fg:x="45564" fg:w="142"/><text x="14.7116%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (139 samples, 0.04%)</title><rect x="14.4625%" y="485" width="0.0441%" height="15" fill="rgb(208,127,28)" fg:x="45567" fg:w="139"/><text x="14.7125%" y="495.50"></text></g><g><title>core::ops::function::Fn::call (139 samples, 0.04%)</title><rect x="14.4625%" y="469" width="0.0441%" height="15" fill="rgb(224,137,22)" fg:x="45567" fg:w="139"/><text x="14.7125%" y="479.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (52 samples, 0.02%)</title><rect x="14.5524%" y="405" width="0.0165%" height="15" fill="rgb(254,70,32)" fg:x="45850" fg:w="52"/><text x="14.8024%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 0.01%)</title><rect x="14.5574%" y="389" width="0.0114%" height="15" fill="rgb(229,75,37)" fg:x="45866" fg:w="36"/><text x="14.8074%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 0.01%)</title><rect x="14.5574%" y="373" width="0.0114%" height="15" fill="rgb(252,64,23)" fg:x="45866" fg:w="36"/><text x="14.8074%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.01%)</title><rect x="14.5574%" y="357" width="0.0114%" height="15" fill="rgb(232,162,48)" fg:x="45866" fg:w="36"/><text x="14.8074%" y="367.50"></text></g><g><title>bevy_render::draw::Draw::set_bind_group (34 samples, 0.01%)</title><rect x="14.5689%" y="405" width="0.0108%" height="15" fill="rgb(246,160,12)" fg:x="45902" fg:w="34"/><text x="14.8189%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.01%)</title><rect x="14.5689%" y="389" width="0.0108%" height="15" fill="rgb(247,166,0)" fg:x="45902" fg:w="34"/><text x="14.8189%" y="399.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (58 samples, 0.02%)</title><rect x="14.5809%" y="309" width="0.0184%" height="15" fill="rgb(249,219,21)" fg:x="45940" fg:w="58"/><text x="14.8309%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (64 samples, 0.02%)</title><rect x="14.5803%" y="341" width="0.0203%" height="15" fill="rgb(205,209,3)" fg:x="45938" fg:w="64"/><text x="14.8303%" y="351.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (62 samples, 0.02%)</title><rect x="14.5809%" y="325" width="0.0197%" height="15" fill="rgb(243,44,1)" fg:x="45940" fg:w="62"/><text x="14.8309%" y="335.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (72 samples, 0.02%)</title><rect x="14.6028%" y="277" width="0.0229%" height="15" fill="rgb(206,159,16)" fg:x="46009" fg:w="72"/><text x="14.8528%" y="287.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (74 samples, 0.02%)</title><rect x="14.6028%" y="309" width="0.0235%" height="15" fill="rgb(244,77,30)" fg:x="46009" fg:w="74"/><text x="14.8528%" y="319.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (74 samples, 0.02%)</title><rect x="14.6028%" y="293" width="0.0235%" height="15" fill="rgb(218,69,12)" fg:x="46009" fg:w="74"/><text x="14.8528%" y="303.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_mut_untyped (154 samples, 0.05%)</title><rect x="14.5800%" y="405" width="0.0489%" height="15" fill="rgb(212,87,7)" fg:x="45937" fg:w="154"/><text x="14.8300%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (154 samples, 0.05%)</title><rect x="14.5800%" y="389" width="0.0489%" height="15" fill="rgb(245,114,25)" fg:x="45937" fg:w="154"/><text x="14.8300%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (154 samples, 0.05%)</title><rect x="14.5800%" y="373" width="0.0489%" height="15" fill="rgb(210,61,42)" fg:x="45937" fg:w="154"/><text x="14.8300%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (153 samples, 0.05%)</title><rect x="14.5803%" y="357" width="0.0486%" height="15" fill="rgb(211,52,33)" fg:x="45938" fg:w="153"/><text x="14.8303%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (89 samples, 0.03%)</title><rect x="14.6006%" y="341" width="0.0282%" height="15" fill="rgb(234,58,33)" fg:x="46002" fg:w="89"/><text x="14.8506%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (89 samples, 0.03%)</title><rect x="14.6006%" y="325" width="0.0282%" height="15" fill="rgb(220,115,36)" fg:x="46002" fg:w="89"/><text x="14.8506%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (43 samples, 0.01%)</title><rect x="14.6295%" y="293" width="0.0136%" height="15" fill="rgb(243,153,54)" fg:x="46093" fg:w="43"/><text x="14.8795%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (43 samples, 0.01%)</title><rect x="14.6295%" y="277" width="0.0136%" height="15" fill="rgb(251,47,18)" fg:x="46093" fg:w="43"/><text x="14.8795%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (46 samples, 0.01%)</title><rect x="14.6289%" y="309" width="0.0146%" height="15" fill="rgb(242,102,42)" fg:x="46091" fg:w="46"/><text x="14.8789%" y="319.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::iter_assets (50 samples, 0.02%)</title><rect x="14.6289%" y="405" width="0.0159%" height="15" fill="rgb(234,31,38)" fg:x="46091" fg:w="50"/><text x="14.8789%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (50 samples, 0.02%)</title><rect x="14.6289%" y="389" width="0.0159%" height="15" fill="rgb(221,117,51)" fg:x="46091" fg:w="50"/><text x="14.8789%" y="399.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (50 samples, 0.02%)</title><rect x="14.6289%" y="373" width="0.0159%" height="15" fill="rgb(212,20,18)" fg:x="46091" fg:w="50"/><text x="14.8789%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (50 samples, 0.02%)</title><rect x="14.6289%" y="357" width="0.0159%" height="15" fill="rgb(245,133,36)" fg:x="46091" fg:w="50"/><text x="14.8789%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (50 samples, 0.02%)</title><rect x="14.6289%" y="341" width="0.0159%" height="15" fill="rgb(212,6,19)" fg:x="46091" fg:w="50"/><text x="14.8789%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (50 samples, 0.02%)</title><rect x="14.6289%" y="325" width="0.0159%" height="15" fill="rgb(218,1,36)" fg:x="46091" fg:w="50"/><text x="14.8789%" y="335.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (37 samples, 0.01%)</title><rect x="14.6463%" y="389" width="0.0117%" height="15" fill="rgb(246,84,54)" fg:x="46146" fg:w="37"/><text x="14.8963%" y="399.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (37 samples, 0.01%)</title><rect x="14.6463%" y="373" width="0.0117%" height="15" fill="rgb(242,110,6)" fg:x="46146" fg:w="37"/><text x="14.8963%" y="383.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get_bind_group (55 samples, 0.02%)</title><rect x="14.6581%" y="389" width="0.0175%" height="15" fill="rgb(214,47,5)" fg:x="46183" fg:w="55"/><text x="14.9081%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (55 samples, 0.02%)</title><rect x="14.6581%" y="373" width="0.0175%" height="15" fill="rgb(218,159,25)" fg:x="46183" fg:w="55"/><text x="14.9081%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (55 samples, 0.02%)</title><rect x="14.6581%" y="357" width="0.0175%" height="15" fill="rgb(215,211,28)" fg:x="46183" fg:w="55"/><text x="14.9081%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (55 samples, 0.02%)</title><rect x="14.6581%" y="341" width="0.0175%" height="15" fill="rgb(238,59,32)" fg:x="46183" fg:w="55"/><text x="14.9081%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (54 samples, 0.02%)</title><rect x="14.6584%" y="325" width="0.0171%" height="15" fill="rgb(226,82,3)" fg:x="46184" fg:w="54"/><text x="14.9084%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 0.02%)</title><rect x="14.6587%" y="309" width="0.0168%" height="15" fill="rgb(240,164,32)" fg:x="46185" fg:w="53"/><text x="14.9087%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.01%)</title><rect x="14.6768%" y="325" width="0.0111%" height="15" fill="rgb(232,46,7)" fg:x="46242" fg:w="35"/><text x="14.9268%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (66 samples, 0.02%)</title><rect x="14.7060%" y="245" width="0.0209%" height="15" fill="rgb(229,129,53)" fg:x="46334" fg:w="66"/><text x="14.9560%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (66 samples, 0.02%)</title><rect x="14.7060%" y="229" width="0.0209%" height="15" fill="rgb(234,188,29)" fg:x="46334" fg:w="66"/><text x="14.9560%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (66 samples, 0.02%)</title><rect x="14.7060%" y="213" width="0.0209%" height="15" fill="rgb(246,141,4)" fg:x="46334" fg:w="66"/><text x="14.9560%" y="223.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (164 samples, 0.05%)</title><rect x="14.6768%" y="373" width="0.0521%" height="15" fill="rgb(229,23,39)" fg:x="46242" fg:w="164"/><text x="14.9268%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (164 samples, 0.05%)</title><rect x="14.6768%" y="357" width="0.0521%" height="15" fill="rgb(206,12,3)" fg:x="46242" fg:w="164"/><text x="14.9268%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (164 samples, 0.05%)</title><rect x="14.6768%" y="341" width="0.0521%" height="15" fill="rgb(252,226,20)" fg:x="46242" fg:w="164"/><text x="14.9268%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (129 samples, 0.04%)</title><rect x="14.6879%" y="325" width="0.0409%" height="15" fill="rgb(216,123,35)" fg:x="46277" fg:w="129"/><text x="14.9379%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (121 samples, 0.04%)</title><rect x="14.6904%" y="309" width="0.0384%" height="15" fill="rgb(212,68,40)" fg:x="46285" fg:w="121"/><text x="14.9404%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (80 samples, 0.03%)</title><rect x="14.7034%" y="293" width="0.0254%" height="15" fill="rgb(254,125,32)" fg:x="46326" fg:w="80"/><text x="14.9534%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (80 samples, 0.03%)</title><rect x="14.7034%" y="277" width="0.0254%" height="15" fill="rgb(253,97,22)" fg:x="46326" fg:w="80"/><text x="14.9534%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (80 samples, 0.03%)</title><rect x="14.7034%" y="261" width="0.0254%" height="15" fill="rgb(241,101,14)" fg:x="46326" fg:w="80"/><text x="14.9534%" y="271.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (597 samples, 0.19%)</title><rect x="14.5419%" y="437" width="0.1895%" height="15" fill="rgb(238,103,29)" fg:x="45817" fg:w="597"/><text x="14.7919%" y="447.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (596 samples, 0.19%)</title><rect x="14.5422%" y="421" width="0.1892%" height="15" fill="rgb(233,195,47)" fg:x="45818" fg:w="596"/><text x="14.7922%" y="431.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (273 samples, 0.09%)</title><rect x="14.6447%" y="405" width="0.0866%" height="15" fill="rgb(246,218,30)" fg:x="46141" fg:w="273"/><text x="14.8947%" y="415.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group_status (176 samples, 0.06%)</title><rect x="14.6755%" y="389" width="0.0559%" height="15" fill="rgb(219,145,47)" fg:x="46238" fg:w="176"/><text x="14.9255%" y="399.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (34 samples, 0.01%)</title><rect x="14.7425%" y="133" width="0.0108%" height="15" fill="rgb(243,12,26)" fg:x="46449" fg:w="34"/><text x="14.9925%" y="143.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (55 samples, 0.02%)</title><rect x="14.7425%" y="149" width="0.0175%" height="15" fill="rgb(214,87,16)" fg:x="46449" fg:w="55"/><text x="14.9925%" y="159.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout as core::cmp::PartialEq&gt;::eq (65 samples, 0.02%)</title><rect x="14.7403%" y="309" width="0.0206%" height="15" fill="rgb(208,99,42)" fg:x="46442" fg:w="65"/><text x="14.9903%" y="319.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (64 samples, 0.02%)</title><rect x="14.7406%" y="293" width="0.0203%" height="15" fill="rgb(253,99,2)" fg:x="46443" fg:w="64"/><text x="14.9906%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (62 samples, 0.02%)</title><rect x="14.7412%" y="277" width="0.0197%" height="15" fill="rgb(220,168,23)" fg:x="46445" fg:w="62"/><text x="14.9912%" y="287.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (62 samples, 0.02%)</title><rect x="14.7412%" y="261" width="0.0197%" height="15" fill="rgb(242,38,24)" fg:x="46445" fg:w="62"/><text x="14.9912%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (62 samples, 0.02%)</title><rect x="14.7412%" y="245" width="0.0197%" height="15" fill="rgb(225,182,9)" fg:x="46445" fg:w="62"/><text x="14.9912%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (62 samples, 0.02%)</title><rect x="14.7412%" y="229" width="0.0197%" height="15" fill="rgb(243,178,37)" fg:x="46445" fg:w="62"/><text x="14.9912%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (60 samples, 0.02%)</title><rect x="14.7419%" y="213" width="0.0190%" height="15" fill="rgb(232,139,19)" fg:x="46447" fg:w="60"/><text x="14.9919%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (60 samples, 0.02%)</title><rect x="14.7419%" y="197" width="0.0190%" height="15" fill="rgb(225,201,24)" fg:x="46447" fg:w="60"/><text x="14.9919%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (60 samples, 0.02%)</title><rect x="14.7419%" y="181" width="0.0190%" height="15" fill="rgb(221,47,46)" fg:x="46447" fg:w="60"/><text x="14.9919%" y="191.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute as core::cmp::PartialEq&gt;::eq (60 samples, 0.02%)</title><rect x="14.7419%" y="165" width="0.0190%" height="15" fill="rgb(249,23,13)" fg:x="46447" fg:w="60"/><text x="14.9919%" y="175.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (93 samples, 0.03%)</title><rect x="14.7730%" y="133" width="0.0295%" height="15" fill="rgb(219,9,5)" fg:x="46545" fg:w="93"/><text x="15.0230%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (93 samples, 0.03%)</title><rect x="14.7730%" y="117" width="0.0295%" height="15" fill="rgb(254,171,16)" fg:x="46545" fg:w="93"/><text x="15.0230%" y="127.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (82 samples, 0.03%)</title><rect x="14.7764%" y="101" width="0.0260%" height="15" fill="rgb(230,171,20)" fg:x="46556" fg:w="82"/><text x="15.0264%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (82 samples, 0.03%)</title><rect x="14.7764%" y="85" width="0.0260%" height="15" fill="rgb(210,71,41)" fg:x="46556" fg:w="82"/><text x="15.0264%" y="95.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (82 samples, 0.03%)</title><rect x="14.7764%" y="69" width="0.0260%" height="15" fill="rgb(206,173,20)" fg:x="46556" fg:w="82"/><text x="15.0264%" y="79.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (82 samples, 0.03%)</title><rect x="14.7764%" y="53" width="0.0260%" height="15" fill="rgb(233,88,34)" fg:x="46556" fg:w="82"/><text x="15.0264%" y="63.50"></text></g><g><title>__memcmp_avx2_movbe (62 samples, 0.02%)</title><rect x="14.7828%" y="37" width="0.0197%" height="15" fill="rgb(223,209,46)" fg:x="46576" fg:w="62"/><text x="15.0328%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (186 samples, 0.06%)</title><rect x="14.7638%" y="293" width="0.0590%" height="15" fill="rgb(250,43,18)" fg:x="46516" fg:w="186"/><text x="15.0138%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (186 samples, 0.06%)</title><rect x="14.7638%" y="277" width="0.0590%" height="15" fill="rgb(208,13,10)" fg:x="46516" fg:w="186"/><text x="15.0138%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (181 samples, 0.06%)</title><rect x="14.7653%" y="261" width="0.0574%" height="15" fill="rgb(212,200,36)" fg:x="46521" fg:w="181"/><text x="15.0153%" y="271.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (181 samples, 0.06%)</title><rect x="14.7653%" y="245" width="0.0574%" height="15" fill="rgb(225,90,30)" fg:x="46521" fg:w="181"/><text x="15.0153%" y="255.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (181 samples, 0.06%)</title><rect x="14.7653%" y="229" width="0.0574%" height="15" fill="rgb(236,182,39)" fg:x="46521" fg:w="181"/><text x="15.0153%" y="239.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (181 samples, 0.06%)</title><rect x="14.7653%" y="213" width="0.0574%" height="15" fill="rgb(212,144,35)" fg:x="46521" fg:w="181"/><text x="15.0153%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (180 samples, 0.06%)</title><rect x="14.7657%" y="197" width="0.0571%" height="15" fill="rgb(228,63,44)" fg:x="46522" fg:w="180"/><text x="15.0157%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (180 samples, 0.06%)</title><rect x="14.7657%" y="181" width="0.0571%" height="15" fill="rgb(228,109,6)" fg:x="46522" fg:w="180"/><text x="15.0157%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (165 samples, 0.05%)</title><rect x="14.7704%" y="165" width="0.0524%" height="15" fill="rgb(238,117,24)" fg:x="46537" fg:w="165"/><text x="15.0204%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (165 samples, 0.05%)</title><rect x="14.7704%" y="149" width="0.0524%" height="15" fill="rgb(242,26,26)" fg:x="46537" fg:w="165"/><text x="15.0204%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (63 samples, 0.02%)</title><rect x="14.8028%" y="133" width="0.0200%" height="15" fill="rgb(221,92,48)" fg:x="46639" fg:w="63"/><text x="15.0528%" y="143.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (63 samples, 0.02%)</title><rect x="14.8028%" y="117" width="0.0200%" height="15" fill="rgb(209,209,32)" fg:x="46639" fg:w="63"/><text x="15.0528%" y="127.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (63 samples, 0.02%)</title><rect x="14.8028%" y="101" width="0.0200%" height="15" fill="rgb(221,70,22)" fg:x="46639" fg:w="63"/><text x="15.0528%" y="111.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (62 samples, 0.02%)</title><rect x="14.8031%" y="85" width="0.0197%" height="15" fill="rgb(248,145,5)" fg:x="46640" fg:w="62"/><text x="15.0531%" y="95.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (62 samples, 0.02%)</title><rect x="14.8031%" y="69" width="0.0197%" height="15" fill="rgb(226,116,26)" fg:x="46640" fg:w="62"/><text x="15.0531%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (62 samples, 0.02%)</title><rect x="14.8031%" y="53" width="0.0197%" height="15" fill="rgb(244,5,17)" fg:x="46640" fg:w="62"/><text x="15.0531%" y="63.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (273 samples, 0.09%)</title><rect x="14.7371%" y="405" width="0.0866%" height="15" fill="rgb(252,159,33)" fg:x="46432" fg:w="273"/><text x="14.9871%" y="415.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}} (273 samples, 0.09%)</title><rect x="14.7371%" y="389" width="0.0866%" height="15" fill="rgb(206,71,0)" fg:x="46432" fg:w="273"/><text x="14.9871%" y="399.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (273 samples, 0.09%)</title><rect x="14.7371%" y="373" width="0.0866%" height="15" fill="rgb(233,118,54)" fg:x="46432" fg:w="273"/><text x="14.9871%" y="383.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}}::{{closure}} (272 samples, 0.09%)</title><rect x="14.7374%" y="357" width="0.0863%" height="15" fill="rgb(234,83,48)" fg:x="46433" fg:w="272"/><text x="14.9874%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (272 samples, 0.09%)</title><rect x="14.7374%" y="341" width="0.0863%" height="15" fill="rgb(228,3,54)" fg:x="46433" fg:w="272"/><text x="14.9874%" y="351.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (272 samples, 0.09%)</title><rect x="14.7374%" y="325" width="0.0863%" height="15" fill="rgb(226,155,13)" fg:x="46433" fg:w="272"/><text x="14.9874%" y="335.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (198 samples, 0.06%)</title><rect x="14.7609%" y="309" width="0.0628%" height="15" fill="rgb(241,28,37)" fg:x="46507" fg:w="198"/><text x="15.0109%" y="319.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (310 samples, 0.10%)</title><rect x="14.7371%" y="421" width="0.0984%" height="15" fill="rgb(233,93,10)" fg:x="46432" fg:w="310"/><text x="14.9871%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 0.01%)</title><rect x="14.8241%" y="405" width="0.0114%" height="15" fill="rgb(225,113,19)" fg:x="46706" fg:w="36"/><text x="15.0741%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 0.01%)</title><rect x="14.8241%" y="389" width="0.0114%" height="15" fill="rgb(241,2,18)" fg:x="46706" fg:w="36"/><text x="15.0741%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.01%)</title><rect x="14.8241%" y="373" width="0.0114%" height="15" fill="rgb(228,207,21)" fg:x="46706" fg:w="36"/><text x="15.0741%" y="383.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (329 samples, 0.10%)</title><rect x="14.7314%" y="437" width="0.1044%" height="15" fill="rgb(213,211,35)" fg:x="46414" fg:w="329"/><text x="14.9814%" y="447.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (44 samples, 0.01%)</title><rect x="14.8358%" y="437" width="0.0140%" height="15" fill="rgb(209,83,10)" fg:x="46743" fg:w="44"/><text x="15.0858%" y="447.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (1,077 samples, 0.34%)</title><rect x="14.5092%" y="453" width="0.3418%" height="15" fill="rgb(209,164,1)" fg:x="45714" fg:w="1077"/><text x="14.7592%" y="463.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.02%)</title><rect x="14.8561%" y="437" width="0.0171%" height="15" fill="rgb(213,184,43)" fg:x="46807" fg:w="54"/><text x="15.1061%" y="447.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (57 samples, 0.02%)</title><rect x="14.8913%" y="405" width="0.0181%" height="15" fill="rgb(231,61,34)" fg:x="46918" fg:w="57"/><text x="15.1413%" y="415.50"></text></g><g><title>&lt;f32 as bevy_render::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (291 samples, 0.09%)</title><rect x="14.9596%" y="357" width="0.0924%" height="15" fill="rgb(235,75,3)" fg:x="47133" fg:w="291"/><text x="15.2096%" y="367.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (269 samples, 0.09%)</title><rect x="14.9666%" y="341" width="0.0854%" height="15" fill="rgb(220,106,47)" fg:x="47155" fg:w="269"/><text x="15.2166%" y="351.50"></text></g><g><title>[libm-2.33.so] (265 samples, 0.08%)</title><rect x="14.9678%" y="325" width="0.0841%" height="15" fill="rgb(210,196,33)" fg:x="47159" fg:w="265"/><text x="15.2178%" y="335.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (460 samples, 0.15%)</title><rect x="14.9447%" y="373" width="0.1460%" height="15" fill="rgb(229,154,42)" fg:x="47086" fg:w="460"/><text x="15.1947%" y="383.50"></text></g><g><title>[libm-2.33.so] (122 samples, 0.04%)</title><rect x="15.0519%" y="357" width="0.0387%" height="15" fill="rgb(228,114,26)" fg:x="47424" fg:w="122"/><text x="15.3019%" y="367.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (487 samples, 0.15%)</title><rect x="14.9377%" y="389" width="0.1546%" height="15" fill="rgb(208,144,1)" fg:x="47064" fg:w="487"/><text x="15.1877%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (107 samples, 0.03%)</title><rect x="15.1240%" y="293" width="0.0340%" height="15" fill="rgb(239,112,37)" fg:x="47651" fg:w="107"/><text x="15.3740%" y="303.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (107 samples, 0.03%)</title><rect x="15.1240%" y="277" width="0.0340%" height="15" fill="rgb(210,96,50)" fg:x="47651" fg:w="107"/><text x="15.3740%" y="287.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding (205 samples, 0.07%)</title><rect x="15.1030%" y="389" width="0.0651%" height="15" fill="rgb(222,178,2)" fg:x="47585" fg:w="205"/><text x="15.3530%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (187 samples, 0.06%)</title><rect x="15.1088%" y="373" width="0.0594%" height="15" fill="rgb(226,74,18)" fg:x="47603" fg:w="187"/><text x="15.3588%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (187 samples, 0.06%)</title><rect x="15.1088%" y="357" width="0.0594%" height="15" fill="rgb(225,67,54)" fg:x="47603" fg:w="187"/><text x="15.3588%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (187 samples, 0.06%)</title><rect x="15.1088%" y="341" width="0.0594%" height="15" fill="rgb(251,92,32)" fg:x="47603" fg:w="187"/><text x="15.3588%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (168 samples, 0.05%)</title><rect x="15.1148%" y="325" width="0.0533%" height="15" fill="rgb(228,149,22)" fg:x="47622" fg:w="168"/><text x="15.3648%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (168 samples, 0.05%)</title><rect x="15.1148%" y="309" width="0.0533%" height="15" fill="rgb(243,54,13)" fg:x="47622" fg:w="168"/><text x="15.3648%" y="319.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (39 samples, 0.01%)</title><rect x="15.1706%" y="373" width="0.0124%" height="15" fill="rgb(243,180,28)" fg:x="47798" fg:w="39"/><text x="15.4206%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (39 samples, 0.01%)</title><rect x="15.1706%" y="357" width="0.0124%" height="15" fill="rgb(208,167,24)" fg:x="47798" fg:w="39"/><text x="15.4206%" y="367.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (39 samples, 0.01%)</title><rect x="15.1706%" y="341" width="0.0124%" height="15" fill="rgb(245,73,45)" fg:x="47798" fg:w="39"/><text x="15.4206%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (39 samples, 0.01%)</title><rect x="15.1706%" y="325" width="0.0124%" height="15" fill="rgb(237,203,48)" fg:x="47798" fg:w="39"/><text x="15.4206%" y="335.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (39 samples, 0.01%)</title><rect x="15.1706%" y="309" width="0.0124%" height="15" fill="rgb(211,197,16)" fg:x="47798" fg:w="39"/><text x="15.4206%" y="319.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (39 samples, 0.01%)</title><rect x="15.1706%" y="293" width="0.0124%" height="15" fill="rgb(243,99,51)" fg:x="47798" fg:w="39"/><text x="15.4206%" y="303.50"></text></g><g><title>alloc::slice::hack::to_vec (39 samples, 0.01%)</title><rect x="15.1706%" y="277" width="0.0124%" height="15" fill="rgb(215,123,29)" fg:x="47798" fg:w="39"/><text x="15.4206%" y="287.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (39 samples, 0.01%)</title><rect x="15.1706%" y="261" width="0.0124%" height="15" fill="rgb(239,186,37)" fg:x="47798" fg:w="39"/><text x="15.4206%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (37 samples, 0.01%)</title><rect x="15.1840%" y="357" width="0.0117%" height="15" fill="rgb(252,136,39)" fg:x="47840" fg:w="37"/><text x="15.4340%" y="367.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (258 samples, 0.08%)</title><rect x="15.2030%" y="293" width="0.0819%" height="15" fill="rgb(223,213,32)" fg:x="47900" fg:w="258"/><text x="15.4530%" y="303.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (258 samples, 0.08%)</title><rect x="15.2030%" y="277" width="0.0819%" height="15" fill="rgb(233,115,5)" fg:x="47900" fg:w="258"/><text x="15.4530%" y="287.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (32 samples, 0.01%)</title><rect x="15.2878%" y="261" width="0.0102%" height="15" fill="rgb(207,226,44)" fg:x="48167" fg:w="32"/><text x="15.5378%" y="271.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (38 samples, 0.01%)</title><rect x="15.2862%" y="277" width="0.0121%" height="15" fill="rgb(208,126,0)" fg:x="48162" fg:w="38"/><text x="15.5362%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (336 samples, 0.11%)</title><rect x="15.1957%" y="309" width="0.1066%" height="15" fill="rgb(244,66,21)" fg:x="47877" fg:w="336"/><text x="15.4457%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (55 samples, 0.02%)</title><rect x="15.2849%" y="293" width="0.0175%" height="15" fill="rgb(222,97,12)" fg:x="48158" fg:w="55"/><text x="15.5349%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (37 samples, 0.01%)</title><rect x="15.3122%" y="213" width="0.0117%" height="15" fill="rgb(219,213,19)" fg:x="48244" fg:w="37"/><text x="15.5622%" y="223.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (39 samples, 0.01%)</title><rect x="15.3122%" y="261" width="0.0124%" height="15" fill="rgb(252,169,30)" fg:x="48244" fg:w="39"/><text x="15.5622%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (39 samples, 0.01%)</title><rect x="15.3122%" y="245" width="0.0124%" height="15" fill="rgb(206,32,51)" fg:x="48244" fg:w="39"/><text x="15.5622%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (39 samples, 0.01%)</title><rect x="15.3122%" y="229" width="0.0124%" height="15" fill="rgb(250,172,42)" fg:x="48244" fg:w="39"/><text x="15.5622%" y="239.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (726 samples, 0.23%)</title><rect x="15.3246%" y="213" width="0.2304%" height="15" fill="rgb(209,34,43)" fg:x="48283" fg:w="726"/><text x="15.5746%" y="223.50"></text></g><g><title>__memcmp_avx2_movbe (358 samples, 0.11%)</title><rect x="15.4414%" y="197" width="0.1136%" height="15" fill="rgb(223,11,35)" fg:x="48651" fg:w="358"/><text x="15.6914%" y="207.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (775 samples, 0.25%)</title><rect x="15.3122%" y="277" width="0.2460%" height="15" fill="rgb(251,219,26)" fg:x="48244" fg:w="775"/><text x="15.5622%" y="287.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (736 samples, 0.23%)</title><rect x="15.3246%" y="261" width="0.2336%" height="15" fill="rgb(231,119,3)" fg:x="48283" fg:w="736"/><text x="15.5746%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (736 samples, 0.23%)</title><rect x="15.3246%" y="245" width="0.2336%" height="15" fill="rgb(216,97,11)" fg:x="48283" fg:w="736"/><text x="15.5746%" y="255.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (736 samples, 0.23%)</title><rect x="15.3246%" y="229" width="0.2336%" height="15" fill="rgb(223,59,9)" fg:x="48283" fg:w="736"/><text x="15.5746%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (456 samples, 0.14%)</title><rect x="15.5655%" y="229" width="0.1447%" height="15" fill="rgb(233,93,31)" fg:x="49042" fg:w="456"/><text x="15.8155%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (456 samples, 0.14%)</title><rect x="15.5655%" y="213" width="0.1447%" height="15" fill="rgb(239,81,33)" fg:x="49042" fg:w="456"/><text x="15.8155%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (456 samples, 0.14%)</title><rect x="15.5655%" y="197" width="0.1447%" height="15" fill="rgb(213,120,34)" fg:x="49042" fg:w="456"/><text x="15.8155%" y="207.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,626 samples, 0.52%)</title><rect x="15.1957%" y="357" width="0.5161%" height="15" fill="rgb(243,49,53)" fg:x="47877" fg:w="1626"/><text x="15.4457%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,626 samples, 0.52%)</title><rect x="15.1957%" y="341" width="0.5161%" height="15" fill="rgb(247,216,33)" fg:x="47877" fg:w="1626"/><text x="15.4457%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,626 samples, 0.52%)</title><rect x="15.1957%" y="325" width="0.5161%" height="15" fill="rgb(226,26,14)" fg:x="47877" fg:w="1626"/><text x="15.4457%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,290 samples, 0.41%)</title><rect x="15.3024%" y="309" width="0.4094%" height="15" fill="rgb(215,49,53)" fg:x="48213" fg:w="1290"/><text x="15.5524%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,285 samples, 0.41%)</title><rect x="15.3039%" y="293" width="0.4078%" height="15" fill="rgb(245,162,40)" fg:x="48218" fg:w="1285"/><text x="15.5539%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (481 samples, 0.15%)</title><rect x="15.5591%" y="277" width="0.1527%" height="15" fill="rgb(229,68,17)" fg:x="49022" fg:w="481"/><text x="15.8091%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (481 samples, 0.15%)</title><rect x="15.5591%" y="261" width="0.1527%" height="15" fill="rgb(213,182,10)" fg:x="49022" fg:w="481"/><text x="15.8091%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (481 samples, 0.15%)</title><rect x="15.5591%" y="245" width="0.1527%" height="15" fill="rgb(245,125,30)" fg:x="49022" fg:w="481"/><text x="15.8091%" y="255.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::try_set_dirty (1,665 samples, 0.53%)</title><rect x="15.1837%" y="373" width="0.5285%" height="15" fill="rgb(232,202,2)" fg:x="47839" fg:w="1665"/><text x="15.4337%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (58 samples, 0.02%)</title><rect x="15.7229%" y="341" width="0.0184%" height="15" fill="rgb(237,140,51)" fg:x="49538" fg:w="58"/><text x="15.9729%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (58 samples, 0.02%)</title><rect x="15.7229%" y="325" width="0.0184%" height="15" fill="rgb(236,157,25)" fg:x="49538" fg:w="58"/><text x="15.9729%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (58 samples, 0.02%)</title><rect x="15.7229%" y="309" width="0.0184%" height="15" fill="rgb(219,209,0)" fg:x="49538" fg:w="58"/><text x="15.9729%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (58 samples, 0.02%)</title><rect x="15.7229%" y="293" width="0.0184%" height="15" fill="rgb(240,116,54)" fg:x="49538" fg:w="58"/><text x="15.9729%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (58 samples, 0.02%)</title><rect x="15.7229%" y="277" width="0.0184%" height="15" fill="rgb(216,10,36)" fg:x="49538" fg:w="58"/><text x="15.9729%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (58 samples, 0.02%)</title><rect x="15.7229%" y="261" width="0.0184%" height="15" fill="rgb(222,72,44)" fg:x="49538" fg:w="58"/><text x="15.9729%" y="271.50"></text></g><g><title>__rdl_dealloc (58 samples, 0.02%)</title><rect x="15.7229%" y="245" width="0.0184%" height="15" fill="rgb(232,159,9)" fg:x="49538" fg:w="58"/><text x="15.9729%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (49 samples, 0.02%)</title><rect x="15.7258%" y="229" width="0.0156%" height="15" fill="rgb(210,39,32)" fg:x="49547" fg:w="49"/><text x="15.9758%" y="239.50"></text></g><g><title>__GI___libc_free (49 samples, 0.02%)</title><rect x="15.7258%" y="213" width="0.0156%" height="15" fill="rgb(216,194,45)" fg:x="49547" fg:w="49"/><text x="15.9758%" y="223.50"></text></g><g><title>_int_free (36 samples, 0.01%)</title><rect x="15.7299%" y="197" width="0.0114%" height="15" fill="rgb(218,18,35)" fg:x="49560" fg:w="36"/><text x="15.9799%" y="207.50"></text></g><g><title>hashbrown::map::make_insert_hash (88 samples, 0.03%)</title><rect x="15.7413%" y="341" width="0.0279%" height="15" fill="rgb(207,83,51)" fg:x="49596" fg:w="88"/><text x="15.9913%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (64 samples, 0.02%)</title><rect x="15.7489%" y="325" width="0.0203%" height="15" fill="rgb(225,63,43)" fg:x="49620" fg:w="64"/><text x="15.9989%" y="335.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (52 samples, 0.02%)</title><rect x="15.7527%" y="309" width="0.0165%" height="15" fill="rgb(207,57,36)" fg:x="49632" fg:w="52"/><text x="16.0027%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (55 samples, 0.02%)</title><rect x="15.7816%" y="229" width="0.0175%" height="15" fill="rgb(216,99,33)" fg:x="49723" fg:w="55"/><text x="16.0316%" y="239.50"></text></g><g><title>__memcmp_avx2_movbe (34 samples, 0.01%)</title><rect x="15.7883%" y="213" width="0.0108%" height="15" fill="rgb(225,42,16)" fg:x="49744" fg:w="34"/><text x="16.0383%" y="223.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (62 samples, 0.02%)</title><rect x="15.7807%" y="309" width="0.0197%" height="15" fill="rgb(220,201,45)" fg:x="49720" fg:w="62"/><text x="16.0307%" y="319.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (62 samples, 0.02%)</title><rect x="15.7807%" y="293" width="0.0197%" height="15" fill="rgb(225,33,4)" fg:x="49720" fg:w="62"/><text x="16.0307%" y="303.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (59 samples, 0.02%)</title><rect x="15.7816%" y="277" width="0.0187%" height="15" fill="rgb(224,33,50)" fg:x="49723" fg:w="59"/><text x="16.0316%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (59 samples, 0.02%)</title><rect x="15.7816%" y="261" width="0.0187%" height="15" fill="rgb(246,198,51)" fg:x="49723" fg:w="59"/><text x="16.0316%" y="271.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (59 samples, 0.02%)</title><rect x="15.7816%" y="245" width="0.0187%" height="15" fill="rgb(205,22,4)" fg:x="49723" fg:w="59"/><text x="16.0316%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (111 samples, 0.04%)</title><rect x="15.7692%" y="341" width="0.0352%" height="15" fill="rgb(206,3,8)" fg:x="49684" fg:w="111"/><text x="16.0192%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (109 samples, 0.03%)</title><rect x="15.7699%" y="325" width="0.0346%" height="15" fill="rgb(251,23,15)" fg:x="49686" fg:w="109"/><text x="16.0199%" y="335.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (2,005 samples, 0.64%)</title><rect x="15.1691%" y="389" width="0.6364%" height="15" fill="rgb(252,88,28)" fg:x="47793" fg:w="2005"/><text x="15.4191%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (294 samples, 0.09%)</title><rect x="15.7121%" y="373" width="0.0933%" height="15" fill="rgb(212,127,14)" fg:x="49504" fg:w="294"/><text x="15.9621%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (281 samples, 0.09%)</title><rect x="15.7162%" y="357" width="0.0892%" height="15" fill="rgb(247,145,37)" fg:x="49517" fg:w="281"/><text x="15.9662%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (69 samples, 0.02%)</title><rect x="15.8064%" y="389" width="0.0219%" height="15" fill="rgb(209,117,53)" fg:x="49801" fg:w="69"/><text x="16.0564%" y="399.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (2,980 samples, 0.95%)</title><rect x="14.8831%" y="421" width="0.9458%" height="15" fill="rgb(212,90,42)" fg:x="46892" fg:w="2980"/><text x="15.1331%" y="431.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (2,894 samples, 0.92%)</title><rect x="14.9104%" y="405" width="0.9185%" height="15" fill="rgb(218,164,37)" fg:x="46978" fg:w="2894"/><text x="15.1604%" y="415.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (2,982 samples, 0.95%)</title><rect x="14.8831%" y="437" width="0.9465%" height="15" fill="rgb(246,65,34)" fg:x="46892" fg:w="2982"/><text x="15.1331%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;bevy_render::render_graph::command::Command&gt;&gt;&gt; (149 samples, 0.05%)</title><rect x="15.8489%" y="389" width="0.0473%" height="15" fill="rgb(231,100,33)" fg:x="49935" fg:w="149"/><text x="16.0989%" y="399.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (149 samples, 0.05%)</title><rect x="15.8489%" y="373" width="0.0473%" height="15" fill="rgb(228,126,14)" fg:x="49935" fg:w="149"/><text x="16.0989%" y="383.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (149 samples, 0.05%)</title><rect x="15.8489%" y="357" width="0.0473%" height="15" fill="rgb(215,173,21)" fg:x="49935" fg:w="149"/><text x="16.0989%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (149 samples, 0.05%)</title><rect x="15.8489%" y="341" width="0.0473%" height="15" fill="rgb(210,6,40)" fg:x="49935" fg:w="149"/><text x="16.0989%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (149 samples, 0.05%)</title><rect x="15.8489%" y="325" width="0.0473%" height="15" fill="rgb(212,48,18)" fg:x="49935" fg:w="149"/><text x="16.0989%" y="335.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::copy_staging_buffer_to_final_buffers (287 samples, 0.09%)</title><rect x="15.8330%" y="437" width="0.0911%" height="15" fill="rgb(230,214,11)" fg:x="49885" fg:w="287"/><text x="16.0830%" y="447.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (269 samples, 0.09%)</title><rect x="15.8388%" y="421" width="0.0854%" height="15" fill="rgb(254,105,39)" fg:x="49903" fg:w="269"/><text x="16.0888%" y="431.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::push (259 samples, 0.08%)</title><rect x="15.8419%" y="405" width="0.0822%" height="15" fill="rgb(245,158,5)" fg:x="49913" fg:w="259"/><text x="16.0919%" y="415.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (88 samples, 0.03%)</title><rect x="15.8962%" y="389" width="0.0279%" height="15" fill="rgb(249,208,11)" fg:x="50084" fg:w="88"/><text x="16.1462%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (88 samples, 0.03%)</title><rect x="15.8962%" y="373" width="0.0279%" height="15" fill="rgb(210,39,28)" fg:x="50084" fg:w="88"/><text x="16.1462%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (87 samples, 0.03%)</title><rect x="15.8965%" y="357" width="0.0276%" height="15" fill="rgb(211,56,53)" fg:x="50085" fg:w="87"/><text x="16.1465%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (87 samples, 0.03%)</title><rect x="15.8965%" y="341" width="0.0276%" height="15" fill="rgb(226,201,30)" fg:x="50085" fg:w="87"/><text x="16.1465%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (145 samples, 0.05%)</title><rect x="15.9549%" y="325" width="0.0460%" height="15" fill="rgb(239,101,34)" fg:x="50269" fg:w="145"/><text x="16.2049%" y="335.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (142 samples, 0.05%)</title><rect x="15.9559%" y="309" width="0.0451%" height="15" fill="rgb(226,209,5)" fg:x="50272" fg:w="142"/><text x="16.2059%" y="319.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (268 samples, 0.09%)</title><rect x="15.9244%" y="437" width="0.0851%" height="15" fill="rgb(250,105,47)" fg:x="50173" fg:w="268"/><text x="16.1744%" y="447.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_or_assign_index (239 samples, 0.08%)</title><rect x="15.9337%" y="421" width="0.0759%" height="15" fill="rgb(230,72,3)" fg:x="50202" fg:w="239"/><text x="16.1837%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (236 samples, 0.07%)</title><rect x="15.9346%" y="405" width="0.0749%" height="15" fill="rgb(232,218,39)" fg:x="50205" fg:w="236"/><text x="16.1846%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (236 samples, 0.07%)</title><rect x="15.9346%" y="389" width="0.0749%" height="15" fill="rgb(248,166,6)" fg:x="50205" fg:w="236"/><text x="16.1846%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (236 samples, 0.07%)</title><rect x="15.9346%" y="373" width="0.0749%" height="15" fill="rgb(247,89,20)" fg:x="50205" fg:w="236"/><text x="16.1846%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (205 samples, 0.07%)</title><rect x="15.9444%" y="357" width="0.0651%" height="15" fill="rgb(248,130,54)" fg:x="50236" fg:w="205"/><text x="16.1944%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (201 samples, 0.06%)</title><rect x="15.9457%" y="341" width="0.0638%" height="15" fill="rgb(234,196,4)" fg:x="50240" fg:w="201"/><text x="16.1957%" y="351.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (3,670 samples, 1.16%)</title><rect x="14.8510%" y="453" width="1.1648%" height="15" fill="rgb(250,143,31)" fg:x="46791" fg:w="3670"/><text x="15.1010%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (4,764 samples, 1.51%)</title><rect x="14.5067%" y="501" width="1.5120%" height="15" fill="rgb(211,110,34)" fg:x="45706" fg:w="4764"/><text x="14.7567%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4,760 samples, 1.51%)</title><rect x="14.5079%" y="485" width="1.5108%" height="15" fill="rgb(215,124,48)" fg:x="45710" fg:w="4760"/><text x="14.7579%" y="495.50"></text></g><g><title>core::ops::function::Fn::call (4,760 samples, 1.51%)</title><rect x="14.5079%" y="469" width="1.5108%" height="15" fill="rgb(216,46,13)" fg:x="45710" fg:w="4760"/><text x="14.7579%" y="479.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (53 samples, 0.02%)</title><rect x="16.0241%" y="437" width="0.0168%" height="15" fill="rgb(205,184,25)" fg:x="50487" fg:w="53"/><text x="16.2741%" y="447.50"></text></g><g><title>wgpu::Device::poll (45 samples, 0.01%)</title><rect x="16.0266%" y="421" width="0.0143%" height="15" fill="rgb(228,1,10)" fg:x="50495" fg:w="45"/><text x="16.2766%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (45 samples, 0.01%)</title><rect x="16.0266%" y="405" width="0.0143%" height="15" fill="rgb(213,116,27)" fg:x="50495" fg:w="45"/><text x="16.2766%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (45 samples, 0.01%)</title><rect x="16.0266%" y="389" width="0.0143%" height="15" fill="rgb(241,95,50)" fg:x="50495" fg:w="45"/><text x="16.2766%" y="399.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (44 samples, 0.01%)</title><rect x="16.0270%" y="373" width="0.0140%" height="15" fill="rgb(238,48,32)" fg:x="50496" fg:w="44"/><text x="16.2770%" y="383.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer (34 samples, 0.01%)</title><rect x="16.0428%" y="389" width="0.0108%" height="15" fill="rgb(235,113,49)" fg:x="50546" fg:w="34"/><text x="16.2928%" y="399.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system::{{closure}} (38 samples, 0.01%)</title><rect x="16.0428%" y="421" width="0.0121%" height="15" fill="rgb(205,127,43)" fg:x="50546" fg:w="38"/><text x="16.2928%" y="431.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (38 samples, 0.01%)</title><rect x="16.0428%" y="405" width="0.0121%" height="15" fill="rgb(250,162,2)" fg:x="50546" fg:w="38"/><text x="16.2928%" y="415.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (41 samples, 0.01%)</title><rect x="16.0428%" y="437" width="0.0130%" height="15" fill="rgb(220,13,41)" fg:x="50546" fg:w="41"/><text x="16.2928%" y="447.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (94 samples, 0.03%)</title><rect x="16.0685%" y="325" width="0.0298%" height="15" fill="rgb(249,221,25)" fg:x="50627" fg:w="94"/><text x="16.3185%" y="335.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (101 samples, 0.03%)</title><rect x="16.0685%" y="341" width="0.0321%" height="15" fill="rgb(215,208,19)" fg:x="50627" fg:w="101"/><text x="16.3185%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (119 samples, 0.04%)</title><rect x="16.0654%" y="405" width="0.0378%" height="15" fill="rgb(236,175,2)" fg:x="50617" fg:w="119"/><text x="16.3154%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (119 samples, 0.04%)</title><rect x="16.0654%" y="389" width="0.0378%" height="15" fill="rgb(241,52,2)" fg:x="50617" fg:w="119"/><text x="16.3154%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (112 samples, 0.04%)</title><rect x="16.0676%" y="373" width="0.0355%" height="15" fill="rgb(248,140,14)" fg:x="50624" fg:w="112"/><text x="16.3176%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (112 samples, 0.04%)</title><rect x="16.0676%" y="357" width="0.0355%" height="15" fill="rgb(253,22,42)" fg:x="50624" fg:w="112"/><text x="16.3176%" y="367.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (132 samples, 0.04%)</title><rect x="16.0616%" y="437" width="0.0419%" height="15" fill="rgb(234,61,47)" fg:x="50605" fg:w="132"/><text x="16.3116%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (120 samples, 0.04%)</title><rect x="16.0654%" y="421" width="0.0381%" height="15" fill="rgb(208,226,15)" fg:x="50617" fg:w="120"/><text x="16.3154%" y="431.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (50 samples, 0.02%)</title><rect x="16.1108%" y="421" width="0.0159%" height="15" fill="rgb(217,221,4)" fg:x="50760" fg:w="50"/><text x="16.3608%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (69 samples, 0.02%)</title><rect x="16.1390%" y="197" width="0.0219%" height="15" fill="rgb(212,174,34)" fg:x="50849" fg:w="69"/><text x="16.3890%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (69 samples, 0.02%)</title><rect x="16.1390%" y="181" width="0.0219%" height="15" fill="rgb(253,83,4)" fg:x="50849" fg:w="69"/><text x="16.3890%" y="191.50"></text></g><g><title>alloc::alloc::realloc (68 samples, 0.02%)</title><rect x="16.1393%" y="165" width="0.0216%" height="15" fill="rgb(250,195,49)" fg:x="50850" fg:w="68"/><text x="16.3893%" y="175.50"></text></g><g><title>__rdl_realloc (68 samples, 0.02%)</title><rect x="16.1393%" y="149" width="0.0216%" height="15" fill="rgb(241,192,25)" fg:x="50850" fg:w="68"/><text x="16.3893%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (68 samples, 0.02%)</title><rect x="16.1393%" y="133" width="0.0216%" height="15" fill="rgb(208,124,10)" fg:x="50850" fg:w="68"/><text x="16.3893%" y="143.50"></text></g><g><title>__GI___libc_realloc (68 samples, 0.02%)</title><rect x="16.1393%" y="117" width="0.0216%" height="15" fill="rgb(222,33,0)" fg:x="50850" fg:w="68"/><text x="16.3893%" y="127.50"></text></g><g><title>_int_realloc (38 samples, 0.01%)</title><rect x="16.1488%" y="101" width="0.0121%" height="15" fill="rgb(234,209,28)" fg:x="50880" fg:w="38"/><text x="16.3988%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (85 samples, 0.03%)</title><rect x="16.1384%" y="213" width="0.0270%" height="15" fill="rgb(224,11,23)" fg:x="50847" fg:w="85"/><text x="16.3884%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (105 samples, 0.03%)</title><rect x="16.1323%" y="277" width="0.0333%" height="15" fill="rgb(232,99,1)" fg:x="50828" fg:w="105"/><text x="16.3823%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (105 samples, 0.03%)</title><rect x="16.1323%" y="261" width="0.0333%" height="15" fill="rgb(237,95,45)" fg:x="50828" fg:w="105"/><text x="16.3823%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (102 samples, 0.03%)</title><rect x="16.1333%" y="245" width="0.0324%" height="15" fill="rgb(208,109,11)" fg:x="50831" fg:w="102"/><text x="16.3833%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (102 samples, 0.03%)</title><rect x="16.1333%" y="229" width="0.0324%" height="15" fill="rgb(216,190,48)" fg:x="50831" fg:w="102"/><text x="16.3833%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (119 samples, 0.04%)</title><rect x="16.1311%" y="373" width="0.0378%" height="15" fill="rgb(251,171,36)" fg:x="50824" fg:w="119"/><text x="16.3811%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (118 samples, 0.04%)</title><rect x="16.1314%" y="357" width="0.0375%" height="15" fill="rgb(230,62,22)" fg:x="50825" fg:w="118"/><text x="16.3814%" y="367.50"></text></g><g><title>alloc::string::String::push_str (118 samples, 0.04%)</title><rect x="16.1314%" y="341" width="0.0375%" height="15" fill="rgb(225,114,35)" fg:x="50825" fg:w="118"/><text x="16.3814%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (118 samples, 0.04%)</title><rect x="16.1314%" y="325" width="0.0375%" height="15" fill="rgb(215,118,42)" fg:x="50825" fg:w="118"/><text x="16.3814%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (118 samples, 0.04%)</title><rect x="16.1314%" y="309" width="0.0375%" height="15" fill="rgb(243,119,21)" fg:x="50825" fg:w="118"/><text x="16.3814%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (117 samples, 0.04%)</title><rect x="16.1317%" y="293" width="0.0371%" height="15" fill="rgb(252,177,53)" fg:x="50826" fg:w="117"/><text x="16.3817%" y="303.50"></text></g><g><title>alloc::fmt::format (136 samples, 0.04%)</title><rect x="16.1266%" y="421" width="0.0432%" height="15" fill="rgb(237,209,29)" fg:x="50810" fg:w="136"/><text x="16.3766%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (130 samples, 0.04%)</title><rect x="16.1285%" y="405" width="0.0413%" height="15" fill="rgb(212,65,23)" fg:x="50816" fg:w="130"/><text x="16.3785%" y="415.50"></text></g><g><title>core::fmt::write (127 samples, 0.04%)</title><rect x="16.1295%" y="389" width="0.0403%" height="15" fill="rgb(230,222,46)" fg:x="50819" fg:w="127"/><text x="16.3795%" y="399.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (230 samples, 0.07%)</title><rect x="16.1044%" y="437" width="0.0730%" height="15" fill="rgb(215,135,32)" fg:x="50740" fg:w="230"/><text x="16.3544%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (94 samples, 0.03%)</title><rect x="16.1936%" y="389" width="0.0298%" height="15" fill="rgb(246,101,22)" fg:x="51021" fg:w="94"/><text x="16.4436%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (88 samples, 0.03%)</title><rect x="16.1955%" y="373" width="0.0279%" height="15" fill="rgb(206,107,13)" fg:x="51027" fg:w="88"/><text x="16.4455%" y="383.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (88 samples, 0.03%)</title><rect x="16.1955%" y="357" width="0.0279%" height="15" fill="rgb(250,100,44)" fg:x="51027" fg:w="88"/><text x="16.4455%" y="367.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (88 samples, 0.03%)</title><rect x="16.1955%" y="341" width="0.0279%" height="15" fill="rgb(231,147,38)" fg:x="51027" fg:w="88"/><text x="16.4455%" y="351.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (121 samples, 0.04%)</title><rect x="16.1853%" y="405" width="0.0384%" height="15" fill="rgb(229,8,40)" fg:x="50995" fg:w="121"/><text x="16.4353%" y="415.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (147 samples, 0.05%)</title><rect x="16.1774%" y="437" width="0.0467%" height="15" fill="rgb(221,135,30)" fg:x="50970" fg:w="147"/><text x="16.4274%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (142 samples, 0.05%)</title><rect x="16.1790%" y="421" width="0.0451%" height="15" fill="rgb(249,193,18)" fg:x="50975" fg:w="142"/><text x="16.4290%" y="431.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (648 samples, 0.21%)</title><rect x="16.0193%" y="501" width="0.2057%" height="15" fill="rgb(209,133,39)" fg:x="50472" fg:w="648"/><text x="16.2693%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (647 samples, 0.21%)</title><rect x="16.0197%" y="485" width="0.2054%" height="15" fill="rgb(232,100,14)" fg:x="50473" fg:w="647"/><text x="16.2697%" y="495.50"></text></g><g><title>core::ops::function::Fn::call (647 samples, 0.21%)</title><rect x="16.0197%" y="469" width="0.2054%" height="15" fill="rgb(224,185,1)" fg:x="50473" fg:w="647"/><text x="16.2697%" y="479.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (647 samples, 0.21%)</title><rect x="16.0197%" y="453" width="0.2054%" height="15" fill="rgb(223,139,8)" fg:x="50473" fg:w="647"/><text x="16.2697%" y="463.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (44,842 samples, 14.23%)</title><rect x="2.0040%" y="517" width="14.2324%" height="15" fill="rgb(232,213,38)" fg:x="6314" fg:w="44842"/><text x="2.2540%" y="527.50">&lt;bevy_ecs::system::int..</text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (37 samples, 0.01%)</title><rect x="16.2399%" y="469" width="0.0117%" height="15" fill="rgb(207,94,22)" fg:x="51167" fg:w="37"/><text x="16.4899%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (38 samples, 0.01%)</title><rect x="16.2399%" y="517" width="0.0121%" height="15" fill="rgb(219,183,54)" fg:x="51167" fg:w="38"/><text x="16.4899%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (38 samples, 0.01%)</title><rect x="16.2399%" y="501" width="0.0121%" height="15" fill="rgb(216,185,54)" fg:x="51167" fg:w="38"/><text x="16.4899%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (38 samples, 0.01%)</title><rect x="16.2399%" y="485" width="0.0121%" height="15" fill="rgb(254,217,39)" fg:x="51167" fg:w="38"/><text x="16.4899%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45,267 samples, 14.37%)</title><rect x="1.8923%" y="549" width="14.3673%" height="15" fill="rgb(240,178,23)" fg:x="5962" fg:w="45267"/><text x="2.1423%" y="559.50">&lt;core::future::from_ge..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (45,149 samples, 14.33%)</title><rect x="1.9297%" y="533" width="14.3299%" height="15" fill="rgb(218,11,47)" fg:x="6080" fg:w="45149"/><text x="2.1797%" y="543.50">bevy_ecs::schedule::ex..</text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.01%)</title><rect x="16.2606%" y="533" width="0.0133%" height="15" fill="rgb(218,51,51)" fg:x="51232" fg:w="42"/><text x="16.5106%" y="543.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (41 samples, 0.01%)</title><rect x="16.2609%" y="517" width="0.0130%" height="15" fill="rgb(238,126,27)" fg:x="51233" fg:w="41"/><text x="16.5109%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45,342 samples, 14.39%)</title><rect x="1.8878%" y="581" width="14.3911%" height="15" fill="rgb(249,202,22)" fg:x="5948" fg:w="45342"/><text x="2.1378%" y="591.50">&lt;core::future::from_ge..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (45,340 samples, 14.39%)</title><rect x="1.8885%" y="565" width="14.3905%" height="15" fill="rgb(254,195,49)" fg:x="5950" fg:w="45340"/><text x="2.1385%" y="575.50">async_executor::Execut..</text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (58 samples, 0.02%)</title><rect x="16.2606%" y="549" width="0.0184%" height="15" fill="rgb(208,123,14)" fg:x="51232" fg:w="58"/><text x="16.5106%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (32 samples, 0.01%)</title><rect x="16.2834%" y="533" width="0.0102%" height="15" fill="rgb(224,200,8)" fg:x="51304" fg:w="32"/><text x="16.5334%" y="543.50"></text></g><g><title>async_task::utils::abort_on_panic (41 samples, 0.01%)</title><rect x="16.2834%" y="581" width="0.0130%" height="15" fill="rgb(217,61,36)" fg:x="51304" fg:w="41"/><text x="16.5334%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (41 samples, 0.01%)</title><rect x="16.2834%" y="565" width="0.0130%" height="15" fill="rgb(206,35,45)" fg:x="51304" fg:w="41"/><text x="16.5334%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (41 samples, 0.01%)</title><rect x="16.2834%" y="549" width="0.0130%" height="15" fill="rgb(217,65,33)" fg:x="51304" fg:w="41"/><text x="16.5334%" y="559.50"></text></g><g><title>async_task::runnable::Runnable::run (45,451 samples, 14.43%)</title><rect x="1.8802%" y="613" width="14.4257%" height="15" fill="rgb(222,158,48)" fg:x="5924" fg:w="45451"/><text x="2.1302%" y="623.50">async_task::runnable::..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (45,434 samples, 14.42%)</title><rect x="1.8856%" y="597" width="14.4203%" height="15" fill="rgb(254,2,54)" fg:x="5941" fg:w="45434"/><text x="2.1356%" y="607.50">async_task::raw::RawTa..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45,992 samples, 14.60%)</title><rect x="1.7088%" y="693" width="14.5974%" height="15" fill="rgb(250,143,38)" fg:x="5384" fg:w="45992"/><text x="1.9588%" y="703.50">&lt;core::future::from_ge..</text></g><g><title>async_executor::Executor::run::{{closure}} (45,990 samples, 14.60%)</title><rect x="1.7095%" y="677" width="14.5968%" height="15" fill="rgb(248,25,0)" fg:x="5386" fg:w="45990"/><text x="1.9595%" y="687.50">async_executor::Execut..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (45,979 samples, 14.59%)</title><rect x="1.7130%" y="661" width="14.5933%" height="15" fill="rgb(206,152,27)" fg:x="5397" fg:w="45979"/><text x="1.9630%" y="671.50">&lt;futures_lite::future:..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45,881 samples, 14.56%)</title><rect x="1.7441%" y="645" width="14.5622%" height="15" fill="rgb(240,77,30)" fg:x="5495" fg:w="45881"/><text x="1.9941%" y="655.50">&lt;core::future::from_ge..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (45,880 samples, 14.56%)</title><rect x="1.7444%" y="629" width="14.5619%" height="15" fill="rgb(231,5,3)" fg:x="5496" fg:w="45880"/><text x="1.9944%" y="639.50">async_executor::Execut..</text></g><g><title>__futex_abstimed_wait_common64 (136 samples, 0.04%)</title><rect x="16.3393%" y="597" width="0.0432%" height="15" fill="rgb(207,226,32)" fg:x="51480" fg:w="136"/><text x="16.5893%" y="607.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (188 samples, 0.06%)</title><rect x="16.3266%" y="629" width="0.0597%" height="15" fill="rgb(222,207,47)" fg:x="51440" fg:w="188"/><text x="16.5766%" y="639.50"></text></g><g><title>__pthread_cond_wait (188 samples, 0.06%)</title><rect x="16.3266%" y="613" width="0.0597%" height="15" fill="rgb(229,115,45)" fg:x="51440" fg:w="188"/><text x="16.5766%" y="623.50"></text></g><g><title>std::sync::condvar::Condvar::wait (208 samples, 0.07%)</title><rect x="16.3215%" y="661" width="0.0660%" height="15" fill="rgb(224,191,6)" fg:x="51424" fg:w="208"/><text x="16.5715%" y="671.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (192 samples, 0.06%)</title><rect x="16.3266%" y="645" width="0.0609%" height="15" fill="rgb(230,227,24)" fg:x="51440" fg:w="192"/><text x="16.5766%" y="655.50"></text></g><g><title>std::panic::catch_unwind (46,256 samples, 14.68%)</title><rect x="1.7082%" y="869" width="14.6812%" height="15" fill="rgb(228,80,19)" fg:x="5382" fg:w="46256"/><text x="1.9582%" y="879.50">std::panic::catch_unwi..</text></g><g><title>std::panicking::try (46,256 samples, 14.68%)</title><rect x="1.7082%" y="853" width="14.6812%" height="15" fill="rgb(247,229,0)" fg:x="5382" fg:w="46256"/><text x="1.9582%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (46,256 samples, 14.68%)</title><rect x="1.7082%" y="837" width="14.6812%" height="15" fill="rgb(237,194,15)" fg:x="5382" fg:w="46256"/><text x="1.9582%" y="847.50">std::panicking::try::d..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (46,256 samples, 14.68%)</title><rect x="1.7082%" y="821" width="14.6812%" height="15" fill="rgb(219,203,20)" fg:x="5382" fg:w="46256"/><text x="1.9582%" y="831.50">&lt;core::panic::unwind_s..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (46,256 samples, 14.68%)</title><rect x="1.7082%" y="805" width="14.6812%" height="15" fill="rgb(234,128,8)" fg:x="5382" fg:w="46256"/><text x="1.9582%" y="815.50">std::thread::Builder::..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (46,256 samples, 14.68%)</title><rect x="1.7082%" y="789" width="14.6812%" height="15" fill="rgb(248,202,8)" fg:x="5382" fg:w="46256"/><text x="1.9582%" y="799.50">std::sys_common::backt..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (46,256 samples, 14.68%)</title><rect x="1.7082%" y="773" width="14.6812%" height="15" fill="rgb(206,104,37)" fg:x="5382" fg:w="46256"/><text x="1.9582%" y="783.50">bevy_tasks::task_pool:..</text></g><g><title>futures_lite::future::block_on (46,256 samples, 14.68%)</title><rect x="1.7082%" y="757" width="14.6812%" height="15" fill="rgb(223,8,27)" fg:x="5382" fg:w="46256"/><text x="1.9582%" y="767.50">futures_lite::future::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (46,256 samples, 14.68%)</title><rect x="1.7082%" y="741" width="14.6812%" height="15" fill="rgb(216,217,28)" fg:x="5382" fg:w="46256"/><text x="1.9582%" y="751.50">std::thread::local::Lo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (46,256 samples, 14.68%)</title><rect x="1.7082%" y="725" width="14.6812%" height="15" fill="rgb(249,199,1)" fg:x="5382" fg:w="46256"/><text x="1.9582%" y="735.50">std::thread::local::Lo..</text></g><g><title>futures_lite::future::block_on::{{closure}} (46,256 samples, 14.68%)</title><rect x="1.7082%" y="709" width="14.6812%" height="15" fill="rgb(240,85,17)" fg:x="5382" fg:w="46256"/><text x="1.9582%" y="719.50">futures_lite::future::..</text></g><g><title>parking::Parker::park (255 samples, 0.08%)</title><rect x="16.3085%" y="693" width="0.0809%" height="15" fill="rgb(206,108,45)" fg:x="51383" fg:w="255"/><text x="16.5585%" y="703.50"></text></g><g><title>parking::Inner::park (244 samples, 0.08%)</title><rect x="16.3120%" y="677" width="0.0774%" height="15" fill="rgb(245,210,41)" fg:x="51394" fg:w="244"/><text x="16.5620%" y="687.50"></text></g><g><title>__GI___clone (46,258 samples, 14.68%)</title><rect x="1.7082%" y="981" width="14.6819%" height="15" fill="rgb(206,13,37)" fg:x="5382" fg:w="46258"/><text x="1.9582%" y="991.50">__GI___clone</text></g><g><title>start_thread (46,258 samples, 14.68%)</title><rect x="1.7082%" y="965" width="14.6819%" height="15" fill="rgb(250,61,18)" fg:x="5382" fg:w="46258"/><text x="1.9582%" y="975.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (46,258 samples, 14.68%)</title><rect x="1.7082%" y="949" width="14.6819%" height="15" fill="rgb(235,172,48)" fg:x="5382" fg:w="46258"/><text x="1.9582%" y="959.50">std::sys::unix::thread..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (46,258 samples, 14.68%)</title><rect x="1.7082%" y="933" width="14.6819%" height="15" fill="rgb(249,201,17)" fg:x="5382" fg:w="46258"/><text x="1.9582%" y="943.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (46,258 samples, 14.68%)</title><rect x="1.7082%" y="917" width="14.6819%" height="15" fill="rgb(219,208,6)" fg:x="5382" fg:w="46258"/><text x="1.9582%" y="927.50">&lt;alloc::boxed::Box&lt;F,A..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (46,258 samples, 14.68%)</title><rect x="1.7082%" y="901" width="14.6819%" height="15" fill="rgb(248,31,23)" fg:x="5382" fg:w="46258"/><text x="1.9582%" y="911.50">core::ops::function::F..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (46,258 samples, 14.68%)</title><rect x="1.7082%" y="885" width="14.6819%" height="15" fill="rgb(245,15,42)" fg:x="5382" fg:w="46258"/><text x="1.9582%" y="895.50">std::thread::Builder::..</text></g><g><title>Compute_Task_Po (51,664 samples, 16.40%)</title><rect x="0.0006%" y="997" width="16.3977%" height="15" fill="rgb(222,217,39)" fg:x="2" fg:w="51664"/><text x="0.2506%" y="1007.50">Compute_Task_Po</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="16.4040%" y="549" width="0.0108%" height="15" fill="rgb(210,219,27)" fg:x="51684" fg:w="34"/><text x="16.6540%" y="559.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked::{{closure}} (34 samples, 0.01%)</title><rect x="16.4040%" y="533" width="0.0108%" height="15" fill="rgb(252,166,36)" fg:x="51684" fg:w="34"/><text x="16.6540%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.01%)</title><rect x="16.4040%" y="581" width="0.0127%" height="15" fill="rgb(245,132,34)" fg:x="51684" fg:w="40"/><text x="16.6540%" y="591.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (40 samples, 0.01%)</title><rect x="16.4040%" y="565" width="0.0127%" height="15" fill="rgb(236,54,3)" fg:x="51684" fg:w="40"/><text x="16.6540%" y="575.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (56 samples, 0.02%)</title><rect x="16.4015%" y="661" width="0.0178%" height="15" fill="rgb(241,173,43)" fg:x="51676" fg:w="56"/><text x="16.6515%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 0.02%)</title><rect x="16.4034%" y="645" width="0.0159%" height="15" fill="rgb(215,190,9)" fg:x="51682" fg:w="50"/><text x="16.6534%" y="655.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (50 samples, 0.02%)</title><rect x="16.4034%" y="629" width="0.0159%" height="15" fill="rgb(242,101,16)" fg:x="51682" fg:w="50"/><text x="16.6534%" y="639.50"></text></g><g><title>async_task::runnable::Runnable::run (48 samples, 0.02%)</title><rect x="16.4040%" y="613" width="0.0152%" height="15" fill="rgb(223,190,21)" fg:x="51684" fg:w="48"/><text x="16.6540%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (48 samples, 0.02%)</title><rect x="16.4040%" y="597" width="0.0152%" height="15" fill="rgb(215,228,25)" fg:x="51684" fg:w="48"/><text x="16.6540%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 0.02%)</title><rect x="16.4015%" y="693" width="0.0181%" height="15" fill="rgb(225,36,22)" fg:x="51676" fg:w="57"/><text x="16.6515%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (57 samples, 0.02%)</title><rect x="16.4015%" y="677" width="0.0181%" height="15" fill="rgb(251,106,46)" fg:x="51676" fg:w="57"/><text x="16.6515%" y="687.50"></text></g><g><title>IO_Task_Pool_(0 (73 samples, 0.02%)</title><rect x="16.3983%" y="997" width="0.0232%" height="15" fill="rgb(208,90,1)" fg:x="51666" fg:w="73"/><text x="16.6483%" y="1007.50"></text></g><g><title>__GI___clone (63 samples, 0.02%)</title><rect x="16.4015%" y="981" width="0.0200%" height="15" fill="rgb(243,10,4)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="991.50"></text></g><g><title>start_thread (63 samples, 0.02%)</title><rect x="16.4015%" y="965" width="0.0200%" height="15" fill="rgb(212,137,27)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="975.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (63 samples, 0.02%)</title><rect x="16.4015%" y="949" width="0.0200%" height="15" fill="rgb(231,220,49)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (63 samples, 0.02%)</title><rect x="16.4015%" y="933" width="0.0200%" height="15" fill="rgb(237,96,20)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (63 samples, 0.02%)</title><rect x="16.4015%" y="917" width="0.0200%" height="15" fill="rgb(239,229,30)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (63 samples, 0.02%)</title><rect x="16.4015%" y="901" width="0.0200%" height="15" fill="rgb(219,65,33)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="911.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (63 samples, 0.02%)</title><rect x="16.4015%" y="885" width="0.0200%" height="15" fill="rgb(243,134,7)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="895.50"></text></g><g><title>std::panic::catch_unwind (63 samples, 0.02%)</title><rect x="16.4015%" y="869" width="0.0200%" height="15" fill="rgb(216,177,54)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="879.50"></text></g><g><title>std::panicking::try (63 samples, 0.02%)</title><rect x="16.4015%" y="853" width="0.0200%" height="15" fill="rgb(211,160,20)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="863.50"></text></g><g><title>std::panicking::try::do_call (63 samples, 0.02%)</title><rect x="16.4015%" y="837" width="0.0200%" height="15" fill="rgb(239,85,39)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (63 samples, 0.02%)</title><rect x="16.4015%" y="821" width="0.0200%" height="15" fill="rgb(232,125,22)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (63 samples, 0.02%)</title><rect x="16.4015%" y="805" width="0.0200%" height="15" fill="rgb(244,57,34)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (63 samples, 0.02%)</title><rect x="16.4015%" y="789" width="0.0200%" height="15" fill="rgb(214,203,32)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (63 samples, 0.02%)</title><rect x="16.4015%" y="773" width="0.0200%" height="15" fill="rgb(207,58,43)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="783.50"></text></g><g><title>futures_lite::future::block_on (63 samples, 0.02%)</title><rect x="16.4015%" y="757" width="0.0200%" height="15" fill="rgb(215,193,15)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (63 samples, 0.02%)</title><rect x="16.4015%" y="741" width="0.0200%" height="15" fill="rgb(232,15,44)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (63 samples, 0.02%)</title><rect x="16.4015%" y="725" width="0.0200%" height="15" fill="rgb(212,3,48)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="735.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (63 samples, 0.02%)</title><rect x="16.4015%" y="709" width="0.0200%" height="15" fill="rgb(218,128,7)" fg:x="51676" fg:w="63"/><text x="16.6515%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.01%)</title><rect x="16.4256%" y="549" width="0.0149%" height="15" fill="rgb(226,216,39)" fg:x="51752" fg:w="47"/><text x="16.6756%" y="559.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked::{{closure}} (46 samples, 0.01%)</title><rect x="16.4259%" y="533" width="0.0146%" height="15" fill="rgb(243,47,51)" fg:x="51753" fg:w="46"/><text x="16.6759%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.02%)</title><rect x="16.4256%" y="581" width="0.0156%" height="15" fill="rgb(241,183,40)" fg:x="51752" fg:w="49"/><text x="16.6756%" y="591.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (49 samples, 0.02%)</title><rect x="16.4256%" y="565" width="0.0156%" height="15" fill="rgb(231,217,32)" fg:x="51752" fg:w="49"/><text x="16.6756%" y="575.50"></text></g><g><title>IO_Task_Pool_(1 (75 samples, 0.02%)</title><rect x="16.4215%" y="997" width="0.0238%" height="15" fill="rgb(229,61,38)" fg:x="51739" fg:w="75"/><text x="16.6715%" y="1007.50"></text></g><g><title>__GI___clone (64 samples, 0.02%)</title><rect x="16.4250%" y="981" width="0.0203%" height="15" fill="rgb(225,210,5)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="991.50"></text></g><g><title>start_thread (64 samples, 0.02%)</title><rect x="16.4250%" y="965" width="0.0203%" height="15" fill="rgb(231,79,45)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="975.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (64 samples, 0.02%)</title><rect x="16.4250%" y="949" width="0.0203%" height="15" fill="rgb(224,100,7)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (64 samples, 0.02%)</title><rect x="16.4250%" y="933" width="0.0203%" height="15" fill="rgb(241,198,18)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (64 samples, 0.02%)</title><rect x="16.4250%" y="917" width="0.0203%" height="15" fill="rgb(252,97,53)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (64 samples, 0.02%)</title><rect x="16.4250%" y="901" width="0.0203%" height="15" fill="rgb(220,88,7)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="911.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (64 samples, 0.02%)</title><rect x="16.4250%" y="885" width="0.0203%" height="15" fill="rgb(213,176,14)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="895.50"></text></g><g><title>std::panic::catch_unwind (64 samples, 0.02%)</title><rect x="16.4250%" y="869" width="0.0203%" height="15" fill="rgb(246,73,7)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="879.50"></text></g><g><title>std::panicking::try (64 samples, 0.02%)</title><rect x="16.4250%" y="853" width="0.0203%" height="15" fill="rgb(245,64,36)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="863.50"></text></g><g><title>std::panicking::try::do_call (64 samples, 0.02%)</title><rect x="16.4250%" y="837" width="0.0203%" height="15" fill="rgb(245,80,10)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (64 samples, 0.02%)</title><rect x="16.4250%" y="821" width="0.0203%" height="15" fill="rgb(232,107,50)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (64 samples, 0.02%)</title><rect x="16.4250%" y="805" width="0.0203%" height="15" fill="rgb(253,3,0)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (64 samples, 0.02%)</title><rect x="16.4250%" y="789" width="0.0203%" height="15" fill="rgb(212,99,53)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (64 samples, 0.02%)</title><rect x="16.4250%" y="773" width="0.0203%" height="15" fill="rgb(249,111,54)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="783.50"></text></g><g><title>futures_lite::future::block_on (64 samples, 0.02%)</title><rect x="16.4250%" y="757" width="0.0203%" height="15" fill="rgb(249,55,30)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (64 samples, 0.02%)</title><rect x="16.4250%" y="741" width="0.0203%" height="15" fill="rgb(237,47,42)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (64 samples, 0.02%)</title><rect x="16.4250%" y="725" width="0.0203%" height="15" fill="rgb(211,20,18)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="735.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (64 samples, 0.02%)</title><rect x="16.4250%" y="709" width="0.0203%" height="15" fill="rgb(231,203,46)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (64 samples, 0.02%)</title><rect x="16.4250%" y="693" width="0.0203%" height="15" fill="rgb(237,142,3)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (64 samples, 0.02%)</title><rect x="16.4250%" y="677" width="0.0203%" height="15" fill="rgb(241,107,1)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="687.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (64 samples, 0.02%)</title><rect x="16.4250%" y="661" width="0.0203%" height="15" fill="rgb(229,83,13)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (64 samples, 0.02%)</title><rect x="16.4250%" y="645" width="0.0203%" height="15" fill="rgb(241,91,40)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="655.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (64 samples, 0.02%)</title><rect x="16.4250%" y="629" width="0.0203%" height="15" fill="rgb(225,3,45)" fg:x="51750" fg:w="64"/><text x="16.6750%" y="639.50"></text></g><g><title>async_task::runnable::Runnable::run (62 samples, 0.02%)</title><rect x="16.4256%" y="613" width="0.0197%" height="15" fill="rgb(244,223,14)" fg:x="51752" fg:w="62"/><text x="16.6756%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (62 samples, 0.02%)</title><rect x="16.4256%" y="597" width="0.0197%" height="15" fill="rgb(224,124,37)" fg:x="51752" fg:w="62"/><text x="16.6756%" y="607.50"></text></g><g><title>[[heap]] (53 samples, 0.02%)</title><rect x="16.4573%" y="981" width="0.0168%" height="15" fill="rgb(251,171,30)" fg:x="51852" fg:w="53"/><text x="16.7073%" y="991.50"></text></g><g><title>[engine] (36 samples, 0.01%)</title><rect x="16.4837%" y="981" width="0.0114%" height="15" fill="rgb(236,46,54)" fg:x="51935" fg:w="36"/><text x="16.7337%" y="991.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="16.4837%" y="965" width="0.0114%" height="15" fill="rgb(245,213,5)" fg:x="51935" fg:w="36"/><text x="16.7337%" y="975.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.01%)</title><rect x="16.4967%" y="965" width="0.0140%" height="15" fill="rgb(230,144,27)" fg:x="51976" fg:w="44"/><text x="16.7467%" y="975.50"></text></g><g><title>[unknown] (74 samples, 0.02%)</title><rect x="16.4967%" y="981" width="0.0235%" height="15" fill="rgb(220,86,6)" fg:x="51976" fg:w="74"/><text x="16.7467%" y="991.50"></text></g><g><title>[libasound.so.2.0.0] (32 samples, 0.01%)</title><rect x="16.5253%" y="693" width="0.0102%" height="15" fill="rgb(240,20,13)" fg:x="52066" fg:w="32"/><text x="16.7753%" y="703.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (42 samples, 0.01%)</title><rect x="16.5234%" y="725" width="0.0133%" height="15" fill="rgb(217,89,34)" fg:x="52060" fg:w="42"/><text x="16.7734%" y="735.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (42 samples, 0.01%)</title><rect x="16.5234%" y="709" width="0.0133%" height="15" fill="rgb(229,13,5)" fg:x="52060" fg:w="42"/><text x="16.7734%" y="719.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (43 samples, 0.01%)</title><rect x="16.5405%" y="709" width="0.0136%" height="15" fill="rgb(244,67,35)" fg:x="52114" fg:w="43"/><text x="16.7905%" y="719.50"></text></g><g><title>snd_pcm_status (43 samples, 0.01%)</title><rect x="16.5405%" y="693" width="0.0136%" height="15" fill="rgb(221,40,2)" fg:x="52114" fg:w="43"/><text x="16.7905%" y="703.50"></text></g><g><title>[libasound.so.2.0.0] (41 samples, 0.01%)</title><rect x="16.5411%" y="677" width="0.0130%" height="15" fill="rgb(237,157,21)" fg:x="52116" fg:w="41"/><text x="16.7911%" y="687.50"></text></g><g><title>alsa::pcm::PCM::status (44 samples, 0.01%)</title><rect x="16.5405%" y="725" width="0.0140%" height="15" fill="rgb(222,94,11)" fg:x="52114" fg:w="44"/><text x="16.7905%" y="735.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (137 samples, 0.04%)</title><rect x="16.5205%" y="741" width="0.0435%" height="15" fill="rgb(249,113,6)" fg:x="52051" fg:w="137"/><text x="16.7705%" y="751.50"></text></g><g><title>[libasound.so.2.0.0] (45 samples, 0.01%)</title><rect x="16.5662%" y="677" width="0.0143%" height="15" fill="rgb(238,137,36)" fg:x="52195" fg:w="45"/><text x="16.8162%" y="687.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (42 samples, 0.01%)</title><rect x="16.5672%" y="661" width="0.0133%" height="15" fill="rgb(210,102,26)" fg:x="52198" fg:w="42"/><text x="16.8172%" y="671.50"></text></g><g><title>pa_stream_write (36 samples, 0.01%)</title><rect x="16.5691%" y="645" width="0.0114%" height="15" fill="rgb(218,30,30)" fg:x="52204" fg:w="36"/><text x="16.8191%" y="655.50"></text></g><g><title>pa_stream_write_ext_free (36 samples, 0.01%)</title><rect x="16.5691%" y="629" width="0.0114%" height="15" fill="rgb(214,67,26)" fg:x="52204" fg:w="36"/><text x="16.8191%" y="639.50"></text></g><g><title>[libasound.so.2.0.0] (51 samples, 0.02%)</title><rect x="16.5649%" y="693" width="0.0162%" height="15" fill="rgb(251,9,53)" fg:x="52191" fg:w="51"/><text x="16.8149%" y="703.50"></text></g><g><title>[libasound.so.2.0.0] (54 samples, 0.02%)</title><rect x="16.5646%" y="709" width="0.0171%" height="15" fill="rgb(228,204,25)" fg:x="52190" fg:w="54"/><text x="16.8146%" y="719.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (59 samples, 0.02%)</title><rect x="16.5643%" y="725" width="0.0187%" height="15" fill="rgb(207,153,8)" fg:x="52189" fg:w="59"/><text x="16.8143%" y="735.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.02%)</title><rect x="16.5992%" y="661" width="0.0216%" height="15" fill="rgb(242,9,16)" fg:x="52299" fg:w="68"/><text x="16.8492%" y="671.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (128 samples, 0.04%)</title><rect x="16.5862%" y="677" width="0.0406%" height="15" fill="rgb(217,211,10)" fg:x="52258" fg:w="128"/><text x="16.8362%" y="687.50"></text></g><g><title>__GI___clone (342 samples, 0.11%)</title><rect x="16.5202%" y="981" width="0.1085%" height="15" fill="rgb(219,228,52)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="991.50"></text></g><g><title>start_thread (342 samples, 0.11%)</title><rect x="16.5202%" y="965" width="0.1085%" height="15" fill="rgb(231,92,29)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="975.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (342 samples, 0.11%)</title><rect x="16.5202%" y="949" width="0.1085%" height="15" fill="rgb(232,8,23)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (342 samples, 0.11%)</title><rect x="16.5202%" y="933" width="0.1085%" height="15" fill="rgb(216,211,34)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (342 samples, 0.11%)</title><rect x="16.5202%" y="917" width="0.1085%" height="15" fill="rgb(236,151,0)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (342 samples, 0.11%)</title><rect x="16.5202%" y="901" width="0.1085%" height="15" fill="rgb(209,168,3)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="911.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (342 samples, 0.11%)</title><rect x="16.5202%" y="885" width="0.1085%" height="15" fill="rgb(208,129,28)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="895.50"></text></g><g><title>std::panic::catch_unwind (342 samples, 0.11%)</title><rect x="16.5202%" y="869" width="0.1085%" height="15" fill="rgb(229,78,22)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="879.50"></text></g><g><title>std::panicking::try (342 samples, 0.11%)</title><rect x="16.5202%" y="853" width="0.1085%" height="15" fill="rgb(228,187,13)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="863.50"></text></g><g><title>std::panicking::try::do_call (342 samples, 0.11%)</title><rect x="16.5202%" y="837" width="0.1085%" height="15" fill="rgb(240,119,24)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (342 samples, 0.11%)</title><rect x="16.5202%" y="821" width="0.1085%" height="15" fill="rgb(209,194,42)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (342 samples, 0.11%)</title><rect x="16.5202%" y="805" width="0.1085%" height="15" fill="rgb(247,200,46)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (342 samples, 0.11%)</title><rect x="16.5202%" y="789" width="0.1085%" height="15" fill="rgb(218,76,16)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="799.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (342 samples, 0.11%)</title><rect x="16.5202%" y="773" width="0.1085%" height="15" fill="rgb(225,21,48)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="783.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (342 samples, 0.11%)</title><rect x="16.5202%" y="757" width="0.1085%" height="15" fill="rgb(239,223,50)" fg:x="52050" fg:w="342"/><text x="16.7702%" y="767.50"></text></g><g><title>cpal::host::alsa::process_output (204 samples, 0.06%)</title><rect x="16.5640%" y="741" width="0.0647%" height="15" fill="rgb(244,45,21)" fg:x="52188" fg:w="204"/><text x="16.8140%" y="751.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (134 samples, 0.04%)</title><rect x="16.5862%" y="725" width="0.0425%" height="15" fill="rgb(232,33,43)" fg:x="52258" fg:w="134"/><text x="16.8362%" y="735.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (134 samples, 0.04%)</title><rect x="16.5862%" y="709" width="0.0425%" height="15" fill="rgb(209,8,3)" fg:x="52258" fg:w="134"/><text x="16.8362%" y="719.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (134 samples, 0.04%)</title><rect x="16.5862%" y="693" width="0.0425%" height="15" fill="rgb(214,25,53)" fg:x="52258" fg:w="134"/><text x="16.8362%" y="703.50"></text></g><g><title>cpal_alsa_out (586 samples, 0.19%)</title><rect x="16.4453%" y="997" width="0.1860%" height="15" fill="rgb(254,186,54)" fg:x="51814" fg:w="586"/><text x="16.6953%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="16.7252%" y="965" width="0.0108%" height="15" fill="rgb(208,174,49)" fg:x="52696" fg:w="34"/><text x="16.9752%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (160 samples, 0.05%)</title><rect x="16.7639%" y="965" width="0.0508%" height="15" fill="rgb(233,191,51)" fg:x="52818" fg:w="160"/><text x="17.0139%" y="975.50"></text></g><g><title>__GI___libc_free (124 samples, 0.04%)</title><rect x="16.8163%" y="965" width="0.0394%" height="15" fill="rgb(222,134,10)" fg:x="52983" fg:w="124"/><text x="17.0663%" y="975.50"></text></g><g><title>_int_free (493 samples, 0.16%)</title><rect x="16.8706%" y="965" width="0.1565%" height="15" fill="rgb(230,226,20)" fg:x="53154" fg:w="493"/><text x="17.1206%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (295 samples, 0.09%)</title><rect x="17.0369%" y="965" width="0.0936%" height="15" fill="rgb(251,111,25)" fg:x="53678" fg:w="295"/><text x="17.2869%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (196 samples, 0.06%)</title><rect x="17.0683%" y="949" width="0.0622%" height="15" fill="rgb(224,40,46)" fg:x="53777" fg:w="196"/><text x="17.3183%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (111 samples, 0.04%)</title><rect x="17.0953%" y="933" width="0.0352%" height="15" fill="rgb(236,108,47)" fg:x="53862" fg:w="111"/><text x="17.3453%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (111 samples, 0.04%)</title><rect x="17.0953%" y="917" width="0.0352%" height="15" fill="rgb(234,93,0)" fg:x="53862" fg:w="111"/><text x="17.3453%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (587 samples, 0.19%)</title><rect x="17.1337%" y="965" width="0.1863%" height="15" fill="rgb(224,213,32)" fg:x="53983" fg:w="587"/><text x="17.3837%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (83 samples, 0.03%)</title><rect x="17.2937%" y="949" width="0.0263%" height="15" fill="rgb(251,11,48)" fg:x="54487" fg:w="83"/><text x="17.5437%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (83 samples, 0.03%)</title><rect x="17.2937%" y="933" width="0.0263%" height="15" fill="rgb(236,173,5)" fg:x="54487" fg:w="83"/><text x="17.5437%" y="943.50"></text></g><g><title>alloc::alloc::realloc (83 samples, 0.03%)</title><rect x="17.2937%" y="917" width="0.0263%" height="15" fill="rgb(230,95,12)" fg:x="54487" fg:w="83"/><text x="17.5437%" y="927.50"></text></g><g><title>__rdl_realloc (83 samples, 0.03%)</title><rect x="17.2937%" y="901" width="0.0263%" height="15" fill="rgb(232,209,1)" fg:x="54487" fg:w="83"/><text x="17.5437%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (83 samples, 0.03%)</title><rect x="17.2937%" y="885" width="0.0263%" height="15" fill="rgb(232,6,1)" fg:x="54487" fg:w="83"/><text x="17.5437%" y="895.50"></text></g><g><title>async_executor::Executor::try_tick (235 samples, 0.07%)</title><rect x="17.3267%" y="965" width="0.0746%" height="15" fill="rgb(210,224,50)" fg:x="54591" fg:w="235"/><text x="17.5767%" y="975.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (220 samples, 0.07%)</title><rect x="17.4013%" y="965" width="0.0698%" height="15" fill="rgb(228,127,35)" fg:x="54826" fg:w="220"/><text x="17.6513%" y="975.50"></text></g><g><title>async_task::header::Header::register (92 samples, 0.03%)</title><rect x="17.4717%" y="965" width="0.0292%" height="15" fill="rgb(245,102,45)" fg:x="55048" fg:w="92"/><text x="17.7217%" y="975.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_and_forget_missing_unchecked (50 samples, 0.02%)</title><rect x="17.5105%" y="965" width="0.0159%" height="15" fill="rgb(214,1,49)" fg:x="55170" fg:w="50"/><text x="17.7605%" y="975.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (38 samples, 0.01%)</title><rect x="17.5143%" y="949" width="0.0121%" height="15" fill="rgb(226,163,40)" fg:x="55182" fg:w="38"/><text x="17.7643%" y="959.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (38 samples, 0.01%)</title><rect x="17.5143%" y="933" width="0.0121%" height="15" fill="rgb(239,212,28)" fg:x="55182" fg:w="38"/><text x="17.7643%" y="943.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (48 samples, 0.02%)</title><rect x="17.5974%" y="965" width="0.0152%" height="15" fill="rgb(220,20,13)" fg:x="55444" fg:w="48"/><text x="17.8474%" y="975.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (207 samples, 0.07%)</title><rect x="17.6434%" y="965" width="0.0657%" height="15" fill="rgb(210,164,35)" fg:x="55589" fg:w="207"/><text x="17.8934%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (32 samples, 0.01%)</title><rect x="17.7145%" y="965" width="0.0102%" height="15" fill="rgb(248,109,41)" fg:x="55813" fg:w="32"/><text x="17.9645%" y="975.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (46 samples, 0.01%)</title><rect x="17.7444%" y="965" width="0.0146%" height="15" fill="rgb(238,23,50)" fg:x="55907" fg:w="46"/><text x="17.9944%" y="975.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (78 samples, 0.02%)</title><rect x="17.7675%" y="949" width="0.0248%" height="15" fill="rgb(211,48,49)" fg:x="55980" fg:w="78"/><text x="18.0175%" y="959.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (78 samples, 0.02%)</title><rect x="17.7675%" y="933" width="0.0248%" height="15" fill="rgb(223,36,21)" fg:x="55980" fg:w="78"/><text x="18.0175%" y="943.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (78 samples, 0.02%)</title><rect x="17.7675%" y="917" width="0.0248%" height="15" fill="rgb(207,123,46)" fg:x="55980" fg:w="78"/><text x="18.0175%" y="927.50"></text></g><g><title>pathfinding::directed::astar::astar (112 samples, 0.04%)</title><rect x="17.7618%" y="965" width="0.0355%" height="15" fill="rgb(240,218,32)" fg:x="55962" fg:w="112"/><text x="18.0118%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (228 samples, 0.07%)</title><rect x="17.8021%" y="965" width="0.0724%" height="15" fill="rgb(252,5,43)" fg:x="56089" fg:w="228"/><text x="18.0521%" y="975.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (132 samples, 0.04%)</title><rect x="17.9116%" y="965" width="0.0419%" height="15" fill="rgb(252,84,19)" fg:x="56434" fg:w="132"/><text x="18.1616%" y="975.50"></text></g><g><title>[[heap]] (4,048 samples, 1.28%)</title><rect x="16.6802%" y="981" width="1.2848%" height="15" fill="rgb(243,152,39)" fg:x="52554" fg:w="4048"/><text x="16.9302%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (58 samples, 0.02%)</title><rect x="17.9859%" y="965" width="0.0184%" height="15" fill="rgb(234,160,15)" fg:x="56668" fg:w="58"/><text x="18.2359%" y="975.50"></text></g><g><title>__GI___libc_free (249 samples, 0.08%)</title><rect x="18.0062%" y="965" width="0.0790%" height="15" fill="rgb(237,34,20)" fg:x="56732" fg:w="249"/><text x="18.2562%" y="975.50"></text></g><g><title>__GI___libc_malloc (93 samples, 0.03%)</title><rect x="18.0852%" y="965" width="0.0295%" height="15" fill="rgb(229,97,13)" fg:x="56981" fg:w="93"/><text x="18.3352%" y="975.50"></text></g><g><title>__GI___libc_realloc (265 samples, 0.08%)</title><rect x="18.1148%" y="965" width="0.0841%" height="15" fill="rgb(234,71,50)" fg:x="57074" fg:w="265"/><text x="18.3648%" y="975.50"></text></g><g><title>_int_free (112 samples, 0.04%)</title><rect x="18.2027%" y="965" width="0.0355%" height="15" fill="rgb(253,155,4)" fg:x="57351" fg:w="112"/><text x="18.4527%" y="975.50"></text></g><g><title>_int_realloc (44 samples, 0.01%)</title><rect x="18.2443%" y="965" width="0.0140%" height="15" fill="rgb(222,185,37)" fg:x="57482" fg:w="44"/><text x="18.4943%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (349 samples, 0.11%)</title><rect x="18.2598%" y="965" width="0.1108%" height="15" fill="rgb(251,177,13)" fg:x="57531" fg:w="349"/><text x="18.5098%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (101 samples, 0.03%)</title><rect x="18.3385%" y="949" width="0.0321%" height="15" fill="rgb(250,179,40)" fg:x="57779" fg:w="101"/><text x="18.5885%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (83 samples, 0.03%)</title><rect x="18.3442%" y="933" width="0.0263%" height="15" fill="rgb(242,44,2)" fg:x="57797" fg:w="83"/><text x="18.5942%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (83 samples, 0.03%)</title><rect x="18.3442%" y="917" width="0.0263%" height="15" fill="rgb(216,177,13)" fg:x="57797" fg:w="83"/><text x="18.5942%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (369 samples, 0.12%)</title><rect x="18.3744%" y="965" width="0.1171%" height="15" fill="rgb(216,106,43)" fg:x="57892" fg:w="369"/><text x="18.6244%" y="975.50"></text></g><g><title>async_executor::Executor::try_tick (210 samples, 0.07%)</title><rect x="18.4934%" y="965" width="0.0667%" height="15" fill="rgb(216,183,2)" fg:x="58267" fg:w="210"/><text x="18.7434%" y="975.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (212 samples, 0.07%)</title><rect x="18.5601%" y="965" width="0.0673%" height="15" fill="rgb(249,75,3)" fg:x="58477" fg:w="212"/><text x="18.8101%" y="975.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (203 samples, 0.06%)</title><rect x="18.7115%" y="917" width="0.0644%" height="15" fill="rgb(219,67,39)" fg:x="58954" fg:w="203"/><text x="18.9615%" y="927.50"></text></g><g><title>async_task::header::Header::register (711 samples, 0.23%)</title><rect x="18.6273%" y="965" width="0.2257%" height="15" fill="rgb(253,228,2)" fg:x="58689" fg:w="711"/><text x="18.8773%" y="975.50"></text></g><g><title>async_task::utils::abort_on_panic (446 samples, 0.14%)</title><rect x="18.7115%" y="949" width="0.1416%" height="15" fill="rgb(235,138,27)" fg:x="58954" fg:w="446"/><text x="18.9615%" y="959.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (446 samples, 0.14%)</title><rect x="18.7115%" y="933" width="0.1416%" height="15" fill="rgb(236,97,51)" fg:x="58954" fg:w="446"/><text x="18.9615%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (243 samples, 0.08%)</title><rect x="18.7759%" y="917" width="0.0771%" height="15" fill="rgb(240,80,30)" fg:x="59157" fg:w="243"/><text x="19.0259%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (243 samples, 0.08%)</title><rect x="18.7759%" y="901" width="0.0771%" height="15" fill="rgb(230,178,19)" fg:x="59157" fg:w="243"/><text x="19.0259%" y="911.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (243 samples, 0.08%)</title><rect x="18.7759%" y="885" width="0.0771%" height="15" fill="rgb(210,190,27)" fg:x="59157" fg:w="243"/><text x="19.0259%" y="895.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (272 samples, 0.09%)</title><rect x="18.8530%" y="965" width="0.0863%" height="15" fill="rgb(222,107,31)" fg:x="59400" fg:w="272"/><text x="19.1030%" y="975.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (151 samples, 0.05%)</title><rect x="18.9685%" y="965" width="0.0479%" height="15" fill="rgb(216,127,34)" fg:x="59764" fg:w="151"/><text x="19.2185%" y="975.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (161 samples, 0.05%)</title><rect x="19.0254%" y="965" width="0.0511%" height="15" fill="rgb(234,116,52)" fg:x="59943" fg:w="161"/><text x="19.2754%" y="975.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (84 samples, 0.03%)</title><rect x="19.0777%" y="965" width="0.0267%" height="15" fill="rgb(222,124,15)" fg:x="60108" fg:w="84"/><text x="19.3277%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (637 samples, 0.20%)</title><rect x="19.1447%" y="965" width="0.2022%" height="15" fill="rgb(231,179,28)" fg:x="60319" fg:w="637"/><text x="19.3947%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (405 samples, 0.13%)</title><rect x="19.2183%" y="949" width="0.1285%" height="15" fill="rgb(226,93,45)" fg:x="60551" fg:w="405"/><text x="19.4683%" y="959.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (216 samples, 0.07%)</title><rect x="19.2783%" y="933" width="0.0686%" height="15" fill="rgb(215,8,51)" fg:x="60740" fg:w="216"/><text x="19.5283%" y="943.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (216 samples, 0.07%)</title><rect x="19.2783%" y="917" width="0.0686%" height="15" fill="rgb(223,106,5)" fg:x="60740" fg:w="216"/><text x="19.5283%" y="927.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (216 samples, 0.07%)</title><rect x="19.2783%" y="901" width="0.0686%" height="15" fill="rgb(250,191,5)" fg:x="60740" fg:w="216"/><text x="19.5283%" y="911.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (216 samples, 0.07%)</title><rect x="19.2783%" y="885" width="0.0686%" height="15" fill="rgb(242,132,44)" fg:x="60740" fg:w="216"/><text x="19.5283%" y="895.50"></text></g><g><title>[[stack]] (4,419 samples, 1.40%)</title><rect x="17.9650%" y="981" width="1.4025%" height="15" fill="rgb(251,152,29)" fg:x="56602" fg:w="4419"/><text x="18.2150%" y="991.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (240 samples, 0.08%)</title><rect x="19.3840%" y="965" width="0.0762%" height="15" fill="rgb(218,179,5)" fg:x="61073" fg:w="240"/><text x="19.6340%" y="975.50"></text></g><g><title>[anon] (319 samples, 0.10%)</title><rect x="19.3732%" y="981" width="0.1012%" height="15" fill="rgb(227,67,19)" fg:x="61039" fg:w="319"/><text x="19.6232%" y="991.50"></text></g><g><title>async_task::header::Header::register (143 samples, 0.05%)</title><rect x="19.4916%" y="965" width="0.0454%" height="15" fill="rgb(233,119,31)" fg:x="61412" fg:w="143"/><text x="19.7416%" y="975.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1,361 samples, 0.43%)</title><rect x="19.5554%" y="965" width="0.4320%" height="15" fill="rgb(241,120,22)" fg:x="61613" fg:w="1361"/><text x="19.8054%" y="975.50"></text></g><g><title>[engine] (1,639 samples, 0.52%)</title><rect x="19.4745%" y="981" width="0.5202%" height="15" fill="rgb(224,102,30)" fg:x="61358" fg:w="1639"/><text x="19.7245%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (38 samples, 0.01%)</title><rect x="20.0001%" y="965" width="0.0121%" height="15" fill="rgb(210,164,37)" fg:x="63014" fg:w="38"/><text x="20.2501%" y="975.50"></text></g><g><title>_int_free (111 samples, 0.04%)</title><rect x="20.0121%" y="965" width="0.0352%" height="15" fill="rgb(226,191,16)" fg:x="63052" fg:w="111"/><text x="20.2621%" y="975.50"></text></g><g><title>_int_malloc (85 samples, 0.03%)</title><rect x="20.0474%" y="965" width="0.0270%" height="15" fill="rgb(214,40,45)" fg:x="63163" fg:w="85"/><text x="20.2974%" y="975.50"></text></g><g><title>[libc-2.33.so] (253 samples, 0.08%)</title><rect x="20.0001%" y="981" width="0.0803%" height="15" fill="rgb(244,29,26)" fg:x="63014" fg:w="253"/><text x="20.2501%" y="991.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (45 samples, 0.01%)</title><rect x="20.1597%" y="709" width="0.0143%" height="15" fill="rgb(216,16,5)" fg:x="63517" fg:w="45"/><text x="20.4097%" y="719.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (221 samples, 0.07%)</title><rect x="20.1185%" y="965" width="0.0701%" height="15" fill="rgb(249,76,35)" fg:x="63387" fg:w="221"/><text x="20.3685%" y="975.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (210 samples, 0.07%)</title><rect x="20.1219%" y="949" width="0.0667%" height="15" fill="rgb(207,11,44)" fg:x="63398" fg:w="210"/><text x="20.3719%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (210 samples, 0.07%)</title><rect x="20.1219%" y="933" width="0.0667%" height="15" fill="rgb(228,190,49)" fg:x="63398" fg:w="210"/><text x="20.3719%" y="943.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (210 samples, 0.07%)</title><rect x="20.1219%" y="917" width="0.0667%" height="15" fill="rgb(214,173,12)" fg:x="63398" fg:w="210"/><text x="20.3719%" y="927.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (208 samples, 0.07%)</title><rect x="20.1226%" y="901" width="0.0660%" height="15" fill="rgb(218,26,35)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="911.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (208 samples, 0.07%)</title><rect x="20.1226%" y="885" width="0.0660%" height="15" fill="rgb(220,200,19)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="895.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (208 samples, 0.07%)</title><rect x="20.1226%" y="869" width="0.0660%" height="15" fill="rgb(239,95,49)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="879.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (208 samples, 0.07%)</title><rect x="20.1226%" y="853" width="0.0660%" height="15" fill="rgb(235,85,53)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="863.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (208 samples, 0.07%)</title><rect x="20.1226%" y="837" width="0.0660%" height="15" fill="rgb(233,133,31)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="847.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (208 samples, 0.07%)</title><rect x="20.1226%" y="821" width="0.0660%" height="15" fill="rgb(218,25,20)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (208 samples, 0.07%)</title><rect x="20.1226%" y="805" width="0.0660%" height="15" fill="rgb(252,210,38)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (208 samples, 0.07%)</title><rect x="20.1226%" y="789" width="0.0660%" height="15" fill="rgb(242,134,21)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="799.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (208 samples, 0.07%)</title><rect x="20.1226%" y="773" width="0.0660%" height="15" fill="rgb(213,28,48)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (208 samples, 0.07%)</title><rect x="20.1226%" y="757" width="0.0660%" height="15" fill="rgb(250,196,2)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (208 samples, 0.07%)</title><rect x="20.1226%" y="741" width="0.0660%" height="15" fill="rgb(227,5,17)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="751.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (208 samples, 0.07%)</title><rect x="20.1226%" y="725" width="0.0660%" height="15" fill="rgb(221,226,24)" fg:x="63400" fg:w="208"/><text x="20.3726%" y="735.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (40 samples, 0.01%)</title><rect x="20.1759%" y="709" width="0.0127%" height="15" fill="rgb(211,5,48)" fg:x="63568" fg:w="40"/><text x="20.4259%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (36 samples, 0.01%)</title><rect x="20.2000%" y="677" width="0.0114%" height="15" fill="rgb(219,150,6)" fg:x="63644" fg:w="36"/><text x="20.4500%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (36 samples, 0.01%)</title><rect x="20.2000%" y="661" width="0.0114%" height="15" fill="rgb(251,46,16)" fg:x="63644" fg:w="36"/><text x="20.4500%" y="671.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (69 samples, 0.02%)</title><rect x="20.1899%" y="725" width="0.0219%" height="15" fill="rgb(220,204,40)" fg:x="63612" fg:w="69"/><text x="20.4399%" y="735.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (48 samples, 0.02%)</title><rect x="20.1965%" y="709" width="0.0152%" height="15" fill="rgb(211,85,2)" fg:x="63633" fg:w="48"/><text x="20.4465%" y="719.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (48 samples, 0.02%)</title><rect x="20.1965%" y="693" width="0.0152%" height="15" fill="rgb(229,17,7)" fg:x="63633" fg:w="48"/><text x="20.4465%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (74 samples, 0.02%)</title><rect x="20.1886%" y="965" width="0.0235%" height="15" fill="rgb(239,72,28)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (74 samples, 0.02%)</title><rect x="20.1886%" y="949" width="0.0235%" height="15" fill="rgb(230,47,54)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="959.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (74 samples, 0.02%)</title><rect x="20.1886%" y="933" width="0.0235%" height="15" fill="rgb(214,50,8)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="943.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (74 samples, 0.02%)</title><rect x="20.1886%" y="917" width="0.0235%" height="15" fill="rgb(216,198,43)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="927.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (74 samples, 0.02%)</title><rect x="20.1886%" y="901" width="0.0235%" height="15" fill="rgb(234,20,35)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="911.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (74 samples, 0.02%)</title><rect x="20.1886%" y="885" width="0.0235%" height="15" fill="rgb(254,45,19)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="895.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (74 samples, 0.02%)</title><rect x="20.1886%" y="869" width="0.0235%" height="15" fill="rgb(219,14,44)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="879.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (74 samples, 0.02%)</title><rect x="20.1886%" y="853" width="0.0235%" height="15" fill="rgb(217,220,26)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="863.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (74 samples, 0.02%)</title><rect x="20.1886%" y="837" width="0.0235%" height="15" fill="rgb(213,158,28)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (74 samples, 0.02%)</title><rect x="20.1886%" y="821" width="0.0235%" height="15" fill="rgb(252,51,52)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (74 samples, 0.02%)</title><rect x="20.1886%" y="805" width="0.0235%" height="15" fill="rgb(246,89,16)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="815.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (74 samples, 0.02%)</title><rect x="20.1886%" y="789" width="0.0235%" height="15" fill="rgb(216,158,49)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (74 samples, 0.02%)</title><rect x="20.1886%" y="773" width="0.0235%" height="15" fill="rgb(236,107,19)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="783.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (74 samples, 0.02%)</title><rect x="20.1886%" y="757" width="0.0235%" height="15" fill="rgb(228,185,30)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (74 samples, 0.02%)</title><rect x="20.1886%" y="741" width="0.0235%" height="15" fill="rgb(246,134,8)" fg:x="63608" fg:w="74"/><text x="20.4386%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (484 samples, 0.15%)</title><rect x="20.2806%" y="965" width="0.1536%" height="15" fill="rgb(214,143,50)" fg:x="63898" fg:w="484"/><text x="20.5306%" y="975.50"></text></g><g><title>[libX11.so.6.4.0] (33 samples, 0.01%)</title><rect x="20.4577%" y="933" width="0.0105%" height="15" fill="rgb(228,75,8)" fg:x="64456" fg:w="33"/><text x="20.7077%" y="943.50"></text></g><g><title>[libX11.so.6.4.0] (41 samples, 0.01%)</title><rect x="20.4571%" y="949" width="0.0130%" height="15" fill="rgb(207,175,4)" fg:x="64454" fg:w="41"/><text x="20.7071%" y="959.50"></text></g><g><title>[libX11.so.6.4.0] (62 samples, 0.02%)</title><rect x="20.4536%" y="965" width="0.0197%" height="15" fill="rgb(205,108,24)" fg:x="64443" fg:w="62"/><text x="20.7036%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (426 samples, 0.14%)</title><rect x="20.4742%" y="965" width="0.1352%" height="15" fill="rgb(244,120,49)" fg:x="64508" fg:w="426"/><text x="20.7242%" y="975.50"></text></g><g><title>__GI___libc_free (689 samples, 0.22%)</title><rect x="20.6142%" y="965" width="0.2187%" height="15" fill="rgb(223,47,38)" fg:x="64949" fg:w="689"/><text x="20.8642%" y="975.50"></text></g><g><title>__GI___libc_malloc (430 samples, 0.14%)</title><rect x="20.8329%" y="965" width="0.1365%" height="15" fill="rgb(229,179,11)" fg:x="65638" fg:w="430"/><text x="21.0829%" y="975.50"></text></g><g><title>__GI___libc_realloc (230 samples, 0.07%)</title><rect x="20.9694%" y="965" width="0.0730%" height="15" fill="rgb(231,122,1)" fg:x="66068" fg:w="230"/><text x="21.2194%" y="975.50"></text></g><g><title>__memmove_avx_unaligned_erms (76 samples, 0.02%)</title><rect x="21.0436%" y="965" width="0.0241%" height="15" fill="rgb(245,119,9)" fg:x="66302" fg:w="76"/><text x="21.2936%" y="975.50"></text></g><g><title>_int_free (889 samples, 0.28%)</title><rect x="21.0684%" y="965" width="0.2822%" height="15" fill="rgb(241,163,25)" fg:x="66380" fg:w="889"/><text x="21.3184%" y="975.50"></text></g><g><title>_int_malloc (408 samples, 0.13%)</title><rect x="21.3506%" y="965" width="0.1295%" height="15" fill="rgb(217,214,3)" fg:x="67269" fg:w="408"/><text x="21.6006%" y="975.50"></text></g><g><title>_int_realloc (722 samples, 0.23%)</title><rect x="21.4801%" y="965" width="0.2292%" height="15" fill="rgb(240,86,28)" fg:x="67677" fg:w="722"/><text x="21.7301%" y="975.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (149 samples, 0.05%)</title><rect x="21.7092%" y="965" width="0.0473%" height="15" fill="rgb(215,47,9)" fg:x="68399" fg:w="149"/><text x="21.9592%" y="975.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (998 samples, 0.32%)</title><rect x="21.7565%" y="965" width="0.3168%" height="15" fill="rgb(252,25,45)" fg:x="68548" fg:w="998"/><text x="22.0065%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (533 samples, 0.17%)</title><rect x="22.0748%" y="965" width="0.1692%" height="15" fill="rgb(251,164,9)" fg:x="69551" fg:w="533"/><text x="22.3248%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (486 samples, 0.15%)</title><rect x="22.0898%" y="949" width="0.1543%" height="15" fill="rgb(233,194,0)" fg:x="69598" fg:w="486"/><text x="22.3398%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (262 samples, 0.08%)</title><rect x="22.1609%" y="933" width="0.0832%" height="15" fill="rgb(249,111,24)" fg:x="69822" fg:w="262"/><text x="22.4109%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (262 samples, 0.08%)</title><rect x="22.1609%" y="917" width="0.0832%" height="15" fill="rgb(250,223,3)" fg:x="69822" fg:w="262"/><text x="22.4109%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,121 samples, 0.36%)</title><rect x="22.2462%" y="965" width="0.3558%" height="15" fill="rgb(236,178,37)" fg:x="70091" fg:w="1121"/><text x="22.4962%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (33 samples, 0.01%)</title><rect x="22.5916%" y="949" width="0.0105%" height="15" fill="rgb(241,158,50)" fg:x="71179" fg:w="33"/><text x="22.8416%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (33 samples, 0.01%)</title><rect x="22.5916%" y="933" width="0.0105%" height="15" fill="rgb(213,121,41)" fg:x="71179" fg:w="33"/><text x="22.8416%" y="943.50"></text></g><g><title>alloc::alloc::realloc (33 samples, 0.01%)</title><rect x="22.5916%" y="917" width="0.0105%" height="15" fill="rgb(240,92,3)" fg:x="71179" fg:w="33"/><text x="22.8416%" y="927.50"></text></g><g><title>__rdl_realloc (33 samples, 0.01%)</title><rect x="22.5916%" y="901" width="0.0105%" height="15" fill="rgb(205,123,3)" fg:x="71179" fg:w="33"/><text x="22.8416%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (33 samples, 0.01%)</title><rect x="22.5916%" y="885" width="0.0105%" height="15" fill="rgb(205,97,47)" fg:x="71179" fg:w="33"/><text x="22.8416%" y="895.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (216 samples, 0.07%)</title><rect x="22.6058%" y="965" width="0.0686%" height="15" fill="rgb(247,152,14)" fg:x="71224" fg:w="216"/><text x="22.8558%" y="975.50"></text></g><g><title>async_task::header::Header::register (122 samples, 0.04%)</title><rect x="22.6744%" y="965" width="0.0387%" height="15" fill="rgb(248,195,53)" fg:x="71440" fg:w="122"/><text x="22.9244%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (46 samples, 0.01%)</title><rect x="22.7131%" y="965" width="0.0146%" height="15" fill="rgb(226,201,16)" fg:x="71562" fg:w="46"/><text x="22.9631%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.01%)</title><rect x="22.7134%" y="949" width="0.0143%" height="15" fill="rgb(205,98,0)" fg:x="71563" fg:w="45"/><text x="22.9634%" y="959.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (45 samples, 0.01%)</title><rect x="22.7134%" y="933" width="0.0143%" height="15" fill="rgb(214,191,48)" fg:x="71563" fg:w="45"/><text x="22.9634%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (45 samples, 0.01%)</title><rect x="22.7134%" y="917" width="0.0143%" height="15" fill="rgb(237,112,39)" fg:x="71563" fg:w="45"/><text x="22.9634%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (45 samples, 0.01%)</title><rect x="22.7134%" y="901" width="0.0143%" height="15" fill="rgb(247,203,27)" fg:x="71563" fg:w="45"/><text x="22.9634%" y="911.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (45 samples, 0.01%)</title><rect x="22.7134%" y="885" width="0.0143%" height="15" fill="rgb(235,124,28)" fg:x="71563" fg:w="45"/><text x="22.9634%" y="895.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (45 samples, 0.01%)</title><rect x="22.7134%" y="869" width="0.0143%" height="15" fill="rgb(208,207,46)" fg:x="71563" fg:w="45"/><text x="22.9634%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (45 samples, 0.01%)</title><rect x="22.7134%" y="853" width="0.0143%" height="15" fill="rgb(234,176,4)" fg:x="71563" fg:w="45"/><text x="22.9634%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (45 samples, 0.01%)</title><rect x="22.7134%" y="837" width="0.0143%" height="15" fill="rgb(230,133,28)" fg:x="71563" fg:w="45"/><text x="22.9634%" y="847.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (45 samples, 0.01%)</title><rect x="22.7134%" y="821" width="0.0143%" height="15" fill="rgb(211,137,40)" fg:x="71563" fg:w="45"/><text x="22.9634%" y="831.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (45 samples, 0.01%)</title><rect x="22.7134%" y="805" width="0.0143%" height="15" fill="rgb(254,35,13)" fg:x="71563" fg:w="45"/><text x="22.9634%" y="815.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (45 samples, 0.01%)</title><rect x="22.7134%" y="789" width="0.0143%" height="15" fill="rgb(225,49,51)" fg:x="71563" fg:w="45"/><text x="22.9634%" y="799.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (32 samples, 0.01%)</title><rect x="22.7496%" y="965" width="0.0102%" height="15" fill="rgb(251,10,15)" fg:x="71677" fg:w="32"/><text x="22.9996%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::command::bind::BindGroupPair&gt;&gt; (76 samples, 0.02%)</title><rect x="22.7880%" y="757" width="0.0241%" height="15" fill="rgb(228,207,15)" fg:x="71798" fg:w="76"/><text x="23.0380%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::BindGroupPair&gt; (76 samples, 0.02%)</title><rect x="22.7880%" y="741" width="0.0241%" height="15" fill="rgb(241,99,19)" fg:x="71798" fg:w="76"/><text x="23.0380%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::binding_model::BindGroup&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt; (76 samples, 0.02%)</title><rect x="22.7880%" y="725" width="0.0241%" height="15" fill="rgb(207,104,49)" fg:x="71798" fg:w="76"/><text x="23.0380%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (76 samples, 0.02%)</title><rect x="22.7880%" y="709" width="0.0241%" height="15" fill="rgb(234,99,18)" fg:x="71798" fg:w="76"/><text x="23.0380%" y="719.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (76 samples, 0.02%)</title><rect x="22.7880%" y="693" width="0.0241%" height="15" fill="rgb(213,191,49)" fg:x="71798" fg:w="76"/><text x="23.0380%" y="703.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (76 samples, 0.02%)</title><rect x="22.7880%" y="677" width="0.0241%" height="15" fill="rgb(210,226,19)" fg:x="71798" fg:w="76"/><text x="23.0380%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (75 samples, 0.02%)</title><rect x="22.7883%" y="661" width="0.0238%" height="15" fill="rgb(229,97,18)" fg:x="71799" fg:w="75"/><text x="23.0383%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (75 samples, 0.02%)</title><rect x="22.7883%" y="645" width="0.0238%" height="15" fill="rgb(211,167,15)" fg:x="71799" fg:w="75"/><text x="23.0383%" y="655.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (209 samples, 0.07%)</title><rect x="22.7683%" y="789" width="0.0663%" height="15" fill="rgb(210,169,34)" fg:x="71736" fg:w="209"/><text x="23.0183%" y="799.50"></text></g><g><title>wgpu_core::command::bind::BindGroupEntry::provide (209 samples, 0.07%)</title><rect x="22.7683%" y="773" width="0.0663%" height="15" fill="rgb(241,121,31)" fg:x="71736" fg:w="209"/><text x="23.0183%" y="783.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (71 samples, 0.02%)</title><rect x="22.8121%" y="757" width="0.0225%" height="15" fill="rgb(232,40,11)" fg:x="71874" fg:w="71"/><text x="23.0621%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (71 samples, 0.02%)</title><rect x="22.8121%" y="741" width="0.0225%" height="15" fill="rgb(205,86,26)" fg:x="71874" fg:w="71"/><text x="23.0621%" y="751.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (71 samples, 0.02%)</title><rect x="22.8121%" y="725" width="0.0225%" height="15" fill="rgb(231,126,28)" fg:x="71874" fg:w="71"/><text x="23.0621%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (68 samples, 0.02%)</title><rect x="22.8131%" y="709" width="0.0216%" height="15" fill="rgb(219,221,18)" fg:x="71877" fg:w="68"/><text x="23.0631%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (68 samples, 0.02%)</title><rect x="22.8131%" y="693" width="0.0216%" height="15" fill="rgb(211,40,0)" fg:x="71877" fg:w="68"/><text x="23.0631%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.02%)</title><rect x="22.8493%" y="725" width="0.0244%" height="15" fill="rgb(239,85,43)" fg:x="71991" fg:w="77"/><text x="23.0993%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.02%)</title><rect x="22.8493%" y="709" width="0.0244%" height="15" fill="rgb(231,55,21)" fg:x="71991" fg:w="77"/><text x="23.0993%" y="719.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.03%)</title><rect x="22.8490%" y="741" width="0.0257%" height="15" fill="rgb(225,184,43)" fg:x="71990" fg:w="81"/><text x="23.0990%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (84 samples, 0.03%)</title><rect x="22.8490%" y="757" width="0.0267%" height="15" fill="rgb(251,158,41)" fg:x="71990" fg:w="84"/><text x="23.0990%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.01%)</title><rect x="22.8928%" y="693" width="0.0105%" height="15" fill="rgb(234,159,37)" fg:x="72128" fg:w="33"/><text x="23.1428%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.01%)</title><rect x="22.8912%" y="709" width="0.0140%" height="15" fill="rgb(216,204,22)" fg:x="72123" fg:w="44"/><text x="23.1412%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (108 samples, 0.03%)</title><rect x="22.8848%" y="757" width="0.0343%" height="15" fill="rgb(214,17,3)" fg:x="72103" fg:w="108"/><text x="23.1348%" y="767.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (108 samples, 0.03%)</title><rect x="22.8848%" y="741" width="0.0343%" height="15" fill="rgb(212,111,17)" fg:x="72103" fg:w="108"/><text x="23.1348%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (102 samples, 0.03%)</title><rect x="22.8867%" y="725" width="0.0324%" height="15" fill="rgb(221,157,24)" fg:x="72109" fg:w="102"/><text x="23.1367%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (34 samples, 0.01%)</title><rect x="22.9191%" y="693" width="0.0108%" height="15" fill="rgb(252,16,13)" fg:x="72211" fg:w="34"/><text x="23.1691%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (34 samples, 0.01%)</title><rect x="22.9191%" y="677" width="0.0108%" height="15" fill="rgb(221,62,2)" fg:x="72211" fg:w="34"/><text x="23.1691%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (32 samples, 0.01%)</title><rect x="22.9299%" y="693" width="0.0102%" height="15" fill="rgb(247,87,22)" fg:x="72245" fg:w="32"/><text x="23.1799%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (32 samples, 0.01%)</title><rect x="22.9299%" y="677" width="0.0102%" height="15" fill="rgb(215,73,9)" fg:x="72245" fg:w="32"/><text x="23.1799%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (75 samples, 0.02%)</title><rect x="22.9191%" y="709" width="0.0238%" height="15" fill="rgb(207,175,33)" fg:x="72211" fg:w="75"/><text x="23.1691%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (84 samples, 0.03%)</title><rect x="22.9191%" y="757" width="0.0267%" height="15" fill="rgb(243,129,54)" fg:x="72211" fg:w="84"/><text x="23.1691%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (84 samples, 0.03%)</title><rect x="22.9191%" y="741" width="0.0267%" height="15" fill="rgb(227,119,45)" fg:x="72211" fg:w="84"/><text x="23.1691%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (84 samples, 0.03%)</title><rect x="22.9191%" y="725" width="0.0267%" height="15" fill="rgb(205,109,36)" fg:x="72211" fg:w="84"/><text x="23.1691%" y="735.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (617 samples, 0.20%)</title><rect x="22.7598%" y="965" width="0.1958%" height="15" fill="rgb(205,6,39)" fg:x="71709" fg:w="617"/><text x="23.0098%" y="975.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (615 samples, 0.20%)</title><rect x="22.7604%" y="949" width="0.1952%" height="15" fill="rgb(221,32,16)" fg:x="71711" fg:w="615"/><text x="23.0104%" y="959.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (610 samples, 0.19%)</title><rect x="22.7620%" y="933" width="0.1936%" height="15" fill="rgb(228,144,50)" fg:x="71716" fg:w="610"/><text x="23.0120%" y="943.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (610 samples, 0.19%)</title><rect x="22.7620%" y="917" width="0.1936%" height="15" fill="rgb(229,201,53)" fg:x="71716" fg:w="610"/><text x="23.0120%" y="927.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (610 samples, 0.19%)</title><rect x="22.7620%" y="901" width="0.1936%" height="15" fill="rgb(249,153,27)" fg:x="71716" fg:w="610"/><text x="23.0120%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (610 samples, 0.19%)</title><rect x="22.7620%" y="885" width="0.1936%" height="15" fill="rgb(227,106,25)" fg:x="71716" fg:w="610"/><text x="23.0120%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (610 samples, 0.19%)</title><rect x="22.7620%" y="869" width="0.1936%" height="15" fill="rgb(230,65,29)" fg:x="71716" fg:w="610"/><text x="23.0120%" y="879.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (610 samples, 0.19%)</title><rect x="22.7620%" y="853" width="0.1936%" height="15" fill="rgb(221,57,46)" fg:x="71716" fg:w="610"/><text x="23.0120%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (610 samples, 0.19%)</title><rect x="22.7620%" y="837" width="0.1936%" height="15" fill="rgb(229,161,17)" fg:x="71716" fg:w="610"/><text x="23.0120%" y="847.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (610 samples, 0.19%)</title><rect x="22.7620%" y="821" width="0.1936%" height="15" fill="rgb(222,213,11)" fg:x="71716" fg:w="610"/><text x="23.0120%" y="831.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (610 samples, 0.19%)</title><rect x="22.7620%" y="805" width="0.1936%" height="15" fill="rgb(235,35,13)" fg:x="71716" fg:w="610"/><text x="23.0120%" y="815.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (378 samples, 0.12%)</title><rect x="22.8356%" y="789" width="0.1200%" height="15" fill="rgb(233,158,34)" fg:x="71948" fg:w="378"/><text x="23.0856%" y="799.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (378 samples, 0.12%)</title><rect x="22.8356%" y="773" width="0.1200%" height="15" fill="rgb(215,151,48)" fg:x="71948" fg:w="378"/><text x="23.0856%" y="783.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (32 samples, 0.01%)</title><rect x="23.2133%" y="677" width="0.0102%" height="15" fill="rgb(229,84,14)" fg:x="73138" fg:w="32"/><text x="23.4633%" y="687.50"></text></g><g><title>alloc::alloc::alloc (64 samples, 0.02%)</title><rect x="23.2606%" y="613" width="0.0203%" height="15" fill="rgb(229,68,14)" fg:x="73287" fg:w="64"/><text x="23.5106%" y="623.50"></text></g><g><title>__rdl_alloc (64 samples, 0.02%)</title><rect x="23.2606%" y="597" width="0.0203%" height="15" fill="rgb(243,106,26)" fg:x="73287" fg:w="64"/><text x="23.5106%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (64 samples, 0.02%)</title><rect x="23.2606%" y="581" width="0.0203%" height="15" fill="rgb(206,45,38)" fg:x="73287" fg:w="64"/><text x="23.5106%" y="591.50"></text></g><g><title>__GI___libc_malloc (64 samples, 0.02%)</title><rect x="23.2606%" y="565" width="0.0203%" height="15" fill="rgb(226,6,15)" fg:x="73287" fg:w="64"/><text x="23.5106%" y="575.50"></text></g><g><title>_int_malloc (51 samples, 0.02%)</title><rect x="23.2647%" y="549" width="0.0162%" height="15" fill="rgb(232,22,54)" fg:x="73300" fg:w="51"/><text x="23.5147%" y="559.50"></text></g><g><title>async_task::runnable::spawn_unchecked (74 samples, 0.02%)</title><rect x="23.2603%" y="645" width="0.0235%" height="15" fill="rgb(229,222,32)" fg:x="73286" fg:w="74"/><text x="23.5103%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (73 samples, 0.02%)</title><rect x="23.2606%" y="629" width="0.0232%" height="15" fill="rgb(228,62,29)" fg:x="73287" fg:w="73"/><text x="23.5106%" y="639.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (195 samples, 0.06%)</title><rect x="23.2273%" y="677" width="0.0619%" height="15" fill="rgb(251,103,34)" fg:x="73182" fg:w="195"/><text x="23.4773%" y="687.50"></text></g><g><title>async_executor::Executor::spawn (163 samples, 0.05%)</title><rect x="23.2374%" y="661" width="0.0517%" height="15" fill="rgb(233,12,30)" fg:x="73214" fg:w="163"/><text x="23.4874%" y="671.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (257 samples, 0.08%)</title><rect x="23.2114%" y="693" width="0.0816%" height="15" fill="rgb(238,52,0)" fg:x="73132" fg:w="257"/><text x="23.4614%" y="703.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (284 samples, 0.09%)</title><rect x="23.2114%" y="709" width="0.0901%" height="15" fill="rgb(223,98,5)" fg:x="73132" fg:w="284"/><text x="23.4614%" y="719.50"></text></g><g><title>async_executor::Executor::try_tick (199 samples, 0.06%)</title><rect x="23.4171%" y="693" width="0.0632%" height="15" fill="rgb(228,75,37)" fg:x="73780" fg:w="199"/><text x="23.6671%" y="703.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (33 samples, 0.01%)</title><rect x="23.4910%" y="565" width="0.0105%" height="15" fill="rgb(205,115,49)" fg:x="74013" fg:w="33"/><text x="23.7410%" y="575.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (37 samples, 0.01%)</title><rect x="23.4907%" y="581" width="0.0117%" height="15" fill="rgb(250,154,43)" fg:x="74012" fg:w="37"/><text x="23.7407%" y="591.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (64 samples, 0.02%)</title><rect x="23.4876%" y="597" width="0.0203%" height="15" fill="rgb(226,43,29)" fg:x="74002" fg:w="64"/><text x="23.7376%" y="607.50"></text></g><g><title>event_listener::List::notify (38 samples, 0.01%)</title><rect x="23.5247%" y="517" width="0.0121%" height="15" fill="rgb(249,228,39)" fg:x="74119" fg:w="38"/><text x="23.7747%" y="527.50"></text></g><g><title>core::task::wake::Waker::wake (38 samples, 0.01%)</title><rect x="23.5247%" y="501" width="0.0121%" height="15" fill="rgb(216,79,43)" fg:x="74119" fg:w="38"/><text x="23.7747%" y="511.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (38 samples, 0.01%)</title><rect x="23.5247%" y="485" width="0.0121%" height="15" fill="rgb(228,95,12)" fg:x="74119" fg:w="38"/><text x="23.7747%" y="495.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (93 samples, 0.03%)</title><rect x="23.5114%" y="549" width="0.0295%" height="15" fill="rgb(249,221,15)" fg:x="74077" fg:w="93"/><text x="23.7614%" y="559.50"></text></g><g><title>event_listener::Event::notify (73 samples, 0.02%)</title><rect x="23.5177%" y="533" width="0.0232%" height="15" fill="rgb(233,34,13)" fg:x="74097" fg:w="73"/><text x="23.7677%" y="543.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (97 samples, 0.03%)</title><rect x="23.5104%" y="565" width="0.0308%" height="15" fill="rgb(214,103,39)" fg:x="74074" fg:w="97"/><text x="23.7604%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (138 samples, 0.04%)</title><rect x="23.5079%" y="597" width="0.0438%" height="15" fill="rgb(251,126,39)" fg:x="74066" fg:w="138"/><text x="23.7579%" y="607.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (138 samples, 0.04%)</title><rect x="23.5079%" y="581" width="0.0438%" height="15" fill="rgb(214,216,36)" fg:x="74066" fg:w="138"/><text x="23.7579%" y="591.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (269 samples, 0.09%)</title><rect x="23.4863%" y="613" width="0.0854%" height="15" fill="rgb(220,221,8)" fg:x="73998" fg:w="269"/><text x="23.7363%" y="623.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 0.03%)</title><rect x="23.5729%" y="597" width="0.0292%" height="15" fill="rgb(240,216,3)" fg:x="74271" fg:w="92"/><text x="23.8229%" y="607.50"></text></g><g><title>event_listener::Event::listen (48 samples, 0.02%)</title><rect x="23.5869%" y="581" width="0.0152%" height="15" fill="rgb(232,218,17)" fg:x="74315" fg:w="48"/><text x="23.8369%" y="591.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (43 samples, 0.01%)</title><rect x="23.6028%" y="581" width="0.0136%" height="15" fill="rgb(229,163,45)" fg:x="74365" fg:w="43"/><text x="23.8528%" y="591.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.01%)</title><rect x="23.6021%" y="597" width="0.0149%" height="15" fill="rgb(231,110,42)" fg:x="74363" fg:w="47"/><text x="23.8521%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::draw::RenderCommand]&gt; (393 samples, 0.12%)</title><rect x="23.6266%" y="469" width="0.1247%" height="15" fill="rgb(208,170,48)" fg:x="74440" fg:w="393"/><text x="23.8766%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::draw::RenderCommand&gt; (384 samples, 0.12%)</title><rect x="23.6294%" y="453" width="0.1219%" height="15" fill="rgb(239,116,25)" fg:x="74449" fg:w="384"/><text x="23.8794%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (189 samples, 0.06%)</title><rect x="23.6913%" y="437" width="0.0600%" height="15" fill="rgb(219,200,50)" fg:x="74644" fg:w="189"/><text x="23.9413%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (179 samples, 0.06%)</title><rect x="23.6945%" y="421" width="0.0568%" height="15" fill="rgb(245,200,0)" fg:x="74654" fg:w="179"/><text x="23.9445%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (179 samples, 0.06%)</title><rect x="23.6945%" y="405" width="0.0568%" height="15" fill="rgb(245,119,33)" fg:x="74654" fg:w="179"/><text x="23.9445%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (179 samples, 0.06%)</title><rect x="23.6945%" y="389" width="0.0568%" height="15" fill="rgb(231,125,12)" fg:x="74654" fg:w="179"/><text x="23.9445%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (179 samples, 0.06%)</title><rect x="23.6945%" y="373" width="0.0568%" height="15" fill="rgb(216,96,41)" fg:x="74654" fg:w="179"/><text x="23.9445%" y="383.50"></text></g><g><title>bevy_render::draw::clear_draw_system (410 samples, 0.13%)</title><rect x="23.6221%" y="533" width="0.1301%" height="15" fill="rgb(248,43,45)" fg:x="74426" fg:w="410"/><text x="23.8721%" y="543.50"></text></g><g><title>bevy_render::draw::Draw::clear_render_commands (403 samples, 0.13%)</title><rect x="23.6243%" y="517" width="0.1279%" height="15" fill="rgb(217,222,7)" fg:x="74433" fg:w="403"/><text x="23.8743%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (401 samples, 0.13%)</title><rect x="23.6250%" y="501" width="0.1273%" height="15" fill="rgb(233,28,6)" fg:x="74435" fg:w="401"/><text x="23.8750%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (401 samples, 0.13%)</title><rect x="23.6250%" y="485" width="0.1273%" height="15" fill="rgb(231,218,15)" fg:x="74435" fg:w="401"/><text x="23.8750%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (99 samples, 0.03%)</title><rect x="23.7643%" y="517" width="0.0314%" height="15" fill="rgb(226,171,48)" fg:x="74874" fg:w="99"/><text x="24.0143%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;,hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;::clear::{{closure}}&gt;&gt; (48 samples, 0.02%)</title><rect x="23.7999%" y="453" width="0.0152%" height="15" fill="rgb(235,201,9)" fg:x="74986" fg:w="48"/><text x="24.0499%" y="463.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.02%)</title><rect x="23.7999%" y="437" width="0.0152%" height="15" fill="rgb(217,80,15)" fg:x="74986" fg:w="48"/><text x="24.0499%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (48 samples, 0.02%)</title><rect x="23.7999%" y="421" width="0.0152%" height="15" fill="rgb(219,152,8)" fg:x="74986" fg:w="48"/><text x="24.0499%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (48 samples, 0.02%)</title><rect x="23.7999%" y="405" width="0.0152%" height="15" fill="rgb(243,107,38)" fg:x="74986" fg:w="48"/><text x="24.0499%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (48 samples, 0.02%)</title><rect x="23.7999%" y="389" width="0.0152%" height="15" fill="rgb(231,17,5)" fg:x="74986" fg:w="48"/><text x="24.0499%" y="399.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (487 samples, 0.15%)</title><rect x="23.7523%" y="533" width="0.1546%" height="15" fill="rgb(209,25,54)" fg:x="74836" fg:w="487"/><text x="24.0023%" y="543.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (337 samples, 0.11%)</title><rect x="23.7999%" y="517" width="0.1070%" height="15" fill="rgb(219,0,2)" fg:x="74986" fg:w="337"/><text x="24.0499%" y="527.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (337 samples, 0.11%)</title><rect x="23.7999%" y="501" width="0.1070%" height="15" fill="rgb(246,9,5)" fg:x="74986" fg:w="337"/><text x="24.0499%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (337 samples, 0.11%)</title><rect x="23.7999%" y="485" width="0.1070%" height="15" fill="rgb(226,159,4)" fg:x="74986" fg:w="337"/><text x="24.0499%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (337 samples, 0.11%)</title><rect x="23.7999%" y="469" width="0.1070%" height="15" fill="rgb(219,175,34)" fg:x="74986" fg:w="337"/><text x="24.0499%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (289 samples, 0.09%)</title><rect x="23.8151%" y="453" width="0.0917%" height="15" fill="rgb(236,10,46)" fg:x="75034" fg:w="289"/><text x="24.0651%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (934 samples, 0.30%)</title><rect x="23.6180%" y="581" width="0.2964%" height="15" fill="rgb(240,211,16)" fg:x="74413" fg:w="934"/><text x="23.8680%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (929 samples, 0.29%)</title><rect x="23.6196%" y="565" width="0.2949%" height="15" fill="rgb(205,3,43)" fg:x="74418" fg:w="929"/><text x="23.8696%" y="575.50"></text></g><g><title>core::ops::function::Fn::call (929 samples, 0.29%)</title><rect x="23.6196%" y="549" width="0.2949%" height="15" fill="rgb(245,7,22)" fg:x="74418" fg:w="929"/><text x="23.8696%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (44 samples, 0.01%)</title><rect x="23.9144%" y="581" width="0.0140%" height="15" fill="rgb(239,132,32)" fg:x="75347" fg:w="44"/><text x="24.1644%" y="591.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (83 samples, 0.03%)</title><rect x="23.9398%" y="469" width="0.0263%" height="15" fill="rgb(228,202,34)" fg:x="75427" fg:w="83"/><text x="24.1898%" y="479.50"></text></g><g><title>alloc::alloc::exchange_malloc (78 samples, 0.02%)</title><rect x="23.9414%" y="453" width="0.0248%" height="15" fill="rgb(254,200,22)" fg:x="75432" fg:w="78"/><text x="24.1914%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (78 samples, 0.02%)</title><rect x="23.9414%" y="437" width="0.0248%" height="15" fill="rgb(219,10,39)" fg:x="75432" fg:w="78"/><text x="24.1914%" y="447.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (78 samples, 0.02%)</title><rect x="23.9414%" y="421" width="0.0248%" height="15" fill="rgb(226,210,39)" fg:x="75432" fg:w="78"/><text x="24.1914%" y="431.50"></text></g><g><title>alloc::alloc::alloc (78 samples, 0.02%)</title><rect x="23.9414%" y="405" width="0.0248%" height="15" fill="rgb(208,219,16)" fg:x="75432" fg:w="78"/><text x="24.1914%" y="415.50"></text></g><g><title>__rdl_alloc (78 samples, 0.02%)</title><rect x="23.9414%" y="389" width="0.0248%" height="15" fill="rgb(216,158,51)" fg:x="75432" fg:w="78"/><text x="24.1914%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (78 samples, 0.02%)</title><rect x="23.9414%" y="373" width="0.0248%" height="15" fill="rgb(233,14,44)" fg:x="75432" fg:w="78"/><text x="24.1914%" y="383.50"></text></g><g><title>__GI___libc_malloc (78 samples, 0.02%)</title><rect x="23.9414%" y="357" width="0.0248%" height="15" fill="rgb(237,97,39)" fg:x="75432" fg:w="78"/><text x="24.1914%" y="367.50"></text></g><g><title>bevy_ecs::system::commands::EntityCommands::insert (112 samples, 0.04%)</title><rect x="23.9398%" y="517" width="0.0355%" height="15" fill="rgb(218,198,43)" fg:x="75427" fg:w="112"/><text x="24.1898%" y="527.50"></text></g><g><title>bevy_ecs::system::commands::Commands::add (112 samples, 0.04%)</title><rect x="23.9398%" y="501" width="0.0355%" height="15" fill="rgb(231,104,20)" fg:x="75427" fg:w="112"/><text x="24.1898%" y="511.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push (112 samples, 0.04%)</title><rect x="23.9398%" y="485" width="0.0355%" height="15" fill="rgb(254,36,13)" fg:x="75427" fg:w="112"/><text x="24.1898%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (141 samples, 0.04%)</title><rect x="23.9909%" y="501" width="0.0448%" height="15" fill="rgb(248,14,50)" fg:x="75588" fg:w="141"/><text x="24.2409%" y="511.50"></text></g><g><title>core::ptr::read (52 samples, 0.02%)</title><rect x="24.0192%" y="485" width="0.0165%" height="15" fill="rgb(217,107,29)" fg:x="75677" fg:w="52"/><text x="24.2692%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (58 samples, 0.02%)</title><rect x="24.0725%" y="485" width="0.0184%" height="15" fill="rgb(251,169,33)" fg:x="75845" fg:w="58"/><text x="24.3225%" y="495.50"></text></g><g><title>alloc::raw_vec::finish_grow (41 samples, 0.01%)</title><rect x="24.1106%" y="421" width="0.0130%" height="15" fill="rgb(217,108,32)" fg:x="75965" fg:w="41"/><text x="24.3606%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (103 samples, 0.03%)</title><rect x="24.0998%" y="437" width="0.0327%" height="15" fill="rgb(219,66,42)" fg:x="75931" fg:w="103"/><text x="24.3498%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (137 samples, 0.04%)</title><rect x="24.0909%" y="485" width="0.0435%" height="15" fill="rgb(206,180,7)" fg:x="75903" fg:w="137"/><text x="24.3409%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (117 samples, 0.04%)</title><rect x="24.0973%" y="469" width="0.0371%" height="15" fill="rgb(208,226,31)" fg:x="75923" fg:w="117"/><text x="24.3473%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (109 samples, 0.03%)</title><rect x="24.0998%" y="453" width="0.0346%" height="15" fill="rgb(218,26,49)" fg:x="75931" fg:w="109"/><text x="24.3498%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (478 samples, 0.15%)</title><rect x="24.0411%" y="501" width="0.1517%" height="15" fill="rgb(233,197,48)" fg:x="75746" fg:w="478"/><text x="24.2911%" y="511.50"></text></g><g><title>core::ptr::write (168 samples, 0.05%)</title><rect x="24.1395%" y="485" width="0.0533%" height="15" fill="rgb(252,181,51)" fg:x="76056" fg:w="168"/><text x="24.3895%" y="495.50"></text></g><g><title>core::intrinsics::copy (83 samples, 0.03%)</title><rect x="24.1931%" y="485" width="0.0263%" height="15" fill="rgb(253,90,19)" fg:x="76225" fg:w="83"/><text x="24.4431%" y="495.50"></text></g><g><title>__memmove_avx_unaligned_erms (82 samples, 0.03%)</title><rect x="24.1934%" y="469" width="0.0260%" height="15" fill="rgb(215,171,30)" fg:x="76226" fg:w="82"/><text x="24.4434%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (85 samples, 0.03%)</title><rect x="24.1928%" y="501" width="0.0270%" height="15" fill="rgb(214,222,9)" fg:x="76224" fg:w="85"/><text x="24.4428%" y="511.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (946 samples, 0.30%)</title><rect x="23.9284%" y="581" width="0.3003%" height="15" fill="rgb(223,3,22)" fg:x="75391" fg:w="946"/><text x="24.1784%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (940 samples, 0.30%)</title><rect x="23.9303%" y="565" width="0.2983%" height="15" fill="rgb(225,196,46)" fg:x="75397" fg:w="940"/><text x="24.1803%" y="575.50"></text></g><g><title>core::ops::function::Fn::call (940 samples, 0.30%)</title><rect x="23.9303%" y="549" width="0.2983%" height="15" fill="rgb(209,110,37)" fg:x="75397" fg:w="940"/><text x="24.1803%" y="559.50"></text></g><g><title>engine::engine::actor::pathfinding::plan_path (917 samples, 0.29%)</title><rect x="23.9376%" y="533" width="0.2910%" height="15" fill="rgb(249,89,12)" fg:x="75420" fg:w="917"/><text x="24.1876%" y="543.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path (793 samples, 0.25%)</title><rect x="23.9770%" y="517" width="0.2517%" height="15" fill="rgb(226,27,33)" fg:x="75544" fg:w="793"/><text x="24.2270%" y="527.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (55 samples, 0.02%)</title><rect x="24.2610%" y="485" width="0.0175%" height="15" fill="rgb(213,82,22)" fg:x="76439" fg:w="55"/><text x="24.5110%" y="495.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (35 samples, 0.01%)</title><rect x="24.2674%" y="469" width="0.0111%" height="15" fill="rgb(248,140,0)" fg:x="76459" fg:w="35"/><text x="24.5174%" y="479.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (130 samples, 0.04%)</title><rect x="24.2455%" y="517" width="0.0413%" height="15" fill="rgb(228,106,3)" fg:x="76390" fg:w="130"/><text x="24.4955%" y="527.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (128 samples, 0.04%)</title><rect x="24.2461%" y="501" width="0.0406%" height="15" fill="rgb(209,23,37)" fg:x="76392" fg:w="128"/><text x="24.4961%" y="511.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (197 samples, 0.06%)</title><rect x="24.2287%" y="581" width="0.0625%" height="15" fill="rgb(241,93,50)" fg:x="76337" fg:w="197"/><text x="24.4787%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (190 samples, 0.06%)</title><rect x="24.2309%" y="565" width="0.0603%" height="15" fill="rgb(253,46,43)" fg:x="76344" fg:w="190"/><text x="24.4809%" y="575.50"></text></g><g><title>core::ops::function::Fn::call (189 samples, 0.06%)</title><rect x="24.2312%" y="549" width="0.0600%" height="15" fill="rgb(226,206,43)" fg:x="76345" fg:w="189"/><text x="24.4812%" y="559.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (182 samples, 0.06%)</title><rect x="24.2334%" y="533" width="0.0578%" height="15" fill="rgb(217,54,7)" fg:x="76352" fg:w="182"/><text x="24.4834%" y="543.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,139 samples, 0.68%)</title><rect x="23.6170%" y="597" width="0.6789%" height="15" fill="rgb(223,5,52)" fg:x="74410" fg:w="2139"/><text x="23.8670%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,590 samples, 0.82%)</title><rect x="23.4863%" y="629" width="0.8220%" height="15" fill="rgb(206,52,46)" fg:x="73998" fg:w="2590"/><text x="23.7363%" y="639.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,319 samples, 0.74%)</title><rect x="23.5723%" y="613" width="0.7360%" height="15" fill="rgb(253,136,11)" fg:x="74269" fg:w="2319"/><text x="23.8223%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,626 samples, 0.83%)</title><rect x="23.4841%" y="661" width="0.8335%" height="15" fill="rgb(208,106,33)" fg:x="73991" fg:w="2626"/><text x="23.7341%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,626 samples, 0.83%)</title><rect x="23.4841%" y="645" width="0.8335%" height="15" fill="rgb(206,54,4)" fg:x="73991" fg:w="2626"/><text x="23.7341%" y="655.50"></text></g><g><title>async_task::runnable::Runnable::run (2,686 samples, 0.85%)</title><rect x="23.4831%" y="693" width="0.8525%" height="15" fill="rgb(213,3,15)" fg:x="73988" fg:w="2686"/><text x="23.7331%" y="703.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,686 samples, 0.85%)</title><rect x="23.4831%" y="677" width="0.8525%" height="15" fill="rgb(252,211,39)" fg:x="73988" fg:w="2686"/><text x="23.7331%" y="687.50"></text></g><g><title>concurrent_queue::full_fence (4,309 samples, 1.37%)</title><rect x="24.6470%" y="661" width="1.3676%" height="15" fill="rgb(223,6,36)" fg:x="77655" fg:w="4309"/><text x="24.8970%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (4,151 samples, 1.32%)</title><rect x="24.6971%" y="645" width="1.3175%" height="15" fill="rgb(252,169,45)" fg:x="77813" fg:w="4151"/><text x="24.9471%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4,151 samples, 1.32%)</title><rect x="24.6971%" y="629" width="1.3175%" height="15" fill="rgb(212,48,26)" fg:x="77813" fg:w="4151"/><text x="24.9471%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4,151 samples, 1.32%)</title><rect x="24.6971%" y="613" width="1.3175%" height="15" fill="rgb(251,102,48)" fg:x="77813" fg:w="4151"/><text x="24.9471%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (179 samples, 0.06%)</title><rect x="26.0156%" y="661" width="0.0568%" height="15" fill="rgb(243,208,16)" fg:x="81967" fg:w="179"/><text x="26.2656%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (179 samples, 0.06%)</title><rect x="26.0156%" y="645" width="0.0568%" height="15" fill="rgb(219,96,24)" fg:x="81967" fg:w="179"/><text x="26.2656%" y="655.50"></text></g><g><title>async_executor::Executor::try_tick (8,947 samples, 2.84%)</title><rect x="23.3016%" y="709" width="2.8397%" height="15" fill="rgb(219,33,29)" fg:x="73416" fg:w="8947"/><text x="23.5516%" y="719.50">as..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (5,689 samples, 1.81%)</title><rect x="24.3356%" y="693" width="1.8056%" height="15" fill="rgb(223,176,5)" fg:x="76674" fg:w="5689"/><text x="24.5856%" y="703.50">c..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (5,297 samples, 1.68%)</title><rect x="24.4600%" y="677" width="1.6812%" height="15" fill="rgb(228,140,14)" fg:x="77066" fg:w="5297"/><text x="24.7100%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (198 samples, 0.06%)</title><rect x="26.0784%" y="661" width="0.0628%" height="15" fill="rgb(217,179,31)" fg:x="82165" fg:w="198"/><text x="26.3284%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (198 samples, 0.06%)</title><rect x="26.0784%" y="645" width="0.0628%" height="15" fill="rgb(230,9,30)" fg:x="82165" fg:w="198"/><text x="26.3284%" y="655.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::get_unchecked (189 samples, 0.06%)</title><rect x="26.1451%" y="629" width="0.0600%" height="15" fill="rgb(230,136,20)" fg:x="82375" fg:w="189"/><text x="26.3951%" y="639.50"></text></g><g><title>async_executor::Executor::state (192 samples, 0.06%)</title><rect x="26.1451%" y="677" width="0.0609%" height="15" fill="rgb(215,210,22)" fg:x="82375" fg:w="192"/><text x="26.3951%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (192 samples, 0.06%)</title><rect x="26.1451%" y="661" width="0.0609%" height="15" fill="rgb(218,43,5)" fg:x="82375" fg:w="192"/><text x="26.3951%" y="671.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (192 samples, 0.06%)</title><rect x="26.1451%" y="645" width="0.0609%" height="15" fill="rgb(216,11,5)" fg:x="82375" fg:w="192"/><text x="26.3951%" y="655.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (222 samples, 0.07%)</title><rect x="26.2060%" y="677" width="0.0705%" height="15" fill="rgb(209,82,29)" fg:x="82567" fg:w="222"/><text x="26.4560%" y="687.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.01%)</title><rect x="26.2812%" y="565" width="0.0130%" height="15" fill="rgb(244,115,12)" fg:x="82804" fg:w="41"/><text x="26.5312%" y="575.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (40 samples, 0.01%)</title><rect x="26.2815%" y="549" width="0.0127%" height="15" fill="rgb(222,82,18)" fg:x="82805" fg:w="40"/><text x="26.5315%" y="559.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (88 samples, 0.03%)</title><rect x="26.2793%" y="613" width="0.0279%" height="15" fill="rgb(249,227,8)" fg:x="82798" fg:w="88"/><text x="26.5293%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (88 samples, 0.03%)</title><rect x="26.2793%" y="597" width="0.0279%" height="15" fill="rgb(253,141,45)" fg:x="82798" fg:w="88"/><text x="26.5293%" y="607.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (87 samples, 0.03%)</title><rect x="26.2796%" y="581" width="0.0276%" height="15" fill="rgb(234,184,4)" fg:x="82799" fg:w="87"/><text x="26.5296%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (41 samples, 0.01%)</title><rect x="26.2942%" y="565" width="0.0130%" height="15" fill="rgb(218,194,23)" fg:x="82845" fg:w="41"/><text x="26.5442%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (94 samples, 0.03%)</title><rect x="26.2787%" y="645" width="0.0298%" height="15" fill="rgb(235,66,41)" fg:x="82796" fg:w="94"/><text x="26.5287%" y="655.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (93 samples, 0.03%)</title><rect x="26.2790%" y="629" width="0.0295%" height="15" fill="rgb(245,217,1)" fg:x="82797" fg:w="93"/><text x="26.5290%" y="639.50"></text></g><g><title>async_task::runnable::Runnable::run (120 samples, 0.04%)</title><rect x="26.2774%" y="677" width="0.0381%" height="15" fill="rgb(229,91,1)" fg:x="82792" fg:w="120"/><text x="26.5274%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (119 samples, 0.04%)</title><rect x="26.2777%" y="661" width="0.0378%" height="15" fill="rgb(207,101,30)" fg:x="82793" fg:w="119"/><text x="26.5277%" y="671.50"></text></g><g><title>concurrent_queue::full_fence (4,814 samples, 1.53%)</title><rect x="26.6319%" y="645" width="1.5279%" height="15" fill="rgb(223,82,49)" fg:x="83909" fg:w="4814"/><text x="26.8819%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (4,607 samples, 1.46%)</title><rect x="26.6976%" y="629" width="1.4622%" height="15" fill="rgb(218,167,17)" fg:x="84116" fg:w="4607"/><text x="26.9476%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4,607 samples, 1.46%)</title><rect x="26.6976%" y="613" width="1.4622%" height="15" fill="rgb(208,103,14)" fg:x="84116" fg:w="4607"/><text x="26.9476%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4,607 samples, 1.46%)</title><rect x="26.6976%" y="597" width="1.4622%" height="15" fill="rgb(238,20,8)" fg:x="84116" fg:w="4607"/><text x="26.9476%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (208 samples, 0.07%)</title><rect x="28.1608%" y="645" width="0.0660%" height="15" fill="rgb(218,80,54)" fg:x="88726" fg:w="208"/><text x="28.4108%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (208 samples, 0.07%)</title><rect x="28.1608%" y="629" width="0.0660%" height="15" fill="rgb(240,144,17)" fg:x="88726" fg:w="208"/><text x="28.4108%" y="639.50"></text></g><g><title>async_executor::Executor::try_tick (6,777 samples, 2.15%)</title><rect x="26.1438%" y="693" width="2.1510%" height="15" fill="rgb(245,27,50)" fg:x="82371" fg:w="6777"/><text x="26.3938%" y="703.50">a..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (6,236 samples, 1.98%)</title><rect x="26.3155%" y="677" width="1.9792%" height="15" fill="rgb(251,51,7)" fg:x="82912" fg:w="6236"/><text x="26.5655%" y="687.50">c..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (6,029 samples, 1.91%)</title><rect x="26.3812%" y="661" width="1.9135%" height="15" fill="rgb(245,217,29)" fg:x="83119" fg:w="6029"/><text x="26.6312%" y="671.50">c..</text></g><g><title>core::sync::atomic::AtomicUsize::load (207 samples, 0.07%)</title><rect x="28.2291%" y="645" width="0.0657%" height="15" fill="rgb(221,176,29)" fg:x="88941" fg:w="207"/><text x="28.4791%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (207 samples, 0.07%)</title><rect x="28.2291%" y="629" width="0.0657%" height="15" fill="rgb(212,180,24)" fg:x="88941" fg:w="207"/><text x="28.4791%" y="639.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (6,978 samples, 2.21%)</title><rect x="26.1438%" y="709" width="2.2148%" height="15" fill="rgb(254,24,2)" fg:x="82371" fg:w="6978"/><text x="26.3938%" y="719.50">a..</text></g><g><title>async_executor::LocalExecutor::inner (201 samples, 0.06%)</title><rect x="28.2948%" y="693" width="0.0638%" height="15" fill="rgb(230,100,2)" fg:x="89148" fg:w="201"/><text x="28.5448%" y="703.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (201 samples, 0.06%)</title><rect x="28.2948%" y="677" width="0.0638%" height="15" fill="rgb(219,142,25)" fg:x="89148" fg:w="201"/><text x="28.5448%" y="687.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (201 samples, 0.06%)</title><rect x="28.2948%" y="661" width="0.0638%" height="15" fill="rgb(240,73,43)" fg:x="89148" fg:w="201"/><text x="28.5448%" y="671.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (198 samples, 0.06%)</title><rect x="28.6766%" y="661" width="0.0628%" height="15" fill="rgb(214,114,15)" fg:x="90351" fg:w="198"/><text x="28.9266%" y="671.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (4,225 samples, 1.34%)</title><rect x="29.6167%" y="501" width="1.3410%" height="15" fill="rgb(207,130,4)" fg:x="93313" fg:w="4225"/><text x="29.8667%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4,225 samples, 1.34%)</title><rect x="29.6167%" y="485" width="1.3410%" height="15" fill="rgb(221,25,40)" fg:x="93313" fg:w="4225"/><text x="29.8667%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4,220 samples, 1.34%)</title><rect x="29.6183%" y="469" width="1.3394%" height="15" fill="rgb(241,184,7)" fg:x="93318" fg:w="4220"/><text x="29.8683%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_add (4,220 samples, 1.34%)</title><rect x="29.6183%" y="453" width="1.3394%" height="15" fill="rgb(235,159,4)" fg:x="93318" fg:w="4220"/><text x="29.8683%" y="463.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (4,651 samples, 1.48%)</title><rect x="29.4818%" y="533" width="1.4762%" height="15" fill="rgb(214,87,48)" fg:x="92888" fg:w="4651"/><text x="29.7318%" y="543.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (4,445 samples, 1.41%)</title><rect x="29.5472%" y="517" width="1.4108%" height="15" fill="rgb(246,198,24)" fg:x="93094" fg:w="4445"/><text x="29.7972%" y="527.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (193 samples, 0.06%)</title><rect x="31.0434%" y="469" width="0.0613%" height="15" fill="rgb(209,66,40)" fg:x="97808" fg:w="193"/><text x="31.2934%" y="479.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (193 samples, 0.06%)</title><rect x="31.0434%" y="453" width="0.0613%" height="15" fill="rgb(233,147,39)" fg:x="97808" fg:w="193"/><text x="31.2934%" y="463.50"></text></g><g><title>async_task::utils::abort_on_panic (9,635 samples, 3.06%)</title><rect x="29.4815%" y="565" width="3.0581%" height="15" fill="rgb(231,145,52)" fg:x="92887" fg:w="9635"/><text x="29.7315%" y="575.50">asy..</text></g><g><title>async_task::header::Header::register::{{closure}} (9,635 samples, 3.06%)</title><rect x="29.4815%" y="549" width="3.0581%" height="15" fill="rgb(206,20,26)" fg:x="92887" fg:w="9635"/><text x="29.7315%" y="559.50">asy..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (4,983 samples, 1.58%)</title><rect x="30.9580%" y="533" width="1.5816%" height="15" fill="rgb(238,220,4)" fg:x="97539" fg:w="4983"/><text x="31.2080%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (4,715 samples, 1.50%)</title><rect x="31.0430%" y="517" width="1.4965%" height="15" fill="rgb(252,195,42)" fg:x="97807" fg:w="4715"/><text x="31.2930%" y="527.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (4,715 samples, 1.50%)</title><rect x="31.0430%" y="501" width="1.4965%" height="15" fill="rgb(209,10,6)" fg:x="97807" fg:w="4715"/><text x="31.2930%" y="511.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (4,714 samples, 1.50%)</title><rect x="31.0434%" y="485" width="1.4962%" height="15" fill="rgb(229,3,52)" fg:x="97808" fg:w="4714"/><text x="31.2934%" y="495.50"></text></g><g><title>core::mem::drop (4,521 samples, 1.43%)</title><rect x="31.1046%" y="469" width="1.4349%" height="15" fill="rgb(253,49,37)" fg:x="98001" fg:w="4521"/><text x="31.3546%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (4,521 samples, 1.43%)</title><rect x="31.1046%" y="453" width="1.4349%" height="15" fill="rgb(240,103,49)" fg:x="98001" fg:w="4521"/><text x="31.3546%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4,521 samples, 1.43%)</title><rect x="31.1046%" y="437" width="1.4349%" height="15" fill="rgb(250,182,30)" fg:x="98001" fg:w="4521"/><text x="31.3546%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4,516 samples, 1.43%)</title><rect x="31.1062%" y="421" width="1.4333%" height="15" fill="rgb(248,8,30)" fg:x="98006" fg:w="4516"/><text x="31.3562%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (4,516 samples, 1.43%)</title><rect x="31.1062%" y="405" width="1.4333%" height="15" fill="rgb(237,120,30)" fg:x="98006" fg:w="4516"/><text x="31.3562%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (204 samples, 0.06%)</title><rect x="32.5395%" y="565" width="0.0647%" height="15" fill="rgb(221,146,34)" fg:x="102522" fg:w="204"/><text x="32.7895%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (204 samples, 0.06%)</title><rect x="32.5395%" y="549" width="0.0647%" height="15" fill="rgb(242,55,13)" fg:x="102522" fg:w="204"/><text x="32.7895%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (8,608 samples, 2.73%)</title><rect x="32.6043%" y="565" width="2.7321%" height="15" fill="rgb(242,112,31)" fg:x="102726" fg:w="8608"/><text x="32.8543%" y="575.50">co..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (8,608 samples, 2.73%)</title><rect x="32.6043%" y="549" width="2.7321%" height="15" fill="rgb(249,192,27)" fg:x="102726" fg:w="8608"/><text x="32.8543%" y="559.50">co..</text></g><g><title>async_task::header::Header::register (19,507 samples, 6.19%)</title><rect x="29.1536%" y="581" width="6.1913%" height="15" fill="rgb(208,204,44)" fg:x="91854" fg:w="19507"/><text x="29.4036%" y="591.50">async_ta..</text></g><g><title>core::sync::atomic::AtomicUsize::load (2,218 samples, 0.70%)</title><rect x="35.3450%" y="581" width="0.7040%" height="15" fill="rgb(208,93,54)" fg:x="111361" fg:w="2218"/><text x="35.5950%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (2,218 samples, 0.70%)</title><rect x="35.3450%" y="565" width="0.7040%" height="15" fill="rgb(242,1,31)" fg:x="111361" fg:w="2218"/><text x="35.5950%" y="575.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (23,027 samples, 7.31%)</title><rect x="28.7423%" y="629" width="7.3086%" height="15" fill="rgb(241,83,25)" fg:x="90558" fg:w="23027"/><text x="28.9923%" y="639.50">&lt;&amp;mut F as..</text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (23,020 samples, 7.31%)</title><rect x="28.7445%" y="613" width="7.3063%" height="15" fill="rgb(205,169,50)" fg:x="90565" fg:w="23020"/><text x="28.9945%" y="623.50">&lt;async_tas..</text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (22,830 samples, 7.25%)</title><rect x="28.8048%" y="597" width="7.2460%" height="15" fill="rgb(239,186,37)" fg:x="90755" fg:w="22830"/><text x="29.0548%" y="607.50">async_task..</text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (23,028 samples, 7.31%)</title><rect x="28.7423%" y="645" width="7.3089%" height="15" fill="rgb(205,221,10)" fg:x="90558" fg:w="23028"/><text x="28.9923%" y="655.50">&lt;futures_l..</text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (219 samples, 0.07%)</title><rect x="36.0512%" y="645" width="0.0695%" height="15" fill="rgb(218,196,15)" fg:x="113586" fg:w="219"/><text x="36.3012%" y="655.50"></text></g><g><title>core::cell::BorrowRefMut::new (219 samples, 0.07%)</title><rect x="36.0512%" y="629" width="0.0695%" height="15" fill="rgb(218,196,35)" fg:x="113586" fg:w="219"/><text x="36.3012%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (190 samples, 0.06%)</title><rect x="36.0604%" y="613" width="0.0603%" height="15" fill="rgb(233,63,24)" fg:x="113615" fg:w="190"/><text x="36.3104%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (190 samples, 0.06%)</title><rect x="36.0604%" y="597" width="0.0603%" height="15" fill="rgb(225,8,4)" fg:x="113615" fg:w="190"/><text x="36.3104%" y="607.50"></text></g><g><title>core::mem::replace (190 samples, 0.06%)</title><rect x="36.0604%" y="581" width="0.0603%" height="15" fill="rgb(234,105,35)" fg:x="113615" fg:w="190"/><text x="36.3104%" y="591.50"></text></g><g><title>core::ptr::write (190 samples, 0.06%)</title><rect x="36.0604%" y="565" width="0.0603%" height="15" fill="rgb(236,21,32)" fg:x="113615" fg:w="190"/><text x="36.3104%" y="575.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (197 samples, 0.06%)</title><rect x="36.1207%" y="645" width="0.0625%" height="15" fill="rgb(228,109,6)" fg:x="113805" fg:w="197"/><text x="36.3707%" y="655.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (197 samples, 0.06%)</title><rect x="36.1207%" y="629" width="0.0625%" height="15" fill="rgb(229,215,31)" fg:x="113805" fg:w="197"/><text x="36.3707%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (200 samples, 0.06%)</title><rect x="36.1832%" y="645" width="0.0635%" height="15" fill="rgb(221,52,54)" fg:x="114002" fg:w="200"/><text x="36.4332%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (200 samples, 0.06%)</title><rect x="36.1832%" y="629" width="0.0635%" height="15" fill="rgb(252,129,43)" fg:x="114002" fg:w="200"/><text x="36.4332%" y="639.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (200 samples, 0.06%)</title><rect x="36.1832%" y="613" width="0.0635%" height="15" fill="rgb(248,183,27)" fg:x="114002" fg:w="200"/><text x="36.4332%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (200 samples, 0.06%)</title><rect x="36.1832%" y="597" width="0.0635%" height="15" fill="rgb(250,0,22)" fg:x="114002" fg:w="200"/><text x="36.4332%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (200 samples, 0.06%)</title><rect x="36.1832%" y="581" width="0.0635%" height="15" fill="rgb(213,166,10)" fg:x="114002" fg:w="200"/><text x="36.4332%" y="591.50"></text></g><g><title>core::mem::replace (200 samples, 0.06%)</title><rect x="36.1832%" y="565" width="0.0635%" height="15" fill="rgb(207,163,36)" fg:x="114002" fg:w="200"/><text x="36.4332%" y="575.50"></text></g><g><title>core::ptr::write (200 samples, 0.06%)</title><rect x="36.1832%" y="549" width="0.0635%" height="15" fill="rgb(208,122,22)" fg:x="114002" fg:w="200"/><text x="36.4332%" y="559.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (23,670 samples, 7.51%)</title><rect x="28.7394%" y="661" width="7.5126%" height="15" fill="rgb(207,104,49)" fg:x="90549" fg:w="23670"/><text x="28.9894%" y="671.50">futures_li..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (41,849 samples, 13.28%)</title><rect x="23.0372%" y="725" width="13.2825%" height="15" fill="rgb(248,211,50)" fg:x="72583" fg:w="41849"/><text x="23.2872%" y="735.50">bevy_tasks::task_poo..</text></g><g><title>futures_lite::future::block_on (25,080 samples, 7.96%)</title><rect x="28.3595%" y="709" width="7.9602%" height="15" fill="rgb(217,13,45)" fg:x="89352" fg:w="25080"/><text x="28.6095%" y="719.50">futures_lit..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24,684 samples, 7.83%)</title><rect x="28.4852%" y="693" width="7.8345%" height="15" fill="rgb(211,216,49)" fg:x="89748" fg:w="24684"/><text x="28.7352%" y="703.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24,293 samples, 7.71%)</title><rect x="28.6093%" y="677" width="7.7104%" height="15" fill="rgb(221,58,53)" fg:x="90139" fg:w="24293"/><text x="28.8593%" y="687.50">std::thread..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (213 samples, 0.07%)</title><rect x="36.2521%" y="661" width="0.0676%" height="15" fill="rgb(220,112,41)" fg:x="114219" fg:w="213"/><text x="36.5021%" y="671.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (41,853 samples, 13.28%)</title><rect x="23.0362%" y="789" width="13.2838%" height="15" fill="rgb(236,38,28)" fg:x="72580" fg:w="41853"/><text x="23.2862%" y="799.50">&lt;bevy_ecs::schedule:..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (41,853 samples, 13.28%)</title><rect x="23.0362%" y="773" width="13.2838%" height="15" fill="rgb(227,195,22)" fg:x="72580" fg:w="41853"/><text x="23.2862%" y="783.50">bevy_tasks::task_poo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (41,853 samples, 13.28%)</title><rect x="23.0362%" y="757" width="13.2838%" height="15" fill="rgb(214,55,33)" fg:x="72580" fg:w="41853"/><text x="23.2862%" y="767.50">std::thread::local::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (41,851 samples, 13.28%)</title><rect x="23.0369%" y="741" width="13.2831%" height="15" fill="rgb(248,80,13)" fg:x="72582" fg:w="41851"/><text x="23.2869%" y="751.50">std::thread::local::..</text></g><g><title>bevy_ecs::archetype::Archetype::swap_remove (32 samples, 0.01%)</title><rect x="36.3457%" y="709" width="0.0102%" height="15" fill="rgb(238,52,6)" fg:x="114514" fg:w="32"/><text x="36.5957%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Column::set_unchecked (53 samples, 0.02%)</title><rect x="36.3701%" y="661" width="0.0168%" height="15" fill="rgb(224,198,47)" fg:x="114591" fg:w="53"/><text x="36.6201%" y="671.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::set_unchecked (53 samples, 0.02%)</title><rect x="36.3701%" y="645" width="0.0168%" height="15" fill="rgb(233,171,20)" fg:x="114591" fg:w="53"/><text x="36.6201%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.01%)</title><rect x="36.3755%" y="629" width="0.0114%" height="15" fill="rgb(241,30,25)" fg:x="114608" fg:w="36"/><text x="36.6255%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (36 samples, 0.01%)</title><rect x="36.3755%" y="613" width="0.0114%" height="15" fill="rgb(207,171,38)" fg:x="114608" fg:w="36"/><text x="36.6255%" y="623.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components (104 samples, 0.03%)</title><rect x="36.3584%" y="709" width="0.0330%" height="15" fill="rgb(234,70,1)" fg:x="114554" fg:w="104"/><text x="36.6084%" y="719.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::get_components (93 samples, 0.03%)</title><rect x="36.3619%" y="693" width="0.0295%" height="15" fill="rgb(232,178,18)" fg:x="114565" fg:w="93"/><text x="36.6119%" y="703.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (81 samples, 0.03%)</title><rect x="36.3657%" y="677" width="0.0257%" height="15" fill="rgb(241,78,40)" fg:x="114577" fg:w="81"/><text x="36.6157%" y="687.50"></text></g><g><title>hashbrown::map::make_insert_hash (55 samples, 0.02%)</title><rect x="36.3939%" y="661" width="0.0175%" height="15" fill="rgb(222,35,25)" fg:x="114666" fg:w="55"/><text x="36.6439%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (71 samples, 0.02%)</title><rect x="36.3930%" y="677" width="0.0225%" height="15" fill="rgb(207,92,16)" fg:x="114663" fg:w="71"/><text x="36.6430%" y="687.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (80 samples, 0.03%)</title><rect x="36.3914%" y="709" width="0.0254%" height="15" fill="rgb(216,59,51)" fg:x="114658" fg:w="80"/><text x="36.6414%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (79 samples, 0.03%)</title><rect x="36.3917%" y="693" width="0.0251%" height="15" fill="rgb(213,80,28)" fg:x="114659" fg:w="79"/><text x="36.6417%" y="703.50"></text></g><g><title>bevy_ecs::storage::table::Column::set_unchecked (299 samples, 0.09%)</title><rect x="36.4396%" y="693" width="0.0949%" height="15" fill="rgb(220,93,7)" fg:x="114810" fg:w="299"/><text x="36.6896%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::set_unchecked (299 samples, 0.09%)</title><rect x="36.4396%" y="677" width="0.0949%" height="15" fill="rgb(225,24,44)" fg:x="114810" fg:w="299"/><text x="36.6896%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (272 samples, 0.09%)</title><rect x="36.4482%" y="661" width="0.0863%" height="15" fill="rgb(243,74,40)" fg:x="114837" fg:w="272"/><text x="36.6982%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (272 samples, 0.09%)</title><rect x="36.4482%" y="645" width="0.0863%" height="15" fill="rgb(228,39,7)" fg:x="114837" fg:w="272"/><text x="36.6982%" y="655.50"></text></g><g><title>core::ptr::read (123 samples, 0.04%)</title><rect x="36.5441%" y="661" width="0.0390%" height="15" fill="rgb(227,79,8)" fg:x="115139" fg:w="123"/><text x="36.7941%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (229 samples, 0.07%)</title><rect x="36.5345%" y="677" width="0.0727%" height="15" fill="rgb(236,58,11)" fg:x="115109" fg:w="229"/><text x="36.7845%" y="687.50"></text></g><g><title>core::ptr::replace (76 samples, 0.02%)</title><rect x="36.5831%" y="661" width="0.0241%" height="15" fill="rgb(249,63,35)" fg:x="115262" fg:w="76"/><text x="36.8331%" y="671.50"></text></g><g><title>core::mem::swap (76 samples, 0.02%)</title><rect x="36.5831%" y="645" width="0.0241%" height="15" fill="rgb(252,114,16)" fg:x="115262" fg:w="76"/><text x="36.8331%" y="655.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (76 samples, 0.02%)</title><rect x="36.5831%" y="629" width="0.0241%" height="15" fill="rgb(254,151,24)" fg:x="115262" fg:w="76"/><text x="36.8331%" y="639.50"></text></g><g><title>core::ptr::read (67 samples, 0.02%)</title><rect x="36.5860%" y="613" width="0.0213%" height="15" fill="rgb(253,54,39)" fg:x="115271" fg:w="67"/><text x="36.8360%" y="623.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (49 samples, 0.02%)</title><rect x="36.6129%" y="661" width="0.0156%" height="15" fill="rgb(243,25,45)" fg:x="115356" fg:w="49"/><text x="36.8629%" y="671.50"></text></g><g><title>core::intrinsics::copy (364 samples, 0.12%)</title><rect x="36.6285%" y="661" width="0.1155%" height="15" fill="rgb(234,134,9)" fg:x="115405" fg:w="364"/><text x="36.8785%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (349 samples, 0.11%)</title><rect x="36.6332%" y="645" width="0.1108%" height="15" fill="rgb(227,166,31)" fg:x="115420" fg:w="349"/><text x="36.8832%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (1,090 samples, 0.35%)</title><rect x="36.5345%" y="693" width="0.3460%" height="15" fill="rgb(245,143,41)" fg:x="115109" fg:w="1090"/><text x="36.7845%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (861 samples, 0.27%)</title><rect x="36.6072%" y="677" width="0.2733%" height="15" fill="rgb(238,181,32)" fg:x="115338" fg:w="861"/><text x="36.8572%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (430 samples, 0.14%)</title><rect x="36.7440%" y="661" width="0.1365%" height="15" fill="rgb(224,113,18)" fg:x="115769" fg:w="430"/><text x="36.9940%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (418 samples, 0.13%)</title><rect x="36.7478%" y="645" width="0.1327%" height="15" fill="rgb(240,229,28)" fg:x="115781" fg:w="418"/><text x="36.9978%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (97 samples, 0.03%)</title><rect x="36.8875%" y="677" width="0.0308%" height="15" fill="rgb(250,185,3)" fg:x="116221" fg:w="97"/><text x="37.1375%" y="687.50"></text></g><g><title>core::ptr::write (40 samples, 0.01%)</title><rect x="36.9056%" y="661" width="0.0127%" height="15" fill="rgb(212,59,25)" fg:x="116278" fg:w="40"/><text x="37.1556%" y="671.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (124 samples, 0.04%)</title><rect x="36.8805%" y="693" width="0.0394%" height="15" fill="rgb(221,87,20)" fg:x="116199" fg:w="124"/><text x="37.1305%" y="703.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_mut (58 samples, 0.02%)</title><rect x="36.9198%" y="677" width="0.0184%" height="15" fill="rgb(213,74,28)" fg:x="116323" fg:w="58"/><text x="37.1698%" y="687.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (1,644 samples, 0.52%)</title><rect x="36.4181%" y="709" width="0.5218%" height="15" fill="rgb(224,132,34)" fg:x="114742" fg:w="1644"/><text x="36.6681%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column_mut (63 samples, 0.02%)</title><rect x="36.9198%" y="693" width="0.0200%" height="15" fill="rgb(222,101,24)" fg:x="116323" fg:w="63"/><text x="37.1698%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (1,966 samples, 0.62%)</title><rect x="36.3200%" y="757" width="0.6240%" height="15" fill="rgb(254,142,4)" fg:x="114433" fg:w="1966"/><text x="36.5700%" y="767.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (1,966 samples, 0.62%)</title><rect x="36.3200%" y="741" width="0.6240%" height="15" fill="rgb(230,229,49)" fg:x="114433" fg:w="1966"/><text x="36.5700%" y="751.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (1,959 samples, 0.62%)</title><rect x="36.3222%" y="725" width="0.6218%" height="15" fill="rgb(238,70,47)" fg:x="114440" fg:w="1959"/><text x="36.5722%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (53 samples, 0.02%)</title><rect x="36.9605%" y="661" width="0.0168%" height="15" fill="rgb(231,160,17)" fg:x="116451" fg:w="53"/><text x="37.2105%" y="671.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::from_components (141 samples, 0.04%)</title><rect x="36.9440%" y="709" width="0.0448%" height="15" fill="rgb(218,68,53)" fg:x="116399" fg:w="141"/><text x="37.1940%" y="719.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove_bundle::{{closure}} (107 samples, 0.03%)</title><rect x="36.9548%" y="693" width="0.0340%" height="15" fill="rgb(236,111,10)" fg:x="116433" fg:w="107"/><text x="37.2048%" y="703.50"></text></g><g><title>bevy_ecs::world::entity_ref::remove_component (92 samples, 0.03%)</title><rect x="36.9595%" y="677" width="0.0292%" height="15" fill="rgb(224,34,41)" fg:x="116448" fg:w="92"/><text x="37.2095%" y="687.50"></text></g><g><title>hashbrown::map::make_insert_hash (50 samples, 0.02%)</title><rect x="36.9900%" y="661" width="0.0159%" height="15" fill="rgb(241,118,19)" fg:x="116544" fg:w="50"/><text x="37.2400%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (77 samples, 0.02%)</title><rect x="36.9887%" y="677" width="0.0244%" height="15" fill="rgb(238,129,25)" fg:x="116540" fg:w="77"/><text x="37.2387%" y="687.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (78 samples, 0.02%)</title><rect x="36.9887%" y="709" width="0.0248%" height="15" fill="rgb(238,22,31)" fg:x="116540" fg:w="78"/><text x="37.2387%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (78 samples, 0.02%)</title><rect x="36.9887%" y="693" width="0.0248%" height="15" fill="rgb(222,174,48)" fg:x="116540" fg:w="78"/><text x="37.2387%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (40 samples, 0.01%)</title><rect x="37.0347%" y="661" width="0.0127%" height="15" fill="rgb(206,152,40)" fg:x="116685" fg:w="40"/><text x="37.2847%" y="671.50"></text></g><g><title>bevy_ecs::storage::table::Column::set_unchecked (304 samples, 0.10%)</title><rect x="37.0347%" y="693" width="0.0965%" height="15" fill="rgb(218,99,54)" fg:x="116685" fg:w="304"/><text x="37.2847%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::set_unchecked (304 samples, 0.10%)</title><rect x="37.0347%" y="677" width="0.0965%" height="15" fill="rgb(220,174,26)" fg:x="116685" fg:w="304"/><text x="37.2847%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (253 samples, 0.08%)</title><rect x="37.0509%" y="661" width="0.0803%" height="15" fill="rgb(245,116,9)" fg:x="116736" fg:w="253"/><text x="37.3009%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (253 samples, 0.08%)</title><rect x="37.0509%" y="645" width="0.0803%" height="15" fill="rgb(209,72,35)" fg:x="116736" fg:w="253"/><text x="37.3009%" y="655.50"></text></g><g><title>core::ptr::read (46 samples, 0.01%)</title><rect x="37.1379%" y="661" width="0.0146%" height="15" fill="rgb(226,126,21)" fg:x="117010" fg:w="46"/><text x="37.3879%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (260 samples, 0.08%)</title><rect x="37.1312%" y="677" width="0.0825%" height="15" fill="rgb(227,192,1)" fg:x="116989" fg:w="260"/><text x="37.3812%" y="687.50"></text></g><g><title>core::ptr::replace (193 samples, 0.06%)</title><rect x="37.1525%" y="661" width="0.0613%" height="15" fill="rgb(237,180,29)" fg:x="117056" fg:w="193"/><text x="37.4025%" y="671.50"></text></g><g><title>core::mem::swap (193 samples, 0.06%)</title><rect x="37.1525%" y="645" width="0.0613%" height="15" fill="rgb(230,197,35)" fg:x="117056" fg:w="193"/><text x="37.4025%" y="655.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (193 samples, 0.06%)</title><rect x="37.1525%" y="629" width="0.0613%" height="15" fill="rgb(246,193,31)" fg:x="117056" fg:w="193"/><text x="37.4025%" y="639.50"></text></g><g><title>core::ptr::read (180 samples, 0.06%)</title><rect x="37.1566%" y="613" width="0.0571%" height="15" fill="rgb(241,36,4)" fg:x="117069" fg:w="180"/><text x="37.4066%" y="623.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (60 samples, 0.02%)</title><rect x="37.2223%" y="661" width="0.0190%" height="15" fill="rgb(241,130,17)" fg:x="117276" fg:w="60"/><text x="37.4723%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (33 samples, 0.01%)</title><rect x="37.2309%" y="645" width="0.0105%" height="15" fill="rgb(206,137,32)" fg:x="117303" fg:w="33"/><text x="37.4809%" y="655.50"></text></g><g><title>core::intrinsics::copy (337 samples, 0.11%)</title><rect x="37.2449%" y="661" width="0.1070%" height="15" fill="rgb(237,228,51)" fg:x="117347" fg:w="337"/><text x="37.4949%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (333 samples, 0.11%)</title><rect x="37.2461%" y="645" width="0.1057%" height="15" fill="rgb(243,6,42)" fg:x="117351" fg:w="333"/><text x="37.4961%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (1,235 samples, 0.39%)</title><rect x="37.1312%" y="693" width="0.3920%" height="15" fill="rgb(251,74,28)" fg:x="116989" fg:w="1235"/><text x="37.3812%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (975 samples, 0.31%)</title><rect x="37.2138%" y="677" width="0.3095%" height="15" fill="rgb(218,20,49)" fg:x="117249" fg:w="975"/><text x="37.4638%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (540 samples, 0.17%)</title><rect x="37.3518%" y="661" width="0.1714%" height="15" fill="rgb(238,28,14)" fg:x="117684" fg:w="540"/><text x="37.6018%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (518 samples, 0.16%)</title><rect x="37.3588%" y="645" width="0.1644%" height="15" fill="rgb(229,40,46)" fg:x="117706" fg:w="518"/><text x="37.6088%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (99 samples, 0.03%)</title><rect x="37.5305%" y="677" width="0.0314%" height="15" fill="rgb(244,195,20)" fg:x="118247" fg:w="99"/><text x="37.7805%" y="687.50"></text></g><g><title>core::ptr::write (45 samples, 0.01%)</title><rect x="37.5476%" y="661" width="0.0143%" height="15" fill="rgb(253,56,35)" fg:x="118301" fg:w="45"/><text x="37.7976%" y="671.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (128 samples, 0.04%)</title><rect x="37.5232%" y="693" width="0.0406%" height="15" fill="rgb(210,149,44)" fg:x="118224" fg:w="128"/><text x="37.7732%" y="703.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_and_forget_missing_unchecked (1,775 samples, 0.56%)</title><rect x="37.0135%" y="709" width="0.5634%" height="15" fill="rgb(240,135,12)" fg:x="116618" fg:w="1775"/><text x="37.2635%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column_mut (41 samples, 0.01%)</title><rect x="37.5638%" y="693" width="0.0130%" height="15" fill="rgb(251,24,50)" fg:x="118352" fg:w="41"/><text x="37.8138%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (3,994 samples, 1.27%)</title><rect x="36.3200%" y="789" width="1.2677%" height="15" fill="rgb(243,200,47)" fg:x="114433" fg:w="3994"/><text x="36.5700%" y="799.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (3,994 samples, 1.27%)</title><rect x="36.3200%" y="773" width="1.2677%" height="15" fill="rgb(224,166,26)" fg:x="114433" fg:w="3994"/><text x="36.5700%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Remove&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (2,028 samples, 0.64%)</title><rect x="36.9440%" y="757" width="0.6437%" height="15" fill="rgb(233,0,47)" fg:x="116399" fg:w="2028"/><text x="37.1940%" y="767.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove (2,028 samples, 0.64%)</title><rect x="36.9440%" y="741" width="0.6437%" height="15" fill="rgb(253,80,5)" fg:x="116399" fg:w="2028"/><text x="37.1940%" y="751.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove_bundle (2,028 samples, 0.64%)</title><rect x="36.9440%" y="725" width="0.6437%" height="15" fill="rgb(214,133,25)" fg:x="116399" fg:w="2028"/><text x="37.1940%" y="735.50"></text></g><g><title>bevy_ecs::world::entity_ref::remove_bundle_from_archetype (34 samples, 0.01%)</title><rect x="37.5768%" y="709" width="0.0108%" height="15" fill="rgb(209,27,14)" fg:x="118393" fg:w="34"/><text x="37.8268%" y="719.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (48 samples, 0.02%)</title><rect x="37.5930%" y="533" width="0.0152%" height="15" fill="rgb(219,102,51)" fg:x="118444" fg:w="48"/><text x="37.8430%" y="543.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (48 samples, 0.02%)</title><rect x="37.5930%" y="517" width="0.0152%" height="15" fill="rgb(237,18,16)" fg:x="118444" fg:w="48"/><text x="37.8430%" y="527.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (48 samples, 0.02%)</title><rect x="37.5930%" y="501" width="0.0152%" height="15" fill="rgb(241,85,17)" fg:x="118444" fg:w="48"/><text x="37.8430%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (48 samples, 0.02%)</title><rect x="37.5930%" y="485" width="0.0152%" height="15" fill="rgb(236,90,42)" fg:x="118444" fg:w="48"/><text x="37.8430%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (47 samples, 0.01%)</title><rect x="37.5934%" y="469" width="0.0149%" height="15" fill="rgb(249,57,21)" fg:x="118445" fg:w="47"/><text x="37.8434%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (45 samples, 0.01%)</title><rect x="37.5940%" y="453" width="0.0143%" height="15" fill="rgb(243,12,36)" fg:x="118447" fg:w="45"/><text x="37.8440%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (41 samples, 0.01%)</title><rect x="37.5953%" y="437" width="0.0130%" height="15" fill="rgb(253,128,47)" fg:x="118451" fg:w="41"/><text x="37.8453%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (38 samples, 0.01%)</title><rect x="37.5962%" y="421" width="0.0121%" height="15" fill="rgb(207,33,20)" fg:x="118454" fg:w="38"/><text x="37.8462%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (33 samples, 0.01%)</title><rect x="37.5978%" y="405" width="0.0105%" height="15" fill="rgb(233,215,35)" fg:x="118459" fg:w="33"/><text x="37.8478%" y="415.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (52 samples, 0.02%)</title><rect x="37.5930%" y="741" width="0.0165%" height="15" fill="rgb(249,188,52)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (52 samples, 0.02%)</title><rect x="37.5930%" y="725" width="0.0165%" height="15" fill="rgb(225,12,32)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (52 samples, 0.02%)</title><rect x="37.5930%" y="709" width="0.0165%" height="15" fill="rgb(247,98,14)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (52 samples, 0.02%)</title><rect x="37.5930%" y="693" width="0.0165%" height="15" fill="rgb(247,219,48)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (52 samples, 0.02%)</title><rect x="37.5930%" y="677" width="0.0165%" height="15" fill="rgb(253,60,48)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (52 samples, 0.02%)</title><rect x="37.5930%" y="661" width="0.0165%" height="15" fill="rgb(245,15,52)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (52 samples, 0.02%)</title><rect x="37.5930%" y="645" width="0.0165%" height="15" fill="rgb(220,133,28)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (52 samples, 0.02%)</title><rect x="37.5930%" y="629" width="0.0165%" height="15" fill="rgb(217,180,4)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (52 samples, 0.02%)</title><rect x="37.5930%" y="613" width="0.0165%" height="15" fill="rgb(251,24,1)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (52 samples, 0.02%)</title><rect x="37.5930%" y="597" width="0.0165%" height="15" fill="rgb(212,185,49)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="607.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (52 samples, 0.02%)</title><rect x="37.5930%" y="581" width="0.0165%" height="15" fill="rgb(215,175,22)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="591.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (52 samples, 0.02%)</title><rect x="37.5930%" y="565" width="0.0165%" height="15" fill="rgb(250,205,14)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="575.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (52 samples, 0.02%)</title><rect x="37.5930%" y="549" width="0.0165%" height="15" fill="rgb(225,211,22)" fg:x="118444" fg:w="52"/><text x="37.8430%" y="559.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (40 samples, 0.01%)</title><rect x="37.6232%" y="677" width="0.0127%" height="15" fill="rgb(251,179,42)" fg:x="118539" fg:w="40"/><text x="37.8732%" y="687.50"></text></g><g><title>&lt;bevy_render::render_graph::schedule::DependentNodeStager as bevy_render::render_graph::schedule::RenderGraphStager&gt;::get_stages (56 samples, 0.02%)</title><rect x="37.6184%" y="693" width="0.0178%" height="15" fill="rgb(208,216,51)" fg:x="118524" fg:w="56"/><text x="37.8684%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (74 samples, 0.02%)</title><rect x="37.6616%" y="629" width="0.0235%" height="15" fill="rgb(235,36,11)" fg:x="118660" fg:w="74"/><text x="37.9116%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (74 samples, 0.02%)</title><rect x="37.6616%" y="613" width="0.0235%" height="15" fill="rgb(213,189,28)" fg:x="118660" fg:w="74"/><text x="37.9116%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (69 samples, 0.02%)</title><rect x="37.6632%" y="597" width="0.0219%" height="15" fill="rgb(227,203,42)" fg:x="118665" fg:w="69"/><text x="37.9132%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (69 samples, 0.02%)</title><rect x="37.6632%" y="581" width="0.0219%" height="15" fill="rgb(244,72,36)" fg:x="118665" fg:w="69"/><text x="37.9132%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 0.02%)</title><rect x="37.6635%" y="565" width="0.0216%" height="15" fill="rgb(213,53,17)" fg:x="118666" fg:w="68"/><text x="37.9135%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (63 samples, 0.02%)</title><rect x="37.6651%" y="549" width="0.0200%" height="15" fill="rgb(207,167,3)" fg:x="118671" fg:w="63"/><text x="37.9151%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (63 samples, 0.02%)</title><rect x="37.6651%" y="533" width="0.0200%" height="15" fill="rgb(216,98,30)" fg:x="118671" fg:w="63"/><text x="37.9151%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (46 samples, 0.01%)</title><rect x="37.6705%" y="517" width="0.0146%" height="15" fill="rgb(236,123,15)" fg:x="118688" fg:w="46"/><text x="37.9205%" y="527.50"></text></g><g><title>&lt;bevy_render::draw::RenderCommand as core::clone::Clone&gt;::clone (46 samples, 0.01%)</title><rect x="37.6705%" y="501" width="0.0146%" height="15" fill="rgb(248,81,50)" fg:x="118688" fg:w="46"/><text x="37.9205%" y="511.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::clone::Clone&gt;::clone (58 samples, 0.02%)</title><rect x="37.8349%" y="613" width="0.0184%" height="15" fill="rgb(214,120,4)" fg:x="119206" fg:w="58"/><text x="38.0849%" y="623.50"></text></g><g><title>&lt;bevy_render::draw::RenderCommand as core::clone::Clone&gt;::clone (871 samples, 0.28%)</title><rect x="37.6908%" y="629" width="0.2764%" height="15" fill="rgb(208,179,34)" fg:x="118752" fg:w="871"/><text x="37.9408%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (348 samples, 0.11%)</title><rect x="37.8568%" y="613" width="0.1105%" height="15" fill="rgb(227,140,7)" fg:x="119275" fg:w="348"/><text x="38.1068%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (333 samples, 0.11%)</title><rect x="37.8615%" y="597" width="0.1057%" height="15" fill="rgb(214,22,6)" fg:x="119290" fg:w="333"/><text x="38.1115%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (333 samples, 0.11%)</title><rect x="37.8615%" y="581" width="0.1057%" height="15" fill="rgb(207,137,27)" fg:x="119290" fg:w="333"/><text x="38.1115%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (333 samples, 0.11%)</title><rect x="37.8615%" y="565" width="0.1057%" height="15" fill="rgb(210,8,46)" fg:x="119290" fg:w="333"/><text x="38.1115%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (557 samples, 0.18%)</title><rect x="37.9695%" y="629" width="0.1768%" height="15" fill="rgb(240,16,54)" fg:x="119630" fg:w="557"/><text x="38.2195%" y="639.50"></text></g><g><title>core::ptr::write (537 samples, 0.17%)</title><rect x="37.9758%" y="613" width="0.1704%" height="15" fill="rgb(211,209,29)" fg:x="119650" fg:w="537"/><text x="38.2258%" y="623.50"></text></g><g><title>bevy_ecs::entity::Entities::get (34 samples, 0.01%)</title><rect x="38.1602%" y="581" width="0.0108%" height="15" fill="rgb(226,228,24)" fg:x="120231" fg:w="34"/><text x="38.4102%" y="591.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (87 samples, 0.03%)</title><rect x="38.1478%" y="597" width="0.0276%" height="15" fill="rgb(222,84,9)" fg:x="120192" fg:w="87"/><text x="38.3978%" y="607.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get (103 samples, 0.03%)</title><rect x="38.1462%" y="629" width="0.0327%" height="15" fill="rgb(234,203,30)" fg:x="120187" fg:w="103"/><text x="38.3962%" y="639.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked (103 samples, 0.03%)</title><rect x="38.1462%" y="613" width="0.0327%" height="15" fill="rgb(238,109,14)" fg:x="120187" fg:w="103"/><text x="38.3962%" y="623.50"></text></g><g><title>bevy_ecs::component::Components::get_id (44 samples, 0.01%)</title><rect x="38.1847%" y="581" width="0.0140%" height="15" fill="rgb(233,206,34)" fg:x="120308" fg:w="44"/><text x="38.4347%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (44 samples, 0.01%)</title><rect x="38.1847%" y="565" width="0.0140%" height="15" fill="rgb(220,167,47)" fg:x="120308" fg:w="44"/><text x="38.4347%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (44 samples, 0.01%)</title><rect x="38.1847%" y="549" width="0.0140%" height="15" fill="rgb(238,105,10)" fg:x="120308" fg:w="44"/><text x="38.4347%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (44 samples, 0.01%)</title><rect x="38.1847%" y="533" width="0.0140%" height="15" fill="rgb(213,227,17)" fg:x="120308" fg:w="44"/><text x="38.4347%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (44 samples, 0.01%)</title><rect x="38.1847%" y="517" width="0.0140%" height="15" fill="rgb(217,132,38)" fg:x="120308" fg:w="44"/><text x="38.4347%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (41 samples, 0.01%)</title><rect x="38.1856%" y="501" width="0.0130%" height="15" fill="rgb(242,146,4)" fg:x="120311" fg:w="41"/><text x="38.4356%" y="511.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component (83 samples, 0.03%)</title><rect x="38.1986%" y="581" width="0.0263%" height="15" fill="rgb(212,61,9)" fg:x="120352" fg:w="83"/><text x="38.4486%" y="591.50"></text></g><g><title>bevy_ecs::world::World::get (206 samples, 0.07%)</title><rect x="38.1789%" y="629" width="0.0654%" height="15" fill="rgb(247,126,22)" fg:x="120290" fg:w="206"/><text x="38.4289%" y="639.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityRef::get (189 samples, 0.06%)</title><rect x="38.1843%" y="613" width="0.0600%" height="15" fill="rgb(220,196,2)" fg:x="120307" fg:w="189"/><text x="38.4343%" y="623.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (189 samples, 0.06%)</title><rect x="38.1843%" y="597" width="0.0600%" height="15" fill="rgb(208,46,4)" fg:x="120307" fg:w="189"/><text x="38.4343%" y="607.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (61 samples, 0.02%)</title><rect x="38.2250%" y="581" width="0.0194%" height="15" fill="rgb(252,104,46)" fg:x="120435" fg:w="61"/><text x="38.4750%" y="591.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (37 samples, 0.01%)</title><rect x="38.2500%" y="613" width="0.0117%" height="15" fill="rgb(237,152,48)" fg:x="120514" fg:w="37"/><text x="38.5000%" y="623.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (41 samples, 0.01%)</title><rect x="38.2491%" y="629" width="0.0130%" height="15" fill="rgb(221,59,37)" fg:x="120511" fg:w="41"/><text x="38.4991%" y="639.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (65 samples, 0.02%)</title><rect x="38.2643%" y="613" width="0.0206%" height="15" fill="rgb(209,202,51)" fg:x="120559" fg:w="65"/><text x="38.5143%" y="623.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u64 (100 samples, 0.03%)</title><rect x="38.3005%" y="469" width="0.0317%" height="15" fill="rgb(228,81,30)" fg:x="120673" fg:w="100"/><text x="38.5505%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (140 samples, 0.04%)</title><rect x="38.3005%" y="501" width="0.0444%" height="15" fill="rgb(227,42,39)" fg:x="120673" fg:w="140"/><text x="38.5505%" y="511.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (140 samples, 0.04%)</title><rect x="38.3005%" y="485" width="0.0444%" height="15" fill="rgb(221,26,2)" fg:x="120673" fg:w="140"/><text x="38.5505%" y="495.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (40 samples, 0.01%)</title><rect x="38.3322%" y="469" width="0.0127%" height="15" fill="rgb(254,61,31)" fg:x="120773" fg:w="40"/><text x="38.5822%" y="479.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (148 samples, 0.05%)</title><rect x="38.3005%" y="565" width="0.0470%" height="15" fill="rgb(222,173,38)" fg:x="120673" fg:w="148"/><text x="38.5505%" y="575.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (148 samples, 0.05%)</title><rect x="38.3005%" y="549" width="0.0470%" height="15" fill="rgb(218,50,12)" fg:x="120673" fg:w="148"/><text x="38.5505%" y="559.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (148 samples, 0.05%)</title><rect x="38.3005%" y="533" width="0.0470%" height="15" fill="rgb(223,88,40)" fg:x="120673" fg:w="148"/><text x="38.5505%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (148 samples, 0.05%)</title><rect x="38.3005%" y="517" width="0.0470%" height="15" fill="rgb(237,54,19)" fg:x="120673" fg:w="148"/><text x="38.5505%" y="527.50"></text></g><g><title>hashbrown::map::make_insert_hash (202 samples, 0.06%)</title><rect x="38.2907%" y="597" width="0.0641%" height="15" fill="rgb(251,129,25)" fg:x="120642" fg:w="202"/><text x="38.5407%" y="607.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (171 samples, 0.05%)</title><rect x="38.3005%" y="581" width="0.0543%" height="15" fill="rgb(238,97,19)" fg:x="120673" fg:w="171"/><text x="38.5505%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (101 samples, 0.03%)</title><rect x="38.3548%" y="597" width="0.0321%" height="15" fill="rgb(240,169,18)" fg:x="120844" fg:w="101"/><text x="38.6048%" y="607.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (40 samples, 0.01%)</title><rect x="38.3741%" y="581" width="0.0127%" height="15" fill="rgb(230,187,49)" fg:x="120905" fg:w="40"/><text x="38.6241%" y="591.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (40 samples, 0.01%)</title><rect x="38.3741%" y="565" width="0.0127%" height="15" fill="rgb(209,44,26)" fg:x="120905" fg:w="40"/><text x="38.6241%" y="575.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (40 samples, 0.01%)</title><rect x="38.3741%" y="549" width="0.0127%" height="15" fill="rgb(244,0,6)" fg:x="120905" fg:w="40"/><text x="38.6241%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (329 samples, 0.10%)</title><rect x="38.2849%" y="613" width="0.1044%" height="15" fill="rgb(248,18,21)" fg:x="120624" fg:w="329"/><text x="38.5349%" y="623.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare::{{closure}} (2,377 samples, 0.75%)</title><rect x="37.6362%" y="645" width="0.7544%" height="15" fill="rgb(245,180,19)" fg:x="118580" fg:w="2377"/><text x="37.8862%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (405 samples, 0.13%)</title><rect x="38.2621%" y="629" width="0.1285%" height="15" fill="rgb(252,118,36)" fg:x="120552" fg:w="405"/><text x="38.5121%" y="639.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (2,428 samples, 0.77%)</title><rect x="37.6362%" y="661" width="0.7706%" height="15" fill="rgb(210,224,19)" fg:x="118580" fg:w="2428"/><text x="37.8862%" y="671.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (48 samples, 0.02%)</title><rect x="38.3916%" y="645" width="0.0152%" height="15" fill="rgb(218,30,24)" fg:x="120960" fg:w="48"/><text x="38.6416%" y="655.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (2,429 samples, 0.77%)</title><rect x="37.6362%" y="693" width="0.7709%" height="15" fill="rgb(219,75,50)" fg:x="118580" fg:w="2429"/><text x="37.8862%" y="703.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare (2,429 samples, 0.77%)</title><rect x="37.6362%" y="677" width="0.7709%" height="15" fill="rgb(234,72,50)" fg:x="118580" fg:w="2429"/><text x="37.8862%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;,ahash::random_state::RandomState&gt;&gt;&gt; (117 samples, 0.04%)</title><rect x="38.4694%" y="629" width="0.0371%" height="15" fill="rgb(219,100,48)" fg:x="121205" fg:w="117"/><text x="38.7194%" y="639.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (117 samples, 0.04%)</title><rect x="38.4694%" y="613" width="0.0371%" height="15" fill="rgb(253,5,41)" fg:x="121205" fg:w="117"/><text x="38.7194%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (117 samples, 0.04%)</title><rect x="38.4694%" y="597" width="0.0371%" height="15" fill="rgb(247,181,11)" fg:x="121205" fg:w="117"/><text x="38.7194%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (103 samples, 0.03%)</title><rect x="38.4738%" y="581" width="0.0327%" height="15" fill="rgb(222,223,25)" fg:x="121219" fg:w="103"/><text x="38.7238%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (103 samples, 0.03%)</title><rect x="38.4738%" y="565" width="0.0327%" height="15" fill="rgb(214,198,28)" fg:x="121219" fg:w="103"/><text x="38.7238%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (207 samples, 0.07%)</title><rect x="38.5097%" y="581" width="0.0657%" height="15" fill="rgb(230,46,43)" fg:x="121332" fg:w="207"/><text x="38.7597%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (207 samples, 0.07%)</title><rect x="38.5097%" y="565" width="0.0657%" height="15" fill="rgb(233,65,53)" fg:x="121332" fg:w="207"/><text x="38.7597%" y="575.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (219 samples, 0.07%)</title><rect x="38.5065%" y="629" width="0.0695%" height="15" fill="rgb(221,121,27)" fg:x="121322" fg:w="219"/><text x="38.7565%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (219 samples, 0.07%)</title><rect x="38.5065%" y="613" width="0.0695%" height="15" fill="rgb(247,70,47)" fg:x="121322" fg:w="219"/><text x="38.7565%" y="623.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (219 samples, 0.07%)</title><rect x="38.5065%" y="597" width="0.0695%" height="15" fill="rgb(228,85,35)" fg:x="121322" fg:w="219"/><text x="38.7565%" y="607.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (36 samples, 0.01%)</title><rect x="38.5874%" y="469" width="0.0114%" height="15" fill="rgb(209,50,18)" fg:x="121577" fg:w="36"/><text x="38.8374%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (38 samples, 0.01%)</title><rect x="38.5874%" y="501" width="0.0121%" height="15" fill="rgb(250,19,35)" fg:x="121577" fg:w="38"/><text x="38.8374%" y="511.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (38 samples, 0.01%)</title><rect x="38.5874%" y="485" width="0.0121%" height="15" fill="rgb(253,107,29)" fg:x="121577" fg:w="38"/><text x="38.8374%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (80 samples, 0.03%)</title><rect x="38.5760%" y="581" width="0.0254%" height="15" fill="rgb(252,179,29)" fg:x="121541" fg:w="80"/><text x="38.8260%" y="591.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::hash::Hash&gt;::hash (44 samples, 0.01%)</title><rect x="38.5874%" y="565" width="0.0140%" height="15" fill="rgb(238,194,6)" fg:x="121577" fg:w="44"/><text x="38.8374%" y="575.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (44 samples, 0.01%)</title><rect x="38.5874%" y="549" width="0.0140%" height="15" fill="rgb(238,164,29)" fg:x="121577" fg:w="44"/><text x="38.8374%" y="559.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (44 samples, 0.01%)</title><rect x="38.5874%" y="533" width="0.0140%" height="15" fill="rgb(224,25,9)" fg:x="121577" fg:w="44"/><text x="38.8374%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (44 samples, 0.01%)</title><rect x="38.5874%" y="517" width="0.0140%" height="15" fill="rgb(244,153,23)" fg:x="121577" fg:w="44"/><text x="38.8374%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="38.6090%" y="549" width="0.0114%" height="15" fill="rgb(212,203,14)" fg:x="121645" fg:w="36"/><text x="38.8590%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="38.6090%" y="533" width="0.0114%" height="15" fill="rgb(220,164,20)" fg:x="121645" fg:w="36"/><text x="38.8590%" y="543.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (32 samples, 0.01%)</title><rect x="38.6204%" y="549" width="0.0102%" height="15" fill="rgb(222,203,48)" fg:x="121681" fg:w="32"/><text x="38.8704%" y="559.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::cmp::PartialEq&gt;::eq (32 samples, 0.01%)</title><rect x="38.6204%" y="533" width="0.0102%" height="15" fill="rgb(215,159,22)" fg:x="121681" fg:w="32"/><text x="38.8704%" y="543.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (32 samples, 0.01%)</title><rect x="38.6204%" y="517" width="0.0102%" height="15" fill="rgb(216,183,47)" fg:x="121681" fg:w="32"/><text x="38.8704%" y="527.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (32 samples, 0.01%)</title><rect x="38.6204%" y="501" width="0.0102%" height="15" fill="rgb(229,195,25)" fg:x="121681" fg:w="32"/><text x="38.8704%" y="511.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (32 samples, 0.01%)</title><rect x="38.6204%" y="485" width="0.0102%" height="15" fill="rgb(224,132,51)" fg:x="121681" fg:w="32"/><text x="38.8704%" y="495.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (34 samples, 0.01%)</title><rect x="38.6306%" y="549" width="0.0108%" height="15" fill="rgb(240,63,7)" fg:x="121713" fg:w="34"/><text x="38.8806%" y="559.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (34 samples, 0.01%)</title><rect x="38.6306%" y="533" width="0.0108%" height="15" fill="rgb(249,182,41)" fg:x="121713" fg:w="34"/><text x="38.8806%" y="543.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (34 samples, 0.01%)</title><rect x="38.6306%" y="517" width="0.0108%" height="15" fill="rgb(243,47,26)" fg:x="121713" fg:w="34"/><text x="38.8806%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (260 samples, 0.08%)</title><rect x="38.5760%" y="629" width="0.0825%" height="15" fill="rgb(233,48,2)" fg:x="121541" fg:w="260"/><text x="38.8260%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (260 samples, 0.08%)</title><rect x="38.5760%" y="613" width="0.0825%" height="15" fill="rgb(244,165,34)" fg:x="121541" fg:w="260"/><text x="38.8260%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (260 samples, 0.08%)</title><rect x="38.5760%" y="597" width="0.0825%" height="15" fill="rgb(207,89,7)" fg:x="121541" fg:w="260"/><text x="38.8260%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (180 samples, 0.06%)</title><rect x="38.6014%" y="581" width="0.0571%" height="15" fill="rgb(244,117,36)" fg:x="121621" fg:w="180"/><text x="38.8514%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (173 samples, 0.05%)</title><rect x="38.6036%" y="565" width="0.0549%" height="15" fill="rgb(226,144,34)" fg:x="121628" fg:w="173"/><text x="38.8536%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (54 samples, 0.02%)</title><rect x="38.6414%" y="549" width="0.0171%" height="15" fill="rgb(213,23,19)" fg:x="121747" fg:w="54"/><text x="38.8914%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (54 samples, 0.02%)</title><rect x="38.6414%" y="533" width="0.0171%" height="15" fill="rgb(217,75,12)" fg:x="121747" fg:w="54"/><text x="38.8914%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (54 samples, 0.02%)</title><rect x="38.6414%" y="517" width="0.0171%" height="15" fill="rgb(224,159,17)" fg:x="121747" fg:w="54"/><text x="38.8914%" y="527.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (745 samples, 0.24%)</title><rect x="38.4405%" y="661" width="0.2365%" height="15" fill="rgb(217,118,1)" fg:x="121114" fg:w="745"/><text x="38.6905%" y="671.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (719 samples, 0.23%)</title><rect x="38.4487%" y="645" width="0.2282%" height="15" fill="rgb(232,180,48)" fg:x="121140" fg:w="719"/><text x="38.6987%" y="655.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (58 samples, 0.02%)</title><rect x="38.6585%" y="629" width="0.0184%" height="15" fill="rgb(230,27,33)" fg:x="121801" fg:w="58"/><text x="38.9085%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (48 samples, 0.02%)</title><rect x="38.6617%" y="613" width="0.0152%" height="15" fill="rgb(205,31,21)" fg:x="121811" fg:w="48"/><text x="38.9117%" y="623.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (815 samples, 0.26%)</title><rect x="38.4205%" y="677" width="0.2587%" height="15" fill="rgb(253,59,4)" fg:x="121051" fg:w="815"/><text x="38.6705%" y="687.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (893 samples, 0.28%)</title><rect x="38.4116%" y="693" width="0.2834%" height="15" fill="rgb(224,201,9)" fg:x="121023" fg:w="893"/><text x="38.6616%" y="703.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (3,477 samples, 1.10%)</title><rect x="37.5930%" y="757" width="1.1036%" height="15" fill="rgb(229,206,30)" fg:x="118444" fg:w="3477"/><text x="37.8430%" y="767.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (3,397 samples, 1.08%)</title><rect x="37.6184%" y="741" width="1.0782%" height="15" fill="rgb(212,67,47)" fg:x="118524" fg:w="3397"/><text x="37.8684%" y="751.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (3,397 samples, 1.08%)</title><rect x="37.6184%" y="725" width="1.0782%" height="15" fill="rgb(211,96,50)" fg:x="118524" fg:w="3397"/><text x="37.8684%" y="735.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (3,397 samples, 1.08%)</title><rect x="37.6184%" y="709" width="1.0782%" height="15" fill="rgb(252,114,18)" fg:x="118524" fg:w="3397"/><text x="37.8684%" y="719.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (3,498 samples, 1.11%)</title><rect x="37.5876%" y="789" width="1.1102%" height="15" fill="rgb(223,58,37)" fg:x="118427" fg:w="3498"/><text x="37.8376%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (3,498 samples, 1.11%)</title><rect x="37.5876%" y="773" width="1.1102%" height="15" fill="rgb(237,70,4)" fg:x="118427" fg:w="3498"/><text x="37.8376%" y="783.50"></text></g><g><title>bevy_winit::run (49,371 samples, 15.67%)</title><rect x="23.0296%" y="965" width="15.6699%" height="15" fill="rgb(244,85,46)" fg:x="72559" fg:w="49371"/><text x="23.2796%" y="975.50">bevy_winit::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (49,371 samples, 15.67%)</title><rect x="23.0296%" y="949" width="15.6699%" height="15" fill="rgb(223,39,52)" fg:x="72559" fg:w="49371"/><text x="23.2796%" y="959.50">winit::event_loop::Event..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (49,371 samples, 15.67%)</title><rect x="23.0296%" y="933" width="15.6699%" height="15" fill="rgb(218,200,14)" fg:x="72559" fg:w="49371"/><text x="23.2796%" y="943.50">winit::platform_impl::pl..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (49,371 samples, 15.67%)</title><rect x="23.0296%" y="917" width="15.6699%" height="15" fill="rgb(208,171,16)" fg:x="72559" fg:w="49371"/><text x="23.2796%" y="927.50">winit::platform_impl::pl..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (49,371 samples, 15.67%)</title><rect x="23.0296%" y="901" width="15.6699%" height="15" fill="rgb(234,200,18)" fg:x="72559" fg:w="49371"/><text x="23.2796%" y="911.50">winit::platform_impl::pl..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (49,371 samples, 15.67%)</title><rect x="23.0296%" y="885" width="15.6699%" height="15" fill="rgb(228,45,11)" fg:x="72559" fg:w="49371"/><text x="23.2796%" y="895.50">winit::platform_impl::pl..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (49,371 samples, 15.67%)</title><rect x="23.0296%" y="869" width="15.6699%" height="15" fill="rgb(237,182,11)" fg:x="72559" fg:w="49371"/><text x="23.2796%" y="879.50">bevy_winit::winit_runner..</text></g><g><title>bevy_app::app::App::update (49,371 samples, 15.67%)</title><rect x="23.0296%" y="853" width="15.6699%" height="15" fill="rgb(241,175,49)" fg:x="72559" fg:w="49371"/><text x="23.2796%" y="863.50">bevy_app::app::App::upda..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (49,371 samples, 15.67%)</title><rect x="23.0296%" y="837" width="15.6699%" height="15" fill="rgb(247,38,35)" fg:x="72559" fg:w="49371"/><text x="23.2796%" y="847.50">&lt;bevy_ecs::schedule::Sch..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (49,371 samples, 15.67%)</title><rect x="23.0296%" y="821" width="15.6699%" height="15" fill="rgb(228,39,49)" fg:x="72559" fg:w="49371"/><text x="23.2796%" y="831.50">bevy_ecs::schedule::Sche..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (49,350 samples, 15.66%)</title><rect x="23.0362%" y="805" width="15.6632%" height="15" fill="rgb(226,101,26)" fg:x="72580" fg:w="49350"/><text x="23.2862%" y="815.50">&lt;bevy_ecs::schedule::sta..</text></g><g><title>alloc::alloc::box_free (87 samples, 0.03%)</title><rect x="38.7579%" y="725" width="0.0276%" height="15" fill="rgb(206,141,19)" fg:x="122114" fg:w="87"/><text x="39.0079%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (87 samples, 0.03%)</title><rect x="38.7579%" y="709" width="0.0276%" height="15" fill="rgb(211,200,13)" fg:x="122114" fg:w="87"/><text x="39.0079%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (87 samples, 0.03%)</title><rect x="38.7579%" y="693" width="0.0276%" height="15" fill="rgb(241,121,6)" fg:x="122114" fg:w="87"/><text x="39.0079%" y="703.50"></text></g><g><title>__rdl_dealloc (87 samples, 0.03%)</title><rect x="38.7579%" y="677" width="0.0276%" height="15" fill="rgb(234,221,29)" fg:x="122114" fg:w="87"/><text x="39.0079%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (87 samples, 0.03%)</title><rect x="38.7579%" y="661" width="0.0276%" height="15" fill="rgb(229,136,5)" fg:x="122114" fg:w="87"/><text x="39.0079%" y="671.50"></text></g><g><title>__GI___libc_free (86 samples, 0.03%)</title><rect x="38.7582%" y="645" width="0.0273%" height="15" fill="rgb(238,36,11)" fg:x="122115" fg:w="86"/><text x="39.0082%" y="655.50"></text></g><g><title>_int_free (62 samples, 0.02%)</title><rect x="38.7658%" y="629" width="0.0197%" height="15" fill="rgb(251,55,41)" fg:x="122139" fg:w="62"/><text x="39.0158%" y="639.50"></text></g><g><title>bevy_ecs::world::World::get_entity_mut (88 samples, 0.03%)</title><rect x="38.7855%" y="709" width="0.0279%" height="15" fill="rgb(242,34,40)" fg:x="122201" fg:w="88"/><text x="39.0355%" y="719.50"></text></g><g><title>bevy_ecs::entity::Entities::get (88 samples, 0.03%)</title><rect x="38.7855%" y="693" width="0.0279%" height="15" fill="rgb(215,42,17)" fg:x="122201" fg:w="88"/><text x="39.0355%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (251 samples, 0.08%)</title><rect x="38.7344%" y="741" width="0.0797%" height="15" fill="rgb(207,44,46)" fg:x="122040" fg:w="251"/><text x="38.9844%" y="751.50"></text></g><g><title>bevy_ecs::world::World::entity_mut (90 samples, 0.03%)</title><rect x="38.7855%" y="725" width="0.0286%" height="15" fill="rgb(211,206,28)" fg:x="122201" fg:w="90"/><text x="39.0355%" y="735.50"></text></g><g><title>bevy_ecs::world::World::get_entity_mut (48 samples, 0.02%)</title><rect x="38.8255%" y="725" width="0.0152%" height="15" fill="rgb(237,167,16)" fg:x="122327" fg:w="48"/><text x="39.0755%" y="735.50"></text></g><g><title>bevy_ecs::entity::Entities::get (48 samples, 0.02%)</title><rect x="38.8255%" y="709" width="0.0152%" height="15" fill="rgb(233,66,6)" fg:x="122327" fg:w="48"/><text x="39.0755%" y="719.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove_bundle (116 samples, 0.04%)</title><rect x="38.8420%" y="709" width="0.0368%" height="15" fill="rgb(246,123,29)" fg:x="122379" fg:w="116"/><text x="39.0920%" y="719.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove (121 samples, 0.04%)</title><rect x="38.8407%" y="725" width="0.0384%" height="15" fill="rgb(209,62,40)" fg:x="122375" fg:w="121"/><text x="39.0907%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bevy_ecs::system::commands::Remove&lt;engine::engine::actor::pathfinding::Path&gt;&gt;&gt; (71 samples, 0.02%)</title><rect x="38.8791%" y="725" width="0.0225%" height="15" fill="rgb(218,4,25)" fg:x="122496" fg:w="71"/><text x="39.1291%" y="735.50"></text></g><g><title>alloc::alloc::box_free (71 samples, 0.02%)</title><rect x="38.8791%" y="709" width="0.0225%" height="15" fill="rgb(253,91,49)" fg:x="122496" fg:w="71"/><text x="39.1291%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (71 samples, 0.02%)</title><rect x="38.8791%" y="693" width="0.0225%" height="15" fill="rgb(228,155,29)" fg:x="122496" fg:w="71"/><text x="39.1291%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (71 samples, 0.02%)</title><rect x="38.8791%" y="677" width="0.0225%" height="15" fill="rgb(243,57,37)" fg:x="122496" fg:w="71"/><text x="39.1291%" y="687.50"></text></g><g><title>__rdl_dealloc (71 samples, 0.02%)</title><rect x="38.8791%" y="661" width="0.0225%" height="15" fill="rgb(244,167,17)" fg:x="122496" fg:w="71"/><text x="39.1291%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (71 samples, 0.02%)</title><rect x="38.8791%" y="645" width="0.0225%" height="15" fill="rgb(207,181,38)" fg:x="122496" fg:w="71"/><text x="39.1291%" y="655.50"></text></g><g><title>__GI___libc_free (71 samples, 0.02%)</title><rect x="38.8791%" y="629" width="0.0225%" height="15" fill="rgb(211,8,23)" fg:x="122496" fg:w="71"/><text x="39.1291%" y="639.50"></text></g><g><title>_int_free (57 samples, 0.02%)</title><rect x="38.8835%" y="613" width="0.0181%" height="15" fill="rgb(235,11,44)" fg:x="122510" fg:w="57"/><text x="39.1335%" y="623.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Remove&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (298 samples, 0.09%)</title><rect x="38.8140%" y="741" width="0.0946%" height="15" fill="rgb(248,18,52)" fg:x="122291" fg:w="298"/><text x="39.0640%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (574 samples, 0.18%)</title><rect x="38.7271%" y="773" width="0.1822%" height="15" fill="rgb(208,4,7)" fg:x="122017" fg:w="574"/><text x="38.9771%" y="783.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (574 samples, 0.18%)</title><rect x="38.7271%" y="757" width="0.1822%" height="15" fill="rgb(240,17,39)" fg:x="122017" fg:w="574"/><text x="38.9771%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (104 samples, 0.03%)</title><rect x="38.9400%" y="629" width="0.0330%" height="15" fill="rgb(207,170,3)" fg:x="122688" fg:w="104"/><text x="39.1900%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_or (104 samples, 0.03%)</title><rect x="38.9400%" y="613" width="0.0330%" height="15" fill="rgb(236,100,52)" fg:x="122688" fg:w="104"/><text x="39.1900%" y="623.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (140 samples, 0.04%)</title><rect x="38.9327%" y="645" width="0.0444%" height="15" fill="rgb(246,78,51)" fg:x="122665" fg:w="140"/><text x="39.1827%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (96 samples, 0.03%)</title><rect x="38.9877%" y="629" width="0.0305%" height="15" fill="rgb(211,17,15)" fg:x="122838" fg:w="96"/><text x="39.2377%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (96 samples, 0.03%)</title><rect x="38.9877%" y="613" width="0.0305%" height="15" fill="rgb(209,59,46)" fg:x="122838" fg:w="96"/><text x="39.2377%" y="623.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (304 samples, 0.10%)</title><rect x="38.9226%" y="677" width="0.0965%" height="15" fill="rgb(210,92,25)" fg:x="122633" fg:w="304"/><text x="39.1726%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (291 samples, 0.09%)</title><rect x="38.9267%" y="661" width="0.0924%" height="15" fill="rgb(238,174,52)" fg:x="122646" fg:w="291"/><text x="39.1767%" y="671.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (132 samples, 0.04%)</title><rect x="38.9772%" y="645" width="0.0419%" height="15" fill="rgb(230,73,7)" fg:x="122805" fg:w="132"/><text x="39.2272%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (51 samples, 0.02%)</title><rect x="39.0191%" y="677" width="0.0162%" height="15" fill="rgb(243,124,40)" fg:x="122937" fg:w="51"/><text x="39.2691%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (51 samples, 0.02%)</title><rect x="39.0191%" y="661" width="0.0162%" height="15" fill="rgb(244,170,11)" fg:x="122937" fg:w="51"/><text x="39.2691%" y="671.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::remove_stale_bind_groups (369 samples, 0.12%)</title><rect x="38.9185%" y="725" width="0.1171%" height="15" fill="rgb(207,114,54)" fg:x="122620" fg:w="369"/><text x="39.1685%" y="735.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::remove_stale_bind_groups (369 samples, 0.12%)</title><rect x="38.9185%" y="709" width="0.1171%" height="15" fill="rgb(205,42,20)" fg:x="122620" fg:w="369"/><text x="39.1685%" y="719.50"></text></g><g><title>bevy_wgpu::wgpu_resources::BindGroupCounter::remove_stale_bind_groups (369 samples, 0.12%)</title><rect x="38.9185%" y="693" width="0.1171%" height="15" fill="rgb(230,30,28)" fg:x="122620" fg:w="369"/><text x="39.1685%" y="703.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (401 samples, 0.13%)</title><rect x="38.9175%" y="741" width="0.1273%" height="15" fill="rgb(205,73,54)" fg:x="122617" fg:w="401"/><text x="39.1675%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (427 samples, 0.14%)</title><rect x="38.9105%" y="773" width="0.1355%" height="15" fill="rgb(254,227,23)" fg:x="122595" fg:w="427"/><text x="39.1605%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (422 samples, 0.13%)</title><rect x="38.9121%" y="757" width="0.1339%" height="15" fill="rgb(228,202,34)" fg:x="122600" fg:w="422"/><text x="39.1621%" y="767.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1,064 samples, 0.34%)</title><rect x="38.7125%" y="789" width="0.3377%" height="15" fill="rgb(222,225,37)" fg:x="121971" fg:w="1064"/><text x="38.9625%" y="799.50"></text></g><g><title>bevy_app::app::App::update (1,105 samples, 0.35%)</title><rect x="38.7109%" y="837" width="0.3507%" height="15" fill="rgb(221,14,54)" fg:x="121966" fg:w="1105"/><text x="38.9609%" y="847.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1,105 samples, 0.35%)</title><rect x="38.7109%" y="821" width="0.3507%" height="15" fill="rgb(254,102,2)" fg:x="121966" fg:w="1105"/><text x="38.9609%" y="831.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1,103 samples, 0.35%)</title><rect x="38.7115%" y="805" width="0.3501%" height="15" fill="rgb(232,104,17)" fg:x="121968" fg:w="1103"/><text x="38.9615%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (36 samples, 0.01%)</title><rect x="39.0502%" y="789" width="0.0114%" height="15" fill="rgb(250,220,14)" fg:x="123035" fg:w="36"/><text x="39.3002%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (36 samples, 0.01%)</title><rect x="39.0502%" y="773" width="0.0114%" height="15" fill="rgb(241,158,9)" fg:x="123035" fg:w="36"/><text x="39.3002%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (36 samples, 0.01%)</title><rect x="39.0502%" y="757" width="0.0114%" height="15" fill="rgb(246,9,43)" fg:x="123035" fg:w="36"/><text x="39.3002%" y="767.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1,114 samples, 0.35%)</title><rect x="38.7106%" y="869" width="0.3536%" height="15" fill="rgb(206,73,33)" fg:x="121965" fg:w="1114"/><text x="38.9606%" y="879.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (1,114 samples, 0.35%)</title><rect x="38.7106%" y="853" width="0.3536%" height="15" fill="rgb(222,79,8)" fg:x="121965" fg:w="1114"/><text x="38.9606%" y="863.50"></text></g><g><title>bevy_winit::winit_runner_with (1,138 samples, 0.36%)</title><rect x="38.7068%" y="965" width="0.3612%" height="15" fill="rgb(234,8,54)" fg:x="121953" fg:w="1138"/><text x="38.9568%" y="975.50"></text></g><g><title>bevy_winit::run (1,138 samples, 0.36%)</title><rect x="38.7068%" y="949" width="0.3612%" height="15" fill="rgb(209,134,38)" fg:x="121953" fg:w="1138"/><text x="38.9568%" y="959.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (1,138 samples, 0.36%)</title><rect x="38.7068%" y="933" width="0.3612%" height="15" fill="rgb(230,127,29)" fg:x="121953" fg:w="1138"/><text x="38.9568%" y="943.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (1,138 samples, 0.36%)</title><rect x="38.7068%" y="917" width="0.3612%" height="15" fill="rgb(242,44,41)" fg:x="121953" fg:w="1138"/><text x="38.9568%" y="927.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (1,138 samples, 0.36%)</title><rect x="38.7068%" y="901" width="0.3612%" height="15" fill="rgb(222,56,43)" fg:x="121953" fg:w="1138"/><text x="38.9568%" y="911.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1,138 samples, 0.36%)</title><rect x="38.7068%" y="885" width="0.3612%" height="15" fill="rgb(238,39,47)" fg:x="121953" fg:w="1138"/><text x="38.9568%" y="895.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_except_entities (78 samples, 0.02%)</title><rect x="39.1092%" y="965" width="0.0248%" height="15" fill="rgb(226,79,43)" fg:x="123221" fg:w="78"/><text x="39.3592%" y="975.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (609 samples, 0.19%)</title><rect x="39.1340%" y="965" width="0.1933%" height="15" fill="rgb(242,105,53)" fg:x="123299" fg:w="609"/><text x="39.3840%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (115 samples, 0.04%)</title><rect x="39.2908%" y="949" width="0.0365%" height="15" fill="rgb(251,132,46)" fg:x="123793" fg:w="115"/><text x="39.5408%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 samples, 0.04%)</title><rect x="39.2908%" y="933" width="0.0365%" height="15" fill="rgb(231,77,14)" fg:x="123793" fg:w="115"/><text x="39.5408%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (115 samples, 0.04%)</title><rect x="39.2908%" y="917" width="0.0365%" height="15" fill="rgb(240,135,9)" fg:x="123793" fg:w="115"/><text x="39.5408%" y="927.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 samples, 0.04%)</title><rect x="39.2908%" y="901" width="0.0365%" height="15" fill="rgb(248,109,14)" fg:x="123793" fg:w="115"/><text x="39.5408%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (115 samples, 0.04%)</title><rect x="39.2908%" y="885" width="0.0365%" height="15" fill="rgb(227,146,52)" fg:x="123793" fg:w="115"/><text x="39.5408%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (115 samples, 0.04%)</title><rect x="39.2908%" y="869" width="0.0365%" height="15" fill="rgb(232,54,3)" fg:x="123793" fg:w="115"/><text x="39.5408%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (115 samples, 0.04%)</title><rect x="39.2908%" y="853" width="0.0365%" height="15" fill="rgb(229,201,43)" fg:x="123793" fg:w="115"/><text x="39.5408%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (115 samples, 0.04%)</title><rect x="39.2908%" y="837" width="0.0365%" height="15" fill="rgb(252,161,33)" fg:x="123793" fg:w="115"/><text x="39.5408%" y="847.50"></text></g><g><title>__rdl_dealloc (115 samples, 0.04%)</title><rect x="39.2908%" y="821" width="0.0365%" height="15" fill="rgb(226,146,40)" fg:x="123793" fg:w="115"/><text x="39.5408%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (115 samples, 0.04%)</title><rect x="39.2908%" y="805" width="0.0365%" height="15" fill="rgb(219,47,25)" fg:x="123793" fg:w="115"/><text x="39.5408%" y="815.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (37 samples, 0.01%)</title><rect x="39.3276%" y="965" width="0.0117%" height="15" fill="rgb(250,135,13)" fg:x="123909" fg:w="37"/><text x="39.5776%" y="975.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (53 samples, 0.02%)</title><rect x="39.3406%" y="965" width="0.0168%" height="15" fill="rgb(219,229,18)" fg:x="123950" fg:w="53"/><text x="39.5906%" y="975.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (88 samples, 0.03%)</title><rect x="39.3755%" y="965" width="0.0279%" height="15" fill="rgb(217,152,27)" fg:x="124060" fg:w="88"/><text x="39.6255%" y="975.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (1,648 samples, 0.52%)</title><rect x="39.4155%" y="965" width="0.5231%" height="15" fill="rgb(225,71,47)" fg:x="124186" fg:w="1648"/><text x="39.6655%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (137 samples, 0.04%)</title><rect x="39.9789%" y="949" width="0.0435%" height="15" fill="rgb(220,139,14)" fg:x="125961" fg:w="137"/><text x="40.2289%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (137 samples, 0.04%)</title><rect x="39.9789%" y="933" width="0.0435%" height="15" fill="rgb(247,54,32)" fg:x="125961" fg:w="137"/><text x="40.2289%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (137 samples, 0.04%)</title><rect x="39.9789%" y="917" width="0.0435%" height="15" fill="rgb(252,131,39)" fg:x="125961" fg:w="137"/><text x="40.2289%" y="927.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (137 samples, 0.04%)</title><rect x="39.9789%" y="901" width="0.0435%" height="15" fill="rgb(210,108,39)" fg:x="125961" fg:w="137"/><text x="40.2289%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (137 samples, 0.04%)</title><rect x="39.9789%" y="885" width="0.0435%" height="15" fill="rgb(205,23,29)" fg:x="125961" fg:w="137"/><text x="40.2289%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (137 samples, 0.04%)</title><rect x="39.9789%" y="869" width="0.0435%" height="15" fill="rgb(246,139,46)" fg:x="125961" fg:w="137"/><text x="40.2289%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (137 samples, 0.04%)</title><rect x="39.9789%" y="853" width="0.0435%" height="15" fill="rgb(250,81,26)" fg:x="125961" fg:w="137"/><text x="40.2289%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (137 samples, 0.04%)</title><rect x="39.9789%" y="837" width="0.0435%" height="15" fill="rgb(214,104,7)" fg:x="125961" fg:w="137"/><text x="40.2289%" y="847.50"></text></g><g><title>__rdl_dealloc (137 samples, 0.04%)</title><rect x="39.9789%" y="821" width="0.0435%" height="15" fill="rgb(233,189,8)" fg:x="125961" fg:w="137"/><text x="40.2289%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (137 samples, 0.04%)</title><rect x="39.9789%" y="805" width="0.0435%" height="15" fill="rgb(228,141,17)" fg:x="125961" fg:w="137"/><text x="40.2289%" y="815.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (822 samples, 0.26%)</title><rect x="40.0233%" y="949" width="0.2609%" height="15" fill="rgb(247,157,1)" fg:x="126101" fg:w="822"/><text x="40.2733%" y="959.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (822 samples, 0.26%)</title><rect x="40.0233%" y="933" width="0.2609%" height="15" fill="rgb(249,225,5)" fg:x="126101" fg:w="822"/><text x="40.2733%" y="943.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (822 samples, 0.26%)</title><rect x="40.0233%" y="917" width="0.2609%" height="15" fill="rgb(242,55,13)" fg:x="126101" fg:w="822"/><text x="40.2733%" y="927.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (58 samples, 0.02%)</title><rect x="40.2842%" y="949" width="0.0184%" height="15" fill="rgb(230,49,50)" fg:x="126923" fg:w="58"/><text x="40.5342%" y="959.50"></text></g><g><title>pathfinding::directed::astar::astar (1,121 samples, 0.36%)</title><rect x="39.9481%" y="965" width="0.3558%" height="15" fill="rgb(241,111,38)" fg:x="125864" fg:w="1121"/><text x="40.1981%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (251 samples, 0.08%)</title><rect x="40.3080%" y="965" width="0.0797%" height="15" fill="rgb(252,155,4)" fg:x="126998" fg:w="251"/><text x="40.5580%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (250 samples, 0.08%)</title><rect x="40.3083%" y="949" width="0.0793%" height="15" fill="rgb(212,69,32)" fg:x="126999" fg:w="250"/><text x="40.5583%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (246 samples, 0.08%)</title><rect x="40.3096%" y="933" width="0.0781%" height="15" fill="rgb(243,107,47)" fg:x="127003" fg:w="246"/><text x="40.5596%" y="943.50"></text></g><g><title>unlink_chunk.constprop.0 (47 samples, 0.01%)</title><rect x="40.3889%" y="965" width="0.0149%" height="15" fill="rgb(247,130,12)" fg:x="127253" fg:w="47"/><text x="40.6389%" y="975.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (218 samples, 0.07%)</title><rect x="40.4038%" y="965" width="0.0692%" height="15" fill="rgb(233,74,16)" fg:x="127300" fg:w="218"/><text x="40.6538%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (52 samples, 0.02%)</title><rect x="40.4791%" y="853" width="0.0165%" height="15" fill="rgb(208,58,18)" fg:x="127537" fg:w="52"/><text x="40.7291%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (46 samples, 0.01%)</title><rect x="40.4810%" y="837" width="0.0146%" height="15" fill="rgb(242,225,1)" fg:x="127543" fg:w="46"/><text x="40.7310%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (42 samples, 0.01%)</title><rect x="40.4822%" y="821" width="0.0133%" height="15" fill="rgb(249,39,40)" fg:x="127547" fg:w="42"/><text x="40.7322%" y="831.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin_render_pass (64 samples, 0.02%)</title><rect x="40.4759%" y="933" width="0.0203%" height="15" fill="rgb(207,72,44)" fg:x="127527" fg:w="64"/><text x="40.7259%" y="943.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_begin_render_pass (61 samples, 0.02%)</title><rect x="40.4768%" y="917" width="0.0194%" height="15" fill="rgb(215,193,12)" fg:x="127530" fg:w="61"/><text x="40.7268%" y="927.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_begin_render_pass (61 samples, 0.02%)</title><rect x="40.4768%" y="901" width="0.0194%" height="15" fill="rgb(248,41,39)" fg:x="127530" fg:w="61"/><text x="40.7268%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (61 samples, 0.02%)</title><rect x="40.4768%" y="885" width="0.0194%" height="15" fill="rgb(253,85,4)" fg:x="127530" fg:w="61"/><text x="40.7268%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (60 samples, 0.02%)</title><rect x="40.4772%" y="869" width="0.0190%" height="15" fill="rgb(243,70,31)" fg:x="127531" fg:w="60"/><text x="40.7272%" y="879.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (85 samples, 0.03%)</title><rect x="40.4759%" y="965" width="0.0270%" height="15" fill="rgb(253,195,26)" fg:x="127527" fg:w="85"/><text x="40.7259%" y="975.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start (85 samples, 0.03%)</title><rect x="40.4759%" y="949" width="0.0270%" height="15" fill="rgb(243,42,11)" fg:x="127527" fg:w="85"/><text x="40.7259%" y="959.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (92 samples, 0.03%)</title><rect x="40.5032%" y="965" width="0.0292%" height="15" fill="rgb(239,66,17)" fg:x="127613" fg:w="92"/><text x="40.7532%" y="975.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_replace (32 samples, 0.01%)</title><rect x="40.5222%" y="949" width="0.0102%" height="15" fill="rgb(217,132,21)" fg:x="127673" fg:w="32"/><text x="40.7722%" y="959.50"></text></g><g><title>ash::entry::EntryV1_0::enumerate_instance_extension_properties (36 samples, 0.01%)</title><rect x="40.5403%" y="917" width="0.0114%" height="15" fill="rgb(252,202,21)" fg:x="127730" fg:w="36"/><text x="40.7903%" y="927.50"></text></g><g><title>ash::vk::features::EntryFnV1_0::enumerate_instance_extension_properties (36 samples, 0.01%)</title><rect x="40.5403%" y="901" width="0.0114%" height="15" fill="rgb(233,98,36)" fg:x="127730" fg:w="36"/><text x="40.7903%" y="911.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (36 samples, 0.01%)</title><rect x="40.5403%" y="885" width="0.0114%" height="15" fill="rgb(216,153,54)" fg:x="127730" fg:w="36"/><text x="40.7903%" y="895.50"></text></g><g><title>[libvulkan.so.1.2.194] (36 samples, 0.01%)</title><rect x="40.5403%" y="869" width="0.0114%" height="15" fill="rgb(250,99,7)" fg:x="127730" fg:w="36"/><text x="40.7903%" y="879.50"></text></g><g><title>[libvulkan.so.1.2.194] (36 samples, 0.01%)</title><rect x="40.5403%" y="853" width="0.0114%" height="15" fill="rgb(207,56,50)" fg:x="127730" fg:w="36"/><text x="40.7903%" y="863.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (56 samples, 0.02%)</title><rect x="40.5349%" y="965" width="0.0178%" height="15" fill="rgb(244,61,34)" fg:x="127713" fg:w="56"/><text x="40.7849%" y="975.50"></text></g><g><title>wgpu_core::instance::Instance::new (56 samples, 0.02%)</title><rect x="40.5349%" y="949" width="0.0178%" height="15" fill="rgb(241,50,38)" fg:x="127713" fg:w="56"/><text x="40.7849%" y="959.50"></text></g><g><title>&lt;gfx_backend_vulkan::Instance as gfx_hal::Instance&lt;gfx_backend_vulkan::Backend&gt;&gt;::create (56 samples, 0.02%)</title><rect x="40.5349%" y="933" width="0.0178%" height="15" fill="rgb(212,166,30)" fg:x="127713" fg:w="56"/><text x="40.7849%" y="943.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (36 samples, 0.01%)</title><rect x="40.5660%" y="965" width="0.0114%" height="15" fill="rgb(249,127,32)" fg:x="127811" fg:w="36"/><text x="40.8160%" y="975.50"></text></g><g><title>malloc_consolidate (214 samples, 0.07%)</title><rect x="40.6682%" y="309" width="0.0679%" height="15" fill="rgb(209,103,0)" fg:x="128133" fg:w="214"/><text x="40.9182%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (300 samples, 0.10%)</title><rect x="40.6422%" y="517" width="0.0952%" height="15" fill="rgb(238,209,51)" fg:x="128051" fg:w="300"/><text x="40.8922%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (300 samples, 0.10%)</title><rect x="40.6422%" y="501" width="0.0952%" height="15" fill="rgb(237,56,23)" fg:x="128051" fg:w="300"/><text x="40.8922%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (300 samples, 0.10%)</title><rect x="40.6422%" y="485" width="0.0952%" height="15" fill="rgb(215,153,46)" fg:x="128051" fg:w="300"/><text x="40.8922%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (300 samples, 0.10%)</title><rect x="40.6422%" y="469" width="0.0952%" height="15" fill="rgb(224,49,31)" fg:x="128051" fg:w="300"/><text x="40.8922%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (300 samples, 0.10%)</title><rect x="40.6422%" y="453" width="0.0952%" height="15" fill="rgb(250,18,42)" fg:x="128051" fg:w="300"/><text x="40.8922%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (299 samples, 0.09%)</title><rect x="40.6425%" y="437" width="0.0949%" height="15" fill="rgb(215,176,39)" fg:x="128052" fg:w="299"/><text x="40.8925%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (299 samples, 0.09%)</title><rect x="40.6425%" y="421" width="0.0949%" height="15" fill="rgb(223,77,29)" fg:x="128052" fg:w="299"/><text x="40.8925%" y="431.50"></text></g><g><title>alloc::alloc::realloc (299 samples, 0.09%)</title><rect x="40.6425%" y="405" width="0.0949%" height="15" fill="rgb(234,94,52)" fg:x="128052" fg:w="299"/><text x="40.8925%" y="415.50"></text></g><g><title>__rdl_realloc (299 samples, 0.09%)</title><rect x="40.6425%" y="389" width="0.0949%" height="15" fill="rgb(220,154,50)" fg:x="128052" fg:w="299"/><text x="40.8925%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (299 samples, 0.09%)</title><rect x="40.6425%" y="373" width="0.0949%" height="15" fill="rgb(212,11,10)" fg:x="128052" fg:w="299"/><text x="40.8925%" y="383.50"></text></g><g><title>__GI___libc_realloc (299 samples, 0.09%)</title><rect x="40.6425%" y="357" width="0.0949%" height="15" fill="rgb(205,166,19)" fg:x="128052" fg:w="299"/><text x="40.8925%" y="367.50"></text></g><g><title>_int_realloc (294 samples, 0.09%)</title><rect x="40.6441%" y="341" width="0.0933%" height="15" fill="rgb(244,198,16)" fg:x="128057" fg:w="294"/><text x="40.8941%" y="351.50"></text></g><g><title>_int_malloc (285 samples, 0.09%)</title><rect x="40.6470%" y="325" width="0.0905%" height="15" fill="rgb(219,69,12)" fg:x="128066" fg:w="285"/><text x="40.8970%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (303 samples, 0.10%)</title><rect x="40.6416%" y="533" width="0.0962%" height="15" fill="rgb(245,30,7)" fg:x="128049" fg:w="303"/><text x="40.8916%" y="543.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (75 samples, 0.02%)</title><rect x="40.7377%" y="533" width="0.0238%" height="15" fill="rgb(218,221,48)" fg:x="128352" fg:w="75"/><text x="40.9877%" y="543.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (68 samples, 0.02%)</title><rect x="40.7400%" y="517" width="0.0216%" height="15" fill="rgb(216,66,15)" fg:x="128359" fg:w="68"/><text x="40.9900%" y="527.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (523 samples, 0.17%)</title><rect x="40.5981%" y="549" width="0.1660%" height="15" fill="rgb(226,122,50)" fg:x="127912" fg:w="523"/><text x="40.8481%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (76 samples, 0.02%)</title><rect x="40.8688%" y="533" width="0.0241%" height="15" fill="rgb(239,156,16)" fg:x="128765" fg:w="76"/><text x="41.1188%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (334 samples, 0.11%)</title><rect x="40.8980%" y="501" width="0.1060%" height="15" fill="rgb(224,27,38)" fg:x="128857" fg:w="334"/><text x="41.1480%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (333 samples, 0.11%)</title><rect x="40.8983%" y="485" width="0.1057%" height="15" fill="rgb(224,39,27)" fg:x="128858" fg:w="333"/><text x="41.1483%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (333 samples, 0.11%)</title><rect x="40.8983%" y="469" width="0.1057%" height="15" fill="rgb(215,92,29)" fg:x="128858" fg:w="333"/><text x="41.1483%" y="479.50"></text></g><g><title>__rdl_dealloc (333 samples, 0.11%)</title><rect x="40.8983%" y="453" width="0.1057%" height="15" fill="rgb(207,159,16)" fg:x="128858" fg:w="333"/><text x="41.1483%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (333 samples, 0.11%)</title><rect x="40.8983%" y="437" width="0.1057%" height="15" fill="rgb(238,163,47)" fg:x="128858" fg:w="333"/><text x="41.1483%" y="447.50"></text></g><g><title>__GI___libc_free (333 samples, 0.11%)</title><rect x="40.8983%" y="421" width="0.1057%" height="15" fill="rgb(219,91,49)" fg:x="128858" fg:w="333"/><text x="41.1483%" y="431.50"></text></g><g><title>_int_free (299 samples, 0.09%)</title><rect x="40.9091%" y="405" width="0.0949%" height="15" fill="rgb(227,167,31)" fg:x="128892" fg:w="299"/><text x="41.1591%" y="415.50"></text></g><g><title>unlink_chunk.constprop.0 (36 samples, 0.01%)</title><rect x="40.9926%" y="389" width="0.0114%" height="15" fill="rgb(234,80,54)" fg:x="129155" fg:w="36"/><text x="41.2426%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;engine::engine::world::Position&gt;&gt; (336 samples, 0.11%)</title><rect x="40.8980%" y="533" width="0.1066%" height="15" fill="rgb(212,114,2)" fg:x="128857" fg:w="336"/><text x="41.1480%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (336 samples, 0.11%)</title><rect x="40.8980%" y="517" width="0.1066%" height="15" fill="rgb(234,50,24)" fg:x="128857" fg:w="336"/><text x="41.1480%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;&gt;&gt; (80 samples, 0.03%)</title><rect x="41.0047%" y="533" width="0.0254%" height="15" fill="rgb(221,68,8)" fg:x="129193" fg:w="80"/><text x="41.2547%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;&gt; (77 samples, 0.02%)</title><rect x="41.0056%" y="517" width="0.0244%" height="15" fill="rgb(254,180,31)" fg:x="129196" fg:w="77"/><text x="41.2556%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_ecs::entity::Entity&gt;&gt; (77 samples, 0.02%)</title><rect x="41.0056%" y="501" width="0.0244%" height="15" fill="rgb(247,130,50)" fg:x="129196" fg:w="77"/><text x="41.2556%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.02%)</title><rect x="41.0056%" y="485" width="0.0244%" height="15" fill="rgb(211,109,4)" fg:x="129196" fg:w="77"/><text x="41.2556%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (77 samples, 0.02%)</title><rect x="41.0056%" y="469" width="0.0244%" height="15" fill="rgb(238,50,21)" fg:x="129196" fg:w="77"/><text x="41.2556%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (77 samples, 0.02%)</title><rect x="41.0056%" y="453" width="0.0244%" height="15" fill="rgb(225,57,45)" fg:x="129196" fg:w="77"/><text x="41.2556%" y="463.50"></text></g><g><title>__rdl_dealloc (77 samples, 0.02%)</title><rect x="41.0056%" y="437" width="0.0244%" height="15" fill="rgb(209,196,50)" fg:x="129196" fg:w="77"/><text x="41.2556%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (77 samples, 0.02%)</title><rect x="41.0056%" y="421" width="0.0244%" height="15" fill="rgb(242,140,13)" fg:x="129196" fg:w="77"/><text x="41.2556%" y="431.50"></text></g><g><title>__GI___libc_free (77 samples, 0.02%)</title><rect x="41.0056%" y="405" width="0.0244%" height="15" fill="rgb(217,111,7)" fg:x="129196" fg:w="77"/><text x="41.2556%" y="415.50"></text></g><g><title>_int_free (70 samples, 0.02%)</title><rect x="41.0078%" y="389" width="0.0222%" height="15" fill="rgb(253,193,51)" fg:x="129203" fg:w="70"/><text x="41.2578%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (43 samples, 0.01%)</title><rect x="41.0954%" y="485" width="0.0136%" height="15" fill="rgb(252,70,29)" fg:x="129479" fg:w="43"/><text x="41.3454%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (43 samples, 0.01%)</title><rect x="41.0954%" y="469" width="0.0136%" height="15" fill="rgb(232,127,12)" fg:x="129479" fg:w="43"/><text x="41.3454%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.01%)</title><rect x="41.0967%" y="453" width="0.0124%" height="15" fill="rgb(211,180,21)" fg:x="129483" fg:w="39"/><text x="41.3467%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 0.01%)</title><rect x="41.0967%" y="437" width="0.0124%" height="15" fill="rgb(229,72,13)" fg:x="129483" fg:w="39"/><text x="41.3467%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (64 samples, 0.02%)</title><rect x="41.0910%" y="501" width="0.0203%" height="15" fill="rgb(240,211,49)" fg:x="129465" fg:w="64"/><text x="41.3410%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (47 samples, 0.01%)</title><rect x="41.1129%" y="405" width="0.0149%" height="15" fill="rgb(219,149,40)" fg:x="129534" fg:w="47"/><text x="41.3629%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (47 samples, 0.01%)</title><rect x="41.1129%" y="389" width="0.0149%" height="15" fill="rgb(210,127,46)" fg:x="129534" fg:w="47"/><text x="41.3629%" y="399.50"></text></g><g><title>__rdl_dealloc (47 samples, 0.01%)</title><rect x="41.1129%" y="373" width="0.0149%" height="15" fill="rgb(220,106,7)" fg:x="129534" fg:w="47"/><text x="41.3629%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (47 samples, 0.01%)</title><rect x="41.1129%" y="357" width="0.0149%" height="15" fill="rgb(249,31,22)" fg:x="129534" fg:w="47"/><text x="41.3629%" y="367.50"></text></g><g><title>__GI___libc_free (47 samples, 0.01%)</title><rect x="41.1129%" y="341" width="0.0149%" height="15" fill="rgb(253,1,49)" fg:x="129534" fg:w="47"/><text x="41.3629%" y="351.50"></text></g><g><title>_int_free (39 samples, 0.01%)</title><rect x="41.1154%" y="325" width="0.0124%" height="15" fill="rgb(227,144,33)" fg:x="129542" fg:w="39"/><text x="41.3654%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.02%)</title><rect x="41.1129%" y="421" width="0.0152%" height="15" fill="rgb(249,163,44)" fg:x="129534" fg:w="48"/><text x="41.3629%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (49 samples, 0.02%)</title><rect x="41.1129%" y="501" width="0.0156%" height="15" fill="rgb(234,15,39)" fg:x="129534" fg:w="49"/><text x="41.3629%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.02%)</title><rect x="41.1129%" y="485" width="0.0156%" height="15" fill="rgb(207,66,16)" fg:x="129534" fg:w="49"/><text x="41.3629%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (49 samples, 0.02%)</title><rect x="41.1129%" y="469" width="0.0156%" height="15" fill="rgb(233,112,24)" fg:x="129534" fg:w="49"/><text x="41.3629%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (49 samples, 0.02%)</title><rect x="41.1129%" y="453" width="0.0156%" height="15" fill="rgb(230,90,22)" fg:x="129534" fg:w="49"/><text x="41.3629%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (49 samples, 0.02%)</title><rect x="41.1129%" y="437" width="0.0156%" height="15" fill="rgb(229,61,13)" fg:x="129534" fg:w="49"/><text x="41.3629%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="41.1319%" y="469" width="0.0102%" height="15" fill="rgb(225,57,24)" fg:x="129594" fg:w="32"/><text x="41.3819%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="41.1319%" y="453" width="0.0102%" height="15" fill="rgb(208,169,48)" fg:x="129594" fg:w="32"/><text x="41.3819%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.01%)</title><rect x="41.1319%" y="437" width="0.0102%" height="15" fill="rgb(244,218,51)" fg:x="129594" fg:w="32"/><text x="41.3819%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (55 samples, 0.02%)</title><rect x="41.1313%" y="485" width="0.0175%" height="15" fill="rgb(214,148,10)" fg:x="129592" fg:w="55"/><text x="41.3813%" y="495.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (60 samples, 0.02%)</title><rect x="41.1313%" y="501" width="0.0190%" height="15" fill="rgb(225,174,27)" fg:x="129592" fg:w="60"/><text x="41.3813%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (38 samples, 0.01%)</title><rect x="41.1507%" y="485" width="0.0121%" height="15" fill="rgb(230,96,26)" fg:x="129653" fg:w="38"/><text x="41.4007%" y="495.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (40 samples, 0.01%)</title><rect x="41.1504%" y="501" width="0.0127%" height="15" fill="rgb(232,10,30)" fg:x="129652" fg:w="40"/><text x="41.4004%" y="511.50"></text></g><g><title>engine::engine::world::TileEntityMap::get (42 samples, 0.01%)</title><rect x="41.1630%" y="501" width="0.0133%" height="15" fill="rgb(222,8,50)" fg:x="129692" fg:w="42"/><text x="41.4130%" y="511.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_except_entities (467 samples, 0.15%)</title><rect x="41.0561%" y="517" width="0.1482%" height="15" fill="rgb(213,81,27)" fg:x="129355" fg:w="467"/><text x="41.3061%" y="527.50"></text></g><g><title>engine::engine::world::TileWeightMap::get (88 samples, 0.03%)</title><rect x="41.1764%" y="501" width="0.0279%" height="15" fill="rgb(245,50,10)" fg:x="129734" fg:w="88"/><text x="41.4264%" y="511.50"></text></g><g><title>engine::engine::actor::pathfinding::best_nearest_valid_destination (557 samples, 0.18%)</title><rect x="41.0301%" y="533" width="0.1768%" height="15" fill="rgb(216,100,18)" fg:x="129273" fg:w="557"/><text x="41.2801%" y="543.50"></text></g><g><title>core::ptr::read (44 samples, 0.01%)</title><rect x="41.3056%" y="485" width="0.0140%" height="15" fill="rgb(236,147,54)" fg:x="130141" fg:w="44"/><text x="41.5556%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (176 samples, 0.06%)</title><rect x="41.2821%" y="501" width="0.0559%" height="15" fill="rgb(205,143,26)" fg:x="130067" fg:w="176"/><text x="41.5321%" y="511.50"></text></g><g><title>pathfinding::directed::astar::astar (58 samples, 0.02%)</title><rect x="41.3195%" y="485" width="0.0184%" height="15" fill="rgb(236,26,9)" fg:x="130185" fg:w="58"/><text x="41.5695%" y="495.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (72 samples, 0.02%)</title><rect x="41.3573%" y="453" width="0.0229%" height="15" fill="rgb(221,165,53)" fg:x="130304" fg:w="72"/><text x="41.6073%" y="463.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (35 samples, 0.01%)</title><rect x="41.4087%" y="437" width="0.0111%" height="15" fill="rgb(214,110,17)" fg:x="130466" fg:w="35"/><text x="41.6587%" y="447.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (177 samples, 0.06%)</title><rect x="41.4281%" y="421" width="0.0562%" height="15" fill="rgb(237,197,12)" fg:x="130527" fg:w="177"/><text x="41.6781%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (43 samples, 0.01%)</title><rect x="41.4842%" y="421" width="0.0136%" height="15" fill="rgb(205,84,17)" fg:x="130704" fg:w="43"/><text x="41.7342%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::le (43 samples, 0.01%)</title><rect x="41.4842%" y="405" width="0.0136%" height="15" fill="rgb(237,18,45)" fg:x="130704" fg:w="43"/><text x="41.7342%" y="415.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (32 samples, 0.01%)</title><rect x="41.4877%" y="389" width="0.0102%" height="15" fill="rgb(221,87,14)" fg:x="130715" fg:w="32"/><text x="41.7377%" y="399.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (32 samples, 0.01%)</title><rect x="41.4877%" y="373" width="0.0102%" height="15" fill="rgb(238,186,15)" fg:x="130715" fg:w="32"/><text x="41.7377%" y="383.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (258 samples, 0.08%)</title><rect x="41.4198%" y="437" width="0.0819%" height="15" fill="rgb(208,115,11)" fg:x="130501" fg:w="258"/><text x="41.6698%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (131 samples, 0.04%)</title><rect x="41.5017%" y="421" width="0.0416%" height="15" fill="rgb(254,175,0)" fg:x="130759" fg:w="131"/><text x="41.7517%" y="431.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (174 samples, 0.06%)</title><rect x="41.5017%" y="437" width="0.0552%" height="15" fill="rgb(227,24,42)" fg:x="130759" fg:w="174"/><text x="41.7517%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (43 samples, 0.01%)</title><rect x="41.5433%" y="421" width="0.0136%" height="15" fill="rgb(223,211,37)" fg:x="130890" fg:w="43"/><text x="41.7933%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (43 samples, 0.01%)</title><rect x="41.5433%" y="405" width="0.0136%" height="15" fill="rgb(235,49,27)" fg:x="130890" fg:w="43"/><text x="41.7933%" y="415.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (36 samples, 0.01%)</title><rect x="41.5569%" y="437" width="0.0114%" height="15" fill="rgb(254,97,51)" fg:x="130933" fg:w="36"/><text x="41.8069%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (272 samples, 0.09%)</title><rect x="41.5684%" y="437" width="0.0863%" height="15" fill="rgb(249,51,40)" fg:x="130969" fg:w="272"/><text x="41.8184%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::le (272 samples, 0.09%)</title><rect x="41.5684%" y="421" width="0.0863%" height="15" fill="rgb(210,128,45)" fg:x="130969" fg:w="272"/><text x="41.8184%" y="431.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (225 samples, 0.07%)</title><rect x="41.5833%" y="405" width="0.0714%" height="15" fill="rgb(224,137,50)" fg:x="131016" fg:w="225"/><text x="41.8333%" y="415.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (167 samples, 0.05%)</title><rect x="41.6017%" y="389" width="0.0530%" height="15" fill="rgb(242,15,9)" fg:x="131074" fg:w="167"/><text x="41.8517%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (76 samples, 0.02%)</title><rect x="41.6306%" y="373" width="0.0241%" height="15" fill="rgb(233,187,41)" fg:x="131165" fg:w="76"/><text x="41.8806%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (35 samples, 0.01%)</title><rect x="41.6547%" y="389" width="0.0111%" height="15" fill="rgb(227,2,29)" fg:x="131241" fg:w="35"/><text x="41.9047%" y="399.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (903 samples, 0.29%)</title><rect x="41.3801%" y="453" width="0.2866%" height="15" fill="rgb(222,70,3)" fg:x="130376" fg:w="903"/><text x="41.6301%" y="463.50"></text></g><g><title>core::mem::drop (38 samples, 0.01%)</title><rect x="41.6547%" y="437" width="0.0121%" height="15" fill="rgb(213,11,42)" fg:x="131241" fg:w="38"/><text x="41.9047%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (38 samples, 0.01%)</title><rect x="41.6547%" y="421" width="0.0121%" height="15" fill="rgb(225,150,9)" fg:x="131241" fg:w="38"/><text x="41.9047%" y="431.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (38 samples, 0.01%)</title><rect x="41.6547%" y="405" width="0.0121%" height="15" fill="rgb(230,162,45)" fg:x="131241" fg:w="38"/><text x="41.9047%" y="415.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (1,005 samples, 0.32%)</title><rect x="41.3506%" y="501" width="0.3190%" height="15" fill="rgb(222,14,52)" fg:x="130283" fg:w="1005"/><text x="41.6006%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1,000 samples, 0.32%)</title><rect x="41.3522%" y="485" width="0.3174%" height="15" fill="rgb(254,198,14)" fg:x="130288" fg:w="1000"/><text x="41.6022%" y="495.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (990 samples, 0.31%)</title><rect x="41.3554%" y="469" width="0.3142%" height="15" fill="rgb(220,217,30)" fg:x="130298" fg:w="990"/><text x="41.6054%" y="479.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (72 samples, 0.02%)</title><rect x="41.6709%" y="485" width="0.0229%" height="15" fill="rgb(215,146,41)" fg:x="131292" fg:w="72"/><text x="41.9209%" y="495.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (194 samples, 0.06%)</title><rect x="41.7099%" y="469" width="0.0616%" height="15" fill="rgb(217,27,36)" fg:x="131415" fg:w="194"/><text x="41.9599%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (66 samples, 0.02%)</title><rect x="41.7715%" y="469" width="0.0209%" height="15" fill="rgb(219,218,39)" fg:x="131609" fg:w="66"/><text x="42.0215%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::le (66 samples, 0.02%)</title><rect x="41.7715%" y="453" width="0.0209%" height="15" fill="rgb(219,4,42)" fg:x="131609" fg:w="66"/><text x="42.0215%" y="463.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (47 samples, 0.01%)</title><rect x="41.7775%" y="437" width="0.0149%" height="15" fill="rgb(249,119,36)" fg:x="131628" fg:w="47"/><text x="42.0275%" y="447.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (47 samples, 0.01%)</title><rect x="41.7775%" y="421" width="0.0149%" height="15" fill="rgb(209,23,33)" fg:x="131628" fg:w="47"/><text x="42.0275%" y="431.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (347 samples, 0.11%)</title><rect x="41.6937%" y="485" width="0.1101%" height="15" fill="rgb(211,10,0)" fg:x="131364" fg:w="347"/><text x="41.9437%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (36 samples, 0.01%)</title><rect x="41.7924%" y="469" width="0.0114%" height="15" fill="rgb(208,99,37)" fg:x="131675" fg:w="36"/><text x="42.0424%" y="479.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="41.7924%" y="453" width="0.0114%" height="15" fill="rgb(213,132,31)" fg:x="131675" fg:w="36"/><text x="42.0424%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.01%)</title><rect x="41.7924%" y="437" width="0.0114%" height="15" fill="rgb(243,129,40)" fg:x="131675" fg:w="36"/><text x="42.0424%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (69 samples, 0.02%)</title><rect x="41.8051%" y="389" width="0.0219%" height="15" fill="rgb(210,66,33)" fg:x="131715" fg:w="69"/><text x="42.0551%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (69 samples, 0.02%)</title><rect x="41.8051%" y="373" width="0.0219%" height="15" fill="rgb(209,189,4)" fg:x="131715" fg:w="69"/><text x="42.0551%" y="383.50"></text></g><g><title>alloc::alloc::realloc (69 samples, 0.02%)</title><rect x="41.8051%" y="357" width="0.0219%" height="15" fill="rgb(214,107,37)" fg:x="131715" fg:w="69"/><text x="42.0551%" y="367.50"></text></g><g><title>__rdl_realloc (69 samples, 0.02%)</title><rect x="41.8051%" y="341" width="0.0219%" height="15" fill="rgb(245,88,54)" fg:x="131715" fg:w="69"/><text x="42.0551%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (69 samples, 0.02%)</title><rect x="41.8051%" y="325" width="0.0219%" height="15" fill="rgb(205,146,20)" fg:x="131715" fg:w="69"/><text x="42.0551%" y="335.50"></text></g><g><title>__GI___libc_realloc (69 samples, 0.02%)</title><rect x="41.8051%" y="309" width="0.0219%" height="15" fill="rgb(220,161,25)" fg:x="131715" fg:w="69"/><text x="42.0551%" y="319.50"></text></g><g><title>_int_realloc (48 samples, 0.02%)</title><rect x="41.8118%" y="293" width="0.0152%" height="15" fill="rgb(215,152,15)" fg:x="131736" fg:w="48"/><text x="42.0618%" y="303.50"></text></g><g><title>_int_malloc (32 samples, 0.01%)</title><rect x="41.8169%" y="277" width="0.0102%" height="15" fill="rgb(233,192,44)" fg:x="131752" fg:w="32"/><text x="42.0669%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (70 samples, 0.02%)</title><rect x="41.8051%" y="405" width="0.0222%" height="15" fill="rgb(240,170,46)" fg:x="131715" fg:w="70"/><text x="42.0551%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (75 samples, 0.02%)</title><rect x="41.8045%" y="469" width="0.0238%" height="15" fill="rgb(207,104,33)" fg:x="131713" fg:w="75"/><text x="42.0545%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (75 samples, 0.02%)</title><rect x="41.8045%" y="453" width="0.0238%" height="15" fill="rgb(219,21,39)" fg:x="131713" fg:w="75"/><text x="42.0545%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (73 samples, 0.02%)</title><rect x="41.8051%" y="437" width="0.0232%" height="15" fill="rgb(214,133,29)" fg:x="131715" fg:w="73"/><text x="42.0551%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (73 samples, 0.02%)</title><rect x="41.8051%" y="421" width="0.0232%" height="15" fill="rgb(226,93,6)" fg:x="131715" fg:w="73"/><text x="42.0551%" y="431.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (826 samples, 0.26%)</title><rect x="41.6696%" y="501" width="0.2622%" height="15" fill="rgb(252,222,34)" fg:x="131288" fg:w="826"/><text x="41.9196%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (403 samples, 0.13%)</title><rect x="41.8039%" y="485" width="0.1279%" height="15" fill="rgb(252,92,48)" fg:x="131711" fg:w="403"/><text x="42.0539%" y="495.50"></text></g><g><title>core::ptr::write (326 samples, 0.10%)</title><rect x="41.8283%" y="469" width="0.1035%" height="15" fill="rgb(245,223,24)" fg:x="131788" fg:w="326"/><text x="42.0783%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (714 samples, 0.23%)</title><rect x="41.9362%" y="405" width="0.2266%" height="15" fill="rgb(205,176,3)" fg:x="132128" fg:w="714"/><text x="42.1862%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (714 samples, 0.23%)</title><rect x="41.9362%" y="389" width="0.2266%" height="15" fill="rgb(235,151,15)" fg:x="132128" fg:w="714"/><text x="42.1862%" y="399.50"></text></g><g><title>__rdl_dealloc (714 samples, 0.23%)</title><rect x="41.9362%" y="373" width="0.2266%" height="15" fill="rgb(237,209,11)" fg:x="132128" fg:w="714"/><text x="42.1862%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (707 samples, 0.22%)</title><rect x="41.9384%" y="357" width="0.2244%" height="15" fill="rgb(243,227,24)" fg:x="132135" fg:w="707"/><text x="42.1884%" y="367.50"></text></g><g><title>__GI___libc_free (707 samples, 0.22%)</title><rect x="41.9384%" y="341" width="0.2244%" height="15" fill="rgb(239,193,16)" fg:x="132135" fg:w="707"/><text x="42.1884%" y="351.50"></text></g><g><title>_int_free (633 samples, 0.20%)</title><rect x="41.9619%" y="325" width="0.2009%" height="15" fill="rgb(231,27,9)" fg:x="132209" fg:w="633"/><text x="42.2119%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (726 samples, 0.23%)</title><rect x="41.9362%" y="421" width="0.2304%" height="15" fill="rgb(219,169,10)" fg:x="132128" fg:w="726"/><text x="42.1862%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (729 samples, 0.23%)</title><rect x="41.9362%" y="501" width="0.2314%" height="15" fill="rgb(244,229,43)" fg:x="132128" fg:w="729"/><text x="42.1862%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (729 samples, 0.23%)</title><rect x="41.9362%" y="485" width="0.2314%" height="15" fill="rgb(254,38,20)" fg:x="132128" fg:w="729"/><text x="42.1862%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (729 samples, 0.23%)</title><rect x="41.9362%" y="469" width="0.2314%" height="15" fill="rgb(250,47,30)" fg:x="132128" fg:w="729"/><text x="42.1862%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (729 samples, 0.23%)</title><rect x="41.9362%" y="453" width="0.2314%" height="15" fill="rgb(224,124,36)" fg:x="132128" fg:w="729"/><text x="42.1862%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (729 samples, 0.23%)</title><rect x="41.9362%" y="437" width="0.2314%" height="15" fill="rgb(246,68,51)" fg:x="132128" fg:w="729"/><text x="42.1862%" y="447.50"></text></g><g><title>engine::engine::actor::pathfinding::diagonal_distance (122 samples, 0.04%)</title><rect x="42.1803%" y="485" width="0.0387%" height="15" fill="rgb(253,43,49)" fg:x="132897" fg:w="122"/><text x="42.4303%" y="495.50"></text></g><g><title>pathfinding::utils::absdiff (90 samples, 0.03%)</title><rect x="42.1904%" y="469" width="0.0286%" height="15" fill="rgb(219,54,36)" fg:x="132929" fg:w="90"/><text x="42.4404%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (69 samples, 0.02%)</title><rect x="42.1971%" y="453" width="0.0219%" height="15" fill="rgb(227,133,34)" fg:x="132950" fg:w="69"/><text x="42.4471%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (47 samples, 0.01%)</title><rect x="42.4342%" y="469" width="0.0149%" height="15" fill="rgb(247,227,15)" fg:x="133697" fg:w="47"/><text x="42.6842%" y="479.50"></text></g><g><title>core::ptr::read (47 samples, 0.01%)</title><rect x="42.4774%" y="453" width="0.0149%" height="15" fill="rgb(229,96,14)" fg:x="133833" fg:w="47"/><text x="42.7274%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (177 samples, 0.06%)</title><rect x="42.4491%" y="469" width="0.0562%" height="15" fill="rgb(220,79,17)" fg:x="133744" fg:w="177"/><text x="42.6991%" y="479.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_except_entities (41 samples, 0.01%)</title><rect x="42.4923%" y="453" width="0.0130%" height="15" fill="rgb(205,131,53)" fg:x="133880" fg:w="41"/><text x="42.7423%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (35 samples, 0.01%)</title><rect x="42.5919%" y="389" width="0.0111%" height="15" fill="rgb(209,50,29)" fg:x="134194" fg:w="35"/><text x="42.8419%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (69 samples, 0.02%)</title><rect x="42.8366%" y="261" width="0.0219%" height="15" fill="rgb(245,86,46)" fg:x="134965" fg:w="69"/><text x="43.0866%" y="271.50"></text></g><g><title>_int_free (102 samples, 0.03%)</title><rect x="42.8585%" y="261" width="0.0324%" height="15" fill="rgb(235,66,46)" fg:x="135034" fg:w="102"/><text x="43.1085%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,161 samples, 0.37%)</title><rect x="42.6221%" y="373" width="0.3685%" height="15" fill="rgb(232,148,31)" fg:x="134289" fg:w="1161"/><text x="42.8721%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,161 samples, 0.37%)</title><rect x="42.6221%" y="357" width="0.3685%" height="15" fill="rgb(217,149,8)" fg:x="134289" fg:w="1161"/><text x="42.8721%" y="367.50"></text></g><g><title>alloc::alloc::realloc (1,154 samples, 0.37%)</title><rect x="42.6243%" y="341" width="0.3663%" height="15" fill="rgb(209,183,11)" fg:x="134296" fg:w="1154"/><text x="42.8743%" y="351.50"></text></g><g><title>__rdl_realloc (1,154 samples, 0.37%)</title><rect x="42.6243%" y="325" width="0.3663%" height="15" fill="rgb(208,55,20)" fg:x="134296" fg:w="1154"/><text x="42.8743%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,154 samples, 0.37%)</title><rect x="42.6243%" y="309" width="0.3663%" height="15" fill="rgb(218,39,14)" fg:x="134296" fg:w="1154"/><text x="42.8743%" y="319.50"></text></g><g><title>__GI___libc_realloc (1,147 samples, 0.36%)</title><rect x="42.6265%" y="293" width="0.3640%" height="15" fill="rgb(216,169,33)" fg:x="134303" fg:w="1147"/><text x="42.8765%" y="303.50"></text></g><g><title>_int_realloc (578 samples, 0.18%)</title><rect x="42.8071%" y="277" width="0.1835%" height="15" fill="rgb(233,80,24)" fg:x="134872" fg:w="578"/><text x="43.0571%" y="287.50"></text></g><g><title>_int_malloc (314 samples, 0.10%)</title><rect x="42.8909%" y="261" width="0.0997%" height="15" fill="rgb(213,179,31)" fg:x="135136" fg:w="314"/><text x="43.1409%" y="271.50"></text></g><g><title>__GI___libc_malloc (105 samples, 0.03%)</title><rect x="42.9906%" y="373" width="0.0333%" height="15" fill="rgb(209,19,5)" fg:x="135450" fg:w="105"/><text x="43.2406%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,344 samples, 0.43%)</title><rect x="42.6030%" y="389" width="0.4266%" height="15" fill="rgb(219,18,35)" fg:x="134229" fg:w="1344"/><text x="42.8530%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (33 samples, 0.01%)</title><rect x="43.0344%" y="357" width="0.0105%" height="15" fill="rgb(209,169,16)" fg:x="135588" fg:w="33"/><text x="43.2844%" y="367.50"></text></g><g><title>core::cmp::max (36 samples, 0.01%)</title><rect x="43.0344%" y="389" width="0.0114%" height="15" fill="rgb(245,90,51)" fg:x="135588" fg:w="36"/><text x="43.2844%" y="399.50"></text></g><g><title>core::cmp::Ord::max (36 samples, 0.01%)</title><rect x="43.0344%" y="373" width="0.0114%" height="15" fill="rgb(220,99,45)" fg:x="135588" fg:w="36"/><text x="43.2844%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,495 samples, 0.47%)</title><rect x="42.5729%" y="405" width="0.4745%" height="15" fill="rgb(249,89,25)" fg:x="134134" fg:w="1495"/><text x="42.8229%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,524 samples, 0.48%)</title><rect x="42.5688%" y="437" width="0.4837%" height="15" fill="rgb(239,193,0)" fg:x="134121" fg:w="1524"/><text x="42.8188%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,511 samples, 0.48%)</title><rect x="42.5729%" y="421" width="0.4796%" height="15" fill="rgb(231,126,1)" fg:x="134134" fg:w="1511"/><text x="42.8229%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,531 samples, 0.49%)</title><rect x="42.5688%" y="453" width="0.4859%" height="15" fill="rgb(243,166,3)" fg:x="134121" fg:w="1531"/><text x="42.8188%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,855 samples, 0.59%)</title><rect x="42.5053%" y="469" width="0.5888%" height="15" fill="rgb(223,22,34)" fg:x="133921" fg:w="1855"/><text x="42.7553%" y="479.50"></text></g><g><title>core::ptr::write (124 samples, 0.04%)</title><rect x="43.0547%" y="453" width="0.0394%" height="15" fill="rgb(251,52,51)" fg:x="135652" fg:w="124"/><text x="43.3047%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (289 samples, 0.09%)</title><rect x="43.1083%" y="373" width="0.0917%" height="15" fill="rgb(221,165,28)" fg:x="135821" fg:w="289"/><text x="43.3583%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (289 samples, 0.09%)</title><rect x="43.1083%" y="357" width="0.0917%" height="15" fill="rgb(218,121,47)" fg:x="135821" fg:w="289"/><text x="43.3583%" y="367.50"></text></g><g><title>__rdl_dealloc (289 samples, 0.09%)</title><rect x="43.1083%" y="341" width="0.0917%" height="15" fill="rgb(209,120,9)" fg:x="135821" fg:w="289"/><text x="43.3583%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (289 samples, 0.09%)</title><rect x="43.1083%" y="325" width="0.0917%" height="15" fill="rgb(236,68,12)" fg:x="135821" fg:w="289"/><text x="43.3583%" y="335.50"></text></g><g><title>__GI___libc_free (289 samples, 0.09%)</title><rect x="43.1083%" y="309" width="0.0917%" height="15" fill="rgb(225,194,26)" fg:x="135821" fg:w="289"/><text x="43.3583%" y="319.50"></text></g><g><title>_int_free (188 samples, 0.06%)</title><rect x="43.1404%" y="293" width="0.0597%" height="15" fill="rgb(231,84,39)" fg:x="135922" fg:w="188"/><text x="43.3904%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (295 samples, 0.09%)</title><rect x="43.1083%" y="389" width="0.0936%" height="15" fill="rgb(210,11,45)" fg:x="135821" fg:w="295"/><text x="43.3583%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (301 samples, 0.10%)</title><rect x="43.1083%" y="469" width="0.0955%" height="15" fill="rgb(224,54,52)" fg:x="135821" fg:w="301"/><text x="43.3583%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (301 samples, 0.10%)</title><rect x="43.1083%" y="453" width="0.0955%" height="15" fill="rgb(238,102,14)" fg:x="135821" fg:w="301"/><text x="43.3583%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (301 samples, 0.10%)</title><rect x="43.1083%" y="437" width="0.0955%" height="15" fill="rgb(243,160,52)" fg:x="135821" fg:w="301"/><text x="43.3583%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (301 samples, 0.10%)</title><rect x="43.1083%" y="421" width="0.0955%" height="15" fill="rgb(216,114,19)" fg:x="135821" fg:w="301"/><text x="43.3583%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (301 samples, 0.10%)</title><rect x="43.1083%" y="405" width="0.0955%" height="15" fill="rgb(244,166,37)" fg:x="135821" fg:w="301"/><text x="43.3583%" y="415.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_except_entities (70 samples, 0.02%)</title><rect x="43.2039%" y="469" width="0.0222%" height="15" fill="rgb(246,29,44)" fg:x="136122" fg:w="70"/><text x="43.4539%" y="479.50"></text></g><g><title>__GI___libc_malloc (162 samples, 0.05%)</title><rect x="43.2851%" y="357" width="0.0514%" height="15" fill="rgb(215,56,53)" fg:x="136378" fg:w="162"/><text x="43.5351%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (210 samples, 0.07%)</title><rect x="43.2727%" y="373" width="0.0667%" height="15" fill="rgb(217,60,2)" fg:x="136339" fg:w="210"/><text x="43.5227%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (44 samples, 0.01%)</title><rect x="43.3483%" y="341" width="0.0140%" height="15" fill="rgb(207,26,24)" fg:x="136577" fg:w="44"/><text x="43.5983%" y="351.50"></text></g><g><title>core::cmp::max (56 samples, 0.02%)</title><rect x="43.3483%" y="373" width="0.0178%" height="15" fill="rgb(252,210,15)" fg:x="136577" fg:w="56"/><text x="43.5983%" y="383.50"></text></g><g><title>core::cmp::Ord::max (56 samples, 0.02%)</title><rect x="43.3483%" y="357" width="0.0178%" height="15" fill="rgb(253,209,26)" fg:x="136577" fg:w="56"/><text x="43.5983%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (362 samples, 0.11%)</title><rect x="43.2524%" y="389" width="0.1149%" height="15" fill="rgb(238,170,14)" fg:x="136275" fg:w="362"/><text x="43.5024%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (378 samples, 0.12%)</title><rect x="43.2512%" y="437" width="0.1200%" height="15" fill="rgb(216,178,15)" fg:x="136271" fg:w="378"/><text x="43.5012%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (378 samples, 0.12%)</title><rect x="43.2512%" y="421" width="0.1200%" height="15" fill="rgb(250,197,2)" fg:x="136271" fg:w="378"/><text x="43.5012%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (374 samples, 0.12%)</title><rect x="43.2524%" y="405" width="0.1187%" height="15" fill="rgb(212,70,42)" fg:x="136275" fg:w="374"/><text x="43.5024%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (622 samples, 0.20%)</title><rect x="43.2343%" y="453" width="0.1974%" height="15" fill="rgb(227,213,9)" fg:x="136218" fg:w="622"/><text x="43.4843%" y="463.50"></text></g><g><title>core::ptr::write (191 samples, 0.06%)</title><rect x="43.3711%" y="437" width="0.0606%" height="15" fill="rgb(245,99,25)" fg:x="136649" fg:w="191"/><text x="43.6211%" y="447.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (683 samples, 0.22%)</title><rect x="43.2261%" y="469" width="0.2168%" height="15" fill="rgb(250,82,29)" fg:x="136192" fg:w="683"/><text x="43.4761%" y="479.50"></text></g><g><title>__GI___libc_malloc (80 samples, 0.03%)</title><rect x="43.4860%" y="357" width="0.0254%" height="15" fill="rgb(241,226,54)" fg:x="137011" fg:w="80"/><text x="43.7360%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (111 samples, 0.04%)</title><rect x="43.4797%" y="373" width="0.0352%" height="15" fill="rgb(221,99,41)" fg:x="136991" fg:w="111"/><text x="43.7297%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (180 samples, 0.06%)</title><rect x="43.4714%" y="389" width="0.0571%" height="15" fill="rgb(213,90,21)" fg:x="136965" fg:w="180"/><text x="43.7214%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (188 samples, 0.06%)</title><rect x="43.4714%" y="437" width="0.0597%" height="15" fill="rgb(205,208,24)" fg:x="136965" fg:w="188"/><text x="43.7214%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (188 samples, 0.06%)</title><rect x="43.4714%" y="421" width="0.0597%" height="15" fill="rgb(246,31,12)" fg:x="136965" fg:w="188"/><text x="43.7214%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (188 samples, 0.06%)</title><rect x="43.4714%" y="405" width="0.0597%" height="15" fill="rgb(213,154,6)" fg:x="136965" fg:w="188"/><text x="43.7214%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (384 samples, 0.12%)</title><rect x="43.4502%" y="453" width="0.1219%" height="15" fill="rgb(222,163,29)" fg:x="136898" fg:w="384"/><text x="43.7002%" y="463.50"></text></g><g><title>core::ptr::write (129 samples, 0.04%)</title><rect x="43.5311%" y="437" width="0.0409%" height="15" fill="rgb(227,201,8)" fg:x="137153" fg:w="129"/><text x="43.7811%" y="447.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (431 samples, 0.14%)</title><rect x="43.4429%" y="469" width="0.1368%" height="15" fill="rgb(233,9,32)" fg:x="136875" fg:w="431"/><text x="43.6929%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (44 samples, 0.01%)</title><rect x="43.6571%" y="437" width="0.0140%" height="15" fill="rgb(217,54,24)" fg:x="137550" fg:w="44"/><text x="43.9071%" y="447.50"></text></g><g><title>engine::engine::world::TileEntityMap::get (306 samples, 0.10%)</title><rect x="43.5797%" y="469" width="0.0971%" height="15" fill="rgb(235,192,0)" fg:x="137306" fg:w="306"/><text x="43.8297%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (62 samples, 0.02%)</title><rect x="43.6571%" y="453" width="0.0197%" height="15" fill="rgb(235,45,9)" fg:x="137550" fg:w="62"/><text x="43.9071%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (35 samples, 0.01%)</title><rect x="43.8022%" y="437" width="0.0111%" height="15" fill="rgb(246,42,40)" fg:x="138007" fg:w="35"/><text x="44.0522%" y="447.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path_around_entities::{{closure}} (5,228 samples, 1.66%)</title><rect x="42.1676%" y="501" width="1.6593%" height="15" fill="rgb(248,111,24)" fg:x="132857" fg:w="5228"/><text x="42.4176%" y="511.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_except_entities (5,066 samples, 1.61%)</title><rect x="42.2190%" y="485" width="1.6079%" height="15" fill="rgb(249,65,22)" fg:x="133019" fg:w="5066"/><text x="42.4690%" y="495.50"></text></g><g><title>engine::engine::world::TileWeightMap::get (473 samples, 0.15%)</title><rect x="43.6768%" y="469" width="0.1501%" height="15" fill="rgb(238,111,51)" fg:x="137612" fg:w="473"/><text x="43.9268%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (78 samples, 0.02%)</title><rect x="43.8022%" y="453" width="0.0248%" height="15" fill="rgb(250,118,22)" fg:x="138007" fg:w="78"/><text x="44.0522%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (43 samples, 0.01%)</title><rect x="43.8133%" y="437" width="0.0136%" height="15" fill="rgb(234,84,26)" fg:x="138042" fg:w="43"/><text x="44.0633%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (43 samples, 0.01%)</title><rect x="43.8133%" y="421" width="0.0136%" height="15" fill="rgb(243,172,12)" fg:x="138042" fg:w="43"/><text x="44.0633%" y="431.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (111 samples, 0.04%)</title><rect x="43.8269%" y="485" width="0.0352%" height="15" fill="rgb(236,150,49)" fg:x="138085" fg:w="111"/><text x="44.0769%" y="495.50"></text></g><g><title>&lt;engine::engine::world::Position as core::hash::Hash&gt;::hash (111 samples, 0.04%)</title><rect x="43.8269%" y="469" width="0.0352%" height="15" fill="rgb(225,197,26)" fg:x="138085" fg:w="111"/><text x="44.0769%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (111 samples, 0.04%)</title><rect x="43.8269%" y="453" width="0.0352%" height="15" fill="rgb(214,17,42)" fg:x="138085" fg:w="111"/><text x="44.0769%" y="463.50"></text></g><g><title>core::hash::Hasher::write_i64 (111 samples, 0.04%)</title><rect x="43.8269%" y="437" width="0.0352%" height="15" fill="rgb(224,165,40)" fg:x="138085" fg:w="111"/><text x="44.0769%" y="447.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u64 (111 samples, 0.04%)</title><rect x="43.8269%" y="421" width="0.0352%" height="15" fill="rgb(246,100,4)" fg:x="138085" fg:w="111"/><text x="44.0769%" y="431.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (111 samples, 0.04%)</title><rect x="43.8269%" y="405" width="0.0352%" height="15" fill="rgb(222,103,0)" fg:x="138085" fg:w="111"/><text x="44.0769%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (74 samples, 0.02%)</title><rect x="43.8387%" y="389" width="0.0235%" height="15" fill="rgb(227,189,26)" fg:x="138122" fg:w="74"/><text x="44.0887%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (42 samples, 0.01%)</title><rect x="43.8621%" y="469" width="0.0133%" height="15" fill="rgb(214,202,17)" fg:x="138196" fg:w="42"/><text x="44.1121%" y="479.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (115 samples, 0.04%)</title><rect x="44.0945%" y="405" width="0.0365%" height="15" fill="rgb(229,111,3)" fg:x="138928" fg:w="115"/><text x="44.3445%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (197 samples, 0.06%)</title><rect x="44.0773%" y="421" width="0.0625%" height="15" fill="rgb(229,172,15)" fg:x="138874" fg:w="197"/><text x="44.3273%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (313 samples, 0.10%)</title><rect x="44.0453%" y="437" width="0.0993%" height="15" fill="rgb(230,224,35)" fg:x="138773" fg:w="313"/><text x="44.2953%" y="447.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (67 samples, 0.02%)</title><rect x="44.1446%" y="421" width="0.0213%" height="15" fill="rgb(251,141,6)" fg:x="139086" fg:w="67"/><text x="44.3946%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (67 samples, 0.02%)</title><rect x="44.1446%" y="405" width="0.0213%" height="15" fill="rgb(225,208,6)" fg:x="139086" fg:w="67"/><text x="44.3946%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (67 samples, 0.02%)</title><rect x="44.1446%" y="389" width="0.0213%" height="15" fill="rgb(246,181,16)" fg:x="139086" fg:w="67"/><text x="44.3946%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (532 samples, 0.17%)</title><rect x="44.0053%" y="453" width="0.1689%" height="15" fill="rgb(227,129,36)" fg:x="138647" fg:w="532"/><text x="44.2553%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket (93 samples, 0.03%)</title><rect x="44.1446%" y="437" width="0.0295%" height="15" fill="rgb(248,117,24)" fg:x="139086" fg:w="93"/><text x="44.3946%" y="447.50"></text></g><g><title>hashbrown::raw::inner::h2 (53 samples, 0.02%)</title><rect x="44.1798%" y="405" width="0.0168%" height="15" fill="rgb(214,185,35)" fg:x="139197" fg:w="53"/><text x="44.4298%" y="415.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (94 samples, 0.03%)</title><rect x="44.1967%" y="405" width="0.0298%" height="15" fill="rgb(236,150,34)" fg:x="139250" fg:w="94"/><text x="44.4467%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (94 samples, 0.03%)</title><rect x="44.1967%" y="389" width="0.0298%" height="15" fill="rgb(243,228,27)" fg:x="139250" fg:w="94"/><text x="44.4467%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (94 samples, 0.03%)</title><rect x="44.1967%" y="373" width="0.0298%" height="15" fill="rgb(245,77,44)" fg:x="139250" fg:w="94"/><text x="44.4467%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (100 samples, 0.03%)</title><rect x="44.2265%" y="389" width="0.0317%" height="15" fill="rgb(235,214,42)" fg:x="139344" fg:w="100"/><text x="44.4765%" y="399.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (162 samples, 0.05%)</title><rect x="44.2265%" y="405" width="0.0514%" height="15" fill="rgb(221,74,3)" fg:x="139344" fg:w="162"/><text x="44.4765%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (62 samples, 0.02%)</title><rect x="44.2582%" y="389" width="0.0197%" height="15" fill="rgb(206,121,29)" fg:x="139444" fg:w="62"/><text x="44.5082%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (62 samples, 0.02%)</title><rect x="44.2582%" y="373" width="0.0197%" height="15" fill="rgb(249,131,53)" fg:x="139444" fg:w="62"/><text x="44.5082%" y="383.50"></text></g><g><title>core::core_arch::simd::i8x16::new (62 samples, 0.02%)</title><rect x="44.2582%" y="357" width="0.0197%" height="15" fill="rgb(236,170,29)" fg:x="139444" fg:w="62"/><text x="44.5082%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (353 samples, 0.11%)</title><rect x="44.1741%" y="453" width="0.1120%" height="15" fill="rgb(247,96,15)" fg:x="139179" fg:w="353"/><text x="44.4241%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (353 samples, 0.11%)</title><rect x="44.1741%" y="437" width="0.1120%" height="15" fill="rgb(211,210,7)" fg:x="139179" fg:w="353"/><text x="44.4241%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (353 samples, 0.11%)</title><rect x="44.1741%" y="421" width="0.1120%" height="15" fill="rgb(240,88,50)" fg:x="139179" fg:w="353"/><text x="44.4241%" y="431.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (1,681 samples, 0.53%)</title><rect x="43.8269%" y="501" width="0.5335%" height="15" fill="rgb(209,229,26)" fg:x="138085" fg:w="1681"/><text x="44.0769%" y="511.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (1,570 samples, 0.50%)</title><rect x="43.8621%" y="485" width="0.4983%" height="15" fill="rgb(210,68,23)" fg:x="138196" fg:w="1570"/><text x="44.1121%" y="495.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (1,528 samples, 0.48%)</title><rect x="43.8755%" y="469" width="0.4850%" height="15" fill="rgb(229,180,13)" fg:x="138238" fg:w="1528"/><text x="44.1255%" y="479.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (234 samples, 0.07%)</title><rect x="44.2862%" y="453" width="0.0743%" height="15" fill="rgb(236,53,44)" fg:x="139532" fg:w="234"/><text x="44.5362%" y="463.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (212 samples, 0.07%)</title><rect x="44.2932%" y="437" width="0.0673%" height="15" fill="rgb(244,214,29)" fg:x="139554" fg:w="212"/><text x="44.5432%" y="447.50"></text></g><g><title>&lt;engine::engine::world::Position as core::cmp::PartialEq&gt;::eq (203 samples, 0.06%)</title><rect x="44.2960%" y="421" width="0.0644%" height="15" fill="rgb(220,75,29)" fg:x="139563" fg:w="203"/><text x="44.5460%" y="431.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (34 samples, 0.01%)</title><rect x="44.3604%" y="501" width="0.0108%" height="15" fill="rgb(214,183,37)" fg:x="139766" fg:w="34"/><text x="44.6104%" y="511.50"></text></g><g><title>hashbrown::raw::inner::is_full (86 samples, 0.03%)</title><rect x="44.4671%" y="373" width="0.0273%" height="15" fill="rgb(239,117,29)" fg:x="140102" fg:w="86"/><text x="44.7171%" y="383.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (51 samples, 0.02%)</title><rect x="44.4944%" y="373" width="0.0162%" height="15" fill="rgb(237,171,35)" fg:x="140188" fg:w="51"/><text x="44.7444%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (51 samples, 0.02%)</title><rect x="44.4944%" y="357" width="0.0162%" height="15" fill="rgb(229,178,53)" fg:x="140188" fg:w="51"/><text x="44.7444%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (51 samples, 0.02%)</title><rect x="44.4944%" y="341" width="0.0162%" height="15" fill="rgb(210,102,19)" fg:x="140188" fg:w="51"/><text x="44.7444%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (248 samples, 0.08%)</title><rect x="44.4388%" y="389" width="0.0787%" height="15" fill="rgb(235,127,22)" fg:x="140013" fg:w="248"/><text x="44.6888%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (281 samples, 0.09%)</title><rect x="44.4388%" y="405" width="0.0892%" height="15" fill="rgb(244,31,31)" fg:x="140013" fg:w="281"/><text x="44.6888%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (33 samples, 0.01%)</title><rect x="44.5176%" y="389" width="0.0105%" height="15" fill="rgb(231,43,21)" fg:x="140261" fg:w="33"/><text x="44.7676%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (33 samples, 0.01%)</title><rect x="44.5176%" y="373" width="0.0105%" height="15" fill="rgb(217,131,35)" fg:x="140261" fg:w="33"/><text x="44.7676%" y="383.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (57 samples, 0.02%)</title><rect x="44.5290%" y="373" width="0.0181%" height="15" fill="rgb(221,149,4)" fg:x="140297" fg:w="57"/><text x="44.7790%" y="383.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (56 samples, 0.02%)</title><rect x="44.5293%" y="357" width="0.0178%" height="15" fill="rgb(232,170,28)" fg:x="140298" fg:w="56"/><text x="44.7793%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (56 samples, 0.02%)</title><rect x="44.5293%" y="341" width="0.0178%" height="15" fill="rgb(238,56,10)" fg:x="140298" fg:w="56"/><text x="44.7793%" y="351.50"></text></g><g><title>alloc::alloc::alloc (56 samples, 0.02%)</title><rect x="44.5293%" y="325" width="0.0178%" height="15" fill="rgb(235,196,14)" fg:x="140298" fg:w="56"/><text x="44.7793%" y="335.50"></text></g><g><title>__rdl_alloc (56 samples, 0.02%)</title><rect x="44.5293%" y="309" width="0.0178%" height="15" fill="rgb(216,45,48)" fg:x="140298" fg:w="56"/><text x="44.7793%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (56 samples, 0.02%)</title><rect x="44.5293%" y="293" width="0.0178%" height="15" fill="rgb(238,213,17)" fg:x="140298" fg:w="56"/><text x="44.7793%" y="303.50"></text></g><g><title>__GI___libc_malloc (56 samples, 0.02%)</title><rect x="44.5293%" y="277" width="0.0178%" height="15" fill="rgb(212,13,2)" fg:x="140298" fg:w="56"/><text x="44.7793%" y="287.50"></text></g><g><title>_int_malloc (35 samples, 0.01%)</title><rect x="44.5360%" y="261" width="0.0111%" height="15" fill="rgb(240,114,20)" fg:x="140319" fg:w="35"/><text x="44.7860%" y="271.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (66 samples, 0.02%)</title><rect x="44.5280%" y="405" width="0.0209%" height="15" fill="rgb(228,41,40)" fg:x="140294" fg:w="66"/><text x="44.7780%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (66 samples, 0.02%)</title><rect x="44.5280%" y="389" width="0.0209%" height="15" fill="rgb(244,132,35)" fg:x="140294" fg:w="66"/><text x="44.7780%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (461 samples, 0.15%)</title><rect x="44.4096%" y="421" width="0.1463%" height="15" fill="rgb(253,189,4)" fg:x="139921" fg:w="461"/><text x="44.6596%" y="431.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (464 samples, 0.15%)</title><rect x="44.4090%" y="453" width="0.1473%" height="15" fill="rgb(224,37,19)" fg:x="139919" fg:w="464"/><text x="44.6590%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (464 samples, 0.15%)</title><rect x="44.4090%" y="437" width="0.1473%" height="15" fill="rgb(235,223,18)" fg:x="139919" fg:w="464"/><text x="44.6590%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (155 samples, 0.05%)</title><rect x="44.5563%" y="453" width="0.0492%" height="15" fill="rgb(235,163,25)" fg:x="140383" fg:w="155"/><text x="44.8063%" y="463.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (34 samples, 0.01%)</title><rect x="44.5947%" y="437" width="0.0108%" height="15" fill="rgb(217,145,28)" fg:x="140504" fg:w="34"/><text x="44.8447%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (34 samples, 0.01%)</title><rect x="44.5947%" y="421" width="0.0108%" height="15" fill="rgb(223,223,32)" fg:x="140504" fg:w="34"/><text x="44.8447%" y="431.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (73 samples, 0.02%)</title><rect x="44.6055%" y="453" width="0.0232%" height="15" fill="rgb(227,189,39)" fg:x="140538" fg:w="73"/><text x="44.8555%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (711 samples, 0.23%)</title><rect x="44.4042%" y="469" width="0.2257%" height="15" fill="rgb(248,10,22)" fg:x="139904" fg:w="711"/><text x="44.6542%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (48 samples, 0.02%)</title><rect x="44.6426%" y="261" width="0.0152%" height="15" fill="rgb(248,46,39)" fg:x="140655" fg:w="48"/><text x="44.8926%" y="271.50"></text></g><g><title>malloc_consolidate (51 samples, 0.02%)</title><rect x="44.6883%" y="245" width="0.0162%" height="15" fill="rgb(248,113,48)" fg:x="140799" fg:w="51"/><text x="44.9383%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (239 samples, 0.08%)</title><rect x="44.6305%" y="373" width="0.0759%" height="15" fill="rgb(245,16,25)" fg:x="140617" fg:w="239"/><text x="44.8805%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (239 samples, 0.08%)</title><rect x="44.6305%" y="357" width="0.0759%" height="15" fill="rgb(249,152,16)" fg:x="140617" fg:w="239"/><text x="44.8805%" y="367.50"></text></g><g><title>alloc::alloc::realloc (239 samples, 0.08%)</title><rect x="44.6305%" y="341" width="0.0759%" height="15" fill="rgb(250,16,1)" fg:x="140617" fg:w="239"/><text x="44.8805%" y="351.50"></text></g><g><title>__rdl_realloc (239 samples, 0.08%)</title><rect x="44.6305%" y="325" width="0.0759%" height="15" fill="rgb(249,138,3)" fg:x="140617" fg:w="239"/><text x="44.8805%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (239 samples, 0.08%)</title><rect x="44.6305%" y="309" width="0.0759%" height="15" fill="rgb(227,71,41)" fg:x="140617" fg:w="239"/><text x="44.8805%" y="319.50"></text></g><g><title>__GI___libc_realloc (238 samples, 0.08%)</title><rect x="44.6309%" y="293" width="0.0755%" height="15" fill="rgb(209,184,23)" fg:x="140618" fg:w="238"/><text x="44.8809%" y="303.50"></text></g><g><title>_int_realloc (209 samples, 0.07%)</title><rect x="44.6401%" y="277" width="0.0663%" height="15" fill="rgb(223,215,31)" fg:x="140647" fg:w="209"/><text x="44.8901%" y="287.50"></text></g><g><title>_int_malloc (133 samples, 0.04%)</title><rect x="44.6642%" y="261" width="0.0422%" height="15" fill="rgb(210,146,28)" fg:x="140723" fg:w="133"/><text x="44.9142%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (243 samples, 0.08%)</title><rect x="44.6299%" y="405" width="0.0771%" height="15" fill="rgb(209,183,41)" fg:x="140615" fg:w="243"/><text x="44.8799%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (242 samples, 0.08%)</title><rect x="44.6302%" y="389" width="0.0768%" height="15" fill="rgb(209,224,45)" fg:x="140616" fg:w="242"/><text x="44.8802%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (245 samples, 0.08%)</title><rect x="44.6299%" y="453" width="0.0778%" height="15" fill="rgb(224,209,51)" fg:x="140615" fg:w="245"/><text x="44.8799%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (245 samples, 0.08%)</title><rect x="44.6299%" y="437" width="0.0778%" height="15" fill="rgb(223,17,39)" fg:x="140615" fg:w="245"/><text x="44.8799%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (245 samples, 0.08%)</title><rect x="44.6299%" y="421" width="0.0778%" height="15" fill="rgb(234,204,37)" fg:x="140615" fg:w="245"/><text x="44.8799%" y="431.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (1,043 samples, 0.33%)</title><rect x="44.3773%" y="501" width="0.3310%" height="15" fill="rgb(236,120,5)" fg:x="139819" fg:w="1043"/><text x="44.6273%" y="511.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (1,025 samples, 0.33%)</title><rect x="44.3830%" y="485" width="0.3253%" height="15" fill="rgb(248,97,27)" fg:x="139837" fg:w="1025"/><text x="44.6330%" y="495.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (247 samples, 0.08%)</title><rect x="44.6299%" y="469" width="0.0784%" height="15" fill="rgb(240,66,17)" fg:x="140615" fg:w="247"/><text x="44.8799%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (35 samples, 0.01%)</title><rect x="44.7083%" y="469" width="0.0111%" height="15" fill="rgb(210,79,3)" fg:x="140862" fg:w="35"/><text x="44.9583%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (57 samples, 0.02%)</title><rect x="44.7083%" y="485" width="0.0181%" height="15" fill="rgb(214,176,27)" fg:x="140862" fg:w="57"/><text x="44.9583%" y="495.50"></text></g><g><title>indexmap::map::core::raw::OccupiedEntry&lt;K,V&gt;::get (60 samples, 0.02%)</title><rect x="44.7083%" y="501" width="0.0190%" height="15" fill="rgb(235,185,3)" fg:x="140862" fg:w="60"/><text x="44.9583%" y="511.50"></text></g><g><title>pathfinding::directed::astar::astar (35 samples, 0.01%)</title><rect x="44.7273%" y="501" width="0.0111%" height="15" fill="rgb(227,24,12)" fg:x="140922" fg:w="35"/><text x="44.9773%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (35 samples, 0.01%)</title><rect x="44.7432%" y="309" width="0.0111%" height="15" fill="rgb(252,169,48)" fg:x="140972" fg:w="35"/><text x="44.9932%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (35 samples, 0.01%)</title><rect x="44.7432%" y="293" width="0.0111%" height="15" fill="rgb(212,65,1)" fg:x="140972" fg:w="35"/><text x="44.9932%" y="303.50"></text></g><g><title>alloc::alloc::realloc (35 samples, 0.01%)</title><rect x="44.7432%" y="277" width="0.0111%" height="15" fill="rgb(242,39,24)" fg:x="140972" fg:w="35"/><text x="44.9932%" y="287.50"></text></g><g><title>__rdl_realloc (35 samples, 0.01%)</title><rect x="44.7432%" y="261" width="0.0111%" height="15" fill="rgb(249,32,23)" fg:x="140972" fg:w="35"/><text x="44.9932%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (35 samples, 0.01%)</title><rect x="44.7432%" y="245" width="0.0111%" height="15" fill="rgb(251,195,23)" fg:x="140972" fg:w="35"/><text x="44.9932%" y="255.50"></text></g><g><title>__GI___libc_realloc (35 samples, 0.01%)</title><rect x="44.7432%" y="229" width="0.0111%" height="15" fill="rgb(236,174,8)" fg:x="140972" fg:w="35"/><text x="44.9932%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (38 samples, 0.01%)</title><rect x="44.7426%" y="325" width="0.0121%" height="15" fill="rgb(220,197,8)" fg:x="140970" fg:w="38"/><text x="44.9926%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (50 samples, 0.02%)</title><rect x="44.7391%" y="405" width="0.0159%" height="15" fill="rgb(240,108,37)" fg:x="140959" fg:w="50"/><text x="44.9891%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (40 samples, 0.01%)</title><rect x="44.7423%" y="389" width="0.0127%" height="15" fill="rgb(232,176,24)" fg:x="140969" fg:w="40"/><text x="44.9923%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (40 samples, 0.01%)</title><rect x="44.7423%" y="373" width="0.0127%" height="15" fill="rgb(243,35,29)" fg:x="140969" fg:w="40"/><text x="44.9923%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (40 samples, 0.01%)</title><rect x="44.7423%" y="357" width="0.0127%" height="15" fill="rgb(210,37,18)" fg:x="140969" fg:w="40"/><text x="44.9923%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40 samples, 0.01%)</title><rect x="44.7423%" y="341" width="0.0127%" height="15" fill="rgb(224,184,40)" fg:x="140969" fg:w="40"/><text x="44.9923%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (58 samples, 0.02%)</title><rect x="44.7388%" y="421" width="0.0184%" height="15" fill="rgb(236,39,29)" fg:x="140958" fg:w="58"/><text x="44.9888%" y="431.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path_around_entities (11,192 samples, 3.55%)</title><rect x="41.2068%" y="533" width="3.5522%" height="15" fill="rgb(232,48,39)" fg:x="129830" fg:w="11192"/><text x="41.4568%" y="543.50">engi..</text></g><g><title>pathfinding::directed::astar::astar (11,176 samples, 3.55%)</title><rect x="41.2119%" y="517" width="3.5472%" height="15" fill="rgb(236,34,42)" fg:x="129846" fg:w="11176"/><text x="41.4619%" y="527.50">path..</text></g><g><title>pathfinding::directed::reverse_path (65 samples, 0.02%)</title><rect x="44.7385%" y="501" width="0.0206%" height="15" fill="rgb(243,106,37)" fg:x="140957" fg:w="65"/><text x="44.9885%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (65 samples, 0.02%)</title><rect x="44.7385%" y="485" width="0.0206%" height="15" fill="rgb(218,96,6)" fg:x="140957" fg:w="65"/><text x="44.9885%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (65 samples, 0.02%)</title><rect x="44.7385%" y="469" width="0.0206%" height="15" fill="rgb(235,130,12)" fg:x="140957" fg:w="65"/><text x="44.9885%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (65 samples, 0.02%)</title><rect x="44.7385%" y="453" width="0.0206%" height="15" fill="rgb(231,95,0)" fg:x="140957" fg:w="65"/><text x="44.9885%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (64 samples, 0.02%)</title><rect x="44.7388%" y="437" width="0.0203%" height="15" fill="rgb(228,12,23)" fg:x="140958" fg:w="64"/><text x="44.9888%" y="447.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.01%)</title><rect x="44.8216%" y="517" width="0.0111%" height="15" fill="rgb(216,12,1)" fg:x="141219" fg:w="35"/><text x="45.0716%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (136 samples, 0.04%)</title><rect x="44.8486%" y="421" width="0.0432%" height="15" fill="rgb(219,59,3)" fg:x="141304" fg:w="136"/><text x="45.0986%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (136 samples, 0.04%)</title><rect x="44.8486%" y="405" width="0.0432%" height="15" fill="rgb(215,208,46)" fg:x="141304" fg:w="136"/><text x="45.0986%" y="415.50"></text></g><g><title>alloc::alloc::realloc (136 samples, 0.04%)</title><rect x="44.8486%" y="389" width="0.0432%" height="15" fill="rgb(254,224,29)" fg:x="141304" fg:w="136"/><text x="45.0986%" y="399.50"></text></g><g><title>__rdl_realloc (136 samples, 0.04%)</title><rect x="44.8486%" y="373" width="0.0432%" height="15" fill="rgb(232,14,29)" fg:x="141304" fg:w="136"/><text x="45.0986%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (136 samples, 0.04%)</title><rect x="44.8486%" y="357" width="0.0432%" height="15" fill="rgb(208,45,52)" fg:x="141304" fg:w="136"/><text x="45.0986%" y="367.50"></text></g><g><title>__GI___libc_realloc (134 samples, 0.04%)</title><rect x="44.8492%" y="341" width="0.0425%" height="15" fill="rgb(234,191,28)" fg:x="141306" fg:w="134"/><text x="45.0992%" y="351.50"></text></g><g><title>_int_realloc (68 samples, 0.02%)</title><rect x="44.8702%" y="325" width="0.0216%" height="15" fill="rgb(244,67,43)" fg:x="141372" fg:w="68"/><text x="45.1202%" y="335.50"></text></g><g><title>__GI___libc_malloc (124 samples, 0.04%)</title><rect x="44.8918%" y="421" width="0.0394%" height="15" fill="rgb(236,189,24)" fg:x="141440" fg:w="124"/><text x="45.1418%" y="431.50"></text></g><g><title>_int_malloc (76 samples, 0.02%)</title><rect x="44.9070%" y="405" width="0.0241%" height="15" fill="rgb(239,214,33)" fg:x="141488" fg:w="76"/><text x="45.1570%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (272 samples, 0.09%)</title><rect x="44.8454%" y="437" width="0.0863%" height="15" fill="rgb(226,176,41)" fg:x="141294" fg:w="272"/><text x="45.0954%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (298 samples, 0.09%)</title><rect x="44.8416%" y="453" width="0.0946%" height="15" fill="rgb(248,47,8)" fg:x="141282" fg:w="298"/><text x="45.0916%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (306 samples, 0.10%)</title><rect x="44.8397%" y="501" width="0.0971%" height="15" fill="rgb(218,81,44)" fg:x="141276" fg:w="306"/><text x="45.0897%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (306 samples, 0.10%)</title><rect x="44.8397%" y="485" width="0.0971%" height="15" fill="rgb(213,98,6)" fg:x="141276" fg:w="306"/><text x="45.0897%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (300 samples, 0.10%)</title><rect x="44.8416%" y="469" width="0.0952%" height="15" fill="rgb(222,85,22)" fg:x="141282" fg:w="300"/><text x="45.0916%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (340 samples, 0.11%)</title><rect x="44.8334%" y="517" width="0.1079%" height="15" fill="rgb(239,46,39)" fg:x="141256" fg:w="340"/><text x="45.0834%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (160 samples, 0.05%)</title><rect x="44.9521%" y="517" width="0.0508%" height="15" fill="rgb(237,12,29)" fg:x="141630" fg:w="160"/><text x="45.2021%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.05%)</title><rect x="44.9521%" y="501" width="0.0508%" height="15" fill="rgb(214,77,8)" fg:x="141630" fg:w="160"/><text x="45.2021%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (160 samples, 0.05%)</title><rect x="44.9521%" y="485" width="0.0508%" height="15" fill="rgb(217,168,37)" fg:x="141630" fg:w="160"/><text x="45.2021%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.05%)</title><rect x="44.9521%" y="469" width="0.0508%" height="15" fill="rgb(221,217,23)" fg:x="141630" fg:w="160"/><text x="45.2021%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (160 samples, 0.05%)</title><rect x="44.9521%" y="453" width="0.0508%" height="15" fill="rgb(243,229,36)" fg:x="141630" fg:w="160"/><text x="45.2021%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (160 samples, 0.05%)</title><rect x="44.9521%" y="437" width="0.0508%" height="15" fill="rgb(251,163,40)" fg:x="141630" fg:w="160"/><text x="45.2021%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (160 samples, 0.05%)</title><rect x="44.9521%" y="421" width="0.0508%" height="15" fill="rgb(237,222,12)" fg:x="141630" fg:w="160"/><text x="45.2021%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (160 samples, 0.05%)</title><rect x="44.9521%" y="405" width="0.0508%" height="15" fill="rgb(248,132,6)" fg:x="141630" fg:w="160"/><text x="45.2021%" y="415.50"></text></g><g><title>__rdl_dealloc (160 samples, 0.05%)</title><rect x="44.9521%" y="389" width="0.0508%" height="15" fill="rgb(227,167,50)" fg:x="141630" fg:w="160"/><text x="45.2021%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (160 samples, 0.05%)</title><rect x="44.9521%" y="373" width="0.0508%" height="15" fill="rgb(242,84,37)" fg:x="141630" fg:w="160"/><text x="45.2021%" y="383.50"></text></g><g><title>__GI___libc_free (160 samples, 0.05%)</title><rect x="44.9521%" y="357" width="0.0508%" height="15" fill="rgb(212,4,50)" fg:x="141630" fg:w="160"/><text x="45.2021%" y="367.50"></text></g><g><title>_int_free (145 samples, 0.05%)</title><rect x="44.9568%" y="341" width="0.0460%" height="15" fill="rgb(230,228,32)" fg:x="141645" fg:w="145"/><text x="45.2068%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (34 samples, 0.01%)</title><rect x="45.0936%" y="293" width="0.0108%" height="15" fill="rgb(248,217,23)" fg:x="142076" fg:w="34"/><text x="45.3436%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (388 samples, 0.12%)</title><rect x="45.0301%" y="405" width="0.1231%" height="15" fill="rgb(238,197,32)" fg:x="141876" fg:w="388"/><text x="45.2801%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (388 samples, 0.12%)</title><rect x="45.0301%" y="389" width="0.1231%" height="15" fill="rgb(236,106,1)" fg:x="141876" fg:w="388"/><text x="45.2801%" y="399.50"></text></g><g><title>alloc::alloc::realloc (388 samples, 0.12%)</title><rect x="45.0301%" y="373" width="0.1231%" height="15" fill="rgb(219,228,13)" fg:x="141876" fg:w="388"/><text x="45.2801%" y="383.50"></text></g><g><title>__rdl_realloc (388 samples, 0.12%)</title><rect x="45.0301%" y="357" width="0.1231%" height="15" fill="rgb(238,30,35)" fg:x="141876" fg:w="388"/><text x="45.2801%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (388 samples, 0.12%)</title><rect x="45.0301%" y="341" width="0.1231%" height="15" fill="rgb(236,70,23)" fg:x="141876" fg:w="388"/><text x="45.2801%" y="351.50"></text></g><g><title>__GI___libc_realloc (386 samples, 0.12%)</title><rect x="45.0308%" y="325" width="0.1225%" height="15" fill="rgb(249,104,48)" fg:x="141878" fg:w="386"/><text x="45.2808%" y="335.50"></text></g><g><title>_int_realloc (222 samples, 0.07%)</title><rect x="45.0828%" y="309" width="0.0705%" height="15" fill="rgb(254,117,50)" fg:x="142042" fg:w="222"/><text x="45.3328%" y="319.50"></text></g><g><title>_int_malloc (129 samples, 0.04%)</title><rect x="45.1123%" y="293" width="0.0409%" height="15" fill="rgb(223,152,4)" fg:x="142135" fg:w="129"/><text x="45.3623%" y="303.50"></text></g><g><title>__GI___libc_malloc (34 samples, 0.01%)</title><rect x="45.1533%" y="405" width="0.0108%" height="15" fill="rgb(245,6,2)" fg:x="142264" fg:w="34"/><text x="45.4033%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (436 samples, 0.14%)</title><rect x="45.0273%" y="421" width="0.1384%" height="15" fill="rgb(249,150,24)" fg:x="141867" fg:w="436"/><text x="45.2773%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (462 samples, 0.15%)</title><rect x="45.0228%" y="437" width="0.1466%" height="15" fill="rgb(228,185,42)" fg:x="141853" fg:w="462"/><text x="45.2728%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (464 samples, 0.15%)</title><rect x="45.0228%" y="485" width="0.1473%" height="15" fill="rgb(226,39,33)" fg:x="141853" fg:w="464"/><text x="45.2728%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (464 samples, 0.15%)</title><rect x="45.0228%" y="469" width="0.1473%" height="15" fill="rgb(221,166,19)" fg:x="141853" fg:w="464"/><text x="45.2728%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (464 samples, 0.15%)</title><rect x="45.0228%" y="453" width="0.1473%" height="15" fill="rgb(209,109,2)" fg:x="141853" fg:w="464"/><text x="45.2728%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (512 samples, 0.16%)</title><rect x="45.0130%" y="501" width="0.1625%" height="15" fill="rgb(252,216,26)" fg:x="141822" fg:w="512"/><text x="45.2630%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (41 samples, 0.01%)</title><rect x="45.1780%" y="469" width="0.0130%" height="15" fill="rgb(227,173,36)" fg:x="142342" fg:w="41"/><text x="45.4280%" y="479.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (69 samples, 0.02%)</title><rect x="45.1765%" y="485" width="0.0219%" height="15" fill="rgb(209,90,7)" fg:x="142337" fg:w="69"/><text x="45.4265%" y="495.50"></text></g><g><title>engine::engine::world::Position::neighbors (617 samples, 0.20%)</title><rect x="45.0028%" y="517" width="0.1958%" height="15" fill="rgb(250,194,11)" fg:x="141790" fg:w="617"/><text x="45.2528%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (70 samples, 0.02%)</title><rect x="45.1765%" y="501" width="0.0222%" height="15" fill="rgb(220,72,50)" fg:x="142337" fg:w="70"/><text x="45.4265%" y="511.50"></text></g><g><title>engine::engine::actor::pathfinding::nearby_entities (1,449 samples, 0.46%)</title><rect x="44.7591%" y="533" width="0.4599%" height="15" fill="rgb(222,106,48)" fg:x="141022" fg:w="1449"/><text x="45.0091%" y="543.50"></text></g><g><title>engine::engine::world::TileEntityMap::get (64 samples, 0.02%)</title><rect x="45.1987%" y="517" width="0.0203%" height="15" fill="rgb(216,220,45)" fg:x="142407" fg:w="64"/><text x="45.4487%" y="527.50"></text></g><g><title>engine::engine::actor::pathfinding::local_avoidance (14,036 samples, 4.45%)</title><rect x="40.7711%" y="549" width="4.4549%" height="15" fill="rgb(234,112,18)" fg:x="128457" fg:w="14036"/><text x="41.0211%" y="559.50">engin..</text></g><g><title>bevy_ecs::system::commands::EntityCommands::insert (325 samples, 0.10%)</title><rect x="45.2260%" y="533" width="0.1032%" height="15" fill="rgb(206,179,9)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="543.50"></text></g><g><title>bevy_ecs::system::commands::Commands::add (325 samples, 0.10%)</title><rect x="45.2260%" y="517" width="0.1032%" height="15" fill="rgb(215,115,40)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="527.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push (325 samples, 0.10%)</title><rect x="45.2260%" y="501" width="0.1032%" height="15" fill="rgb(222,69,34)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="511.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (325 samples, 0.10%)</title><rect x="45.2260%" y="485" width="0.1032%" height="15" fill="rgb(209,161,10)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (325 samples, 0.10%)</title><rect x="45.2260%" y="469" width="0.1032%" height="15" fill="rgb(217,6,38)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (325 samples, 0.10%)</title><rect x="45.2260%" y="453" width="0.1032%" height="15" fill="rgb(229,229,48)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (325 samples, 0.10%)</title><rect x="45.2260%" y="437" width="0.1032%" height="15" fill="rgb(225,21,28)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="447.50"></text></g><g><title>alloc::alloc::alloc (325 samples, 0.10%)</title><rect x="45.2260%" y="421" width="0.1032%" height="15" fill="rgb(206,33,13)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="431.50"></text></g><g><title>__rdl_alloc (325 samples, 0.10%)</title><rect x="45.2260%" y="405" width="0.1032%" height="15" fill="rgb(242,178,17)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (325 samples, 0.10%)</title><rect x="45.2260%" y="389" width="0.1032%" height="15" fill="rgb(220,162,5)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="399.50"></text></g><g><title>__GI___libc_malloc (325 samples, 0.10%)</title><rect x="45.2260%" y="373" width="0.1032%" height="15" fill="rgb(210,33,43)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="383.50"></text></g><g><title>_int_malloc (325 samples, 0.10%)</title><rect x="45.2260%" y="357" width="0.1032%" height="15" fill="rgb(216,116,54)" fg:x="142493" fg:w="325"/><text x="45.4760%" y="367.50"></text></g><g><title>unlink_chunk.constprop.0 (103 samples, 0.03%)</title><rect x="45.2964%" y="341" width="0.0327%" height="15" fill="rgb(249,92,24)" fg:x="142715" fg:w="103"/><text x="45.5464%" y="351.50"></text></g><g><title>__memmove_avx_unaligned_erms (140 samples, 0.04%)</title><rect x="45.4526%" y="309" width="0.0444%" height="15" fill="rgb(231,189,14)" fg:x="143207" fg:w="140"/><text x="45.7026%" y="319.50"></text></g><g><title>_int_free (148 samples, 0.05%)</title><rect x="45.4970%" y="309" width="0.0470%" height="15" fill="rgb(230,8,41)" fg:x="143347" fg:w="148"/><text x="45.7470%" y="319.50"></text></g><g><title>malloc_consolidate (127 samples, 0.04%)</title><rect x="45.8281%" y="293" width="0.0403%" height="15" fill="rgb(249,7,27)" fg:x="144390" fg:w="127"/><text x="46.0781%" y="303.50"></text></g><g><title>_int_malloc (1,105 samples, 0.35%)</title><rect x="45.5440%" y="309" width="0.3507%" height="15" fill="rgb(232,86,5)" fg:x="143495" fg:w="1105"/><text x="45.7940%" y="319.50"></text></g><g><title>unlink_chunk.constprop.0 (83 samples, 0.03%)</title><rect x="45.8684%" y="293" width="0.0263%" height="15" fill="rgb(224,175,18)" fg:x="144517" fg:w="83"/><text x="46.1184%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,783 samples, 0.57%)</title><rect x="45.3291%" y="421" width="0.5659%" height="15" fill="rgb(220,129,12)" fg:x="142818" fg:w="1783"/><text x="45.5791%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,783 samples, 0.57%)</title><rect x="45.3291%" y="405" width="0.5659%" height="15" fill="rgb(210,19,36)" fg:x="142818" fg:w="1783"/><text x="45.5791%" y="415.50"></text></g><g><title>alloc::alloc::realloc (1,783 samples, 0.57%)</title><rect x="45.3291%" y="389" width="0.5659%" height="15" fill="rgb(219,96,14)" fg:x="142818" fg:w="1783"/><text x="45.5791%" y="399.50"></text></g><g><title>__rdl_realloc (1,783 samples, 0.57%)</title><rect x="45.3291%" y="373" width="0.5659%" height="15" fill="rgb(249,106,1)" fg:x="142818" fg:w="1783"/><text x="45.5791%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,783 samples, 0.57%)</title><rect x="45.3291%" y="357" width="0.5659%" height="15" fill="rgb(249,155,20)" fg:x="142818" fg:w="1783"/><text x="45.5791%" y="367.50"></text></g><g><title>__GI___libc_realloc (1,783 samples, 0.57%)</title><rect x="45.3291%" y="341" width="0.5659%" height="15" fill="rgb(244,168,9)" fg:x="142818" fg:w="1783"/><text x="45.5791%" y="351.50"></text></g><g><title>_int_realloc (1,466 samples, 0.47%)</title><rect x="45.4297%" y="325" width="0.4653%" height="15" fill="rgb(216,23,50)" fg:x="143135" fg:w="1466"/><text x="45.6797%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,802 samples, 0.57%)</title><rect x="45.3291%" y="517" width="0.5719%" height="15" fill="rgb(224,219,20)" fg:x="142818" fg:w="1802"/><text x="45.5791%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,802 samples, 0.57%)</title><rect x="45.3291%" y="501" width="0.5719%" height="15" fill="rgb(222,156,15)" fg:x="142818" fg:w="1802"/><text x="45.5791%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,802 samples, 0.57%)</title><rect x="45.3291%" y="485" width="0.5719%" height="15" fill="rgb(231,97,17)" fg:x="142818" fg:w="1802"/><text x="45.5791%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,802 samples, 0.57%)</title><rect x="45.3291%" y="469" width="0.5719%" height="15" fill="rgb(218,70,48)" fg:x="142818" fg:w="1802"/><text x="45.5791%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,802 samples, 0.57%)</title><rect x="45.3291%" y="453" width="0.5719%" height="15" fill="rgb(212,196,52)" fg:x="142818" fg:w="1802"/><text x="45.5791%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,802 samples, 0.57%)</title><rect x="45.3291%" y="437" width="0.5719%" height="15" fill="rgb(243,203,18)" fg:x="142818" fg:w="1802"/><text x="45.5791%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (100 samples, 0.03%)</title><rect x="45.9045%" y="517" width="0.0317%" height="15" fill="rgb(252,125,41)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (100 samples, 0.03%)</title><rect x="45.9045%" y="501" width="0.0317%" height="15" fill="rgb(223,180,33)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (100 samples, 0.03%)</title><rect x="45.9045%" y="485" width="0.0317%" height="15" fill="rgb(254,159,46)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (100 samples, 0.03%)</title><rect x="45.9045%" y="469" width="0.0317%" height="15" fill="rgb(254,38,10)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (100 samples, 0.03%)</title><rect x="45.9045%" y="453" width="0.0317%" height="15" fill="rgb(208,217,32)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (100 samples, 0.03%)</title><rect x="45.9045%" y="437" width="0.0317%" height="15" fill="rgb(221,120,13)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (100 samples, 0.03%)</title><rect x="45.9045%" y="421" width="0.0317%" height="15" fill="rgb(246,54,52)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (100 samples, 0.03%)</title><rect x="45.9045%" y="405" width="0.0317%" height="15" fill="rgb(242,34,25)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="415.50"></text></g><g><title>__rdl_dealloc (100 samples, 0.03%)</title><rect x="45.9045%" y="389" width="0.0317%" height="15" fill="rgb(247,209,9)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (100 samples, 0.03%)</title><rect x="45.9045%" y="373" width="0.0317%" height="15" fill="rgb(228,71,26)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="383.50"></text></g><g><title>__GI___libc_free (100 samples, 0.03%)</title><rect x="45.9045%" y="357" width="0.0317%" height="15" fill="rgb(222,145,49)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="367.50"></text></g><g><title>_int_free (100 samples, 0.03%)</title><rect x="45.9045%" y="341" width="0.0317%" height="15" fill="rgb(218,121,17)" fg:x="144631" fg:w="100"/><text x="46.1545%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (120 samples, 0.04%)</title><rect x="46.5104%" y="501" width="0.0381%" height="15" fill="rgb(244,50,7)" fg:x="146540" fg:w="120"/><text x="46.7604%" y="511.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (38 samples, 0.01%)</title><rect x="46.5365%" y="485" width="0.0121%" height="15" fill="rgb(246,229,37)" fg:x="146622" fg:w="38"/><text x="46.7865%" y="495.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (38 samples, 0.01%)</title><rect x="46.5365%" y="469" width="0.0121%" height="15" fill="rgb(225,18,5)" fg:x="146622" fg:w="38"/><text x="46.7865%" y="479.50"></text></g><g><title>core::ptr::read (538 samples, 0.17%)</title><rect x="46.6349%" y="485" width="0.1708%" height="15" fill="rgb(213,204,8)" fg:x="146932" fg:w="538"/><text x="46.8849%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,451 samples, 0.46%)</title><rect x="46.5485%" y="501" width="0.4605%" height="15" fill="rgb(238,103,6)" fg:x="146660" fg:w="1451"/><text x="46.7985%" y="511.50"></text></g><g><title>pathfinding::directed::astar::astar (641 samples, 0.20%)</title><rect x="46.8056%" y="485" width="0.2034%" height="15" fill="rgb(222,25,35)" fg:x="147470" fg:w="641"/><text x="47.0556%" y="495.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (91 samples, 0.03%)</title><rect x="47.0091%" y="501" width="0.0289%" height="15" fill="rgb(213,203,35)" fg:x="148111" fg:w="91"/><text x="47.2591%" y="511.50"></text></g><g><title>__GI___libc_free (351 samples, 0.11%)</title><rect x="47.0389%" y="501" width="0.1114%" height="15" fill="rgb(221,79,53)" fg:x="148205" fg:w="351"/><text x="47.2889%" y="511.50"></text></g><g><title>_int_free (328 samples, 0.10%)</title><rect x="47.0462%" y="485" width="0.1041%" height="15" fill="rgb(243,200,35)" fg:x="148228" fg:w="328"/><text x="47.2962%" y="495.50"></text></g><g><title>unlink_chunk.constprop.0 (47 samples, 0.01%)</title><rect x="47.1354%" y="469" width="0.0149%" height="15" fill="rgb(248,60,25)" fg:x="148509" fg:w="47"/><text x="47.3854%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (109 samples, 0.03%)</title><rect x="47.1513%" y="485" width="0.0346%" height="15" fill="rgb(227,53,46)" fg:x="148559" fg:w="109"/><text x="47.4013%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (38 samples, 0.01%)</title><rect x="47.1738%" y="469" width="0.0121%" height="15" fill="rgb(216,120,32)" fg:x="148630" fg:w="38"/><text x="47.4238%" y="479.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (633 samples, 0.20%)</title><rect x="47.2255%" y="453" width="0.2009%" height="15" fill="rgb(220,134,1)" fg:x="148793" fg:w="633"/><text x="47.4755%" y="463.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (273 samples, 0.09%)</title><rect x="47.6166%" y="437" width="0.0866%" height="15" fill="rgb(237,168,5)" fg:x="150025" fg:w="273"/><text x="47.8666%" y="447.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (1,327 samples, 0.42%)</title><rect x="47.7619%" y="421" width="0.4212%" height="15" fill="rgb(231,100,33)" fg:x="150483" fg:w="1327"/><text x="48.0119%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (314 samples, 0.10%)</title><rect x="48.1831%" y="421" width="0.0997%" height="15" fill="rgb(236,177,47)" fg:x="151810" fg:w="314"/><text x="48.4331%" y="431.50"></text></g><g><title>core::cmp::PartialOrd::le (314 samples, 0.10%)</title><rect x="48.1831%" y="405" width="0.0997%" height="15" fill="rgb(235,7,49)" fg:x="151810" fg:w="314"/><text x="48.4331%" y="415.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (236 samples, 0.07%)</title><rect x="48.2079%" y="389" width="0.0749%" height="15" fill="rgb(232,119,22)" fg:x="151888" fg:w="236"/><text x="48.4579%" y="399.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (236 samples, 0.07%)</title><rect x="48.2079%" y="373" width="0.0749%" height="15" fill="rgb(254,73,53)" fg:x="151888" fg:w="236"/><text x="48.4579%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (154 samples, 0.05%)</title><rect x="48.2339%" y="357" width="0.0489%" height="15" fill="rgb(251,35,20)" fg:x="151970" fg:w="154"/><text x="48.4839%" y="367.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (1,925 samples, 0.61%)</title><rect x="47.7032%" y="437" width="0.6110%" height="15" fill="rgb(241,119,20)" fg:x="150298" fg:w="1925"/><text x="47.9532%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (99 samples, 0.03%)</title><rect x="48.2828%" y="421" width="0.0314%" height="15" fill="rgb(207,102,14)" fg:x="152124" fg:w="99"/><text x="48.5328%" y="431.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (99 samples, 0.03%)</title><rect x="48.2828%" y="405" width="0.0314%" height="15" fill="rgb(248,201,50)" fg:x="152124" fg:w="99"/><text x="48.5328%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (99 samples, 0.03%)</title><rect x="48.2828%" y="389" width="0.0314%" height="15" fill="rgb(222,185,44)" fg:x="152124" fg:w="99"/><text x="48.5328%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,724 samples, 0.55%)</title><rect x="48.3142%" y="421" width="0.5472%" height="15" fill="rgb(218,107,18)" fg:x="152223" fg:w="1724"/><text x="48.5642%" y="431.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (2,092 samples, 0.66%)</title><rect x="48.3142%" y="437" width="0.6640%" height="15" fill="rgb(237,177,39)" fg:x="152223" fg:w="2092"/><text x="48.5642%" y="447.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (368 samples, 0.12%)</title><rect x="48.8614%" y="421" width="0.1168%" height="15" fill="rgb(246,69,6)" fg:x="153947" fg:w="368"/><text x="49.1114%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (368 samples, 0.12%)</title><rect x="48.8614%" y="405" width="0.1168%" height="15" fill="rgb(234,208,37)" fg:x="153947" fg:w="368"/><text x="49.1114%" y="415.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (194 samples, 0.06%)</title><rect x="48.9782%" y="437" width="0.0616%" height="15" fill="rgb(225,4,6)" fg:x="154315" fg:w="194"/><text x="49.2282%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (2,405 samples, 0.76%)</title><rect x="49.0397%" y="437" width="0.7633%" height="15" fill="rgb(233,45,0)" fg:x="154509" fg:w="2405"/><text x="49.2897%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::le (2,405 samples, 0.76%)</title><rect x="49.0397%" y="421" width="0.7633%" height="15" fill="rgb(226,136,5)" fg:x="154509" fg:w="2405"/><text x="49.2897%" y="431.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (1,867 samples, 0.59%)</title><rect x="49.2105%" y="405" width="0.5926%" height="15" fill="rgb(211,91,47)" fg:x="155047" fg:w="1867"/><text x="49.4605%" y="415.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (1,424 samples, 0.45%)</title><rect x="49.3511%" y="389" width="0.4520%" height="15" fill="rgb(242,88,51)" fg:x="155490" fg:w="1424"/><text x="49.6011%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (564 samples, 0.18%)</title><rect x="49.6241%" y="373" width="0.1790%" height="15" fill="rgb(230,91,28)" fg:x="156350" fg:w="564"/><text x="49.8741%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (251 samples, 0.08%)</title><rect x="49.8031%" y="389" width="0.0797%" height="15" fill="rgb(254,186,29)" fg:x="156914" fg:w="251"/><text x="50.0531%" y="399.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (7,742 samples, 2.46%)</title><rect x="47.4264%" y="453" width="2.4572%" height="15" fill="rgb(238,6,4)" fg:x="149426" fg:w="7742"/><text x="47.6764%" y="463.50">al..</text></g><g><title>core::mem::drop (254 samples, 0.08%)</title><rect x="49.8031%" y="437" width="0.0806%" height="15" fill="rgb(221,151,16)" fg:x="156914" fg:w="254"/><text x="50.0531%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (254 samples, 0.08%)</title><rect x="49.8031%" y="421" width="0.0806%" height="15" fill="rgb(251,143,52)" fg:x="156914" fg:w="254"/><text x="50.0531%" y="431.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (254 samples, 0.08%)</title><rect x="49.8031%" y="405" width="0.0806%" height="15" fill="rgb(206,90,15)" fg:x="156914" fg:w="254"/><text x="50.0531%" y="415.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (8,643 samples, 2.74%)</title><rect x="47.1506%" y="501" width="2.7432%" height="15" fill="rgb(218,35,8)" fg:x="148557" fg:w="8643"/><text x="47.4006%" y="511.50">al..</text></g><g><title>core::option::Option&lt;T&gt;::map (8,532 samples, 2.71%)</title><rect x="47.1859%" y="485" width="2.7080%" height="15" fill="rgb(239,215,6)" fg:x="148668" fg:w="8532"/><text x="47.4359%" y="495.50">co..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (8,492 samples, 2.70%)</title><rect x="47.1986%" y="469" width="2.6953%" height="15" fill="rgb(245,116,39)" fg:x="148708" fg:w="8492"/><text x="47.4486%" y="479.50">al..</text></g><g><title>core::mem::swap (32 samples, 0.01%)</title><rect x="49.8837%" y="453" width="0.0102%" height="15" fill="rgb(242,65,28)" fg:x="157168" fg:w="32"/><text x="50.1337%" y="463.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (32 samples, 0.01%)</title><rect x="49.8837%" y="437" width="0.0102%" height="15" fill="rgb(252,132,53)" fg:x="157168" fg:w="32"/><text x="50.1337%" y="447.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (1,728 samples, 0.55%)</title><rect x="50.0030%" y="485" width="0.5485%" height="15" fill="rgb(224,159,50)" fg:x="157544" fg:w="1728"/><text x="50.2530%" y="495.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::get (776 samples, 0.25%)</title><rect x="51.2101%" y="469" width="0.2463%" height="15" fill="rgb(224,93,4)" fg:x="161347" fg:w="776"/><text x="51.4601%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (776 samples, 0.25%)</title><rect x="51.2101%" y="453" width="0.2463%" height="15" fill="rgb(208,81,34)" fg:x="161347" fg:w="776"/><text x="51.4601%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (776 samples, 0.25%)</title><rect x="51.2101%" y="437" width="0.2463%" height="15" fill="rgb(233,92,54)" fg:x="161347" fg:w="776"/><text x="51.4601%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (776 samples, 0.25%)</title><rect x="51.2101%" y="421" width="0.2463%" height="15" fill="rgb(237,21,14)" fg:x="161347" fg:w="776"/><text x="51.4601%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (776 samples, 0.25%)</title><rect x="51.2101%" y="405" width="0.2463%" height="15" fill="rgb(249,128,51)" fg:x="161347" fg:w="776"/><text x="51.4601%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,989 samples, 0.63%)</title><rect x="51.4567%" y="453" width="0.6313%" height="15" fill="rgb(223,129,24)" fg:x="162124" fg:w="1989"/><text x="51.7067%" y="463.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (2,671 samples, 0.85%)</title><rect x="51.4563%" y="469" width="0.8478%" height="15" fill="rgb(231,168,25)" fg:x="162123" fg:w="2671"/><text x="51.7063%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (681 samples, 0.22%)</title><rect x="52.0880%" y="453" width="0.2161%" height="15" fill="rgb(224,39,20)" fg:x="164113" fg:w="681"/><text x="52.3380%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (681 samples, 0.22%)</title><rect x="52.0880%" y="437" width="0.2161%" height="15" fill="rgb(225,152,53)" fg:x="164113" fg:w="681"/><text x="52.3380%" y="447.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (6,147 samples, 1.95%)</title><rect x="52.3041%" y="469" width="1.9510%" height="15" fill="rgb(252,17,24)" fg:x="164794" fg:w="6147"/><text x="52.5541%" y="479.50">a..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (6,730 samples, 2.14%)</title><rect x="54.2551%" y="469" width="2.1360%" height="15" fill="rgb(250,114,30)" fg:x="170941" fg:w="6730"/><text x="54.5051%" y="479.50">c..</text></g><g><title>core::cmp::PartialOrd::le (6,730 samples, 2.14%)</title><rect x="54.2551%" y="453" width="2.1360%" height="15" fill="rgb(229,5,4)" fg:x="170941" fg:w="6730"/><text x="54.5051%" y="463.50">c..</text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (5,491 samples, 1.74%)</title><rect x="54.6483%" y="437" width="1.7428%" height="15" fill="rgb(225,176,49)" fg:x="172180" fg:w="5491"/><text x="54.8983%" y="447.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (5,491 samples, 1.74%)</title><rect x="54.6483%" y="421" width="1.7428%" height="15" fill="rgb(224,221,49)" fg:x="172180" fg:w="5491"/><text x="54.8983%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1,757 samples, 0.56%)</title><rect x="55.8335%" y="405" width="0.5577%" height="15" fill="rgb(253,169,27)" fg:x="175914" fg:w="1757"/><text x="56.0835%" y="415.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (19,807 samples, 6.29%)</title><rect x="50.5515%" y="485" width="6.2866%" height="15" fill="rgb(211,206,16)" fg:x="159272" fg:w="19807"/><text x="50.8015%" y="495.50">alloc::c..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (1,408 samples, 0.45%)</title><rect x="56.3911%" y="469" width="0.4469%" height="15" fill="rgb(244,87,35)" fg:x="177671" fg:w="1408"/><text x="56.6411%" y="479.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,408 samples, 0.45%)</title><rect x="56.3911%" y="453" width="0.4469%" height="15" fill="rgb(246,28,10)" fg:x="177671" fg:w="1408"/><text x="56.6411%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,408 samples, 0.45%)</title><rect x="56.3911%" y="437" width="0.4469%" height="15" fill="rgb(229,12,44)" fg:x="177671" fg:w="1408"/><text x="56.6411%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (38 samples, 0.01%)</title><rect x="56.9497%" y="469" width="0.0121%" height="15" fill="rgb(210,145,37)" fg:x="179431" fg:w="38"/><text x="57.1997%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (662 samples, 0.21%)</title><rect x="57.2189%" y="277" width="0.2101%" height="15" fill="rgb(227,112,52)" fg:x="180279" fg:w="662"/><text x="57.4689%" y="287.50"></text></g><g><title>_int_free (341 samples, 0.11%)</title><rect x="57.4290%" y="277" width="0.1082%" height="15" fill="rgb(238,155,34)" fg:x="180941" fg:w="341"/><text x="57.6790%" y="287.50"></text></g><g><title>unlink_chunk.constprop.0 (62 samples, 0.02%)</title><rect x="57.5176%" y="261" width="0.0197%" height="15" fill="rgb(239,226,36)" fg:x="181220" fg:w="62"/><text x="57.7676%" y="271.50"></text></g><g><title>_int_malloc (1,921 samples, 0.61%)</title><rect x="57.5372%" y="277" width="0.6097%" height="15" fill="rgb(230,16,23)" fg:x="181282" fg:w="1921"/><text x="57.7872%" y="287.50"></text></g><g><title>unlink_chunk.constprop.0 (159 samples, 0.05%)</title><rect x="58.0965%" y="261" width="0.0505%" height="15" fill="rgb(236,171,36)" fg:x="183044" fg:w="159"/><text x="58.3465%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3,668 samples, 1.16%)</title><rect x="56.9869%" y="389" width="1.1642%" height="15" fill="rgb(221,22,14)" fg:x="179548" fg:w="3668"/><text x="57.2369%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3,668 samples, 1.16%)</title><rect x="56.9869%" y="373" width="1.1642%" height="15" fill="rgb(242,43,11)" fg:x="179548" fg:w="3668"/><text x="57.2369%" y="383.50"></text></g><g><title>alloc::alloc::realloc (3,663 samples, 1.16%)</title><rect x="56.9885%" y="357" width="1.1626%" height="15" fill="rgb(232,69,23)" fg:x="179553" fg:w="3663"/><text x="57.2385%" y="367.50"></text></g><g><title>__rdl_realloc (3,663 samples, 1.16%)</title><rect x="56.9885%" y="341" width="1.1626%" height="15" fill="rgb(216,180,54)" fg:x="179553" fg:w="3663"/><text x="57.2385%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3,663 samples, 1.16%)</title><rect x="56.9885%" y="325" width="1.1626%" height="15" fill="rgb(216,5,24)" fg:x="179553" fg:w="3663"/><text x="57.2385%" y="335.50"></text></g><g><title>__GI___libc_realloc (3,657 samples, 1.16%)</title><rect x="56.9904%" y="309" width="1.1607%" height="15" fill="rgb(225,89,9)" fg:x="179559" fg:w="3657"/><text x="57.2404%" y="319.50"></text></g><g><title>_int_realloc (3,098 samples, 0.98%)</title><rect x="57.1678%" y="293" width="0.9833%" height="15" fill="rgb(243,75,33)" fg:x="180118" fg:w="3098"/><text x="57.4178%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (3,702 samples, 1.17%)</title><rect x="56.9824%" y="405" width="1.1750%" height="15" fill="rgb(247,141,45)" fg:x="179534" fg:w="3702"/><text x="57.2324%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3,794 samples, 1.20%)</title><rect x="56.9647%" y="421" width="1.2042%" height="15" fill="rgb(232,177,36)" fg:x="179478" fg:w="3794"/><text x="57.2147%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3,816 samples, 1.21%)</title><rect x="56.9618%" y="469" width="1.2112%" height="15" fill="rgb(219,125,36)" fg:x="179469" fg:w="3816"/><text x="57.2118%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3,816 samples, 1.21%)</title><rect x="56.9618%" y="453" width="1.2112%" height="15" fill="rgb(227,94,9)" fg:x="179469" fg:w="3816"/><text x="57.2118%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3,807 samples, 1.21%)</title><rect x="56.9647%" y="437" width="1.2083%" height="15" fill="rgb(240,34,52)" fg:x="179478" fg:w="3807"/><text x="57.2147%" y="447.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (34,570 samples, 10.97%)</title><rect x="49.8938%" y="501" width="10.9722%" height="15" fill="rgb(216,45,12)" fg:x="157200" fg:w="34570"/><text x="50.1438%" y="511.50">alloc::collectio..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12,691 samples, 4.03%)</title><rect x="56.8380%" y="485" width="4.0280%" height="15" fill="rgb(246,21,19)" fg:x="179079" fg:w="12691"/><text x="57.0880%" y="495.50">allo..</text></g><g><title>core::ptr::write (8,469 samples, 2.69%)</title><rect x="58.1780%" y="469" width="2.6880%" height="15" fill="rgb(213,98,42)" fg:x="183301" fg:w="8469"/><text x="58.4280%" y="479.50">co..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (86 samples, 0.03%)</title><rect x="60.8676%" y="501" width="0.0273%" height="15" fill="rgb(250,136,47)" fg:x="191775" fg:w="86"/><text x="61.1176%" y="511.50"></text></g><g><title>pathfinding::directed::astar::astar (78 samples, 0.02%)</title><rect x="60.8949%" y="357" width="0.0248%" height="15" fill="rgb(251,124,27)" fg:x="191861" fg:w="78"/><text x="61.1449%" y="367.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5,986 samples, 1.90%)</title><rect x="60.8949%" y="405" width="1.8999%" height="15" fill="rgb(229,180,14)" fg:x="191861" fg:w="5986"/><text x="61.1449%" y="415.50">&lt;..</text></g><g><title>alloc::alloc::dealloc (5,986 samples, 1.90%)</title><rect x="60.8949%" y="389" width="1.8999%" height="15" fill="rgb(245,216,25)" fg:x="191861" fg:w="5986"/><text x="61.1449%" y="399.50">a..</text></g><g><title>__rdl_dealloc (5,986 samples, 1.90%)</title><rect x="60.8949%" y="373" width="1.8999%" height="15" fill="rgb(251,43,5)" fg:x="191861" fg:w="5986"/><text x="61.1449%" y="383.50">_..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (5,908 samples, 1.88%)</title><rect x="60.9197%" y="357" width="1.8751%" height="15" fill="rgb(250,128,24)" fg:x="191939" fg:w="5908"/><text x="61.1697%" y="367.50">s..</text></g><g><title>__GI___libc_free (5,908 samples, 1.88%)</title><rect x="60.9197%" y="341" width="1.8751%" height="15" fill="rgb(217,117,27)" fg:x="191939" fg:w="5908"/><text x="61.1697%" y="351.50">_..</text></g><g><title>_int_free (5,456 samples, 1.73%)</title><rect x="61.0631%" y="325" width="1.7317%" height="15" fill="rgb(245,147,4)" fg:x="192391" fg:w="5456"/><text x="61.3131%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (51 samples, 0.02%)</title><rect x="62.7948%" y="405" width="0.0162%" height="15" fill="rgb(242,201,35)" fg:x="197847" fg:w="51"/><text x="63.0448%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,120 samples, 1.94%)</title><rect x="60.8949%" y="421" width="1.9424%" height="15" fill="rgb(218,181,1)" fg:x="191861" fg:w="6120"/><text x="61.1449%" y="431.50">&lt;..</text></g><g><title>pathfinding::directed::astar::astar (83 samples, 0.03%)</title><rect x="62.8110%" y="405" width="0.0263%" height="15" fill="rgb(222,6,29)" fg:x="197898" fg:w="83"/><text x="63.0610%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (6,144 samples, 1.95%)</title><rect x="60.8949%" y="501" width="1.9500%" height="15" fill="rgb(208,186,3)" fg:x="191861" fg:w="6144"/><text x="61.1449%" y="511.50">c..</text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,144 samples, 1.95%)</title><rect x="60.8949%" y="485" width="1.9500%" height="15" fill="rgb(216,36,26)" fg:x="191861" fg:w="6144"/><text x="61.1449%" y="495.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (6,144 samples, 1.95%)</title><rect x="60.8949%" y="469" width="1.9500%" height="15" fill="rgb(248,201,23)" fg:x="191861" fg:w="6144"/><text x="61.1449%" y="479.50">c..</text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6,144 samples, 1.95%)</title><rect x="60.8949%" y="453" width="1.9500%" height="15" fill="rgb(251,170,31)" fg:x="191861" fg:w="6144"/><text x="61.1449%" y="463.50">&lt;..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (6,144 samples, 1.95%)</title><rect x="60.8949%" y="437" width="1.9500%" height="15" fill="rgb(207,110,25)" fg:x="191861" fg:w="6144"/><text x="61.1449%" y="447.50">c..</text></g><g><title>core::cmp::min (88 samples, 0.03%)</title><rect x="63.0798%" y="469" width="0.0279%" height="15" fill="rgb(250,54,15)" fg:x="198745" fg:w="88"/><text x="63.3298%" y="479.50"></text></g><g><title>core::cmp::Ord::min (88 samples, 0.03%)</title><rect x="63.0798%" y="453" width="0.0279%" height="15" fill="rgb(227,68,33)" fg:x="198745" fg:w="88"/><text x="63.3298%" y="463.50"></text></g><g><title>core::cmp::min_by (88 samples, 0.03%)</title><rect x="63.0798%" y="437" width="0.0279%" height="15" fill="rgb(238,34,41)" fg:x="198745" fg:w="88"/><text x="63.3298%" y="447.50"></text></g><g><title>engine::engine::actor::pathfinding::diagonal_distance (2,283 samples, 0.72%)</title><rect x="62.9415%" y="485" width="0.7246%" height="15" fill="rgb(220,11,15)" fg:x="198309" fg:w="2283"/><text x="63.1915%" y="495.50"></text></g><g><title>pathfinding::utils::absdiff (1,759 samples, 0.56%)</title><rect x="63.1078%" y="469" width="0.5583%" height="15" fill="rgb(246,111,35)" fg:x="198833" fg:w="1759"/><text x="63.3578%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (1,619 samples, 0.51%)</title><rect x="63.1522%" y="453" width="0.5139%" height="15" fill="rgb(209,88,53)" fg:x="198973" fg:w="1619"/><text x="63.4022%" y="463.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (149 samples, 0.05%)</title><rect x="64.8420%" y="437" width="0.0473%" height="15" fill="rgb(231,185,47)" fg:x="204297" fg:w="149"/><text x="65.0920%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (354 samples, 0.11%)</title><rect x="64.7817%" y="469" width="0.1124%" height="15" fill="rgb(233,154,1)" fg:x="204107" fg:w="354"/><text x="65.0317%" y="479.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (164 samples, 0.05%)</title><rect x="64.8420%" y="453" width="0.0521%" height="15" fill="rgb(225,15,46)" fg:x="204297" fg:w="164"/><text x="65.0920%" y="463.50"></text></g><g><title>core::ptr::read (429 samples, 0.14%)</title><rect x="65.0769%" y="453" width="0.1362%" height="15" fill="rgb(211,135,41)" fg:x="205037" fg:w="429"/><text x="65.3269%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1,049 samples, 0.33%)</title><rect x="64.8940%" y="469" width="0.3329%" height="15" fill="rgb(208,54,0)" fg:x="204461" fg:w="1049"/><text x="65.1440%" y="479.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (44 samples, 0.01%)</title><rect x="65.2130%" y="453" width="0.0140%" height="15" fill="rgb(244,136,14)" fg:x="205466" fg:w="44"/><text x="65.4630%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (172 samples, 0.05%)</title><rect x="65.5888%" y="453" width="0.0546%" height="15" fill="rgb(241,56,14)" fg:x="206650" fg:w="172"/><text x="65.8388%" y="463.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (111 samples, 0.04%)</title><rect x="65.7475%" y="389" width="0.0352%" height="15" fill="rgb(205,80,24)" fg:x="207150" fg:w="111"/><text x="65.9975%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (132 samples, 0.04%)</title><rect x="65.7827%" y="389" width="0.0419%" height="15" fill="rgb(220,57,4)" fg:x="207261" fg:w="132"/><text x="66.0327%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (179 samples, 0.06%)</title><rect x="65.8246%" y="389" width="0.0568%" height="15" fill="rgb(226,193,50)" fg:x="207393" fg:w="179"/><text x="66.0746%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (96 samples, 0.03%)</title><rect x="65.8510%" y="373" width="0.0305%" height="15" fill="rgb(231,168,22)" fg:x="207476" fg:w="96"/><text x="66.1010%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (90 samples, 0.03%)</title><rect x="66.0036%" y="373" width="0.0286%" height="15" fill="rgb(254,215,14)" fg:x="207957" fg:w="90"/><text x="66.2536%" y="383.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (90 samples, 0.03%)</title><rect x="66.0036%" y="357" width="0.0286%" height="15" fill="rgb(211,115,16)" fg:x="207957" fg:w="90"/><text x="66.2536%" y="367.50"></text></g><g><title>alloc::alloc::alloc (88 samples, 0.03%)</title><rect x="66.0043%" y="341" width="0.0279%" height="15" fill="rgb(236,210,16)" fg:x="207959" fg:w="88"/><text x="66.2543%" y="351.50"></text></g><g><title>__rdl_alloc (88 samples, 0.03%)</title><rect x="66.0043%" y="325" width="0.0279%" height="15" fill="rgb(221,94,12)" fg:x="207959" fg:w="88"/><text x="66.2543%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (88 samples, 0.03%)</title><rect x="66.0043%" y="309" width="0.0279%" height="15" fill="rgb(235,218,49)" fg:x="207959" fg:w="88"/><text x="66.2543%" y="319.50"></text></g><g><title>[libc-2.33.so] (71 samples, 0.02%)</title><rect x="67.9886%" y="261" width="0.0225%" height="15" fill="rgb(217,114,14)" fg:x="214211" fg:w="71"/><text x="68.2386%" y="271.50"></text></g><g><title>__memmove_avx_unaligned_erms (509 samples, 0.16%)</title><rect x="68.0111%" y="261" width="0.1616%" height="15" fill="rgb(216,145,22)" fg:x="214282" fg:w="509"/><text x="68.2611%" y="271.50"></text></g><g><title>_int_free (799 samples, 0.25%)</title><rect x="68.1727%" y="261" width="0.2536%" height="15" fill="rgb(217,112,39)" fg:x="214791" fg:w="799"/><text x="68.4227%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (9,072 samples, 2.88%)</title><rect x="66.0322%" y="373" width="2.8794%" height="15" fill="rgb(225,85,32)" fg:x="208047" fg:w="9072"/><text x="66.2822%" y="383.50">&lt;a..</text></g><g><title>alloc::alloc::Global::grow_impl (9,072 samples, 2.88%)</title><rect x="66.0322%" y="357" width="2.8794%" height="15" fill="rgb(245,209,47)" fg:x="208047" fg:w="9072"/><text x="66.2822%" y="367.50">al..</text></g><g><title>alloc::alloc::realloc (9,071 samples, 2.88%)</title><rect x="66.0325%" y="341" width="2.8791%" height="15" fill="rgb(218,220,15)" fg:x="208048" fg:w="9071"/><text x="66.2825%" y="351.50">al..</text></g><g><title>__rdl_realloc (9,071 samples, 2.88%)</title><rect x="66.0325%" y="325" width="2.8791%" height="15" fill="rgb(222,202,31)" fg:x="208048" fg:w="9071"/><text x="66.2825%" y="335.50">__..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (9,071 samples, 2.88%)</title><rect x="66.0325%" y="309" width="2.8791%" height="15" fill="rgb(243,203,4)" fg:x="208048" fg:w="9071"/><text x="66.2825%" y="319.50">st..</text></g><g><title>__GI___libc_realloc (9,000 samples, 2.86%)</title><rect x="66.0551%" y="293" width="2.8565%" height="15" fill="rgb(237,92,17)" fg:x="208119" fg:w="9000"/><text x="66.3051%" y="303.50">__..</text></g><g><title>_int_realloc (3,781 samples, 1.20%)</title><rect x="67.7115%" y="277" width="1.2001%" height="15" fill="rgb(231,119,7)" fg:x="213338" fg:w="3781"/><text x="67.9615%" y="287.50"></text></g><g><title>_int_malloc (1,529 samples, 0.49%)</title><rect x="68.4263%" y="261" width="0.4853%" height="15" fill="rgb(237,82,41)" fg:x="215590" fg:w="1529"/><text x="68.6763%" y="271.50"></text></g><g><title>__GI___libc_malloc (687 samples, 0.22%)</title><rect x="68.9116%" y="373" width="0.2180%" height="15" fill="rgb(226,81,48)" fg:x="217119" fg:w="687"/><text x="69.1616%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (10,421 samples, 3.31%)</title><rect x="65.8814%" y="389" width="3.3075%" height="15" fill="rgb(234,70,51)" fg:x="207572" fg:w="10421"/><text x="66.1314%" y="399.50">all..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (187 samples, 0.06%)</title><rect x="69.1296%" y="373" width="0.0594%" height="15" fill="rgb(251,86,4)" fg:x="217806" fg:w="187"/><text x="69.3796%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (178 samples, 0.06%)</title><rect x="69.1890%" y="389" width="0.0565%" height="15" fill="rgb(244,144,28)" fg:x="217993" fg:w="178"/><text x="69.4390%" y="399.50"></text></g><g><title>core::alloc::layout::Layout::repeat (178 samples, 0.06%)</title><rect x="69.1890%" y="373" width="0.0565%" height="15" fill="rgb(232,161,39)" fg:x="217993" fg:w="178"/><text x="69.4390%" y="383.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (144 samples, 0.05%)</title><rect x="69.1998%" y="357" width="0.0457%" height="15" fill="rgb(247,34,51)" fg:x="218027" fg:w="144"/><text x="69.4498%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (144 samples, 0.05%)</title><rect x="69.1998%" y="341" width="0.0457%" height="15" fill="rgb(225,132,2)" fg:x="218027" fg:w="144"/><text x="69.4498%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (325 samples, 0.10%)</title><rect x="69.2455%" y="357" width="0.1032%" height="15" fill="rgb(209,159,44)" fg:x="218171" fg:w="325"/><text x="69.4955%" y="367.50"></text></g><g><title>core::cmp::max (381 samples, 0.12%)</title><rect x="69.2455%" y="389" width="0.1209%" height="15" fill="rgb(251,214,1)" fg:x="218171" fg:w="381"/><text x="69.4955%" y="399.50"></text></g><g><title>core::cmp::Ord::max (381 samples, 0.12%)</title><rect x="69.2455%" y="373" width="0.1209%" height="15" fill="rgb(247,84,47)" fg:x="218171" fg:w="381"/><text x="69.4955%" y="383.50"></text></g><g><title>core::cmp::max_by (56 samples, 0.02%)</title><rect x="69.3486%" y="357" width="0.0178%" height="15" fill="rgb(240,111,43)" fg:x="218496" fg:w="56"/><text x="69.5986%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11,644 samples, 3.70%)</title><rect x="65.6856%" y="405" width="3.6957%" height="15" fill="rgb(215,214,35)" fg:x="206955" fg:w="11644"/><text x="65.9356%" y="415.50">allo..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (47 samples, 0.01%)</title><rect x="69.3664%" y="389" width="0.0149%" height="15" fill="rgb(248,207,23)" fg:x="218552" fg:w="47"/><text x="69.6164%" y="399.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (47 samples, 0.01%)</title><rect x="69.3664%" y="373" width="0.0149%" height="15" fill="rgb(214,186,4)" fg:x="218552" fg:w="47"/><text x="69.6164%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12,088 samples, 3.84%)</title><rect x="65.6434%" y="437" width="3.8366%" height="15" fill="rgb(220,133,22)" fg:x="206822" fg:w="12088"/><text x="65.8934%" y="447.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11,955 samples, 3.79%)</title><rect x="65.6856%" y="421" width="3.7944%" height="15" fill="rgb(239,134,19)" fg:x="206955" fg:w="11955"/><text x="65.9356%" y="431.50">allo..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (311 samples, 0.10%)</title><rect x="69.3813%" y="405" width="0.0987%" height="15" fill="rgb(250,140,9)" fg:x="218599" fg:w="311"/><text x="69.6313%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12,177 samples, 3.86%)</title><rect x="65.6434%" y="453" width="3.8649%" height="15" fill="rgb(225,59,14)" fg:x="206822" fg:w="12177"/><text x="65.8934%" y="463.50">allo..</text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (89 samples, 0.03%)</title><rect x="69.4800%" y="437" width="0.0282%" height="15" fill="rgb(214,152,51)" fg:x="218910" fg:w="89"/><text x="69.7300%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14,367 samples, 4.56%)</title><rect x="65.2270%" y="469" width="4.5600%" height="15" fill="rgb(251,227,43)" fg:x="205510" fg:w="14367"/><text x="65.4770%" y="479.50">alloc..</text></g><g><title>core::ptr::write (878 samples, 0.28%)</title><rect x="69.5083%" y="453" width="0.2787%" height="15" fill="rgb(241,96,17)" fg:x="218999" fg:w="878"/><text x="69.7583%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (83 samples, 0.03%)</title><rect x="69.7869%" y="469" width="0.0263%" height="15" fill="rgb(234,198,43)" fg:x="219877" fg:w="83"/><text x="70.0369%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2,453 samples, 0.78%)</title><rect x="69.8133%" y="373" width="0.7786%" height="15" fill="rgb(220,108,29)" fg:x="219960" fg:w="2453"/><text x="70.0633%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (2,453 samples, 0.78%)</title><rect x="69.8133%" y="357" width="0.7786%" height="15" fill="rgb(226,163,33)" fg:x="219960" fg:w="2453"/><text x="70.0633%" y="367.50"></text></g><g><title>__rdl_dealloc (2,453 samples, 0.78%)</title><rect x="69.8133%" y="341" width="0.7786%" height="15" fill="rgb(205,194,45)" fg:x="219960" fg:w="2453"/><text x="70.0633%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2,453 samples, 0.78%)</title><rect x="69.8133%" y="325" width="0.7786%" height="15" fill="rgb(206,143,44)" fg:x="219960" fg:w="2453"/><text x="70.0633%" y="335.50"></text></g><g><title>__GI___libc_free (2,453 samples, 0.78%)</title><rect x="69.8133%" y="309" width="0.7786%" height="15" fill="rgb(236,136,36)" fg:x="219960" fg:w="2453"/><text x="70.0633%" y="319.50"></text></g><g><title>_int_free (1,656 samples, 0.53%)</title><rect x="70.0662%" y="293" width="0.5256%" height="15" fill="rgb(249,172,42)" fg:x="220757" fg:w="1656"/><text x="70.3162%" y="303.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,454 samples, 0.78%)</title><rect x="69.8133%" y="389" width="0.7789%" height="15" fill="rgb(216,139,23)" fg:x="219960" fg:w="2454"/><text x="70.0633%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (2,496 samples, 0.79%)</title><rect x="69.8133%" y="469" width="0.7922%" height="15" fill="rgb(207,166,20)" fg:x="219960" fg:w="2496"/><text x="70.0633%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,496 samples, 0.79%)</title><rect x="69.8133%" y="453" width="0.7922%" height="15" fill="rgb(210,209,22)" fg:x="219960" fg:w="2496"/><text x="70.0633%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (2,496 samples, 0.79%)</title><rect x="69.8133%" y="437" width="0.7922%" height="15" fill="rgb(232,118,20)" fg:x="219960" fg:w="2496"/><text x="70.0633%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2,496 samples, 0.79%)</title><rect x="69.8133%" y="421" width="0.7922%" height="15" fill="rgb(238,113,42)" fg:x="219960" fg:w="2496"/><text x="70.0633%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (2,496 samples, 0.79%)</title><rect x="69.8133%" y="405" width="0.7922%" height="15" fill="rgb(231,42,5)" fg:x="219960" fg:w="2496"/><text x="70.0633%" y="415.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (42 samples, 0.01%)</title><rect x="70.5922%" y="389" width="0.0133%" height="15" fill="rgb(243,166,24)" fg:x="222414" fg:w="42"/><text x="70.8422%" y="399.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (365 samples, 0.12%)</title><rect x="70.6055%" y="469" width="0.1158%" height="15" fill="rgb(237,226,12)" fg:x="222456" fg:w="365"/><text x="70.8555%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (103 samples, 0.03%)</title><rect x="70.8765%" y="437" width="0.0327%" height="15" fill="rgb(229,133,24)" fg:x="223310" fg:w="103"/><text x="71.1265%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (153 samples, 0.05%)</title><rect x="70.9829%" y="373" width="0.0486%" height="15" fill="rgb(238,33,43)" fg:x="223645" fg:w="153"/><text x="71.2329%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (99 samples, 0.03%)</title><rect x="71.1190%" y="357" width="0.0314%" height="15" fill="rgb(227,59,38)" fg:x="224074" fg:w="99"/><text x="71.3690%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (99 samples, 0.03%)</title><rect x="71.1190%" y="341" width="0.0314%" height="15" fill="rgb(230,97,0)" fg:x="224074" fg:w="99"/><text x="71.3690%" y="351.50"></text></g><g><title>alloc::alloc::alloc (58 samples, 0.02%)</title><rect x="71.1320%" y="325" width="0.0184%" height="15" fill="rgb(250,173,50)" fg:x="224115" fg:w="58"/><text x="71.3820%" y="335.50"></text></g><g><title>__rdl_alloc (58 samples, 0.02%)</title><rect x="71.1320%" y="309" width="0.0184%" height="15" fill="rgb(240,15,50)" fg:x="224115" fg:w="58"/><text x="71.3820%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (58 samples, 0.02%)</title><rect x="71.1320%" y="293" width="0.0184%" height="15" fill="rgb(221,93,22)" fg:x="224115" fg:w="58"/><text x="71.3820%" y="303.50"></text></g><g><title>__GI___libc_malloc (1,332 samples, 0.42%)</title><rect x="71.1504%" y="357" width="0.4228%" height="15" fill="rgb(245,180,53)" fg:x="224173" fg:w="1332"/><text x="71.4004%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,713 samples, 0.54%)</title><rect x="71.0435%" y="373" width="0.5437%" height="15" fill="rgb(231,88,51)" fg:x="223836" fg:w="1713"/><text x="71.2935%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (44 samples, 0.01%)</title><rect x="71.5732%" y="357" width="0.0140%" height="15" fill="rgb(240,58,21)" fg:x="225505" fg:w="44"/><text x="71.8232%" y="367.50"></text></g><g><title>core::alloc::layout::Layout::array (148 samples, 0.05%)</title><rect x="71.5872%" y="373" width="0.0470%" height="15" fill="rgb(237,21,10)" fg:x="225549" fg:w="148"/><text x="71.8372%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::repeat (148 samples, 0.05%)</title><rect x="71.5872%" y="357" width="0.0470%" height="15" fill="rgb(218,43,11)" fg:x="225549" fg:w="148"/><text x="71.8372%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (98 samples, 0.03%)</title><rect x="71.6030%" y="341" width="0.0311%" height="15" fill="rgb(218,221,29)" fg:x="225599" fg:w="98"/><text x="71.8530%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (98 samples, 0.03%)</title><rect x="71.6030%" y="325" width="0.0311%" height="15" fill="rgb(214,118,42)" fg:x="225599" fg:w="98"/><text x="71.8530%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (288 samples, 0.09%)</title><rect x="71.6341%" y="341" width="0.0914%" height="15" fill="rgb(251,200,26)" fg:x="225697" fg:w="288"/><text x="71.8841%" y="351.50"></text></g><g><title>core::cmp::max (336 samples, 0.11%)</title><rect x="71.6341%" y="373" width="0.1066%" height="15" fill="rgb(237,101,39)" fg:x="225697" fg:w="336"/><text x="71.8841%" y="383.50"></text></g><g><title>core::cmp::Ord::max (336 samples, 0.11%)</title><rect x="71.6341%" y="357" width="0.1066%" height="15" fill="rgb(251,117,11)" fg:x="225697" fg:w="336"/><text x="71.8841%" y="367.50"></text></g><g><title>core::cmp::max_by (48 samples, 0.02%)</title><rect x="71.7256%" y="341" width="0.0152%" height="15" fill="rgb(216,223,23)" fg:x="225985" fg:w="48"/><text x="71.9756%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,576 samples, 0.82%)</title><rect x="70.9299%" y="389" width="0.8176%" height="15" fill="rgb(251,54,12)" fg:x="223478" fg:w="2576"/><text x="71.1799%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,735 samples, 0.87%)</title><rect x="70.9092%" y="437" width="0.8681%" height="15" fill="rgb(254,176,54)" fg:x="223413" fg:w="2735"/><text x="71.1592%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,735 samples, 0.87%)</title><rect x="70.9092%" y="421" width="0.8681%" height="15" fill="rgb(210,32,8)" fg:x="223413" fg:w="2735"/><text x="71.1592%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,670 samples, 0.85%)</title><rect x="70.9299%" y="405" width="0.8474%" height="15" fill="rgb(235,52,38)" fg:x="223478" fg:w="2670"/><text x="71.1799%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (94 samples, 0.03%)</title><rect x="71.7475%" y="389" width="0.0298%" height="15" fill="rgb(231,4,44)" fg:x="226054" fg:w="94"/><text x="71.9975%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4,646 samples, 1.47%)</title><rect x="70.7680%" y="453" width="1.4746%" height="15" fill="rgb(249,2,32)" fg:x="222968" fg:w="4646"/><text x="71.0180%" y="463.50"></text></g><g><title>core::ptr::write (1,466 samples, 0.47%)</title><rect x="71.7773%" y="437" width="0.4653%" height="15" fill="rgb(224,65,26)" fg:x="226148" fg:w="1466"/><text x="72.0273%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (119 samples, 0.04%)</title><rect x="72.2426%" y="453" width="0.0378%" height="15" fill="rgb(250,73,40)" fg:x="227614" fg:w="119"/><text x="72.4926%" y="463.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (4,955 samples, 1.57%)</title><rect x="70.7213%" y="469" width="1.5727%" height="15" fill="rgb(253,177,16)" fg:x="222821" fg:w="4955"/><text x="70.9713%" y="479.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (43 samples, 0.01%)</title><rect x="72.2804%" y="453" width="0.0136%" height="15" fill="rgb(217,32,34)" fg:x="227733" fg:w="43"/><text x="72.5304%" y="463.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (87 samples, 0.03%)</title><rect x="72.3165%" y="453" width="0.0276%" height="15" fill="rgb(212,7,10)" fg:x="227847" fg:w="87"/><text x="72.5665%" y="463.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (87 samples, 0.03%)</title><rect x="72.3165%" y="437" width="0.0276%" height="15" fill="rgb(245,89,8)" fg:x="227847" fg:w="87"/><text x="72.5665%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (204 samples, 0.06%)</title><rect x="72.4727%" y="437" width="0.0647%" height="15" fill="rgb(237,16,53)" fg:x="228339" fg:w="204"/><text x="72.7227%" y="447.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (151 samples, 0.05%)</title><rect x="72.5885%" y="373" width="0.0479%" height="15" fill="rgb(250,204,30)" fg:x="228704" fg:w="151"/><text x="72.8385%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (61 samples, 0.02%)</title><rect x="72.6365%" y="373" width="0.0194%" height="15" fill="rgb(208,77,27)" fg:x="228855" fg:w="61"/><text x="72.8865%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (68 samples, 0.02%)</title><rect x="72.7599%" y="357" width="0.0216%" height="15" fill="rgb(250,204,28)" fg:x="229244" fg:w="68"/><text x="73.0099%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (68 samples, 0.02%)</title><rect x="72.7599%" y="341" width="0.0216%" height="15" fill="rgb(244,63,21)" fg:x="229244" fg:w="68"/><text x="73.0099%" y="351.50"></text></g><g><title>alloc::alloc::alloc (59 samples, 0.02%)</title><rect x="72.7628%" y="325" width="0.0187%" height="15" fill="rgb(236,85,44)" fg:x="229253" fg:w="59"/><text x="73.0128%" y="335.50"></text></g><g><title>__rdl_alloc (59 samples, 0.02%)</title><rect x="72.7628%" y="309" width="0.0187%" height="15" fill="rgb(215,98,4)" fg:x="229253" fg:w="59"/><text x="73.0128%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (59 samples, 0.02%)</title><rect x="72.7628%" y="293" width="0.0187%" height="15" fill="rgb(235,38,11)" fg:x="229253" fg:w="59"/><text x="73.0128%" y="303.50"></text></g><g><title>__GI___libc_malloc (897 samples, 0.28%)</title><rect x="72.7815%" y="357" width="0.2847%" height="15" fill="rgb(254,186,25)" fg:x="229312" fg:w="897"/><text x="73.0315%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,293 samples, 0.41%)</title><rect x="72.6590%" y="373" width="0.4104%" height="15" fill="rgb(225,55,31)" fg:x="228926" fg:w="1293"/><text x="72.9090%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::array (104 samples, 0.03%)</title><rect x="73.0694%" y="373" width="0.0330%" height="15" fill="rgb(211,15,21)" fg:x="230219" fg:w="104"/><text x="73.3194%" y="383.50"></text></g><g><title>core::alloc::layout::Layout::repeat (104 samples, 0.03%)</title><rect x="73.0694%" y="357" width="0.0330%" height="15" fill="rgb(215,187,41)" fg:x="230219" fg:w="104"/><text x="73.3194%" y="367.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (85 samples, 0.03%)</title><rect x="73.0754%" y="341" width="0.0270%" height="15" fill="rgb(248,69,32)" fg:x="230238" fg:w="85"/><text x="73.3254%" y="351.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (85 samples, 0.03%)</title><rect x="73.0754%" y="325" width="0.0270%" height="15" fill="rgb(252,102,52)" fg:x="230238" fg:w="85"/><text x="73.3254%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (201 samples, 0.06%)</title><rect x="73.1024%" y="341" width="0.0638%" height="15" fill="rgb(253,140,32)" fg:x="230323" fg:w="201"/><text x="73.3524%" y="351.50"></text></g><g><title>core::cmp::max (208 samples, 0.07%)</title><rect x="73.1024%" y="373" width="0.0660%" height="15" fill="rgb(216,56,42)" fg:x="230323" fg:w="208"/><text x="73.3524%" y="383.50"></text></g><g><title>core::cmp::Ord::max (208 samples, 0.07%)</title><rect x="73.1024%" y="357" width="0.0660%" height="15" fill="rgb(216,184,14)" fg:x="230323" fg:w="208"/><text x="73.3524%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,921 samples, 0.61%)</title><rect x="72.5597%" y="389" width="0.6097%" height="15" fill="rgb(237,187,27)" fg:x="228613" fg:w="1921"/><text x="72.8097%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,063 samples, 0.65%)</title><rect x="72.5374%" y="437" width="0.6548%" height="15" fill="rgb(219,65,3)" fg:x="228543" fg:w="2063"/><text x="72.7874%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,063 samples, 0.65%)</title><rect x="72.5374%" y="421" width="0.6548%" height="15" fill="rgb(245,83,25)" fg:x="228543" fg:w="2063"/><text x="72.7874%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,993 samples, 0.63%)</title><rect x="72.5597%" y="405" width="0.6326%" height="15" fill="rgb(214,205,45)" fg:x="228613" fg:w="1993"/><text x="72.8097%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (72 samples, 0.02%)</title><rect x="73.1694%" y="389" width="0.0229%" height="15" fill="rgb(241,20,18)" fg:x="230534" fg:w="72"/><text x="73.4194%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,650 samples, 1.16%)</title><rect x="72.3442%" y="453" width="1.1585%" height="15" fill="rgb(232,163,23)" fg:x="227934" fg:w="3650"/><text x="72.5942%" y="463.50"></text></g><g><title>core::ptr::write (978 samples, 0.31%)</title><rect x="73.1922%" y="437" width="0.3104%" height="15" fill="rgb(214,5,46)" fg:x="230606" fg:w="978"/><text x="73.4422%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (79 samples, 0.03%)</title><rect x="73.5026%" y="453" width="0.0251%" height="15" fill="rgb(229,78,17)" fg:x="231584" fg:w="79"/><text x="73.7526%" y="463.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (3,892 samples, 1.24%)</title><rect x="72.2940%" y="469" width="1.2353%" height="15" fill="rgb(248,89,10)" fg:x="227776" fg:w="3892"/><text x="72.5440%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (230 samples, 0.07%)</title><rect x="74.4618%" y="437" width="0.0730%" height="15" fill="rgb(248,54,15)" fg:x="234606" fg:w="230"/><text x="74.7118%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (116 samples, 0.04%)</title><rect x="74.4980%" y="421" width="0.0368%" height="15" fill="rgb(223,116,6)" fg:x="234720" fg:w="116"/><text x="74.7480%" y="431.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path::{{closure}} (36,996 samples, 11.74%)</title><rect x="62.8450%" y="501" width="11.7422%" height="15" fill="rgb(205,125,38)" fg:x="198005" fg:w="36996"/><text x="63.0950%" y="511.50">engine::engine::a..</text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (34,409 samples, 10.92%)</title><rect x="63.6661%" y="485" width="10.9211%" height="15" fill="rgb(251,78,38)" fg:x="200592" fg:w="34409"/><text x="63.9161%" y="495.50">engine::engine::..</text></g><g><title>engine::engine::world::TileWeightMap::get (3,333 samples, 1.06%)</title><rect x="73.5293%" y="469" width="1.0579%" height="15" fill="rgb(253,78,28)" fg:x="231668" fg:w="3333"/><text x="73.7793%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (395 samples, 0.13%)</title><rect x="74.4618%" y="453" width="0.1254%" height="15" fill="rgb(209,120,3)" fg:x="234606" fg:w="395"/><text x="74.7118%" y="463.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (165 samples, 0.05%)</title><rect x="74.5348%" y="437" width="0.0524%" height="15" fill="rgb(238,229,9)" fg:x="234836" fg:w="165"/><text x="74.7848%" y="447.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (165 samples, 0.05%)</title><rect x="74.5348%" y="421" width="0.0524%" height="15" fill="rgb(253,159,18)" fg:x="234836" fg:w="165"/><text x="74.7848%" y="431.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (271 samples, 0.09%)</title><rect x="74.5884%" y="389" width="0.0860%" height="15" fill="rgb(244,42,34)" fg:x="235005" fg:w="271"/><text x="74.8384%" y="399.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (1,259 samples, 0.40%)</title><rect x="74.5872%" y="485" width="0.3996%" height="15" fill="rgb(224,8,7)" fg:x="235001" fg:w="1259"/><text x="74.8372%" y="495.50"></text></g><g><title>&lt;engine::engine::world::Position as core::hash::Hash&gt;::hash (1,259 samples, 0.40%)</title><rect x="74.5872%" y="469" width="0.3996%" height="15" fill="rgb(210,201,45)" fg:x="235001" fg:w="1259"/><text x="74.8372%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1,259 samples, 0.40%)</title><rect x="74.5872%" y="453" width="0.3996%" height="15" fill="rgb(252,185,21)" fg:x="235001" fg:w="1259"/><text x="74.8372%" y="463.50"></text></g><g><title>core::hash::Hasher::write_i64 (1,259 samples, 0.40%)</title><rect x="74.5872%" y="437" width="0.3996%" height="15" fill="rgb(223,131,1)" fg:x="235001" fg:w="1259"/><text x="74.8372%" y="447.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u64 (1,259 samples, 0.40%)</title><rect x="74.5872%" y="421" width="0.3996%" height="15" fill="rgb(245,141,16)" fg:x="235001" fg:w="1259"/><text x="74.8372%" y="431.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (1,259 samples, 0.40%)</title><rect x="74.5872%" y="405" width="0.3996%" height="15" fill="rgb(229,55,45)" fg:x="235001" fg:w="1259"/><text x="74.8372%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (984 samples, 0.31%)</title><rect x="74.6744%" y="389" width="0.3123%" height="15" fill="rgb(208,92,15)" fg:x="235276" fg:w="984"/><text x="74.9244%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (186 samples, 0.06%)</title><rect x="74.9867%" y="469" width="0.0590%" height="15" fill="rgb(234,185,47)" fg:x="236260" fg:w="186"/><text x="75.2367%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (186 samples, 0.06%)</title><rect x="74.9867%" y="453" width="0.0590%" height="15" fill="rgb(253,104,50)" fg:x="236260" fg:w="186"/><text x="75.2367%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="77.1342%" y="421" width="0.0114%" height="15" fill="rgb(205,70,7)" fg:x="243026" fg:w="36"/><text x="77.3842%" y="431.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (631 samples, 0.20%)</title><rect x="77.4383%" y="405" width="0.2003%" height="15" fill="rgb(240,178,43)" fg:x="243984" fg:w="631"/><text x="77.6883%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1,728 samples, 0.55%)</title><rect x="77.1456%" y="421" width="0.5485%" height="15" fill="rgb(214,112,2)" fg:x="243062" fg:w="1728"/><text x="77.3956%" y="431.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::remove_lowest_bit (175 samples, 0.06%)</title><rect x="77.6385%" y="405" width="0.0555%" height="15" fill="rgb(206,46,17)" fg:x="244615" fg:w="175"/><text x="77.8885%" y="415.50"></text></g><g><title>hashbrown::raw::inner::ProbeSeq::move_next (127 samples, 0.04%)</title><rect x="77.6941%" y="421" width="0.0403%" height="15" fill="rgb(225,220,16)" fg:x="244790" fg:w="127"/><text x="77.9441%" y="431.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (64 samples, 0.02%)</title><rect x="77.7373%" y="421" width="0.0203%" height="15" fill="rgb(238,65,40)" fg:x="244926" fg:w="64"/><text x="77.9873%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (64 samples, 0.02%)</title><rect x="77.7373%" y="405" width="0.0203%" height="15" fill="rgb(230,151,21)" fg:x="244926" fg:w="64"/><text x="77.9873%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (64 samples, 0.02%)</title><rect x="77.7373%" y="389" width="0.0203%" height="15" fill="rgb(218,58,49)" fg:x="244926" fg:w="64"/><text x="77.9873%" y="399.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (45 samples, 0.01%)</title><rect x="77.7576%" y="421" width="0.0143%" height="15" fill="rgb(219,179,14)" fg:x="244990" fg:w="45"/><text x="78.0076%" y="431.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (45 samples, 0.01%)</title><rect x="77.7576%" y="405" width="0.0143%" height="15" fill="rgb(223,72,1)" fg:x="244990" fg:w="45"/><text x="78.0076%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4,033 samples, 1.28%)</title><rect x="76.5699%" y="437" width="1.2800%" height="15" fill="rgb(238,126,10)" fg:x="241248" fg:w="4033"/><text x="76.8199%" y="447.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (246 samples, 0.08%)</title><rect x="77.7719%" y="421" width="0.0781%" height="15" fill="rgb(224,206,38)" fg:x="245035" fg:w="246"/><text x="78.0219%" y="431.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (246 samples, 0.08%)</title><rect x="77.7719%" y="405" width="0.0781%" height="15" fill="rgb(212,201,54)" fg:x="245035" fg:w="246"/><text x="78.0219%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (246 samples, 0.08%)</title><rect x="77.7719%" y="389" width="0.0781%" height="15" fill="rgb(218,154,48)" fg:x="245035" fg:w="246"/><text x="78.0219%" y="399.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (336 samples, 0.11%)</title><rect x="77.8499%" y="421" width="0.1066%" height="15" fill="rgb(232,93,24)" fg:x="245281" fg:w="336"/><text x="78.0999%" y="431.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (336 samples, 0.11%)</title><rect x="77.8499%" y="405" width="0.1066%" height="15" fill="rgb(245,30,21)" fg:x="245281" fg:w="336"/><text x="78.0999%" y="415.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (336 samples, 0.11%)</title><rect x="77.8499%" y="389" width="0.1066%" height="15" fill="rgb(242,148,29)" fg:x="245281" fg:w="336"/><text x="78.0999%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5,620 samples, 1.78%)</title><rect x="76.2309%" y="453" width="1.7837%" height="15" fill="rgb(244,153,54)" fg:x="240180" fg:w="5620"/><text x="76.4809%" y="463.50">&lt;..</text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket (519 samples, 0.16%)</title><rect x="77.8499%" y="437" width="0.1647%" height="15" fill="rgb(252,87,22)" fg:x="245281" fg:w="519"/><text x="78.0999%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::data_end (183 samples, 0.06%)</title><rect x="77.9566%" y="421" width="0.0581%" height="15" fill="rgb(210,51,29)" fg:x="245617" fg:w="183"/><text x="78.2066%" y="431.50"></text></g><g><title>hashbrown::raw::inner::h2 (448 samples, 0.14%)</title><rect x="78.0251%" y="405" width="0.1422%" height="15" fill="rgb(242,136,47)" fg:x="245833" fg:w="448"/><text x="78.2751%" y="415.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (1,102 samples, 0.35%)</title><rect x="78.1673%" y="405" width="0.3498%" height="15" fill="rgb(238,68,4)" fg:x="246281" fg:w="1102"/><text x="78.4173%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,102 samples, 0.35%)</title><rect x="78.1673%" y="389" width="0.3498%" height="15" fill="rgb(242,161,30)" fg:x="246281" fg:w="1102"/><text x="78.4173%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,102 samples, 0.35%)</title><rect x="78.1673%" y="373" width="0.3498%" height="15" fill="rgb(218,58,44)" fg:x="246281" fg:w="1102"/><text x="78.4173%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (835 samples, 0.27%)</title><rect x="78.5171%" y="389" width="0.2650%" height="15" fill="rgb(252,125,32)" fg:x="247383" fg:w="835"/><text x="78.7671%" y="399.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (1,438 samples, 0.46%)</title><rect x="78.5171%" y="405" width="0.4564%" height="15" fill="rgb(219,178,0)" fg:x="247383" fg:w="1438"/><text x="78.7671%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (603 samples, 0.19%)</title><rect x="78.7821%" y="389" width="0.1914%" height="15" fill="rgb(213,152,7)" fg:x="248218" fg:w="603"/><text x="79.0321%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (603 samples, 0.19%)</title><rect x="78.7821%" y="373" width="0.1914%" height="15" fill="rgb(249,109,34)" fg:x="248218" fg:w="603"/><text x="79.0321%" y="383.50"></text></g><g><title>core::core_arch::simd::i8x16::new (603 samples, 0.19%)</title><rect x="78.7821%" y="357" width="0.1914%" height="15" fill="rgb(232,96,21)" fg:x="248218" fg:w="603"/><text x="79.0321%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (3,210 samples, 1.02%)</title><rect x="78.0147%" y="453" width="1.0188%" height="15" fill="rgb(228,27,39)" fg:x="245800" fg:w="3210"/><text x="78.2647%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (3,210 samples, 1.02%)</title><rect x="78.0147%" y="437" width="1.0188%" height="15" fill="rgb(211,182,52)" fg:x="245800" fg:w="3210"/><text x="78.2647%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (3,210 samples, 1.02%)</title><rect x="78.0147%" y="421" width="1.0188%" height="15" fill="rgb(234,178,38)" fg:x="245800" fg:w="3210"/><text x="78.2647%" y="431.50"></text></g><g><title>pathfinding::directed::astar::astar (189 samples, 0.06%)</title><rect x="78.9735%" y="405" width="0.0600%" height="15" fill="rgb(221,111,3)" fg:x="248821" fg:w="189"/><text x="79.2235%" y="415.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (15,441 samples, 4.90%)</title><rect x="74.5872%" y="501" width="4.9008%" height="15" fill="rgb(228,175,21)" fg:x="235001" fg:w="15441"/><text x="74.8372%" y="511.50">indexm..</text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (14,182 samples, 4.50%)</title><rect x="74.9867%" y="485" width="4.5012%" height="15" fill="rgb(228,174,43)" fg:x="236260" fg:w="14182"/><text x="75.2367%" y="495.50">index..</text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (13,996 samples, 4.44%)</title><rect x="75.0458%" y="469" width="4.4422%" height="15" fill="rgb(211,191,0)" fg:x="236446" fg:w="13996"/><text x="75.2958%" y="479.50">hashb..</text></g><g><title>indexmap::map::core::equivalent::{{closure}} (1,432 samples, 0.45%)</title><rect x="79.0335%" y="453" width="0.4545%" height="15" fill="rgb(253,117,3)" fg:x="249010" fg:w="1432"/><text x="79.2835%" y="463.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (1,239 samples, 0.39%)</title><rect x="79.0947%" y="437" width="0.3932%" height="15" fill="rgb(241,127,19)" fg:x="249203" fg:w="1239"/><text x="79.3447%" y="447.50"></text></g><g><title>&lt;engine::engine::world::Position as core::cmp::PartialEq&gt;::eq (1,152 samples, 0.37%)</title><rect x="79.1224%" y="421" width="0.3656%" height="15" fill="rgb(218,103,12)" fg:x="249290" fg:w="1152"/><text x="79.3724%" y="431.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (82 samples, 0.03%)</title><rect x="79.4886%" y="485" width="0.0260%" height="15" fill="rgb(236,214,43)" fg:x="250444" fg:w="82"/><text x="79.7386%" y="495.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (234 samples, 0.07%)</title><rect x="79.4880%" y="501" width="0.0743%" height="15" fill="rgb(244,144,19)" fg:x="250442" fg:w="234"/><text x="79.7380%" y="511.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (150 samples, 0.05%)</title><rect x="79.5146%" y="485" width="0.0476%" height="15" fill="rgb(246,188,10)" fg:x="250526" fg:w="150"/><text x="79.7646%" y="495.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (150 samples, 0.05%)</title><rect x="79.5146%" y="469" width="0.0476%" height="15" fill="rgb(212,193,33)" fg:x="250526" fg:w="150"/><text x="79.7646%" y="479.50"></text></g><g><title>core::mem::swap (33 samples, 0.01%)</title><rect x="79.5756%" y="373" width="0.0105%" height="15" fill="rgb(241,51,29)" fg:x="250718" fg:w="33"/><text x="79.8256%" y="383.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (33 samples, 0.01%)</title><rect x="79.5756%" y="357" width="0.0105%" height="15" fill="rgb(211,58,19)" fg:x="250718" fg:w="33"/><text x="79.8256%" y="367.50"></text></g><g><title>core::ptr::swap_nonoverlapping (33 samples, 0.01%)</title><rect x="79.5756%" y="341" width="0.0105%" height="15" fill="rgb(229,111,26)" fg:x="250718" fg:w="33"/><text x="79.8256%" y="351.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (33 samples, 0.01%)</title><rect x="79.5756%" y="325" width="0.0105%" height="15" fill="rgb(213,115,40)" fg:x="250718" fg:w="33"/><text x="79.8256%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.01%)</title><rect x="79.5756%" y="309" width="0.0105%" height="15" fill="rgb(209,56,44)" fg:x="250718" fg:w="33"/><text x="79.8256%" y="319.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (70 samples, 0.02%)</title><rect x="79.5743%" y="389" width="0.0222%" height="15" fill="rgb(230,108,32)" fg:x="250714" fg:w="70"/><text x="79.8243%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (78 samples, 0.02%)</title><rect x="79.5727%" y="421" width="0.0248%" height="15" fill="rgb(216,165,31)" fg:x="250709" fg:w="78"/><text x="79.8227%" y="431.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (77 samples, 0.02%)</title><rect x="79.5730%" y="405" width="0.0244%" height="15" fill="rgb(218,122,21)" fg:x="250710" fg:w="77"/><text x="79.8230%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (37 samples, 0.01%)</title><rect x="79.5975%" y="421" width="0.0117%" height="15" fill="rgb(223,224,47)" fg:x="250787" fg:w="37"/><text x="79.8475%" y="431.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (125 samples, 0.04%)</title><rect x="79.5718%" y="437" width="0.0397%" height="15" fill="rgb(238,102,44)" fg:x="250706" fg:w="125"/><text x="79.8218%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (37 samples, 0.01%)</title><rect x="79.6130%" y="421" width="0.0117%" height="15" fill="rgb(236,46,40)" fg:x="250836" fg:w="37"/><text x="79.8630%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (37 samples, 0.01%)</title><rect x="79.6130%" y="405" width="0.0117%" height="15" fill="rgb(247,202,50)" fg:x="250836" fg:w="37"/><text x="79.8630%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (37 samples, 0.01%)</title><rect x="79.6130%" y="389" width="0.0117%" height="15" fill="rgb(209,99,20)" fg:x="250836" fg:w="37"/><text x="79.8630%" y="399.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (198 samples, 0.06%)</title><rect x="79.5623%" y="501" width="0.0628%" height="15" fill="rgb(252,27,34)" fg:x="250676" fg:w="198"/><text x="79.8123%" y="511.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (198 samples, 0.06%)</title><rect x="79.5623%" y="485" width="0.0628%" height="15" fill="rgb(215,206,23)" fg:x="250676" fg:w="198"/><text x="79.8123%" y="495.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (194 samples, 0.06%)</title><rect x="79.5635%" y="469" width="0.0616%" height="15" fill="rgb(212,135,36)" fg:x="250680" fg:w="194"/><text x="79.8135%" y="479.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (181 samples, 0.06%)</title><rect x="79.5677%" y="453" width="0.0574%" height="15" fill="rgb(240,189,1)" fg:x="250693" fg:w="181"/><text x="79.8177%" y="463.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (40 samples, 0.01%)</title><rect x="79.6124%" y="437" width="0.0127%" height="15" fill="rgb(242,56,20)" fg:x="250834" fg:w="40"/><text x="79.8624%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::len (362 samples, 0.11%)</title><rect x="79.6251%" y="469" width="0.1149%" height="15" fill="rgb(247,132,33)" fg:x="250874" fg:w="362"/><text x="79.8751%" y="479.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::index (406 samples, 0.13%)</title><rect x="79.6251%" y="501" width="0.1289%" height="15" fill="rgb(208,149,11)" fg:x="250874" fg:w="406"/><text x="79.8751%" y="511.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::len (406 samples, 0.13%)</title><rect x="79.6251%" y="485" width="0.1289%" height="15" fill="rgb(211,33,11)" fg:x="250874" fg:w="406"/><text x="79.8751%" y="495.50"></text></g><g><title>pathfinding::directed::astar::astar (44 samples, 0.01%)</title><rect x="79.7400%" y="469" width="0.0140%" height="15" fill="rgb(221,29,38)" fg:x="251236" fg:w="44"/><text x="79.9900%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (410 samples, 0.13%)</title><rect x="79.9714%" y="485" width="0.1301%" height="15" fill="rgb(206,182,49)" fg:x="251965" fg:w="410"/><text x="80.2214%" y="495.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (386 samples, 0.12%)</title><rect x="79.9790%" y="469" width="0.1225%" height="15" fill="rgb(216,140,1)" fg:x="251989" fg:w="386"/><text x="80.2290%" y="479.50"></text></g><g><title>pathfinding::directed::astar::astar (375 samples, 0.12%)</title><rect x="79.9825%" y="453" width="0.1190%" height="15" fill="rgb(232,57,40)" fg:x="252000" fg:w="375"/><text x="80.2325%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (322 samples, 0.10%)</title><rect x="80.4306%" y="469" width="0.1022%" height="15" fill="rgb(224,186,18)" fg:x="253412" fg:w="322"/><text x="80.6806%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (377 samples, 0.12%)</title><rect x="80.6731%" y="453" width="0.1197%" height="15" fill="rgb(215,121,11)" fg:x="254176" fg:w="377"/><text x="80.9231%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,262 samples, 0.40%)</title><rect x="80.5328%" y="469" width="0.4005%" height="15" fill="rgb(245,147,10)" fg:x="253734" fg:w="1262"/><text x="80.7828%" y="479.50"></text></g><g><title>core::ptr::write (443 samples, 0.14%)</title><rect x="80.7928%" y="453" width="0.1406%" height="15" fill="rgb(238,153,13)" fg:x="254553" fg:w="443"/><text x="81.0428%" y="463.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::write (45 samples, 0.01%)</title><rect x="80.9702%" y="453" width="0.0143%" height="15" fill="rgb(233,108,0)" fg:x="255112" fg:w="45"/><text x="81.2202%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (135 samples, 0.04%)</title><rect x="81.0680%" y="373" width="0.0428%" height="15" fill="rgb(212,157,17)" fg:x="255420" fg:w="135"/><text x="81.3180%" y="383.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::remove_lowest_bit (376 samples, 0.12%)</title><rect x="81.1194%" y="373" width="0.1193%" height="15" fill="rgb(225,213,38)" fg:x="255582" fg:w="376"/><text x="81.3694%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (580 samples, 0.18%)</title><rect x="81.0657%" y="405" width="0.1841%" height="15" fill="rgb(248,16,11)" fg:x="255413" fg:w="580"/><text x="81.3157%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (580 samples, 0.18%)</title><rect x="81.0657%" y="389" width="0.1841%" height="15" fill="rgb(241,33,4)" fg:x="255413" fg:w="580"/><text x="81.3157%" y="399.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::deallocate (327 samples, 0.10%)</title><rect x="81.2559%" y="341" width="0.1038%" height="15" fill="rgb(222,26,43)" fg:x="256012" fg:w="327"/><text x="81.5059%" y="351.50"></text></g><g><title>alloc::alloc::dealloc (327 samples, 0.10%)</title><rect x="81.2559%" y="325" width="0.1038%" height="15" fill="rgb(243,29,36)" fg:x="256012" fg:w="327"/><text x="81.5059%" y="335.50"></text></g><g><title>__rdl_dealloc (327 samples, 0.10%)</title><rect x="81.2559%" y="309" width="0.1038%" height="15" fill="rgb(241,9,27)" fg:x="256012" fg:w="327"/><text x="81.5059%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (327 samples, 0.10%)</title><rect x="81.2559%" y="293" width="0.1038%" height="15" fill="rgb(205,117,26)" fg:x="256012" fg:w="327"/><text x="81.5059%" y="303.50"></text></g><g><title>__GI___libc_free (327 samples, 0.10%)</title><rect x="81.2559%" y="277" width="0.1038%" height="15" fill="rgb(209,80,39)" fg:x="256012" fg:w="327"/><text x="81.5059%" y="287.50"></text></g><g><title>_int_free (281 samples, 0.09%)</title><rect x="81.2705%" y="261" width="0.0892%" height="15" fill="rgb(239,155,6)" fg:x="256058" fg:w="281"/><text x="81.5205%" y="271.50"></text></g><g><title>unlink_chunk.constprop.0 (34 samples, 0.01%)</title><rect x="81.3488%" y="245" width="0.0108%" height="15" fill="rgb(212,104,12)" fg:x="256305" fg:w="34"/><text x="81.5988%" y="255.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;,hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (340 samples, 0.11%)</title><rect x="81.2546%" y="405" width="0.1079%" height="15" fill="rgb(234,204,3)" fg:x="256008" fg:w="340"/><text x="81.5046%" y="415.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (340 samples, 0.11%)</title><rect x="81.2546%" y="389" width="0.1079%" height="15" fill="rgb(251,218,7)" fg:x="256008" fg:w="340"/><text x="81.5046%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (340 samples, 0.11%)</title><rect x="81.2546%" y="373" width="0.1079%" height="15" fill="rgb(221,81,32)" fg:x="256008" fg:w="340"/><text x="81.5046%" y="383.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::free_buckets (336 samples, 0.11%)</title><rect x="81.2559%" y="357" width="0.1066%" height="15" fill="rgb(214,152,26)" fg:x="256012" fg:w="336"/><text x="81.5059%" y="367.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ref (363 samples, 0.12%)</title><rect x="81.3625%" y="405" width="0.1152%" height="15" fill="rgb(223,22,3)" fg:x="256348" fg:w="363"/><text x="81.6125%" y="415.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ptr (363 samples, 0.12%)</title><rect x="81.3625%" y="389" width="0.1152%" height="15" fill="rgb(207,174,7)" fg:x="256348" fg:w="363"/><text x="81.6125%" y="399.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (363 samples, 0.12%)</title><rect x="81.3625%" y="373" width="0.1152%" height="15" fill="rgb(224,19,52)" fg:x="256348" fg:w="363"/><text x="81.6125%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (363 samples, 0.12%)</title><rect x="81.3625%" y="357" width="0.1152%" height="15" fill="rgb(228,24,14)" fg:x="256348" fg:w="363"/><text x="81.6125%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (623 samples, 0.20%)</title><rect x="81.4790%" y="373" width="0.1977%" height="15" fill="rgb(230,153,43)" fg:x="256715" fg:w="623"/><text x="81.7290%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (776 samples, 0.25%)</title><rect x="81.4790%" y="389" width="0.2463%" height="15" fill="rgb(231,106,12)" fg:x="256715" fg:w="776"/><text x="81.7290%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (153 samples, 0.05%)</title><rect x="81.6767%" y="373" width="0.0486%" height="15" fill="rgb(215,92,2)" fg:x="257338" fg:w="153"/><text x="81.9267%" y="383.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::copy_from_nonoverlapping (783 samples, 0.25%)</title><rect x="81.4777%" y="405" width="0.2485%" height="15" fill="rgb(249,143,25)" fg:x="256711" fg:w="783"/><text x="81.7277%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawIterRange&lt;T&gt;::new (34 samples, 0.01%)</title><rect x="81.7262%" y="389" width="0.0108%" height="15" fill="rgb(252,7,35)" fg:x="257494" fg:w="34"/><text x="81.9762%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter (38 samples, 0.01%)</title><rect x="81.7262%" y="405" width="0.0121%" height="15" fill="rgb(216,69,40)" fg:x="257494" fg:w="38"/><text x="81.9762%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (174 samples, 0.06%)</title><rect x="82.2718%" y="373" width="0.0552%" height="15" fill="rgb(240,36,33)" fg:x="259213" fg:w="174"/><text x="82.5218%" y="383.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (866 samples, 0.27%)</title><rect x="82.3270%" y="373" width="0.2749%" height="15" fill="rgb(231,128,14)" fg:x="259387" fg:w="866"/><text x="82.5770%" y="383.50"></text></g><g><title>hashbrown::raw::inner::is_full (2,795 samples, 0.89%)</title><rect x="82.6019%" y="373" width="0.8871%" height="15" fill="rgb(245,143,14)" fg:x="260253" fg:w="2795"/><text x="82.8519%" y="383.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (1,295 samples, 0.41%)</title><rect x="83.4890%" y="373" width="0.4110%" height="15" fill="rgb(222,130,28)" fg:x="263048" fg:w="1295"/><text x="83.7390%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1,295 samples, 0.41%)</title><rect x="83.4890%" y="357" width="0.4110%" height="15" fill="rgb(212,10,48)" fg:x="263048" fg:w="1295"/><text x="83.7390%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,295 samples, 0.41%)</title><rect x="83.4890%" y="341" width="0.4110%" height="15" fill="rgb(254,118,45)" fg:x="263048" fg:w="1295"/><text x="83.7390%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (7,547 samples, 2.40%)</title><rect x="81.7383%" y="389" width="2.3953%" height="15" fill="rgb(228,6,45)" fg:x="257532" fg:w="7547"/><text x="81.9883%" y="399.50">ha..</text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (736 samples, 0.23%)</title><rect x="83.9000%" y="373" width="0.2336%" height="15" fill="rgb(241,18,35)" fg:x="264343" fg:w="736"/><text x="84.1500%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (736 samples, 0.23%)</title><rect x="83.9000%" y="357" width="0.2336%" height="15" fill="rgb(227,214,53)" fg:x="264343" fg:w="736"/><text x="84.1500%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (1,013 samples, 0.32%)</title><rect x="84.1336%" y="373" width="0.3215%" height="15" fill="rgb(224,107,51)" fg:x="265079" fg:w="1013"/><text x="84.3836%" y="383.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (8,578 samples, 2.72%)</title><rect x="81.7383%" y="405" width="2.7226%" height="15" fill="rgb(248,60,28)" fg:x="257532" fg:w="8578"/><text x="81.9883%" y="415.50">ha..</text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (1,031 samples, 0.33%)</title><rect x="84.1336%" y="389" width="0.3272%" height="15" fill="rgb(249,101,23)" fg:x="265079" fg:w="1031"/><text x="84.3836%" y="399.50"></text></g><g><title>core::intrinsics::write_bytes (73 samples, 0.02%)</title><rect x="84.4634%" y="357" width="0.0232%" height="15" fill="rgb(228,51,19)" fg:x="266118" fg:w="73"/><text x="84.7134%" y="367.50"></text></g><g><title>__memset_avx2_unaligned_erms (71 samples, 0.02%)</title><rect x="84.4640%" y="341" width="0.0225%" height="15" fill="rgb(213,20,6)" fg:x="266120" fg:w="71"/><text x="84.7140%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (74 samples, 0.02%)</title><rect x="84.4634%" y="373" width="0.0235%" height="15" fill="rgb(212,124,10)" fg:x="266118" fg:w="74"/><text x="84.7134%" y="383.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (1,709 samples, 0.54%)</title><rect x="84.5063%" y="357" width="0.5424%" height="15" fill="rgb(248,3,40)" fg:x="266253" fg:w="1709"/><text x="84.7563%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (1,709 samples, 0.54%)</title><rect x="84.5063%" y="341" width="0.5424%" height="15" fill="rgb(223,178,23)" fg:x="266253" fg:w="1709"/><text x="84.7563%" y="351.50"></text></g><g><title>alloc::alloc::alloc (1,709 samples, 0.54%)</title><rect x="84.5063%" y="325" width="0.5424%" height="15" fill="rgb(240,132,45)" fg:x="266253" fg:w="1709"/><text x="84.7563%" y="335.50"></text></g><g><title>__rdl_alloc (1,709 samples, 0.54%)</title><rect x="84.5063%" y="309" width="0.5424%" height="15" fill="rgb(245,164,36)" fg:x="266253" fg:w="1709"/><text x="84.7563%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1,709 samples, 0.54%)</title><rect x="84.5063%" y="293" width="0.5424%" height="15" fill="rgb(231,188,53)" fg:x="266253" fg:w="1709"/><text x="84.7563%" y="303.50"></text></g><g><title>__GI___libc_malloc (1,706 samples, 0.54%)</title><rect x="84.5072%" y="277" width="0.5415%" height="15" fill="rgb(237,198,39)" fg:x="266256" fg:w="1706"/><text x="84.7572%" y="287.50"></text></g><g><title>_int_malloc (1,253 samples, 0.40%)</title><rect x="84.6510%" y="261" width="0.3977%" height="15" fill="rgb(223,120,35)" fg:x="266709" fg:w="1253"/><text x="84.9010%" y="271.50"></text></g><g><title>unlink_chunk.constprop.0 (156 samples, 0.05%)</title><rect x="84.9992%" y="245" width="0.0495%" height="15" fill="rgb(253,107,49)" fg:x="267806" fg:w="156"/><text x="85.2492%" y="255.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (1,767 samples, 0.56%)</title><rect x="84.4897%" y="373" width="0.5608%" height="15" fill="rgb(216,44,31)" fg:x="266201" fg:w="1767"/><text x="84.7397%" y="383.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (1,988 samples, 0.63%)</title><rect x="84.4609%" y="405" width="0.6310%" height="15" fill="rgb(253,87,21)" fg:x="266110" fg:w="1988"/><text x="84.7109%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (1,986 samples, 0.63%)</title><rect x="84.4615%" y="389" width="0.6303%" height="15" fill="rgb(226,18,2)" fg:x="266112" fg:w="1986"/><text x="84.7115%" y="399.50"></text></g><g><title>hashbrown::raw::inner::capacity_to_buckets (130 samples, 0.04%)</title><rect x="85.0506%" y="373" width="0.0413%" height="15" fill="rgb(216,8,46)" fg:x="267968" fg:w="130"/><text x="85.3006%" y="383.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (13,354 samples, 4.24%)</title><rect x="80.9984%" y="421" width="4.2384%" height="15" fill="rgb(226,140,39)" fg:x="255201" fg:w="13354"/><text x="81.2484%" y="431.50">hashb..</text></g><g><title>indexmap::map::core::get_hash::{{closure}} (457 samples, 0.15%)</title><rect x="85.0918%" y="405" width="0.1450%" height="15" fill="rgb(221,194,54)" fg:x="268098" fg:w="457"/><text x="85.3418%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (13,413 samples, 4.26%)</title><rect x="80.9845%" y="453" width="4.2572%" height="15" fill="rgb(213,92,11)" fg:x="255157" fg:w="13413"/><text x="81.2345%" y="463.50">hashb..</text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (13,407 samples, 4.26%)</title><rect x="80.9864%" y="437" width="4.2553%" height="15" fill="rgb(229,162,46)" fg:x="255163" fg:w="13407"/><text x="81.2364%" y="447.50">hashb..</text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (352 samples, 0.11%)</title><rect x="85.6612%" y="437" width="0.1117%" height="15" fill="rgb(214,111,36)" fg:x="269892" fg:w="352"/><text x="85.9112%" y="447.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (202 samples, 0.06%)</title><rect x="85.7730%" y="437" width="0.0641%" height="15" fill="rgb(207,6,21)" fg:x="270244" fg:w="202"/><text x="86.0230%" y="447.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (190 samples, 0.06%)</title><rect x="85.8447%" y="437" width="0.0603%" height="15" fill="rgb(213,127,38)" fg:x="270470" fg:w="190"/><text x="86.0947%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (190 samples, 0.06%)</title><rect x="85.8447%" y="421" width="0.0603%" height="15" fill="rgb(238,118,32)" fg:x="270470" fg:w="190"/><text x="86.0947%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (190 samples, 0.06%)</title><rect x="85.8447%" y="405" width="0.0603%" height="15" fill="rgb(240,139,39)" fg:x="270470" fg:w="190"/><text x="86.0947%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (2,708 samples, 0.86%)</title><rect x="85.2416%" y="453" width="0.8595%" height="15" fill="rgb(235,10,37)" fg:x="268570" fg:w="2708"/><text x="85.4916%" y="463.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (608 samples, 0.19%)</title><rect x="85.9082%" y="437" width="0.1930%" height="15" fill="rgb(249,171,38)" fg:x="270670" fg:w="608"/><text x="86.1582%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (608 samples, 0.19%)</title><rect x="85.9082%" y="421" width="0.1930%" height="15" fill="rgb(242,144,32)" fg:x="270670" fg:w="608"/><text x="86.1582%" y="431.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (1,586 samples, 0.50%)</title><rect x="86.1011%" y="453" width="0.5034%" height="15" fill="rgb(217,117,21)" fg:x="271278" fg:w="1586"/><text x="86.3511%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (415 samples, 0.13%)</title><rect x="86.4728%" y="437" width="0.1317%" height="15" fill="rgb(249,87,1)" fg:x="272449" fg:w="415"/><text x="86.7228%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (415 samples, 0.13%)</title><rect x="86.4728%" y="421" width="0.1317%" height="15" fill="rgb(248,196,48)" fg:x="272449" fg:w="415"/><text x="86.7228%" y="431.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (17,877 samples, 5.67%)</title><rect x="80.9334%" y="469" width="5.6740%" height="15" fill="rgb(251,206,33)" fg:x="254996" fg:w="17877"/><text x="81.1834%" y="479.50">hashbro..</text></g><g><title>__memmove_avx_unaligned_erms (1,238 samples, 0.39%)</title><rect x="86.8730%" y="261" width="0.3929%" height="15" fill="rgb(232,141,28)" fg:x="273710" fg:w="1238"/><text x="87.1230%" y="271.50"></text></g><g><title>_int_free (335 samples, 0.11%)</title><rect x="87.2660%" y="261" width="0.1063%" height="15" fill="rgb(209,167,14)" fg:x="274948" fg:w="335"/><text x="87.5160%" y="271.50"></text></g><g><title>unlink_chunk.constprop.0 (48 samples, 0.02%)</title><rect x="87.3571%" y="245" width="0.0152%" height="15" fill="rgb(225,11,50)" fg:x="275235" fg:w="48"/><text x="87.6071%" y="255.50"></text></g><g><title>malloc_consolidate (78 samples, 0.02%)</title><rect x="87.8319%" y="245" width="0.0248%" height="15" fill="rgb(209,50,20)" fg:x="276731" fg:w="78"/><text x="88.0819%" y="255.50"></text></g><g><title>_int_malloc (1,724 samples, 0.55%)</title><rect x="87.3723%" y="261" width="0.5472%" height="15" fill="rgb(212,17,46)" fg:x="275283" fg:w="1724"/><text x="87.6223%" y="271.50"></text></g><g><title>unlink_chunk.constprop.0 (198 samples, 0.06%)</title><rect x="87.8566%" y="245" width="0.0628%" height="15" fill="rgb(216,101,39)" fg:x="276809" fg:w="198"/><text x="88.1066%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4,081 samples, 1.30%)</title><rect x="86.6283%" y="373" width="1.2953%" height="15" fill="rgb(212,228,48)" fg:x="272939" fg:w="4081"/><text x="86.8783%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4,081 samples, 1.30%)</title><rect x="86.6283%" y="357" width="1.2953%" height="15" fill="rgb(250,6,50)" fg:x="272939" fg:w="4081"/><text x="86.8783%" y="367.50"></text></g><g><title>alloc::alloc::realloc (4,079 samples, 1.29%)</title><rect x="86.6290%" y="341" width="1.2946%" height="15" fill="rgb(250,160,48)" fg:x="272941" fg:w="4079"/><text x="86.8790%" y="351.50"></text></g><g><title>__rdl_realloc (4,079 samples, 1.29%)</title><rect x="86.6290%" y="325" width="1.2946%" height="15" fill="rgb(244,216,33)" fg:x="272941" fg:w="4079"/><text x="86.8790%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4,079 samples, 1.29%)</title><rect x="86.6290%" y="309" width="1.2946%" height="15" fill="rgb(207,157,5)" fg:x="272941" fg:w="4079"/><text x="86.8790%" y="319.50"></text></g><g><title>__GI___libc_realloc (4,073 samples, 1.29%)</title><rect x="86.6309%" y="293" width="1.2927%" height="15" fill="rgb(228,199,8)" fg:x="272947" fg:w="4073"/><text x="86.8809%" y="303.50"></text></g><g><title>_int_realloc (3,435 samples, 1.09%)</title><rect x="86.8334%" y="277" width="1.0902%" height="15" fill="rgb(227,80,20)" fg:x="273585" fg:w="3435"/><text x="87.0834%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (4,101 samples, 1.30%)</title><rect x="86.6248%" y="389" width="1.3016%" height="15" fill="rgb(222,9,33)" fg:x="272928" fg:w="4101"/><text x="86.8748%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (4,166 samples, 1.32%)</title><rect x="86.6096%" y="405" width="1.3223%" height="15" fill="rgb(239,44,28)" fg:x="272880" fg:w="4166"/><text x="86.8596%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (4,191 samples, 1.33%)</title><rect x="86.6096%" y="453" width="1.3302%" height="15" fill="rgb(249,187,43)" fg:x="272880" fg:w="4191"/><text x="86.8596%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (4,191 samples, 1.33%)</title><rect x="86.6096%" y="437" width="1.3302%" height="15" fill="rgb(216,141,28)" fg:x="272880" fg:w="4191"/><text x="86.8596%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (4,191 samples, 1.33%)</title><rect x="86.6096%" y="421" width="1.3302%" height="15" fill="rgb(230,154,53)" fg:x="272880" fg:w="4191"/><text x="86.8596%" y="431.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (25,824 samples, 8.20%)</title><rect x="79.7540%" y="501" width="8.1963%" height="15" fill="rgb(227,82,4)" fg:x="251280" fg:w="25824"/><text x="80.0040%" y="511.50">indexmap::m..</text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (24,729 samples, 7.85%)</title><rect x="80.1015%" y="485" width="7.8488%" height="15" fill="rgb(220,107,16)" fg:x="252375" fg:w="24729"/><text x="80.3515%" y="495.50">indexmap::m..</text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (4,225 samples, 1.34%)</title><rect x="86.6093%" y="469" width="1.3410%" height="15" fill="rgb(207,187,2)" fg:x="272879" fg:w="4225"/><text x="86.8593%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (261 samples, 0.08%)</title><rect x="87.9503%" y="469" width="0.0828%" height="15" fill="rgb(210,162,52)" fg:x="277104" fg:w="261"/><text x="88.2003%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (193 samples, 0.06%)</title><rect x="87.9718%" y="453" width="0.0613%" height="15" fill="rgb(217,216,49)" fg:x="277172" fg:w="193"/><text x="88.2218%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (267 samples, 0.08%)</title><rect x="87.9503%" y="485" width="0.0847%" height="15" fill="rgb(218,146,49)" fg:x="277104" fg:w="267"/><text x="88.2003%" y="495.50"></text></g><g><title>indexmap::map::core::raw::OccupiedEntry&lt;K,V&gt;::get (275 samples, 0.09%)</title><rect x="87.9503%" y="501" width="0.0873%" height="15" fill="rgb(216,55,40)" fg:x="277104" fg:w="275"/><text x="88.2003%" y="511.50"></text></g><g><title>pathfinding::directed::astar::astar (365 samples, 0.12%)</title><rect x="88.0375%" y="501" width="0.1158%" height="15" fill="rgb(208,196,21)" fg:x="277379" fg:w="365"/><text x="88.2875%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (554 samples, 0.18%)</title><rect x="88.1940%" y="357" width="0.1758%" height="15" fill="rgb(242,117,42)" fg:x="277872" fg:w="554"/><text x="88.4440%" y="367.50"></text></g><g><title>pathfinding::directed::reverse_path::{{closure}}::{{closure}} (554 samples, 0.18%)</title><rect x="88.1940%" y="341" width="0.1758%" height="15" fill="rgb(210,11,23)" fg:x="277872" fg:w="554"/><text x="88.4440%" y="351.50"></text></g><g><title>&lt;itertools::sources::Unfold&lt;St,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (762 samples, 0.24%)</title><rect x="88.1804%" y="389" width="0.2419%" height="15" fill="rgb(217,110,2)" fg:x="277829" fg:w="762"/><text x="88.4304%" y="399.50"></text></g><g><title>pathfinding::directed::reverse_path::{{closure}} (762 samples, 0.24%)</title><rect x="88.1804%" y="373" width="0.2419%" height="15" fill="rgb(229,77,54)" fg:x="277829" fg:w="762"/><text x="88.4304%" y="383.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (165 samples, 0.05%)</title><rect x="88.3698%" y="357" width="0.0524%" height="15" fill="rgb(218,53,16)" fg:x="278426" fg:w="165"/><text x="88.6198%" y="367.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (165 samples, 0.05%)</title><rect x="88.3698%" y="341" width="0.0524%" height="15" fill="rgb(215,38,13)" fg:x="278426" fg:w="165"/><text x="88.6198%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (164 samples, 0.05%)</title><rect x="88.3702%" y="325" width="0.0521%" height="15" fill="rgb(235,42,18)" fg:x="278427" fg:w="164"/><text x="88.6202%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (89 samples, 0.03%)</title><rect x="88.4222%" y="389" width="0.0282%" height="15" fill="rgb(219,66,54)" fg:x="278591" fg:w="89"/><text x="88.6722%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (90 samples, 0.03%)</title><rect x="88.6346%" y="197" width="0.0286%" height="15" fill="rgb(222,205,4)" fg:x="279260" fg:w="90"/><text x="88.8846%" y="207.50"></text></g><g><title>_int_free (218 samples, 0.07%)</title><rect x="88.6631%" y="197" width="0.0692%" height="15" fill="rgb(227,213,46)" fg:x="279350" fg:w="218"/><text x="88.9131%" y="207.50"></text></g><g><title>malloc_consolidate (172 samples, 0.05%)</title><rect x="88.9910%" y="181" width="0.0546%" height="15" fill="rgb(250,145,42)" fg:x="280383" fg:w="172"/><text x="89.2410%" y="191.50"></text></g><g><title>_int_malloc (1,238 samples, 0.39%)</title><rect x="88.7323%" y="197" width="0.3929%" height="15" fill="rgb(219,15,2)" fg:x="279568" fg:w="1238"/><text x="88.9823%" y="207.50"></text></g><g><title>unlink_chunk.constprop.0 (251 samples, 0.08%)</title><rect x="89.0456%" y="181" width="0.0797%" height="15" fill="rgb(231,181,52)" fg:x="280555" fg:w="251"/><text x="89.2956%" y="191.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,049 samples, 0.65%)</title><rect x="88.4762%" y="309" width="0.6503%" height="15" fill="rgb(235,1,42)" fg:x="278761" fg:w="2049"/><text x="88.7262%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,049 samples, 0.65%)</title><rect x="88.4762%" y="293" width="0.6503%" height="15" fill="rgb(249,88,27)" fg:x="278761" fg:w="2049"/><text x="88.7262%" y="303.50"></text></g><g><title>alloc::alloc::realloc (2,049 samples, 0.65%)</title><rect x="88.4762%" y="277" width="0.6503%" height="15" fill="rgb(235,145,16)" fg:x="278761" fg:w="2049"/><text x="88.7262%" y="287.50"></text></g><g><title>__rdl_realloc (2,049 samples, 0.65%)</title><rect x="88.4762%" y="261" width="0.6503%" height="15" fill="rgb(237,114,19)" fg:x="278761" fg:w="2049"/><text x="88.7262%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2,049 samples, 0.65%)</title><rect x="88.4762%" y="245" width="0.6503%" height="15" fill="rgb(238,51,50)" fg:x="278761" fg:w="2049"/><text x="88.7262%" y="255.50"></text></g><g><title>__GI___libc_realloc (2,043 samples, 0.65%)</title><rect x="88.4781%" y="229" width="0.6484%" height="15" fill="rgb(205,194,25)" fg:x="278767" fg:w="2043"/><text x="88.7281%" y="239.50"></text></g><g><title>_int_realloc (1,675 samples, 0.53%)</title><rect x="88.5949%" y="213" width="0.5316%" height="15" fill="rgb(215,203,17)" fg:x="279135" fg:w="1675"/><text x="88.8449%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,074 samples, 0.66%)</title><rect x="88.4701%" y="325" width="0.6583%" height="15" fill="rgb(233,112,49)" fg:x="278742" fg:w="2074"/><text x="88.7201%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,141 samples, 0.68%)</title><rect x="88.4555%" y="341" width="0.6795%" height="15" fill="rgb(241,130,26)" fg:x="278696" fg:w="2141"/><text x="88.7055%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,144 samples, 0.68%)</title><rect x="88.4552%" y="389" width="0.6805%" height="15" fill="rgb(252,223,19)" fg:x="278695" fg:w="2144"/><text x="88.7052%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,144 samples, 0.68%)</title><rect x="88.4552%" y="373" width="0.6805%" height="15" fill="rgb(211,95,25)" fg:x="278695" fg:w="2144"/><text x="88.7052%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,143 samples, 0.68%)</title><rect x="88.4555%" y="357" width="0.6802%" height="15" fill="rgb(251,182,27)" fg:x="278696" fg:w="2143"/><text x="88.7055%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3,061 samples, 0.97%)</title><rect x="88.1747%" y="405" width="0.9715%" height="15" fill="rgb(238,24,4)" fg:x="277811" fg:w="3061"/><text x="88.4247%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (82 samples, 0.03%)</title><rect x="89.1567%" y="325" width="0.0260%" height="15" fill="rgb(224,220,25)" fg:x="280905" fg:w="82"/><text x="89.4067%" y="335.50"></text></g><g><title>core::ptr::read (64 samples, 0.02%)</title><rect x="89.1624%" y="309" width="0.0203%" height="15" fill="rgb(239,133,26)" fg:x="280923" fg:w="64"/><text x="89.4124%" y="319.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (67 samples, 0.02%)</title><rect x="89.1827%" y="325" width="0.0213%" height="15" fill="rgb(211,94,48)" fg:x="280987" fg:w="67"/><text x="89.4327%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (67 samples, 0.02%)</title><rect x="89.1827%" y="309" width="0.0213%" height="15" fill="rgb(239,87,6)" fg:x="280987" fg:w="67"/><text x="89.4327%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (67 samples, 0.02%)</title><rect x="89.1827%" y="293" width="0.0213%" height="15" fill="rgb(227,62,0)" fg:x="280987" fg:w="67"/><text x="89.4327%" y="303.50"></text></g><g><title>core::ptr::write (67 samples, 0.02%)</title><rect x="89.1827%" y="277" width="0.0213%" height="15" fill="rgb(211,226,4)" fg:x="280987" fg:w="67"/><text x="89.4327%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;engine::engine::world::Position&gt;&gt; (145 samples, 0.05%)</title><rect x="89.2040%" y="325" width="0.0460%" height="15" fill="rgb(253,38,52)" fg:x="281054" fg:w="145"/><text x="89.4540%" y="335.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 0.05%)</title><rect x="89.2040%" y="309" width="0.0460%" height="15" fill="rgb(229,126,40)" fg:x="281054" fg:w="145"/><text x="89.4540%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (145 samples, 0.05%)</title><rect x="89.2040%" y="293" width="0.0460%" height="15" fill="rgb(229,165,44)" fg:x="281054" fg:w="145"/><text x="89.4540%" y="303.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 0.05%)</title><rect x="89.2040%" y="277" width="0.0460%" height="15" fill="rgb(247,95,47)" fg:x="281054" fg:w="145"/><text x="89.4540%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;engine::engine::world::Position&gt;&gt; (145 samples, 0.05%)</title><rect x="89.2040%" y="261" width="0.0460%" height="15" fill="rgb(216,140,30)" fg:x="281054" fg:w="145"/><text x="89.4540%" y="271.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (145 samples, 0.05%)</title><rect x="89.2040%" y="245" width="0.0460%" height="15" fill="rgb(246,214,8)" fg:x="281054" fg:w="145"/><text x="89.4540%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (145 samples, 0.05%)</title><rect x="89.2040%" y="229" width="0.0460%" height="15" fill="rgb(227,224,15)" fg:x="281054" fg:w="145"/><text x="89.4540%" y="239.50"></text></g><g><title>alloc::alloc::dealloc (145 samples, 0.05%)</title><rect x="89.2040%" y="213" width="0.0460%" height="15" fill="rgb(233,175,4)" fg:x="281054" fg:w="145"/><text x="89.4540%" y="223.50"></text></g><g><title>__rdl_dealloc (145 samples, 0.05%)</title><rect x="89.2040%" y="197" width="0.0460%" height="15" fill="rgb(221,66,45)" fg:x="281054" fg:w="145"/><text x="89.4540%" y="207.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (145 samples, 0.05%)</title><rect x="89.2040%" y="181" width="0.0460%" height="15" fill="rgb(221,178,18)" fg:x="281054" fg:w="145"/><text x="89.4540%" y="191.50"></text></g><g><title>__GI___libc_free (145 samples, 0.05%)</title><rect x="89.2040%" y="165" width="0.0460%" height="15" fill="rgb(213,81,29)" fg:x="281054" fg:w="145"/><text x="89.4540%" y="175.50"></text></g><g><title>_int_free (138 samples, 0.04%)</title><rect x="89.2062%" y="149" width="0.0438%" height="15" fill="rgb(220,89,49)" fg:x="281061" fg:w="138"/><text x="89.4562%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (328 samples, 0.10%)</title><rect x="89.1465%" y="405" width="0.1041%" height="15" fill="rgb(227,60,33)" fg:x="280873" fg:w="328"/><text x="89.3965%" y="415.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (327 samples, 0.10%)</title><rect x="89.1468%" y="389" width="0.1038%" height="15" fill="rgb(205,113,12)" fg:x="280874" fg:w="327"/><text x="89.3968%" y="399.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (327 samples, 0.10%)</title><rect x="89.1468%" y="373" width="0.1038%" height="15" fill="rgb(211,32,1)" fg:x="280874" fg:w="327"/><text x="89.3968%" y="383.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (327 samples, 0.10%)</title><rect x="89.1468%" y="357" width="0.1038%" height="15" fill="rgb(246,2,12)" fg:x="280874" fg:w="327"/><text x="89.3968%" y="367.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (327 samples, 0.10%)</title><rect x="89.1468%" y="341" width="0.1038%" height="15" fill="rgb(243,37,27)" fg:x="280874" fg:w="327"/><text x="89.3968%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3,397 samples, 1.08%)</title><rect x="88.1731%" y="421" width="1.0782%" height="15" fill="rgb(248,211,31)" fg:x="277806" fg:w="3397"/><text x="88.4231%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (371 samples, 0.12%)</title><rect x="89.2611%" y="357" width="0.1178%" height="15" fill="rgb(242,146,47)" fg:x="281234" fg:w="371"/><text x="89.5111%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (371 samples, 0.12%)</title><rect x="89.2611%" y="341" width="0.1178%" height="15" fill="rgb(206,70,20)" fg:x="281234" fg:w="371"/><text x="89.5111%" y="351.50"></text></g><g><title>alloc::alloc::alloc (369 samples, 0.12%)</title><rect x="89.2617%" y="325" width="0.1171%" height="15" fill="rgb(215,10,51)" fg:x="281236" fg:w="369"/><text x="89.5117%" y="335.50"></text></g><g><title>__rdl_alloc (369 samples, 0.12%)</title><rect x="89.2617%" y="309" width="0.1171%" height="15" fill="rgb(243,178,53)" fg:x="281236" fg:w="369"/><text x="89.5117%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (369 samples, 0.12%)</title><rect x="89.2617%" y="293" width="0.1171%" height="15" fill="rgb(233,221,20)" fg:x="281236" fg:w="369"/><text x="89.5117%" y="303.50"></text></g><g><title>__GI___libc_malloc (369 samples, 0.12%)</title><rect x="89.2617%" y="277" width="0.1171%" height="15" fill="rgb(218,95,35)" fg:x="281236" fg:w="369"/><text x="89.5117%" y="287.50"></text></g><g><title>_int_malloc (194 samples, 0.06%)</title><rect x="89.3173%" y="261" width="0.0616%" height="15" fill="rgb(229,13,5)" fg:x="281411" fg:w="194"/><text x="89.5673%" y="271.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (153,701 samples, 48.78%)</title><rect x="40.5971%" y="597" width="48.7833%" height="15" fill="rgb(252,164,30)" fg:x="127909" fg:w="153701"/><text x="40.8471%" y="607.50">&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (153,701 samples, 48.78%)</title><rect x="40.5971%" y="581" width="48.7833%" height="15" fill="rgb(232,68,36)" fg:x="127909" fg:w="153701"/><text x="40.8471%" y="591.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut</text></g><g><title>core::ops::function::Fn::call (153,701 samples, 48.78%)</title><rect x="40.5971%" y="565" width="48.7833%" height="15" fill="rgb(219,59,54)" fg:x="127909" fg:w="153701"/><text x="40.8471%" y="575.50">core::ops::function::Fn::call</text></g><g><title>engine::engine::actor::pathfinding::plan_path (139,117 samples, 44.15%)</title><rect x="45.2260%" y="549" width="44.1545%" height="15" fill="rgb(250,92,33)" fg:x="142493" fg:w="139117"/><text x="45.4760%" y="559.50">engine::engine::actor::pathfinding::plan_path</text></g><g><title>engine::engine::actor::pathfinding::get_path (138,792 samples, 44.05%)</title><rect x="45.3291%" y="533" width="44.0513%" height="15" fill="rgb(229,162,54)" fg:x="142818" fg:w="138792"/><text x="45.5791%" y="543.50">engine::engine::actor::pathfinding::get_path</text></g><g><title>pathfinding::directed::astar::astar (136,879 samples, 43.44%)</title><rect x="45.9363%" y="517" width="43.4441%" height="15" fill="rgb(244,114,52)" fg:x="144731" fg:w="136879"/><text x="46.1863%" y="527.50">pathfinding::directed::astar::astar</text></g><g><title>pathfinding::directed::reverse_path (3,866 samples, 1.23%)</title><rect x="88.1534%" y="501" width="1.2270%" height="15" fill="rgb(212,211,43)" fg:x="277744" fg:w="3866"/><text x="88.4034%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3,866 samples, 1.23%)</title><rect x="88.1534%" y="485" width="1.2270%" height="15" fill="rgb(226,147,8)" fg:x="277744" fg:w="3866"/><text x="88.4034%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3,866 samples, 1.23%)</title><rect x="88.1534%" y="469" width="1.2270%" height="15" fill="rgb(226,23,13)" fg:x="277744" fg:w="3866"/><text x="88.4034%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3,854 samples, 1.22%)</title><rect x="88.1572%" y="453" width="1.2232%" height="15" fill="rgb(240,63,4)" fg:x="277756" fg:w="3854"/><text x="88.4072%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3,836 samples, 1.22%)</title><rect x="88.1629%" y="437" width="1.2175%" height="15" fill="rgb(221,1,32)" fg:x="277774" fg:w="3836"/><text x="88.4129%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (379 samples, 0.12%)</title><rect x="89.2601%" y="421" width="0.1203%" height="15" fill="rgb(242,117,10)" fg:x="281231" fg:w="379"/><text x="89.5101%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (379 samples, 0.12%)</title><rect x="89.2601%" y="405" width="0.1203%" height="15" fill="rgb(249,172,44)" fg:x="281231" fg:w="379"/><text x="89.5101%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (377 samples, 0.12%)</title><rect x="89.2608%" y="389" width="0.1197%" height="15" fill="rgb(244,46,45)" fg:x="281233" fg:w="377"/><text x="89.5108%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (376 samples, 0.12%)</title><rect x="89.2611%" y="373" width="0.1193%" height="15" fill="rgb(206,43,17)" fg:x="281234" fg:w="376"/><text x="89.5111%" y="383.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (52 samples, 0.02%)</title><rect x="89.3874%" y="533" width="0.0165%" height="15" fill="rgb(239,218,39)" fg:x="281632" fg:w="52"/><text x="89.6374%" y="543.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.02%)</title><rect x="89.3877%" y="517" width="0.0162%" height="15" fill="rgb(208,169,54)" fg:x="281633" fg:w="51"/><text x="89.6377%" y="527.50"></text></g><g><title>core::intrinsics::copy (109 samples, 0.03%)</title><rect x="89.4118%" y="517" width="0.0346%" height="15" fill="rgb(247,25,42)" fg:x="281709" fg:w="109"/><text x="89.6618%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (107 samples, 0.03%)</title><rect x="89.4125%" y="501" width="0.0340%" height="15" fill="rgb(226,23,31)" fg:x="281711" fg:w="107"/><text x="89.6625%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (175 samples, 0.06%)</title><rect x="89.4112%" y="533" width="0.0555%" height="15" fill="rgb(247,16,28)" fg:x="281707" fg:w="175"/><text x="89.6612%" y="543.50"></text></g><g><title>core::ptr::read (64 samples, 0.02%)</title><rect x="89.4464%" y="517" width="0.0203%" height="15" fill="rgb(231,147,38)" fg:x="281818" fg:w="64"/><text x="89.6964%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (189 samples, 0.06%)</title><rect x="89.4668%" y="485" width="0.0600%" height="15" fill="rgb(253,81,48)" fg:x="281882" fg:w="189"/><text x="89.7168%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (189 samples, 0.06%)</title><rect x="89.4668%" y="469" width="0.0600%" height="15" fill="rgb(249,222,43)" fg:x="281882" fg:w="189"/><text x="89.7168%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (189 samples, 0.06%)</title><rect x="89.4668%" y="453" width="0.0600%" height="15" fill="rgb(221,3,27)" fg:x="281882" fg:w="189"/><text x="89.7168%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (189 samples, 0.06%)</title><rect x="89.4668%" y="437" width="0.0600%" height="15" fill="rgb(228,180,5)" fg:x="281882" fg:w="189"/><text x="89.7168%" y="447.50"></text></g><g><title>alloc::alloc::alloc (189 samples, 0.06%)</title><rect x="89.4668%" y="421" width="0.0600%" height="15" fill="rgb(227,131,42)" fg:x="281882" fg:w="189"/><text x="89.7168%" y="431.50"></text></g><g><title>__rdl_alloc (189 samples, 0.06%)</title><rect x="89.4668%" y="405" width="0.0600%" height="15" fill="rgb(212,3,39)" fg:x="281882" fg:w="189"/><text x="89.7168%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (189 samples, 0.06%)</title><rect x="89.4668%" y="389" width="0.0600%" height="15" fill="rgb(226,45,5)" fg:x="281882" fg:w="189"/><text x="89.7168%" y="399.50"></text></g><g><title>__GI___libc_malloc (188 samples, 0.06%)</title><rect x="89.4671%" y="373" width="0.0597%" height="15" fill="rgb(215,167,45)" fg:x="281883" fg:w="188"/><text x="89.7171%" y="383.50"></text></g><g><title>_int_malloc (97 samples, 0.03%)</title><rect x="89.4960%" y="357" width="0.0308%" height="15" fill="rgb(250,218,53)" fg:x="281974" fg:w="97"/><text x="89.7460%" y="367.50"></text></g><g><title>unlink_chunk.constprop.0 (37 samples, 0.01%)</title><rect x="89.5150%" y="341" width="0.0117%" height="15" fill="rgb(207,140,0)" fg:x="282034" fg:w="37"/><text x="89.7650%" y="351.50"></text></g><g><title>bevy_ecs::system::commands::Commands::add (194 samples, 0.06%)</title><rect x="89.4668%" y="517" width="0.0616%" height="15" fill="rgb(238,133,51)" fg:x="281882" fg:w="194"/><text x="89.7168%" y="527.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push (194 samples, 0.06%)</title><rect x="89.4668%" y="501" width="0.0616%" height="15" fill="rgb(218,203,53)" fg:x="281882" fg:w="194"/><text x="89.7168%" y="511.50"></text></g><g><title>bevy_ecs::system::commands::EntityCommands::remove (196 samples, 0.06%)</title><rect x="89.4668%" y="533" width="0.0622%" height="15" fill="rgb(226,184,25)" fg:x="281882" fg:w="196"/><text x="89.7168%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (480 samples, 0.15%)</title><rect x="89.3804%" y="597" width="0.1523%" height="15" fill="rgb(231,121,21)" fg:x="281610" fg:w="480"/><text x="89.6304%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (480 samples, 0.15%)</title><rect x="89.3804%" y="581" width="0.1523%" height="15" fill="rgb(251,14,34)" fg:x="281610" fg:w="480"/><text x="89.6304%" y="591.50"></text></g><g><title>core::ops::function::Fn::call (480 samples, 0.15%)</title><rect x="89.3804%" y="565" width="0.1523%" height="15" fill="rgb(249,193,11)" fg:x="281610" fg:w="480"/><text x="89.6304%" y="575.50"></text></g><g><title>engine::engine::actor::move_actor (470 samples, 0.15%)</title><rect x="89.3836%" y="549" width="0.1492%" height="15" fill="rgb(220,172,37)" fg:x="281620" fg:w="470"/><text x="89.6336%" y="559.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.01%)</title><rect x="89.7565%" y="533" width="0.0117%" height="15" fill="rgb(231,229,43)" fg:x="282795" fg:w="37"/><text x="90.0065%" y="543.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (91 samples, 0.03%)</title><rect x="89.7905%" y="341" width="0.0289%" height="15" fill="rgb(250,161,5)" fg:x="282902" fg:w="91"/><text x="90.0405%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (105 samples, 0.03%)</title><rect x="89.7886%" y="389" width="0.0333%" height="15" fill="rgb(218,225,18)" fg:x="282896" fg:w="105"/><text x="90.0386%" y="399.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (105 samples, 0.03%)</title><rect x="89.7886%" y="373" width="0.0333%" height="15" fill="rgb(245,45,42)" fg:x="282896" fg:w="105"/><text x="90.0386%" y="383.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (105 samples, 0.03%)</title><rect x="89.7886%" y="357" width="0.0333%" height="15" fill="rgb(211,115,1)" fg:x="282896" fg:w="105"/><text x="90.0386%" y="367.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (108 samples, 0.03%)</title><rect x="89.7886%" y="437" width="0.0343%" height="15" fill="rgb(248,133,52)" fg:x="282896" fg:w="108"/><text x="90.0386%" y="447.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (108 samples, 0.03%)</title><rect x="89.7886%" y="421" width="0.0343%" height="15" fill="rgb(238,100,21)" fg:x="282896" fg:w="108"/><text x="90.0386%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (108 samples, 0.03%)</title><rect x="89.7886%" y="405" width="0.0343%" height="15" fill="rgb(247,144,11)" fg:x="282896" fg:w="108"/><text x="90.0386%" y="415.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (113 samples, 0.04%)</title><rect x="89.7876%" y="453" width="0.0359%" height="15" fill="rgb(206,164,16)" fg:x="282893" fg:w="113"/><text x="90.0376%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (132 samples, 0.04%)</title><rect x="89.7838%" y="469" width="0.0419%" height="15" fill="rgb(222,34,3)" fg:x="282881" fg:w="132"/><text x="90.0338%" y="479.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (196 samples, 0.06%)</title><rect x="89.7749%" y="533" width="0.0622%" height="15" fill="rgb(248,82,4)" fg:x="282853" fg:w="196"/><text x="90.0249%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (171 samples, 0.05%)</title><rect x="89.7829%" y="517" width="0.0543%" height="15" fill="rgb(228,81,46)" fg:x="282878" fg:w="171"/><text x="90.0329%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (170 samples, 0.05%)</title><rect x="89.7832%" y="501" width="0.0540%" height="15" fill="rgb(227,67,47)" fg:x="282879" fg:w="170"/><text x="90.0332%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (168 samples, 0.05%)</title><rect x="89.7838%" y="485" width="0.0533%" height="15" fill="rgb(215,93,53)" fg:x="282881" fg:w="168"/><text x="90.0338%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (36 samples, 0.01%)</title><rect x="89.8257%" y="469" width="0.0114%" height="15" fill="rgb(248,194,39)" fg:x="283013" fg:w="36"/><text x="90.0757%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (33 samples, 0.01%)</title><rect x="89.8267%" y="453" width="0.0105%" height="15" fill="rgb(215,5,19)" fg:x="283016" fg:w="33"/><text x="90.0767%" y="463.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (33 samples, 0.01%)</title><rect x="89.9073%" y="501" width="0.0105%" height="15" fill="rgb(226,215,51)" fg:x="283270" fg:w="33"/><text x="90.1573%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.01%)</title><rect x="89.9178%" y="437" width="0.0136%" height="15" fill="rgb(225,56,26)" fg:x="283303" fg:w="43"/><text x="90.1678%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (43 samples, 0.01%)</title><rect x="89.9178%" y="421" width="0.0136%" height="15" fill="rgb(222,75,29)" fg:x="283303" fg:w="43"/><text x="90.1678%" y="431.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="89.9178%" y="501" width="0.0143%" height="15" fill="rgb(236,139,6)" fg:x="283303" fg:w="45"/><text x="90.1678%" y="511.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="89.9178%" y="485" width="0.0143%" height="15" fill="rgb(223,137,36)" fg:x="283303" fg:w="45"/><text x="90.1678%" y="495.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="89.9178%" y="469" width="0.0143%" height="15" fill="rgb(226,99,2)" fg:x="283303" fg:w="45"/><text x="90.1678%" y="479.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (45 samples, 0.01%)</title><rect x="89.9178%" y="453" width="0.0143%" height="15" fill="rgb(206,133,23)" fg:x="283303" fg:w="45"/><text x="90.1678%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (176 samples, 0.06%)</title><rect x="89.9352%" y="485" width="0.0559%" height="15" fill="rgb(243,173,15)" fg:x="283358" fg:w="176"/><text x="90.1852%" y="495.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (176 samples, 0.06%)</title><rect x="89.9352%" y="469" width="0.0559%" height="15" fill="rgb(228,69,28)" fg:x="283358" fg:w="176"/><text x="90.1852%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (60 samples, 0.02%)</title><rect x="90.0003%" y="357" width="0.0190%" height="15" fill="rgb(212,51,22)" fg:x="283563" fg:w="60"/><text x="90.2503%" y="367.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (60 samples, 0.02%)</title><rect x="90.0003%" y="341" width="0.0190%" height="15" fill="rgb(227,113,0)" fg:x="283563" fg:w="60"/><text x="90.2503%" y="351.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (60 samples, 0.02%)</title><rect x="90.0003%" y="325" width="0.0190%" height="15" fill="rgb(252,84,27)" fg:x="283563" fg:w="60"/><text x="90.2503%" y="335.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (63 samples, 0.02%)</title><rect x="90.0003%" y="405" width="0.0200%" height="15" fill="rgb(223,145,39)" fg:x="283563" fg:w="63"/><text x="90.2503%" y="415.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (63 samples, 0.02%)</title><rect x="90.0003%" y="389" width="0.0200%" height="15" fill="rgb(239,219,30)" fg:x="283563" fg:w="63"/><text x="90.2503%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (63 samples, 0.02%)</title><rect x="90.0003%" y="373" width="0.0200%" height="15" fill="rgb(224,196,39)" fg:x="283563" fg:w="63"/><text x="90.2503%" y="383.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (66 samples, 0.02%)</title><rect x="90.0003%" y="421" width="0.0209%" height="15" fill="rgb(205,35,43)" fg:x="283563" fg:w="66"/><text x="90.2503%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (96 samples, 0.03%)</title><rect x="89.9917%" y="437" width="0.0305%" height="15" fill="rgb(228,201,21)" fg:x="283536" fg:w="96"/><text x="90.2417%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (34 samples, 0.01%)</title><rect x="90.0355%" y="405" width="0.0108%" height="15" fill="rgb(237,118,16)" fg:x="283674" fg:w="34"/><text x="90.2855%" y="415.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (34 samples, 0.01%)</title><rect x="90.0355%" y="389" width="0.0108%" height="15" fill="rgb(241,17,19)" fg:x="283674" fg:w="34"/><text x="90.2855%" y="399.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (390 samples, 0.12%)</title><rect x="89.9352%" y="501" width="0.1238%" height="15" fill="rgb(214,10,25)" fg:x="283358" fg:w="390"/><text x="90.1852%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (214 samples, 0.07%)</title><rect x="89.9911%" y="485" width="0.0679%" height="15" fill="rgb(238,37,29)" fg:x="283534" fg:w="214"/><text x="90.2411%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (212 samples, 0.07%)</title><rect x="89.9917%" y="469" width="0.0673%" height="15" fill="rgb(253,83,25)" fg:x="283536" fg:w="212"/><text x="90.2417%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (212 samples, 0.07%)</title><rect x="89.9917%" y="453" width="0.0673%" height="15" fill="rgb(234,192,12)" fg:x="283536" fg:w="212"/><text x="90.2417%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (116 samples, 0.04%)</title><rect x="90.0222%" y="437" width="0.0368%" height="15" fill="rgb(241,216,45)" fg:x="283632" fg:w="116"/><text x="90.2722%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (112 samples, 0.04%)</title><rect x="90.0235%" y="421" width="0.0355%" height="15" fill="rgb(242,22,33)" fg:x="283636" fg:w="112"/><text x="90.2735%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (166 samples, 0.05%)</title><rect x="90.0590%" y="485" width="0.0527%" height="15" fill="rgb(231,105,49)" fg:x="283748" fg:w="166"/><text x="90.3090%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (155 samples, 0.05%)</title><rect x="90.0625%" y="469" width="0.0492%" height="15" fill="rgb(218,204,15)" fg:x="283759" fg:w="155"/><text x="90.3125%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (155 samples, 0.05%)</title><rect x="90.0625%" y="453" width="0.0492%" height="15" fill="rgb(235,138,41)" fg:x="283759" fg:w="155"/><text x="90.3125%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (154 samples, 0.05%)</title><rect x="90.0628%" y="437" width="0.0489%" height="15" fill="rgb(246,0,9)" fg:x="283760" fg:w="154"/><text x="90.3128%" y="447.50"></text></g><g><title>bevy_render::draw::Draw::set_bind_group (172 samples, 0.05%)</title><rect x="90.0590%" y="501" width="0.0546%" height="15" fill="rgb(210,74,4)" fg:x="283748" fg:w="172"/><text x="90.3090%" y="511.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (55 samples, 0.02%)</title><rect x="90.2406%" y="309" width="0.0175%" height="15" fill="rgb(250,60,41)" fg:x="284320" fg:w="55"/><text x="90.4906%" y="319.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (75 samples, 0.02%)</title><rect x="90.2352%" y="341" width="0.0238%" height="15" fill="rgb(220,115,12)" fg:x="284303" fg:w="75"/><text x="90.4852%" y="351.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (75 samples, 0.02%)</title><rect x="90.2352%" y="325" width="0.0238%" height="15" fill="rgb(237,100,13)" fg:x="284303" fg:w="75"/><text x="90.4852%" y="335.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (82 samples, 0.03%)</title><rect x="90.2352%" y="389" width="0.0260%" height="15" fill="rgb(213,55,26)" fg:x="284303" fg:w="82"/><text x="90.4852%" y="399.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (82 samples, 0.03%)</title><rect x="90.2352%" y="373" width="0.0260%" height="15" fill="rgb(216,17,4)" fg:x="284303" fg:w="82"/><text x="90.4852%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (82 samples, 0.03%)</title><rect x="90.2352%" y="357" width="0.0260%" height="15" fill="rgb(220,153,47)" fg:x="284303" fg:w="82"/><text x="90.4852%" y="367.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (430 samples, 0.14%)</title><rect x="90.1269%" y="405" width="0.1365%" height="15" fill="rgb(215,131,9)" fg:x="283962" fg:w="430"/><text x="90.3769%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (490 samples, 0.16%)</title><rect x="90.1174%" y="437" width="0.1555%" height="15" fill="rgb(233,46,42)" fg:x="283932" fg:w="490"/><text x="90.3674%" y="447.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (460 samples, 0.15%)</title><rect x="90.1269%" y="421" width="0.1460%" height="15" fill="rgb(226,86,7)" fg:x="283962" fg:w="460"/><text x="90.3769%" y="431.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (658 samples, 0.21%)</title><rect x="90.2970%" y="373" width="0.2088%" height="15" fill="rgb(239,226,21)" fg:x="284498" fg:w="658"/><text x="90.5470%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (702 samples, 0.22%)</title><rect x="90.2970%" y="405" width="0.2228%" height="15" fill="rgb(244,137,22)" fg:x="284498" fg:w="702"/><text x="90.5470%" y="415.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (702 samples, 0.22%)</title><rect x="90.2970%" y="389" width="0.2228%" height="15" fill="rgb(211,139,35)" fg:x="284498" fg:w="702"/><text x="90.5470%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (44 samples, 0.01%)</title><rect x="90.5059%" y="373" width="0.0140%" height="15" fill="rgb(214,62,50)" fg:x="285156" fg:w="44"/><text x="90.7559%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (92 samples, 0.03%)</title><rect x="90.5322%" y="357" width="0.0292%" height="15" fill="rgb(212,113,44)" fg:x="285239" fg:w="92"/><text x="90.7822%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (92 samples, 0.03%)</title><rect x="90.5322%" y="341" width="0.0292%" height="15" fill="rgb(226,150,43)" fg:x="285239" fg:w="92"/><text x="90.7822%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (92 samples, 0.03%)</title><rect x="90.5322%" y="325" width="0.0292%" height="15" fill="rgb(250,71,37)" fg:x="285239" fg:w="92"/><text x="90.7822%" y="335.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_mut_untyped (1,418 samples, 0.45%)</title><rect x="90.1142%" y="501" width="0.4501%" height="15" fill="rgb(219,76,19)" fg:x="283922" fg:w="1418"/><text x="90.3642%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1,418 samples, 0.45%)</title><rect x="90.1142%" y="485" width="0.4501%" height="15" fill="rgb(250,39,11)" fg:x="283922" fg:w="1418"/><text x="90.3642%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1,418 samples, 0.45%)</title><rect x="90.1142%" y="469" width="0.4501%" height="15" fill="rgb(230,64,31)" fg:x="283922" fg:w="1418"/><text x="90.3642%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1,408 samples, 0.45%)</title><rect x="90.1174%" y="453" width="0.4469%" height="15" fill="rgb(208,222,23)" fg:x="283932" fg:w="1408"/><text x="90.3674%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (918 samples, 0.29%)</title><rect x="90.2729%" y="437" width="0.2914%" height="15" fill="rgb(227,125,18)" fg:x="284422" fg:w="918"/><text x="90.5229%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (908 samples, 0.29%)</title><rect x="90.2761%" y="421" width="0.2882%" height="15" fill="rgb(234,210,9)" fg:x="284432" fg:w="908"/><text x="90.5261%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (117 samples, 0.04%)</title><rect x="90.5272%" y="405" width="0.0371%" height="15" fill="rgb(217,127,24)" fg:x="285223" fg:w="117"/><text x="90.7772%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (117 samples, 0.04%)</title><rect x="90.5272%" y="389" width="0.0371%" height="15" fill="rgb(239,141,48)" fg:x="285223" fg:w="117"/><text x="90.7772%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (117 samples, 0.04%)</title><rect x="90.5272%" y="373" width="0.0371%" height="15" fill="rgb(227,109,8)" fg:x="285223" fg:w="117"/><text x="90.7772%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (440 samples, 0.14%)</title><rect x="90.5687%" y="389" width="0.1397%" height="15" fill="rgb(235,184,23)" fg:x="285354" fg:w="440"/><text x="90.8187%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (440 samples, 0.14%)</title><rect x="90.5687%" y="373" width="0.1397%" height="15" fill="rgb(227,226,48)" fg:x="285354" fg:w="440"/><text x="90.8187%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (469 samples, 0.15%)</title><rect x="90.5643%" y="405" width="0.1489%" height="15" fill="rgb(206,150,11)" fg:x="285340" fg:w="469"/><text x="90.8143%" y="415.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::iter_assets (500 samples, 0.16%)</title><rect x="90.5643%" y="501" width="0.1587%" height="15" fill="rgb(254,2,33)" fg:x="285340" fg:w="500"/><text x="90.8143%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (500 samples, 0.16%)</title><rect x="90.5643%" y="485" width="0.1587%" height="15" fill="rgb(243,160,20)" fg:x="285340" fg:w="500"/><text x="90.8143%" y="495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (500 samples, 0.16%)</title><rect x="90.5643%" y="469" width="0.1587%" height="15" fill="rgb(218,208,30)" fg:x="285340" fg:w="500"/><text x="90.8143%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (500 samples, 0.16%)</title><rect x="90.5643%" y="453" width="0.1587%" height="15" fill="rgb(224,120,49)" fg:x="285340" fg:w="500"/><text x="90.8143%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (500 samples, 0.16%)</title><rect x="90.5643%" y="437" width="0.1587%" height="15" fill="rgb(246,12,2)" fg:x="285340" fg:w="500"/><text x="90.8143%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (500 samples, 0.16%)</title><rect x="90.5643%" y="421" width="0.1587%" height="15" fill="rgb(236,117,3)" fg:x="285340" fg:w="500"/><text x="90.8143%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (187 samples, 0.06%)</title><rect x="90.8509%" y="341" width="0.0594%" height="15" fill="rgb(216,128,52)" fg:x="286243" fg:w="187"/><text x="91.1009%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (187 samples, 0.06%)</title><rect x="90.8509%" y="325" width="0.0594%" height="15" fill="rgb(246,145,19)" fg:x="286243" fg:w="187"/><text x="91.1009%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (187 samples, 0.06%)</title><rect x="90.8509%" y="309" width="0.0594%" height="15" fill="rgb(222,11,46)" fg:x="286243" fg:w="187"/><text x="91.1009%" y="319.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get_bind_group (547 samples, 0.17%)</title><rect x="90.7376%" y="485" width="0.1736%" height="15" fill="rgb(245,82,36)" fg:x="285886" fg:w="547"/><text x="90.9876%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (547 samples, 0.17%)</title><rect x="90.7376%" y="469" width="0.1736%" height="15" fill="rgb(250,73,51)" fg:x="285886" fg:w="547"/><text x="90.9876%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (547 samples, 0.17%)</title><rect x="90.7376%" y="453" width="0.1736%" height="15" fill="rgb(221,189,23)" fg:x="285886" fg:w="547"/><text x="90.9876%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (547 samples, 0.17%)</title><rect x="90.7376%" y="437" width="0.1736%" height="15" fill="rgb(210,33,7)" fg:x="285886" fg:w="547"/><text x="90.9876%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (535 samples, 0.17%)</title><rect x="90.7414%" y="421" width="0.1698%" height="15" fill="rgb(210,107,22)" fg:x="285898" fg:w="535"/><text x="90.9914%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (534 samples, 0.17%)</title><rect x="90.7417%" y="405" width="0.1695%" height="15" fill="rgb(222,116,37)" fg:x="285899" fg:w="534"/><text x="90.9917%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (192 samples, 0.06%)</title><rect x="90.8503%" y="389" width="0.0609%" height="15" fill="rgb(254,17,48)" fg:x="286241" fg:w="192"/><text x="91.1003%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (192 samples, 0.06%)</title><rect x="90.8503%" y="373" width="0.0609%" height="15" fill="rgb(224,36,32)" fg:x="286241" fg:w="192"/><text x="91.1003%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (192 samples, 0.06%)</title><rect x="90.8503%" y="357" width="0.0609%" height="15" fill="rgb(232,90,46)" fg:x="286241" fg:w="192"/><text x="91.1003%" y="367.50"></text></g><g><title>ahash::operations::folded_multiply (52 samples, 0.02%)</title><rect x="90.9223%" y="389" width="0.0165%" height="15" fill="rgb(241,66,40)" fg:x="286468" fg:w="52"/><text x="91.1723%" y="399.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (39 samples, 0.01%)</title><rect x="90.9264%" y="373" width="0.0124%" height="15" fill="rgb(249,184,29)" fg:x="286481" fg:w="39"/><text x="91.1764%" y="383.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (76 samples, 0.02%)</title><rect x="90.9223%" y="405" width="0.0241%" height="15" fill="rgb(231,181,1)" fg:x="286468" fg:w="76"/><text x="91.1723%" y="415.50"></text></g><g><title>&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId as core::hash::Hash&gt;::hash (68 samples, 0.02%)</title><rect x="90.9464%" y="405" width="0.0216%" height="15" fill="rgb(224,94,2)" fg:x="286544" fg:w="68"/><text x="91.1964%" y="415.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (59 samples, 0.02%)</title><rect x="90.9493%" y="389" width="0.0187%" height="15" fill="rgb(229,170,15)" fg:x="286553" fg:w="59"/><text x="91.1993%" y="399.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (59 samples, 0.02%)</title><rect x="90.9493%" y="373" width="0.0187%" height="15" fill="rgb(240,127,35)" fg:x="286553" fg:w="59"/><text x="91.1993%" y="383.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (59 samples, 0.02%)</title><rect x="90.9493%" y="357" width="0.0187%" height="15" fill="rgb(248,196,34)" fg:x="286553" fg:w="59"/><text x="91.1993%" y="367.50"></text></g><g><title>ahash::operations::folded_multiply (40 samples, 0.01%)</title><rect x="90.9553%" y="341" width="0.0127%" height="15" fill="rgb(236,137,7)" fg:x="286572" fg:w="40"/><text x="91.2053%" y="351.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (38 samples, 0.01%)</title><rect x="90.9559%" y="325" width="0.0121%" height="15" fill="rgb(235,127,16)" fg:x="286574" fg:w="38"/><text x="91.2059%" y="335.50"></text></g><g><title>hashbrown::map::make_hash (348 samples, 0.11%)</title><rect x="90.9223%" y="421" width="0.1105%" height="15" fill="rgb(250,192,54)" fg:x="286468" fg:w="348"/><text x="91.1723%" y="431.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (204 samples, 0.06%)</title><rect x="90.9680%" y="405" width="0.0647%" height="15" fill="rgb(218,98,20)" fg:x="286612" fg:w="204"/><text x="91.2180%" y="415.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (38 samples, 0.01%)</title><rect x="91.0328%" y="405" width="0.0121%" height="15" fill="rgb(230,176,47)" fg:x="286816" fg:w="38"/><text x="91.2828%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (81 samples, 0.03%)</title><rect x="91.1207%" y="373" width="0.0257%" height="15" fill="rgb(244,2,33)" fg:x="287093" fg:w="81"/><text x="91.3707%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.02%)</title><rect x="91.1302%" y="357" width="0.0162%" height="15" fill="rgb(231,100,17)" fg:x="287123" fg:w="51"/><text x="91.3802%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (122 samples, 0.04%)</title><rect x="91.1207%" y="389" width="0.0387%" height="15" fill="rgb(245,23,12)" fg:x="287093" fg:w="122"/><text x="91.3707%" y="399.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (41 samples, 0.01%)</title><rect x="91.1464%" y="373" width="0.0130%" height="15" fill="rgb(249,55,22)" fg:x="287174" fg:w="41"/><text x="91.3964%" y="383.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (41 samples, 0.01%)</title><rect x="91.1464%" y="357" width="0.0130%" height="15" fill="rgb(207,134,9)" fg:x="287174" fg:w="41"/><text x="91.3964%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (386 samples, 0.12%)</title><rect x="91.1708%" y="341" width="0.1225%" height="15" fill="rgb(218,134,0)" fg:x="287251" fg:w="386"/><text x="91.4208%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (386 samples, 0.12%)</title><rect x="91.1708%" y="325" width="0.1225%" height="15" fill="rgb(213,212,33)" fg:x="287251" fg:w="386"/><text x="91.4208%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (386 samples, 0.12%)</title><rect x="91.1708%" y="309" width="0.1225%" height="15" fill="rgb(252,106,18)" fg:x="287251" fg:w="386"/><text x="91.4208%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,190 samples, 0.38%)</title><rect x="90.9223%" y="469" width="0.3777%" height="15" fill="rgb(208,126,42)" fg:x="286468" fg:w="1190"/><text x="91.1723%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,190 samples, 0.38%)</title><rect x="90.9223%" y="453" width="0.3777%" height="15" fill="rgb(246,175,29)" fg:x="286468" fg:w="1190"/><text x="91.1723%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,190 samples, 0.38%)</title><rect x="90.9223%" y="437" width="0.3777%" height="15" fill="rgb(215,13,50)" fg:x="286468" fg:w="1190"/><text x="91.1723%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (842 samples, 0.27%)</title><rect x="91.0328%" y="421" width="0.2672%" height="15" fill="rgb(216,172,15)" fg:x="286816" fg:w="842"/><text x="91.2828%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (804 samples, 0.26%)</title><rect x="91.0448%" y="405" width="0.2552%" height="15" fill="rgb(212,103,13)" fg:x="286854" fg:w="804"/><text x="91.2948%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (443 samples, 0.14%)</title><rect x="91.1594%" y="389" width="0.1406%" height="15" fill="rgb(231,171,36)" fg:x="287215" fg:w="443"/><text x="91.4094%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (443 samples, 0.14%)</title><rect x="91.1594%" y="373" width="0.1406%" height="15" fill="rgb(250,123,20)" fg:x="287215" fg:w="443"/><text x="91.4094%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (443 samples, 0.14%)</title><rect x="91.1594%" y="357" width="0.1406%" height="15" fill="rgb(212,53,50)" fg:x="287215" fg:w="443"/><text x="91.4094%" y="367.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (1,860 samples, 0.59%)</title><rect x="90.7230%" y="501" width="0.5903%" height="15" fill="rgb(243,54,12)" fg:x="285840" fg:w="1860"/><text x="90.9730%" y="511.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group_status (1,267 samples, 0.40%)</title><rect x="90.9112%" y="485" width="0.4021%" height="15" fill="rgb(234,101,34)" fg:x="286433" fg:w="1267"/><text x="91.1612%" y="495.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (42 samples, 0.01%)</title><rect x="91.3000%" y="469" width="0.0133%" height="15" fill="rgb(254,67,22)" fg:x="287658" fg:w="42"/><text x="91.5500%" y="479.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (42 samples, 0.01%)</title><rect x="91.3000%" y="453" width="0.0133%" height="15" fill="rgb(250,35,47)" fg:x="287658" fg:w="42"/><text x="91.5500%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (42 samples, 0.01%)</title><rect x="91.3000%" y="437" width="0.0133%" height="15" fill="rgb(226,126,38)" fg:x="287658" fg:w="42"/><text x="91.5500%" y="447.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (42 samples, 0.01%)</title><rect x="91.3000%" y="421" width="0.0133%" height="15" fill="rgb(216,138,53)" fg:x="287658" fg:w="42"/><text x="91.5500%" y="431.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (4,645 samples, 1.47%)</title><rect x="89.8416%" y="533" width="1.4743%" height="15" fill="rgb(246,199,43)" fg:x="283063" fg:w="4645"/><text x="90.0916%" y="543.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (4,635 samples, 1.47%)</title><rect x="89.8448%" y="517" width="1.4711%" height="15" fill="rgb(232,125,11)" fg:x="283073" fg:w="4635"/><text x="90.0948%" y="527.50"></text></g><g><title>bevy_render::draw::Draw::set_pipeline (152 samples, 0.05%)</title><rect x="91.3222%" y="517" width="0.0482%" height="15" fill="rgb(218,219,45)" fg:x="287728" fg:w="152"/><text x="91.5722%" y="527.50"></text></g><g><title>bevy_render::draw::Draw::render_command (149 samples, 0.05%)</title><rect x="91.3232%" y="501" width="0.0473%" height="15" fill="rgb(216,102,54)" fg:x="287731" fg:w="149"/><text x="91.5732%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (74 samples, 0.02%)</title><rect x="91.3470%" y="485" width="0.0235%" height="15" fill="rgb(250,228,7)" fg:x="287806" fg:w="74"/><text x="91.5970%" y="495.50"></text></g><g><title>core::ptr::write (61 samples, 0.02%)</title><rect x="91.3511%" y="469" width="0.0194%" height="15" fill="rgb(226,125,25)" fg:x="287819" fg:w="61"/><text x="91.6011%" y="479.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::ShaderSpecialization as core::cmp::PartialEq&gt;::eq (83 samples, 0.03%)</title><rect x="91.3787%" y="405" width="0.0263%" height="15" fill="rgb(224,165,27)" fg:x="287906" fg:w="83"/><text x="91.6287%" y="415.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (83 samples, 0.03%)</title><rect x="91.3787%" y="389" width="0.0263%" height="15" fill="rgb(233,86,3)" fg:x="287906" fg:w="83"/><text x="91.6287%" y="399.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (283 samples, 0.09%)</title><rect x="91.4362%" y="229" width="0.0898%" height="15" fill="rgb(228,116,20)" fg:x="288087" fg:w="283"/><text x="91.6862%" y="239.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (409 samples, 0.13%)</title><rect x="91.4362%" y="245" width="0.1298%" height="15" fill="rgb(209,192,17)" fg:x="288087" fg:w="409"/><text x="91.6862%" y="255.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (125 samples, 0.04%)</title><rect x="91.5263%" y="229" width="0.0397%" height="15" fill="rgb(224,88,34)" fg:x="288371" fg:w="125"/><text x="91.7763%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (125 samples, 0.04%)</title><rect x="91.5263%" y="213" width="0.0397%" height="15" fill="rgb(233,38,6)" fg:x="288371" fg:w="125"/><text x="91.7763%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (125 samples, 0.04%)</title><rect x="91.5263%" y="197" width="0.0397%" height="15" fill="rgb(212,59,30)" fg:x="288371" fg:w="125"/><text x="91.7763%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (125 samples, 0.04%)</title><rect x="91.5263%" y="181" width="0.0397%" height="15" fill="rgb(213,80,3)" fg:x="288371" fg:w="125"/><text x="91.7763%" y="191.50"></text></g><g><title>__memcmp_avx2_movbe (71 samples, 0.02%)</title><rect x="91.5434%" y="165" width="0.0225%" height="15" fill="rgb(251,178,7)" fg:x="288425" fg:w="71"/><text x="91.7934%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (506 samples, 0.16%)</title><rect x="91.4146%" y="325" width="0.1606%" height="15" fill="rgb(213,154,26)" fg:x="288019" fg:w="506"/><text x="91.6646%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (484 samples, 0.15%)</title><rect x="91.4216%" y="309" width="0.1536%" height="15" fill="rgb(238,165,49)" fg:x="288041" fg:w="484"/><text x="91.6716%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (484 samples, 0.15%)</title><rect x="91.4216%" y="293" width="0.1536%" height="15" fill="rgb(248,91,46)" fg:x="288041" fg:w="484"/><text x="91.6716%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (484 samples, 0.15%)</title><rect x="91.4216%" y="277" width="0.1536%" height="15" fill="rgb(244,21,52)" fg:x="288041" fg:w="484"/><text x="91.6716%" y="287.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute as core::cmp::PartialEq&gt;::eq (484 samples, 0.15%)</title><rect x="91.4216%" y="261" width="0.1536%" height="15" fill="rgb(247,122,20)" fg:x="288041" fg:w="484"/><text x="91.6716%" y="271.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout as core::cmp::PartialEq&gt;::eq (535 samples, 0.17%)</title><rect x="91.4057%" y="405" width="0.1698%" height="15" fill="rgb(218,27,9)" fg:x="287991" fg:w="535"/><text x="91.6557%" y="415.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (519 samples, 0.16%)</title><rect x="91.4108%" y="389" width="0.1647%" height="15" fill="rgb(246,7,6)" fg:x="288007" fg:w="519"/><text x="91.6608%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (514 samples, 0.16%)</title><rect x="91.4124%" y="373" width="0.1631%" height="15" fill="rgb(227,135,54)" fg:x="288012" fg:w="514"/><text x="91.6624%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (511 samples, 0.16%)</title><rect x="91.4133%" y="357" width="0.1622%" height="15" fill="rgb(247,14,11)" fg:x="288015" fg:w="511"/><text x="91.6633%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (507 samples, 0.16%)</title><rect x="91.4146%" y="341" width="0.1609%" height="15" fill="rgb(206,149,34)" fg:x="288019" fg:w="507"/><text x="91.6646%" y="351.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (39 samples, 0.01%)</title><rect x="91.6298%" y="197" width="0.0124%" height="15" fill="rgb(227,228,4)" fg:x="288697" fg:w="39"/><text x="91.8798%" y="207.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (58 samples, 0.02%)</title><rect x="91.6275%" y="213" width="0.0184%" height="15" fill="rgb(238,218,28)" fg:x="288690" fg:w="58"/><text x="91.8775%" y="223.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (33 samples, 0.01%)</title><rect x="91.6460%" y="213" width="0.0105%" height="15" fill="rgb(252,86,40)" fg:x="288748" fg:w="33"/><text x="91.8960%" y="223.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (33 samples, 0.01%)</title><rect x="91.6460%" y="197" width="0.0105%" height="15" fill="rgb(251,225,11)" fg:x="288748" fg:w="33"/><text x="91.8960%" y="207.50"></text></g><g><title>hashbrown::map::make_hash (143 samples, 0.05%)</title><rect x="91.6142%" y="261" width="0.0454%" height="15" fill="rgb(206,46,49)" fg:x="288648" fg:w="143"/><text x="91.8642%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (114 samples, 0.04%)</title><rect x="91.6234%" y="245" width="0.0362%" height="15" fill="rgb(245,128,24)" fg:x="288677" fg:w="114"/><text x="91.8734%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (103 samples, 0.03%)</title><rect x="91.6269%" y="229" width="0.0327%" height="15" fill="rgb(219,177,34)" fg:x="288688" fg:w="103"/><text x="91.8769%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (58 samples, 0.02%)</title><rect x="91.6739%" y="197" width="0.0184%" height="15" fill="rgb(218,60,48)" fg:x="288836" fg:w="58"/><text x="91.9239%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (58 samples, 0.02%)</title><rect x="91.6739%" y="181" width="0.0184%" height="15" fill="rgb(221,11,5)" fg:x="288836" fg:w="58"/><text x="91.9239%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (55 samples, 0.02%)</title><rect x="91.6748%" y="165" width="0.0175%" height="15" fill="rgb(220,148,13)" fg:x="288839" fg:w="55"/><text x="91.9248%" y="175.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (723 samples, 0.23%)</title><rect x="91.6923%" y="149" width="0.2295%" height="15" fill="rgb(210,16,3)" fg:x="288894" fg:w="723"/><text x="91.9423%" y="159.50"></text></g><g><title>__memcmp_avx2_movbe (501 samples, 0.16%)</title><rect x="91.7628%" y="133" width="0.1590%" height="15" fill="rgb(236,80,2)" fg:x="289116" fg:w="501"/><text x="92.0128%" y="143.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (788 samples, 0.25%)</title><rect x="91.6739%" y="229" width="0.2501%" height="15" fill="rgb(239,129,19)" fg:x="288836" fg:w="788"/><text x="91.9239%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (788 samples, 0.25%)</title><rect x="91.6739%" y="213" width="0.2501%" height="15" fill="rgb(220,106,35)" fg:x="288836" fg:w="788"/><text x="91.9239%" y="223.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (730 samples, 0.23%)</title><rect x="91.6923%" y="197" width="0.2317%" height="15" fill="rgb(252,139,45)" fg:x="288894" fg:w="730"/><text x="91.9423%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (730 samples, 0.23%)</title><rect x="91.6923%" y="181" width="0.2317%" height="15" fill="rgb(229,8,36)" fg:x="288894" fg:w="730"/><text x="91.9423%" y="191.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (730 samples, 0.23%)</title><rect x="91.6923%" y="165" width="0.2317%" height="15" fill="rgb(230,126,33)" fg:x="288894" fg:w="730"/><text x="91.9423%" y="175.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (594 samples, 0.19%)</title><rect x="91.9291%" y="181" width="0.1885%" height="15" fill="rgb(239,140,21)" fg:x="289640" fg:w="594"/><text x="92.1791%" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (594 samples, 0.19%)</title><rect x="91.9291%" y="165" width="0.1885%" height="15" fill="rgb(254,104,9)" fg:x="289640" fg:w="594"/><text x="92.1791%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (594 samples, 0.19%)</title><rect x="91.9291%" y="149" width="0.1885%" height="15" fill="rgb(239,52,14)" fg:x="289640" fg:w="594"/><text x="92.1791%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1,639 samples, 0.52%)</title><rect x="91.6006%" y="389" width="0.5202%" height="15" fill="rgb(208,227,44)" fg:x="288605" fg:w="1639"/><text x="91.8506%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,638 samples, 0.52%)</title><rect x="91.6009%" y="373" width="0.5199%" height="15" fill="rgb(246,18,19)" fg:x="288606" fg:w="1638"/><text x="91.8509%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1,602 samples, 0.51%)</title><rect x="91.6123%" y="357" width="0.5085%" height="15" fill="rgb(235,228,25)" fg:x="288642" fg:w="1602"/><text x="91.8623%" y="367.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (1,602 samples, 0.51%)</title><rect x="91.6123%" y="341" width="0.5085%" height="15" fill="rgb(240,156,20)" fg:x="288642" fg:w="1602"/><text x="91.8623%" y="351.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1,602 samples, 0.51%)</title><rect x="91.6123%" y="325" width="0.5085%" height="15" fill="rgb(224,8,20)" fg:x="288642" fg:w="1602"/><text x="91.8623%" y="335.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1,602 samples, 0.51%)</title><rect x="91.6123%" y="309" width="0.5085%" height="15" fill="rgb(214,12,52)" fg:x="288642" fg:w="1602"/><text x="91.8623%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,596 samples, 0.51%)</title><rect x="91.6142%" y="293" width="0.5066%" height="15" fill="rgb(211,220,47)" fg:x="288648" fg:w="1596"/><text x="91.8642%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,596 samples, 0.51%)</title><rect x="91.6142%" y="277" width="0.5066%" height="15" fill="rgb(250,173,5)" fg:x="288648" fg:w="1596"/><text x="91.8642%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,453 samples, 0.46%)</title><rect x="91.6596%" y="261" width="0.4612%" height="15" fill="rgb(250,125,52)" fg:x="288791" fg:w="1453"/><text x="91.9096%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,453 samples, 0.46%)</title><rect x="91.6596%" y="245" width="0.4612%" height="15" fill="rgb(209,133,18)" fg:x="288791" fg:w="1453"/><text x="91.9096%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (617 samples, 0.20%)</title><rect x="91.9249%" y="229" width="0.1958%" height="15" fill="rgb(216,173,22)" fg:x="289627" fg:w="617"/><text x="92.1749%" y="239.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (617 samples, 0.20%)</title><rect x="91.9249%" y="213" width="0.1958%" height="15" fill="rgb(205,3,22)" fg:x="289627" fg:w="617"/><text x="92.1749%" y="223.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (617 samples, 0.20%)</title><rect x="91.9249%" y="197" width="0.1958%" height="15" fill="rgb(248,22,20)" fg:x="289627" fg:w="617"/><text x="92.1749%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2,366 samples, 0.75%)</title><rect x="91.3730%" y="469" width="0.7509%" height="15" fill="rgb(233,6,29)" fg:x="287888" fg:w="2366"/><text x="91.6230%" y="479.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}}::{{closure}} (2,362 samples, 0.75%)</title><rect x="91.3743%" y="453" width="0.7497%" height="15" fill="rgb(240,22,54)" fg:x="287892" fg:w="2362"/><text x="91.6243%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2,362 samples, 0.75%)</title><rect x="91.3743%" y="437" width="0.7497%" height="15" fill="rgb(231,133,32)" fg:x="287892" fg:w="2362"/><text x="91.6243%" y="447.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (2,362 samples, 0.75%)</title><rect x="91.3743%" y="421" width="0.7497%" height="15" fill="rgb(248,193,4)" fg:x="287892" fg:w="2362"/><text x="91.6243%" y="431.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (1,724 samples, 0.55%)</title><rect x="91.5768%" y="405" width="0.5472%" height="15" fill="rgb(211,178,46)" fg:x="288530" fg:w="1724"/><text x="91.8268%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2,378 samples, 0.75%)</title><rect x="91.3717%" y="501" width="0.7548%" height="15" fill="rgb(224,5,42)" fg:x="287884" fg:w="2378"/><text x="91.6217%" y="511.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}} (2,374 samples, 0.75%)</title><rect x="91.3730%" y="485" width="0.7535%" height="15" fill="rgb(239,176,25)" fg:x="287888" fg:w="2374"/><text x="91.6230%" y="495.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (48 samples, 0.02%)</title><rect x="92.1674%" y="357" width="0.0152%" height="15" fill="rgb(245,187,50)" fg:x="290391" fg:w="48"/><text x="92.4174%" y="367.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (48 samples, 0.02%)</title><rect x="92.1674%" y="341" width="0.0152%" height="15" fill="rgb(248,24,15)" fg:x="290391" fg:w="48"/><text x="92.4174%" y="351.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (36 samples, 0.01%)</title><rect x="92.1712%" y="325" width="0.0114%" height="15" fill="rgb(205,166,13)" fg:x="290403" fg:w="36"/><text x="92.4212%" y="335.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (53 samples, 0.02%)</title><rect x="92.1674%" y="405" width="0.0168%" height="15" fill="rgb(208,114,23)" fg:x="290391" fg:w="53"/><text x="92.4174%" y="415.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (53 samples, 0.02%)</title><rect x="92.1674%" y="389" width="0.0168%" height="15" fill="rgb(239,127,18)" fg:x="290391" fg:w="53"/><text x="92.4174%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (53 samples, 0.02%)</title><rect x="92.1674%" y="373" width="0.0168%" height="15" fill="rgb(219,154,28)" fg:x="290391" fg:w="53"/><text x="92.4174%" y="383.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (144 samples, 0.05%)</title><rect x="92.1392%" y="421" width="0.0457%" height="15" fill="rgb(225,157,23)" fg:x="290302" fg:w="144"/><text x="92.3892%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (187 samples, 0.06%)</title><rect x="92.1303%" y="453" width="0.0594%" height="15" fill="rgb(219,8,6)" fg:x="290274" fg:w="187"/><text x="92.3803%" y="463.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (159 samples, 0.05%)</title><rect x="92.1392%" y="437" width="0.0505%" height="15" fill="rgb(212,47,6)" fg:x="290302" fg:w="159"/><text x="92.3892%" y="447.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (42 samples, 0.01%)</title><rect x="92.1982%" y="421" width="0.0133%" height="15" fill="rgb(224,190,4)" fg:x="290488" fg:w="42"/><text x="92.4482%" y="431.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (42 samples, 0.01%)</title><rect x="92.1982%" y="405" width="0.0133%" height="15" fill="rgb(239,183,29)" fg:x="290488" fg:w="42"/><text x="92.4482%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (88 samples, 0.03%)</title><rect x="92.1896%" y="437" width="0.0279%" height="15" fill="rgb(213,57,7)" fg:x="290461" fg:w="88"/><text x="92.4396%" y="447.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (2,673 samples, 0.85%)</title><rect x="91.3705%" y="517" width="0.8484%" height="15" fill="rgb(216,148,1)" fg:x="287880" fg:w="2673"/><text x="91.6205%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (281 samples, 0.09%)</title><rect x="92.1297%" y="501" width="0.0892%" height="15" fill="rgb(236,182,29)" fg:x="290272" fg:w="281"/><text x="92.3797%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (281 samples, 0.09%)</title><rect x="92.1297%" y="485" width="0.0892%" height="15" fill="rgb(244,120,48)" fg:x="290272" fg:w="281"/><text x="92.3797%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (279 samples, 0.09%)</title><rect x="92.1303%" y="469" width="0.0886%" height="15" fill="rgb(206,71,34)" fg:x="290274" fg:w="279"/><text x="92.3803%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (92 samples, 0.03%)</title><rect x="92.1896%" y="453" width="0.0292%" height="15" fill="rgb(242,32,6)" fg:x="290461" fg:w="92"/><text x="92.4396%" y="463.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (2,849 samples, 0.90%)</title><rect x="91.3159%" y="533" width="0.9042%" height="15" fill="rgb(241,35,3)" fg:x="287708" fg:w="2849"/><text x="91.5659%" y="543.50"></text></g><g><title>bevy_render::draw::Draw::set_index_buffer (145 samples, 0.05%)</title><rect x="92.2309%" y="517" width="0.0460%" height="15" fill="rgb(222,62,19)" fg:x="290591" fg:w="145"/><text x="92.4809%" y="527.50"></text></g><g><title>bevy_render::draw::Draw::render_command (145 samples, 0.05%)</title><rect x="92.2309%" y="501" width="0.0460%" height="15" fill="rgb(223,110,41)" fg:x="290591" fg:w="145"/><text x="92.4809%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (144 samples, 0.05%)</title><rect x="92.2312%" y="485" width="0.0457%" height="15" fill="rgb(208,224,4)" fg:x="290592" fg:w="144"/><text x="92.4812%" y="495.50"></text></g><g><title>core::ptr::write (143 samples, 0.05%)</title><rect x="92.2315%" y="469" width="0.0454%" height="15" fill="rgb(241,137,19)" fg:x="290593" fg:w="143"/><text x="92.4815%" y="479.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (333 samples, 0.11%)</title><rect x="92.2201%" y="533" width="0.1057%" height="15" fill="rgb(244,24,17)" fg:x="290557" fg:w="333"/><text x="92.4701%" y="543.50"></text></g><g><title>bevy_render::draw::Draw::set_vertex_buffer (154 samples, 0.05%)</title><rect x="92.2769%" y="517" width="0.0489%" height="15" fill="rgb(245,178,49)" fg:x="290736" fg:w="154"/><text x="92.5269%" y="527.50"></text></g><g><title>bevy_render::draw::Draw::render_command (154 samples, 0.05%)</title><rect x="92.2769%" y="501" width="0.0489%" height="15" fill="rgb(219,160,38)" fg:x="290736" fg:w="154"/><text x="92.5269%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (153 samples, 0.05%)</title><rect x="92.2772%" y="485" width="0.0486%" height="15" fill="rgb(228,137,14)" fg:x="290737" fg:w="153"/><text x="92.5272%" y="495.50"></text></g><g><title>core::ptr::write (152 samples, 0.05%)</title><rect x="92.2776%" y="469" width="0.0482%" height="15" fill="rgb(237,134,11)" fg:x="290738" fg:w="152"/><text x="92.5276%" y="479.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (8,798 samples, 2.79%)</title><rect x="89.5375%" y="549" width="2.7924%" height="15" fill="rgb(211,126,44)" fg:x="282105" fg:w="8798"/><text x="89.7875%" y="559.50">be..</text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (8,816 samples, 2.80%)</title><rect x="89.5328%" y="597" width="2.7981%" height="15" fill="rgb(226,171,33)" fg:x="282090" fg:w="8816"/><text x="89.7828%" y="607.50">&lt;F..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8,816 samples, 2.80%)</title><rect x="89.5328%" y="581" width="2.7981%" height="15" fill="rgb(253,99,13)" fg:x="282090" fg:w="8816"/><text x="89.7828%" y="591.50">co..</text></g><g><title>core::ops::function::Fn::call (8,816 samples, 2.80%)</title><rect x="89.5328%" y="565" width="2.7981%" height="15" fill="rgb(244,48,7)" fg:x="282090" fg:w="8816"/><text x="89.7828%" y="575.50">co..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (163,031 samples, 51.74%)</title><rect x="40.5936%" y="805" width="51.7445%" height="15" fill="rgb(244,217,54)" fg:x="127898" fg:w="163031"/><text x="40.8436%" y="815.50">&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::execu..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (163,031 samples, 51.74%)</title><rect x="40.5936%" y="789" width="51.7445%" height="15" fill="rgb(224,15,18)" fg:x="127898" fg:w="163031"/><text x="40.8436%" y="799.50">bevy_tasks::task_pool::TaskPool::scope</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (163,031 samples, 51.74%)</title><rect x="40.5936%" y="773" width="51.7445%" height="15" fill="rgb(244,99,12)" fg:x="127898" fg:w="163031"/><text x="40.8436%" y="783.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (163,031 samples, 51.74%)</title><rect x="40.5936%" y="757" width="51.7445%" height="15" fill="rgb(233,226,8)" fg:x="127898" fg:w="163031"/><text x="40.8436%" y="767.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (163,031 samples, 51.74%)</title><rect x="40.5936%" y="741" width="51.7445%" height="15" fill="rgb(229,211,3)" fg:x="127898" fg:w="163031"/><text x="40.8436%" y="751.50">bevy_tasks::task_pool::TaskPool::scope::{{closure}}</text></g><g><title>async_executor::Executor::try_tick (163,029 samples, 51.74%)</title><rect x="40.5943%" y="725" width="51.7439%" height="15" fill="rgb(216,140,21)" fg:x="127900" fg:w="163029"/><text x="40.8443%" y="735.50">async_executor::Executor::try_tick</text></g><g><title>async_task::runnable::Runnable::run (163,029 samples, 51.74%)</title><rect x="40.5943%" y="709" width="51.7439%" height="15" fill="rgb(234,122,30)" fg:x="127900" fg:w="163029"/><text x="40.8443%" y="719.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (163,029 samples, 51.74%)</title><rect x="40.5943%" y="693" width="51.7439%" height="15" fill="rgb(236,25,46)" fg:x="127900" fg:w="163029"/><text x="40.8443%" y="703.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (163,029 samples, 51.74%)</title><rect x="40.5943%" y="677" width="51.7439%" height="15" fill="rgb(217,52,54)" fg:x="127900" fg:w="163029"/><text x="40.8443%" y="687.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>async_executor::Executor::spawn::{{closure}} (163,029 samples, 51.74%)</title><rect x="40.5943%" y="661" width="51.7439%" height="15" fill="rgb(222,29,26)" fg:x="127900" fg:w="163029"/><text x="40.8443%" y="671.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (163,029 samples, 51.74%)</title><rect x="40.5943%" y="645" width="51.7439%" height="15" fill="rgb(216,177,29)" fg:x="127900" fg:w="163029"/><text x="40.8443%" y="655.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (163,029 samples, 51.74%)</title><rect x="40.5943%" y="629" width="51.7439%" height="15" fill="rgb(247,136,51)" fg:x="127900" fg:w="163029"/><text x="40.8443%" y="639.50">bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}</text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (163,029 samples, 51.74%)</title><rect x="40.5943%" y="613" width="51.7439%" height="15" fill="rgb(231,47,47)" fg:x="127900" fg:w="163029"/><text x="40.8443%" y="623.50">&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::sy..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (42 samples, 0.01%)</title><rect x="92.3744%" y="533" width="0.0133%" height="15" fill="rgb(211,192,36)" fg:x="291043" fg:w="42"/><text x="92.6244%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (82 samples, 0.03%)</title><rect x="92.3741%" y="581" width="0.0260%" height="15" fill="rgb(229,156,32)" fg:x="291042" fg:w="82"/><text x="92.6241%" y="591.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (82 samples, 0.03%)</title><rect x="92.3741%" y="565" width="0.0260%" height="15" fill="rgb(248,213,20)" fg:x="291042" fg:w="82"/><text x="92.6241%" y="575.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (81 samples, 0.03%)</title><rect x="92.3744%" y="549" width="0.0257%" height="15" fill="rgb(217,64,7)" fg:x="291043" fg:w="81"/><text x="92.6244%" y="559.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (39 samples, 0.01%)</title><rect x="92.3877%" y="533" width="0.0124%" height="15" fill="rgb(232,142,8)" fg:x="291085" fg:w="39"/><text x="92.6377%" y="543.50"></text></g><g><title>async_task::runnable::Runnable::run (90 samples, 0.03%)</title><rect x="92.3731%" y="613" width="0.0286%" height="15" fill="rgb(224,92,44)" fg:x="291039" fg:w="90"/><text x="92.6231%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (90 samples, 0.03%)</title><rect x="92.3731%" y="597" width="0.0286%" height="15" fill="rgb(214,169,17)" fg:x="291039" fg:w="90"/><text x="92.6231%" y="607.50"></text></g><g><title>concurrent_queue::full_fence (360 samples, 0.11%)</title><rect x="92.4299%" y="581" width="0.1143%" height="15" fill="rgb(210,59,37)" fg:x="291218" fg:w="360"/><text x="92.6799%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (349 samples, 0.11%)</title><rect x="92.4334%" y="565" width="0.1108%" height="15" fill="rgb(214,116,48)" fg:x="291229" fg:w="349"/><text x="92.6834%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (349 samples, 0.11%)</title><rect x="92.4334%" y="549" width="0.1108%" height="15" fill="rgb(244,191,6)" fg:x="291229" fg:w="349"/><text x="92.6834%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (349 samples, 0.11%)</title><rect x="92.4334%" y="533" width="0.1108%" height="15" fill="rgb(241,50,52)" fg:x="291229" fg:w="349"/><text x="92.6834%" y="543.50"></text></g><g><title>async_executor::Executor::try_tick (626 samples, 0.20%)</title><rect x="92.3566%" y="629" width="0.1987%" height="15" fill="rgb(236,75,39)" fg:x="290987" fg:w="626"/><text x="92.6066%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (484 samples, 0.15%)</title><rect x="92.4017%" y="613" width="0.1536%" height="15" fill="rgb(236,99,0)" fg:x="291129" fg:w="484"/><text x="92.6517%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (450 samples, 0.14%)</title><rect x="92.4125%" y="597" width="0.1428%" height="15" fill="rgb(207,202,15)" fg:x="291163" fg:w="450"/><text x="92.6625%" y="607.50"></text></g><g><title>concurrent_queue::full_fence (376 samples, 0.12%)</title><rect x="92.5962%" y="565" width="0.1193%" height="15" fill="rgb(233,207,14)" fg:x="291742" fg:w="376"/><text x="92.8462%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (361 samples, 0.11%)</title><rect x="92.6010%" y="549" width="0.1146%" height="15" fill="rgb(226,27,51)" fg:x="291757" fg:w="361"/><text x="92.8510%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (361 samples, 0.11%)</title><rect x="92.6010%" y="533" width="0.1146%" height="15" fill="rgb(206,104,42)" fg:x="291757" fg:w="361"/><text x="92.8510%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (361 samples, 0.11%)</title><rect x="92.6010%" y="517" width="0.1146%" height="15" fill="rgb(212,225,4)" fg:x="291757" fg:w="361"/><text x="92.8510%" y="527.50"></text></g><g><title>async_executor::Executor::try_tick (529 samples, 0.17%)</title><rect x="92.5556%" y="613" width="0.1679%" height="15" fill="rgb(233,96,42)" fg:x="291614" fg:w="529"/><text x="92.8056%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (476 samples, 0.15%)</title><rect x="92.5724%" y="597" width="0.1511%" height="15" fill="rgb(229,21,32)" fg:x="291667" fg:w="476"/><text x="92.8224%" y="607.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (466 samples, 0.15%)</title><rect x="92.5756%" y="581" width="0.1479%" height="15" fill="rgb(226,216,24)" fg:x="291677" fg:w="466"/><text x="92.8256%" y="591.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (553 samples, 0.18%)</title><rect x="92.5553%" y="629" width="0.1755%" height="15" fill="rgb(221,163,17)" fg:x="291613" fg:w="553"/><text x="92.8053%" y="639.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (401 samples, 0.13%)</title><rect x="92.8349%" y="453" width="0.1273%" height="15" fill="rgb(216,216,42)" fg:x="292494" fg:w="401"/><text x="93.0849%" y="463.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (387 samples, 0.12%)</title><rect x="92.8393%" y="437" width="0.1228%" height="15" fill="rgb(240,118,7)" fg:x="292508" fg:w="387"/><text x="93.0893%" y="447.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (367 samples, 0.12%)</title><rect x="92.8457%" y="421" width="0.1165%" height="15" fill="rgb(221,67,37)" fg:x="292528" fg:w="367"/><text x="93.0957%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (367 samples, 0.12%)</title><rect x="92.8457%" y="405" width="0.1165%" height="15" fill="rgb(241,32,44)" fg:x="292528" fg:w="367"/><text x="93.0957%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (367 samples, 0.12%)</title><rect x="92.8457%" y="389" width="0.1165%" height="15" fill="rgb(235,204,43)" fg:x="292528" fg:w="367"/><text x="93.0957%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (367 samples, 0.12%)</title><rect x="92.8457%" y="373" width="0.1165%" height="15" fill="rgb(213,116,10)" fg:x="292528" fg:w="367"/><text x="93.0957%" y="383.50"></text></g><g><title>async_task::utils::abort_on_panic (834 samples, 0.26%)</title><rect x="92.8349%" y="485" width="0.2647%" height="15" fill="rgb(239,15,48)" fg:x="292494" fg:w="834"/><text x="93.0849%" y="495.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (834 samples, 0.26%)</title><rect x="92.8349%" y="469" width="0.2647%" height="15" fill="rgb(207,123,36)" fg:x="292494" fg:w="834"/><text x="93.0849%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (433 samples, 0.14%)</title><rect x="92.9622%" y="453" width="0.1374%" height="15" fill="rgb(209,103,30)" fg:x="292895" fg:w="433"/><text x="93.2122%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (414 samples, 0.13%)</title><rect x="92.9682%" y="437" width="0.1314%" height="15" fill="rgb(238,100,19)" fg:x="292914" fg:w="414"/><text x="93.2182%" y="447.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (414 samples, 0.13%)</title><rect x="92.9682%" y="421" width="0.1314%" height="15" fill="rgb(244,30,14)" fg:x="292914" fg:w="414"/><text x="93.2182%" y="431.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (414 samples, 0.13%)</title><rect x="92.9682%" y="405" width="0.1314%" height="15" fill="rgb(249,174,6)" fg:x="292914" fg:w="414"/><text x="93.2182%" y="415.50"></text></g><g><title>core::mem::drop (396 samples, 0.13%)</title><rect x="92.9739%" y="389" width="0.1257%" height="15" fill="rgb(235,213,41)" fg:x="292932" fg:w="396"/><text x="93.2239%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (396 samples, 0.13%)</title><rect x="92.9739%" y="373" width="0.1257%" height="15" fill="rgb(213,118,6)" fg:x="292932" fg:w="396"/><text x="93.2239%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (396 samples, 0.13%)</title><rect x="92.9739%" y="357" width="0.1257%" height="15" fill="rgb(235,44,51)" fg:x="292932" fg:w="396"/><text x="93.2239%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (395 samples, 0.13%)</title><rect x="92.9742%" y="341" width="0.1254%" height="15" fill="rgb(217,9,53)" fg:x="292933" fg:w="395"/><text x="93.2242%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_sub (395 samples, 0.13%)</title><rect x="92.9742%" y="325" width="0.1254%" height="15" fill="rgb(237,172,34)" fg:x="292933" fg:w="395"/><text x="93.2242%" y="335.50"></text></g><g><title>async_task::header::Header::register (1,688 samples, 0.54%)</title><rect x="92.8032%" y="501" width="0.5358%" height="15" fill="rgb(206,206,11)" fg:x="292394" fg:w="1688"/><text x="93.0532%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (734 samples, 0.23%)</title><rect x="93.1060%" y="485" width="0.2330%" height="15" fill="rgb(214,149,29)" fg:x="293348" fg:w="734"/><text x="93.3560%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (734 samples, 0.23%)</title><rect x="93.1060%" y="469" width="0.2330%" height="15" fill="rgb(208,123,3)" fg:x="293348" fg:w="734"/><text x="93.3560%" y="479.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (1,989 samples, 0.63%)</title><rect x="92.7660%" y="565" width="0.6313%" height="15" fill="rgb(229,126,4)" fg:x="292277" fg:w="1989"/><text x="93.0160%" y="575.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1,989 samples, 0.63%)</title><rect x="92.7660%" y="549" width="0.6313%" height="15" fill="rgb(222,92,36)" fg:x="292277" fg:w="1989"/><text x="93.0160%" y="559.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (1,989 samples, 0.63%)</title><rect x="92.7660%" y="533" width="0.6313%" height="15" fill="rgb(216,39,41)" fg:x="292277" fg:w="1989"/><text x="93.0160%" y="543.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (1,969 samples, 0.62%)</title><rect x="92.7724%" y="517" width="0.6249%" height="15" fill="rgb(253,127,28)" fg:x="292297" fg:w="1969"/><text x="93.0224%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (184 samples, 0.06%)</title><rect x="93.3389%" y="501" width="0.0584%" height="15" fill="rgb(249,152,51)" fg:x="294082" fg:w="184"/><text x="93.5889%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (184 samples, 0.06%)</title><rect x="93.3389%" y="485" width="0.0584%" height="15" fill="rgb(209,123,42)" fg:x="294082" fg:w="184"/><text x="93.5889%" y="495.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (2,043 samples, 0.65%)</title><rect x="92.7660%" y="581" width="0.6484%" height="15" fill="rgb(241,118,22)" fg:x="292277" fg:w="2043"/><text x="93.0160%" y="591.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,106 samples, 0.67%)</title><rect x="92.7530%" y="597" width="0.6684%" height="15" fill="rgb(208,25,7)" fg:x="292236" fg:w="2106"/><text x="93.0030%" y="607.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (3,414 samples, 1.08%)</title><rect x="92.3382%" y="773" width="1.0836%" height="15" fill="rgb(243,144,39)" fg:x="290929" fg:w="3414"/><text x="92.5882%" y="783.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (3,414 samples, 1.08%)</title><rect x="92.3382%" y="757" width="1.0836%" height="15" fill="rgb(250,50,5)" fg:x="290929" fg:w="3414"/><text x="92.5882%" y="767.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (3,414 samples, 1.08%)</title><rect x="92.3382%" y="741" width="1.0836%" height="15" fill="rgb(207,67,11)" fg:x="290929" fg:w="3414"/><text x="92.5882%" y="751.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (3,414 samples, 1.08%)</title><rect x="92.3382%" y="725" width="1.0836%" height="15" fill="rgb(245,204,40)" fg:x="290929" fg:w="3414"/><text x="92.5882%" y="735.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (3,414 samples, 1.08%)</title><rect x="92.3382%" y="709" width="1.0836%" height="15" fill="rgb(238,228,24)" fg:x="290929" fg:w="3414"/><text x="92.5882%" y="719.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (3,414 samples, 1.08%)</title><rect x="92.3382%" y="693" width="1.0836%" height="15" fill="rgb(217,116,22)" fg:x="290929" fg:w="3414"/><text x="92.5882%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,414 samples, 1.08%)</title><rect x="92.3382%" y="677" width="1.0836%" height="15" fill="rgb(234,98,12)" fg:x="290929" fg:w="3414"/><text x="92.5882%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,414 samples, 1.08%)</title><rect x="92.3382%" y="661" width="1.0836%" height="15" fill="rgb(242,170,50)" fg:x="290929" fg:w="3414"/><text x="92.5882%" y="671.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (3,414 samples, 1.08%)</title><rect x="92.3382%" y="645" width="1.0836%" height="15" fill="rgb(235,7,5)" fg:x="290929" fg:w="3414"/><text x="92.5882%" y="655.50"></text></g><g><title>futures_lite::future::block_on (2,177 samples, 0.69%)</title><rect x="92.7308%" y="629" width="0.6910%" height="15" fill="rgb(241,114,28)" fg:x="292166" fg:w="2177"/><text x="92.9808%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,141 samples, 0.68%)</title><rect x="92.7422%" y="613" width="0.6795%" height="15" fill="rgb(246,112,42)" fg:x="292202" fg:w="2141"/><text x="92.9922%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (44 samples, 0.01%)</title><rect x="93.4218%" y="405" width="0.0140%" height="15" fill="rgb(248,228,14)" fg:x="294343" fg:w="44"/><text x="93.6718%" y="415.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (50 samples, 0.02%)</title><rect x="93.4218%" y="757" width="0.0159%" height="15" fill="rgb(208,133,18)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (50 samples, 0.02%)</title><rect x="93.4218%" y="741" width="0.0159%" height="15" fill="rgb(207,35,49)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (50 samples, 0.02%)</title><rect x="93.4218%" y="725" width="0.0159%" height="15" fill="rgb(205,68,36)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (50 samples, 0.02%)</title><rect x="93.4218%" y="709" width="0.0159%" height="15" fill="rgb(245,62,40)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (50 samples, 0.02%)</title><rect x="93.4218%" y="693" width="0.0159%" height="15" fill="rgb(228,27,24)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (50 samples, 0.02%)</title><rect x="93.4218%" y="677" width="0.0159%" height="15" fill="rgb(253,19,12)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (50 samples, 0.02%)</title><rect x="93.4218%" y="661" width="0.0159%" height="15" fill="rgb(232,28,20)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (50 samples, 0.02%)</title><rect x="93.4218%" y="645" width="0.0159%" height="15" fill="rgb(218,35,51)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (50 samples, 0.02%)</title><rect x="93.4218%" y="629" width="0.0159%" height="15" fill="rgb(212,90,40)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (50 samples, 0.02%)</title><rect x="93.4218%" y="613" width="0.0159%" height="15" fill="rgb(220,172,12)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="623.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (50 samples, 0.02%)</title><rect x="93.4218%" y="597" width="0.0159%" height="15" fill="rgb(226,159,20)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="607.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (50 samples, 0.02%)</title><rect x="93.4218%" y="581" width="0.0159%" height="15" fill="rgb(234,205,16)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="591.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (50 samples, 0.02%)</title><rect x="93.4218%" y="565" width="0.0159%" height="15" fill="rgb(207,9,39)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="575.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (50 samples, 0.02%)</title><rect x="93.4218%" y="549" width="0.0159%" height="15" fill="rgb(249,143,15)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="559.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (50 samples, 0.02%)</title><rect x="93.4218%" y="533" width="0.0159%" height="15" fill="rgb(253,133,29)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="543.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (50 samples, 0.02%)</title><rect x="93.4218%" y="517" width="0.0159%" height="15" fill="rgb(221,187,0)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="527.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (50 samples, 0.02%)</title><rect x="93.4218%" y="501" width="0.0159%" height="15" fill="rgb(205,204,26)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.02%)</title><rect x="93.4218%" y="485" width="0.0159%" height="15" fill="rgb(224,68,54)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.02%)</title><rect x="93.4218%" y="469" width="0.0159%" height="15" fill="rgb(209,67,4)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.02%)</title><rect x="93.4218%" y="453" width="0.0159%" height="15" fill="rgb(228,229,18)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.02%)</title><rect x="93.4218%" y="437" width="0.0159%" height="15" fill="rgb(231,89,13)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.02%)</title><rect x="93.4218%" y="421" width="0.0159%" height="15" fill="rgb(210,182,18)" fg:x="294343" fg:w="50"/><text x="93.6718%" y="431.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (143 samples, 0.05%)</title><rect x="93.5189%" y="581" width="0.0454%" height="15" fill="rgb(240,105,2)" fg:x="294649" fg:w="143"/><text x="93.7689%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (143 samples, 0.05%)</title><rect x="93.5189%" y="565" width="0.0454%" height="15" fill="rgb(207,170,50)" fg:x="294649" fg:w="143"/><text x="93.7689%" y="575.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (178 samples, 0.06%)</title><rect x="93.5094%" y="597" width="0.0565%" height="15" fill="rgb(232,133,24)" fg:x="294619" fg:w="178"/><text x="93.7594%" y="607.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (303 samples, 0.10%)</title><rect x="93.5033%" y="629" width="0.0962%" height="15" fill="rgb(235,166,27)" fg:x="294600" fg:w="303"/><text x="93.7533%" y="639.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (293 samples, 0.09%)</title><rect x="93.5065%" y="613" width="0.0930%" height="15" fill="rgb(209,19,13)" fg:x="294610" fg:w="293"/><text x="93.7565%" y="623.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (106 samples, 0.03%)</title><rect x="93.5659%" y="597" width="0.0336%" height="15" fill="rgb(226,79,39)" fg:x="294797" fg:w="106"/><text x="93.8159%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (104 samples, 0.03%)</title><rect x="93.5665%" y="581" width="0.0330%" height="15" fill="rgb(222,163,10)" fg:x="294799" fg:w="104"/><text x="93.8165%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (104 samples, 0.03%)</title><rect x="93.5665%" y="565" width="0.0330%" height="15" fill="rgb(214,44,19)" fg:x="294799" fg:w="104"/><text x="93.8165%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (59 samples, 0.02%)</title><rect x="93.5995%" y="581" width="0.0187%" height="15" fill="rgb(210,217,13)" fg:x="294903" fg:w="59"/><text x="93.8495%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.02%)</title><rect x="93.6414%" y="549" width="0.0162%" height="15" fill="rgb(237,61,54)" fg:x="295035" fg:w="51"/><text x="93.8914%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (247 samples, 0.08%)</title><rect x="93.5995%" y="629" width="0.0784%" height="15" fill="rgb(226,184,24)" fg:x="294903" fg:w="247"/><text x="93.8495%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (247 samples, 0.08%)</title><rect x="93.5995%" y="613" width="0.0784%" height="15" fill="rgb(223,226,4)" fg:x="294903" fg:w="247"/><text x="93.8495%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (247 samples, 0.08%)</title><rect x="93.5995%" y="597" width="0.0784%" height="15" fill="rgb(210,26,41)" fg:x="294903" fg:w="247"/><text x="93.8495%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (188 samples, 0.06%)</title><rect x="93.6182%" y="581" width="0.0597%" height="15" fill="rgb(220,221,6)" fg:x="294962" fg:w="188"/><text x="93.8682%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (176 samples, 0.06%)</title><rect x="93.6220%" y="565" width="0.0559%" height="15" fill="rgb(225,89,49)" fg:x="294974" fg:w="176"/><text x="93.8720%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (38 samples, 0.01%)</title><rect x="93.6658%" y="549" width="0.0121%" height="15" fill="rgb(218,70,45)" fg:x="295112" fg:w="38"/><text x="93.9158%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (38 samples, 0.01%)</title><rect x="93.6658%" y="533" width="0.0121%" height="15" fill="rgb(238,166,21)" fg:x="295112" fg:w="38"/><text x="93.9158%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (38 samples, 0.01%)</title><rect x="93.6658%" y="517" width="0.0121%" height="15" fill="rgb(224,141,44)" fg:x="295112" fg:w="38"/><text x="93.9158%" y="527.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_bind_group (568 samples, 0.18%)</title><rect x="93.5002%" y="645" width="0.1803%" height="15" fill="rgb(230,12,49)" fg:x="294590" fg:w="568"/><text x="93.7502%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (58 samples, 0.02%)</title><rect x="93.6884%" y="469" width="0.0184%" height="15" fill="rgb(212,174,12)" fg:x="295183" fg:w="58"/><text x="93.9384%" y="479.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (50 samples, 0.02%)</title><rect x="93.6909%" y="453" width="0.0159%" height="15" fill="rgb(246,67,9)" fg:x="295191" fg:w="50"/><text x="93.9409%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (64 samples, 0.02%)</title><rect x="93.6884%" y="501" width="0.0203%" height="15" fill="rgb(239,35,23)" fg:x="295183" fg:w="64"/><text x="93.9384%" y="511.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (64 samples, 0.02%)</title><rect x="93.6884%" y="485" width="0.0203%" height="15" fill="rgb(211,167,0)" fg:x="295183" fg:w="64"/><text x="93.9384%" y="495.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (71 samples, 0.02%)</title><rect x="93.6884%" y="549" width="0.0225%" height="15" fill="rgb(225,119,45)" fg:x="295183" fg:w="71"/><text x="93.9384%" y="559.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (71 samples, 0.02%)</title><rect x="93.6884%" y="533" width="0.0225%" height="15" fill="rgb(210,162,6)" fg:x="295183" fg:w="71"/><text x="93.9384%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (71 samples, 0.02%)</title><rect x="93.6884%" y="517" width="0.0225%" height="15" fill="rgb(208,118,35)" fg:x="295183" fg:w="71"/><text x="93.9384%" y="527.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (72 samples, 0.02%)</title><rect x="93.6884%" y="565" width="0.0229%" height="15" fill="rgb(239,4,53)" fg:x="295183" fg:w="72"/><text x="93.9384%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (87 samples, 0.03%)</title><rect x="93.6846%" y="581" width="0.0276%" height="15" fill="rgb(213,130,21)" fg:x="295171" fg:w="87"/><text x="93.9346%" y="591.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (155 samples, 0.05%)</title><rect x="93.6814%" y="645" width="0.0492%" height="15" fill="rgb(235,148,0)" fg:x="295161" fg:w="155"/><text x="93.9314%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (148 samples, 0.05%)</title><rect x="93.6836%" y="629" width="0.0470%" height="15" fill="rgb(244,224,18)" fg:x="295168" fg:w="148"/><text x="93.9336%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (145 samples, 0.05%)</title><rect x="93.6846%" y="613" width="0.0460%" height="15" fill="rgb(211,214,4)" fg:x="295171" fg:w="145"/><text x="93.9346%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (145 samples, 0.05%)</title><rect x="93.6846%" y="597" width="0.0460%" height="15" fill="rgb(206,119,25)" fg:x="295171" fg:w="145"/><text x="93.9346%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (58 samples, 0.02%)</title><rect x="93.7122%" y="581" width="0.0184%" height="15" fill="rgb(243,93,47)" fg:x="295258" fg:w="58"/><text x="93.9622%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 0.02%)</title><rect x="93.7138%" y="565" width="0.0168%" height="15" fill="rgb(224,194,6)" fg:x="295263" fg:w="53"/><text x="93.9638%" y="575.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::is_pipeline_set (105 samples, 0.03%)</title><rect x="93.7471%" y="645" width="0.0333%" height="15" fill="rgb(243,229,6)" fg:x="295368" fg:w="105"/><text x="93.9971%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (96 samples, 0.03%)</title><rect x="93.7499%" y="629" width="0.0305%" height="15" fill="rgb(207,23,50)" fg:x="295377" fg:w="96"/><text x="93.9999%" y="639.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (95 samples, 0.03%)</title><rect x="93.7503%" y="613" width="0.0302%" height="15" fill="rgb(253,192,32)" fg:x="295378" fg:w="95"/><text x="94.0003%" y="623.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (95 samples, 0.03%)</title><rect x="93.7503%" y="597" width="0.0302%" height="15" fill="rgb(213,21,6)" fg:x="295378" fg:w="95"/><text x="94.0003%" y="607.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (89 samples, 0.03%)</title><rect x="93.7522%" y="581" width="0.0282%" height="15" fill="rgb(243,151,13)" fg:x="295384" fg:w="89"/><text x="94.0022%" y="591.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (89 samples, 0.03%)</title><rect x="93.7522%" y="565" width="0.0282%" height="15" fill="rgb(233,165,41)" fg:x="295384" fg:w="89"/><text x="94.0022%" y="575.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (89 samples, 0.03%)</title><rect x="93.7522%" y="549" width="0.0282%" height="15" fill="rgb(246,176,45)" fg:x="295384" fg:w="89"/><text x="94.0022%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (131 samples, 0.04%)</title><rect x="93.7906%" y="645" width="0.0416%" height="15" fill="rgb(217,170,52)" fg:x="295505" fg:w="131"/><text x="94.0406%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (130 samples, 0.04%)</title><rect x="93.7909%" y="629" width="0.0413%" height="15" fill="rgb(214,203,54)" fg:x="295506" fg:w="130"/><text x="94.0409%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (130 samples, 0.04%)</title><rect x="93.7909%" y="613" width="0.0413%" height="15" fill="rgb(248,215,49)" fg:x="295506" fg:w="130"/><text x="94.0409%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (130 samples, 0.04%)</title><rect x="93.7909%" y="597" width="0.0413%" height="15" fill="rgb(208,46,10)" fg:x="295506" fg:w="130"/><text x="94.0409%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (130 samples, 0.04%)</title><rect x="93.7909%" y="581" width="0.0413%" height="15" fill="rgb(254,5,31)" fg:x="295506" fg:w="130"/><text x="94.0409%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (145 samples, 0.05%)</title><rect x="93.8356%" y="581" width="0.0460%" height="15" fill="rgb(222,104,33)" fg:x="295647" fg:w="145"/><text x="94.0856%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (145 samples, 0.05%)</title><rect x="93.8356%" y="565" width="0.0460%" height="15" fill="rgb(248,49,16)" fg:x="295647" fg:w="145"/><text x="94.0856%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (149 samples, 0.05%)</title><rect x="93.8350%" y="629" width="0.0473%" height="15" fill="rgb(232,198,41)" fg:x="295645" fg:w="149"/><text x="94.0850%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (149 samples, 0.05%)</title><rect x="93.8350%" y="613" width="0.0473%" height="15" fill="rgb(214,125,3)" fg:x="295645" fg:w="149"/><text x="94.0850%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (149 samples, 0.05%)</title><rect x="93.8350%" y="597" width="0.0473%" height="15" fill="rgb(229,220,28)" fg:x="295645" fg:w="149"/><text x="94.0850%" y="607.50"></text></g><g><title>wgpu_render_pass_set_bind_group (176 samples, 0.06%)</title><rect x="93.8321%" y="645" width="0.0559%" height="15" fill="rgb(222,64,37)" fg:x="295636" fg:w="176"/><text x="94.0821%" y="655.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (1,419 samples, 0.45%)</title><rect x="93.4379%" y="661" width="0.4504%" height="15" fill="rgb(249,184,13)" fg:x="294394" fg:w="1419"/><text x="93.6879%" y="671.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (1,423 samples, 0.45%)</title><rect x="93.4376%" y="693" width="0.4516%" height="15" fill="rgb(252,176,6)" fg:x="294393" fg:w="1423"/><text x="93.6876%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (1,423 samples, 0.45%)</title><rect x="93.4376%" y="677" width="0.4516%" height="15" fill="rgb(228,153,7)" fg:x="294393" fg:w="1423"/><text x="93.6876%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_get_current_texture_view (36 samples, 0.01%)</title><rect x="93.8924%" y="629" width="0.0114%" height="15" fill="rgb(242,193,5)" fg:x="295826" fg:w="36"/><text x="94.1424%" y="639.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_get_current_texture_view (36 samples, 0.01%)</title><rect x="93.8924%" y="613" width="0.0114%" height="15" fill="rgb(232,140,9)" fg:x="295826" fg:w="36"/><text x="94.1424%" y="623.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (47 samples, 0.01%)</title><rect x="93.8893%" y="693" width="0.0149%" height="15" fill="rgb(213,222,16)" fg:x="295816" fg:w="47"/><text x="94.1393%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::next_swap_chain_texture (45 samples, 0.01%)</title><rect x="93.8899%" y="677" width="0.0143%" height="15" fill="rgb(222,75,50)" fg:x="295818" fg:w="45"/><text x="94.1399%" y="687.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::try_next_swap_chain_texture (45 samples, 0.01%)</title><rect x="93.8899%" y="661" width="0.0143%" height="15" fill="rgb(205,180,2)" fg:x="295818" fg:w="45"/><text x="94.1399%" y="671.50"></text></g><g><title>wgpu::SwapChain::get_current_frame (37 samples, 0.01%)</title><rect x="93.8924%" y="645" width="0.0117%" height="15" fill="rgb(216,34,7)" fg:x="295826" fg:w="37"/><text x="94.1424%" y="655.50"></text></g><g><title>inplace_it::fixed_array::indirect (100 samples, 0.03%)</title><rect x="94.0489%" y="517" width="0.0317%" height="15" fill="rgb(253,16,32)" fg:x="296319" fg:w="100"/><text x="94.2989%" y="527.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer::{{closure}} (6,069 samples, 1.93%)</title><rect x="94.0870%" y="485" width="1.9262%" height="15" fill="rgb(208,97,28)" fg:x="296439" fg:w="6069"/><text x="94.3370%" y="495.50">&lt;..</text></g><g><title>ash::device::DeviceV1_0::cmd_copy_buffer (6,058 samples, 1.92%)</title><rect x="94.0905%" y="469" width="1.9228%" height="15" fill="rgb(225,92,11)" fg:x="296450" fg:w="6058"/><text x="94.3405%" y="479.50">a..</text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_copy_buffer (6,058 samples, 1.92%)</title><rect x="94.0905%" y="453" width="1.9228%" height="15" fill="rgb(243,38,12)" fg:x="296450" fg:w="6058"/><text x="94.3405%" y="463.50">a..</text></g><g><title>[libnvidia-glcore.so.470.63.01] (6,058 samples, 1.92%)</title><rect x="94.0905%" y="437" width="1.9228%" height="15" fill="rgb(208,139,16)" fg:x="296450" fg:w="6058"/><text x="94.3405%" y="447.50">[..</text></g><g><title>[libnvidia-glcore.so.470.63.01] (5,778 samples, 1.83%)</title><rect x="94.1794%" y="421" width="1.8339%" height="15" fill="rgb(227,24,9)" fg:x="296730" fg:w="5778"/><text x="94.4294%" y="431.50">[..</text></g><g><title>[libnvidia-glcore.so.470.63.01] (174 samples, 0.06%)</title><rect x="95.9580%" y="405" width="0.0552%" height="15" fill="rgb(206,62,11)" fg:x="302334" fg:w="174"/><text x="96.2080%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (78 samples, 0.02%)</title><rect x="95.9885%" y="389" width="0.0248%" height="15" fill="rgb(228,134,27)" fg:x="302430" fg:w="78"/><text x="96.2385%" y="399.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (6,093 samples, 1.93%)</title><rect x="94.0842%" y="501" width="1.9339%" height="15" fill="rgb(205,55,33)" fg:x="296430" fg:w="6093"/><text x="94.3342%" y="511.50">i..</text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (6,507 samples, 2.07%)</title><rect x="93.9559%" y="597" width="2.0653%" height="15" fill="rgb(243,75,43)" fg:x="296026" fg:w="6507"/><text x="94.2059%" y="607.50">&lt;..</text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (6,493 samples, 2.06%)</title><rect x="93.9604%" y="581" width="2.0608%" height="15" fill="rgb(223,27,42)" fg:x="296040" fg:w="6493"/><text x="94.2104%" y="591.50">i..</text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (6,492 samples, 2.06%)</title><rect x="93.9607%" y="565" width="2.0605%" height="15" fill="rgb(232,189,33)" fg:x="296041" fg:w="6492"/><text x="94.2107%" y="575.50">i..</text></g><g><title>inplace_it::fixed_array::try_inplace_array (6,356 samples, 2.02%)</title><rect x="94.0039%" y="549" width="2.0173%" height="15" fill="rgb(210,9,39)" fg:x="296177" fg:w="6356"/><text x="94.2539%" y="559.50">i..</text></g><g><title>inplace_it::fixed_array::indirect (6,214 samples, 1.97%)</title><rect x="94.0489%" y="533" width="1.9723%" height="15" fill="rgb(242,85,26)" fg:x="296319" fg:w="6214"/><text x="94.2989%" y="543.50">i..</text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (6,114 samples, 1.94%)</title><rect x="94.0807%" y="517" width="1.9405%" height="15" fill="rgb(248,44,4)" fg:x="296419" fg:w="6114"/><text x="94.3307%" y="527.50">i..</text></g><g><title>core::iter::traits::iterator::Iterator::chain (48 samples, 0.02%)</title><rect x="96.0250%" y="597" width="0.0152%" height="15" fill="rgb(250,96,46)" fg:x="302545" fg:w="48"/><text x="96.2750%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (170 samples, 0.05%)</title><rect x="96.0402%" y="597" width="0.0540%" height="15" fill="rgb(229,116,26)" fg:x="302593" fg:w="170"/><text x="96.2902%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (181 samples, 0.06%)</title><rect x="96.0974%" y="597" width="0.0574%" height="15" fill="rgb(246,94,34)" fg:x="302773" fg:w="181"/><text x="96.3474%" y="607.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (181 samples, 0.06%)</title><rect x="96.0974%" y="581" width="0.0574%" height="15" fill="rgb(251,73,21)" fg:x="302773" fg:w="181"/><text x="96.3474%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (181 samples, 0.06%)</title><rect x="96.0974%" y="565" width="0.0574%" height="15" fill="rgb(254,121,25)" fg:x="302773" fg:w="181"/><text x="96.3474%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (173 samples, 0.05%)</title><rect x="96.0999%" y="549" width="0.0549%" height="15" fill="rgb(215,161,49)" fg:x="302781" fg:w="173"/><text x="96.3499%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (173 samples, 0.05%)</title><rect x="96.0999%" y="533" width="0.0549%" height="15" fill="rgb(221,43,13)" fg:x="302781" fg:w="173"/><text x="96.3499%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (197 samples, 0.06%)</title><rect x="96.1548%" y="597" width="0.0625%" height="15" fill="rgb(249,5,37)" fg:x="302954" fg:w="197"/><text x="96.4048%" y="607.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (197 samples, 0.06%)</title><rect x="96.1548%" y="581" width="0.0625%" height="15" fill="rgb(226,25,44)" fg:x="302954" fg:w="197"/><text x="96.4048%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (197 samples, 0.06%)</title><rect x="96.1548%" y="565" width="0.0625%" height="15" fill="rgb(238,189,16)" fg:x="302954" fg:w="197"/><text x="96.4048%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (197 samples, 0.06%)</title><rect x="96.1548%" y="549" width="0.0625%" height="15" fill="rgb(251,186,8)" fg:x="302954" fg:w="197"/><text x="96.4048%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (197 samples, 0.06%)</title><rect x="96.1548%" y="533" width="0.0625%" height="15" fill="rgb(254,34,31)" fg:x="302954" fg:w="197"/><text x="96.4048%" y="543.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::get_encoder_mut (44 samples, 0.01%)</title><rect x="96.2348%" y="597" width="0.0140%" height="15" fill="rgb(225,215,27)" fg:x="303206" fg:w="44"/><text x="96.4848%" y="607.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (37 samples, 0.01%)</title><rect x="96.2370%" y="581" width="0.0117%" height="15" fill="rgb(221,192,48)" fg:x="303213" fg:w="37"/><text x="96.4870%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (111 samples, 0.04%)</title><rect x="96.2567%" y="533" width="0.0352%" height="15" fill="rgb(219,137,20)" fg:x="303275" fg:w="111"/><text x="96.5067%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (111 samples, 0.04%)</title><rect x="96.2567%" y="517" width="0.0352%" height="15" fill="rgb(219,84,11)" fg:x="303275" fg:w="111"/><text x="96.5067%" y="527.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (123 samples, 0.04%)</title><rect x="96.2532%" y="597" width="0.0390%" height="15" fill="rgb(224,10,23)" fg:x="303264" fg:w="123"/><text x="96.5032%" y="607.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (123 samples, 0.04%)</title><rect x="96.2532%" y="581" width="0.0390%" height="15" fill="rgb(248,22,39)" fg:x="303264" fg:w="123"/><text x="96.5032%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (123 samples, 0.04%)</title><rect x="96.2532%" y="565" width="0.0390%" height="15" fill="rgb(212,154,20)" fg:x="303264" fg:w="123"/><text x="96.5032%" y="575.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (123 samples, 0.04%)</title><rect x="96.2532%" y="549" width="0.0390%" height="15" fill="rgb(236,199,50)" fg:x="303264" fg:w="123"/><text x="96.5032%" y="559.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (202 samples, 0.06%)</title><rect x="96.2922%" y="597" width="0.0641%" height="15" fill="rgb(211,9,17)" fg:x="303387" fg:w="202"/><text x="96.5422%" y="607.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (202 samples, 0.06%)</title><rect x="96.2922%" y="581" width="0.0641%" height="15" fill="rgb(243,216,36)" fg:x="303387" fg:w="202"/><text x="96.5422%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (202 samples, 0.06%)</title><rect x="96.2922%" y="565" width="0.0641%" height="15" fill="rgb(250,2,10)" fg:x="303387" fg:w="202"/><text x="96.5422%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (201 samples, 0.06%)</title><rect x="96.2926%" y="549" width="0.0638%" height="15" fill="rgb(226,50,48)" fg:x="303388" fg:w="201"/><text x="96.5426%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (201 samples, 0.06%)</title><rect x="96.2926%" y="533" width="0.0638%" height="15" fill="rgb(243,81,16)" fg:x="303388" fg:w="201"/><text x="96.5426%" y="543.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (34 samples, 0.01%)</title><rect x="96.3792%" y="565" width="0.0108%" height="15" fill="rgb(250,14,2)" fg:x="303661" fg:w="34"/><text x="96.6292%" y="575.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (80 samples, 0.03%)</title><rect x="96.3649%" y="581" width="0.0254%" height="15" fill="rgb(233,135,29)" fg:x="303616" fg:w="80"/><text x="96.6149%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.02%)</title><rect x="96.4347%" y="501" width="0.0175%" height="15" fill="rgb(224,64,43)" fg:x="303836" fg:w="55"/><text x="96.6847%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (55 samples, 0.02%)</title><rect x="96.4347%" y="485" width="0.0175%" height="15" fill="rgb(238,84,13)" fg:x="303836" fg:w="55"/><text x="96.6847%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (139 samples, 0.04%)</title><rect x="96.4217%" y="549" width="0.0441%" height="15" fill="rgb(253,48,26)" fg:x="303795" fg:w="139"/><text x="96.6717%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (139 samples, 0.04%)</title><rect x="96.4217%" y="533" width="0.0441%" height="15" fill="rgb(205,223,31)" fg:x="303795" fg:w="139"/><text x="96.6717%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (120 samples, 0.04%)</title><rect x="96.4278%" y="517" width="0.0381%" height="15" fill="rgb(221,41,32)" fg:x="303814" fg:w="120"/><text x="96.6778%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (43 samples, 0.01%)</title><rect x="96.4522%" y="501" width="0.0136%" height="15" fill="rgb(213,158,31)" fg:x="303891" fg:w="43"/><text x="96.7022%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (43 samples, 0.01%)</title><rect x="96.4522%" y="485" width="0.0136%" height="15" fill="rgb(245,126,43)" fg:x="303891" fg:w="43"/><text x="96.7022%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (43 samples, 0.01%)</title><rect x="96.4522%" y="469" width="0.0136%" height="15" fill="rgb(227,7,22)" fg:x="303891" fg:w="43"/><text x="96.7022%" y="479.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (188 samples, 0.06%)</title><rect x="96.4097%" y="565" width="0.0597%" height="15" fill="rgb(252,90,44)" fg:x="303757" fg:w="188"/><text x="96.6597%" y="575.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_replace (389 samples, 0.12%)</title><rect x="96.3564%" y="597" width="0.1235%" height="15" fill="rgb(253,91,0)" fg:x="303589" fg:w="389"/><text x="96.6064%" y="607.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (282 samples, 0.09%)</title><rect x="96.3903%" y="581" width="0.0895%" height="15" fill="rgb(252,175,49)" fg:x="303696" fg:w="282"/><text x="96.6403%" y="591.50"></text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::change (33 samples, 0.01%)</title><rect x="96.4693%" y="565" width="0.0105%" height="15" fill="rgb(246,150,1)" fg:x="303945" fg:w="33"/><text x="96.7193%" y="575.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (176,098 samples, 55.89%)</title><rect x="40.5914%" y="965" width="55.8919%" height="15" fill="rgb(241,192,25)" fg:x="127891" fg:w="176098"/><text x="40.8414%" y="975.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (176,098 samples, 55.89%)</title><rect x="40.5914%" y="949" width="55.8919%" height="15" fill="rgb(239,187,11)" fg:x="127891" fg:w="176098"/><text x="40.8414%" y="959.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (176,098 samples, 55.89%)</title><rect x="40.5914%" y="933" width="55.8919%" height="15" fill="rgb(218,202,51)" fg:x="127891" fg:w="176098"/><text x="40.8414%" y="943.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (176,098 samples, 55.89%)</title><rect x="40.5914%" y="917" width="55.8919%" height="15" fill="rgb(225,176,8)" fg:x="127891" fg:w="176098"/><text x="40.8414%" y="927.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (176,098 samples, 55.89%)</title><rect x="40.5914%" y="901" width="55.8919%" height="15" fill="rgb(219,122,41)" fg:x="127891" fg:w="176098"/><text x="40.8414%" y="911.50">winit::platform_impl::platform::sticky_exit_callback</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (176,098 samples, 55.89%)</title><rect x="40.5914%" y="885" width="55.8919%" height="15" fill="rgb(248,140,20)" fg:x="127891" fg:w="176098"/><text x="40.8414%" y="895.50">bevy_winit::winit_runner_with::{{closure}}</text></g><g><title>bevy_app::app::App::update (176,098 samples, 55.89%)</title><rect x="40.5914%" y="869" width="55.8919%" height="15" fill="rgb(245,41,37)" fg:x="127891" fg:w="176098"/><text x="40.8414%" y="879.50">bevy_app::app::App::update</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (176,098 samples, 55.89%)</title><rect x="40.5914%" y="853" width="55.8919%" height="15" fill="rgb(235,82,39)" fg:x="127891" fg:w="176098"/><text x="40.8414%" y="863.50">&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (176,098 samples, 55.89%)</title><rect x="40.5914%" y="837" width="55.8919%" height="15" fill="rgb(230,108,42)" fg:x="127891" fg:w="176098"/><text x="40.8414%" y="847.50">bevy_ecs::schedule::Schedule::run_once</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (176,091 samples, 55.89%)</title><rect x="40.5936%" y="821" width="55.8897%" height="15" fill="rgb(215,150,50)" fg:x="127898" fg:w="176091"/><text x="40.8436%" y="831.50">&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (13,060 samples, 4.15%)</title><rect x="92.3382%" y="805" width="4.1451%" height="15" fill="rgb(233,212,5)" fg:x="290929" fg:w="13060"/><text x="92.5882%" y="815.50">&lt;bevy..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (13,060 samples, 4.15%)</title><rect x="92.3382%" y="789" width="4.1451%" height="15" fill="rgb(245,80,22)" fg:x="290929" fg:w="13060"/><text x="92.5882%" y="799.50">&lt;allo..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (9,646 samples, 3.06%)</title><rect x="93.4218%" y="773" width="3.0616%" height="15" fill="rgb(238,129,16)" fg:x="294343" fg:w="9646"/><text x="93.6718%" y="783.50">bev..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (9,596 samples, 3.05%)</title><rect x="93.4376%" y="757" width="3.0457%" height="15" fill="rgb(240,19,0)" fg:x="294393" fg:w="9596"/><text x="93.6876%" y="767.50">bev..</text></g><g><title>bevy_ecs::world::World::resource_scope (9,596 samples, 3.05%)</title><rect x="93.4376%" y="741" width="3.0457%" height="15" fill="rgb(232,42,35)" fg:x="294393" fg:w="9596"/><text x="93.6876%" y="751.50">bev..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (9,596 samples, 3.05%)</title><rect x="93.4376%" y="725" width="3.0457%" height="15" fill="rgb(223,130,24)" fg:x="294393" fg:w="9596"/><text x="93.6876%" y="735.50">bev..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (9,596 samples, 3.05%)</title><rect x="93.4376%" y="709" width="3.0457%" height="15" fill="rgb(237,16,22)" fg:x="294393" fg:w="9596"/><text x="93.6876%" y="719.50">bev..</text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (8,126 samples, 2.58%)</title><rect x="93.9042%" y="693" width="2.5791%" height="15" fill="rgb(248,192,20)" fg:x="295863" fg:w="8126"/><text x="94.1542%" y="703.50">be..</text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (8,126 samples, 2.58%)</title><rect x="93.9042%" y="677" width="2.5791%" height="15" fill="rgb(233,167,2)" fg:x="295863" fg:w="8126"/><text x="94.1542%" y="687.50">&lt;b..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (8,126 samples, 2.58%)</title><rect x="93.9042%" y="661" width="2.5791%" height="15" fill="rgb(252,71,44)" fg:x="295863" fg:w="8126"/><text x="94.1542%" y="671.50">be..</text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (8,126 samples, 2.58%)</title><rect x="93.9042%" y="645" width="2.5791%" height="15" fill="rgb(238,37,47)" fg:x="295863" fg:w="8126"/><text x="94.1542%" y="655.50">wg..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (8,126 samples, 2.58%)</title><rect x="93.9042%" y="629" width="2.5791%" height="15" fill="rgb(214,202,54)" fg:x="295863" fg:w="8126"/><text x="94.1542%" y="639.50">&lt;w..</text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (8,126 samples, 2.58%)</title><rect x="93.9042%" y="613" width="2.5791%" height="15" fill="rgb(254,165,40)" fg:x="295863" fg:w="8126"/><text x="94.1542%" y="623.50">wg..</text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId,bevy_wgpu::wgpu_resources::WgpuBindGroupInfo,ahash::random_state::RandomState&gt;&gt;&gt; (80 samples, 0.03%)</title><rect x="96.4916%" y="469" width="0.0254%" height="15" fill="rgb(246,173,38)" fg:x="304015" fg:w="80"/><text x="96.7416%" y="479.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (80 samples, 0.03%)</title><rect x="96.4916%" y="453" width="0.0254%" height="15" fill="rgb(215,3,27)" fg:x="304015" fg:w="80"/><text x="96.7416%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (80 samples, 0.03%)</title><rect x="96.4916%" y="437" width="0.0254%" height="15" fill="rgb(239,169,51)" fg:x="304015" fg:w="80"/><text x="96.7416%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (73 samples, 0.02%)</title><rect x="96.4938%" y="421" width="0.0232%" height="15" fill="rgb(212,5,25)" fg:x="304022" fg:w="73"/><text x="96.7438%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (73 samples, 0.02%)</title><rect x="96.4938%" y="405" width="0.0232%" height="15" fill="rgb(243,45,17)" fg:x="304022" fg:w="73"/><text x="96.7438%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (125 samples, 0.04%)</title><rect x="96.5189%" y="421" width="0.0397%" height="15" fill="rgb(242,97,9)" fg:x="304101" fg:w="125"/><text x="96.7689%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (125 samples, 0.04%)</title><rect x="96.5189%" y="405" width="0.0397%" height="15" fill="rgb(228,71,31)" fg:x="304101" fg:w="125"/><text x="96.7689%" y="415.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (132 samples, 0.04%)</title><rect x="96.5170%" y="469" width="0.0419%" height="15" fill="rgb(252,184,16)" fg:x="304095" fg:w="132"/><text x="96.7670%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (132 samples, 0.04%)</title><rect x="96.5170%" y="453" width="0.0419%" height="15" fill="rgb(236,169,46)" fg:x="304095" fg:w="132"/><text x="96.7670%" y="463.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (130 samples, 0.04%)</title><rect x="96.5176%" y="437" width="0.0413%" height="15" fill="rgb(207,17,47)" fg:x="304097" fg:w="130"/><text x="96.7676%" y="447.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (303 samples, 0.10%)</title><rect x="96.4878%" y="501" width="0.0962%" height="15" fill="rgb(206,201,28)" fg:x="304003" fg:w="303"/><text x="96.7378%" y="511.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (296 samples, 0.09%)</title><rect x="96.4900%" y="485" width="0.0939%" height="15" fill="rgb(224,184,23)" fg:x="304010" fg:w="296"/><text x="96.7400%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (79 samples, 0.03%)</title><rect x="96.5588%" y="469" width="0.0251%" height="15" fill="rgb(208,139,48)" fg:x="304227" fg:w="79"/><text x="96.8088%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (79 samples, 0.03%)</title><rect x="96.5588%" y="453" width="0.0251%" height="15" fill="rgb(208,130,10)" fg:x="304227" fg:w="79"/><text x="96.8088%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (79 samples, 0.03%)</title><rect x="96.5588%" y="437" width="0.0251%" height="15" fill="rgb(211,213,45)" fg:x="304227" fg:w="79"/><text x="96.8088%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (59 samples, 0.02%)</title><rect x="96.5652%" y="421" width="0.0187%" height="15" fill="rgb(235,100,30)" fg:x="304247" fg:w="59"/><text x="96.8152%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (48 samples, 0.02%)</title><rect x="96.5687%" y="405" width="0.0152%" height="15" fill="rgb(206,144,31)" fg:x="304258" fg:w="48"/><text x="96.8187%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (305 samples, 0.10%)</title><rect x="96.4878%" y="613" width="0.0968%" height="15" fill="rgb(224,200,26)" fg:x="304003" fg:w="305"/><text x="96.7378%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (305 samples, 0.10%)</title><rect x="96.4878%" y="597" width="0.0968%" height="15" fill="rgb(247,104,53)" fg:x="304003" fg:w="305"/><text x="96.7378%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (305 samples, 0.10%)</title><rect x="96.4878%" y="581" width="0.0968%" height="15" fill="rgb(220,14,17)" fg:x="304003" fg:w="305"/><text x="96.7378%" y="591.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (305 samples, 0.10%)</title><rect x="96.4878%" y="565" width="0.0968%" height="15" fill="rgb(230,140,40)" fg:x="304003" fg:w="305"/><text x="96.7378%" y="575.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (305 samples, 0.10%)</title><rect x="96.4878%" y="549" width="0.0968%" height="15" fill="rgb(229,2,41)" fg:x="304003" fg:w="305"/><text x="96.7378%" y="559.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (305 samples, 0.10%)</title><rect x="96.4878%" y="533" width="0.0968%" height="15" fill="rgb(232,89,16)" fg:x="304003" fg:w="305"/><text x="96.7378%" y="543.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (305 samples, 0.10%)</title><rect x="96.4878%" y="517" width="0.0968%" height="15" fill="rgb(247,59,52)" fg:x="304003" fg:w="305"/><text x="96.7378%" y="527.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (315 samples, 0.10%)</title><rect x="96.4865%" y="821" width="0.1000%" height="15" fill="rgb(226,110,21)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (315 samples, 0.10%)</title><rect x="96.4865%" y="805" width="0.1000%" height="15" fill="rgb(224,176,43)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (315 samples, 0.10%)</title><rect x="96.4865%" y="789" width="0.1000%" height="15" fill="rgb(221,73,6)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (315 samples, 0.10%)</title><rect x="96.4865%" y="773" width="0.1000%" height="15" fill="rgb(232,78,19)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="783.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (315 samples, 0.10%)</title><rect x="96.4865%" y="757" width="0.1000%" height="15" fill="rgb(233,112,48)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="767.50"></text></g><g><title>async_executor::Executor::try_tick (315 samples, 0.10%)</title><rect x="96.4865%" y="741" width="0.1000%" height="15" fill="rgb(243,131,47)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="751.50"></text></g><g><title>async_task::runnable::Runnable::run (315 samples, 0.10%)</title><rect x="96.4865%" y="725" width="0.1000%" height="15" fill="rgb(226,51,1)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (315 samples, 0.10%)</title><rect x="96.4865%" y="709" width="0.1000%" height="15" fill="rgb(247,58,7)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (315 samples, 0.10%)</title><rect x="96.4865%" y="693" width="0.1000%" height="15" fill="rgb(209,7,32)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="703.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (315 samples, 0.10%)</title><rect x="96.4865%" y="677" width="0.1000%" height="15" fill="rgb(209,39,41)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (315 samples, 0.10%)</title><rect x="96.4865%" y="661" width="0.1000%" height="15" fill="rgb(226,182,46)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="671.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (315 samples, 0.10%)</title><rect x="96.4865%" y="645" width="0.1000%" height="15" fill="rgb(230,219,10)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="655.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (315 samples, 0.10%)</title><rect x="96.4865%" y="629" width="0.1000%" height="15" fill="rgb(227,175,30)" fg:x="303999" fg:w="315"/><text x="96.7365%" y="639.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (50 samples, 0.02%)</title><rect x="96.6014%" y="453" width="0.0159%" height="15" fill="rgb(217,2,50)" fg:x="304361" fg:w="50"/><text x="96.8514%" y="463.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.02%)</title><rect x="96.6328%" y="421" width="0.0203%" height="15" fill="rgb(229,160,0)" fg:x="304460" fg:w="64"/><text x="96.8828%" y="431.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (86 samples, 0.03%)</title><rect x="96.6950%" y="405" width="0.0273%" height="15" fill="rgb(207,78,37)" fg:x="304656" fg:w="86"/><text x="96.9450%" y="415.50"></text></g><g><title>bevy_transform::components::global_transform::GlobalTransform::compute_matrix (44 samples, 0.01%)</title><rect x="96.7083%" y="389" width="0.0140%" height="15" fill="rgb(225,57,0)" fg:x="304698" fg:w="44"/><text x="96.9583%" y="399.50"></text></g><g><title>glam::mat4::Mat4::from_scale_rotation_translation (44 samples, 0.01%)</title><rect x="96.7083%" y="373" width="0.0140%" height="15" fill="rgb(232,154,2)" fg:x="304698" fg:w="44"/><text x="96.9583%" y="383.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::from_scale_quaternion_translation (44 samples, 0.01%)</title><rect x="96.7083%" y="357" width="0.0140%" height="15" fill="rgb(241,212,25)" fg:x="304698" fg:w="44"/><text x="96.9583%" y="367.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (148 samples, 0.05%)</title><rect x="96.7626%" y="309" width="0.0470%" height="15" fill="rgb(226,69,20)" fg:x="304869" fg:w="148"/><text x="97.0126%" y="319.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (147 samples, 0.05%)</title><rect x="96.7629%" y="293" width="0.0467%" height="15" fill="rgb(247,184,54)" fg:x="304870" fg:w="147"/><text x="97.0129%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (34 samples, 0.01%)</title><rect x="96.8153%" y="261" width="0.0108%" height="15" fill="rgb(210,145,0)" fg:x="305035" fg:w="34"/><text x="97.0653%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (34 samples, 0.01%)</title><rect x="96.8153%" y="245" width="0.0108%" height="15" fill="rgb(253,82,12)" fg:x="305035" fg:w="34"/><text x="97.0653%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.01%)</title><rect x="96.8153%" y="229" width="0.0108%" height="15" fill="rgb(245,42,11)" fg:x="305035" fg:w="34"/><text x="97.0653%" y="239.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding (306 samples, 0.10%)</title><rect x="96.7306%" y="405" width="0.0971%" height="15" fill="rgb(219,147,32)" fg:x="304768" fg:w="306"/><text x="96.9806%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (285 samples, 0.09%)</title><rect x="96.7372%" y="389" width="0.0905%" height="15" fill="rgb(246,12,7)" fg:x="304789" fg:w="285"/><text x="96.9872%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (285 samples, 0.09%)</title><rect x="96.7372%" y="373" width="0.0905%" height="15" fill="rgb(243,50,9)" fg:x="304789" fg:w="285"/><text x="96.9872%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (285 samples, 0.09%)</title><rect x="96.7372%" y="357" width="0.0905%" height="15" fill="rgb(219,149,6)" fg:x="304789" fg:w="285"/><text x="96.9872%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (258 samples, 0.08%)</title><rect x="96.7458%" y="341" width="0.0819%" height="15" fill="rgb(241,51,42)" fg:x="304816" fg:w="258"/><text x="96.9958%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (258 samples, 0.08%)</title><rect x="96.7458%" y="325" width="0.0819%" height="15" fill="rgb(226,128,27)" fg:x="304816" fg:w="258"/><text x="96.9958%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (46 samples, 0.01%)</title><rect x="96.8131%" y="309" width="0.0146%" height="15" fill="rgb(244,144,4)" fg:x="305028" fg:w="46"/><text x="97.0631%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (46 samples, 0.01%)</title><rect x="96.8131%" y="293" width="0.0146%" height="15" fill="rgb(221,4,13)" fg:x="305028" fg:w="46"/><text x="97.0631%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (46 samples, 0.01%)</title><rect x="96.8131%" y="277" width="0.0146%" height="15" fill="rgb(208,170,28)" fg:x="305028" fg:w="46"/><text x="97.0631%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (86 samples, 0.03%)</title><rect x="96.8296%" y="405" width="0.0273%" height="15" fill="rgb(226,131,13)" fg:x="305080" fg:w="86"/><text x="97.0796%" y="415.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (743 samples, 0.24%)</title><rect x="96.6226%" y="453" width="0.2358%" height="15" fill="rgb(215,72,41)" fg:x="304428" fg:w="743"/><text x="96.8726%" y="463.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (743 samples, 0.24%)</title><rect x="96.6226%" y="437" width="0.2358%" height="15" fill="rgb(243,108,20)" fg:x="304428" fg:w="743"/><text x="96.8726%" y="447.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (643 samples, 0.20%)</title><rect x="96.6544%" y="421" width="0.2041%" height="15" fill="rgb(230,189,17)" fg:x="304528" fg:w="643"/><text x="96.9044%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;bevy_render::render_graph::command::Command&gt;&gt;&gt; (223 samples, 0.07%)</title><rect x="96.8785%" y="405" width="0.0708%" height="15" fill="rgb(220,50,17)" fg:x="305234" fg:w="223"/><text x="97.1285%" y="415.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (223 samples, 0.07%)</title><rect x="96.8785%" y="389" width="0.0708%" height="15" fill="rgb(248,152,48)" fg:x="305234" fg:w="223"/><text x="97.1285%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (223 samples, 0.07%)</title><rect x="96.8785%" y="373" width="0.0708%" height="15" fill="rgb(244,91,11)" fg:x="305234" fg:w="223"/><text x="97.1285%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (223 samples, 0.07%)</title><rect x="96.8785%" y="357" width="0.0708%" height="15" fill="rgb(220,157,5)" fg:x="305234" fg:w="223"/><text x="97.1285%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (223 samples, 0.07%)</title><rect x="96.8785%" y="341" width="0.0708%" height="15" fill="rgb(253,137,8)" fg:x="305234" fg:w="223"/><text x="97.1285%" y="351.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (373 samples, 0.12%)</title><rect x="96.8658%" y="437" width="0.1184%" height="15" fill="rgb(217,137,51)" fg:x="305194" fg:w="373"/><text x="97.1158%" y="447.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::push (360 samples, 0.11%)</title><rect x="96.8699%" y="421" width="0.1143%" height="15" fill="rgb(218,209,53)" fg:x="305207" fg:w="360"/><text x="97.1199%" y="431.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (110 samples, 0.03%)</title><rect x="96.9492%" y="405" width="0.0349%" height="15" fill="rgb(249,137,25)" fg:x="305457" fg:w="110"/><text x="97.1992%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (110 samples, 0.03%)</title><rect x="96.9492%" y="389" width="0.0349%" height="15" fill="rgb(239,155,26)" fg:x="305457" fg:w="110"/><text x="97.1992%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (110 samples, 0.03%)</title><rect x="96.9492%" y="373" width="0.0349%" height="15" fill="rgb(227,85,46)" fg:x="305457" fg:w="110"/><text x="97.1992%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (110 samples, 0.03%)</title><rect x="96.9492%" y="357" width="0.0349%" height="15" fill="rgb(251,107,43)" fg:x="305457" fg:w="110"/><text x="97.1992%" y="367.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::copy_staging_buffer_to_final_buffers (392 samples, 0.12%)</title><rect x="96.8601%" y="453" width="0.1244%" height="15" fill="rgb(234,170,33)" fg:x="305176" fg:w="392"/><text x="97.1101%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.01%)</title><rect x="96.9991%" y="373" width="0.0111%" height="15" fill="rgb(206,29,35)" fg:x="305614" fg:w="35"/><text x="97.2491%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (143 samples, 0.05%)</title><rect x="97.0210%" y="341" width="0.0454%" height="15" fill="rgb(227,138,25)" fg:x="305683" fg:w="143"/><text x="97.2710%" y="351.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (143 samples, 0.05%)</title><rect x="97.0210%" y="325" width="0.0454%" height="15" fill="rgb(249,131,35)" fg:x="305683" fg:w="143"/><text x="97.2710%" y="335.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (289 samples, 0.09%)</title><rect x="96.9845%" y="453" width="0.0917%" height="15" fill="rgb(239,6,40)" fg:x="305568" fg:w="289"/><text x="97.2345%" y="463.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_or_assign_index (252 samples, 0.08%)</title><rect x="96.9962%" y="437" width="0.0800%" height="15" fill="rgb(246,136,47)" fg:x="305605" fg:w="252"/><text x="97.2462%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (243 samples, 0.08%)</title><rect x="96.9991%" y="421" width="0.0771%" height="15" fill="rgb(253,58,26)" fg:x="305614" fg:w="243"/><text x="97.2491%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (243 samples, 0.08%)</title><rect x="96.9991%" y="405" width="0.0771%" height="15" fill="rgb(237,141,10)" fg:x="305614" fg:w="243"/><text x="97.2491%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (243 samples, 0.08%)</title><rect x="96.9991%" y="389" width="0.0771%" height="15" fill="rgb(234,156,12)" fg:x="305614" fg:w="243"/><text x="97.2491%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (208 samples, 0.07%)</title><rect x="97.0102%" y="373" width="0.0660%" height="15" fill="rgb(243,224,36)" fg:x="305649" fg:w="208"/><text x="97.2602%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (205 samples, 0.07%)</title><rect x="97.0111%" y="357" width="0.0651%" height="15" fill="rgb(205,229,51)" fg:x="305652" fg:w="205"/><text x="97.2611%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (1,554 samples, 0.49%)</title><rect x="96.5887%" y="517" width="0.4932%" height="15" fill="rgb(223,189,4)" fg:x="304321" fg:w="1554"/><text x="96.8387%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,554 samples, 0.49%)</title><rect x="96.5887%" y="501" width="0.4932%" height="15" fill="rgb(249,167,54)" fg:x="304321" fg:w="1554"/><text x="96.8387%" y="511.50"></text></g><g><title>core::ops::function::Fn::call (1,554 samples, 0.49%)</title><rect x="96.5887%" y="485" width="0.4932%" height="15" fill="rgb(218,34,28)" fg:x="304321" fg:w="1554"/><text x="96.8387%" y="495.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (1,554 samples, 0.49%)</title><rect x="96.5887%" y="469" width="0.4932%" height="15" fill="rgb(232,109,42)" fg:x="304321" fg:w="1554"/><text x="96.8387%" y="479.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (40 samples, 0.01%)</title><rect x="97.0975%" y="453" width="0.0127%" height="15" fill="rgb(248,214,46)" fg:x="305924" fg:w="40"/><text x="97.3475%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (38 samples, 0.01%)</title><rect x="97.1149%" y="357" width="0.0121%" height="15" fill="rgb(244,216,40)" fg:x="305979" fg:w="38"/><text x="97.3649%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (38 samples, 0.01%)</title><rect x="97.1149%" y="341" width="0.0121%" height="15" fill="rgb(231,226,31)" fg:x="305979" fg:w="38"/><text x="97.3649%" y="351.50"></text></g><g><title>alloc::alloc::realloc (38 samples, 0.01%)</title><rect x="97.1149%" y="325" width="0.0121%" height="15" fill="rgb(238,38,43)" fg:x="305979" fg:w="38"/><text x="97.3649%" y="335.50"></text></g><g><title>__rdl_realloc (38 samples, 0.01%)</title><rect x="97.1149%" y="309" width="0.0121%" height="15" fill="rgb(208,88,43)" fg:x="305979" fg:w="38"/><text x="97.3649%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (38 samples, 0.01%)</title><rect x="97.1149%" y="293" width="0.0121%" height="15" fill="rgb(205,136,37)" fg:x="305979" fg:w="38"/><text x="97.3649%" y="303.50"></text></g><g><title>__GI___libc_realloc (38 samples, 0.01%)</title><rect x="97.1149%" y="277" width="0.0121%" height="15" fill="rgb(237,34,14)" fg:x="305979" fg:w="38"/><text x="97.3649%" y="287.50"></text></g><g><title>_int_realloc (37 samples, 0.01%)</title><rect x="97.1152%" y="261" width="0.0117%" height="15" fill="rgb(236,193,44)" fg:x="305980" fg:w="37"/><text x="97.3652%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (39 samples, 0.01%)</title><rect x="97.1149%" y="437" width="0.0124%" height="15" fill="rgb(231,48,10)" fg:x="305979" fg:w="39"/><text x="97.3649%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (39 samples, 0.01%)</title><rect x="97.1149%" y="421" width="0.0124%" height="15" fill="rgb(213,141,34)" fg:x="305979" fg:w="39"/><text x="97.3649%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (39 samples, 0.01%)</title><rect x="97.1149%" y="405" width="0.0124%" height="15" fill="rgb(249,130,34)" fg:x="305979" fg:w="39"/><text x="97.3649%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (39 samples, 0.01%)</title><rect x="97.1149%" y="389" width="0.0124%" height="15" fill="rgb(219,42,41)" fg:x="305979" fg:w="39"/><text x="97.3649%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.01%)</title><rect x="97.1149%" y="373" width="0.0124%" height="15" fill="rgb(224,100,54)" fg:x="305979" fg:w="39"/><text x="97.3649%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (46 samples, 0.01%)</title><rect x="97.1149%" y="453" width="0.0146%" height="15" fill="rgb(229,200,27)" fg:x="305979" fg:w="46"/><text x="97.3649%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (55 samples, 0.02%)</title><rect x="97.1578%" y="389" width="0.0175%" height="15" fill="rgb(217,118,10)" fg:x="306114" fg:w="55"/><text x="97.4078%" y="399.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (606 samples, 0.19%)</title><rect x="97.1860%" y="341" width="0.1923%" height="15" fill="rgb(206,22,3)" fg:x="306203" fg:w="606"/><text x="97.4360%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (627 samples, 0.20%)</title><rect x="97.1860%" y="357" width="0.1990%" height="15" fill="rgb(232,163,46)" fg:x="306203" fg:w="627"/><text x="97.4360%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (706 samples, 0.22%)</title><rect x="97.1752%" y="373" width="0.2241%" height="15" fill="rgb(206,95,13)" fg:x="306169" fg:w="706"/><text x="97.4252%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (39 samples, 0.01%)</title><rect x="97.3869%" y="357" width="0.0124%" height="15" fill="rgb(253,154,18)" fg:x="306836" fg:w="39"/><text x="97.6369%" y="367.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (39 samples, 0.01%)</title><rect x="97.3869%" y="341" width="0.0124%" height="15" fill="rgb(219,32,23)" fg:x="306836" fg:w="39"/><text x="97.6369%" y="351.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (39 samples, 0.01%)</title><rect x="97.3869%" y="325" width="0.0124%" height="15" fill="rgb(230,191,45)" fg:x="306836" fg:w="39"/><text x="97.6369%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (766 samples, 0.24%)</title><rect x="97.1578%" y="421" width="0.2431%" height="15" fill="rgb(229,64,36)" fg:x="306114" fg:w="766"/><text x="97.4078%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (766 samples, 0.24%)</title><rect x="97.1578%" y="405" width="0.2431%" height="15" fill="rgb(205,129,25)" fg:x="306114" fg:w="766"/><text x="97.4078%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (711 samples, 0.23%)</title><rect x="97.1752%" y="389" width="0.2257%" height="15" fill="rgb(254,112,7)" fg:x="306169" fg:w="711"/><text x="97.4252%" y="399.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (858 samples, 0.27%)</title><rect x="97.1298%" y="453" width="0.2723%" height="15" fill="rgb(226,53,48)" fg:x="306026" fg:w="858"/><text x="97.3798%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (770 samples, 0.24%)</title><rect x="97.1578%" y="437" width="0.2444%" height="15" fill="rgb(214,153,38)" fg:x="306114" fg:w="770"/><text x="97.4078%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.02%)</title><rect x="97.4158%" y="437" width="0.0209%" height="15" fill="rgb(243,101,7)" fg:x="306927" fg:w="66"/><text x="97.6658%" y="447.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.02%)</title><rect x="97.4158%" y="421" width="0.0209%" height="15" fill="rgb(240,140,22)" fg:x="306927" fg:w="66"/><text x="97.6658%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;(bevy_asset::handle::HandleUntyped,u64),bevy_render::renderer::render_resource::render_resource::RenderResourceId,ahash::random_state::RandomState&gt;&gt;&gt; (77 samples, 0.02%)</title><rect x="97.4463%" y="405" width="0.0244%" height="15" fill="rgb(235,114,2)" fg:x="307023" fg:w="77"/><text x="97.6963%" y="415.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (77 samples, 0.02%)</title><rect x="97.4463%" y="389" width="0.0244%" height="15" fill="rgb(242,59,12)" fg:x="307023" fg:w="77"/><text x="97.6963%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (77 samples, 0.02%)</title><rect x="97.4463%" y="373" width="0.0244%" height="15" fill="rgb(252,134,9)" fg:x="307023" fg:w="77"/><text x="97.6963%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (73 samples, 0.02%)</title><rect x="97.4475%" y="357" width="0.0232%" height="15" fill="rgb(236,4,44)" fg:x="307027" fg:w="73"/><text x="97.6975%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (73 samples, 0.02%)</title><rect x="97.4475%" y="341" width="0.0232%" height="15" fill="rgb(254,172,41)" fg:x="307027" fg:w="73"/><text x="97.6975%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (73 samples, 0.02%)</title><rect x="97.4713%" y="357" width="0.0232%" height="15" fill="rgb(244,63,20)" fg:x="307102" fg:w="73"/><text x="97.7213%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (73 samples, 0.02%)</title><rect x="97.4713%" y="341" width="0.0232%" height="15" fill="rgb(250,73,31)" fg:x="307102" fg:w="73"/><text x="97.7213%" y="351.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (76 samples, 0.02%)</title><rect x="97.4707%" y="405" width="0.0241%" height="15" fill="rgb(241,38,36)" fg:x="307100" fg:w="76"/><text x="97.7207%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (76 samples, 0.02%)</title><rect x="97.4707%" y="389" width="0.0241%" height="15" fill="rgb(245,211,2)" fg:x="307100" fg:w="76"/><text x="97.7207%" y="399.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (75 samples, 0.02%)</title><rect x="97.4710%" y="373" width="0.0238%" height="15" fill="rgb(206,120,28)" fg:x="307101" fg:w="75"/><text x="97.7210%" y="383.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (257 samples, 0.08%)</title><rect x="97.4380%" y="421" width="0.0816%" height="15" fill="rgb(211,59,34)" fg:x="306997" fg:w="257"/><text x="97.6880%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (78 samples, 0.02%)</title><rect x="97.4948%" y="405" width="0.0248%" height="15" fill="rgb(233,168,5)" fg:x="307176" fg:w="78"/><text x="97.7448%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (78 samples, 0.02%)</title><rect x="97.4948%" y="389" width="0.0248%" height="15" fill="rgb(234,33,13)" fg:x="307176" fg:w="78"/><text x="97.7448%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (77 samples, 0.02%)</title><rect x="97.4952%" y="373" width="0.0244%" height="15" fill="rgb(231,150,26)" fg:x="307177" fg:w="77"/><text x="97.7452%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (48 samples, 0.02%)</title><rect x="97.5044%" y="357" width="0.0152%" height="15" fill="rgb(217,191,4)" fg:x="307206" fg:w="48"/><text x="97.7544%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (42 samples, 0.01%)</title><rect x="97.5063%" y="341" width="0.0133%" height="15" fill="rgb(246,198,38)" fg:x="307212" fg:w="42"/><text x="97.7563%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (32 samples, 0.01%)</title><rect x="97.5094%" y="325" width="0.0102%" height="15" fill="rgb(245,64,37)" fg:x="307222" fg:w="32"/><text x="97.7594%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (32 samples, 0.01%)</title><rect x="97.5094%" y="309" width="0.0102%" height="15" fill="rgb(250,30,36)" fg:x="307222" fg:w="32"/><text x="97.7594%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (32 samples, 0.01%)</title><rect x="97.5094%" y="293" width="0.0102%" height="15" fill="rgb(217,86,53)" fg:x="307222" fg:w="32"/><text x="97.7594%" y="303.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (384 samples, 0.12%)</title><rect x="97.4368%" y="437" width="0.1219%" height="15" fill="rgb(228,157,16)" fg:x="306993" fg:w="384"/><text x="97.6868%" y="447.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::clone_weak_untyped (123 samples, 0.04%)</title><rect x="97.5196%" y="421" width="0.0390%" height="15" fill="rgb(217,59,31)" fg:x="307254" fg:w="123"/><text x="97.7696%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (106 samples, 0.03%)</title><rect x="97.6056%" y="229" width="0.0336%" height="15" fill="rgb(237,138,41)" fg:x="307525" fg:w="106"/><text x="97.8556%" y="239.50"></text></g><g><title>_int_free (38 samples, 0.01%)</title><rect x="97.7186%" y="101" width="0.0121%" height="15" fill="rgb(227,91,49)" fg:x="307881" fg:w="38"/><text x="97.9686%" y="111.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (375 samples, 0.12%)</title><rect x="97.6481%" y="213" width="0.1190%" height="15" fill="rgb(247,21,44)" fg:x="307659" fg:w="375"/><text x="97.8981%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (375 samples, 0.12%)</title><rect x="97.6481%" y="197" width="0.1190%" height="15" fill="rgb(219,210,51)" fg:x="307659" fg:w="375"/><text x="97.8981%" y="207.50"></text></g><g><title>alloc::alloc::realloc (375 samples, 0.12%)</title><rect x="97.6481%" y="181" width="0.1190%" height="15" fill="rgb(209,140,6)" fg:x="307659" fg:w="375"/><text x="97.8981%" y="191.50"></text></g><g><title>__rdl_realloc (375 samples, 0.12%)</title><rect x="97.6481%" y="165" width="0.1190%" height="15" fill="rgb(221,188,24)" fg:x="307659" fg:w="375"/><text x="97.8981%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (375 samples, 0.12%)</title><rect x="97.6481%" y="149" width="0.1190%" height="15" fill="rgb(232,154,20)" fg:x="307659" fg:w="375"/><text x="97.8981%" y="159.50"></text></g><g><title>__GI___libc_realloc (374 samples, 0.12%)</title><rect x="97.6485%" y="133" width="0.1187%" height="15" fill="rgb(244,137,50)" fg:x="307660" fg:w="374"/><text x="97.8985%" y="143.50"></text></g><g><title>_int_realloc (189 samples, 0.06%)</title><rect x="97.7072%" y="117" width="0.0600%" height="15" fill="rgb(225,185,43)" fg:x="307845" fg:w="189"/><text x="97.9572%" y="127.50"></text></g><g><title>_int_malloc (115 samples, 0.04%)</title><rect x="97.7307%" y="101" width="0.0365%" height="15" fill="rgb(213,205,38)" fg:x="307919" fg:w="115"/><text x="97.9807%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (427 samples, 0.14%)</title><rect x="97.6418%" y="229" width="0.1355%" height="15" fill="rgb(236,73,12)" fg:x="307639" fg:w="427"/><text x="97.8918%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (555 samples, 0.18%)</title><rect x="97.6047%" y="245" width="0.1762%" height="15" fill="rgb(235,219,13)" fg:x="307522" fg:w="555"/><text x="97.8547%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (572 samples, 0.18%)</title><rect x="97.5999%" y="293" width="0.1815%" height="15" fill="rgb(218,59,36)" fg:x="307507" fg:w="572"/><text x="97.8499%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (570 samples, 0.18%)</title><rect x="97.6005%" y="277" width="0.1809%" height="15" fill="rgb(205,110,39)" fg:x="307509" fg:w="570"/><text x="97.8505%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (560 samples, 0.18%)</title><rect x="97.6037%" y="261" width="0.1777%" height="15" fill="rgb(218,206,42)" fg:x="307519" fg:w="560"/><text x="97.8537%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (57 samples, 0.02%)</title><rect x="97.7814%" y="293" width="0.0181%" height="15" fill="rgb(248,125,24)" fg:x="308079" fg:w="57"/><text x="98.0314%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (57 samples, 0.02%)</title><rect x="97.7814%" y="277" width="0.0181%" height="15" fill="rgb(242,28,27)" fg:x="308079" fg:w="57"/><text x="98.0314%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (662 samples, 0.21%)</title><rect x="97.5910%" y="389" width="0.2101%" height="15" fill="rgb(216,228,15)" fg:x="307479" fg:w="662"/><text x="97.8410%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (655 samples, 0.21%)</title><rect x="97.5932%" y="373" width="0.2079%" height="15" fill="rgb(235,116,46)" fg:x="307486" fg:w="655"/><text x="97.8432%" y="383.50"></text></g><g><title>alloc::string::String::push_str (655 samples, 0.21%)</title><rect x="97.5932%" y="357" width="0.2079%" height="15" fill="rgb(224,18,32)" fg:x="307486" fg:w="655"/><text x="97.8432%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (655 samples, 0.21%)</title><rect x="97.5932%" y="341" width="0.2079%" height="15" fill="rgb(252,5,12)" fg:x="307486" fg:w="655"/><text x="97.8432%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (655 samples, 0.21%)</title><rect x="97.5932%" y="325" width="0.2079%" height="15" fill="rgb(251,36,5)" fg:x="307486" fg:w="655"/><text x="97.8432%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (647 samples, 0.21%)</title><rect x="97.5958%" y="309" width="0.2054%" height="15" fill="rgb(217,53,14)" fg:x="307494" fg:w="647"/><text x="97.8458%" y="319.50"></text></g><g><title>alloc::fmt::format (791 samples, 0.25%)</title><rect x="97.5586%" y="437" width="0.2511%" height="15" fill="rgb(215,86,45)" fg:x="307377" fg:w="791"/><text x="97.8086%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (768 samples, 0.24%)</title><rect x="97.5659%" y="421" width="0.2438%" height="15" fill="rgb(242,169,11)" fg:x="307400" fg:w="768"/><text x="97.8159%" y="431.50"></text></g><g><title>core::fmt::write (726 samples, 0.23%)</title><rect x="97.5793%" y="405" width="0.2304%" height="15" fill="rgb(211,213,45)" fg:x="307442" fg:w="726"/><text x="97.8293%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (143 samples, 0.05%)</title><rect x="97.8125%" y="373" width="0.0454%" height="15" fill="rgb(205,88,11)" fg:x="308177" fg:w="143"/><text x="98.0625%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (143 samples, 0.05%)</title><rect x="97.8125%" y="357" width="0.0454%" height="15" fill="rgb(252,69,26)" fg:x="308177" fg:w="143"/><text x="98.0625%" y="367.50"></text></g><g><title>__rdl_dealloc (143 samples, 0.05%)</title><rect x="97.8125%" y="341" width="0.0454%" height="15" fill="rgb(246,123,37)" fg:x="308177" fg:w="143"/><text x="98.0625%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (140 samples, 0.04%)</title><rect x="97.8135%" y="325" width="0.0444%" height="15" fill="rgb(212,205,5)" fg:x="308180" fg:w="140"/><text x="98.0635%" y="335.50"></text></g><g><title>__GI___libc_free (140 samples, 0.04%)</title><rect x="97.8135%" y="309" width="0.0444%" height="15" fill="rgb(253,148,0)" fg:x="308180" fg:w="140"/><text x="98.0635%" y="319.50"></text></g><g><title>_int_free (123 samples, 0.04%)</title><rect x="97.8189%" y="293" width="0.0390%" height="15" fill="rgb(239,22,4)" fg:x="308197" fg:w="123"/><text x="98.0689%" y="303.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (1,438 samples, 0.46%)</title><rect x="97.4025%" y="453" width="0.4564%" height="15" fill="rgb(226,26,53)" fg:x="306885" fg:w="1438"/><text x="97.6525%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (146 samples, 0.05%)</title><rect x="97.8125%" y="437" width="0.0463%" height="15" fill="rgb(225,229,45)" fg:x="308177" fg:w="146"/><text x="98.0625%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (146 samples, 0.05%)</title><rect x="97.8125%" y="421" width="0.0463%" height="15" fill="rgb(220,60,37)" fg:x="308177" fg:w="146"/><text x="98.0625%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (146 samples, 0.05%)</title><rect x="97.8125%" y="405" width="0.0463%" height="15" fill="rgb(217,180,35)" fg:x="308177" fg:w="146"/><text x="98.0625%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.05%)</title><rect x="97.8125%" y="389" width="0.0463%" height="15" fill="rgb(229,7,53)" fg:x="308177" fg:w="146"/><text x="98.0625%" y="399.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (63 samples, 0.02%)</title><rect x="97.8833%" y="421" width="0.0200%" height="15" fill="rgb(254,137,3)" fg:x="308400" fg:w="63"/><text x="98.1333%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (68 samples, 0.02%)</title><rect x="97.9125%" y="309" width="0.0216%" height="15" fill="rgb(215,140,41)" fg:x="308492" fg:w="68"/><text x="98.1625%" y="319.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (68 samples, 0.02%)</title><rect x="97.9125%" y="293" width="0.0216%" height="15" fill="rgb(250,80,15)" fg:x="308492" fg:w="68"/><text x="98.1625%" y="303.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (40 samples, 0.01%)</title><rect x="97.9214%" y="277" width="0.0127%" height="15" fill="rgb(252,191,6)" fg:x="308520" fg:w="40"/><text x="98.1714%" y="287.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (77 samples, 0.02%)</title><rect x="97.9125%" y="357" width="0.0244%" height="15" fill="rgb(246,217,18)" fg:x="308492" fg:w="77"/><text x="98.1625%" y="367.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (77 samples, 0.02%)</title><rect x="97.9125%" y="341" width="0.0244%" height="15" fill="rgb(223,93,7)" fg:x="308492" fg:w="77"/><text x="98.1625%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (77 samples, 0.02%)</title><rect x="97.9125%" y="325" width="0.0244%" height="15" fill="rgb(225,55,52)" fg:x="308492" fg:w="77"/><text x="98.1625%" y="335.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (84 samples, 0.03%)</title><rect x="97.9113%" y="373" width="0.0267%" height="15" fill="rgb(240,31,24)" fg:x="308488" fg:w="84"/><text x="98.1613%" y="383.50"></text></g><g><title>hashbrown::map::make_insert_hash (126 samples, 0.04%)</title><rect x="97.9068%" y="405" width="0.0400%" height="15" fill="rgb(205,56,52)" fg:x="308474" fg:w="126"/><text x="98.1568%" y="415.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (112 samples, 0.04%)</title><rect x="97.9113%" y="389" width="0.0355%" height="15" fill="rgb(246,146,12)" fg:x="308488" fg:w="112"/><text x="98.1613%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (34 samples, 0.01%)</title><rect x="97.9566%" y="341" width="0.0108%" height="15" fill="rgb(239,84,36)" fg:x="308631" fg:w="34"/><text x="98.2066%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (34 samples, 0.01%)</title><rect x="97.9566%" y="325" width="0.0108%" height="15" fill="rgb(207,41,40)" fg:x="308631" fg:w="34"/><text x="98.2066%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (34 samples, 0.01%)</title><rect x="97.9566%" y="309" width="0.0108%" height="15" fill="rgb(241,179,25)" fg:x="308631" fg:w="34"/><text x="98.2066%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (38 samples, 0.01%)</title><rect x="97.9563%" y="389" width="0.0121%" height="15" fill="rgb(210,0,34)" fg:x="308630" fg:w="38"/><text x="98.2063%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (38 samples, 0.01%)</title><rect x="97.9563%" y="373" width="0.0121%" height="15" fill="rgb(225,217,29)" fg:x="308630" fg:w="38"/><text x="98.2063%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (38 samples, 0.01%)</title><rect x="97.9563%" y="357" width="0.0121%" height="15" fill="rgb(216,191,38)" fg:x="308630" fg:w="38"/><text x="98.2063%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (737 samples, 0.23%)</title><rect x="97.9468%" y="405" width="0.2339%" height="15" fill="rgb(232,140,52)" fg:x="308600" fg:w="737"/><text x="98.1968%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (669 samples, 0.21%)</title><rect x="97.9684%" y="389" width="0.2123%" height="15" fill="rgb(223,158,51)" fg:x="308668" fg:w="669"/><text x="98.2184%" y="399.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (669 samples, 0.21%)</title><rect x="97.9684%" y="373" width="0.2123%" height="15" fill="rgb(235,29,51)" fg:x="308668" fg:w="669"/><text x="98.2184%" y="383.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (669 samples, 0.21%)</title><rect x="97.9684%" y="357" width="0.2123%" height="15" fill="rgb(215,181,18)" fg:x="308668" fg:w="669"/><text x="98.2184%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (884 samples, 0.28%)</title><rect x="97.9033%" y="421" width="0.2806%" height="15" fill="rgb(227,125,34)" fg:x="308463" fg:w="884"/><text x="98.1533%" y="431.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (1,033 samples, 0.33%)</title><rect x="97.8589%" y="453" width="0.3279%" height="15" fill="rgb(230,197,49)" fg:x="308323" fg:w="1033"/><text x="98.1089%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1,021 samples, 0.32%)</title><rect x="97.8627%" y="437" width="0.3241%" height="15" fill="rgb(239,141,16)" fg:x="308335" fg:w="1021"/><text x="98.1127%" y="447.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (5,046 samples, 1.60%)</title><rect x="96.5865%" y="789" width="1.6016%" height="15" fill="rgb(225,105,43)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="799.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (5,046 samples, 1.60%)</title><rect x="96.5865%" y="773" width="1.6016%" height="15" fill="rgb(214,131,14)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="783.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (5,046 samples, 1.60%)</title><rect x="96.5865%" y="757" width="1.6016%" height="15" fill="rgb(229,177,11)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="767.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (5,046 samples, 1.60%)</title><rect x="96.5865%" y="741" width="1.6016%" height="15" fill="rgb(231,180,14)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="751.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (5,046 samples, 1.60%)</title><rect x="96.5865%" y="725" width="1.6016%" height="15" fill="rgb(232,88,2)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="735.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (5,046 samples, 1.60%)</title><rect x="96.5865%" y="709" width="1.6016%" height="15" fill="rgb(205,220,8)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5,046 samples, 1.60%)</title><rect x="96.5865%" y="693" width="1.6016%" height="15" fill="rgb(225,23,53)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5,046 samples, 1.60%)</title><rect x="96.5865%" y="677" width="1.6016%" height="15" fill="rgb(213,62,29)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="687.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (5,046 samples, 1.60%)</title><rect x="96.5865%" y="661" width="1.6016%" height="15" fill="rgb(227,75,7)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="671.50"></text></g><g><title>async_executor::Executor::try_tick (5,046 samples, 1.60%)</title><rect x="96.5865%" y="645" width="1.6016%" height="15" fill="rgb(207,105,14)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="655.50"></text></g><g><title>async_task::runnable::Runnable::run (5,046 samples, 1.60%)</title><rect x="96.5865%" y="629" width="1.6016%" height="15" fill="rgb(245,62,29)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (5,046 samples, 1.60%)</title><rect x="96.5865%" y="613" width="1.6016%" height="15" fill="rgb(236,202,4)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,046 samples, 1.60%)</title><rect x="96.5865%" y="597" width="1.6016%" height="15" fill="rgb(250,67,1)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (5,046 samples, 1.60%)</title><rect x="96.5865%" y="581" width="1.6016%" height="15" fill="rgb(253,115,44)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5,046 samples, 1.60%)</title><rect x="96.5865%" y="565" width="1.6016%" height="15" fill="rgb(251,139,18)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="575.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (5,046 samples, 1.60%)</title><rect x="96.5865%" y="549" width="1.6016%" height="15" fill="rgb(218,22,32)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="559.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (5,046 samples, 1.60%)</title><rect x="96.5865%" y="533" width="1.6016%" height="15" fill="rgb(243,53,5)" fg:x="304314" fg:w="5046"/><text x="96.8365%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (3,485 samples, 1.11%)</title><rect x="97.0819%" y="517" width="1.1061%" height="15" fill="rgb(227,56,16)" fg:x="305875" fg:w="3485"/><text x="97.3319%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3,485 samples, 1.11%)</title><rect x="97.0819%" y="501" width="1.1061%" height="15" fill="rgb(245,53,0)" fg:x="305875" fg:w="3485"/><text x="97.3319%" y="511.50"></text></g><g><title>core::ops::function::Fn::call (3,485 samples, 1.11%)</title><rect x="97.0819%" y="485" width="1.1061%" height="15" fill="rgb(216,170,35)" fg:x="305875" fg:w="3485"/><text x="97.3319%" y="495.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (3,485 samples, 1.11%)</title><rect x="97.0819%" y="469" width="1.1061%" height="15" fill="rgb(211,200,8)" fg:x="305875" fg:w="3485"/><text x="97.3319%" y="479.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (57 samples, 0.02%)</title><rect x="98.1887%" y="613" width="0.0181%" height="15" fill="rgb(228,204,44)" fg:x="309362" fg:w="57"/><text x="98.4387%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (57 samples, 0.02%)</title><rect x="98.1887%" y="597" width="0.0181%" height="15" fill="rgb(214,121,17)" fg:x="309362" fg:w="57"/><text x="98.4387%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (57 samples, 0.02%)</title><rect x="98.1887%" y="581" width="0.0181%" height="15" fill="rgb(233,64,38)" fg:x="309362" fg:w="57"/><text x="98.4387%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (57 samples, 0.02%)</title><rect x="98.1887%" y="565" width="0.0181%" height="15" fill="rgb(253,54,19)" fg:x="309362" fg:w="57"/><text x="98.4387%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (57 samples, 0.02%)</title><rect x="98.1887%" y="549" width="0.0181%" height="15" fill="rgb(253,94,18)" fg:x="309362" fg:w="57"/><text x="98.4387%" y="559.50"></text></g><g><title>alloc::alloc::alloc (57 samples, 0.02%)</title><rect x="98.1887%" y="533" width="0.0181%" height="15" fill="rgb(227,57,52)" fg:x="309362" fg:w="57"/><text x="98.4387%" y="543.50"></text></g><g><title>__rdl_alloc (57 samples, 0.02%)</title><rect x="98.1887%" y="517" width="0.0181%" height="15" fill="rgb(230,228,50)" fg:x="309362" fg:w="57"/><text x="98.4387%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (57 samples, 0.02%)</title><rect x="98.1887%" y="501" width="0.0181%" height="15" fill="rgb(217,205,27)" fg:x="309362" fg:w="57"/><text x="98.4387%" y="511.50"></text></g><g><title>__GI___libc_malloc (57 samples, 0.02%)</title><rect x="98.1887%" y="485" width="0.0181%" height="15" fill="rgb(252,71,50)" fg:x="309362" fg:w="57"/><text x="98.4387%" y="495.50"></text></g><g><title>_int_malloc (44 samples, 0.01%)</title><rect x="98.1928%" y="469" width="0.0140%" height="15" fill="rgb(209,86,4)" fg:x="309375" fg:w="44"/><text x="98.4428%" y="479.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_bind_group (58 samples, 0.02%)</title><rect x="98.1887%" y="661" width="0.0184%" height="15" fill="rgb(229,94,0)" fg:x="309362" fg:w="58"/><text x="98.4387%" y="671.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (58 samples, 0.02%)</title><rect x="98.1887%" y="645" width="0.0184%" height="15" fill="rgb(252,223,21)" fg:x="309362" fg:w="58"/><text x="98.4387%" y="655.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (58 samples, 0.02%)</title><rect x="98.1887%" y="629" width="0.0184%" height="15" fill="rgb(230,210,4)" fg:x="309362" fg:w="58"/><text x="98.4387%" y="639.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (140 samples, 0.04%)</title><rect x="98.1887%" y="677" width="0.0444%" height="15" fill="rgb(240,149,38)" fg:x="309362" fg:w="140"/><text x="98.4387%" y="687.50"></text></g><g><title>wgpu_render_pass_set_bind_group (82 samples, 0.03%)</title><rect x="98.2071%" y="661" width="0.0260%" height="15" fill="rgb(254,105,20)" fg:x="309420" fg:w="82"/><text x="98.4571%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (52 samples, 0.02%)</title><rect x="98.2166%" y="645" width="0.0165%" height="15" fill="rgb(253,87,46)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (52 samples, 0.02%)</title><rect x="98.2166%" y="629" width="0.0165%" height="15" fill="rgb(253,116,33)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (52 samples, 0.02%)</title><rect x="98.2166%" y="613" width="0.0165%" height="15" fill="rgb(229,198,5)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (52 samples, 0.02%)</title><rect x="98.2166%" y="597" width="0.0165%" height="15" fill="rgb(242,38,37)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (52 samples, 0.02%)</title><rect x="98.2166%" y="581" width="0.0165%" height="15" fill="rgb(242,69,53)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (52 samples, 0.02%)</title><rect x="98.2166%" y="565" width="0.0165%" height="15" fill="rgb(249,80,16)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (52 samples, 0.02%)</title><rect x="98.2166%" y="549" width="0.0165%" height="15" fill="rgb(206,128,11)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (52 samples, 0.02%)</title><rect x="98.2166%" y="533" width="0.0165%" height="15" fill="rgb(212,35,20)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="543.50"></text></g><g><title>alloc::alloc::realloc (52 samples, 0.02%)</title><rect x="98.2166%" y="517" width="0.0165%" height="15" fill="rgb(236,79,13)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="527.50"></text></g><g><title>__rdl_realloc (52 samples, 0.02%)</title><rect x="98.2166%" y="501" width="0.0165%" height="15" fill="rgb(233,123,3)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (52 samples, 0.02%)</title><rect x="98.2166%" y="485" width="0.0165%" height="15" fill="rgb(214,93,52)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="495.50"></text></g><g><title>__GI___libc_realloc (52 samples, 0.02%)</title><rect x="98.2166%" y="469" width="0.0165%" height="15" fill="rgb(251,37,40)" fg:x="309450" fg:w="52"/><text x="98.4666%" y="479.50"></text></g><g><title>_int_realloc (47 samples, 0.01%)</title><rect x="98.2182%" y="453" width="0.0149%" height="15" fill="rgb(227,80,54)" fg:x="309455" fg:w="47"/><text x="98.4682%" y="463.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (147 samples, 0.05%)</title><rect x="98.1887%" y="709" width="0.0467%" height="15" fill="rgb(254,48,11)" fg:x="309362" fg:w="147"/><text x="98.4387%" y="719.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (147 samples, 0.05%)</title><rect x="98.1887%" y="693" width="0.0467%" height="15" fill="rgb(235,193,26)" fg:x="309362" fg:w="147"/><text x="98.4387%" y="703.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (179 samples, 0.06%)</title><rect x="98.2439%" y="613" width="0.0568%" height="15" fill="rgb(229,99,21)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="623.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (179 samples, 0.06%)</title><rect x="98.2439%" y="597" width="0.0568%" height="15" fill="rgb(211,140,41)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="607.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (179 samples, 0.06%)</title><rect x="98.2439%" y="581" width="0.0568%" height="15" fill="rgb(240,227,30)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="591.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (179 samples, 0.06%)</title><rect x="98.2439%" y="565" width="0.0568%" height="15" fill="rgb(215,224,45)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="575.50"></text></g><g><title>inplace_it::fixed_array::indirect (179 samples, 0.06%)</title><rect x="98.2439%" y="549" width="0.0568%" height="15" fill="rgb(206,123,31)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="559.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (179 samples, 0.06%)</title><rect x="98.2439%" y="533" width="0.0568%" height="15" fill="rgb(210,138,16)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="543.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (179 samples, 0.06%)</title><rect x="98.2439%" y="517" width="0.0568%" height="15" fill="rgb(228,57,28)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="527.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer::{{closure}} (179 samples, 0.06%)</title><rect x="98.2439%" y="501" width="0.0568%" height="15" fill="rgb(242,170,10)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="511.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_copy_buffer (179 samples, 0.06%)</title><rect x="98.2439%" y="485" width="0.0568%" height="15" fill="rgb(228,214,39)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="495.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_copy_buffer (179 samples, 0.06%)</title><rect x="98.2439%" y="469" width="0.0568%" height="15" fill="rgb(218,179,33)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (179 samples, 0.06%)</title><rect x="98.2439%" y="453" width="0.0568%" height="15" fill="rgb(235,193,39)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (179 samples, 0.06%)</title><rect x="98.2439%" y="437" width="0.0568%" height="15" fill="rgb(219,221,36)" fg:x="309536" fg:w="179"/><text x="98.4939%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (145 samples, 0.05%)</title><rect x="98.2547%" y="421" width="0.0460%" height="15" fill="rgb(248,218,19)" fg:x="309570" fg:w="145"/><text x="98.5047%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (438 samples, 0.14%)</title><rect x="98.3299%" y="597" width="0.1390%" height="15" fill="rgb(205,50,9)" fg:x="309807" fg:w="438"/><text x="98.5799%" y="607.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (34 samples, 0.01%)</title><rect x="98.4689%" y="597" width="0.0108%" height="15" fill="rgb(238,81,28)" fg:x="310245" fg:w="34"/><text x="98.7189%" y="607.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (34 samples, 0.01%)</title><rect x="98.4689%" y="581" width="0.0108%" height="15" fill="rgb(235,110,19)" fg:x="310245" fg:w="34"/><text x="98.7189%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (204 samples, 0.06%)</title><rect x="98.5527%" y="581" width="0.0647%" height="15" fill="rgb(214,7,14)" fg:x="310509" fg:w="204"/><text x="98.8027%" y="591.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (1,201 samples, 0.38%)</title><rect x="98.2369%" y="709" width="0.3812%" height="15" fill="rgb(211,77,3)" fg:x="309514" fg:w="1201"/><text x="98.4869%" y="719.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (1,201 samples, 0.38%)</title><rect x="98.2369%" y="693" width="0.3812%" height="15" fill="rgb(229,5,9)" fg:x="309514" fg:w="1201"/><text x="98.4869%" y="703.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (1,179 samples, 0.37%)</title><rect x="98.2439%" y="677" width="0.3742%" height="15" fill="rgb(225,90,11)" fg:x="309536" fg:w="1179"/><text x="98.4939%" y="687.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (1,179 samples, 0.37%)</title><rect x="98.2439%" y="661" width="0.3742%" height="15" fill="rgb(242,56,8)" fg:x="309536" fg:w="1179"/><text x="98.4939%" y="671.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (1,179 samples, 0.37%)</title><rect x="98.2439%" y="645" width="0.3742%" height="15" fill="rgb(249,212,39)" fg:x="309536" fg:w="1179"/><text x="98.4939%" y="655.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (1,179 samples, 0.37%)</title><rect x="98.2439%" y="629" width="0.3742%" height="15" fill="rgb(236,90,9)" fg:x="309536" fg:w="1179"/><text x="98.4939%" y="639.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (1,000 samples, 0.32%)</title><rect x="98.3007%" y="613" width="0.3174%" height="15" fill="rgb(206,88,35)" fg:x="309715" fg:w="1000"/><text x="98.5507%" y="623.50"></text></g><g><title>gfx_backend_vulkan::command::destructure_barriers (413 samples, 0.13%)</title><rect x="98.4870%" y="597" width="0.1311%" height="15" fill="rgb(205,126,30)" fg:x="310302" fg:w="413"/><text x="98.7370%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (35 samples, 0.01%)</title><rect x="98.6397%" y="533" width="0.0111%" height="15" fill="rgb(230,176,12)" fg:x="310783" fg:w="35"/><text x="98.8897%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (55 samples, 0.02%)</title><rect x="98.6359%" y="581" width="0.0175%" height="15" fill="rgb(243,19,9)" fg:x="310771" fg:w="55"/><text x="98.8859%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (55 samples, 0.02%)</title><rect x="98.6359%" y="565" width="0.0175%" height="15" fill="rgb(245,171,17)" fg:x="310771" fg:w="55"/><text x="98.8859%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (47 samples, 0.01%)</title><rect x="98.6384%" y="549" width="0.0149%" height="15" fill="rgb(227,52,21)" fg:x="310779" fg:w="47"/><text x="98.8884%" y="559.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_fence (59 samples, 0.02%)</title><rect x="98.6352%" y="661" width="0.0187%" height="15" fill="rgb(238,69,14)" fg:x="310769" fg:w="59"/><text x="98.8852%" y="671.50"></text></g><g><title>ash::device::DeviceV1_0::create_fence (59 samples, 0.02%)</title><rect x="98.6352%" y="645" width="0.0187%" height="15" fill="rgb(241,156,39)" fg:x="310769" fg:w="59"/><text x="98.8852%" y="655.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_fence (59 samples, 0.02%)</title><rect x="98.6352%" y="629" width="0.0187%" height="15" fill="rgb(212,227,28)" fg:x="310769" fg:w="59"/><text x="98.8852%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (59 samples, 0.02%)</title><rect x="98.6352%" y="613" width="0.0187%" height="15" fill="rgb(209,118,27)" fg:x="310769" fg:w="59"/><text x="98.8852%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (58 samples, 0.02%)</title><rect x="98.6355%" y="597" width="0.0184%" height="15" fill="rgb(226,102,5)" fg:x="310770" fg:w="58"/><text x="98.8855%" y="607.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (32 samples, 0.01%)</title><rect x="98.6695%" y="661" width="0.0102%" height="15" fill="rgb(223,34,3)" fg:x="310877" fg:w="32"/><text x="98.9195%" y="671.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (6,929 samples, 2.20%)</title><rect x="96.4839%" y="965" width="2.1992%" height="15" fill="rgb(221,81,38)" fg:x="303991" fg:w="6929"/><text x="96.7339%" y="975.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (6,929 samples, 2.20%)</title><rect x="96.4839%" y="949" width="2.1992%" height="15" fill="rgb(236,219,28)" fg:x="303991" fg:w="6929"/><text x="96.7339%" y="959.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (6,929 samples, 2.20%)</title><rect x="96.4839%" y="933" width="2.1992%" height="15" fill="rgb(213,200,14)" fg:x="303991" fg:w="6929"/><text x="96.7339%" y="943.50">w..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (6,929 samples, 2.20%)</title><rect x="96.4839%" y="917" width="2.1992%" height="15" fill="rgb(240,33,19)" fg:x="303991" fg:w="6929"/><text x="96.7339%" y="927.50">w..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (6,929 samples, 2.20%)</title><rect x="96.4839%" y="901" width="2.1992%" height="15" fill="rgb(233,113,27)" fg:x="303991" fg:w="6929"/><text x="96.7339%" y="911.50">b..</text></g><g><title>bevy_app::app::App::update (6,929 samples, 2.20%)</title><rect x="96.4839%" y="885" width="2.1992%" height="15" fill="rgb(220,221,18)" fg:x="303991" fg:w="6929"/><text x="96.7339%" y="895.50">b..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (6,929 samples, 2.20%)</title><rect x="96.4839%" y="869" width="2.1992%" height="15" fill="rgb(238,92,8)" fg:x="303991" fg:w="6929"/><text x="96.7339%" y="879.50">&lt;..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (6,929 samples, 2.20%)</title><rect x="96.4839%" y="853" width="2.1992%" height="15" fill="rgb(222,164,16)" fg:x="303991" fg:w="6929"/><text x="96.7339%" y="863.50">b..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (6,921 samples, 2.20%)</title><rect x="96.4865%" y="837" width="2.1967%" height="15" fill="rgb(241,119,3)" fg:x="303999" fg:w="6921"/><text x="96.7365%" y="847.50">&lt;..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (6,606 samples, 2.10%)</title><rect x="96.5865%" y="821" width="2.0967%" height="15" fill="rgb(241,44,8)" fg:x="304314" fg:w="6606"/><text x="96.8365%" y="831.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (6,606 samples, 2.10%)</title><rect x="96.5865%" y="805" width="2.0967%" height="15" fill="rgb(230,36,40)" fg:x="304314" fg:w="6606"/><text x="96.8365%" y="815.50">&lt;..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (1,560 samples, 0.50%)</title><rect x="98.1880%" y="789" width="0.4951%" height="15" fill="rgb(243,16,36)" fg:x="309360" fg:w="1560"/><text x="98.4380%" y="799.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (1,558 samples, 0.49%)</title><rect x="98.1887%" y="773" width="0.4945%" height="15" fill="rgb(231,4,26)" fg:x="309362" fg:w="1558"/><text x="98.4387%" y="783.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (1,558 samples, 0.49%)</title><rect x="98.1887%" y="757" width="0.4945%" height="15" fill="rgb(240,9,31)" fg:x="309362" fg:w="1558"/><text x="98.4387%" y="767.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (1,558 samples, 0.49%)</title><rect x="98.1887%" y="741" width="0.4945%" height="15" fill="rgb(207,173,15)" fg:x="309362" fg:w="1558"/><text x="98.4387%" y="751.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (1,558 samples, 0.49%)</title><rect x="98.1887%" y="725" width="0.4945%" height="15" fill="rgb(224,192,53)" fg:x="309362" fg:w="1558"/><text x="98.4387%" y="735.50"></text></g><g><title>wgpu::Queue::submit (205 samples, 0.07%)</title><rect x="98.6181%" y="709" width="0.0651%" height="15" fill="rgb(223,67,28)" fg:x="310715" fg:w="205"/><text x="98.8681%" y="719.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (205 samples, 0.07%)</title><rect x="98.6181%" y="693" width="0.0651%" height="15" fill="rgb(211,20,47)" fg:x="310715" fg:w="205"/><text x="98.8681%" y="703.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (205 samples, 0.07%)</title><rect x="98.6181%" y="677" width="0.0651%" height="15" fill="rgb(240,228,2)" fg:x="310715" fg:w="205"/><text x="98.8681%" y="687.50"></text></g><g><title>&lt;f32 as bevy_render::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (84 samples, 0.03%)</title><rect x="98.6911%" y="389" width="0.0267%" height="15" fill="rgb(248,151,12)" fg:x="310945" fg:w="84"/><text x="98.9411%" y="399.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (83 samples, 0.03%)</title><rect x="98.6914%" y="373" width="0.0263%" height="15" fill="rgb(244,8,39)" fg:x="310946" fg:w="83"/><text x="98.9414%" y="383.50"></text></g><g><title>[libm-2.33.so] (80 samples, 0.03%)</title><rect x="98.6923%" y="357" width="0.0254%" height="15" fill="rgb(222,26,8)" fg:x="310949" fg:w="80"/><text x="98.9423%" y="367.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (134 samples, 0.04%)</title><rect x="98.6870%" y="421" width="0.0425%" height="15" fill="rgb(213,106,44)" fg:x="310932" fg:w="134"/><text x="98.9370%" y="431.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (134 samples, 0.04%)</title><rect x="98.6870%" y="405" width="0.0425%" height="15" fill="rgb(214,129,20)" fg:x="310932" fg:w="134"/><text x="98.9370%" y="415.50"></text></g><g><title>[libm-2.33.so] (37 samples, 0.01%)</title><rect x="98.7177%" y="389" width="0.0117%" height="15" fill="rgb(212,32,13)" fg:x="311029" fg:w="37"/><text x="98.9677%" y="399.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (47 samples, 0.01%)</title><rect x="98.7311%" y="405" width="0.0149%" height="15" fill="rgb(208,168,33)" fg:x="311071" fg:w="47"/><text x="98.9811%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (47 samples, 0.01%)</title><rect x="98.7311%" y="389" width="0.0149%" height="15" fill="rgb(231,207,8)" fg:x="311071" fg:w="47"/><text x="98.9811%" y="399.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (47 samples, 0.01%)</title><rect x="98.7311%" y="373" width="0.0149%" height="15" fill="rgb(235,219,23)" fg:x="311071" fg:w="47"/><text x="98.9811%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (47 samples, 0.01%)</title><rect x="98.7311%" y="357" width="0.0149%" height="15" fill="rgb(226,216,26)" fg:x="311071" fg:w="47"/><text x="98.9811%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (47 samples, 0.01%)</title><rect x="98.7311%" y="341" width="0.0149%" height="15" fill="rgb(239,137,16)" fg:x="311071" fg:w="47"/><text x="98.9811%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (47 samples, 0.01%)</title><rect x="98.7311%" y="325" width="0.0149%" height="15" fill="rgb(207,12,36)" fg:x="311071" fg:w="47"/><text x="98.9811%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (47 samples, 0.01%)</title><rect x="98.7311%" y="309" width="0.0149%" height="15" fill="rgb(210,214,24)" fg:x="311071" fg:w="47"/><text x="98.9811%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (47 samples, 0.01%)</title><rect x="98.7311%" y="293" width="0.0149%" height="15" fill="rgb(206,56,30)" fg:x="311071" fg:w="47"/><text x="98.9811%" y="303.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding as core::cmp::PartialEq&gt;::ne (45 samples, 0.01%)</title><rect x="98.7485%" y="373" width="0.0143%" height="15" fill="rgb(228,143,26)" fg:x="311126" fg:w="45"/><text x="98.9985%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (49 samples, 0.02%)</title><rect x="98.7485%" y="389" width="0.0156%" height="15" fill="rgb(216,218,46)" fg:x="311126" fg:w="49"/><text x="98.9985%" y="399.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (133 samples, 0.04%)</title><rect x="98.7707%" y="325" width="0.0422%" height="15" fill="rgb(206,6,19)" fg:x="311196" fg:w="133"/><text x="99.0207%" y="335.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (133 samples, 0.04%)</title><rect x="98.7707%" y="309" width="0.0422%" height="15" fill="rgb(239,177,51)" fg:x="311196" fg:w="133"/><text x="99.0207%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (191 samples, 0.06%)</title><rect x="98.7641%" y="341" width="0.0606%" height="15" fill="rgb(216,55,25)" fg:x="311175" fg:w="191"/><text x="99.0141%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (37 samples, 0.01%)</title><rect x="98.8130%" y="325" width="0.0117%" height="15" fill="rgb(231,163,29)" fg:x="311329" fg:w="37"/><text x="99.0630%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (51 samples, 0.02%)</title><rect x="98.8399%" y="245" width="0.0162%" height="15" fill="rgb(232,149,50)" fg:x="311414" fg:w="51"/><text x="99.0899%" y="255.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (57 samples, 0.02%)</title><rect x="98.8383%" y="293" width="0.0181%" height="15" fill="rgb(223,142,48)" fg:x="311409" fg:w="57"/><text x="99.0883%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (57 samples, 0.02%)</title><rect x="98.8383%" y="277" width="0.0181%" height="15" fill="rgb(245,83,23)" fg:x="311409" fg:w="57"/><text x="99.0883%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (57 samples, 0.02%)</title><rect x="98.8383%" y="261" width="0.0181%" height="15" fill="rgb(224,63,2)" fg:x="311409" fg:w="57"/><text x="99.0883%" y="271.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (795 samples, 0.25%)</title><rect x="98.8564%" y="245" width="0.2523%" height="15" fill="rgb(218,65,53)" fg:x="311466" fg:w="795"/><text x="99.1064%" y="255.50"></text></g><g><title>__memcmp_avx2_movbe (444 samples, 0.14%)</title><rect x="98.9678%" y="229" width="0.1409%" height="15" fill="rgb(221,84,29)" fg:x="311817" fg:w="444"/><text x="99.2178%" y="239.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (860 samples, 0.27%)</title><rect x="98.8383%" y="309" width="0.2730%" height="15" fill="rgb(234,0,32)" fg:x="311409" fg:w="860"/><text x="99.0883%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (803 samples, 0.25%)</title><rect x="98.8564%" y="293" width="0.2549%" height="15" fill="rgb(206,20,16)" fg:x="311466" fg:w="803"/><text x="99.1064%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (803 samples, 0.25%)</title><rect x="98.8564%" y="277" width="0.2549%" height="15" fill="rgb(244,172,18)" fg:x="311466" fg:w="803"/><text x="99.1064%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (803 samples, 0.25%)</title><rect x="98.8564%" y="261" width="0.2549%" height="15" fill="rgb(254,133,1)" fg:x="311466" fg:w="803"/><text x="99.1064%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (256 samples, 0.08%)</title><rect x="99.1221%" y="261" width="0.0813%" height="15" fill="rgb(222,206,41)" fg:x="312303" fg:w="256"/><text x="99.3721%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (256 samples, 0.08%)</title><rect x="99.1221%" y="245" width="0.0813%" height="15" fill="rgb(212,3,42)" fg:x="312303" fg:w="256"/><text x="99.3721%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (256 samples, 0.08%)</title><rect x="99.1221%" y="229" width="0.0813%" height="15" fill="rgb(241,11,4)" fg:x="312303" fg:w="256"/><text x="99.3721%" y="239.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::try_set_dirty (1,441 samples, 0.46%)</title><rect x="98.7479%" y="405" width="0.4574%" height="15" fill="rgb(205,19,26)" fg:x="311124" fg:w="1441"/><text x="98.9979%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,390 samples, 0.44%)</title><rect x="98.7641%" y="389" width="0.4412%" height="15" fill="rgb(210,179,32)" fg:x="311175" fg:w="1390"/><text x="99.0141%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,390 samples, 0.44%)</title><rect x="98.7641%" y="373" width="0.4412%" height="15" fill="rgb(227,116,49)" fg:x="311175" fg:w="1390"/><text x="99.0141%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,390 samples, 0.44%)</title><rect x="98.7641%" y="357" width="0.4412%" height="15" fill="rgb(211,146,6)" fg:x="311175" fg:w="1390"/><text x="99.0141%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,199 samples, 0.38%)</title><rect x="98.8247%" y="341" width="0.3806%" height="15" fill="rgb(219,44,39)" fg:x="311366" fg:w="1199"/><text x="99.0747%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,198 samples, 0.38%)</title><rect x="98.8250%" y="325" width="0.3802%" height="15" fill="rgb(234,128,11)" fg:x="311367" fg:w="1198"/><text x="99.0750%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (290 samples, 0.09%)</title><rect x="99.1132%" y="309" width="0.0920%" height="15" fill="rgb(220,183,53)" fg:x="312275" fg:w="290"/><text x="99.3632%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (290 samples, 0.09%)</title><rect x="99.1132%" y="293" width="0.0920%" height="15" fill="rgb(213,219,32)" fg:x="312275" fg:w="290"/><text x="99.3632%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (290 samples, 0.09%)</title><rect x="99.1132%" y="277" width="0.0920%" height="15" fill="rgb(232,156,16)" fg:x="312275" fg:w="290"/><text x="99.3632%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (70 samples, 0.02%)</title><rect x="99.2192%" y="373" width="0.0222%" height="15" fill="rgb(246,135,34)" fg:x="312609" fg:w="70"/><text x="99.4692%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (70 samples, 0.02%)</title><rect x="99.2192%" y="357" width="0.0222%" height="15" fill="rgb(241,99,0)" fg:x="312609" fg:w="70"/><text x="99.4692%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (70 samples, 0.02%)</title><rect x="99.2192%" y="341" width="0.0222%" height="15" fill="rgb(222,103,45)" fg:x="312609" fg:w="70"/><text x="99.4692%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (70 samples, 0.02%)</title><rect x="99.2192%" y="325" width="0.0222%" height="15" fill="rgb(212,57,4)" fg:x="312609" fg:w="70"/><text x="99.4692%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (70 samples, 0.02%)</title><rect x="99.2192%" y="309" width="0.0222%" height="15" fill="rgb(215,68,47)" fg:x="312609" fg:w="70"/><text x="99.4692%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (70 samples, 0.02%)</title><rect x="99.2192%" y="293" width="0.0222%" height="15" fill="rgb(230,84,2)" fg:x="312609" fg:w="70"/><text x="99.4692%" y="303.50"></text></g><g><title>__rdl_dealloc (70 samples, 0.02%)</title><rect x="99.2192%" y="277" width="0.0222%" height="15" fill="rgb(220,102,14)" fg:x="312609" fg:w="70"/><text x="99.4692%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (66 samples, 0.02%)</title><rect x="99.2205%" y="261" width="0.0209%" height="15" fill="rgb(240,10,32)" fg:x="312613" fg:w="66"/><text x="99.4705%" y="271.50"></text></g><g><title>__GI___libc_free (66 samples, 0.02%)</title><rect x="99.2205%" y="245" width="0.0209%" height="15" fill="rgb(215,47,27)" fg:x="312613" fg:w="66"/><text x="99.4705%" y="255.50"></text></g><g><title>_int_free (44 samples, 0.01%)</title><rect x="99.2275%" y="229" width="0.0140%" height="15" fill="rgb(233,188,43)" fg:x="312635" fg:w="44"/><text x="99.4775%" y="239.50"></text></g><g><title>ahash::operations::folded_multiply (33 samples, 0.01%)</title><rect x="99.2414%" y="341" width="0.0105%" height="15" fill="rgb(253,190,1)" fg:x="312679" fg:w="33"/><text x="99.4914%" y="351.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (34 samples, 0.01%)</title><rect x="99.2414%" y="357" width="0.0108%" height="15" fill="rgb(206,114,52)" fg:x="312679" fg:w="34"/><text x="99.4914%" y="367.50"></text></g><g><title>hashbrown::map::make_insert_hash (136 samples, 0.04%)</title><rect x="99.2414%" y="373" width="0.0432%" height="15" fill="rgb(233,120,37)" fg:x="312679" fg:w="136"/><text x="99.4914%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (96 samples, 0.03%)</title><rect x="99.2541%" y="357" width="0.0305%" height="15" fill="rgb(214,52,39)" fg:x="312719" fg:w="96"/><text x="99.5041%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (85 samples, 0.03%)</title><rect x="99.2576%" y="341" width="0.0270%" height="15" fill="rgb(223,80,29)" fg:x="312730" fg:w="85"/><text x="99.5076%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (71 samples, 0.02%)</title><rect x="99.3021%" y="261" width="0.0225%" height="15" fill="rgb(230,101,40)" fg:x="312870" fg:w="71"/><text x="99.5521%" y="271.50"></text></g><g><title>__memcmp_avx2_movbe (45 samples, 0.01%)</title><rect x="99.3103%" y="245" width="0.0143%" height="15" fill="rgb(219,211,8)" fg:x="312896" fg:w="45"/><text x="99.5603%" y="255.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (83 samples, 0.03%)</title><rect x="99.3008%" y="341" width="0.0263%" height="15" fill="rgb(252,126,28)" fg:x="312866" fg:w="83"/><text x="99.5508%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (83 samples, 0.03%)</title><rect x="99.3008%" y="325" width="0.0263%" height="15" fill="rgb(215,56,38)" fg:x="312866" fg:w="83"/><text x="99.5508%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (79 samples, 0.03%)</title><rect x="99.3021%" y="309" width="0.0251%" height="15" fill="rgb(249,55,44)" fg:x="312870" fg:w="79"/><text x="99.5521%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (79 samples, 0.03%)</title><rect x="99.3021%" y="293" width="0.0251%" height="15" fill="rgb(220,221,32)" fg:x="312870" fg:w="79"/><text x="99.5521%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (79 samples, 0.03%)</title><rect x="99.3021%" y="277" width="0.0251%" height="15" fill="rgb(212,216,41)" fg:x="312870" fg:w="79"/><text x="99.5521%" y="287.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (2,056 samples, 0.65%)</title><rect x="98.6870%" y="533" width="0.6526%" height="15" fill="rgb(228,213,43)" fg:x="310932" fg:w="2056"/><text x="98.9370%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,056 samples, 0.65%)</title><rect x="98.6870%" y="517" width="0.6526%" height="15" fill="rgb(211,31,26)" fg:x="310932" fg:w="2056"/><text x="98.9370%" y="527.50"></text></g><g><title>core::ops::function::Fn::call (2,056 samples, 0.65%)</title><rect x="98.6870%" y="501" width="0.6526%" height="15" fill="rgb(229,202,19)" fg:x="310932" fg:w="2056"/><text x="98.9370%" y="511.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (2,056 samples, 0.65%)</title><rect x="98.6870%" y="485" width="0.6526%" height="15" fill="rgb(229,105,46)" fg:x="310932" fg:w="2056"/><text x="98.9370%" y="495.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (2,056 samples, 0.65%)</title><rect x="98.6870%" y="469" width="0.6526%" height="15" fill="rgb(235,108,1)" fg:x="310932" fg:w="2056"/><text x="98.9370%" y="479.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (2,056 samples, 0.65%)</title><rect x="98.6870%" y="453" width="0.6526%" height="15" fill="rgb(245,111,35)" fg:x="310932" fg:w="2056"/><text x="98.9370%" y="463.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (2,056 samples, 0.65%)</title><rect x="98.6870%" y="437" width="0.6526%" height="15" fill="rgb(219,185,31)" fg:x="310932" fg:w="2056"/><text x="98.9370%" y="447.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (1,922 samples, 0.61%)</title><rect x="98.7295%" y="421" width="0.6100%" height="15" fill="rgb(214,4,43)" fg:x="311066" fg:w="1922"/><text x="98.9795%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (423 samples, 0.13%)</title><rect x="99.2053%" y="405" width="0.1343%" height="15" fill="rgb(235,227,40)" fg:x="312565" fg:w="423"/><text x="99.4553%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (403 samples, 0.13%)</title><rect x="99.2116%" y="389" width="0.1279%" height="15" fill="rgb(230,88,30)" fg:x="312585" fg:w="403"/><text x="99.4616%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (173 samples, 0.05%)</title><rect x="99.2846%" y="373" width="0.0549%" height="15" fill="rgb(216,217,1)" fg:x="312815" fg:w="173"/><text x="99.5346%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (167 samples, 0.05%)</title><rect x="99.2865%" y="357" width="0.0530%" height="15" fill="rgb(248,139,50)" fg:x="312821" fg:w="167"/><text x="99.5365%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (34 samples, 0.01%)</title><rect x="99.3287%" y="341" width="0.0108%" height="15" fill="rgb(233,1,21)" fg:x="312954" fg:w="34"/><text x="99.5787%" y="351.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (34 samples, 0.01%)</title><rect x="99.3287%" y="325" width="0.0108%" height="15" fill="rgb(215,183,12)" fg:x="312954" fg:w="34"/><text x="99.5787%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (32 samples, 0.01%)</title><rect x="99.3294%" y="309" width="0.0102%" height="15" fill="rgb(229,104,42)" fg:x="312956" fg:w="32"/><text x="99.5794%" y="319.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (59 samples, 0.02%)</title><rect x="99.3395%" y="469" width="0.0187%" height="15" fill="rgb(243,34,48)" fg:x="312988" fg:w="59"/><text x="99.5895%" y="479.50"></text></g><g><title>wgpu::Device::poll (59 samples, 0.02%)</title><rect x="99.3395%" y="453" width="0.0187%" height="15" fill="rgb(239,11,44)" fg:x="312988" fg:w="59"/><text x="99.5895%" y="463.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (59 samples, 0.02%)</title><rect x="99.3395%" y="437" width="0.0187%" height="15" fill="rgb(231,98,35)" fg:x="312988" fg:w="59"/><text x="99.5895%" y="447.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (59 samples, 0.02%)</title><rect x="99.3395%" y="421" width="0.0187%" height="15" fill="rgb(233,28,25)" fg:x="312988" fg:w="59"/><text x="99.5895%" y="431.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (59 samples, 0.02%)</title><rect x="99.3395%" y="405" width="0.0187%" height="15" fill="rgb(234,123,11)" fg:x="312988" fg:w="59"/><text x="99.5895%" y="415.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (52 samples, 0.02%)</title><rect x="99.3417%" y="389" width="0.0165%" height="15" fill="rgb(220,69,3)" fg:x="312995" fg:w="52"/><text x="99.5917%" y="399.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (2,127 samples, 0.68%)</title><rect x="98.6866%" y="805" width="0.6751%" height="15" fill="rgb(214,64,36)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="815.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (2,127 samples, 0.68%)</title><rect x="98.6866%" y="789" width="0.6751%" height="15" fill="rgb(211,138,32)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="799.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,127 samples, 0.68%)</title><rect x="98.6866%" y="773" width="0.6751%" height="15" fill="rgb(213,118,47)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="783.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (2,127 samples, 0.68%)</title><rect x="98.6866%" y="757" width="0.6751%" height="15" fill="rgb(243,124,49)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="767.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (2,127 samples, 0.68%)</title><rect x="98.6866%" y="741" width="0.6751%" height="15" fill="rgb(221,30,28)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="751.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (2,127 samples, 0.68%)</title><rect x="98.6866%" y="725" width="0.6751%" height="15" fill="rgb(246,37,13)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,127 samples, 0.68%)</title><rect x="98.6866%" y="709" width="0.6751%" height="15" fill="rgb(249,66,14)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,127 samples, 0.68%)</title><rect x="98.6866%" y="693" width="0.6751%" height="15" fill="rgb(213,166,5)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="703.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (2,127 samples, 0.68%)</title><rect x="98.6866%" y="677" width="0.6751%" height="15" fill="rgb(221,66,24)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="687.50"></text></g><g><title>async_executor::Executor::try_tick (2,127 samples, 0.68%)</title><rect x="98.6866%" y="661" width="0.6751%" height="15" fill="rgb(210,132,17)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="671.50"></text></g><g><title>async_task::runnable::Runnable::run (2,127 samples, 0.68%)</title><rect x="98.6866%" y="645" width="0.6751%" height="15" fill="rgb(243,202,5)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,127 samples, 0.68%)</title><rect x="98.6866%" y="629" width="0.6751%" height="15" fill="rgb(233,70,48)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,127 samples, 0.68%)</title><rect x="98.6866%" y="613" width="0.6751%" height="15" fill="rgb(238,41,26)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,127 samples, 0.68%)</title><rect x="98.6866%" y="597" width="0.6751%" height="15" fill="rgb(241,19,31)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,127 samples, 0.68%)</title><rect x="98.6866%" y="581" width="0.6751%" height="15" fill="rgb(214,76,10)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,127 samples, 0.68%)</title><rect x="98.6866%" y="565" width="0.6751%" height="15" fill="rgb(254,202,22)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="575.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,127 samples, 0.68%)</title><rect x="98.6866%" y="549" width="0.6751%" height="15" fill="rgb(214,72,24)" fg:x="310931" fg:w="2127"/><text x="98.9366%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (70 samples, 0.02%)</title><rect x="99.3395%" y="533" width="0.0222%" height="15" fill="rgb(221,92,46)" fg:x="312988" fg:w="70"/><text x="99.5895%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (70 samples, 0.02%)</title><rect x="99.3395%" y="517" width="0.0222%" height="15" fill="rgb(246,13,50)" fg:x="312988" fg:w="70"/><text x="99.5895%" y="527.50"></text></g><g><title>core::ops::function::Fn::call (70 samples, 0.02%)</title><rect x="99.3395%" y="501" width="0.0222%" height="15" fill="rgb(240,165,38)" fg:x="312988" fg:w="70"/><text x="99.5895%" y="511.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (70 samples, 0.02%)</title><rect x="99.3395%" y="485" width="0.0222%" height="15" fill="rgb(241,24,51)" fg:x="312988" fg:w="70"/><text x="99.5895%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (38 samples, 0.01%)</title><rect x="99.3703%" y="405" width="0.0121%" height="15" fill="rgb(227,51,44)" fg:x="313085" fg:w="38"/><text x="99.6203%" y="415.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (68 samples, 0.02%)</title><rect x="99.3617%" y="789" width="0.0216%" height="15" fill="rgb(231,121,3)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (68 samples, 0.02%)</title><rect x="99.3617%" y="773" width="0.0216%" height="15" fill="rgb(245,3,41)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (68 samples, 0.02%)</title><rect x="99.3617%" y="757" width="0.0216%" height="15" fill="rgb(214,13,26)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (68 samples, 0.02%)</title><rect x="99.3617%" y="741" width="0.0216%" height="15" fill="rgb(252,75,11)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (68 samples, 0.02%)</title><rect x="99.3617%" y="725" width="0.0216%" height="15" fill="rgb(218,226,17)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (68 samples, 0.02%)</title><rect x="99.3617%" y="709" width="0.0216%" height="15" fill="rgb(248,89,38)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (68 samples, 0.02%)</title><rect x="99.3617%" y="693" width="0.0216%" height="15" fill="rgb(237,73,46)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (68 samples, 0.02%)</title><rect x="99.3617%" y="677" width="0.0216%" height="15" fill="rgb(242,78,33)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (68 samples, 0.02%)</title><rect x="99.3617%" y="661" width="0.0216%" height="15" fill="rgb(235,60,3)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (68 samples, 0.02%)</title><rect x="99.3617%" y="645" width="0.0216%" height="15" fill="rgb(216,172,19)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="655.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (68 samples, 0.02%)</title><rect x="99.3617%" y="629" width="0.0216%" height="15" fill="rgb(227,6,42)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (68 samples, 0.02%)</title><rect x="99.3617%" y="613" width="0.0216%" height="15" fill="rgb(223,207,42)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="623.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (68 samples, 0.02%)</title><rect x="99.3617%" y="597" width="0.0216%" height="15" fill="rgb(246,138,30)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="607.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (68 samples, 0.02%)</title><rect x="99.3617%" y="581" width="0.0216%" height="15" fill="rgb(251,199,47)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="591.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (68 samples, 0.02%)</title><rect x="99.3617%" y="565" width="0.0216%" height="15" fill="rgb(228,218,44)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="575.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (68 samples, 0.02%)</title><rect x="99.3617%" y="549" width="0.0216%" height="15" fill="rgb(220,68,6)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (68 samples, 0.02%)</title><rect x="99.3617%" y="533" width="0.0216%" height="15" fill="rgb(240,60,26)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (68 samples, 0.02%)</title><rect x="99.3617%" y="517" width="0.0216%" height="15" fill="rgb(211,200,19)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (68 samples, 0.02%)</title><rect x="99.3617%" y="501" width="0.0216%" height="15" fill="rgb(242,145,30)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (68 samples, 0.02%)</title><rect x="99.3617%" y="485" width="0.0216%" height="15" fill="rgb(225,64,13)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (68 samples, 0.02%)</title><rect x="99.3617%" y="469" width="0.0216%" height="15" fill="rgb(218,103,35)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (68 samples, 0.02%)</title><rect x="99.3617%" y="453" width="0.0216%" height="15" fill="rgb(216,93,46)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (68 samples, 0.02%)</title><rect x="99.3617%" y="437" width="0.0216%" height="15" fill="rgb(225,159,27)" fg:x="313058" fg:w="68"/><text x="99.6117%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (52 samples, 0.02%)</title><rect x="99.3668%" y="421" width="0.0165%" height="15" fill="rgb(225,204,11)" fg:x="313074" fg:w="52"/><text x="99.6168%" y="431.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (714 samples, 0.23%)</title><rect x="99.3843%" y="725" width="0.2266%" height="15" fill="rgb(205,56,4)" fg:x="313129" fg:w="714"/><text x="99.6343%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (714 samples, 0.23%)</title><rect x="99.3843%" y="709" width="0.2266%" height="15" fill="rgb(206,6,35)" fg:x="313129" fg:w="714"/><text x="99.6343%" y="719.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (710 samples, 0.23%)</title><rect x="99.3855%" y="693" width="0.2253%" height="15" fill="rgb(247,73,52)" fg:x="313133" fg:w="710"/><text x="99.6355%" y="703.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (710 samples, 0.23%)</title><rect x="99.3855%" y="677" width="0.2253%" height="15" fill="rgb(246,97,4)" fg:x="313133" fg:w="710"/><text x="99.6355%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (710 samples, 0.23%)</title><rect x="99.3855%" y="661" width="0.2253%" height="15" fill="rgb(212,37,15)" fg:x="313133" fg:w="710"/><text x="99.6355%" y="671.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (710 samples, 0.23%)</title><rect x="99.3855%" y="645" width="0.2253%" height="15" fill="rgb(208,130,40)" fg:x="313133" fg:w="710"/><text x="99.6355%" y="655.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (710 samples, 0.23%)</title><rect x="99.3855%" y="629" width="0.2253%" height="15" fill="rgb(236,55,29)" fg:x="313133" fg:w="710"/><text x="99.6355%" y="639.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (710 samples, 0.23%)</title><rect x="99.3855%" y="613" width="0.2253%" height="15" fill="rgb(209,156,45)" fg:x="313133" fg:w="710"/><text x="99.6355%" y="623.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (710 samples, 0.23%)</title><rect x="99.3855%" y="597" width="0.2253%" height="15" fill="rgb(249,107,4)" fg:x="313133" fg:w="710"/><text x="99.6355%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (710 samples, 0.23%)</title><rect x="99.3855%" y="581" width="0.2253%" height="15" fill="rgb(227,7,13)" fg:x="313133" fg:w="710"/><text x="99.6355%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (600 samples, 0.19%)</title><rect x="99.4204%" y="565" width="0.1904%" height="15" fill="rgb(250,129,14)" fg:x="313243" fg:w="600"/><text x="99.6704%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (265 samples, 0.08%)</title><rect x="99.5268%" y="549" width="0.0841%" height="15" fill="rgb(229,92,13)" fg:x="313578" fg:w="265"/><text x="99.7768%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.03%)</title><rect x="99.5849%" y="533" width="0.0260%" height="15" fill="rgb(245,98,39)" fg:x="313761" fg:w="82"/><text x="99.8349%" y="543.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (38 samples, 0.01%)</title><rect x="99.6109%" y="677" width="0.0121%" height="15" fill="rgb(234,135,48)" fg:x="313843" fg:w="38"/><text x="99.8609%" y="687.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (38 samples, 0.01%)</title><rect x="99.6109%" y="661" width="0.0121%" height="15" fill="rgb(230,98,28)" fg:x="313843" fg:w="38"/><text x="99.8609%" y="671.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (38 samples, 0.01%)</title><rect x="99.6109%" y="645" width="0.0121%" height="15" fill="rgb(223,121,0)" fg:x="313843" fg:w="38"/><text x="99.8609%" y="655.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (38 samples, 0.01%)</title><rect x="99.6109%" y="629" width="0.0121%" height="15" fill="rgb(234,173,33)" fg:x="313843" fg:w="38"/><text x="99.8609%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (38 samples, 0.01%)</title><rect x="99.6109%" y="613" width="0.0121%" height="15" fill="rgb(245,47,8)" fg:x="313843" fg:w="38"/><text x="99.8609%" y="623.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (2,969 samples, 0.94%)</title><rect x="98.6831%" y="965" width="0.9423%" height="15" fill="rgb(205,17,20)" fg:x="310920" fg:w="2969"/><text x="98.9331%" y="975.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (2,969 samples, 0.94%)</title><rect x="98.6831%" y="949" width="0.9423%" height="15" fill="rgb(232,151,16)" fg:x="310920" fg:w="2969"/><text x="98.9331%" y="959.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (2,969 samples, 0.94%)</title><rect x="98.6831%" y="933" width="0.9423%" height="15" fill="rgb(208,30,32)" fg:x="310920" fg:w="2969"/><text x="98.9331%" y="943.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (2,969 samples, 0.94%)</title><rect x="98.6831%" y="917" width="0.9423%" height="15" fill="rgb(254,26,3)" fg:x="310920" fg:w="2969"/><text x="98.9331%" y="927.50"></text></g><g><title>bevy_app::app::App::update (2,969 samples, 0.94%)</title><rect x="98.6831%" y="901" width="0.9423%" height="15" fill="rgb(240,177,30)" fg:x="310920" fg:w="2969"/><text x="98.9331%" y="911.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (2,969 samples, 0.94%)</title><rect x="98.6831%" y="885" width="0.9423%" height="15" fill="rgb(248,76,44)" fg:x="310920" fg:w="2969"/><text x="98.9331%" y="895.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,969 samples, 0.94%)</title><rect x="98.6831%" y="869" width="0.9423%" height="15" fill="rgb(241,186,54)" fg:x="310920" fg:w="2969"/><text x="98.9331%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (2,966 samples, 0.94%)</title><rect x="98.6841%" y="853" width="0.9414%" height="15" fill="rgb(249,171,29)" fg:x="310923" fg:w="2966"/><text x="98.9341%" y="863.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (2,958 samples, 0.94%)</title><rect x="98.6866%" y="837" width="0.9388%" height="15" fill="rgb(237,151,44)" fg:x="310931" fg:w="2958"/><text x="98.9366%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (2,958 samples, 0.94%)</title><rect x="98.6866%" y="821" width="0.9388%" height="15" fill="rgb(228,174,30)" fg:x="310931" fg:w="2958"/><text x="98.9366%" y="831.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (831 samples, 0.26%)</title><rect x="99.3617%" y="805" width="0.2638%" height="15" fill="rgb(252,14,37)" fg:x="313058" fg:w="831"/><text x="99.6117%" y="815.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (763 samples, 0.24%)</title><rect x="99.3833%" y="789" width="0.2422%" height="15" fill="rgb(207,111,40)" fg:x="313126" fg:w="763"/><text x="99.6333%" y="799.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (763 samples, 0.24%)</title><rect x="99.3833%" y="773" width="0.2422%" height="15" fill="rgb(248,171,54)" fg:x="313126" fg:w="763"/><text x="99.6333%" y="783.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (763 samples, 0.24%)</title><rect x="99.3833%" y="757" width="0.2422%" height="15" fill="rgb(211,127,2)" fg:x="313126" fg:w="763"/><text x="99.6333%" y="767.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (763 samples, 0.24%)</title><rect x="99.3833%" y="741" width="0.2422%" height="15" fill="rgb(236,87,47)" fg:x="313126" fg:w="763"/><text x="99.6333%" y="751.50"></text></g><g><title>wgpu::Queue::submit (46 samples, 0.01%)</title><rect x="99.6109%" y="725" width="0.0146%" height="15" fill="rgb(223,190,45)" fg:x="313843" fg:w="46"/><text x="99.8609%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (46 samples, 0.01%)</title><rect x="99.6109%" y="709" width="0.0146%" height="15" fill="rgb(215,5,16)" fg:x="313843" fg:w="46"/><text x="99.8609%" y="719.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (46 samples, 0.01%)</title><rect x="99.6109%" y="693" width="0.0146%" height="15" fill="rgb(252,82,33)" fg:x="313843" fg:w="46"/><text x="99.8609%" y="703.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (34 samples, 0.01%)</title><rect x="99.6366%" y="693" width="0.0108%" height="15" fill="rgb(247,213,44)" fg:x="313924" fg:w="34"/><text x="99.8866%" y="703.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (34 samples, 0.01%)</title><rect x="99.6366%" y="677" width="0.0108%" height="15" fill="rgb(205,196,44)" fg:x="313924" fg:w="34"/><text x="99.8866%" y="687.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (34 samples, 0.01%)</title><rect x="99.6366%" y="661" width="0.0108%" height="15" fill="rgb(237,96,54)" fg:x="313924" fg:w="34"/><text x="99.8866%" y="671.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (34 samples, 0.01%)</title><rect x="99.6366%" y="645" width="0.0108%" height="15" fill="rgb(230,113,34)" fg:x="313924" fg:w="34"/><text x="99.8866%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (34 samples, 0.01%)</title><rect x="99.6366%" y="629" width="0.0108%" height="15" fill="rgb(221,224,12)" fg:x="313924" fg:w="34"/><text x="99.8866%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (34 samples, 0.01%)</title><rect x="99.6366%" y="613" width="0.0108%" height="15" fill="rgb(219,112,44)" fg:x="313924" fg:w="34"/><text x="99.8866%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (34 samples, 0.01%)</title><rect x="99.6366%" y="597" width="0.0108%" height="15" fill="rgb(210,31,13)" fg:x="313924" fg:w="34"/><text x="99.8866%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (34 samples, 0.01%)</title><rect x="99.6366%" y="581" width="0.0108%" height="15" fill="rgb(230,25,16)" fg:x="313924" fg:w="34"/><text x="99.8866%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (34 samples, 0.01%)</title><rect x="99.6366%" y="565" width="0.0108%" height="15" fill="rgb(246,108,53)" fg:x="313924" fg:w="34"/><text x="99.8866%" y="575.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (90 samples, 0.03%)</title><rect x="99.6255%" y="965" width="0.0286%" height="15" fill="rgb(241,172,50)" fg:x="313889" fg:w="90"/><text x="99.8755%" y="975.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (90 samples, 0.03%)</title><rect x="99.6255%" y="949" width="0.0286%" height="15" fill="rgb(235,141,10)" fg:x="313889" fg:w="90"/><text x="99.8755%" y="959.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (90 samples, 0.03%)</title><rect x="99.6255%" y="933" width="0.0286%" height="15" fill="rgb(220,174,43)" fg:x="313889" fg:w="90"/><text x="99.8755%" y="943.50"></text></g><g><title>bevy_app::app::App::update (90 samples, 0.03%)</title><rect x="99.6255%" y="917" width="0.0286%" height="15" fill="rgb(215,181,40)" fg:x="313889" fg:w="90"/><text x="99.8755%" y="927.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (90 samples, 0.03%)</title><rect x="99.6255%" y="901" width="0.0286%" height="15" fill="rgb(230,97,2)" fg:x="313889" fg:w="90"/><text x="99.8755%" y="911.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (90 samples, 0.03%)</title><rect x="99.6255%" y="885" width="0.0286%" height="15" fill="rgb(211,25,27)" fg:x="313889" fg:w="90"/><text x="99.8755%" y="895.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (85 samples, 0.03%)</title><rect x="99.6271%" y="869" width="0.0270%" height="15" fill="rgb(230,87,26)" fg:x="313894" fg:w="85"/><text x="99.8771%" y="879.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (84 samples, 0.03%)</title><rect x="99.6274%" y="853" width="0.0267%" height="15" fill="rgb(227,160,17)" fg:x="313895" fg:w="84"/><text x="99.8774%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (84 samples, 0.03%)</title><rect x="99.6274%" y="837" width="0.0267%" height="15" fill="rgb(244,85,34)" fg:x="313895" fg:w="84"/><text x="99.8774%" y="847.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (78 samples, 0.02%)</title><rect x="99.6293%" y="821" width="0.0248%" height="15" fill="rgb(207,70,0)" fg:x="313901" fg:w="78"/><text x="99.8793%" y="831.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (61 samples, 0.02%)</title><rect x="99.6347%" y="805" width="0.0194%" height="15" fill="rgb(223,129,7)" fg:x="313918" fg:w="61"/><text x="99.8847%" y="815.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (61 samples, 0.02%)</title><rect x="99.6347%" y="789" width="0.0194%" height="15" fill="rgb(246,105,7)" fg:x="313918" fg:w="61"/><text x="99.8847%" y="799.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (61 samples, 0.02%)</title><rect x="99.6347%" y="773" width="0.0194%" height="15" fill="rgb(215,154,42)" fg:x="313918" fg:w="61"/><text x="99.8847%" y="783.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (61 samples, 0.02%)</title><rect x="99.6347%" y="757" width="0.0194%" height="15" fill="rgb(220,215,30)" fg:x="313918" fg:w="61"/><text x="99.8847%" y="767.50"></text></g><g><title>wgpu::Queue::submit (55 samples, 0.02%)</title><rect x="99.6366%" y="741" width="0.0175%" height="15" fill="rgb(228,81,51)" fg:x="313924" fg:w="55"/><text x="99.8866%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (55 samples, 0.02%)</title><rect x="99.6366%" y="725" width="0.0175%" height="15" fill="rgb(247,71,54)" fg:x="313924" fg:w="55"/><text x="99.8866%" y="735.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (55 samples, 0.02%)</title><rect x="99.6366%" y="709" width="0.0175%" height="15" fill="rgb(234,176,34)" fg:x="313924" fg:w="55"/><text x="99.8866%" y="719.50"></text></g><g><title>glslang::TPpContext::tokenize (35 samples, 0.01%)</title><rect x="99.6791%" y="917" width="0.0111%" height="15" fill="rgb(241,103,54)" fg:x="314058" fg:w="35"/><text x="99.9291%" y="927.50"></text></g><g><title>[unknown] (250,818 samples, 79.61%)</title><rect x="20.0896%" y="981" width="79.6073%" height="15" fill="rgb(228,22,34)" fg:x="63296" fg:w="250818"/><text x="20.3396%" y="991.50">[unknown]</text></g><g><title>yyparse (129 samples, 0.04%)</title><rect x="99.6559%" y="965" width="0.0409%" height="15" fill="rgb(241,179,48)" fg:x="313985" fg:w="129"/><text x="99.9059%" y="975.50"></text></g><g><title>yylex (59 samples, 0.02%)</title><rect x="99.6782%" y="949" width="0.0187%" height="15" fill="rgb(235,167,37)" fg:x="314055" fg:w="59"/><text x="99.9282%" y="959.50"></text></g><g><title>glslang::TScanContext::tokenize (59 samples, 0.02%)</title><rect x="99.6782%" y="933" width="0.0187%" height="15" fill="rgb(213,109,30)" fg:x="314055" fg:w="59"/><text x="99.9282%" y="943.50"></text></g><g><title>__GI___clone (88 samples, 0.03%)</title><rect x="99.6969%" y="981" width="0.0279%" height="15" fill="rgb(222,172,16)" fg:x="314114" fg:w="88"/><text x="99.9469%" y="991.50"></text></g><g><title>start_thread (34 samples, 0.01%)</title><rect x="99.7140%" y="965" width="0.0108%" height="15" fill="rgb(233,192,5)" fg:x="314168" fg:w="34"/><text x="99.9640%" y="975.50"></text></g><g><title>[libudev.so.1.7.2] (44 samples, 0.01%)</title><rect x="99.7435%" y="501" width="0.0140%" height="15" fill="rgb(247,189,41)" fg:x="314261" fg:w="44"/><text x="99.9935%" y="511.50"></text></g><g><title>[libudev.so.1.7.2] (71 samples, 0.02%)</title><rect x="99.7420%" y="517" width="0.0225%" height="15" fill="rgb(218,134,47)" fg:x="314256" fg:w="71"/><text x="99.9920%" y="527.50"></text></g><g><title>[libudev.so.1.7.2] (95 samples, 0.03%)</title><rect x="99.7410%" y="533" width="0.0302%" height="15" fill="rgb(216,29,3)" fg:x="314253" fg:w="95"/><text x="99.9910%" y="543.50"></text></g><g><title>[libudev.so.1.7.2] (102 samples, 0.03%)</title><rect x="99.7407%" y="549" width="0.0324%" height="15" fill="rgb(246,140,12)" fg:x="314252" fg:w="102"/><text x="99.9907%" y="559.50"></text></g><g><title>[libudev.so.1.7.2] (107 samples, 0.03%)</title><rect x="99.7401%" y="565" width="0.0340%" height="15" fill="rgb(230,136,11)" fg:x="314250" fg:w="107"/><text x="99.9901%" y="575.50"></text></g><g><title>&lt;bevy_gilrs::GilrsPlugin as bevy_app::plugin::Plugin&gt;::build (115 samples, 0.04%)</title><rect x="99.7385%" y="693" width="0.0365%" height="15" fill="rgb(247,22,47)" fg:x="314245" fg:w="115"/><text x="99.9885%" y="703.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (115 samples, 0.04%)</title><rect x="99.7385%" y="677" width="0.0365%" height="15" fill="rgb(218,84,22)" fg:x="314245" fg:w="115"/><text x="99.9885%" y="687.50"></text></g><g><title>gilrs_core::Gilrs::new (113 samples, 0.04%)</title><rect x="99.7391%" y="661" width="0.0359%" height="15" fill="rgb(216,87,39)" fg:x="314247" fg:w="113"/><text x="99.9891%" y="671.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (113 samples, 0.04%)</title><rect x="99.7391%" y="645" width="0.0359%" height="15" fill="rgb(221,178,8)" fg:x="314247" fg:w="113"/><text x="99.9891%" y="655.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (113 samples, 0.04%)</title><rect x="99.7391%" y="629" width="0.0359%" height="15" fill="rgb(230,42,11)" fg:x="314247" fg:w="113"/><text x="99.9891%" y="639.50"></text></g><g><title>udev_enumerate_scan_devices (113 samples, 0.04%)</title><rect x="99.7391%" y="613" width="0.0359%" height="15" fill="rgb(237,229,4)" fg:x="314247" fg:w="113"/><text x="99.9891%" y="623.50"></text></g><g><title>[libudev.so.1.7.2] (113 samples, 0.04%)</title><rect x="99.7391%" y="597" width="0.0359%" height="15" fill="rgb(222,31,33)" fg:x="314247" fg:w="113"/><text x="99.9891%" y="607.50"></text></g><g><title>[libudev.so.1.7.2] (113 samples, 0.04%)</title><rect x="99.7391%" y="581" width="0.0359%" height="15" fill="rgb(210,17,39)" fg:x="314247" fg:w="113"/><text x="99.9891%" y="591.50"></text></g><g><title>__libc_start_main (127 samples, 0.04%)</title><rect x="99.7350%" y="965" width="0.0403%" height="15" fill="rgb(244,93,20)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="975.50"></text></g><g><title>main (127 samples, 0.04%)</title><rect x="99.7350%" y="949" width="0.0403%" height="15" fill="rgb(210,40,47)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="959.50"></text></g><g><title>std::rt::lang_start_internal (127 samples, 0.04%)</title><rect x="99.7350%" y="933" width="0.0403%" height="15" fill="rgb(239,211,47)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="943.50"></text></g><g><title>std::panic::catch_unwind (127 samples, 0.04%)</title><rect x="99.7350%" y="917" width="0.0403%" height="15" fill="rgb(251,223,49)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="927.50"></text></g><g><title>std::panicking::try (127 samples, 0.04%)</title><rect x="99.7350%" y="901" width="0.0403%" height="15" fill="rgb(221,149,5)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="911.50"></text></g><g><title>std::panicking::try::do_call (127 samples, 0.04%)</title><rect x="99.7350%" y="885" width="0.0403%" height="15" fill="rgb(219,224,51)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="895.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (127 samples, 0.04%)</title><rect x="99.7350%" y="869" width="0.0403%" height="15" fill="rgb(223,7,8)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="879.50"></text></g><g><title>std::panic::catch_unwind (127 samples, 0.04%)</title><rect x="99.7350%" y="853" width="0.0403%" height="15" fill="rgb(241,217,22)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="863.50"></text></g><g><title>std::panicking::try (127 samples, 0.04%)</title><rect x="99.7350%" y="837" width="0.0403%" height="15" fill="rgb(248,209,0)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="847.50"></text></g><g><title>std::panicking::try::do_call (127 samples, 0.04%)</title><rect x="99.7350%" y="821" width="0.0403%" height="15" fill="rgb(217,205,4)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (127 samples, 0.04%)</title><rect x="99.7350%" y="805" width="0.0403%" height="15" fill="rgb(228,124,39)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="815.50"></text></g><g><title>std::rt::lang_start::{{closure}} (127 samples, 0.04%)</title><rect x="99.7350%" y="789" width="0.0403%" height="15" fill="rgb(250,116,42)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (127 samples, 0.04%)</title><rect x="99.7350%" y="773" width="0.0403%" height="15" fill="rgb(223,202,9)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (127 samples, 0.04%)</title><rect x="99.7350%" y="757" width="0.0403%" height="15" fill="rgb(242,222,40)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="767.50"></text></g><g><title>engine::main (127 samples, 0.04%)</title><rect x="99.7350%" y="741" width="0.0403%" height="15" fill="rgb(229,99,46)" fg:x="314234" fg:w="127"/><text x="99.9850%" y="751.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_plugins (125 samples, 0.04%)</title><rect x="99.7356%" y="725" width="0.0397%" height="15" fill="rgb(225,56,46)" fg:x="314236" fg:w="125"/><text x="99.9856%" y="735.50"></text></g><g><title>bevy_app::plugin_group::PluginGroupBuilder::finish (125 samples, 0.04%)</title><rect x="99.7356%" y="709" width="0.0397%" height="15" fill="rgb(227,94,5)" fg:x="314236" fg:w="125"/><text x="99.9856%" y="719.50"></text></g><g><title>_start (141 samples, 0.04%)</title><rect x="99.7334%" y="981" width="0.0448%" height="15" fill="rgb(205,112,38)" fg:x="314229" fg:w="141"/><text x="99.9834%" y="991.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (201 samples, 0.06%)</title><rect x="99.7889%" y="981" width="0.0638%" height="15" fill="rgb(231,133,46)" fg:x="314404" fg:w="201"/><text x="100.0389%" y="991.50"></text></g><g><title>engine (262,281 samples, 83.25%)</title><rect x="16.6313%" y="997" width="83.2456%" height="15" fill="rgb(217,16,9)" fg:x="52400" fg:w="262281"/><text x="16.8813%" y="1007.50">engine</text></g><g><title>[anon] (63 samples, 0.02%)</title><rect x="99.8911%" y="981" width="0.0200%" height="15" fill="rgb(249,173,9)" fg:x="314726" fg:w="63"/><text x="100.1411%" y="991.50"></text></g><g><title>[unknown] (43 samples, 0.01%)</title><rect x="99.9121%" y="981" width="0.0136%" height="15" fill="rgb(205,163,53)" fg:x="314792" fg:w="43"/><text x="100.1621%" y="991.50"></text></g><g><title>[libpulse.so.0.24.0] (33 samples, 0.01%)</title><rect x="99.9381%" y="805" width="0.0105%" height="15" fill="rgb(217,54,41)" fg:x="314874" fg:w="33"/><text x="100.1881%" y="815.50"></text></g><g><title>pa_pdispatch_run (33 samples, 0.01%)</title><rect x="99.9381%" y="789" width="0.0105%" height="15" fill="rgb(228,216,12)" fg:x="314874" fg:w="33"/><text x="100.1881%" y="799.50"></text></g><g><title>[libpulsecommon-15.0.so] (68 samples, 0.02%)</title><rect x="99.9346%" y="821" width="0.0216%" height="15" fill="rgb(244,228,15)" fg:x="314863" fg:w="68"/><text x="100.1846%" y="831.50"></text></g><g><title>[libpulsecommon-15.0.so] (75 samples, 0.02%)</title><rect x="99.9333%" y="837" width="0.0238%" height="15" fill="rgb(221,176,53)" fg:x="314859" fg:w="75"/><text x="100.1833%" y="847.50"></text></g><g><title>[libpulsecommon-15.0.so] (113 samples, 0.04%)</title><rect x="99.9314%" y="853" width="0.0359%" height="15" fill="rgb(205,94,34)" fg:x="314853" fg:w="113"/><text x="100.1814%" y="863.50"></text></g><g><title>[libpulsecommon-15.0.so] (125 samples, 0.04%)</title><rect x="99.9302%" y="869" width="0.0397%" height="15" fill="rgb(213,110,48)" fg:x="314849" fg:w="125"/><text x="100.1802%" y="879.50"></text></g><g><title>pa_mainloop_dispatch (140 samples, 0.04%)</title><rect x="99.9280%" y="885" width="0.0444%" height="15" fill="rgb(236,142,28)" fg:x="314842" fg:w="140"/><text x="100.1780%" y="895.50"></text></g><g><title>__GI___poll (37 samples, 0.01%)</title><rect x="99.9743%" y="853" width="0.0117%" height="15" fill="rgb(225,135,29)" fg:x="314988" fg:w="37"/><text x="100.2243%" y="863.50"></text></g><g><title>pa_mainloop_poll (65 samples, 0.02%)</title><rect x="99.9724%" y="885" width="0.0206%" height="15" fill="rgb(252,45,31)" fg:x="314982" fg:w="65"/><text x="100.2224%" y="895.50"></text></g><g><title>[libpulse.so.0.24.0] (61 samples, 0.02%)</title><rect x="99.9737%" y="869" width="0.0194%" height="15" fill="rgb(211,187,50)" fg:x="314986" fg:w="61"/><text x="100.2237%" y="879.50"></text></g><g><title>__GI___clone (232 samples, 0.07%)</title><rect x="99.9257%" y="981" width="0.0736%" height="15" fill="rgb(229,109,7)" fg:x="314835" fg:w="232"/><text x="100.1757%" y="991.50"></text></g><g><title>start_thread (232 samples, 0.07%)</title><rect x="99.9257%" y="965" width="0.0736%" height="15" fill="rgb(251,131,51)" fg:x="314835" fg:w="232"/><text x="100.1757%" y="975.50"></text></g><g><title>[libpulsecommon-15.0.so] (232 samples, 0.07%)</title><rect x="99.9257%" y="949" width="0.0736%" height="15" fill="rgb(251,180,35)" fg:x="314835" fg:w="232"/><text x="100.1757%" y="959.50"></text></g><g><title>[libpulse.so.0.24.0] (232 samples, 0.07%)</title><rect x="99.9257%" y="933" width="0.0736%" height="15" fill="rgb(211,46,32)" fg:x="314835" fg:w="232"/><text x="100.1757%" y="943.50"></text></g><g><title>pa_mainloop_run (232 samples, 0.07%)</title><rect x="99.9257%" y="917" width="0.0736%" height="15" fill="rgb(248,123,17)" fg:x="314835" fg:w="232"/><text x="100.1757%" y="927.50"></text></g><g><title>pa_mainloop_iterate (231 samples, 0.07%)</title><rect x="99.9260%" y="901" width="0.0733%" height="15" fill="rgb(227,141,18)" fg:x="314836" fg:w="231"/><text x="100.1760%" y="911.50"></text></g><g><title>all (315,069 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(216,102,9)" fg:x="0" fg:w="315069"/><text x="0.2500%" y="1023.50"></text></g><g><title>threaded-ml (388 samples, 0.12%)</title><rect x="99.8769%" y="997" width="0.1231%" height="15" fill="rgb(253,47,13)" fg:x="314681" fg:w="388"/><text x="100.1269%" y="1007.50"></text></g></svg></svg>