<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1606" onload="init(evt)" viewBox="0 0 1200 1606" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1606" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1589.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1589.00"> </text><svg id="frames" x="10" width="1180" total_samples="8149"><g><title>Async_Compute_T (1 samples, 0.01%)</title><rect x="0.0000%" y="1541" width="0.0123%" height="15" fill="rgb(227,0,7)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1551.50"></text></g><g><title>__GI___clone (1 samples, 0.01%)</title><rect x="0.0000%" y="1525" width="0.0123%" height="15" fill="rgb(217,0,24)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1535.50"></text></g><g><title>start_thread (1 samples, 0.01%)</title><rect x="0.0000%" y="1509" width="0.0123%" height="15" fill="rgb(221,193,54)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1519.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1 samples, 0.01%)</title><rect x="0.0000%" y="1493" width="0.0123%" height="15" fill="rgb(248,212,6)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="0.0000%" y="1477" width="0.0123%" height="15" fill="rgb(208,68,35)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="0.0000%" y="1461" width="0.0123%" height="15" fill="rgb(232,128,0)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1471.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.01%)</title><rect x="0.0000%" y="1445" width="0.0123%" height="15" fill="rgb(207,160,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1455.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1 samples, 0.01%)</title><rect x="0.0000%" y="1429" width="0.0123%" height="15" fill="rgb(228,23,34)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="0.0000%" y="1413" width="0.0123%" height="15" fill="rgb(218,30,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1423.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="0.0000%" y="1397" width="0.0123%" height="15" fill="rgb(220,122,19)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="0.0000%" y="1381" width="0.0123%" height="15" fill="rgb(250,228,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="0.0000%" y="1365" width="0.0123%" height="15" fill="rgb(240,193,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1375.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="0.0000%" y="1349" width="0.0123%" height="15" fill="rgb(216,20,37)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1359.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.01%)</title><rect x="0.0000%" y="1333" width="0.0123%" height="15" fill="rgb(206,188,39)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1343.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="0.0000%" y="1317" width="0.0123%" height="15" fill="rgb(217,207,13)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1327.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.01%)</title><rect x="0.0000%" y="1301" width="0.0123%" height="15" fill="rgb(231,73,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="0.0000%" y="1285" width="0.0123%" height="15" fill="rgb(225,20,46)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="0.0000%" y="1269" width="0.0123%" height="15" fill="rgb(210,31,41)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1279.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.01%)</title><rect x="0.0000%" y="1253" width="0.0123%" height="15" fill="rgb(221,200,47)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="0.0000%" y="1237" width="0.0123%" height="15" fill="rgb(226,26,5)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1247.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.01%)</title><rect x="0.0000%" y="1221" width="0.0123%" height="15" fill="rgb(249,33,26)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1231.50"></text></g><g><title>async_executor::Runner::new (1 samples, 0.01%)</title><rect x="0.0000%" y="1205" width="0.0123%" height="15" fill="rgb(235,183,28)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1215.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::bounded (1 samples, 0.01%)</title><rect x="0.0000%" y="1189" width="0.0123%" height="15" fill="rgb(221,5,38)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1199.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="0.0000%" y="1173" width="0.0123%" height="15" fill="rgb(247,18,42)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="0.0000%" y="1157" width="0.0123%" height="15" fill="rgb(241,131,45)" fg:x="0" fg:w="1"/><text x="0.2500%" y="1167.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (2 samples, 0.02%)</title><rect x="1.3867%" y="1509" width="0.0245%" height="15" fill="rgb(249,31,29)" fg:x="113" fg:w="2"/><text x="1.6367%" y="1519.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1.4112%" y="1509" width="0.0123%" height="15" fill="rgb(225,111,53)" fg:x="115" fg:w="1"/><text x="1.6612%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1.4235%" y="1509" width="0.0123%" height="15" fill="rgb(238,160,17)" fg:x="116" fg:w="1"/><text x="1.6735%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="1.4358%" y="1509" width="0.0123%" height="15" fill="rgb(214,148,48)" fg:x="117" fg:w="1"/><text x="1.6858%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="1.4358%" y="1493" width="0.0123%" height="15" fill="rgb(232,36,49)" fg:x="117" fg:w="1"/><text x="1.6858%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="1.4358%" y="1477" width="0.0123%" height="15" fill="rgb(209,103,24)" fg:x="117" fg:w="1"/><text x="1.6858%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="1.4358%" y="1461" width="0.0123%" height="15" fill="rgb(229,88,8)" fg:x="117" fg:w="1"/><text x="1.6858%" y="1471.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="1.4358%" y="1445" width="0.0123%" height="15" fill="rgb(213,181,19)" fg:x="117" fg:w="1"/><text x="1.6858%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="1.4358%" y="1429" width="0.0123%" height="15" fill="rgb(254,191,54)" fg:x="117" fg:w="1"/><text x="1.6858%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="1.4358%" y="1413" width="0.0123%" height="15" fill="rgb(241,83,37)" fg:x="117" fg:w="1"/><text x="1.6858%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="1.4358%" y="1397" width="0.0123%" height="15" fill="rgb(233,36,39)" fg:x="117" fg:w="1"/><text x="1.6858%" y="1407.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="1.4358%" y="1381" width="0.0123%" height="15" fill="rgb(226,3,54)" fg:x="117" fg:w="1"/><text x="1.6858%" y="1391.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="1.4358%" y="1365" width="0.0123%" height="15" fill="rgb(245,192,40)" fg:x="117" fg:w="1"/><text x="1.6858%" y="1375.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.06%)</title><rect x="1.4480%" y="1509" width="0.0614%" height="15" fill="rgb(238,167,29)" fg:x="118" fg:w="5"/><text x="1.6980%" y="1519.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="1.5094%" y="1509" width="0.0491%" height="15" fill="rgb(232,182,51)" fg:x="123" fg:w="4"/><text x="1.7594%" y="1519.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="1.5339%" y="1493" width="0.0245%" height="15" fill="rgb(231,60,39)" fg:x="125" fg:w="2"/><text x="1.7839%" y="1503.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="1.5339%" y="1477" width="0.0245%" height="15" fill="rgb(208,69,12)" fg:x="125" fg:w="2"/><text x="1.7839%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2 samples, 0.02%)</title><rect x="1.5339%" y="1461" width="0.0245%" height="15" fill="rgb(235,93,37)" fg:x="125" fg:w="2"/><text x="1.7839%" y="1471.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="1.5339%" y="1445" width="0.0245%" height="15" fill="rgb(213,116,39)" fg:x="125" fg:w="2"/><text x="1.7839%" y="1455.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1.5585%" y="1509" width="0.0123%" height="15" fill="rgb(222,207,29)" fg:x="127" fg:w="1"/><text x="1.8085%" y="1519.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (3 samples, 0.04%)</title><rect x="1.5707%" y="1509" width="0.0368%" height="15" fill="rgb(206,96,30)" fg:x="128" fg:w="3"/><text x="1.8207%" y="1519.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.01%)</title><rect x="1.5953%" y="1493" width="0.0123%" height="15" fill="rgb(218,138,4)" fg:x="130" fg:w="1"/><text x="1.8453%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::native_gpu_future::GpuFuture&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="1.5953%" y="1477" width="0.0123%" height="15" fill="rgb(250,191,14)" fg:x="130" fg:w="1"/><text x="1.8453%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;wgpu::backend::native_gpu_future::WakerOrResult&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="1.5953%" y="1461" width="0.0123%" height="15" fill="rgb(239,60,40)" fg:x="130" fg:w="1"/><text x="1.8453%" y="1471.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1.5953%" y="1445" width="0.0123%" height="15" fill="rgb(206,27,48)" fg:x="130" fg:w="1"/><text x="1.8453%" y="1455.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (1 samples, 0.01%)</title><rect x="1.6076%" y="1509" width="0.0123%" height="15" fill="rgb(225,35,8)" fg:x="131" fg:w="1"/><text x="1.8576%" y="1519.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (5 samples, 0.06%)</title><rect x="1.7057%" y="1493" width="0.0614%" height="15" fill="rgb(250,213,24)" fg:x="139" fg:w="5"/><text x="1.9557%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="1.7548%" y="1477" width="0.0123%" height="15" fill="rgb(247,123,22)" fg:x="143" fg:w="1"/><text x="2.0048%" y="1487.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (58 samples, 0.71%)</title><rect x="1.6198%" y="1509" width="0.7117%" height="15" fill="rgb(231,138,38)" fg:x="132" fg:w="58"/><text x="1.8698%" y="1519.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (46 samples, 0.56%)</title><rect x="1.7671%" y="1493" width="0.5645%" height="15" fill="rgb(231,145,46)" fg:x="144" fg:w="46"/><text x="2.0171%" y="1503.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="2.3316%" y="1509" width="0.0123%" height="15" fill="rgb(251,118,11)" fg:x="190" fg:w="1"/><text x="2.5816%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.01%)</title><rect x="2.3316%" y="1493" width="0.0123%" height="15" fill="rgb(217,147,25)" fg:x="190" fg:w="1"/><text x="2.5816%" y="1503.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="2.3316%" y="1477" width="0.0123%" height="15" fill="rgb(247,81,37)" fg:x="190" fg:w="1"/><text x="2.5816%" y="1487.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="2.3316%" y="1461" width="0.0123%" height="15" fill="rgb(209,12,38)" fg:x="190" fg:w="1"/><text x="2.5816%" y="1471.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (1 samples, 0.01%)</title><rect x="2.3438%" y="1509" width="0.0123%" height="15" fill="rgb(227,1,9)" fg:x="191" fg:w="1"/><text x="2.5938%" y="1519.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="2.3561%" y="1509" width="0.0123%" height="15" fill="rgb(248,47,43)" fg:x="192" fg:w="1"/><text x="2.6061%" y="1519.50"></text></g><g><title>[engine] (1 samples, 0.01%)</title><rect x="2.3684%" y="1509" width="0.0123%" height="15" fill="rgb(221,10,30)" fg:x="193" fg:w="1"/><text x="2.6184%" y="1519.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.01%)</title><rect x="2.3684%" y="1493" width="0.0123%" height="15" fill="rgb(210,229,1)" fg:x="193" fg:w="1"/><text x="2.6184%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (1 samples, 0.01%)</title><rect x="2.3684%" y="1477" width="0.0123%" height="15" fill="rgb(222,148,37)" fg:x="193" fg:w="1"/><text x="2.6184%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (1 samples, 0.01%)</title><rect x="2.3684%" y="1461" width="0.0123%" height="15" fill="rgb(234,67,33)" fg:x="193" fg:w="1"/><text x="2.6184%" y="1471.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="2.3684%" y="1445" width="0.0123%" height="15" fill="rgb(247,98,35)" fg:x="193" fg:w="1"/><text x="2.6184%" y="1455.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="2.3684%" y="1429" width="0.0123%" height="15" fill="rgb(247,138,52)" fg:x="193" fg:w="1"/><text x="2.6184%" y="1439.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="2.3684%" y="1413" width="0.0123%" height="15" fill="rgb(213,79,30)" fg:x="193" fg:w="1"/><text x="2.6184%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="2.3807%" y="1509" width="0.0245%" height="15" fill="rgb(246,177,23)" fg:x="194" fg:w="2"/><text x="2.6307%" y="1519.50"></text></g><g><title>__libc_close (1 samples, 0.01%)</title><rect x="2.4052%" y="1509" width="0.0123%" height="15" fill="rgb(230,62,27)" fg:x="196" fg:w="1"/><text x="2.6552%" y="1519.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.01%)</title><rect x="2.4175%" y="1509" width="0.0123%" height="15" fill="rgb(216,154,8)" fg:x="197" fg:w="1"/><text x="2.6675%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="2.4297%" y="1509" width="0.0123%" height="15" fill="rgb(244,35,45)" fg:x="198" fg:w="1"/><text x="2.6797%" y="1519.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (5 samples, 0.06%)</title><rect x="2.4420%" y="1509" width="0.0614%" height="15" fill="rgb(251,115,12)" fg:x="199" fg:w="5"/><text x="2.6920%" y="1519.50"></text></g><g><title>async_executor::Ticker::wake (1 samples, 0.01%)</title><rect x="2.5034%" y="1509" width="0.0123%" height="15" fill="rgb(240,54,50)" fg:x="204" fg:w="1"/><text x="2.7534%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_pbr::material::StandardMaterial&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="2.6506%" y="1493" width="0.0123%" height="15" fill="rgb(233,84,52)" fg:x="216" fg:w="1"/><text x="2.9006%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::shader::shader::Shader&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="2.6629%" y="1493" width="0.0123%" height="15" fill="rgb(207,117,47)" fg:x="217" fg:w="1"/><text x="2.9129%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_scene::scene::Scene&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="2.6752%" y="1493" width="0.0123%" height="15" fill="rgb(249,43,39)" fg:x="218" fg:w="1"/><text x="2.9252%" y="1503.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update (15 samples, 0.18%)</title><rect x="2.5156%" y="1509" width="0.1841%" height="15" fill="rgb(209,38,44)" fg:x="205" fg:w="15"/><text x="2.7656%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="2.6874%" y="1493" width="0.0123%" height="15" fill="rgb(236,212,23)" fg:x="219" fg:w="1"/><text x="2.9374%" y="1503.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="2.6997%" y="1509" width="0.0123%" height="15" fill="rgb(242,79,21)" fg:x="220" fg:w="1"/><text x="2.9497%" y="1519.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="2.6997%" y="1493" width="0.0123%" height="15" fill="rgb(211,96,35)" fg:x="220" fg:w="1"/><text x="2.9497%" y="1503.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::HandleUntyped&gt;&gt;::from (1 samples, 0.01%)</title><rect x="2.6997%" y="1477" width="0.0123%" height="15" fill="rgb(253,215,40)" fg:x="220" fg:w="1"/><text x="2.9497%" y="1487.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (1 samples, 0.01%)</title><rect x="2.7120%" y="1509" width="0.0123%" height="15" fill="rgb(211,81,21)" fg:x="221" fg:w="1"/><text x="2.9620%" y="1519.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (2 samples, 0.02%)</title><rect x="2.7243%" y="1509" width="0.0245%" height="15" fill="rgb(208,190,38)" fg:x="222" fg:w="2"/><text x="2.9743%" y="1519.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (1 samples, 0.01%)</title><rect x="2.7488%" y="1509" width="0.0123%" height="15" fill="rgb(235,213,38)" fg:x="224" fg:w="1"/><text x="2.9988%" y="1519.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::clear (1 samples, 0.01%)</title><rect x="2.7488%" y="1493" width="0.0123%" height="15" fill="rgb(237,122,38)" fg:x="224" fg:w="1"/><text x="2.9988%" y="1503.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (1 samples, 0.01%)</title><rect x="2.7488%" y="1477" width="0.0123%" height="15" fill="rgb(244,218,35)" fg:x="224" fg:w="1"/><text x="2.9988%" y="1487.50"></text></g><g><title>bevy_pbr::render_graph::lights_node::lights_node_system (2 samples, 0.02%)</title><rect x="2.7611%" y="1509" width="0.0245%" height="15" fill="rgb(240,68,47)" fg:x="225" fg:w="2"/><text x="3.0111%" y="1519.50"></text></g><g><title>bevy_render::camera::camera::camera_system (1 samples, 0.01%)</title><rect x="2.7856%" y="1509" width="0.0123%" height="15" fill="rgb(210,16,53)" fg:x="227" fg:w="1"/><text x="3.0356%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding (2 samples, 0.02%)</title><rect x="2.7979%" y="1509" width="0.0245%" height="15" fill="rgb(235,124,12)" fg:x="228" fg:w="2"/><text x="3.0479%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::initialize (2 samples, 0.02%)</title><rect x="2.8224%" y="1509" width="0.0245%" height="15" fill="rgb(224,169,11)" fg:x="230" fg:w="2"/><text x="3.0724%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (2 samples, 0.02%)</title><rect x="2.8470%" y="1509" width="0.0245%" height="15" fill="rgb(250,166,2)" fg:x="232" fg:w="2"/><text x="3.0970%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (1 samples, 0.01%)</title><rect x="2.8715%" y="1509" width="0.0123%" height="15" fill="rgb(242,216,29)" fg:x="234" fg:w="1"/><text x="3.1215%" y="1519.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="2.8715%" y="1493" width="0.0123%" height="15" fill="rgb(230,116,27)" fg:x="234" fg:w="1"/><text x="3.1215%" y="1503.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="2.8715%" y="1477" width="0.0123%" height="15" fill="rgb(228,99,48)" fg:x="234" fg:w="1"/><text x="3.1215%" y="1487.50"></text></g><g><title>bevy_text::text2d::text2d_system (1 samples, 0.01%)</title><rect x="2.8838%" y="1509" width="0.0123%" height="15" fill="rgb(253,11,6)" fg:x="235" fg:w="1"/><text x="3.1338%" y="1519.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="2.8961%" y="1509" width="0.0123%" height="15" fill="rgb(247,143,39)" fg:x="236" fg:w="1"/><text x="3.1461%" y="1519.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="2.9083%" y="1509" width="0.0245%" height="15" fill="rgb(236,97,10)" fg:x="237" fg:w="2"/><text x="3.1583%" y="1519.50"></text></g><g><title>bevy_core::label::entity_labels_system (1 samples, 0.01%)</title><rect x="2.9574%" y="1477" width="0.0123%" height="15" fill="rgb(233,208,19)" fg:x="241" fg:w="1"/><text x="3.2074%" y="1487.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter (1 samples, 0.01%)</title><rect x="2.9574%" y="1461" width="0.0123%" height="15" fill="rgb(216,164,2)" fg:x="241" fg:w="1"/><text x="3.2074%" y="1471.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="2.9574%" y="1445" width="0.0123%" height="15" fill="rgb(220,129,5)" fg:x="241" fg:w="1"/><text x="3.2074%" y="1455.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.05%)</title><rect x="2.9329%" y="1509" width="0.0491%" height="15" fill="rgb(242,17,10)" fg:x="239" fg:w="4"/><text x="3.1829%" y="1519.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="2.9574%" y="1493" width="0.0245%" height="15" fill="rgb(242,107,0)" fg:x="241" fg:w="2"/><text x="3.2074%" y="1503.50"></text></g><g><title>bevy_sprite::color_material::material_texture_detection_system (1 samples, 0.01%)</title><rect x="2.9697%" y="1477" width="0.0123%" height="15" fill="rgb(251,28,31)" fg:x="242" fg:w="1"/><text x="3.2197%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="2.9697%" y="1461" width="0.0123%" height="15" fill="rgb(233,223,10)" fg:x="242" fg:w="1"/><text x="3.2197%" y="1471.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="2.9697%" y="1445" width="0.0123%" height="15" fill="rgb(215,21,27)" fg:x="242" fg:w="1"/><text x="3.2197%" y="1455.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="2.9697%" y="1429" width="0.0123%" height="15" fill="rgb(232,23,21)" fg:x="242" fg:w="1"/><text x="3.2197%" y="1439.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="2.9697%" y="1413" width="0.0123%" height="15" fill="rgb(244,5,23)" fg:x="242" fg:w="1"/><text x="3.2197%" y="1423.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.01%)</title><rect x="2.9697%" y="1397" width="0.0123%" height="15" fill="rgb(226,81,46)" fg:x="242" fg:w="1"/><text x="3.2197%" y="1407.50"></text></g><g><title>ahash::random_state::RandomState::get_src (1 samples, 0.01%)</title><rect x="2.9697%" y="1381" width="0.0123%" height="15" fill="rgb(247,70,30)" fg:x="242" fg:w="1"/><text x="3.2197%" y="1391.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.01%)</title><rect x="2.9697%" y="1365" width="0.0123%" height="15" fill="rgb(212,68,19)" fg:x="242" fg:w="1"/><text x="3.2197%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="2.9820%" y="1509" width="0.0123%" height="15" fill="rgb(240,187,13)" fg:x="243" fg:w="1"/><text x="3.2320%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="2.9942%" y="1509" width="0.0123%" height="15" fill="rgb(223,113,26)" fg:x="244" fg:w="1"/><text x="3.2442%" y="1519.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="3.0065%" y="1509" width="0.0123%" height="15" fill="rgb(206,192,2)" fg:x="245" fg:w="1"/><text x="3.2565%" y="1519.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (1 samples, 0.01%)</title><rect x="3.0188%" y="1509" width="0.0123%" height="15" fill="rgb(241,108,4)" fg:x="246" fg:w="1"/><text x="3.2688%" y="1519.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences (2 samples, 0.02%)</title><rect x="3.0310%" y="1509" width="0.0245%" height="15" fill="rgb(247,173,49)" fg:x="247" fg:w="2"/><text x="3.2810%" y="1519.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (2 samples, 0.02%)</title><rect x="3.0310%" y="1493" width="0.0245%" height="15" fill="rgb(224,114,35)" fg:x="247" fg:w="2"/><text x="3.2810%" y="1503.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (2 samples, 0.02%)</title><rect x="3.0310%" y="1477" width="0.0245%" height="15" fill="rgb(245,159,27)" fg:x="247" fg:w="2"/><text x="3.2810%" y="1487.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::allocate (1 samples, 0.01%)</title><rect x="3.0556%" y="1509" width="0.0123%" height="15" fill="rgb(245,172,44)" fg:x="249" fg:w="1"/><text x="3.3056%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="3.0679%" y="1509" width="0.0123%" height="15" fill="rgb(236,23,11)" fg:x="250" fg:w="1"/><text x="3.3179%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::retain (1 samples, 0.01%)</title><rect x="3.0801%" y="1509" width="0.0123%" height="15" fill="rgb(205,117,38)" fg:x="251" fg:w="1"/><text x="3.3301%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="3.0801%" y="1493" width="0.0123%" height="15" fill="rgb(237,72,25)" fg:x="251" fg:w="1"/><text x="3.3301%" y="1503.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::buckets (1 samples, 0.01%)</title><rect x="3.0801%" y="1477" width="0.0123%" height="15" fill="rgb(244,70,9)" fg:x="251" fg:w="1"/><text x="3.3301%" y="1487.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="3.0924%" y="1509" width="0.0123%" height="15" fill="rgb(217,125,39)" fg:x="252" fg:w="1"/><text x="3.3424%" y="1519.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.01%)</title><rect x="3.1047%" y="1509" width="0.0123%" height="15" fill="rgb(235,36,10)" fg:x="253" fg:w="1"/><text x="3.3547%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="3.1047%" y="1493" width="0.0123%" height="15" fill="rgb(251,123,47)" fg:x="253" fg:w="1"/><text x="3.3547%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="3.1047%" y="1477" width="0.0123%" height="15" fill="rgb(221,13,13)" fg:x="253" fg:w="1"/><text x="3.3547%" y="1487.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="3.1169%" y="1509" width="0.0123%" height="15" fill="rgb(238,131,9)" fg:x="254" fg:w="1"/><text x="3.3669%" y="1519.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (1 samples, 0.01%)</title><rect x="3.1292%" y="1509" width="0.0123%" height="15" fill="rgb(211,50,8)" fg:x="255" fg:w="1"/><text x="3.3792%" y="1519.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (2 samples, 0.02%)</title><rect x="3.1415%" y="1509" width="0.0245%" height="15" fill="rgb(245,182,24)" fg:x="256" fg:w="2"/><text x="3.3915%" y="1519.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (1 samples, 0.01%)</title><rect x="3.1538%" y="1493" width="0.0123%" height="15" fill="rgb(242,14,37)" fg:x="257" fg:w="1"/><text x="3.4038%" y="1503.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="3.1538%" y="1477" width="0.0123%" height="15" fill="rgb(246,228,12)" fg:x="257" fg:w="1"/><text x="3.4038%" y="1487.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (1 samples, 0.01%)</title><rect x="3.1538%" y="1461" width="0.0123%" height="15" fill="rgb(213,55,15)" fg:x="257" fg:w="1"/><text x="3.4038%" y="1471.50"></text></g><g><title>std::thread::yield_now (1 samples, 0.01%)</title><rect x="3.1538%" y="1445" width="0.0123%" height="15" fill="rgb(209,9,3)" fg:x="257" fg:w="1"/><text x="3.4038%" y="1455.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (1 samples, 0.01%)</title><rect x="3.1538%" y="1429" width="0.0123%" height="15" fill="rgb(230,59,30)" fg:x="257" fg:w="1"/><text x="3.4038%" y="1439.50"></text></g><g><title>stretch::forest::Forest::compute_layout (1 samples, 0.01%)</title><rect x="3.1660%" y="1509" width="0.0123%" height="15" fill="rgb(209,121,21)" fg:x="258" fg:w="1"/><text x="3.4160%" y="1519.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute (1 samples, 0.01%)</title><rect x="3.1660%" y="1493" width="0.0123%" height="15" fill="rgb(220,109,13)" fg:x="258" fg:w="1"/><text x="3.4160%" y="1503.50"></text></g><g><title>stretch::node::Stretch::find_node (1 samples, 0.01%)</title><rect x="3.1783%" y="1509" width="0.0123%" height="15" fill="rgb(232,18,1)" fg:x="259" fg:w="1"/><text x="3.4283%" y="1519.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="3.1906%" y="1509" width="0.0123%" height="15" fill="rgb(215,41,42)" fg:x="260" fg:w="1"/><text x="3.4406%" y="1519.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::handle_mapping (1 samples, 0.01%)</title><rect x="3.2028%" y="1509" width="0.0123%" height="15" fill="rgb(224,123,36)" fg:x="261" fg:w="1"/><text x="3.4528%" y="1519.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (2 samples, 0.02%)</title><rect x="3.2151%" y="1509" width="0.0245%" height="15" fill="rgb(240,125,3)" fg:x="262" fg:w="2"/><text x="3.4651%" y="1519.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (1 samples, 0.01%)</title><rect x="3.2397%" y="1509" width="0.0123%" height="15" fill="rgb(205,98,50)" fg:x="264" fg:w="1"/><text x="3.4897%" y="1519.50"></text></g><g><title>wgpu_core::device::map_buffer (3 samples, 0.04%)</title><rect x="3.2519%" y="1509" width="0.0368%" height="15" fill="rgb(205,185,37)" fg:x="265" fg:w="3"/><text x="3.5019%" y="1519.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (1 samples, 0.01%)</title><rect x="3.2887%" y="1509" width="0.0123%" height="15" fill="rgb(238,207,15)" fg:x="268" fg:w="1"/><text x="3.5387%" y="1519.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (1 samples, 0.01%)</title><rect x="3.2887%" y="1493" width="0.0123%" height="15" fill="rgb(213,199,42)" fg:x="268" fg:w="1"/><text x="3.5387%" y="1503.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (1 samples, 0.01%)</title><rect x="3.2887%" y="1477" width="0.0123%" height="15" fill="rgb(235,201,11)" fg:x="268" fg:w="1"/><text x="3.5387%" y="1487.50"></text></g><g><title>[[heap]] (157 samples, 1.93%)</title><rect x="1.3867%" y="1525" width="1.9266%" height="15" fill="rgb(207,46,11)" fg:x="113" fg:w="157"/><text x="1.6367%" y="1535.50">[..</text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::change (1 samples, 0.01%)</title><rect x="3.3010%" y="1509" width="0.0123%" height="15" fill="rgb(241,35,35)" fg:x="269" fg:w="1"/><text x="3.5510%" y="1519.50"></text></g><g><title>[[vdso]] (3 samples, 0.04%)</title><rect x="3.3133%" y="1525" width="0.0368%" height="15" fill="rgb(243,32,47)" fg:x="270" fg:w="3"/><text x="3.5633%" y="1535.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="3.3501%" y="1509" width="0.0123%" height="15" fill="rgb(247,202,23)" fg:x="273" fg:w="1"/><text x="3.6001%" y="1519.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="3.3624%" y="1509" width="0.0245%" height="15" fill="rgb(219,102,11)" fg:x="274" fg:w="2"/><text x="3.6124%" y="1519.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="3.3869%" y="1509" width="0.0123%" height="15" fill="rgb(243,110,44)" fg:x="276" fg:w="1"/><text x="3.6369%" y="1519.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="3.3992%" y="1509" width="0.0123%" height="15" fill="rgb(222,74,54)" fg:x="277" fg:w="1"/><text x="3.6492%" y="1519.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="3.3992%" y="1493" width="0.0123%" height="15" fill="rgb(216,99,12)" fg:x="277" fg:w="1"/><text x="3.6492%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="3.3992%" y="1477" width="0.0123%" height="15" fill="rgb(226,22,26)" fg:x="277" fg:w="1"/><text x="3.6492%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="3.3992%" y="1461" width="0.0123%" height="15" fill="rgb(217,163,10)" fg:x="277" fg:w="1"/><text x="3.6492%" y="1471.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.09%)</title><rect x="3.4115%" y="1509" width="0.0859%" height="15" fill="rgb(213,25,53)" fg:x="278" fg:w="7"/><text x="3.6615%" y="1519.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (5 samples, 0.06%)</title><rect x="3.4360%" y="1493" width="0.0614%" height="15" fill="rgb(252,105,26)" fg:x="280" fg:w="5"/><text x="3.6860%" y="1503.50"></text></g><g><title>async_task::runnable::Runnable::run (5 samples, 0.06%)</title><rect x="3.4360%" y="1477" width="0.0614%" height="15" fill="rgb(220,39,43)" fg:x="280" fg:w="5"/><text x="3.6860%" y="1487.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="3.4974%" y="1509" width="0.0123%" height="15" fill="rgb(229,68,48)" fg:x="285" fg:w="1"/><text x="3.7474%" y="1519.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (7 samples, 0.09%)</title><rect x="3.5096%" y="1509" width="0.0859%" height="15" fill="rgb(252,8,32)" fg:x="286" fg:w="7"/><text x="3.7596%" y="1519.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="3.5710%" y="1493" width="0.0245%" height="15" fill="rgb(223,20,43)" fg:x="291" fg:w="2"/><text x="3.8210%" y="1503.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="3.5710%" y="1477" width="0.0245%" height="15" fill="rgb(229,81,49)" fg:x="291" fg:w="2"/><text x="3.8210%" y="1487.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="3.5833%" y="1461" width="0.0123%" height="15" fill="rgb(236,28,36)" fg:x="292" fg:w="1"/><text x="3.8333%" y="1471.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.01%)</title><rect x="3.5833%" y="1445" width="0.0123%" height="15" fill="rgb(249,185,26)" fg:x="292" fg:w="1"/><text x="3.8333%" y="1455.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.01%)</title><rect x="3.5833%" y="1429" width="0.0123%" height="15" fill="rgb(249,174,33)" fg:x="292" fg:w="1"/><text x="3.8333%" y="1439.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="3.5955%" y="1509" width="0.0123%" height="15" fill="rgb(233,201,37)" fg:x="293" fg:w="1"/><text x="3.8455%" y="1519.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="3.6078%" y="1509" width="0.0123%" height="15" fill="rgb(221,78,26)" fg:x="294" fg:w="1"/><text x="3.8578%" y="1519.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="3.6078%" y="1493" width="0.0123%" height="15" fill="rgb(250,127,30)" fg:x="294" fg:w="1"/><text x="3.8578%" y="1503.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="3.6078%" y="1477" width="0.0123%" height="15" fill="rgb(230,49,44)" fg:x="294" fg:w="1"/><text x="3.8578%" y="1487.50"></text></g><g><title>[engine] (5 samples, 0.06%)</title><rect x="3.6201%" y="1509" width="0.0614%" height="15" fill="rgb(229,67,23)" fg:x="295" fg:w="5"/><text x="3.8701%" y="1519.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.06%)</title><rect x="3.6201%" y="1493" width="0.0614%" height="15" fill="rgb(249,83,47)" fg:x="295" fg:w="5"/><text x="3.8701%" y="1503.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (5 samples, 0.06%)</title><rect x="3.6201%" y="1477" width="0.0614%" height="15" fill="rgb(215,43,3)" fg:x="295" fg:w="5"/><text x="3.8701%" y="1487.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (5 samples, 0.06%)</title><rect x="3.6201%" y="1461" width="0.0614%" height="15" fill="rgb(238,154,13)" fg:x="295" fg:w="5"/><text x="3.8701%" y="1471.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="3.6814%" y="1509" width="0.0123%" height="15" fill="rgb(219,56,2)" fg:x="300" fg:w="1"/><text x="3.9314%" y="1519.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="3.6937%" y="1509" width="0.0123%" height="15" fill="rgb(233,0,4)" fg:x="301" fg:w="1"/><text x="3.9437%" y="1519.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="3.7060%" y="1509" width="0.0123%" height="15" fill="rgb(235,30,7)" fg:x="302" fg:w="1"/><text x="3.9560%" y="1519.50"></text></g><g><title>__futex_abstimed_wait_common64 (1 samples, 0.01%)</title><rect x="3.7182%" y="1509" width="0.0123%" height="15" fill="rgb(250,79,13)" fg:x="303" fg:w="1"/><text x="3.9682%" y="1519.50"></text></g><g><title>__pthread_cond_wait (3 samples, 0.04%)</title><rect x="3.7305%" y="1509" width="0.0368%" height="15" fill="rgb(211,146,34)" fg:x="304" fg:w="3"/><text x="3.9805%" y="1519.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (2 samples, 0.02%)</title><rect x="3.7673%" y="1509" width="0.0245%" height="15" fill="rgb(228,22,38)" fg:x="307" fg:w="2"/><text x="4.0173%" y="1519.50"></text></g><g><title>async_executor::Ticker::sleep (3 samples, 0.04%)</title><rect x="3.7919%" y="1509" width="0.0368%" height="15" fill="rgb(235,168,5)" fg:x="309" fg:w="3"/><text x="4.0419%" y="1519.50"></text></g><g><title>async_executor::Sleepers::insert (1 samples, 0.01%)</title><rect x="3.8164%" y="1493" width="0.0123%" height="15" fill="rgb(221,155,16)" fg:x="311" fg:w="1"/><text x="4.0664%" y="1503.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="3.8164%" y="1477" width="0.0123%" height="15" fill="rgb(215,215,53)" fg:x="311" fg:w="1"/><text x="4.0664%" y="1487.50"></text></g><g><title>async_executor::Ticker::wake (6 samples, 0.07%)</title><rect x="3.8287%" y="1509" width="0.0736%" height="15" fill="rgb(223,4,10)" fg:x="312" fg:w="6"/><text x="4.0787%" y="1519.50"></text></g><g><title>async_executor::Sleepers::remove (1 samples, 0.01%)</title><rect x="3.8900%" y="1493" width="0.0123%" height="15" fill="rgb(234,103,6)" fg:x="317" fg:w="1"/><text x="4.1400%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (1 samples, 0.01%)</title><rect x="3.8900%" y="1477" width="0.0123%" height="15" fill="rgb(227,97,0)" fg:x="317" fg:w="1"/><text x="4.1400%" y="1487.50"></text></g><g><title>core::intrinsics::copy (1 samples, 0.01%)</title><rect x="3.8900%" y="1461" width="0.0123%" height="15" fill="rgb(234,150,53)" fg:x="317" fg:w="1"/><text x="4.1400%" y="1471.50"></text></g><g><title>async_executor::steal (5 samples, 0.06%)</title><rect x="3.9023%" y="1509" width="0.0614%" height="15" fill="rgb(228,201,54)" fg:x="318" fg:w="5"/><text x="4.1523%" y="1519.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (2 samples, 0.02%)</title><rect x="3.9637%" y="1509" width="0.0245%" height="15" fill="rgb(222,22,37)" fg:x="323" fg:w="2"/><text x="4.2137%" y="1519.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2 samples, 0.02%)</title><rect x="3.9882%" y="1509" width="0.0245%" height="15" fill="rgb(237,53,32)" fg:x="325" fg:w="2"/><text x="4.2382%" y="1519.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="4.0128%" y="1509" width="0.0123%" height="15" fill="rgb(233,25,53)" fg:x="327" fg:w="1"/><text x="4.2628%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (3 samples, 0.04%)</title><rect x="4.0250%" y="1509" width="0.0368%" height="15" fill="rgb(210,40,34)" fg:x="328" fg:w="3"/><text x="4.2750%" y="1519.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="4.0496%" y="1493" width="0.0123%" height="15" fill="rgb(241,220,44)" fg:x="330" fg:w="1"/><text x="4.2996%" y="1503.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="4.0496%" y="1477" width="0.0123%" height="15" fill="rgb(235,28,35)" fg:x="330" fg:w="1"/><text x="4.2996%" y="1487.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (1 samples, 0.01%)</title><rect x="4.0618%" y="1509" width="0.0123%" height="15" fill="rgb(210,56,17)" fg:x="331" fg:w="1"/><text x="4.3118%" y="1519.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.01%)</title><rect x="4.0618%" y="1493" width="0.0123%" height="15" fill="rgb(224,130,29)" fg:x="331" fg:w="1"/><text x="4.3118%" y="1503.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.01%)</title><rect x="4.0618%" y="1477" width="0.0123%" height="15" fill="rgb(235,212,8)" fg:x="331" fg:w="1"/><text x="4.3118%" y="1487.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.01%)</title><rect x="4.0618%" y="1461" width="0.0123%" height="15" fill="rgb(223,33,50)" fg:x="331" fg:w="1"/><text x="4.3118%" y="1471.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.01%)</title><rect x="4.0618%" y="1445" width="0.0123%" height="15" fill="rgb(219,149,13)" fg:x="331" fg:w="1"/><text x="4.3118%" y="1455.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="4.0618%" y="1429" width="0.0123%" height="15" fill="rgb(250,156,29)" fg:x="331" fg:w="1"/><text x="4.3118%" y="1439.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="4.0618%" y="1413" width="0.0123%" height="15" fill="rgb(216,193,19)" fg:x="331" fg:w="1"/><text x="4.3118%" y="1423.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="4.0618%" y="1397" width="0.0123%" height="15" fill="rgb(216,135,14)" fg:x="331" fg:w="1"/><text x="4.3118%" y="1407.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="4.0618%" y="1381" width="0.0123%" height="15" fill="rgb(241,47,5)" fg:x="331" fg:w="1"/><text x="4.3118%" y="1391.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="4.0618%" y="1365" width="0.0123%" height="15" fill="rgb(233,42,35)" fg:x="331" fg:w="1"/><text x="4.3118%" y="1375.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="4.0618%" y="1349" width="0.0123%" height="15" fill="rgb(231,13,6)" fg:x="331" fg:w="1"/><text x="4.3118%" y="1359.50"></text></g><g><title>bevy_text::text2d::text2d_system (1 samples, 0.01%)</title><rect x="4.0741%" y="1509" width="0.0123%" height="15" fill="rgb(207,181,40)" fg:x="332" fg:w="1"/><text x="4.3241%" y="1519.50"></text></g><g><title>bevy_window::windows::Windows::get (1 samples, 0.01%)</title><rect x="4.0864%" y="1509" width="0.0123%" height="15" fill="rgb(254,173,49)" fg:x="333" fg:w="1"/><text x="4.3364%" y="1519.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (12 samples, 0.15%)</title><rect x="4.0987%" y="1509" width="0.1473%" height="15" fill="rgb(221,1,38)" fg:x="334" fg:w="12"/><text x="4.3487%" y="1519.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="4.2459%" y="1509" width="0.0245%" height="15" fill="rgb(206,124,46)" fg:x="346" fg:w="2"/><text x="4.4959%" y="1519.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="4.2705%" y="1509" width="0.0123%" height="15" fill="rgb(249,21,11)" fg:x="348" fg:w="1"/><text x="4.5205%" y="1519.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="4.2705%" y="1493" width="0.0123%" height="15" fill="rgb(222,201,40)" fg:x="348" fg:w="1"/><text x="4.5205%" y="1503.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="4.2705%" y="1477" width="0.0123%" height="15" fill="rgb(235,61,29)" fg:x="348" fg:w="1"/><text x="4.5205%" y="1487.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="4.2827%" y="1509" width="0.0245%" height="15" fill="rgb(219,207,3)" fg:x="349" fg:w="2"/><text x="4.5327%" y="1519.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="4.3073%" y="1509" width="0.0245%" height="15" fill="rgb(222,56,46)" fg:x="351" fg:w="2"/><text x="4.5573%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="4.3318%" y="1509" width="0.0123%" height="15" fill="rgb(239,76,54)" fg:x="353" fg:w="1"/><text x="4.5818%" y="1519.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="4.3441%" y="1509" width="0.0123%" height="15" fill="rgb(231,124,27)" fg:x="354" fg:w="1"/><text x="4.5941%" y="1519.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (2 samples, 0.02%)</title><rect x="4.3564%" y="1509" width="0.0245%" height="15" fill="rgb(249,195,6)" fg:x="355" fg:w="2"/><text x="4.6064%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.04%)</title><rect x="4.3809%" y="1509" width="0.0368%" height="15" fill="rgb(237,174,47)" fg:x="357" fg:w="3"/><text x="4.6309%" y="1519.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="4.4177%" y="1509" width="0.0123%" height="15" fill="rgb(206,201,31)" fg:x="360" fg:w="1"/><text x="4.6677%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="4.4300%" y="1509" width="0.0123%" height="15" fill="rgb(231,57,52)" fg:x="361" fg:w="1"/><text x="4.6800%" y="1519.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="4.4423%" y="1509" width="0.0123%" height="15" fill="rgb(248,177,22)" fg:x="362" fg:w="1"/><text x="4.6923%" y="1519.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.01%)</title><rect x="4.4545%" y="1509" width="0.0123%" height="15" fill="rgb(215,211,37)" fg:x="363" fg:w="1"/><text x="4.7045%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="4.4545%" y="1493" width="0.0123%" height="15" fill="rgb(241,128,51)" fg:x="363" fg:w="1"/><text x="4.7045%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="4.4545%" y="1477" width="0.0123%" height="15" fill="rgb(227,165,31)" fg:x="363" fg:w="1"/><text x="4.7045%" y="1487.50"></text></g><g><title>parking::Unparker::unpark (4 samples, 0.05%)</title><rect x="4.4668%" y="1509" width="0.0491%" height="15" fill="rgb(228,167,24)" fg:x="364" fg:w="4"/><text x="4.7168%" y="1519.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="4.5036%" y="1493" width="0.0123%" height="15" fill="rgb(228,143,12)" fg:x="367" fg:w="1"/><text x="4.7536%" y="1503.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="4.5036%" y="1477" width="0.0123%" height="15" fill="rgb(249,149,8)" fg:x="367" fg:w="1"/><text x="4.7536%" y="1487.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="4.5036%" y="1461" width="0.0123%" height="15" fill="rgb(243,35,44)" fg:x="367" fg:w="1"/><text x="4.7536%" y="1471.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="4.5036%" y="1445" width="0.0123%" height="15" fill="rgb(246,89,9)" fg:x="367" fg:w="1"/><text x="4.7536%" y="1455.50"></text></g><g><title>std::sync::condvar::Condvar::new (1 samples, 0.01%)</title><rect x="4.5159%" y="1509" width="0.0123%" height="15" fill="rgb(233,213,13)" fg:x="368" fg:w="1"/><text x="4.7659%" y="1519.50"></text></g><g><title>std::sys_common::condvar::Condvar::new (1 samples, 0.01%)</title><rect x="4.5159%" y="1493" width="0.0123%" height="15" fill="rgb(233,141,41)" fg:x="368" fg:w="1"/><text x="4.7659%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.01%)</title><rect x="4.5159%" y="1477" width="0.0123%" height="15" fill="rgb(239,167,4)" fg:x="368" fg:w="1"/><text x="4.7659%" y="1487.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="4.5159%" y="1461" width="0.0123%" height="15" fill="rgb(209,217,16)" fg:x="368" fg:w="1"/><text x="4.7659%" y="1471.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="4.5159%" y="1445" width="0.0123%" height="15" fill="rgb(219,88,35)" fg:x="368" fg:w="1"/><text x="4.7659%" y="1455.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="4.5159%" y="1429" width="0.0123%" height="15" fill="rgb(220,193,23)" fg:x="368" fg:w="1"/><text x="4.7659%" y="1439.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="4.5159%" y="1413" width="0.0123%" height="15" fill="rgb(230,90,52)" fg:x="368" fg:w="1"/><text x="4.7659%" y="1423.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="4.5159%" y="1397" width="0.0123%" height="15" fill="rgb(252,106,19)" fg:x="368" fg:w="1"/><text x="4.7659%" y="1407.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="4.5159%" y="1381" width="0.0123%" height="15" fill="rgb(206,74,20)" fg:x="368" fg:w="1"/><text x="4.7659%" y="1391.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="4.5159%" y="1365" width="0.0123%" height="15" fill="rgb(230,138,44)" fg:x="368" fg:w="1"/><text x="4.7659%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (8 samples, 0.10%)</title><rect x="4.5282%" y="1509" width="0.0982%" height="15" fill="rgb(235,182,43)" fg:x="369" fg:w="8"/><text x="4.7782%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.06%)</title><rect x="4.5650%" y="1493" width="0.0614%" height="15" fill="rgb(242,16,51)" fg:x="372" fg:w="5"/><text x="4.8150%" y="1503.50"></text></g><g><title>[anon] (105 samples, 1.29%)</title><rect x="3.3501%" y="1525" width="1.2885%" height="15" fill="rgb(248,9,4)" fg:x="273" fg:w="105"/><text x="3.6001%" y="1535.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::extend (1 samples, 0.01%)</title><rect x="4.6263%" y="1509" width="0.0123%" height="15" fill="rgb(210,31,22)" fg:x="377" fg:w="1"/><text x="4.8763%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="4.6263%" y="1493" width="0.0123%" height="15" fill="rgb(239,54,39)" fg:x="377" fg:w="1"/><text x="4.8763%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="4.6263%" y="1477" width="0.0123%" height="15" fill="rgb(230,99,41)" fg:x="377" fg:w="1"/><text x="4.8763%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(gfx_backend_vulkan::native::Buffer,wgpu_core::device::alloc::MemoryBlock&lt;gfx_backend_vulkan::Backend&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="4.6263%" y="1461" width="0.0123%" height="15" fill="rgb(253,106,12)" fg:x="377" fg:w="1"/><text x="4.8763%" y="1471.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="4.6386%" y="1509" width="0.0368%" height="15" fill="rgb(213,46,41)" fg:x="378" fg:w="3"/><text x="4.8886%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="4.6754%" y="1509" width="0.0245%" height="15" fill="rgb(215,133,35)" fg:x="381" fg:w="2"/><text x="4.9254%" y="1519.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="4.7000%" y="1509" width="0.0123%" height="15" fill="rgb(213,28,5)" fg:x="383" fg:w="1"/><text x="4.9500%" y="1519.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="4.7122%" y="1509" width="0.0123%" height="15" fill="rgb(215,77,49)" fg:x="384" fg:w="1"/><text x="4.9622%" y="1519.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3 samples, 0.04%)</title><rect x="4.7245%" y="1509" width="0.0368%" height="15" fill="rgb(248,100,22)" fg:x="385" fg:w="3"/><text x="4.9745%" y="1519.50"></text></g><g><title>async_executor::Ticker::sleep (1 samples, 0.01%)</title><rect x="4.7613%" y="1509" width="0.0123%" height="15" fill="rgb(208,67,9)" fg:x="388" fg:w="1"/><text x="5.0113%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.01%)</title><rect x="4.7613%" y="1493" width="0.0123%" height="15" fill="rgb(219,133,21)" fg:x="388" fg:w="1"/><text x="5.0113%" y="1503.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="4.7613%" y="1477" width="0.0123%" height="15" fill="rgb(246,46,29)" fg:x="388" fg:w="1"/><text x="5.0113%" y="1487.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="4.7613%" y="1461" width="0.0123%" height="15" fill="rgb(246,185,52)" fg:x="388" fg:w="1"/><text x="5.0113%" y="1471.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="4.7613%" y="1445" width="0.0123%" height="15" fill="rgb(252,136,11)" fg:x="388" fg:w="1"/><text x="5.0113%" y="1455.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="4.7613%" y="1429" width="0.0123%" height="15" fill="rgb(219,138,53)" fg:x="388" fg:w="1"/><text x="5.0113%" y="1439.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (2 samples, 0.02%)</title><rect x="4.7736%" y="1509" width="0.0245%" height="15" fill="rgb(211,51,23)" fg:x="389" fg:w="2"/><text x="5.0236%" y="1519.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="4.7981%" y="1509" width="0.0123%" height="15" fill="rgb(247,221,28)" fg:x="391" fg:w="1"/><text x="5.0481%" y="1519.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="4.7981%" y="1493" width="0.0123%" height="15" fill="rgb(251,222,45)" fg:x="391" fg:w="1"/><text x="5.0481%" y="1503.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="4.7981%" y="1477" width="0.0123%" height="15" fill="rgb(217,162,53)" fg:x="391" fg:w="1"/><text x="5.0481%" y="1487.50"></text></g><g><title>bevy_input::mouse::mouse_button_input_system (1 samples, 0.01%)</title><rect x="4.8104%" y="1509" width="0.0123%" height="15" fill="rgb(229,93,14)" fg:x="392" fg:w="1"/><text x="5.0604%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system::{{closure}} (1 samples, 0.01%)</title><rect x="4.8227%" y="1509" width="0.0123%" height="15" fill="rgb(209,67,49)" fg:x="393" fg:w="1"/><text x="5.0727%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (1 samples, 0.01%)</title><rect x="4.8349%" y="1509" width="0.0123%" height="15" fill="rgb(213,87,29)" fg:x="394" fg:w="1"/><text x="5.0849%" y="1519.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1 samples, 0.01%)</title><rect x="4.8472%" y="1509" width="0.0123%" height="15" fill="rgb(205,151,52)" fg:x="395" fg:w="1"/><text x="5.0972%" y="1519.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (4 samples, 0.05%)</title><rect x="4.8595%" y="1509" width="0.0491%" height="15" fill="rgb(253,215,39)" fg:x="396" fg:w="4"/><text x="5.1095%" y="1519.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (4 samples, 0.05%)</title><rect x="4.9086%" y="1509" width="0.0491%" height="15" fill="rgb(221,220,41)" fg:x="400" fg:w="4"/><text x="5.1586%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="4.9086%" y="1493" width="0.0491%" height="15" fill="rgb(218,133,21)" fg:x="400" fg:w="4"/><text x="5.1586%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="4.9086%" y="1477" width="0.0491%" height="15" fill="rgb(221,193,43)" fg:x="400" fg:w="4"/><text x="5.1586%" y="1487.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.01%)</title><rect x="4.9577%" y="1509" width="0.0123%" height="15" fill="rgb(240,128,52)" fg:x="404" fg:w="1"/><text x="5.2077%" y="1519.50"></text></g><g><title>event_listener::Event::inner (1 samples, 0.01%)</title><rect x="4.9577%" y="1493" width="0.0123%" height="15" fill="rgb(253,114,12)" fg:x="404" fg:w="1"/><text x="5.2077%" y="1503.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="4.9577%" y="1477" width="0.0123%" height="15" fill="rgb(215,223,47)" fg:x="404" fg:w="1"/><text x="5.2077%" y="1487.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="4.9577%" y="1461" width="0.0123%" height="15" fill="rgb(248,225,23)" fg:x="404" fg:w="1"/><text x="5.2077%" y="1471.50"></text></g><g><title>parking::Inner::park (3 samples, 0.04%)</title><rect x="4.9699%" y="1509" width="0.0368%" height="15" fill="rgb(250,108,0)" fg:x="405" fg:w="3"/><text x="5.2199%" y="1519.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (1 samples, 0.01%)</title><rect x="5.0067%" y="1493" width="0.0123%" height="15" fill="rgb(228,208,7)" fg:x="408" fg:w="1"/><text x="5.2567%" y="1503.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="5.0067%" y="1477" width="0.0123%" height="15" fill="rgb(244,45,10)" fg:x="408" fg:w="1"/><text x="5.2567%" y="1487.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (3 samples, 0.04%)</title><rect x="5.0067%" y="1509" width="0.0368%" height="15" fill="rgb(207,125,25)" fg:x="408" fg:w="3"/><text x="5.2567%" y="1519.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (2 samples, 0.02%)</title><rect x="5.0190%" y="1493" width="0.0245%" height="15" fill="rgb(210,195,18)" fg:x="409" fg:w="2"/><text x="5.2690%" y="1503.50"></text></g><g><title>[engine] (34 samples, 0.42%)</title><rect x="4.6386%" y="1525" width="0.4172%" height="15" fill="rgb(249,80,12)" fg:x="378" fg:w="34"/><text x="4.8886%" y="1535.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (1 samples, 0.01%)</title><rect x="5.0436%" y="1509" width="0.0123%" height="15" fill="rgb(221,65,9)" fg:x="411" fg:w="1"/><text x="5.2936%" y="1519.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="5.0558%" y="1509" width="0.0123%" height="15" fill="rgb(235,49,36)" fg:x="412" fg:w="1"/><text x="5.3058%" y="1519.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="5.0681%" y="1509" width="0.0123%" height="15" fill="rgb(225,32,20)" fg:x="413" fg:w="1"/><text x="5.3181%" y="1519.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="5.0804%" y="1509" width="0.0123%" height="15" fill="rgb(215,141,46)" fg:x="414" fg:w="1"/><text x="5.3304%" y="1519.50"></text></g><g><title>&lt;alloc::collections::vec_deque::VecDeque&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="5.0926%" y="1509" width="0.0123%" height="15" fill="rgb(250,160,47)" fg:x="415" fg:w="1"/><text x="5.3426%" y="1519.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::len (1 samples, 0.01%)</title><rect x="5.0926%" y="1493" width="0.0123%" height="15" fill="rgb(216,222,40)" fg:x="415" fg:w="1"/><text x="5.3426%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="5.1049%" y="1509" width="0.0123%" height="15" fill="rgb(234,217,39)" fg:x="416" fg:w="1"/><text x="5.3549%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="5.1172%" y="1509" width="0.0245%" height="15" fill="rgb(207,178,40)" fg:x="417" fg:w="2"/><text x="5.3672%" y="1519.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="5.1417%" y="1509" width="0.0245%" height="15" fill="rgb(221,136,13)" fg:x="419" fg:w="2"/><text x="5.3917%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;wgpu_core::device::life::ActiveSubmission&lt;gfx_backend_vulkan::Backend&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="5.1540%" y="1493" width="0.0123%" height="15" fill="rgb(249,199,10)" fg:x="420" fg:w="1"/><text x="5.4040%" y="1503.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="5.1663%" y="1509" width="0.0123%" height="15" fill="rgb(249,222,13)" fg:x="421" fg:w="1"/><text x="5.4163%" y="1519.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="5.1785%" y="1509" width="0.0368%" height="15" fill="rgb(244,185,38)" fg:x="422" fg:w="3"/><text x="5.4285%" y="1519.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.05%)</title><rect x="5.2154%" y="1509" width="0.0491%" height="15" fill="rgb(236,202,9)" fg:x="425" fg:w="4"/><text x="5.4654%" y="1519.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="5.2644%" y="1509" width="0.0123%" height="15" fill="rgb(250,229,37)" fg:x="429" fg:w="1"/><text x="5.5144%" y="1519.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="5.2644%" y="1493" width="0.0123%" height="15" fill="rgb(206,174,23)" fg:x="429" fg:w="1"/><text x="5.5144%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="5.2644%" y="1477" width="0.0123%" height="15" fill="rgb(211,33,43)" fg:x="429" fg:w="1"/><text x="5.5144%" y="1487.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="5.2644%" y="1461" width="0.0123%" height="15" fill="rgb(245,58,50)" fg:x="429" fg:w="1"/><text x="5.5144%" y="1471.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="5.2644%" y="1445" width="0.0123%" height="15" fill="rgb(244,68,36)" fg:x="429" fg:w="1"/><text x="5.5144%" y="1455.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="5.2644%" y="1429" width="0.0123%" height="15" fill="rgb(232,229,15)" fg:x="429" fg:w="1"/><text x="5.5144%" y="1439.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (6 samples, 0.07%)</title><rect x="5.9517%" y="1493" width="0.0736%" height="15" fill="rgb(254,30,23)" fg:x="485" fg:w="6"/><text x="6.2017%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6 samples, 0.07%)</title><rect x="5.9517%" y="1477" width="0.0736%" height="15" fill="rgb(235,160,14)" fg:x="485" fg:w="6"/><text x="6.2017%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.07%)</title><rect x="5.9517%" y="1461" width="0.0736%" height="15" fill="rgb(212,155,44)" fg:x="485" fg:w="6"/><text x="6.2017%" y="1471.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update_system (6 samples, 0.07%)</title><rect x="5.9517%" y="1445" width="0.0736%" height="15" fill="rgb(226,2,50)" fg:x="485" fg:w="6"/><text x="6.2017%" y="1455.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="6.0253%" y="1493" width="0.0245%" height="15" fill="rgb(234,177,6)" fg:x="491" fg:w="2"/><text x="6.2753%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="6.0253%" y="1477" width="0.0245%" height="15" fill="rgb(217,24,9)" fg:x="491" fg:w="2"/><text x="6.2753%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="6.0253%" y="1461" width="0.0245%" height="15" fill="rgb(220,13,46)" fg:x="491" fg:w="2"/><text x="6.2753%" y="1471.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (2 samples, 0.02%)</title><rect x="6.0253%" y="1445" width="0.0245%" height="15" fill="rgb(239,221,27)" fg:x="491" fg:w="2"/><text x="6.2753%" y="1455.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="6.0498%" y="1493" width="0.0123%" height="15" fill="rgb(222,198,25)" fg:x="493" fg:w="1"/><text x="6.2998%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="6.0498%" y="1477" width="0.0123%" height="15" fill="rgb(211,99,13)" fg:x="493" fg:w="1"/><text x="6.2998%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="6.0498%" y="1461" width="0.0123%" height="15" fill="rgb(232,111,31)" fg:x="493" fg:w="1"/><text x="6.2998%" y="1471.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (65 samples, 0.80%)</title><rect x="5.2767%" y="1509" width="0.7976%" height="15" fill="rgb(245,82,37)" fg:x="430" fg:w="65"/><text x="5.5267%" y="1519.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="6.0621%" y="1493" width="0.0123%" height="15" fill="rgb(227,149,46)" fg:x="494" fg:w="1"/><text x="6.3121%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="6.0621%" y="1477" width="0.0123%" height="15" fill="rgb(218,36,50)" fg:x="494" fg:w="1"/><text x="6.3121%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="6.0621%" y="1461" width="0.0123%" height="15" fill="rgb(226,80,48)" fg:x="494" fg:w="1"/><text x="6.3121%" y="1471.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (1 samples, 0.01%)</title><rect x="6.0744%" y="1509" width="0.0123%" height="15" fill="rgb(238,224,15)" fg:x="495" fg:w="1"/><text x="6.3244%" y="1519.50"></text></g><g><title>&lt;bevy_render::draw::DrawContextState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::shader::shader::Shader&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::pipeline::pipeline_compiler::PipelineCompiler&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::Res&lt;alloc::boxed::Box&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::shared_buffers::SharedBuffers&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="6.0866%" y="1509" width="0.0123%" height="15" fill="rgb(241,136,10)" fg:x="496" fg:w="1"/><text x="6.3366%" y="1519.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::resource_type (1 samples, 0.01%)</title><rect x="6.0989%" y="1509" width="0.0123%" height="15" fill="rgb(208,32,45)" fg:x="497" fg:w="1"/><text x="6.3489%" y="1519.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="6.1112%" y="1509" width="0.0123%" height="15" fill="rgb(207,135,9)" fg:x="498" fg:w="1"/><text x="6.3612%" y="1519.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (1 samples, 0.01%)</title><rect x="6.1235%" y="1509" width="0.0123%" height="15" fill="rgb(206,86,44)" fg:x="499" fg:w="1"/><text x="6.3735%" y="1519.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (1 samples, 0.01%)</title><rect x="6.1235%" y="1493" width="0.0123%" height="15" fill="rgb(245,177,15)" fg:x="499" fg:w="1"/><text x="6.3735%" y="1503.50"></text></g><g><title>&lt;core::fmt::builders::PadAdapter as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="6.1357%" y="1509" width="0.0123%" height="15" fill="rgb(206,64,50)" fg:x="500" fg:w="1"/><text x="6.3857%" y="1519.50"></text></g><g><title>core::str::traits::&lt;impl core::ops::index::Index&lt;I&gt; for str&gt;::index (1 samples, 0.01%)</title><rect x="6.1357%" y="1493" width="0.0123%" height="15" fill="rgb(234,36,40)" fg:x="500" fg:w="1"/><text x="6.3857%" y="1503.50"></text></g><g><title>core::str::traits::&lt;impl core::slice::index::SliceIndex&lt;str&gt; for core::ops::range::RangeFrom&lt;usize&gt;&gt;::index (1 samples, 0.01%)</title><rect x="6.1357%" y="1477" width="0.0123%" height="15" fill="rgb(213,64,8)" fg:x="500" fg:w="1"/><text x="6.3857%" y="1487.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="6.1357%" y="1461" width="0.0123%" height="15" fill="rgb(210,75,36)" fg:x="500" fg:w="1"/><text x="6.3857%" y="1471.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="6.1480%" y="1509" width="0.0736%" height="15" fill="rgb(229,88,21)" fg:x="501" fg:w="6"/><text x="6.3980%" y="1519.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (1 samples, 0.01%)</title><rect x="6.2094%" y="1493" width="0.0123%" height="15" fill="rgb(252,204,47)" fg:x="506" fg:w="1"/><text x="6.4594%" y="1503.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU64 as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="6.2216%" y="1509" width="0.0123%" height="15" fill="rgb(208,77,27)" fg:x="507" fg:w="1"/><text x="6.4716%" y="1519.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="6.2339%" y="1509" width="0.0123%" height="15" fill="rgb(221,76,26)" fg:x="508" fg:w="1"/><text x="6.4839%" y="1519.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="6.2462%" y="1509" width="0.0123%" height="15" fill="rgb(225,139,18)" fg:x="509" fg:w="1"/><text x="6.4962%" y="1519.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="6.2584%" y="1509" width="0.0245%" height="15" fill="rgb(230,137,11)" fg:x="510" fg:w="2"/><text x="6.5084%" y="1519.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="6.2830%" y="1509" width="0.0123%" height="15" fill="rgb(212,28,1)" fg:x="512" fg:w="1"/><text x="6.5330%" y="1519.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="6.2953%" y="1509" width="0.0123%" height="15" fill="rgb(248,164,17)" fg:x="513" fg:w="1"/><text x="6.5453%" y="1519.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="6.3075%" y="1509" width="0.0123%" height="15" fill="rgb(222,171,42)" fg:x="514" fg:w="1"/><text x="6.5575%" y="1519.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="6.3198%" y="1509" width="0.0245%" height="15" fill="rgb(243,84,45)" fg:x="515" fg:w="2"/><text x="6.5698%" y="1519.50"></text></g><g><title>alloc::slice::merge_sort (2 samples, 0.02%)</title><rect x="6.3443%" y="1509" width="0.0245%" height="15" fill="rgb(252,49,23)" fg:x="517" fg:w="2"/><text x="6.5943%" y="1519.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="6.3689%" y="1509" width="0.0123%" height="15" fill="rgb(215,19,7)" fg:x="519" fg:w="1"/><text x="6.6189%" y="1519.50"></text></g><g><title>async_executor::steal (1 samples, 0.01%)</title><rect x="6.3812%" y="1509" width="0.0123%" height="15" fill="rgb(238,81,41)" fg:x="520" fg:w="1"/><text x="6.6312%" y="1519.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (4 samples, 0.05%)</title><rect x="6.3934%" y="1509" width="0.0491%" height="15" fill="rgb(210,199,37)" fg:x="521" fg:w="4"/><text x="6.6434%" y="1519.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update (2 samples, 0.02%)</title><rect x="6.4425%" y="1509" width="0.0245%" height="15" fill="rgb(244,192,49)" fg:x="525" fg:w="2"/><text x="6.6925%" y="1519.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (14 samples, 0.17%)</title><rect x="6.4671%" y="1509" width="0.1718%" height="15" fill="rgb(226,211,11)" fg:x="527" fg:w="14"/><text x="6.7171%" y="1519.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (7 samples, 0.09%)</title><rect x="6.5530%" y="1493" width="0.0859%" height="15" fill="rgb(236,162,54)" fg:x="534" fg:w="7"/><text x="6.8030%" y="1503.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (2 samples, 0.02%)</title><rect x="6.6143%" y="1477" width="0.0245%" height="15" fill="rgb(220,229,9)" fg:x="539" fg:w="2"/><text x="6.8643%" y="1487.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2 samples, 0.02%)</title><rect x="6.6143%" y="1461" width="0.0245%" height="15" fill="rgb(250,87,22)" fg:x="539" fg:w="2"/><text x="6.8643%" y="1471.50"></text></g><g><title>bevy_asset::io::file_asset_io::filesystem_watcher_system (1 samples, 0.01%)</title><rect x="6.6389%" y="1509" width="0.0123%" height="15" fill="rgb(239,43,17)" fg:x="541" fg:w="1"/><text x="6.8889%" y="1519.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="6.6389%" y="1493" width="0.0123%" height="15" fill="rgb(231,177,25)" fg:x="541" fg:w="1"/><text x="6.8889%" y="1503.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="6.6389%" y="1477" width="0.0123%" height="15" fill="rgb(219,179,1)" fg:x="541" fg:w="1"/><text x="6.8889%" y="1487.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="6.6389%" y="1461" width="0.0123%" height="15" fill="rgb(238,219,53)" fg:x="541" fg:w="1"/><text x="6.8889%" y="1471.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="6.6389%" y="1445" width="0.0123%" height="15" fill="rgb(232,167,36)" fg:x="541" fg:w="1"/><text x="6.8889%" y="1455.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.01%)</title><rect x="6.6389%" y="1429" width="0.0123%" height="15" fill="rgb(244,19,51)" fg:x="541" fg:w="1"/><text x="6.8889%" y="1439.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="6.6511%" y="1509" width="0.0123%" height="15" fill="rgb(224,6,22)" fg:x="542" fg:w="1"/><text x="6.9011%" y="1519.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (1 samples, 0.01%)</title><rect x="6.6634%" y="1509" width="0.0123%" height="15" fill="rgb(224,145,5)" fg:x="543" fg:w="1"/><text x="6.9134%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="6.6634%" y="1493" width="0.0123%" height="15" fill="rgb(234,130,49)" fg:x="543" fg:w="1"/><text x="6.9134%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="6.6634%" y="1477" width="0.0123%" height="15" fill="rgb(254,6,2)" fg:x="543" fg:w="1"/><text x="6.9134%" y="1487.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_or_assign_index (1 samples, 0.01%)</title><rect x="6.6757%" y="1509" width="0.0123%" height="15" fill="rgb(208,96,46)" fg:x="544" fg:w="1"/><text x="6.9257%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (3 samples, 0.04%)</title><rect x="6.6879%" y="1509" width="0.0368%" height="15" fill="rgb(239,3,39)" fg:x="545" fg:w="3"/><text x="6.9379%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (1 samples, 0.01%)</title><rect x="6.7248%" y="1509" width="0.0123%" height="15" fill="rgb(233,210,1)" fg:x="548" fg:w="1"/><text x="6.9748%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (1 samples, 0.01%)</title><rect x="6.7370%" y="1509" width="0.0123%" height="15" fill="rgb(244,137,37)" fg:x="549" fg:w="1"/><text x="6.9870%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (2 samples, 0.02%)</title><rect x="6.7493%" y="1509" width="0.0245%" height="15" fill="rgb(240,136,2)" fg:x="550" fg:w="2"/><text x="6.9993%" y="1519.50"></text></g><g><title>bevy_render::shader::shader::shader_update_system (1 samples, 0.01%)</title><rect x="6.7738%" y="1509" width="0.0123%" height="15" fill="rgb(239,18,37)" fg:x="552" fg:w="1"/><text x="7.0238%" y="1519.50"></text></g><g><title>bevy_transform::hierarchy::hierarchy_maintenance_system::parent_update_system (1 samples, 0.01%)</title><rect x="6.7861%" y="1509" width="0.0123%" height="15" fill="rgb(218,185,22)" fg:x="553" fg:w="1"/><text x="7.0361%" y="1519.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (1 samples, 0.01%)</title><rect x="6.7984%" y="1509" width="0.0123%" height="15" fill="rgb(225,218,4)" fg:x="554" fg:w="1"/><text x="7.0484%" y="1519.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="6.8107%" y="1509" width="0.0123%" height="15" fill="rgb(230,182,32)" fg:x="555" fg:w="1"/><text x="7.0607%" y="1519.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="6.8229%" y="1509" width="0.0245%" height="15" fill="rgb(242,56,43)" fg:x="556" fg:w="2"/><text x="7.0729%" y="1519.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="6.8352%" y="1493" width="0.0123%" height="15" fill="rgb(233,99,24)" fg:x="557" fg:w="1"/><text x="7.0852%" y="1503.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="6.8352%" y="1477" width="0.0123%" height="15" fill="rgb(234,209,42)" fg:x="557" fg:w="1"/><text x="7.0852%" y="1487.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="6.8475%" y="1509" width="0.0123%" height="15" fill="rgb(227,7,12)" fg:x="558" fg:w="1"/><text x="7.0975%" y="1519.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="6.8475%" y="1493" width="0.0123%" height="15" fill="rgb(245,203,43)" fg:x="558" fg:w="1"/><text x="7.0975%" y="1503.50"></text></g><g><title>bevy_egui::systems::begin_frame (1 samples, 0.01%)</title><rect x="6.8475%" y="1477" width="0.0123%" height="15" fill="rgb(238,205,33)" fg:x="558" fg:w="1"/><text x="7.0975%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="6.8475%" y="1461" width="0.0123%" height="15" fill="rgb(231,56,7)" fg:x="558" fg:w="1"/><text x="7.0975%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="6.8475%" y="1445" width="0.0123%" height="15" fill="rgb(244,186,29)" fg:x="558" fg:w="1"/><text x="7.0975%" y="1455.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="6.8475%" y="1429" width="0.0123%" height="15" fill="rgb(234,111,31)" fg:x="558" fg:w="1"/><text x="7.0975%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (3 samples, 0.04%)</title><rect x="6.8597%" y="1509" width="0.0368%" height="15" fill="rgb(241,149,10)" fg:x="559" fg:w="3"/><text x="7.1097%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="6.8966%" y="1509" width="0.0123%" height="15" fill="rgb(249,206,44)" fg:x="562" fg:w="1"/><text x="7.1466%" y="1519.50"></text></g><g><title>core::ptr::hash (1 samples, 0.01%)</title><rect x="6.9088%" y="1509" width="0.0123%" height="15" fill="rgb(251,153,30)" fg:x="563" fg:w="1"/><text x="7.1588%" y="1519.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (7 samples, 0.09%)</title><rect x="6.9211%" y="1509" width="0.0859%" height="15" fill="rgb(239,152,38)" fg:x="564" fg:w="7"/><text x="7.1711%" y="1519.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (3 samples, 0.04%)</title><rect x="6.9702%" y="1493" width="0.0368%" height="15" fill="rgb(249,139,47)" fg:x="568" fg:w="3"/><text x="7.2202%" y="1503.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (4 samples, 0.05%)</title><rect x="7.0070%" y="1509" width="0.0491%" height="15" fill="rgb(244,64,35)" fg:x="571" fg:w="4"/><text x="7.2570%" y="1519.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (3 samples, 0.04%)</title><rect x="7.0561%" y="1509" width="0.0368%" height="15" fill="rgb(216,46,15)" fg:x="575" fg:w="3"/><text x="7.3061%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="7.0929%" y="1509" width="0.0123%" height="15" fill="rgb(250,74,19)" fg:x="578" fg:w="1"/><text x="7.3429%" y="1519.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (1 samples, 0.01%)</title><rect x="7.1052%" y="1509" width="0.0123%" height="15" fill="rgb(249,42,33)" fg:x="579" fg:w="1"/><text x="7.3552%" y="1519.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="7.1174%" y="1509" width="0.0123%" height="15" fill="rgb(242,149,17)" fg:x="580" fg:w="1"/><text x="7.3674%" y="1519.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack_tid (1 samples, 0.01%)</title><rect x="7.1174%" y="1493" width="0.0123%" height="15" fill="rgb(244,29,21)" fg:x="580" fg:w="1"/><text x="7.3674%" y="1503.50"></text></g><g><title>sharded_slab::cfg::CfgPrivate::unpack (1 samples, 0.01%)</title><rect x="7.1174%" y="1477" width="0.0123%" height="15" fill="rgb(220,130,37)" fg:x="580" fg:w="1"/><text x="7.3674%" y="1487.50"></text></g><g><title>sharded_slab::Pack::from_packed (1 samples, 0.01%)</title><rect x="7.1174%" y="1461" width="0.0123%" height="15" fill="rgb(211,67,2)" fg:x="580" fg:w="1"/><text x="7.3674%" y="1471.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.01%)</title><rect x="7.1297%" y="1509" width="0.0123%" height="15" fill="rgb(235,68,52)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1519.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="7.1297%" y="1493" width="0.0123%" height="15" fill="rgb(246,142,3)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1503.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.01%)</title><rect x="7.1297%" y="1477" width="0.0123%" height="15" fill="rgb(241,25,7)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="7.1297%" y="1461" width="0.0123%" height="15" fill="rgb(242,119,39)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="7.1297%" y="1445" width="0.0123%" height="15" fill="rgb(241,98,45)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1455.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.01%)</title><rect x="7.1297%" y="1429" width="0.0123%" height="15" fill="rgb(254,28,30)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1439.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="7.1297%" y="1413" width="0.0123%" height="15" fill="rgb(241,142,54)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1423.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.01%)</title><rect x="7.1297%" y="1397" width="0.0123%" height="15" fill="rgb(222,85,15)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1407.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="7.1297%" y="1381" width="0.0123%" height="15" fill="rgb(210,85,47)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1391.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="7.1297%" y="1365" width="0.0123%" height="15" fill="rgb(224,206,25)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1375.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="7.1297%" y="1349" width="0.0123%" height="15" fill="rgb(243,201,19)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1359.50"></text></g><g><title>async_task::runnable::Runnable::run (1 samples, 0.01%)</title><rect x="7.1297%" y="1333" width="0.0123%" height="15" fill="rgb(236,59,4)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1343.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1 samples, 0.01%)</title><rect x="7.1297%" y="1317" width="0.0123%" height="15" fill="rgb(254,179,45)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="7.1297%" y="1301" width="0.0123%" height="15" fill="rgb(226,14,10)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1311.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1 samples, 0.01%)</title><rect x="7.1297%" y="1285" width="0.0123%" height="15" fill="rgb(244,27,41)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1295.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="7.1297%" y="1269" width="0.0123%" height="15" fill="rgb(235,35,32)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1279.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1 samples, 0.01%)</title><rect x="7.1297%" y="1253" width="0.0123%" height="15" fill="rgb(218,68,31)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1263.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="7.1297%" y="1237" width="0.0123%" height="15" fill="rgb(207,120,37)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1247.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="7.1297%" y="1221" width="0.0123%" height="15" fill="rgb(227,98,0)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="7.1297%" y="1205" width="0.0123%" height="15" fill="rgb(207,7,3)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1215.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="7.1297%" y="1189" width="0.0123%" height="15" fill="rgb(206,98,19)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1199.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (1 samples, 0.01%)</title><rect x="7.1297%" y="1173" width="0.0123%" height="15" fill="rgb(217,5,26)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1183.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (1 samples, 0.01%)</title><rect x="7.1297%" y="1157" width="0.0123%" height="15" fill="rgb(235,190,38)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1167.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (1 samples, 0.01%)</title><rect x="7.1297%" y="1141" width="0.0123%" height="15" fill="rgb(247,86,24)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1151.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (1 samples, 0.01%)</title><rect x="7.1297%" y="1125" width="0.0123%" height="15" fill="rgb(205,101,16)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1135.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (1 samples, 0.01%)</title><rect x="7.1297%" y="1109" width="0.0123%" height="15" fill="rgb(246,168,33)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1119.50"></text></g><g><title>wgpu::Device::create_bind_group (1 samples, 0.01%)</title><rect x="7.1297%" y="1093" width="0.0123%" height="15" fill="rgb(231,114,1)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1103.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (1 samples, 0.01%)</title><rect x="7.1297%" y="1077" width="0.0123%" height="15" fill="rgb(207,184,53)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1087.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (1 samples, 0.01%)</title><rect x="7.1297%" y="1061" width="0.0123%" height="15" fill="rgb(224,95,51)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1071.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_bind_group (1 samples, 0.01%)</title><rect x="7.1297%" y="1045" width="0.0123%" height="15" fill="rgb(212,188,45)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1055.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::write_descriptor_set (1 samples, 0.01%)</title><rect x="7.1297%" y="1029" width="0.0123%" height="15" fill="rgb(223,154,38)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="7.1297%" y="1013" width="0.0123%" height="15" fill="rgb(251,22,52)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="7.1297%" y="997" width="0.0123%" height="15" fill="rgb(229,209,22)" fg:x="581" fg:w="1"/><text x="7.3797%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="7.1297%" y="981" width="0.0123%" height="15" fill="rgb(234,138,34)" fg:x="581" fg:w="1"/><text x="7.3797%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="7.1297%" y="965" width="0.0123%" height="15" fill="rgb(212,95,11)" fg:x="581" fg:w="1"/><text x="7.3797%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="7.1297%" y="949" width="0.0123%" height="15" fill="rgb(240,179,47)" fg:x="581" fg:w="1"/><text x="7.3797%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="7.1297%" y="933" width="0.0123%" height="15" fill="rgb(240,163,11)" fg:x="581" fg:w="1"/><text x="7.3797%" y="943.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="7.1297%" y="917" width="0.0123%" height="15" fill="rgb(236,37,12)" fg:x="581" fg:w="1"/><text x="7.3797%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.04%)</title><rect x="7.1420%" y="1509" width="0.0368%" height="15" fill="rgb(232,164,16)" fg:x="582" fg:w="3"/><text x="7.3920%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="7.1420%" y="1493" width="0.0368%" height="15" fill="rgb(244,205,15)" fg:x="582" fg:w="3"/><text x="7.3920%" y="1503.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.01%)</title><rect x="7.1665%" y="1477" width="0.0123%" height="15" fill="rgb(223,117,47)" fg:x="584" fg:w="1"/><text x="7.4165%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.01%)</title><rect x="7.1665%" y="1461" width="0.0123%" height="15" fill="rgb(244,107,35)" fg:x="584" fg:w="1"/><text x="7.4165%" y="1471.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="7.1665%" y="1445" width="0.0123%" height="15" fill="rgb(205,140,8)" fg:x="584" fg:w="1"/><text x="7.4165%" y="1455.50"></text></g><g><title>wgpu::MapContext::add (1 samples, 0.01%)</title><rect x="7.1788%" y="1509" width="0.0123%" height="15" fill="rgb(228,84,46)" fg:x="585" fg:w="1"/><text x="7.4288%" y="1519.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (1 samples, 0.01%)</title><rect x="7.1911%" y="1509" width="0.0123%" height="15" fill="rgb(254,188,9)" fg:x="586" fg:w="1"/><text x="7.4411%" y="1519.50"></text></g><g><title>wgpu_core::device::alloc::MemoryBlock&lt;B&gt;::map (1 samples, 0.01%)</title><rect x="7.2033%" y="1509" width="0.0123%" height="15" fill="rgb(206,112,54)" fg:x="587" fg:w="1"/><text x="7.4533%" y="1519.50"></text></g><g><title>[unknown] (177 samples, 2.17%)</title><rect x="5.0558%" y="1525" width="2.1720%" height="15" fill="rgb(216,84,49)" fg:x="412" fg:w="177"/><text x="5.3058%" y="1535.50">[..</text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="7.2156%" y="1509" width="0.0123%" height="15" fill="rgb(214,194,35)" fg:x="588" fg:w="1"/><text x="7.4656%" y="1519.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="7.6083%" y="1157" width="0.0245%" height="15" fill="rgb(249,28,3)" fg:x="620" fg:w="2"/><text x="7.8583%" y="1167.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="7.6083%" y="1141" width="0.0245%" height="15" fill="rgb(222,56,52)" fg:x="620" fg:w="2"/><text x="7.8583%" y="1151.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="7.6083%" y="1125" width="0.0245%" height="15" fill="rgb(245,217,50)" fg:x="620" fg:w="2"/><text x="7.8583%" y="1135.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="7.6328%" y="1157" width="0.0123%" height="15" fill="rgb(213,201,24)" fg:x="622" fg:w="1"/><text x="7.8828%" y="1167.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="7.6451%" y="1141" width="0.0245%" height="15" fill="rgb(248,116,28)" fg:x="623" fg:w="2"/><text x="7.8951%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (8 samples, 0.10%)</title><rect x="7.6451%" y="1157" width="0.0982%" height="15" fill="rgb(219,72,43)" fg:x="623" fg:w="8"/><text x="7.8951%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (6 samples, 0.07%)</title><rect x="7.6697%" y="1141" width="0.0736%" height="15" fill="rgb(209,138,14)" fg:x="625" fg:w="6"/><text x="7.9197%" y="1151.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="7.6697%" y="1125" width="0.0736%" height="15" fill="rgb(222,18,33)" fg:x="625" fg:w="6"/><text x="7.9197%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (5 samples, 0.06%)</title><rect x="7.6819%" y="1109" width="0.0614%" height="15" fill="rgb(213,199,7)" fg:x="626" fg:w="5"/><text x="7.9319%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (5 samples, 0.06%)</title><rect x="7.6819%" y="1093" width="0.0614%" height="15" fill="rgb(250,110,10)" fg:x="626" fg:w="5"/><text x="7.9319%" y="1103.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (5 samples, 0.06%)</title><rect x="7.6819%" y="1077" width="0.0614%" height="15" fill="rgb(248,123,6)" fg:x="626" fg:w="5"/><text x="7.9319%" y="1087.50"></text></g><g><title>core::task::wake::Waker::will_wake (4 samples, 0.05%)</title><rect x="7.7433%" y="1157" width="0.0491%" height="15" fill="rgb(206,91,31)" fg:x="631" fg:w="4"/><text x="7.9933%" y="1167.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (4 samples, 0.05%)</title><rect x="7.7433%" y="1141" width="0.0491%" height="15" fill="rgb(211,154,13)" fg:x="631" fg:w="4"/><text x="7.9933%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="7.7801%" y="1125" width="0.0123%" height="15" fill="rgb(225,148,7)" fg:x="634" fg:w="1"/><text x="8.0301%" y="1135.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="7.7801%" y="1109" width="0.0123%" height="15" fill="rgb(220,160,43)" fg:x="634" fg:w="1"/><text x="8.0301%" y="1119.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (29 samples, 0.36%)</title><rect x="7.5347%" y="1173" width="0.3559%" height="15" fill="rgb(213,52,39)" fg:x="614" fg:w="29"/><text x="7.7847%" y="1183.50"></text></g><g><title>event_listener::Inner::lock (8 samples, 0.10%)</title><rect x="7.7924%" y="1157" width="0.0982%" height="15" fill="rgb(243,137,7)" fg:x="635" fg:w="8"/><text x="8.0424%" y="1167.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.10%)</title><rect x="7.7924%" y="1141" width="0.0982%" height="15" fill="rgb(230,79,13)" fg:x="635" fg:w="8"/><text x="8.0424%" y="1151.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (8 samples, 0.10%)</title><rect x="7.7924%" y="1125" width="0.0982%" height="15" fill="rgb(247,105,23)" fg:x="635" fg:w="8"/><text x="8.0424%" y="1135.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (5 samples, 0.06%)</title><rect x="7.8292%" y="1109" width="0.0614%" height="15" fill="rgb(223,179,41)" fg:x="638" fg:w="5"/><text x="8.0792%" y="1119.50"></text></g><g><title>__GI___pthread_mutex_lock (5 samples, 0.06%)</title><rect x="7.8292%" y="1093" width="0.0614%" height="15" fill="rgb(218,9,34)" fg:x="638" fg:w="5"/><text x="8.0792%" y="1103.50"></text></g><g><title>[engine] (3 samples, 0.04%)</title><rect x="7.8905%" y="1173" width="0.0368%" height="15" fill="rgb(222,106,8)" fg:x="643" fg:w="3"/><text x="8.1405%" y="1183.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3 samples, 0.04%)</title><rect x="7.8905%" y="1157" width="0.0368%" height="15" fill="rgb(211,220,0)" fg:x="643" fg:w="3"/><text x="8.1405%" y="1167.50"></text></g><g><title>concurrent_queue::full_fence (2 samples, 0.02%)</title><rect x="8.1114%" y="1125" width="0.0245%" height="15" fill="rgb(229,52,16)" fg:x="661" fg:w="2"/><text x="8.3614%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2 samples, 0.02%)</title><rect x="8.1114%" y="1109" width="0.0245%" height="15" fill="rgb(212,155,18)" fg:x="661" fg:w="2"/><text x="8.3614%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="8.1114%" y="1093" width="0.0245%" height="15" fill="rgb(242,21,14)" fg:x="661" fg:w="2"/><text x="8.3614%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="8.1114%" y="1077" width="0.0245%" height="15" fill="rgb(222,19,48)" fg:x="661" fg:w="2"/><text x="8.3614%" y="1087.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (60 samples, 0.74%)</title><rect x="7.4488%" y="1189" width="0.7363%" height="15" fill="rgb(232,45,27)" fg:x="607" fg:w="60"/><text x="7.6988%" y="1199.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (21 samples, 0.26%)</title><rect x="7.9274%" y="1173" width="0.2577%" height="15" fill="rgb(249,103,42)" fg:x="646" fg:w="21"/><text x="8.1774%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (15 samples, 0.18%)</title><rect x="8.0010%" y="1157" width="0.1841%" height="15" fill="rgb(246,81,33)" fg:x="652" fg:w="15"/><text x="8.2510%" y="1167.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (9 samples, 0.11%)</title><rect x="8.0746%" y="1141" width="0.1104%" height="15" fill="rgb(252,33,42)" fg:x="658" fg:w="9"/><text x="8.3246%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="8.1360%" y="1125" width="0.0491%" height="15" fill="rgb(209,212,41)" fg:x="663" fg:w="4"/><text x="8.3860%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="8.1360%" y="1109" width="0.0491%" height="15" fill="rgb(207,154,6)" fg:x="663" fg:w="4"/><text x="8.3860%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="8.1851%" y="1173" width="0.0123%" height="15" fill="rgb(223,64,47)" fg:x="667" fg:w="1"/><text x="8.4351%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="8.2464%" y="1141" width="0.0123%" height="15" fill="rgb(211,161,38)" fg:x="672" fg:w="1"/><text x="8.4964%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="8.3078%" y="1109" width="0.0123%" height="15" fill="rgb(219,138,40)" fg:x="677" fg:w="1"/><text x="8.5578%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="8.4182%" y="1061" width="0.0123%" height="15" fill="rgb(241,228,46)" fg:x="686" fg:w="1"/><text x="8.6682%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="8.5041%" y="1045" width="0.0123%" height="15" fill="rgb(223,209,38)" fg:x="693" fg:w="1"/><text x="8.7541%" y="1055.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="8.5532%" y="949" width="0.0245%" height="15" fill="rgb(236,164,45)" fg:x="697" fg:w="2"/><text x="8.8032%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (12 samples, 0.15%)</title><rect x="8.5164%" y="981" width="0.1473%" height="15" fill="rgb(231,15,5)" fg:x="694" fg:w="12"/><text x="8.7664%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.12%)</title><rect x="8.5409%" y="965" width="0.1227%" height="15" fill="rgb(252,35,15)" fg:x="696" fg:w="10"/><text x="8.7909%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (7 samples, 0.09%)</title><rect x="8.5777%" y="949" width="0.0859%" height="15" fill="rgb(248,181,18)" fg:x="699" fg:w="7"/><text x="8.8277%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (7 samples, 0.09%)</title><rect x="8.5777%" y="933" width="0.0859%" height="15" fill="rgb(233,39,42)" fg:x="699" fg:w="7"/><text x="8.8277%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (5 samples, 0.06%)</title><rect x="8.6023%" y="917" width="0.0614%" height="15" fill="rgb(238,110,33)" fg:x="701" fg:w="5"/><text x="8.8523%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (5 samples, 0.06%)</title><rect x="8.6023%" y="901" width="0.0614%" height="15" fill="rgb(233,195,10)" fg:x="701" fg:w="5"/><text x="8.8523%" y="911.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="8.6391%" y="885" width="0.0245%" height="15" fill="rgb(254,105,3)" fg:x="704" fg:w="2"/><text x="8.8891%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::ptr_eq (2 samples, 0.02%)</title><rect x="8.6391%" y="869" width="0.0245%" height="15" fill="rgb(221,225,9)" fg:x="704" fg:w="2"/><text x="8.8891%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.18%)</title><rect x="8.5164%" y="1045" width="0.1841%" height="15" fill="rgb(224,227,45)" fg:x="694" fg:w="15"/><text x="8.7664%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (15 samples, 0.18%)</title><rect x="8.5164%" y="1029" width="0.1841%" height="15" fill="rgb(229,198,43)" fg:x="694" fg:w="15"/><text x="8.7664%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.18%)</title><rect x="8.5164%" y="1013" width="0.1841%" height="15" fill="rgb(206,209,35)" fg:x="694" fg:w="15"/><text x="8.7664%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (15 samples, 0.18%)</title><rect x="8.5164%" y="997" width="0.1841%" height="15" fill="rgb(245,195,53)" fg:x="694" fg:w="15"/><text x="8.7664%" y="1007.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="8.6636%" y="981" width="0.0368%" height="15" fill="rgb(240,92,26)" fg:x="706" fg:w="3"/><text x="8.9136%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::capacity (1 samples, 0.01%)</title><rect x="8.7127%" y="1029" width="0.0123%" height="15" fill="rgb(207,40,23)" fg:x="710" fg:w="1"/><text x="8.9627%" y="1039.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (31 samples, 0.38%)</title><rect x="8.7250%" y="1029" width="0.3804%" height="15" fill="rgb(223,111,35)" fg:x="711" fg:w="31"/><text x="8.9750%" y="1039.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (19 samples, 0.23%)</title><rect x="8.8723%" y="1013" width="0.2332%" height="15" fill="rgb(229,147,28)" fg:x="723" fg:w="19"/><text x="9.1223%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.15%)</title><rect x="8.9582%" y="997" width="0.1473%" height="15" fill="rgb(211,29,28)" fg:x="730" fg:w="12"/><text x="9.2082%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.15%)</title><rect x="8.9582%" y="981" width="0.1473%" height="15" fill="rgb(228,72,33)" fg:x="730" fg:w="12"/><text x="9.2082%" y="991.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="9.1177%" y="1013" width="0.0245%" height="15" fill="rgb(205,214,31)" fg:x="743" fg:w="2"/><text x="9.3677%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="9.1177%" y="997" width="0.0245%" height="15" fill="rgb(224,111,15)" fg:x="743" fg:w="2"/><text x="9.3677%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="9.1177%" y="981" width="0.0245%" height="15" fill="rgb(253,21,26)" fg:x="743" fg:w="2"/><text x="9.3677%" y="991.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.07%)</title><rect x="9.1422%" y="997" width="0.0736%" height="15" fill="rgb(245,139,43)" fg:x="745" fg:w="6"/><text x="9.3922%" y="1007.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.07%)</title><rect x="9.1422%" y="981" width="0.0736%" height="15" fill="rgb(252,170,7)" fg:x="745" fg:w="6"/><text x="9.3922%" y="991.50"></text></g><g><title>__GI___libc_free (6 samples, 0.07%)</title><rect x="9.1422%" y="965" width="0.0736%" height="15" fill="rgb(231,118,14)" fg:x="745" fg:w="6"/><text x="9.3922%" y="975.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="9.1913%" y="949" width="0.0245%" height="15" fill="rgb(238,83,0)" fg:x="749" fg:w="2"/><text x="9.4413%" y="959.50"></text></g><g><title>concurrent_queue::full_fence (5 samples, 0.06%)</title><rect x="9.2159%" y="997" width="0.0614%" height="15" fill="rgb(221,39,39)" fg:x="751" fg:w="5"/><text x="9.4659%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2 samples, 0.02%)</title><rect x="9.2527%" y="981" width="0.0245%" height="15" fill="rgb(222,119,46)" fg:x="754" fg:w="2"/><text x="9.5027%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="9.2527%" y="965" width="0.0245%" height="15" fill="rgb(222,165,49)" fg:x="754" fg:w="2"/><text x="9.5027%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="9.2527%" y="949" width="0.0245%" height="15" fill="rgb(219,113,52)" fg:x="754" fg:w="2"/><text x="9.5027%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (1 samples, 0.01%)</title><rect x="9.2772%" y="997" width="0.0123%" height="15" fill="rgb(214,7,15)" fg:x="756" fg:w="1"/><text x="9.5272%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="9.2772%" y="981" width="0.0123%" height="15" fill="rgb(235,32,4)" fg:x="756" fg:w="1"/><text x="9.5272%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="9.2772%" y="965" width="0.0123%" height="15" fill="rgb(238,90,54)" fg:x="756" fg:w="1"/><text x="9.5272%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="9.2895%" y="997" width="0.0123%" height="15" fill="rgb(213,208,19)" fg:x="757" fg:w="1"/><text x="9.5395%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="9.2895%" y="981" width="0.0123%" height="15" fill="rgb(233,156,4)" fg:x="757" fg:w="1"/><text x="9.5395%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.06%)</title><rect x="9.3018%" y="997" width="0.0614%" height="15" fill="rgb(207,194,5)" fg:x="758" fg:w="5"/><text x="9.5518%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.06%)</title><rect x="9.3018%" y="981" width="0.0614%" height="15" fill="rgb(206,111,30)" fg:x="758" fg:w="5"/><text x="9.5518%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (3 samples, 0.04%)</title><rect x="9.3631%" y="997" width="0.0368%" height="15" fill="rgb(243,70,54)" fg:x="763" fg:w="3"/><text x="9.6131%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_or (3 samples, 0.04%)</title><rect x="9.3631%" y="981" width="0.0368%" height="15" fill="rgb(242,28,8)" fg:x="763" fg:w="3"/><text x="9.6131%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (26 samples, 0.32%)</title><rect x="9.1054%" y="1029" width="0.3191%" height="15" fill="rgb(219,106,18)" fg:x="742" fg:w="26"/><text x="9.3554%" y="1039.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (23 samples, 0.28%)</title><rect x="9.1422%" y="1013" width="0.2822%" height="15" fill="rgb(244,222,10)" fg:x="745" fg:w="23"/><text x="9.3922%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="9.3999%" y="997" width="0.0245%" height="15" fill="rgb(236,179,52)" fg:x="766" fg:w="2"/><text x="9.6499%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="9.3999%" y="981" width="0.0245%" height="15" fill="rgb(213,23,39)" fg:x="766" fg:w="2"/><text x="9.6499%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (4 samples, 0.05%)</title><rect x="9.4490%" y="997" width="0.0491%" height="15" fill="rgb(238,48,10)" fg:x="770" fg:w="4"/><text x="9.6990%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.05%)</title><rect x="9.4490%" y="981" width="0.0491%" height="15" fill="rgb(251,196,23)" fg:x="770" fg:w="4"/><text x="9.6990%" y="991.50"></text></g><g><title>async_executor::steal (67 samples, 0.82%)</title><rect x="8.7005%" y="1045" width="0.8222%" height="15" fill="rgb(250,152,24)" fg:x="709" fg:w="67"/><text x="8.9505%" y="1055.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (8 samples, 0.10%)</title><rect x="9.4245%" y="1029" width="0.0982%" height="15" fill="rgb(209,150,17)" fg:x="768" fg:w="8"/><text x="9.6745%" y="1039.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (8 samples, 0.10%)</title><rect x="9.4245%" y="1013" width="0.0982%" height="15" fill="rgb(234,202,34)" fg:x="768" fg:w="8"/><text x="9.6745%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="9.4981%" y="997" width="0.0245%" height="15" fill="rgb(253,148,53)" fg:x="774" fg:w="2"/><text x="9.7481%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="9.4981%" y="981" width="0.0245%" height="15" fill="rgb(218,129,16)" fg:x="774" fg:w="2"/><text x="9.7481%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (13 samples, 0.16%)</title><rect x="9.7803%" y="1013" width="0.1595%" height="15" fill="rgb(216,85,19)" fg:x="797" fg:w="13"/><text x="10.0303%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (13 samples, 0.16%)</title><rect x="9.7803%" y="997" width="0.1595%" height="15" fill="rgb(235,228,7)" fg:x="797" fg:w="13"/><text x="10.0303%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.16%)</title><rect x="9.7803%" y="981" width="0.1595%" height="15" fill="rgb(245,175,0)" fg:x="797" fg:w="13"/><text x="10.0303%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.16%)</title><rect x="9.7803%" y="965" width="0.1595%" height="15" fill="rgb(208,168,36)" fg:x="797" fg:w="13"/><text x="10.0303%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (4 samples, 0.05%)</title><rect x="9.9399%" y="1013" width="0.0491%" height="15" fill="rgb(246,171,24)" fg:x="810" fg:w="4"/><text x="10.1899%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.05%)</title><rect x="9.9399%" y="997" width="0.0491%" height="15" fill="rgb(215,142,24)" fg:x="810" fg:w="4"/><text x="10.1899%" y="1007.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (43 samples, 0.53%)</title><rect x="9.6208%" y="1029" width="0.5277%" height="15" fill="rgb(250,187,7)" fg:x="784" fg:w="43"/><text x="9.8708%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.16%)</title><rect x="9.9890%" y="1013" width="0.1595%" height="15" fill="rgb(228,66,33)" fg:x="814" fg:w="13"/><text x="10.2390%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.16%)</title><rect x="9.9890%" y="997" width="0.1595%" height="15" fill="rgb(234,215,21)" fg:x="814" fg:w="13"/><text x="10.2390%" y="1007.50"></text></g><g><title>concurrent_queue::full_fence (8 samples, 0.10%)</title><rect x="10.1730%" y="1013" width="0.0982%" height="15" fill="rgb(222,191,20)" fg:x="829" fg:w="8"/><text x="10.4230%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (8 samples, 0.10%)</title><rect x="10.1730%" y="997" width="0.0982%" height="15" fill="rgb(245,79,54)" fg:x="829" fg:w="8"/><text x="10.4230%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (8 samples, 0.10%)</title><rect x="10.1730%" y="981" width="0.0982%" height="15" fill="rgb(240,10,37)" fg:x="829" fg:w="8"/><text x="10.4230%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.10%)</title><rect x="10.1730%" y="965" width="0.0982%" height="15" fill="rgb(214,192,32)" fg:x="829" fg:w="8"/><text x="10.4230%" y="975.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (4 samples, 0.05%)</title><rect x="10.2712%" y="1013" width="0.0491%" height="15" fill="rgb(209,36,54)" fg:x="837" fg:w="4"/><text x="10.5212%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="10.2712%" y="997" width="0.0491%" height="15" fill="rgb(220,10,11)" fg:x="837" fg:w="4"/><text x="10.5212%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="10.2712%" y="981" width="0.0491%" height="15" fill="rgb(221,106,17)" fg:x="837" fg:w="4"/><text x="10.5212%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="10.3203%" y="1013" width="0.0245%" height="15" fill="rgb(251,142,44)" fg:x="841" fg:w="2"/><text x="10.5703%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="10.3203%" y="997" width="0.0245%" height="15" fill="rgb(238,13,15)" fg:x="841" fg:w="2"/><text x="10.5703%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (4 samples, 0.05%)</title><rect x="10.3448%" y="1013" width="0.0491%" height="15" fill="rgb(208,107,27)" fg:x="843" fg:w="4"/><text x="10.5948%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_or (4 samples, 0.05%)</title><rect x="10.3448%" y="997" width="0.0491%" height="15" fill="rgb(205,136,37)" fg:x="843" fg:w="4"/><text x="10.5948%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (77 samples, 0.94%)</title><rect x="9.5226%" y="1045" width="0.9449%" height="15" fill="rgb(250,205,27)" fg:x="776" fg:w="77"/><text x="9.7726%" y="1055.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (26 samples, 0.32%)</title><rect x="10.1485%" y="1029" width="0.3191%" height="15" fill="rgb(210,80,43)" fg:x="827" fg:w="26"/><text x="10.3985%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (6 samples, 0.07%)</title><rect x="10.3939%" y="1013" width="0.0736%" height="15" fill="rgb(247,160,36)" fg:x="847" fg:w="6"/><text x="10.6439%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.07%)</title><rect x="10.3939%" y="997" width="0.0736%" height="15" fill="rgb(234,13,49)" fg:x="847" fg:w="6"/><text x="10.6439%" y="1007.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="10.4798%" y="981" width="0.0123%" height="15" fill="rgb(234,122,0)" fg:x="854" fg:w="1"/><text x="10.7298%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.06%)</title><rect x="10.4921%" y="981" width="0.0614%" height="15" fill="rgb(207,146,38)" fg:x="855" fg:w="5"/><text x="10.7421%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.06%)</title><rect x="10.4921%" y="965" width="0.0614%" height="15" fill="rgb(207,177,25)" fg:x="855" fg:w="5"/><text x="10.7421%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (15 samples, 0.18%)</title><rect x="10.4675%" y="1045" width="0.1841%" height="15" fill="rgb(211,178,42)" fg:x="853" fg:w="15"/><text x="10.7175%" y="1055.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.18%)</title><rect x="10.4675%" y="1029" width="0.1841%" height="15" fill="rgb(230,69,54)" fg:x="853" fg:w="15"/><text x="10.7175%" y="1039.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (14 samples, 0.17%)</title><rect x="10.4798%" y="1013" width="0.1718%" height="15" fill="rgb(214,135,41)" fg:x="854" fg:w="14"/><text x="10.7298%" y="1023.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (14 samples, 0.17%)</title><rect x="10.4798%" y="997" width="0.1718%" height="15" fill="rgb(237,67,25)" fg:x="854" fg:w="14"/><text x="10.7298%" y="1007.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (8 samples, 0.10%)</title><rect x="10.5534%" y="981" width="0.0982%" height="15" fill="rgb(222,189,50)" fg:x="860" fg:w="8"/><text x="10.8034%" y="991.50"></text></g><g><title>__GI___pthread_rwlock_unlock (8 samples, 0.10%)</title><rect x="10.5534%" y="965" width="0.0982%" height="15" fill="rgb(245,148,34)" fg:x="860" fg:w="8"/><text x="10.8034%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (2 samples, 0.02%)</title><rect x="10.6516%" y="1045" width="0.0245%" height="15" fill="rgb(222,29,6)" fg:x="868" fg:w="2"/><text x="10.9016%" y="1055.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="10.6516%" y="1029" width="0.0245%" height="15" fill="rgb(221,189,43)" fg:x="868" fg:w="2"/><text x="10.9016%" y="1039.50"></text></g><g><title>fastrand::RNG::__getit (1 samples, 0.01%)</title><rect x="10.7007%" y="997" width="0.0123%" height="15" fill="rgb(207,36,27)" fg:x="872" fg:w="1"/><text x="10.9507%" y="1007.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="10.7007%" y="981" width="0.0123%" height="15" fill="rgb(217,90,24)" fg:x="872" fg:w="1"/><text x="10.9507%" y="991.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="10.7007%" y="965" width="0.0123%" height="15" fill="rgb(224,66,35)" fg:x="872" fg:w="1"/><text x="10.9507%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="10.7007%" y="949" width="0.0123%" height="15" fill="rgb(221,13,50)" fg:x="872" fg:w="1"/><text x="10.9507%" y="959.50"></text></g><g><title>fastrand::usize (4 samples, 0.05%)</title><rect x="10.6762%" y="1045" width="0.0491%" height="15" fill="rgb(236,68,49)" fg:x="870" fg:w="4"/><text x="10.9262%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.05%)</title><rect x="10.6762%" y="1029" width="0.0491%" height="15" fill="rgb(229,146,28)" fg:x="870" fg:w="4"/><text x="10.9262%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="10.7007%" y="1013" width="0.0245%" height="15" fill="rgb(225,31,38)" fg:x="872" fg:w="2"/><text x="10.9507%" y="1023.50"></text></g><g><title>fastrand::usize::{{closure}} (1 samples, 0.01%)</title><rect x="10.7130%" y="997" width="0.0123%" height="15" fill="rgb(250,208,3)" fg:x="873" fg:w="1"/><text x="10.9630%" y="1007.50"></text></g><g><title>fastrand::Rng::usize (1 samples, 0.01%)</title><rect x="10.7130%" y="981" width="0.0123%" height="15" fill="rgb(246,54,23)" fg:x="873" fg:w="1"/><text x="10.9630%" y="991.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="10.7252%" y="1029" width="0.0245%" height="15" fill="rgb(243,76,11)" fg:x="874" fg:w="2"/><text x="10.9752%" y="1039.50"></text></g><g><title>std::sync::poison::Flag::borrow (2 samples, 0.02%)</title><rect x="10.7252%" y="1013" width="0.0245%" height="15" fill="rgb(245,21,50)" fg:x="874" fg:w="2"/><text x="10.9752%" y="1023.50"></text></g><g><title>std::sync::poison::Flag::get (2 samples, 0.02%)</title><rect x="10.7252%" y="997" width="0.0245%" height="15" fill="rgb(228,9,43)" fg:x="874" fg:w="2"/><text x="10.9752%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (2 samples, 0.02%)</title><rect x="10.7252%" y="981" width="0.0245%" height="15" fill="rgb(208,100,47)" fg:x="874" fg:w="2"/><text x="10.9752%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="10.7375%" y="965" width="0.0123%" height="15" fill="rgb(232,26,8)" fg:x="875" fg:w="1"/><text x="10.9875%" y="975.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (17 samples, 0.21%)</title><rect x="10.7743%" y="997" width="0.2086%" height="15" fill="rgb(216,166,38)" fg:x="878" fg:w="17"/><text x="11.0243%" y="1007.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (212 samples, 2.60%)</title><rect x="8.4305%" y="1061" width="2.6015%" height="15" fill="rgb(251,202,51)" fg:x="687" fg:w="212"/><text x="8.6805%" y="1071.50">as..</text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (25 samples, 0.31%)</title><rect x="10.7252%" y="1045" width="0.3068%" height="15" fill="rgb(254,216,34)" fg:x="874" fg:w="25"/><text x="10.9752%" y="1055.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (23 samples, 0.28%)</title><rect x="10.7498%" y="1029" width="0.2822%" height="15" fill="rgb(251,32,27)" fg:x="876" fg:w="23"/><text x="10.9998%" y="1039.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (22 samples, 0.27%)</title><rect x="10.7621%" y="1013" width="0.2700%" height="15" fill="rgb(208,127,28)" fg:x="877" fg:w="22"/><text x="11.0121%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.05%)</title><rect x="10.9829%" y="997" width="0.0491%" height="15" fill="rgb(224,137,22)" fg:x="895" fg:w="4"/><text x="11.2329%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.05%)</title><rect x="10.9829%" y="981" width="0.0491%" height="15" fill="rgb(254,70,32)" fg:x="895" fg:w="4"/><text x="11.2329%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.01%)</title><rect x="11.0320%" y="1045" width="0.0123%" height="15" fill="rgb(229,75,37)" fg:x="899" fg:w="1"/><text x="11.2820%" y="1055.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="11.0320%" y="1029" width="0.0123%" height="15" fill="rgb(252,64,23)" fg:x="899" fg:w="1"/><text x="11.2820%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="11.0320%" y="1013" width="0.0123%" height="15" fill="rgb(232,162,48)" fg:x="899" fg:w="1"/><text x="11.2820%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="11.0320%" y="997" width="0.0123%" height="15" fill="rgb(246,160,12)" fg:x="899" fg:w="1"/><text x="11.2820%" y="1007.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="11.0320%" y="981" width="0.0123%" height="15" fill="rgb(247,166,0)" fg:x="899" fg:w="1"/><text x="11.2820%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (6 samples, 0.07%)</title><rect x="11.0443%" y="1045" width="0.0736%" height="15" fill="rgb(249,219,21)" fg:x="900" fg:w="6"/><text x="11.2943%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.07%)</title><rect x="11.0443%" y="1029" width="0.0736%" height="15" fill="rgb(205,209,3)" fg:x="900" fg:w="6"/><text x="11.2943%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="11.1179%" y="1013" width="0.0123%" height="15" fill="rgb(243,44,1)" fg:x="906" fg:w="1"/><text x="11.3679%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="11.1179%" y="997" width="0.0123%" height="15" fill="rgb(206,159,16)" fg:x="906" fg:w="1"/><text x="11.3679%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="11.1179%" y="981" width="0.0123%" height="15" fill="rgb(244,77,30)" fg:x="906" fg:w="1"/><text x="11.3679%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="11.1179%" y="965" width="0.0123%" height="15" fill="rgb(218,69,12)" fg:x="906" fg:w="1"/><text x="11.3679%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (2 samples, 0.02%)</title><rect x="11.2161%" y="965" width="0.0245%" height="15" fill="rgb(212,87,7)" fg:x="914" fg:w="2"/><text x="11.4661%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.02%)</title><rect x="11.2161%" y="949" width="0.0245%" height="15" fill="rgb(245,114,25)" fg:x="914" fg:w="2"/><text x="11.4661%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (16 samples, 0.20%)</title><rect x="11.2406%" y="965" width="0.1963%" height="15" fill="rgb(210,61,42)" fg:x="916" fg:w="16"/><text x="11.4906%" y="975.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (16 samples, 0.20%)</title><rect x="11.2406%" y="949" width="0.1963%" height="15" fill="rgb(211,52,33)" fg:x="916" fg:w="16"/><text x="11.4906%" y="959.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (16 samples, 0.20%)</title><rect x="11.2406%" y="933" width="0.1963%" height="15" fill="rgb(234,58,33)" fg:x="916" fg:w="16"/><text x="11.4906%" y="943.50"></text></g><g><title>__pthread_cond_signal (16 samples, 0.20%)</title><rect x="11.2406%" y="917" width="0.1963%" height="15" fill="rgb(220,115,36)" fg:x="916" fg:w="16"/><text x="11.4906%" y="927.50"></text></g><g><title>async_executor::State::notify (38 samples, 0.47%)</title><rect x="11.0320%" y="1061" width="0.4663%" height="15" fill="rgb(243,153,54)" fg:x="899" fg:w="38"/><text x="11.2820%" y="1071.50"></text></g><g><title>core::task::wake::Waker::wake (31 samples, 0.38%)</title><rect x="11.1179%" y="1045" width="0.3804%" height="15" fill="rgb(251,47,18)" fg:x="906" fg:w="31"/><text x="11.3679%" y="1055.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (31 samples, 0.38%)</title><rect x="11.1179%" y="1029" width="0.3804%" height="15" fill="rgb(242,102,42)" fg:x="906" fg:w="31"/><text x="11.3679%" y="1039.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (30 samples, 0.37%)</title><rect x="11.1302%" y="1013" width="0.3681%" height="15" fill="rgb(234,31,38)" fg:x="907" fg:w="30"/><text x="11.3802%" y="1023.50"></text></g><g><title>parking::Unparker::unpark (30 samples, 0.37%)</title><rect x="11.1302%" y="997" width="0.3681%" height="15" fill="rgb(221,117,51)" fg:x="907" fg:w="30"/><text x="11.3802%" y="1007.50"></text></g><g><title>parking::Inner::unpark (23 samples, 0.28%)</title><rect x="11.2161%" y="981" width="0.2822%" height="15" fill="rgb(212,20,18)" fg:x="914" fg:w="23"/><text x="11.4661%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.06%)</title><rect x="11.4370%" y="965" width="0.0614%" height="15" fill="rgb(245,133,36)" fg:x="932" fg:w="5"/><text x="11.6870%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (5 samples, 0.06%)</title><rect x="11.4370%" y="949" width="0.0614%" height="15" fill="rgb(212,6,19)" fg:x="932" fg:w="5"/><text x="11.6870%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (5 samples, 0.06%)</title><rect x="11.4370%" y="933" width="0.0614%" height="15" fill="rgb(218,1,36)" fg:x="932" fg:w="5"/><text x="11.6870%" y="943.50"></text></g><g><title>__GI___pthread_mutex_lock (5 samples, 0.06%)</title><rect x="11.4370%" y="917" width="0.0614%" height="15" fill="rgb(246,84,54)" fg:x="932" fg:w="5"/><text x="11.6870%" y="927.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="11.5106%" y="1029" width="0.0368%" height="15" fill="rgb(242,110,6)" fg:x="938" fg:w="3"/><text x="11.7606%" y="1039.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (3 samples, 0.04%)</title><rect x="11.5106%" y="1013" width="0.0368%" height="15" fill="rgb(214,47,5)" fg:x="938" fg:w="3"/><text x="11.7606%" y="1023.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="11.5106%" y="997" width="0.0368%" height="15" fill="rgb(218,159,25)" fg:x="938" fg:w="3"/><text x="11.7606%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="11.5106%" y="981" width="0.0368%" height="15" fill="rgb(215,211,28)" fg:x="938" fg:w="3"/><text x="11.7606%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.04%)</title><rect x="11.5106%" y="965" width="0.0368%" height="15" fill="rgb(238,59,32)" fg:x="938" fg:w="3"/><text x="11.7606%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.04%)</title><rect x="11.5106%" y="949" width="0.0368%" height="15" fill="rgb(226,82,3)" fg:x="938" fg:w="3"/><text x="11.7606%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (3 samples, 0.04%)</title><rect x="11.5474%" y="1029" width="0.0368%" height="15" fill="rgb(240,164,32)" fg:x="941" fg:w="3"/><text x="11.7974%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="11.5842%" y="1013" width="0.0123%" height="15" fill="rgb(232,46,7)" fg:x="944" fg:w="1"/><text x="11.8342%" y="1023.50"></text></g><g><title>async_executor::Sleepers::insert (8 samples, 0.10%)</title><rect x="11.5106%" y="1045" width="0.0982%" height="15" fill="rgb(229,129,53)" fg:x="938" fg:w="8"/><text x="11.7606%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="11.5842%" y="1029" width="0.0245%" height="15" fill="rgb(234,188,29)" fg:x="944" fg:w="2"/><text x="11.8342%" y="1039.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="11.5965%" y="1013" width="0.0123%" height="15" fill="rgb(246,141,4)" fg:x="945" fg:w="1"/><text x="11.8465%" y="1023.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (2 samples, 0.02%)</title><rect x="11.6333%" y="1029" width="0.0245%" height="15" fill="rgb(229,23,39)" fg:x="948" fg:w="2"/><text x="11.8833%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.02%)</title><rect x="11.6333%" y="1013" width="0.0245%" height="15" fill="rgb(206,12,3)" fg:x="948" fg:w="2"/><text x="11.8833%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="11.6333%" y="997" width="0.0245%" height="15" fill="rgb(252,226,20)" fg:x="948" fg:w="2"/><text x="11.8833%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="11.6579%" y="1029" width="0.0123%" height="15" fill="rgb(216,123,35)" fg:x="950" fg:w="1"/><text x="11.9079%" y="1039.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="11.6701%" y="1029" width="0.0491%" height="15" fill="rgb(212,68,40)" fg:x="951" fg:w="4"/><text x="11.9201%" y="1039.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (4 samples, 0.05%)</title><rect x="11.6701%" y="1013" width="0.0491%" height="15" fill="rgb(254,125,32)" fg:x="951" fg:w="4"/><text x="11.9201%" y="1023.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="11.6701%" y="997" width="0.0491%" height="15" fill="rgb(253,97,22)" fg:x="951" fg:w="4"/><text x="11.9201%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="11.6701%" y="981" width="0.0491%" height="15" fill="rgb(241,101,14)" fg:x="951" fg:w="4"/><text x="11.9201%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.05%)</title><rect x="11.6701%" y="965" width="0.0491%" height="15" fill="rgb(238,103,29)" fg:x="951" fg:w="4"/><text x="11.9201%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.05%)</title><rect x="11.6701%" y="949" width="0.0491%" height="15" fill="rgb(233,195,47)" fg:x="951" fg:w="4"/><text x="11.9201%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="11.7192%" y="1029" width="0.0123%" height="15" fill="rgb(246,218,30)" fg:x="955" fg:w="1"/><text x="11.9692%" y="1039.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="11.7192%" y="1013" width="0.0123%" height="15" fill="rgb(219,145,47)" fg:x="955" fg:w="1"/><text x="11.9692%" y="1023.50"></text></g><g><title>async_executor::Sleepers::update (11 samples, 0.13%)</title><rect x="11.6088%" y="1045" width="0.1350%" height="15" fill="rgb(243,12,26)" fg:x="946" fg:w="11"/><text x="11.8588%" y="1055.50"></text></g><g><title>core::task::wake::Waker::will_wake (1 samples, 0.01%)</title><rect x="11.7315%" y="1029" width="0.0123%" height="15" fill="rgb(214,87,16)" fg:x="956" fg:w="1"/><text x="11.9815%" y="1039.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="11.7315%" y="1013" width="0.0123%" height="15" fill="rgb(208,99,42)" fg:x="956" fg:w="1"/><text x="11.9815%" y="1023.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.01%)</title><rect x="11.7438%" y="1013" width="0.0123%" height="15" fill="rgb(253,99,2)" fg:x="957" fg:w="1"/><text x="11.9938%" y="1023.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="11.7438%" y="997" width="0.0123%" height="15" fill="rgb(220,168,23)" fg:x="957" fg:w="1"/><text x="11.9938%" y="1007.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="11.7438%" y="981" width="0.0123%" height="15" fill="rgb(242,38,24)" fg:x="957" fg:w="1"/><text x="11.9938%" y="991.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="11.7438%" y="965" width="0.0123%" height="15" fill="rgb(225,182,9)" fg:x="957" fg:w="1"/><text x="11.9938%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="11.7438%" y="949" width="0.0123%" height="15" fill="rgb(243,178,37)" fg:x="957" fg:w="1"/><text x="11.9938%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="11.7438%" y="933" width="0.0123%" height="15" fill="rgb(232,139,19)" fg:x="957" fg:w="1"/><text x="11.9938%" y="943.50"></text></g><g><title>__GI___pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="11.7806%" y="981" width="0.0245%" height="15" fill="rgb(225,201,24)" fg:x="960" fg:w="2"/><text x="12.0306%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (11 samples, 0.13%)</title><rect x="11.7438%" y="1045" width="0.1350%" height="15" fill="rgb(221,47,46)" fg:x="957" fg:w="11"/><text x="11.9938%" y="1055.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.13%)</title><rect x="11.7438%" y="1029" width="0.1350%" height="15" fill="rgb(249,23,13)" fg:x="957" fg:w="11"/><text x="11.9938%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (10 samples, 0.12%)</title><rect x="11.7560%" y="1013" width="0.1227%" height="15" fill="rgb(219,9,5)" fg:x="958" fg:w="10"/><text x="12.0060%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (8 samples, 0.10%)</title><rect x="11.7806%" y="997" width="0.0982%" height="15" fill="rgb(254,171,16)" fg:x="960" fg:w="8"/><text x="12.0306%" y="1007.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (6 samples, 0.07%)</title><rect x="11.8051%" y="981" width="0.0736%" height="15" fill="rgb(230,171,20)" fg:x="962" fg:w="6"/><text x="12.0551%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (2 samples, 0.02%)</title><rect x="11.8788%" y="1045" width="0.0245%" height="15" fill="rgb(210,71,41)" fg:x="968" fg:w="2"/><text x="12.1288%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.02%)</title><rect x="11.8788%" y="1029" width="0.0245%" height="15" fill="rgb(206,173,20)" fg:x="968" fg:w="2"/><text x="12.1288%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (6 samples, 0.07%)</title><rect x="11.9033%" y="1045" width="0.0736%" height="15" fill="rgb(233,88,34)" fg:x="970" fg:w="6"/><text x="12.1533%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_store (6 samples, 0.07%)</title><rect x="11.9033%" y="1029" width="0.0736%" height="15" fill="rgb(223,209,46)" fg:x="970" fg:w="6"/><text x="12.1533%" y="1039.50"></text></g><g><title>std::sync::poison::Flag::get (1 samples, 0.01%)</title><rect x="11.9769%" y="997" width="0.0123%" height="15" fill="rgb(250,43,18)" fg:x="976" fg:w="1"/><text x="12.2269%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="11.9769%" y="981" width="0.0123%" height="15" fill="rgb(208,13,10)" fg:x="976" fg:w="1"/><text x="12.2269%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="11.9769%" y="965" width="0.0123%" height="15" fill="rgb(212,200,36)" fg:x="976" fg:w="1"/><text x="12.2269%" y="975.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="11.9769%" y="1029" width="0.0245%" height="15" fill="rgb(225,90,30)" fg:x="976" fg:w="2"/><text x="12.2269%" y="1039.50"></text></g><g><title>std::sync::poison::Flag::borrow (2 samples, 0.02%)</title><rect x="11.9769%" y="1013" width="0.0245%" height="15" fill="rgb(236,182,39)" fg:x="976" fg:w="2"/><text x="12.2269%" y="1023.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="11.9892%" y="997" width="0.0123%" height="15" fill="rgb(212,144,35)" fg:x="977" fg:w="1"/><text x="12.2392%" y="1007.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="11.9892%" y="981" width="0.0123%" height="15" fill="rgb(228,63,44)" fg:x="977" fg:w="1"/><text x="12.2392%" y="991.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="11.9892%" y="965" width="0.0123%" height="15" fill="rgb(228,109,6)" fg:x="977" fg:w="1"/><text x="12.2392%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="11.9892%" y="949" width="0.0123%" height="15" fill="rgb(238,117,24)" fg:x="977" fg:w="1"/><text x="12.2392%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="11.9892%" y="933" width="0.0123%" height="15" fill="rgb(242,26,26)" fg:x="977" fg:w="1"/><text x="12.2392%" y="943.50"></text></g><g><title>async_executor::Ticker::sleep (56 samples, 0.69%)</title><rect x="11.4983%" y="1061" width="0.6872%" height="15" fill="rgb(221,92,48)" fg:x="937" fg:w="56"/><text x="11.7483%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (17 samples, 0.21%)</title><rect x="11.9769%" y="1045" width="0.2086%" height="15" fill="rgb(209,209,32)" fg:x="976" fg:w="17"/><text x="12.2269%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.18%)</title><rect x="12.0015%" y="1029" width="0.1841%" height="15" fill="rgb(221,70,22)" fg:x="978" fg:w="15"/><text x="12.2515%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (15 samples, 0.18%)</title><rect x="12.0015%" y="1013" width="0.1841%" height="15" fill="rgb(248,145,5)" fg:x="978" fg:w="15"/><text x="12.2515%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_lock (15 samples, 0.18%)</title><rect x="12.0015%" y="997" width="0.1841%" height="15" fill="rgb(226,116,26)" fg:x="978" fg:w="15"/><text x="12.2515%" y="1007.50"></text></g><g><title>__lll_lock_wait (2 samples, 0.02%)</title><rect x="12.1610%" y="981" width="0.0245%" height="15" fill="rgb(244,5,17)" fg:x="991" fg:w="2"/><text x="12.4110%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="12.2224%" y="1029" width="0.0123%" height="15" fill="rgb(252,159,33)" fg:x="996" fg:w="1"/><text x="12.4724%" y="1039.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.01%)</title><rect x="12.2224%" y="1013" width="0.0123%" height="15" fill="rgb(206,71,0)" fg:x="996" fg:w="1"/><text x="12.4724%" y="1023.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.01%)</title><rect x="12.2224%" y="997" width="0.0123%" height="15" fill="rgb(233,118,54)" fg:x="996" fg:w="1"/><text x="12.4724%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="12.2469%" y="1013" width="0.0123%" height="15" fill="rgb(234,83,48)" fg:x="998" fg:w="1"/><text x="12.4969%" y="1023.50"></text></g><g><title>async_executor::Sleepers::remove (7 samples, 0.09%)</title><rect x="12.1978%" y="1045" width="0.0859%" height="15" fill="rgb(228,3,54)" fg:x="994" fg:w="7"/><text x="12.4478%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.05%)</title><rect x="12.2346%" y="1029" width="0.0491%" height="15" fill="rgb(226,155,13)" fg:x="997" fg:w="4"/><text x="12.4846%" y="1039.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="12.2592%" y="1013" width="0.0245%" height="15" fill="rgb(241,28,37)" fg:x="999" fg:w="2"/><text x="12.5092%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (2 samples, 0.02%)</title><rect x="12.2837%" y="1045" width="0.0245%" height="15" fill="rgb(233,93,10)" fg:x="1001" fg:w="2"/><text x="12.5337%" y="1055.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="12.2837%" y="1029" width="0.0245%" height="15" fill="rgb(225,113,19)" fg:x="1001" fg:w="2"/><text x="12.5337%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.02%)</title><rect x="12.2837%" y="1013" width="0.0245%" height="15" fill="rgb(241,2,18)" fg:x="1001" fg:w="2"/><text x="12.5337%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.02%)</title><rect x="12.2837%" y="997" width="0.0245%" height="15" fill="rgb(228,207,21)" fg:x="1001" fg:w="2"/><text x="12.5337%" y="1007.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="12.2837%" y="981" width="0.0245%" height="15" fill="rgb(213,211,35)" fg:x="1001" fg:w="2"/><text x="12.5337%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (6 samples, 0.07%)</title><rect x="12.3083%" y="1045" width="0.0736%" height="15" fill="rgb(209,83,10)" fg:x="1003" fg:w="6"/><text x="12.5583%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_swap (6 samples, 0.07%)</title><rect x="12.3083%" y="1029" width="0.0736%" height="15" fill="rgb(209,164,1)" fg:x="1003" fg:w="6"/><text x="12.5583%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (8 samples, 0.10%)</title><rect x="12.3819%" y="1045" width="0.0982%" height="15" fill="rgb(213,184,43)" fg:x="1009" fg:w="8"/><text x="12.6319%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_swap (8 samples, 0.10%)</title><rect x="12.3819%" y="1029" width="0.0982%" height="15" fill="rgb(231,61,34)" fg:x="1009" fg:w="8"/><text x="12.6319%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (345 samples, 4.23%)</title><rect x="8.3078%" y="1125" width="4.2336%" height="15" fill="rgb(235,75,3)" fg:x="677" fg:w="345"/><text x="8.5578%" y="1135.50">&lt;core..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (344 samples, 4.22%)</title><rect x="8.3200%" y="1109" width="4.2214%" height="15" fill="rgb(220,106,47)" fg:x="678" fg:w="344"/><text x="8.5700%" y="1119.50">async..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (342 samples, 4.20%)</title><rect x="8.3446%" y="1093" width="4.1968%" height="15" fill="rgb(210,196,33)" fg:x="680" fg:w="342"/><text x="8.5946%" y="1103.50">&lt;futu..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (341 samples, 4.18%)</title><rect x="8.3569%" y="1077" width="4.1846%" height="15" fill="rgb(229,154,42)" fg:x="681" fg:w="341"/><text x="8.6069%" y="1087.50">async..</text></g><g><title>async_executor::Ticker::wake (29 samples, 0.36%)</title><rect x="12.1855%" y="1061" width="0.3559%" height="15" fill="rgb(228,114,26)" fg:x="993" fg:w="29"/><text x="12.4355%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.06%)</title><rect x="12.4801%" y="1045" width="0.0614%" height="15" fill="rgb(208,144,1)" fg:x="1017" fg:w="5"/><text x="12.7301%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (5 samples, 0.06%)</title><rect x="12.4801%" y="1029" width="0.0614%" height="15" fill="rgb(239,112,37)" fg:x="1017" fg:w="5"/><text x="12.7301%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (5 samples, 0.06%)</title><rect x="12.4801%" y="1013" width="0.0614%" height="15" fill="rgb(210,96,50)" fg:x="1017" fg:w="5"/><text x="12.7301%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_lock (5 samples, 0.06%)</title><rect x="12.4801%" y="997" width="0.0614%" height="15" fill="rgb(222,178,2)" fg:x="1017" fg:w="5"/><text x="12.7301%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (1 samples, 0.01%)</title><rect x="12.5414%" y="1109" width="0.0123%" height="15" fill="rgb(226,74,18)" fg:x="1022" fg:w="1"/><text x="12.7914%" y="1119.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (1 samples, 0.01%)</title><rect x="12.5414%" y="1093" width="0.0123%" height="15" fill="rgb(225,67,54)" fg:x="1022" fg:w="1"/><text x="12.7914%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="12.5414%" y="1077" width="0.0123%" height="15" fill="rgb(251,92,32)" fg:x="1022" fg:w="1"/><text x="12.7914%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="12.5414%" y="1061" width="0.0123%" height="15" fill="rgb(228,149,22)" fg:x="1022" fg:w="1"/><text x="12.7914%" y="1071.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="12.5537%" y="1077" width="0.0123%" height="15" fill="rgb(243,54,13)" fg:x="1023" fg:w="1"/><text x="12.8037%" y="1087.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="12.5537%" y="1061" width="0.0123%" height="15" fill="rgb(243,180,28)" fg:x="1023" fg:w="1"/><text x="12.8037%" y="1071.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="12.5537%" y="1045" width="0.0123%" height="15" fill="rgb(208,167,24)" fg:x="1023" fg:w="1"/><text x="12.8037%" y="1055.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="12.5537%" y="1029" width="0.0123%" height="15" fill="rgb(245,73,45)" fg:x="1023" fg:w="1"/><text x="12.8037%" y="1039.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (1 samples, 0.01%)</title><rect x="12.5660%" y="1077" width="0.0123%" height="15" fill="rgb(237,203,48)" fg:x="1024" fg:w="1"/><text x="12.8160%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="12.5660%" y="1061" width="0.0123%" height="15" fill="rgb(211,197,16)" fg:x="1024" fg:w="1"/><text x="12.8160%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="12.5660%" y="1045" width="0.0123%" height="15" fill="rgb(243,99,51)" fg:x="1024" fg:w="1"/><text x="12.8160%" y="1055.50"></text></g><g><title>async_executor::steal (4 samples, 0.05%)</title><rect x="12.5414%" y="1125" width="0.0491%" height="15" fill="rgb(215,123,29)" fg:x="1022" fg:w="4"/><text x="12.7914%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (3 samples, 0.04%)</title><rect x="12.5537%" y="1109" width="0.0368%" height="15" fill="rgb(239,186,37)" fg:x="1023" fg:w="3"/><text x="12.8037%" y="1119.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (3 samples, 0.04%)</title><rect x="12.5537%" y="1093" width="0.0368%" height="15" fill="rgb(252,136,39)" fg:x="1023" fg:w="3"/><text x="12.8037%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="12.5782%" y="1077" width="0.0123%" height="15" fill="rgb(223,213,32)" fg:x="1025" fg:w="1"/><text x="12.8282%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="12.5782%" y="1061" width="0.0123%" height="15" fill="rgb(233,115,5)" fg:x="1025" fg:w="1"/><text x="12.8282%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (359 samples, 4.41%)</title><rect x="8.2464%" y="1157" width="4.4054%" height="15" fill="rgb(207,226,44)" fg:x="672" fg:w="359"/><text x="8.4964%" y="1167.50">&lt;core..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (358 samples, 4.39%)</title><rect x="8.2587%" y="1141" width="4.3932%" height="15" fill="rgb(208,126,0)" fg:x="673" fg:w="358"/><text x="8.5087%" y="1151.50">async..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.06%)</title><rect x="12.5905%" y="1125" width="0.0614%" height="15" fill="rgb(244,66,21)" fg:x="1026" fg:w="5"/><text x="12.8405%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.06%)</title><rect x="12.5905%" y="1109" width="0.0614%" height="15" fill="rgb(222,97,12)" fg:x="1026" fg:w="5"/><text x="12.8405%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="12.7991%" y="1109" width="0.0123%" height="15" fill="rgb(219,213,19)" fg:x="1043" fg:w="1"/><text x="13.0491%" y="1119.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="13.0936%" y="1029" width="0.0123%" height="15" fill="rgb(252,169,30)" fg:x="1067" fg:w="1"/><text x="13.3436%" y="1039.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="13.0936%" y="1013" width="0.0123%" height="15" fill="rgb(206,32,51)" fg:x="1067" fg:w="1"/><text x="13.3436%" y="1023.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="13.0936%" y="997" width="0.0123%" height="15" fill="rgb(250,172,42)" fg:x="1067" fg:w="1"/><text x="13.3436%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (1 samples, 0.01%)</title><rect x="13.1059%" y="1029" width="0.0123%" height="15" fill="rgb(209,34,43)" fg:x="1068" fg:w="1"/><text x="13.3559%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (1 samples, 0.01%)</title><rect x="13.1059%" y="1013" width="0.0123%" height="15" fill="rgb(223,11,35)" fg:x="1068" fg:w="1"/><text x="13.3559%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="13.1059%" y="997" width="0.0123%" height="15" fill="rgb(251,219,26)" fg:x="1068" fg:w="1"/><text x="13.3559%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="13.1059%" y="981" width="0.0123%" height="15" fill="rgb(231,119,3)" fg:x="1068" fg:w="1"/><text x="13.3559%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="13.1059%" y="965" width="0.0123%" height="15" fill="rgb(216,97,11)" fg:x="1068" fg:w="1"/><text x="13.3559%" y="975.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="13.1059%" y="949" width="0.0123%" height="15" fill="rgb(223,59,9)" fg:x="1068" fg:w="1"/><text x="13.3559%" y="959.50"></text></g><g><title>core::task::wake::Context::waker (1 samples, 0.01%)</title><rect x="13.1182%" y="1029" width="0.0123%" height="15" fill="rgb(233,93,31)" fg:x="1069" fg:w="1"/><text x="13.3682%" y="1039.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (5 samples, 0.06%)</title><rect x="13.0814%" y="1045" width="0.0614%" height="15" fill="rgb(239,81,33)" fg:x="1066" fg:w="5"/><text x="13.3314%" y="1055.50"></text></g><g><title>event_listener::Inner::lock (1 samples, 0.01%)</title><rect x="13.1304%" y="1029" width="0.0123%" height="15" fill="rgb(213,120,34)" fg:x="1070" fg:w="1"/><text x="13.3804%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="13.1304%" y="1013" width="0.0123%" height="15" fill="rgb(243,49,53)" fg:x="1070" fg:w="1"/><text x="13.3804%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="13.1304%" y="997" width="0.0123%" height="15" fill="rgb(247,216,33)" fg:x="1070" fg:w="1"/><text x="13.3804%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="13.1304%" y="981" width="0.0123%" height="15" fill="rgb(226,26,14)" fg:x="1070" fg:w="1"/><text x="13.3804%" y="991.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="13.1304%" y="965" width="0.0123%" height="15" fill="rgb(215,49,53)" fg:x="1070" fg:w="1"/><text x="13.3804%" y="975.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="13.1795%" y="997" width="0.0123%" height="15" fill="rgb(245,162,40)" fg:x="1074" fg:w="1"/><text x="13.4295%" y="1007.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="13.1795%" y="981" width="0.0123%" height="15" fill="rgb(229,68,17)" fg:x="1074" fg:w="1"/><text x="13.4295%" y="991.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="13.1795%" y="965" width="0.0123%" height="15" fill="rgb(213,182,10)" fg:x="1074" fg:w="1"/><text x="13.4295%" y="975.50"></text></g><g><title>concurrent_queue::full_fence (4 samples, 0.05%)</title><rect x="13.1918%" y="997" width="0.0491%" height="15" fill="rgb(245,125,30)" fg:x="1075" fg:w="4"/><text x="13.4418%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (4 samples, 0.05%)</title><rect x="13.1918%" y="981" width="0.0491%" height="15" fill="rgb(232,202,2)" fg:x="1075" fg:w="4"/><text x="13.4418%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.05%)</title><rect x="13.1918%" y="965" width="0.0491%" height="15" fill="rgb(237,140,51)" fg:x="1075" fg:w="4"/><text x="13.4418%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.05%)</title><rect x="13.1918%" y="949" width="0.0491%" height="15" fill="rgb(236,157,25)" fg:x="1075" fg:w="4"/><text x="13.4418%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (3 samples, 0.04%)</title><rect x="13.2409%" y="997" width="0.0368%" height="15" fill="rgb(219,209,0)" fg:x="1079" fg:w="3"/><text x="13.4909%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.04%)</title><rect x="13.2409%" y="981" width="0.0368%" height="15" fill="rgb(240,116,54)" fg:x="1079" fg:w="3"/><text x="13.4909%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.04%)</title><rect x="13.2409%" y="965" width="0.0368%" height="15" fill="rgb(216,10,36)" fg:x="1079" fg:w="3"/><text x="13.4909%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (11 samples, 0.13%)</title><rect x="13.1550%" y="1029" width="0.1350%" height="15" fill="rgb(222,72,44)" fg:x="1072" fg:w="11"/><text x="13.4050%" y="1039.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (9 samples, 0.11%)</title><rect x="13.1795%" y="1013" width="0.1104%" height="15" fill="rgb(232,159,9)" fg:x="1074" fg:w="9"/><text x="13.4295%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="13.2777%" y="997" width="0.0123%" height="15" fill="rgb(210,39,32)" fg:x="1082" fg:w="1"/><text x="13.5277%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="13.2777%" y="981" width="0.0123%" height="15" fill="rgb(216,194,45)" fg:x="1082" fg:w="1"/><text x="13.5277%" y="991.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (13 samples, 0.16%)</title><rect x="13.1427%" y="1045" width="0.1595%" height="15" fill="rgb(218,18,35)" fg:x="1071" fg:w="13"/><text x="13.3927%" y="1055.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="13.2900%" y="1029" width="0.0123%" height="15" fill="rgb(207,83,51)" fg:x="1083" fg:w="1"/><text x="13.5400%" y="1039.50"></text></g><g><title>event_listener::Event::try_inner (1 samples, 0.01%)</title><rect x="13.2900%" y="1013" width="0.0123%" height="15" fill="rgb(225,63,43)" fg:x="1083" fg:w="1"/><text x="13.5400%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="13.2900%" y="997" width="0.0123%" height="15" fill="rgb(207,57,36)" fg:x="1083" fg:w="1"/><text x="13.5400%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="13.2900%" y="981" width="0.0123%" height="15" fill="rgb(216,99,33)" fg:x="1083" fg:w="1"/><text x="13.5400%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (3 samples, 0.04%)</title><rect x="13.3022%" y="1029" width="0.0368%" height="15" fill="rgb(225,42,16)" fg:x="1084" fg:w="3"/><text x="13.5522%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (3 samples, 0.04%)</title><rect x="13.3022%" y="1013" width="0.0368%" height="15" fill="rgb(220,201,45)" fg:x="1084" fg:w="3"/><text x="13.5522%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="13.3022%" y="997" width="0.0368%" height="15" fill="rgb(225,33,4)" fg:x="1084" fg:w="3"/><text x="13.5522%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.04%)</title><rect x="13.3022%" y="981" width="0.0368%" height="15" fill="rgb(224,33,50)" fg:x="1084" fg:w="3"/><text x="13.5522%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.04%)</title><rect x="13.3022%" y="965" width="0.0368%" height="15" fill="rgb(246,198,51)" fg:x="1084" fg:w="3"/><text x="13.5522%" y="975.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.04%)</title><rect x="13.3022%" y="949" width="0.0368%" height="15" fill="rgb(205,22,4)" fg:x="1084" fg:w="3"/><text x="13.5522%" y="959.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.33%)</title><rect x="13.0568%" y="1061" width="0.3313%" height="15" fill="rgb(206,3,8)" fg:x="1064" fg:w="27"/><text x="13.3068%" y="1071.50"></text></g><g><title>event_listener::Event::listen (7 samples, 0.09%)</title><rect x="13.3022%" y="1045" width="0.0859%" height="15" fill="rgb(251,23,15)" fg:x="1084" fg:w="7"/><text x="13.5522%" y="1055.50"></text></g><g><title>event_listener::Inner::lock (4 samples, 0.05%)</title><rect x="13.3391%" y="1029" width="0.0491%" height="15" fill="rgb(252,88,28)" fg:x="1087" fg:w="4"/><text x="13.5891%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (4 samples, 0.05%)</title><rect x="13.3391%" y="1013" width="0.0491%" height="15" fill="rgb(212,127,14)" fg:x="1087" fg:w="4"/><text x="13.5891%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (4 samples, 0.05%)</title><rect x="13.3391%" y="997" width="0.0491%" height="15" fill="rgb(247,145,37)" fg:x="1087" fg:w="4"/><text x="13.5891%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (4 samples, 0.05%)</title><rect x="13.3391%" y="981" width="0.0491%" height="15" fill="rgb(209,117,53)" fg:x="1087" fg:w="4"/><text x="13.5891%" y="991.50"></text></g><g><title>__GI___pthread_mutex_lock (4 samples, 0.05%)</title><rect x="13.3391%" y="965" width="0.0491%" height="15" fill="rgb(212,90,42)" fg:x="1087" fg:w="4"/><text x="13.5891%" y="975.50"></text></g><g><title>[engine] (2 samples, 0.02%)</title><rect x="13.4127%" y="1013" width="0.0245%" height="15" fill="rgb(218,164,37)" fg:x="1093" fg:w="2"/><text x="13.6627%" y="1023.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2 samples, 0.02%)</title><rect x="13.4127%" y="997" width="0.0245%" height="15" fill="rgb(246,65,34)" fg:x="1093" fg:w="2"/><text x="13.6627%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (6 samples, 0.07%)</title><rect x="13.4495%" y="997" width="0.0736%" height="15" fill="rgb(231,100,33)" fg:x="1096" fg:w="6"/><text x="13.6995%" y="1007.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::push (3 samples, 0.04%)</title><rect x="13.4863%" y="981" width="0.0368%" height="15" fill="rgb(228,126,14)" fg:x="1099" fg:w="3"/><text x="13.7363%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (3 samples, 0.04%)</title><rect x="13.4863%" y="965" width="0.0368%" height="15" fill="rgb(215,173,21)" fg:x="1099" fg:w="3"/><text x="13.7363%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.04%)</title><rect x="13.4863%" y="949" width="0.0368%" height="15" fill="rgb(210,6,40)" fg:x="1099" fg:w="3"/><text x="13.7363%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.04%)</title><rect x="13.4863%" y="933" width="0.0368%" height="15" fill="rgb(212,48,18)" fg:x="1099" fg:w="3"/><text x="13.7363%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="13.5231%" y="981" width="0.0123%" height="15" fill="rgb(230,214,11)" fg:x="1102" fg:w="1"/><text x="13.7731%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="13.5231%" y="965" width="0.0123%" height="15" fill="rgb(254,105,39)" fg:x="1102" fg:w="1"/><text x="13.7731%" y="975.50"></text></g><g><title>event_listener::Inner::lock (1 samples, 0.01%)</title><rect x="13.5354%" y="981" width="0.0123%" height="15" fill="rgb(245,158,5)" fg:x="1103" fg:w="1"/><text x="13.7854%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="13.5354%" y="965" width="0.0123%" height="15" fill="rgb(249,208,11)" fg:x="1103" fg:w="1"/><text x="13.7854%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="13.5354%" y="949" width="0.0123%" height="15" fill="rgb(210,39,28)" fg:x="1103" fg:w="1"/><text x="13.7854%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="13.5354%" y="933" width="0.0123%" height="15" fill="rgb(211,56,53)" fg:x="1103" fg:w="1"/><text x="13.7854%" y="943.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="13.5354%" y="917" width="0.0123%" height="15" fill="rgb(226,201,30)" fg:x="1103" fg:w="1"/><text x="13.7854%" y="927.50"></text></g><g><title>async_executor::State::notify (2 samples, 0.02%)</title><rect x="13.5722%" y="933" width="0.0245%" height="15" fill="rgb(239,101,34)" fg:x="1106" fg:w="2"/><text x="13.8222%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (2 samples, 0.02%)</title><rect x="13.5722%" y="917" width="0.0245%" height="15" fill="rgb(226,209,5)" fg:x="1106" fg:w="2"/><text x="13.8222%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="13.5722%" y="901" width="0.0245%" height="15" fill="rgb(250,105,47)" fg:x="1106" fg:w="2"/><text x="13.8222%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="13.5968%" y="933" width="0.0123%" height="15" fill="rgb(230,72,3)" fg:x="1108" fg:w="1"/><text x="13.8468%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="13.5968%" y="917" width="0.0123%" height="15" fill="rgb(232,218,39)" fg:x="1108" fg:w="1"/><text x="13.8468%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="13.5968%" y="901" width="0.0123%" height="15" fill="rgb(248,166,6)" fg:x="1108" fg:w="1"/><text x="13.8468%" y="911.50"></text></g><g><title>event_listener::List::notify (7 samples, 0.09%)</title><rect x="13.5477%" y="981" width="0.0859%" height="15" fill="rgb(247,89,20)" fg:x="1104" fg:w="7"/><text x="13.7977%" y="991.50"></text></g><g><title>core::task::wake::Waker::wake (5 samples, 0.06%)</title><rect x="13.5722%" y="965" width="0.0614%" height="15" fill="rgb(248,130,54)" fg:x="1106" fg:w="5"/><text x="13.8222%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (5 samples, 0.06%)</title><rect x="13.5722%" y="949" width="0.0614%" height="15" fill="rgb(234,196,4)" fg:x="1106" fg:w="5"/><text x="13.8222%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (2 samples, 0.02%)</title><rect x="13.6090%" y="933" width="0.0245%" height="15" fill="rgb(250,143,31)" fg:x="1109" fg:w="2"/><text x="13.8590%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="13.6090%" y="917" width="0.0245%" height="15" fill="rgb(211,110,34)" fg:x="1109" fg:w="2"/><text x="13.8590%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="13.6090%" y="901" width="0.0245%" height="15" fill="rgb(215,124,48)" fg:x="1109" fg:w="2"/><text x="13.8590%" y="911.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.28%)</title><rect x="13.4004%" y="1029" width="0.2822%" height="15" fill="rgb(216,46,13)" fg:x="1092" fg:w="23"/><text x="13.6504%" y="1039.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (20 samples, 0.25%)</title><rect x="13.4372%" y="1013" width="0.2454%" height="15" fill="rgb(205,184,25)" fg:x="1095" fg:w="20"/><text x="13.6872%" y="1023.50"></text></g><g><title>event_listener::Event::notify (13 samples, 0.16%)</title><rect x="13.5231%" y="997" width="0.1595%" height="15" fill="rgb(228,1,10)" fg:x="1102" fg:w="13"/><text x="13.7731%" y="1007.50"></text></g><g><title>event_listener::full_fence (4 samples, 0.05%)</title><rect x="13.6336%" y="981" width="0.0491%" height="15" fill="rgb(213,116,27)" fg:x="1111" fg:w="4"/><text x="13.8836%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (3 samples, 0.04%)</title><rect x="13.6458%" y="965" width="0.0368%" height="15" fill="rgb(241,95,50)" fg:x="1112" fg:w="3"/><text x="13.8958%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.04%)</title><rect x="13.6458%" y="949" width="0.0368%" height="15" fill="rgb(238,48,32)" fg:x="1112" fg:w="3"/><text x="13.8958%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.04%)</title><rect x="13.6458%" y="933" width="0.0368%" height="15" fill="rgb(235,113,49)" fg:x="1112" fg:w="3"/><text x="13.8958%" y="943.50"></text></g><g><title>&lt;fixedbitset::Ones as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="13.6827%" y="1029" width="0.0123%" height="15" fill="rgb(205,127,43)" fg:x="1115" fg:w="1"/><text x="13.9327%" y="1039.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (1 samples, 0.01%)</title><rect x="13.6949%" y="1029" width="0.0123%" height="15" fill="rgb(250,162,2)" fg:x="1116" fg:w="1"/><text x="13.9449%" y="1039.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (1 samples, 0.01%)</title><rect x="13.6949%" y="1013" width="0.0123%" height="15" fill="rgb(220,13,41)" fg:x="1116" fg:w="1"/><text x="13.9449%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="13.6949%" y="997" width="0.0123%" height="15" fill="rgb(249,221,25)" fg:x="1116" fg:w="1"/><text x="13.9449%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="13.6949%" y="981" width="0.0123%" height="15" fill="rgb(215,208,19)" fg:x="1116" fg:w="1"/><text x="13.9449%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="13.7072%" y="1013" width="0.0123%" height="15" fill="rgb(236,175,2)" fg:x="1117" fg:w="1"/><text x="13.9572%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="13.7686%" y="981" width="0.0123%" height="15" fill="rgb(241,52,2)" fg:x="1122" fg:w="1"/><text x="14.0186%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="13.8054%" y="949" width="0.0368%" height="15" fill="rgb(248,140,14)" fg:x="1125" fg:w="3"/><text x="14.0554%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.04%)</title><rect x="13.8054%" y="933" width="0.0368%" height="15" fill="rgb(253,22,42)" fg:x="1125" fg:w="3"/><text x="14.0554%" y="943.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (18 samples, 0.22%)</title><rect x="13.7072%" y="1029" width="0.2209%" height="15" fill="rgb(234,61,47)" fg:x="1117" fg:w="18"/><text x="13.9572%" y="1039.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (17 samples, 0.21%)</title><rect x="13.7195%" y="1013" width="0.2086%" height="15" fill="rgb(208,226,15)" fg:x="1118" fg:w="17"/><text x="13.9695%" y="1023.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (13 samples, 0.16%)</title><rect x="13.7686%" y="997" width="0.1595%" height="15" fill="rgb(217,221,4)" fg:x="1122" fg:w="13"/><text x="14.0186%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (12 samples, 0.15%)</title><rect x="13.7808%" y="981" width="0.1473%" height="15" fill="rgb(212,174,34)" fg:x="1123" fg:w="12"/><text x="14.0308%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.15%)</title><rect x="13.7808%" y="965" width="0.1473%" height="15" fill="rgb(253,83,4)" fg:x="1123" fg:w="12"/><text x="14.0308%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (7 samples, 0.09%)</title><rect x="13.8422%" y="949" width="0.0859%" height="15" fill="rgb(250,195,49)" fg:x="1128" fg:w="7"/><text x="14.0922%" y="959.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint::{{closure}} (7 samples, 0.09%)</title><rect x="13.8422%" y="933" width="0.0859%" height="15" fill="rgb(241,192,25)" fg:x="1128" fg:w="7"/><text x="14.0922%" y="943.50"></text></g><g><title>fixedbitset::FixedBitSet::intersect_with (1 samples, 0.01%)</title><rect x="13.9281%" y="1029" width="0.0123%" height="15" fill="rgb(208,124,10)" fg:x="1135" fg:w="1"/><text x="14.1781%" y="1039.50"></text></g><g><title>fixedbitset::FixedBitSet::ones (1 samples, 0.01%)</title><rect x="13.9404%" y="1029" width="0.0123%" height="15" fill="rgb(222,33,0)" fg:x="1136" fg:w="1"/><text x="14.1904%" y="1039.50"></text></g><g><title>fixedbitset::FixedBitSet::as_slice (1 samples, 0.01%)</title><rect x="13.9404%" y="1013" width="0.0123%" height="15" fill="rgb(234,209,28)" fg:x="1136" fg:w="1"/><text x="14.1904%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="13.9404%" y="997" width="0.0123%" height="15" fill="rgb(224,11,23)" fg:x="1136" fg:w="1"/><text x="14.1904%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.58%)</title><rect x="13.3881%" y="1061" width="0.5768%" height="15" fill="rgb(232,99,1)" fg:x="1091" fg:w="47"/><text x="13.6381%" y="1071.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (47 samples, 0.58%)</title><rect x="13.3881%" y="1045" width="0.5768%" height="15" fill="rgb(237,95,45)" fg:x="1091" fg:w="47"/><text x="13.6381%" y="1055.50"></text></g><g><title>fixedbitset::FixedBitSet::set (1 samples, 0.01%)</title><rect x="13.9526%" y="1029" width="0.0123%" height="15" fill="rgb(208,109,11)" fg:x="1137" fg:w="1"/><text x="14.2026%" y="1039.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="13.9772%" y="1013" width="0.0245%" height="15" fill="rgb(216,190,48)" fg:x="1139" fg:w="2"/><text x="14.2272%" y="1023.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="13.9894%" y="997" width="0.0123%" height="15" fill="rgb(251,171,36)" fg:x="1140" fg:w="1"/><text x="14.2394%" y="1007.50"></text></g><g><title>concurrent_queue::full_fence (2 samples, 0.02%)</title><rect x="14.0017%" y="1013" width="0.0245%" height="15" fill="rgb(230,62,22)" fg:x="1141" fg:w="2"/><text x="14.2517%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2 samples, 0.02%)</title><rect x="14.0017%" y="997" width="0.0245%" height="15" fill="rgb(225,114,35)" fg:x="1141" fg:w="2"/><text x="14.2517%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="14.0017%" y="981" width="0.0245%" height="15" fill="rgb(215,118,42)" fg:x="1141" fg:w="2"/><text x="14.2517%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="14.0017%" y="965" width="0.0245%" height="15" fill="rgb(243,119,21)" fg:x="1141" fg:w="2"/><text x="14.2517%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="14.0263%" y="1013" width="0.0123%" height="15" fill="rgb(252,177,53)" fg:x="1143" fg:w="1"/><text x="14.2763%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="14.0263%" y="997" width="0.0123%" height="15" fill="rgb(237,209,29)" fg:x="1143" fg:w="1"/><text x="14.2763%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (7 samples, 0.09%)</title><rect x="13.9649%" y="1045" width="0.0859%" height="15" fill="rgb(212,65,23)" fg:x="1138" fg:w="7"/><text x="14.2149%" y="1055.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (7 samples, 0.09%)</title><rect x="13.9649%" y="1029" width="0.0859%" height="15" fill="rgb(230,222,46)" fg:x="1138" fg:w="7"/><text x="14.2149%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="14.0385%" y="1013" width="0.0123%" height="15" fill="rgb(215,135,32)" fg:x="1144" fg:w="1"/><text x="14.2885%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="14.0385%" y="997" width="0.0123%" height="15" fill="rgb(246,101,22)" fg:x="1144" fg:w="1"/><text x="14.2885%" y="1007.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (8 samples, 0.10%)</title><rect x="13.9649%" y="1061" width="0.0982%" height="15" fill="rgb(206,107,13)" fg:x="1138" fg:w="8"/><text x="14.2149%" y="1071.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="14.0508%" y="1045" width="0.0123%" height="15" fill="rgb(250,100,44)" fg:x="1145" fg:w="1"/><text x="14.3008%" y="1055.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="14.0508%" y="1029" width="0.0123%" height="15" fill="rgb(231,147,38)" fg:x="1145" fg:w="1"/><text x="14.3008%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="14.0508%" y="1013" width="0.0123%" height="15" fill="rgb(229,8,40)" fg:x="1145" fg:w="1"/><text x="14.3008%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="14.0508%" y="997" width="0.0123%" height="15" fill="rgb(221,135,30)" fg:x="1145" fg:w="1"/><text x="14.3008%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="14.0508%" y="981" width="0.0123%" height="15" fill="rgb(249,193,18)" fg:x="1145" fg:w="1"/><text x="14.3008%" y="991.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="14.0631%" y="1029" width="0.0123%" height="15" fill="rgb(209,133,39)" fg:x="1146" fg:w="1"/><text x="14.3131%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="14.0631%" y="1013" width="0.0123%" height="15" fill="rgb(232,100,14)" fg:x="1146" fg:w="1"/><text x="14.3131%" y="1023.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (4 samples, 0.05%)</title><rect x="14.0631%" y="1061" width="0.0491%" height="15" fill="rgb(224,185,1)" fg:x="1146" fg:w="4"/><text x="14.3131%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (4 samples, 0.05%)</title><rect x="14.0631%" y="1045" width="0.0491%" height="15" fill="rgb(223,139,8)" fg:x="1146" fg:w="4"/><text x="14.3131%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="14.0753%" y="1029" width="0.0368%" height="15" fill="rgb(232,213,38)" fg:x="1147" fg:w="3"/><text x="14.3253%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.04%)</title><rect x="14.0753%" y="1013" width="0.0368%" height="15" fill="rgb(207,94,22)" fg:x="1147" fg:w="3"/><text x="14.3253%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="14.0753%" y="997" width="0.0368%" height="15" fill="rgb(219,183,54)" fg:x="1147" fg:w="3"/><text x="14.3253%" y="1007.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="14.0753%" y="981" width="0.0368%" height="15" fill="rgb(216,185,54)" fg:x="1147" fg:w="3"/><text x="14.3253%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="14.1244%" y="1029" width="0.0123%" height="15" fill="rgb(254,217,39)" fg:x="1151" fg:w="1"/><text x="14.3744%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.02%)</title><rect x="14.1244%" y="1045" width="0.0245%" height="15" fill="rgb(240,178,23)" fg:x="1151" fg:w="2"/><text x="14.3744%" y="1055.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="14.1367%" y="1029" width="0.0123%" height="15" fill="rgb(218,11,47)" fg:x="1152" fg:w="1"/><text x="14.3867%" y="1039.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="14.1367%" y="1013" width="0.0123%" height="15" fill="rgb(218,51,51)" fg:x="1152" fg:w="1"/><text x="14.3867%" y="1023.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::clear (1 samples, 0.01%)</title><rect x="14.1490%" y="1045" width="0.0123%" height="15" fill="rgb(238,126,27)" fg:x="1153" fg:w="1"/><text x="14.3990%" y="1055.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (1 samples, 0.01%)</title><rect x="14.1490%" y="1029" width="0.0123%" height="15" fill="rgb(249,202,22)" fg:x="1153" fg:w="1"/><text x="14.3990%" y="1039.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="14.1490%" y="1013" width="0.0123%" height="15" fill="rgb(254,195,49)" fg:x="1153" fg:w="1"/><text x="14.3990%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (3 samples, 0.04%)</title><rect x="14.1858%" y="997" width="0.0368%" height="15" fill="rgb(208,123,14)" fg:x="1156" fg:w="3"/><text x="14.4358%" y="1007.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (6 samples, 0.07%)</title><rect x="14.1612%" y="1045" width="0.0736%" height="15" fill="rgb(224,200,8)" fg:x="1154" fg:w="6"/><text x="14.4112%" y="1055.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (6 samples, 0.07%)</title><rect x="14.1612%" y="1029" width="0.0736%" height="15" fill="rgb(217,61,36)" fg:x="1154" fg:w="6"/><text x="14.4112%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="14.1858%" y="1013" width="0.0491%" height="15" fill="rgb(206,35,45)" fg:x="1156" fg:w="4"/><text x="14.4358%" y="1023.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (1 samples, 0.01%)</title><rect x="14.2226%" y="997" width="0.0123%" height="15" fill="rgb(217,65,33)" fg:x="1159" fg:w="1"/><text x="14.4726%" y="1007.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (12 samples, 0.15%)</title><rect x="14.1122%" y="1061" width="0.1473%" height="15" fill="rgb(222,158,48)" fg:x="1150" fg:w="12"/><text x="14.3622%" y="1071.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (2 samples, 0.02%)</title><rect x="14.2349%" y="1045" width="0.0245%" height="15" fill="rgb(254,2,54)" fg:x="1160" fg:w="2"/><text x="14.4849%" y="1055.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::update_counters_and_queue_systems (1 samples, 0.01%)</title><rect x="14.2594%" y="1061" width="0.0123%" height="15" fill="rgb(250,143,38)" fg:x="1162" fg:w="1"/><text x="14.5094%" y="1071.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="14.2594%" y="1045" width="0.0123%" height="15" fill="rgb(248,25,0)" fg:x="1162" fg:w="1"/><text x="14.5094%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="14.2594%" y="1029" width="0.0123%" height="15" fill="rgb(206,152,27)" fg:x="1162" fg:w="1"/><text x="14.5094%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (2 samples, 0.02%)</title><rect x="14.2717%" y="997" width="0.0245%" height="15" fill="rgb(240,77,30)" fg:x="1163" fg:w="2"/><text x="14.5217%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (2 samples, 0.02%)</title><rect x="14.2717%" y="981" width="0.0245%" height="15" fill="rgb(231,5,3)" fg:x="1163" fg:w="2"/><text x="14.5217%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="14.2717%" y="965" width="0.0245%" height="15" fill="rgb(207,226,32)" fg:x="1163" fg:w="2"/><text x="14.5217%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.02%)</title><rect x="14.2717%" y="949" width="0.0245%" height="15" fill="rgb(222,207,47)" fg:x="1163" fg:w="2"/><text x="14.5217%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.02%)</title><rect x="14.2717%" y="933" width="0.0245%" height="15" fill="rgb(229,115,45)" fg:x="1163" fg:w="2"/><text x="14.5217%" y="943.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="14.2717%" y="917" width="0.0245%" height="15" fill="rgb(224,191,6)" fg:x="1163" fg:w="2"/><text x="14.5217%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;usize&gt;&gt; (5 samples, 0.06%)</title><rect x="14.2717%" y="1061" width="0.0614%" height="15" fill="rgb(230,227,24)" fg:x="1163" fg:w="5"/><text x="14.5217%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (5 samples, 0.06%)</title><rect x="14.2717%" y="1045" width="0.0614%" height="15" fill="rgb(228,80,19)" fg:x="1163" fg:w="5"/><text x="14.5217%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (5 samples, 0.06%)</title><rect x="14.2717%" y="1029" width="0.0614%" height="15" fill="rgb(247,229,0)" fg:x="1163" fg:w="5"/><text x="14.5217%" y="1039.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="14.2717%" y="1013" width="0.0614%" height="15" fill="rgb(237,194,15)" fg:x="1163" fg:w="5"/><text x="14.5217%" y="1023.50"></text></g><g><title>event_listener::Inner::lock (3 samples, 0.04%)</title><rect x="14.2962%" y="997" width="0.0368%" height="15" fill="rgb(219,203,20)" fg:x="1165" fg:w="3"/><text x="14.5462%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.04%)</title><rect x="14.2962%" y="981" width="0.0368%" height="15" fill="rgb(234,128,8)" fg:x="1165" fg:w="3"/><text x="14.5462%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.04%)</title><rect x="14.2962%" y="965" width="0.0368%" height="15" fill="rgb(248,202,8)" fg:x="1165" fg:w="3"/><text x="14.5462%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (3 samples, 0.04%)</title><rect x="14.2962%" y="949" width="0.0368%" height="15" fill="rgb(206,104,37)" fg:x="1165" fg:w="3"/><text x="14.5462%" y="959.50"></text></g><g><title>__GI___pthread_mutex_lock (3 samples, 0.04%)</title><rect x="14.2962%" y="933" width="0.0368%" height="15" fill="rgb(223,8,27)" fg:x="1165" fg:w="3"/><text x="14.5462%" y="943.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::unwrap_or_else (1 samples, 0.01%)</title><rect x="14.3330%" y="1061" width="0.0123%" height="15" fill="rgb(216,217,28)" fg:x="1168" fg:w="1"/><text x="14.5830%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (115 samples, 1.41%)</title><rect x="12.9832%" y="1077" width="1.4112%" height="15" fill="rgb(249,199,1)" fg:x="1058" fg:w="115"/><text x="13.2332%" y="1087.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones (4 samples, 0.05%)</title><rect x="14.3453%" y="1061" width="0.0491%" height="15" fill="rgb(240,85,17)" fg:x="1169" fg:w="4"/><text x="14.5953%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (2 samples, 0.02%)</title><rect x="14.3699%" y="1045" width="0.0245%" height="15" fill="rgb(206,108,45)" fg:x="1171" fg:w="2"/><text x="14.6199%" y="1055.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (2 samples, 0.02%)</title><rect x="14.3699%" y="1029" width="0.0245%" height="15" fill="rgb(245,210,41)" fg:x="1171" fg:w="2"/><text x="14.6199%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (2 samples, 0.02%)</title><rect x="14.3699%" y="1013" width="0.0245%" height="15" fill="rgb(206,13,37)" fg:x="1171" fg:w="2"/><text x="14.6199%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (2 samples, 0.02%)</title><rect x="14.3699%" y="997" width="0.0245%" height="15" fill="rgb(250,61,18)" fg:x="1171" fg:w="2"/><text x="14.6199%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (2 samples, 0.02%)</title><rect x="14.3699%" y="981" width="0.0245%" height="15" fill="rgb(235,172,48)" fg:x="1171" fg:w="2"/><text x="14.6199%" y="991.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones::{{closure}} (2 samples, 0.02%)</title><rect x="14.3699%" y="965" width="0.0245%" height="15" fill="rgb(249,201,17)" fg:x="1171" fg:w="2"/><text x="14.6199%" y="975.50"></text></g><g><title>core::num::&lt;impl u32&gt;::count_ones (1 samples, 0.01%)</title><rect x="14.3821%" y="949" width="0.0123%" height="15" fill="rgb(219,208,6)" fg:x="1172" fg:w="1"/><text x="14.6321%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.05%)</title><rect x="14.3944%" y="1077" width="0.0491%" height="15" fill="rgb(248,31,23)" fg:x="1173" fg:w="4"/><text x="14.6444%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="14.5294%" y="1029" width="0.0123%" height="15" fill="rgb(245,15,42)" fg:x="1184" fg:w="1"/><text x="14.7794%" y="1039.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="14.5294%" y="1045" width="0.0368%" height="15" fill="rgb(222,217,39)" fg:x="1184" fg:w="3"/><text x="14.7794%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (2 samples, 0.02%)</title><rect x="14.5417%" y="1029" width="0.0245%" height="15" fill="rgb(210,219,27)" fg:x="1185" fg:w="2"/><text x="14.7917%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (2 samples, 0.02%)</title><rect x="14.5417%" y="1013" width="0.0245%" height="15" fill="rgb(252,166,36)" fg:x="1185" fg:w="2"/><text x="14.7917%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="14.5417%" y="997" width="0.0245%" height="15" fill="rgb(245,132,34)" fg:x="1185" fg:w="2"/><text x="14.7917%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.02%)</title><rect x="14.5417%" y="981" width="0.0245%" height="15" fill="rgb(236,54,3)" fg:x="1185" fg:w="2"/><text x="14.7917%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.02%)</title><rect x="14.5417%" y="965" width="0.0245%" height="15" fill="rgb(241,173,43)" fg:x="1185" fg:w="2"/><text x="14.7917%" y="975.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="14.5417%" y="949" width="0.0245%" height="15" fill="rgb(215,190,9)" fg:x="1185" fg:w="2"/><text x="14.7917%" y="959.50"></text></g><g><title>[engine] (1 samples, 0.01%)</title><rect x="14.5662%" y="1045" width="0.0123%" height="15" fill="rgb(242,101,16)" fg:x="1187" fg:w="1"/><text x="14.8162%" y="1055.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="14.5662%" y="1029" width="0.0123%" height="15" fill="rgb(223,190,21)" fg:x="1187" fg:w="1"/><text x="14.8162%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (15 samples, 0.18%)</title><rect x="14.7503%" y="997" width="0.1841%" height="15" fill="rgb(215,228,25)" fg:x="1202" fg:w="15"/><text x="15.0003%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.18%)</title><rect x="14.7503%" y="981" width="0.1841%" height="15" fill="rgb(225,36,22)" fg:x="1202" fg:w="15"/><text x="15.0003%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.18%)</title><rect x="14.7503%" y="965" width="0.1841%" height="15" fill="rgb(251,106,46)" fg:x="1202" fg:w="15"/><text x="15.0003%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (28 samples, 0.34%)</title><rect x="14.6276%" y="1029" width="0.3436%" height="15" fill="rgb(208,90,1)" fg:x="1192" fg:w="28"/><text x="14.8776%" y="1039.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (19 samples, 0.23%)</title><rect x="14.7380%" y="1013" width="0.2332%" height="15" fill="rgb(243,10,4)" fg:x="1201" fg:w="19"/><text x="14.9880%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (3 samples, 0.04%)</title><rect x="14.9343%" y="997" width="0.0368%" height="15" fill="rgb(212,137,27)" fg:x="1217" fg:w="3"/><text x="15.1843%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_and (3 samples, 0.04%)</title><rect x="14.9343%" y="981" width="0.0368%" height="15" fill="rgb(231,220,49)" fg:x="1217" fg:w="3"/><text x="15.1843%" y="991.50"></text></g><g><title>event_listener::Event::try_inner (1 samples, 0.01%)</title><rect x="14.9712%" y="1013" width="0.0123%" height="15" fill="rgb(237,96,20)" fg:x="1220" fg:w="1"/><text x="15.2212%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="14.9712%" y="997" width="0.0123%" height="15" fill="rgb(239,229,30)" fg:x="1220" fg:w="1"/><text x="15.2212%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="14.9712%" y="981" width="0.0123%" height="15" fill="rgb(219,65,33)" fg:x="1220" fg:w="1"/><text x="15.2212%" y="991.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (36 samples, 0.44%)</title><rect x="14.5785%" y="1045" width="0.4418%" height="15" fill="rgb(243,134,7)" fg:x="1188" fg:w="36"/><text x="14.8285%" y="1055.50"></text></g><g><title>event_listener::Event::notify (4 samples, 0.05%)</title><rect x="14.9712%" y="1029" width="0.0491%" height="15" fill="rgb(216,177,54)" fg:x="1220" fg:w="4"/><text x="15.2212%" y="1039.50"></text></g><g><title>event_listener::full_fence (3 samples, 0.04%)</title><rect x="14.9834%" y="1013" width="0.0368%" height="15" fill="rgb(211,160,20)" fg:x="1221" fg:w="3"/><text x="15.2334%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (3 samples, 0.04%)</title><rect x="14.9834%" y="997" width="0.0368%" height="15" fill="rgb(239,85,39)" fg:x="1221" fg:w="3"/><text x="15.2334%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.04%)</title><rect x="14.9834%" y="981" width="0.0368%" height="15" fill="rgb(232,125,22)" fg:x="1221" fg:w="3"/><text x="15.2334%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.04%)</title><rect x="14.9834%" y="965" width="0.0368%" height="15" fill="rgb(244,57,34)" fg:x="1221" fg:w="3"/><text x="15.2334%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.13%)</title><rect x="15.0202%" y="1029" width="0.1350%" height="15" fill="rgb(214,203,32)" fg:x="1224" fg:w="11"/><text x="15.2702%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.13%)</title><rect x="15.0202%" y="1013" width="0.1350%" height="15" fill="rgb(207,58,43)" fg:x="1224" fg:w="11"/><text x="15.2702%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.13%)</title><rect x="15.0202%" y="997" width="0.1350%" height="15" fill="rgb(215,193,15)" fg:x="1224" fg:w="11"/><text x="15.2702%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (5 samples, 0.06%)</title><rect x="15.1552%" y="1029" width="0.0614%" height="15" fill="rgb(232,15,44)" fg:x="1235" fg:w="5"/><text x="15.4052%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (5 samples, 0.06%)</title><rect x="15.1552%" y="1013" width="0.0614%" height="15" fill="rgb(212,3,48)" fg:x="1235" fg:w="5"/><text x="15.4052%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="15.1552%" y="997" width="0.0614%" height="15" fill="rgb(218,128,7)" fg:x="1235" fg:w="5"/><text x="15.4052%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (5 samples, 0.06%)</title><rect x="15.1552%" y="981" width="0.0614%" height="15" fill="rgb(226,216,39)" fg:x="1235" fg:w="5"/><text x="15.4052%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (5 samples, 0.06%)</title><rect x="15.1552%" y="965" width="0.0614%" height="15" fill="rgb(243,47,51)" fg:x="1235" fg:w="5"/><text x="15.4052%" y="975.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (5 samples, 0.06%)</title><rect x="15.1552%" y="949" width="0.0614%" height="15" fill="rgb(241,183,40)" fg:x="1235" fg:w="5"/><text x="15.4052%" y="959.50"></text></g><g><title>std::sync::poison::Flag::get (1 samples, 0.01%)</title><rect x="15.2166%" y="965" width="0.0123%" height="15" fill="rgb(231,217,32)" fg:x="1240" fg:w="1"/><text x="15.4666%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="15.2166%" y="949" width="0.0123%" height="15" fill="rgb(229,61,38)" fg:x="1240" fg:w="1"/><text x="15.4666%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="15.2166%" y="933" width="0.0123%" height="15" fill="rgb(225,210,5)" fg:x="1240" fg:w="1"/><text x="15.4666%" y="943.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="15.2166%" y="997" width="0.0245%" height="15" fill="rgb(231,79,45)" fg:x="1240" fg:w="2"/><text x="15.4666%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::borrow (2 samples, 0.02%)</title><rect x="15.2166%" y="981" width="0.0245%" height="15" fill="rgb(224,100,7)" fg:x="1240" fg:w="2"/><text x="15.4666%" y="991.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="15.2289%" y="965" width="0.0123%" height="15" fill="rgb(241,198,18)" fg:x="1241" fg:w="1"/><text x="15.4789%" y="975.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="15.2289%" y="949" width="0.0123%" height="15" fill="rgb(252,97,53)" fg:x="1241" fg:w="1"/><text x="15.4789%" y="959.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="15.2289%" y="933" width="0.0123%" height="15" fill="rgb(220,88,7)" fg:x="1241" fg:w="1"/><text x="15.4789%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="15.2289%" y="917" width="0.0123%" height="15" fill="rgb(213,176,14)" fg:x="1241" fg:w="1"/><text x="15.4789%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="15.2289%" y="901" width="0.0123%" height="15" fill="rgb(246,73,7)" fg:x="1241" fg:w="1"/><text x="15.4789%" y="911.50"></text></g><g><title>event_listener::Inner::lock (8 samples, 0.10%)</title><rect x="15.2166%" y="1029" width="0.0982%" height="15" fill="rgb(245,64,36)" fg:x="1240" fg:w="8"/><text x="15.4666%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.10%)</title><rect x="15.2166%" y="1013" width="0.0982%" height="15" fill="rgb(245,80,10)" fg:x="1240" fg:w="8"/><text x="15.4666%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.07%)</title><rect x="15.2411%" y="997" width="0.0736%" height="15" fill="rgb(232,107,50)" fg:x="1242" fg:w="6"/><text x="15.4911%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (6 samples, 0.07%)</title><rect x="15.2411%" y="981" width="0.0736%" height="15" fill="rgb(253,3,0)" fg:x="1242" fg:w="6"/><text x="15.4911%" y="991.50"></text></g><g><title>__GI___pthread_mutex_lock (6 samples, 0.07%)</title><rect x="15.2411%" y="965" width="0.0736%" height="15" fill="rgb(212,99,53)" fg:x="1242" fg:w="6"/><text x="15.4911%" y="975.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (68 samples, 0.83%)</title><rect x="14.4926%" y="1061" width="0.8345%" height="15" fill="rgb(249,111,54)" fg:x="1181" fg:w="68"/><text x="14.7426%" y="1071.50"></text></g><g><title>event_listener::Event::listen (25 samples, 0.31%)</title><rect x="15.0202%" y="1045" width="0.3068%" height="15" fill="rgb(249,55,30)" fg:x="1224" fg:w="25"/><text x="15.2702%" y="1055.50"></text></g><g><title>event_listener::List::insert (1 samples, 0.01%)</title><rect x="15.3148%" y="1029" width="0.0123%" height="15" fill="rgb(237,47,42)" fg:x="1248" fg:w="1"/><text x="15.5648%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="15.4497%" y="997" width="0.0123%" height="15" fill="rgb(211,20,18)" fg:x="1259" fg:w="1"/><text x="15.6997%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="15.4497%" y="981" width="0.0123%" height="15" fill="rgb(231,203,46)" fg:x="1259" fg:w="1"/><text x="15.6997%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="15.4497%" y="965" width="0.0123%" height="15" fill="rgb(237,142,3)" fg:x="1259" fg:w="1"/><text x="15.6997%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="15.4497%" y="949" width="0.0123%" height="15" fill="rgb(241,107,1)" fg:x="1259" fg:w="1"/><text x="15.6997%" y="959.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="15.4497%" y="933" width="0.0123%" height="15" fill="rgb(229,83,13)" fg:x="1259" fg:w="1"/><text x="15.6997%" y="943.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="15.4497%" y="917" width="0.0123%" height="15" fill="rgb(241,91,40)" fg:x="1259" fg:w="1"/><text x="15.6997%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="15.4497%" y="901" width="0.0123%" height="15" fill="rgb(225,3,45)" fg:x="1259" fg:w="1"/><text x="15.6997%" y="911.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="15.4497%" y="885" width="0.0123%" height="15" fill="rgb(244,223,14)" fg:x="1259" fg:w="1"/><text x="15.6997%" y="895.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="15.4497%" y="869" width="0.0123%" height="15" fill="rgb(224,124,37)" fg:x="1259" fg:w="1"/><text x="15.6997%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.13%)</title><rect x="15.4620%" y="997" width="0.1350%" height="15" fill="rgb(251,171,30)" fg:x="1260" fg:w="11"/><text x="15.7120%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.13%)</title><rect x="15.4620%" y="981" width="0.1350%" height="15" fill="rgb(236,46,54)" fg:x="1260" fg:w="11"/><text x="15.7120%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (14 samples, 0.17%)</title><rect x="15.5970%" y="997" width="0.1718%" height="15" fill="rgb(245,213,5)" fg:x="1271" fg:w="14"/><text x="15.8470%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_or (14 samples, 0.17%)</title><rect x="15.5970%" y="981" width="0.1718%" height="15" fill="rgb(230,144,27)" fg:x="1271" fg:w="14"/><text x="15.8470%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (39 samples, 0.48%)</title><rect x="15.3516%" y="1029" width="0.4786%" height="15" fill="rgb(220,86,6)" fg:x="1251" fg:w="39"/><text x="15.6016%" y="1039.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (31 samples, 0.38%)</title><rect x="15.4497%" y="1013" width="0.3804%" height="15" fill="rgb(240,20,13)" fg:x="1259" fg:w="31"/><text x="15.6997%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (5 samples, 0.06%)</title><rect x="15.7688%" y="997" width="0.0614%" height="15" fill="rgb(217,89,34)" fg:x="1285" fg:w="5"/><text x="16.0188%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.06%)</title><rect x="15.7688%" y="981" width="0.0614%" height="15" fill="rgb(229,13,5)" fg:x="1285" fg:w="5"/><text x="16.0188%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (3 samples, 0.04%)</title><rect x="15.8302%" y="1013" width="0.0368%" height="15" fill="rgb(244,67,35)" fg:x="1290" fg:w="3"/><text x="16.0802%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (3 samples, 0.04%)</title><rect x="15.8302%" y="997" width="0.0368%" height="15" fill="rgb(221,40,2)" fg:x="1290" fg:w="3"/><text x="16.0802%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="15.8302%" y="981" width="0.0368%" height="15" fill="rgb(237,157,21)" fg:x="1290" fg:w="3"/><text x="16.0802%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.04%)</title><rect x="15.8302%" y="965" width="0.0368%" height="15" fill="rgb(222,94,11)" fg:x="1290" fg:w="3"/><text x="16.0802%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.04%)</title><rect x="15.8302%" y="949" width="0.0368%" height="15" fill="rgb(249,113,6)" fg:x="1290" fg:w="3"/><text x="16.0802%" y="959.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.04%)</title><rect x="15.8302%" y="933" width="0.0368%" height="15" fill="rgb(238,137,36)" fg:x="1290" fg:w="3"/><text x="16.0802%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="15.8670%" y="1013" width="0.0123%" height="15" fill="rgb(210,102,26)" fg:x="1293" fg:w="1"/><text x="16.1170%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="15.8670%" y="997" width="0.0123%" height="15" fill="rgb(218,30,30)" fg:x="1293" fg:w="1"/><text x="16.1170%" y="1007.50"></text></g><g><title>event_listener::Event::try_inner (1 samples, 0.01%)</title><rect x="15.8792%" y="1013" width="0.0123%" height="15" fill="rgb(214,67,26)" fg:x="1294" fg:w="1"/><text x="16.1292%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="15.8792%" y="997" width="0.0123%" height="15" fill="rgb(251,9,53)" fg:x="1294" fg:w="1"/><text x="16.1292%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="15.8792%" y="981" width="0.0123%" height="15" fill="rgb(228,204,25)" fg:x="1294" fg:w="1"/><text x="16.1292%" y="991.50"></text></g><g><title>std::sync::poison::Flag::get (1 samples, 0.01%)</title><rect x="15.8915%" y="949" width="0.0123%" height="15" fill="rgb(207,153,8)" fg:x="1295" fg:w="1"/><text x="16.1415%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="15.8915%" y="933" width="0.0123%" height="15" fill="rgb(242,9,16)" fg:x="1295" fg:w="1"/><text x="16.1415%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="15.8915%" y="917" width="0.0123%" height="15" fill="rgb(217,211,10)" fg:x="1295" fg:w="1"/><text x="16.1415%" y="927.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="15.8915%" y="981" width="0.0245%" height="15" fill="rgb(219,228,52)" fg:x="1295" fg:w="2"/><text x="16.1415%" y="991.50"></text></g><g><title>std::sync::poison::Flag::borrow (2 samples, 0.02%)</title><rect x="15.8915%" y="965" width="0.0245%" height="15" fill="rgb(231,92,29)" fg:x="1295" fg:w="2"/><text x="16.1415%" y="975.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="15.9038%" y="949" width="0.0123%" height="15" fill="rgb(232,8,23)" fg:x="1296" fg:w="1"/><text x="16.1538%" y="959.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="15.9038%" y="933" width="0.0123%" height="15" fill="rgb(216,211,34)" fg:x="1296" fg:w="1"/><text x="16.1538%" y="943.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="15.9038%" y="917" width="0.0123%" height="15" fill="rgb(236,151,0)" fg:x="1296" fg:w="1"/><text x="16.1538%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="15.9038%" y="901" width="0.0123%" height="15" fill="rgb(209,168,3)" fg:x="1296" fg:w="1"/><text x="16.1538%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="15.9038%" y="885" width="0.0123%" height="15" fill="rgb(208,129,28)" fg:x="1296" fg:w="1"/><text x="16.1538%" y="895.50"></text></g><g><title>event_listener::Inner::lock (8 samples, 0.10%)</title><rect x="15.8915%" y="1013" width="0.0982%" height="15" fill="rgb(229,78,22)" fg:x="1295" fg:w="8"/><text x="16.1415%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (8 samples, 0.10%)</title><rect x="15.8915%" y="997" width="0.0982%" height="15" fill="rgb(228,187,13)" fg:x="1295" fg:w="8"/><text x="16.1415%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.07%)</title><rect x="15.9161%" y="981" width="0.0736%" height="15" fill="rgb(240,119,24)" fg:x="1297" fg:w="6"/><text x="16.1661%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (6 samples, 0.07%)</title><rect x="15.9161%" y="965" width="0.0736%" height="15" fill="rgb(209,194,42)" fg:x="1297" fg:w="6"/><text x="16.1661%" y="975.50"></text></g><g><title>__GI___pthread_mutex_lock (6 samples, 0.07%)</title><rect x="15.9161%" y="949" width="0.0736%" height="15" fill="rgb(247,200,46)" fg:x="1297" fg:w="6"/><text x="16.1661%" y="959.50"></text></g><g><title>async_executor::Sleepers::notify (1 samples, 0.01%)</title><rect x="16.0020%" y="949" width="0.0123%" height="15" fill="rgb(218,76,16)" fg:x="1304" fg:w="1"/><text x="16.2520%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.01%)</title><rect x="16.0142%" y="949" width="0.0123%" height="15" fill="rgb(225,21,48)" fg:x="1305" fg:w="1"/><text x="16.2642%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.0142%" y="933" width="0.0123%" height="15" fill="rgb(239,223,50)" fg:x="1305" fg:w="1"/><text x="16.2642%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="16.0142%" y="917" width="0.0123%" height="15" fill="rgb(244,45,21)" fg:x="1305" fg:w="1"/><text x="16.2642%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="16.0142%" y="901" width="0.0123%" height="15" fill="rgb(232,33,43)" fg:x="1305" fg:w="1"/><text x="16.2642%" y="911.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="16.0142%" y="885" width="0.0123%" height="15" fill="rgb(209,8,3)" fg:x="1305" fg:w="1"/><text x="16.2642%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.01%)</title><rect x="16.0265%" y="949" width="0.0123%" height="15" fill="rgb(214,25,53)" fg:x="1306" fg:w="1"/><text x="16.2765%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="16.0265%" y="933" width="0.0123%" height="15" fill="rgb(254,186,54)" fg:x="1306" fg:w="1"/><text x="16.2765%" y="943.50"></text></g><g><title>core::mem::drop (3 samples, 0.04%)</title><rect x="16.0388%" y="869" width="0.0368%" height="15" fill="rgb(208,174,49)" fg:x="1307" fg:w="3"/><text x="16.2888%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (3 samples, 0.04%)</title><rect x="16.0388%" y="853" width="0.0368%" height="15" fill="rgb(233,191,51)" fg:x="1307" fg:w="3"/><text x="16.2888%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="16.0388%" y="837" width="0.0368%" height="15" fill="rgb(222,134,10)" fg:x="1307" fg:w="3"/><text x="16.2888%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.04%)</title><rect x="16.0388%" y="821" width="0.0368%" height="15" fill="rgb(230,226,20)" fg:x="1307" fg:w="3"/><text x="16.2888%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.04%)</title><rect x="16.0388%" y="805" width="0.0368%" height="15" fill="rgb(251,111,25)" fg:x="1307" fg:w="3"/><text x="16.2888%" y="815.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.04%)</title><rect x="16.0388%" y="789" width="0.0368%" height="15" fill="rgb(224,40,46)" fg:x="1307" fg:w="3"/><text x="16.2888%" y="799.50"></text></g><g><title>async_executor::State::notify (7 samples, 0.09%)</title><rect x="16.0020%" y="965" width="0.0859%" height="15" fill="rgb(236,108,47)" fg:x="1304" fg:w="7"/><text x="16.2520%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (4 samples, 0.05%)</title><rect x="16.0388%" y="949" width="0.0491%" height="15" fill="rgb(234,93,0)" fg:x="1307" fg:w="4"/><text x="16.2888%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (4 samples, 0.05%)</title><rect x="16.0388%" y="933" width="0.0491%" height="15" fill="rgb(224,213,32)" fg:x="1307" fg:w="4"/><text x="16.2888%" y="943.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (4 samples, 0.05%)</title><rect x="16.0388%" y="917" width="0.0491%" height="15" fill="rgb(251,11,48)" fg:x="1307" fg:w="4"/><text x="16.2888%" y="927.50"></text></g><g><title>parking::Unparker::unpark (4 samples, 0.05%)</title><rect x="16.0388%" y="901" width="0.0491%" height="15" fill="rgb(236,173,5)" fg:x="1307" fg:w="4"/><text x="16.2888%" y="911.50"></text></g><g><title>parking::Inner::unpark (4 samples, 0.05%)</title><rect x="16.0388%" y="885" width="0.0491%" height="15" fill="rgb(230,95,12)" fg:x="1307" fg:w="4"/><text x="16.2888%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="16.0756%" y="869" width="0.0123%" height="15" fill="rgb(232,209,1)" fg:x="1310" fg:w="1"/><text x="16.3256%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="16.0756%" y="853" width="0.0123%" height="15" fill="rgb(232,6,1)" fg:x="1310" fg:w="1"/><text x="16.3256%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="16.0756%" y="837" width="0.0123%" height="15" fill="rgb(210,224,50)" fg:x="1310" fg:w="1"/><text x="16.3256%" y="847.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.01%)</title><rect x="16.0756%" y="821" width="0.0123%" height="15" fill="rgb(228,127,35)" fg:x="1310" fg:w="1"/><text x="16.3256%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="16.0879%" y="965" width="0.0123%" height="15" fill="rgb(245,102,45)" fg:x="1311" fg:w="1"/><text x="16.3379%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="16.0879%" y="949" width="0.0123%" height="15" fill="rgb(214,1,49)" fg:x="1311" fg:w="1"/><text x="16.3379%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="16.0879%" y="933" width="0.0123%" height="15" fill="rgb(226,163,40)" fg:x="1311" fg:w="1"/><text x="16.3379%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="16.1247%" y="901" width="0.0245%" height="15" fill="rgb(239,212,28)" fg:x="1314" fg:w="2"/><text x="16.3747%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="16.1247%" y="885" width="0.0245%" height="15" fill="rgb(220,20,13)" fg:x="1314" fg:w="2"/><text x="16.3747%" y="895.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (5 samples, 0.06%)</title><rect x="16.1124%" y="949" width="0.0614%" height="15" fill="rgb(210,164,35)" fg:x="1313" fg:w="5"/><text x="16.3624%" y="959.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (5 samples, 0.06%)</title><rect x="16.1124%" y="933" width="0.0614%" height="15" fill="rgb(248,109,41)" fg:x="1313" fg:w="5"/><text x="16.3624%" y="943.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (4 samples, 0.05%)</title><rect x="16.1247%" y="917" width="0.0491%" height="15" fill="rgb(238,23,50)" fg:x="1314" fg:w="4"/><text x="16.3747%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.02%)</title><rect x="16.1492%" y="901" width="0.0245%" height="15" fill="rgb(211,48,49)" fg:x="1316" fg:w="2"/><text x="16.3992%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.02%)</title><rect x="16.1492%" y="885" width="0.0245%" height="15" fill="rgb(223,36,21)" fg:x="1316" fg:w="2"/><text x="16.3992%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.04%)</title><rect x="16.1738%" y="949" width="0.0368%" height="15" fill="rgb(207,123,46)" fg:x="1318" fg:w="3"/><text x="16.4238%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.04%)</title><rect x="16.1738%" y="933" width="0.0368%" height="15" fill="rgb(240,218,32)" fg:x="1318" fg:w="3"/><text x="16.4238%" y="943.50"></text></g><g><title>event_listener::List::notify (22 samples, 0.27%)</title><rect x="15.9897%" y="1013" width="0.2700%" height="15" fill="rgb(252,5,43)" fg:x="1303" fg:w="22"/><text x="16.2397%" y="1023.50"></text></g><g><title>core::task::wake::Waker::wake (22 samples, 0.27%)</title><rect x="15.9897%" y="997" width="0.2700%" height="15" fill="rgb(252,84,19)" fg:x="1303" fg:w="22"/><text x="16.2397%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (21 samples, 0.26%)</title><rect x="16.0020%" y="981" width="0.2577%" height="15" fill="rgb(243,152,39)" fg:x="1304" fg:w="21"/><text x="16.2520%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (13 samples, 0.16%)</title><rect x="16.1001%" y="965" width="0.1595%" height="15" fill="rgb(234,160,15)" fg:x="1312" fg:w="13"/><text x="16.3501%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="16.2106%" y="949" width="0.0491%" height="15" fill="rgb(237,34,20)" fg:x="1321" fg:w="4"/><text x="16.4606%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="16.2106%" y="933" width="0.0491%" height="15" fill="rgb(229,97,13)" fg:x="1321" fg:w="4"/><text x="16.4606%" y="943.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (89 samples, 1.09%)</title><rect x="15.3270%" y="1045" width="1.0922%" height="15" fill="rgb(234,71,50)" fg:x="1249" fg:w="89"/><text x="15.5770%" y="1055.50"></text></g><g><title>event_listener::Event::notify (48 samples, 0.59%)</title><rect x="15.8302%" y="1029" width="0.5890%" height="15" fill="rgb(253,155,4)" fg:x="1290" fg:w="48"/><text x="16.0802%" y="1039.50"></text></g><g><title>event_listener::full_fence (13 samples, 0.16%)</title><rect x="16.2597%" y="1013" width="0.1595%" height="15" fill="rgb(222,185,37)" fg:x="1325" fg:w="13"/><text x="16.5097%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (12 samples, 0.15%)</title><rect x="16.2719%" y="997" width="0.1473%" height="15" fill="rgb(251,177,13)" fg:x="1326" fg:w="12"/><text x="16.5219%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (12 samples, 0.15%)</title><rect x="16.2719%" y="981" width="0.1473%" height="15" fill="rgb(250,179,40)" fg:x="1326" fg:w="12"/><text x="16.5219%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.15%)</title><rect x="16.2719%" y="965" width="0.1473%" height="15" fill="rgb(242,44,2)" fg:x="1326" fg:w="12"/><text x="16.5219%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.01%)</title><rect x="16.4192%" y="1045" width="0.0123%" height="15" fill="rgb(216,177,13)" fg:x="1338" fg:w="1"/><text x="16.6692%" y="1055.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="16.4192%" y="1029" width="0.0123%" height="15" fill="rgb(216,106,43)" fg:x="1338" fg:w="1"/><text x="16.6692%" y="1039.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="16.4192%" y="1013" width="0.0123%" height="15" fill="rgb(216,183,2)" fg:x="1338" fg:w="1"/><text x="16.6692%" y="1023.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (94 samples, 1.15%)</title><rect x="15.3270%" y="1061" width="1.1535%" height="15" fill="rgb(249,75,3)" fg:x="1249" fg:w="94"/><text x="15.5770%" y="1071.50"></text></g><g><title>event_listener::Event::notify (4 samples, 0.05%)</title><rect x="16.4315%" y="1045" width="0.0491%" height="15" fill="rgb(219,67,39)" fg:x="1339" fg:w="4"/><text x="16.6815%" y="1055.50"></text></g><g><title>event_listener::full_fence (4 samples, 0.05%)</title><rect x="16.4315%" y="1029" width="0.0491%" height="15" fill="rgb(253,228,2)" fg:x="1339" fg:w="4"/><text x="16.6815%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (4 samples, 0.05%)</title><rect x="16.4315%" y="1013" width="0.0491%" height="15" fill="rgb(235,138,27)" fg:x="1339" fg:w="4"/><text x="16.6815%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.05%)</title><rect x="16.4315%" y="997" width="0.0491%" height="15" fill="rgb(236,97,51)" fg:x="1339" fg:w="4"/><text x="16.6815%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.05%)</title><rect x="16.4315%" y="981" width="0.0491%" height="15" fill="rgb(240,80,30)" fg:x="1339" fg:w="4"/><text x="16.6815%" y="991.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ticks_mut_ptr (1 samples, 0.01%)</title><rect x="16.5419%" y="981" width="0.0123%" height="15" fill="rgb(230,178,19)" fg:x="1348" fg:w="1"/><text x="16.7919%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="16.5419%" y="965" width="0.0123%" height="15" fill="rgb(210,190,27)" fg:x="1348" fg:w="1"/><text x="16.7919%" y="975.50"></text></g><g><title>bevy_ecs::archetype::Archetypes::resource (1 samples, 0.01%)</title><rect x="16.5542%" y="965" width="0.0123%" height="15" fill="rgb(222,107,31)" fg:x="1349" fg:w="1"/><text x="16.8042%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="16.5542%" y="949" width="0.0123%" height="15" fill="rgb(216,127,34)" fg:x="1349" fg:w="1"/><text x="16.8042%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="16.5542%" y="933" width="0.0123%" height="15" fill="rgb(234,116,52)" fg:x="1349" fg:w="1"/><text x="16.8042%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="16.5664%" y="933" width="0.0368%" height="15" fill="rgb(222,124,15)" fg:x="1350" fg:w="3"/><text x="16.8164%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (3 samples, 0.04%)</title><rect x="16.5664%" y="917" width="0.0368%" height="15" fill="rgb(231,179,28)" fg:x="1350" fg:w="3"/><text x="16.8164%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.04%)</title><rect x="16.5664%" y="901" width="0.0368%" height="15" fill="rgb(226,93,45)" fg:x="1350" fg:w="3"/><text x="16.8164%" y="911.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (4 samples, 0.05%)</title><rect x="16.5664%" y="965" width="0.0491%" height="15" fill="rgb(215,8,51)" fg:x="1350" fg:w="4"/><text x="16.8164%" y="975.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (4 samples, 0.05%)</title><rect x="16.5664%" y="949" width="0.0491%" height="15" fill="rgb(223,106,5)" fg:x="1350" fg:w="4"/><text x="16.8164%" y="959.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="16.6033%" y="933" width="0.0123%" height="15" fill="rgb(250,191,5)" fg:x="1353" fg:w="1"/><text x="16.8533%" y="943.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="16.6033%" y="917" width="0.0123%" height="15" fill="rgb(242,132,44)" fg:x="1353" fg:w="1"/><text x="16.8533%" y="927.50"></text></g><g><title>&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (16 samples, 0.20%)</title><rect x="16.5419%" y="1029" width="0.1963%" height="15" fill="rgb(251,152,29)" fg:x="1348" fg:w="16"/><text x="16.7919%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (16 samples, 0.20%)</title><rect x="16.5419%" y="1013" width="0.1963%" height="15" fill="rgb(218,179,5)" fg:x="1348" fg:w="16"/><text x="16.7919%" y="1023.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (16 samples, 0.20%)</title><rect x="16.5419%" y="997" width="0.1963%" height="15" fill="rgb(227,67,19)" fg:x="1348" fg:w="16"/><text x="16.7919%" y="1007.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (15 samples, 0.18%)</title><rect x="16.5542%" y="981" width="0.1841%" height="15" fill="rgb(233,119,31)" fg:x="1349" fg:w="15"/><text x="16.8042%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (10 samples, 0.12%)</title><rect x="16.6155%" y="965" width="0.1227%" height="15" fill="rgb(241,120,22)" fg:x="1354" fg:w="10"/><text x="16.8655%" y="975.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (10 samples, 0.12%)</title><rect x="16.6155%" y="949" width="0.1227%" height="15" fill="rgb(224,102,30)" fg:x="1354" fg:w="10"/><text x="16.8655%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (10 samples, 0.12%)</title><rect x="16.6155%" y="933" width="0.1227%" height="15" fill="rgb(210,164,37)" fg:x="1354" fg:w="10"/><text x="16.8655%" y="943.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (10 samples, 0.12%)</title><rect x="16.6155%" y="917" width="0.1227%" height="15" fill="rgb(226,191,16)" fg:x="1354" fg:w="10"/><text x="16.8655%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_audio::audio_source::AudioSource&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.8855%" y="965" width="0.0123%" height="15" fill="rgb(214,40,45)" fg:x="1376" fg:w="1"/><text x="17.1355%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.8855%" y="949" width="0.0123%" height="15" fill="rgb(244,29,26)" fg:x="1376" fg:w="1"/><text x="17.1355%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_gltf::Gltf&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="16.8978%" y="965" width="0.0245%" height="15" fill="rgb(216,16,5)" fg:x="1377" fg:w="2"/><text x="17.1478%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="16.8978%" y="949" width="0.0245%" height="15" fill="rgb(249,76,35)" fg:x="1377" fg:w="2"/><text x="17.1478%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_gltf::GltfMesh&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9223%" y="965" width="0.0123%" height="15" fill="rgb(207,11,44)" fg:x="1379" fg:w="1"/><text x="17.1723%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.9223%" y="949" width="0.0123%" height="15" fill="rgb(228,190,49)" fg:x="1379" fg:w="1"/><text x="17.1723%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9346%" y="965" width="0.0123%" height="15" fill="rgb(214,173,12)" fg:x="1380" fg:w="1"/><text x="17.1846%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.9346%" y="949" width="0.0123%" height="15" fill="rgb(218,26,35)" fg:x="1380" fg:w="1"/><text x="17.1846%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_scene::scene::Scene&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9469%" y="965" width="0.0123%" height="15" fill="rgb(220,200,19)" fg:x="1381" fg:w="1"/><text x="17.1969%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_scene::scene::Scene&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9469%" y="949" width="0.0123%" height="15" fill="rgb(239,95,49)" fg:x="1381" fg:w="1"/><text x="17.1969%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.9469%" y="933" width="0.0123%" height="15" fill="rgb(235,85,53)" fg:x="1381" fg:w="1"/><text x="17.1969%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="16.9469%" y="917" width="0.0123%" height="15" fill="rgb(233,133,31)" fg:x="1381" fg:w="1"/><text x="17.1969%" y="927.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update_system (19 samples, 0.23%)</title><rect x="16.7383%" y="997" width="0.2332%" height="15" fill="rgb(218,25,20)" fg:x="1364" fg:w="19"/><text x="16.9883%" y="1007.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update (19 samples, 0.23%)</title><rect x="16.7383%" y="981" width="0.2332%" height="15" fill="rgb(252,210,38)" fg:x="1364" fg:w="19"/><text x="16.9883%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_text::font_atlas_set::FontAtlasSet&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="16.9591%" y="965" width="0.0123%" height="15" fill="rgb(242,134,21)" fg:x="1382" fg:w="1"/><text x="17.2091%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="16.9591%" y="949" width="0.0123%" height="15" fill="rgb(213,28,48)" fg:x="1382" fg:w="1"/><text x="17.2091%" y="959.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (2 samples, 0.02%)</title><rect x="16.9714%" y="965" width="0.0245%" height="15" fill="rgb(250,196,2)" fg:x="1383" fg:w="2"/><text x="17.2214%" y="975.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.02%)</title><rect x="16.9960%" y="965" width="0.0245%" height="15" fill="rgb(227,5,17)" fg:x="1385" fg:w="2"/><text x="17.2460%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.02%)</title><rect x="16.9960%" y="949" width="0.0245%" height="15" fill="rgb(221,226,24)" fg:x="1385" fg:w="2"/><text x="17.2460%" y="959.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (2 samples, 0.02%)</title><rect x="16.9960%" y="933" width="0.0245%" height="15" fill="rgb(211,5,48)" fg:x="1385" fg:w="2"/><text x="17.2460%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="16.9960%" y="917" width="0.0245%" height="15" fill="rgb(219,150,6)" fg:x="1385" fg:w="2"/><text x="17.2460%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="16.9960%" y="901" width="0.0245%" height="15" fill="rgb(251,46,16)" fg:x="1385" fg:w="2"/><text x="17.2460%" y="911.50"></text></g><g><title>bevy_asset::asset_server::free_unused_assets_system (5 samples, 0.06%)</title><rect x="16.9714%" y="997" width="0.0614%" height="15" fill="rgb(220,204,40)" fg:x="1383" fg:w="5"/><text x="17.2214%" y="1007.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::free_unused_assets (5 samples, 0.06%)</title><rect x="16.9714%" y="981" width="0.0614%" height="15" fill="rgb(211,85,2)" fg:x="1383" fg:w="5"/><text x="17.2214%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="17.0205%" y="965" width="0.0123%" height="15" fill="rgb(229,17,7)" fg:x="1387" fg:w="1"/><text x="17.2705%" y="975.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="17.0205%" y="949" width="0.0123%" height="15" fill="rgb(239,72,28)" fg:x="1387" fg:w="1"/><text x="17.2705%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="17.0205%" y="933" width="0.0123%" height="15" fill="rgb(230,47,54)" fg:x="1387" fg:w="1"/><text x="17.2705%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="17.0205%" y="917" width="0.0123%" height="15" fill="rgb(214,50,8)" fg:x="1387" fg:w="1"/><text x="17.2705%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="17.0205%" y="901" width="0.0123%" height="15" fill="rgb(216,198,43)" fg:x="1387" fg:w="1"/><text x="17.2705%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="17.0205%" y="885" width="0.0123%" height="15" fill="rgb(234,20,35)" fg:x="1387" fg:w="1"/><text x="17.2705%" y="895.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.01%)</title><rect x="17.0205%" y="869" width="0.0123%" height="15" fill="rgb(254,45,19)" fg:x="1387" fg:w="1"/><text x="17.2705%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="17.0205%" y="853" width="0.0123%" height="15" fill="rgb(219,14,44)" fg:x="1387" fg:w="1"/><text x="17.2705%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="17.0205%" y="837" width="0.0123%" height="15" fill="rgb(217,220,26)" fg:x="1387" fg:w="1"/><text x="17.2705%" y="847.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="17.0205%" y="821" width="0.0123%" height="15" fill="rgb(213,158,28)" fg:x="1387" fg:w="1"/><text x="17.2705%" y="831.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="17.0205%" y="805" width="0.0123%" height="15" fill="rgb(252,51,52)" fg:x="1387" fg:w="1"/><text x="17.2705%" y="815.50"></text></g><g><title>&lt;dyn bevy_asset::io::AssetIo&gt;::downcast_ref (1 samples, 0.01%)</title><rect x="17.0328%" y="981" width="0.0123%" height="15" fill="rgb(246,89,16)" fg:x="1388" fg:w="1"/><text x="17.2828%" y="991.50"></text></g><g><title>&lt;T as downcast_rs::Downcast&gt;::as_any (1 samples, 0.01%)</title><rect x="17.0328%" y="965" width="0.0123%" height="15" fill="rgb(216,158,49)" fg:x="1388" fg:w="1"/><text x="17.2828%" y="975.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::get_fixed_seeds (1 samples, 0.01%)</title><rect x="17.0450%" y="901" width="0.0123%" height="15" fill="rgb(236,107,19)" fg:x="1389" fg:w="1"/><text x="17.2950%" y="911.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.01%)</title><rect x="17.0450%" y="885" width="0.0123%" height="15" fill="rgb(228,185,30)" fg:x="1389" fg:w="1"/><text x="17.2950%" y="895.50"></text></g><g><title>bevy_asset::io::file_asset_io::filesystem_watcher_system (3 samples, 0.04%)</title><rect x="17.0328%" y="997" width="0.0368%" height="15" fill="rgb(246,134,8)" fg:x="1388" fg:w="3"/><text x="17.2828%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="17.0450%" y="981" width="0.0245%" height="15" fill="rgb(214,143,50)" fg:x="1389" fg:w="2"/><text x="17.2950%" y="991.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="17.0450%" y="965" width="0.0245%" height="15" fill="rgb(228,75,8)" fg:x="1389" fg:w="2"/><text x="17.2950%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="17.0450%" y="949" width="0.0245%" height="15" fill="rgb(207,175,4)" fg:x="1389" fg:w="2"/><text x="17.2950%" y="959.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="17.0450%" y="933" width="0.0245%" height="15" fill="rgb(205,108,24)" fg:x="1389" fg:w="2"/><text x="17.2950%" y="943.50"></text></g><g><title>ahash::random_state::RandomState::new (2 samples, 0.02%)</title><rect x="17.0450%" y="917" width="0.0245%" height="15" fill="rgb(244,120,49)" fg:x="1389" fg:w="2"/><text x="17.2950%" y="927.50"></text></g><g><title>ahash::random_state::RandomState::get_src (1 samples, 0.01%)</title><rect x="17.0573%" y="901" width="0.0123%" height="15" fill="rgb(223,47,38)" fg:x="1390" fg:w="1"/><text x="17.3073%" y="911.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::convert::AsRef&lt;T&gt;&gt;::as_ref (1 samples, 0.01%)</title><rect x="17.0573%" y="885" width="0.0123%" height="15" fill="rgb(229,179,11)" fg:x="1390" fg:w="1"/><text x="17.3073%" y="895.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="17.0696%" y="981" width="0.0245%" height="15" fill="rgb(231,122,1)" fg:x="1391" fg:w="2"/><text x="17.3196%" y="991.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="17.0819%" y="965" width="0.0123%" height="15" fill="rgb(245,119,9)" fg:x="1392" fg:w="1"/><text x="17.3319%" y="975.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (1 samples, 0.01%)</title><rect x="17.0819%" y="949" width="0.0123%" height="15" fill="rgb(241,163,25)" fg:x="1392" fg:w="1"/><text x="17.3319%" y="959.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="17.0819%" y="933" width="0.0123%" height="15" fill="rgb(217,214,3)" fg:x="1392" fg:w="1"/><text x="17.3319%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="17.0819%" y="917" width="0.0123%" height="15" fill="rgb(240,86,28)" fg:x="1392" fg:w="1"/><text x="17.3319%" y="927.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="17.0819%" y="901" width="0.0123%" height="15" fill="rgb(215,47,9)" fg:x="1392" fg:w="1"/><text x="17.3319%" y="911.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="17.0819%" y="885" width="0.0123%" height="15" fill="rgb(252,25,45)" fg:x="1392" fg:w="1"/><text x="17.3319%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; (2 samples, 0.02%)</title><rect x="17.2537%" y="901" width="0.0245%" height="15" fill="rgb(251,164,9)" fg:x="1406" fg:w="2"/><text x="17.5037%" y="911.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="17.2537%" y="885" width="0.0245%" height="15" fill="rgb(233,194,0)" fg:x="1406" fg:w="2"/><text x="17.5037%" y="895.50"></text></g><g><title>bevy_render::draw::clear_draw_system (23 samples, 0.28%)</title><rect x="17.0696%" y="997" width="0.2822%" height="15" fill="rgb(249,111,24)" fg:x="1391" fg:w="23"/><text x="17.3196%" y="1007.50"></text></g><g><title>bevy_render::draw::Draw::clear_render_commands (21 samples, 0.26%)</title><rect x="17.0941%" y="981" width="0.2577%" height="15" fill="rgb(250,223,3)" fg:x="1393" fg:w="21"/><text x="17.3441%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (21 samples, 0.26%)</title><rect x="17.0941%" y="965" width="0.2577%" height="15" fill="rgb(236,178,37)" fg:x="1393" fg:w="21"/><text x="17.3441%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (21 samples, 0.26%)</title><rect x="17.0941%" y="949" width="0.2577%" height="15" fill="rgb(241,158,50)" fg:x="1393" fg:w="21"/><text x="17.3441%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::draw::RenderCommand]&gt; (21 samples, 0.26%)</title><rect x="17.0941%" y="933" width="0.2577%" height="15" fill="rgb(213,121,41)" fg:x="1393" fg:w="21"/><text x="17.3441%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::draw::RenderCommand&gt; (21 samples, 0.26%)</title><rect x="17.0941%" y="917" width="0.2577%" height="15" fill="rgb(240,92,3)" fg:x="1393" fg:w="21"/><text x="17.3441%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (6 samples, 0.07%)</title><rect x="17.2782%" y="901" width="0.0736%" height="15" fill="rgb(205,123,3)" fg:x="1408" fg:w="6"/><text x="17.5282%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (6 samples, 0.07%)</title><rect x="17.2782%" y="885" width="0.0736%" height="15" fill="rgb(205,97,47)" fg:x="1408" fg:w="6"/><text x="17.5282%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="17.2782%" y="869" width="0.0736%" height="15" fill="rgb(247,152,14)" fg:x="1408" fg:w="6"/><text x="17.5282%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.07%)</title><rect x="17.2782%" y="853" width="0.0736%" height="15" fill="rgb(248,195,53)" fg:x="1408" fg:w="6"/><text x="17.5282%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.07%)</title><rect x="17.2782%" y="837" width="0.0736%" height="15" fill="rgb(226,201,16)" fg:x="1408" fg:w="6"/><text x="17.5282%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.02%)</title><rect x="17.3764%" y="981" width="0.0245%" height="15" fill="rgb(205,98,0)" fg:x="1416" fg:w="2"/><text x="17.6264%" y="991.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="17.4009%" y="981" width="0.0245%" height="15" fill="rgb(214,191,48)" fg:x="1418" fg:w="2"/><text x="17.6509%" y="991.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (2 samples, 0.02%)</title><rect x="17.4009%" y="965" width="0.0245%" height="15" fill="rgb(237,112,39)" fg:x="1418" fg:w="2"/><text x="17.6509%" y="975.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (2 samples, 0.02%)</title><rect x="17.4009%" y="949" width="0.0245%" height="15" fill="rgb(247,203,27)" fg:x="1418" fg:w="2"/><text x="17.6509%" y="959.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (2 samples, 0.02%)</title><rect x="17.4009%" y="933" width="0.0245%" height="15" fill="rgb(235,124,28)" fg:x="1418" fg:w="2"/><text x="17.6509%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (2 samples, 0.02%)</title><rect x="17.4009%" y="917" width="0.0245%" height="15" fill="rgb(208,207,46)" fg:x="1418" fg:w="2"/><text x="17.6509%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="17.4009%" y="901" width="0.0245%" height="15" fill="rgb(234,176,4)" fg:x="1418" fg:w="2"/><text x="17.6509%" y="911.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (2 samples, 0.02%)</title><rect x="17.4009%" y="885" width="0.0245%" height="15" fill="rgb(230,133,28)" fg:x="1418" fg:w="2"/><text x="17.6509%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="17.4009%" y="869" width="0.0245%" height="15" fill="rgb(211,137,40)" fg:x="1418" fg:w="2"/><text x="17.6509%" y="879.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (19 samples, 0.23%)</title><rect x="17.3518%" y="997" width="0.2332%" height="15" fill="rgb(254,35,13)" fg:x="1414" fg:w="19"/><text x="17.6018%" y="1007.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (13 samples, 0.16%)</title><rect x="17.4255%" y="981" width="0.1595%" height="15" fill="rgb(225,49,51)" fg:x="1420" fg:w="13"/><text x="17.6755%" y="991.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (13 samples, 0.16%)</title><rect x="17.4255%" y="965" width="0.1595%" height="15" fill="rgb(251,10,15)" fg:x="1420" fg:w="13"/><text x="17.6755%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (13 samples, 0.16%)</title><rect x="17.4255%" y="949" width="0.1595%" height="15" fill="rgb(228,207,15)" fg:x="1420" fg:w="13"/><text x="17.6755%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (13 samples, 0.16%)</title><rect x="17.4255%" y="933" width="0.1595%" height="15" fill="rgb(241,99,19)" fg:x="1420" fg:w="13"/><text x="17.6755%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (13 samples, 0.16%)</title><rect x="17.4255%" y="917" width="0.1595%" height="15" fill="rgb(207,104,49)" fg:x="1420" fg:w="13"/><text x="17.6755%" y="927.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (2 samples, 0.02%)</title><rect x="17.6341%" y="949" width="0.0245%" height="15" fill="rgb(234,99,18)" fg:x="1437" fg:w="2"/><text x="17.8841%" y="959.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (2 samples, 0.02%)</title><rect x="17.6341%" y="933" width="0.0245%" height="15" fill="rgb(213,191,49)" fg:x="1437" fg:w="2"/><text x="17.8841%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="17.6463%" y="917" width="0.0123%" height="15" fill="rgb(210,226,19)" fg:x="1438" fg:w="1"/><text x="17.8963%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="17.6463%" y="901" width="0.0123%" height="15" fill="rgb(229,97,18)" fg:x="1438" fg:w="1"/><text x="17.8963%" y="911.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (2 samples, 0.02%)</title><rect x="17.6586%" y="917" width="0.0245%" height="15" fill="rgb(211,167,15)" fg:x="1439" fg:w="2"/><text x="17.9086%" y="927.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.09%)</title><rect x="17.6095%" y="981" width="0.0859%" height="15" fill="rgb(210,169,34)" fg:x="1435" fg:w="7"/><text x="17.8595%" y="991.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.09%)</title><rect x="17.6095%" y="965" width="0.0859%" height="15" fill="rgb(241,121,31)" fg:x="1435" fg:w="7"/><text x="17.8595%" y="975.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (3 samples, 0.04%)</title><rect x="17.6586%" y="949" width="0.0368%" height="15" fill="rgb(232,40,11)" fg:x="1439" fg:w="3"/><text x="17.9086%" y="959.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (3 samples, 0.04%)</title><rect x="17.6586%" y="933" width="0.0368%" height="15" fill="rgb(205,86,26)" fg:x="1439" fg:w="3"/><text x="17.9086%" y="943.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (1 samples, 0.01%)</title><rect x="17.6832%" y="917" width="0.0123%" height="15" fill="rgb(231,126,28)" fg:x="1441" fg:w="1"/><text x="17.9332%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="17.6832%" y="901" width="0.0123%" height="15" fill="rgb(219,221,18)" fg:x="1441" fg:w="1"/><text x="17.9332%" y="911.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="17.6832%" y="885" width="0.0123%" height="15" fill="rgb(211,40,0)" fg:x="1441" fg:w="1"/><text x="17.9332%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="17.6832%" y="869" width="0.0123%" height="15" fill="rgb(239,85,43)" fg:x="1441" fg:w="1"/><text x="17.9332%" y="879.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="17.6832%" y="853" width="0.0123%" height="15" fill="rgb(231,55,21)" fg:x="1441" fg:w="1"/><text x="17.9332%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="17.6832%" y="837" width="0.0123%" height="15" fill="rgb(225,184,43)" fg:x="1441" fg:w="1"/><text x="17.9332%" y="847.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (2 samples, 0.02%)</title><rect x="17.6954%" y="981" width="0.0245%" height="15" fill="rgb(251,158,41)" fg:x="1442" fg:w="2"/><text x="17.9454%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (2 samples, 0.02%)</title><rect x="17.6954%" y="965" width="0.0245%" height="15" fill="rgb(234,159,37)" fg:x="1442" fg:w="2"/><text x="17.9454%" y="975.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (2 samples, 0.02%)</title><rect x="17.6954%" y="949" width="0.0245%" height="15" fill="rgb(216,204,22)" fg:x="1442" fg:w="2"/><text x="17.9454%" y="959.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="17.7077%" y="933" width="0.0123%" height="15" fill="rgb(214,17,3)" fg:x="1443" fg:w="1"/><text x="17.9577%" y="943.50"></text></g><g><title>&lt;bevy_ecs::query::filter::WithoutFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="17.7077%" y="917" width="0.0123%" height="15" fill="rgb(212,111,17)" fg:x="1443" fg:w="1"/><text x="17.9577%" y="927.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (98 samples, 1.20%)</title><rect x="16.5419%" y="1045" width="1.2026%" height="15" fill="rgb(221,157,24)" fg:x="1348" fg:w="98"/><text x="16.7919%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (82 samples, 1.01%)</title><rect x="16.7383%" y="1029" width="1.0063%" height="15" fill="rgb(252,16,13)" fg:x="1364" fg:w="82"/><text x="16.9883%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (82 samples, 1.01%)</title><rect x="16.7383%" y="1013" width="1.0063%" height="15" fill="rgb(221,62,2)" fg:x="1364" fg:w="82"/><text x="16.9883%" y="1023.50"></text></g><g><title>engine::engine::render::animate_sprite_system (13 samples, 0.16%)</title><rect x="17.5850%" y="997" width="0.1595%" height="15" fill="rgb(247,87,22)" fg:x="1433" fg:w="13"/><text x="17.8350%" y="1007.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::mul_add (2 samples, 0.02%)</title><rect x="17.7200%" y="981" width="0.0245%" height="15" fill="rgb(215,73,9)" fg:x="1444" fg:w="2"/><text x="17.9700%" y="991.50"></text></g><g><title>[libm-2.33.so] (2 samples, 0.02%)</title><rect x="17.7200%" y="965" width="0.0245%" height="15" fill="rgb(207,175,33)" fg:x="1444" fg:w="2"/><text x="17.9700%" y="975.50"></text></g><g><title>&lt;bevy_app::event::EventWriterState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_app::event::Events&lt;T&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,),T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="17.7568%" y="1013" width="0.0123%" height="15" fill="rgb(243,129,54)" fg:x="1447" fg:w="1"/><text x="18.0068%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="17.7568%" y="997" width="0.0123%" height="15" fill="rgb(227,119,45)" fg:x="1447" fg:w="1"/><text x="18.0068%" y="1007.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="17.7568%" y="981" width="0.0123%" height="15" fill="rgb(205,109,36)" fg:x="1447" fg:w="1"/><text x="18.0068%" y="991.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ticks_mut_ptr (1 samples, 0.01%)</title><rect x="17.7568%" y="965" width="0.0123%" height="15" fill="rgb(205,6,39)" fg:x="1447" fg:w="1"/><text x="18.0068%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="17.7568%" y="949" width="0.0123%" height="15" fill="rgb(221,32,16)" fg:x="1447" fg:w="1"/><text x="18.0068%" y="959.50"></text></g><g><title>bevy_ecs::archetype::Archetypes::resource (1 samples, 0.01%)</title><rect x="17.7691%" y="965" width="0.0123%" height="15" fill="rgb(228,144,50)" fg:x="1448" fg:w="1"/><text x="18.0191%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="17.7691%" y="949" width="0.0123%" height="15" fill="rgb(229,201,53)" fg:x="1448" fg:w="1"/><text x="18.0191%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="17.7691%" y="933" width="0.0123%" height="15" fill="rgb(249,153,27)" fg:x="1448" fg:w="1"/><text x="18.0191%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (4 samples, 0.05%)</title><rect x="17.7813%" y="965" width="0.0491%" height="15" fill="rgb(227,106,25)" fg:x="1449" fg:w="4"/><text x="18.0313%" y="975.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (4 samples, 0.05%)</title><rect x="17.7813%" y="949" width="0.0491%" height="15" fill="rgb(230,65,29)" fg:x="1449" fg:w="4"/><text x="18.0313%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.05%)</title><rect x="17.7813%" y="933" width="0.0491%" height="15" fill="rgb(221,57,46)" fg:x="1449" fg:w="4"/><text x="18.0313%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (4 samples, 0.05%)</title><rect x="17.7813%" y="917" width="0.0491%" height="15" fill="rgb(229,161,17)" fg:x="1449" fg:w="4"/><text x="18.0313%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (4 samples, 0.05%)</title><rect x="17.7813%" y="901" width="0.0491%" height="15" fill="rgb(222,213,11)" fg:x="1449" fg:w="4"/><text x="18.0313%" y="911.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (10 samples, 0.12%)</title><rect x="17.7691%" y="1013" width="0.1227%" height="15" fill="rgb(235,35,13)" fg:x="1448" fg:w="10"/><text x="18.0191%" y="1023.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (10 samples, 0.12%)</title><rect x="17.7691%" y="997" width="0.1227%" height="15" fill="rgb(233,158,34)" fg:x="1448" fg:w="10"/><text x="18.0191%" y="1007.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (10 samples, 0.12%)</title><rect x="17.7691%" y="981" width="0.1227%" height="15" fill="rgb(215,151,48)" fg:x="1448" fg:w="10"/><text x="18.0191%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (5 samples, 0.06%)</title><rect x="17.8304%" y="965" width="0.0614%" height="15" fill="rgb(229,84,14)" fg:x="1453" fg:w="5"/><text x="18.0804%" y="975.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (5 samples, 0.06%)</title><rect x="17.8304%" y="949" width="0.0614%" height="15" fill="rgb(229,68,14)" fg:x="1453" fg:w="5"/><text x="18.0804%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (5 samples, 0.06%)</title><rect x="17.8304%" y="933" width="0.0614%" height="15" fill="rgb(243,106,26)" fg:x="1453" fg:w="5"/><text x="18.0804%" y="943.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (5 samples, 0.06%)</title><rect x="17.8304%" y="917" width="0.0614%" height="15" fill="rgb(206,45,38)" fg:x="1453" fg:w="5"/><text x="18.0804%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="17.8918%" y="981" width="0.0123%" height="15" fill="rgb(226,6,15)" fg:x="1458" fg:w="1"/><text x="18.1418%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="17.8918%" y="965" width="0.0123%" height="15" fill="rgb(232,22,54)" fg:x="1458" fg:w="1"/><text x="18.1418%" y="975.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (14 samples, 0.17%)</title><rect x="17.7445%" y="1029" width="0.1718%" height="15" fill="rgb(229,222,32)" fg:x="1446" fg:w="14"/><text x="17.9945%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="17.8918%" y="1013" width="0.0245%" height="15" fill="rgb(228,62,29)" fg:x="1458" fg:w="2"/><text x="18.1418%" y="1023.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (2 samples, 0.02%)</title><rect x="17.8918%" y="997" width="0.0245%" height="15" fill="rgb(251,103,34)" fg:x="1458" fg:w="2"/><text x="18.1418%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="17.9040%" y="981" width="0.0123%" height="15" fill="rgb(233,12,30)" fg:x="1459" fg:w="1"/><text x="18.1540%" y="991.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="17.9040%" y="965" width="0.0123%" height="15" fill="rgb(238,52,0)" fg:x="1459" fg:w="1"/><text x="18.1540%" y="975.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="17.9040%" y="949" width="0.0123%" height="15" fill="rgb(223,98,5)" fg:x="1459" fg:w="1"/><text x="18.1540%" y="959.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (1 samples, 0.01%)</title><rect x="17.9040%" y="933" width="0.0123%" height="15" fill="rgb(228,75,37)" fg:x="1459" fg:w="1"/><text x="18.1540%" y="943.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMut&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="17.9163%" y="981" width="0.0123%" height="15" fill="rgb(205,115,49)" fg:x="1460" fg:w="1"/><text x="18.1663%" y="991.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::set_changed (1 samples, 0.01%)</title><rect x="17.9163%" y="965" width="0.0123%" height="15" fill="rgb(250,154,43)" fg:x="1460" fg:w="1"/><text x="18.1663%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="17.9286%" y="933" width="0.0123%" height="15" fill="rgb(226,43,29)" fg:x="1461" fg:w="1"/><text x="18.1786%" y="943.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="17.9286%" y="917" width="0.0123%" height="15" fill="rgb(249,228,39)" fg:x="1461" fg:w="1"/><text x="18.1786%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="17.9286%" y="901" width="0.0123%" height="15" fill="rgb(216,79,43)" fg:x="1461" fg:w="1"/><text x="18.1786%" y="911.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.01%)</title><rect x="17.9286%" y="885" width="0.0123%" height="15" fill="rgb(228,95,12)" fg:x="1461" fg:w="1"/><text x="18.1786%" y="895.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="17.9286%" y="869" width="0.0123%" height="15" fill="rgb(249,221,15)" fg:x="1461" fg:w="1"/><text x="18.1786%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_pbr::material::StandardMaterial&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_pbr::material::StandardMaterial&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9409%" y="933" width="0.0123%" height="15" fill="rgb(233,34,13)" fg:x="1462" fg:w="1"/><text x="18.1909%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_pbr::material::StandardMaterial&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_pbr::material::StandardMaterial&gt;&gt;::drain::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9409%" y="917" width="0.0123%" height="15" fill="rgb(214,103,39)" fg:x="1462" fg:w="1"/><text x="18.1909%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_pbr::material::StandardMaterial&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9409%" y="901" width="0.0123%" height="15" fill="rgb(251,126,39)" fg:x="1462" fg:w="1"/><text x="18.1909%" y="911.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.9409%" y="885" width="0.0123%" height="15" fill="rgb(214,216,36)" fg:x="1462" fg:w="1"/><text x="18.1909%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_pbr::material::StandardMaterial&gt;&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9409%" y="869" width="0.0123%" height="15" fill="rgb(220,221,8)" fg:x="1462" fg:w="1"/><text x="18.1909%" y="879.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.9409%" y="853" width="0.0123%" height="15" fill="rgb(240,216,3)" fg:x="1462" fg:w="1"/><text x="18.1909%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9531%" y="933" width="0.0123%" height="15" fill="rgb(232,218,17)" fg:x="1463" fg:w="1"/><text x="18.2031%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;::drain::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9531%" y="917" width="0.0123%" height="15" fill="rgb(229,163,45)" fg:x="1463" fg:w="1"/><text x="18.2031%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9531%" y="901" width="0.0123%" height="15" fill="rgb(231,110,42)" fg:x="1463" fg:w="1"/><text x="18.2031%" y="911.50"></text></g><g><title>[engine] (1 samples, 0.01%)</title><rect x="17.9531%" y="885" width="0.0123%" height="15" fill="rgb(208,170,48)" fg:x="1463" fg:w="1"/><text x="18.2031%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.9531%" y="869" width="0.0123%" height="15" fill="rgb(239,116,25)" fg:x="1463" fg:w="1"/><text x="18.2031%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="17.9286%" y="949" width="0.0491%" height="15" fill="rgb(219,200,50)" fg:x="1461" fg:w="4"/><text x="18.1786%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9654%" y="933" width="0.0123%" height="15" fill="rgb(245,200,0)" fg:x="1464" fg:w="1"/><text x="18.2154%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;::drain::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9654%" y="917" width="0.0123%" height="15" fill="rgb(245,119,33)" fg:x="1464" fg:w="1"/><text x="18.2154%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9654%" y="901" width="0.0123%" height="15" fill="rgb(231,125,12)" fg:x="1464" fg:w="1"/><text x="18.2154%" y="911.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.9654%" y="885" width="0.0123%" height="15" fill="rgb(216,96,41)" fg:x="1464" fg:w="1"/><text x="18.2154%" y="895.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::send (1 samples, 0.01%)</title><rect x="17.9777%" y="949" width="0.0123%" height="15" fill="rgb(248,43,45)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="17.9777%" y="933" width="0.0123%" height="15" fill="rgb(217,222,7)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="17.9777%" y="917" width="0.0123%" height="15" fill="rgb(233,28,6)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="17.9777%" y="901" width="0.0123%" height="15" fill="rgb(231,218,15)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="17.9777%" y="885" width="0.0123%" height="15" fill="rgb(226,171,48)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="17.9777%" y="869" width="0.0123%" height="15" fill="rgb(235,201,9)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="17.9777%" y="853" width="0.0123%" height="15" fill="rgb(217,80,15)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="17.9777%" y="837" width="0.0123%" height="15" fill="rgb(219,152,8)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="17.9777%" y="821" width="0.0123%" height="15" fill="rgb(243,107,38)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="831.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="17.9777%" y="805" width="0.0123%" height="15" fill="rgb(231,17,5)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="815.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="17.9777%" y="789" width="0.0123%" height="15" fill="rgb(209,25,54)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="17.9777%" y="773" width="0.0123%" height="15" fill="rgb(219,0,2)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="17.9777%" y="757" width="0.0123%" height="15" fill="rgb(246,9,5)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="17.9777%" y="741" width="0.0123%" height="15" fill="rgb(226,159,4)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="751.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="17.9777%" y="725" width="0.0123%" height="15" fill="rgb(219,175,34)" fg:x="1465" fg:w="1"/><text x="18.2277%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::shader::shader::Shader&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::shader::shader::Shader&gt;&gt;::drain::{{closure}}&gt;,core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::shader::shader::Shader&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::shader::shader::Shader&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9899%" y="949" width="0.0123%" height="15" fill="rgb(236,10,46)" fg:x="1466" fg:w="1"/><text x="18.2399%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::shader::shader::Shader&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::shader::shader::Shader&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9899%" y="933" width="0.0123%" height="15" fill="rgb(240,211,16)" fg:x="1466" fg:w="1"/><text x="18.2399%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::shader::shader::Shader&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::shader::shader::Shader&gt;&gt;::drain::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9899%" y="917" width="0.0123%" height="15" fill="rgb(205,3,43)" fg:x="1466" fg:w="1"/><text x="18.2399%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::shader::shader::Shader&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.9899%" y="901" width="0.0123%" height="15" fill="rgb(245,7,22)" fg:x="1466" fg:w="1"/><text x="18.2399%" y="911.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.9899%" y="885" width="0.0123%" height="15" fill="rgb(239,132,32)" fg:x="1466" fg:w="1"/><text x="18.2399%" y="895.50"></text></g><g><title>bevy_app::event::EventWriter&lt;T&gt;::send_batch (7 samples, 0.09%)</title><rect x="17.9286%" y="981" width="0.0859%" height="15" fill="rgb(228,202,34)" fg:x="1461" fg:w="7"/><text x="18.1786%" y="991.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::extend (7 samples, 0.09%)</title><rect x="17.9286%" y="965" width="0.0859%" height="15" fill="rgb(254,200,22)" fg:x="1461" fg:w="7"/><text x="18.1786%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_text::font_atlas_set::FontAtlasSet&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_text::font_atlas_set::FontAtlasSet&gt;&gt;::drain::{{closure}}&gt;,core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_text::font_atlas_set::FontAtlasSet&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_text::font_atlas_set::FontAtlasSet&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="18.0022%" y="949" width="0.0123%" height="15" fill="rgb(219,10,39)" fg:x="1467" fg:w="1"/><text x="18.2522%" y="959.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::asset_event_system (15 samples, 0.18%)</title><rect x="17.9163%" y="997" width="0.1841%" height="15" fill="rgb(226,210,39)" fg:x="1460" fg:w="15"/><text x="18.1663%" y="1007.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::drain (7 samples, 0.09%)</title><rect x="18.0145%" y="981" width="0.0859%" height="15" fill="rgb(208,219,16)" fg:x="1468" fg:w="7"/><text x="18.2645%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.01%)</title><rect x="18.0881%" y="965" width="0.0123%" height="15" fill="rgb(216,158,51)" fg:x="1474" fg:w="1"/><text x="18.3381%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="18.0881%" y="949" width="0.0123%" height="15" fill="rgb(233,14,44)" fg:x="1474" fg:w="1"/><text x="18.3381%" y="959.50"></text></g><g><title>&lt;T as downcast_rs::Downcast&gt;::as_any (6 samples, 0.07%)</title><rect x="18.2354%" y="949" width="0.0736%" height="15" fill="rgb(237,97,39)" fg:x="1486" fg:w="6"/><text x="18.4854%" y="959.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (7 samples, 0.09%)</title><rect x="18.2354%" y="965" width="0.0859%" height="15" fill="rgb(218,198,43)" fg:x="1486" fg:w="7"/><text x="18.4854%" y="975.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (1 samples, 0.01%)</title><rect x="18.3090%" y="949" width="0.0123%" height="15" fill="rgb(231,104,20)" fg:x="1492" fg:w="1"/><text x="18.5590%" y="959.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (1 samples, 0.01%)</title><rect x="18.3090%" y="933" width="0.0123%" height="15" fill="rgb(254,36,13)" fg:x="1492" fg:w="1"/><text x="18.5590%" y="943.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (1 samples, 0.01%)</title><rect x="18.3090%" y="917" width="0.0123%" height="15" fill="rgb(248,14,50)" fg:x="1492" fg:w="1"/><text x="18.5590%" y="927.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="18.4440%" y="949" width="0.0245%" height="15" fill="rgb(217,107,29)" fg:x="1503" fg:w="2"/><text x="18.6940%" y="959.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (2 samples, 0.02%)</title><rect x="18.4440%" y="933" width="0.0245%" height="15" fill="rgb(251,169,33)" fg:x="1503" fg:w="2"/><text x="18.6940%" y="943.50"></text></g><g><title>&lt;crossbeam_channel::select::Token as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="18.4685%" y="933" width="0.0245%" height="15" fill="rgb(217,108,32)" fg:x="1505" fg:w="2"/><text x="18.7185%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="18.5176%" y="917" width="0.0491%" height="15" fill="rgb(219,66,42)" fg:x="1509" fg:w="4"/><text x="18.7676%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="18.5176%" y="901" width="0.0491%" height="15" fill="rgb(206,180,7)" fg:x="1509" fg:w="4"/><text x="18.7676%" y="911.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (21 samples, 0.26%)</title><rect x="18.3213%" y="965" width="0.2577%" height="15" fill="rgb(208,226,31)" fg:x="1493" fg:w="21"/><text x="18.5713%" y="975.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (9 samples, 0.11%)</title><rect x="18.4685%" y="949" width="0.1104%" height="15" fill="rgb(218,26,49)" fg:x="1505" fg:w="9"/><text x="18.7185%" y="959.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (7 samples, 0.09%)</title><rect x="18.4931%" y="933" width="0.0859%" height="15" fill="rgb(233,197,48)" fg:x="1507" fg:w="7"/><text x="18.7431%" y="943.50"></text></g><g><title>core::sync::atomic::fence (1 samples, 0.01%)</title><rect x="18.5667%" y="917" width="0.0123%" height="15" fill="rgb(252,181,51)" fg:x="1513" fg:w="1"/><text x="18.8167%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="18.5912%" y="917" width="0.0245%" height="15" fill="rgb(253,90,19)" fg:x="1515" fg:w="2"/><text x="18.8412%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="18.5912%" y="901" width="0.0245%" height="15" fill="rgb(215,171,30)" fg:x="1515" fg:w="2"/><text x="18.8412%" y="911.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (7 samples, 0.09%)</title><rect x="18.5790%" y="965" width="0.0859%" height="15" fill="rgb(214,222,9)" fg:x="1514" fg:w="7"/><text x="18.8290%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (7 samples, 0.09%)</title><rect x="18.5790%" y="949" width="0.0859%" height="15" fill="rgb(223,3,22)" fg:x="1514" fg:w="7"/><text x="18.8290%" y="959.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (6 samples, 0.07%)</title><rect x="18.5912%" y="933" width="0.0736%" height="15" fill="rgb(225,196,46)" fg:x="1515" fg:w="6"/><text x="18.8412%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="18.6158%" y="917" width="0.0491%" height="15" fill="rgb(209,110,37)" fg:x="1517" fg:w="4"/><text x="18.8658%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="18.6158%" y="901" width="0.0491%" height="15" fill="rgb(249,89,12)" fg:x="1517" fg:w="4"/><text x="18.8658%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="18.6649%" y="917" width="0.0123%" height="15" fill="rgb(226,27,33)" fg:x="1521" fg:w="1"/><text x="18.9149%" y="927.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="18.6649%" y="901" width="0.0123%" height="15" fill="rgb(213,82,22)" fg:x="1521" fg:w="1"/><text x="18.9149%" y="911.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="18.6649%" y="885" width="0.0123%" height="15" fill="rgb(248,140,0)" fg:x="1521" fg:w="1"/><text x="18.9149%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="18.6649%" y="869" width="0.0123%" height="15" fill="rgb(228,106,3)" fg:x="1521" fg:w="1"/><text x="18.9149%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="18.6649%" y="853" width="0.0123%" height="15" fill="rgb(209,23,37)" fg:x="1521" fg:w="1"/><text x="18.9149%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="18.6649%" y="837" width="0.0123%" height="15" fill="rgb(241,93,50)" fg:x="1521" fg:w="1"/><text x="18.9149%" y="847.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="18.6649%" y="821" width="0.0123%" height="15" fill="rgb(253,46,43)" fg:x="1521" fg:w="1"/><text x="18.9149%" y="831.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.05%)</title><rect x="18.6771%" y="885" width="0.0491%" height="15" fill="rgb(226,206,43)" fg:x="1522" fg:w="4"/><text x="18.9271%" y="895.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (4 samples, 0.05%)</title><rect x="18.6771%" y="869" width="0.0491%" height="15" fill="rgb(217,54,7)" fg:x="1522" fg:w="4"/><text x="18.9271%" y="879.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (4 samples, 0.05%)</title><rect x="18.6771%" y="853" width="0.0491%" height="15" fill="rgb(223,5,52)" fg:x="1522" fg:w="4"/><text x="18.9271%" y="863.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (4 samples, 0.05%)</title><rect x="18.6771%" y="837" width="0.0491%" height="15" fill="rgb(206,52,46)" fg:x="1522" fg:w="4"/><text x="18.9271%" y="847.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (52 samples, 0.64%)</title><rect x="18.1004%" y="997" width="0.6381%" height="15" fill="rgb(253,136,11)" fg:x="1475" fg:w="52"/><text x="18.3504%" y="1007.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (52 samples, 0.64%)</title><rect x="18.1004%" y="981" width="0.6381%" height="15" fill="rgb(208,106,33)" fg:x="1475" fg:w="52"/><text x="18.3504%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.07%)</title><rect x="18.6649%" y="965" width="0.0736%" height="15" fill="rgb(206,54,4)" fg:x="1521" fg:w="6"/><text x="18.9149%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.07%)</title><rect x="18.6649%" y="949" width="0.0736%" height="15" fill="rgb(213,3,15)" fg:x="1521" fg:w="6"/><text x="18.9149%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.07%)</title><rect x="18.6649%" y="933" width="0.0736%" height="15" fill="rgb(252,211,39)" fg:x="1521" fg:w="6"/><text x="18.9149%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.06%)</title><rect x="18.6771%" y="917" width="0.0614%" height="15" fill="rgb(223,6,36)" fg:x="1522" fg:w="5"/><text x="18.9271%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.06%)</title><rect x="18.6771%" y="901" width="0.0614%" height="15" fill="rgb(252,169,45)" fg:x="1522" fg:w="5"/><text x="18.9271%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="18.7262%" y="885" width="0.0123%" height="15" fill="rgb(212,48,26)" fg:x="1526" fg:w="1"/><text x="18.9762%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="18.7262%" y="869" width="0.0123%" height="15" fill="rgb(251,102,48)" fg:x="1526" fg:w="1"/><text x="18.9762%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="18.7262%" y="853" width="0.0123%" height="15" fill="rgb(243,208,16)" fg:x="1526" fg:w="1"/><text x="18.9762%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="18.7385%" y="949" width="0.0245%" height="15" fill="rgb(219,96,24)" fg:x="1527" fg:w="2"/><text x="18.9885%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="18.7385%" y="933" width="0.0245%" height="15" fill="rgb(219,33,29)" fg:x="1527" fg:w="2"/><text x="18.9885%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="18.7385%" y="917" width="0.0245%" height="15" fill="rgb(223,176,5)" fg:x="1527" fg:w="2"/><text x="18.9885%" y="927.50"></text></g><g><title>&lt;egui::context::Context as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="18.7385%" y="965" width="0.0368%" height="15" fill="rgb(228,140,14)" fg:x="1527" fg:w="3"/><text x="18.9885%" y="975.50"></text></g><g><title>&lt;egui::input_state::InputState as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="18.7630%" y="949" width="0.0123%" height="15" fill="rgb(217,179,31)" fg:x="1529" fg:w="1"/><text x="19.0130%" y="959.50"></text></g><g><title>&lt;egui::input_state::PointerState as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="18.7630%" y="933" width="0.0123%" height="15" fill="rgb(230,9,30)" fg:x="1529" fg:w="1"/><text x="19.0130%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="18.7630%" y="917" width="0.0123%" height="15" fill="rgb(230,136,20)" fg:x="1529" fg:w="1"/><text x="19.0130%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="18.7630%" y="901" width="0.0123%" height="15" fill="rgb(215,210,22)" fg:x="1529" fg:w="1"/><text x="19.0130%" y="911.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="18.7630%" y="885" width="0.0123%" height="15" fill="rgb(218,43,5)" fg:x="1529" fg:w="1"/><text x="19.0130%" y="895.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="18.7630%" y="869" width="0.0123%" height="15" fill="rgb(216,11,5)" fg:x="1529" fg:w="1"/><text x="19.0130%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="18.7630%" y="853" width="0.0123%" height="15" fill="rgb(209,82,29)" fg:x="1529" fg:w="1"/><text x="19.0130%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="18.7630%" y="837" width="0.0123%" height="15" fill="rgb(244,115,12)" fg:x="1529" fg:w="1"/><text x="19.0130%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="18.7630%" y="821" width="0.0123%" height="15" fill="rgb(222,82,18)" fg:x="1529" fg:w="1"/><text x="19.0130%" y="831.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="18.7630%" y="805" width="0.0123%" height="15" fill="rgb(249,227,8)" fg:x="1529" fg:w="1"/><text x="19.0130%" y="815.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="18.7630%" y="789" width="0.0123%" height="15" fill="rgb(253,141,45)" fg:x="1529" fg:w="1"/><text x="19.0130%" y="799.50"></text></g><g><title>core::mem::take (1 samples, 0.01%)</title><rect x="18.7753%" y="949" width="0.0123%" height="15" fill="rgb(234,184,4)" fg:x="1530" fg:w="1"/><text x="19.0253%" y="959.50"></text></g><g><title>&lt;egui::input_state::InputState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="18.7753%" y="933" width="0.0123%" height="15" fill="rgb(218,194,23)" fg:x="1530" fg:w="1"/><text x="19.0253%" y="943.50"></text></g><g><title>&lt;egui::data::input::RawInput as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="18.7753%" y="917" width="0.0123%" height="15" fill="rgb(235,66,41)" fg:x="1530" fg:w="1"/><text x="19.0253%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.01%)</title><rect x="18.7876%" y="933" width="0.0123%" height="15" fill="rgb(245,217,1)" fg:x="1531" fg:w="1"/><text x="19.0376%" y="943.50"></text></g><g><title>egui::memory::Areas::set_state::{{closure}} (1 samples, 0.01%)</title><rect x="18.7876%" y="917" width="0.0123%" height="15" fill="rgb(229,91,1)" fg:x="1531" fg:w="1"/><text x="19.0376%" y="927.50"></text></g><g><title>&lt;egui::layers::LayerId as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="18.7876%" y="901" width="0.0123%" height="15" fill="rgb(207,101,30)" fg:x="1531" fg:w="1"/><text x="19.0376%" y="911.50"></text></g><g><title>&lt;egui::layers::Order as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="18.7876%" y="885" width="0.0123%" height="15" fill="rgb(223,82,49)" fg:x="1531" fg:w="1"/><text x="19.0376%" y="895.50"></text></g><g><title>egui::memory::Areas::set_state (2 samples, 0.02%)</title><rect x="18.7876%" y="949" width="0.0245%" height="15" fill="rgb(218,167,17)" fg:x="1531" fg:w="2"/><text x="19.0376%" y="959.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.01%)</title><rect x="18.7999%" y="933" width="0.0123%" height="15" fill="rgb(208,103,14)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="18.7999%" y="917" width="0.0123%" height="15" fill="rgb(238,20,8)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="18.7999%" y="901" width="0.0123%" height="15" fill="rgb(218,80,54)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="18.7999%" y="885" width="0.0123%" height="15" fill="rgb(240,144,17)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="18.7999%" y="869" width="0.0123%" height="15" fill="rgb(245,27,50)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="18.7999%" y="853" width="0.0123%" height="15" fill="rgb(251,51,7)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="18.7999%" y="837" width="0.0123%" height="15" fill="rgb(245,217,29)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="18.7999%" y="821" width="0.0123%" height="15" fill="rgb(221,176,29)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="18.7999%" y="805" width="0.0123%" height="15" fill="rgb(212,180,24)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="815.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="18.7999%" y="789" width="0.0123%" height="15" fill="rgb(254,24,2)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="799.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="18.7999%" y="773" width="0.0123%" height="15" fill="rgb(230,100,2)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="18.7999%" y="757" width="0.0123%" height="15" fill="rgb(219,142,25)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="767.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="18.7999%" y="741" width="0.0123%" height="15" fill="rgb(240,73,43)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="751.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="18.7999%" y="725" width="0.0123%" height="15" fill="rgb(214,114,15)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="735.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="18.7999%" y="709" width="0.0123%" height="15" fill="rgb(207,130,4)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="18.7999%" y="693" width="0.0123%" height="15" fill="rgb(221,25,40)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="703.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="18.7999%" y="677" width="0.0123%" height="15" fill="rgb(241,184,7)" fg:x="1532" fg:w="1"/><text x="19.0499%" y="687.50"></text></g><g><title>bevy_egui::systems::begin_frame (7 samples, 0.09%)</title><rect x="18.7385%" y="997" width="0.0859%" height="15" fill="rgb(235,159,4)" fg:x="1527" fg:w="7"/><text x="18.9885%" y="1007.50"></text></g><g><title>egui::context::CtxRef::begin_frame (7 samples, 0.09%)</title><rect x="18.7385%" y="981" width="0.0859%" height="15" fill="rgb(214,87,48)" fg:x="1527" fg:w="7"/><text x="18.9885%" y="991.50"></text></g><g><title>egui::context::Context::begin_frame_mut (4 samples, 0.05%)</title><rect x="18.7753%" y="965" width="0.0491%" height="15" fill="rgb(246,198,24)" fg:x="1530" fg:w="4"/><text x="19.0253%" y="975.50"></text></g><g><title>egui::memory::Memory::begin_frame (1 samples, 0.01%)</title><rect x="18.8121%" y="949" width="0.0123%" height="15" fill="rgb(209,66,40)" fg:x="1533" fg:w="1"/><text x="19.0621%" y="959.50"></text></g><g><title>egui::memory::Interaction::begin_frame (1 samples, 0.01%)</title><rect x="18.8121%" y="933" width="0.0123%" height="15" fill="rgb(233,147,39)" fg:x="1533" fg:w="1"/><text x="19.0621%" y="943.50"></text></g><g><title>egui::memory::Focus::begin_frame (1 samples, 0.01%)</title><rect x="18.8121%" y="917" width="0.0123%" height="15" fill="rgb(231,145,52)" fg:x="1533" fg:w="1"/><text x="19.0621%" y="927.50"></text></g><g><title>bevy_input::mouse::mouse_button_input_system (1 samples, 0.01%)</title><rect x="18.8244%" y="997" width="0.0123%" height="15" fill="rgb(206,20,26)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="1007.50"></text></g><g><title>bevy_input::input::Input&lt;T&gt;::update (1 samples, 0.01%)</title><rect x="18.8244%" y="981" width="0.0123%" height="15" fill="rgb(238,220,4)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="991.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (1 samples, 0.01%)</title><rect x="18.8244%" y="965" width="0.0123%" height="15" fill="rgb(252,195,42)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="975.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="18.8244%" y="949" width="0.0123%" height="15" fill="rgb(209,10,6)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="18.8244%" y="933" width="0.0123%" height="15" fill="rgb(229,3,52)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="18.8244%" y="917" width="0.0123%" height="15" fill="rgb(253,49,37)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(bevy_input::mouse::MouseButton,())&gt;,hashbrown::raw::RawTable&lt;(bevy_input::mouse::MouseButton,())&gt;::clear::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="18.8244%" y="901" width="0.0123%" height="15" fill="rgb(240,103,49)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="911.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="18.8244%" y="885" width="0.0123%" height="15" fill="rgb(250,182,30)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="18.8244%" y="869" width="0.0123%" height="15" fill="rgb(248,8,30)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (1 samples, 0.01%)</title><rect x="18.8244%" y="853" width="0.0123%" height="15" fill="rgb(237,120,30)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (1 samples, 0.01%)</title><rect x="18.8244%" y="837" width="0.0123%" height="15" fill="rgb(221,146,34)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="847.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1 samples, 0.01%)</title><rect x="18.8244%" y="821" width="0.0123%" height="15" fill="rgb(242,55,13)" fg:x="1534" fg:w="1"/><text x="19.0744%" y="831.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="18.8367%" y="981" width="0.0245%" height="15" fill="rgb(242,112,31)" fg:x="1535" fg:w="2"/><text x="19.0867%" y="991.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="18.8489%" y="965" width="0.0123%" height="15" fill="rgb(249,192,27)" fg:x="1536" fg:w="1"/><text x="19.0989%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="18.8489%" y="949" width="0.0123%" height="15" fill="rgb(208,204,44)" fg:x="1536" fg:w="1"/><text x="19.0989%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (1 samples, 0.01%)</title><rect x="18.8489%" y="933" width="0.0123%" height="15" fill="rgb(208,93,54)" fg:x="1536" fg:w="1"/><text x="19.0989%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="18.8489%" y="917" width="0.0123%" height="15" fill="rgb(242,1,31)" fg:x="1536" fg:w="1"/><text x="19.0989%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="18.8489%" y="901" width="0.0123%" height="15" fill="rgb(241,83,25)" fg:x="1536" fg:w="1"/><text x="19.0989%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="18.8489%" y="885" width="0.0123%" height="15" fill="rgb(205,169,50)" fg:x="1536" fg:w="1"/><text x="19.0989%" y="895.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="18.8489%" y="869" width="0.0123%" height="15" fill="rgb(239,186,37)" fg:x="1536" fg:w="1"/><text x="19.0989%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="18.8489%" y="853" width="0.0123%" height="15" fill="rgb(205,221,10)" fg:x="1536" fg:w="1"/><text x="19.0989%" y="863.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter (1 samples, 0.01%)</title><rect x="18.8612%" y="981" width="0.0123%" height="15" fill="rgb(218,196,15)" fg:x="1537" fg:w="1"/><text x="19.1112%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="18.8612%" y="965" width="0.0123%" height="15" fill="rgb(218,196,35)" fg:x="1537" fg:w="1"/><text x="19.1112%" y="975.50"></text></g><g><title>bevy_render::camera::active_cameras::active_cameras_system (1 samples, 0.01%)</title><rect x="18.8612%" y="949" width="0.0123%" height="15" fill="rgb(233,63,24)" fg:x="1537" fg:w="1"/><text x="19.1112%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="18.8735%" y="981" width="0.0123%" height="15" fill="rgb(225,8,4)" fg:x="1538" fg:w="1"/><text x="19.1235%" y="991.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="18.8735%" y="965" width="0.0123%" height="15" fill="rgb(234,105,35)" fg:x="1538" fg:w="1"/><text x="19.1235%" y="975.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="18.8735%" y="949" width="0.0123%" height="15" fill="rgb(236,21,32)" fg:x="1538" fg:w="1"/><text x="19.1235%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="18.8735%" y="933" width="0.0123%" height="15" fill="rgb(228,109,6)" fg:x="1538" fg:w="1"/><text x="19.1235%" y="943.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="18.8735%" y="917" width="0.0123%" height="15" fill="rgb(229,215,31)" fg:x="1538" fg:w="1"/><text x="19.1235%" y="927.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="18.8735%" y="901" width="0.0123%" height="15" fill="rgb(221,52,54)" fg:x="1538" fg:w="1"/><text x="19.1235%" y="911.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (1 samples, 0.01%)</title><rect x="18.8858%" y="917" width="0.0123%" height="15" fill="rgb(252,129,43)" fg:x="1539" fg:w="1"/><text x="19.1358%" y="927.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (1 samples, 0.01%)</title><rect x="18.8858%" y="901" width="0.0123%" height="15" fill="rgb(248,183,27)" fg:x="1539" fg:w="1"/><text x="19.1358%" y="911.50"></text></g><g><title>bevy_render::camera::active_cameras::active_cameras_system (7 samples, 0.09%)</title><rect x="18.8367%" y="997" width="0.0859%" height="15" fill="rgb(250,0,22)" fg:x="1535" fg:w="7"/><text x="19.0867%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (3 samples, 0.04%)</title><rect x="18.8858%" y="981" width="0.0368%" height="15" fill="rgb(213,166,10)" fg:x="1539" fg:w="3"/><text x="19.1358%" y="991.50"></text></g><g><title>bevy_render::camera::active_cameras::active_cameras_system::{{closure}} (3 samples, 0.04%)</title><rect x="18.8858%" y="965" width="0.0368%" height="15" fill="rgb(207,163,36)" fg:x="1539" fg:w="3"/><text x="19.1358%" y="975.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (3 samples, 0.04%)</title><rect x="18.8858%" y="949" width="0.0368%" height="15" fill="rgb(208,122,22)" fg:x="1539" fg:w="3"/><text x="19.1358%" y="959.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (3 samples, 0.04%)</title><rect x="18.8858%" y="933" width="0.0368%" height="15" fill="rgb(207,104,49)" fg:x="1539" fg:w="3"/><text x="19.1358%" y="943.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (2 samples, 0.02%)</title><rect x="18.8980%" y="917" width="0.0245%" height="15" fill="rgb(248,211,50)" fg:x="1540" fg:w="2"/><text x="19.1480%" y="927.50"></text></g><g><title>bevy_render::shader::shader_defs::asset_shader_defs_system (1 samples, 0.01%)</title><rect x="18.9226%" y="997" width="0.0123%" height="15" fill="rgb(217,13,45)" fg:x="1542" fg:w="1"/><text x="19.1726%" y="1007.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="18.9226%" y="981" width="0.0123%" height="15" fill="rgb(211,216,49)" fg:x="1542" fg:w="1"/><text x="19.1726%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="18.9226%" y="965" width="0.0123%" height="15" fill="rgb(221,58,53)" fg:x="1542" fg:w="1"/><text x="19.1726%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="18.9226%" y="949" width="0.0123%" height="15" fill="rgb(220,112,41)" fg:x="1542" fg:w="1"/><text x="19.1726%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="18.9226%" y="933" width="0.0123%" height="15" fill="rgb(236,38,28)" fg:x="1542" fg:w="1"/><text x="19.1726%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="18.9226%" y="917" width="0.0123%" height="15" fill="rgb(227,195,22)" fg:x="1542" fg:w="1"/><text x="19.1726%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="18.9226%" y="901" width="0.0123%" height="15" fill="rgb(214,55,33)" fg:x="1542" fg:w="1"/><text x="19.1726%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="18.9226%" y="885" width="0.0123%" height="15" fill="rgb(248,80,13)" fg:x="1542" fg:w="1"/><text x="19.1726%" y="895.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="18.9226%" y="869" width="0.0123%" height="15" fill="rgb(238,52,6)" fg:x="1542" fg:w="1"/><text x="19.1726%" y="879.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (98 samples, 1.20%)</title><rect x="17.7445%" y="1045" width="1.2026%" height="15" fill="rgb(224,198,47)" fg:x="1446" fg:w="98"/><text x="17.9945%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (84 samples, 1.03%)</title><rect x="17.9163%" y="1029" width="1.0308%" height="15" fill="rgb(233,171,20)" fg:x="1460" fg:w="84"/><text x="18.1663%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (84 samples, 1.03%)</title><rect x="17.9163%" y="1013" width="1.0308%" height="15" fill="rgb(241,30,25)" fg:x="1460" fg:w="84"/><text x="18.1663%" y="1023.50"></text></g><g><title>engine::engine::actor::ai::choose_next_goal (1 samples, 0.01%)</title><rect x="18.9348%" y="997" width="0.0123%" height="15" fill="rgb(207,171,38)" fg:x="1543" fg:w="1"/><text x="19.1848%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="18.9348%" y="981" width="0.0123%" height="15" fill="rgb(234,70,1)" fg:x="1543" fg:w="1"/><text x="19.1848%" y="991.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="18.9348%" y="965" width="0.0123%" height="15" fill="rgb(232,178,18)" fg:x="1543" fg:w="1"/><text x="19.1848%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="18.9348%" y="949" width="0.0123%" height="15" fill="rgb(241,78,40)" fg:x="1543" fg:w="1"/><text x="19.1848%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (1 samples, 0.01%)</title><rect x="18.9348%" y="933" width="0.0123%" height="15" fill="rgb(222,35,25)" fg:x="1543" fg:w="1"/><text x="19.1848%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="18.9348%" y="917" width="0.0123%" height="15" fill="rgb(207,92,16)" fg:x="1543" fg:w="1"/><text x="19.1848%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="18.9348%" y="901" width="0.0123%" height="15" fill="rgb(216,59,51)" fg:x="1543" fg:w="1"/><text x="19.1848%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="18.9348%" y="885" width="0.0123%" height="15" fill="rgb(213,80,28)" fg:x="1543" fg:w="1"/><text x="19.1848%" y="895.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="18.9348%" y="869" width="0.0123%" height="15" fill="rgb(220,93,7)" fg:x="1543" fg:w="1"/><text x="19.1848%" y="879.50"></text></g><g><title>&lt;(P0,P1,P2) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="18.9471%" y="1029" width="0.0245%" height="15" fill="rgb(225,24,44)" fg:x="1544" fg:w="2"/><text x="19.1971%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="18.9594%" y="1013" width="0.0123%" height="15" fill="rgb(243,74,40)" fg:x="1545" fg:w="1"/><text x="19.2094%" y="1023.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="18.9594%" y="997" width="0.0123%" height="15" fill="rgb(228,39,7)" fg:x="1545" fg:w="1"/><text x="19.2094%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="18.9594%" y="981" width="0.0123%" height="15" fill="rgb(227,79,8)" fg:x="1545" fg:w="1"/><text x="19.2094%" y="991.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="18.9594%" y="965" width="0.0123%" height="15" fill="rgb(236,58,11)" fg:x="1545" fg:w="1"/><text x="19.2094%" y="975.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="18.9594%" y="949" width="0.0123%" height="15" fill="rgb(249,63,35)" fg:x="1545" fg:w="1"/><text x="19.2094%" y="959.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (1 samples, 0.01%)</title><rect x="18.9594%" y="933" width="0.0123%" height="15" fill="rgb(252,114,16)" fg:x="1545" fg:w="1"/><text x="19.2094%" y="943.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="18.9717%" y="1029" width="0.0123%" height="15" fill="rgb(254,151,24)" fg:x="1546" fg:w="1"/><text x="19.2217%" y="1039.50"></text></g><g><title>bevy_diagnostic::diagnostic::Diagnostics::add_measurement (1 samples, 0.01%)</title><rect x="18.9839%" y="997" width="0.0123%" height="15" fill="rgb(253,54,39)" fg:x="1547" fg:w="1"/><text x="19.2339%" y="1007.50"></text></g><g><title>bevy_diagnostic::diagnostic::Diagnostic::add_measurement (1 samples, 0.01%)</title><rect x="18.9839%" y="981" width="0.0123%" height="15" fill="rgb(243,25,45)" fg:x="1547" fg:w="1"/><text x="19.2339%" y="991.50"></text></g><g><title>bevy_diagnostic::diagnostic::Diagnostic::add_measurement (1 samples, 0.01%)</title><rect x="18.9962%" y="965" width="0.0123%" height="15" fill="rgb(234,134,9)" fg:x="1548" fg:w="1"/><text x="19.2462%" y="975.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.01%)</title><rect x="18.9962%" y="949" width="0.0123%" height="15" fill="rgb(227,166,31)" fg:x="1548" fg:w="1"/><text x="19.2462%" y="959.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.01%)</title><rect x="18.9962%" y="933" width="0.0123%" height="15" fill="rgb(245,143,41)" fg:x="1548" fg:w="1"/><text x="19.2462%" y="943.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.01%)</title><rect x="18.9962%" y="917" width="0.0123%" height="15" fill="rgb(238,181,32)" fg:x="1548" fg:w="1"/><text x="19.2462%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="19.0085%" y="885" width="0.0123%" height="15" fill="rgb(224,113,18)" fg:x="1549" fg:w="1"/><text x="19.2585%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="19.0085%" y="869" width="0.0123%" height="15" fill="rgb(240,229,28)" fg:x="1549" fg:w="1"/><text x="19.2585%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="19.0085%" y="853" width="0.0123%" height="15" fill="rgb(250,185,3)" fg:x="1549" fg:w="1"/><text x="19.2585%" y="863.50"></text></g><g><title>bevy_diagnostic::diagnostic::Diagnostics::add_measurement (1 samples, 0.01%)</title><rect x="19.0085%" y="837" width="0.0123%" height="15" fill="rgb(212,59,25)" fg:x="1549" fg:w="1"/><text x="19.2585%" y="847.50"></text></g><g><title>bevy_diagnostic::diagnostic::Diagnostics::add_measurement (3 samples, 0.04%)</title><rect x="18.9962%" y="981" width="0.0368%" height="15" fill="rgb(221,87,20)" fg:x="1548" fg:w="3"/><text x="19.2462%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="19.0085%" y="965" width="0.0245%" height="15" fill="rgb(213,74,28)" fg:x="1549" fg:w="2"/><text x="19.2585%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="19.0085%" y="949" width="0.0245%" height="15" fill="rgb(224,132,34)" fg:x="1549" fg:w="2"/><text x="19.2585%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.02%)</title><rect x="19.0085%" y="933" width="0.0245%" height="15" fill="rgb(222,101,24)" fg:x="1549" fg:w="2"/><text x="19.2585%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="19.0085%" y="917" width="0.0245%" height="15" fill="rgb(254,142,4)" fg:x="1549" fg:w="2"/><text x="19.2585%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="19.0085%" y="901" width="0.0245%" height="15" fill="rgb(230,229,49)" fg:x="1549" fg:w="2"/><text x="19.2585%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="19.0207%" y="885" width="0.0123%" height="15" fill="rgb(238,70,47)" fg:x="1550" fg:w="1"/><text x="19.2707%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="19.0207%" y="869" width="0.0123%" height="15" fill="rgb(231,160,17)" fg:x="1550" fg:w="1"/><text x="19.2707%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="19.0207%" y="853" width="0.0123%" height="15" fill="rgb(218,68,53)" fg:x="1550" fg:w="1"/><text x="19.2707%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="19.0207%" y="837" width="0.0123%" height="15" fill="rgb(236,111,10)" fg:x="1550" fg:w="1"/><text x="19.2707%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="19.0207%" y="821" width="0.0123%" height="15" fill="rgb(224,34,41)" fg:x="1550" fg:w="1"/><text x="19.2707%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="19.0207%" y="805" width="0.0123%" height="15" fill="rgb(241,118,19)" fg:x="1550" fg:w="1"/><text x="19.2707%" y="815.50"></text></g><g><title>bevy_diagnostic::frame_time_diagnostics_plugin::FrameTimeDiagnosticsPlugin::diagnostic_system (5 samples, 0.06%)</title><rect x="18.9962%" y="997" width="0.0614%" height="15" fill="rgb(238,129,25)" fg:x="1548" fg:w="5"/><text x="19.2462%" y="1007.50"></text></g><g><title>bevy_diagnostic::diagnostic::Diagnostics::get (2 samples, 0.02%)</title><rect x="19.0330%" y="981" width="0.0245%" height="15" fill="rgb(238,22,31)" fg:x="1551" fg:w="2"/><text x="19.2830%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="19.0330%" y="965" width="0.0245%" height="15" fill="rgb(222,174,48)" fg:x="1551" fg:w="2"/><text x="19.2830%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="19.0330%" y="949" width="0.0245%" height="15" fill="rgb(206,152,40)" fg:x="1551" fg:w="2"/><text x="19.2830%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="19.0330%" y="933" width="0.0245%" height="15" fill="rgb(218,99,54)" fg:x="1551" fg:w="2"/><text x="19.2830%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="19.0330%" y="917" width="0.0245%" height="15" fill="rgb(220,174,26)" fg:x="1551" fg:w="2"/><text x="19.2830%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="19.0330%" y="901" width="0.0245%" height="15" fill="rgb(245,116,9)" fg:x="1551" fg:w="2"/><text x="19.2830%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="19.0330%" y="885" width="0.0245%" height="15" fill="rgb(209,72,35)" fg:x="1551" fg:w="2"/><text x="19.2830%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="19.0330%" y="869" width="0.0245%" height="15" fill="rgb(226,126,21)" fg:x="1551" fg:w="2"/><text x="19.2830%" y="879.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="19.0698%" y="981" width="0.0245%" height="15" fill="rgb(227,192,1)" fg:x="1554" fg:w="2"/><text x="19.3198%" y="991.50"></text></g><g><title>&lt;(F0,F1,F2) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (2 samples, 0.02%)</title><rect x="19.0698%" y="965" width="0.0245%" height="15" fill="rgb(237,180,29)" fg:x="1554" fg:w="2"/><text x="19.3198%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (2 samples, 0.02%)</title><rect x="19.0698%" y="949" width="0.0245%" height="15" fill="rgb(230,197,35)" fg:x="1554" fg:w="2"/><text x="19.3198%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (1 samples, 0.01%)</title><rect x="19.0821%" y="933" width="0.0123%" height="15" fill="rgb(246,193,31)" fg:x="1555" fg:w="1"/><text x="19.3321%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.04%)</title><rect x="19.0944%" y="981" width="0.0368%" height="15" fill="rgb(241,36,4)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="19.0944%" y="965" width="0.0368%" height="15" fill="rgb(241,130,17)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="19.0944%" y="949" width="0.0368%" height="15" fill="rgb(206,137,32)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="19.0944%" y="933" width="0.0368%" height="15" fill="rgb(237,228,51)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="19.0944%" y="917" width="0.0368%" height="15" fill="rgb(243,6,42)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.04%)</title><rect x="19.0944%" y="901" width="0.0368%" height="15" fill="rgb(251,74,28)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.04%)</title><rect x="19.0944%" y="885" width="0.0368%" height="15" fill="rgb(218,20,49)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.04%)</title><rect x="19.0944%" y="869" width="0.0368%" height="15" fill="rgb(238,28,14)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="879.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.04%)</title><rect x="19.0944%" y="853" width="0.0368%" height="15" fill="rgb(229,40,46)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="863.50"></text></g><g><title>__rdl_realloc (3 samples, 0.04%)</title><rect x="19.0944%" y="837" width="0.0368%" height="15" fill="rgb(244,195,20)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.04%)</title><rect x="19.0944%" y="821" width="0.0368%" height="15" fill="rgb(253,56,35)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="831.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.04%)</title><rect x="19.0944%" y="805" width="0.0368%" height="15" fill="rgb(210,149,44)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="815.50"></text></g><g><title>_int_realloc (3 samples, 0.04%)</title><rect x="19.0944%" y="789" width="0.0368%" height="15" fill="rgb(240,135,12)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="799.50"></text></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="19.0944%" y="773" width="0.0368%" height="15" fill="rgb(251,24,50)" fg:x="1556" fg:w="3"/><text x="19.3444%" y="783.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="19.1189%" y="757" width="0.0123%" height="15" fill="rgb(243,200,47)" fg:x="1558" fg:w="1"/><text x="19.3689%" y="767.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (9 samples, 0.11%)</title><rect x="19.0576%" y="997" width="0.1104%" height="15" fill="rgb(224,166,26)" fg:x="1553" fg:w="9"/><text x="19.3076%" y="1007.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (3 samples, 0.04%)</title><rect x="19.1312%" y="981" width="0.0368%" height="15" fill="rgb(233,0,47)" fg:x="1559" fg:w="3"/><text x="19.3812%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (3 samples, 0.04%)</title><rect x="19.1312%" y="965" width="0.0368%" height="15" fill="rgb(253,80,5)" fg:x="1559" fg:w="3"/><text x="19.3812%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (2 samples, 0.02%)</title><rect x="19.1435%" y="949" width="0.0245%" height="15" fill="rgb(214,133,25)" fg:x="1560" fg:w="2"/><text x="19.3935%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (2 samples, 0.02%)</title><rect x="19.1435%" y="933" width="0.0245%" height="15" fill="rgb(209,27,14)" fg:x="1560" fg:w="2"/><text x="19.3935%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (2 samples, 0.02%)</title><rect x="19.1435%" y="917" width="0.0245%" height="15" fill="rgb(219,102,51)" fg:x="1560" fg:w="2"/><text x="19.3935%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (2 samples, 0.02%)</title><rect x="19.1435%" y="901" width="0.0245%" height="15" fill="rgb(237,18,16)" fg:x="1560" fg:w="2"/><text x="19.3935%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="19.1435%" y="885" width="0.0245%" height="15" fill="rgb(241,85,17)" fg:x="1560" fg:w="2"/><text x="19.3935%" y="895.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (2 samples, 0.02%)</title><rect x="19.1435%" y="869" width="0.0245%" height="15" fill="rgb(236,90,42)" fg:x="1560" fg:w="2"/><text x="19.3935%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="19.1435%" y="853" width="0.0245%" height="15" fill="rgb(249,57,21)" fg:x="1560" fg:w="2"/><text x="19.3935%" y="863.50"></text></g><g><title>bevy_render::texture::texture::Texture::texture_resource_system (1 samples, 0.01%)</title><rect x="19.1680%" y="997" width="0.0123%" height="15" fill="rgb(243,12,36)" fg:x="1562" fg:w="1"/><text x="19.4180%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="19.1680%" y="981" width="0.0123%" height="15" fill="rgb(253,128,47)" fg:x="1562" fg:w="1"/><text x="19.4180%" y="991.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="19.1680%" y="965" width="0.0123%" height="15" fill="rgb(207,33,20)" fg:x="1562" fg:w="1"/><text x="19.4180%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="19.1680%" y="949" width="0.0123%" height="15" fill="rgb(233,215,35)" fg:x="1562" fg:w="1"/><text x="19.4180%" y="959.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="19.1680%" y="933" width="0.0123%" height="15" fill="rgb(249,188,52)" fg:x="1562" fg:w="1"/><text x="19.4180%" y="943.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.01%)</title><rect x="19.1680%" y="917" width="0.0123%" height="15" fill="rgb(225,12,32)" fg:x="1562" fg:w="1"/><text x="19.4180%" y="927.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (1 samples, 0.01%)</title><rect x="19.1680%" y="901" width="0.0123%" height="15" fill="rgb(247,98,14)" fg:x="1562" fg:w="1"/><text x="19.4180%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="19.1680%" y="885" width="0.0123%" height="15" fill="rgb(247,219,48)" fg:x="1562" fg:w="1"/><text x="19.4180%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="19.1680%" y="869" width="0.0123%" height="15" fill="rgb(253,60,48)" fg:x="1562" fg:w="1"/><text x="19.4180%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="19.1803%" y="997" width="0.0245%" height="15" fill="rgb(245,15,52)" fg:x="1563" fg:w="2"/><text x="19.4303%" y="1007.50"></text></g><g><title>engine::engine::render::init_sprite_sheet (1 samples, 0.01%)</title><rect x="19.2048%" y="981" width="0.0123%" height="15" fill="rgb(220,133,28)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="991.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load (1 samples, 0.01%)</title><rect x="19.2048%" y="965" width="0.0123%" height="15" fill="rgb(217,180,4)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="975.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untyped (1 samples, 0.01%)</title><rect x="19.2048%" y="949" width="0.0123%" height="15" fill="rgb(251,24,1)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="959.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked (1 samples, 0.01%)</title><rect x="19.2048%" y="933" width="0.0123%" height="15" fill="rgb(212,185,49)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="943.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::spawn (1 samples, 0.01%)</title><rect x="19.2048%" y="917" width="0.0123%" height="15" fill="rgb(215,175,22)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="927.50"></text></g><g><title>async_executor::Executor::spawn (1 samples, 0.01%)</title><rect x="19.2048%" y="901" width="0.0123%" height="15" fill="rgb(250,205,14)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="911.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (1 samples, 0.01%)</title><rect x="19.2048%" y="885" width="0.0123%" height="15" fill="rgb(225,211,22)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="895.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (1 samples, 0.01%)</title><rect x="19.2048%" y="869" width="0.0123%" height="15" fill="rgb(251,179,42)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="19.2048%" y="853" width="0.0123%" height="15" fill="rgb(208,216,51)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="19.2048%" y="837" width="0.0123%" height="15" fill="rgb(235,36,11)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="19.2048%" y="821" width="0.0123%" height="15" fill="rgb(213,189,28)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="19.2048%" y="805" width="0.0123%" height="15" fill="rgb(227,203,42)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="19.2048%" y="789" width="0.0123%" height="15" fill="rgb(244,72,36)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="799.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="19.2048%" y="773" width="0.0123%" height="15" fill="rgb(213,53,17)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="19.2048%" y="757" width="0.0123%" height="15" fill="rgb(207,167,3)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="19.2048%" y="741" width="0.0123%" height="15" fill="rgb(216,98,30)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="751.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="19.2048%" y="725" width="0.0123%" height="15" fill="rgb(236,123,15)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="735.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="19.2048%" y="709" width="0.0123%" height="15" fill="rgb(248,81,50)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="19.2048%" y="693" width="0.0123%" height="15" fill="rgb(214,120,4)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="703.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="19.2048%" y="677" width="0.0123%" height="15" fill="rgb(208,179,34)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="687.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="19.2048%" y="661" width="0.0123%" height="15" fill="rgb(227,140,7)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="19.2048%" y="645" width="0.0123%" height="15" fill="rgb(214,22,6)" fg:x="1565" fg:w="1"/><text x="19.4548%" y="655.50"></text></g><g><title>engine::add_people (2 samples, 0.02%)</title><rect x="19.2048%" y="997" width="0.0245%" height="15" fill="rgb(207,137,27)" fg:x="1565" fg:w="2"/><text x="19.4548%" y="1007.50"></text></g><g><title>engine::engine::spawn_actor (1 samples, 0.01%)</title><rect x="19.2171%" y="981" width="0.0123%" height="15" fill="rgb(210,8,46)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="991.50"></text></g><g><title>bevy_ecs::system::commands::EntityCommands::insert (1 samples, 0.01%)</title><rect x="19.2171%" y="965" width="0.0123%" height="15" fill="rgb(240,16,54)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="975.50"></text></g><g><title>bevy_ecs::system::commands::Commands::add (1 samples, 0.01%)</title><rect x="19.2171%" y="949" width="0.0123%" height="15" fill="rgb(211,209,29)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="959.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push (1 samples, 0.01%)</title><rect x="19.2171%" y="933" width="0.0123%" height="15" fill="rgb(226,228,24)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="19.2171%" y="917" width="0.0123%" height="15" fill="rgb(222,84,9)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="19.2171%" y="901" width="0.0123%" height="15" fill="rgb(234,203,30)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="19.2171%" y="885" width="0.0123%" height="15" fill="rgb(238,109,14)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="19.2171%" y="869" width="0.0123%" height="15" fill="rgb(233,206,34)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="19.2171%" y="853" width="0.0123%" height="15" fill="rgb(220,167,47)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="863.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="19.2171%" y="837" width="0.0123%" height="15" fill="rgb(238,105,10)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="19.2171%" y="821" width="0.0123%" height="15" fill="rgb(213,227,17)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="19.2171%" y="805" width="0.0123%" height="15" fill="rgb(217,132,38)" fg:x="1566" fg:w="1"/><text x="19.4671%" y="815.50"></text></g><g><title>alloc_perturb (1 samples, 0.01%)</title><rect x="19.3766%" y="789" width="0.0123%" height="15" fill="rgb(242,146,4)" fg:x="1579" fg:w="1"/><text x="19.6266%" y="799.50"></text></g><g><title>bevy_ecs::system::commands::EntityCommands::remove (12 samples, 0.15%)</title><rect x="19.2539%" y="981" width="0.1473%" height="15" fill="rgb(212,61,9)" fg:x="1569" fg:w="12"/><text x="19.5039%" y="991.50"></text></g><g><title>bevy_ecs::system::commands::Commands::add (12 samples, 0.15%)</title><rect x="19.2539%" y="965" width="0.1473%" height="15" fill="rgb(247,126,22)" fg:x="1569" fg:w="12"/><text x="19.5039%" y="975.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push (12 samples, 0.15%)</title><rect x="19.2539%" y="949" width="0.1473%" height="15" fill="rgb(220,196,2)" fg:x="1569" fg:w="12"/><text x="19.5039%" y="959.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (12 samples, 0.15%)</title><rect x="19.2539%" y="933" width="0.1473%" height="15" fill="rgb(208,46,4)" fg:x="1569" fg:w="12"/><text x="19.5039%" y="943.50"></text></g><g><title>alloc::alloc::exchange_malloc (12 samples, 0.15%)</title><rect x="19.2539%" y="917" width="0.1473%" height="15" fill="rgb(252,104,46)" fg:x="1569" fg:w="12"/><text x="19.5039%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (12 samples, 0.15%)</title><rect x="19.2539%" y="901" width="0.1473%" height="15" fill="rgb(237,152,48)" fg:x="1569" fg:w="12"/><text x="19.5039%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (12 samples, 0.15%)</title><rect x="19.2539%" y="885" width="0.1473%" height="15" fill="rgb(221,59,37)" fg:x="1569" fg:w="12"/><text x="19.5039%" y="895.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.15%)</title><rect x="19.2539%" y="869" width="0.1473%" height="15" fill="rgb(209,202,51)" fg:x="1569" fg:w="12"/><text x="19.5039%" y="879.50"></text></g><g><title>__rdl_alloc (12 samples, 0.15%)</title><rect x="19.2539%" y="853" width="0.1473%" height="15" fill="rgb(228,81,30)" fg:x="1569" fg:w="12"/><text x="19.5039%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.15%)</title><rect x="19.2539%" y="837" width="0.1473%" height="15" fill="rgb(227,42,39)" fg:x="1569" fg:w="12"/><text x="19.5039%" y="847.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.15%)</title><rect x="19.2539%" y="821" width="0.1473%" height="15" fill="rgb(221,26,2)" fg:x="1569" fg:w="12"/><text x="19.5039%" y="831.50"></text></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="19.3275%" y="805" width="0.0736%" height="15" fill="rgb(254,61,31)" fg:x="1575" fg:w="6"/><text x="19.5775%" y="815.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="19.3889%" y="789" width="0.0123%" height="15" fill="rgb(222,173,38)" fg:x="1580" fg:w="1"/><text x="19.6389%" y="799.50"></text></g><g><title>engine::engine::actor::ai::eating::find_food_system (15 samples, 0.18%)</title><rect x="19.2294%" y="997" width="0.1841%" height="15" fill="rgb(218,50,12)" fg:x="1567" fg:w="15"/><text x="19.4794%" y="1007.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="19.4012%" y="981" width="0.0123%" height="15" fill="rgb(223,88,40)" fg:x="1581" fg:w="1"/><text x="19.6512%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="19.4012%" y="965" width="0.0123%" height="15" fill="rgb(237,54,19)" fg:x="1581" fg:w="1"/><text x="19.6512%" y="975.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="19.4012%" y="949" width="0.0123%" height="15" fill="rgb(251,129,25)" fg:x="1581" fg:w="1"/><text x="19.6512%" y="959.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::plan_path (1 samples, 0.01%)</title><rect x="19.4134%" y="997" width="0.0123%" height="15" fill="rgb(238,97,19)" fg:x="1582" fg:w="1"/><text x="19.6634%" y="1007.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter (1 samples, 0.01%)</title><rect x="19.4134%" y="981" width="0.0123%" height="15" fill="rgb(240,169,18)" fg:x="1582" fg:w="1"/><text x="19.6634%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="19.4134%" y="965" width="0.0123%" height="15" fill="rgb(230,187,49)" fg:x="1582" fg:w="1"/><text x="19.6634%" y="975.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="19.4134%" y="949" width="0.0123%" height="15" fill="rgb(209,44,26)" fg:x="1582" fg:w="1"/><text x="19.6634%" y="959.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (40 samples, 0.49%)</title><rect x="18.9471%" y="1045" width="0.4909%" height="15" fill="rgb(244,0,6)" fg:x="1544" fg:w="40"/><text x="19.1971%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (37 samples, 0.45%)</title><rect x="18.9839%" y="1029" width="0.4540%" height="15" fill="rgb(248,18,21)" fg:x="1547" fg:w="37"/><text x="19.2339%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (37 samples, 0.45%)</title><rect x="18.9839%" y="1013" width="0.4540%" height="15" fill="rgb(245,180,19)" fg:x="1547" fg:w="37"/><text x="19.2339%" y="1023.50"></text></g><g><title>engine::engine::actor::animal_processes (1 samples, 0.01%)</title><rect x="19.4257%" y="997" width="0.0123%" height="15" fill="rgb(252,118,36)" fg:x="1583" fg:w="1"/><text x="19.6757%" y="1007.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.01%)</title><rect x="19.4257%" y="981" width="0.0123%" height="15" fill="rgb(210,224,19)" fg:x="1583" fg:w="1"/><text x="19.6757%" y="991.50"></text></g><g><title>&lt;engine::engine::world::time::GameTime as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="19.4257%" y="965" width="0.0123%" height="15" fill="rgb(218,30,24)" fg:x="1583" fg:w="1"/><text x="19.6757%" y="975.50"></text></g><g><title>&lt;(P0,P1,P2,P3) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="19.4380%" y="1029" width="0.0123%" height="15" fill="rgb(219,75,50)" fg:x="1584" fg:w="1"/><text x="19.6880%" y="1039.50"></text></g><g><title>&lt;bevy_app::event::EventReaderState&lt;(&lt;bevy_ecs::system::system_param::Local&lt;(usize,core::marker::PhantomData&lt;T&gt;)&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::Res&lt;bevy_app::event::Events&lt;T&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch),T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="19.4380%" y="1013" width="0.0123%" height="15" fill="rgb(234,72,50)" fg:x="1584" fg:w="1"/><text x="19.6880%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="19.4380%" y="997" width="0.0123%" height="15" fill="rgb(219,100,48)" fg:x="1584" fg:w="1"/><text x="19.6880%" y="1007.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="19.4380%" y="981" width="0.0123%" height="15" fill="rgb(253,5,41)" fg:x="1584" fg:w="1"/><text x="19.6880%" y="991.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="19.4380%" y="965" width="0.0123%" height="15" fill="rgb(247,181,11)" fg:x="1584" fg:w="1"/><text x="19.6880%" y="975.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="19.4380%" y="949" width="0.0123%" height="15" fill="rgb(222,223,25)" fg:x="1584" fg:w="1"/><text x="19.6880%" y="959.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="19.4502%" y="981" width="0.0123%" height="15" fill="rgb(214,198,28)" fg:x="1585" fg:w="1"/><text x="19.7002%" y="991.50"></text></g><g><title>&lt;(F0,F1,F2) as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="19.4502%" y="965" width="0.0123%" height="15" fill="rgb(230,46,43)" fg:x="1585" fg:w="1"/><text x="19.7002%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="19.4502%" y="949" width="0.0123%" height="15" fill="rgb(233,65,53)" fg:x="1585" fg:w="1"/><text x="19.7002%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (1 samples, 0.01%)</title><rect x="19.4502%" y="933" width="0.0123%" height="15" fill="rgb(221,121,27)" fg:x="1585" fg:w="1"/><text x="19.7002%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="19.4625%" y="981" width="0.0245%" height="15" fill="rgb(247,70,47)" fg:x="1586" fg:w="2"/><text x="19.7125%" y="991.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="19.4871%" y="981" width="0.0123%" height="15" fill="rgb(228,85,35)" fg:x="1588" fg:w="1"/><text x="19.7371%" y="991.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter_with_id (1 samples, 0.01%)</title><rect x="19.4871%" y="965" width="0.0123%" height="15" fill="rgb(209,50,18)" fg:x="1588" fg:w="1"/><text x="19.7371%" y="975.50"></text></g><g><title>bevy_app::event::internal_event_reader (1 samples, 0.01%)</title><rect x="19.4871%" y="949" width="0.0123%" height="15" fill="rgb(250,19,35)" fg:x="1588" fg:w="1"/><text x="19.7371%" y="959.50"></text></g><g><title>bevy_window::windows::Windows::get (1 samples, 0.01%)</title><rect x="19.4993%" y="981" width="0.0123%" height="15" fill="rgb(253,107,29)" fg:x="1589" fg:w="1"/><text x="19.7493%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="19.4993%" y="965" width="0.0123%" height="15" fill="rgb(252,179,29)" fg:x="1589" fg:w="1"/><text x="19.7493%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="19.4993%" y="949" width="0.0123%" height="15" fill="rgb(238,194,6)" fg:x="1589" fg:w="1"/><text x="19.7493%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="19.4993%" y="933" width="0.0123%" height="15" fill="rgb(238,164,29)" fg:x="1589" fg:w="1"/><text x="19.7493%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="19.4993%" y="917" width="0.0123%" height="15" fill="rgb(224,25,9)" fg:x="1589" fg:w="1"/><text x="19.7493%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="19.4993%" y="901" width="0.0123%" height="15" fill="rgb(244,153,23)" fg:x="1589" fg:w="1"/><text x="19.7493%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="19.4993%" y="885" width="0.0123%" height="15" fill="rgb(212,203,14)" fg:x="1589" fg:w="1"/><text x="19.7493%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="19.4993%" y="869" width="0.0123%" height="15" fill="rgb(220,164,20)" fg:x="1589" fg:w="1"/><text x="19.7493%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="19.4993%" y="853" width="0.0123%" height="15" fill="rgb(222,203,48)" fg:x="1589" fg:w="1"/><text x="19.7493%" y="863.50"></text></g><g><title>bevy_window::windows::Windows::get (1 samples, 0.01%)</title><rect x="19.4993%" y="837" width="0.0123%" height="15" fill="rgb(215,159,22)" fg:x="1589" fg:w="1"/><text x="19.7493%" y="847.50"></text></g><g><title>bevy_render::camera::camera::camera_system (6 samples, 0.07%)</title><rect x="19.4502%" y="997" width="0.0736%" height="15" fill="rgb(216,183,47)" fg:x="1585" fg:w="6"/><text x="19.7002%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;&gt; (1 samples, 0.01%)</title><rect x="19.5116%" y="981" width="0.0123%" height="15" fill="rgb(229,195,25)" fg:x="1590" fg:w="1"/><text x="19.7616%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_ecs::entity::Entity&gt;&gt; (1 samples, 0.01%)</title><rect x="19.5116%" y="965" width="0.0123%" height="15" fill="rgb(224,132,51)" fg:x="1590" fg:w="1"/><text x="19.7616%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="19.5116%" y="949" width="0.0123%" height="15" fill="rgb(240,63,7)" fg:x="1590" fg:w="1"/><text x="19.7616%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="19.5116%" y="933" width="0.0123%" height="15" fill="rgb(249,182,41)" fg:x="1590" fg:w="1"/><text x="19.7616%" y="943.50"></text></g><g><title>futures_lite::future::block_on (2 samples, 0.02%)</title><rect x="19.5239%" y="965" width="0.0245%" height="15" fill="rgb(243,47,26)" fg:x="1591" fg:w="2"/><text x="19.7739%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="19.5239%" y="949" width="0.0245%" height="15" fill="rgb(233,48,2)" fg:x="1591" fg:w="2"/><text x="19.7739%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="19.5239%" y="933" width="0.0245%" height="15" fill="rgb(244,165,34)" fg:x="1591" fg:w="2"/><text x="19.7739%" y="943.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (2 samples, 0.02%)</title><rect x="19.5239%" y="917" width="0.0245%" height="15" fill="rgb(207,89,7)" fg:x="1591" fg:w="2"/><text x="19.7739%" y="927.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker (2 samples, 0.02%)</title><rect x="19.5239%" y="901" width="0.0245%" height="15" fill="rgb(244,117,36)" fg:x="1591" fg:w="2"/><text x="19.7739%" y="911.50"></text></g><g><title>parking::Parker::new (2 samples, 0.02%)</title><rect x="19.5239%" y="885" width="0.0245%" height="15" fill="rgb(226,144,34)" fg:x="1591" fg:w="2"/><text x="19.7739%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="19.5239%" y="869" width="0.0245%" height="15" fill="rgb(213,23,19)" fg:x="1591" fg:w="2"/><text x="19.7739%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::new (2 samples, 0.02%)</title><rect x="19.5239%" y="853" width="0.0245%" height="15" fill="rgb(217,75,12)" fg:x="1591" fg:w="2"/><text x="19.7739%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::init (2 samples, 0.02%)</title><rect x="19.5239%" y="837" width="0.0245%" height="15" fill="rgb(224,159,17)" fg:x="1591" fg:w="2"/><text x="19.7739%" y="847.50"></text></g><g><title>__GI___pthread_mutexattr_init (2 samples, 0.02%)</title><rect x="19.5239%" y="821" width="0.0245%" height="15" fill="rgb(217,118,1)" fg:x="1591" fg:w="2"/><text x="19.7739%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="19.5484%" y="917" width="0.0123%" height="15" fill="rgb(232,180,48)" fg:x="1593" fg:w="1"/><text x="19.7984%" y="927.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="19.5484%" y="901" width="0.0123%" height="15" fill="rgb(230,27,33)" fg:x="1593" fg:w="1"/><text x="19.7984%" y="911.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="19.5484%" y="885" width="0.0123%" height="15" fill="rgb(205,31,21)" fg:x="1593" fg:w="1"/><text x="19.7984%" y="895.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="19.5484%" y="869" width="0.0123%" height="15" fill="rgb(253,59,4)" fg:x="1593" fg:w="1"/><text x="19.7984%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="19.5484%" y="853" width="0.0123%" height="15" fill="rgb(224,201,9)" fg:x="1593" fg:w="1"/><text x="19.7984%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="19.5484%" y="837" width="0.0123%" height="15" fill="rgb(229,206,30)" fg:x="1593" fg:w="1"/><text x="19.7984%" y="847.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="19.5484%" y="821" width="0.0123%" height="15" fill="rgb(212,67,47)" fg:x="1593" fg:w="1"/><text x="19.7984%" y="831.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="19.5484%" y="805" width="0.0123%" height="15" fill="rgb(211,96,50)" fg:x="1593" fg:w="1"/><text x="19.7984%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="19.5484%" y="965" width="0.0245%" height="15" fill="rgb(252,114,18)" fg:x="1593" fg:w="2"/><text x="19.7984%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="19.5484%" y="949" width="0.0245%" height="15" fill="rgb(223,58,37)" fg:x="1593" fg:w="2"/><text x="19.7984%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="19.5484%" y="933" width="0.0245%" height="15" fill="rgb(237,70,4)" fg:x="1593" fg:w="2"/><text x="19.7984%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="19.5607%" y="917" width="0.0123%" height="15" fill="rgb(244,85,46)" fg:x="1594" fg:w="1"/><text x="19.8107%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="19.5607%" y="901" width="0.0123%" height="15" fill="rgb(223,39,52)" fg:x="1594" fg:w="1"/><text x="19.8107%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="19.5607%" y="885" width="0.0123%" height="15" fill="rgb(218,200,14)" fg:x="1594" fg:w="1"/><text x="19.8107%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="19.5607%" y="869" width="0.0123%" height="15" fill="rgb(208,171,16)" fg:x="1594" fg:w="1"/><text x="19.8107%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="19.5607%" y="853" width="0.0123%" height="15" fill="rgb(234,200,18)" fg:x="1594" fg:w="1"/><text x="19.8107%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="19.5607%" y="837" width="0.0123%" height="15" fill="rgb(228,45,11)" fg:x="1594" fg:w="1"/><text x="19.8107%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="19.5607%" y="821" width="0.0123%" height="15" fill="rgb(237,182,11)" fg:x="1594" fg:w="1"/><text x="19.8107%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="19.5607%" y="805" width="0.0123%" height="15" fill="rgb(241,175,49)" fg:x="1594" fg:w="1"/><text x="19.8107%" y="815.50"></text></g><g><title>wgpu::backend::native_gpu_future::new_gpu_future (2 samples, 0.02%)</title><rect x="19.5730%" y="933" width="0.0245%" height="15" fill="rgb(247,38,35)" fg:x="1595" fg:w="2"/><text x="19.8230%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="19.5730%" y="917" width="0.0245%" height="15" fill="rgb(228,39,49)" fg:x="1595" fg:w="2"/><text x="19.8230%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="19.5730%" y="901" width="0.0245%" height="15" fill="rgb(226,101,26)" fg:x="1595" fg:w="2"/><text x="19.8230%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="19.5730%" y="885" width="0.0245%" height="15" fill="rgb(206,141,19)" fg:x="1595" fg:w="2"/><text x="19.8230%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="19.5730%" y="869" width="0.0245%" height="15" fill="rgb(211,200,13)" fg:x="1595" fg:w="2"/><text x="19.8230%" y="879.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="19.5730%" y="853" width="0.0245%" height="15" fill="rgb(241,121,6)" fg:x="1595" fg:w="2"/><text x="19.8230%" y="863.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="19.5730%" y="837" width="0.0245%" height="15" fill="rgb(234,221,29)" fg:x="1595" fg:w="2"/><text x="19.8230%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="19.5730%" y="821" width="0.0245%" height="15" fill="rgb(229,136,5)" fg:x="1595" fg:w="2"/><text x="19.8230%" y="831.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="19.5730%" y="805" width="0.0245%" height="15" fill="rgb(238,36,11)" fg:x="1595" fg:w="2"/><text x="19.8230%" y="815.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::Index&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index (1 samples, 0.01%)</title><rect x="19.5975%" y="917" width="0.0123%" height="15" fill="rgb(251,55,41)" fg:x="1597" fg:w="1"/><text x="19.8475%" y="927.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.01%)</title><rect x="19.5975%" y="901" width="0.0123%" height="15" fill="rgb(242,34,40)" fg:x="1597" fg:w="1"/><text x="19.8475%" y="911.50"></text></g><g><title>wgpu::BufferSlice::map_async (4 samples, 0.05%)</title><rect x="19.5730%" y="965" width="0.0491%" height="15" fill="rgb(215,42,17)" fg:x="1595" fg:w="4"/><text x="19.8230%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (4 samples, 0.05%)</title><rect x="19.5730%" y="949" width="0.0491%" height="15" fill="rgb(207,44,46)" fg:x="1595" fg:w="4"/><text x="19.8230%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (2 samples, 0.02%)</title><rect x="19.5975%" y="933" width="0.0245%" height="15" fill="rgb(211,206,28)" fg:x="1597" fg:w="2"/><text x="19.8475%" y="943.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (1 samples, 0.01%)</title><rect x="19.6098%" y="917" width="0.0123%" height="15" fill="rgb(237,167,16)" fg:x="1598" fg:w="1"/><text x="19.8598%" y="927.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (1 samples, 0.01%)</title><rect x="19.6098%" y="901" width="0.0123%" height="15" fill="rgb(233,66,6)" fg:x="1598" fg:w="1"/><text x="19.8598%" y="911.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::get (1 samples, 0.01%)</title><rect x="19.6098%" y="885" width="0.0123%" height="15" fill="rgb(246,123,29)" fg:x="1598" fg:w="1"/><text x="19.8598%" y="895.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::get (1 samples, 0.01%)</title><rect x="19.6098%" y="869" width="0.0123%" height="15" fill="rgb(209,62,40)" fg:x="1598" fg:w="1"/><text x="19.8598%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (1 samples, 0.01%)</title><rect x="19.6220%" y="869" width="0.0123%" height="15" fill="rgb(218,4,25)" fg:x="1599" fg:w="1"/><text x="19.8720%" y="879.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="19.6220%" y="853" width="0.0123%" height="15" fill="rgb(253,91,49)" fg:x="1599" fg:w="1"/><text x="19.8720%" y="863.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (8 samples, 0.10%)</title><rect x="19.6220%" y="901" width="0.0982%" height="15" fill="rgb(228,155,29)" fg:x="1599" fg:w="8"/><text x="19.8720%" y="911.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::maintain (8 samples, 0.10%)</title><rect x="19.6220%" y="885" width="0.0982%" height="15" fill="rgb(243,57,37)" fg:x="1599" fg:w="8"/><text x="19.8720%" y="895.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::recycle (7 samples, 0.09%)</title><rect x="19.6343%" y="869" width="0.0859%" height="15" fill="rgb(244,167,17)" fg:x="1600" fg:w="7"/><text x="19.8843%" y="879.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::reset (7 samples, 0.09%)</title><rect x="19.6343%" y="853" width="0.0859%" height="15" fill="rgb(207,181,38)" fg:x="1600" fg:w="7"/><text x="19.8843%" y="863.50"></text></g><g><title>ash::device::DeviceV1_0::reset_command_buffer (7 samples, 0.09%)</title><rect x="19.6343%" y="837" width="0.0859%" height="15" fill="rgb(211,8,23)" fg:x="1600" fg:w="7"/><text x="19.8843%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::reset_command_buffer (7 samples, 0.09%)</title><rect x="19.6343%" y="821" width="0.0859%" height="15" fill="rgb(235,11,44)" fg:x="1600" fg:w="7"/><text x="19.8843%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.09%)</title><rect x="19.6343%" y="805" width="0.0859%" height="15" fill="rgb(248,18,52)" fg:x="1600" fg:w="7"/><text x="19.8843%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="19.6589%" y="789" width="0.0614%" height="15" fill="rgb(208,4,7)" fg:x="1602" fg:w="5"/><text x="19.9089%" y="799.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.7079%" y="773" width="0.0123%" height="15" fill="rgb(240,17,39)" fg:x="1606" fg:w="1"/><text x="19.9579%" y="783.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.7079%" y="757" width="0.0123%" height="15" fill="rgb(207,170,3)" fg:x="1606" fg:w="1"/><text x="19.9579%" y="767.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="19.7202%" y="901" width="0.0123%" height="15" fill="rgb(236,100,52)" fg:x="1607" fg:w="1"/><text x="19.9702%" y="911.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="19.7325%" y="885" width="0.0123%" height="15" fill="rgb(246,78,51)" fg:x="1608" fg:w="1"/><text x="19.9825%" y="895.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (1 samples, 0.01%)</title><rect x="19.7325%" y="869" width="0.0123%" height="15" fill="rgb(211,17,15)" fg:x="1608" fg:w="1"/><text x="19.9825%" y="879.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::cleanup (1 samples, 0.01%)</title><rect x="19.7325%" y="853" width="0.0123%" height="15" fill="rgb(209,59,46)" fg:x="1608" fg:w="1"/><text x="19.9825%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (1 samples, 0.01%)</title><rect x="19.7325%" y="837" width="0.0123%" height="15" fill="rgb(210,92,25)" fg:x="1608" fg:w="1"/><text x="19.9825%" y="847.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::destroy_buffer (4 samples, 0.05%)</title><rect x="19.7448%" y="869" width="0.0491%" height="15" fill="rgb(238,174,52)" fg:x="1609" fg:w="4"/><text x="19.9948%" y="879.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_buffer (4 samples, 0.05%)</title><rect x="19.7448%" y="853" width="0.0491%" height="15" fill="rgb(230,73,7)" fg:x="1609" fg:w="4"/><text x="19.9948%" y="863.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::destroy_buffer (4 samples, 0.05%)</title><rect x="19.7448%" y="837" width="0.0491%" height="15" fill="rgb(243,124,40)" fg:x="1609" fg:w="4"/><text x="19.9948%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="19.7448%" y="821" width="0.0491%" height="15" fill="rgb(244,170,11)" fg:x="1609" fg:w="4"/><text x="19.9948%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="19.7448%" y="805" width="0.0491%" height="15" fill="rgb(207,114,54)" fg:x="1609" fg:w="4"/><text x="19.9948%" y="815.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="19.7693%" y="789" width="0.0245%" height="15" fill="rgb(205,42,20)" fg:x="1611" fg:w="2"/><text x="20.0193%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.7816%" y="773" width="0.0123%" height="15" fill="rgb(230,30,28)" fg:x="1612" fg:w="1"/><text x="20.0316%" y="783.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="19.7938%" y="821" width="0.0123%" height="15" fill="rgb(205,73,54)" fg:x="1613" fg:w="1"/><text x="20.0438%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;gpu_alloc::linear::LinearBlock&lt;gfx_backend_vulkan::native::Memory&gt;&gt; (1 samples, 0.01%)</title><rect x="19.7938%" y="805" width="0.0123%" height="15" fill="rgb(254,227,23)" fg:x="1613" fg:w="1"/><text x="20.0438%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;gfx_backend_vulkan::native::Memory&gt;&gt; (1 samples, 0.01%)</title><rect x="19.7938%" y="789" width="0.0123%" height="15" fill="rgb(228,202,34)" fg:x="1613" fg:w="1"/><text x="20.0438%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="19.7938%" y="773" width="0.0123%" height="15" fill="rgb(222,225,37)" fg:x="1613" fg:w="1"/><text x="20.0438%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="19.7938%" y="757" width="0.0123%" height="15" fill="rgb(221,14,54)" fg:x="1613" fg:w="1"/><text x="20.0438%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="19.7938%" y="741" width="0.0123%" height="15" fill="rgb(254,102,2)" fg:x="1613" fg:w="1"/><text x="20.0438%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.01%)</title><rect x="19.8061%" y="821" width="0.0123%" height="15" fill="rgb(232,104,17)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="831.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="19.8061%" y="805" width="0.0123%" height="15" fill="rgb(250,220,14)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="815.50"></text></g><g><title>tracing::span::Span::do_exit (1 samples, 0.01%)</title><rect x="19.8061%" y="789" width="0.0123%" height="15" fill="rgb(241,158,9)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="799.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (1 samples, 0.01%)</title><rect x="19.8061%" y="773" width="0.0123%" height="15" fill="rgb(246,9,43)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="19.8061%" y="757" width="0.0123%" height="15" fill="rgb(206,73,33)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="19.8061%" y="741" width="0.0123%" height="15" fill="rgb(222,79,8)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="19.8061%" y="725" width="0.0123%" height="15" fill="rgb(234,8,54)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.01%)</title><rect x="19.8061%" y="709" width="0.0123%" height="15" fill="rgb(209,134,38)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="719.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (1 samples, 0.01%)</title><rect x="19.8061%" y="693" width="0.0123%" height="15" fill="rgb(230,127,29)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="703.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="19.8061%" y="677" width="0.0123%" height="15" fill="rgb(242,44,41)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="687.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.01%)</title><rect x="19.8061%" y="661" width="0.0123%" height="15" fill="rgb(222,56,43)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="671.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.01%)</title><rect x="19.8061%" y="645" width="0.0123%" height="15" fill="rgb(238,39,47)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="655.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="19.8061%" y="629" width="0.0123%" height="15" fill="rgb(226,79,43)" fg:x="1614" fg:w="1"/><text x="20.0561%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.01%)</title><rect x="19.8184%" y="821" width="0.0123%" height="15" fill="rgb(242,105,53)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="831.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="19.8184%" y="805" width="0.0123%" height="15" fill="rgb(251,132,46)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="815.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="19.8184%" y="789" width="0.0123%" height="15" fill="rgb(231,77,14)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="19.8184%" y="773" width="0.0123%" height="15" fill="rgb(240,135,9)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="19.8184%" y="757" width="0.0123%" height="15" fill="rgb(248,109,14)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.01%)</title><rect x="19.8184%" y="741" width="0.0123%" height="15" fill="rgb(227,146,52)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.01%)</title><rect x="19.8184%" y="725" width="0.0123%" height="15" fill="rgb(232,54,3)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="19.8184%" y="709" width="0.0123%" height="15" fill="rgb(229,201,43)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="19.8184%" y="693" width="0.0123%" height="15" fill="rgb(252,161,33)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.01%)</title><rect x="19.8184%" y="677" width="0.0123%" height="15" fill="rgb(226,146,40)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="687.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (1 samples, 0.01%)</title><rect x="19.8184%" y="661" width="0.0123%" height="15" fill="rgb(219,47,25)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="19.8184%" y="645" width="0.0123%" height="15" fill="rgb(250,135,13)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="655.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="19.8184%" y="629" width="0.0123%" height="15" fill="rgb(219,229,18)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="639.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (1 samples, 0.01%)</title><rect x="19.8184%" y="613" width="0.0123%" height="15" fill="rgb(217,152,27)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="623.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (1 samples, 0.01%)</title><rect x="19.8184%" y="597" width="0.0123%" height="15" fill="rgb(225,71,47)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="607.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="19.8184%" y="581" width="0.0123%" height="15" fill="rgb(220,139,14)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="591.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::{{closure}} (1 samples, 0.01%)</title><rect x="19.8184%" y="565" width="0.0123%" height="15" fill="rgb(247,54,32)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="575.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (1 samples, 0.01%)</title><rect x="19.8184%" y="549" width="0.0123%" height="15" fill="rgb(252,131,39)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="559.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (1 samples, 0.01%)</title><rect x="19.8184%" y="533" width="0.0123%" height="15" fill="rgb(210,108,39)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="543.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (1 samples, 0.01%)</title><rect x="19.8184%" y="517" width="0.0123%" height="15" fill="rgb(205,23,29)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="527.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="19.8184%" y="501" width="0.0123%" height="15" fill="rgb(246,139,46)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="511.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::{{closure}} (1 samples, 0.01%)</title><rect x="19.8184%" y="485" width="0.0123%" height="15" fill="rgb(250,81,26)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="495.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}} (1 samples, 0.01%)</title><rect x="19.8184%" y="469" width="0.0123%" height="15" fill="rgb(214,104,7)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="19.8184%" y="453" width="0.0123%" height="15" fill="rgb(233,189,8)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="463.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="19.8184%" y="437" width="0.0123%" height="15" fill="rgb(228,141,17)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (1 samples, 0.01%)</title><rect x="19.8184%" y="421" width="0.0123%" height="15" fill="rgb(247,157,1)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="431.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::clear (1 samples, 0.01%)</title><rect x="19.8184%" y="405" width="0.0123%" height="15" fill="rgb(249,225,5)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (1 samples, 0.01%)</title><rect x="19.8184%" y="389" width="0.0123%" height="15" fill="rgb(242,55,13)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="19.8184%" y="373" width="0.0123%" height="15" fill="rgb(230,49,50)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="19.8184%" y="357" width="0.0123%" height="15" fill="rgb(241,111,38)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="19.8184%" y="341" width="0.0123%" height="15" fill="rgb(252,155,4)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="19.8184%" y="325" width="0.0123%" height="15" fill="rgb(212,69,32)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="19.8184%" y="309" width="0.0123%" height="15" fill="rgb(243,107,47)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt; (1 samples, 0.01%)</title><rect x="19.8184%" y="293" width="0.0123%" height="15" fill="rgb(247,130,12)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (1 samples, 0.01%)</title><rect x="19.8184%" y="277" width="0.0123%" height="15" fill="rgb(233,74,16)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="287.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="19.8184%" y="261" width="0.0123%" height="15" fill="rgb(208,58,18)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="271.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.8184%" y="245" width="0.0123%" height="15" fill="rgb(242,225,1)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="255.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="19.8184%" y="229" width="0.0123%" height="15" fill="rgb(249,39,40)" fg:x="1615" fg:w="1"/><text x="20.0684%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="19.8307%" y="501" width="0.0123%" height="15" fill="rgb(207,72,44)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="19.8307%" y="485" width="0.0123%" height="15" fill="rgb(215,193,12)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="495.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="19.8307%" y="469" width="0.0123%" height="15" fill="rgb(248,41,39)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="19.8307%" y="453" width="0.0123%" height="15" fill="rgb(253,85,4)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="19.8307%" y="437" width="0.0123%" height="15" fill="rgb(243,70,31)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="19.8307%" y="421" width="0.0123%" height="15" fill="rgb(253,195,26)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="19.8307%" y="405" width="0.0123%" height="15" fill="rgb(243,42,11)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="19.8307%" y="389" width="0.0123%" height="15" fill="rgb(239,66,17)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="19.8307%" y="373" width="0.0123%" height="15" fill="rgb(217,132,21)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="19.8307%" y="357" width="0.0123%" height="15" fill="rgb(252,202,21)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="367.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="19.8307%" y="341" width="0.0123%" height="15" fill="rgb(233,98,36)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="351.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="19.8307%" y="325" width="0.0123%" height="15" fill="rgb(216,153,54)" fg:x="1616" fg:w="1"/><text x="20.0807%" y="335.50"></text></g><g><title>core::fmt::Formatter::debug_struct (1 samples, 0.01%)</title><rect x="19.8429%" y="485" width="0.0123%" height="15" fill="rgb(250,99,7)" fg:x="1617" fg:w="1"/><text x="20.0929%" y="495.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.01%)</title><rect x="19.8429%" y="469" width="0.0123%" height="15" fill="rgb(207,56,50)" fg:x="1617" fg:w="1"/><text x="20.0929%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="19.8429%" y="453" width="0.0123%" height="15" fill="rgb(244,61,34)" fg:x="1617" fg:w="1"/><text x="20.0929%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="19.8429%" y="437" width="0.0123%" height="15" fill="rgb(241,50,38)" fg:x="1617" fg:w="1"/><text x="20.0929%" y="447.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="19.8429%" y="421" width="0.0123%" height="15" fill="rgb(212,166,30)" fg:x="1617" fg:w="1"/><text x="20.0929%" y="431.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="19.8429%" y="405" width="0.0123%" height="15" fill="rgb(249,127,32)" fg:x="1617" fg:w="1"/><text x="20.0929%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="19.8429%" y="389" width="0.0123%" height="15" fill="rgb(209,103,0)" fg:x="1617" fg:w="1"/><text x="20.0929%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="19.8429%" y="373" width="0.0123%" height="15" fill="rgb(238,209,51)" fg:x="1617" fg:w="1"/><text x="20.0929%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="19.8429%" y="357" width="0.0123%" height="15" fill="rgb(237,56,23)" fg:x="1617" fg:w="1"/><text x="20.0929%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="19.8429%" y="341" width="0.0123%" height="15" fill="rgb(215,153,46)" fg:x="1617" fg:w="1"/><text x="20.0929%" y="351.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="19.8429%" y="501" width="0.0368%" height="15" fill="rgb(224,49,31)" fg:x="1617" fg:w="3"/><text x="20.0929%" y="511.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="19.8552%" y="485" width="0.0245%" height="15" fill="rgb(250,18,42)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="19.8552%" y="469" width="0.0245%" height="15" fill="rgb(215,176,39)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="479.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.02%)</title><rect x="19.8552%" y="453" width="0.0245%" height="15" fill="rgb(223,77,29)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.02%)</title><rect x="19.8552%" y="437" width="0.0245%" height="15" fill="rgb(234,94,52)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="19.8552%" y="421" width="0.0245%" height="15" fill="rgb(220,154,50)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="19.8552%" y="405" width="0.0245%" height="15" fill="rgb(212,11,10)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="415.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="19.8552%" y="389" width="0.0245%" height="15" fill="rgb(205,166,19)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="19.8552%" y="373" width="0.0245%" height="15" fill="rgb(244,198,16)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="19.8552%" y="357" width="0.0245%" height="15" fill="rgb(219,69,12)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="19.8552%" y="341" width="0.0245%" height="15" fill="rgb(245,30,7)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="19.8552%" y="325" width="0.0245%" height="15" fill="rgb(218,221,48)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="19.8552%" y="309" width="0.0245%" height="15" fill="rgb(216,66,15)" fg:x="1618" fg:w="2"/><text x="20.1052%" y="319.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (6 samples, 0.07%)</title><rect x="19.8307%" y="549" width="0.0736%" height="15" fill="rgb(226,122,50)" fg:x="1616" fg:w="6"/><text x="20.0807%" y="559.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.07%)</title><rect x="19.8307%" y="533" width="0.0736%" height="15" fill="rgb(239,156,16)" fg:x="1616" fg:w="6"/><text x="20.0807%" y="543.50"></text></g><g><title>core::fmt::write (6 samples, 0.07%)</title><rect x="19.8307%" y="517" width="0.0736%" height="15" fill="rgb(224,27,38)" fg:x="1616" fg:w="6"/><text x="20.0807%" y="527.50"></text></g><g><title>&lt;gpu_alloc::linear::LinearBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="19.8797%" y="501" width="0.0245%" height="15" fill="rgb(224,39,27)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="511.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="19.8797%" y="485" width="0.0245%" height="15" fill="rgb(215,92,29)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="19.8797%" y="469" width="0.0245%" height="15" fill="rgb(207,159,16)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="479.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.02%)</title><rect x="19.8797%" y="453" width="0.0245%" height="15" fill="rgb(238,163,47)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="19.8797%" y="437" width="0.0245%" height="15" fill="rgb(219,91,49)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="19.8797%" y="421" width="0.0245%" height="15" fill="rgb(227,167,31)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="431.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::Memory as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="19.8797%" y="405" width="0.0245%" height="15" fill="rgb(234,80,54)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="415.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="19.8797%" y="389" width="0.0245%" height="15" fill="rgb(212,114,2)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="19.8797%" y="373" width="0.0245%" height="15" fill="rgb(234,50,24)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.02%)</title><rect x="19.8797%" y="357" width="0.0245%" height="15" fill="rgb(221,68,8)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.02%)</title><rect x="19.8797%" y="341" width="0.0245%" height="15" fill="rgb(254,180,31)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="351.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="19.8797%" y="325" width="0.0245%" height="15" fill="rgb(247,130,50)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="335.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="19.8797%" y="309" width="0.0245%" height="15" fill="rgb(211,109,4)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="319.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="19.8797%" y="293" width="0.0245%" height="15" fill="rgb(238,50,21)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="19.8797%" y="277" width="0.0245%" height="15" fill="rgb(225,57,45)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="19.8797%" y="261" width="0.0245%" height="15" fill="rgb(209,196,50)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="19.8797%" y="245" width="0.0245%" height="15" fill="rgb(242,140,13)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="19.8797%" y="229" width="0.0245%" height="15" fill="rgb(217,111,7)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="19.8797%" y="213" width="0.0245%" height="15" fill="rgb(253,193,51)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="19.8797%" y="197" width="0.0245%" height="15" fill="rgb(252,70,29)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="19.8797%" y="181" width="0.0245%" height="15" fill="rgb(232,127,12)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="19.8797%" y="165" width="0.0245%" height="15" fill="rgb(211,180,21)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="19.8797%" y="149" width="0.0245%" height="15" fill="rgb(229,72,13)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="159.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="19.8797%" y="133" width="0.0245%" height="15" fill="rgb(240,211,49)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="143.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="19.8797%" y="117" width="0.0245%" height="15" fill="rgb(219,149,40)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="127.50"></text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="19.8797%" y="101" width="0.0245%" height="15" fill="rgb(210,127,46)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="19.8797%" y="85" width="0.0245%" height="15" fill="rgb(220,106,7)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="95.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="19.8797%" y="69" width="0.0245%" height="15" fill="rgb(249,31,22)" fg:x="1620" fg:w="2"/><text x="20.1297%" y="79.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="19.8920%" y="53" width="0.0123%" height="15" fill="rgb(253,1,49)" fg:x="1621" fg:w="1"/><text x="20.1420%" y="63.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="19.8920%" y="37" width="0.0123%" height="15" fill="rgb(227,144,33)" fg:x="1621" fg:w="1"/><text x="20.1420%" y="47.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (7 samples, 0.09%)</title><rect x="19.8307%" y="661" width="0.0859%" height="15" fill="rgb(249,163,44)" fg:x="1616" fg:w="7"/><text x="20.0807%" y="671.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (7 samples, 0.09%)</title><rect x="19.8307%" y="645" width="0.0859%" height="15" fill="rgb(234,15,39)" fg:x="1616" fg:w="7"/><text x="20.0807%" y="655.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (7 samples, 0.09%)</title><rect x="19.8307%" y="629" width="0.0859%" height="15" fill="rgb(207,66,16)" fg:x="1616" fg:w="7"/><text x="20.0807%" y="639.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (7 samples, 0.09%)</title><rect x="19.8307%" y="613" width="0.0859%" height="15" fill="rgb(233,112,24)" fg:x="1616" fg:w="7"/><text x="20.0807%" y="623.50"></text></g><g><title>tracing_core::span::Attributes::record (7 samples, 0.09%)</title><rect x="19.8307%" y="597" width="0.0859%" height="15" fill="rgb(230,90,22)" fg:x="1616" fg:w="7"/><text x="20.0807%" y="607.50"></text></g><g><title>tracing_core::field::ValueSet::record (7 samples, 0.09%)</title><rect x="19.8307%" y="581" width="0.0859%" height="15" fill="rgb(229,61,13)" fg:x="1616" fg:w="7"/><text x="20.0807%" y="591.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (7 samples, 0.09%)</title><rect x="19.8307%" y="565" width="0.0859%" height="15" fill="rgb(225,57,24)" fg:x="1616" fg:w="7"/><text x="20.0807%" y="575.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (1 samples, 0.01%)</title><rect x="19.9043%" y="549" width="0.0123%" height="15" fill="rgb(208,169,48)" fg:x="1622" fg:w="1"/><text x="20.1543%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="19.9043%" y="533" width="0.0123%" height="15" fill="rgb(244,218,51)" fg:x="1622" fg:w="1"/><text x="20.1543%" y="543.50"></text></g><g><title>tracing_subscriber::fmt::format::DefaultVisitor::maybe_pad (1 samples, 0.01%)</title><rect x="19.9043%" y="517" width="0.0123%" height="15" fill="rgb(214,148,10)" fg:x="1622" fg:w="1"/><text x="20.1543%" y="527.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.01%)</title><rect x="19.9043%" y="501" width="0.0123%" height="15" fill="rgb(225,174,27)" fg:x="1622" fg:w="1"/><text x="20.1543%" y="511.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::dealloc (11 samples, 0.13%)</title><rect x="19.7938%" y="837" width="0.1350%" height="15" fill="rgb(230,96,26)" fg:x="1613" fg:w="11"/><text x="20.0438%" y="847.50"></text></g><g><title>tracing::span::Span::new (8 samples, 0.10%)</title><rect x="19.8307%" y="821" width="0.0982%" height="15" fill="rgb(232,10,30)" fg:x="1616" fg:w="8"/><text x="20.0807%" y="831.50"></text></g><g><title>tracing_core::dispatcher::get_default (8 samples, 0.10%)</title><rect x="19.8307%" y="805" width="0.0982%" height="15" fill="rgb(222,8,50)" fg:x="1616" fg:w="8"/><text x="20.0807%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.10%)</title><rect x="19.8307%" y="789" width="0.0982%" height="15" fill="rgb(213,81,27)" fg:x="1616" fg:w="8"/><text x="20.0807%" y="799.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (8 samples, 0.10%)</title><rect x="19.8307%" y="773" width="0.0982%" height="15" fill="rgb(245,50,10)" fg:x="1616" fg:w="8"/><text x="20.0807%" y="783.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (8 samples, 0.10%)</title><rect x="19.8307%" y="757" width="0.0982%" height="15" fill="rgb(216,100,18)" fg:x="1616" fg:w="8"/><text x="20.0807%" y="767.50"></text></g><g><title>tracing::span::Span::new_with (8 samples, 0.10%)</title><rect x="19.8307%" y="741" width="0.0982%" height="15" fill="rgb(236,147,54)" fg:x="1616" fg:w="8"/><text x="20.0807%" y="751.50"></text></g><g><title>tracing::span::Span::make_with (8 samples, 0.10%)</title><rect x="19.8307%" y="725" width="0.0982%" height="15" fill="rgb(205,143,26)" fg:x="1616" fg:w="8"/><text x="20.0807%" y="735.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (8 samples, 0.10%)</title><rect x="19.8307%" y="709" width="0.0982%" height="15" fill="rgb(236,26,9)" fg:x="1616" fg:w="8"/><text x="20.0807%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (8 samples, 0.10%)</title><rect x="19.8307%" y="693" width="0.0982%" height="15" fill="rgb(221,165,53)" fg:x="1616" fg:w="8"/><text x="20.0807%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (8 samples, 0.10%)</title><rect x="19.8307%" y="677" width="0.0982%" height="15" fill="rgb(214,110,17)" fg:x="1616" fg:w="8"/><text x="20.0807%" y="687.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="19.9166%" y="661" width="0.0123%" height="15" fill="rgb(237,197,12)" fg:x="1623" fg:w="1"/><text x="20.1666%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="19.9166%" y="645" width="0.0123%" height="15" fill="rgb(205,84,17)" fg:x="1623" fg:w="1"/><text x="20.1666%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (1 samples, 0.01%)</title><rect x="19.9166%" y="629" width="0.0123%" height="15" fill="rgb(237,18,45)" fg:x="1623" fg:w="1"/><text x="20.1666%" y="639.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="19.9166%" y="613" width="0.0123%" height="15" fill="rgb(221,87,14)" fg:x="1623" fg:w="1"/><text x="20.1666%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (1 samples, 0.01%)</title><rect x="19.9166%" y="597" width="0.0123%" height="15" fill="rgb(238,186,15)" fg:x="1623" fg:w="1"/><text x="20.1666%" y="607.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (1 samples, 0.01%)</title><rect x="19.9166%" y="581" width="0.0123%" height="15" fill="rgb(208,115,11)" fg:x="1623" fg:w="1"/><text x="20.1666%" y="591.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="19.9166%" y="565" width="0.0123%" height="15" fill="rgb(254,175,0)" fg:x="1623" fg:w="1"/><text x="20.1666%" y="575.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="19.9166%" y="549" width="0.0123%" height="15" fill="rgb(227,24,42)" fg:x="1623" fg:w="1"/><text x="20.1666%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (3 samples, 0.04%)</title><rect x="19.9288%" y="741" width="0.0368%" height="15" fill="rgb(223,211,37)" fg:x="1624" fg:w="3"/><text x="20.1788%" y="751.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (3 samples, 0.04%)</title><rect x="19.9288%" y="725" width="0.0368%" height="15" fill="rgb(235,49,27)" fg:x="1624" fg:w="3"/><text x="20.1788%" y="735.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (3 samples, 0.04%)</title><rect x="19.9288%" y="709" width="0.0368%" height="15" fill="rgb(254,97,51)" fg:x="1624" fg:w="3"/><text x="20.1788%" y="719.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (3 samples, 0.04%)</title><rect x="19.9288%" y="693" width="0.0368%" height="15" fill="rgb(249,51,40)" fg:x="1624" fg:w="3"/><text x="20.1788%" y="703.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (3 samples, 0.04%)</title><rect x="19.9288%" y="677" width="0.0368%" height="15" fill="rgb(210,128,45)" fg:x="1624" fg:w="3"/><text x="20.1788%" y="687.50"></text></g><g><title>tracing::span::Span::enter (4 samples, 0.05%)</title><rect x="19.9288%" y="837" width="0.0491%" height="15" fill="rgb(224,137,50)" fg:x="1624" fg:w="4"/><text x="20.1788%" y="847.50"></text></g><g><title>tracing::span::Span::do_enter (4 samples, 0.05%)</title><rect x="19.9288%" y="821" width="0.0491%" height="15" fill="rgb(242,15,9)" fg:x="1624" fg:w="4"/><text x="20.1788%" y="831.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (4 samples, 0.05%)</title><rect x="19.9288%" y="805" width="0.0491%" height="15" fill="rgb(233,187,41)" fg:x="1624" fg:w="4"/><text x="20.1788%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enter (4 samples, 0.05%)</title><rect x="19.9288%" y="789" width="0.0491%" height="15" fill="rgb(227,2,29)" fg:x="1624" fg:w="4"/><text x="20.1788%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (4 samples, 0.05%)</title><rect x="19.9288%" y="773" width="0.0491%" height="15" fill="rgb(222,70,3)" fg:x="1624" fg:w="4"/><text x="20.1788%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (4 samples, 0.05%)</title><rect x="19.9288%" y="757" width="0.0491%" height="15" fill="rgb(213,11,42)" fg:x="1624" fg:w="4"/><text x="20.1788%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (1 samples, 0.01%)</title><rect x="19.9656%" y="741" width="0.0123%" height="15" fill="rgb(225,150,9)" fg:x="1627" fg:w="1"/><text x="20.2156%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="19.9656%" y="725" width="0.0123%" height="15" fill="rgb(230,162,45)" fg:x="1627" fg:w="1"/><text x="20.2156%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="19.9656%" y="709" width="0.0123%" height="15" fill="rgb(222,14,52)" fg:x="1627" fg:w="1"/><text x="20.2156%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="19.9779%" y="517" width="0.0123%" height="15" fill="rgb(254,198,14)" fg:x="1628" fg:w="1"/><text x="20.2279%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="19.9779%" y="501" width="0.0123%" height="15" fill="rgb(220,217,30)" fg:x="1628" fg:w="1"/><text x="20.2279%" y="511.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="19.9779%" y="485" width="0.0123%" height="15" fill="rgb(215,146,41)" fg:x="1628" fg:w="1"/><text x="20.2279%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="19.9779%" y="469" width="0.0123%" height="15" fill="rgb(217,27,36)" fg:x="1628" fg:w="1"/><text x="20.2279%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="19.9779%" y="453" width="0.0123%" height="15" fill="rgb(219,218,39)" fg:x="1628" fg:w="1"/><text x="20.2279%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="19.9779%" y="437" width="0.0123%" height="15" fill="rgb(219,4,42)" fg:x="1628" fg:w="1"/><text x="20.2279%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="19.9779%" y="421" width="0.0123%" height="15" fill="rgb(249,119,36)" fg:x="1628" fg:w="1"/><text x="20.2279%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="19.9779%" y="405" width="0.0123%" height="15" fill="rgb(209,23,33)" fg:x="1628" fg:w="1"/><text x="20.2279%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="19.9779%" y="389" width="0.0123%" height="15" fill="rgb(211,10,0)" fg:x="1628" fg:w="1"/><text x="20.2279%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="19.9779%" y="373" width="0.0123%" height="15" fill="rgb(208,99,37)" fg:x="1628" fg:w="1"/><text x="20.2279%" y="383.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="19.9779%" y="357" width="0.0123%" height="15" fill="rgb(213,132,31)" fg:x="1628" fg:w="1"/><text x="20.2279%" y="367.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.04%)</title><rect x="19.9779%" y="549" width="0.0368%" height="15" fill="rgb(243,129,40)" fg:x="1628" fg:w="3"/><text x="20.2279%" y="559.50"></text></g><g><title>core::fmt::write (3 samples, 0.04%)</title><rect x="19.9779%" y="533" width="0.0368%" height="15" fill="rgb(210,66,33)" fg:x="1628" fg:w="3"/><text x="20.2279%" y="543.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="19.9902%" y="517" width="0.0245%" height="15" fill="rgb(209,189,4)" fg:x="1629" fg:w="2"/><text x="20.2402%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="19.9902%" y="501" width="0.0245%" height="15" fill="rgb(214,107,37)" fg:x="1629" fg:w="2"/><text x="20.2402%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="19.9902%" y="485" width="0.0245%" height="15" fill="rgb(245,88,54)" fg:x="1629" fg:w="2"/><text x="20.2402%" y="495.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.02%)</title><rect x="19.9902%" y="469" width="0.0245%" height="15" fill="rgb(205,146,20)" fg:x="1629" fg:w="2"/><text x="20.2402%" y="479.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlockFlavor&lt;M&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="19.9902%" y="453" width="0.0245%" height="15" fill="rgb(220,161,25)" fg:x="1629" fg:w="2"/><text x="20.2402%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="19.9902%" y="437" width="0.0245%" height="15" fill="rgb(215,152,15)" fg:x="1629" fg:w="2"/><text x="20.2402%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="19.9902%" y="421" width="0.0245%" height="15" fill="rgb(233,192,44)" fg:x="1629" fg:w="2"/><text x="20.2402%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.02%)</title><rect x="19.9902%" y="405" width="0.0245%" height="15" fill="rgb(240,170,46)" fg:x="1629" fg:w="2"/><text x="20.2402%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="20.0025%" y="389" width="0.0123%" height="15" fill="rgb(207,104,33)" fg:x="1630" fg:w="1"/><text x="20.2525%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="20.0025%" y="373" width="0.0123%" height="15" fill="rgb(219,21,39)" fg:x="1630" fg:w="1"/><text x="20.2525%" y="383.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::Memory as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="20.0025%" y="357" width="0.0123%" height="15" fill="rgb(214,133,29)" fg:x="1630" fg:w="1"/><text x="20.2525%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="20.0025%" y="341" width="0.0123%" height="15" fill="rgb(226,93,6)" fg:x="1630" fg:w="1"/><text x="20.2525%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="20.0025%" y="325" width="0.0123%" height="15" fill="rgb(252,222,34)" fg:x="1630" fg:w="1"/><text x="20.2525%" y="335.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="20.0025%" y="309" width="0.0123%" height="15" fill="rgb(252,92,48)" fg:x="1630" fg:w="1"/><text x="20.2525%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="20.0025%" y="293" width="0.0123%" height="15" fill="rgb(245,223,24)" fg:x="1630" fg:w="1"/><text x="20.2525%" y="303.50"></text></g><g><title>&lt;ash::vk::definitions::Pipeline as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="20.0025%" y="277" width="0.0123%" height="15" fill="rgb(205,176,3)" fg:x="1630" fg:w="1"/><text x="20.2525%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="20.0025%" y="261" width="0.0123%" height="15" fill="rgb(235,151,15)" fg:x="1630" fg:w="1"/><text x="20.2525%" y="271.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="20.0025%" y="245" width="0.0123%" height="15" fill="rgb(237,209,11)" fg:x="1630" fg:w="1"/><text x="20.2525%" y="255.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i64&gt;::fmt (1 samples, 0.01%)</title><rect x="20.0025%" y="229" width="0.0123%" height="15" fill="rgb(243,227,24)" fg:x="1630" fg:w="1"/><text x="20.2525%" y="239.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (4 samples, 0.05%)</title><rect x="19.9779%" y="661" width="0.0491%" height="15" fill="rgb(239,193,16)" fg:x="1628" fg:w="4"/><text x="20.2279%" y="671.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (4 samples, 0.05%)</title><rect x="19.9779%" y="645" width="0.0491%" height="15" fill="rgb(231,27,9)" fg:x="1628" fg:w="4"/><text x="20.2279%" y="655.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (4 samples, 0.05%)</title><rect x="19.9779%" y="629" width="0.0491%" height="15" fill="rgb(219,169,10)" fg:x="1628" fg:w="4"/><text x="20.2279%" y="639.50"></text></g><g><title>tracing_core::span::Attributes::record (4 samples, 0.05%)</title><rect x="19.9779%" y="613" width="0.0491%" height="15" fill="rgb(244,229,43)" fg:x="1628" fg:w="4"/><text x="20.2279%" y="623.50"></text></g><g><title>tracing_core::field::ValueSet::record (4 samples, 0.05%)</title><rect x="19.9779%" y="597" width="0.0491%" height="15" fill="rgb(254,38,20)" fg:x="1628" fg:w="4"/><text x="20.2279%" y="607.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (4 samples, 0.05%)</title><rect x="19.9779%" y="581" width="0.0491%" height="15" fill="rgb(250,47,30)" fg:x="1628" fg:w="4"/><text x="20.2279%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (4 samples, 0.05%)</title><rect x="19.9779%" y="565" width="0.0491%" height="15" fill="rgb(224,124,36)" fg:x="1628" fg:w="4"/><text x="20.2279%" y="575.50"></text></g><g><title>tracing_core::field::Field::name (1 samples, 0.01%)</title><rect x="20.0147%" y="549" width="0.0123%" height="15" fill="rgb(246,68,51)" fg:x="1631" fg:w="1"/><text x="20.2647%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (5 samples, 0.06%)</title><rect x="19.9779%" y="677" width="0.0614%" height="15" fill="rgb(253,43,49)" fg:x="1628" fg:w="5"/><text x="20.2279%" y="687.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::insert (1 samples, 0.01%)</title><rect x="20.0270%" y="661" width="0.0123%" height="15" fill="rgb(219,54,36)" fg:x="1632" fg:w="1"/><text x="20.2770%" y="671.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::replace (1 samples, 0.01%)</title><rect x="20.0270%" y="645" width="0.0123%" height="15" fill="rgb(227,133,34)" fg:x="1632" fg:w="1"/><text x="20.2770%" y="655.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::insert (1 samples, 0.01%)</title><rect x="20.0270%" y="629" width="0.0123%" height="15" fill="rgb(247,227,15)" fg:x="1632" fg:w="1"/><text x="20.2770%" y="639.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="20.0270%" y="613" width="0.0123%" height="15" fill="rgb(229,96,14)" fg:x="1632" fg:w="1"/><text x="20.2770%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="20.0270%" y="597" width="0.0123%" height="15" fill="rgb(220,79,17)" fg:x="1632" fg:w="1"/><text x="20.2770%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="20.0270%" y="581" width="0.0123%" height="15" fill="rgb(205,131,53)" fg:x="1632" fg:w="1"/><text x="20.2770%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="20.0270%" y="565" width="0.0123%" height="15" fill="rgb(209,50,29)" fg:x="1632" fg:w="1"/><text x="20.2770%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="20.0270%" y="549" width="0.0123%" height="15" fill="rgb(245,86,46)" fg:x="1632" fg:w="1"/><text x="20.2770%" y="559.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="20.0270%" y="533" width="0.0123%" height="15" fill="rgb(235,66,46)" fg:x="1632" fg:w="1"/><text x="20.2770%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="20.0270%" y="517" width="0.0123%" height="15" fill="rgb(232,148,31)" fg:x="1632" fg:w="1"/><text x="20.2770%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="20.0270%" y="501" width="0.0123%" height="15" fill="rgb(217,149,8)" fg:x="1632" fg:w="1"/><text x="20.2770%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="20.0393%" y="661" width="0.0123%" height="15" fill="rgb(209,183,11)" fg:x="1633" fg:w="1"/><text x="20.2893%" y="671.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="20.0393%" y="645" width="0.0123%" height="15" fill="rgb(208,55,20)" fg:x="1633" fg:w="1"/><text x="20.2893%" y="655.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.01%)</title><rect x="20.0393%" y="629" width="0.0123%" height="15" fill="rgb(218,39,14)" fg:x="1633" fg:w="1"/><text x="20.2893%" y="639.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.01%)</title><rect x="20.0393%" y="613" width="0.0123%" height="15" fill="rgb(216,169,33)" fg:x="1633" fg:w="1"/><text x="20.2893%" y="623.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="20.0393%" y="597" width="0.0123%" height="15" fill="rgb(233,80,24)" fg:x="1633" fg:w="1"/><text x="20.2893%" y="607.50"></text></g><g><title>tracing::span::Span::make_with (7 samples, 0.09%)</title><rect x="19.9779%" y="741" width="0.0859%" height="15" fill="rgb(213,179,31)" fg:x="1628" fg:w="7"/><text x="20.2279%" y="751.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (7 samples, 0.09%)</title><rect x="19.9779%" y="725" width="0.0859%" height="15" fill="rgb(209,19,5)" fg:x="1628" fg:w="7"/><text x="20.2279%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (7 samples, 0.09%)</title><rect x="19.9779%" y="709" width="0.0859%" height="15" fill="rgb(219,18,35)" fg:x="1628" fg:w="7"/><text x="20.2279%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (7 samples, 0.09%)</title><rect x="19.9779%" y="693" width="0.0859%" height="15" fill="rgb(209,169,16)" fg:x="1628" fg:w="7"/><text x="20.2279%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="20.0393%" y="677" width="0.0245%" height="15" fill="rgb(245,90,51)" fg:x="1633" fg:w="2"/><text x="20.2893%" y="687.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="20.0515%" y="661" width="0.0123%" height="15" fill="rgb(220,99,45)" fg:x="1634" fg:w="1"/><text x="20.3015%" y="671.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create_with (1 samples, 0.01%)</title><rect x="20.0515%" y="645" width="0.0123%" height="15" fill="rgb(249,89,25)" fg:x="1634" fg:w="1"/><text x="20.3015%" y="655.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create (1 samples, 0.01%)</title><rect x="20.0515%" y="629" width="0.0123%" height="15" fill="rgb(239,193,0)" fg:x="1634" fg:w="1"/><text x="20.3015%" y="639.50"></text></g><g><title>sharded_slab::shard::Array&lt;T,C&gt;::current (1 samples, 0.01%)</title><rect x="20.0515%" y="613" width="0.0123%" height="15" fill="rgb(231,126,1)" fg:x="1634" fg:w="1"/><text x="20.3015%" y="623.50"></text></g><g><title>sharded_slab::shard::Ptr&lt;T,C&gt;::load (1 samples, 0.01%)</title><rect x="20.0515%" y="597" width="0.0123%" height="15" fill="rgb(243,166,3)" fg:x="1634" fg:w="1"/><text x="20.3015%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="20.0515%" y="581" width="0.0123%" height="15" fill="rgb(223,22,34)" fg:x="1634" fg:w="1"/><text x="20.3015%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="20.0515%" y="565" width="0.0123%" height="15" fill="rgb(251,52,51)" fg:x="1634" fg:w="1"/><text x="20.3015%" y="575.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (23 samples, 0.28%)</title><rect x="19.7938%" y="869" width="0.2822%" height="15" fill="rgb(221,165,28)" fg:x="1613" fg:w="23"/><text x="20.0438%" y="879.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (23 samples, 0.28%)</title><rect x="19.7938%" y="853" width="0.2822%" height="15" fill="rgb(218,121,47)" fg:x="1613" fg:w="23"/><text x="20.0438%" y="863.50"></text></g><g><title>tracing::span::Span::new (8 samples, 0.10%)</title><rect x="19.9779%" y="837" width="0.0982%" height="15" fill="rgb(209,120,9)" fg:x="1628" fg:w="8"/><text x="20.2279%" y="847.50"></text></g><g><title>tracing_core::dispatcher::get_default (8 samples, 0.10%)</title><rect x="19.9779%" y="821" width="0.0982%" height="15" fill="rgb(236,68,12)" fg:x="1628" fg:w="8"/><text x="20.2279%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.10%)</title><rect x="19.9779%" y="805" width="0.0982%" height="15" fill="rgb(225,194,26)" fg:x="1628" fg:w="8"/><text x="20.2279%" y="815.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (8 samples, 0.10%)</title><rect x="19.9779%" y="789" width="0.0982%" height="15" fill="rgb(231,84,39)" fg:x="1628" fg:w="8"/><text x="20.2279%" y="799.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (8 samples, 0.10%)</title><rect x="19.9779%" y="773" width="0.0982%" height="15" fill="rgb(210,11,45)" fg:x="1628" fg:w="8"/><text x="20.2279%" y="783.50"></text></g><g><title>tracing::span::Span::new_with (8 samples, 0.10%)</title><rect x="19.9779%" y="757" width="0.0982%" height="15" fill="rgb(224,54,52)" fg:x="1628" fg:w="8"/><text x="20.2279%" y="767.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="20.0638%" y="741" width="0.0123%" height="15" fill="rgb(238,102,14)" fg:x="1635" fg:w="1"/><text x="20.3138%" y="751.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (29 samples, 0.36%)</title><rect x="19.7325%" y="901" width="0.3559%" height="15" fill="rgb(243,160,52)" fg:x="1608" fg:w="29"/><text x="19.9825%" y="911.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (28 samples, 0.34%)</title><rect x="19.7448%" y="885" width="0.3436%" height="15" fill="rgb(216,114,19)" fg:x="1609" fg:w="28"/><text x="19.9948%" y="895.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::free (1 samples, 0.01%)</title><rect x="20.0761%" y="869" width="0.0123%" height="15" fill="rgb(244,166,37)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="879.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::free (1 samples, 0.01%)</title><rect x="20.0761%" y="853" width="0.0123%" height="15" fill="rgb(246,29,44)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="863.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::free (1 samples, 0.01%)</title><rect x="20.0761%" y="837" width="0.0123%" height="15" fill="rgb(215,56,53)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="847.50"></text></g><g><title>&lt;wgpu_core::device::descriptor::DescriptorDevice&lt;B&gt; as gpu_descriptor_types::device::DescriptorDevice&lt;&lt;B as gfx_hal::Backend&gt;::DescriptorSetLayout,&lt;B as gfx_hal::Backend&gt;::DescriptorPool,&lt;B as gfx_hal::Backend&gt;::DescriptorSet&gt;&gt;::dealloc_descriptor_sets (1 samples, 0.01%)</title><rect x="20.0761%" y="821" width="0.0123%" height="15" fill="rgb(217,60,2)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="831.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::DescriptorPool as gfx_hal::pso::descriptor::DescriptorPool&lt;gfx_backend_vulkan::Backend&gt;&gt;::free (1 samples, 0.01%)</title><rect x="20.0761%" y="805" width="0.0123%" height="15" fill="rgb(207,26,24)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="815.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="20.0761%" y="789" width="0.0123%" height="15" fill="rgb(252,210,15)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="799.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (1 samples, 0.01%)</title><rect x="20.0761%" y="773" width="0.0123%" height="15" fill="rgb(253,209,26)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="783.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (1 samples, 0.01%)</title><rect x="20.0761%" y="757" width="0.0123%" height="15" fill="rgb(238,170,14)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="767.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="20.0761%" y="741" width="0.0123%" height="15" fill="rgb(216,178,15)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="751.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (1 samples, 0.01%)</title><rect x="20.0761%" y="725" width="0.0123%" height="15" fill="rgb(250,197,2)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="735.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (1 samples, 0.01%)</title><rect x="20.0761%" y="709" width="0.0123%" height="15" fill="rgb(212,70,42)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="719.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::DescriptorPool as gfx_hal::pso::descriptor::DescriptorPool&lt;gfx_backend_vulkan::Backend&gt;&gt;::free::{{closure}} (1 samples, 0.01%)</title><rect x="20.0761%" y="693" width="0.0123%" height="15" fill="rgb(227,213,9)" fg:x="1636" fg:w="1"/><text x="20.3261%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="20.1006%" y="885" width="0.0123%" height="15" fill="rgb(245,99,25)" fg:x="1638" fg:w="1"/><text x="20.3506%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="20.1006%" y="869" width="0.0123%" height="15" fill="rgb(250,82,29)" fg:x="1638" fg:w="1"/><text x="20.3506%" y="879.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::handle_mapping (3 samples, 0.04%)</title><rect x="20.0884%" y="901" width="0.0368%" height="15" fill="rgb(241,226,54)" fg:x="1637" fg:w="3"/><text x="20.3384%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="20.1129%" y="885" width="0.0123%" height="15" fill="rgb(221,99,41)" fg:x="1639" fg:w="1"/><text x="20.3629%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="20.1129%" y="869" width="0.0123%" height="15" fill="rgb(213,90,21)" fg:x="1639" fg:w="1"/><text x="20.3629%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="20.1129%" y="853" width="0.0123%" height="15" fill="rgb(205,208,24)" fg:x="1639" fg:w="1"/><text x="20.3629%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="20.1129%" y="837" width="0.0123%" height="15" fill="rgb(246,31,12)" fg:x="1639" fg:w="1"/><text x="20.3629%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="20.1129%" y="821" width="0.0123%" height="15" fill="rgb(213,154,6)" fg:x="1639" fg:w="1"/><text x="20.3629%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="20.1129%" y="805" width="0.0123%" height="15" fill="rgb(222,163,29)" fg:x="1639" fg:w="1"/><text x="20.3629%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="20.1129%" y="789" width="0.0123%" height="15" fill="rgb(227,201,8)" fg:x="1639" fg:w="1"/><text x="20.3629%" y="799.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="20.1129%" y="773" width="0.0123%" height="15" fill="rgb(233,9,32)" fg:x="1639" fg:w="1"/><text x="20.3629%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="20.1129%" y="757" width="0.0123%" height="15" fill="rgb(217,54,24)" fg:x="1639" fg:w="1"/><text x="20.3629%" y="767.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="20.1129%" y="741" width="0.0123%" height="15" fill="rgb(235,192,0)" fg:x="1639" fg:w="1"/><text x="20.3629%" y="751.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="20.1252%" y="869" width="0.0123%" height="15" fill="rgb(235,45,9)" fg:x="1640" fg:w="1"/><text x="20.3752%" y="879.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_mapped (2 samples, 0.02%)</title><rect x="20.1252%" y="901" width="0.0245%" height="15" fill="rgb(246,42,40)" fg:x="1640" fg:w="2"/><text x="20.3752%" y="911.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.02%)</title><rect x="20.1252%" y="885" width="0.0245%" height="15" fill="rgb(248,111,24)" fg:x="1640" fg:w="2"/><text x="20.3752%" y="895.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_mapped::{{closure}} (1 samples, 0.01%)</title><rect x="20.1374%" y="869" width="0.0123%" height="15" fill="rgb(249,65,22)" fg:x="1641" fg:w="1"/><text x="20.3874%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (2 samples, 0.02%)</title><rect x="20.1497%" y="885" width="0.0245%" height="15" fill="rgb(238,111,51)" fg:x="1642" fg:w="2"/><text x="20.3997%" y="895.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions::{{closure}} (2 samples, 0.02%)</title><rect x="20.1497%" y="869" width="0.0245%" height="15" fill="rgb(250,118,22)" fg:x="1642" fg:w="2"/><text x="20.3997%" y="879.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::get_fence_status (2 samples, 0.02%)</title><rect x="20.1497%" y="853" width="0.0245%" height="15" fill="rgb(234,84,26)" fg:x="1642" fg:w="2"/><text x="20.3997%" y="863.50"></text></g><g><title>ash::device::DeviceV1_0::get_fence_status (2 samples, 0.02%)</title><rect x="20.1497%" y="837" width="0.0245%" height="15" fill="rgb(243,172,12)" fg:x="1642" fg:w="2"/><text x="20.3997%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::get_fence_status (2 samples, 0.02%)</title><rect x="20.1497%" y="821" width="0.0245%" height="15" fill="rgb(236,150,49)" fg:x="1642" fg:w="2"/><text x="20.3997%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="20.1497%" y="805" width="0.0245%" height="15" fill="rgb(225,197,26)" fg:x="1642" fg:w="2"/><text x="20.3997%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="20.1497%" y="789" width="0.0245%" height="15" fill="rgb(214,17,42)" fg:x="1642" fg:w="2"/><text x="20.3997%" y="799.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::destroy_fence (19 samples, 0.23%)</title><rect x="20.1743%" y="885" width="0.2332%" height="15" fill="rgb(224,165,40)" fg:x="1644" fg:w="19"/><text x="20.4243%" y="895.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_fence (19 samples, 0.23%)</title><rect x="20.1743%" y="869" width="0.2332%" height="15" fill="rgb(246,100,4)" fg:x="1644" fg:w="19"/><text x="20.4243%" y="879.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::destroy_fence (19 samples, 0.23%)</title><rect x="20.1743%" y="853" width="0.2332%" height="15" fill="rgb(222,103,0)" fg:x="1644" fg:w="19"/><text x="20.4243%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.23%)</title><rect x="20.1743%" y="837" width="0.2332%" height="15" fill="rgb(227,189,26)" fg:x="1644" fg:w="19"/><text x="20.4243%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.22%)</title><rect x="20.1865%" y="821" width="0.2209%" height="15" fill="rgb(214,202,17)" fg:x="1645" fg:w="18"/><text x="20.4365%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.21%)</title><rect x="20.1988%" y="805" width="0.2086%" height="15" fill="rgb(229,111,3)" fg:x="1646" fg:w="17"/><text x="20.4488%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.20%)</title><rect x="20.2111%" y="789" width="0.1963%" height="15" fill="rgb(229,172,15)" fg:x="1647" fg:w="16"/><text x="20.4611%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.16%)</title><rect x="20.2479%" y="773" width="0.1595%" height="15" fill="rgb(230,224,35)" fg:x="1650" fg:w="13"/><text x="20.4979%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (9 samples, 0.11%)</title><rect x="20.2970%" y="757" width="0.1104%" height="15" fill="rgb(251,141,6)" fg:x="1654" fg:w="9"/><text x="20.5470%" y="767.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (24 samples, 0.29%)</title><rect x="20.1497%" y="901" width="0.2945%" height="15" fill="rgb(225,208,6)" fg:x="1642" fg:w="24"/><text x="20.3997%" y="911.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::wait_idle (3 samples, 0.04%)</title><rect x="20.4074%" y="885" width="0.0368%" height="15" fill="rgb(246,181,16)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="895.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences (3 samples, 0.04%)</title><rect x="20.4074%" y="869" width="0.0368%" height="15" fill="rgb(227,129,36)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="879.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (3 samples, 0.04%)</title><rect x="20.4074%" y="853" width="0.0368%" height="15" fill="rgb(248,117,24)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="863.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (3 samples, 0.04%)</title><rect x="20.4074%" y="837" width="0.0368%" height="15" fill="rgb(214,185,35)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="847.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (3 samples, 0.04%)</title><rect x="20.4074%" y="821" width="0.0368%" height="15" fill="rgb(236,150,34)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="831.50"></text></g><g><title>inplace_it::fixed_array::indirect (3 samples, 0.04%)</title><rect x="20.4074%" y="805" width="0.0368%" height="15" fill="rgb(243,228,27)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="815.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (3 samples, 0.04%)</title><rect x="20.4074%" y="789" width="0.0368%" height="15" fill="rgb(245,77,44)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="799.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (3 samples, 0.04%)</title><rect x="20.4074%" y="773" width="0.0368%" height="15" fill="rgb(235,214,42)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="783.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences::{{closure}} (3 samples, 0.04%)</title><rect x="20.4074%" y="757" width="0.0368%" height="15" fill="rgb(221,74,3)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="767.50"></text></g><g><title>ash::device::DeviceV1_0::wait_for_fences (3 samples, 0.04%)</title><rect x="20.4074%" y="741" width="0.0368%" height="15" fill="rgb(206,121,29)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="751.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::wait_for_fences (3 samples, 0.04%)</title><rect x="20.4074%" y="725" width="0.0368%" height="15" fill="rgb(249,131,53)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="20.4074%" y="709" width="0.0368%" height="15" fill="rgb(236,170,29)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="20.4074%" y="693" width="0.0368%" height="15" fill="rgb(247,96,15)" fg:x="1663" fg:w="3"/><text x="20.6574%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="20.4197%" y="677" width="0.0245%" height="15" fill="rgb(211,210,7)" fg:x="1664" fg:w="2"/><text x="20.6697%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="20.4320%" y="661" width="0.0123%" height="15" fill="rgb(240,88,50)" fg:x="1665" fg:w="1"/><text x="20.6820%" y="671.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.01%)</title><rect x="20.4442%" y="885" width="0.0123%" height="15" fill="rgb(209,229,26)" fg:x="1666" fg:w="1"/><text x="20.6942%" y="895.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected::{{closure}} (1 samples, 0.01%)</title><rect x="20.4442%" y="869" width="0.0123%" height="15" fill="rgb(210,68,23)" fg:x="1666" fg:w="1"/><text x="20.6942%" y="879.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::add_trackers (1 samples, 0.01%)</title><rect x="20.4565%" y="885" width="0.0123%" height="15" fill="rgb(229,180,13)" fg:x="1667" fg:w="1"/><text x="20.7065%" y="895.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::used (1 samples, 0.01%)</title><rect x="20.4565%" y="869" width="0.0123%" height="15" fill="rgb(236,53,44)" fg:x="1667" fg:w="1"/><text x="20.7065%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="20.4565%" y="853" width="0.0123%" height="15" fill="rgb(244,214,29)" fg:x="1667" fg:w="1"/><text x="20.7065%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="20.4565%" y="837" width="0.0123%" height="15" fill="rgb(220,75,29)" fg:x="1667" fg:w="1"/><text x="20.7065%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="20.4565%" y="821" width="0.0123%" height="15" fill="rgb(214,183,37)" fg:x="1667" fg:w="1"/><text x="20.7065%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="20.4565%" y="805" width="0.0123%" height="15" fill="rgb(239,117,29)" fg:x="1667" fg:w="1"/><text x="20.7065%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="20.4565%" y="789" width="0.0123%" height="15" fill="rgb(237,171,35)" fg:x="1667" fg:w="1"/><text x="20.7065%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="20.4565%" y="773" width="0.0123%" height="15" fill="rgb(229,178,53)" fg:x="1667" fg:w="1"/><text x="20.7065%" y="783.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (1 samples, 0.01%)</title><rect x="20.4688%" y="885" width="0.0123%" height="15" fill="rgb(210,102,19)" fg:x="1668" fg:w="1"/><text x="20.7188%" y="895.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (1 samples, 0.01%)</title><rect x="20.4688%" y="869" width="0.0123%" height="15" fill="rgb(235,127,22)" fg:x="1668" fg:w="1"/><text x="20.7188%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="20.4688%" y="853" width="0.0123%" height="15" fill="rgb(244,31,31)" fg:x="1668" fg:w="1"/><text x="20.7188%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="20.4688%" y="837" width="0.0123%" height="15" fill="rgb(231,43,21)" fg:x="1668" fg:w="1"/><text x="20.7188%" y="847.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (71 samples, 0.87%)</title><rect x="19.6220%" y="917" width="0.8713%" height="15" fill="rgb(217,131,35)" fg:x="1599" fg:w="71"/><text x="19.8720%" y="927.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (4 samples, 0.05%)</title><rect x="20.4442%" y="901" width="0.0491%" height="15" fill="rgb(221,149,4)" fg:x="1666" fg:w="4"/><text x="20.6942%" y="911.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::remove_abandoned (1 samples, 0.01%)</title><rect x="20.4810%" y="885" width="0.0123%" height="15" fill="rgb(232,170,28)" fg:x="1669" fg:w="1"/><text x="20.7310%" y="895.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (80 samples, 0.98%)</title><rect x="19.5239%" y="981" width="0.9817%" height="15" fill="rgb(238,56,10)" fg:x="1591" fg:w="80"/><text x="19.7739%" y="991.50"></text></g><g><title>wgpu::Device::poll (72 samples, 0.88%)</title><rect x="19.6220%" y="965" width="0.8835%" height="15" fill="rgb(235,196,14)" fg:x="1599" fg:w="72"/><text x="19.8720%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (72 samples, 0.88%)</title><rect x="19.6220%" y="949" width="0.8835%" height="15" fill="rgb(216,45,48)" fg:x="1599" fg:w="72"/><text x="19.8720%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (72 samples, 0.88%)</title><rect x="19.6220%" y="933" width="0.8835%" height="15" fill="rgb(238,213,17)" fg:x="1599" fg:w="72"/><text x="19.8720%" y="943.50"></text></g><g><title>wgpu_core::device::fire_map_callbacks (1 samples, 0.01%)</title><rect x="20.4933%" y="917" width="0.0123%" height="15" fill="rgb(212,13,2)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(wgpu_core::resource::BufferMapOperation,wgpu_core::resource::BufferMapAsyncStatus)&gt;&gt; (1 samples, 0.01%)</title><rect x="20.4933%" y="901" width="0.0123%" height="15" fill="rgb(240,114,20)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="911.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="20.4933%" y="885" width="0.0123%" height="15" fill="rgb(228,41,40)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(wgpu_core::resource::BufferMapOperation,wgpu_core::resource::BufferMapAsyncStatus),alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="20.4933%" y="869" width="0.0123%" height="15" fill="rgb(244,132,35)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="879.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="20.4933%" y="853" width="0.0123%" height="15" fill="rgb(253,189,4)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(wgpu_core::resource::BufferMapOperation,wgpu_core::resource::BufferMapAsyncStatus)&gt;&gt; (1 samples, 0.01%)</title><rect x="20.4933%" y="837" width="0.0123%" height="15" fill="rgb(224,37,19)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="847.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="20.4933%" y="821" width="0.0123%" height="15" fill="rgb(235,223,18)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="20.4933%" y="805" width="0.0123%" height="15" fill="rgb(235,163,25)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="815.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="20.4933%" y="789" width="0.0123%" height="15" fill="rgb(217,145,28)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="799.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="20.4933%" y="773" width="0.0123%" height="15" fill="rgb(223,223,32)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="20.4933%" y="757" width="0.0123%" height="15" fill="rgb(227,189,39)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="20.4933%" y="741" width="0.0123%" height="15" fill="rgb(248,10,22)" fg:x="1670" fg:w="1"/><text x="20.7433%" y="751.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="20.5056%" y="965" width="0.0123%" height="15" fill="rgb(248,46,39)" fg:x="1671" fg:w="1"/><text x="20.7556%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="20.5056%" y="949" width="0.0123%" height="15" fill="rgb(248,113,48)" fg:x="1671" fg:w="1"/><text x="20.7556%" y="959.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="20.5056%" y="933" width="0.0123%" height="15" fill="rgb(245,16,25)" fg:x="1671" fg:w="1"/><text x="20.7556%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="20.5056%" y="917" width="0.0123%" height="15" fill="rgb(249,152,16)" fg:x="1671" fg:w="1"/><text x="20.7556%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="20.5056%" y="901" width="0.0123%" height="15" fill="rgb(250,16,1)" fg:x="1671" fg:w="1"/><text x="20.7556%" y="911.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (2 samples, 0.02%)</title><rect x="20.5179%" y="853" width="0.0245%" height="15" fill="rgb(249,138,3)" fg:x="1672" fg:w="2"/><text x="20.7679%" y="863.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (4 samples, 0.05%)</title><rect x="20.5056%" y="981" width="0.0491%" height="15" fill="rgb(227,71,41)" fg:x="1671" fg:w="4"/><text x="20.7556%" y="991.50"></text></g><g><title>wgpu::Buffer::unmap (3 samples, 0.04%)</title><rect x="20.5179%" y="965" width="0.0368%" height="15" fill="rgb(209,184,23)" fg:x="1672" fg:w="3"/><text x="20.7679%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (3 samples, 0.04%)</title><rect x="20.5179%" y="949" width="0.0368%" height="15" fill="rgb(223,215,31)" fg:x="1672" fg:w="3"/><text x="20.7679%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (3 samples, 0.04%)</title><rect x="20.5179%" y="933" width="0.0368%" height="15" fill="rgb(210,146,28)" fg:x="1672" fg:w="3"/><text x="20.7679%" y="943.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (3 samples, 0.04%)</title><rect x="20.5179%" y="917" width="0.0368%" height="15" fill="rgb(209,183,41)" fg:x="1672" fg:w="3"/><text x="20.7679%" y="927.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (3 samples, 0.04%)</title><rect x="20.5179%" y="901" width="0.0368%" height="15" fill="rgb(209,224,45)" fg:x="1672" fg:w="3"/><text x="20.7679%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (3 samples, 0.04%)</title><rect x="20.5179%" y="885" width="0.0368%" height="15" fill="rgb(224,209,51)" fg:x="1672" fg:w="3"/><text x="20.7679%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (3 samples, 0.04%)</title><rect x="20.5179%" y="869" width="0.0368%" height="15" fill="rgb(223,17,39)" fg:x="1672" fg:w="3"/><text x="20.7679%" y="879.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::wait_for_readers (1 samples, 0.01%)</title><rect x="20.5424%" y="853" width="0.0123%" height="15" fill="rgb(234,204,37)" fg:x="1674" fg:w="1"/><text x="20.7924%" y="863.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="20.5424%" y="837" width="0.0123%" height="15" fill="rgb(236,120,5)" fg:x="1674" fg:w="1"/><text x="20.7924%" y="847.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (1 samples, 0.01%)</title><rect x="20.5424%" y="821" width="0.0123%" height="15" fill="rgb(248,97,27)" fg:x="1674" fg:w="1"/><text x="20.7924%" y="831.50"></text></g><g><title>std::thread::yield_now (1 samples, 0.01%)</title><rect x="20.5424%" y="805" width="0.0123%" height="15" fill="rgb(240,66,17)" fg:x="1674" fg:w="1"/><text x="20.7924%" y="815.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (1 samples, 0.01%)</title><rect x="20.5424%" y="789" width="0.0123%" height="15" fill="rgb(210,79,3)" fg:x="1674" fg:w="1"/><text x="20.7924%" y="799.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.01%)</title><rect x="20.5424%" y="773" width="0.0123%" height="15" fill="rgb(214,176,27)" fg:x="1674" fg:w="1"/><text x="20.7924%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="20.5669%" y="965" width="0.0123%" height="15" fill="rgb(235,185,3)" fg:x="1676" fg:w="1"/><text x="20.8169%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="20.5669%" y="949" width="0.0123%" height="15" fill="rgb(227,24,12)" fg:x="1676" fg:w="1"/><text x="20.8169%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="20.5669%" y="933" width="0.0123%" height="15" fill="rgb(252,169,48)" fg:x="1676" fg:w="1"/><text x="20.8169%" y="943.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (4 samples, 0.05%)</title><rect x="20.5547%" y="981" width="0.0491%" height="15" fill="rgb(212,65,1)" fg:x="1675" fg:w="4"/><text x="20.8047%" y="991.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (2 samples, 0.02%)</title><rect x="20.5792%" y="965" width="0.0245%" height="15" fill="rgb(242,39,24)" fg:x="1677" fg:w="2"/><text x="20.8292%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_get_mapped_range (1 samples, 0.01%)</title><rect x="20.5915%" y="949" width="0.0123%" height="15" fill="rgb(249,32,23)" fg:x="1678" fg:w="1"/><text x="20.8415%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_get_mapped_range (1 samples, 0.01%)</title><rect x="20.5915%" y="933" width="0.0123%" height="15" fill="rgb(251,195,23)" fg:x="1678" fg:w="1"/><text x="20.8415%" y="943.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.01%)</title><rect x="20.5915%" y="917" width="0.0123%" height="15" fill="rgb(236,174,8)" fg:x="1678" fg:w="1"/><text x="20.8415%" y="927.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="20.5915%" y="901" width="0.0123%" height="15" fill="rgb(220,197,8)" fg:x="1678" fg:w="1"/><text x="20.8415%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="20.5915%" y="885" width="0.0123%" height="15" fill="rgb(240,108,37)" fg:x="1678" fg:w="1"/><text x="20.8415%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (1 samples, 0.01%)</title><rect x="20.5915%" y="869" width="0.0123%" height="15" fill="rgb(232,176,24)" fg:x="1678" fg:w="1"/><text x="20.8415%" y="879.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (1 samples, 0.01%)</title><rect x="20.5915%" y="853" width="0.0123%" height="15" fill="rgb(243,35,29)" fg:x="1678" fg:w="1"/><text x="20.8415%" y="863.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="20.5915%" y="837" width="0.0123%" height="15" fill="rgb(210,37,18)" fg:x="1678" fg:w="1"/><text x="20.8415%" y="847.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="20.5915%" y="821" width="0.0123%" height="15" fill="rgb(224,184,40)" fg:x="1678" fg:w="1"/><text x="20.8415%" y="831.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (1 samples, 0.01%)</title><rect x="20.5915%" y="805" width="0.0123%" height="15" fill="rgb(236,39,29)" fg:x="1678" fg:w="1"/><text x="20.8415%" y="815.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (1 samples, 0.01%)</title><rect x="20.5915%" y="789" width="0.0123%" height="15" fill="rgb(232,48,39)" fg:x="1678" fg:w="1"/><text x="20.8415%" y="799.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="20.6038%" y="917" width="0.0245%" height="15" fill="rgb(236,34,42)" fg:x="1679" fg:w="2"/><text x="20.8538%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="20.6038%" y="901" width="0.0245%" height="15" fill="rgb(243,106,37)" fg:x="1679" fg:w="2"/><text x="20.8538%" y="911.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (2 samples, 0.02%)</title><rect x="20.6038%" y="885" width="0.0245%" height="15" fill="rgb(218,96,6)" fg:x="1679" fg:w="2"/><text x="20.8538%" y="895.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.02%)</title><rect x="20.6038%" y="869" width="0.0245%" height="15" fill="rgb(235,130,12)" fg:x="1679" fg:w="2"/><text x="20.8538%" y="879.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="20.6038%" y="853" width="0.0245%" height="15" fill="rgb(231,95,0)" fg:x="1679" fg:w="2"/><text x="20.8538%" y="863.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="20.6038%" y="837" width="0.0245%" height="15" fill="rgb(228,12,23)" fg:x="1679" fg:w="2"/><text x="20.8538%" y="847.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (91 samples, 1.12%)</title><rect x="19.5239%" y="997" width="1.1167%" height="15" fill="rgb(216,12,1)" fg:x="1591" fg:w="91"/><text x="19.7739%" y="1007.50"></text></g><g><title>bevy_render::camera::active_cameras::ActiveCameras::get_mut (3 samples, 0.04%)</title><rect x="20.6038%" y="981" width="0.0368%" height="15" fill="rgb(219,59,3)" fg:x="1679" fg:w="3"/><text x="20.8538%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (3 samples, 0.04%)</title><rect x="20.6038%" y="965" width="0.0368%" height="15" fill="rgb(215,208,46)" fg:x="1679" fg:w="3"/><text x="20.8538%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (3 samples, 0.04%)</title><rect x="20.6038%" y="949" width="0.0368%" height="15" fill="rgb(254,224,29)" fg:x="1679" fg:w="3"/><text x="20.8538%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (3 samples, 0.04%)</title><rect x="20.6038%" y="933" width="0.0368%" height="15" fill="rgb(232,14,29)" fg:x="1679" fg:w="3"/><text x="20.8538%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="20.6283%" y="917" width="0.0123%" height="15" fill="rgb(208,45,52)" fg:x="1681" fg:w="1"/><text x="20.8783%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="20.6283%" y="901" width="0.0123%" height="15" fill="rgb(234,191,28)" fg:x="1681" fg:w="1"/><text x="20.8783%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="20.6283%" y="885" width="0.0123%" height="15" fill="rgb(244,67,43)" fg:x="1681" fg:w="1"/><text x="20.8783%" y="895.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="20.6283%" y="869" width="0.0123%" height="15" fill="rgb(236,189,24)" fg:x="1681" fg:w="1"/><text x="20.8783%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="20.6283%" y="853" width="0.0123%" height="15" fill="rgb(239,214,33)" fg:x="1681" fg:w="1"/><text x="20.8783%" y="863.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="20.6283%" y="837" width="0.0123%" height="15" fill="rgb(226,176,41)" fg:x="1681" fg:w="1"/><text x="20.8783%" y="847.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="20.6283%" y="821" width="0.0123%" height="15" fill="rgb(248,47,8)" fg:x="1681" fg:w="1"/><text x="20.8783%" y="831.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="20.6283%" y="805" width="0.0123%" height="15" fill="rgb(218,81,44)" fg:x="1681" fg:w="1"/><text x="20.8783%" y="815.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="20.6406%" y="981" width="0.0245%" height="15" fill="rgb(213,98,6)" fg:x="1682" fg:w="2"/><text x="20.8906%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="20.6406%" y="965" width="0.0245%" height="15" fill="rgb(222,85,22)" fg:x="1682" fg:w="2"/><text x="20.8906%" y="975.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="20.6651%" y="981" width="0.0123%" height="15" fill="rgb(239,46,39)" fg:x="1684" fg:w="1"/><text x="20.9151%" y="991.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="20.6651%" y="965" width="0.0123%" height="15" fill="rgb(237,12,29)" fg:x="1684" fg:w="1"/><text x="20.9151%" y="975.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.01%)</title><rect x="20.6651%" y="949" width="0.0123%" height="15" fill="rgb(214,77,8)" fg:x="1684" fg:w="1"/><text x="20.9151%" y="959.50"></text></g><g><title>ahash::random_state::RandomState::from_keys (1 samples, 0.01%)</title><rect x="20.6651%" y="933" width="0.0123%" height="15" fill="rgb(217,168,37)" fg:x="1684" fg:w="1"/><text x="20.9151%" y="943.50"></text></g><g><title>ahash::random_state::RandomState::from_keys::{{closure}} (1 samples, 0.01%)</title><rect x="20.6651%" y="917" width="0.0123%" height="15" fill="rgb(221,217,23)" fg:x="1684" fg:w="1"/><text x="20.9151%" y="927.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="20.6651%" y="901" width="0.0123%" height="15" fill="rgb(243,229,36)" fg:x="1684" fg:w="1"/><text x="20.9151%" y="911.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="20.6651%" y="885" width="0.0123%" height="15" fill="rgb(251,163,40)" fg:x="1684" fg:w="1"/><text x="20.9151%" y="895.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="20.6651%" y="869" width="0.0123%" height="15" fill="rgb(237,222,12)" fg:x="1684" fg:w="1"/><text x="20.9151%" y="879.50"></text></g><g><title>bevy_transform::hierarchy::hierarchy_maintenance_system::parent_update_system (4 samples, 0.05%)</title><rect x="20.6406%" y="997" width="0.0491%" height="15" fill="rgb(248,132,6)" fg:x="1682" fg:w="4"/><text x="20.8906%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;bevy_ecs::entity::Entity,smallvec::SmallVec&lt;[bevy_ecs::entity::Entity: 8]&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="20.6774%" y="981" width="0.0123%" height="15" fill="rgb(227,167,50)" fg:x="1685" fg:w="1"/><text x="20.9274%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;bevy_ecs::entity::Entity,smallvec::SmallVec&lt;[bevy_ecs::entity::Entity: 8]&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="20.6774%" y="965" width="0.0123%" height="15" fill="rgb(242,84,37)" fg:x="1685" fg:w="1"/><text x="20.9274%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(bevy_ecs::entity::Entity,smallvec::SmallVec&lt;[bevy_ecs::entity::Entity: 8]&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="20.6774%" y="949" width="0.0123%" height="15" fill="rgb(212,4,50)" fg:x="1685" fg:w="1"/><text x="20.9274%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="20.6774%" y="933" width="0.0123%" height="15" fill="rgb(230,228,32)" fg:x="1685" fg:w="1"/><text x="20.9274%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.01%)</title><rect x="20.6774%" y="917" width="0.0123%" height="15" fill="rgb(248,217,23)" fg:x="1685" fg:w="1"/><text x="20.9274%" y="927.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (2 samples, 0.02%)</title><rect x="20.6897%" y="997" width="0.0245%" height="15" fill="rgb(238,197,32)" fg:x="1686" fg:w="2"/><text x="20.9397%" y="1007.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (2 samples, 0.02%)</title><rect x="20.6897%" y="981" width="0.0245%" height="15" fill="rgb(236,106,1)" fg:x="1686" fg:w="2"/><text x="20.9397%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (1 samples, 0.01%)</title><rect x="20.7019%" y="965" width="0.0123%" height="15" fill="rgb(219,228,13)" fg:x="1687" fg:w="1"/><text x="20.9519%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (1 samples, 0.01%)</title><rect x="20.7019%" y="949" width="0.0123%" height="15" fill="rgb(238,30,35)" fg:x="1687" fg:w="1"/><text x="20.9519%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (1 samples, 0.01%)</title><rect x="20.7019%" y="933" width="0.0123%" height="15" fill="rgb(236,70,23)" fg:x="1687" fg:w="1"/><text x="20.9519%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="20.7019%" y="917" width="0.0123%" height="15" fill="rgb(249,104,48)" fg:x="1687" fg:w="1"/><text x="20.9519%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="20.7019%" y="901" width="0.0123%" height="15" fill="rgb(254,117,50)" fg:x="1687" fg:w="1"/><text x="20.9519%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="20.7019%" y="885" width="0.0123%" height="15" fill="rgb(223,152,4)" fg:x="1687" fg:w="1"/><text x="20.9519%" y="895.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="20.7019%" y="869" width="0.0123%" height="15" fill="rgb(245,6,2)" fg:x="1687" fg:w="1"/><text x="20.9519%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="20.7019%" y="853" width="0.0123%" height="15" fill="rgb(249,150,24)" fg:x="1687" fg:w="1"/><text x="20.9519%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="20.7142%" y="997" width="0.0123%" height="15" fill="rgb(228,185,42)" fg:x="1688" fg:w="1"/><text x="20.9642%" y="1007.50"></text></g><g><title>engine::engine::actor::ai::walk_system (2 samples, 0.02%)</title><rect x="20.7265%" y="997" width="0.0245%" height="15" fill="rgb(226,39,33)" fg:x="1689" fg:w="2"/><text x="20.9765%" y="1007.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (2 samples, 0.02%)</title><rect x="20.7265%" y="981" width="0.0245%" height="15" fill="rgb(221,166,19)" fg:x="1689" fg:w="2"/><text x="20.9765%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (2 samples, 0.02%)</title><rect x="20.7265%" y="965" width="0.0245%" height="15" fill="rgb(209,109,2)" fg:x="1689" fg:w="2"/><text x="20.9765%" y="975.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (2 samples, 0.02%)</title><rect x="20.7265%" y="949" width="0.0245%" height="15" fill="rgb(252,216,26)" fg:x="1689" fg:w="2"/><text x="20.9765%" y="959.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4,F5) as bevy_ecs::query::fetch::Fetch&gt;::init (2 samples, 0.02%)</title><rect x="20.7265%" y="933" width="0.0245%" height="15" fill="rgb(227,173,36)" fg:x="1689" fg:w="2"/><text x="20.9765%" y="943.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.01%)</title><rect x="20.7510%" y="981" width="0.0123%" height="15" fill="rgb(209,90,7)" fg:x="1691" fg:w="1"/><text x="21.0010%" y="991.50"></text></g><g><title>&lt;engine::engine::world::time::GameTime as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="20.7510%" y="965" width="0.0123%" height="15" fill="rgb(250,194,11)" fg:x="1691" fg:w="1"/><text x="21.0010%" y="975.50"></text></g><g><title>engine::engine::actor::unfreeze (3 samples, 0.04%)</title><rect x="20.7510%" y="997" width="0.0368%" height="15" fill="rgb(220,72,50)" fg:x="1691" fg:w="3"/><text x="21.0010%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="20.7633%" y="981" width="0.0245%" height="15" fill="rgb(222,106,48)" fg:x="1692" fg:w="2"/><text x="21.0133%" y="991.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="20.7878%" y="981" width="0.0123%" height="15" fill="rgb(216,220,45)" fg:x="1694" fg:w="1"/><text x="21.0378%" y="991.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="20.7878%" y="965" width="0.0123%" height="15" fill="rgb(234,112,18)" fg:x="1694" fg:w="1"/><text x="21.0378%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="20.7878%" y="949" width="0.0123%" height="15" fill="rgb(206,179,9)" fg:x="1694" fg:w="1"/><text x="21.0378%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (1 samples, 0.01%)</title><rect x="20.7878%" y="933" width="0.0123%" height="15" fill="rgb(215,115,40)" fg:x="1694" fg:w="1"/><text x="21.0378%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="20.7878%" y="917" width="0.0123%" height="15" fill="rgb(222,69,34)" fg:x="1694" fg:w="1"/><text x="21.0378%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="20.7878%" y="901" width="0.0123%" height="15" fill="rgb(209,161,10)" fg:x="1694" fg:w="1"/><text x="21.0378%" y="911.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="20.7878%" y="885" width="0.0123%" height="15" fill="rgb(217,6,38)" fg:x="1694" fg:w="1"/><text x="21.0378%" y="895.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="20.7878%" y="869" width="0.0123%" height="15" fill="rgb(229,229,48)" fg:x="1694" fg:w="1"/><text x="21.0378%" y="879.50"></text></g><g><title>engine::engine::render::camera_movement::camera_movement (2 samples, 0.02%)</title><rect x="20.7878%" y="997" width="0.0245%" height="15" fill="rgb(225,21,28)" fg:x="1694" fg:w="2"/><text x="21.0378%" y="1007.50"></text></g><g><title>bevy_input::input::Input&lt;T&gt;::pressed (1 samples, 0.01%)</title><rect x="20.8001%" y="981" width="0.0123%" height="15" fill="rgb(206,33,13)" fg:x="1695" fg:w="1"/><text x="21.0501%" y="991.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.01%)</title><rect x="20.8001%" y="965" width="0.0123%" height="15" fill="rgb(242,178,17)" fg:x="1695" fg:w="1"/><text x="21.0501%" y="975.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.01%)</title><rect x="20.8001%" y="949" width="0.0123%" height="15" fill="rgb(220,162,5)" fg:x="1695" fg:w="1"/><text x="21.0501%" y="959.50"></text></g><g><title>bevy_core::time::stopwatch::Stopwatch::tick (1 samples, 0.01%)</title><rect x="20.8124%" y="981" width="0.0123%" height="15" fill="rgb(210,33,43)" fg:x="1696" fg:w="1"/><text x="21.0624%" y="991.50"></text></g><g><title>bevy_core::time::stopwatch::Stopwatch::paused (1 samples, 0.01%)</title><rect x="20.8124%" y="965" width="0.0123%" height="15" fill="rgb(216,116,54)" fg:x="1696" fg:w="1"/><text x="21.0624%" y="975.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (114 samples, 1.40%)</title><rect x="19.4380%" y="1045" width="1.3989%" height="15" fill="rgb(249,92,24)" fg:x="1584" fg:w="114"/><text x="19.6880%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (113 samples, 1.39%)</title><rect x="19.4502%" y="1029" width="1.3867%" height="15" fill="rgb(231,189,14)" fg:x="1585" fg:w="113"/><text x="19.7002%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (113 samples, 1.39%)</title><rect x="19.4502%" y="1013" width="1.3867%" height="15" fill="rgb(230,8,41)" fg:x="1585" fg:w="113"/><text x="19.7002%" y="1023.50"></text></g><g><title>engine::engine::world::time::advance_time (2 samples, 0.02%)</title><rect x="20.8124%" y="997" width="0.0245%" height="15" fill="rgb(249,7,27)" fg:x="1696" fg:w="2"/><text x="21.0624%" y="1007.50"></text></g><g><title>core::time::Duration::mul_f64 (1 samples, 0.01%)</title><rect x="20.8246%" y="981" width="0.0123%" height="15" fill="rgb(232,86,5)" fg:x="1697" fg:w="1"/><text x="21.0746%" y="991.50"></text></g><g><title>core::time::Duration::from_secs_f64 (1 samples, 0.01%)</title><rect x="20.8246%" y="965" width="0.0123%" height="15" fill="rgb(224,175,18)" fg:x="1697" fg:w="1"/><text x="21.0746%" y="975.50"></text></g><g><title>core::time::Duration::try_from_secs_f64 (1 samples, 0.01%)</title><rect x="20.8246%" y="949" width="0.0123%" height="15" fill="rgb(220,129,12)" fg:x="1697" fg:w="1"/><text x="21.0746%" y="959.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="20.8615%" y="965" width="0.0123%" height="15" fill="rgb(210,19,36)" fg:x="1700" fg:w="1"/><text x="21.1115%" y="975.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="20.8737%" y="965" width="0.0123%" height="15" fill="rgb(219,96,14)" fg:x="1701" fg:w="1"/><text x="21.1237%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="20.8737%" y="949" width="0.0123%" height="15" fill="rgb(249,106,1)" fg:x="1701" fg:w="1"/><text x="21.1237%" y="959.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="20.8737%" y="933" width="0.0123%" height="15" fill="rgb(249,155,20)" fg:x="1701" fg:w="1"/><text x="21.1237%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="20.8737%" y="917" width="0.0123%" height="15" fill="rgb(244,168,9)" fg:x="1701" fg:w="1"/><text x="21.1237%" y="927.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (5 samples, 0.06%)</title><rect x="20.8369%" y="1029" width="0.0614%" height="15" fill="rgb(216,23,50)" fg:x="1698" fg:w="5"/><text x="21.0869%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (3 samples, 0.04%)</title><rect x="20.8615%" y="1013" width="0.0368%" height="15" fill="rgb(224,219,20)" fg:x="1700" fg:w="3"/><text x="21.1115%" y="1023.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (3 samples, 0.04%)</title><rect x="20.8615%" y="997" width="0.0368%" height="15" fill="rgb(222,156,15)" fg:x="1700" fg:w="3"/><text x="21.1115%" y="1007.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (3 samples, 0.04%)</title><rect x="20.8615%" y="981" width="0.0368%" height="15" fill="rgb(231,97,17)" fg:x="1700" fg:w="3"/><text x="21.1115%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="20.8860%" y="965" width="0.0123%" height="15" fill="rgb(218,70,48)" fg:x="1702" fg:w="1"/><text x="21.1360%" y="975.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="20.8860%" y="949" width="0.0123%" height="15" fill="rgb(212,196,52)" fg:x="1702" fg:w="1"/><text x="21.1360%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="20.8860%" y="933" width="0.0123%" height="15" fill="rgb(243,203,18)" fg:x="1702" fg:w="1"/><text x="21.1360%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="20.8860%" y="917" width="0.0123%" height="15" fill="rgb(252,125,41)" fg:x="1702" fg:w="1"/><text x="21.1360%" y="927.50"></text></g><g><title>bevy_egui::systems::process_output (1 samples, 0.01%)</title><rect x="20.8983%" y="997" width="0.0123%" height="15" fill="rgb(223,180,33)" fg:x="1703" fg:w="1"/><text x="21.1483%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMut&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="20.8983%" y="981" width="0.0123%" height="15" fill="rgb(254,159,46)" fg:x="1703" fg:w="1"/><text x="21.1483%" y="991.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::set_changed (1 samples, 0.01%)</title><rect x="20.8983%" y="965" width="0.0123%" height="15" fill="rgb(254,38,10)" fg:x="1703" fg:w="1"/><text x="21.1483%" y="975.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="20.9105%" y="965" width="0.0123%" height="15" fill="rgb(208,217,32)" fg:x="1704" fg:w="1"/><text x="21.1605%" y="975.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="20.9105%" y="949" width="0.0123%" height="15" fill="rgb(221,120,13)" fg:x="1704" fg:w="1"/><text x="21.1605%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="20.9105%" y="933" width="0.0123%" height="15" fill="rgb(246,54,52)" fg:x="1704" fg:w="1"/><text x="21.1605%" y="943.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="20.9105%" y="917" width="0.0123%" height="15" fill="rgb(242,34,25)" fg:x="1704" fg:w="1"/><text x="21.1605%" y="927.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="20.9105%" y="901" width="0.0123%" height="15" fill="rgb(247,209,9)" fg:x="1704" fg:w="1"/><text x="21.1605%" y="911.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="20.9105%" y="885" width="0.0123%" height="15" fill="rgb(228,71,26)" fg:x="1704" fg:w="1"/><text x="21.1605%" y="895.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="20.9105%" y="869" width="0.0123%" height="15" fill="rgb(222,145,49)" fg:x="1704" fg:w="1"/><text x="21.1605%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="20.9105%" y="853" width="0.0123%" height="15" fill="rgb(218,121,17)" fg:x="1704" fg:w="1"/><text x="21.1605%" y="863.50"></text></g><g><title>bevy_egui::transform_node::transform_node_system (2 samples, 0.02%)</title><rect x="20.9105%" y="997" width="0.0245%" height="15" fill="rgb(244,50,7)" fg:x="1704" fg:w="2"/><text x="21.1605%" y="1007.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer (2 samples, 0.02%)</title><rect x="20.9105%" y="981" width="0.0245%" height="15" fill="rgb(246,229,37)" fg:x="1704" fg:w="2"/><text x="21.1605%" y="991.50"></text></g><g><title>wgpu::Device::create_buffer (1 samples, 0.01%)</title><rect x="20.9228%" y="965" width="0.0123%" height="15" fill="rgb(225,18,5)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (1 samples, 0.01%)</title><rect x="20.9228%" y="949" width="0.0123%" height="15" fill="rgb(213,204,8)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (1 samples, 0.01%)</title><rect x="20.9228%" y="933" width="0.0123%" height="15" fill="rgb(238,103,6)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="943.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (1 samples, 0.01%)</title><rect x="20.9228%" y="917" width="0.0123%" height="15" fill="rgb(222,25,35)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="927.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (1 samples, 0.01%)</title><rect x="20.9228%" y="901" width="0.0123%" height="15" fill="rgb(213,203,35)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="911.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (1 samples, 0.01%)</title><rect x="20.9228%" y="885" width="0.0123%" height="15" fill="rgb(221,79,53)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="895.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="20.9228%" y="869" width="0.0123%" height="15" fill="rgb(243,200,35)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="879.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="20.9228%" y="853" width="0.0123%" height="15" fill="rgb(248,60,25)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="20.9228%" y="837" width="0.0123%" height="15" fill="rgb(227,53,46)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="847.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="20.9228%" y="821" width="0.0123%" height="15" fill="rgb(216,120,32)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="831.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (1 samples, 0.01%)</title><rect x="20.9228%" y="805" width="0.0123%" height="15" fill="rgb(220,134,1)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="815.50"></text></g><g><title>tracing::span::Span::new_with (1 samples, 0.01%)</title><rect x="20.9228%" y="789" width="0.0123%" height="15" fill="rgb(237,168,5)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="799.50"></text></g><g><title>tracing::span::Span::make_with (1 samples, 0.01%)</title><rect x="20.9228%" y="773" width="0.0123%" height="15" fill="rgb(231,100,33)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="783.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="20.9228%" y="757" width="0.0123%" height="15" fill="rgb(236,177,47)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="20.9228%" y="741" width="0.0123%" height="15" fill="rgb(235,7,49)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="20.9228%" y="725" width="0.0123%" height="15" fill="rgb(232,119,22)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="20.9228%" y="709" width="0.0123%" height="15" fill="rgb(254,73,53)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="719.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.01%)</title><rect x="20.9228%" y="693" width="0.0123%" height="15" fill="rgb(251,35,20)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="703.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="20.9228%" y="677" width="0.0123%" height="15" fill="rgb(241,119,20)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="687.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="20.9228%" y="661" width="0.0123%" height="15" fill="rgb(207,102,14)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="671.50"></text></g><g><title>tracing_core::span::Attributes::record (1 samples, 0.01%)</title><rect x="20.9228%" y="645" width="0.0123%" height="15" fill="rgb(248,201,50)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="655.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="20.9228%" y="629" width="0.0123%" height="15" fill="rgb(222,185,44)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="639.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="20.9228%" y="613" width="0.0123%" height="15" fill="rgb(218,107,18)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="20.9228%" y="597" width="0.0123%" height="15" fill="rgb(237,177,39)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="20.9228%" y="581" width="0.0123%" height="15" fill="rgb(246,69,6)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="20.9228%" y="565" width="0.0123%" height="15" fill="rgb(234,208,37)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="575.50"></text></g><g><title>&lt;gpu_alloc::Request as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="20.9228%" y="549" width="0.0123%" height="15" fill="rgb(225,4,6)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="559.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="20.9228%" y="533" width="0.0123%" height="15" fill="rgb(233,45,0)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="20.9228%" y="517" width="0.0123%" height="15" fill="rgb(226,136,5)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="20.9228%" y="501" width="0.0123%" height="15" fill="rgb(211,91,47)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="20.9228%" y="485" width="0.0123%" height="15" fill="rgb(242,88,51)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="495.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="20.9228%" y="469" width="0.0123%" height="15" fill="rgb(230,91,28)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="479.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="20.9228%" y="453" width="0.0123%" height="15" fill="rgb(254,186,29)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="463.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="20.9228%" y="437" width="0.0123%" height="15" fill="rgb(238,6,4)" fg:x="1705" fg:w="1"/><text x="21.1728%" y="447.50"></text></g><g><title>bevy_pbr::render_graph::lights_node::lights_node_system (3 samples, 0.04%)</title><rect x="20.9351%" y="997" width="0.0368%" height="15" fill="rgb(221,151,16)" fg:x="1706" fg:w="3"/><text x="21.1851%" y="1007.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.04%)</title><rect x="20.9351%" y="981" width="0.0368%" height="15" fill="rgb(251,143,52)" fg:x="1706" fg:w="3"/><text x="21.1851%" y="991.50"></text></g><g><title>bevy_render::color::&lt;impl core::convert::From&lt;bevy_render::color::Color&gt; for [f32: 4]&gt;::from (3 samples, 0.04%)</title><rect x="20.9351%" y="965" width="0.0368%" height="15" fill="rgb(206,90,15)" fg:x="1706" fg:w="3"/><text x="21.1851%" y="975.50"></text></g><g><title>bevy_render::color::Color::as_rgba_f32 (3 samples, 0.04%)</title><rect x="20.9351%" y="949" width="0.0368%" height="15" fill="rgb(218,35,8)" fg:x="1706" fg:w="3"/><text x="21.1851%" y="959.50"></text></g><g><title>bevy_render::mesh::mesh::mesh_resource_provider_system (1 samples, 0.01%)</title><rect x="20.9842%" y="981" width="0.0123%" height="15" fill="rgb(239,215,6)" fg:x="1710" fg:w="1"/><text x="21.2342%" y="991.50"></text></g><g><title>bevy_render::mesh::mesh::mesh_resource_provider_system (3 samples, 0.04%)</title><rect x="20.9719%" y="997" width="0.0368%" height="15" fill="rgb(245,116,39)" fg:x="1709" fg:w="3"/><text x="21.2219%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;bevy_asset::handle::Handle&lt;bevy_render::mesh::mesh::Mesh&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="20.9964%" y="981" width="0.0123%" height="15" fill="rgb(242,65,28)" fg:x="1711" fg:w="1"/><text x="21.2464%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;bevy_asset::handle::Handle&lt;bevy_render::mesh::mesh::Mesh&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="20.9964%" y="965" width="0.0123%" height="15" fill="rgb(252,132,53)" fg:x="1711" fg:w="1"/><text x="21.2464%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;bevy_asset::handle::Handle&lt;bevy_render::mesh::mesh::Mesh&gt;,(),ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="20.9964%" y="949" width="0.0123%" height="15" fill="rgb(224,159,50)" fg:x="1711" fg:w="1"/><text x="21.2464%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(bevy_asset::handle::Handle&lt;bevy_render::mesh::mesh::Mesh&gt;,())&gt;&gt; (1 samples, 0.01%)</title><rect x="20.9964%" y="933" width="0.0123%" height="15" fill="rgb(224,93,4)" fg:x="1711" fg:w="1"/><text x="21.2464%" y="943.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (1 samples, 0.01%)</title><rect x="21.0578%" y="949" width="0.0123%" height="15" fill="rgb(208,81,34)" fg:x="1716" fg:w="1"/><text x="21.3078%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (1 samples, 0.01%)</title><rect x="21.0578%" y="933" width="0.0123%" height="15" fill="rgb(233,92,54)" fg:x="1716" fg:w="1"/><text x="21.3078%" y="943.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (1 samples, 0.01%)</title><rect x="21.0701%" y="933" width="0.0123%" height="15" fill="rgb(237,21,14)" fg:x="1717" fg:w="1"/><text x="21.3201%" y="943.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (3 samples, 0.04%)</title><rect x="21.0578%" y="965" width="0.0368%" height="15" fill="rgb(249,128,51)" fg:x="1716" fg:w="3"/><text x="21.3078%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (2 samples, 0.02%)</title><rect x="21.0701%" y="949" width="0.0245%" height="15" fill="rgb(223,129,24)" fg:x="1717" fg:w="2"/><text x="21.3201%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (1 samples, 0.01%)</title><rect x="21.0823%" y="933" width="0.0123%" height="15" fill="rgb(231,168,25)" fg:x="1718" fg:w="1"/><text x="21.3323%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="21.0823%" y="917" width="0.0123%" height="15" fill="rgb(224,39,20)" fg:x="1718" fg:w="1"/><text x="21.3323%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="21.0823%" y="901" width="0.0123%" height="15" fill="rgb(225,152,53)" fg:x="1718" fg:w="1"/><text x="21.3323%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="21.0823%" y="885" width="0.0123%" height="15" fill="rgb(252,17,24)" fg:x="1718" fg:w="1"/><text x="21.3323%" y="895.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="21.0823%" y="869" width="0.0123%" height="15" fill="rgb(250,114,30)" fg:x="1718" fg:w="1"/><text x="21.3323%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="21.0823%" y="853" width="0.0123%" height="15" fill="rgb(229,5,4)" fg:x="1718" fg:w="1"/><text x="21.3323%" y="863.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="21.0455%" y="981" width="0.0614%" height="15" fill="rgb(225,176,49)" fg:x="1715" fg:w="5"/><text x="21.2955%" y="991.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (1 samples, 0.01%)</title><rect x="21.0946%" y="965" width="0.0123%" height="15" fill="rgb(224,221,49)" fg:x="1719" fg:w="1"/><text x="21.3446%" y="975.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="21.1069%" y="965" width="0.0123%" height="15" fill="rgb(253,169,27)" fg:x="1720" fg:w="1"/><text x="21.3569%" y="975.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="21.1069%" y="949" width="0.0123%" height="15" fill="rgb(211,206,16)" fg:x="1720" fg:w="1"/><text x="21.3569%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="21.1192%" y="917" width="0.0123%" height="15" fill="rgb(244,87,35)" fg:x="1721" fg:w="1"/><text x="21.3692%" y="927.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="21.1192%" y="901" width="0.0123%" height="15" fill="rgb(246,28,10)" fg:x="1721" fg:w="1"/><text x="21.3692%" y="911.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="21.1192%" y="885" width="0.0123%" height="15" fill="rgb(229,12,44)" fg:x="1721" fg:w="1"/><text x="21.3692%" y="895.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="21.1192%" y="869" width="0.0123%" height="15" fill="rgb(210,145,37)" fg:x="1721" fg:w="1"/><text x="21.3692%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="21.1192%" y="853" width="0.0123%" height="15" fill="rgb(227,112,52)" fg:x="1721" fg:w="1"/><text x="21.3692%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="21.1192%" y="837" width="0.0123%" height="15" fill="rgb(238,155,34)" fg:x="1721" fg:w="1"/><text x="21.3692%" y="847.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="21.1192%" y="821" width="0.0123%" height="15" fill="rgb(239,226,36)" fg:x="1721" fg:w="1"/><text x="21.3692%" y="831.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="21.1192%" y="805" width="0.0123%" height="15" fill="rgb(230,16,23)" fg:x="1721" fg:w="1"/><text x="21.3692%" y="815.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="21.1192%" y="789" width="0.0123%" height="15" fill="rgb(236,171,36)" fg:x="1721" fg:w="1"/><text x="21.3692%" y="799.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (3 samples, 0.04%)</title><rect x="21.1069%" y="981" width="0.0368%" height="15" fill="rgb(221,22,14)" fg:x="1720" fg:w="3"/><text x="21.3569%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="21.1192%" y="965" width="0.0245%" height="15" fill="rgb(242,43,11)" fg:x="1721" fg:w="2"/><text x="21.3692%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="21.1192%" y="949" width="0.0245%" height="15" fill="rgb(232,69,23)" fg:x="1721" fg:w="2"/><text x="21.3692%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="21.1192%" y="933" width="0.0245%" height="15" fill="rgb(216,180,54)" fg:x="1721" fg:w="2"/><text x="21.3692%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="21.1314%" y="917" width="0.0123%" height="15" fill="rgb(216,5,24)" fg:x="1722" fg:w="1"/><text x="21.3814%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="21.1314%" y="901" width="0.0123%" height="15" fill="rgb(225,89,9)" fg:x="1722" fg:w="1"/><text x="21.3814%" y="911.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.1928%" y="949" width="0.0123%" height="15" fill="rgb(243,75,33)" fg:x="1727" fg:w="1"/><text x="21.4428%" y="959.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.1928%" y="933" width="0.0123%" height="15" fill="rgb(247,141,45)" fg:x="1727" fg:w="1"/><text x="21.4428%" y="943.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.1928%" y="917" width="0.0123%" height="15" fill="rgb(232,177,36)" fg:x="1727" fg:w="1"/><text x="21.4428%" y="927.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.1928%" y="901" width="0.0123%" height="15" fill="rgb(219,125,36)" fg:x="1727" fg:w="1"/><text x="21.4428%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.1928%" y="885" width="0.0123%" height="15" fill="rgb(227,94,9)" fg:x="1727" fg:w="1"/><text x="21.4428%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.1928%" y="869" width="0.0123%" height="15" fill="rgb(240,34,52)" fg:x="1727" fg:w="1"/><text x="21.4428%" y="879.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="21.1928%" y="853" width="0.0123%" height="15" fill="rgb(216,45,12)" fg:x="1727" fg:w="1"/><text x="21.4428%" y="863.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="21.2051%" y="885" width="0.0123%" height="15" fill="rgb(246,21,19)" fg:x="1728" fg:w="1"/><text x="21.4551%" y="895.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="21.2051%" y="869" width="0.0123%" height="15" fill="rgb(213,98,42)" fg:x="1728" fg:w="1"/><text x="21.4551%" y="879.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="21.2051%" y="853" width="0.0123%" height="15" fill="rgb(250,136,47)" fg:x="1728" fg:w="1"/><text x="21.4551%" y="863.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="21.2051%" y="837" width="0.0123%" height="15" fill="rgb(251,124,27)" fg:x="1728" fg:w="1"/><text x="21.4551%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="21.2051%" y="821" width="0.0123%" height="15" fill="rgb(229,180,14)" fg:x="1728" fg:w="1"/><text x="21.4551%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="21.2051%" y="805" width="0.0123%" height="15" fill="rgb(245,216,25)" fg:x="1728" fg:w="1"/><text x="21.4551%" y="815.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="21.2051%" y="789" width="0.0123%" height="15" fill="rgb(251,43,5)" fg:x="1728" fg:w="1"/><text x="21.4551%" y="799.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="21.2051%" y="773" width="0.0123%" height="15" fill="rgb(250,128,24)" fg:x="1728" fg:w="1"/><text x="21.4551%" y="783.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="21.2051%" y="757" width="0.0123%" height="15" fill="rgb(217,117,27)" fg:x="1728" fg:w="1"/><text x="21.4551%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.2173%" y="853" width="0.0123%" height="15" fill="rgb(245,147,4)" fg:x="1729" fg:w="1"/><text x="21.4673%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.2173%" y="837" width="0.0123%" height="15" fill="rgb(242,201,35)" fg:x="1729" fg:w="1"/><text x="21.4673%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.2173%" y="821" width="0.0123%" height="15" fill="rgb(218,181,1)" fg:x="1729" fg:w="1"/><text x="21.4673%" y="831.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="21.2173%" y="805" width="0.0123%" height="15" fill="rgb(222,6,29)" fg:x="1729" fg:w="1"/><text x="21.4673%" y="815.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (4 samples, 0.05%)</title><rect x="21.2051%" y="949" width="0.0491%" height="15" fill="rgb(208,186,3)" fg:x="1728" fg:w="4"/><text x="21.4551%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.05%)</title><rect x="21.2051%" y="933" width="0.0491%" height="15" fill="rgb(216,36,26)" fg:x="1728" fg:w="4"/><text x="21.4551%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.05%)</title><rect x="21.2051%" y="917" width="0.0491%" height="15" fill="rgb(248,201,23)" fg:x="1728" fg:w="4"/><text x="21.4551%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.05%)</title><rect x="21.2051%" y="901" width="0.0491%" height="15" fill="rgb(251,170,31)" fg:x="1728" fg:w="4"/><text x="21.4551%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.04%)</title><rect x="21.2173%" y="885" width="0.0368%" height="15" fill="rgb(207,110,25)" fg:x="1729" fg:w="3"/><text x="21.4673%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="21.2173%" y="869" width="0.0368%" height="15" fill="rgb(250,54,15)" fg:x="1729" fg:w="3"/><text x="21.4673%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="21.2296%" y="853" width="0.0245%" height="15" fill="rgb(227,68,33)" fg:x="1730" fg:w="2"/><text x="21.4796%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="21.2296%" y="837" width="0.0245%" height="15" fill="rgb(238,34,41)" fg:x="1730" fg:w="2"/><text x="21.4796%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="21.2296%" y="821" width="0.0245%" height="15" fill="rgb(220,11,15)" fg:x="1730" fg:w="2"/><text x="21.4796%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="21.2296%" y="805" width="0.0245%" height="15" fill="rgb(246,111,35)" fg:x="1730" fg:w="2"/><text x="21.4796%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="21.2296%" y="789" width="0.0245%" height="15" fill="rgb(209,88,53)" fg:x="1730" fg:w="2"/><text x="21.4796%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="21.2296%" y="773" width="0.0245%" height="15" fill="rgb(231,185,47)" fg:x="1730" fg:w="2"/><text x="21.4796%" y="783.50"></text></g><g><title>bevy_render::draw::Draw::set_bind_group (5 samples, 0.06%)</title><rect x="21.2541%" y="949" width="0.0614%" height="15" fill="rgb(233,154,1)" fg:x="1732" fg:w="5"/><text x="21.5041%" y="959.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="21.2541%" y="933" width="0.0614%" height="15" fill="rgb(225,15,46)" fg:x="1732" fg:w="5"/><text x="21.5041%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.05%)</title><rect x="21.2664%" y="917" width="0.0491%" height="15" fill="rgb(211,135,41)" fg:x="1733" fg:w="4"/><text x="21.5164%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.05%)</title><rect x="21.2664%" y="901" width="0.0491%" height="15" fill="rgb(208,54,0)" fg:x="1733" fg:w="4"/><text x="21.5164%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.05%)</title><rect x="21.2664%" y="885" width="0.0491%" height="15" fill="rgb(244,136,14)" fg:x="1733" fg:w="4"/><text x="21.5164%" y="895.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="21.3155%" y="885" width="0.0245%" height="15" fill="rgb(241,56,14)" fg:x="1737" fg:w="2"/><text x="21.5655%" y="895.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="21.3155%" y="869" width="0.0245%" height="15" fill="rgb(205,80,24)" fg:x="1737" fg:w="2"/><text x="21.5655%" y="879.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="21.3155%" y="853" width="0.0245%" height="15" fill="rgb(220,57,4)" fg:x="1737" fg:w="2"/><text x="21.5655%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.3523%" y="821" width="0.0123%" height="15" fill="rgb(226,193,50)" fg:x="1740" fg:w="1"/><text x="21.6023%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="21.3523%" y="853" width="0.0245%" height="15" fill="rgb(231,168,22)" fg:x="1740" fg:w="2"/><text x="21.6023%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="21.3523%" y="837" width="0.0245%" height="15" fill="rgb(254,215,14)" fg:x="1740" fg:w="2"/><text x="21.6023%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.01%)</title><rect x="21.3646%" y="821" width="0.0123%" height="15" fill="rgb(211,115,16)" fg:x="1741" fg:w="1"/><text x="21.6146%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="21.3646%" y="805" width="0.0123%" height="15" fill="rgb(236,210,16)" fg:x="1741" fg:w="1"/><text x="21.6146%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="21.3646%" y="789" width="0.0123%" height="15" fill="rgb(221,94,12)" fg:x="1741" fg:w="1"/><text x="21.6146%" y="799.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.04%)</title><rect x="21.3769%" y="853" width="0.0368%" height="15" fill="rgb(235,218,49)" fg:x="1742" fg:w="3"/><text x="21.6269%" y="863.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="21.3769%" y="837" width="0.0368%" height="15" fill="rgb(217,114,14)" fg:x="1742" fg:w="3"/><text x="21.6269%" y="847.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="21.3769%" y="821" width="0.0368%" height="15" fill="rgb(216,145,22)" fg:x="1742" fg:w="3"/><text x="21.6269%" y="831.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_mut_untyped (9 samples, 0.11%)</title><rect x="21.3155%" y="949" width="0.1104%" height="15" fill="rgb(217,112,39)" fg:x="1737" fg:w="9"/><text x="21.5655%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (9 samples, 0.11%)</title><rect x="21.3155%" y="933" width="0.1104%" height="15" fill="rgb(225,85,32)" fg:x="1737" fg:w="9"/><text x="21.5655%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (9 samples, 0.11%)</title><rect x="21.3155%" y="917" width="0.1104%" height="15" fill="rgb(245,209,47)" fg:x="1737" fg:w="9"/><text x="21.5655%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (9 samples, 0.11%)</title><rect x="21.3155%" y="901" width="0.1104%" height="15" fill="rgb(218,220,15)" fg:x="1737" fg:w="9"/><text x="21.5655%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 0.09%)</title><rect x="21.3400%" y="885" width="0.0859%" height="15" fill="rgb(222,202,31)" fg:x="1739" fg:w="7"/><text x="21.5900%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.09%)</title><rect x="21.3400%" y="869" width="0.0859%" height="15" fill="rgb(243,203,4)" fg:x="1739" fg:w="7"/><text x="21.5900%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="21.4137%" y="853" width="0.0123%" height="15" fill="rgb(237,92,17)" fg:x="1745" fg:w="1"/><text x="21.6637%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="21.4137%" y="837" width="0.0123%" height="15" fill="rgb(231,119,7)" fg:x="1745" fg:w="1"/><text x="21.6637%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="21.4137%" y="821" width="0.0123%" height="15" fill="rgb(237,82,41)" fg:x="1745" fg:w="1"/><text x="21.6637%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="21.4137%" y="805" width="0.0123%" height="15" fill="rgb(226,81,48)" fg:x="1745" fg:w="1"/><text x="21.6637%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="21.4137%" y="789" width="0.0123%" height="15" fill="rgb(234,70,51)" fg:x="1745" fg:w="1"/><text x="21.6637%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="21.4137%" y="773" width="0.0123%" height="15" fill="rgb(251,86,4)" fg:x="1745" fg:w="1"/><text x="21.6637%" y="783.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="21.4259%" y="837" width="0.0123%" height="15" fill="rgb(244,144,28)" fg:x="1746" fg:w="1"/><text x="21.6759%" y="847.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="21.4259%" y="821" width="0.0123%" height="15" fill="rgb(232,161,39)" fg:x="1746" fg:w="1"/><text x="21.6759%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (6 samples, 0.07%)</title><rect x="21.4259%" y="853" width="0.0736%" height="15" fill="rgb(247,34,51)" fg:x="1746" fg:w="6"/><text x="21.6759%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (5 samples, 0.06%)</title><rect x="21.4382%" y="837" width="0.0614%" height="15" fill="rgb(225,132,2)" fg:x="1747" fg:w="5"/><text x="21.6882%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (5 samples, 0.06%)</title><rect x="21.4382%" y="821" width="0.0614%" height="15" fill="rgb(209,159,44)" fg:x="1747" fg:w="5"/><text x="21.6882%" y="831.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::iter_assets (7 samples, 0.09%)</title><rect x="21.4259%" y="949" width="0.0859%" height="15" fill="rgb(251,214,1)" fg:x="1746" fg:w="7"/><text x="21.6759%" y="959.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (7 samples, 0.09%)</title><rect x="21.4259%" y="933" width="0.0859%" height="15" fill="rgb(247,84,47)" fg:x="1746" fg:w="7"/><text x="21.6759%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (7 samples, 0.09%)</title><rect x="21.4259%" y="917" width="0.0859%" height="15" fill="rgb(240,111,43)" fg:x="1746" fg:w="7"/><text x="21.6759%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (7 samples, 0.09%)</title><rect x="21.4259%" y="901" width="0.0859%" height="15" fill="rgb(215,214,35)" fg:x="1746" fg:w="7"/><text x="21.6759%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (7 samples, 0.09%)</title><rect x="21.4259%" y="885" width="0.0859%" height="15" fill="rgb(248,207,23)" fg:x="1746" fg:w="7"/><text x="21.6759%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (7 samples, 0.09%)</title><rect x="21.4259%" y="869" width="0.0859%" height="15" fill="rgb(214,186,4)" fg:x="1746" fg:w="7"/><text x="21.6759%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (1 samples, 0.01%)</title><rect x="21.4996%" y="853" width="0.0123%" height="15" fill="rgb(220,133,22)" fg:x="1752" fg:w="1"/><text x="21.7496%" y="863.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="21.5487%" y="901" width="0.0123%" height="15" fill="rgb(239,134,19)" fg:x="1756" fg:w="1"/><text x="21.7987%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="21.5487%" y="885" width="0.0123%" height="15" fill="rgb(250,140,9)" fg:x="1756" fg:w="1"/><text x="21.7987%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="21.5487%" y="869" width="0.0123%" height="15" fill="rgb(225,59,14)" fg:x="1756" fg:w="1"/><text x="21.7987%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="21.5487%" y="853" width="0.0123%" height="15" fill="rgb(214,152,51)" fg:x="1756" fg:w="1"/><text x="21.7987%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="21.5487%" y="837" width="0.0123%" height="15" fill="rgb(251,227,43)" fg:x="1756" fg:w="1"/><text x="21.7987%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="21.5609%" y="853" width="0.0123%" height="15" fill="rgb(241,96,17)" fg:x="1757" fg:w="1"/><text x="21.8109%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="21.5609%" y="837" width="0.0123%" height="15" fill="rgb(234,198,43)" fg:x="1757" fg:w="1"/><text x="21.8109%" y="847.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="21.5609%" y="821" width="0.0123%" height="15" fill="rgb(220,108,29)" fg:x="1757" fg:w="1"/><text x="21.8109%" y="831.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="21.5609%" y="805" width="0.0123%" height="15" fill="rgb(226,163,33)" fg:x="1757" fg:w="1"/><text x="21.8109%" y="815.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (3 samples, 0.04%)</title><rect x="21.5487%" y="917" width="0.0368%" height="15" fill="rgb(205,194,45)" fg:x="1756" fg:w="3"/><text x="21.7987%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="21.5609%" y="901" width="0.0245%" height="15" fill="rgb(206,143,44)" fg:x="1757" fg:w="2"/><text x="21.8109%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="21.5609%" y="885" width="0.0245%" height="15" fill="rgb(236,136,36)" fg:x="1757" fg:w="2"/><text x="21.8109%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="21.5609%" y="869" width="0.0245%" height="15" fill="rgb(249,172,42)" fg:x="1757" fg:w="2"/><text x="21.8109%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="21.5732%" y="853" width="0.0123%" height="15" fill="rgb(216,139,23)" fg:x="1758" fg:w="1"/><text x="21.8232%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="21.5732%" y="837" width="0.0123%" height="15" fill="rgb(207,166,20)" fg:x="1758" fg:w="1"/><text x="21.8232%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="21.5732%" y="821" width="0.0123%" height="15" fill="rgb(210,209,22)" fg:x="1758" fg:w="1"/><text x="21.8232%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="21.5732%" y="805" width="0.0123%" height="15" fill="rgb(232,118,20)" fg:x="1758" fg:w="1"/><text x="21.8232%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="21.5732%" y="789" width="0.0123%" height="15" fill="rgb(238,113,42)" fg:x="1758" fg:w="1"/><text x="21.8232%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="21.5732%" y="773" width="0.0123%" height="15" fill="rgb(231,42,5)" fg:x="1758" fg:w="1"/><text x="21.8232%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="21.5732%" y="757" width="0.0123%" height="15" fill="rgb(243,166,24)" fg:x="1758" fg:w="1"/><text x="21.8232%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="21.5732%" y="741" width="0.0123%" height="15" fill="rgb(237,226,12)" fg:x="1758" fg:w="1"/><text x="21.8232%" y="751.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="21.5732%" y="725" width="0.0123%" height="15" fill="rgb(229,133,24)" fg:x="1758" fg:w="1"/><text x="21.8232%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="21.5855%" y="917" width="0.0123%" height="15" fill="rgb(238,33,43)" fg:x="1759" fg:w="1"/><text x="21.8355%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="21.5855%" y="901" width="0.0123%" height="15" fill="rgb(227,59,38)" fg:x="1759" fg:w="1"/><text x="21.8355%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="21.5855%" y="885" width="0.0123%" height="15" fill="rgb(230,97,0)" fg:x="1759" fg:w="1"/><text x="21.8355%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="21.5855%" y="869" width="0.0123%" height="15" fill="rgb(250,173,50)" fg:x="1759" fg:w="1"/><text x="21.8355%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="21.5855%" y="853" width="0.0123%" height="15" fill="rgb(240,15,50)" fg:x="1759" fg:w="1"/><text x="21.8355%" y="863.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (6 samples, 0.07%)</title><rect x="21.5364%" y="933" width="0.0736%" height="15" fill="rgb(221,93,22)" fg:x="1755" fg:w="6"/><text x="21.7864%" y="943.50"></text></g><g><title>wgpu::Device::create_bind_group (1 samples, 0.01%)</title><rect x="21.5977%" y="917" width="0.0123%" height="15" fill="rgb(245,180,53)" fg:x="1760" fg:w="1"/><text x="21.8477%" y="927.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (1 samples, 0.01%)</title><rect x="21.5977%" y="901" width="0.0123%" height="15" fill="rgb(231,88,51)" fg:x="1760" fg:w="1"/><text x="21.8477%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::binding_model::BindGroupDescriptor&gt; (1 samples, 0.01%)</title><rect x="21.5977%" y="885" width="0.0123%" height="15" fill="rgb(240,58,21)" fg:x="1760" fg:w="1"/><text x="21.8477%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::borrow::Cow&lt;str&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="21.5977%" y="869" width="0.0123%" height="15" fill="rgb(237,21,10)" fg:x="1760" fg:w="1"/><text x="21.8477%" y="879.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get_bind_group (4 samples, 0.05%)</title><rect x="21.6100%" y="933" width="0.0491%" height="15" fill="rgb(218,43,11)" fg:x="1761" fg:w="4"/><text x="21.8600%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.05%)</title><rect x="21.6100%" y="917" width="0.0491%" height="15" fill="rgb(218,221,29)" fg:x="1761" fg:w="4"/><text x="21.8600%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.05%)</title><rect x="21.6100%" y="901" width="0.0491%" height="15" fill="rgb(214,118,42)" fg:x="1761" fg:w="4"/><text x="21.8600%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.05%)</title><rect x="21.6100%" y="885" width="0.0491%" height="15" fill="rgb(251,200,26)" fg:x="1761" fg:w="4"/><text x="21.8600%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.05%)</title><rect x="21.6100%" y="869" width="0.0491%" height="15" fill="rgb(237,101,39)" fg:x="1761" fg:w="4"/><text x="21.8600%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.05%)</title><rect x="21.6100%" y="853" width="0.0491%" height="15" fill="rgb(251,117,11)" fg:x="1761" fg:w="4"/><text x="21.8600%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="21.6468%" y="837" width="0.0123%" height="15" fill="rgb(216,223,23)" fg:x="1764" fg:w="1"/><text x="21.8968%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="21.6468%" y="821" width="0.0123%" height="15" fill="rgb(251,54,12)" fg:x="1764" fg:w="1"/><text x="21.8968%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="21.6468%" y="805" width="0.0123%" height="15" fill="rgb(254,176,54)" fg:x="1764" fg:w="1"/><text x="21.8968%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="21.6468%" y="789" width="0.0123%" height="15" fill="rgb(210,32,8)" fg:x="1764" fg:w="1"/><text x="21.8968%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="21.6468%" y="773" width="0.0123%" height="15" fill="rgb(235,52,38)" fg:x="1764" fg:w="1"/><text x="21.8968%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="21.6468%" y="757" width="0.0123%" height="15" fill="rgb(231,4,44)" fg:x="1764" fg:w="1"/><text x="21.8968%" y="767.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="21.6714%" y="853" width="0.0123%" height="15" fill="rgb(249,2,32)" fg:x="1766" fg:w="1"/><text x="21.9214%" y="863.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="21.6714%" y="837" width="0.0123%" height="15" fill="rgb(224,65,26)" fg:x="1766" fg:w="1"/><text x="21.9214%" y="847.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="21.6714%" y="821" width="0.0123%" height="15" fill="rgb(250,73,40)" fg:x="1766" fg:w="1"/><text x="21.9214%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.06%)</title><rect x="21.6714%" y="869" width="0.0614%" height="15" fill="rgb(253,177,16)" fg:x="1766" fg:w="5"/><text x="21.9214%" y="879.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (4 samples, 0.05%)</title><rect x="21.6836%" y="853" width="0.0491%" height="15" fill="rgb(217,32,34)" fg:x="1767" fg:w="4"/><text x="21.9336%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.02%)</title><rect x="21.7450%" y="789" width="0.0245%" height="15" fill="rgb(212,7,10)" fg:x="1772" fg:w="2"/><text x="21.9950%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.05%)</title><rect x="21.7695%" y="789" width="0.0491%" height="15" fill="rgb(245,89,8)" fg:x="1774" fg:w="4"/><text x="22.0195%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.05%)</title><rect x="21.7695%" y="773" width="0.0491%" height="15" fill="rgb(237,16,53)" fg:x="1774" fg:w="4"/><text x="22.0195%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.05%)</title><rect x="21.7695%" y="757" width="0.0491%" height="15" fill="rgb(250,204,30)" fg:x="1774" fg:w="4"/><text x="22.0195%" y="767.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (56 samples, 0.69%)</title><rect x="21.1437%" y="981" width="0.6872%" height="15" fill="rgb(208,77,27)" fg:x="1723" fg:w="56"/><text x="21.3937%" y="991.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (56 samples, 0.69%)</title><rect x="21.1437%" y="965" width="0.6872%" height="15" fill="rgb(250,204,28)" fg:x="1723" fg:w="56"/><text x="21.3937%" y="975.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (26 samples, 0.32%)</title><rect x="21.5118%" y="949" width="0.3191%" height="15" fill="rgb(244,63,21)" fg:x="1753" fg:w="26"/><text x="21.7618%" y="959.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group_status (14 samples, 0.17%)</title><rect x="21.6591%" y="933" width="0.1718%" height="15" fill="rgb(236,85,44)" fg:x="1765" fg:w="14"/><text x="21.9091%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.16%)</title><rect x="21.6714%" y="917" width="0.1595%" height="15" fill="rgb(215,98,4)" fg:x="1766" fg:w="13"/><text x="21.9214%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (13 samples, 0.16%)</title><rect x="21.6714%" y="901" width="0.1595%" height="15" fill="rgb(235,38,11)" fg:x="1766" fg:w="13"/><text x="21.9214%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.16%)</title><rect x="21.6714%" y="885" width="0.1595%" height="15" fill="rgb(254,186,25)" fg:x="1766" fg:w="13"/><text x="21.9214%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.10%)</title><rect x="21.7327%" y="869" width="0.0982%" height="15" fill="rgb(225,55,31)" fg:x="1771" fg:w="8"/><text x="21.9827%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.10%)</title><rect x="21.7327%" y="853" width="0.0982%" height="15" fill="rgb(211,15,21)" fg:x="1771" fg:w="8"/><text x="21.9827%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.09%)</title><rect x="21.7450%" y="837" width="0.0859%" height="15" fill="rgb(215,187,41)" fg:x="1772" fg:w="7"/><text x="21.9950%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.09%)</title><rect x="21.7450%" y="821" width="0.0859%" height="15" fill="rgb(248,69,32)" fg:x="1772" fg:w="7"/><text x="21.9950%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.09%)</title><rect x="21.7450%" y="805" width="0.0859%" height="15" fill="rgb(252,102,52)" fg:x="1772" fg:w="7"/><text x="21.9950%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="21.8186%" y="789" width="0.0123%" height="15" fill="rgb(253,140,32)" fg:x="1778" fg:w="1"/><text x="22.0686%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="21.8186%" y="773" width="0.0123%" height="15" fill="rgb(216,56,42)" fg:x="1778" fg:w="1"/><text x="22.0686%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="21.8186%" y="757" width="0.0123%" height="15" fill="rgb(216,184,14)" fg:x="1778" fg:w="1"/><text x="22.0686%" y="767.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="21.8186%" y="741" width="0.0123%" height="15" fill="rgb(237,187,27)" fg:x="1778" fg:w="1"/><text x="22.0686%" y="751.50"></text></g><g><title>bevy_render::draw::Draw::set_pipeline (2 samples, 0.02%)</title><rect x="21.8432%" y="965" width="0.0245%" height="15" fill="rgb(219,65,3)" fg:x="1780" fg:w="2"/><text x="22.0932%" y="975.50"></text></g><g><title>bevy_render::draw::Draw::render_command (2 samples, 0.02%)</title><rect x="21.8432%" y="949" width="0.0245%" height="15" fill="rgb(245,83,25)" fg:x="1780" fg:w="2"/><text x="22.0932%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="21.8432%" y="933" width="0.0245%" height="15" fill="rgb(214,205,45)" fg:x="1780" fg:w="2"/><text x="22.0932%" y="943.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="21.8432%" y="917" width="0.0245%" height="15" fill="rgb(241,20,18)" fg:x="1780" fg:w="2"/><text x="22.0932%" y="927.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::ShaderSpecialization as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="21.8677%" y="853" width="0.0245%" height="15" fill="rgb(232,163,23)" fg:x="1782" fg:w="2"/><text x="22.1177%" y="863.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="21.8677%" y="837" width="0.0245%" height="15" fill="rgb(214,5,46)" fg:x="1782" fg:w="2"/><text x="22.1177%" y="847.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="21.8923%" y="837" width="0.0123%" height="15" fill="rgb(229,78,17)" fg:x="1784" fg:w="1"/><text x="22.1423%" y="847.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="21.8923%" y="821" width="0.0123%" height="15" fill="rgb(248,89,10)" fg:x="1784" fg:w="1"/><text x="22.1423%" y="831.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="21.9045%" y="677" width="0.0123%" height="15" fill="rgb(248,54,15)" fg:x="1785" fg:w="1"/><text x="22.1545%" y="687.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout as core::cmp::PartialEq&gt;::eq (4 samples, 0.05%)</title><rect x="21.8923%" y="853" width="0.0491%" height="15" fill="rgb(223,116,6)" fg:x="1784" fg:w="4"/><text x="22.1423%" y="863.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (3 samples, 0.04%)</title><rect x="21.9045%" y="837" width="0.0368%" height="15" fill="rgb(205,125,38)" fg:x="1785" fg:w="3"/><text x="22.1545%" y="847.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (3 samples, 0.04%)</title><rect x="21.9045%" y="821" width="0.0368%" height="15" fill="rgb(251,78,38)" fg:x="1785" fg:w="3"/><text x="22.1545%" y="831.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (3 samples, 0.04%)</title><rect x="21.9045%" y="805" width="0.0368%" height="15" fill="rgb(253,78,28)" fg:x="1785" fg:w="3"/><text x="22.1545%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (3 samples, 0.04%)</title><rect x="21.9045%" y="789" width="0.0368%" height="15" fill="rgb(209,120,3)" fg:x="1785" fg:w="3"/><text x="22.1545%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.04%)</title><rect x="21.9045%" y="773" width="0.0368%" height="15" fill="rgb(238,229,9)" fg:x="1785" fg:w="3"/><text x="22.1545%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (3 samples, 0.04%)</title><rect x="21.9045%" y="757" width="0.0368%" height="15" fill="rgb(253,159,18)" fg:x="1785" fg:w="3"/><text x="22.1545%" y="767.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (3 samples, 0.04%)</title><rect x="21.9045%" y="741" width="0.0368%" height="15" fill="rgb(244,42,34)" fg:x="1785" fg:w="3"/><text x="22.1545%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (3 samples, 0.04%)</title><rect x="21.9045%" y="725" width="0.0368%" height="15" fill="rgb(224,8,7)" fg:x="1785" fg:w="3"/><text x="22.1545%" y="735.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute as core::cmp::PartialEq&gt;::eq (3 samples, 0.04%)</title><rect x="21.9045%" y="709" width="0.0368%" height="15" fill="rgb(210,201,45)" fg:x="1785" fg:w="3"/><text x="22.1545%" y="719.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (3 samples, 0.04%)</title><rect x="21.9045%" y="693" width="0.0368%" height="15" fill="rgb(252,185,21)" fg:x="1785" fg:w="3"/><text x="22.1545%" y="703.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="21.9168%" y="677" width="0.0245%" height="15" fill="rgb(223,131,1)" fg:x="1786" fg:w="2"/><text x="22.1668%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="21.9168%" y="661" width="0.0245%" height="15" fill="rgb(245,141,16)" fg:x="1786" fg:w="2"/><text x="22.1668%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="21.9168%" y="645" width="0.0245%" height="15" fill="rgb(229,55,45)" fg:x="1786" fg:w="2"/><text x="22.1668%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="21.9168%" y="629" width="0.0245%" height="15" fill="rgb(208,92,15)" fg:x="1786" fg:w="2"/><text x="22.1668%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="21.9413%" y="853" width="0.0123%" height="15" fill="rgb(234,185,47)" fg:x="1788" fg:w="1"/><text x="22.1913%" y="863.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.9782%" y="805" width="0.0123%" height="15" fill="rgb(253,104,50)" fg:x="1791" fg:w="1"/><text x="22.2282%" y="815.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.9782%" y="789" width="0.0123%" height="15" fill="rgb(205,70,7)" fg:x="1791" fg:w="1"/><text x="22.2282%" y="799.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.9782%" y="773" width="0.0123%" height="15" fill="rgb(240,178,43)" fg:x="1791" fg:w="1"/><text x="22.2282%" y="783.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.9782%" y="757" width="0.0123%" height="15" fill="rgb(214,112,2)" fg:x="1791" fg:w="1"/><text x="22.2282%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.9782%" y="741" width="0.0123%" height="15" fill="rgb(206,46,17)" fg:x="1791" fg:w="1"/><text x="22.2282%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="21.9782%" y="725" width="0.0123%" height="15" fill="rgb(225,220,16)" fg:x="1791" fg:w="1"/><text x="22.2282%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="21.9782%" y="709" width="0.0123%" height="15" fill="rgb(238,65,40)" fg:x="1791" fg:w="1"/><text x="22.2282%" y="719.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="21.9904%" y="693" width="0.0123%" height="15" fill="rgb(230,151,21)" fg:x="1792" fg:w="1"/><text x="22.2404%" y="703.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="21.9904%" y="677" width="0.0123%" height="15" fill="rgb(218,58,49)" fg:x="1792" fg:w="1"/><text x="22.2404%" y="687.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="21.9904%" y="661" width="0.0123%" height="15" fill="rgb(219,179,14)" fg:x="1792" fg:w="1"/><text x="22.2404%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="21.9904%" y="709" width="0.0368%" height="15" fill="rgb(223,72,1)" fg:x="1792" fg:w="3"/><text x="22.2404%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="22.0027%" y="693" width="0.0245%" height="15" fill="rgb(238,126,10)" fg:x="1793" fg:w="2"/><text x="22.2527%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="22.0027%" y="677" width="0.0245%" height="15" fill="rgb(224,206,38)" fg:x="1793" fg:w="2"/><text x="22.2527%" y="687.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="22.0027%" y="661" width="0.0245%" height="15" fill="rgb(212,201,54)" fg:x="1793" fg:w="2"/><text x="22.2527%" y="671.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (2 samples, 0.02%)</title><rect x="22.0027%" y="645" width="0.0245%" height="15" fill="rgb(218,154,48)" fg:x="1793" fg:w="2"/><text x="22.2527%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.06%)</title><rect x="22.0272%" y="677" width="0.0614%" height="15" fill="rgb(232,93,24)" fg:x="1795" fg:w="5"/><text x="22.2772%" y="687.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (5 samples, 0.06%)</title><rect x="22.0272%" y="661" width="0.0614%" height="15" fill="rgb(245,30,21)" fg:x="1795" fg:w="5"/><text x="22.2772%" y="671.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.06%)</title><rect x="22.0272%" y="645" width="0.0614%" height="15" fill="rgb(242,148,29)" fg:x="1795" fg:w="5"/><text x="22.2772%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.06%)</title><rect x="22.0272%" y="629" width="0.0614%" height="15" fill="rgb(244,153,54)" fg:x="1795" fg:w="5"/><text x="22.2772%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.06%)</title><rect x="22.0272%" y="613" width="0.0614%" height="15" fill="rgb(252,87,22)" fg:x="1795" fg:w="5"/><text x="22.2772%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.06%)</title><rect x="22.0272%" y="597" width="0.0614%" height="15" fill="rgb(210,51,29)" fg:x="1795" fg:w="5"/><text x="22.2772%" y="607.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.04%)</title><rect x="22.0518%" y="581" width="0.0368%" height="15" fill="rgb(242,136,47)" fg:x="1797" fg:w="3"/><text x="22.3018%" y="591.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (23 samples, 0.28%)</title><rect x="21.8309%" y="981" width="0.2822%" height="15" fill="rgb(238,68,4)" fg:x="1779" fg:w="23"/><text x="22.0809%" y="991.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (20 samples, 0.25%)</title><rect x="21.8677%" y="965" width="0.2454%" height="15" fill="rgb(242,161,30)" fg:x="1782" fg:w="20"/><text x="22.1177%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (20 samples, 0.25%)</title><rect x="21.8677%" y="949" width="0.2454%" height="15" fill="rgb(218,58,44)" fg:x="1782" fg:w="20"/><text x="22.1177%" y="959.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}} (20 samples, 0.25%)</title><rect x="21.8677%" y="933" width="0.2454%" height="15" fill="rgb(252,125,32)" fg:x="1782" fg:w="20"/><text x="22.1177%" y="943.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (20 samples, 0.25%)</title><rect x="21.8677%" y="917" width="0.2454%" height="15" fill="rgb(219,178,0)" fg:x="1782" fg:w="20"/><text x="22.1177%" y="927.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}}::{{closure}} (20 samples, 0.25%)</title><rect x="21.8677%" y="901" width="0.2454%" height="15" fill="rgb(213,152,7)" fg:x="1782" fg:w="20"/><text x="22.1177%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (20 samples, 0.25%)</title><rect x="21.8677%" y="885" width="0.2454%" height="15" fill="rgb(249,109,34)" fg:x="1782" fg:w="20"/><text x="22.1177%" y="895.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (20 samples, 0.25%)</title><rect x="21.8677%" y="869" width="0.2454%" height="15" fill="rgb(232,96,21)" fg:x="1782" fg:w="20"/><text x="22.1177%" y="879.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (13 samples, 0.16%)</title><rect x="21.9536%" y="853" width="0.1595%" height="15" fill="rgb(228,27,39)" fg:x="1789" fg:w="13"/><text x="22.2036%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (11 samples, 0.13%)</title><rect x="21.9782%" y="837" width="0.1350%" height="15" fill="rgb(211,182,52)" fg:x="1791" fg:w="11"/><text x="22.2282%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (11 samples, 0.13%)</title><rect x="21.9782%" y="821" width="0.1350%" height="15" fill="rgb(234,178,38)" fg:x="1791" fg:w="11"/><text x="22.2282%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (10 samples, 0.12%)</title><rect x="21.9904%" y="805" width="0.1227%" height="15" fill="rgb(221,111,3)" fg:x="1792" fg:w="10"/><text x="22.2404%" y="815.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (10 samples, 0.12%)</title><rect x="21.9904%" y="789" width="0.1227%" height="15" fill="rgb(228,175,21)" fg:x="1792" fg:w="10"/><text x="22.2404%" y="799.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (10 samples, 0.12%)</title><rect x="21.9904%" y="773" width="0.1227%" height="15" fill="rgb(228,174,43)" fg:x="1792" fg:w="10"/><text x="22.2404%" y="783.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (10 samples, 0.12%)</title><rect x="21.9904%" y="757" width="0.1227%" height="15" fill="rgb(211,191,0)" fg:x="1792" fg:w="10"/><text x="22.2404%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (10 samples, 0.12%)</title><rect x="21.9904%" y="741" width="0.1227%" height="15" fill="rgb(253,117,3)" fg:x="1792" fg:w="10"/><text x="22.2404%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.12%)</title><rect x="21.9904%" y="725" width="0.1227%" height="15" fill="rgb(241,127,19)" fg:x="1792" fg:w="10"/><text x="22.2404%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (7 samples, 0.09%)</title><rect x="22.0272%" y="709" width="0.0859%" height="15" fill="rgb(218,103,12)" fg:x="1795" fg:w="7"/><text x="22.2772%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.09%)</title><rect x="22.0272%" y="693" width="0.0859%" height="15" fill="rgb(236,214,43)" fg:x="1795" fg:w="7"/><text x="22.2772%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="22.0886%" y="677" width="0.0245%" height="15" fill="rgb(244,144,19)" fg:x="1800" fg:w="2"/><text x="22.3386%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="22.0886%" y="661" width="0.0245%" height="15" fill="rgb(246,188,10)" fg:x="1800" fg:w="2"/><text x="22.3386%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="22.0886%" y="645" width="0.0245%" height="15" fill="rgb(212,193,33)" fg:x="1800" fg:w="2"/><text x="22.3386%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="22.0886%" y="629" width="0.0245%" height="15" fill="rgb(241,51,29)" fg:x="1800" fg:w="2"/><text x="22.3386%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="22.0886%" y="613" width="0.0245%" height="15" fill="rgb(211,58,19)" fg:x="1800" fg:w="2"/><text x="22.3386%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="22.0886%" y="597" width="0.0245%" height="15" fill="rgb(229,111,26)" fg:x="1800" fg:w="2"/><text x="22.3386%" y="607.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (91 samples, 1.12%)</title><rect x="21.0087%" y="997" width="1.1167%" height="15" fill="rgb(213,115,40)" fg:x="1712" fg:w="91"/><text x="21.2587%" y="1007.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (1 samples, 0.01%)</title><rect x="22.1131%" y="981" width="0.0123%" height="15" fill="rgb(209,56,44)" fg:x="1802" fg:w="1"/><text x="22.3631%" y="991.50"></text></g><g><title>bevy_render::draw::Draw::set_vertex_buffer (1 samples, 0.01%)</title><rect x="22.1131%" y="965" width="0.0123%" height="15" fill="rgb(230,108,32)" fg:x="1802" fg:w="1"/><text x="22.3631%" y="975.50"></text></g><g><title>bevy_render::draw::Draw::render_command (1 samples, 0.01%)</title><rect x="22.1131%" y="949" width="0.0123%" height="15" fill="rgb(216,165,31)" fg:x="1802" fg:w="1"/><text x="22.3631%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="22.1131%" y="933" width="0.0123%" height="15" fill="rgb(218,122,21)" fg:x="1802" fg:w="1"/><text x="22.3631%" y="943.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="22.1131%" y="917" width="0.0123%" height="15" fill="rgb(223,224,47)" fg:x="1802" fg:w="1"/><text x="22.3631%" y="927.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (4 samples, 0.05%)</title><rect x="22.2113%" y="949" width="0.0491%" height="15" fill="rgb(238,102,44)" fg:x="1810" fg:w="4"/><text x="22.4613%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (4 samples, 0.05%)</title><rect x="22.2113%" y="933" width="0.0491%" height="15" fill="rgb(236,46,40)" fg:x="1810" fg:w="4"/><text x="22.4613%" y="943.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_table (5 samples, 0.06%)</title><rect x="22.2113%" y="965" width="0.0614%" height="15" fill="rgb(247,202,50)" fg:x="1810" fg:w="5"/><text x="22.4613%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="22.2604%" y="949" width="0.0123%" height="15" fill="rgb(209,99,20)" fg:x="1814" fg:w="1"/><text x="22.5104%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (1 samples, 0.01%)</title><rect x="22.2604%" y="933" width="0.0123%" height="15" fill="rgb(252,27,34)" fg:x="1814" fg:w="1"/><text x="22.5104%" y="943.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (4 samples, 0.05%)</title><rect x="22.2727%" y="965" width="0.0491%" height="15" fill="rgb(215,206,23)" fg:x="1815" fg:w="4"/><text x="22.5227%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::EntityFetch as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (4 samples, 0.05%)</title><rect x="22.2727%" y="949" width="0.0491%" height="15" fill="rgb(212,135,36)" fg:x="1815" fg:w="4"/><text x="22.5227%" y="959.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.16%)</title><rect x="22.1745%" y="981" width="0.1595%" height="15" fill="rgb(240,189,1)" fg:x="1807" fg:w="13"/><text x="22.4245%" y="991.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="22.3218%" y="965" width="0.0123%" height="15" fill="rgb(242,56,20)" fg:x="1819" fg:w="1"/><text x="22.5718%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="22.3340%" y="965" width="0.0123%" height="15" fill="rgb(247,132,33)" fg:x="1820" fg:w="1"/><text x="22.5840%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::native_gpu_future::GpuFuture&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="22.3463%" y="949" width="0.0123%" height="15" fill="rgb(208,149,11)" fg:x="1821" fg:w="1"/><text x="22.5963%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;wgpu::backend::native_gpu_future::WakerOrResult&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="22.3463%" y="933" width="0.0123%" height="15" fill="rgb(211,33,11)" fg:x="1821" fg:w="1"/><text x="22.5963%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.3463%" y="917" width="0.0123%" height="15" fill="rgb(221,29,38)" fg:x="1821" fg:w="1"/><text x="22.5963%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="22.3463%" y="901" width="0.0123%" height="15" fill="rgb(206,182,49)" fg:x="1821" fg:w="1"/><text x="22.5963%" y="911.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="22.3463%" y="885" width="0.0123%" height="15" fill="rgb(216,140,1)" fg:x="1821" fg:w="1"/><text x="22.5963%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Weak&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;wgpu::backend::native_gpu_future::WakerOrResult&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="22.3463%" y="869" width="0.0123%" height="15" fill="rgb(232,57,40)" fg:x="1821" fg:w="1"/><text x="22.5963%" y="879.50"></text></g><g><title>&lt;alloc::sync::Weak&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.3463%" y="853" width="0.0123%" height="15" fill="rgb(224,186,18)" fg:x="1821" fg:w="1"/><text x="22.5963%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="22.3463%" y="837" width="0.0123%" height="15" fill="rgb(215,121,11)" fg:x="1821" fg:w="1"/><text x="22.5963%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="22.3463%" y="821" width="0.0123%" height="15" fill="rgb(245,147,10)" fg:x="1821" fg:w="1"/><text x="22.5963%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Parker&gt; (1 samples, 0.01%)</title><rect x="22.3586%" y="901" width="0.0123%" height="15" fill="rgb(238,153,13)" fg:x="1822" fg:w="1"/><text x="22.6086%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (1 samples, 0.01%)</title><rect x="22.3586%" y="885" width="0.0123%" height="15" fill="rgb(233,108,0)" fg:x="1822" fg:w="1"/><text x="22.6086%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (1 samples, 0.01%)</title><rect x="22.3586%" y="869" width="0.0123%" height="15" fill="rgb(212,157,17)" fg:x="1822" fg:w="1"/><text x="22.6086%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.3586%" y="853" width="0.0123%" height="15" fill="rgb(225,213,38)" fg:x="1822" fg:w="1"/><text x="22.6086%" y="863.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="22.3586%" y="837" width="0.0123%" height="15" fill="rgb(248,16,11)" fg:x="1822" fg:w="1"/><text x="22.6086%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Inner&gt; (1 samples, 0.01%)</title><rect x="22.3586%" y="821" width="0.0123%" height="15" fill="rgb(241,33,4)" fg:x="1822" fg:w="1"/><text x="22.6086%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="22.3586%" y="805" width="0.0123%" height="15" fill="rgb(222,26,43)" fg:x="1822" fg:w="1"/><text x="22.6086%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::mutex::MovableMutex&gt; (1 samples, 0.01%)</title><rect x="22.3586%" y="789" width="0.0123%" height="15" fill="rgb(243,29,36)" fg:x="1822" fg:w="1"/><text x="22.6086%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;std::sys::unix::mutex::Mutex&gt;&gt; (1 samples, 0.01%)</title><rect x="22.3586%" y="773" width="0.0123%" height="15" fill="rgb(241,9,27)" fg:x="1822" fg:w="1"/><text x="22.6086%" y="783.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="22.3708%" y="869" width="0.0123%" height="15" fill="rgb(205,117,26)" fg:x="1823" fg:w="1"/><text x="22.6208%" y="879.50"></text></g><g><title>parking::Parker::new (2 samples, 0.02%)</title><rect x="22.3708%" y="885" width="0.0245%" height="15" fill="rgb(209,80,39)" fg:x="1823" fg:w="2"/><text x="22.6208%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="22.3831%" y="869" width="0.0123%" height="15" fill="rgb(239,155,6)" fg:x="1824" fg:w="1"/><text x="22.6331%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::new (1 samples, 0.01%)</title><rect x="22.3831%" y="853" width="0.0123%" height="15" fill="rgb(212,104,12)" fg:x="1824" fg:w="1"/><text x="22.6331%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::init (1 samples, 0.01%)</title><rect x="22.3831%" y="837" width="0.0123%" height="15" fill="rgb(234,204,3)" fg:x="1824" fg:w="1"/><text x="22.6331%" y="847.50"></text></g><g><title>__GI___pthread_mutex_init (1 samples, 0.01%)</title><rect x="22.3831%" y="821" width="0.0123%" height="15" fill="rgb(251,218,7)" fg:x="1824" fg:w="1"/><text x="22.6331%" y="831.50"></text></g><g><title>futures_lite::future::block_on (5 samples, 0.06%)</title><rect x="22.3463%" y="965" width="0.0614%" height="15" fill="rgb(221,81,32)" fg:x="1821" fg:w="5"/><text x="22.5963%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.05%)</title><rect x="22.3586%" y="949" width="0.0491%" height="15" fill="rgb(214,152,26)" fg:x="1822" fg:w="4"/><text x="22.6086%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="22.3586%" y="933" width="0.0491%" height="15" fill="rgb(223,22,3)" fg:x="1822" fg:w="4"/><text x="22.6086%" y="943.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (4 samples, 0.05%)</title><rect x="22.3586%" y="917" width="0.0491%" height="15" fill="rgb(207,174,7)" fg:x="1822" fg:w="4"/><text x="22.6086%" y="927.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker (3 samples, 0.04%)</title><rect x="22.3708%" y="901" width="0.0368%" height="15" fill="rgb(224,19,52)" fg:x="1823" fg:w="3"/><text x="22.6208%" y="911.50"></text></g><g><title>waker_fn::waker_fn (1 samples, 0.01%)</title><rect x="22.3954%" y="885" width="0.0123%" height="15" fill="rgb(228,24,14)" fg:x="1825" fg:w="1"/><text x="22.6454%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="22.3954%" y="869" width="0.0123%" height="15" fill="rgb(230,153,43)" fg:x="1825" fg:w="1"/><text x="22.6454%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="22.3954%" y="853" width="0.0123%" height="15" fill="rgb(231,106,12)" fg:x="1825" fg:w="1"/><text x="22.6454%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="22.3954%" y="837" width="0.0123%" height="15" fill="rgb(215,92,2)" fg:x="1825" fg:w="1"/><text x="22.6454%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="22.3954%" y="821" width="0.0123%" height="15" fill="rgb(249,143,25)" fg:x="1825" fg:w="1"/><text x="22.6454%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="22.3954%" y="805" width="0.0123%" height="15" fill="rgb(252,7,35)" fg:x="1825" fg:w="1"/><text x="22.6454%" y="815.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="22.3954%" y="789" width="0.0123%" height="15" fill="rgb(216,69,40)" fg:x="1825" fg:w="1"/><text x="22.6454%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="22.3954%" y="773" width="0.0123%" height="15" fill="rgb(240,36,33)" fg:x="1825" fg:w="1"/><text x="22.6454%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="22.3954%" y="757" width="0.0123%" height="15" fill="rgb(231,128,14)" fg:x="1825" fg:w="1"/><text x="22.6454%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="22.4077%" y="965" width="0.0123%" height="15" fill="rgb(245,143,14)" fg:x="1826" fg:w="1"/><text x="22.6577%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="22.4077%" y="949" width="0.0123%" height="15" fill="rgb(222,130,28)" fg:x="1826" fg:w="1"/><text x="22.6577%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="22.4077%" y="933" width="0.0123%" height="15" fill="rgb(212,10,48)" fg:x="1826" fg:w="1"/><text x="22.6577%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="22.4077%" y="917" width="0.0123%" height="15" fill="rgb(254,118,45)" fg:x="1826" fg:w="1"/><text x="22.6577%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="22.4077%" y="901" width="0.0123%" height="15" fill="rgb(228,6,45)" fg:x="1826" fg:w="1"/><text x="22.6577%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="22.4077%" y="885" width="0.0123%" height="15" fill="rgb(241,18,35)" fg:x="1826" fg:w="1"/><text x="22.6577%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="22.4077%" y="869" width="0.0123%" height="15" fill="rgb(227,214,53)" fg:x="1826" fg:w="1"/><text x="22.6577%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="22.4077%" y="853" width="0.0123%" height="15" fill="rgb(224,107,51)" fg:x="1826" fg:w="1"/><text x="22.6577%" y="863.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="22.4077%" y="837" width="0.0123%" height="15" fill="rgb(248,60,28)" fg:x="1826" fg:w="1"/><text x="22.6577%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.01%)</title><rect x="22.4199%" y="933" width="0.0123%" height="15" fill="rgb(249,101,23)" fg:x="1827" fg:w="1"/><text x="22.6699%" y="943.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.4199%" y="917" width="0.0123%" height="15" fill="rgb(228,51,19)" fg:x="1827" fg:w="1"/><text x="22.6699%" y="927.50"></text></g><g><title>tracing::span::Span::do_exit (1 samples, 0.01%)</title><rect x="22.4199%" y="901" width="0.0123%" height="15" fill="rgb(213,20,6)" fg:x="1827" fg:w="1"/><text x="22.6699%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="22.4199%" y="885" width="0.0123%" height="15" fill="rgb(212,124,10)" fg:x="1827" fg:w="1"/><text x="22.6699%" y="895.50"></text></g><g><title>wgpu::backend::native_gpu_future::new_gpu_future (2 samples, 0.02%)</title><rect x="22.4322%" y="933" width="0.0245%" height="15" fill="rgb(248,3,40)" fg:x="1828" fg:w="2"/><text x="22.6822%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="22.4322%" y="917" width="0.0245%" height="15" fill="rgb(223,178,23)" fg:x="1828" fg:w="2"/><text x="22.6822%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="22.4322%" y="901" width="0.0245%" height="15" fill="rgb(240,132,45)" fg:x="1828" fg:w="2"/><text x="22.6822%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="22.4322%" y="885" width="0.0245%" height="15" fill="rgb(245,164,36)" fg:x="1828" fg:w="2"/><text x="22.6822%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="22.4322%" y="869" width="0.0245%" height="15" fill="rgb(231,188,53)" fg:x="1828" fg:w="2"/><text x="22.6822%" y="879.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="22.4322%" y="853" width="0.0245%" height="15" fill="rgb(237,198,39)" fg:x="1828" fg:w="2"/><text x="22.6822%" y="863.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="22.4322%" y="837" width="0.0245%" height="15" fill="rgb(223,120,35)" fg:x="1828" fg:w="2"/><text x="22.6822%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="22.4322%" y="821" width="0.0245%" height="15" fill="rgb(253,107,49)" fg:x="1828" fg:w="2"/><text x="22.6822%" y="831.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="22.4322%" y="805" width="0.0245%" height="15" fill="rgb(216,44,31)" fg:x="1828" fg:w="2"/><text x="22.6822%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::device::life::LifetimeTracker&lt;gfx_backend_vulkan::Backend&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="22.4567%" y="917" width="0.0123%" height="15" fill="rgb(253,87,21)" fg:x="1830" fg:w="1"/><text x="22.7067%" y="927.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.4567%" y="901" width="0.0123%" height="15" fill="rgb(226,18,2)" fg:x="1830" fg:w="1"/><text x="22.7067%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="22.4567%" y="885" width="0.0123%" height="15" fill="rgb(216,8,46)" fg:x="1830" fg:w="1"/><text x="22.7067%" y="895.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.01%)</title><rect x="22.4567%" y="869" width="0.0123%" height="15" fill="rgb(226,140,39)" fg:x="1830" fg:w="1"/><text x="22.7067%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (1 samples, 0.01%)</title><rect x="22.4567%" y="853" width="0.0123%" height="15" fill="rgb(221,194,54)" fg:x="1830" fg:w="1"/><text x="22.7067%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.01%)</title><rect x="22.4567%" y="837" width="0.0123%" height="15" fill="rgb(213,92,11)" fg:x="1830" fg:w="1"/><text x="22.7067%" y="847.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.01%)</title><rect x="22.4567%" y="821" width="0.0123%" height="15" fill="rgb(229,162,46)" fg:x="1830" fg:w="1"/><text x="22.7067%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.01%)</title><rect x="22.4567%" y="805" width="0.0123%" height="15" fill="rgb(214,111,36)" fg:x="1830" fg:w="1"/><text x="22.7067%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.01%)</title><rect x="22.4567%" y="789" width="0.0123%" height="15" fill="rgb(207,6,21)" fg:x="1830" fg:w="1"/><text x="22.7067%" y="799.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="22.4567%" y="773" width="0.0123%" height="15" fill="rgb(213,127,38)" fg:x="1830" fg:w="1"/><text x="22.7067%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::track::TrackerSet&gt;&gt; (1 samples, 0.01%)</title><rect x="22.4690%" y="917" width="0.0123%" height="15" fill="rgb(238,118,32)" fg:x="1831" fg:w="1"/><text x="22.7190%" y="927.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.4690%" y="901" width="0.0123%" height="15" fill="rgb(240,139,39)" fg:x="1831" fg:w="1"/><text x="22.7190%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="22.4690%" y="885" width="0.0123%" height="15" fill="rgb(235,10,37)" fg:x="1831" fg:w="1"/><text x="22.7190%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="22.4690%" y="869" width="0.0123%" height="15" fill="rgb(249,171,38)" fg:x="1831" fg:w="1"/><text x="22.7190%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="22.4690%" y="853" width="0.0123%" height="15" fill="rgb(242,144,32)" fg:x="1831" fg:w="1"/><text x="22.7190%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::device::Device&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="22.4813%" y="917" width="0.0123%" height="15" fill="rgb(217,117,21)" fg:x="1832" fg:w="1"/><text x="22.7313%" y="927.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.4813%" y="901" width="0.0123%" height="15" fill="rgb(249,87,1)" fg:x="1832" fg:w="1"/><text x="22.7313%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.01%)</title><rect x="22.4813%" y="885" width="0.0123%" height="15" fill="rgb(248,196,48)" fg:x="1832" fg:w="1"/><text x="22.7313%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::unlock_shared_slow (1 samples, 0.01%)</title><rect x="22.4813%" y="869" width="0.0123%" height="15" fill="rgb(251,206,33)" fg:x="1832" fg:w="1"/><text x="22.7313%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (1 samples, 0.01%)</title><rect x="22.4813%" y="853" width="0.0123%" height="15" fill="rgb(232,141,28)" fg:x="1832" fg:w="1"/><text x="22.7313%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.01%)</title><rect x="22.4813%" y="837" width="0.0123%" height="15" fill="rgb(209,167,14)" fg:x="1832" fg:w="1"/><text x="22.7313%" y="847.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.01%)</title><rect x="22.4813%" y="821" width="0.0123%" height="15" fill="rgb(225,11,50)" fg:x="1832" fg:w="1"/><text x="22.7313%" y="831.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.01%)</title><rect x="22.4813%" y="805" width="0.0123%" height="15" fill="rgb(209,50,20)" fg:x="1832" fg:w="1"/><text x="22.7313%" y="815.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.01%)</title><rect x="22.4813%" y="789" width="0.0123%" height="15" fill="rgb(212,17,46)" fg:x="1832" fg:w="1"/><text x="22.7313%" y="799.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="22.4813%" y="773" width="0.0123%" height="15" fill="rgb(216,101,39)" fg:x="1832" fg:w="1"/><text x="22.7313%" y="783.50"></text></g><g><title>tracing_core::metadata::LevelFilter::current (1 samples, 0.01%)</title><rect x="22.4936%" y="917" width="0.0123%" height="15" fill="rgb(212,228,48)" fg:x="1833" fg:w="1"/><text x="22.7436%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="22.4936%" y="901" width="0.0123%" height="15" fill="rgb(250,6,50)" fg:x="1833" fg:w="1"/><text x="22.7436%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="22.4936%" y="885" width="0.0123%" height="15" fill="rgb(250,160,48)" fg:x="1833" fg:w="1"/><text x="22.7436%" y="895.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (1 samples, 0.01%)</title><rect x="22.5058%" y="917" width="0.0123%" height="15" fill="rgb(244,216,33)" fg:x="1834" fg:w="1"/><text x="22.7558%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="22.5058%" y="901" width="0.0123%" height="15" fill="rgb(207,157,5)" fg:x="1834" fg:w="1"/><text x="22.7558%" y="911.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="22.5058%" y="885" width="0.0123%" height="15" fill="rgb(228,199,8)" fg:x="1834" fg:w="1"/><text x="22.7558%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="22.5058%" y="869" width="0.0123%" height="15" fill="rgb(227,80,20)" fg:x="1834" fg:w="1"/><text x="22.7558%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="22.5058%" y="853" width="0.0123%" height="15" fill="rgb(222,9,33)" fg:x="1834" fg:w="1"/><text x="22.7558%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::park (3 samples, 0.04%)</title><rect x="22.5181%" y="837" width="0.0368%" height="15" fill="rgb(239,44,28)" fg:x="1835" fg:w="3"/><text x="22.7681%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (3 samples, 0.04%)</title><rect x="22.5181%" y="821" width="0.0368%" height="15" fill="rgb(249,187,43)" fg:x="1835" fg:w="3"/><text x="22.7681%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (3 samples, 0.04%)</title><rect x="22.5181%" y="805" width="0.0368%" height="15" fill="rgb(216,141,28)" fg:x="1835" fg:w="3"/><text x="22.7681%" y="815.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (3 samples, 0.04%)</title><rect x="22.5181%" y="789" width="0.0368%" height="15" fill="rgb(230,154,53)" fg:x="1835" fg:w="3"/><text x="22.7681%" y="799.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (3 samples, 0.04%)</title><rect x="22.5181%" y="773" width="0.0368%" height="15" fill="rgb(227,82,4)" fg:x="1835" fg:w="3"/><text x="22.7681%" y="783.50"></text></g><g><title>syscall (3 samples, 0.04%)</title><rect x="22.5181%" y="757" width="0.0368%" height="15" fill="rgb(220,107,16)" fg:x="1835" fg:w="3"/><text x="22.7681%" y="767.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life (6 samples, 0.07%)</title><rect x="22.5181%" y="917" width="0.0736%" height="15" fill="rgb(207,187,2)" fg:x="1835" fg:w="6"/><text x="22.7681%" y="927.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life_internal (6 samples, 0.07%)</title><rect x="22.5181%" y="901" width="0.0736%" height="15" fill="rgb(210,162,52)" fg:x="1835" fg:w="6"/><text x="22.7681%" y="911.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (6 samples, 0.07%)</title><rect x="22.5181%" y="885" width="0.0736%" height="15" fill="rgb(217,216,49)" fg:x="1835" fg:w="6"/><text x="22.7681%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (6 samples, 0.07%)</title><rect x="22.5181%" y="869" width="0.0736%" height="15" fill="rgb(218,146,49)" fg:x="1835" fg:w="6"/><text x="22.7681%" y="879.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (6 samples, 0.07%)</title><rect x="22.5181%" y="853" width="0.0736%" height="15" fill="rgb(216,55,40)" fg:x="1835" fg:w="6"/><text x="22.7681%" y="863.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (3 samples, 0.04%)</title><rect x="22.5549%" y="837" width="0.0368%" height="15" fill="rgb(208,196,21)" fg:x="1838" fg:w="3"/><text x="22.8049%" y="847.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (3 samples, 0.04%)</title><rect x="22.5549%" y="821" width="0.0368%" height="15" fill="rgb(242,117,42)" fg:x="1838" fg:w="3"/><text x="22.8049%" y="831.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (3 samples, 0.04%)</title><rect x="22.5549%" y="805" width="0.0368%" height="15" fill="rgb(210,11,23)" fg:x="1838" fg:w="3"/><text x="22.8049%" y="815.50"></text></g><g><title>core::hint::spin_loop (3 samples, 0.04%)</title><rect x="22.5549%" y="789" width="0.0368%" height="15" fill="rgb(217,110,2)" fg:x="1838" fg:w="3"/><text x="22.8049%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3 samples, 0.04%)</title><rect x="22.5549%" y="773" width="0.0368%" height="15" fill="rgb(229,77,54)" fg:x="1838" fg:w="3"/><text x="22.8049%" y="783.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="22.5917%" y="917" width="0.0123%" height="15" fill="rgb(218,53,16)" fg:x="1841" fg:w="1"/><text x="22.8417%" y="927.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (1 samples, 0.01%)</title><rect x="22.6040%" y="901" width="0.0123%" height="15" fill="rgb(215,38,13)" fg:x="1842" fg:w="1"/><text x="22.8540%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="22.6040%" y="885" width="0.0123%" height="15" fill="rgb(235,42,18)" fg:x="1842" fg:w="1"/><text x="22.8540%" y="895.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="22.6040%" y="869" width="0.0123%" height="15" fill="rgb(219,66,54)" fg:x="1842" fg:w="1"/><text x="22.8540%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="22.6040%" y="853" width="0.0123%" height="15" fill="rgb(222,205,4)" fg:x="1842" fg:w="1"/><text x="22.8540%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="22.6040%" y="837" width="0.0123%" height="15" fill="rgb(227,213,46)" fg:x="1842" fg:w="1"/><text x="22.8540%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="22.6040%" y="821" width="0.0123%" height="15" fill="rgb(250,145,42)" fg:x="1842" fg:w="1"/><text x="22.8540%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="22.6040%" y="805" width="0.0123%" height="15" fill="rgb(219,15,2)" fg:x="1842" fg:w="1"/><text x="22.8540%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="22.6040%" y="789" width="0.0123%" height="15" fill="rgb(231,181,52)" fg:x="1842" fg:w="1"/><text x="22.8540%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="22.6040%" y="773" width="0.0123%" height="15" fill="rgb(235,1,42)" fg:x="1842" fg:w="1"/><text x="22.8540%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="22.6040%" y="757" width="0.0123%" height="15" fill="rgb(249,88,27)" fg:x="1842" fg:w="1"/><text x="22.8540%" y="767.50"></text></g><g><title>wgpu::BufferSlice::map_async (17 samples, 0.21%)</title><rect x="22.4199%" y="965" width="0.2086%" height="15" fill="rgb(235,145,16)" fg:x="1827" fg:w="17"/><text x="22.6699%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (17 samples, 0.21%)</title><rect x="22.4199%" y="949" width="0.2086%" height="15" fill="rgb(237,114,19)" fg:x="1827" fg:w="17"/><text x="22.6699%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (14 samples, 0.17%)</title><rect x="22.4567%" y="933" width="0.1718%" height="15" fill="rgb(238,51,50)" fg:x="1830" fg:w="14"/><text x="22.7067%" y="943.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (2 samples, 0.02%)</title><rect x="22.6040%" y="917" width="0.0245%" height="15" fill="rgb(205,194,25)" fg:x="1842" fg:w="2"/><text x="22.8540%" y="927.50"></text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::change (1 samples, 0.01%)</title><rect x="22.6163%" y="901" width="0.0123%" height="15" fill="rgb(215,203,17)" fg:x="1843" fg:w="1"/><text x="22.8663%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="22.6163%" y="885" width="0.0123%" height="15" fill="rgb(233,112,49)" fg:x="1843" fg:w="1"/><text x="22.8663%" y="895.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="22.6163%" y="869" width="0.0123%" height="15" fill="rgb(241,130,26)" fg:x="1843" fg:w="1"/><text x="22.8663%" y="879.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="22.6531%" y="917" width="0.0123%" height="15" fill="rgb(252,223,19)" fg:x="1846" fg:w="1"/><text x="22.9031%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.01%)</title><rect x="22.6654%" y="917" width="0.0123%" height="15" fill="rgb(211,95,25)" fg:x="1847" fg:w="1"/><text x="22.9154%" y="927.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.6654%" y="901" width="0.0123%" height="15" fill="rgb(251,182,27)" fg:x="1847" fg:w="1"/><text x="22.9154%" y="911.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="22.6776%" y="901" width="0.0123%" height="15" fill="rgb(238,24,4)" fg:x="1848" fg:w="1"/><text x="22.9276%" y="911.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="22.6776%" y="885" width="0.0123%" height="15" fill="rgb(224,220,25)" fg:x="1848" fg:w="1"/><text x="22.9276%" y="895.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::recycle (1 samples, 0.01%)</title><rect x="22.6776%" y="869" width="0.0123%" height="15" fill="rgb(239,133,26)" fg:x="1848" fg:w="1"/><text x="22.9276%" y="879.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::reset (1 samples, 0.01%)</title><rect x="22.6776%" y="853" width="0.0123%" height="15" fill="rgb(211,94,48)" fg:x="1848" fg:w="1"/><text x="22.9276%" y="863.50"></text></g><g><title>ash::device::DeviceV1_0::reset_command_buffer (1 samples, 0.01%)</title><rect x="22.6776%" y="837" width="0.0123%" height="15" fill="rgb(239,87,6)" fg:x="1848" fg:w="1"/><text x="22.9276%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::reset_command_buffer (1 samples, 0.01%)</title><rect x="22.6776%" y="821" width="0.0123%" height="15" fill="rgb(227,62,0)" fg:x="1848" fg:w="1"/><text x="22.9276%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="22.6776%" y="805" width="0.0123%" height="15" fill="rgb(211,226,4)" fg:x="1848" fg:w="1"/><text x="22.9276%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="22.6776%" y="789" width="0.0123%" height="15" fill="rgb(253,38,52)" fg:x="1848" fg:w="1"/><text x="22.9276%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="22.6776%" y="773" width="0.0123%" height="15" fill="rgb(229,126,40)" fg:x="1848" fg:w="1"/><text x="22.9276%" y="783.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (2 samples, 0.02%)</title><rect x="22.6899%" y="885" width="0.0245%" height="15" fill="rgb(229,165,44)" fg:x="1849" fg:w="2"/><text x="22.9399%" y="895.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (2 samples, 0.02%)</title><rect x="22.6899%" y="869" width="0.0245%" height="15" fill="rgb(247,95,47)" fg:x="1849" fg:w="2"/><text x="22.9399%" y="879.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::cleanup (2 samples, 0.02%)</title><rect x="22.6899%" y="853" width="0.0245%" height="15" fill="rgb(216,140,30)" fg:x="1849" fg:w="2"/><text x="22.9399%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (2 samples, 0.02%)</title><rect x="22.6899%" y="837" width="0.0245%" height="15" fill="rgb(246,214,8)" fg:x="1849" fg:w="2"/><text x="22.9399%" y="847.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (2 samples, 0.02%)</title><rect x="22.6899%" y="821" width="0.0245%" height="15" fill="rgb(227,224,15)" fg:x="1849" fg:w="2"/><text x="22.9399%" y="831.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="22.6899%" y="805" width="0.0245%" height="15" fill="rgb(233,175,4)" fg:x="1849" fg:w="2"/><text x="22.9399%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.01%)</title><rect x="22.7267%" y="869" width="0.0123%" height="15" fill="rgb(221,66,45)" fg:x="1852" fg:w="1"/><text x="22.9767%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="22.7390%" y="677" width="0.0123%" height="15" fill="rgb(221,178,18)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="687.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.01%)</title><rect x="22.7390%" y="661" width="0.0123%" height="15" fill="rgb(213,81,29)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="671.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="22.7390%" y="645" width="0.0123%" height="15" fill="rgb(220,89,49)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="655.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="22.7390%" y="629" width="0.0123%" height="15" fill="rgb(227,60,33)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="639.50"></text></g><g><title>tracing_core::span::Attributes::record (1 samples, 0.01%)</title><rect x="22.7390%" y="613" width="0.0123%" height="15" fill="rgb(205,113,12)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="623.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="22.7390%" y="597" width="0.0123%" height="15" fill="rgb(211,32,1)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="607.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="22.7390%" y="581" width="0.0123%" height="15" fill="rgb(246,2,12)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="22.7390%" y="565" width="0.0123%" height="15" fill="rgb(243,37,27)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="575.50"></text></g><g><title>core::str::&lt;impl str&gt;::starts_with (1 samples, 0.01%)</title><rect x="22.7390%" y="549" width="0.0123%" height="15" fill="rgb(248,211,31)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="559.50"></text></g><g><title>&lt;&amp;str as core::str::pattern::Pattern&gt;::is_prefix_of (1 samples, 0.01%)</title><rect x="22.7390%" y="533" width="0.0123%" height="15" fill="rgb(242,146,47)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="543.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::starts_with (1 samples, 0.01%)</title><rect x="22.7390%" y="517" width="0.0123%" height="15" fill="rgb(206,70,20)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="527.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="22.7390%" y="501" width="0.0123%" height="15" fill="rgb(215,10,51)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="511.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="22.7390%" y="485" width="0.0123%" height="15" fill="rgb(243,178,53)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="22.7390%" y="469" width="0.0123%" height="15" fill="rgb(233,221,20)" fg:x="1853" fg:w="1"/><text x="22.9890%" y="479.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (6 samples, 0.07%)</title><rect x="22.6899%" y="901" width="0.0736%" height="15" fill="rgb(218,95,35)" fg:x="1849" fg:w="6"/><text x="22.9399%" y="911.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (4 samples, 0.05%)</title><rect x="22.7144%" y="885" width="0.0491%" height="15" fill="rgb(229,13,5)" fg:x="1851" fg:w="4"/><text x="22.9644%" y="895.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (2 samples, 0.02%)</title><rect x="22.7390%" y="869" width="0.0245%" height="15" fill="rgb(252,164,30)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="879.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (2 samples, 0.02%)</title><rect x="22.7390%" y="853" width="0.0245%" height="15" fill="rgb(232,68,36)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="863.50"></text></g><g><title>tracing::span::Span::new (2 samples, 0.02%)</title><rect x="22.7390%" y="837" width="0.0245%" height="15" fill="rgb(219,59,54)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="847.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="22.7390%" y="821" width="0.0245%" height="15" fill="rgb(250,92,33)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="22.7390%" y="805" width="0.0245%" height="15" fill="rgb(229,162,54)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="815.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (2 samples, 0.02%)</title><rect x="22.7390%" y="789" width="0.0245%" height="15" fill="rgb(244,114,52)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="799.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (2 samples, 0.02%)</title><rect x="22.7390%" y="773" width="0.0245%" height="15" fill="rgb(212,211,43)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="783.50"></text></g><g><title>tracing::span::Span::new_with (2 samples, 0.02%)</title><rect x="22.7390%" y="757" width="0.0245%" height="15" fill="rgb(226,147,8)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="767.50"></text></g><g><title>tracing::span::Span::make_with (2 samples, 0.02%)</title><rect x="22.7390%" y="741" width="0.0245%" height="15" fill="rgb(226,23,13)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="751.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (2 samples, 0.02%)</title><rect x="22.7390%" y="725" width="0.0245%" height="15" fill="rgb(240,63,4)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="22.7390%" y="709" width="0.0245%" height="15" fill="rgb(221,1,32)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="22.7390%" y="693" width="0.0245%" height="15" fill="rgb(242,117,10)" fg:x="1853" fg:w="2"/><text x="22.9890%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="22.7513%" y="677" width="0.0123%" height="15" fill="rgb(249,172,44)" fg:x="1854" fg:w="1"/><text x="23.0013%" y="687.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="22.7513%" y="661" width="0.0123%" height="15" fill="rgb(244,46,45)" fg:x="1854" fg:w="1"/><text x="23.0013%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="22.7513%" y="645" width="0.0123%" height="15" fill="rgb(206,43,17)" fg:x="1854" fg:w="1"/><text x="23.0013%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="22.7513%" y="629" width="0.0123%" height="15" fill="rgb(239,218,39)" fg:x="1854" fg:w="1"/><text x="23.0013%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="22.7513%" y="613" width="0.0123%" height="15" fill="rgb(208,169,54)" fg:x="1854" fg:w="1"/><text x="23.0013%" y="623.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="22.7513%" y="597" width="0.0123%" height="15" fill="rgb(247,25,42)" fg:x="1854" fg:w="1"/><text x="23.0013%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="22.7513%" y="581" width="0.0123%" height="15" fill="rgb(226,23,31)" fg:x="1854" fg:w="1"/><text x="23.0013%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="22.7513%" y="565" width="0.0123%" height="15" fill="rgb(247,16,28)" fg:x="1854" fg:w="1"/><text x="23.0013%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="22.7513%" y="549" width="0.0123%" height="15" fill="rgb(231,147,38)" fg:x="1854" fg:w="1"/><text x="23.0013%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="22.7513%" y="533" width="0.0123%" height="15" fill="rgb(253,81,48)" fg:x="1854" fg:w="1"/><text x="23.0013%" y="543.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::handle_mapping (2 samples, 0.02%)</title><rect x="22.7635%" y="901" width="0.0245%" height="15" fill="rgb(249,222,43)" fg:x="1855" fg:w="2"/><text x="23.0135%" y="911.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (2 samples, 0.02%)</title><rect x="22.7635%" y="885" width="0.0245%" height="15" fill="rgb(221,3,27)" fg:x="1855" fg:w="2"/><text x="23.0135%" y="895.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (2 samples, 0.02%)</title><rect x="22.7635%" y="869" width="0.0245%" height="15" fill="rgb(228,180,5)" fg:x="1855" fg:w="2"/><text x="23.0135%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (2 samples, 0.02%)</title><rect x="22.7635%" y="853" width="0.0245%" height="15" fill="rgb(227,131,42)" fg:x="1855" fg:w="2"/><text x="23.0135%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="22.7635%" y="837" width="0.0245%" height="15" fill="rgb(212,3,39)" fg:x="1855" fg:w="2"/><text x="23.0135%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="22.7635%" y="821" width="0.0245%" height="15" fill="rgb(226,45,5)" fg:x="1855" fg:w="2"/><text x="23.0135%" y="831.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_mapped (1 samples, 0.01%)</title><rect x="22.7881%" y="901" width="0.0123%" height="15" fill="rgb(215,167,45)" fg:x="1857" fg:w="1"/><text x="23.0381%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="22.7881%" y="885" width="0.0123%" height="15" fill="rgb(250,218,53)" fg:x="1857" fg:w="1"/><text x="23.0381%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="22.7881%" y="869" width="0.0123%" height="15" fill="rgb(207,140,0)" fg:x="1857" fg:w="1"/><text x="23.0381%" y="879.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="22.7881%" y="853" width="0.0123%" height="15" fill="rgb(238,133,51)" fg:x="1857" fg:w="1"/><text x="23.0381%" y="863.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="22.7881%" y="837" width="0.0123%" height="15" fill="rgb(218,203,53)" fg:x="1857" fg:w="1"/><text x="23.0381%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="22.7881%" y="821" width="0.0123%" height="15" fill="rgb(226,184,25)" fg:x="1857" fg:w="1"/><text x="23.0381%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="22.7881%" y="805" width="0.0123%" height="15" fill="rgb(231,121,21)" fg:x="1857" fg:w="1"/><text x="23.0381%" y="815.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (14 samples, 0.17%)</title><rect x="22.6776%" y="917" width="0.1718%" height="15" fill="rgb(251,14,34)" fg:x="1848" fg:w="14"/><text x="22.9276%" y="927.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (4 samples, 0.05%)</title><rect x="22.8003%" y="901" width="0.0491%" height="15" fill="rgb(249,193,11)" fg:x="1858" fg:w="4"/><text x="23.0503%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (4 samples, 0.05%)</title><rect x="22.8003%" y="885" width="0.0491%" height="15" fill="rgb(220,172,37)" fg:x="1858" fg:w="4"/><text x="23.0503%" y="895.50"></text></g><g><title>wgpu_core::device::fire_map_callbacks (2 samples, 0.02%)</title><rect x="22.8494%" y="917" width="0.0245%" height="15" fill="rgb(231,229,43)" fg:x="1862" fg:w="2"/><text x="23.0994%" y="927.50"></text></g><g><title>wgpu::backend::native_gpu_future::GpuFutureCompletion&lt;T&gt;::complete (2 samples, 0.02%)</title><rect x="22.8494%" y="901" width="0.0245%" height="15" fill="rgb(250,161,5)" fg:x="1862" fg:w="2"/><text x="23.0994%" y="911.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="22.8617%" y="885" width="0.0123%" height="15" fill="rgb(218,225,18)" fg:x="1863" fg:w="1"/><text x="23.1117%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="22.8617%" y="869" width="0.0123%" height="15" fill="rgb(245,45,42)" fg:x="1863" fg:w="1"/><text x="23.1117%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="22.8617%" y="853" width="0.0123%" height="15" fill="rgb(211,115,1)" fg:x="1863" fg:w="1"/><text x="23.1117%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="22.8617%" y="837" width="0.0123%" height="15" fill="rgb(248,133,52)" fg:x="1863" fg:w="1"/><text x="23.1117%" y="847.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (45 samples, 0.55%)</title><rect x="22.3340%" y="981" width="0.5522%" height="15" fill="rgb(238,100,21)" fg:x="1820" fg:w="45"/><text x="22.5840%" y="991.50"></text></g><g><title>wgpu::Device::poll (21 samples, 0.26%)</title><rect x="22.6285%" y="965" width="0.2577%" height="15" fill="rgb(247,144,11)" fg:x="1844" fg:w="21"/><text x="22.8785%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (21 samples, 0.26%)</title><rect x="22.6285%" y="949" width="0.2577%" height="15" fill="rgb(206,164,16)" fg:x="1844" fg:w="21"/><text x="22.8785%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (20 samples, 0.25%)</title><rect x="22.6408%" y="933" width="0.2454%" height="15" fill="rgb(222,34,3)" fg:x="1845" fg:w="20"/><text x="22.8908%" y="943.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.01%)</title><rect x="22.8740%" y="917" width="0.0123%" height="15" fill="rgb(248,82,4)" fg:x="1864" fg:w="1"/><text x="23.1240%" y="927.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="22.8740%" y="901" width="0.0123%" height="15" fill="rgb(228,81,46)" fg:x="1864" fg:w="1"/><text x="23.1240%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="22.8740%" y="885" width="0.0123%" height="15" fill="rgb(227,67,47)" fg:x="1864" fg:w="1"/><text x="23.1240%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (1 samples, 0.01%)</title><rect x="22.8740%" y="869" width="0.0123%" height="15" fill="rgb(215,93,53)" fg:x="1864" fg:w="1"/><text x="23.1240%" y="879.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (1 samples, 0.01%)</title><rect x="22.8740%" y="853" width="0.0123%" height="15" fill="rgb(248,194,39)" fg:x="1864" fg:w="1"/><text x="23.1240%" y="863.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="22.8740%" y="837" width="0.0123%" height="15" fill="rgb(215,5,19)" fg:x="1864" fg:w="1"/><text x="23.1240%" y="847.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="22.8740%" y="821" width="0.0123%" height="15" fill="rgb(226,215,51)" fg:x="1864" fg:w="1"/><text x="23.1240%" y="831.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="22.8740%" y="805" width="0.0123%" height="15" fill="rgb(225,56,26)" fg:x="1864" fg:w="1"/><text x="23.1240%" y="815.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="22.8740%" y="789" width="0.0123%" height="15" fill="rgb(222,75,29)" fg:x="1864" fg:w="1"/><text x="23.1240%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="22.8740%" y="773" width="0.0123%" height="15" fill="rgb(236,139,6)" fg:x="1864" fg:w="1"/><text x="23.1240%" y="783.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (1 samples, 0.01%)</title><rect x="22.8862%" y="981" width="0.0123%" height="15" fill="rgb(223,137,36)" fg:x="1865" fg:w="1"/><text x="23.1362%" y="991.50"></text></g><g><title>wgpu::Buffer::unmap (1 samples, 0.01%)</title><rect x="22.8862%" y="965" width="0.0123%" height="15" fill="rgb(226,99,2)" fg:x="1865" fg:w="1"/><text x="23.1362%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="22.8862%" y="949" width="0.0123%" height="15" fill="rgb(206,133,23)" fg:x="1865" fg:w="1"/><text x="23.1362%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="22.8862%" y="933" width="0.0123%" height="15" fill="rgb(243,173,15)" fg:x="1865" fg:w="1"/><text x="23.1362%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="22.8985%" y="965" width="0.0123%" height="15" fill="rgb(228,69,28)" fg:x="1866" fg:w="1"/><text x="23.1485%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="22.8985%" y="949" width="0.0123%" height="15" fill="rgb(212,51,22)" fg:x="1866" fg:w="1"/><text x="23.1485%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="22.8985%" y="933" width="0.0123%" height="15" fill="rgb(227,113,0)" fg:x="1866" fg:w="1"/><text x="23.1485%" y="943.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::EntityFetch as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="22.9599%" y="917" width="0.0123%" height="15" fill="rgb(252,84,27)" fg:x="1871" fg:w="1"/><text x="23.2099%" y="927.50"></text></g><g><title>bevy_ecs::storage::table::Table::entities (1 samples, 0.01%)</title><rect x="22.9599%" y="901" width="0.0123%" height="15" fill="rgb(223,145,39)" fg:x="1871" fg:w="1"/><text x="23.2099%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="22.9599%" y="885" width="0.0123%" height="15" fill="rgb(239,219,30)" fg:x="1871" fg:w="1"/><text x="23.2099%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="22.9599%" y="869" width="0.0123%" height="15" fill="rgb(224,196,39)" fg:x="1871" fg:w="1"/><text x="23.2099%" y="879.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_table (2 samples, 0.02%)</title><rect x="22.9599%" y="933" width="0.0245%" height="15" fill="rgb(205,35,43)" fg:x="1871" fg:w="2"/><text x="23.2099%" y="943.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="22.9721%" y="917" width="0.0123%" height="15" fill="rgb(228,201,21)" fg:x="1872" fg:w="1"/><text x="23.2221%" y="927.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (1 samples, 0.01%)</title><rect x="22.9721%" y="901" width="0.0123%" height="15" fill="rgb(237,118,16)" fg:x="1872" fg:w="1"/><text x="23.2221%" y="911.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="22.9721%" y="885" width="0.0123%" height="15" fill="rgb(241,17,19)" fg:x="1872" fg:w="1"/><text x="23.2221%" y="895.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="22.9721%" y="869" width="0.0123%" height="15" fill="rgb(214,10,25)" fg:x="1872" fg:w="1"/><text x="23.2221%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="22.9721%" y="853" width="0.0123%" height="15" fill="rgb(238,37,29)" fg:x="1872" fg:w="1"/><text x="23.2221%" y="863.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="22.9721%" y="837" width="0.0123%" height="15" fill="rgb(253,83,25)" fg:x="1872" fg:w="1"/><text x="23.2221%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="22.9721%" y="821" width="0.0123%" height="15" fill="rgb(234,192,12)" fg:x="1872" fg:w="1"/><text x="23.2221%" y="831.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.06%)</title><rect x="22.9353%" y="949" width="0.0614%" height="15" fill="rgb(241,216,45)" fg:x="1869" fg:w="5"/><text x="23.1853%" y="959.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (1 samples, 0.01%)</title><rect x="22.9844%" y="933" width="0.0123%" height="15" fill="rgb(242,22,33)" fg:x="1873" fg:w="1"/><text x="23.2344%" y="943.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="22.9844%" y="917" width="0.0123%" height="15" fill="rgb(231,105,49)" fg:x="1873" fg:w="1"/><text x="23.2344%" y="927.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="22.9967%" y="949" width="0.0123%" height="15" fill="rgb(218,204,15)" fg:x="1874" fg:w="1"/><text x="23.2467%" y="959.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="22.9967%" y="933" width="0.0123%" height="15" fill="rgb(235,138,41)" fg:x="1874" fg:w="1"/><text x="23.2467%" y="943.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="22.9967%" y="917" width="0.0123%" height="15" fill="rgb(246,0,9)" fg:x="1874" fg:w="1"/><text x="23.2467%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="22.9967%" y="901" width="0.0123%" height="15" fill="rgb(210,74,4)" fg:x="1874" fg:w="1"/><text x="23.2467%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="22.9967%" y="885" width="0.0123%" height="15" fill="rgb(250,60,41)" fg:x="1874" fg:w="1"/><text x="23.2467%" y="895.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (1 samples, 0.01%)</title><rect x="23.0580%" y="901" width="0.0123%" height="15" fill="rgb(220,115,12)" fg:x="1879" fg:w="1"/><text x="23.3080%" y="911.50"></text></g><g><title>&lt;f32 as bevy_render::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (13 samples, 0.16%)</title><rect x="23.0703%" y="901" width="0.1595%" height="15" fill="rgb(237,100,13)" fg:x="1880" fg:w="13"/><text x="23.3203%" y="911.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (11 samples, 0.13%)</title><rect x="23.0949%" y="885" width="0.1350%" height="15" fill="rgb(213,55,26)" fg:x="1882" fg:w="11"/><text x="23.3449%" y="895.50"></text></g><g><title>[libm-2.33.so] (11 samples, 0.13%)</title><rect x="23.0949%" y="869" width="0.1350%" height="15" fill="rgb(216,17,4)" fg:x="1882" fg:w="11"/><text x="23.3449%" y="879.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (21 samples, 0.26%)</title><rect x="23.0458%" y="933" width="0.2577%" height="15" fill="rgb(220,153,47)" fg:x="1878" fg:w="21"/><text x="23.2958%" y="943.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (21 samples, 0.26%)</title><rect x="23.0458%" y="917" width="0.2577%" height="15" fill="rgb(215,131,9)" fg:x="1878" fg:w="21"/><text x="23.2958%" y="927.50"></text></g><g><title>[libm-2.33.so] (6 samples, 0.07%)</title><rect x="23.2298%" y="901" width="0.0736%" height="15" fill="rgb(233,46,42)" fg:x="1893" fg:w="6"/><text x="23.4798%" y="911.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (3 samples, 0.04%)</title><rect x="23.3035%" y="933" width="0.0368%" height="15" fill="rgb(226,86,7)" fg:x="1899" fg:w="3"/><text x="23.5535%" y="943.50"></text></g><g><title>bevy_transform::components::global_transform::GlobalTransform::compute_matrix (1 samples, 0.01%)</title><rect x="23.3280%" y="917" width="0.0123%" height="15" fill="rgb(239,226,21)" fg:x="1901" fg:w="1"/><text x="23.5780%" y="927.50"></text></g><g><title>glam::mat4::Mat4::from_scale_rotation_translation (1 samples, 0.01%)</title><rect x="23.3280%" y="901" width="0.0123%" height="15" fill="rgb(244,137,22)" fg:x="1901" fg:w="1"/><text x="23.5780%" y="911.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::from_scale_quaternion_translation (1 samples, 0.01%)</title><rect x="23.3280%" y="885" width="0.0123%" height="15" fill="rgb(211,139,35)" fg:x="1901" fg:w="1"/><text x="23.5780%" y="895.50"></text></g><g><title>glam::core::sse2::vector::&lt;impl glam::core::traits::vector::Vector&lt;f32&gt; for core::core_arch::x86::__m128&gt;::mul_scalar (1 samples, 0.01%)</title><rect x="23.3280%" y="869" width="0.0123%" height="15" fill="rgb(214,62,50)" fg:x="1901" fg:w="1"/><text x="23.5780%" y="879.50"></text></g><g><title>core::core_arch::x86::sse::_mm_mul_ps (1 samples, 0.01%)</title><rect x="23.3280%" y="853" width="0.0123%" height="15" fill="rgb(212,113,44)" fg:x="1901" fg:w="1"/><text x="23.5780%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="23.3403%" y="933" width="0.0123%" height="15" fill="rgb(226,150,43)" fg:x="1902" fg:w="1"/><text x="23.5903%" y="943.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="23.3403%" y="917" width="0.0123%" height="15" fill="rgb(250,71,37)" fg:x="1902" fg:w="1"/><text x="23.5903%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="23.3526%" y="917" width="0.0245%" height="15" fill="rgb(219,76,19)" fg:x="1903" fg:w="2"/><text x="23.6026%" y="927.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding::{{closure}} (1 samples, 0.01%)</title><rect x="23.3648%" y="901" width="0.0123%" height="15" fill="rgb(250,39,11)" fg:x="1904" fg:w="1"/><text x="23.6148%" y="911.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="23.3771%" y="853" width="0.0123%" height="15" fill="rgb(230,64,31)" fg:x="1905" fg:w="1"/><text x="23.6271%" y="863.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="23.3771%" y="837" width="0.0123%" height="15" fill="rgb(208,222,23)" fg:x="1905" fg:w="1"/><text x="23.6271%" y="847.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="23.3771%" y="821" width="0.0123%" height="15" fill="rgb(227,125,18)" fg:x="1905" fg:w="1"/><text x="23.6271%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="23.3771%" y="869" width="0.0245%" height="15" fill="rgb(234,210,9)" fg:x="1905" fg:w="2"/><text x="23.6271%" y="879.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="23.3894%" y="853" width="0.0123%" height="15" fill="rgb(217,127,24)" fg:x="1906" fg:w="1"/><text x="23.6394%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="23.3894%" y="837" width="0.0123%" height="15" fill="rgb(239,141,48)" fg:x="1906" fg:w="1"/><text x="23.6394%" y="847.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u32 (1 samples, 0.01%)</title><rect x="23.3894%" y="821" width="0.0123%" height="15" fill="rgb(227,109,8)" fg:x="1906" fg:w="1"/><text x="23.6394%" y="831.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="23.3894%" y="805" width="0.0123%" height="15" fill="rgb(235,184,23)" fg:x="1906" fg:w="1"/><text x="23.6394%" y="815.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="23.3894%" y="789" width="0.0123%" height="15" fill="rgb(227,226,48)" fg:x="1906" fg:w="1"/><text x="23.6394%" y="799.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="23.3894%" y="773" width="0.0123%" height="15" fill="rgb(206,150,11)" fg:x="1906" fg:w="1"/><text x="23.6394%" y="783.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.06%)</title><rect x="23.4139%" y="837" width="0.0614%" height="15" fill="rgb(254,2,33)" fg:x="1908" fg:w="5"/><text x="23.6639%" y="847.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (5 samples, 0.06%)</title><rect x="23.4139%" y="821" width="0.0614%" height="15" fill="rgb(243,160,20)" fg:x="1908" fg:w="5"/><text x="23.6639%" y="831.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding (12 samples, 0.15%)</title><rect x="23.3526%" y="933" width="0.1473%" height="15" fill="rgb(218,208,30)" fg:x="1903" fg:w="12"/><text x="23.6026%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.12%)</title><rect x="23.3771%" y="917" width="0.1227%" height="15" fill="rgb(224,120,49)" fg:x="1905" fg:w="10"/><text x="23.6271%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.12%)</title><rect x="23.3771%" y="901" width="0.1227%" height="15" fill="rgb(246,12,2)" fg:x="1905" fg:w="10"/><text x="23.6271%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.12%)</title><rect x="23.3771%" y="885" width="0.1227%" height="15" fill="rgb(236,117,3)" fg:x="1905" fg:w="10"/><text x="23.6271%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.10%)</title><rect x="23.4016%" y="869" width="0.0982%" height="15" fill="rgb(216,128,52)" fg:x="1907" fg:w="8"/><text x="23.6516%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.10%)</title><rect x="23.4016%" y="853" width="0.0982%" height="15" fill="rgb(246,145,19)" fg:x="1907" fg:w="8"/><text x="23.6516%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="23.4753%" y="837" width="0.0245%" height="15" fill="rgb(222,11,46)" fg:x="1913" fg:w="2"/><text x="23.7253%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="23.4753%" y="821" width="0.0245%" height="15" fill="rgb(245,82,36)" fg:x="1913" fg:w="2"/><text x="23.7253%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="23.4753%" y="805" width="0.0245%" height="15" fill="rgb(250,73,51)" fg:x="1913" fg:w="2"/><text x="23.7253%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="23.4753%" y="789" width="0.0245%" height="15" fill="rgb(221,189,23)" fg:x="1913" fg:w="2"/><text x="23.7253%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="23.4753%" y="773" width="0.0245%" height="15" fill="rgb(210,33,7)" fg:x="1913" fg:w="2"/><text x="23.7253%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="23.4753%" y="757" width="0.0245%" height="15" fill="rgb(210,107,22)" fg:x="1913" fg:w="2"/><text x="23.7253%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="23.4998%" y="789" width="0.0245%" height="15" fill="rgb(222,116,37)" fg:x="1915" fg:w="2"/><text x="23.7498%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="23.4998%" y="773" width="0.0245%" height="15" fill="rgb(254,17,48)" fg:x="1915" fg:w="2"/><text x="23.7498%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="23.4998%" y="757" width="0.0245%" height="15" fill="rgb(224,36,32)" fg:x="1915" fg:w="2"/><text x="23.7498%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="23.4998%" y="741" width="0.0245%" height="15" fill="rgb(232,90,46)" fg:x="1915" fg:w="2"/><text x="23.7498%" y="751.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="23.4998%" y="725" width="0.0245%" height="15" fill="rgb(241,66,40)" fg:x="1915" fg:w="2"/><text x="23.7498%" y="735.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="23.4998%" y="709" width="0.0245%" height="15" fill="rgb(249,184,29)" fg:x="1915" fg:w="2"/><text x="23.7498%" y="719.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="23.4998%" y="693" width="0.0245%" height="15" fill="rgb(231,181,1)" fg:x="1915" fg:w="2"/><text x="23.7498%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="23.4998%" y="677" width="0.0245%" height="15" fill="rgb(224,94,2)" fg:x="1915" fg:w="2"/><text x="23.7498%" y="687.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="23.4998%" y="661" width="0.0245%" height="15" fill="rgb(229,170,15)" fg:x="1915" fg:w="2"/><text x="23.7498%" y="671.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (4 samples, 0.05%)</title><rect x="23.4998%" y="917" width="0.0491%" height="15" fill="rgb(240,127,35)" fg:x="1915" fg:w="4"/><text x="23.7498%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (4 samples, 0.05%)</title><rect x="23.4998%" y="901" width="0.0491%" height="15" fill="rgb(248,196,34)" fg:x="1915" fg:w="4"/><text x="23.7498%" y="911.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (4 samples, 0.05%)</title><rect x="23.4998%" y="885" width="0.0491%" height="15" fill="rgb(236,137,7)" fg:x="1915" fg:w="4"/><text x="23.7498%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (4 samples, 0.05%)</title><rect x="23.4998%" y="869" width="0.0491%" height="15" fill="rgb(235,127,16)" fg:x="1915" fg:w="4"/><text x="23.7498%" y="879.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (4 samples, 0.05%)</title><rect x="23.4998%" y="853" width="0.0491%" height="15" fill="rgb(250,192,54)" fg:x="1915" fg:w="4"/><text x="23.7498%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (4 samples, 0.05%)</title><rect x="23.4998%" y="837" width="0.0491%" height="15" fill="rgb(218,98,20)" fg:x="1915" fg:w="4"/><text x="23.7498%" y="847.50"></text></g><g><title>alloc::slice::hack::to_vec (4 samples, 0.05%)</title><rect x="23.4998%" y="821" width="0.0491%" height="15" fill="rgb(230,176,47)" fg:x="1915" fg:w="4"/><text x="23.7498%" y="831.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (4 samples, 0.05%)</title><rect x="23.4998%" y="805" width="0.0491%" height="15" fill="rgb(244,2,33)" fg:x="1915" fg:w="4"/><text x="23.7498%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="23.5244%" y="789" width="0.0245%" height="15" fill="rgb(231,100,17)" fg:x="1917" fg:w="2"/><text x="23.7744%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="23.5244%" y="773" width="0.0245%" height="15" fill="rgb(245,23,12)" fg:x="1917" fg:w="2"/><text x="23.7744%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="23.5366%" y="757" width="0.0123%" height="15" fill="rgb(249,55,22)" fg:x="1918" fg:w="1"/><text x="23.7866%" y="767.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding as core::cmp::PartialEq&gt;::ne (3 samples, 0.04%)</title><rect x="23.5489%" y="885" width="0.0368%" height="15" fill="rgb(207,134,9)" fg:x="1919" fg:w="3"/><text x="23.7989%" y="895.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::ne (1 samples, 0.01%)</title><rect x="23.5734%" y="869" width="0.0123%" height="15" fill="rgb(218,134,0)" fg:x="1921" fg:w="1"/><text x="23.8234%" y="879.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (4 samples, 0.05%)</title><rect x="23.5489%" y="901" width="0.0491%" height="15" fill="rgb(213,212,33)" fg:x="1919" fg:w="4"/><text x="23.7989%" y="911.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (1 samples, 0.01%)</title><rect x="23.5857%" y="885" width="0.0123%" height="15" fill="rgb(252,106,18)" fg:x="1922" fg:w="1"/><text x="23.8357%" y="895.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (21 samples, 0.26%)</title><rect x="23.6103%" y="837" width="0.2577%" height="15" fill="rgb(208,126,42)" fg:x="1924" fg:w="21"/><text x="23.8603%" y="847.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (21 samples, 0.26%)</title><rect x="23.6103%" y="821" width="0.2577%" height="15" fill="rgb(246,175,29)" fg:x="1924" fg:w="21"/><text x="23.8603%" y="831.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="23.8925%" y="789" width="0.0123%" height="15" fill="rgb(215,13,50)" fg:x="1947" fg:w="1"/><text x="24.1425%" y="799.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="23.8925%" y="773" width="0.0123%" height="15" fill="rgb(216,172,15)" fg:x="1947" fg:w="1"/><text x="24.1425%" y="783.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (4 samples, 0.05%)</title><rect x="23.8680%" y="821" width="0.0491%" height="15" fill="rgb(212,103,13)" fg:x="1945" fg:w="4"/><text x="24.1180%" y="831.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (4 samples, 0.05%)</title><rect x="23.8680%" y="805" width="0.0491%" height="15" fill="rgb(231,171,36)" fg:x="1945" fg:w="4"/><text x="24.1180%" y="815.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="23.9048%" y="789" width="0.0123%" height="15" fill="rgb(250,123,20)" fg:x="1948" fg:w="1"/><text x="24.1548%" y="799.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (1 samples, 0.01%)</title><rect x="23.9170%" y="821" width="0.0123%" height="15" fill="rgb(212,53,50)" fg:x="1949" fg:w="1"/><text x="24.1670%" y="831.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="23.9170%" y="805" width="0.0123%" height="15" fill="rgb(243,54,12)" fg:x="1949" fg:w="1"/><text x="24.1670%" y="815.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="23.9170%" y="789" width="0.0123%" height="15" fill="rgb(234,101,34)" fg:x="1949" fg:w="1"/><text x="24.1670%" y="799.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="23.9170%" y="773" width="0.0123%" height="15" fill="rgb(254,67,22)" fg:x="1949" fg:w="1"/><text x="24.1670%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (28 samples, 0.34%)</title><rect x="23.5980%" y="853" width="0.3436%" height="15" fill="rgb(250,35,47)" fg:x="1923" fg:w="28"/><text x="23.8480%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.07%)</title><rect x="23.8680%" y="837" width="0.0736%" height="15" fill="rgb(226,126,38)" fg:x="1945" fg:w="6"/><text x="24.1180%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="23.9293%" y="821" width="0.0123%" height="15" fill="rgb(216,138,53)" fg:x="1950" fg:w="1"/><text x="24.1793%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="23.9416%" y="821" width="0.0123%" height="15" fill="rgb(246,199,43)" fg:x="1951" fg:w="1"/><text x="24.1916%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="23.9416%" y="805" width="0.0123%" height="15" fill="rgb(232,125,11)" fg:x="1951" fg:w="1"/><text x="24.1916%" y="815.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (2 samples, 0.02%)</title><rect x="23.9539%" y="805" width="0.0245%" height="15" fill="rgb(218,219,45)" fg:x="1952" fg:w="2"/><text x="24.2039%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (2 samples, 0.02%)</title><rect x="23.9539%" y="789" width="0.0245%" height="15" fill="rgb(216,102,54)" fg:x="1952" fg:w="2"/><text x="24.2039%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="23.9539%" y="773" width="0.0245%" height="15" fill="rgb(250,228,7)" fg:x="1952" fg:w="2"/><text x="24.2039%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (2 samples, 0.02%)</title><rect x="23.9539%" y="757" width="0.0245%" height="15" fill="rgb(226,125,25)" fg:x="1952" fg:w="2"/><text x="24.2039%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.11%)</title><rect x="23.9539%" y="821" width="0.1104%" height="15" fill="rgb(224,165,27)" fg:x="1952" fg:w="9"/><text x="24.2039%" y="831.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (7 samples, 0.09%)</title><rect x="23.9784%" y="805" width="0.0859%" height="15" fill="rgb(233,86,3)" fg:x="1954" fg:w="7"/><text x="24.2284%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (7 samples, 0.09%)</title><rect x="23.9784%" y="789" width="0.0859%" height="15" fill="rgb(228,116,20)" fg:x="1954" fg:w="7"/><text x="24.2284%" y="799.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.09%)</title><rect x="23.9784%" y="773" width="0.0859%" height="15" fill="rgb(209,192,17)" fg:x="1954" fg:w="7"/><text x="24.2284%" y="783.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.09%)</title><rect x="23.9784%" y="757" width="0.0859%" height="15" fill="rgb(224,88,34)" fg:x="1954" fg:w="7"/><text x="24.2284%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.04%)</title><rect x="24.0275%" y="741" width="0.0368%" height="15" fill="rgb(233,38,6)" fg:x="1958" fg:w="3"/><text x="24.2775%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (10 samples, 0.12%)</title><rect x="24.0766%" y="773" width="0.1227%" height="15" fill="rgb(212,59,30)" fg:x="1962" fg:w="10"/><text x="24.3266%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (10 samples, 0.12%)</title><rect x="24.0766%" y="757" width="0.1227%" height="15" fill="rgb(213,80,3)" fg:x="1962" fg:w="10"/><text x="24.3266%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (10 samples, 0.12%)</title><rect x="24.0766%" y="741" width="0.1227%" height="15" fill="rgb(251,178,7)" fg:x="1962" fg:w="10"/><text x="24.3266%" y="751.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::try_set_dirty (54 samples, 0.66%)</title><rect x="23.5489%" y="917" width="0.6627%" height="15" fill="rgb(213,154,26)" fg:x="1919" fg:w="54"/><text x="23.7989%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (50 samples, 0.61%)</title><rect x="23.5980%" y="901" width="0.6136%" height="15" fill="rgb(238,165,49)" fg:x="1923" fg:w="50"/><text x="23.8480%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (50 samples, 0.61%)</title><rect x="23.5980%" y="885" width="0.6136%" height="15" fill="rgb(248,91,46)" fg:x="1923" fg:w="50"/><text x="23.8480%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (50 samples, 0.61%)</title><rect x="23.5980%" y="869" width="0.6136%" height="15" fill="rgb(244,21,52)" fg:x="1923" fg:w="50"/><text x="23.8480%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 0.27%)</title><rect x="23.9416%" y="853" width="0.2700%" height="15" fill="rgb(247,122,20)" fg:x="1951" fg:w="22"/><text x="24.1916%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (22 samples, 0.27%)</title><rect x="23.9416%" y="837" width="0.2700%" height="15" fill="rgb(218,27,9)" fg:x="1951" fg:w="22"/><text x="24.1916%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (12 samples, 0.15%)</title><rect x="24.0643%" y="821" width="0.1473%" height="15" fill="rgb(246,7,6)" fg:x="1961" fg:w="12"/><text x="24.3143%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (12 samples, 0.15%)</title><rect x="24.0643%" y="805" width="0.1473%" height="15" fill="rgb(227,135,54)" fg:x="1961" fg:w="12"/><text x="24.3143%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (12 samples, 0.15%)</title><rect x="24.0643%" y="789" width="0.1473%" height="15" fill="rgb(247,14,11)" fg:x="1961" fg:w="12"/><text x="24.3143%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="24.1993%" y="773" width="0.0123%" height="15" fill="rgb(206,149,34)" fg:x="1972" fg:w="1"/><text x="24.4493%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="24.1993%" y="757" width="0.0123%" height="15" fill="rgb(227,228,4)" fg:x="1972" fg:w="1"/><text x="24.4493%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="24.1993%" y="741" width="0.0123%" height="15" fill="rgb(238,218,28)" fg:x="1972" fg:w="1"/><text x="24.4493%" y="751.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="24.1993%" y="725" width="0.0123%" height="15" fill="rgb(252,86,40)" fg:x="1972" fg:w="1"/><text x="24.4493%" y="735.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="24.2361%" y="885" width="0.0123%" height="15" fill="rgb(251,225,11)" fg:x="1975" fg:w="1"/><text x="24.4861%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (6 samples, 0.07%)</title><rect x="24.2484%" y="885" width="0.0736%" height="15" fill="rgb(206,46,49)" fg:x="1976" fg:w="6"/><text x="24.4984%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (6 samples, 0.07%)</title><rect x="24.2484%" y="869" width="0.0736%" height="15" fill="rgb(245,128,24)" fg:x="1976" fg:w="6"/><text x="24.4984%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (6 samples, 0.07%)</title><rect x="24.2484%" y="853" width="0.0736%" height="15" fill="rgb(219,177,34)" fg:x="1976" fg:w="6"/><text x="24.4984%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="24.2484%" y="837" width="0.0736%" height="15" fill="rgb(218,60,48)" fg:x="1976" fg:w="6"/><text x="24.4984%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (6 samples, 0.07%)</title><rect x="24.2484%" y="821" width="0.0736%" height="15" fill="rgb(221,11,5)" fg:x="1976" fg:w="6"/><text x="24.4984%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (6 samples, 0.07%)</title><rect x="24.2484%" y="805" width="0.0736%" height="15" fill="rgb(220,148,13)" fg:x="1976" fg:w="6"/><text x="24.4984%" y="815.50"></text></g><g><title>__rdl_dealloc (6 samples, 0.07%)</title><rect x="24.2484%" y="789" width="0.0736%" height="15" fill="rgb(210,16,3)" fg:x="1976" fg:w="6"/><text x="24.4984%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (6 samples, 0.07%)</title><rect x="24.2484%" y="773" width="0.0736%" height="15" fill="rgb(236,80,2)" fg:x="1976" fg:w="6"/><text x="24.4984%" y="783.50"></text></g><g><title>__GI___libc_free (6 samples, 0.07%)</title><rect x="24.2484%" y="757" width="0.0736%" height="15" fill="rgb(239,129,19)" fg:x="1976" fg:w="6"/><text x="24.4984%" y="767.50"></text></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="24.2729%" y="741" width="0.0491%" height="15" fill="rgb(220,106,35)" fg:x="1978" fg:w="4"/><text x="24.5229%" y="751.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (3 samples, 0.04%)</title><rect x="24.3220%" y="869" width="0.0368%" height="15" fill="rgb(252,139,45)" fg:x="1982" fg:w="3"/><text x="24.5720%" y="879.50"></text></g><g><title>ahash::operations::folded_multiply (3 samples, 0.04%)</title><rect x="24.3220%" y="853" width="0.0368%" height="15" fill="rgb(229,8,36)" fg:x="1982" fg:w="3"/><text x="24.5720%" y="863.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="24.3343%" y="837" width="0.0245%" height="15" fill="rgb(230,126,33)" fg:x="1983" fg:w="2"/><text x="24.5843%" y="847.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="24.3588%" y="869" width="0.0123%" height="15" fill="rgb(239,140,21)" fg:x="1985" fg:w="1"/><text x="24.6088%" y="879.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="24.3588%" y="853" width="0.0123%" height="15" fill="rgb(254,104,9)" fg:x="1985" fg:w="1"/><text x="24.6088%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="24.3711%" y="837" width="0.0245%" height="15" fill="rgb(239,52,14)" fg:x="1986" fg:w="2"/><text x="24.6211%" y="847.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (2 samples, 0.02%)</title><rect x="24.3711%" y="821" width="0.0245%" height="15" fill="rgb(208,227,44)" fg:x="1986" fg:w="2"/><text x="24.6211%" y="831.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="24.3834%" y="805" width="0.0123%" height="15" fill="rgb(246,18,19)" fg:x="1987" fg:w="1"/><text x="24.6334%" y="815.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="24.3834%" y="789" width="0.0123%" height="15" fill="rgb(235,228,25)" fg:x="1987" fg:w="1"/><text x="24.6334%" y="799.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (3 samples, 0.04%)</title><rect x="24.3956%" y="837" width="0.0368%" height="15" fill="rgb(240,156,20)" fg:x="1988" fg:w="3"/><text x="24.6456%" y="847.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (3 samples, 0.04%)</title><rect x="24.3956%" y="821" width="0.0368%" height="15" fill="rgb(224,8,20)" fg:x="1988" fg:w="3"/><text x="24.6456%" y="831.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="24.4079%" y="805" width="0.0245%" height="15" fill="rgb(214,12,52)" fg:x="1989" fg:w="2"/><text x="24.6579%" y="815.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="24.4202%" y="789" width="0.0123%" height="15" fill="rgb(211,220,47)" fg:x="1990" fg:w="1"/><text x="24.6702%" y="799.50"></text></g><g><title>hashbrown::map::make_insert_hash (10 samples, 0.12%)</title><rect x="24.3220%" y="885" width="0.1227%" height="15" fill="rgb(250,173,5)" fg:x="1982" fg:w="10"/><text x="24.5720%" y="895.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="24.3711%" y="869" width="0.0736%" height="15" fill="rgb(250,125,52)" fg:x="1986" fg:w="6"/><text x="24.6211%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.07%)</title><rect x="24.3711%" y="853" width="0.0736%" height="15" fill="rgb(209,133,18)" fg:x="1986" fg:w="6"/><text x="24.6211%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="24.4324%" y="837" width="0.0123%" height="15" fill="rgb(216,173,22)" fg:x="1991" fg:w="1"/><text x="24.6824%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="24.4447%" y="869" width="0.0123%" height="15" fill="rgb(205,3,22)" fg:x="1992" fg:w="1"/><text x="24.6947%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="24.4693%" y="853" width="0.0245%" height="15" fill="rgb(248,22,20)" fg:x="1994" fg:w="2"/><text x="24.7193%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="24.4693%" y="837" width="0.0245%" height="15" fill="rgb(233,6,29)" fg:x="1994" fg:w="2"/><text x="24.7193%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.4815%" y="821" width="0.0123%" height="15" fill="rgb(240,22,54)" fg:x="1995" fg:w="1"/><text x="24.7315%" y="831.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="24.4815%" y="805" width="0.0123%" height="15" fill="rgb(231,133,32)" fg:x="1995" fg:w="1"/><text x="24.7315%" y="815.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (83 samples, 1.02%)</title><rect x="23.4998%" y="933" width="1.0185%" height="15" fill="rgb(248,193,4)" fg:x="1915" fg:w="83"/><text x="23.7498%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (25 samples, 0.31%)</title><rect x="24.2116%" y="917" width="0.3068%" height="15" fill="rgb(211,178,46)" fg:x="1973" fg:w="25"/><text x="24.4616%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (25 samples, 0.31%)</title><rect x="24.2116%" y="901" width="0.3068%" height="15" fill="rgb(224,5,42)" fg:x="1973" fg:w="25"/><text x="24.4616%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (6 samples, 0.07%)</title><rect x="24.4447%" y="885" width="0.0736%" height="15" fill="rgb(239,176,25)" fg:x="1992" fg:w="6"/><text x="24.6947%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.06%)</title><rect x="24.4570%" y="869" width="0.0614%" height="15" fill="rgb(245,187,50)" fg:x="1993" fg:w="5"/><text x="24.7070%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.02%)</title><rect x="24.4938%" y="853" width="0.0245%" height="15" fill="rgb(248,24,15)" fg:x="1996" fg:w="2"/><text x="24.7438%" y="863.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="24.4938%" y="837" width="0.0245%" height="15" fill="rgb(205,166,13)" fg:x="1996" fg:w="2"/><text x="24.7438%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="24.4938%" y="821" width="0.0245%" height="15" fill="rgb(208,114,23)" fg:x="1996" fg:w="2"/><text x="24.7438%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="24.4938%" y="805" width="0.0245%" height="15" fill="rgb(239,127,18)" fg:x="1996" fg:w="2"/><text x="24.7438%" y="815.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="24.4938%" y="789" width="0.0245%" height="15" fill="rgb(219,154,28)" fg:x="1996" fg:w="2"/><text x="24.7438%" y="799.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="24.4938%" y="773" width="0.0245%" height="15" fill="rgb(225,157,23)" fg:x="1996" fg:w="2"/><text x="24.7438%" y="783.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="24.4938%" y="757" width="0.0245%" height="15" fill="rgb(219,8,6)" fg:x="1996" fg:w="2"/><text x="24.7438%" y="767.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (134 samples, 1.64%)</title><rect x="22.9108%" y="965" width="1.6444%" height="15" fill="rgb(212,47,6)" fg:x="1867" fg:w="134"/><text x="23.1608%" y="975.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (126 samples, 1.55%)</title><rect x="23.0090%" y="949" width="1.5462%" height="15" fill="rgb(224,190,4)" fg:x="1875" fg:w="126"/><text x="23.2590%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (3 samples, 0.04%)</title><rect x="24.5183%" y="933" width="0.0368%" height="15" fill="rgb(239,183,29)" fg:x="1998" fg:w="3"/><text x="24.7683%" y="943.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (136 samples, 1.67%)</title><rect x="22.8985%" y="981" width="1.6689%" height="15" fill="rgb(213,57,7)" fg:x="1866" fg:w="136"/><text x="23.1485%" y="991.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (1 samples, 0.01%)</title><rect x="24.5552%" y="965" width="0.0123%" height="15" fill="rgb(216,148,1)" fg:x="2001" fg:w="1"/><text x="24.8052%" y="975.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="24.5552%" y="949" width="0.0123%" height="15" fill="rgb(236,182,29)" fg:x="2001" fg:w="1"/><text x="24.8052%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="24.5552%" y="933" width="0.0123%" height="15" fill="rgb(244,120,48)" fg:x="2001" fg:w="1"/><text x="24.8052%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="24.5552%" y="917" width="0.0123%" height="15" fill="rgb(206,71,34)" fg:x="2001" fg:w="1"/><text x="24.8052%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="24.5552%" y="901" width="0.0123%" height="15" fill="rgb(242,32,6)" fg:x="2001" fg:w="1"/><text x="24.8052%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="24.5674%" y="981" width="0.0245%" height="15" fill="rgb(241,35,3)" fg:x="2002" fg:w="2"/><text x="24.8174%" y="991.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="24.5920%" y="933" width="0.0123%" height="15" fill="rgb(222,62,19)" fg:x="2004" fg:w="1"/><text x="24.8420%" y="943.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::is_dense (1 samples, 0.01%)</title><rect x="24.6042%" y="933" width="0.0123%" height="15" fill="rgb(223,110,41)" fg:x="2005" fg:w="1"/><text x="24.8542%" y="943.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (4 samples, 0.05%)</title><rect x="24.5920%" y="981" width="0.0491%" height="15" fill="rgb(208,224,4)" fg:x="2004" fg:w="4"/><text x="24.8420%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (4 samples, 0.05%)</title><rect x="24.5920%" y="965" width="0.0491%" height="15" fill="rgb(241,137,19)" fg:x="2004" fg:w="4"/><text x="24.8420%" y="975.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (4 samples, 0.05%)</title><rect x="24.5920%" y="949" width="0.0491%" height="15" fill="rgb(244,24,17)" fg:x="2004" fg:w="4"/><text x="24.8420%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="24.6165%" y="933" width="0.0245%" height="15" fill="rgb(245,178,49)" fg:x="2006" fg:w="2"/><text x="24.8665%" y="943.50"></text></g><g><title>bevy_ecs::system::system_param::RemovedComponents&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="24.6411%" y="981" width="0.0123%" height="15" fill="rgb(219,160,38)" fg:x="2008" fg:w="1"/><text x="24.8911%" y="991.50"></text></g><g><title>bevy_ecs::world::World::removed_with_id (1 samples, 0.01%)</title><rect x="24.6411%" y="965" width="0.0123%" height="15" fill="rgb(228,137,14)" fg:x="2008" fg:w="1"/><text x="24.8911%" y="975.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="24.6411%" y="949" width="0.0123%" height="15" fill="rgb(237,134,11)" fg:x="2008" fg:w="1"/><text x="24.8911%" y="959.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="24.6411%" y="933" width="0.0123%" height="15" fill="rgb(211,126,44)" fg:x="2008" fg:w="1"/><text x="24.8911%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="24.6411%" y="917" width="0.0123%" height="15" fill="rgb(226,171,33)" fg:x="2008" fg:w="1"/><text x="24.8911%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="24.6779%" y="933" width="0.0123%" height="15" fill="rgb(253,99,13)" fg:x="2011" fg:w="1"/><text x="24.9279%" y="943.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="24.6779%" y="917" width="0.0123%" height="15" fill="rgb(244,48,7)" fg:x="2011" fg:w="1"/><text x="24.9279%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;bevy_render::render_graph::command::Command&gt;&gt;&gt; (8 samples, 0.10%)</title><rect x="24.6901%" y="933" width="0.0982%" height="15" fill="rgb(244,217,54)" fg:x="2012" fg:w="8"/><text x="24.9401%" y="943.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.10%)</title><rect x="24.6901%" y="917" width="0.0982%" height="15" fill="rgb(224,15,18)" fg:x="2012" fg:w="8"/><text x="24.9401%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (8 samples, 0.10%)</title><rect x="24.6901%" y="901" width="0.0982%" height="15" fill="rgb(244,99,12)" fg:x="2012" fg:w="8"/><text x="24.9401%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (8 samples, 0.10%)</title><rect x="24.6901%" y="885" width="0.0982%" height="15" fill="rgb(233,226,8)" fg:x="2012" fg:w="8"/><text x="24.9401%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (8 samples, 0.10%)</title><rect x="24.6901%" y="869" width="0.0982%" height="15" fill="rgb(229,211,3)" fg:x="2012" fg:w="8"/><text x="24.9401%" y="879.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::copy_staging_buffer_to_final_buffers (12 samples, 0.15%)</title><rect x="24.6533%" y="981" width="0.1473%" height="15" fill="rgb(216,140,21)" fg:x="2009" fg:w="12"/><text x="24.9033%" y="991.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (11 samples, 0.13%)</title><rect x="24.6656%" y="965" width="0.1350%" height="15" fill="rgb(234,122,30)" fg:x="2010" fg:w="11"/><text x="24.9156%" y="975.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::push (10 samples, 0.12%)</title><rect x="24.6779%" y="949" width="0.1227%" height="15" fill="rgb(236,25,46)" fg:x="2011" fg:w="10"/><text x="24.9279%" y="959.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="24.7883%" y="933" width="0.0123%" height="15" fill="rgb(217,52,54)" fg:x="2020" fg:w="1"/><text x="25.0383%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="24.7883%" y="917" width="0.0123%" height="15" fill="rgb(222,29,26)" fg:x="2020" fg:w="1"/><text x="25.0383%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="24.7883%" y="901" width="0.0123%" height="15" fill="rgb(216,177,29)" fg:x="2020" fg:w="1"/><text x="25.0383%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="24.7883%" y="885" width="0.0123%" height="15" fill="rgb(247,136,51)" fg:x="2020" fg:w="1"/><text x="25.0383%" y="895.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::buffer_byte_len (1 samples, 0.01%)</title><rect x="24.8129%" y="965" width="0.0123%" height="15" fill="rgb(231,47,47)" fg:x="2022" fg:w="1"/><text x="25.0629%" y="975.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::resource_type (1 samples, 0.01%)</title><rect x="24.8251%" y="965" width="0.0123%" height="15" fill="rgb(211,192,36)" fg:x="2023" fg:w="1"/><text x="25.0751%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.8374%" y="965" width="0.0123%" height="15" fill="rgb(229,156,32)" fg:x="2024" fg:w="1"/><text x="25.0874%" y="975.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.8374%" y="949" width="0.0123%" height="15" fill="rgb(248,213,20)" fg:x="2024" fg:w="1"/><text x="25.0874%" y="959.50"></text></g><g><title>&lt;glam::vec2::Vec2 as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::resource_type (1 samples, 0.01%)</title><rect x="24.8497%" y="965" width="0.0123%" height="15" fill="rgb(217,64,7)" fg:x="2025" fg:w="1"/><text x="25.0997%" y="975.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="24.8619%" y="885" width="0.0245%" height="15" fill="rgb(232,142,8)" fg:x="2026" fg:w="2"/><text x="25.1119%" y="895.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="24.8619%" y="869" width="0.0245%" height="15" fill="rgb(224,92,44)" fg:x="2026" fg:w="2"/><text x="25.1119%" y="879.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="24.8742%" y="853" width="0.0123%" height="15" fill="rgb(214,169,17)" fg:x="2027" fg:w="1"/><text x="25.1242%" y="863.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="24.8865%" y="885" width="0.0123%" height="15" fill="rgb(210,59,37)" fg:x="2028" fg:w="1"/><text x="25.1365%" y="895.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="24.8865%" y="869" width="0.0123%" height="15" fill="rgb(214,116,48)" fg:x="2028" fg:w="1"/><text x="25.1365%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.06%)</title><rect x="24.8619%" y="901" width="0.0614%" height="15" fill="rgb(244,191,6)" fg:x="2026" fg:w="5"/><text x="25.1119%" y="911.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="24.8988%" y="885" width="0.0245%" height="15" fill="rgb(241,50,52)" fg:x="2029" fg:w="2"/><text x="25.1488%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="24.8988%" y="869" width="0.0245%" height="15" fill="rgb(236,75,39)" fg:x="2029" fg:w="2"/><text x="25.1488%" y="879.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u32 (2 samples, 0.02%)</title><rect x="24.8988%" y="853" width="0.0245%" height="15" fill="rgb(236,99,0)" fg:x="2029" fg:w="2"/><text x="25.1488%" y="863.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.02%)</title><rect x="24.8988%" y="837" width="0.0245%" height="15" fill="rgb(207,202,15)" fg:x="2029" fg:w="2"/><text x="25.1488%" y="847.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="24.8988%" y="821" width="0.0245%" height="15" fill="rgb(233,207,14)" fg:x="2029" fg:w="2"/><text x="25.1488%" y="831.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="24.8988%" y="805" width="0.0245%" height="15" fill="rgb(226,27,51)" fg:x="2029" fg:w="2"/><text x="25.1488%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.9233%" y="869" width="0.0123%" height="15" fill="rgb(206,104,42)" fg:x="2031" fg:w="1"/><text x="25.1733%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.9233%" y="853" width="0.0123%" height="15" fill="rgb(212,225,4)" fg:x="2031" fg:w="1"/><text x="25.1733%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.01%)</title><rect x="24.9233%" y="837" width="0.0123%" height="15" fill="rgb(233,96,42)" fg:x="2031" fg:w="1"/><text x="25.1733%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="24.9233%" y="821" width="0.0123%" height="15" fill="rgb(229,21,32)" fg:x="2031" fg:w="1"/><text x="25.1733%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="24.9233%" y="805" width="0.0123%" height="15" fill="rgb(226,216,24)" fg:x="2031" fg:w="1"/><text x="25.1733%" y="815.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.09%)</title><rect x="24.9356%" y="869" width="0.0859%" height="15" fill="rgb(221,163,17)" fg:x="2032" fg:w="7"/><text x="25.1856%" y="879.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (7 samples, 0.09%)</title><rect x="24.9356%" y="853" width="0.0859%" height="15" fill="rgb(216,216,42)" fg:x="2032" fg:w="7"/><text x="25.1856%" y="863.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.02%)</title><rect x="25.0215%" y="821" width="0.0245%" height="15" fill="rgb(240,118,7)" fg:x="2039" fg:w="2"/><text x="25.2715%" y="831.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (22 samples, 0.27%)</title><rect x="24.8006%" y="981" width="0.2700%" height="15" fill="rgb(221,67,37)" fg:x="2021" fg:w="22"/><text x="25.0506%" y="991.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_or_assign_index (17 samples, 0.21%)</title><rect x="24.8619%" y="965" width="0.2086%" height="15" fill="rgb(241,32,44)" fg:x="2026" fg:w="17"/><text x="25.1119%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.21%)</title><rect x="24.8619%" y="949" width="0.2086%" height="15" fill="rgb(235,204,43)" fg:x="2026" fg:w="17"/><text x="25.1119%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (17 samples, 0.21%)</title><rect x="24.8619%" y="933" width="0.2086%" height="15" fill="rgb(213,116,10)" fg:x="2026" fg:w="17"/><text x="25.1119%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.21%)</title><rect x="24.8619%" y="917" width="0.2086%" height="15" fill="rgb(239,15,48)" fg:x="2026" fg:w="17"/><text x="25.1119%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.15%)</title><rect x="24.9233%" y="901" width="0.1473%" height="15" fill="rgb(207,123,36)" fg:x="2031" fg:w="12"/><text x="25.1733%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.15%)</title><rect x="24.9233%" y="885" width="0.1473%" height="15" fill="rgb(209,103,30)" fg:x="2031" fg:w="12"/><text x="25.1733%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.05%)</title><rect x="25.0215%" y="869" width="0.0491%" height="15" fill="rgb(238,100,19)" fg:x="2039" fg:w="4"/><text x="25.2715%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.05%)</title><rect x="25.0215%" y="853" width="0.0491%" height="15" fill="rgb(244,30,14)" fg:x="2039" fg:w="4"/><text x="25.2715%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.05%)</title><rect x="25.0215%" y="837" width="0.0491%" height="15" fill="rgb(249,174,6)" fg:x="2039" fg:w="4"/><text x="25.2715%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="25.0460%" y="821" width="0.0245%" height="15" fill="rgb(235,213,41)" fg:x="2041" fg:w="2"/><text x="25.2960%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="25.0460%" y="805" width="0.0245%" height="15" fill="rgb(213,118,6)" fg:x="2041" fg:w="2"/><text x="25.2960%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="25.0460%" y="789" width="0.0245%" height="15" fill="rgb(235,44,51)" fg:x="2041" fg:w="2"/><text x="25.2960%" y="799.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::resize_buffer_arrays (1 samples, 0.01%)</title><rect x="25.0706%" y="981" width="0.0123%" height="15" fill="rgb(217,9,53)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="991.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::resize (1 samples, 0.01%)</title><rect x="25.0706%" y="965" width="0.0123%" height="15" fill="rgb(237,172,34)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="975.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::allocate_buffer (1 samples, 0.01%)</title><rect x="25.0706%" y="949" width="0.0123%" height="15" fill="rgb(206,206,11)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="959.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer (1 samples, 0.01%)</title><rect x="25.0706%" y="933" width="0.0123%" height="15" fill="rgb(214,149,29)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="943.50"></text></g><g><title>wgpu::Device::create_buffer (1 samples, 0.01%)</title><rect x="25.0706%" y="917" width="0.0123%" height="15" fill="rgb(208,123,3)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="927.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (1 samples, 0.01%)</title><rect x="25.0706%" y="901" width="0.0123%" height="15" fill="rgb(229,126,4)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="911.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (1 samples, 0.01%)</title><rect x="25.0706%" y="885" width="0.0123%" height="15" fill="rgb(222,92,36)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="895.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (1 samples, 0.01%)</title><rect x="25.0706%" y="869" width="0.0123%" height="15" fill="rgb(216,39,41)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="879.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (1 samples, 0.01%)</title><rect x="25.0706%" y="853" width="0.0123%" height="15" fill="rgb(253,127,28)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="863.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (1 samples, 0.01%)</title><rect x="25.0706%" y="837" width="0.0123%" height="15" fill="rgb(249,152,51)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="847.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (1 samples, 0.01%)</title><rect x="25.0706%" y="821" width="0.0123%" height="15" fill="rgb(209,123,42)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="831.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (1 samples, 0.01%)</title><rect x="25.0706%" y="805" width="0.0123%" height="15" fill="rgb(241,118,22)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.01%)</title><rect x="25.0706%" y="789" width="0.0123%" height="15" fill="rgb(208,25,7)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="799.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.0706%" y="773" width="0.0123%" height="15" fill="rgb(243,144,39)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="783.50"></text></g><g><title>tracing::span::Span::do_exit (1 samples, 0.01%)</title><rect x="25.0706%" y="757" width="0.0123%" height="15" fill="rgb(250,50,5)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="767.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (1 samples, 0.01%)</title><rect x="25.0706%" y="741" width="0.0123%" height="15" fill="rgb(207,67,11)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="25.0706%" y="725" width="0.0123%" height="15" fill="rgb(245,204,40)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="25.0706%" y="709" width="0.0123%" height="15" fill="rgb(238,228,24)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="25.0706%" y="693" width="0.0123%" height="15" fill="rgb(217,116,22)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.01%)</title><rect x="25.0706%" y="677" width="0.0123%" height="15" fill="rgb(234,98,12)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="687.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (1 samples, 0.01%)</title><rect x="25.0706%" y="661" width="0.0123%" height="15" fill="rgb(242,170,50)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.01%)</title><rect x="25.0706%" y="645" width="0.0123%" height="15" fill="rgb(235,7,5)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="25.0706%" y="629" width="0.0123%" height="15" fill="rgb(241,114,28)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="25.0706%" y="613" width="0.0123%" height="15" fill="rgb(246,112,42)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="25.0706%" y="597" width="0.0123%" height="15" fill="rgb(248,228,14)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="25.0706%" y="581" width="0.0123%" height="15" fill="rgb(208,133,18)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="25.0706%" y="565" width="0.0123%" height="15" fill="rgb(207,35,49)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="25.0706%" y="549" width="0.0123%" height="15" fill="rgb(205,68,36)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="25.0706%" y="533" width="0.0123%" height="15" fill="rgb(245,62,40)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="25.0706%" y="517" width="0.0123%" height="15" fill="rgb(228,27,24)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="25.0706%" y="501" width="0.0123%" height="15" fill="rgb(253,19,12)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="25.0706%" y="485" width="0.0123%" height="15" fill="rgb(232,28,20)" fg:x="2043" fg:w="1"/><text x="25.3206%" y="495.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (242 samples, 2.97%)</title><rect x="22.1254%" y="997" width="2.9697%" height="15" fill="rgb(218,35,51)" fg:x="1803" fg:w="242"/><text x="22.3754%" y="1007.50">bev..</text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (1 samples, 0.01%)</title><rect x="25.0828%" y="981" width="0.0123%" height="15" fill="rgb(212,90,40)" fg:x="2044" fg:w="1"/><text x="25.3328%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.0828%" y="965" width="0.0123%" height="15" fill="rgb(220,172,12)" fg:x="2044" fg:w="1"/><text x="25.3328%" y="975.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.0828%" y="949" width="0.0123%" height="15" fill="rgb(226,159,20)" fg:x="2044" fg:w="1"/><text x="25.3328%" y="959.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::get_render_resource (1 samples, 0.01%)</title><rect x="25.0828%" y="933" width="0.0123%" height="15" fill="rgb(234,205,16)" fg:x="2044" fg:w="1"/><text x="25.3328%" y="943.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="25.0951%" y="981" width="0.0123%" height="15" fill="rgb(207,9,39)" fg:x="2045" fg:w="1"/><text x="25.3451%" y="991.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="25.0951%" y="965" width="0.0123%" height="15" fill="rgb(249,143,15)" fg:x="2045" fg:w="1"/><text x="25.3451%" y="975.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="25.0951%" y="949" width="0.0123%" height="15" fill="rgb(253,133,29)" fg:x="2045" fg:w="1"/><text x="25.3451%" y="959.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="25.0951%" y="933" width="0.0123%" height="15" fill="rgb(221,187,0)" fg:x="2045" fg:w="1"/><text x="25.3451%" y="943.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.01%)</title><rect x="25.0951%" y="917" width="0.0123%" height="15" fill="rgb(205,204,26)" fg:x="2045" fg:w="1"/><text x="25.3451%" y="927.50"></text></g><g><title>ahash::random_state::RandomState::get_src (1 samples, 0.01%)</title><rect x="25.0951%" y="901" width="0.0123%" height="15" fill="rgb(224,68,54)" fg:x="2045" fg:w="1"/><text x="25.3451%" y="911.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.01%)</title><rect x="25.0951%" y="885" width="0.0123%" height="15" fill="rgb(209,67,4)" fg:x="2045" fg:w="1"/><text x="25.3451%" y="895.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.01%)</title><rect x="25.0951%" y="869" width="0.0123%" height="15" fill="rgb(228,229,18)" fg:x="2045" fg:w="1"/><text x="25.3451%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="25.0951%" y="853" width="0.0123%" height="15" fill="rgb(231,89,13)" fg:x="2045" fg:w="1"/><text x="25.3451%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="25.0951%" y="837" width="0.0123%" height="15" fill="rgb(210,182,18)" fg:x="2045" fg:w="1"/><text x="25.3451%" y="847.50"></text></g><g><title>bevy_sprite::color_material::material_texture_detection_system (2 samples, 0.02%)</title><rect x="25.0951%" y="997" width="0.0245%" height="15" fill="rgb(240,105,2)" fg:x="2045" fg:w="2"/><text x="25.3451%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1074%" y="981" width="0.0123%" height="15" fill="rgb(207,170,50)" fg:x="2046" fg:w="1"/><text x="25.3574%" y="991.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1074%" y="965" width="0.0123%" height="15" fill="rgb(232,133,24)" fg:x="2046" fg:w="1"/><text x="25.3574%" y="975.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1074%" y="949" width="0.0123%" height="15" fill="rgb(235,166,27)" fg:x="2046" fg:w="1"/><text x="25.3574%" y="959.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1074%" y="933" width="0.0123%" height="15" fill="rgb(209,19,13)" fg:x="2046" fg:w="1"/><text x="25.3574%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1074%" y="917" width="0.0123%" height="15" fill="rgb(226,79,39)" fg:x="2046" fg:w="1"/><text x="25.3574%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1074%" y="901" width="0.0123%" height="15" fill="rgb(222,163,10)" fg:x="2046" fg:w="1"/><text x="25.3574%" y="911.50"></text></g><g><title>bevy_window::windows::Windows::get_primary (1 samples, 0.01%)</title><rect x="25.1196%" y="981" width="0.0123%" height="15" fill="rgb(214,44,19)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="991.50"></text></g><g><title>bevy_window::windows::Windows::get (1 samples, 0.01%)</title><rect x="25.1196%" y="965" width="0.0123%" height="15" fill="rgb(210,217,13)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="25.1196%" y="949" width="0.0123%" height="15" fill="rgb(237,61,54)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="25.1196%" y="933" width="0.0123%" height="15" fill="rgb(226,184,24)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="25.1196%" y="917" width="0.0123%" height="15" fill="rgb(223,226,4)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="25.1196%" y="901" width="0.0123%" height="15" fill="rgb(210,26,41)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="911.50"></text></g><g><title>&lt;bevy_window::window::WindowId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="25.1196%" y="885" width="0.0123%" height="15" fill="rgb(220,221,6)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="895.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="25.1196%" y="869" width="0.0123%" height="15" fill="rgb(225,89,49)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="879.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="25.1196%" y="853" width="0.0123%" height="15" fill="rgb(218,70,45)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="25.1196%" y="837" width="0.0123%" height="15" fill="rgb(238,166,21)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="25.1196%" y="821" width="0.0123%" height="15" fill="rgb(224,141,44)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="831.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="25.1196%" y="805" width="0.0123%" height="15" fill="rgb(230,12,49)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="815.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="25.1196%" y="789" width="0.0123%" height="15" fill="rgb(212,174,12)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="799.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="25.1196%" y="773" width="0.0123%" height="15" fill="rgb(246,67,9)" fg:x="2047" fg:w="1"/><text x="25.3696%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="25.1319%" y="981" width="0.0123%" height="15" fill="rgb(239,35,23)" fg:x="2048" fg:w="1"/><text x="25.3819%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="25.1319%" y="965" width="0.0123%" height="15" fill="rgb(211,167,0)" fg:x="2048" fg:w="1"/><text x="25.3819%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="25.1319%" y="949" width="0.0123%" height="15" fill="rgb(225,119,45)" fg:x="2048" fg:w="1"/><text x="25.3819%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="25.1319%" y="933" width="0.0123%" height="15" fill="rgb(210,162,6)" fg:x="2048" fg:w="1"/><text x="25.3819%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.1319%" y="917" width="0.0123%" height="15" fill="rgb(208,118,35)" fg:x="2048" fg:w="1"/><text x="25.3819%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.01%)</title><rect x="25.1319%" y="901" width="0.0123%" height="15" fill="rgb(239,4,53)" fg:x="2048" fg:w="1"/><text x="25.3819%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="25.1319%" y="885" width="0.0123%" height="15" fill="rgb(213,130,21)" fg:x="2048" fg:w="1"/><text x="25.3819%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.01%)</title><rect x="25.1319%" y="869" width="0.0123%" height="15" fill="rgb(235,148,0)" fg:x="2048" fg:w="1"/><text x="25.3819%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="25.1319%" y="853" width="0.0123%" height="15" fill="rgb(244,224,18)" fg:x="2048" fg:w="1"/><text x="25.3819%" y="863.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (352 samples, 4.32%)</title><rect x="20.8369%" y="1045" width="4.3195%" height="15" fill="rgb(211,214,4)" fg:x="1698" fg:w="352"/><text x="21.0869%" y="1055.50">&lt;Func..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (347 samples, 4.26%)</title><rect x="20.8983%" y="1029" width="4.2582%" height="15" fill="rgb(206,119,25)" fg:x="1703" fg:w="347"/><text x="21.1483%" y="1039.50">core:..</text></g><g><title>core::ops::function::Fn::call (347 samples, 4.26%)</title><rect x="20.8983%" y="1013" width="4.2582%" height="15" fill="rgb(243,93,47)" fg:x="1703" fg:w="347"/><text x="21.1483%" y="1023.50">core:..</text></g><g><title>bevy_ui::focus::ui_focus_system (3 samples, 0.04%)</title><rect x="25.1196%" y="997" width="0.0368%" height="15" fill="rgb(224,194,6)" fg:x="2047" fg:w="3"/><text x="25.3696%" y="1007.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::drain (1 samples, 0.01%)</title><rect x="25.1442%" y="981" width="0.0123%" height="15" fill="rgb(243,229,6)" fg:x="2049" fg:w="1"/><text x="25.3942%" y="991.50"></text></g><g><title>&lt;bevy_app::event::EventWriterState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_app::event::Events&lt;T&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,),T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="25.1565%" y="1013" width="0.0123%" height="15" fill="rgb(207,23,50)" fg:x="2050" fg:w="1"/><text x="25.4065%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="25.1565%" y="997" width="0.0123%" height="15" fill="rgb(253,192,32)" fg:x="2050" fg:w="1"/><text x="25.4065%" y="1007.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="25.1565%" y="981" width="0.0123%" height="15" fill="rgb(213,21,6)" fg:x="2050" fg:w="1"/><text x="25.4065%" y="991.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="25.1565%" y="965" width="0.0123%" height="15" fill="rgb(243,151,13)" fg:x="2050" fg:w="1"/><text x="25.4065%" y="975.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="25.1565%" y="949" width="0.0123%" height="15" fill="rgb(233,165,41)" fg:x="2050" fg:w="1"/><text x="25.4065%" y="959.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="25.1565%" y="933" width="0.0123%" height="15" fill="rgb(246,176,45)" fg:x="2050" fg:w="1"/><text x="25.4065%" y="943.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="25.1565%" y="917" width="0.0123%" height="15" fill="rgb(217,170,52)" fg:x="2050" fg:w="1"/><text x="25.4065%" y="927.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="25.1565%" y="901" width="0.0123%" height="15" fill="rgb(214,203,54)" fg:x="2050" fg:w="1"/><text x="25.4065%" y="911.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="25.1687%" y="1013" width="0.0123%" height="15" fill="rgb(248,215,49)" fg:x="2051" fg:w="1"/><text x="25.4187%" y="1023.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="25.1687%" y="997" width="0.0123%" height="15" fill="rgb(208,46,10)" fg:x="2051" fg:w="1"/><text x="25.4187%" y="1007.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ticks_mut_ptr (1 samples, 0.01%)</title><rect x="25.1687%" y="981" width="0.0123%" height="15" fill="rgb(254,5,31)" fg:x="2051" fg:w="1"/><text x="25.4187%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="25.1687%" y="965" width="0.0123%" height="15" fill="rgb(222,104,33)" fg:x="2051" fg:w="1"/><text x="25.4187%" y="975.50"></text></g><g><title>&lt;bevy_egui::systems::InputEventsState&lt;(&lt;bevy_app::event::EventReader&lt;bevy_window::event::CursorLeft&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_window::event::CursorMoved&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_input::mouse::MouseWheel&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_window::event::ReceivedCharacter&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_input::keyboard::KeyboardInput&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_window::event::WindowFocused&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_window::event::WindowCreated&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="25.1810%" y="965" width="0.0123%" height="15" fill="rgb(248,49,16)" fg:x="2052" fg:w="1"/><text x="25.4310%" y="975.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (4 samples, 0.05%)</title><rect x="25.1565%" y="1029" width="0.0491%" height="15" fill="rgb(232,198,41)" fg:x="2050" fg:w="4"/><text x="25.4065%" y="1039.50"></text></g><g><title>&lt;bevy_egui::systems::InputEventsState&lt;(&lt;bevy_app::event::EventReader&lt;bevy_window::event::CursorLeft&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_window::event::CursorMoved&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_input::mouse::MouseWheel&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_window::event::ReceivedCharacter&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_input::keyboard::KeyboardInput&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_window::event::WindowFocused&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_app::event::EventReader&lt;bevy_window::event::WindowCreated&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="25.1810%" y="1013" width="0.0245%" height="15" fill="rgb(214,125,3)" fg:x="2052" fg:w="2"/><text x="25.4310%" y="1023.50"></text></g><g><title>&lt;bevy_app::event::EventReaderState&lt;(&lt;bevy_ecs::system::system_param::Local&lt;(usize,core::marker::PhantomData&lt;T&gt;)&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::Res&lt;bevy_app::event::Events&lt;T&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch),T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="25.1810%" y="997" width="0.0245%" height="15" fill="rgb(229,220,28)" fg:x="2052" fg:w="2"/><text x="25.4310%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="25.1810%" y="981" width="0.0245%" height="15" fill="rgb(222,64,37)" fg:x="2052" fg:w="2"/><text x="25.4310%" y="991.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="25.1933%" y="965" width="0.0123%" height="15" fill="rgb(249,184,13)" fg:x="2053" fg:w="1"/><text x="25.4433%" y="975.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="25.1933%" y="949" width="0.0123%" height="15" fill="rgb(252,176,6)" fg:x="2053" fg:w="1"/><text x="25.4433%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="25.1933%" y="933" width="0.0123%" height="15" fill="rgb(228,153,7)" fg:x="2053" fg:w="1"/><text x="25.4433%" y="943.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="25.1933%" y="917" width="0.0123%" height="15" fill="rgb(242,193,5)" fg:x="2053" fg:w="1"/><text x="25.4433%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="25.1933%" y="901" width="0.0123%" height="15" fill="rgb(232,140,9)" fg:x="2053" fg:w="1"/><text x="25.4433%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="25.1933%" y="885" width="0.0123%" height="15" fill="rgb(213,222,16)" fg:x="2053" fg:w="1"/><text x="25.4433%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.2178%" y="981" width="0.0123%" height="15" fill="rgb(222,75,50)" fg:x="2055" fg:w="1"/><text x="25.4678%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.2178%" y="965" width="0.0123%" height="15" fill="rgb(205,180,2)" fg:x="2055" fg:w="1"/><text x="25.4678%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.2178%" y="949" width="0.0123%" height="15" fill="rgb(216,34,7)" fg:x="2055" fg:w="1"/><text x="25.4678%" y="959.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="25.2301%" y="981" width="0.0123%" height="15" fill="rgb(253,16,32)" fg:x="2056" fg:w="1"/><text x="25.4801%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.01%)</title><rect x="25.2301%" y="965" width="0.0123%" height="15" fill="rgb(208,97,28)" fg:x="2056" fg:w="1"/><text x="25.4801%" y="975.50"></text></g><g><title>bevy_window::window::Window::id (1 samples, 0.01%)</title><rect x="25.2424%" y="965" width="0.0123%" height="15" fill="rgb(225,92,11)" fg:x="2057" fg:w="1"/><text x="25.4924%" y="975.50"></text></g><g><title>bevy_window::windows::Windows::iter (1 samples, 0.01%)</title><rect x="25.2546%" y="965" width="0.0123%" height="15" fill="rgb(243,38,12)" fg:x="2058" fg:w="1"/><text x="25.5046%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (1 samples, 0.01%)</title><rect x="25.2546%" y="949" width="0.0123%" height="15" fill="rgb(208,139,16)" fg:x="2058" fg:w="1"/><text x="25.5046%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="25.2546%" y="933" width="0.0123%" height="15" fill="rgb(227,24,9)" fg:x="2058" fg:w="1"/><text x="25.5046%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="25.2546%" y="917" width="0.0123%" height="15" fill="rgb(206,62,11)" fg:x="2058" fg:w="1"/><text x="25.5046%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="25.2546%" y="901" width="0.0123%" height="15" fill="rgb(228,134,27)" fg:x="2058" fg:w="1"/><text x="25.5046%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (1 samples, 0.01%)</title><rect x="25.2546%" y="885" width="0.0123%" height="15" fill="rgb(205,55,33)" fg:x="2058" fg:w="1"/><text x="25.5046%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="25.2669%" y="965" width="0.0123%" height="15" fill="rgb(243,75,43)" fg:x="2059" fg:w="1"/><text x="25.5169%" y="975.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="25.2669%" y="949" width="0.0123%" height="15" fill="rgb(223,27,42)" fg:x="2059" fg:w="1"/><text x="25.5169%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="25.2669%" y="933" width="0.0123%" height="15" fill="rgb(232,189,33)" fg:x="2059" fg:w="1"/><text x="25.5169%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="25.2669%" y="917" width="0.0123%" height="15" fill="rgb(210,9,39)" fg:x="2059" fg:w="1"/><text x="25.5169%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="25.2669%" y="901" width="0.0123%" height="15" fill="rgb(242,85,26)" fg:x="2059" fg:w="1"/><text x="25.5169%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="25.2669%" y="885" width="0.0123%" height="15" fill="rgb(248,44,4)" fg:x="2059" fg:w="1"/><text x="25.5169%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="25.2669%" y="869" width="0.0123%" height="15" fill="rgb(250,96,46)" fg:x="2059" fg:w="1"/><text x="25.5169%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="25.2669%" y="853" width="0.0123%" height="15" fill="rgb(229,116,26)" fg:x="2059" fg:w="1"/><text x="25.5169%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="25.2669%" y="837" width="0.0123%" height="15" fill="rgb(246,94,34)" fg:x="2059" fg:w="1"/><text x="25.5169%" y="847.50"></text></g><g><title>bevy_egui::systems::update_window_contexts (4 samples, 0.05%)</title><rect x="25.2424%" y="981" width="0.0491%" height="15" fill="rgb(251,73,21)" fg:x="2057" fg:w="4"/><text x="25.4924%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="25.2792%" y="965" width="0.0123%" height="15" fill="rgb(254,121,25)" fg:x="2060" fg:w="1"/><text x="25.5292%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="25.2792%" y="949" width="0.0123%" height="15" fill="rgb(215,161,49)" fg:x="2060" fg:w="1"/><text x="25.5292%" y="959.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="25.2792%" y="933" width="0.0123%" height="15" fill="rgb(221,43,13)" fg:x="2060" fg:w="1"/><text x="25.5292%" y="943.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="25.2792%" y="917" width="0.0123%" height="15" fill="rgb(249,5,37)" fg:x="2060" fg:w="1"/><text x="25.5292%" y="927.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="25.2792%" y="901" width="0.0123%" height="15" fill="rgb(226,25,44)" fg:x="2060" fg:w="1"/><text x="25.5292%" y="911.50"></text></g><g><title>bevy_input::input::Input&lt;T&gt;::pressed (1 samples, 0.01%)</title><rect x="25.2914%" y="981" width="0.0123%" height="15" fill="rgb(238,189,16)" fg:x="2061" fg:w="1"/><text x="25.5414%" y="991.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.01%)</title><rect x="25.2914%" y="965" width="0.0123%" height="15" fill="rgb(251,186,8)" fg:x="2061" fg:w="1"/><text x="25.5414%" y="975.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.01%)</title><rect x="25.2914%" y="949" width="0.0123%" height="15" fill="rgb(254,34,31)" fg:x="2061" fg:w="1"/><text x="25.5414%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="25.2914%" y="933" width="0.0123%" height="15" fill="rgb(225,215,27)" fg:x="2061" fg:w="1"/><text x="25.5414%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="25.2914%" y="917" width="0.0123%" height="15" fill="rgb(221,192,48)" fg:x="2061" fg:w="1"/><text x="25.5414%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="25.2914%" y="901" width="0.0123%" height="15" fill="rgb(219,137,20)" fg:x="2061" fg:w="1"/><text x="25.5414%" y="911.50"></text></g><g><title>&lt;bevy_input::keyboard::KeyCode as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="25.2914%" y="885" width="0.0123%" height="15" fill="rgb(219,84,11)" fg:x="2061" fg:w="1"/><text x="25.5414%" y="895.50"></text></g><g><title>bevy_egui::systems::process_input (9 samples, 0.11%)</title><rect x="25.2055%" y="997" width="0.1104%" height="15" fill="rgb(224,10,23)" fg:x="2054" fg:w="9"/><text x="25.4555%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.01%)</title><rect x="25.3037%" y="981" width="0.0123%" height="15" fill="rgb(248,22,39)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="25.3037%" y="965" width="0.0123%" height="15" fill="rgb(212,154,20)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.01%)</title><rect x="25.3037%" y="949" width="0.0123%" height="15" fill="rgb(236,199,50)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="959.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="25.3037%" y="933" width="0.0123%" height="15" fill="rgb(211,9,17)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="943.50"></text></g><g><title>&lt;bevy_window::window::WindowId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="25.3037%" y="917" width="0.0123%" height="15" fill="rgb(243,216,36)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="927.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="25.3037%" y="901" width="0.0123%" height="15" fill="rgb(250,2,10)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="911.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="25.3037%" y="885" width="0.0123%" height="15" fill="rgb(226,50,48)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="25.3037%" y="869" width="0.0123%" height="15" fill="rgb(243,81,16)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="25.3037%" y="853" width="0.0123%" height="15" fill="rgb(250,14,2)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="25.3037%" y="837" width="0.0123%" height="15" fill="rgb(233,135,29)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="847.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="25.3037%" y="821" width="0.0123%" height="15" fill="rgb(224,64,43)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="831.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="25.3037%" y="805" width="0.0123%" height="15" fill="rgb(238,84,13)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="815.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="25.3037%" y="789" width="0.0123%" height="15" fill="rgb(253,48,26)" fg:x="2062" fg:w="1"/><text x="25.5537%" y="799.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (14 samples, 0.17%)</title><rect x="25.1565%" y="1045" width="0.1718%" height="15" fill="rgb(205,223,31)" fg:x="2050" fg:w="14"/><text x="25.4065%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (10 samples, 0.12%)</title><rect x="25.2055%" y="1029" width="0.1227%" height="15" fill="rgb(221,41,32)" fg:x="2054" fg:w="10"/><text x="25.4555%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (10 samples, 0.12%)</title><rect x="25.2055%" y="1013" width="0.1227%" height="15" fill="rgb(213,158,31)" fg:x="2054" fg:w="10"/><text x="25.4555%" y="1023.50"></text></g><g><title>bevy_input::gamepad::gamepad_event_system (1 samples, 0.01%)</title><rect x="25.3160%" y="997" width="0.0123%" height="15" fill="rgb(245,126,43)" fg:x="2063" fg:w="1"/><text x="25.5660%" y="1007.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="25.3160%" y="981" width="0.0123%" height="15" fill="rgb(227,7,22)" fg:x="2063" fg:w="1"/><text x="25.5660%" y="991.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter_with_id (1 samples, 0.01%)</title><rect x="25.3160%" y="965" width="0.0123%" height="15" fill="rgb(252,90,44)" fg:x="2063" fg:w="1"/><text x="25.5660%" y="975.50"></text></g><g><title>bevy_app::event::internal_event_reader (1 samples, 0.01%)</title><rect x="25.3160%" y="949" width="0.0123%" height="15" fill="rgb(253,91,0)" fg:x="2063" fg:w="1"/><text x="25.5660%" y="959.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="25.3283%" y="1029" width="0.0123%" height="15" fill="rgb(252,175,49)" fg:x="2064" fg:w="1"/><text x="25.5783%" y="1039.50"></text></g><g><title>&lt;bevy_render::draw::DrawContextState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::shader::shader::Shader&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::pipeline::pipeline_compiler::PipelineCompiler&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::Res&lt;alloc::boxed::Box&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::shared_buffers::SharedBuffers&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="25.3283%" y="1013" width="0.0123%" height="15" fill="rgb(246,150,1)" fg:x="2064" fg:w="1"/><text x="25.5783%" y="1023.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="25.3405%" y="981" width="0.0123%" height="15" fill="rgb(241,192,25)" fg:x="2065" fg:w="1"/><text x="25.5905%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="25.3405%" y="965" width="0.0123%" height="15" fill="rgb(239,187,11)" fg:x="2065" fg:w="1"/><text x="25.5905%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="25.3405%" y="949" width="0.0123%" height="15" fill="rgb(218,202,51)" fg:x="2065" fg:w="1"/><text x="25.5905%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="25.3405%" y="933" width="0.0123%" height="15" fill="rgb(225,176,8)" fg:x="2065" fg:w="1"/><text x="25.5905%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="25.3405%" y="917" width="0.0123%" height="15" fill="rgb(219,122,41)" fg:x="2065" fg:w="1"/><text x="25.5905%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="25.3405%" y="901" width="0.0123%" height="15" fill="rgb(248,140,20)" fg:x="2065" fg:w="1"/><text x="25.5905%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="25.3405%" y="885" width="0.0123%" height="15" fill="rgb(245,41,37)" fg:x="2065" fg:w="1"/><text x="25.5905%" y="895.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="25.3405%" y="869" width="0.0123%" height="15" fill="rgb(235,82,39)" fg:x="2065" fg:w="1"/><text x="25.5905%" y="879.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6),()&gt;&gt;::run (3 samples, 0.04%)</title><rect x="25.3283%" y="1045" width="0.0368%" height="15" fill="rgb(230,108,42)" fg:x="2064" fg:w="3"/><text x="25.5783%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="25.3405%" y="1029" width="0.0245%" height="15" fill="rgb(215,150,50)" fg:x="2065" fg:w="2"/><text x="25.5905%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="25.3405%" y="1013" width="0.0245%" height="15" fill="rgb(233,212,5)" fg:x="2065" fg:w="2"/><text x="25.5905%" y="1023.50"></text></g><g><title>bevy_ui::widget::text::draw_text_system (2 samples, 0.02%)</title><rect x="25.3405%" y="997" width="0.0245%" height="15" fill="rgb(245,80,22)" fg:x="2065" fg:w="2"/><text x="25.5905%" y="1007.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_layout (1 samples, 0.01%)</title><rect x="25.3528%" y="981" width="0.0123%" height="15" fill="rgb(238,129,16)" fg:x="2066" fg:w="1"/><text x="25.6028%" y="991.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="25.3651%" y="1029" width="0.0123%" height="15" fill="rgb(240,19,0)" fg:x="2067" fg:w="1"/><text x="25.6151%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="25.3896%" y="981" width="0.0245%" height="15" fill="rgb(232,42,35)" fg:x="2069" fg:w="2"/><text x="25.6396%" y="991.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (2 samples, 0.02%)</title><rect x="25.3896%" y="965" width="0.0245%" height="15" fill="rgb(223,130,24)" fg:x="2069" fg:w="2"/><text x="25.6396%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (2 samples, 0.02%)</title><rect x="25.3896%" y="949" width="0.0245%" height="15" fill="rgb(237,16,22)" fg:x="2069" fg:w="2"/><text x="25.6396%" y="959.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::is_changed (2 samples, 0.02%)</title><rect x="25.3896%" y="933" width="0.0245%" height="15" fill="rgb(248,192,20)" fg:x="2069" fg:w="2"/><text x="25.6396%" y="943.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="25.3896%" y="917" width="0.0245%" height="15" fill="rgb(233,167,2)" fg:x="2069" fg:w="2"/><text x="25.6396%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::native_gpu_future::GpuFuture&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="25.4264%" y="949" width="0.0123%" height="15" fill="rgb(252,71,44)" fg:x="2072" fg:w="1"/><text x="25.6764%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;wgpu::backend::native_gpu_future::WakerOrResult&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="25.4264%" y="933" width="0.0123%" height="15" fill="rgb(238,37,47)" fg:x="2072" fg:w="1"/><text x="25.6764%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.4264%" y="917" width="0.0123%" height="15" fill="rgb(214,202,54)" fg:x="2072" fg:w="1"/><text x="25.6764%" y="927.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.4264%" y="901" width="0.0123%" height="15" fill="rgb(254,165,40)" fg:x="2072" fg:w="1"/><text x="25.6764%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.4264%" y="885" width="0.0123%" height="15" fill="rgb(246,173,38)" fg:x="2072" fg:w="1"/><text x="25.6764%" y="895.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (1 samples, 0.01%)</title><rect x="25.4387%" y="917" width="0.0123%" height="15" fill="rgb(215,3,27)" fg:x="2073" fg:w="1"/><text x="25.6887%" y="927.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="25.4387%" y="901" width="0.0123%" height="15" fill="rgb(239,169,51)" fg:x="2073" fg:w="1"/><text x="25.6887%" y="911.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="25.4387%" y="885" width="0.0123%" height="15" fill="rgb(212,5,25)" fg:x="2073" fg:w="1"/><text x="25.6887%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="25.4387%" y="869" width="0.0123%" height="15" fill="rgb(243,45,17)" fg:x="2073" fg:w="1"/><text x="25.6887%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.01%)</title><rect x="25.4510%" y="901" width="0.0123%" height="15" fill="rgb(242,97,9)" fg:x="2074" fg:w="1"/><text x="25.7010%" y="911.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.4510%" y="885" width="0.0123%" height="15" fill="rgb(228,71,31)" fg:x="2074" fg:w="1"/><text x="25.7010%" y="895.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (1 samples, 0.01%)</title><rect x="25.4510%" y="869" width="0.0123%" height="15" fill="rgb(252,184,16)" fg:x="2074" fg:w="1"/><text x="25.7010%" y="879.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="25.4510%" y="853" width="0.0123%" height="15" fill="rgb(236,169,46)" fg:x="2074" fg:w="1"/><text x="25.7010%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="25.4510%" y="837" width="0.0123%" height="15" fill="rgb(207,17,47)" fg:x="2074" fg:w="1"/><text x="25.7010%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.4510%" y="821" width="0.0123%" height="15" fill="rgb(206,201,28)" fg:x="2074" fg:w="1"/><text x="25.7010%" y="831.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.4510%" y="805" width="0.0123%" height="15" fill="rgb(224,184,23)" fg:x="2074" fg:w="1"/><text x="25.7010%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.4510%" y="789" width="0.0123%" height="15" fill="rgb(208,139,48)" fg:x="2074" fg:w="1"/><text x="25.7010%" y="799.50"></text></g><g><title>futures_lite::future::block_on (4 samples, 0.05%)</title><rect x="25.4264%" y="965" width="0.0491%" height="15" fill="rgb(208,130,10)" fg:x="2072" fg:w="4"/><text x="25.6764%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.04%)</title><rect x="25.4387%" y="949" width="0.0368%" height="15" fill="rgb(211,213,45)" fg:x="2073" fg:w="3"/><text x="25.6887%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="25.4387%" y="933" width="0.0368%" height="15" fill="rgb(235,100,30)" fg:x="2073" fg:w="3"/><text x="25.6887%" y="943.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (2 samples, 0.02%)</title><rect x="25.4510%" y="917" width="0.0245%" height="15" fill="rgb(206,144,31)" fg:x="2074" fg:w="2"/><text x="25.7010%" y="927.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker (1 samples, 0.01%)</title><rect x="25.4632%" y="901" width="0.0123%" height="15" fill="rgb(224,200,26)" fg:x="2075" fg:w="1"/><text x="25.7132%" y="911.50"></text></g><g><title>parking::Parker::new (1 samples, 0.01%)</title><rect x="25.4632%" y="885" width="0.0123%" height="15" fill="rgb(247,104,53)" fg:x="2075" fg:w="1"/><text x="25.7132%" y="895.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="25.4632%" y="869" width="0.0123%" height="15" fill="rgb(220,14,17)" fg:x="2075" fg:w="1"/><text x="25.7132%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="25.4632%" y="853" width="0.0123%" height="15" fill="rgb(230,140,40)" fg:x="2075" fg:w="1"/><text x="25.7132%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="25.4632%" y="837" width="0.0123%" height="15" fill="rgb(229,2,41)" fg:x="2075" fg:w="1"/><text x="25.7132%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="25.4632%" y="821" width="0.0123%" height="15" fill="rgb(232,89,16)" fg:x="2075" fg:w="1"/><text x="25.7132%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="25.4632%" y="805" width="0.0123%" height="15" fill="rgb(247,59,52)" fg:x="2075" fg:w="1"/><text x="25.7132%" y="815.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="25.4632%" y="789" width="0.0123%" height="15" fill="rgb(226,110,21)" fg:x="2075" fg:w="1"/><text x="25.7132%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="25.4632%" y="773" width="0.0123%" height="15" fill="rgb(224,176,43)" fg:x="2075" fg:w="1"/><text x="25.7132%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="25.4632%" y="757" width="0.0123%" height="15" fill="rgb(221,73,6)" fg:x="2075" fg:w="1"/><text x="25.7132%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.01%)</title><rect x="25.5001%" y="917" width="0.0123%" height="15" fill="rgb(232,78,19)" fg:x="2078" fg:w="1"/><text x="25.7501%" y="927.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.5001%" y="901" width="0.0123%" height="15" fill="rgb(233,112,48)" fg:x="2078" fg:w="1"/><text x="25.7501%" y="911.50"></text></g><g><title>tracing::span::Span::do_exit (1 samples, 0.01%)</title><rect x="25.5001%" y="885" width="0.0123%" height="15" fill="rgb(243,131,47)" fg:x="2078" fg:w="1"/><text x="25.7501%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="25.5001%" y="869" width="0.0123%" height="15" fill="rgb(226,51,1)" fg:x="2078" fg:w="1"/><text x="25.7501%" y="879.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="25.5123%" y="917" width="0.0245%" height="15" fill="rgb(247,58,7)" fg:x="2079" fg:w="2"/><text x="25.7623%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="25.5123%" y="901" width="0.0245%" height="15" fill="rgb(209,7,32)" fg:x="2079" fg:w="2"/><text x="25.7623%" y="911.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.02%)</title><rect x="25.5123%" y="885" width="0.0245%" height="15" fill="rgb(209,39,41)" fg:x="2079" fg:w="2"/><text x="25.7623%" y="895.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (2 samples, 0.02%)</title><rect x="25.5123%" y="869" width="0.0245%" height="15" fill="rgb(226,182,46)" fg:x="2079" fg:w="2"/><text x="25.7623%" y="879.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (2 samples, 0.02%)</title><rect x="25.5123%" y="853" width="0.0245%" height="15" fill="rgb(230,219,10)" fg:x="2079" fg:w="2"/><text x="25.7623%" y="863.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (2 samples, 0.02%)</title><rect x="25.5123%" y="837" width="0.0245%" height="15" fill="rgb(227,175,30)" fg:x="2079" fg:w="2"/><text x="25.7623%" y="847.50"></text></g><g><title>core::hint::spin_loop (2 samples, 0.02%)</title><rect x="25.5123%" y="821" width="0.0245%" height="15" fill="rgb(217,2,50)" fg:x="2079" fg:w="2"/><text x="25.7623%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (2 samples, 0.02%)</title><rect x="25.5123%" y="805" width="0.0245%" height="15" fill="rgb(229,160,0)" fg:x="2079" fg:w="2"/><text x="25.7623%" y="815.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (1 samples, 0.01%)</title><rect x="25.5369%" y="917" width="0.0123%" height="15" fill="rgb(207,78,37)" fg:x="2081" fg:w="1"/><text x="25.7869%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.5369%" y="901" width="0.0123%" height="15" fill="rgb(225,57,0)" fg:x="2081" fg:w="1"/><text x="25.7869%" y="911.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="25.5369%" y="885" width="0.0123%" height="15" fill="rgb(232,154,2)" fg:x="2081" fg:w="1"/><text x="25.7869%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="25.5369%" y="869" width="0.0123%" height="15" fill="rgb(241,212,25)" fg:x="2081" fg:w="1"/><text x="25.7869%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="25.5369%" y="853" width="0.0123%" height="15" fill="rgb(226,69,20)" fg:x="2081" fg:w="1"/><text x="25.7869%" y="863.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life (2 samples, 0.02%)</title><rect x="25.5491%" y="917" width="0.0245%" height="15" fill="rgb(247,184,54)" fg:x="2082" fg:w="2"/><text x="25.7991%" y="927.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life_internal (2 samples, 0.02%)</title><rect x="25.5491%" y="901" width="0.0245%" height="15" fill="rgb(210,145,0)" fg:x="2082" fg:w="2"/><text x="25.7991%" y="911.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="25.5491%" y="885" width="0.0245%" height="15" fill="rgb(253,82,12)" fg:x="2082" fg:w="2"/><text x="25.7991%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="25.5491%" y="869" width="0.0245%" height="15" fill="rgb(245,42,11)" fg:x="2082" fg:w="2"/><text x="25.7991%" y="879.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (2 samples, 0.02%)</title><rect x="25.5491%" y="853" width="0.0245%" height="15" fill="rgb(219,147,32)" fg:x="2082" fg:w="2"/><text x="25.7991%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::park (2 samples, 0.02%)</title><rect x="25.5491%" y="837" width="0.0245%" height="15" fill="rgb(246,12,7)" fg:x="2082" fg:w="2"/><text x="25.7991%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (2 samples, 0.02%)</title><rect x="25.5491%" y="821" width="0.0245%" height="15" fill="rgb(243,50,9)" fg:x="2082" fg:w="2"/><text x="25.7991%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (2 samples, 0.02%)</title><rect x="25.5491%" y="805" width="0.0245%" height="15" fill="rgb(219,149,6)" fg:x="2082" fg:w="2"/><text x="25.7991%" y="815.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (2 samples, 0.02%)</title><rect x="25.5491%" y="789" width="0.0245%" height="15" fill="rgb(241,51,42)" fg:x="2082" fg:w="2"/><text x="25.7991%" y="799.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (2 samples, 0.02%)</title><rect x="25.5491%" y="773" width="0.0245%" height="15" fill="rgb(226,128,27)" fg:x="2082" fg:w="2"/><text x="25.7991%" y="783.50"></text></g><g><title>syscall (2 samples, 0.02%)</title><rect x="25.5491%" y="757" width="0.0245%" height="15" fill="rgb(244,144,4)" fg:x="2082" fg:w="2"/><text x="25.7991%" y="767.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (2 samples, 0.02%)</title><rect x="25.5737%" y="917" width="0.0245%" height="15" fill="rgb(221,4,13)" fg:x="2084" fg:w="2"/><text x="25.8237%" y="927.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (2 samples, 0.02%)</title><rect x="25.5737%" y="901" width="0.0245%" height="15" fill="rgb(208,170,28)" fg:x="2084" fg:w="2"/><text x="25.8237%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (2 samples, 0.02%)</title><rect x="25.5737%" y="885" width="0.0245%" height="15" fill="rgb(226,131,13)" fg:x="2084" fg:w="2"/><text x="25.8237%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (2 samples, 0.02%)</title><rect x="25.5737%" y="869" width="0.0245%" height="15" fill="rgb(215,72,41)" fg:x="2084" fg:w="2"/><text x="25.8237%" y="879.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (1 samples, 0.01%)</title><rect x="25.5860%" y="853" width="0.0123%" height="15" fill="rgb(243,108,20)" fg:x="2085" fg:w="1"/><text x="25.8360%" y="863.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="25.5860%" y="837" width="0.0123%" height="15" fill="rgb(230,189,17)" fg:x="2085" fg:w="1"/><text x="25.8360%" y="847.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="25.5860%" y="821" width="0.0123%" height="15" fill="rgb(220,50,17)" fg:x="2085" fg:w="1"/><text x="25.8360%" y="831.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="25.5860%" y="805" width="0.0123%" height="15" fill="rgb(248,152,48)" fg:x="2085" fg:w="1"/><text x="25.8360%" y="815.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="25.5860%" y="789" width="0.0123%" height="15" fill="rgb(244,91,11)" fg:x="2085" fg:w="1"/><text x="25.8360%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="25.5860%" y="773" width="0.0123%" height="15" fill="rgb(220,157,5)" fg:x="2085" fg:w="1"/><text x="25.8360%" y="783.50"></text></g><g><title>wgpu::BufferSlice::map_async (11 samples, 0.13%)</title><rect x="25.4755%" y="965" width="0.1350%" height="15" fill="rgb(253,137,8)" fg:x="2076" fg:w="11"/><text x="25.7255%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (10 samples, 0.12%)</title><rect x="25.4878%" y="949" width="0.1227%" height="15" fill="rgb(217,137,51)" fg:x="2077" fg:w="10"/><text x="25.7378%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (9 samples, 0.11%)</title><rect x="25.5001%" y="933" width="0.1104%" height="15" fill="rgb(218,209,53)" fg:x="2078" fg:w="9"/><text x="25.7501%" y="943.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (1 samples, 0.01%)</title><rect x="25.5982%" y="917" width="0.0123%" height="15" fill="rgb(249,137,25)" fg:x="2086" fg:w="1"/><text x="25.8482%" y="927.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (1 samples, 0.01%)</title><rect x="25.5982%" y="901" width="0.0123%" height="15" fill="rgb(239,155,26)" fg:x="2086" fg:w="1"/><text x="25.8482%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="25.5982%" y="885" width="0.0123%" height="15" fill="rgb(227,85,46)" fg:x="2086" fg:w="1"/><text x="25.8482%" y="895.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="25.5982%" y="869" width="0.0123%" height="15" fill="rgb(251,107,43)" fg:x="2086" fg:w="1"/><text x="25.8482%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="25.5982%" y="853" width="0.0123%" height="15" fill="rgb(234,170,33)" fg:x="2086" fg:w="1"/><text x="25.8482%" y="863.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="25.6228%" y="901" width="0.0123%" height="15" fill="rgb(206,29,35)" fg:x="2088" fg:w="1"/><text x="25.8728%" y="911.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="25.6228%" y="885" width="0.0123%" height="15" fill="rgb(227,138,25)" fg:x="2088" fg:w="1"/><text x="25.8728%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="25.6228%" y="869" width="0.0123%" height="15" fill="rgb(249,131,35)" fg:x="2088" fg:w="1"/><text x="25.8728%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="25.6228%" y="853" width="0.0123%" height="15" fill="rgb(239,6,40)" fg:x="2088" fg:w="1"/><text x="25.8728%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="25.6228%" y="837" width="0.0123%" height="15" fill="rgb(246,136,47)" fg:x="2088" fg:w="1"/><text x="25.8728%" y="847.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life (4 samples, 0.05%)</title><rect x="25.6350%" y="901" width="0.0491%" height="15" fill="rgb(253,58,26)" fg:x="2089" fg:w="4"/><text x="25.8850%" y="911.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life_internal (4 samples, 0.05%)</title><rect x="25.6350%" y="885" width="0.0491%" height="15" fill="rgb(237,141,10)" fg:x="2089" fg:w="4"/><text x="25.8850%" y="895.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (4 samples, 0.05%)</title><rect x="25.6350%" y="869" width="0.0491%" height="15" fill="rgb(234,156,12)" fg:x="2089" fg:w="4"/><text x="25.8850%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (4 samples, 0.05%)</title><rect x="25.6350%" y="853" width="0.0491%" height="15" fill="rgb(243,224,36)" fg:x="2089" fg:w="4"/><text x="25.8850%" y="863.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (4 samples, 0.05%)</title><rect x="25.6350%" y="837" width="0.0491%" height="15" fill="rgb(205,229,51)" fg:x="2089" fg:w="4"/><text x="25.8850%" y="847.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (3 samples, 0.04%)</title><rect x="25.6473%" y="821" width="0.0368%" height="15" fill="rgb(223,189,4)" fg:x="2090" fg:w="3"/><text x="25.8973%" y="831.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (3 samples, 0.04%)</title><rect x="25.6473%" y="805" width="0.0368%" height="15" fill="rgb(249,167,54)" fg:x="2090" fg:w="3"/><text x="25.8973%" y="815.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (3 samples, 0.04%)</title><rect x="25.6473%" y="789" width="0.0368%" height="15" fill="rgb(218,34,28)" fg:x="2090" fg:w="3"/><text x="25.8973%" y="799.50"></text></g><g><title>core::hint::spin_loop (3 samples, 0.04%)</title><rect x="25.6473%" y="773" width="0.0368%" height="15" fill="rgb(232,109,42)" fg:x="2090" fg:w="3"/><text x="25.8973%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (3 samples, 0.04%)</title><rect x="25.6473%" y="757" width="0.0368%" height="15" fill="rgb(248,214,46)" fg:x="2090" fg:w="3"/><text x="25.8973%" y="767.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::cleanup (1 samples, 0.01%)</title><rect x="25.6841%" y="853" width="0.0123%" height="15" fill="rgb(244,216,40)" fg:x="2093" fg:w="1"/><text x="25.9341%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (1 samples, 0.01%)</title><rect x="25.6841%" y="837" width="0.0123%" height="15" fill="rgb(231,226,31)" fg:x="2093" fg:w="1"/><text x="25.9341%" y="847.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (1 samples, 0.01%)</title><rect x="25.6841%" y="821" width="0.0123%" height="15" fill="rgb(238,38,43)" fg:x="2093" fg:w="1"/><text x="25.9341%" y="831.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="25.6841%" y="805" width="0.0123%" height="15" fill="rgb(208,88,43)" fg:x="2093" fg:w="1"/><text x="25.9341%" y="815.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (2 samples, 0.02%)</title><rect x="25.6841%" y="885" width="0.0245%" height="15" fill="rgb(205,136,37)" fg:x="2093" fg:w="2"/><text x="25.9341%" y="895.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (2 samples, 0.02%)</title><rect x="25.6841%" y="869" width="0.0245%" height="15" fill="rgb(237,34,14)" fg:x="2093" fg:w="2"/><text x="25.9341%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::values_mut (1 samples, 0.01%)</title><rect x="25.6964%" y="853" width="0.0123%" height="15" fill="rgb(236,193,44)" fg:x="2094" fg:w="1"/><text x="25.9464%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::iter_mut (1 samples, 0.01%)</title><rect x="25.6964%" y="837" width="0.0123%" height="15" fill="rgb(231,48,10)" fg:x="2094" fg:w="1"/><text x="25.9464%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="25.6964%" y="821" width="0.0123%" height="15" fill="rgb(213,141,34)" fg:x="2094" fg:w="1"/><text x="25.9464%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="25.6964%" y="805" width="0.0123%" height="15" fill="rgb(249,130,34)" fg:x="2094" fg:w="1"/><text x="25.9464%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="25.6964%" y="789" width="0.0123%" height="15" fill="rgb(219,42,41)" fg:x="2094" fg:w="1"/><text x="25.9464%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="25.6964%" y="773" width="0.0123%" height="15" fill="rgb(224,100,54)" fg:x="2094" fg:w="1"/><text x="25.9464%" y="783.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::dealloc (1 samples, 0.01%)</title><rect x="25.7087%" y="837" width="0.0123%" height="15" fill="rgb(229,200,27)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.01%)</title><rect x="25.7087%" y="821" width="0.0123%" height="15" fill="rgb(217,118,10)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="831.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.7087%" y="805" width="0.0123%" height="15" fill="rgb(206,22,3)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="815.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="25.7087%" y="789" width="0.0123%" height="15" fill="rgb(232,163,46)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="25.7087%" y="773" width="0.0123%" height="15" fill="rgb(206,95,13)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="25.7087%" y="757" width="0.0123%" height="15" fill="rgb(253,154,18)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.01%)</title><rect x="25.7087%" y="741" width="0.0123%" height="15" fill="rgb(219,32,23)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.01%)</title><rect x="25.7087%" y="725" width="0.0123%" height="15" fill="rgb(230,191,45)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.7087%" y="709" width="0.0123%" height="15" fill="rgb(229,64,36)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="25.7087%" y="693" width="0.0123%" height="15" fill="rgb(205,129,25)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.01%)</title><rect x="25.7087%" y="677" width="0.0123%" height="15" fill="rgb(254,112,7)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="687.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (1 samples, 0.01%)</title><rect x="25.7087%" y="661" width="0.0123%" height="15" fill="rgb(226,53,48)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="25.7087%" y="645" width="0.0123%" height="15" fill="rgb(214,153,38)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="655.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="25.7087%" y="629" width="0.0123%" height="15" fill="rgb(243,101,7)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="639.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (1 samples, 0.01%)</title><rect x="25.7087%" y="613" width="0.0123%" height="15" fill="rgb(240,140,22)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="623.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (1 samples, 0.01%)</title><rect x="25.7087%" y="597" width="0.0123%" height="15" fill="rgb(235,114,2)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="607.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="25.7087%" y="581" width="0.0123%" height="15" fill="rgb(242,59,12)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="591.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::{{closure}} (1 samples, 0.01%)</title><rect x="25.7087%" y="565" width="0.0123%" height="15" fill="rgb(252,134,9)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="575.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (1 samples, 0.01%)</title><rect x="25.7087%" y="549" width="0.0123%" height="15" fill="rgb(236,4,44)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="559.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (1 samples, 0.01%)</title><rect x="25.7087%" y="533" width="0.0123%" height="15" fill="rgb(254,172,41)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="543.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (1 samples, 0.01%)</title><rect x="25.7087%" y="517" width="0.0123%" height="15" fill="rgb(244,63,20)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="527.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="25.7087%" y="501" width="0.0123%" height="15" fill="rgb(250,73,31)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="511.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::{{closure}} (1 samples, 0.01%)</title><rect x="25.7087%" y="485" width="0.0123%" height="15" fill="rgb(241,38,36)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="495.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}} (1 samples, 0.01%)</title><rect x="25.7087%" y="469" width="0.0123%" height="15" fill="rgb(245,211,2)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="25.7087%" y="453" width="0.0123%" height="15" fill="rgb(206,120,28)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="463.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="25.7087%" y="437" width="0.0123%" height="15" fill="rgb(211,59,34)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (1 samples, 0.01%)</title><rect x="25.7087%" y="421" width="0.0123%" height="15" fill="rgb(233,168,5)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="431.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::clear (1 samples, 0.01%)</title><rect x="25.7087%" y="405" width="0.0123%" height="15" fill="rgb(234,33,13)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (1 samples, 0.01%)</title><rect x="25.7087%" y="389" width="0.0123%" height="15" fill="rgb(231,150,26)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="25.7087%" y="373" width="0.0123%" height="15" fill="rgb(217,191,4)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="25.7087%" y="357" width="0.0123%" height="15" fill="rgb(246,198,38)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="25.7087%" y="341" width="0.0123%" height="15" fill="rgb(245,64,37)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="351.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="25.7087%" y="325" width="0.0123%" height="15" fill="rgb(250,30,36)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="25.7087%" y="309" width="0.0123%" height="15" fill="rgb(217,86,53)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt; (1 samples, 0.01%)</title><rect x="25.7087%" y="293" width="0.0123%" height="15" fill="rgb(228,157,16)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (1 samples, 0.01%)</title><rect x="25.7087%" y="277" width="0.0123%" height="15" fill="rgb(217,59,31)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="287.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="25.7087%" y="261" width="0.0123%" height="15" fill="rgb(237,138,41)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="271.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.7087%" y="245" width="0.0123%" height="15" fill="rgb(227,91,49)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="255.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="25.7087%" y="229" width="0.0123%" height="15" fill="rgb(247,21,44)" fg:x="2095" fg:w="1"/><text x="25.9587%" y="239.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (5 samples, 0.06%)</title><rect x="25.6841%" y="901" width="0.0614%" height="15" fill="rgb(219,210,51)" fg:x="2093" fg:w="5"/><text x="25.9341%" y="911.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (3 samples, 0.04%)</title><rect x="25.7087%" y="885" width="0.0368%" height="15" fill="rgb(209,140,6)" fg:x="2095" fg:w="3"/><text x="25.9587%" y="895.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (3 samples, 0.04%)</title><rect x="25.7087%" y="869" width="0.0368%" height="15" fill="rgb(221,188,24)" fg:x="2095" fg:w="3"/><text x="25.9587%" y="879.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (3 samples, 0.04%)</title><rect x="25.7087%" y="853" width="0.0368%" height="15" fill="rgb(232,154,20)" fg:x="2095" fg:w="3"/><text x="25.9587%" y="863.50"></text></g><g><title>tracing::span::Span::new (2 samples, 0.02%)</title><rect x="25.7209%" y="837" width="0.0245%" height="15" fill="rgb(244,137,50)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="847.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="25.7209%" y="821" width="0.0245%" height="15" fill="rgb(225,185,43)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="25.7209%" y="805" width="0.0245%" height="15" fill="rgb(213,205,38)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="815.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (2 samples, 0.02%)</title><rect x="25.7209%" y="789" width="0.0245%" height="15" fill="rgb(236,73,12)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="799.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (2 samples, 0.02%)</title><rect x="25.7209%" y="773" width="0.0245%" height="15" fill="rgb(235,219,13)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="783.50"></text></g><g><title>tracing::span::Span::new_with (2 samples, 0.02%)</title><rect x="25.7209%" y="757" width="0.0245%" height="15" fill="rgb(218,59,36)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="767.50"></text></g><g><title>tracing::span::Span::make_with (2 samples, 0.02%)</title><rect x="25.7209%" y="741" width="0.0245%" height="15" fill="rgb(205,110,39)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="751.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (2 samples, 0.02%)</title><rect x="25.7209%" y="725" width="0.0245%" height="15" fill="rgb(218,206,42)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="25.7209%" y="709" width="0.0245%" height="15" fill="rgb(248,125,24)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="25.7209%" y="693" width="0.0245%" height="15" fill="rgb(242,28,27)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (2 samples, 0.02%)</title><rect x="25.7209%" y="677" width="0.0245%" height="15" fill="rgb(216,228,15)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="687.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (2 samples, 0.02%)</title><rect x="25.7209%" y="661" width="0.0245%" height="15" fill="rgb(235,116,46)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="671.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (2 samples, 0.02%)</title><rect x="25.7209%" y="645" width="0.0245%" height="15" fill="rgb(224,18,32)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="655.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (2 samples, 0.02%)</title><rect x="25.7209%" y="629" width="0.0245%" height="15" fill="rgb(252,5,12)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="639.50"></text></g><g><title>tracing_core::span::Attributes::record (2 samples, 0.02%)</title><rect x="25.7209%" y="613" width="0.0245%" height="15" fill="rgb(251,36,5)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="623.50"></text></g><g><title>tracing_core::field::ValueSet::record (2 samples, 0.02%)</title><rect x="25.7209%" y="597" width="0.0245%" height="15" fill="rgb(217,53,14)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="607.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (2 samples, 0.02%)</title><rect x="25.7209%" y="581" width="0.0245%" height="15" fill="rgb(215,86,45)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (2 samples, 0.02%)</title><rect x="25.7209%" y="565" width="0.0245%" height="15" fill="rgb(242,169,11)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.02%)</title><rect x="25.7209%" y="549" width="0.0245%" height="15" fill="rgb(211,213,45)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="559.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="25.7209%" y="533" width="0.0245%" height="15" fill="rgb(205,88,11)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="543.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="25.7209%" y="517" width="0.0245%" height="15" fill="rgb(252,69,26)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="25.7209%" y="501" width="0.0245%" height="15" fill="rgb(246,123,37)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="511.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="25.7209%" y="485" width="0.0245%" height="15" fill="rgb(212,205,5)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="495.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.02%)</title><rect x="25.7209%" y="469" width="0.0245%" height="15" fill="rgb(253,148,0)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="25.7209%" y="453" width="0.0245%" height="15" fill="rgb(239,22,4)" fg:x="2096" fg:w="2"/><text x="25.9709%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="25.7455%" y="885" width="0.0123%" height="15" fill="rgb(226,26,53)" fg:x="2098" fg:w="1"/><text x="25.9955%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="25.7455%" y="869" width="0.0123%" height="15" fill="rgb(225,229,45)" fg:x="2098" fg:w="1"/><text x="25.9955%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="25.7455%" y="853" width="0.0123%" height="15" fill="rgb(220,60,37)" fg:x="2098" fg:w="1"/><text x="25.9955%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="25.7455%" y="837" width="0.0123%" height="15" fill="rgb(217,180,35)" fg:x="2098" fg:w="1"/><text x="25.9955%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="25.7455%" y="821" width="0.0123%" height="15" fill="rgb(229,7,53)" fg:x="2098" fg:w="1"/><text x="25.9955%" y="831.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="25.7455%" y="805" width="0.0123%" height="15" fill="rgb(254,137,3)" fg:x="2098" fg:w="1"/><text x="25.9955%" y="815.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="25.7455%" y="789" width="0.0123%" height="15" fill="rgb(215,140,41)" fg:x="2098" fg:w="1"/><text x="25.9955%" y="799.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="25.7455%" y="773" width="0.0123%" height="15" fill="rgb(250,80,15)" fg:x="2098" fg:w="1"/><text x="25.9955%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="25.7455%" y="757" width="0.0123%" height="15" fill="rgb(252,191,6)" fg:x="2098" fg:w="1"/><text x="25.9955%" y="767.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="25.7455%" y="741" width="0.0123%" height="15" fill="rgb(246,217,18)" fg:x="2098" fg:w="1"/><text x="25.9955%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::track::TrackerSet&gt;&gt; (1 samples, 0.01%)</title><rect x="25.7578%" y="885" width="0.0123%" height="15" fill="rgb(223,93,7)" fg:x="2099" fg:w="1"/><text x="26.0078%" y="895.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.7578%" y="869" width="0.0123%" height="15" fill="rgb(225,55,52)" fg:x="2099" fg:w="1"/><text x="26.0078%" y="879.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="25.7578%" y="853" width="0.0123%" height="15" fill="rgb(240,31,24)" fg:x="2099" fg:w="1"/><text x="26.0078%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="25.7578%" y="837" width="0.0123%" height="15" fill="rgb(205,56,52)" fg:x="2099" fg:w="1"/><text x="26.0078%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="25.7578%" y="821" width="0.0123%" height="15" fill="rgb(246,146,12)" fg:x="2099" fg:w="1"/><text x="26.0078%" y="831.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::handle_mapping (3 samples, 0.04%)</title><rect x="25.7455%" y="901" width="0.0368%" height="15" fill="rgb(239,84,36)" fg:x="2098" fg:w="3"/><text x="25.9955%" y="911.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="25.7700%" y="885" width="0.0123%" height="15" fill="rgb(207,41,40)" fg:x="2100" fg:w="1"/><text x="26.0200%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="25.7700%" y="869" width="0.0123%" height="15" fill="rgb(241,179,25)" fg:x="2100" fg:w="1"/><text x="26.0200%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="25.7700%" y="853" width="0.0123%" height="15" fill="rgb(210,0,34)" fg:x="2100" fg:w="1"/><text x="26.0200%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="25.7700%" y="837" width="0.0123%" height="15" fill="rgb(225,217,29)" fg:x="2100" fg:w="1"/><text x="26.0200%" y="847.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (1 samples, 0.01%)</title><rect x="25.7823%" y="901" width="0.0123%" height="15" fill="rgb(216,191,38)" fg:x="2101" fg:w="1"/><text x="26.0323%" y="911.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::destroy_fence (1 samples, 0.01%)</title><rect x="25.7823%" y="885" width="0.0123%" height="15" fill="rgb(232,140,52)" fg:x="2101" fg:w="1"/><text x="26.0323%" y="895.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_fence (1 samples, 0.01%)</title><rect x="25.7823%" y="869" width="0.0123%" height="15" fill="rgb(223,158,51)" fg:x="2101" fg:w="1"/><text x="26.0323%" y="879.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::destroy_fence (1 samples, 0.01%)</title><rect x="25.7823%" y="853" width="0.0123%" height="15" fill="rgb(235,29,51)" fg:x="2101" fg:w="1"/><text x="26.0323%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="25.7823%" y="837" width="0.0123%" height="15" fill="rgb(215,181,18)" fg:x="2101" fg:w="1"/><text x="26.0323%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="25.7823%" y="821" width="0.0123%" height="15" fill="rgb(227,125,34)" fg:x="2101" fg:w="1"/><text x="26.0323%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="25.7823%" y="805" width="0.0123%" height="15" fill="rgb(230,197,49)" fg:x="2101" fg:w="1"/><text x="26.0323%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="25.7823%" y="789" width="0.0123%" height="15" fill="rgb(239,141,16)" fg:x="2101" fg:w="1"/><text x="26.0323%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="25.7823%" y="773" width="0.0123%" height="15" fill="rgb(225,105,43)" fg:x="2101" fg:w="1"/><text x="26.0323%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="25.7823%" y="757" width="0.0123%" height="15" fill="rgb(214,131,14)" fg:x="2101" fg:w="1"/><text x="26.0323%" y="767.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (17 samples, 0.21%)</title><rect x="25.6228%" y="917" width="0.2086%" height="15" fill="rgb(229,177,11)" fg:x="2088" fg:w="17"/><text x="25.8728%" y="927.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (3 samples, 0.04%)</title><rect x="25.7946%" y="901" width="0.0368%" height="15" fill="rgb(231,180,14)" fg:x="2102" fg:w="3"/><text x="26.0446%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (3 samples, 0.04%)</title><rect x="25.7946%" y="885" width="0.0368%" height="15" fill="rgb(232,88,2)" fg:x="2102" fg:w="3"/><text x="26.0446%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.01%)</title><rect x="25.8314%" y="773" width="0.0123%" height="15" fill="rgb(205,220,8)" fg:x="2105" fg:w="1"/><text x="26.0814%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="25.8314%" y="757" width="0.0123%" height="15" fill="rgb(225,23,53)" fg:x="2105" fg:w="1"/><text x="26.0814%" y="767.50"></text></g><g><title>parking_lot_core::parking_lot::park (2 samples, 0.02%)</title><rect x="25.8314%" y="837" width="0.0245%" height="15" fill="rgb(213,62,29)" fg:x="2105" fg:w="2"/><text x="26.0814%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (2 samples, 0.02%)</title><rect x="25.8314%" y="821" width="0.0245%" height="15" fill="rgb(227,75,7)" fg:x="2105" fg:w="2"/><text x="26.0814%" y="831.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (2 samples, 0.02%)</title><rect x="25.8314%" y="805" width="0.0245%" height="15" fill="rgb(207,105,14)" fg:x="2105" fg:w="2"/><text x="26.0814%" y="815.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (2 samples, 0.02%)</title><rect x="25.8314%" y="789" width="0.0245%" height="15" fill="rgb(245,62,29)" fg:x="2105" fg:w="2"/><text x="26.0814%" y="799.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.01%)</title><rect x="25.8437%" y="773" width="0.0123%" height="15" fill="rgb(236,202,4)" fg:x="2106" fg:w="1"/><text x="26.0937%" y="783.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="25.8437%" y="757" width="0.0123%" height="15" fill="rgb(250,67,1)" fg:x="2106" fg:w="1"/><text x="26.0937%" y="767.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (37 samples, 0.45%)</title><rect x="25.4142%" y="981" width="0.4540%" height="15" fill="rgb(253,115,44)" fg:x="2071" fg:w="37"/><text x="25.6642%" y="991.50"></text></g><g><title>wgpu::Device::poll (21 samples, 0.26%)</title><rect x="25.6105%" y="965" width="0.2577%" height="15" fill="rgb(251,139,18)" fg:x="2087" fg:w="21"/><text x="25.8605%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (21 samples, 0.26%)</title><rect x="25.6105%" y="949" width="0.2577%" height="15" fill="rgb(218,22,32)" fg:x="2087" fg:w="21"/><text x="25.8605%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (21 samples, 0.26%)</title><rect x="25.6105%" y="933" width="0.2577%" height="15" fill="rgb(243,53,5)" fg:x="2087" fg:w="21"/><text x="25.8605%" y="943.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (3 samples, 0.04%)</title><rect x="25.8314%" y="917" width="0.0368%" height="15" fill="rgb(227,56,16)" fg:x="2105" fg:w="3"/><text x="26.0814%" y="927.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (3 samples, 0.04%)</title><rect x="25.8314%" y="901" width="0.0368%" height="15" fill="rgb(245,53,0)" fg:x="2105" fg:w="3"/><text x="26.0814%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (3 samples, 0.04%)</title><rect x="25.8314%" y="885" width="0.0368%" height="15" fill="rgb(216,170,35)" fg:x="2105" fg:w="3"/><text x="26.0814%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (3 samples, 0.04%)</title><rect x="25.8314%" y="869" width="0.0368%" height="15" fill="rgb(211,200,8)" fg:x="2105" fg:w="3"/><text x="26.0814%" y="879.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (3 samples, 0.04%)</title><rect x="25.8314%" y="853" width="0.0368%" height="15" fill="rgb(228,204,44)" fg:x="2105" fg:w="3"/><text x="26.0814%" y="863.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="25.8559%" y="837" width="0.0123%" height="15" fill="rgb(214,121,17)" fg:x="2107" fg:w="1"/><text x="26.1059%" y="847.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="25.8559%" y="821" width="0.0123%" height="15" fill="rgb(233,64,38)" fg:x="2107" fg:w="1"/><text x="26.1059%" y="831.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="25.8559%" y="805" width="0.0123%" height="15" fill="rgb(253,54,19)" fg:x="2107" fg:w="1"/><text x="26.1059%" y="815.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="25.8559%" y="789" width="0.0123%" height="15" fill="rgb(253,94,18)" fg:x="2107" fg:w="1"/><text x="26.1059%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="25.8559%" y="773" width="0.0123%" height="15" fill="rgb(227,57,52)" fg:x="2107" fg:w="1"/><text x="26.1059%" y="783.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (1 samples, 0.01%)</title><rect x="25.8682%" y="981" width="0.0123%" height="15" fill="rgb(230,228,50)" fg:x="2108" fg:w="1"/><text x="26.1182%" y="991.50"></text></g><g><title>wgpu::Buffer::unmap (1 samples, 0.01%)</title><rect x="25.8682%" y="965" width="0.0123%" height="15" fill="rgb(217,205,27)" fg:x="2108" fg:w="1"/><text x="26.1182%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="25.8682%" y="949" width="0.0123%" height="15" fill="rgb(252,71,50)" fg:x="2108" fg:w="1"/><text x="26.1182%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="25.8682%" y="933" width="0.0123%" height="15" fill="rgb(209,86,4)" fg:x="2108" fg:w="1"/><text x="26.1182%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BufferViewMut&gt; (1 samples, 0.01%)</title><rect x="25.8805%" y="965" width="0.0123%" height="15" fill="rgb(229,94,0)" fg:x="2109" fg:w="1"/><text x="26.1305%" y="975.50"></text></g><g><title>&lt;wgpu::BufferViewMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.8805%" y="949" width="0.0123%" height="15" fill="rgb(252,223,21)" fg:x="2109" fg:w="1"/><text x="26.1305%" y="959.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="25.8805%" y="933" width="0.0123%" height="15" fill="rgb(230,210,4)" fg:x="2109" fg:w="1"/><text x="26.1305%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="25.8805%" y="917" width="0.0123%" height="15" fill="rgb(240,149,38)" fg:x="2109" fg:w="1"/><text x="26.1305%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="25.8805%" y="901" width="0.0123%" height="15" fill="rgb(254,105,20)" fg:x="2109" fg:w="1"/><text x="26.1305%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="25.8805%" y="885" width="0.0123%" height="15" fill="rgb(253,87,46)" fg:x="2109" fg:w="1"/><text x="26.1305%" y="895.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (2 samples, 0.02%)</title><rect x="25.8805%" y="981" width="0.0245%" height="15" fill="rgb(253,116,33)" fg:x="2109" fg:w="2"/><text x="26.1305%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="25.8927%" y="965" width="0.0123%" height="15" fill="rgb(229,198,5)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="25.8927%" y="949" width="0.0123%" height="15" fill="rgb(242,38,37)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="25.8927%" y="933" width="0.0123%" height="15" fill="rgb(242,69,53)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="943.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="25.8927%" y="917" width="0.0123%" height="15" fill="rgb(249,80,16)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="927.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="25.8927%" y="901" width="0.0123%" height="15" fill="rgb(206,128,11)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="911.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="25.8927%" y="885" width="0.0123%" height="15" fill="rgb(212,35,20)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="895.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="25.8927%" y="869" width="0.0123%" height="15" fill="rgb(236,79,13)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="25.8927%" y="853" width="0.0123%" height="15" fill="rgb(233,123,3)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="25.8927%" y="837" width="0.0123%" height="15" fill="rgb(214,93,52)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="847.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="25.8927%" y="821" width="0.0123%" height="15" fill="rgb(251,37,40)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="831.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="25.8927%" y="805" width="0.0123%" height="15" fill="rgb(227,80,54)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="815.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="25.8927%" y="789" width="0.0123%" height="15" fill="rgb(254,48,11)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="799.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="25.8927%" y="773" width="0.0123%" height="15" fill="rgb(235,193,26)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="783.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="25.8927%" y="757" width="0.0123%" height="15" fill="rgb(229,99,21)" fg:x="2110" fg:w="1"/><text x="26.1427%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.9050%" y="981" width="0.0123%" height="15" fill="rgb(211,140,41)" fg:x="2111" fg:w="1"/><text x="26.1550%" y="991.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.9050%" y="965" width="0.0123%" height="15" fill="rgb(240,227,30)" fg:x="2111" fg:w="1"/><text x="26.1550%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.9050%" y="949" width="0.0123%" height="15" fill="rgb(215,224,45)" fg:x="2111" fg:w="1"/><text x="26.1550%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="25.9050%" y="933" width="0.0123%" height="15" fill="rgb(206,123,31)" fg:x="2111" fg:w="1"/><text x="26.1550%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="25.9296%" y="773" width="0.0123%" height="15" fill="rgb(210,138,16)" fg:x="2113" fg:w="1"/><text x="26.1796%" y="783.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="25.9418%" y="773" width="0.0123%" height="15" fill="rgb(228,57,28)" fg:x="2114" fg:w="1"/><text x="26.1918%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.05%)</title><rect x="25.9173%" y="981" width="0.0491%" height="15" fill="rgb(242,170,10)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.05%)</title><rect x="25.9173%" y="965" width="0.0491%" height="15" fill="rgb(228,214,39)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.05%)</title><rect x="25.9173%" y="949" width="0.0491%" height="15" fill="rgb(218,179,33)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.05%)</title><rect x="25.9173%" y="933" width="0.0491%" height="15" fill="rgb(235,193,39)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.05%)</title><rect x="25.9173%" y="917" width="0.0491%" height="15" fill="rgb(219,221,36)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.05%)</title><rect x="25.9173%" y="901" width="0.0491%" height="15" fill="rgb(248,218,19)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.05%)</title><rect x="25.9173%" y="885" width="0.0491%" height="15" fill="rgb(205,50,9)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.05%)</title><rect x="25.9173%" y="869" width="0.0491%" height="15" fill="rgb(238,81,28)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="879.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.05%)</title><rect x="25.9173%" y="853" width="0.0491%" height="15" fill="rgb(235,110,19)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="863.50"></text></g><g><title>__rdl_realloc (4 samples, 0.05%)</title><rect x="25.9173%" y="837" width="0.0491%" height="15" fill="rgb(214,7,14)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (4 samples, 0.05%)</title><rect x="25.9173%" y="821" width="0.0491%" height="15" fill="rgb(211,77,3)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="831.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.05%)</title><rect x="25.9173%" y="805" width="0.0491%" height="15" fill="rgb(229,5,9)" fg:x="2112" fg:w="4"/><text x="26.1673%" y="815.50"></text></g><g><title>_int_realloc (3 samples, 0.04%)</title><rect x="25.9296%" y="789" width="0.0368%" height="15" fill="rgb(225,90,11)" fg:x="2113" fg:w="3"/><text x="26.1796%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="25.9541%" y="773" width="0.0123%" height="15" fill="rgb(242,56,8)" fg:x="2115" fg:w="1"/><text x="26.2041%" y="783.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (6 samples, 0.07%)</title><rect x="25.9664%" y="981" width="0.0736%" height="15" fill="rgb(249,212,39)" fg:x="2116" fg:w="6"/><text x="26.2164%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.07%)</title><rect x="25.9664%" y="965" width="0.0736%" height="15" fill="rgb(236,90,9)" fg:x="2116" fg:w="6"/><text x="26.2164%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.07%)</title><rect x="25.9664%" y="949" width="0.0736%" height="15" fill="rgb(206,88,35)" fg:x="2116" fg:w="6"/><text x="26.2164%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.07%)</title><rect x="25.9664%" y="933" width="0.0736%" height="15" fill="rgb(205,126,30)" fg:x="2116" fg:w="6"/><text x="26.2164%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.07%)</title><rect x="25.9664%" y="917" width="0.0736%" height="15" fill="rgb(230,176,12)" fg:x="2116" fg:w="6"/><text x="26.2164%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.07%)</title><rect x="25.9664%" y="901" width="0.0736%" height="15" fill="rgb(243,19,9)" fg:x="2116" fg:w="6"/><text x="26.2164%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.07%)</title><rect x="25.9664%" y="885" width="0.0736%" height="15" fill="rgb(245,171,17)" fg:x="2116" fg:w="6"/><text x="26.2164%" y="895.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (6 samples, 0.07%)</title><rect x="25.9664%" y="869" width="0.0736%" height="15" fill="rgb(227,52,21)" fg:x="2116" fg:w="6"/><text x="26.2164%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="26.0400%" y="965" width="0.0123%" height="15" fill="rgb(238,69,14)" fg:x="2122" fg:w="1"/><text x="26.2900%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="26.0400%" y="949" width="0.0123%" height="15" fill="rgb(241,156,39)" fg:x="2122" fg:w="1"/><text x="26.2900%" y="959.50"></text></g><g><title>&lt;&amp;mut core::option::Option&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="26.0400%" y="933" width="0.0123%" height="15" fill="rgb(212,227,28)" fg:x="2122" fg:w="1"/><text x="26.2900%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter_mut (1 samples, 0.01%)</title><rect x="26.0400%" y="917" width="0.0123%" height="15" fill="rgb(209,118,27)" fg:x="2122" fg:w="1"/><text x="26.2900%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="26.0400%" y="901" width="0.0123%" height="15" fill="rgb(226,102,5)" fg:x="2122" fg:w="1"/><text x="26.2900%" y="911.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::resize_buffer_arrays (2 samples, 0.02%)</title><rect x="26.0400%" y="981" width="0.0245%" height="15" fill="rgb(223,34,3)" fg:x="2122" fg:w="2"/><text x="26.2900%" y="991.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::resize (1 samples, 0.01%)</title><rect x="26.0523%" y="965" width="0.0123%" height="15" fill="rgb(221,81,38)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="975.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::allocate_buffer (1 samples, 0.01%)</title><rect x="26.0523%" y="949" width="0.0123%" height="15" fill="rgb(236,219,28)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="959.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer (1 samples, 0.01%)</title><rect x="26.0523%" y="933" width="0.0123%" height="15" fill="rgb(213,200,14)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="943.50"></text></g><g><title>wgpu::Device::create_buffer (1 samples, 0.01%)</title><rect x="26.0523%" y="917" width="0.0123%" height="15" fill="rgb(240,33,19)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="927.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (1 samples, 0.01%)</title><rect x="26.0523%" y="901" width="0.0123%" height="15" fill="rgb(233,113,27)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="911.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (1 samples, 0.01%)</title><rect x="26.0523%" y="885" width="0.0123%" height="15" fill="rgb(220,221,18)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="895.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register_identity (1 samples, 0.01%)</title><rect x="26.0523%" y="869" width="0.0123%" height="15" fill="rgb(238,92,8)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="879.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::process (1 samples, 0.01%)</title><rect x="26.0523%" y="853" width="0.0123%" height="15" fill="rgb(222,164,16)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt;&gt; (1 samples, 0.01%)</title><rect x="26.0523%" y="837" width="0.0123%" height="15" fill="rgb(241,119,3)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="847.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="26.0523%" y="821" width="0.0123%" height="15" fill="rgb(241,44,8)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="26.0523%" y="805" width="0.0123%" height="15" fill="rgb(230,36,40)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="26.0523%" y="789" width="0.0123%" height="15" fill="rgb(243,16,36)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="26.0523%" y="773" width="0.0123%" height="15" fill="rgb(231,4,26)" fg:x="2123" fg:w="1"/><text x="26.3023%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::resource_type (1 samples, 0.01%)</title><rect x="26.0768%" y="965" width="0.0123%" height="15" fill="rgb(240,9,31)" fg:x="2125" fg:w="1"/><text x="26.3268%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="26.0891%" y="965" width="0.0123%" height="15" fill="rgb(207,173,15)" fg:x="2126" fg:w="1"/><text x="26.3391%" y="975.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="26.0891%" y="949" width="0.0123%" height="15" fill="rgb(224,192,53)" fg:x="2126" fg:w="1"/><text x="26.3391%" y="959.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlas as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::get_render_resource (1 samples, 0.01%)</title><rect x="26.0891%" y="933" width="0.0123%" height="15" fill="rgb(223,67,28)" fg:x="2126" fg:w="1"/><text x="26.3391%" y="943.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (2 samples, 0.02%)</title><rect x="26.1014%" y="965" width="0.0245%" height="15" fill="rgb(211,20,47)" fg:x="2127" fg:w="2"/><text x="26.3514%" y="975.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::clone_weak_untyped (1 samples, 0.01%)</title><rect x="26.1136%" y="949" width="0.0123%" height="15" fill="rgb(240,228,2)" fg:x="2128" fg:w="1"/><text x="26.3636%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="26.2118%" y="629" width="0.0123%" height="15" fill="rgb(248,151,12)" fg:x="2136" fg:w="1"/><text x="26.4618%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.09%)</title><rect x="26.1627%" y="741" width="0.0859%" height="15" fill="rgb(244,8,39)" fg:x="2132" fg:w="7"/><text x="26.4127%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.09%)</title><rect x="26.1627%" y="725" width="0.0859%" height="15" fill="rgb(222,26,8)" fg:x="2132" fg:w="7"/><text x="26.4127%" y="735.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.09%)</title><rect x="26.1627%" y="709" width="0.0859%" height="15" fill="rgb(213,106,44)" fg:x="2132" fg:w="7"/><text x="26.4127%" y="719.50"></text></g><g><title>__rdl_realloc (7 samples, 0.09%)</title><rect x="26.1627%" y="693" width="0.0859%" height="15" fill="rgb(214,129,20)" fg:x="2132" fg:w="7"/><text x="26.4127%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (7 samples, 0.09%)</title><rect x="26.1627%" y="677" width="0.0859%" height="15" fill="rgb(212,32,13)" fg:x="2132" fg:w="7"/><text x="26.4127%" y="687.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.09%)</title><rect x="26.1627%" y="661" width="0.0859%" height="15" fill="rgb(208,168,33)" fg:x="2132" fg:w="7"/><text x="26.4127%" y="671.50"></text></g><g><title>_int_realloc (3 samples, 0.04%)</title><rect x="26.2118%" y="645" width="0.0368%" height="15" fill="rgb(231,207,8)" fg:x="2136" fg:w="3"/><text x="26.4618%" y="655.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="26.2241%" y="629" width="0.0245%" height="15" fill="rgb(235,219,23)" fg:x="2137" fg:w="2"/><text x="26.4741%" y="639.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (17 samples, 0.21%)</title><rect x="26.0645%" y="981" width="0.2086%" height="15" fill="rgb(226,216,26)" fg:x="2124" fg:w="17"/><text x="26.3145%" y="991.50"></text></g><g><title>alloc::fmt::format (12 samples, 0.15%)</title><rect x="26.1259%" y="965" width="0.1473%" height="15" fill="rgb(239,137,16)" fg:x="2129" fg:w="12"/><text x="26.3759%" y="975.50"></text></g><g><title>core::fmt::Write::write_fmt (12 samples, 0.15%)</title><rect x="26.1259%" y="949" width="0.1473%" height="15" fill="rgb(207,12,36)" fg:x="2129" fg:w="12"/><text x="26.3759%" y="959.50"></text></g><g><title>core::fmt::write (11 samples, 0.13%)</title><rect x="26.1382%" y="933" width="0.1350%" height="15" fill="rgb(210,214,24)" fg:x="2130" fg:w="11"/><text x="26.3882%" y="943.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (9 samples, 0.11%)</title><rect x="26.1627%" y="917" width="0.1104%" height="15" fill="rgb(206,56,30)" fg:x="2132" fg:w="9"/><text x="26.4127%" y="927.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (9 samples, 0.11%)</title><rect x="26.1627%" y="901" width="0.1104%" height="15" fill="rgb(228,143,26)" fg:x="2132" fg:w="9"/><text x="26.4127%" y="911.50"></text></g><g><title>alloc::string::String::push_str (9 samples, 0.11%)</title><rect x="26.1627%" y="885" width="0.1104%" height="15" fill="rgb(216,218,46)" fg:x="2132" fg:w="9"/><text x="26.4127%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (9 samples, 0.11%)</title><rect x="26.1627%" y="869" width="0.1104%" height="15" fill="rgb(206,6,19)" fg:x="2132" fg:w="9"/><text x="26.4127%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (9 samples, 0.11%)</title><rect x="26.1627%" y="853" width="0.1104%" height="15" fill="rgb(239,177,51)" fg:x="2132" fg:w="9"/><text x="26.4127%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (9 samples, 0.11%)</title><rect x="26.1627%" y="837" width="0.1104%" height="15" fill="rgb(216,55,25)" fg:x="2132" fg:w="9"/><text x="26.4127%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.11%)</title><rect x="26.1627%" y="821" width="0.1104%" height="15" fill="rgb(231,163,29)" fg:x="2132" fg:w="9"/><text x="26.4127%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.11%)</title><rect x="26.1627%" y="805" width="0.1104%" height="15" fill="rgb(232,149,50)" fg:x="2132" fg:w="9"/><text x="26.4127%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.11%)</title><rect x="26.1627%" y="789" width="0.1104%" height="15" fill="rgb(223,142,48)" fg:x="2132" fg:w="9"/><text x="26.4127%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.11%)</title><rect x="26.1627%" y="773" width="0.1104%" height="15" fill="rgb(245,83,23)" fg:x="2132" fg:w="9"/><text x="26.4127%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.11%)</title><rect x="26.1627%" y="757" width="0.1104%" height="15" fill="rgb(224,63,2)" fg:x="2132" fg:w="9"/><text x="26.4127%" y="767.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="26.2486%" y="741" width="0.0245%" height="15" fill="rgb(218,65,53)" fg:x="2139" fg:w="2"/><text x="26.4986%" y="751.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (1 samples, 0.01%)</title><rect x="26.2732%" y="965" width="0.0123%" height="15" fill="rgb(221,84,29)" fg:x="2141" fg:w="1"/><text x="26.5232%" y="975.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (1 samples, 0.01%)</title><rect x="26.2732%" y="949" width="0.0123%" height="15" fill="rgb(234,0,32)" fg:x="2141" fg:w="1"/><text x="26.5232%" y="959.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::into_mut (1 samples, 0.01%)</title><rect x="26.2732%" y="933" width="0.0123%" height="15" fill="rgb(206,20,16)" fg:x="2141" fg:w="1"/><text x="26.5232%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="26.2732%" y="917" width="0.0123%" height="15" fill="rgb(244,172,18)" fg:x="2141" fg:w="1"/><text x="26.5232%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="26.2732%" y="901" width="0.0123%" height="15" fill="rgb(254,133,1)" fg:x="2141" fg:w="1"/><text x="26.5232%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="26.2977%" y="917" width="0.0123%" height="15" fill="rgb(222,206,41)" fg:x="2143" fg:w="1"/><text x="26.5477%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="26.2977%" y="901" width="0.0123%" height="15" fill="rgb(212,3,42)" fg:x="2143" fg:w="1"/><text x="26.5477%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="26.2977%" y="885" width="0.0123%" height="15" fill="rgb(241,11,4)" fg:x="2143" fg:w="1"/><text x="26.5477%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="26.2977%" y="869" width="0.0123%" height="15" fill="rgb(205,19,26)" fg:x="2143" fg:w="1"/><text x="26.5477%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="26.2977%" y="853" width="0.0123%" height="15" fill="rgb(210,179,32)" fg:x="2143" fg:w="1"/><text x="26.5477%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="26.2977%" y="837" width="0.0123%" height="15" fill="rgb(227,116,49)" fg:x="2143" fg:w="1"/><text x="26.5477%" y="847.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (10 samples, 0.12%)</title><rect x="26.2732%" y="981" width="0.1227%" height="15" fill="rgb(211,146,6)" fg:x="2141" fg:w="10"/><text x="26.5232%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (9 samples, 0.11%)</title><rect x="26.2854%" y="965" width="0.1104%" height="15" fill="rgb(219,44,39)" fg:x="2142" fg:w="9"/><text x="26.5354%" y="975.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (9 samples, 0.11%)</title><rect x="26.2854%" y="949" width="0.1104%" height="15" fill="rgb(234,128,11)" fg:x="2142" fg:w="9"/><text x="26.5354%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.10%)</title><rect x="26.2977%" y="933" width="0.0982%" height="15" fill="rgb(220,183,53)" fg:x="2143" fg:w="8"/><text x="26.5477%" y="943.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (7 samples, 0.09%)</title><rect x="26.3100%" y="917" width="0.0859%" height="15" fill="rgb(213,219,32)" fg:x="2144" fg:w="7"/><text x="26.5600%" y="927.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (7 samples, 0.09%)</title><rect x="26.3100%" y="901" width="0.0859%" height="15" fill="rgb(232,156,16)" fg:x="2144" fg:w="7"/><text x="26.5600%" y="911.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (7 samples, 0.09%)</title><rect x="26.3100%" y="885" width="0.0859%" height="15" fill="rgb(246,135,34)" fg:x="2144" fg:w="7"/><text x="26.5600%" y="895.50"></text></g><g><title>core::mem::take (1 samples, 0.01%)</title><rect x="26.3959%" y="981" width="0.0123%" height="15" fill="rgb(241,99,0)" fg:x="2151" fg:w="1"/><text x="26.6459%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="26.3959%" y="965" width="0.0123%" height="15" fill="rgb(222,103,45)" fg:x="2151" fg:w="1"/><text x="26.6459%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="26.3959%" y="949" width="0.0123%" height="15" fill="rgb(212,57,4)" fg:x="2151" fg:w="1"/><text x="26.6459%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;bevy_asset::handle::HandleId,&amp;bevy_pbr::material::StandardMaterial,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="26.4081%" y="981" width="0.0123%" height="15" fill="rgb(215,68,47)" fg:x="2152" fg:w="1"/><text x="26.6581%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;bevy_asset::handle::HandleId,&amp;bevy_pbr::material::StandardMaterial,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="26.4081%" y="965" width="0.0123%" height="15" fill="rgb(230,84,2)" fg:x="2152" fg:w="1"/><text x="26.6581%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(bevy_asset::handle::HandleId,&amp;bevy_pbr::material::StandardMaterial)&gt;&gt; (1 samples, 0.01%)</title><rect x="26.4081%" y="949" width="0.0123%" height="15" fill="rgb(220,102,14)" fg:x="2152" fg:w="1"/><text x="26.6581%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="26.4081%" y="933" width="0.0123%" height="15" fill="rgb(240,10,32)" fg:x="2152" fg:w="1"/><text x="26.6581%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.01%)</title><rect x="26.4081%" y="917" width="0.0123%" height="15" fill="rgb(215,47,27)" fg:x="2152" fg:w="1"/><text x="26.6581%" y="927.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (86 samples, 1.06%)</title><rect x="25.3773%" y="997" width="1.0553%" height="15" fill="rgb(233,188,43)" fg:x="2068" fg:w="86"/><text x="25.6273%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (1 samples, 0.01%)</title><rect x="26.4204%" y="981" width="0.0123%" height="15" fill="rgb(253,190,1)" fg:x="2153" fg:w="1"/><text x="26.6704%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="26.4204%" y="965" width="0.0123%" height="15" fill="rgb(206,114,52)" fg:x="2153" fg:w="1"/><text x="26.6704%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="26.4204%" y="949" width="0.0123%" height="15" fill="rgb(233,120,37)" fg:x="2153" fg:w="1"/><text x="26.6704%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="26.4204%" y="933" width="0.0123%" height="15" fill="rgb(214,52,39)" fg:x="2153" fg:w="1"/><text x="26.6704%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="26.4204%" y="917" width="0.0123%" height="15" fill="rgb(223,80,29)" fg:x="2153" fg:w="1"/><text x="26.6704%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="26.4204%" y="901" width="0.0123%" height="15" fill="rgb(230,101,40)" fg:x="2153" fg:w="1"/><text x="26.6704%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="26.4204%" y="885" width="0.0123%" height="15" fill="rgb(219,211,8)" fg:x="2153" fg:w="1"/><text x="26.6704%" y="895.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (88 samples, 1.08%)</title><rect x="25.3651%" y="1045" width="1.0799%" height="15" fill="rgb(252,126,28)" fg:x="2067" fg:w="88"/><text x="25.6151%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (87 samples, 1.07%)</title><rect x="25.3773%" y="1029" width="1.0676%" height="15" fill="rgb(215,56,38)" fg:x="2068" fg:w="87"/><text x="25.6273%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (87 samples, 1.07%)</title><rect x="25.3773%" y="1013" width="1.0676%" height="15" fill="rgb(249,55,44)" fg:x="2068" fg:w="87"/><text x="25.6273%" y="1023.50"></text></g><g><title>bevy_text::text2d::text2d_system (1 samples, 0.01%)</title><rect x="26.4327%" y="997" width="0.0123%" height="15" fill="rgb(220,221,32)" fg:x="2154" fg:w="1"/><text x="26.6827%" y="1007.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="26.4327%" y="981" width="0.0123%" height="15" fill="rgb(212,216,41)" fg:x="2154" fg:w="1"/><text x="26.6827%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="26.4327%" y="965" width="0.0123%" height="15" fill="rgb(228,213,43)" fg:x="2154" fg:w="1"/><text x="26.6827%" y="975.50"></text></g><g><title>bevy_text::text2d::text2d_system (1 samples, 0.01%)</title><rect x="26.4327%" y="949" width="0.0123%" height="15" fill="rgb(211,31,26)" fg:x="2154" fg:w="1"/><text x="26.6827%" y="959.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6,P7,P8) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="26.4450%" y="1029" width="0.0245%" height="15" fill="rgb(229,202,19)" fg:x="2155" fg:w="2"/><text x="26.6950%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="26.4572%" y="1013" width="0.0123%" height="15" fill="rgb(229,105,46)" fg:x="2156" fg:w="1"/><text x="26.7072%" y="1023.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="26.4572%" y="997" width="0.0123%" height="15" fill="rgb(235,108,1)" fg:x="2156" fg:w="1"/><text x="26.7072%" y="1007.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="26.4572%" y="981" width="0.0123%" height="15" fill="rgb(245,111,35)" fg:x="2156" fg:w="1"/><text x="26.7072%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="26.4572%" y="965" width="0.0123%" height="15" fill="rgb(219,185,31)" fg:x="2156" fg:w="1"/><text x="26.7072%" y="975.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="26.4572%" y="949" width="0.0123%" height="15" fill="rgb(214,4,43)" fg:x="2156" fg:w="1"/><text x="26.7072%" y="959.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="26.4572%" y="933" width="0.0123%" height="15" fill="rgb(235,227,40)" fg:x="2156" fg:w="1"/><text x="26.7072%" y="943.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (1 samples, 0.01%)</title><rect x="26.4572%" y="917" width="0.0123%" height="15" fill="rgb(230,88,30)" fg:x="2156" fg:w="1"/><text x="26.7072%" y="927.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter (2 samples, 0.02%)</title><rect x="26.4818%" y="981" width="0.0245%" height="15" fill="rgb(216,217,1)" fg:x="2158" fg:w="2"/><text x="26.7318%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (2 samples, 0.02%)</title><rect x="26.4818%" y="965" width="0.0245%" height="15" fill="rgb(248,139,50)" fg:x="2158" fg:w="2"/><text x="26.7318%" y="975.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (2 samples, 0.02%)</title><rect x="26.4818%" y="949" width="0.0245%" height="15" fill="rgb(233,1,21)" fg:x="2158" fg:w="2"/><text x="26.7318%" y="959.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="26.4940%" y="933" width="0.0123%" height="15" fill="rgb(215,183,12)" fg:x="2159" fg:w="1"/><text x="26.7440%" y="943.50"></text></g><g><title>&lt;bevy_ecs::query::filter::WithoutFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="26.4940%" y="917" width="0.0123%" height="15" fill="rgb(229,104,42)" fg:x="2159" fg:w="1"/><text x="26.7440%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="26.5063%" y="901" width="0.0123%" height="15" fill="rgb(243,34,48)" fg:x="2160" fg:w="1"/><text x="26.7563%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="26.5186%" y="901" width="0.0245%" height="15" fill="rgb(239,11,44)" fg:x="2161" fg:w="2"/><text x="26.7686%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="26.5186%" y="885" width="0.0245%" height="15" fill="rgb(231,98,35)" fg:x="2161" fg:w="2"/><text x="26.7686%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="26.5186%" y="869" width="0.0245%" height="15" fill="rgb(233,28,25)" fg:x="2161" fg:w="2"/><text x="26.7686%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="26.5186%" y="853" width="0.0245%" height="15" fill="rgb(234,123,11)" fg:x="2161" fg:w="2"/><text x="26.7686%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="26.5309%" y="837" width="0.0123%" height="15" fill="rgb(220,69,3)" fg:x="2162" fg:w="1"/><text x="26.7809%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="26.5309%" y="821" width="0.0123%" height="15" fill="rgb(214,64,36)" fg:x="2162" fg:w="1"/><text x="26.7809%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="26.5309%" y="805" width="0.0123%" height="15" fill="rgb(211,138,32)" fg:x="2162" fg:w="1"/><text x="26.7809%" y="815.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}} (1 samples, 0.01%)</title><rect x="26.5309%" y="789" width="0.0123%" height="15" fill="rgb(213,118,47)" fg:x="2162" fg:w="1"/><text x="26.7809%" y="799.50"></text></g><g><title>stretch::style::Dimension::resolve (1 samples, 0.01%)</title><rect x="26.5309%" y="773" width="0.0123%" height="15" fill="rgb(243,124,49)" fg:x="2162" fg:w="1"/><text x="26.7809%" y="783.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 0.01%)</title><rect x="26.5431%" y="837" width="0.0123%" height="15" fill="rgb(221,30,28)" fg:x="2163" fg:w="1"/><text x="26.7931%" y="847.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="26.5431%" y="821" width="0.0123%" height="15" fill="rgb(246,37,13)" fg:x="2163" fg:w="1"/><text x="26.7931%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="26.5431%" y="805" width="0.0123%" height="15" fill="rgb(249,66,14)" fg:x="2163" fg:w="1"/><text x="26.7931%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="26.5431%" y="789" width="0.0123%" height="15" fill="rgb(213,166,5)" fg:x="2163" fg:w="1"/><text x="26.7931%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="26.5431%" y="773" width="0.0123%" height="15" fill="rgb(221,66,24)" fg:x="2163" fg:w="1"/><text x="26.7931%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="26.5431%" y="757" width="0.0123%" height="15" fill="rgb(210,132,17)" fg:x="2163" fg:w="1"/><text x="26.7931%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="26.5431%" y="741" width="0.0123%" height="15" fill="rgb(243,202,5)" fg:x="2163" fg:w="1"/><text x="26.7931%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="26.5431%" y="725" width="0.0123%" height="15" fill="rgb(233,70,48)" fg:x="2163" fg:w="1"/><text x="26.7931%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="26.5554%" y="837" width="0.0123%" height="15" fill="rgb(238,41,26)" fg:x="2164" fg:w="1"/><text x="26.8054%" y="847.50"></text></g><g><title>&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="26.5554%" y="821" width="0.0123%" height="15" fill="rgb(241,19,31)" fg:x="2164" fg:w="1"/><text x="26.8054%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="26.5554%" y="805" width="0.0123%" height="15" fill="rgb(214,76,10)" fg:x="2164" fg:w="1"/><text x="26.8054%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="26.5554%" y="789" width="0.0123%" height="15" fill="rgb(254,202,22)" fg:x="2164" fg:w="1"/><text x="26.8054%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="26.5554%" y="773" width="0.0123%" height="15" fill="rgb(214,72,24)" fg:x="2164" fg:w="1"/><text x="26.8054%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="26.5677%" y="837" width="0.0123%" height="15" fill="rgb(221,92,46)" fg:x="2165" fg:w="1"/><text x="26.8177%" y="847.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="26.5677%" y="821" width="0.0123%" height="15" fill="rgb(246,13,50)" fg:x="2165" fg:w="1"/><text x="26.8177%" y="831.50"></text></g><g><title>core::f32::&lt;impl f32&gt;::max (1 samples, 0.01%)</title><rect x="26.5677%" y="805" width="0.0123%" height="15" fill="rgb(240,165,38)" fg:x="2165" fg:w="1"/><text x="26.8177%" y="815.50"></text></g><g><title>stretch::geometry::Rect&lt;T&gt;::main_end (1 samples, 0.01%)</title><rect x="26.5922%" y="773" width="0.0123%" height="15" fill="rgb(241,24,51)" fg:x="2167" fg:w="1"/><text x="26.8422%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.04%)</title><rect x="26.5799%" y="837" width="0.0368%" height="15" fill="rgb(227,51,44)" fg:x="2166" fg:w="3"/><text x="26.8299%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.04%)</title><rect x="26.5799%" y="821" width="0.0368%" height="15" fill="rgb(231,121,3)" fg:x="2166" fg:w="3"/><text x="26.8299%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (3 samples, 0.04%)</title><rect x="26.5799%" y="805" width="0.0368%" height="15" fill="rgb(245,3,41)" fg:x="2166" fg:w="3"/><text x="26.8299%" y="815.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}}::{{closure}} (3 samples, 0.04%)</title><rect x="26.5799%" y="789" width="0.0368%" height="15" fill="rgb(214,13,26)" fg:x="2166" fg:w="3"/><text x="26.8299%" y="799.50"></text></g><g><title>stretch::geometry::Size&lt;T&gt;::set_cross (1 samples, 0.01%)</title><rect x="26.6045%" y="773" width="0.0123%" height="15" fill="rgb(252,75,11)" fg:x="2168" fg:w="1"/><text x="26.8545%" y="783.50"></text></g><g><title>bevy_ui::flex::FlexSurface::compute_window_layouts (10 samples, 0.12%)</title><rect x="26.5063%" y="981" width="0.1227%" height="15" fill="rgb(218,226,17)" fg:x="2160" fg:w="10"/><text x="26.7563%" y="991.50"></text></g><g><title>stretch::node::Stretch::compute_layout (10 samples, 0.12%)</title><rect x="26.5063%" y="965" width="0.1227%" height="15" fill="rgb(248,89,38)" fg:x="2160" fg:w="10"/><text x="26.7563%" y="975.50"></text></g><g><title>stretch::forest::Forest::compute_layout (10 samples, 0.12%)</title><rect x="26.5063%" y="949" width="0.1227%" height="15" fill="rgb(237,73,46)" fg:x="2160" fg:w="10"/><text x="26.7563%" y="959.50"></text></g><g><title>stretch::forest::Forest::compute_layout (10 samples, 0.12%)</title><rect x="26.5063%" y="933" width="0.1227%" height="15" fill="rgb(242,78,33)" fg:x="2160" fg:w="10"/><text x="26.7563%" y="943.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal (10 samples, 0.12%)</title><rect x="26.5063%" y="917" width="0.1227%" height="15" fill="rgb(235,60,3)" fg:x="2160" fg:w="10"/><text x="26.7563%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (7 samples, 0.09%)</title><rect x="26.5431%" y="901" width="0.0859%" height="15" fill="rgb(216,172,19)" fg:x="2163" fg:w="7"/><text x="26.7931%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.09%)</title><rect x="26.5431%" y="885" width="0.0859%" height="15" fill="rgb(227,6,42)" fg:x="2163" fg:w="7"/><text x="26.7931%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (7 samples, 0.09%)</title><rect x="26.5431%" y="869" width="0.0859%" height="15" fill="rgb(223,207,42)" fg:x="2163" fg:w="7"/><text x="26.7931%" y="879.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}} (7 samples, 0.09%)</title><rect x="26.5431%" y="853" width="0.0859%" height="15" fill="rgb(246,138,30)" fg:x="2163" fg:w="7"/><text x="26.7931%" y="863.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal (1 samples, 0.01%)</title><rect x="26.6168%" y="837" width="0.0123%" height="15" fill="rgb(251,199,47)" fg:x="2169" fg:w="1"/><text x="26.8668%" y="847.50"></text></g><g><title>bevy_ui::flex::FlexSurface::set_window_children (1 samples, 0.01%)</title><rect x="26.6290%" y="981" width="0.0123%" height="15" fill="rgb(228,218,44)" fg:x="2170" fg:w="1"/><text x="26.8790%" y="991.50"></text></g><g><title>stretch::node::Stretch::set_children (1 samples, 0.01%)</title><rect x="26.6290%" y="965" width="0.0123%" height="15" fill="rgb(220,68,6)" fg:x="2170" fg:w="1"/><text x="26.8790%" y="975.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="26.6290%" y="949" width="0.0123%" height="15" fill="rgb(240,60,26)" fg:x="2170" fg:w="1"/><text x="26.8790%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="26.6290%" y="933" width="0.0123%" height="15" fill="rgb(211,200,19)" fg:x="2170" fg:w="1"/><text x="26.8790%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="26.6413%" y="965" width="0.0123%" height="15" fill="rgb(242,145,30)" fg:x="2171" fg:w="1"/><text x="26.8913%" y="975.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="26.6413%" y="949" width="0.0123%" height="15" fill="rgb(225,64,13)" fg:x="2171" fg:w="1"/><text x="26.8913%" y="959.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="26.6413%" y="933" width="0.0123%" height="15" fill="rgb(218,103,35)" fg:x="2171" fg:w="1"/><text x="26.8913%" y="943.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="26.6413%" y="917" width="0.0123%" height="15" fill="rgb(216,93,46)" fg:x="2171" fg:w="1"/><text x="26.8913%" y="927.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="26.6413%" y="901" width="0.0123%" height="15" fill="rgb(225,159,27)" fg:x="2171" fg:w="1"/><text x="26.8913%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="26.6536%" y="869" width="0.0123%" height="15" fill="rgb(225,204,11)" fg:x="2172" fg:w="1"/><text x="26.9036%" y="879.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="26.6536%" y="853" width="0.0123%" height="15" fill="rgb(205,56,4)" fg:x="2172" fg:w="1"/><text x="26.9036%" y="863.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="26.6536%" y="837" width="0.0123%" height="15" fill="rgb(206,6,35)" fg:x="2172" fg:w="1"/><text x="26.9036%" y="847.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="26.6536%" y="821" width="0.0123%" height="15" fill="rgb(247,73,52)" fg:x="2172" fg:w="1"/><text x="26.9036%" y="831.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (19 samples, 0.23%)</title><rect x="26.4450%" y="1045" width="0.2332%" height="15" fill="rgb(246,97,4)" fg:x="2155" fg:w="19"/><text x="26.6950%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (17 samples, 0.21%)</title><rect x="26.4695%" y="1029" width="0.2086%" height="15" fill="rgb(212,37,15)" fg:x="2157" fg:w="17"/><text x="26.7195%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (17 samples, 0.21%)</title><rect x="26.4695%" y="1013" width="0.2086%" height="15" fill="rgb(208,130,40)" fg:x="2157" fg:w="17"/><text x="26.7195%" y="1023.50"></text></g><g><title>bevy_ui::flex::flex_node_system (17 samples, 0.21%)</title><rect x="26.4695%" y="997" width="0.2086%" height="15" fill="rgb(236,55,29)" fg:x="2157" fg:w="17"/><text x="26.7195%" y="1007.50"></text></g><g><title>bevy_ui::flex::FlexSurface::update_window (3 samples, 0.04%)</title><rect x="26.6413%" y="981" width="0.0368%" height="15" fill="rgb(209,156,45)" fg:x="2171" fg:w="3"/><text x="26.8913%" y="991.50"></text></g><g><title>stretch::node::Stretch::set_style (2 samples, 0.02%)</title><rect x="26.6536%" y="965" width="0.0245%" height="15" fill="rgb(249,107,4)" fg:x="2172" fg:w="2"/><text x="26.9036%" y="975.50"></text></g><g><title>stretch::node::Stretch::find_node (2 samples, 0.02%)</title><rect x="26.6536%" y="949" width="0.0245%" height="15" fill="rgb(227,7,13)" fg:x="2172" fg:w="2"/><text x="26.9036%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="26.6536%" y="933" width="0.0245%" height="15" fill="rgb(250,129,14)" fg:x="2172" fg:w="2"/><text x="26.9036%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="26.6536%" y="917" width="0.0245%" height="15" fill="rgb(229,92,13)" fg:x="2172" fg:w="2"/><text x="26.9036%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="26.6536%" y="901" width="0.0245%" height="15" fill="rgb(245,98,39)" fg:x="2172" fg:w="2"/><text x="26.9036%" y="911.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.02%)</title><rect x="26.6536%" y="885" width="0.0245%" height="15" fill="rgb(234,135,48)" fg:x="2172" fg:w="2"/><text x="26.9036%" y="895.50"></text></g><g><title>&lt;stretch::node::Node as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="26.6658%" y="869" width="0.0123%" height="15" fill="rgb(230,98,28)" fg:x="2173" fg:w="1"/><text x="26.9158%" y="879.50"></text></g><g><title>&lt;stretch::id::Id as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="26.6658%" y="853" width="0.0123%" height="15" fill="rgb(223,121,0)" fg:x="2173" fg:w="1"/><text x="26.9158%" y="863.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="26.6658%" y="837" width="0.0123%" height="15" fill="rgb(234,173,33)" fg:x="2173" fg:w="1"/><text x="26.9158%" y="847.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="26.6658%" y="821" width="0.0123%" height="15" fill="rgb(245,47,8)" fg:x="2173" fg:w="1"/><text x="26.9158%" y="831.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="26.6658%" y="805" width="0.0123%" height="15" fill="rgb(205,17,20)" fg:x="2173" fg:w="1"/><text x="26.9158%" y="815.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="26.6658%" y="789" width="0.0123%" height="15" fill="rgb(232,151,16)" fg:x="2173" fg:w="1"/><text x="26.9158%" y="799.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="26.6658%" y="773" width="0.0123%" height="15" fill="rgb(208,30,32)" fg:x="2173" fg:w="1"/><text x="26.9158%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="26.6658%" y="757" width="0.0123%" height="15" fill="rgb(254,26,3)" fg:x="2173" fg:w="1"/><text x="26.9158%" y="767.50"></text></g><g><title>bevy_ecs::world::World::increment_change_tick (8 samples, 0.10%)</title><rect x="26.6781%" y="1045" width="0.0982%" height="15" fill="rgb(240,177,30)" fg:x="2174" fg:w="8"/><text x="26.9281%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (8 samples, 0.10%)</title><rect x="26.6781%" y="1029" width="0.0982%" height="15" fill="rgb(248,76,44)" fg:x="2174" fg:w="8"/><text x="26.9281%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.10%)</title><rect x="26.6781%" y="1013" width="0.0982%" height="15" fill="rgb(241,186,54)" fg:x="2174" fg:w="8"/><text x="26.9281%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (856 samples, 10.50%)</title><rect x="16.4805%" y="1061" width="10.5044%" height="15" fill="rgb(249,171,29)" fg:x="1343" fg:w="856"/><text x="16.7305%" y="1071.50">&lt;bevy_ecs::syst..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (17 samples, 0.21%)</title><rect x="26.7763%" y="1045" width="0.2086%" height="15" fill="rgb(237,151,44)" fg:x="2182" fg:w="17"/><text x="27.0263%" y="1055.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.09%)</title><rect x="26.9849%" y="1045" width="0.0859%" height="15" fill="rgb(228,174,30)" fg:x="2199" fg:w="7"/><text x="27.2349%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.07%)</title><rect x="26.9972%" y="1029" width="0.0736%" height="15" fill="rgb(252,14,37)" fg:x="2200" fg:w="6"/><text x="27.2472%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.07%)</title><rect x="26.9972%" y="1013" width="0.0736%" height="15" fill="rgb(207,111,40)" fg:x="2200" fg:w="6"/><text x="27.2472%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (12 samples, 0.15%)</title><rect x="26.9849%" y="1061" width="0.1473%" height="15" fill="rgb(248,171,54)" fg:x="2199" fg:w="12"/><text x="27.2349%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;()&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="27.0708%" y="1045" width="0.0614%" height="15" fill="rgb(211,127,2)" fg:x="2206" fg:w="5"/><text x="27.3208%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="27.0708%" y="1029" width="0.0614%" height="15" fill="rgb(236,87,47)" fg:x="2206" fg:w="5"/><text x="27.3208%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.06%)</title><rect x="27.0708%" y="1013" width="0.0614%" height="15" fill="rgb(223,190,45)" fg:x="2206" fg:w="5"/><text x="27.3208%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.06%)</title><rect x="27.0708%" y="997" width="0.0614%" height="15" fill="rgb(215,5,16)" fg:x="2206" fg:w="5"/><text x="27.3208%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.01%)</title><rect x="27.1322%" y="949" width="0.0123%" height="15" fill="rgb(252,82,33)" fg:x="2211" fg:w="1"/><text x="27.3822%" y="959.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="27.1322%" y="933" width="0.0123%" height="15" fill="rgb(247,213,44)" fg:x="2211" fg:w="1"/><text x="27.3822%" y="943.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="27.1322%" y="917" width="0.0123%" height="15" fill="rgb(205,196,44)" fg:x="2211" fg:w="1"/><text x="27.3822%" y="927.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="27.1322%" y="901" width="0.0123%" height="15" fill="rgb(237,96,54)" fg:x="2211" fg:w="1"/><text x="27.3822%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="27.1322%" y="885" width="0.0123%" height="15" fill="rgb(230,113,34)" fg:x="2211" fg:w="1"/><text x="27.3822%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="27.1322%" y="869" width="0.0123%" height="15" fill="rgb(221,224,12)" fg:x="2211" fg:w="1"/><text x="27.3822%" y="879.50"></text></g><g><title>__GI___pthread_mutex_unlock (2 samples, 0.02%)</title><rect x="27.1444%" y="917" width="0.0245%" height="15" fill="rgb(219,112,44)" fg:x="2212" fg:w="2"/><text x="27.3944%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (7 samples, 0.09%)</title><rect x="27.1322%" y="997" width="0.0859%" height="15" fill="rgb(210,31,13)" fg:x="2211" fg:w="7"/><text x="27.3822%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (7 samples, 0.09%)</title><rect x="27.1322%" y="981" width="0.0859%" height="15" fill="rgb(230,25,16)" fg:x="2211" fg:w="7"/><text x="27.3822%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.09%)</title><rect x="27.1322%" y="965" width="0.0859%" height="15" fill="rgb(246,108,53)" fg:x="2211" fg:w="7"/><text x="27.3822%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (6 samples, 0.07%)</title><rect x="27.1444%" y="949" width="0.0736%" height="15" fill="rgb(241,172,50)" fg:x="2212" fg:w="6"/><text x="27.3944%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (6 samples, 0.07%)</title><rect x="27.1444%" y="933" width="0.0736%" height="15" fill="rgb(235,141,10)" fg:x="2212" fg:w="6"/><text x="27.3944%" y="943.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (4 samples, 0.05%)</title><rect x="27.1690%" y="917" width="0.0491%" height="15" fill="rgb(220,174,43)" fg:x="2214" fg:w="4"/><text x="27.4190%" y="927.50"></text></g><g><title>event_listener::Inner::lock (12 samples, 0.15%)</title><rect x="27.2181%" y="997" width="0.1473%" height="15" fill="rgb(215,181,40)" fg:x="2218" fg:w="12"/><text x="27.4681%" y="1007.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (12 samples, 0.15%)</title><rect x="27.2181%" y="981" width="0.1473%" height="15" fill="rgb(230,97,2)" fg:x="2218" fg:w="12"/><text x="27.4681%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.15%)</title><rect x="27.2181%" y="965" width="0.1473%" height="15" fill="rgb(211,25,27)" fg:x="2218" fg:w="12"/><text x="27.4681%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.15%)</title><rect x="27.2181%" y="949" width="0.1473%" height="15" fill="rgb(230,87,26)" fg:x="2218" fg:w="12"/><text x="27.4681%" y="959.50"></text></g><g><title>__GI___pthread_mutex_lock (12 samples, 0.15%)</title><rect x="27.2181%" y="933" width="0.1473%" height="15" fill="rgb(227,160,17)" fg:x="2218" fg:w="12"/><text x="27.4681%" y="943.50"></text></g><g><title>event_listener::List::notify (1 samples, 0.01%)</title><rect x="27.3653%" y="997" width="0.0123%" height="15" fill="rgb(244,85,34)" fg:x="2230" fg:w="1"/><text x="27.6153%" y="1007.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (21 samples, 0.26%)</title><rect x="27.1322%" y="1013" width="0.2577%" height="15" fill="rgb(207,70,0)" fg:x="2211" fg:w="21"/><text x="27.3822%" y="1023.50"></text></g><g><title>event_listener::List::remove (1 samples, 0.01%)</title><rect x="27.3776%" y="997" width="0.0123%" height="15" fill="rgb(223,129,7)" fg:x="2231" fg:w="1"/><text x="27.6276%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (25 samples, 0.31%)</title><rect x="27.1322%" y="1061" width="0.3068%" height="15" fill="rgb(246,105,7)" fg:x="2211" fg:w="25"/><text x="27.3822%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (25 samples, 0.31%)</title><rect x="27.1322%" y="1045" width="0.3068%" height="15" fill="rgb(215,154,42)" fg:x="2211" fg:w="25"/><text x="27.3822%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (25 samples, 0.31%)</title><rect x="27.1322%" y="1029" width="0.3068%" height="15" fill="rgb(220,215,30)" fg:x="2211" fg:w="25"/><text x="27.3822%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (4 samples, 0.05%)</title><rect x="27.3899%" y="1013" width="0.0491%" height="15" fill="rgb(228,81,51)" fg:x="2232" fg:w="4"/><text x="27.6399%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="27.3899%" y="997" width="0.0491%" height="15" fill="rgb(247,71,54)" fg:x="2232" fg:w="4"/><text x="27.6399%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.04%)</title><rect x="27.4021%" y="981" width="0.0368%" height="15" fill="rgb(234,176,34)" fg:x="2233" fg:w="3"/><text x="27.6521%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.04%)</title><rect x="27.4021%" y="965" width="0.0368%" height="15" fill="rgb(241,103,54)" fg:x="2233" fg:w="3"/><text x="27.6521%" y="975.50"></text></g><g><title>&lt;async_channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="27.4389%" y="1045" width="0.0491%" height="15" fill="rgb(228,22,34)" fg:x="2236" fg:w="4"/><text x="27.6889%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.05%)</title><rect x="27.4389%" y="1029" width="0.0491%" height="15" fill="rgb(241,179,48)" fg:x="2236" fg:w="4"/><text x="27.6889%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.05%)</title><rect x="27.4389%" y="1013" width="0.0491%" height="15" fill="rgb(235,167,37)" fg:x="2236" fg:w="4"/><text x="27.6889%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,190 samples, 14.60%)</title><rect x="12.9832%" y="1093" width="14.6030%" height="15" fill="rgb(213,109,30)" fg:x="1058" fg:w="1190"/><text x="13.2332%" y="1103.50">&lt;core::future::from_ge..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1,071 samples, 13.14%)</title><rect x="14.4435%" y="1077" width="13.1427%" height="15" fill="rgb(222,172,16)" fg:x="1177" fg:w="1071"/><text x="14.6935%" y="1087.50">bevy_ecs::schedule::..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Sender&lt;usize&gt;&gt; (12 samples, 0.15%)</title><rect x="27.4389%" y="1061" width="0.1473%" height="15" fill="rgb(233,192,5)" fg:x="2236" fg:w="12"/><text x="27.6889%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;usize&gt;&gt;&gt; (8 samples, 0.10%)</title><rect x="27.4880%" y="1045" width="0.0982%" height="15" fill="rgb(247,189,41)" fg:x="2240" fg:w="8"/><text x="27.7380%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (8 samples, 0.10%)</title><rect x="27.4880%" y="1029" width="0.0982%" height="15" fill="rgb(218,134,47)" fg:x="2240" fg:w="8"/><text x="27.7380%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.09%)</title><rect x="27.5003%" y="1013" width="0.0859%" height="15" fill="rgb(216,29,3)" fg:x="2241" fg:w="7"/><text x="27.7503%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.09%)</title><rect x="27.5003%" y="997" width="0.0859%" height="15" fill="rgb(246,140,12)" fg:x="2241" fg:w="7"/><text x="27.7503%" y="1007.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="27.5862%" y="1045" width="0.0245%" height="15" fill="rgb(230,136,11)" fg:x="2248" fg:w="2"/><text x="27.8362%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2 samples, 0.02%)</title><rect x="27.5862%" y="1029" width="0.0245%" height="15" fill="rgb(247,22,47)" fg:x="2248" fg:w="2"/><text x="27.8362%" y="1039.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="27.5862%" y="1013" width="0.0245%" height="15" fill="rgb(218,84,22)" fg:x="2248" fg:w="2"/><text x="27.8362%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (2 samples, 0.02%)</title><rect x="27.5862%" y="997" width="0.0245%" height="15" fill="rgb(216,87,39)" fg:x="2248" fg:w="2"/><text x="27.8362%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="27.5862%" y="981" width="0.0245%" height="15" fill="rgb(221,178,8)" fg:x="2248" fg:w="2"/><text x="27.8362%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="27.5862%" y="965" width="0.0245%" height="15" fill="rgb(230,42,11)" fg:x="2248" fg:w="2"/><text x="27.8362%" y="975.50"></text></g><g><title>slab::Slab&lt;T&gt;::contains (1 samples, 0.01%)</title><rect x="27.6107%" y="1045" width="0.0123%" height="15" fill="rgb(237,229,4)" fg:x="2250" fg:w="1"/><text x="27.8607%" y="1055.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="27.6230%" y="1029" width="0.0123%" height="15" fill="rgb(222,31,33)" fg:x="2251" fg:w="1"/><text x="27.8730%" y="1039.50"></text></g><g><title>std::sync::poison::Flag::borrow (1 samples, 0.01%)</title><rect x="27.6230%" y="1013" width="0.0123%" height="15" fill="rgb(210,17,39)" fg:x="2251" fg:w="1"/><text x="27.8730%" y="1023.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="27.6230%" y="997" width="0.0123%" height="15" fill="rgb(244,93,20)" fg:x="2251" fg:w="1"/><text x="27.8730%" y="1007.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="27.6230%" y="981" width="0.0123%" height="15" fill="rgb(210,40,47)" fg:x="2251" fg:w="1"/><text x="27.8730%" y="991.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="27.6230%" y="965" width="0.0123%" height="15" fill="rgb(239,211,47)" fg:x="2251" fg:w="1"/><text x="27.8730%" y="975.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="27.5862%" y="1077" width="0.0614%" height="15" fill="rgb(251,223,49)" fg:x="2248" fg:w="5"/><text x="27.8362%" y="1087.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (5 samples, 0.06%)</title><rect x="27.5862%" y="1061" width="0.0614%" height="15" fill="rgb(221,149,5)" fg:x="2248" fg:w="5"/><text x="27.8362%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="27.6230%" y="1045" width="0.0245%" height="15" fill="rgb(219,224,51)" fg:x="2251" fg:w="2"/><text x="27.8730%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="27.6353%" y="1029" width="0.0123%" height="15" fill="rgb(223,7,8)" fg:x="2252" fg:w="1"/><text x="27.8853%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="27.6353%" y="1013" width="0.0123%" height="15" fill="rgb(241,217,22)" fg:x="2252" fg:w="1"/><text x="27.8853%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="27.6353%" y="997" width="0.0123%" height="15" fill="rgb(248,209,0)" fg:x="2252" fg:w="1"/><text x="27.8853%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (6 samples, 0.07%)</title><rect x="27.5862%" y="1093" width="0.0736%" height="15" fill="rgb(217,205,4)" fg:x="2248" fg:w="6"/><text x="27.8362%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="27.6476%" y="1077" width="0.0123%" height="15" fill="rgb(228,124,39)" fg:x="2253" fg:w="1"/><text x="27.8976%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.01%)</title><rect x="27.6476%" y="1061" width="0.0123%" height="15" fill="rgb(250,116,42)" fg:x="2253" fg:w="1"/><text x="27.8976%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="27.6476%" y="1045" width="0.0123%" height="15" fill="rgb(223,202,9)" fg:x="2253" fg:w="1"/><text x="27.8976%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="27.6476%" y="1029" width="0.0123%" height="15" fill="rgb(242,222,40)" fg:x="2253" fg:w="1"/><text x="27.8976%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="27.6476%" y="1013" width="0.0123%" height="15" fill="rgb(229,99,46)" fg:x="2253" fg:w="1"/><text x="27.8976%" y="1023.50"></text></g><g><title>core::mem::drop (6 samples, 0.07%)</title><rect x="27.6598%" y="1045" width="0.0736%" height="15" fill="rgb(225,56,46)" fg:x="2254" fg:w="6"/><text x="27.9098%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (6 samples, 0.07%)</title><rect x="27.6598%" y="1029" width="0.0736%" height="15" fill="rgb(227,94,5)" fg:x="2254" fg:w="6"/><text x="27.9098%" y="1039.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="27.6598%" y="1013" width="0.0736%" height="15" fill="rgb(205,112,38)" fg:x="2254" fg:w="6"/><text x="27.9098%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (6 samples, 0.07%)</title><rect x="27.6598%" y="997" width="0.0736%" height="15" fill="rgb(231,133,46)" fg:x="2254" fg:w="6"/><text x="27.9098%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (6 samples, 0.07%)</title><rect x="27.6598%" y="981" width="0.0736%" height="15" fill="rgb(217,16,9)" fg:x="2254" fg:w="6"/><text x="27.9098%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (6 samples, 0.07%)</title><rect x="27.6598%" y="965" width="0.0736%" height="15" fill="rgb(249,173,9)" fg:x="2254" fg:w="6"/><text x="27.9098%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="27.7335%" y="1045" width="0.0245%" height="15" fill="rgb(205,163,53)" fg:x="2260" fg:w="2"/><text x="27.9835%" y="1055.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="27.7335%" y="1029" width="0.0245%" height="15" fill="rgb(217,54,41)" fg:x="2260" fg:w="2"/><text x="27.9835%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.02%)</title><rect x="27.7335%" y="1013" width="0.0245%" height="15" fill="rgb(228,216,12)" fg:x="2260" fg:w="2"/><text x="27.9835%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.02%)</title><rect x="27.7335%" y="997" width="0.0245%" height="15" fill="rgb(244,228,15)" fg:x="2260" fg:w="2"/><text x="27.9835%" y="1007.50"></text></g><g><title>slab::Slab&lt;T&gt;::contains (3 samples, 0.04%)</title><rect x="27.7580%" y="1045" width="0.0368%" height="15" fill="rgb(221,176,53)" fg:x="2262" fg:w="3"/><text x="28.0080%" y="1055.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (3 samples, 0.04%)</title><rect x="27.7948%" y="1029" width="0.0368%" height="15" fill="rgb(205,94,34)" fg:x="2265" fg:w="3"/><text x="28.0448%" y="1039.50"></text></g><g><title>std::sync::poison::Flag::borrow (3 samples, 0.04%)</title><rect x="27.7948%" y="1013" width="0.0368%" height="15" fill="rgb(213,110,48)" fg:x="2265" fg:w="3"/><text x="28.0448%" y="1023.50"></text></g><g><title>std::sync::poison::Flag::get (3 samples, 0.04%)</title><rect x="27.7948%" y="997" width="0.0368%" height="15" fill="rgb(236,142,28)" fg:x="2265" fg:w="3"/><text x="28.0448%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (3 samples, 0.04%)</title><rect x="27.7948%" y="981" width="0.0368%" height="15" fill="rgb(225,135,29)" fg:x="2265" fg:w="3"/><text x="28.0448%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.04%)</title><rect x="27.7948%" y="965" width="0.0368%" height="15" fill="rgb(252,45,31)" fg:x="2265" fg:w="3"/><text x="28.0448%" y="975.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.31%)</title><rect x="27.6598%" y="1077" width="0.3068%" height="15" fill="rgb(211,187,50)" fg:x="2254" fg:w="25"/><text x="27.9098%" y="1087.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (25 samples, 0.31%)</title><rect x="27.6598%" y="1061" width="0.3068%" height="15" fill="rgb(229,109,7)" fg:x="2254" fg:w="25"/><text x="27.9098%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.17%)</title><rect x="27.7948%" y="1045" width="0.1718%" height="15" fill="rgb(251,131,51)" fg:x="2265" fg:w="14"/><text x="28.0448%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.13%)</title><rect x="27.8316%" y="1029" width="0.1350%" height="15" fill="rgb(251,180,35)" fg:x="2268" fg:w="11"/><text x="28.0816%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (10 samples, 0.12%)</title><rect x="27.8439%" y="1013" width="0.1227%" height="15" fill="rgb(211,46,32)" fg:x="2269" fg:w="10"/><text x="28.0939%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_lock (10 samples, 0.12%)</title><rect x="27.8439%" y="997" width="0.1227%" height="15" fill="rgb(248,123,17)" fg:x="2269" fg:w="10"/><text x="28.0939%" y="1007.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (7 samples, 0.09%)</title><rect x="27.9666%" y="1077" width="0.0859%" height="15" fill="rgb(227,141,18)" fg:x="2279" fg:w="7"/><text x="28.2166%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (34 samples, 0.42%)</title><rect x="27.6598%" y="1093" width="0.4172%" height="15" fill="rgb(216,102,9)" fg:x="2254" fg:w="34"/><text x="27.9098%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt; (2 samples, 0.02%)</title><rect x="28.0525%" y="1077" width="0.0245%" height="15" fill="rgb(253,47,13)" fg:x="2286" fg:w="2"/><text x="28.3025%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (2 samples, 0.02%)</title><rect x="28.0525%" y="1061" width="0.0245%" height="15" fill="rgb(226,93,23)" fg:x="2286" fg:w="2"/><text x="28.3025%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="28.0525%" y="1045" width="0.0245%" height="15" fill="rgb(247,104,17)" fg:x="2286" fg:w="2"/><text x="28.3025%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="28.0525%" y="1029" width="0.0245%" height="15" fill="rgb(233,203,26)" fg:x="2286" fg:w="2"/><text x="28.3025%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="28.0525%" y="1013" width="0.0245%" height="15" fill="rgb(244,98,49)" fg:x="2286" fg:w="2"/><text x="28.3025%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,246 samples, 15.29%)</title><rect x="12.7991%" y="1125" width="15.2902%" height="15" fill="rgb(235,134,22)" fg:x="1043" fg:w="1246"/><text x="13.0491%" y="1135.50">&lt;core::future::from_gen..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,245 samples, 15.28%)</title><rect x="12.8114%" y="1109" width="15.2779%" height="15" fill="rgb(221,70,32)" fg:x="1044" fg:w="1245"/><text x="13.0614%" y="1119.50">async_executor::Executo..</text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="28.0771%" y="1093" width="0.0123%" height="15" fill="rgb(238,15,50)" fg:x="2288" fg:w="1"/><text x="28.3271%" y="1103.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="28.0771%" y="1077" width="0.0123%" height="15" fill="rgb(215,221,48)" fg:x="2288" fg:w="1"/><text x="28.3271%" y="1087.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="28.0771%" y="1061" width="0.0123%" height="15" fill="rgb(236,73,3)" fg:x="2288" fg:w="1"/><text x="28.3271%" y="1071.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="28.0771%" y="1045" width="0.0123%" height="15" fill="rgb(250,107,11)" fg:x="2288" fg:w="1"/><text x="28.3271%" y="1055.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="28.0771%" y="1029" width="0.0123%" height="15" fill="rgb(242,39,14)" fg:x="2288" fg:w="1"/><text x="28.3271%" y="1039.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (1 samples, 0.01%)</title><rect x="28.0771%" y="1013" width="0.0123%" height="15" fill="rgb(248,164,37)" fg:x="2288" fg:w="1"/><text x="28.3271%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (8 samples, 0.10%)</title><rect x="28.0893%" y="1125" width="0.0982%" height="15" fill="rgb(217,60,12)" fg:x="2289" fg:w="8"/><text x="28.3393%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (8 samples, 0.10%)</title><rect x="28.0893%" y="1109" width="0.0982%" height="15" fill="rgb(240,125,29)" fg:x="2289" fg:w="8"/><text x="28.3393%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_sub (8 samples, 0.10%)</title><rect x="28.0893%" y="1093" width="0.0982%" height="15" fill="rgb(208,207,28)" fg:x="2289" fg:w="8"/><text x="28.3393%" y="1103.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="28.1875%" y="1077" width="0.0123%" height="15" fill="rgb(209,159,27)" fg:x="2297" fg:w="1"/><text x="28.4375%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="28.1998%" y="1061" width="0.0123%" height="15" fill="rgb(251,176,53)" fg:x="2298" fg:w="1"/><text x="28.4498%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="28.1998%" y="1045" width="0.0123%" height="15" fill="rgb(211,85,7)" fg:x="2298" fg:w="1"/><text x="28.4498%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="28.1998%" y="1029" width="0.0123%" height="15" fill="rgb(216,64,54)" fg:x="2298" fg:w="1"/><text x="28.4498%" y="1039.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="28.2243%" y="997" width="0.0245%" height="15" fill="rgb(217,54,24)" fg:x="2300" fg:w="2"/><text x="28.4743%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="28.2243%" y="981" width="0.0245%" height="15" fill="rgb(208,206,53)" fg:x="2300" fg:w="2"/><text x="28.4743%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="28.2243%" y="965" width="0.0245%" height="15" fill="rgb(251,74,39)" fg:x="2300" fg:w="2"/><text x="28.4743%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="28.2243%" y="949" width="0.0245%" height="15" fill="rgb(226,47,5)" fg:x="2300" fg:w="2"/><text x="28.4743%" y="959.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="28.2243%" y="933" width="0.0245%" height="15" fill="rgb(234,111,33)" fg:x="2300" fg:w="2"/><text x="28.4743%" y="943.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="28.2243%" y="917" width="0.0245%" height="15" fill="rgb(251,14,10)" fg:x="2300" fg:w="2"/><text x="28.4743%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="28.2243%" y="901" width="0.0245%" height="15" fill="rgb(232,43,0)" fg:x="2300" fg:w="2"/><text x="28.4743%" y="911.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="28.2243%" y="885" width="0.0245%" height="15" fill="rgb(222,68,43)" fg:x="2300" fg:w="2"/><text x="28.4743%" y="895.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="28.2366%" y="869" width="0.0123%" height="15" fill="rgb(217,24,23)" fg:x="2301" fg:w="1"/><text x="28.4866%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::is_null (1 samples, 0.01%)</title><rect x="28.2489%" y="997" width="0.0123%" height="15" fill="rgb(229,209,14)" fg:x="2302" fg:w="1"/><text x="28.4989%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::guaranteed_eq (1 samples, 0.01%)</title><rect x="28.2489%" y="981" width="0.0123%" height="15" fill="rgb(250,149,48)" fg:x="2302" fg:w="1"/><text x="28.4989%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.06%)</title><rect x="28.2611%" y="997" width="0.0614%" height="15" fill="rgb(210,120,37)" fg:x="2303" fg:w="5"/><text x="28.5111%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.06%)</title><rect x="28.2611%" y="981" width="0.0614%" height="15" fill="rgb(210,21,8)" fg:x="2303" fg:w="5"/><text x="28.5111%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="28.3225%" y="997" width="0.0123%" height="15" fill="rgb(243,145,7)" fg:x="2308" fg:w="1"/><text x="28.5725%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="28.3225%" y="981" width="0.0123%" height="15" fill="rgb(238,178,32)" fg:x="2308" fg:w="1"/><text x="28.5725%" y="991.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (11 samples, 0.13%)</title><rect x="28.2243%" y="1045" width="0.1350%" height="15" fill="rgb(222,4,10)" fg:x="2300" fg:w="11"/><text x="28.4743%" y="1055.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (11 samples, 0.13%)</title><rect x="28.2243%" y="1029" width="0.1350%" height="15" fill="rgb(239,7,37)" fg:x="2300" fg:w="11"/><text x="28.4743%" y="1039.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (11 samples, 0.13%)</title><rect x="28.2243%" y="1013" width="0.1350%" height="15" fill="rgb(215,31,37)" fg:x="2300" fg:w="11"/><text x="28.4743%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="28.3348%" y="997" width="0.0245%" height="15" fill="rgb(224,83,33)" fg:x="2309" fg:w="2"/><text x="28.5848%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="28.3348%" y="981" width="0.0245%" height="15" fill="rgb(239,55,3)" fg:x="2309" fg:w="2"/><text x="28.5848%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (4 samples, 0.05%)</title><rect x="28.3593%" y="1045" width="0.0491%" height="15" fill="rgb(247,92,11)" fg:x="2311" fg:w="4"/><text x="28.6093%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.05%)</title><rect x="28.3593%" y="1029" width="0.0491%" height="15" fill="rgb(239,200,7)" fg:x="2311" fg:w="4"/><text x="28.6093%" y="1039.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (21 samples, 0.26%)</title><rect x="28.1998%" y="1077" width="0.2577%" height="15" fill="rgb(227,115,8)" fg:x="2298" fg:w="21"/><text x="28.4498%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (20 samples, 0.25%)</title><rect x="28.2121%" y="1061" width="0.2454%" height="15" fill="rgb(215,189,27)" fg:x="2299" fg:w="20"/><text x="28.4621%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="28.4084%" y="1045" width="0.0491%" height="15" fill="rgb(251,216,39)" fg:x="2315" fg:w="4"/><text x="28.6584%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="28.4084%" y="1029" width="0.0491%" height="15" fill="rgb(207,29,47)" fg:x="2315" fg:w="4"/><text x="28.6584%" y="1039.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="28.4575%" y="1077" width="0.0123%" height="15" fill="rgb(210,71,34)" fg:x="2319" fg:w="1"/><text x="28.7075%" y="1087.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="28.4575%" y="1061" width="0.0123%" height="15" fill="rgb(253,217,51)" fg:x="2319" fg:w="1"/><text x="28.7075%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="28.4698%" y="1061" width="0.0245%" height="15" fill="rgb(222,117,46)" fg:x="2320" fg:w="2"/><text x="28.7198%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="28.4698%" y="1045" width="0.0245%" height="15" fill="rgb(226,132,6)" fg:x="2320" fg:w="2"/><text x="28.7198%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="28.4820%" y="1029" width="0.0123%" height="15" fill="rgb(254,145,51)" fg:x="2321" fg:w="1"/><text x="28.7320%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="28.4820%" y="1013" width="0.0123%" height="15" fill="rgb(231,199,27)" fg:x="2321" fg:w="1"/><text x="28.7320%" y="1023.50"></text></g><g><title>async_task::utils::abort_on_panic (26 samples, 0.32%)</title><rect x="28.1875%" y="1125" width="0.3191%" height="15" fill="rgb(245,158,14)" fg:x="2297" fg:w="26"/><text x="28.4375%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (26 samples, 0.32%)</title><rect x="28.1875%" y="1109" width="0.3191%" height="15" fill="rgb(240,113,14)" fg:x="2297" fg:w="26"/><text x="28.4375%" y="1119.50"></text></g><g><title>core::task::wake::Waker::wake (26 samples, 0.32%)</title><rect x="28.1875%" y="1093" width="0.3191%" height="15" fill="rgb(210,20,13)" fg:x="2297" fg:w="26"/><text x="28.4375%" y="1103.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (3 samples, 0.04%)</title><rect x="28.4698%" y="1077" width="0.0368%" height="15" fill="rgb(241,144,13)" fg:x="2320" fg:w="3"/><text x="28.7198%" y="1087.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.01%)</title><rect x="28.4943%" y="1061" width="0.0123%" height="15" fill="rgb(235,43,34)" fg:x="2322" fg:w="1"/><text x="28.7443%" y="1071.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="28.4943%" y="1045" width="0.0123%" height="15" fill="rgb(208,36,20)" fg:x="2322" fg:w="1"/><text x="28.7443%" y="1055.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="28.4943%" y="1029" width="0.0123%" height="15" fill="rgb(239,204,10)" fg:x="2322" fg:w="1"/><text x="28.7443%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="28.4943%" y="1013" width="0.0123%" height="15" fill="rgb(217,84,43)" fg:x="2322" fg:w="1"/><text x="28.7443%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="28.4943%" y="997" width="0.0123%" height="15" fill="rgb(241,170,50)" fg:x="2322" fg:w="1"/><text x="28.7443%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="28.4943%" y="981" width="0.0123%" height="15" fill="rgb(226,205,29)" fg:x="2322" fg:w="1"/><text x="28.7443%" y="991.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="28.4943%" y="965" width="0.0123%" height="15" fill="rgb(233,113,1)" fg:x="2322" fg:w="1"/><text x="28.7443%" y="975.50"></text></g><g><title>async_task::runnable::Runnable::run (1,305 samples, 16.01%)</title><rect x="12.6519%" y="1157" width="16.0142%" height="15" fill="rgb(253,98,13)" fg:x="1031" fg:w="1305"/><text x="12.9019%" y="1167.50">async_task::runnable::Run..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,300 samples, 15.95%)</title><rect x="12.7132%" y="1141" width="15.9529%" height="15" fill="rgb(211,115,12)" fg:x="1036" fg:w="1300"/><text x="12.9632%" y="1151.50">async_task::raw::RawTask&lt;..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (13 samples, 0.16%)</title><rect x="28.5066%" y="1125" width="0.1595%" height="15" fill="rgb(208,12,16)" fg:x="2323" fg:w="13"/><text x="28.7566%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.16%)</title><rect x="28.5066%" y="1109" width="0.1595%" height="15" fill="rgb(237,193,54)" fg:x="2323" fg:w="13"/><text x="28.7566%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,747 samples, 21.44%)</title><rect x="7.2524%" y="1237" width="21.4382%" height="15" fill="rgb(243,22,42)" fg:x="591" fg:w="1747"/><text x="7.5024%" y="1247.50">&lt;core::future::from_generator::Gen..</text></g><g><title>async_executor::Executor::run::{{closure}} (1,746 samples, 21.43%)</title><rect x="7.2647%" y="1221" width="21.4259%" height="15" fill="rgb(233,151,36)" fg:x="592" fg:w="1746"/><text x="7.5147%" y="1231.50">async_executor::Executor::run::{{c..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,732 samples, 21.25%)</title><rect x="7.4365%" y="1205" width="21.2541%" height="15" fill="rgb(237,57,45)" fg:x="606" fg:w="1732"/><text x="7.6865%" y="1215.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,671 samples, 20.51%)</title><rect x="8.1851%" y="1189" width="20.5056%" height="15" fill="rgb(221,88,17)" fg:x="667" fg:w="1671"/><text x="8.4351%" y="1199.50">&lt;core::future::from_generator::G..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,670 samples, 20.49%)</title><rect x="8.1973%" y="1173" width="20.4933%" height="15" fill="rgb(230,79,15)" fg:x="668" fg:w="1670"/><text x="8.4473%" y="1183.50">async_executor::Executor::run::{..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (2 samples, 0.02%)</title><rect x="28.6661%" y="1157" width="0.0245%" height="15" fill="rgb(213,57,13)" fg:x="2336" fg:w="2"/><text x="28.9161%" y="1167.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (2 samples, 0.02%)</title><rect x="28.6661%" y="1141" width="0.0245%" height="15" fill="rgb(222,116,39)" fg:x="2336" fg:w="2"/><text x="28.9161%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i32&gt;::lt (1 samples, 0.01%)</title><rect x="28.6784%" y="1125" width="0.0123%" height="15" fill="rgb(245,107,2)" fg:x="2337" fg:w="1"/><text x="28.9284%" y="1135.50"></text></g><g><title>[engine] (6 samples, 0.07%)</title><rect x="28.6906%" y="1237" width="0.0736%" height="15" fill="rgb(238,1,10)" fg:x="2338" fg:w="6"/><text x="28.9406%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="28.6906%" y="1221" width="0.0736%" height="15" fill="rgb(249,4,48)" fg:x="2338" fg:w="6"/><text x="28.9406%" y="1231.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="28.8256%" y="1205" width="0.0123%" height="15" fill="rgb(223,151,18)" fg:x="2349" fg:w="1"/><text x="29.0756%" y="1215.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (8 samples, 0.10%)</title><rect x="28.8379%" y="1205" width="0.0982%" height="15" fill="rgb(227,65,43)" fg:x="2350" fg:w="8"/><text x="29.0879%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="28.9361%" y="1205" width="0.0123%" height="15" fill="rgb(218,40,45)" fg:x="2358" fg:w="1"/><text x="29.1861%" y="1215.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="28.9361%" y="1189" width="0.0123%" height="15" fill="rgb(252,121,31)" fg:x="2358" fg:w="1"/><text x="29.1861%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.13%)</title><rect x="28.9483%" y="1205" width="0.1350%" height="15" fill="rgb(219,158,43)" fg:x="2359" fg:w="11"/><text x="29.1983%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.13%)</title><rect x="28.9483%" y="1189" width="0.1350%" height="15" fill="rgb(231,162,42)" fg:x="2359" fg:w="11"/><text x="29.1983%" y="1199.50"></text></g><g><title>std::sync::mutex::guard_poison (5 samples, 0.06%)</title><rect x="29.0833%" y="1189" width="0.0614%" height="15" fill="rgb(217,179,25)" fg:x="2370" fg:w="5"/><text x="29.3333%" y="1199.50"></text></g><g><title>std::sync::poison::Flag::get (1 samples, 0.01%)</title><rect x="29.1447%" y="1189" width="0.0123%" height="15" fill="rgb(206,212,31)" fg:x="2375" fg:w="1"/><text x="29.3947%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="29.1447%" y="1173" width="0.0123%" height="15" fill="rgb(235,144,12)" fg:x="2375" fg:w="1"/><text x="29.3947%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="29.1447%" y="1157" width="0.0123%" height="15" fill="rgb(213,51,10)" fg:x="2375" fg:w="1"/><text x="29.3947%" y="1167.50"></text></g><g><title>__condvar_confirm_wakeup (5 samples, 0.06%)</title><rect x="29.3656%" y="1141" width="0.0614%" height="15" fill="rgb(231,145,14)" fg:x="2393" fg:w="5"/><text x="29.6156%" y="1151.50"></text></g><g><title>__condvar_dec_grefs (11 samples, 0.13%)</title><rect x="29.4269%" y="1141" width="0.1350%" height="15" fill="rgb(235,15,28)" fg:x="2398" fg:w="11"/><text x="29.6769%" y="1151.50"></text></g><g><title>__pthread_disable_asynccancel (9 samples, 0.11%)</title><rect x="31.1327%" y="1125" width="0.1104%" height="15" fill="rgb(237,206,10)" fg:x="2537" fg:w="9"/><text x="31.3827%" y="1135.50"></text></g><g><title>__futex_abstimed_wait_common64 (140 samples, 1.72%)</title><rect x="29.5619%" y="1141" width="1.7180%" height="15" fill="rgb(236,227,27)" fg:x="2409" fg:w="140"/><text x="29.8119%" y="1151.50"></text></g><g><title>__pthread_enable_asynccancel (3 samples, 0.04%)</title><rect x="31.2431%" y="1125" width="0.0368%" height="15" fill="rgb(246,83,35)" fg:x="2546" fg:w="3"/><text x="31.4931%" y="1135.50"></text></g><g><title>__pthread_cleanup_pop (2 samples, 0.02%)</title><rect x="31.2799%" y="1141" width="0.0245%" height="15" fill="rgb(220,136,24)" fg:x="2549" fg:w="2"/><text x="31.5299%" y="1151.50"></text></g><g><title>__pthread_cleanup_push (1 samples, 0.01%)</title><rect x="31.3045%" y="1141" width="0.0123%" height="15" fill="rgb(217,3,25)" fg:x="2551" fg:w="1"/><text x="31.5545%" y="1151.50"></text></g><g><title>__pthread_mutex_cond_lock (3 samples, 0.04%)</title><rect x="31.3167%" y="1141" width="0.0368%" height="15" fill="rgb(239,24,14)" fg:x="2552" fg:w="3"/><text x="31.5667%" y="1151.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (180 samples, 2.21%)</title><rect x="29.1570%" y="1173" width="2.2089%" height="15" fill="rgb(244,16,53)" fg:x="2376" fg:w="180"/><text x="29.4070%" y="1183.50">s..</text></g><g><title>__pthread_cond_wait (180 samples, 2.21%)</title><rect x="29.1570%" y="1157" width="2.2089%" height="15" fill="rgb(208,175,44)" fg:x="2376" fg:w="180"/><text x="29.4070%" y="1167.50">_..</text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="31.3535%" y="1141" width="0.0123%" height="15" fill="rgb(252,18,48)" fg:x="2555" fg:w="1"/><text x="31.6035%" y="1151.50"></text></g><g><title>std::sync::condvar::Condvar::wait (187 samples, 2.29%)</title><rect x="29.0833%" y="1205" width="2.2948%" height="15" fill="rgb(234,199,32)" fg:x="2370" fg:w="187"/><text x="29.3333%" y="1215.50">s..</text></g><g><title>std::sys_common::condvar::Condvar::wait (181 samples, 2.22%)</title><rect x="29.1570%" y="1189" width="2.2211%" height="15" fill="rgb(225,77,54)" fg:x="2376" fg:w="181"/><text x="29.4070%" y="1199.50">s..</text></g><g><title>std::sys_common::condvar::check::SameMutexCheck::verify (1 samples, 0.01%)</title><rect x="31.3658%" y="1173" width="0.0123%" height="15" fill="rgb(225,42,25)" fg:x="2556" fg:w="1"/><text x="31.6158%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="31.3658%" y="1157" width="0.0123%" height="15" fill="rgb(242,227,46)" fg:x="2556" fg:w="1"/><text x="31.6158%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="31.3658%" y="1141" width="0.0123%" height="15" fill="rgb(246,197,35)" fg:x="2556" fg:w="1"/><text x="31.6158%" y="1151.50"></text></g><g><title>std::panic::catch_unwind (1,970 samples, 24.17%)</title><rect x="7.2279%" y="1413" width="24.1747%" height="15" fill="rgb(215,159,26)" fg:x="589" fg:w="1970"/><text x="7.4779%" y="1423.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,970 samples, 24.17%)</title><rect x="7.2279%" y="1397" width="24.1747%" height="15" fill="rgb(212,194,50)" fg:x="589" fg:w="1970"/><text x="7.4779%" y="1407.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,970 samples, 24.17%)</title><rect x="7.2279%" y="1381" width="24.1747%" height="15" fill="rgb(246,132,1)" fg:x="589" fg:w="1970"/><text x="7.4779%" y="1391.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,970 samples, 24.17%)</title><rect x="7.2279%" y="1365" width="24.1747%" height="15" fill="rgb(217,71,7)" fg:x="589" fg:w="1970"/><text x="7.4779%" y="1375.50">&lt;core::panic::unwind_safe::AssertUnwin..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (1,970 samples, 24.17%)</title><rect x="7.2279%" y="1349" width="24.1747%" height="15" fill="rgb(252,59,32)" fg:x="589" fg:w="1970"/><text x="7.4779%" y="1359.50">std::thread::Builder::spawn_unchecked:..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,970 samples, 24.17%)</title><rect x="7.2279%" y="1333" width="24.1747%" height="15" fill="rgb(253,204,25)" fg:x="589" fg:w="1970"/><text x="7.4779%" y="1343.50">std::sys_common::backtrace::__rust_beg..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1,970 samples, 24.17%)</title><rect x="7.2279%" y="1317" width="24.1747%" height="15" fill="rgb(232,21,16)" fg:x="589" fg:w="1970"/><text x="7.4779%" y="1327.50">bevy_tasks::task_pool::TaskPool::new_i..</text></g><g><title>futures_lite::future::block_on (1,970 samples, 24.17%)</title><rect x="7.2279%" y="1301" width="24.1747%" height="15" fill="rgb(248,90,29)" fg:x="589" fg:w="1970"/><text x="7.4779%" y="1311.50">futures_lite::future::block_on</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,970 samples, 24.17%)</title><rect x="7.2279%" y="1285" width="24.1747%" height="15" fill="rgb(249,223,7)" fg:x="589" fg:w="1970"/><text x="7.4779%" y="1295.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,970 samples, 24.17%)</title><rect x="7.2279%" y="1269" width="24.1747%" height="15" fill="rgb(231,119,42)" fg:x="589" fg:w="1970"/><text x="7.4779%" y="1279.50">std::thread::local::LocalKey&lt;T&gt;::try_w..</text></g><g><title>futures_lite::future::block_on::{{closure}} (1,970 samples, 24.17%)</title><rect x="7.2279%" y="1253" width="24.1747%" height="15" fill="rgb(215,41,35)" fg:x="589" fg:w="1970"/><text x="7.4779%" y="1263.50">futures_lite::future::block_on::{{clos..</text></g><g><title>parking::Parker::park (215 samples, 2.64%)</title><rect x="28.7643%" y="1237" width="2.6384%" height="15" fill="rgb(220,44,45)" fg:x="2344" fg:w="215"/><text x="29.0143%" y="1247.50">pa..</text></g><g><title>parking::Inner::park (211 samples, 2.59%)</title><rect x="28.8134%" y="1221" width="2.5893%" height="15" fill="rgb(253,197,36)" fg:x="2348" fg:w="211"/><text x="29.0634%" y="1231.50">pa..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="31.3781%" y="1205" width="0.0245%" height="15" fill="rgb(245,225,54)" fg:x="2557" fg:w="2"/><text x="31.6281%" y="1215.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.02%)</title><rect x="31.3781%" y="1189" width="0.0245%" height="15" fill="rgb(239,94,37)" fg:x="2557" fg:w="2"/><text x="31.6281%" y="1199.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.02%)</title><rect x="31.3781%" y="1173" width="0.0245%" height="15" fill="rgb(242,217,10)" fg:x="2557" fg:w="2"/><text x="31.6281%" y="1183.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="31.3781%" y="1157" width="0.0245%" height="15" fill="rgb(250,193,7)" fg:x="2557" fg:w="2"/><text x="31.6281%" y="1167.50"></text></g><g><title>__GI___clone (1,973 samples, 24.21%)</title><rect x="7.2279%" y="1525" width="24.2116%" height="15" fill="rgb(230,104,19)" fg:x="589" fg:w="1973"/><text x="7.4779%" y="1535.50">__GI___clone</text></g><g><title>start_thread (1,973 samples, 24.21%)</title><rect x="7.2279%" y="1509" width="24.2116%" height="15" fill="rgb(230,181,4)" fg:x="589" fg:w="1973"/><text x="7.4779%" y="1519.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,973 samples, 24.21%)</title><rect x="7.2279%" y="1493" width="24.2116%" height="15" fill="rgb(216,219,49)" fg:x="589" fg:w="1973"/><text x="7.4779%" y="1503.50">std::sys::unix::thread::Thread::new::th..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,973 samples, 24.21%)</title><rect x="7.2279%" y="1477" width="24.2116%" height="15" fill="rgb(254,144,0)" fg:x="589" fg:w="1973"/><text x="7.4779%" y="1487.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::f..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,973 samples, 24.21%)</title><rect x="7.2279%" y="1461" width="24.2116%" height="15" fill="rgb(205,209,38)" fg:x="589" fg:w="1973"/><text x="7.4779%" y="1471.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::f..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,973 samples, 24.21%)</title><rect x="7.2279%" y="1445" width="24.2116%" height="15" fill="rgb(240,21,42)" fg:x="589" fg:w="1973"/><text x="7.4779%" y="1455.50">core::ops::function::FnOnce::call_once{..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1,973 samples, 24.21%)</title><rect x="7.2279%" y="1429" width="24.2116%" height="15" fill="rgb(241,132,3)" fg:x="589" fg:w="1973"/><text x="7.4779%" y="1439.50">std::thread::Builder::spawn_unchecked::..</text></g><g><title>std::sys::unix::thread::guard::current (3 samples, 0.04%)</title><rect x="31.4026%" y="1413" width="0.0368%" height="15" fill="rgb(225,14,2)" fg:x="2559" fg:w="3"/><text x="31.6526%" y="1423.50"></text></g><g><title>__pthread_getattr_np (3 samples, 0.04%)</title><rect x="31.4026%" y="1397" width="0.0368%" height="15" fill="rgb(210,141,35)" fg:x="2559" fg:w="3"/><text x="31.6526%" y="1407.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="31.4026%" y="1381" width="0.0368%" height="15" fill="rgb(251,14,44)" fg:x="2559" fg:w="3"/><text x="31.6526%" y="1391.50"></text></g><g><title>tcache_init.part.0 (3 samples, 0.04%)</title><rect x="31.4026%" y="1365" width="0.0368%" height="15" fill="rgb(247,48,18)" fg:x="2559" fg:w="3"/><text x="31.6526%" y="1375.50"></text></g><g><title>arena_get2.part.0 (3 samples, 0.04%)</title><rect x="31.4026%" y="1349" width="0.0368%" height="15" fill="rgb(225,0,40)" fg:x="2559" fg:w="3"/><text x="31.6526%" y="1359.50"></text></g><g><title>new_heap (3 samples, 0.04%)</title><rect x="31.4026%" y="1333" width="0.0368%" height="15" fill="rgb(221,31,33)" fg:x="2559" fg:w="3"/><text x="31.6526%" y="1343.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="31.4394%" y="1525" width="0.0123%" height="15" fill="rgb(237,42,40)" fg:x="2562" fg:w="1"/><text x="31.6894%" y="1535.50"></text></g><g><title>__udivti3 (1 samples, 0.01%)</title><rect x="31.4517%" y="1525" width="0.0123%" height="15" fill="rgb(233,51,29)" fg:x="2563" fg:w="1"/><text x="31.7017%" y="1535.50"></text></g><g><title>Compute_Task_Po (2,564 samples, 31.46%)</title><rect x="0.0123%" y="1541" width="31.4640%" height="15" fill="rgb(226,58,20)" fg:x="1" fg:w="2564"/><text x="0.2623%" y="1551.50">Compute_Task_Po</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="31.4640%" y="1525" width="0.0123%" height="15" fill="rgb(208,98,7)" fg:x="2564" fg:w="1"/><text x="31.7140%" y="1535.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="31.4763%" y="1157" width="0.0123%" height="15" fill="rgb(228,143,44)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="1167.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1 samples, 0.01%)</title><rect x="31.4763%" y="1141" width="0.0123%" height="15" fill="rgb(246,55,38)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="31.4763%" y="1125" width="0.0123%" height="15" fill="rgb(247,87,16)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="1135.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1 samples, 0.01%)</title><rect x="31.4763%" y="1109" width="0.0123%" height="15" fill="rgb(234,129,42)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="31.4763%" y="1093" width="0.0123%" height="15" fill="rgb(220,82,16)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="1103.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="31.4763%" y="1077" width="0.0123%" height="15" fill="rgb(211,88,4)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="1087.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="31.4763%" y="1061" width="0.0123%" height="15" fill="rgb(248,151,21)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="1071.50"></text></g><g><title>fastrand::usize (1 samples, 0.01%)</title><rect x="31.4763%" y="1045" width="0.0123%" height="15" fill="rgb(238,163,6)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="31.4763%" y="1029" width="0.0123%" height="15" fill="rgb(209,183,11)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="31.4763%" y="1013" width="0.0123%" height="15" fill="rgb(219,37,20)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="1023.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (1 samples, 0.01%)</title><rect x="31.4763%" y="997" width="0.0123%" height="15" fill="rgb(210,158,4)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="1007.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="31.4763%" y="981" width="0.0123%" height="15" fill="rgb(221,167,53)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="991.50"></text></g><g><title>fastrand::RNG::__init (1 samples, 0.01%)</title><rect x="31.4763%" y="965" width="0.0123%" height="15" fill="rgb(237,151,45)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="975.50"></text></g><g><title>&lt;std::time::Instant as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="31.4763%" y="949" width="0.0123%" height="15" fill="rgb(231,39,3)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="959.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="31.4763%" y="933" width="0.0123%" height="15" fill="rgb(212,167,28)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="943.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="31.4763%" y="917" width="0.0123%" height="15" fill="rgb(232,178,8)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="31.4763%" y="901" width="0.0123%" height="15" fill="rgb(225,151,20)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="911.50"></text></g><g><title>core::hash::Hasher::write_i64 (1 samples, 0.01%)</title><rect x="31.4763%" y="885" width="0.0123%" height="15" fill="rgb(238,3,37)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="895.50"></text></g><g><title>core::hash::Hasher::write_u64 (1 samples, 0.01%)</title><rect x="31.4763%" y="869" width="0.0123%" height="15" fill="rgb(251,147,42)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="31.4763%" y="853" width="0.0123%" height="15" fill="rgb(208,173,10)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="863.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="31.4763%" y="837" width="0.0123%" height="15" fill="rgb(246,225,4)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="847.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="31.4763%" y="821" width="0.0123%" height="15" fill="rgb(248,102,6)" fg:x="2565" fg:w="1"/><text x="31.7263%" y="831.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="31.4885%" y="1061" width="0.0123%" height="15" fill="rgb(232,6,21)" fg:x="2566" fg:w="1"/><text x="31.7385%" y="1071.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8 samples, 0.10%)</title><rect x="31.4763%" y="1205" width="0.0982%" height="15" fill="rgb(221,179,22)" fg:x="2565" fg:w="8"/><text x="31.7263%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.10%)</title><rect x="31.4763%" y="1189" width="0.0982%" height="15" fill="rgb(252,50,20)" fg:x="2565" fg:w="8"/><text x="31.7263%" y="1199.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8 samples, 0.10%)</title><rect x="31.4763%" y="1173" width="0.0982%" height="15" fill="rgb(222,56,38)" fg:x="2565" fg:w="8"/><text x="31.7263%" y="1183.50"></text></g><g><title>async_task::runnable::Runnable::run (7 samples, 0.09%)</title><rect x="31.4885%" y="1157" width="0.0859%" height="15" fill="rgb(206,193,29)" fg:x="2566" fg:w="7"/><text x="31.7385%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (7 samples, 0.09%)</title><rect x="31.4885%" y="1141" width="0.0859%" height="15" fill="rgb(239,192,45)" fg:x="2566" fg:w="7"/><text x="31.7385%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.09%)</title><rect x="31.4885%" y="1125" width="0.0859%" height="15" fill="rgb(254,18,36)" fg:x="2566" fg:w="7"/><text x="31.7385%" y="1135.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (7 samples, 0.09%)</title><rect x="31.4885%" y="1109" width="0.0859%" height="15" fill="rgb(221,127,11)" fg:x="2566" fg:w="7"/><text x="31.7385%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.09%)</title><rect x="31.4885%" y="1093" width="0.0859%" height="15" fill="rgb(234,146,35)" fg:x="2566" fg:w="7"/><text x="31.7385%" y="1103.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked::{{closure}} (7 samples, 0.09%)</title><rect x="31.4885%" y="1077" width="0.0859%" height="15" fill="rgb(254,201,37)" fg:x="2566" fg:w="7"/><text x="31.7385%" y="1087.50"></text></g><g><title>tracing_core::event::Event::dispatch (6 samples, 0.07%)</title><rect x="31.5008%" y="1061" width="0.0736%" height="15" fill="rgb(211,202,23)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="1071.50"></text></g><g><title>tracing_core::dispatcher::get_default (6 samples, 0.07%)</title><rect x="31.5008%" y="1045" width="0.0736%" height="15" fill="rgb(237,91,2)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.07%)</title><rect x="31.5008%" y="1029" width="0.0736%" height="15" fill="rgb(226,228,36)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="1039.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (6 samples, 0.07%)</title><rect x="31.5008%" y="1013" width="0.0736%" height="15" fill="rgb(213,63,50)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="1023.50"></text></g><g><title>tracing_core::event::Event::dispatch::{{closure}} (6 samples, 0.07%)</title><rect x="31.5008%" y="997" width="0.0736%" height="15" fill="rgb(235,194,19)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="1007.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::event (6 samples, 0.07%)</title><rect x="31.5008%" y="981" width="0.0736%" height="15" fill="rgb(207,204,18)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::event (6 samples, 0.07%)</title><rect x="31.5008%" y="965" width="0.0736%" height="15" fill="rgb(248,8,7)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="975.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (6 samples, 0.07%)</title><rect x="31.5008%" y="949" width="0.0736%" height="15" fill="rgb(223,145,47)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (6 samples, 0.07%)</title><rect x="31.5008%" y="933" width="0.0736%" height="15" fill="rgb(228,84,11)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (6 samples, 0.07%)</title><rect x="31.5008%" y="917" width="0.0736%" height="15" fill="rgb(218,76,45)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (6 samples, 0.07%)</title><rect x="31.5008%" y="901" width="0.0736%" height="15" fill="rgb(223,80,15)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="911.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::{{closure}} (6 samples, 0.07%)</title><rect x="31.5008%" y="885" width="0.0736%" height="15" fill="rgb(219,218,33)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="895.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (6 samples, 0.07%)</title><rect x="31.5008%" y="869" width="0.0736%" height="15" fill="rgb(208,51,11)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="879.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (6 samples, 0.07%)</title><rect x="31.5008%" y="853" width="0.0736%" height="15" fill="rgb(229,165,39)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="863.50"></text></g><g><title>std::io::stdio::Stdout::lock (6 samples, 0.07%)</title><rect x="31.5008%" y="837" width="0.0736%" height="15" fill="rgb(241,100,24)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="847.50"></text></g><g><title>std::io::stdio::Stdout::lock_any (6 samples, 0.07%)</title><rect x="31.5008%" y="821" width="0.0736%" height="15" fill="rgb(228,14,23)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="831.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (6 samples, 0.07%)</title><rect x="31.5008%" y="805" width="0.0736%" height="15" fill="rgb(247,116,52)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="815.50"></text></g><g><title>std::sys::unix::mutex::ReentrantMutex::lock (6 samples, 0.07%)</title><rect x="31.5008%" y="789" width="0.0736%" height="15" fill="rgb(216,149,33)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="799.50"></text></g><g><title>__GI___pthread_mutex_lock (6 samples, 0.07%)</title><rect x="31.5008%" y="773" width="0.0736%" height="15" fill="rgb(238,142,29)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="783.50"></text></g><g><title>__lll_lock_wait (6 samples, 0.07%)</title><rect x="31.5008%" y="757" width="0.0736%" height="15" fill="rgb(224,83,40)" fg:x="2567" fg:w="6"/><text x="31.7508%" y="767.50"></text></g><g><title>std::panic::catch_unwind (14 samples, 0.17%)</title><rect x="31.4763%" y="1413" width="0.1718%" height="15" fill="rgb(234,165,11)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1423.50"></text></g><g><title>std::panicking::try (14 samples, 0.17%)</title><rect x="31.4763%" y="1397" width="0.1718%" height="15" fill="rgb(215,96,23)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (14 samples, 0.17%)</title><rect x="31.4763%" y="1381" width="0.1718%" height="15" fill="rgb(233,179,26)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (14 samples, 0.17%)</title><rect x="31.4763%" y="1365" width="0.1718%" height="15" fill="rgb(225,129,33)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1375.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (14 samples, 0.17%)</title><rect x="31.4763%" y="1349" width="0.1718%" height="15" fill="rgb(237,49,13)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1359.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (14 samples, 0.17%)</title><rect x="31.4763%" y="1333" width="0.1718%" height="15" fill="rgb(211,3,31)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1343.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (14 samples, 0.17%)</title><rect x="31.4763%" y="1317" width="0.1718%" height="15" fill="rgb(216,152,19)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1327.50"></text></g><g><title>futures_lite::future::block_on (14 samples, 0.17%)</title><rect x="31.4763%" y="1301" width="0.1718%" height="15" fill="rgb(251,121,35)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.17%)</title><rect x="31.4763%" y="1285" width="0.1718%" height="15" fill="rgb(210,217,47)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.17%)</title><rect x="31.4763%" y="1269" width="0.1718%" height="15" fill="rgb(244,116,22)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1279.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (14 samples, 0.17%)</title><rect x="31.4763%" y="1253" width="0.1718%" height="15" fill="rgb(228,17,21)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.17%)</title><rect x="31.4763%" y="1237" width="0.1718%" height="15" fill="rgb(240,149,34)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1247.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (14 samples, 0.17%)</title><rect x="31.4763%" y="1221" width="0.1718%" height="15" fill="rgb(208,125,47)" fg:x="2565" fg:w="14"/><text x="31.7263%" y="1231.50"></text></g><g><title>async_executor::Executor::state (6 samples, 0.07%)</title><rect x="31.5744%" y="1205" width="0.0736%" height="15" fill="rgb(249,186,39)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1215.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (6 samples, 0.07%)</title><rect x="31.5744%" y="1189" width="0.0736%" height="15" fill="rgb(240,220,33)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1199.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (6 samples, 0.07%)</title><rect x="31.5744%" y="1173" width="0.0736%" height="15" fill="rgb(243,110,23)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1183.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (6 samples, 0.07%)</title><rect x="31.5744%" y="1157" width="0.0736%" height="15" fill="rgb(219,163,46)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1167.50"></text></g><g><title>once_cell::imp::initialize_inner (6 samples, 0.07%)</title><rect x="31.5744%" y="1141" width="0.0736%" height="15" fill="rgb(216,126,30)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1151.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (6 samples, 0.07%)</title><rect x="31.5744%" y="1125" width="0.0736%" height="15" fill="rgb(208,139,11)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1135.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (6 samples, 0.07%)</title><rect x="31.5744%" y="1109" width="0.0736%" height="15" fill="rgb(213,118,36)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1119.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (6 samples, 0.07%)</title><rect x="31.5744%" y="1093" width="0.0736%" height="15" fill="rgb(226,43,17)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1103.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (6 samples, 0.07%)</title><rect x="31.5744%" y="1077" width="0.0736%" height="15" fill="rgb(254,217,4)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1087.50"></text></g><g><title>alloc::alloc::exchange_malloc (6 samples, 0.07%)</title><rect x="31.5744%" y="1061" width="0.0736%" height="15" fill="rgb(210,134,47)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.07%)</title><rect x="31.5744%" y="1045" width="0.0736%" height="15" fill="rgb(237,24,49)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.07%)</title><rect x="31.5744%" y="1029" width="0.0736%" height="15" fill="rgb(251,39,46)" fg:x="2573" fg:w="6"/><text x="31.8244%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (5 samples, 0.06%)</title><rect x="31.5867%" y="1013" width="0.0614%" height="15" fill="rgb(251,220,3)" fg:x="2574" fg:w="5"/><text x="31.8367%" y="1023.50"></text></g><g><title>__rdl_alloc (5 samples, 0.06%)</title><rect x="31.5867%" y="997" width="0.0614%" height="15" fill="rgb(228,105,12)" fg:x="2574" fg:w="5"/><text x="31.8367%" y="1007.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (5 samples, 0.06%)</title><rect x="31.5867%" y="981" width="0.0614%" height="15" fill="rgb(215,196,1)" fg:x="2574" fg:w="5"/><text x="31.8367%" y="991.50"></text></g><g><title>__GI___libc_malloc (5 samples, 0.06%)</title><rect x="31.5867%" y="965" width="0.0614%" height="15" fill="rgb(214,33,39)" fg:x="2574" fg:w="5"/><text x="31.8367%" y="975.50"></text></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="31.5867%" y="949" width="0.0614%" height="15" fill="rgb(220,19,52)" fg:x="2574" fg:w="5"/><text x="31.8367%" y="959.50"></text></g><g><title>IO_Task_Pool_(0 (15 samples, 0.18%)</title><rect x="31.4763%" y="1541" width="0.1841%" height="15" fill="rgb(221,78,38)" fg:x="2565" fg:w="15"/><text x="31.7263%" y="1551.50"></text></g><g><title>__GI___clone (15 samples, 0.18%)</title><rect x="31.4763%" y="1525" width="0.1841%" height="15" fill="rgb(253,30,16)" fg:x="2565" fg:w="15"/><text x="31.7263%" y="1535.50"></text></g><g><title>start_thread (15 samples, 0.18%)</title><rect x="31.4763%" y="1509" width="0.1841%" height="15" fill="rgb(242,65,0)" fg:x="2565" fg:w="15"/><text x="31.7263%" y="1519.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (15 samples, 0.18%)</title><rect x="31.4763%" y="1493" width="0.1841%" height="15" fill="rgb(235,201,12)" fg:x="2565" fg:w="15"/><text x="31.7263%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.18%)</title><rect x="31.4763%" y="1477" width="0.1841%" height="15" fill="rgb(233,161,9)" fg:x="2565" fg:w="15"/><text x="31.7263%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (15 samples, 0.18%)</title><rect x="31.4763%" y="1461" width="0.1841%" height="15" fill="rgb(241,207,41)" fg:x="2565" fg:w="15"/><text x="31.7263%" y="1471.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (15 samples, 0.18%)</title><rect x="31.4763%" y="1445" width="0.1841%" height="15" fill="rgb(212,69,46)" fg:x="2565" fg:w="15"/><text x="31.7263%" y="1455.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (15 samples, 0.18%)</title><rect x="31.4763%" y="1429" width="0.1841%" height="15" fill="rgb(239,69,45)" fg:x="2565" fg:w="15"/><text x="31.7263%" y="1439.50"></text></g><g><title>std::sys_common::thread_info::set (1 samples, 0.01%)</title><rect x="31.6481%" y="1413" width="0.0123%" height="15" fill="rgb(242,117,48)" fg:x="2579" fg:w="1"/><text x="31.8981%" y="1423.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="31.6481%" y="1397" width="0.0123%" height="15" fill="rgb(228,41,36)" fg:x="2579" fg:w="1"/><text x="31.8981%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="31.6481%" y="1381" width="0.0123%" height="15" fill="rgb(212,3,32)" fg:x="2579" fg:w="1"/><text x="31.8981%" y="1391.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (1 samples, 0.01%)</title><rect x="31.6481%" y="1365" width="0.0123%" height="15" fill="rgb(233,41,49)" fg:x="2579" fg:w="1"/><text x="31.8981%" y="1375.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::register_dtor (1 samples, 0.01%)</title><rect x="31.6481%" y="1349" width="0.0123%" height="15" fill="rgb(252,170,49)" fg:x="2579" fg:w="1"/><text x="31.8981%" y="1359.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.01%)</title><rect x="31.6481%" y="1333" width="0.0123%" height="15" fill="rgb(229,53,26)" fg:x="2579" fg:w="1"/><text x="31.8981%" y="1343.50"></text></g><g><title>__GI__dl_find_dso_for_object (1 samples, 0.01%)</title><rect x="31.6481%" y="1317" width="0.0123%" height="15" fill="rgb(217,157,12)" fg:x="2579" fg:w="1"/><text x="31.8981%" y="1327.50"></text></g><g><title>_dl_addr_inside_object (1 samples, 0.01%)</title><rect x="31.6481%" y="1301" width="0.0123%" height="15" fill="rgb(227,17,9)" fg:x="2579" fg:w="1"/><text x="31.8981%" y="1311.50"></text></g><g><title>[engine] (1 samples, 0.01%)</title><rect x="31.6603%" y="1525" width="0.0123%" height="15" fill="rgb(218,84,12)" fg:x="2580" fg:w="1"/><text x="31.9103%" y="1535.50"></text></g><g><title>__pthread_cleanup_pop (1 samples, 0.01%)</title><rect x="31.6603%" y="1509" width="0.0123%" height="15" fill="rgb(212,79,24)" fg:x="2580" fg:w="1"/><text x="31.9103%" y="1519.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="31.6726%" y="1157" width="0.0123%" height="15" fill="rgb(217,222,37)" fg:x="2581" fg:w="1"/><text x="31.9226%" y="1167.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (1 samples, 0.01%)</title><rect x="31.6726%" y="1141" width="0.0123%" height="15" fill="rgb(246,208,8)" fg:x="2581" fg:w="1"/><text x="31.9226%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="31.6726%" y="1125" width="0.0123%" height="15" fill="rgb(244,133,10)" fg:x="2581" fg:w="1"/><text x="31.9226%" y="1135.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (1 samples, 0.01%)</title><rect x="31.6726%" y="1109" width="0.0123%" height="15" fill="rgb(209,219,41)" fg:x="2581" fg:w="1"/><text x="31.9226%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="31.6726%" y="1093" width="0.0123%" height="15" fill="rgb(253,175,45)" fg:x="2581" fg:w="1"/><text x="31.9226%" y="1103.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="31.6726%" y="1077" width="0.0123%" height="15" fill="rgb(235,100,37)" fg:x="2581" fg:w="1"/><text x="31.9226%" y="1087.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="31.6726%" y="1061" width="0.0123%" height="15" fill="rgb(225,87,19)" fg:x="2581" fg:w="1"/><text x="31.9226%" y="1071.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="31.6726%" y="1045" width="0.0123%" height="15" fill="rgb(217,152,17)" fg:x="2581" fg:w="1"/><text x="31.9226%" y="1055.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="31.6726%" y="1029" width="0.0123%" height="15" fill="rgb(235,72,13)" fg:x="2581" fg:w="1"/><text x="31.9226%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="31.6971%" y="1061" width="0.0123%" height="15" fill="rgb(233,140,18)" fg:x="2583" fg:w="1"/><text x="31.9471%" y="1071.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_async::{{closure}} (1 samples, 0.01%)</title><rect x="31.6971%" y="1045" width="0.0123%" height="15" fill="rgb(207,212,28)" fg:x="2583" fg:w="1"/><text x="31.9471%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.01%)</title><rect x="31.6971%" y="1029" width="0.0123%" height="15" fill="rgb(220,130,25)" fg:x="2583" fg:w="1"/><text x="31.9471%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="31.6971%" y="1013" width="0.0123%" height="15" fill="rgb(205,55,34)" fg:x="2583" fg:w="1"/><text x="31.9471%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.01%)</title><rect x="31.6971%" y="997" width="0.0123%" height="15" fill="rgb(237,54,35)" fg:x="2583" fg:w="1"/><text x="31.9471%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="31.6971%" y="981" width="0.0123%" height="15" fill="rgb(208,67,23)" fg:x="2583" fg:w="1"/><text x="31.9471%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="31.6971%" y="965" width="0.0123%" height="15" fill="rgb(206,207,50)" fg:x="2583" fg:w="1"/><text x="31.9471%" y="975.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (1 samples, 0.01%)</title><rect x="31.7217%" y="853" width="0.0123%" height="15" fill="rgb(213,211,42)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="31.7217%" y="837" width="0.0123%" height="15" fill="rgb(252,197,50)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="847.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="31.7217%" y="821" width="0.0123%" height="15" fill="rgb(251,211,41)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="31.7217%" y="805" width="0.0123%" height="15" fill="rgb(229,211,5)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="815.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="31.7217%" y="789" width="0.0123%" height="15" fill="rgb(239,36,31)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="799.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="31.7217%" y="773" width="0.0123%" height="15" fill="rgb(248,67,31)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="783.50"></text></g><g><title>&lt;ansi_term::display::ANSIGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="31.7217%" y="757" width="0.0123%" height="15" fill="rgb(249,55,44)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="767.50"></text></g><g><title>ansi_term::display::ANSIGenericString&lt;S&gt;::write_to_any (1 samples, 0.01%)</title><rect x="31.7217%" y="741" width="0.0123%" height="15" fill="rgb(216,82,12)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="751.50"></text></g><g><title>&lt;dyn core::fmt::Write as ansi_term::write::AnyWrite&gt;::write_fmt (1 samples, 0.01%)</title><rect x="31.7217%" y="725" width="0.0123%" height="15" fill="rgb(242,174,1)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="31.7217%" y="709" width="0.0123%" height="15" fill="rgb(208,120,29)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="719.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="31.7217%" y="693" width="0.0123%" height="15" fill="rgb(221,105,43)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="703.50"></text></g><g><title>ansi_term::ansi::&lt;impl ansi_term::style::Style&gt;::write_prefix (1 samples, 0.01%)</title><rect x="31.7217%" y="677" width="0.0123%" height="15" fill="rgb(234,124,22)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="687.50"></text></g><g><title>&lt;dyn core::fmt::Write as ansi_term::write::AnyWrite&gt;::write_fmt (1 samples, 0.01%)</title><rect x="31.7217%" y="661" width="0.0123%" height="15" fill="rgb(212,23,30)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="671.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="31.7217%" y="645" width="0.0123%" height="15" fill="rgb(219,122,53)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="655.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="31.7217%" y="629" width="0.0123%" height="15" fill="rgb(248,84,24)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="31.7217%" y="613" width="0.0123%" height="15" fill="rgb(245,115,18)" fg:x="2585" fg:w="1"/><text x="31.9717%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (1 samples, 0.01%)</title><rect x="31.7340%" y="821" width="0.0123%" height="15" fill="rgb(227,176,51)" fg:x="2586" fg:w="1"/><text x="31.9840%" y="831.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="31.7340%" y="805" width="0.0123%" height="15" fill="rgb(229,63,42)" fg:x="2586" fg:w="1"/><text x="31.9840%" y="815.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="31.7340%" y="789" width="0.0123%" height="15" fill="rgb(247,202,24)" fg:x="2586" fg:w="1"/><text x="31.9840%" y="799.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="31.7340%" y="773" width="0.0123%" height="15" fill="rgb(244,173,20)" fg:x="2586" fg:w="1"/><text x="31.9840%" y="783.50"></text></g><g><title>chrono::format::format (1 samples, 0.01%)</title><rect x="31.7340%" y="757" width="0.0123%" height="15" fill="rgb(242,81,47)" fg:x="2586" fg:w="1"/><text x="31.9840%" y="767.50"></text></g><g><title>chrono::format::format_inner (1 samples, 0.01%)</title><rect x="31.7340%" y="741" width="0.0123%" height="15" fill="rgb(231,185,54)" fg:x="2586" fg:w="1"/><text x="31.9840%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.01%)</title><rect x="31.7462%" y="581" width="0.0123%" height="15" fill="rgb(243,55,32)" fg:x="2587" fg:w="1"/><text x="31.9962%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.10%)</title><rect x="31.6726%" y="1237" width="0.0982%" height="15" fill="rgb(208,167,19)" fg:x="2581" fg:w="8"/><text x="31.9226%" y="1247.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (8 samples, 0.10%)</title><rect x="31.6726%" y="1221" width="0.0982%" height="15" fill="rgb(231,72,35)" fg:x="2581" fg:w="8"/><text x="31.9226%" y="1231.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (8 samples, 0.10%)</title><rect x="31.6726%" y="1205" width="0.0982%" height="15" fill="rgb(250,173,51)" fg:x="2581" fg:w="8"/><text x="31.9226%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.10%)</title><rect x="31.6726%" y="1189" width="0.0982%" height="15" fill="rgb(209,5,22)" fg:x="2581" fg:w="8"/><text x="31.9226%" y="1199.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (8 samples, 0.10%)</title><rect x="31.6726%" y="1173" width="0.0982%" height="15" fill="rgb(250,174,19)" fg:x="2581" fg:w="8"/><text x="31.9226%" y="1183.50"></text></g><g><title>async_task::runnable::Runnable::run (7 samples, 0.09%)</title><rect x="31.6849%" y="1157" width="0.0859%" height="15" fill="rgb(217,3,49)" fg:x="2582" fg:w="7"/><text x="31.9349%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (7 samples, 0.09%)</title><rect x="31.6849%" y="1141" width="0.0859%" height="15" fill="rgb(218,225,5)" fg:x="2582" fg:w="7"/><text x="31.9349%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.09%)</title><rect x="31.6849%" y="1125" width="0.0859%" height="15" fill="rgb(236,89,11)" fg:x="2582" fg:w="7"/><text x="31.9349%" y="1135.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (7 samples, 0.09%)</title><rect x="31.6849%" y="1109" width="0.0859%" height="15" fill="rgb(206,33,28)" fg:x="2582" fg:w="7"/><text x="31.9349%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.09%)</title><rect x="31.6849%" y="1093" width="0.0859%" height="15" fill="rgb(241,56,42)" fg:x="2582" fg:w="7"/><text x="31.9349%" y="1103.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked::{{closure}} (7 samples, 0.09%)</title><rect x="31.6849%" y="1077" width="0.0859%" height="15" fill="rgb(222,44,11)" fg:x="2582" fg:w="7"/><text x="31.9349%" y="1087.50"></text></g><g><title>tracing_core::event::Event::dispatch (5 samples, 0.06%)</title><rect x="31.7094%" y="1061" width="0.0614%" height="15" fill="rgb(234,111,20)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="1071.50"></text></g><g><title>tracing_core::dispatcher::get_default (5 samples, 0.06%)</title><rect x="31.7094%" y="1045" width="0.0614%" height="15" fill="rgb(237,77,6)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.06%)</title><rect x="31.7094%" y="1029" width="0.0614%" height="15" fill="rgb(235,111,23)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="1039.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (5 samples, 0.06%)</title><rect x="31.7094%" y="1013" width="0.0614%" height="15" fill="rgb(251,135,29)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="1023.50"></text></g><g><title>tracing_core::event::Event::dispatch::{{closure}} (5 samples, 0.06%)</title><rect x="31.7094%" y="997" width="0.0614%" height="15" fill="rgb(217,57,1)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="1007.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::event (5 samples, 0.06%)</title><rect x="31.7094%" y="981" width="0.0614%" height="15" fill="rgb(249,119,31)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::event (5 samples, 0.06%)</title><rect x="31.7094%" y="965" width="0.0614%" height="15" fill="rgb(233,164,33)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="975.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (5 samples, 0.06%)</title><rect x="31.7094%" y="949" width="0.0614%" height="15" fill="rgb(250,217,43)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (5 samples, 0.06%)</title><rect x="31.7094%" y="933" width="0.0614%" height="15" fill="rgb(232,154,50)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.06%)</title><rect x="31.7094%" y="917" width="0.0614%" height="15" fill="rgb(227,190,8)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.06%)</title><rect x="31.7094%" y="901" width="0.0614%" height="15" fill="rgb(209,217,32)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="911.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::{{closure}} (5 samples, 0.06%)</title><rect x="31.7094%" y="885" width="0.0614%" height="15" fill="rgb(243,203,50)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (5 samples, 0.06%)</title><rect x="31.7094%" y="869" width="0.0614%" height="15" fill="rgb(232,152,27)" fg:x="2584" fg:w="5"/><text x="31.9594%" y="879.50"></text></g><g><title>tracing_subscriber::fmt::format::Format&lt;F,T&gt;::format_timestamp (3 samples, 0.04%)</title><rect x="31.7340%" y="853" width="0.0368%" height="15" fill="rgb(240,34,29)" fg:x="2586" fg:w="3"/><text x="31.9840%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (3 samples, 0.04%)</title><rect x="31.7340%" y="837" width="0.0368%" height="15" fill="rgb(215,185,52)" fg:x="2586" fg:w="3"/><text x="31.9840%" y="847.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format (2 samples, 0.02%)</title><rect x="31.7462%" y="821" width="0.0245%" height="15" fill="rgb(240,89,49)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="831.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format_with_items (2 samples, 0.02%)</title><rect x="31.7462%" y="805" width="0.0245%" height="15" fill="rgb(225,12,52)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="815.50"></text></g><g><title>chrono::format::DelayedFormat&lt;I&gt;::new_with_offset (2 samples, 0.02%)</title><rect x="31.7462%" y="789" width="0.0245%" height="15" fill="rgb(239,128,45)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="799.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (2 samples, 0.02%)</title><rect x="31.7462%" y="773" width="0.0245%" height="15" fill="rgb(211,78,47)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="783.50"></text></g><g><title>&lt;chrono::offset::fixed::FixedOffset as core::fmt::Display&gt;::fmt (2 samples, 0.02%)</title><rect x="31.7462%" y="757" width="0.0245%" height="15" fill="rgb(232,31,21)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="767.50"></text></g><g><title>&lt;chrono::offset::fixed::FixedOffset as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="31.7462%" y="741" width="0.0245%" height="15" fill="rgb(222,168,14)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="751.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="31.7462%" y="725" width="0.0245%" height="15" fill="rgb(209,128,24)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="735.50"></text></g><g><title>core::fmt::run (2 samples, 0.02%)</title><rect x="31.7462%" y="709" width="0.0245%" height="15" fill="rgb(249,35,13)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_char (2 samples, 0.02%)</title><rect x="31.7462%" y="693" width="0.0245%" height="15" fill="rgb(218,7,2)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="703.50"></text></g><g><title>alloc::string::String::push (2 samples, 0.02%)</title><rect x="31.7462%" y="677" width="0.0245%" height="15" fill="rgb(238,107,27)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="31.7462%" y="661" width="0.0245%" height="15" fill="rgb(217,88,38)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="31.7462%" y="645" width="0.0245%" height="15" fill="rgb(230,207,0)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="31.7462%" y="629" width="0.0245%" height="15" fill="rgb(249,64,54)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="31.7462%" y="613" width="0.0245%" height="15" fill="rgb(231,7,11)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="31.7462%" y="597" width="0.0245%" height="15" fill="rgb(205,149,21)" fg:x="2587" fg:w="2"/><text x="31.9962%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="31.7585%" y="581" width="0.0123%" height="15" fill="rgb(215,126,34)" fg:x="2588" fg:w="1"/><text x="32.0085%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="31.7585%" y="565" width="0.0123%" height="15" fill="rgb(241,132,45)" fg:x="2588" fg:w="1"/><text x="32.0085%" y="575.50"></text></g><g><title>std::panic::catch_unwind (13 samples, 0.16%)</title><rect x="31.6726%" y="1413" width="0.1595%" height="15" fill="rgb(252,69,32)" fg:x="2581" fg:w="13"/><text x="31.9226%" y="1423.50"></text></g><g><title>std::panicking::try (13 samples, 0.16%)</title><rect x="31.6726%" y="1397" width="0.1595%" height="15" fill="rgb(232,204,19)" fg:x="2581" fg:w="13"/><text x="31.9226%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (13 samples, 0.16%)</title><rect x="31.6726%" y="1381" width="0.1595%" height="15" fill="rgb(249,15,47)" fg:x="2581" fg:w="13"/><text x="31.9226%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (13 samples, 0.16%)</title><rect x="31.6726%" y="1365" width="0.1595%" height="15" fill="rgb(209,227,23)" fg:x="2581" fg:w="13"/><text x="31.9226%" y="1375.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (13 samples, 0.16%)</title><rect x="31.6726%" y="1349" width="0.1595%" height="15" fill="rgb(248,92,24)" fg:x="2581" fg:w="13"/><text x="31.9226%" y="1359.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (13 samples, 0.16%)</title><rect x="31.6726%" y="1333" width="0.1595%" height="15" fill="rgb(247,59,2)" fg:x="2581" fg:w="13"/><text x="31.9226%" y="1343.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (13 samples, 0.16%)</title><rect x="31.6726%" y="1317" width="0.1595%" height="15" fill="rgb(221,30,5)" fg:x="2581" fg:w="13"/><text x="31.9226%" y="1327.50"></text></g><g><title>futures_lite::future::block_on (13 samples, 0.16%)</title><rect x="31.6726%" y="1301" width="0.1595%" height="15" fill="rgb(208,108,53)" fg:x="2581" fg:w="13"/><text x="31.9226%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.16%)</title><rect x="31.6726%" y="1285" width="0.1595%" height="15" fill="rgb(211,183,26)" fg:x="2581" fg:w="13"/><text x="31.9226%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.16%)</title><rect x="31.6726%" y="1269" width="0.1595%" height="15" fill="rgb(232,132,4)" fg:x="2581" fg:w="13"/><text x="31.9226%" y="1279.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (13 samples, 0.16%)</title><rect x="31.6726%" y="1253" width="0.1595%" height="15" fill="rgb(253,128,37)" fg:x="2581" fg:w="13"/><text x="31.9226%" y="1263.50"></text></g><g><title>parking::Parker::park (5 samples, 0.06%)</title><rect x="31.7708%" y="1237" width="0.0614%" height="15" fill="rgb(221,58,24)" fg:x="2589" fg:w="5"/><text x="32.0208%" y="1247.50"></text></g><g><title>parking::Inner::park (5 samples, 0.06%)</title><rect x="31.7708%" y="1221" width="0.0614%" height="15" fill="rgb(230,54,45)" fg:x="2589" fg:w="5"/><text x="32.0208%" y="1231.50"></text></g><g><title>std::sync::condvar::Condvar::wait (5 samples, 0.06%)</title><rect x="31.7708%" y="1205" width="0.0614%" height="15" fill="rgb(254,21,18)" fg:x="2589" fg:w="5"/><text x="32.0208%" y="1215.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (5 samples, 0.06%)</title><rect x="31.7708%" y="1189" width="0.0614%" height="15" fill="rgb(221,108,0)" fg:x="2589" fg:w="5"/><text x="32.0208%" y="1199.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (5 samples, 0.06%)</title><rect x="31.7708%" y="1173" width="0.0614%" height="15" fill="rgb(206,95,1)" fg:x="2589" fg:w="5"/><text x="32.0208%" y="1183.50"></text></g><g><title>__pthread_cond_wait (5 samples, 0.06%)</title><rect x="31.7708%" y="1157" width="0.0614%" height="15" fill="rgb(237,52,5)" fg:x="2589" fg:w="5"/><text x="32.0208%" y="1167.50"></text></g><g><title>__futex_abstimed_wait_common64 (5 samples, 0.06%)</title><rect x="31.7708%" y="1141" width="0.0614%" height="15" fill="rgb(218,150,34)" fg:x="2589" fg:w="5"/><text x="32.0208%" y="1151.50"></text></g><g><title>__GI___clone (14 samples, 0.17%)</title><rect x="31.6726%" y="1525" width="0.1718%" height="15" fill="rgb(235,194,28)" fg:x="2581" fg:w="14"/><text x="31.9226%" y="1535.50"></text></g><g><title>start_thread (14 samples, 0.17%)</title><rect x="31.6726%" y="1509" width="0.1718%" height="15" fill="rgb(245,92,18)" fg:x="2581" fg:w="14"/><text x="31.9226%" y="1519.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (14 samples, 0.17%)</title><rect x="31.6726%" y="1493" width="0.1718%" height="15" fill="rgb(253,203,53)" fg:x="2581" fg:w="14"/><text x="31.9226%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.17%)</title><rect x="31.6726%" y="1477" width="0.1718%" height="15" fill="rgb(249,185,47)" fg:x="2581" fg:w="14"/><text x="31.9226%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (14 samples, 0.17%)</title><rect x="31.6726%" y="1461" width="0.1718%" height="15" fill="rgb(252,194,52)" fg:x="2581" fg:w="14"/><text x="31.9226%" y="1471.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (14 samples, 0.17%)</title><rect x="31.6726%" y="1445" width="0.1718%" height="15" fill="rgb(210,53,36)" fg:x="2581" fg:w="14"/><text x="31.9226%" y="1455.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (14 samples, 0.17%)</title><rect x="31.6726%" y="1429" width="0.1718%" height="15" fill="rgb(237,37,25)" fg:x="2581" fg:w="14"/><text x="31.9226%" y="1439.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.01%)</title><rect x="31.8321%" y="1413" width="0.0123%" height="15" fill="rgb(242,116,27)" fg:x="2594" fg:w="1"/><text x="32.0821%" y="1423.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.01%)</title><rect x="31.8321%" y="1397" width="0.0123%" height="15" fill="rgb(213,185,26)" fg:x="2594" fg:w="1"/><text x="32.0821%" y="1407.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="31.8321%" y="1381" width="0.0123%" height="15" fill="rgb(225,204,8)" fg:x="2594" fg:w="1"/><text x="32.0821%" y="1391.50"></text></g><g><title>tcache_init.part.0 (1 samples, 0.01%)</title><rect x="31.8321%" y="1365" width="0.0123%" height="15" fill="rgb(254,111,37)" fg:x="2594" fg:w="1"/><text x="32.0821%" y="1375.50"></text></g><g><title>arena_get2.part.0 (1 samples, 0.01%)</title><rect x="31.8321%" y="1349" width="0.0123%" height="15" fill="rgb(242,35,9)" fg:x="2594" fg:w="1"/><text x="32.0821%" y="1359.50"></text></g><g><title>IO_Task_Pool_(1 (16 samples, 0.20%)</title><rect x="31.6603%" y="1541" width="0.1963%" height="15" fill="rgb(232,138,49)" fg:x="2580" fg:w="16"/><text x="31.9103%" y="1551.50"></text></g><g><title>ahash::random_state::SEED (1 samples, 0.01%)</title><rect x="31.8444%" y="1525" width="0.0123%" height="15" fill="rgb(247,56,4)" fg:x="2595" fg:w="1"/><text x="32.0944%" y="1535.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.01%)</title><rect x="31.8444%" y="1509" width="0.0123%" height="15" fill="rgb(226,179,17)" fg:x="2595" fg:w="1"/><text x="32.0944%" y="1519.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="31.9548%" y="1509" width="0.0245%" height="15" fill="rgb(216,163,45)" fg:x="2604" fg:w="2"/><text x="32.2048%" y="1519.50"></text></g><g><title>__GI___getpid (1 samples, 0.01%)</title><rect x="31.9794%" y="1509" width="0.0123%" height="15" fill="rgb(211,157,3)" fg:x="2606" fg:w="1"/><text x="32.2294%" y="1519.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (1 samples, 0.01%)</title><rect x="31.9917%" y="1509" width="0.0123%" height="15" fill="rgb(234,44,20)" fg:x="2607" fg:w="1"/><text x="32.2417%" y="1519.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (1 samples, 0.01%)</title><rect x="31.9917%" y="1493" width="0.0123%" height="15" fill="rgb(254,138,23)" fg:x="2607" fg:w="1"/><text x="32.2417%" y="1503.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (1 samples, 0.01%)</title><rect x="31.9917%" y="1477" width="0.0123%" height="15" fill="rgb(206,119,39)" fg:x="2607" fg:w="1"/><text x="32.2417%" y="1487.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="31.9917%" y="1461" width="0.0123%" height="15" fill="rgb(231,105,52)" fg:x="2607" fg:w="1"/><text x="32.2417%" y="1471.50"></text></g><g><title>pa_bytes_to_usec (2 samples, 0.02%)</title><rect x="32.0039%" y="1509" width="0.0245%" height="15" fill="rgb(250,20,5)" fg:x="2608" fg:w="2"/><text x="32.2539%" y="1519.50"></text></g><g><title>pa_pstream_send_memblock (1 samples, 0.01%)</title><rect x="32.0285%" y="1509" width="0.0123%" height="15" fill="rgb(215,198,30)" fg:x="2610" fg:w="1"/><text x="32.2785%" y="1519.50"></text></g><g><title>[[heap]] (9 samples, 0.11%)</title><rect x="31.9548%" y="1525" width="0.1104%" height="15" fill="rgb(246,142,8)" fg:x="2604" fg:w="9"/><text x="32.2048%" y="1535.50"></text></g><g><title>pa_threaded_mainloop_lock (2 samples, 0.02%)</title><rect x="32.0407%" y="1509" width="0.0245%" height="15" fill="rgb(243,26,38)" fg:x="2611" fg:w="2"/><text x="32.2907%" y="1519.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="32.0653%" y="1509" width="0.0245%" height="15" fill="rgb(205,133,28)" fg:x="2613" fg:w="2"/><text x="32.3153%" y="1519.50"></text></g><g><title>__GI___getpid (1 samples, 0.01%)</title><rect x="32.0898%" y="1509" width="0.0123%" height="15" fill="rgb(212,34,0)" fg:x="2615" fg:w="1"/><text x="32.3398%" y="1519.50"></text></g><g><title>pa_stream_get_latency (1 samples, 0.01%)</title><rect x="32.1021%" y="1509" width="0.0123%" height="15" fill="rgb(251,226,22)" fg:x="2616" fg:w="1"/><text x="32.3521%" y="1519.50"></text></g><g><title>[anon] (6 samples, 0.07%)</title><rect x="32.0653%" y="1525" width="0.0736%" height="15" fill="rgb(252,119,9)" fg:x="2613" fg:w="6"/><text x="32.3153%" y="1535.50"></text></g><g><title>snd_pcm_writei (2 samples, 0.02%)</title><rect x="32.1144%" y="1509" width="0.0245%" height="15" fill="rgb(213,150,50)" fg:x="2617" fg:w="2"/><text x="32.3644%" y="1519.50"></text></g><g><title>[engine] (9 samples, 0.11%)</title><rect x="32.1389%" y="1525" width="0.1104%" height="15" fill="rgb(212,24,39)" fg:x="2619" fg:w="9"/><text x="32.3889%" y="1535.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.11%)</title><rect x="32.1389%" y="1509" width="0.1104%" height="15" fill="rgb(213,46,39)" fg:x="2619" fg:w="9"/><text x="32.3889%" y="1519.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="32.2494%" y="1525" width="0.0123%" height="15" fill="rgb(239,106,12)" fg:x="2628" fg:w="1"/><text x="32.4994%" y="1535.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.13%)</title><rect x="32.2616%" y="1509" width="0.1350%" height="15" fill="rgb(249,229,21)" fg:x="2629" fg:w="11"/><text x="32.5116%" y="1519.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (1 samples, 0.01%)</title><rect x="32.3966%" y="1493" width="0.0123%" height="15" fill="rgb(212,158,3)" fg:x="2640" fg:w="1"/><text x="32.6466%" y="1503.50"></text></g><g><title>alsa::pcm::PCM::status (1 samples, 0.01%)</title><rect x="32.3966%" y="1477" width="0.0123%" height="15" fill="rgb(253,26,48)" fg:x="2640" fg:w="1"/><text x="32.6466%" y="1487.50"></text></g><g><title>alsa::pcm::StatusBuilder::new (1 samples, 0.01%)</title><rect x="32.3966%" y="1461" width="0.0123%" height="15" fill="rgb(238,178,20)" fg:x="2640" fg:w="1"/><text x="32.6466%" y="1471.50"></text></g><g><title>alsa::pcm::Status::new (1 samples, 0.01%)</title><rect x="32.3966%" y="1445" width="0.0123%" height="15" fill="rgb(208,86,15)" fg:x="2640" fg:w="1"/><text x="32.6466%" y="1455.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (2 samples, 0.02%)</title><rect x="32.3966%" y="1509" width="0.0245%" height="15" fill="rgb(239,42,53)" fg:x="2640" fg:w="2"/><text x="32.6466%" y="1519.50"></text></g><g><title>cpal::host::alsa::process_output (1 samples, 0.01%)</title><rect x="32.4089%" y="1493" width="0.0123%" height="15" fill="rgb(245,226,8)" fg:x="2641" fg:w="1"/><text x="32.6589%" y="1503.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (1 samples, 0.01%)</title><rect x="32.4212%" y="1509" width="0.0123%" height="15" fill="rgb(216,176,32)" fg:x="2642" fg:w="1"/><text x="32.6712%" y="1519.50"></text></g><g><title>pa_memblock_new_pool (1 samples, 0.01%)</title><rect x="32.4334%" y="1509" width="0.0123%" height="15" fill="rgb(231,186,21)" fg:x="2643" fg:w="1"/><text x="32.6834%" y="1519.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.01%)</title><rect x="32.4457%" y="1509" width="0.0123%" height="15" fill="rgb(205,95,49)" fg:x="2644" fg:w="1"/><text x="32.6957%" y="1519.50"></text></g><g><title>pa_stream_get_time (1 samples, 0.01%)</title><rect x="32.4580%" y="1509" width="0.0123%" height="15" fill="rgb(217,145,8)" fg:x="2645" fg:w="1"/><text x="32.7080%" y="1519.50"></text></g><g><title>pa_stream_write_ext_free (1 samples, 0.01%)</title><rect x="32.4702%" y="1509" width="0.0123%" height="15" fill="rgb(239,144,48)" fg:x="2646" fg:w="1"/><text x="32.7202%" y="1519.50"></text></g><g><title>[unknown] (19 samples, 0.23%)</title><rect x="32.2616%" y="1525" width="0.2332%" height="15" fill="rgb(214,189,23)" fg:x="2629" fg:w="19"/><text x="32.5116%" y="1535.50"></text></g><g><title>pulse_poll_deactivate (1 samples, 0.01%)</title><rect x="32.4825%" y="1509" width="0.0123%" height="15" fill="rgb(229,157,17)" fg:x="2647" fg:w="1"/><text x="32.7325%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap_or (1 samples, 0.01%)</title><rect x="32.5193%" y="1285" width="0.0123%" height="15" fill="rgb(230,5,48)" fg:x="2650" fg:w="1"/><text x="32.7693%" y="1295.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="32.5193%" y="1269" width="0.0123%" height="15" fill="rgb(224,156,48)" fg:x="2650" fg:w="1"/><text x="32.7693%" y="1279.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (1 samples, 0.01%)</title><rect x="32.5316%" y="1285" width="0.0123%" height="15" fill="rgb(223,14,29)" fg:x="2651" fg:w="1"/><text x="32.7816%" y="1295.50"></text></g><g><title>pa_stream_get_state (1 samples, 0.01%)</title><rect x="32.5930%" y="1189" width="0.0123%" height="15" fill="rgb(229,96,36)" fg:x="2656" fg:w="1"/><text x="32.8430%" y="1199.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (3 samples, 0.04%)</title><rect x="32.5930%" y="1205" width="0.0368%" height="15" fill="rgb(231,102,53)" fg:x="2656" fg:w="3"/><text x="32.8430%" y="1215.50"></text></g><g><title>pulse_check_connection (2 samples, 0.02%)</title><rect x="32.6052%" y="1189" width="0.0245%" height="15" fill="rgb(210,77,38)" fg:x="2657" fg:w="2"/><text x="32.8552%" y="1199.50"></text></g><g><title>pa_context_get_state (2 samples, 0.02%)</title><rect x="32.6052%" y="1173" width="0.0245%" height="15" fill="rgb(235,131,6)" fg:x="2657" fg:w="2"/><text x="32.8552%" y="1183.50"></text></g><g><title>pa_run_once (1 samples, 0.01%)</title><rect x="32.6298%" y="1173" width="0.0123%" height="15" fill="rgb(252,55,38)" fg:x="2659" fg:w="1"/><text x="32.8798%" y="1183.50"></text></g><g><title>pa_once_begin (1 samples, 0.01%)</title><rect x="32.6298%" y="1157" width="0.0123%" height="15" fill="rgb(246,38,14)" fg:x="2659" fg:w="1"/><text x="32.8798%" y="1167.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (5 samples, 0.06%)</title><rect x="32.5930%" y="1221" width="0.0614%" height="15" fill="rgb(242,27,5)" fg:x="2656" fg:w="5"/><text x="32.8430%" y="1231.50"></text></g><g><title>pa_threaded_mainloop_lock (2 samples, 0.02%)</title><rect x="32.6298%" y="1205" width="0.0245%" height="15" fill="rgb(228,65,35)" fg:x="2659" fg:w="2"/><text x="32.8798%" y="1215.50"></text></g><g><title>pa_thread_self (2 samples, 0.02%)</title><rect x="32.6298%" y="1189" width="0.0245%" height="15" fill="rgb(245,93,11)" fg:x="2659" fg:w="2"/><text x="32.8798%" y="1199.50"></text></g><g><title>pa_tls_get (1 samples, 0.01%)</title><rect x="32.6420%" y="1173" width="0.0123%" height="15" fill="rgb(213,1,31)" fg:x="2660" fg:w="1"/><text x="32.8920%" y="1183.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (10 samples, 0.12%)</title><rect x="32.5439%" y="1269" width="0.1227%" height="15" fill="rgb(237,205,14)" fg:x="2652" fg:w="10"/><text x="32.7939%" y="1279.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (8 samples, 0.10%)</title><rect x="32.5684%" y="1253" width="0.0982%" height="15" fill="rgb(232,118,45)" fg:x="2654" fg:w="8"/><text x="32.8184%" y="1263.50"></text></g><g><title>[libasound.so.2.0.0] (7 samples, 0.09%)</title><rect x="32.5807%" y="1237" width="0.0859%" height="15" fill="rgb(218,5,6)" fg:x="2655" fg:w="7"/><text x="32.8307%" y="1247.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="32.6543%" y="1221" width="0.0123%" height="15" fill="rgb(251,87,51)" fg:x="2661" fg:w="1"/><text x="32.9043%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="32.6666%" y="1269" width="0.0123%" height="15" fill="rgb(207,225,20)" fg:x="2662" fg:w="1"/><text x="32.9166%" y="1279.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.01%)</title><rect x="32.6666%" y="1253" width="0.0123%" height="15" fill="rgb(222,78,54)" fg:x="2662" fg:w="1"/><text x="32.9166%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="32.6666%" y="1237" width="0.0123%" height="15" fill="rgb(232,85,16)" fg:x="2662" fg:w="1"/><text x="32.9166%" y="1247.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.01%)</title><rect x="32.6789%" y="1189" width="0.0123%" height="15" fill="rgb(244,25,33)" fg:x="2663" fg:w="1"/><text x="32.9289%" y="1199.50"></text></g><g><title>alsa::pcm::PCM::avail (2 samples, 0.02%)</title><rect x="32.6789%" y="1269" width="0.0245%" height="15" fill="rgb(233,24,36)" fg:x="2663" fg:w="2"/><text x="32.9289%" y="1279.50"></text></g><g><title>snd_pcm_avail (2 samples, 0.02%)</title><rect x="32.6789%" y="1253" width="0.0245%" height="15" fill="rgb(253,49,54)" fg:x="2663" fg:w="2"/><text x="32.9289%" y="1263.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="32.6789%" y="1237" width="0.0245%" height="15" fill="rgb(245,12,22)" fg:x="2663" fg:w="2"/><text x="32.9289%" y="1247.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="32.6789%" y="1221" width="0.0245%" height="15" fill="rgb(253,141,28)" fg:x="2663" fg:w="2"/><text x="32.9289%" y="1231.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.02%)</title><rect x="32.6789%" y="1205" width="0.0245%" height="15" fill="rgb(225,207,27)" fg:x="2663" fg:w="2"/><text x="32.9289%" y="1215.50"></text></g><g><title>pa_threaded_mainloop_unlock (1 samples, 0.01%)</title><rect x="32.6911%" y="1189" width="0.0123%" height="15" fill="rgb(220,84,2)" fg:x="2664" fg:w="1"/><text x="32.9411%" y="1199.50"></text></g><g><title>pa_thread_self (1 samples, 0.01%)</title><rect x="32.6911%" y="1173" width="0.0123%" height="15" fill="rgb(224,37,37)" fg:x="2664" fg:w="1"/><text x="32.9411%" y="1183.50"></text></g><g><title>pa_run_once (1 samples, 0.01%)</title><rect x="32.6911%" y="1157" width="0.0123%" height="15" fill="rgb(220,143,18)" fg:x="2664" fg:w="1"/><text x="32.9411%" y="1167.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.02%)</title><rect x="32.7157%" y="1173" width="0.0245%" height="15" fill="rgb(210,88,33)" fg:x="2666" fg:w="2"/><text x="32.9657%" y="1183.50"></text></g><g><title>pa_stream_writable_size (1 samples, 0.01%)</title><rect x="32.7279%" y="1157" width="0.0123%" height="15" fill="rgb(219,87,51)" fg:x="2667" fg:w="1"/><text x="32.9779%" y="1167.50"></text></g><g><title>[libasound.so.2.0.0] (4 samples, 0.05%)</title><rect x="32.7034%" y="1205" width="0.0491%" height="15" fill="rgb(211,7,35)" fg:x="2665" fg:w="4"/><text x="32.9534%" y="1215.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (4 samples, 0.05%)</title><rect x="32.7034%" y="1189" width="0.0491%" height="15" fill="rgb(232,77,2)" fg:x="2665" fg:w="4"/><text x="32.9534%" y="1199.50"></text></g><g><title>pa_threaded_mainloop_lock (1 samples, 0.01%)</title><rect x="32.7402%" y="1173" width="0.0123%" height="15" fill="rgb(249,94,25)" fg:x="2668" fg:w="1"/><text x="32.9902%" y="1183.50"></text></g><g><title>pa_bytes_to_usec (2 samples, 0.02%)</title><rect x="32.7648%" y="1173" width="0.0245%" height="15" fill="rgb(215,112,2)" fg:x="2670" fg:w="2"/><text x="33.0148%" y="1183.50"></text></g><g><title>pa_stream_get_latency (4 samples, 0.05%)</title><rect x="32.7525%" y="1189" width="0.0491%" height="15" fill="rgb(226,115,48)" fg:x="2669" fg:w="4"/><text x="33.0025%" y="1199.50"></text></g><g><title>pa_stream_get_time (1 samples, 0.01%)</title><rect x="32.7893%" y="1173" width="0.0123%" height="15" fill="rgb(249,196,10)" fg:x="2672" fg:w="1"/><text x="33.0393%" y="1183.50"></text></g><g><title>pa_smoother_get (1 samples, 0.01%)</title><rect x="32.7893%" y="1157" width="0.0123%" height="15" fill="rgb(237,109,14)" fg:x="2672" fg:w="1"/><text x="33.0393%" y="1167.50"></text></g><g><title>[libasound.so.2.0.0] (9 samples, 0.11%)</title><rect x="32.7034%" y="1221" width="0.1104%" height="15" fill="rgb(217,103,53)" fg:x="2665" fg:w="9"/><text x="32.9534%" y="1231.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (5 samples, 0.06%)</title><rect x="32.7525%" y="1205" width="0.0614%" height="15" fill="rgb(244,137,9)" fg:x="2669" fg:w="5"/><text x="33.0025%" y="1215.50"></text></g><g><title>snd_pcm_bytes_to_frames (1 samples, 0.01%)</title><rect x="32.8016%" y="1189" width="0.0123%" height="15" fill="rgb(227,201,3)" fg:x="2673" fg:w="1"/><text x="33.0516%" y="1199.50"></text></g><g><title>alsa::pcm::PCM::status (10 samples, 0.12%)</title><rect x="32.7034%" y="1269" width="0.1227%" height="15" fill="rgb(243,94,6)" fg:x="2665" fg:w="10"/><text x="32.9534%" y="1279.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (10 samples, 0.12%)</title><rect x="32.7034%" y="1253" width="0.1227%" height="15" fill="rgb(235,118,5)" fg:x="2665" fg:w="10"/><text x="32.9534%" y="1263.50"></text></g><g><title>snd_pcm_status (10 samples, 0.12%)</title><rect x="32.7034%" y="1237" width="0.1227%" height="15" fill="rgb(247,10,30)" fg:x="2665" fg:w="10"/><text x="32.9534%" y="1247.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="32.8138%" y="1221" width="0.0123%" height="15" fill="rgb(205,26,28)" fg:x="2674" fg:w="1"/><text x="33.0638%" y="1231.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (44 samples, 0.54%)</title><rect x="32.5439%" y="1285" width="0.5399%" height="15" fill="rgb(206,99,35)" fg:x="2652" fg:w="44"/><text x="32.7939%" y="1295.50"></text></g><g><title>alsa::poll::poll (21 samples, 0.26%)</title><rect x="32.8261%" y="1269" width="0.2577%" height="15" fill="rgb(238,130,40)" fg:x="2675" fg:w="21"/><text x="33.0761%" y="1279.50"></text></g><g><title>__GI___poll (18 samples, 0.22%)</title><rect x="32.8629%" y="1253" width="0.2209%" height="15" fill="rgb(224,126,31)" fg:x="2678" fg:w="18"/><text x="33.1129%" y="1263.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="33.1206%" y="1205" width="0.0123%" height="15" fill="rgb(254,105,17)" fg:x="2699" fg:w="1"/><text x="33.3706%" y="1215.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (3 samples, 0.04%)</title><rect x="33.1329%" y="1189" width="0.0368%" height="15" fill="rgb(216,87,36)" fg:x="2700" fg:w="3"/><text x="33.3829%" y="1199.50"></text></g><g><title>pa_stream_write (2 samples, 0.02%)</title><rect x="33.1452%" y="1173" width="0.0245%" height="15" fill="rgb(240,21,12)" fg:x="2701" fg:w="2"/><text x="33.3952%" y="1183.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.05%)</title><rect x="33.1820%" y="1157" width="0.0491%" height="15" fill="rgb(245,192,34)" fg:x="2704" fg:w="4"/><text x="33.4320%" y="1167.50"></text></g><g><title>pa_memblock_new (5 samples, 0.06%)</title><rect x="33.2311%" y="1157" width="0.0614%" height="15" fill="rgb(226,100,49)" fg:x="2708" fg:w="5"/><text x="33.4811%" y="1167.50"></text></g><g><title>pa_memblock_new_pool (5 samples, 0.06%)</title><rect x="33.2311%" y="1141" width="0.0614%" height="15" fill="rgb(245,188,27)" fg:x="2708" fg:w="5"/><text x="33.4811%" y="1151.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="33.2802%" y="1125" width="0.0123%" height="15" fill="rgb(212,170,8)" fg:x="2712" fg:w="1"/><text x="33.5302%" y="1135.50"></text></g><g><title>pa_flist_pop (1 samples, 0.01%)</title><rect x="33.2802%" y="1109" width="0.0123%" height="15" fill="rgb(217,113,29)" fg:x="2712" fg:w="1"/><text x="33.5302%" y="1119.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="33.2802%" y="1093" width="0.0123%" height="15" fill="rgb(237,30,3)" fg:x="2712" fg:w="1"/><text x="33.5302%" y="1103.50"></text></g><g><title>pa_memblock_release (1 samples, 0.01%)</title><rect x="33.2924%" y="1157" width="0.0123%" height="15" fill="rgb(227,19,28)" fg:x="2713" fg:w="1"/><text x="33.5424%" y="1167.50"></text></g><g><title>pa_mempool_block_size_max (1 samples, 0.01%)</title><rect x="33.3047%" y="1157" width="0.0123%" height="15" fill="rgb(239,172,45)" fg:x="2714" fg:w="1"/><text x="33.5547%" y="1167.50"></text></g><g><title>pa_flist_pop (1 samples, 0.01%)</title><rect x="33.3170%" y="1141" width="0.0123%" height="15" fill="rgb(254,55,39)" fg:x="2715" fg:w="1"/><text x="33.5670%" y="1151.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="33.3170%" y="1125" width="0.0123%" height="15" fill="rgb(249,208,12)" fg:x="2715" fg:w="1"/><text x="33.5670%" y="1135.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (21 samples, 0.26%)</title><rect x="33.0838%" y="1269" width="0.2577%" height="15" fill="rgb(240,52,13)" fg:x="2696" fg:w="21"/><text x="33.3338%" y="1279.50"></text></g><g><title>[libasound.so.2.0.0] (21 samples, 0.26%)</title><rect x="33.0838%" y="1253" width="0.2577%" height="15" fill="rgb(252,149,13)" fg:x="2696" fg:w="21"/><text x="33.3338%" y="1263.50"></text></g><g><title>[libasound.so.2.0.0] (21 samples, 0.26%)</title><rect x="33.0838%" y="1237" width="0.2577%" height="15" fill="rgb(232,81,48)" fg:x="2696" fg:w="21"/><text x="33.3338%" y="1247.50"></text></g><g><title>[libasound.so.2.0.0] (18 samples, 0.22%)</title><rect x="33.1206%" y="1221" width="0.2209%" height="15" fill="rgb(222,144,2)" fg:x="2699" fg:w="18"/><text x="33.3706%" y="1231.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (17 samples, 0.21%)</title><rect x="33.1329%" y="1205" width="0.2086%" height="15" fill="rgb(216,81,32)" fg:x="2700" fg:w="17"/><text x="33.3829%" y="1215.50"></text></g><g><title>pa_stream_write (14 samples, 0.17%)</title><rect x="33.1697%" y="1189" width="0.1718%" height="15" fill="rgb(244,78,51)" fg:x="2703" fg:w="14"/><text x="33.4197%" y="1199.50"></text></g><g><title>pa_stream_write_ext_free (14 samples, 0.17%)</title><rect x="33.1697%" y="1173" width="0.1718%" height="15" fill="rgb(217,66,21)" fg:x="2703" fg:w="14"/><text x="33.4197%" y="1183.50"></text></g><g><title>pa_pstream_send_memblock (2 samples, 0.02%)</title><rect x="33.3170%" y="1157" width="0.0245%" height="15" fill="rgb(247,101,42)" fg:x="2715" fg:w="2"/><text x="33.5670%" y="1167.50"></text></g><g><title>pa_memblock_ref (1 samples, 0.01%)</title><rect x="33.3292%" y="1141" width="0.0123%" height="15" fill="rgb(227,81,39)" fg:x="2716" fg:w="1"/><text x="33.5792%" y="1151.50"></text></g><g><title>cpal::host::alsa::frames_to_duration (1 samples, 0.01%)</title><rect x="33.3415%" y="1269" width="0.0123%" height="15" fill="rgb(220,223,44)" fg:x="2717" fg:w="1"/><text x="33.5915%" y="1279.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="33.3538%" y="1221" width="0.0245%" height="15" fill="rgb(205,218,2)" fg:x="2718" fg:w="2"/><text x="33.6038%" y="1231.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.20%)</title><rect x="33.4520%" y="1205" width="0.1963%" height="15" fill="rgb(212,207,28)" fg:x="2726" fg:w="16"/><text x="33.7020%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (5 samples, 0.06%)</title><rect x="33.5869%" y="1189" width="0.0614%" height="15" fill="rgb(224,12,41)" fg:x="2737" fg:w="5"/><text x="33.8369%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (5 samples, 0.06%)</title><rect x="33.5869%" y="1173" width="0.0614%" height="15" fill="rgb(216,118,12)" fg:x="2737" fg:w="5"/><text x="33.8369%" y="1183.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (23 samples, 0.28%)</title><rect x="33.3783%" y="1221" width="0.2822%" height="15" fill="rgb(252,97,46)" fg:x="2720" fg:w="23"/><text x="33.6283%" y="1231.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (1 samples, 0.01%)</title><rect x="33.6483%" y="1205" width="0.0123%" height="15" fill="rgb(244,206,19)" fg:x="2742" fg:w="1"/><text x="33.8983%" y="1215.50"></text></g><g><title>__GI___clone (97 samples, 1.19%)</title><rect x="32.4948%" y="1525" width="1.1903%" height="15" fill="rgb(231,84,31)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1535.50"></text></g><g><title>start_thread (97 samples, 1.19%)</title><rect x="32.4948%" y="1509" width="1.1903%" height="15" fill="rgb(244,133,0)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1519.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (97 samples, 1.19%)</title><rect x="32.4948%" y="1493" width="1.1903%" height="15" fill="rgb(223,15,50)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (97 samples, 1.19%)</title><rect x="32.4948%" y="1477" width="1.1903%" height="15" fill="rgb(250,118,49)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (97 samples, 1.19%)</title><rect x="32.4948%" y="1461" width="1.1903%" height="15" fill="rgb(248,25,38)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1471.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (97 samples, 1.19%)</title><rect x="32.4948%" y="1445" width="1.1903%" height="15" fill="rgb(215,70,14)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1455.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (97 samples, 1.19%)</title><rect x="32.4948%" y="1429" width="1.1903%" height="15" fill="rgb(215,28,15)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (97 samples, 1.19%)</title><rect x="32.4948%" y="1413" width="1.1903%" height="15" fill="rgb(243,6,28)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1423.50"></text></g><g><title>std::panicking::try (97 samples, 1.19%)</title><rect x="32.4948%" y="1397" width="1.1903%" height="15" fill="rgb(222,130,1)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (97 samples, 1.19%)</title><rect x="32.4948%" y="1381" width="1.1903%" height="15" fill="rgb(236,166,44)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (97 samples, 1.19%)</title><rect x="32.4948%" y="1365" width="1.1903%" height="15" fill="rgb(221,108,14)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1375.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (97 samples, 1.19%)</title><rect x="32.4948%" y="1349" width="1.1903%" height="15" fill="rgb(252,3,45)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1359.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (97 samples, 1.19%)</title><rect x="32.4948%" y="1333" width="1.1903%" height="15" fill="rgb(237,68,30)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1343.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (97 samples, 1.19%)</title><rect x="32.4948%" y="1317" width="1.1903%" height="15" fill="rgb(211,79,22)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1327.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (97 samples, 1.19%)</title><rect x="32.4948%" y="1301" width="1.1903%" height="15" fill="rgb(252,185,21)" fg:x="2648" fg:w="97"/><text x="32.7448%" y="1311.50"></text></g><g><title>cpal::host::alsa::process_output (49 samples, 0.60%)</title><rect x="33.0838%" y="1285" width="0.6013%" height="15" fill="rgb(225,189,26)" fg:x="2696" fg:w="49"/><text x="33.3338%" y="1295.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (27 samples, 0.33%)</title><rect x="33.3538%" y="1269" width="0.3313%" height="15" fill="rgb(241,30,40)" fg:x="2718" fg:w="27"/><text x="33.6038%" y="1279.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (27 samples, 0.33%)</title><rect x="33.3538%" y="1253" width="0.3313%" height="15" fill="rgb(235,215,44)" fg:x="2718" fg:w="27"/><text x="33.6038%" y="1263.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (27 samples, 0.33%)</title><rect x="33.3538%" y="1237" width="0.3313%" height="15" fill="rgb(205,8,29)" fg:x="2718" fg:w="27"/><text x="33.6038%" y="1247.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (2 samples, 0.02%)</title><rect x="33.6606%" y="1221" width="0.0245%" height="15" fill="rgb(241,137,42)" fg:x="2743" fg:w="2"/><text x="33.9106%" y="1231.50"></text></g><g><title>snd_pcm_avail (1 samples, 0.01%)</title><rect x="33.6851%" y="1525" width="0.0123%" height="15" fill="rgb(237,155,2)" fg:x="2745" fg:w="1"/><text x="33.9351%" y="1535.50"></text></g><g><title>cpal_alsa_out (151 samples, 1.85%)</title><rect x="31.8567%" y="1541" width="1.8530%" height="15" fill="rgb(245,29,42)" fg:x="2596" fg:w="151"/><text x="32.1067%" y="1551.50">c..</text></g><g><title>snd_pcm_poll_descriptors_revents (1 samples, 0.01%)</title><rect x="33.6974%" y="1525" width="0.0123%" height="15" fill="rgb(234,101,35)" fg:x="2746" fg:w="1"/><text x="33.9474%" y="1535.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynEq&gt;::dyn_eq (1 samples, 0.01%)</title><rect x="34.5932%" y="1525" width="0.0123%" height="15" fill="rgb(228,64,37)" fg:x="2819" fg:w="1"/><text x="34.8432%" y="1535.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="34.6055%" y="1525" width="0.0123%" height="15" fill="rgb(217,214,36)" fg:x="2820" fg:w="1"/><text x="34.8555%" y="1535.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close (1 samples, 0.01%)</title><rect x="34.6177%" y="1525" width="0.0123%" height="15" fill="rgb(243,70,3)" fg:x="2821" fg:w="1"/><text x="34.8677%" y="1535.50"></text></g><g><title>&lt;wgpu_core::device::AttachmentData&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="34.6300%" y="1525" width="0.0123%" height="15" fill="rgb(253,158,52)" fg:x="2822" fg:w="1"/><text x="34.8800%" y="1535.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::change (1 samples, 0.01%)</title><rect x="34.6423%" y="1525" width="0.0123%" height="15" fill="rgb(234,111,54)" fg:x="2823" fg:w="1"/><text x="34.8923%" y="1535.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="34.6546%" y="1509" width="0.0368%" height="15" fill="rgb(217,70,32)" fg:x="2824" fg:w="3"/><text x="34.9046%" y="1519.50"></text></g><g><title>&lt;alloc::collections::btree::map::IntoIter&lt;K,V&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="34.6914%" y="1509" width="0.0123%" height="15" fill="rgb(234,18,33)" fg:x="2827" fg:w="1"/><text x="34.9414%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="34.7036%" y="1509" width="0.0123%" height="15" fill="rgb(234,12,49)" fg:x="2828" fg:w="1"/><text x="34.9536%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="34.7159%" y="1509" width="0.0245%" height="15" fill="rgb(236,10,21)" fg:x="2829" fg:w="2"/><text x="34.9659%" y="1519.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="34.7405%" y="1509" width="0.0368%" height="15" fill="rgb(248,182,45)" fg:x="2831" fg:w="3"/><text x="34.9905%" y="1519.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1 samples, 0.01%)</title><rect x="34.7773%" y="1509" width="0.0123%" height="15" fill="rgb(217,95,36)" fg:x="2834" fg:w="1"/><text x="35.0273%" y="1519.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (3 samples, 0.04%)</title><rect x="34.7895%" y="1509" width="0.0368%" height="15" fill="rgb(212,110,31)" fg:x="2835" fg:w="3"/><text x="35.0395%" y="1519.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (1 samples, 0.01%)</title><rect x="34.8141%" y="1493" width="0.0123%" height="15" fill="rgb(206,32,53)" fg:x="2837" fg:w="1"/><text x="35.0641%" y="1503.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="34.8264%" y="1509" width="0.0123%" height="15" fill="rgb(246,141,37)" fg:x="2838" fg:w="1"/><text x="35.0764%" y="1519.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlas as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::get_render_resource (1 samples, 0.01%)</title><rect x="34.8386%" y="1509" width="0.0123%" height="15" fill="rgb(219,16,7)" fg:x="2839" fg:w="1"/><text x="35.0886%" y="1519.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2 samples, 0.02%)</title><rect x="34.9245%" y="1493" width="0.0245%" height="15" fill="rgb(230,205,45)" fg:x="2846" fg:w="2"/><text x="35.1745%" y="1503.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (1 samples, 0.01%)</title><rect x="34.9491%" y="1493" width="0.0123%" height="15" fill="rgb(231,43,49)" fg:x="2848" fg:w="1"/><text x="35.1991%" y="1503.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="34.9491%" y="1477" width="0.0123%" height="15" fill="rgb(212,106,34)" fg:x="2848" fg:w="1"/><text x="35.1991%" y="1487.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.25%)</title><rect x="34.8509%" y="1509" width="0.2454%" height="15" fill="rgb(206,83,17)" fg:x="2840" fg:w="20"/><text x="35.1009%" y="1519.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (11 samples, 0.13%)</title><rect x="34.9613%" y="1493" width="0.1350%" height="15" fill="rgb(244,154,49)" fg:x="2849" fg:w="11"/><text x="35.2113%" y="1503.50"></text></g><g><title>&lt;crossbeam_channel::channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="35.0963%" y="1509" width="0.0123%" height="15" fill="rgb(244,149,49)" fg:x="2860" fg:w="1"/><text x="35.3463%" y="1519.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="35.1086%" y="1509" width="0.0368%" height="15" fill="rgb(227,134,18)" fg:x="2861" fg:w="3"/><text x="35.3586%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (3 samples, 0.04%)</title><rect x="35.1086%" y="1493" width="0.0368%" height="15" fill="rgb(237,116,36)" fg:x="2861" fg:w="3"/><text x="35.3586%" y="1503.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="35.1454%" y="1509" width="0.0123%" height="15" fill="rgb(205,129,40)" fg:x="2864" fg:w="1"/><text x="35.3954%" y="1519.50"></text></g><g><title>&lt;wgpu::CommandBuffer as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="35.1577%" y="1509" width="0.0123%" height="15" fill="rgb(236,178,4)" fg:x="2865" fg:w="1"/><text x="35.4077%" y="1519.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (1 samples, 0.01%)</title><rect x="35.1700%" y="1509" width="0.0123%" height="15" fill="rgb(251,76,53)" fg:x="2866" fg:w="1"/><text x="35.4200%" y="1519.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (1 samples, 0.01%)</title><rect x="35.1822%" y="1509" width="0.0123%" height="15" fill="rgb(242,92,40)" fg:x="2867" fg:w="1"/><text x="35.4322%" y="1519.50"></text></g><g><title>XSync (4 samples, 0.05%)</title><rect x="35.1945%" y="1509" width="0.0491%" height="15" fill="rgb(209,45,30)" fg:x="2868" fg:w="4"/><text x="35.4445%" y="1519.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (3 samples, 0.04%)</title><rect x="35.2436%" y="1493" width="0.0368%" height="15" fill="rgb(218,157,36)" fg:x="2872" fg:w="3"/><text x="35.4936%" y="1503.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="35.2559%" y="1477" width="0.0245%" height="15" fill="rgb(222,186,16)" fg:x="2873" fg:w="2"/><text x="35.5059%" y="1487.50"></text></g><g><title>&lt;lock_api::rwlock::RwLock&lt;R,T&gt; as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="35.2559%" y="1461" width="0.0245%" height="15" fill="rgb(254,72,35)" fg:x="2873" fg:w="2"/><text x="35.5059%" y="1471.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="35.2559%" y="1445" width="0.0245%" height="15" fill="rgb(224,25,35)" fg:x="2873" fg:w="2"/><text x="35.5059%" y="1455.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="35.2559%" y="1429" width="0.0245%" height="15" fill="rgb(206,135,52)" fg:x="2873" fg:w="2"/><text x="35.5059%" y="1439.50"></text></g><g><title>ahash::random_state::RandomState::new (2 samples, 0.02%)</title><rect x="35.2559%" y="1413" width="0.0245%" height="15" fill="rgb(229,174,47)" fg:x="2873" fg:w="2"/><text x="35.5059%" y="1423.50"></text></g><g><title>[engine] (5 samples, 0.06%)</title><rect x="35.2436%" y="1509" width="0.0614%" height="15" fill="rgb(242,184,21)" fg:x="2872" fg:w="5"/><text x="35.4936%" y="1519.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (2 samples, 0.02%)</title><rect x="35.2804%" y="1493" width="0.0245%" height="15" fill="rgb(213,22,45)" fg:x="2875" fg:w="2"/><text x="35.5304%" y="1503.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="35.3049%" y="1509" width="0.0245%" height="15" fill="rgb(237,81,54)" fg:x="2877" fg:w="2"/><text x="35.5549%" y="1519.50"></text></g><g><title>[libX11.so.6.4.0] (4 samples, 0.05%)</title><rect x="35.3295%" y="1509" width="0.0491%" height="15" fill="rgb(248,177,18)" fg:x="2879" fg:w="4"/><text x="35.5795%" y="1519.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (53 samples, 0.65%)</title><rect x="35.3786%" y="1509" width="0.6504%" height="15" fill="rgb(254,31,16)" fg:x="2883" fg:w="53"/><text x="35.6286%" y="1519.50"></text></g><g><title>[libudev.so.1.7.2] (3 samples, 0.04%)</title><rect x="36.0290%" y="1509" width="0.0368%" height="15" fill="rgb(235,20,31)" fg:x="2936" fg:w="3"/><text x="36.2790%" y="1519.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="36.0658%" y="1509" width="0.0245%" height="15" fill="rgb(240,56,43)" fg:x="2939" fg:w="2"/><text x="36.3158%" y="1519.50"></text></g><g><title>_IO_new_file_init_internal (1 samples, 0.01%)</title><rect x="36.0903%" y="1509" width="0.0123%" height="15" fill="rgb(237,197,51)" fg:x="2941" fg:w="1"/><text x="36.3403%" y="1519.50"></text></g><g><title>_XGetRequest (2 samples, 0.02%)</title><rect x="36.1026%" y="1509" width="0.0245%" height="15" fill="rgb(241,162,44)" fg:x="2942" fg:w="2"/><text x="36.3526%" y="1519.50"></text></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="36.1271%" y="1509" width="0.0368%" height="15" fill="rgb(224,23,20)" fg:x="2944" fg:w="3"/><text x="36.3771%" y="1519.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="36.1639%" y="1509" width="0.0123%" height="15" fill="rgb(250,109,34)" fg:x="2947" fg:w="1"/><text x="36.4139%" y="1519.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="36.1762%" y="1509" width="0.0123%" height="15" fill="rgb(214,175,50)" fg:x="2948" fg:w="1"/><text x="36.4262%" y="1519.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="36.1885%" y="1509" width="0.0123%" height="15" fill="rgb(213,182,5)" fg:x="2949" fg:w="1"/><text x="36.4385%" y="1519.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (1 samples, 0.01%)</title><rect x="36.2008%" y="1509" width="0.0123%" height="15" fill="rgb(209,199,19)" fg:x="2950" fg:w="1"/><text x="36.4508%" y="1519.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="36.2130%" y="1509" width="0.0123%" height="15" fill="rgb(236,224,42)" fg:x="2951" fg:w="1"/><text x="36.4630%" y="1519.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="36.2253%" y="1509" width="0.0123%" height="15" fill="rgb(246,226,29)" fg:x="2952" fg:w="1"/><text x="36.4753%" y="1519.50"></text></g><g><title>_int_memalign (1 samples, 0.01%)</title><rect x="36.2376%" y="1509" width="0.0123%" height="15" fill="rgb(227,223,11)" fg:x="2953" fg:w="1"/><text x="36.4876%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.04%)</title><rect x="36.2498%" y="1509" width="0.0368%" height="15" fill="rgb(219,7,51)" fg:x="2954" fg:w="3"/><text x="36.4998%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.04%)</title><rect x="36.2498%" y="1493" width="0.0368%" height="15" fill="rgb(245,167,10)" fg:x="2954" fg:w="3"/><text x="36.4998%" y="1503.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.04%)</title><rect x="36.2498%" y="1477" width="0.0368%" height="15" fill="rgb(237,224,16)" fg:x="2954" fg:w="3"/><text x="36.4998%" y="1487.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.04%)</title><rect x="36.2498%" y="1461" width="0.0368%" height="15" fill="rgb(226,132,13)" fg:x="2954" fg:w="3"/><text x="36.4998%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="36.2867%" y="1509" width="0.0123%" height="15" fill="rgb(214,140,3)" fg:x="2957" fg:w="1"/><text x="36.5367%" y="1519.50"></text></g><g><title>alloc::slice::merge_sort (3 samples, 0.04%)</title><rect x="36.2989%" y="1509" width="0.0368%" height="15" fill="rgb(221,177,4)" fg:x="2958" fg:w="3"/><text x="36.5489%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="36.3357%" y="1509" width="0.0123%" height="15" fill="rgb(238,139,3)" fg:x="2961" fg:w="1"/><text x="36.5857%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.04%)</title><rect x="36.3480%" y="1509" width="0.0368%" height="15" fill="rgb(216,17,39)" fg:x="2962" fg:w="3"/><text x="36.5980%" y="1519.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (1 samples, 0.01%)</title><rect x="36.3848%" y="1509" width="0.0123%" height="15" fill="rgb(238,120,9)" fg:x="2965" fg:w="1"/><text x="36.6348%" y="1519.50"></text></g><g><title>async_task::runnable::Runnable::waker (1 samples, 0.01%)</title><rect x="36.3971%" y="1493" width="0.0123%" height="15" fill="rgb(244,92,53)" fg:x="2966" fg:w="1"/><text x="36.6471%" y="1503.50"></text></g><g><title>async_executor::Executor::spawn (2 samples, 0.02%)</title><rect x="36.3971%" y="1509" width="0.0245%" height="15" fill="rgb(224,148,33)" fg:x="2966" fg:w="2"/><text x="36.6471%" y="1519.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="36.4094%" y="1493" width="0.0123%" height="15" fill="rgb(243,6,36)" fg:x="2967" fg:w="1"/><text x="36.6594%" y="1503.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="36.4094%" y="1477" width="0.0123%" height="15" fill="rgb(230,102,11)" fg:x="2967" fg:w="1"/><text x="36.6594%" y="1487.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="36.4094%" y="1461" width="0.0123%" height="15" fill="rgb(234,148,36)" fg:x="2967" fg:w="1"/><text x="36.6594%" y="1471.50"></text></g><g><title>async_executor::Executor::try_tick (1 samples, 0.01%)</title><rect x="36.4216%" y="1509" width="0.0123%" height="15" fill="rgb(251,153,25)" fg:x="2968" fg:w="1"/><text x="36.6716%" y="1519.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (6 samples, 0.07%)</title><rect x="36.4339%" y="1509" width="0.0736%" height="15" fill="rgb(215,129,8)" fg:x="2969" fg:w="6"/><text x="36.6839%" y="1519.50"></text></g><g><title>async_executor::State::notify (3 samples, 0.04%)</title><rect x="36.5075%" y="1509" width="0.0368%" height="15" fill="rgb(224,128,35)" fg:x="2975" fg:w="3"/><text x="36.7575%" y="1519.50"></text></g><g><title>async_task::header::Header::register (1 samples, 0.01%)</title><rect x="36.5444%" y="1509" width="0.0123%" height="15" fill="rgb(237,56,52)" fg:x="2978" fg:w="1"/><text x="36.7944%" y="1519.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (1 samples, 0.01%)</title><rect x="36.5566%" y="1509" width="0.0123%" height="15" fill="rgb(234,213,19)" fg:x="2979" fg:w="1"/><text x="36.8066%" y="1519.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (2 samples, 0.02%)</title><rect x="36.5689%" y="1509" width="0.0245%" height="15" fill="rgb(252,82,23)" fg:x="2980" fg:w="2"/><text x="36.8189%" y="1519.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_detached (1 samples, 0.01%)</title><rect x="36.5934%" y="1509" width="0.0123%" height="15" fill="rgb(254,201,21)" fg:x="2982" fg:w="1"/><text x="36.8434%" y="1519.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (1 samples, 0.01%)</title><rect x="36.6057%" y="1509" width="0.0123%" height="15" fill="rgb(250,186,11)" fg:x="2983" fg:w="1"/><text x="36.8557%" y="1519.50"></text></g><g><title>bevy_ecs::system::system::System::run (1 samples, 0.01%)</title><rect x="36.6180%" y="1509" width="0.0123%" height="15" fill="rgb(211,174,5)" fg:x="2984" fg:w="1"/><text x="36.8680%" y="1519.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (2 samples, 0.02%)</title><rect x="36.6303%" y="1509" width="0.0245%" height="15" fill="rgb(214,121,10)" fg:x="2985" fg:w="2"/><text x="36.8803%" y="1519.50"></text></g><g><title>bevy_render::render_graph::node::Node::prepare (5 samples, 0.06%)</title><rect x="36.6548%" y="1509" width="0.0614%" height="15" fill="rgb(241,66,2)" fg:x="2987" fg:w="5"/><text x="36.9048%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system::{{closure}} (1 samples, 0.01%)</title><rect x="36.7162%" y="1509" width="0.0123%" height="15" fill="rgb(220,167,19)" fg:x="2992" fg:w="1"/><text x="36.9662%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (1 samples, 0.01%)</title><rect x="36.7284%" y="1509" width="0.0123%" height="15" fill="rgb(231,54,50)" fg:x="2993" fg:w="1"/><text x="36.9784%" y="1519.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (1 samples, 0.01%)</title><rect x="36.7407%" y="1509" width="0.0123%" height="15" fill="rgb(239,217,53)" fg:x="2994" fg:w="1"/><text x="36.9907%" y="1519.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="36.7407%" y="1493" width="0.0123%" height="15" fill="rgb(248,8,0)" fg:x="2994" fg:w="1"/><text x="36.9907%" y="1503.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="36.7407%" y="1477" width="0.0123%" height="15" fill="rgb(229,118,37)" fg:x="2994" fg:w="1"/><text x="36.9907%" y="1487.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="36.7407%" y="1461" width="0.0123%" height="15" fill="rgb(253,223,43)" fg:x="2994" fg:w="1"/><text x="36.9907%" y="1471.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (2 samples, 0.02%)</title><rect x="36.7530%" y="1509" width="0.0245%" height="15" fill="rgb(211,77,36)" fg:x="2995" fg:w="2"/><text x="37.0030%" y="1519.50"></text></g><g><title>bevy_text::text2d::text2d_system (1 samples, 0.01%)</title><rect x="36.7775%" y="1509" width="0.0123%" height="15" fill="rgb(219,3,53)" fg:x="2997" fg:w="1"/><text x="37.0275%" y="1519.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (1 samples, 0.01%)</title><rect x="36.7898%" y="1509" width="0.0123%" height="15" fill="rgb(244,45,42)" fg:x="2998" fg:w="1"/><text x="37.0398%" y="1519.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.01%)</title><rect x="36.8021%" y="1509" width="0.0123%" height="15" fill="rgb(225,95,27)" fg:x="2999" fg:w="1"/><text x="37.0521%" y="1519.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="36.8143%" y="1509" width="0.0123%" height="15" fill="rgb(207,74,8)" fg:x="3000" fg:w="1"/><text x="37.0643%" y="1519.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="36.8143%" y="1493" width="0.0123%" height="15" fill="rgb(243,63,36)" fg:x="3000" fg:w="1"/><text x="37.0643%" y="1503.50"></text></g><g><title>bevy_core::label::entity_labels_system (1 samples, 0.01%)</title><rect x="36.8143%" y="1477" width="0.0123%" height="15" fill="rgb(211,180,12)" fg:x="3000" fg:w="1"/><text x="37.0643%" y="1487.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter (1 samples, 0.01%)</title><rect x="36.8143%" y="1461" width="0.0123%" height="15" fill="rgb(254,166,49)" fg:x="3000" fg:w="1"/><text x="37.0643%" y="1471.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="36.8143%" y="1445" width="0.0123%" height="15" fill="rgb(205,19,0)" fg:x="3000" fg:w="1"/><text x="37.0643%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_resources::WgpuResources&gt; (1 samples, 0.01%)</title><rect x="36.8266%" y="1509" width="0.0123%" height="15" fill="rgb(224,172,32)" fg:x="3001" fg:w="1"/><text x="37.0766%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="36.8389%" y="1509" width="0.0123%" height="15" fill="rgb(254,136,30)" fg:x="3002" fg:w="1"/><text x="37.0889%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;bevy_tasks::task_pool::TaskPool::scope&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}},()&gt;::{{closure}}::{{closure}}&gt;&gt; (3 samples, 0.04%)</title><rect x="36.8511%" y="1509" width="0.0368%" height="15" fill="rgb(246,19,35)" fg:x="3003" fg:w="3"/><text x="37.1011%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlatMap&lt;alloc::collections::btree::map::IntoIter&lt;u32,smallvec::SmallVec&lt;[gfx_hal::pso::descriptor::Descriptor&lt;gfx_backend_vulkan::Backend&gt;: 1]&gt;&gt;,smallvec::SmallVec&lt;[gfx_hal::pso::descriptor::Descriptor&lt;gfx_backend_vulkan::Backend&gt;: 1]&gt;,wgpu_core::device::Device&lt;gfx_backend_vulkan::Backend&gt;::create_bind_group&lt;wgpu_core::hub::IdentityManagerFactory&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="36.8880%" y="1509" width="0.0123%" height="15" fill="rgb(219,24,36)" fg:x="3006" fg:w="1"/><text x="37.1380%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::flatten::FlattenCompat&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;u32,smallvec::SmallVec&lt;[gfx_hal::pso::descriptor::Descriptor&lt;gfx_backend_vulkan::Backend&gt;: 1]&gt;&gt;,wgpu_core::device::Device&lt;gfx_backend_vulkan::Backend&gt;::create_bind_group&lt;wgpu_core::hub::IdentityManagerFactory&gt;::{{closure}}&gt;,smallvec::IntoIter&lt;[gfx_hal::pso::descriptor::Descriptor&lt;gfx_backend_vulkan::Backend&gt;: 1]&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="36.8880%" y="1493" width="0.0123%" height="15" fill="rgb(251,55,1)" fg:x="3006" fg:w="1"/><text x="37.1380%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::fuse::Fuse&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;u32,smallvec::SmallVec&lt;[gfx_hal::pso::descriptor::Descriptor&lt;gfx_backend_vulkan::Backend&gt;: 1]&gt;&gt;,wgpu_core::device::Device&lt;gfx_backend_vulkan::Backend&gt;::create_bind_group&lt;wgpu_core::hub::IdentityManagerFactory&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="36.8880%" y="1477" width="0.0123%" height="15" fill="rgb(218,117,39)" fg:x="3006" fg:w="1"/><text x="37.1380%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;u32,smallvec::SmallVec&lt;[gfx_hal::pso::descriptor::Descriptor&lt;gfx_backend_vulkan::Backend&gt;: 1]&gt;&gt;,wgpu_core::device::Device&lt;gfx_backend_vulkan::Backend&gt;::create_bind_group&lt;wgpu_core::hub::IdentityManagerFactory&gt;::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="36.8880%" y="1461" width="0.0123%" height="15" fill="rgb(248,169,11)" fg:x="3006" fg:w="1"/><text x="37.1380%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::collections::btree::map::IntoIter&lt;u32,smallvec::SmallVec&lt;[gfx_hal::pso::descriptor::Descriptor&lt;gfx_backend_vulkan::Backend&gt;: 1]&gt;&gt;,wgpu_core::device::Device&lt;gfx_backend_vulkan::Backend&gt;::create_bind_group&lt;wgpu_core::hub::IdentityManagerFactory&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="36.8880%" y="1445" width="0.0123%" height="15" fill="rgb(244,40,44)" fg:x="3006" fg:w="1"/><text x="37.1380%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::btree::map::IntoIter&lt;u32,smallvec::SmallVec&lt;[gfx_hal::pso::descriptor::Descriptor&lt;gfx_backend_vulkan::Backend&gt;: 1]&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="36.8880%" y="1429" width="0.0123%" height="15" fill="rgb(234,62,37)" fg:x="3006" fg:w="1"/><text x="37.1380%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.01%)</title><rect x="36.9002%" y="1509" width="0.0123%" height="15" fill="rgb(207,117,42)" fg:x="3007" fg:w="1"/><text x="37.1502%" y="1519.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="36.9002%" y="1493" width="0.0123%" height="15" fill="rgb(213,43,2)" fg:x="3007" fg:w="1"/><text x="37.1502%" y="1503.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="36.9125%" y="1509" width="0.0123%" height="15" fill="rgb(244,202,51)" fg:x="3008" fg:w="1"/><text x="37.1625%" y="1519.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="36.9125%" y="1493" width="0.0123%" height="15" fill="rgb(253,174,46)" fg:x="3008" fg:w="1"/><text x="37.1625%" y="1503.50"></text></g><g><title>egui::context::Context::end_frame (1 samples, 0.01%)</title><rect x="36.9248%" y="1509" width="0.0123%" height="15" fill="rgb(251,23,1)" fg:x="3009" fg:w="1"/><text x="37.1748%" y="1519.50"></text></g><g><title>egui::id::Id::with (1 samples, 0.01%)</title><rect x="36.9370%" y="1509" width="0.0123%" height="15" fill="rgb(253,26,1)" fg:x="3010" fg:w="1"/><text x="37.1870%" y="1519.50"></text></g><g><title>fgetc (1 samples, 0.01%)</title><rect x="36.9493%" y="1509" width="0.0123%" height="15" fill="rgb(216,89,31)" fg:x="3011" fg:w="1"/><text x="37.1993%" y="1519.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event (1 samples, 0.01%)</title><rect x="36.9616%" y="1509" width="0.0123%" height="15" fill="rgb(209,109,5)" fg:x="3012" fg:w="1"/><text x="37.2116%" y="1519.50"></text></g><g><title>glslang::TFunction::TFunction (1 samples, 0.01%)</title><rect x="36.9739%" y="1509" width="0.0123%" height="15" fill="rgb(229,63,13)" fg:x="3013" fg:w="1"/><text x="37.2239%" y="1519.50"></text></g><g><title>glslang::TFunction::~TFunction (1 samples, 0.01%)</title><rect x="36.9861%" y="1509" width="0.0123%" height="15" fill="rgb(238,137,54)" fg:x="3014" fg:w="1"/><text x="37.2361%" y="1519.50"></text></g><g><title>glslang::TPpContext::tInput::peekPasting (1 samples, 0.01%)</title><rect x="36.9984%" y="1509" width="0.0123%" height="15" fill="rgb(228,1,9)" fg:x="3015" fg:w="1"/><text x="37.2484%" y="1519.50"></text></g><g><title>glslang::TPpContext::tokenPaste (2 samples, 0.02%)</title><rect x="37.0107%" y="1509" width="0.0245%" height="15" fill="rgb(249,120,48)" fg:x="3016" fg:w="2"/><text x="37.2607%" y="1519.50"></text></g><g><title>glslang::TSymbolTableLevel::readOnly (1 samples, 0.01%)</title><rect x="37.0352%" y="1509" width="0.0123%" height="15" fill="rgb(209,72,36)" fg:x="3018" fg:w="1"/><text x="37.2852%" y="1519.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (1 samples, 0.01%)</title><rect x="37.0475%" y="1509" width="0.0123%" height="15" fill="rgb(247,98,49)" fg:x="3019" fg:w="1"/><text x="37.2975%" y="1519.50"></text></g><g><title>glslang::TType::deepCopy (1 samples, 0.01%)</title><rect x="37.0598%" y="1509" width="0.0123%" height="15" fill="rgb(233,75,36)" fg:x="3020" fg:w="1"/><text x="37.3098%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (2 samples, 0.02%)</title><rect x="37.0720%" y="1509" width="0.0245%" height="15" fill="rgb(225,14,24)" fg:x="3021" fg:w="2"/><text x="37.3220%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.04%)</title><rect x="37.0966%" y="1509" width="0.0368%" height="15" fill="rgb(237,193,20)" fg:x="3023" fg:w="3"/><text x="37.3466%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="37.1334%" y="1509" width="0.0245%" height="15" fill="rgb(239,122,19)" fg:x="3026" fg:w="2"/><text x="37.3834%" y="1519.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (1 samples, 0.01%)</title><rect x="37.1579%" y="1509" width="0.0123%" height="15" fill="rgb(231,220,10)" fg:x="3028" fg:w="1"/><text x="37.4079%" y="1519.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="37.1702%" y="1509" width="0.0123%" height="15" fill="rgb(220,66,15)" fg:x="3029" fg:w="1"/><text x="37.4202%" y="1519.50"></text></g><g><title>inplace_it::guards::uninitialized_slice_memory_guard::UninitializedSliceMemoryGuard&lt;T&gt;::init_with_dyn_iter (1 samples, 0.01%)</title><rect x="37.1825%" y="1509" width="0.0123%" height="15" fill="rgb(215,171,52)" fg:x="3030" fg:w="1"/><text x="37.4325%" y="1519.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="37.1947%" y="1509" width="0.0123%" height="15" fill="rgb(241,169,50)" fg:x="3031" fg:w="1"/><text x="37.4447%" y="1519.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (2 samples, 0.02%)</title><rect x="37.2070%" y="1509" width="0.0245%" height="15" fill="rgb(236,189,0)" fg:x="3032" fg:w="2"/><text x="37.4570%" y="1519.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="37.2316%" y="1509" width="0.0123%" height="15" fill="rgb(217,147,20)" fg:x="3034" fg:w="1"/><text x="37.4816%" y="1519.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::assign (1 samples, 0.01%)</title><rect x="37.2438%" y="1509" width="0.0123%" height="15" fill="rgb(206,188,39)" fg:x="3035" fg:w="1"/><text x="37.4938%" y="1519.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="37.2561%" y="1509" width="0.0123%" height="15" fill="rgb(227,118,25)" fg:x="3036" fg:w="1"/><text x="37.5061%" y="1519.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::reserve (1 samples, 0.01%)</title><rect x="37.2684%" y="1509" width="0.0123%" height="15" fill="rgb(248,171,40)" fg:x="3037" fg:w="1"/><text x="37.5184%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.04%)</title><rect x="37.2806%" y="1509" width="0.0368%" height="15" fill="rgb(251,90,54)" fg:x="3038" fg:w="3"/><text x="37.5306%" y="1519.50"></text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (1 samples, 0.01%)</title><rect x="37.3175%" y="1509" width="0.0123%" height="15" fill="rgb(234,11,46)" fg:x="3041" fg:w="1"/><text x="37.5675%" y="1519.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate (1 samples, 0.01%)</title><rect x="37.3297%" y="1509" width="0.0123%" height="15" fill="rgb(229,134,13)" fg:x="3042" fg:w="1"/><text x="37.5797%" y="1519.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate_for_thread_id (1 samples, 0.01%)</title><rect x="37.3420%" y="1509" width="0.0123%" height="15" fill="rgb(223,129,3)" fg:x="3043" fg:w="1"/><text x="37.5920%" y="1519.50"></text></g><g><title>wgpu_core::command::query::QueryResetMap&lt;B&gt;::reset_queries (1 samples, 0.01%)</title><rect x="37.3543%" y="1509" width="0.0123%" height="15" fill="rgb(221,124,13)" fg:x="3044" fg:w="1"/><text x="37.6043%" y="1519.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1 samples, 0.01%)</title><rect x="37.3665%" y="1509" width="0.0123%" height="15" fill="rgb(234,3,18)" fg:x="3045" fg:w="1"/><text x="37.6165%" y="1519.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (1 samples, 0.01%)</title><rect x="37.3665%" y="1493" width="0.0123%" height="15" fill="rgb(249,199,20)" fg:x="3045" fg:w="1"/><text x="37.6165%" y="1503.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (1 samples, 0.01%)</title><rect x="37.3665%" y="1477" width="0.0123%" height="15" fill="rgb(224,134,6)" fg:x="3045" fg:w="1"/><text x="37.6165%" y="1487.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="37.3788%" y="1493" width="0.0123%" height="15" fill="rgb(254,83,26)" fg:x="3046" fg:w="1"/><text x="37.6288%" y="1503.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start (2 samples, 0.02%)</title><rect x="37.3788%" y="1509" width="0.0245%" height="15" fill="rgb(217,88,9)" fg:x="3046" fg:w="2"/><text x="37.6288%" y="1519.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (1 samples, 0.01%)</title><rect x="37.3911%" y="1493" width="0.0123%" height="15" fill="rgb(225,73,2)" fg:x="3047" fg:w="1"/><text x="37.6411%" y="1503.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (1 samples, 0.01%)</title><rect x="37.3911%" y="1477" width="0.0123%" height="15" fill="rgb(226,44,39)" fg:x="3047" fg:w="1"/><text x="37.6411%" y="1487.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::bind_group_drop (1 samples, 0.01%)</title><rect x="37.4034%" y="1509" width="0.0123%" height="15" fill="rgb(228,53,17)" fg:x="3048" fg:w="1"/><text x="37.6534%" y="1519.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_get_mapped_range (1 samples, 0.01%)</title><rect x="37.4156%" y="1509" width="0.0123%" height="15" fill="rgb(212,27,27)" fg:x="3049" fg:w="1"/><text x="37.6656%" y="1519.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (2 samples, 0.02%)</title><rect x="37.4279%" y="1509" width="0.0245%" height="15" fill="rgb(241,50,6)" fg:x="3050" fg:w="2"/><text x="37.6779%" y="1519.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::handle_mapping (3 samples, 0.04%)</title><rect x="37.4524%" y="1509" width="0.0368%" height="15" fill="rgb(225,28,51)" fg:x="3052" fg:w="3"/><text x="37.7024%" y="1519.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (3 samples, 0.04%)</title><rect x="37.4893%" y="1509" width="0.0368%" height="15" fill="rgb(215,33,16)" fg:x="3055" fg:w="3"/><text x="37.7393%" y="1519.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (1 samples, 0.01%)</title><rect x="37.5261%" y="1509" width="0.0123%" height="15" fill="rgb(243,40,39)" fg:x="3058" fg:w="1"/><text x="37.7761%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;gfx_backend_vulkan::native::DescriptorSetLayout&gt;&gt; (1 samples, 0.01%)</title><rect x="37.5383%" y="1493" width="0.0123%" height="15" fill="rgb(225,11,42)" fg:x="3059" fg:w="1"/><text x="37.7883%" y="1503.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (2 samples, 0.02%)</title><rect x="37.5383%" y="1509" width="0.0245%" height="15" fill="rgb(241,220,38)" fg:x="3059" fg:w="2"/><text x="37.7883%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;gfx_backend_vulkan::native::Framebuffer&gt;&gt; (1 samples, 0.01%)</title><rect x="37.5506%" y="1493" width="0.0123%" height="15" fill="rgb(244,52,35)" fg:x="3060" fg:w="1"/><text x="37.8006%" y="1503.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="37.5506%" y="1477" width="0.0123%" height="15" fill="rgb(246,42,46)" fg:x="3060" fg:w="1"/><text x="37.8006%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;gfx_backend_vulkan::native::Framebuffer,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="37.5506%" y="1461" width="0.0123%" height="15" fill="rgb(205,184,13)" fg:x="3060" fg:w="1"/><text x="37.8006%" y="1471.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;B&gt;&gt;::borrow_pending_writes (1 samples, 0.01%)</title><rect x="37.5629%" y="1509" width="0.0123%" height="15" fill="rgb(209,48,36)" fg:x="3061" fg:w="1"/><text x="37.8129%" y="1519.50"></text></g><g><title>wgpu_core::device::unmap_buffer (1 samples, 0.01%)</title><rect x="37.5752%" y="1509" width="0.0123%" height="15" fill="rgb(244,34,51)" fg:x="3062" fg:w="1"/><text x="37.8252%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="37.5752%" y="1493" width="0.0123%" height="15" fill="rgb(221,107,33)" fg:x="3062" fg:w="1"/><text x="37.8252%" y="1503.50"></text></g><g><title>wgpu_core::hub::IdentityManager::alloc (1 samples, 0.01%)</title><rect x="37.5874%" y="1509" width="0.0123%" height="15" fill="rgb(224,203,12)" fg:x="3063" fg:w="1"/><text x="37.8374%" y="1519.50"></text></g><g><title>wgpu_core::hub::IdentityManager::free (1 samples, 0.01%)</title><rect x="37.5997%" y="1509" width="0.0123%" height="15" fill="rgb(230,215,18)" fg:x="3064" fg:w="1"/><text x="37.8497%" y="1519.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (1 samples, 0.01%)</title><rect x="37.5997%" y="1493" width="0.0123%" height="15" fill="rgb(206,185,35)" fg:x="3064" fg:w="1"/><text x="37.8497%" y="1503.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (1 samples, 0.01%)</title><rect x="37.5997%" y="1477" width="0.0123%" height="15" fill="rgb(228,140,34)" fg:x="3064" fg:w="1"/><text x="37.8497%" y="1487.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register (1 samples, 0.01%)</title><rect x="37.6120%" y="1509" width="0.0123%" height="15" fill="rgb(208,93,13)" fg:x="3065" fg:w="1"/><text x="37.8620%" y="1519.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="37.6242%" y="1509" width="0.0123%" height="15" fill="rgb(221,193,39)" fg:x="3066" fg:w="1"/><text x="37.8742%" y="1519.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (1 samples, 0.01%)</title><rect x="37.6365%" y="1509" width="0.0123%" height="15" fill="rgb(241,132,34)" fg:x="3067" fg:w="1"/><text x="37.8865%" y="1519.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (1 samples, 0.01%)</title><rect x="37.6365%" y="1493" width="0.0123%" height="15" fill="rgb(221,141,10)" fg:x="3067" fg:w="1"/><text x="37.8865%" y="1503.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (1 samples, 0.01%)</title><rect x="37.6365%" y="1477" width="0.0123%" height="15" fill="rgb(226,90,31)" fg:x="3067" fg:w="1"/><text x="37.8865%" y="1487.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (4 samples, 0.05%)</title><rect x="37.6488%" y="1509" width="0.0491%" height="15" fill="rgb(243,75,5)" fg:x="3068" fg:w="4"/><text x="37.8988%" y="1519.50"></text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::change (3 samples, 0.04%)</title><rect x="37.6979%" y="1509" width="0.0368%" height="15" fill="rgb(227,156,21)" fg:x="3072" fg:w="3"/><text x="37.9479%" y="1519.50"></text></g><g><title>x11_dl::xinput2::XIMaskIsSet (1 samples, 0.01%)</title><rect x="37.7347%" y="1509" width="0.0123%" height="15" fill="rgb(250,195,8)" fg:x="3075" fg:w="1"/><text x="37.9847%" y="1519.50"></text></g><g><title>[[heap]] (254 samples, 3.12%)</title><rect x="34.6546%" y="1525" width="3.1169%" height="15" fill="rgb(220,134,5)" fg:x="2824" fg:w="254"/><text x="34.9046%" y="1535.50">[[h..</text></g><g><title>xcb_send_request (2 samples, 0.02%)</title><rect x="37.7470%" y="1509" width="0.0245%" height="15" fill="rgb(246,106,34)" fg:x="3076" fg:w="2"/><text x="37.9970%" y="1519.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="37.7715%" y="1509" width="0.0123%" height="15" fill="rgb(205,1,4)" fg:x="3078" fg:w="1"/><text x="38.0215%" y="1519.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="37.7838%" y="1509" width="0.0245%" height="15" fill="rgb(224,151,29)" fg:x="3079" fg:w="2"/><text x="38.0338%" y="1519.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="37.8083%" y="1509" width="0.0614%" height="15" fill="rgb(251,196,0)" fg:x="3081" fg:w="5"/><text x="38.0583%" y="1519.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="37.8697%" y="1509" width="0.0123%" height="15" fill="rgb(212,127,0)" fg:x="3086" fg:w="1"/><text x="38.1197%" y="1519.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="37.8819%" y="1509" width="0.0123%" height="15" fill="rgb(236,71,53)" fg:x="3087" fg:w="1"/><text x="38.1319%" y="1519.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="37.8942%" y="1509" width="0.0123%" height="15" fill="rgb(227,99,0)" fg:x="3088" fg:w="1"/><text x="38.1442%" y="1519.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="37.9065%" y="1509" width="0.0123%" height="15" fill="rgb(239,89,21)" fg:x="3089" fg:w="1"/><text x="38.1565%" y="1519.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare (1 samples, 0.01%)</title><rect x="37.9188%" y="1509" width="0.0123%" height="15" fill="rgb(243,122,19)" fg:x="3090" fg:w="1"/><text x="38.1688%" y="1519.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (3 samples, 0.04%)</title><rect x="37.9310%" y="1509" width="0.0368%" height="15" fill="rgb(229,192,45)" fg:x="3091" fg:w="3"/><text x="38.1810%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;bevy_render::draw::RenderCommand&gt;&gt; (2 samples, 0.02%)</title><rect x="37.9433%" y="1493" width="0.0245%" height="15" fill="rgb(235,165,35)" fg:x="3092" fg:w="2"/><text x="38.1933%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="37.9678%" y="1509" width="0.0123%" height="15" fill="rgb(253,202,0)" fg:x="3094" fg:w="1"/><text x="38.2178%" y="1519.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="37.9678%" y="1493" width="0.0123%" height="15" fill="rgb(235,51,20)" fg:x="3094" fg:w="1"/><text x="38.2178%" y="1503.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::get_output (1 samples, 0.01%)</title><rect x="37.9678%" y="1477" width="0.0123%" height="15" fill="rgb(218,95,46)" fg:x="3094" fg:w="1"/><text x="38.2178%" y="1487.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="37.9801%" y="1509" width="0.0123%" height="15" fill="rgb(212,81,10)" fg:x="3095" fg:w="1"/><text x="38.2301%" y="1519.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="37.9924%" y="1509" width="0.0123%" height="15" fill="rgb(240,59,0)" fg:x="3096" fg:w="1"/><text x="38.2424%" y="1519.50"></text></g><g><title>&lt;crossbeam_channel::channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="38.0047%" y="1509" width="0.0123%" height="15" fill="rgb(212,191,42)" fg:x="3097" fg:w="1"/><text x="38.2547%" y="1519.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (1 samples, 0.01%)</title><rect x="38.0169%" y="1509" width="0.0123%" height="15" fill="rgb(233,140,3)" fg:x="3098" fg:w="1"/><text x="38.2669%" y="1519.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_viewports (1 samples, 0.01%)</title><rect x="38.0292%" y="1509" width="0.0123%" height="15" fill="rgb(215,69,23)" fg:x="3099" fg:w="1"/><text x="38.2792%" y="1519.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="38.0292%" y="1493" width="0.0123%" height="15" fill="rgb(240,202,20)" fg:x="3099" fg:w="1"/><text x="38.2792%" y="1503.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (1 samples, 0.01%)</title><rect x="38.0292%" y="1477" width="0.0123%" height="15" fill="rgb(209,146,50)" fg:x="3099" fg:w="1"/><text x="38.2792%" y="1487.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="38.0415%" y="1509" width="0.0245%" height="15" fill="rgb(253,102,54)" fg:x="3100" fg:w="2"/><text x="38.2915%" y="1519.50"></text></g><g><title>&lt;gpu_alloc_types::types::MemoryPropertyFlags as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="38.0660%" y="1509" width="0.0123%" height="15" fill="rgb(250,173,47)" fg:x="3102" fg:w="1"/><text x="38.3160%" y="1519.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="38.0783%" y="1509" width="0.0123%" height="15" fill="rgb(232,142,7)" fg:x="3103" fg:w="1"/><text x="38.3283%" y="1519.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="38.0906%" y="1509" width="0.0123%" height="15" fill="rgb(230,157,47)" fg:x="3104" fg:w="1"/><text x="38.3406%" y="1519.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="38.1028%" y="1509" width="0.0245%" height="15" fill="rgb(214,177,35)" fg:x="3105" fg:w="2"/><text x="38.3528%" y="1519.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="38.1151%" y="1493" width="0.0123%" height="15" fill="rgb(234,119,46)" fg:x="3106" fg:w="1"/><text x="38.3651%" y="1503.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="38.1151%" y="1477" width="0.0123%" height="15" fill="rgb(241,180,50)" fg:x="3106" fg:w="1"/><text x="38.3651%" y="1487.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (1 samples, 0.01%)</title><rect x="38.1274%" y="1509" width="0.0123%" height="15" fill="rgb(221,54,25)" fg:x="3107" fg:w="1"/><text x="38.3774%" y="1519.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="38.1274%" y="1493" width="0.0123%" height="15" fill="rgb(209,157,44)" fg:x="3107" fg:w="1"/><text x="38.3774%" y="1503.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (2 samples, 0.02%)</title><rect x="38.1396%" y="1509" width="0.0245%" height="15" fill="rgb(246,115,41)" fg:x="3108" fg:w="2"/><text x="38.3896%" y="1519.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (1 samples, 0.01%)</title><rect x="38.1642%" y="1509" width="0.0123%" height="15" fill="rgb(229,86,1)" fg:x="3110" fg:w="1"/><text x="38.4142%" y="1519.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="38.1765%" y="1509" width="0.0123%" height="15" fill="rgb(240,108,53)" fg:x="3111" fg:w="1"/><text x="38.4265%" y="1519.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.21%)</title><rect x="38.1887%" y="1509" width="0.2086%" height="15" fill="rgb(227,134,2)" fg:x="3112" fg:w="17"/><text x="38.4387%" y="1519.50"></text></g><g><title>[libudev.so.1.7.2] (1 samples, 0.01%)</title><rect x="38.3973%" y="1509" width="0.0123%" height="15" fill="rgb(213,129,25)" fg:x="3129" fg:w="1"/><text x="38.6473%" y="1519.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="38.3973%" y="1493" width="0.0123%" height="15" fill="rgb(226,35,21)" fg:x="3129" fg:w="1"/><text x="38.6473%" y="1503.50"></text></g><g><title>_IO_no_init (1 samples, 0.01%)</title><rect x="38.4096%" y="1509" width="0.0123%" height="15" fill="rgb(208,129,26)" fg:x="3130" fg:w="1"/><text x="38.6596%" y="1519.50"></text></g><g><title>__GI__IO_default_xsputn (3 samples, 0.04%)</title><rect x="38.4219%" y="1509" width="0.0368%" height="15" fill="rgb(224,83,6)" fg:x="3131" fg:w="3"/><text x="38.6719%" y="1519.50"></text></g><g><title>__GI__IO_setb (1 samples, 0.01%)</title><rect x="38.4587%" y="1509" width="0.0123%" height="15" fill="rgb(227,52,39)" fg:x="3134" fg:w="1"/><text x="38.7087%" y="1519.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="38.4710%" y="1509" width="0.0123%" height="15" fill="rgb(241,30,17)" fg:x="3135" fg:w="1"/><text x="38.7210%" y="1519.50"></text></g><g><title>__pthread_cleanup_pop (1 samples, 0.01%)</title><rect x="38.4832%" y="1509" width="0.0123%" height="15" fill="rgb(246,186,42)" fg:x="3136" fg:w="1"/><text x="38.7332%" y="1519.50"></text></g><g><title>__vsnprintf_internal (2 samples, 0.02%)</title><rect x="38.4955%" y="1509" width="0.0245%" height="15" fill="rgb(221,169,15)" fg:x="3137" fg:w="2"/><text x="38.7455%" y="1519.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="38.5201%" y="1509" width="0.0123%" height="15" fill="rgb(235,108,21)" fg:x="3139" fg:w="1"/><text x="38.7701%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="38.5323%" y="1509" width="0.0123%" height="15" fill="rgb(219,148,30)" fg:x="3140" fg:w="1"/><text x="38.7823%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.05%)</title><rect x="38.5446%" y="1509" width="0.0491%" height="15" fill="rgb(220,109,5)" fg:x="3141" fg:w="4"/><text x="38.7946%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.05%)</title><rect x="38.5446%" y="1493" width="0.0491%" height="15" fill="rgb(213,203,48)" fg:x="3141" fg:w="4"/><text x="38.7946%" y="1503.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (4 samples, 0.05%)</title><rect x="38.5446%" y="1477" width="0.0491%" height="15" fill="rgb(244,71,33)" fg:x="3141" fg:w="4"/><text x="38.7946%" y="1487.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (4 samples, 0.05%)</title><rect x="38.5446%" y="1461" width="0.0491%" height="15" fill="rgb(209,23,2)" fg:x="3141" fg:w="4"/><text x="38.7946%" y="1471.50"></text></g><g><title>async_executor::Executor::try_tick (8 samples, 0.10%)</title><rect x="38.5937%" y="1509" width="0.0982%" height="15" fill="rgb(219,97,7)" fg:x="3145" fg:w="8"/><text x="38.8437%" y="1519.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4 samples, 0.05%)</title><rect x="38.6428%" y="1493" width="0.0491%" height="15" fill="rgb(216,161,23)" fg:x="3149" fg:w="4"/><text x="38.8928%" y="1503.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (8 samples, 0.10%)</title><rect x="38.6919%" y="1509" width="0.0982%" height="15" fill="rgb(207,45,42)" fg:x="3153" fg:w="8"/><text x="38.9419%" y="1519.50"></text></g><g><title>async_executor::Executor::try_tick (1 samples, 0.01%)</title><rect x="38.7778%" y="1493" width="0.0123%" height="15" fill="rgb(241,61,4)" fg:x="3160" fg:w="1"/><text x="39.0278%" y="1503.50"></text></g><g><title>async_task::runnable::Runnable::run (1 samples, 0.01%)</title><rect x="38.7778%" y="1477" width="0.0123%" height="15" fill="rgb(236,170,1)" fg:x="3160" fg:w="1"/><text x="39.0278%" y="1487.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="38.7900%" y="1509" width="0.0123%" height="15" fill="rgb(239,72,5)" fg:x="3161" fg:w="1"/><text x="39.0400%" y="1519.50"></text></g><g><title>async_task::header::Header::register (8 samples, 0.10%)</title><rect x="38.8023%" y="1509" width="0.0982%" height="15" fill="rgb(214,13,50)" fg:x="3162" fg:w="8"/><text x="39.0523%" y="1519.50"></text></g><g><title>async_task::utils::abort_on_panic (3 samples, 0.04%)</title><rect x="38.8637%" y="1493" width="0.0368%" height="15" fill="rgb(224,88,9)" fg:x="3167" fg:w="3"/><text x="39.1137%" y="1503.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (3 samples, 0.04%)</title><rect x="38.8637%" y="1477" width="0.0368%" height="15" fill="rgb(238,192,34)" fg:x="3167" fg:w="3"/><text x="39.1137%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (3 samples, 0.04%)</title><rect x="38.8637%" y="1461" width="0.0368%" height="15" fill="rgb(217,203,50)" fg:x="3167" fg:w="3"/><text x="39.1137%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (3 samples, 0.04%)</title><rect x="38.8637%" y="1445" width="0.0368%" height="15" fill="rgb(241,123,32)" fg:x="3167" fg:w="3"/><text x="39.1137%" y="1455.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="38.8637%" y="1429" width="0.0368%" height="15" fill="rgb(248,151,39)" fg:x="3167" fg:w="3"/><text x="39.1137%" y="1439.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (2 samples, 0.02%)</title><rect x="38.9005%" y="1509" width="0.0245%" height="15" fill="rgb(208,89,6)" fg:x="3170" fg:w="2"/><text x="39.1505%" y="1519.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="38.9250%" y="1509" width="0.0123%" height="15" fill="rgb(254,43,26)" fg:x="3172" fg:w="1"/><text x="39.1750%" y="1519.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="38.9250%" y="1493" width="0.0123%" height="15" fill="rgb(216,158,13)" fg:x="3172" fg:w="1"/><text x="39.1750%" y="1503.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="38.9250%" y="1477" width="0.0123%" height="15" fill="rgb(212,47,37)" fg:x="3172" fg:w="1"/><text x="39.1750%" y="1487.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (1 samples, 0.01%)</title><rect x="38.9373%" y="1509" width="0.0123%" height="15" fill="rgb(254,16,10)" fg:x="3173" fg:w="1"/><text x="39.1873%" y="1519.50"></text></g><g><title>bevy_ecs::entity::Entities::get (1 samples, 0.01%)</title><rect x="38.9373%" y="1493" width="0.0123%" height="15" fill="rgb(223,228,16)" fg:x="3173" fg:w="1"/><text x="39.1873%" y="1503.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_or_insert_with (2 samples, 0.02%)</title><rect x="38.9496%" y="1509" width="0.0245%" height="15" fill="rgb(249,108,50)" fg:x="3174" fg:w="2"/><text x="39.1996%" y="1519.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldBorrow&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="38.9741%" y="1509" width="0.0245%" height="15" fill="rgb(208,220,5)" fg:x="3176" fg:w="2"/><text x="39.2241%" y="1519.50"></text></g><g><title>bevy_ecs::world::world_cell::ArchetypeComponentAccess::read (1 samples, 0.01%)</title><rect x="38.9864%" y="1493" width="0.0123%" height="15" fill="rgb(217,89,48)" fg:x="3177" fg:w="1"/><text x="39.2364%" y="1503.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (1 samples, 0.01%)</title><rect x="38.9864%" y="1477" width="0.0123%" height="15" fill="rgb(212,113,41)" fg:x="3177" fg:w="1"/><text x="39.2364%" y="1487.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource (3 samples, 0.04%)</title><rect x="38.9987%" y="1509" width="0.0368%" height="15" fill="rgb(231,127,5)" fg:x="3178" fg:w="3"/><text x="39.2487%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (1 samples, 0.01%)</title><rect x="39.0355%" y="1509" width="0.0123%" height="15" fill="rgb(217,141,17)" fg:x="3181" fg:w="1"/><text x="39.2855%" y="1519.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (1 samples, 0.01%)</title><rect x="39.0477%" y="1509" width="0.0123%" height="15" fill="rgb(245,125,54)" fg:x="3182" fg:w="1"/><text x="39.2977%" y="1519.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (4 samples, 0.05%)</title><rect x="39.0600%" y="1509" width="0.0491%" height="15" fill="rgb(248,125,3)" fg:x="3183" fg:w="4"/><text x="39.3100%" y="1519.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (2 samples, 0.02%)</title><rect x="39.1091%" y="1509" width="0.0245%" height="15" fill="rgb(236,119,51)" fg:x="3187" fg:w="2"/><text x="39.3591%" y="1519.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="39.1336%" y="1509" width="0.0123%" height="15" fill="rgb(239,99,8)" fg:x="3189" fg:w="1"/><text x="39.3836%" y="1519.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.01%)</title><rect x="39.1459%" y="1509" width="0.0123%" height="15" fill="rgb(224,228,4)" fg:x="3190" fg:w="1"/><text x="39.3959%" y="1519.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (4 samples, 0.05%)</title><rect x="39.1582%" y="1509" width="0.0491%" height="15" fill="rgb(220,131,45)" fg:x="3191" fg:w="4"/><text x="39.4082%" y="1519.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="39.1950%" y="1493" width="0.0123%" height="15" fill="rgb(215,62,5)" fg:x="3194" fg:w="1"/><text x="39.4450%" y="1503.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="39.1950%" y="1477" width="0.0123%" height="15" fill="rgb(253,12,24)" fg:x="3194" fg:w="1"/><text x="39.4450%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="39.2073%" y="1509" width="0.0123%" height="15" fill="rgb(248,120,50)" fg:x="3195" fg:w="1"/><text x="39.4573%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_console::console_system::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="39.2195%" y="1509" width="0.0123%" height="15" fill="rgb(245,194,10)" fg:x="3196" fg:w="1"/><text x="39.4695%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext&gt; (1 samples, 0.01%)</title><rect x="39.2318%" y="1509" width="0.0123%" height="15" fill="rgb(241,149,38)" fg:x="3197" fg:w="1"/><text x="39.4818%" y="1519.50"></text></g><g><title>egui::context::CtxRef::begin_frame (1 samples, 0.01%)</title><rect x="39.2441%" y="1509" width="0.0123%" height="15" fill="rgb(219,215,7)" fg:x="3198" fg:w="1"/><text x="39.4941%" y="1519.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::next_event (1 samples, 0.01%)</title><rect x="39.2564%" y="1509" width="0.0123%" height="15" fill="rgb(208,120,31)" fg:x="3199" fg:w="1"/><text x="39.5064%" y="1519.50"></text></g><g><title>glslang::TInputScanner::get (4 samples, 0.05%)</title><rect x="39.2686%" y="1509" width="0.0491%" height="15" fill="rgb(244,30,8)" fg:x="3200" fg:w="4"/><text x="39.5186%" y="1519.50"></text></g><g><title>glslang::TInputScanner::unget (1 samples, 0.01%)</title><rect x="39.3177%" y="1509" width="0.0123%" height="15" fill="rgb(238,35,44)" fg:x="3204" fg:w="1"/><text x="39.5677%" y="1519.50"></text></g><g><title>glslang::TParseContext::declareVariable (1 samples, 0.01%)</title><rect x="39.3300%" y="1509" width="0.0123%" height="15" fill="rgb(243,218,37)" fg:x="3205" fg:w="1"/><text x="39.5800%" y="1519.50"></text></g><g><title>glslang::TParseContext::handleFunctionDeclarator (1 samples, 0.01%)</title><rect x="39.3423%" y="1509" width="0.0123%" height="15" fill="rgb(218,169,10)" fg:x="3206" fg:w="1"/><text x="39.5923%" y="1519.50"></text></g><g><title>glslang::TParseContextBase::renameShaderFunction (1 samples, 0.01%)</title><rect x="39.3545%" y="1509" width="0.0123%" height="15" fill="rgb(221,144,10)" fg:x="3207" fg:w="1"/><text x="39.6045%" y="1519.50"></text></g><g><title>glslang::TPoolAllocator::allocate (1 samples, 0.01%)</title><rect x="39.3668%" y="1509" width="0.0123%" height="15" fill="rgb(226,41,38)" fg:x="3208" fg:w="1"/><text x="39.6168%" y="1519.50"></text></g><g><title>glslang::TType::buildMangledName (2 samples, 0.02%)</title><rect x="39.3791%" y="1509" width="0.0245%" height="15" fill="rgb(228,3,1)" fg:x="3209" fg:w="2"/><text x="39.6291%" y="1519.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (1 samples, 0.01%)</title><rect x="39.4036%" y="1509" width="0.0123%" height="15" fill="rgb(209,129,12)" fg:x="3211" fg:w="1"/><text x="39.6536%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="39.4159%" y="1509" width="0.0123%" height="15" fill="rgb(213,136,33)" fg:x="3212" fg:w="1"/><text x="39.6659%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="39.4282%" y="1509" width="0.0245%" height="15" fill="rgb(209,181,29)" fg:x="3213" fg:w="2"/><text x="39.6782%" y="1519.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="39.4527%" y="1509" width="0.0123%" height="15" fill="rgb(234,173,18)" fg:x="3215" fg:w="1"/><text x="39.7027%" y="1519.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.01%)</title><rect x="39.4650%" y="1509" width="0.0123%" height="15" fill="rgb(227,73,47)" fg:x="3216" fg:w="1"/><text x="39.7150%" y="1519.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="39.4650%" y="1493" width="0.0123%" height="15" fill="rgb(234,9,34)" fg:x="3216" fg:w="1"/><text x="39.7150%" y="1503.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="39.4650%" y="1477" width="0.0123%" height="15" fill="rgb(235,172,15)" fg:x="3216" fg:w="1"/><text x="39.7150%" y="1487.50"></text></g><g><title>parking::Unparker::unpark (2 samples, 0.02%)</title><rect x="39.4772%" y="1509" width="0.0245%" height="15" fill="rgb(245,61,2)" fg:x="3217" fg:w="2"/><text x="39.7272%" y="1519.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="39.4895%" y="1493" width="0.0123%" height="15" fill="rgb(238,39,47)" fg:x="3218" fg:w="1"/><text x="39.7395%" y="1503.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="39.4895%" y="1477" width="0.0123%" height="15" fill="rgb(234,37,24)" fg:x="3218" fg:w="1"/><text x="39.7395%" y="1487.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="39.4895%" y="1461" width="0.0123%" height="15" fill="rgb(248,223,24)" fg:x="3218" fg:w="1"/><text x="39.7395%" y="1471.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="39.4895%" y="1445" width="0.0123%" height="15" fill="rgb(223,12,15)" fg:x="3218" fg:w="1"/><text x="39.7395%" y="1455.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (3 samples, 0.04%)</title><rect x="39.5018%" y="1509" width="0.0368%" height="15" fill="rgb(249,6,3)" fg:x="3219" fg:w="3"/><text x="39.7518%" y="1519.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.01%)</title><rect x="39.5386%" y="1509" width="0.0123%" height="15" fill="rgb(237,105,33)" fg:x="3222" fg:w="1"/><text x="39.7886%" y="1519.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="39.5509%" y="1509" width="0.0123%" height="15" fill="rgb(252,208,35)" fg:x="3223" fg:w="1"/><text x="39.8009%" y="1519.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="39.5631%" y="1509" width="0.0123%" height="15" fill="rgb(215,181,35)" fg:x="3224" fg:w="1"/><text x="39.8131%" y="1519.50"></text></g><g><title>std::sys::unix::thread_local_dtor::register_dtor (1 samples, 0.01%)</title><rect x="39.5754%" y="1509" width="0.0123%" height="15" fill="rgb(246,212,3)" fg:x="3225" fg:w="1"/><text x="39.8254%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.15%)</title><rect x="39.5877%" y="1509" width="0.1473%" height="15" fill="rgb(247,156,24)" fg:x="3226" fg:w="12"/><text x="39.8377%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.12%)</title><rect x="39.6122%" y="1493" width="0.1227%" height="15" fill="rgb(248,9,31)" fg:x="3228" fg:w="10"/><text x="39.8622%" y="1503.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (3 samples, 0.04%)</title><rect x="39.6981%" y="1477" width="0.0368%" height="15" fill="rgb(234,26,45)" fg:x="3235" fg:w="3"/><text x="39.9481%" y="1487.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="39.6981%" y="1461" width="0.0368%" height="15" fill="rgb(249,11,32)" fg:x="3235" fg:w="3"/><text x="39.9481%" y="1471.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="39.6981%" y="1445" width="0.0368%" height="15" fill="rgb(249,162,33)" fg:x="3235" fg:w="3"/><text x="39.9481%" y="1455.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="39.6981%" y="1429" width="0.0368%" height="15" fill="rgb(232,4,32)" fg:x="3235" fg:w="3"/><text x="39.9481%" y="1439.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (1 samples, 0.01%)</title><rect x="39.7349%" y="1509" width="0.0123%" height="15" fill="rgb(212,5,45)" fg:x="3238" fg:w="1"/><text x="39.9849%" y="1519.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="39.7472%" y="1509" width="0.0123%" height="15" fill="rgb(227,95,13)" fg:x="3239" fg:w="1"/><text x="39.9972%" y="1519.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::track_submission (2 samples, 0.02%)</title><rect x="39.7595%" y="1509" width="0.0245%" height="15" fill="rgb(223,205,10)" fg:x="3240" fg:w="2"/><text x="40.0095%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(wgpu_core::device::queue::TempResource&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::device::alloc::MemoryBlock&lt;gfx_backend_vulkan::Backend&gt;)&gt;&gt; (2 samples, 0.02%)</title><rect x="39.7595%" y="1493" width="0.0245%" height="15" fill="rgb(222,178,8)" fg:x="3240" fg:w="2"/><text x="40.0095%" y="1503.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (1 samples, 0.01%)</title><rect x="39.7840%" y="1509" width="0.0123%" height="15" fill="rgb(216,13,22)" fg:x="3242" fg:w="1"/><text x="40.0340%" y="1519.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::extend (2 samples, 0.02%)</title><rect x="39.7963%" y="1509" width="0.0245%" height="15" fill="rgb(240,167,12)" fg:x="3243" fg:w="2"/><text x="40.0463%" y="1519.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (1 samples, 0.01%)</title><rect x="39.8208%" y="1509" width="0.0123%" height="15" fill="rgb(235,68,35)" fg:x="3245" fg:w="1"/><text x="40.0708%" y="1519.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (1 samples, 0.01%)</title><rect x="39.8331%" y="1509" width="0.0123%" height="15" fill="rgb(253,40,27)" fg:x="3246" fg:w="1"/><text x="40.0831%" y="1519.50"></text></g><g><title>winit::platform_impl::platform::x11::GenericEventCookie::from_event (1 samples, 0.01%)</title><rect x="39.8331%" y="1493" width="0.0123%" height="15" fill="rgb(214,19,28)" fg:x="3246" fg:w="1"/><text x="40.0831%" y="1503.50"></text></g><g><title>[[stack]] (170 samples, 2.09%)</title><rect x="37.7715%" y="1525" width="2.0861%" height="15" fill="rgb(210,167,45)" fg:x="3078" fg:w="170"/><text x="38.0215%" y="1535.50">[..</text></g><g><title>yylex (1 samples, 0.01%)</title><rect x="39.8454%" y="1509" width="0.0123%" height="15" fill="rgb(232,97,40)" fg:x="3247" fg:w="1"/><text x="40.0954%" y="1519.50"></text></g><g><title>[[vdso]] (8 samples, 0.10%)</title><rect x="39.8577%" y="1525" width="0.0982%" height="15" fill="rgb(250,35,23)" fg:x="3248" fg:w="8"/><text x="40.1077%" y="1535.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="39.9558%" y="1509" width="0.0614%" height="15" fill="rgb(248,47,53)" fg:x="3256" fg:w="5"/><text x="40.2058%" y="1519.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="40.0172%" y="1509" width="0.0123%" height="15" fill="rgb(226,58,50)" fg:x="3261" fg:w="1"/><text x="40.2672%" y="1519.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="40.0172%" y="1493" width="0.0123%" height="15" fill="rgb(217,105,26)" fg:x="3261" fg:w="1"/><text x="40.2672%" y="1503.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="40.0295%" y="1509" width="0.0123%" height="15" fill="rgb(208,64,1)" fg:x="3262" fg:w="1"/><text x="40.2795%" y="1519.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (1 samples, 0.01%)</title><rect x="40.0417%" y="1509" width="0.0123%" height="15" fill="rgb(214,80,1)" fg:x="3263" fg:w="1"/><text x="40.2917%" y="1519.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="40.0417%" y="1493" width="0.0123%" height="15" fill="rgb(206,175,26)" fg:x="3263" fg:w="1"/><text x="40.2917%" y="1503.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="40.0417%" y="1477" width="0.0123%" height="15" fill="rgb(235,156,37)" fg:x="3263" fg:w="1"/><text x="40.2917%" y="1487.50"></text></g><g><title>event_listener::List::notify (2 samples, 0.02%)</title><rect x="40.0540%" y="1509" width="0.0245%" height="15" fill="rgb(213,100,9)" fg:x="3264" fg:w="2"/><text x="40.3040%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="40.0785%" y="1509" width="0.0123%" height="15" fill="rgb(241,15,13)" fg:x="3266" fg:w="1"/><text x="40.3285%" y="1519.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="40.0908%" y="1509" width="0.0123%" height="15" fill="rgb(205,97,43)" fg:x="3267" fg:w="1"/><text x="40.3408%" y="1519.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_grow (1 samples, 0.01%)</title><rect x="40.1031%" y="1509" width="0.0123%" height="15" fill="rgb(216,106,32)" fg:x="3268" fg:w="1"/><text x="40.3531%" y="1519.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (1 samples, 0.01%)</title><rect x="40.1154%" y="1509" width="0.0123%" height="15" fill="rgb(226,200,8)" fg:x="3269" fg:w="1"/><text x="40.3654%" y="1519.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (1 samples, 0.01%)</title><rect x="40.1276%" y="1493" width="0.0123%" height="15" fill="rgb(244,54,29)" fg:x="3270" fg:w="1"/><text x="40.3776%" y="1503.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="40.1276%" y="1477" width="0.0123%" height="15" fill="rgb(252,169,12)" fg:x="3270" fg:w="1"/><text x="40.3776%" y="1487.50"></text></g><g><title>[anon] (16 samples, 0.20%)</title><rect x="39.9558%" y="1525" width="0.1963%" height="15" fill="rgb(231,199,11)" fg:x="3256" fg:w="16"/><text x="40.2058%" y="1535.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (2 samples, 0.02%)</title><rect x="40.1276%" y="1509" width="0.0245%" height="15" fill="rgb(233,191,18)" fg:x="3270" fg:w="2"/><text x="40.3776%" y="1519.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.01%)</title><rect x="40.1399%" y="1493" width="0.0123%" height="15" fill="rgb(215,83,47)" fg:x="3271" fg:w="1"/><text x="40.3899%" y="1503.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="40.1522%" y="1509" width="0.0123%" height="15" fill="rgb(251,67,19)" fg:x="3272" fg:w="1"/><text x="40.4022%" y="1519.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynHash&gt;::dyn_hash (1 samples, 0.01%)</title><rect x="40.1644%" y="1509" width="0.0123%" height="15" fill="rgb(240,7,20)" fg:x="3273" fg:w="1"/><text x="40.4144%" y="1519.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (1 samples, 0.01%)</title><rect x="40.1767%" y="1509" width="0.0123%" height="15" fill="rgb(210,150,26)" fg:x="3274" fg:w="1"/><text x="40.4267%" y="1519.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (1 samples, 0.01%)</title><rect x="40.1767%" y="1493" width="0.0123%" height="15" fill="rgb(228,75,42)" fg:x="3274" fg:w="1"/><text x="40.4267%" y="1503.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (2 samples, 0.02%)</title><rect x="40.1890%" y="1509" width="0.0245%" height="15" fill="rgb(237,134,48)" fg:x="3275" fg:w="2"/><text x="40.4390%" y="1519.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (1 samples, 0.01%)</title><rect x="40.2135%" y="1509" width="0.0123%" height="15" fill="rgb(205,80,50)" fg:x="3277" fg:w="1"/><text x="40.4635%" y="1519.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="40.2258%" y="1509" width="0.0368%" height="15" fill="rgb(217,74,48)" fg:x="3278" fg:w="3"/><text x="40.4758%" y="1519.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="40.2503%" y="1493" width="0.0123%" height="15" fill="rgb(205,82,50)" fg:x="3280" fg:w="1"/><text x="40.5003%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (1 samples, 0.01%)</title><rect x="40.2503%" y="1477" width="0.0123%" height="15" fill="rgb(228,1,33)" fg:x="3280" fg:w="1"/><text x="40.5003%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (1 samples, 0.01%)</title><rect x="40.2503%" y="1461" width="0.0123%" height="15" fill="rgb(214,50,23)" fg:x="3280" fg:w="1"/><text x="40.5003%" y="1471.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="40.2503%" y="1445" width="0.0123%" height="15" fill="rgb(210,62,9)" fg:x="3280" fg:w="1"/><text x="40.5003%" y="1455.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="40.2503%" y="1429" width="0.0123%" height="15" fill="rgb(210,104,37)" fg:x="3280" fg:w="1"/><text x="40.5003%" y="1439.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="40.2503%" y="1413" width="0.0123%" height="15" fill="rgb(232,104,43)" fg:x="3280" fg:w="1"/><text x="40.5003%" y="1423.50"></text></g><g><title>__GI__IO_default_xsputn (1 samples, 0.01%)</title><rect x="40.2626%" y="1509" width="0.0123%" height="15" fill="rgb(244,52,6)" fg:x="3281" fg:w="1"/><text x="40.5126%" y="1519.50"></text></g><g><title>async_task::header::Header::register (1 samples, 0.01%)</title><rect x="40.2749%" y="1509" width="0.0123%" height="15" fill="rgb(211,174,52)" fg:x="3282" fg:w="1"/><text x="40.5249%" y="1519.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="40.2872%" y="1509" width="0.0123%" height="15" fill="rgb(229,48,4)" fg:x="3283" fg:w="1"/><text x="40.5372%" y="1519.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6 samples, 0.07%)</title><rect x="40.2994%" y="1509" width="0.0736%" height="15" fill="rgb(205,155,16)" fg:x="3284" fg:w="6"/><text x="40.5494%" y="1519.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (2 samples, 0.02%)</title><rect x="40.3731%" y="1509" width="0.0245%" height="15" fill="rgb(211,141,53)" fg:x="3290" fg:w="2"/><text x="40.6231%" y="1519.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare::{{closure}} (1 samples, 0.01%)</title><rect x="40.3853%" y="1493" width="0.0123%" height="15" fill="rgb(240,148,11)" fg:x="3291" fg:w="1"/><text x="40.6353%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;,alloc::vec::Vec&lt;bevy_render::draw::RenderCommand&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="40.3853%" y="1477" width="0.0123%" height="15" fill="rgb(214,45,23)" fg:x="3291" fg:w="1"/><text x="40.6353%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;,alloc::vec::Vec&lt;bevy_render::draw::RenderCommand&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="40.3853%" y="1461" width="0.0123%" height="15" fill="rgb(248,74,26)" fg:x="3291" fg:w="1"/><text x="40.6353%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;,alloc::vec::Vec&lt;bevy_render::draw::RenderCommand&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="40.3853%" y="1445" width="0.0123%" height="15" fill="rgb(218,121,16)" fg:x="3291" fg:w="1"/><text x="40.6353%" y="1455.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="40.3853%" y="1429" width="0.0123%" height="15" fill="rgb(218,10,47)" fg:x="3291" fg:w="1"/><text x="40.6353%" y="1439.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldBorrow&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="40.3976%" y="1509" width="0.0123%" height="15" fill="rgb(227,99,14)" fg:x="3292" fg:w="1"/><text x="40.6476%" y="1519.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldBorrowMut&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="40.4099%" y="1509" width="0.0123%" height="15" fill="rgb(229,83,46)" fg:x="3293" fg:w="1"/><text x="40.6599%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (1 samples, 0.01%)</title><rect x="40.4221%" y="1509" width="0.0123%" height="15" fill="rgb(228,25,1)" fg:x="3294" fg:w="1"/><text x="40.6721%" y="1519.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (20 samples, 0.25%)</title><rect x="40.4344%" y="1509" width="0.2454%" height="15" fill="rgb(252,190,15)" fg:x="3295" fg:w="20"/><text x="40.6844%" y="1519.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="40.6798%" y="1509" width="0.0123%" height="15" fill="rgb(213,103,51)" fg:x="3315" fg:w="1"/><text x="40.9298%" y="1519.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.01%)</title><rect x="40.6921%" y="1509" width="0.0123%" height="15" fill="rgb(220,38,44)" fg:x="3316" fg:w="1"/><text x="40.9421%" y="1519.50"></text></g><g><title>event_listener::Event::inner (1 samples, 0.01%)</title><rect x="40.6921%" y="1493" width="0.0123%" height="15" fill="rgb(210,45,26)" fg:x="3316" fg:w="1"/><text x="40.9421%" y="1503.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="40.6921%" y="1477" width="0.0123%" height="15" fill="rgb(205,95,48)" fg:x="3316" fg:w="1"/><text x="40.9421%" y="1487.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="40.6921%" y="1461" width="0.0123%" height="15" fill="rgb(225,179,37)" fg:x="3316" fg:w="1"/><text x="40.9421%" y="1471.50"></text></g><g><title>glslang::TPpContext::tStringInput::scan (2 samples, 0.02%)</title><rect x="40.7044%" y="1509" width="0.0245%" height="15" fill="rgb(230,209,3)" fg:x="3317" fg:w="2"/><text x="40.9544%" y="1519.50"></text></g><g><title>glslang::TPpContext::tokenize (3 samples, 0.04%)</title><rect x="40.7289%" y="1509" width="0.0368%" height="15" fill="rgb(248,12,46)" fg:x="3319" fg:w="3"/><text x="40.9789%" y="1519.50"></text></g><g><title>glslang::TScanContext::tokenize (1 samples, 0.01%)</title><rect x="40.7657%" y="1509" width="0.0123%" height="15" fill="rgb(234,18,0)" fg:x="3322" fg:w="1"/><text x="41.0157%" y="1519.50"></text></g><g><title>glslang::TScanContext::tokenizeIdentifier (1 samples, 0.01%)</title><rect x="40.7780%" y="1509" width="0.0123%" height="15" fill="rgb(238,197,14)" fg:x="3323" fg:w="1"/><text x="41.0280%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (2 samples, 0.02%)</title><rect x="40.7903%" y="1509" width="0.0245%" height="15" fill="rgb(251,162,48)" fg:x="3324" fg:w="2"/><text x="41.0403%" y="1519.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create (2 samples, 0.02%)</title><rect x="40.8148%" y="1509" width="0.0245%" height="15" fill="rgb(237,73,42)" fg:x="3326" fg:w="2"/><text x="41.0648%" y="1519.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create_with (2 samples, 0.02%)</title><rect x="40.8394%" y="1509" width="0.0245%" height="15" fill="rgb(211,108,8)" fg:x="3328" fg:w="2"/><text x="41.0894%" y="1519.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="40.8639%" y="1509" width="0.0123%" height="15" fill="rgb(213,45,22)" fg:x="3330" fg:w="1"/><text x="41.1139%" y="1519.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (1 samples, 0.01%)</title><rect x="40.8762%" y="1509" width="0.0123%" height="15" fill="rgb(252,154,5)" fg:x="3331" fg:w="1"/><text x="41.1262%" y="1519.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (1 samples, 0.01%)</title><rect x="40.8885%" y="1509" width="0.0123%" height="15" fill="rgb(221,79,52)" fg:x="3332" fg:w="1"/><text x="41.1385%" y="1519.50"></text></g><g><title>[engine] (62 samples, 0.76%)</title><rect x="40.1522%" y="1525" width="0.7608%" height="15" fill="rgb(229,220,36)" fg:x="3272" fg:w="62"/><text x="40.4022%" y="1535.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (1 samples, 0.01%)</title><rect x="40.9007%" y="1509" width="0.0123%" height="15" fill="rgb(211,17,16)" fg:x="3333" fg:w="1"/><text x="41.1507%" y="1519.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="41.0234%" y="1397" width="0.0123%" height="15" fill="rgb(222,55,31)" fg:x="3343" fg:w="1"/><text x="41.2734%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="41.0234%" y="1381" width="0.0123%" height="15" fill="rgb(221,221,31)" fg:x="3343" fg:w="1"/><text x="41.2734%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="41.0234%" y="1365" width="0.0123%" height="15" fill="rgb(227,168,26)" fg:x="3343" fg:w="1"/><text x="41.2734%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="41.0234%" y="1349" width="0.0123%" height="15" fill="rgb(224,139,9)" fg:x="3343" fg:w="1"/><text x="41.2734%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="41.0234%" y="1333" width="0.0123%" height="15" fill="rgb(254,172,0)" fg:x="3343" fg:w="1"/><text x="41.2734%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="41.0234%" y="1317" width="0.0123%" height="15" fill="rgb(235,203,1)" fg:x="3343" fg:w="1"/><text x="41.2734%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.09%)</title><rect x="40.9744%" y="1413" width="0.0859%" height="15" fill="rgb(216,205,24)" fg:x="3339" fg:w="7"/><text x="41.2244%" y="1423.50"></text></g><g><title>__calloc (2 samples, 0.02%)</title><rect x="41.0357%" y="1397" width="0.0245%" height="15" fill="rgb(233,24,6)" fg:x="3344" fg:w="2"/><text x="41.2857%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (9 samples, 0.11%)</title><rect x="40.9621%" y="1429" width="0.1104%" height="15" fill="rgb(244,110,9)" fg:x="3338" fg:w="9"/><text x="41.2121%" y="1439.50"></text></g><g><title>__GI_____strtoll_l_internal (1 samples, 0.01%)</title><rect x="41.0603%" y="1413" width="0.0123%" height="15" fill="rgb(239,222,42)" fg:x="3346" fg:w="1"/><text x="41.3103%" y="1423.50"></text></g><g><title>__GI_____strtoull_l_internal (1 samples, 0.01%)</title><rect x="41.0725%" y="1429" width="0.0123%" height="15" fill="rgb(218,145,13)" fg:x="3347" fg:w="1"/><text x="41.3225%" y="1439.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="41.0848%" y="1429" width="0.0123%" height="15" fill="rgb(207,69,11)" fg:x="3348" fg:w="1"/><text x="41.3348%" y="1439.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="41.0848%" y="1413" width="0.0123%" height="15" fill="rgb(220,223,22)" fg:x="3348" fg:w="1"/><text x="41.3348%" y="1423.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="41.0848%" y="1397" width="0.0123%" height="15" fill="rgb(245,102,5)" fg:x="3348" fg:w="1"/><text x="41.3348%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.18%)</title><rect x="40.9253%" y="1461" width="0.1841%" height="15" fill="rgb(211,148,2)" fg:x="3335" fg:w="15"/><text x="41.1753%" y="1471.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.17%)</title><rect x="40.9375%" y="1445" width="0.1718%" height="15" fill="rgb(241,13,44)" fg:x="3336" fg:w="14"/><text x="41.1875%" y="1455.50"></text></g><g><title>__libc_read (1 samples, 0.01%)</title><rect x="41.0971%" y="1429" width="0.0123%" height="15" fill="rgb(219,137,21)" fg:x="3349" fg:w="1"/><text x="41.3471%" y="1439.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (17 samples, 0.21%)</title><rect x="40.9130%" y="1525" width="0.2086%" height="15" fill="rgb(242,206,5)" fg:x="3334" fg:w="17"/><text x="41.1630%" y="1535.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.20%)</title><rect x="40.9253%" y="1509" width="0.1963%" height="15" fill="rgb(217,114,22)" fg:x="3335" fg:w="16"/><text x="41.1753%" y="1519.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.20%)</title><rect x="40.9253%" y="1493" width="0.1963%" height="15" fill="rgb(253,206,42)" fg:x="3335" fg:w="16"/><text x="41.1753%" y="1503.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.20%)</title><rect x="40.9253%" y="1477" width="0.1963%" height="15" fill="rgb(236,102,18)" fg:x="3335" fg:w="16"/><text x="41.1753%" y="1487.50"></text></g><g><title>dlsym (1 samples, 0.01%)</title><rect x="41.1093%" y="1461" width="0.0123%" height="15" fill="rgb(208,59,49)" fg:x="3350" fg:w="1"/><text x="41.3593%" y="1471.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="41.1093%" y="1445" width="0.0123%" height="15" fill="rgb(215,194,28)" fg:x="3350" fg:w="1"/><text x="41.3593%" y="1455.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="41.1093%" y="1429" width="0.0123%" height="15" fill="rgb(243,207,11)" fg:x="3350" fg:w="1"/><text x="41.3593%" y="1439.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="41.1093%" y="1413" width="0.0123%" height="15" fill="rgb(254,179,35)" fg:x="3350" fg:w="1"/><text x="41.3593%" y="1423.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="41.1093%" y="1397" width="0.0123%" height="15" fill="rgb(235,97,3)" fg:x="3350" fg:w="1"/><text x="41.3593%" y="1407.50"></text></g><g><title>do_sym (1 samples, 0.01%)</title><rect x="41.1093%" y="1381" width="0.0123%" height="15" fill="rgb(215,155,33)" fg:x="3350" fg:w="1"/><text x="41.3593%" y="1391.50"></text></g><g><title>__GI__dl_find_dso_for_object (1 samples, 0.01%)</title><rect x="41.1093%" y="1365" width="0.0123%" height="15" fill="rgb(223,128,12)" fg:x="3350" fg:w="1"/><text x="41.3593%" y="1375.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="41.1216%" y="1525" width="0.0123%" height="15" fill="rgb(208,157,18)" fg:x="3351" fg:w="1"/><text x="41.3716%" y="1535.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="41.1216%" y="1509" width="0.0123%" height="15" fill="rgb(249,70,54)" fg:x="3351" fg:w="1"/><text x="41.3716%" y="1519.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="41.1216%" y="1493" width="0.0123%" height="15" fill="rgb(244,118,24)" fg:x="3351" fg:w="1"/><text x="41.3716%" y="1503.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="41.1216%" y="1477" width="0.0123%" height="15" fill="rgb(211,54,0)" fg:x="3351" fg:w="1"/><text x="41.3716%" y="1487.50"></text></g><g><title>bevy_text::text2d::draw_text2d_system (1 samples, 0.01%)</title><rect x="41.1339%" y="1509" width="0.0123%" height="15" fill="rgb(245,137,45)" fg:x="3352" fg:w="1"/><text x="41.3839%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::data::input::RawInput&gt; (1 samples, 0.01%)</title><rect x="41.1462%" y="1509" width="0.0123%" height="15" fill="rgb(232,154,31)" fg:x="3353" fg:w="1"/><text x="41.3962%" y="1519.50"></text></g><g><title>[libc-2.33.so] (3 samples, 0.04%)</title><rect x="41.1339%" y="1525" width="0.0368%" height="15" fill="rgb(253,6,39)" fg:x="3352" fg:w="3"/><text x="41.3839%" y="1535.50"></text></g><g><title>core::ptr::drop_in_place&lt;egui::input_state::InputState&gt; (1 samples, 0.01%)</title><rect x="41.1584%" y="1509" width="0.0123%" height="15" fill="rgb(234,183,24)" fg:x="3354" fg:w="1"/><text x="41.4084%" y="1519.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="41.1707%" y="1525" width="0.0736%" height="15" fill="rgb(252,84,40)" fg:x="3355" fg:w="6"/><text x="41.4207%" y="1535.50"></text></g><g><title>[libnvidia-glsi.so.470.63.01] (1 samples, 0.01%)</title><rect x="41.2443%" y="1525" width="0.0123%" height="15" fill="rgb(224,65,2)" fg:x="3361" fg:w="1"/><text x="41.4943%" y="1535.50"></text></g><g><title>[libnvidia-glsi.so.470.63.01] (1 samples, 0.01%)</title><rect x="41.2443%" y="1509" width="0.0123%" height="15" fill="rgb(229,38,24)" fg:x="3361" fg:w="1"/><text x="41.4943%" y="1519.50"></text></g><g><title>[libnvidia-glsi.so.470.63.01] (1 samples, 0.01%)</title><rect x="41.2443%" y="1493" width="0.0123%" height="15" fill="rgb(218,131,50)" fg:x="3361" fg:w="1"/><text x="41.4943%" y="1503.50"></text></g><g><title>[libnvidia-glsi.so.470.63.01] (1 samples, 0.01%)</title><rect x="41.2443%" y="1477" width="0.0123%" height="15" fill="rgb(233,106,18)" fg:x="3361" fg:w="1"/><text x="41.4943%" y="1487.50"></text></g><g><title>[libudev.so.1.7.2] (1 samples, 0.01%)</title><rect x="41.2566%" y="1509" width="0.0123%" height="15" fill="rgb(220,216,11)" fg:x="3362" fg:w="1"/><text x="41.5066%" y="1519.50"></text></g><g><title>[libudev.so.1.7.2] (2 samples, 0.02%)</title><rect x="41.2566%" y="1525" width="0.0245%" height="15" fill="rgb(251,100,45)" fg:x="3362" fg:w="2"/><text x="41.5066%" y="1535.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="41.2689%" y="1509" width="0.0123%" height="15" fill="rgb(235,143,32)" fg:x="3363" fg:w="1"/><text x="41.5189%" y="1519.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="41.2811%" y="1525" width="0.0123%" height="15" fill="rgb(248,124,34)" fg:x="3364" fg:w="1"/><text x="41.5311%" y="1535.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="41.2934%" y="1525" width="0.0123%" height="15" fill="rgb(225,221,4)" fg:x="3365" fg:w="1"/><text x="41.5434%" y="1535.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="41.2934%" y="1509" width="0.0123%" height="15" fill="rgb(242,27,43)" fg:x="3365" fg:w="1"/><text x="41.5434%" y="1519.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="41.3057%" y="1509" width="0.0245%" height="15" fill="rgb(227,54,8)" fg:x="3366" fg:w="2"/><text x="41.5557%" y="1519.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="41.3302%" y="1509" width="0.0123%" height="15" fill="rgb(253,139,49)" fg:x="3368" fg:w="1"/><text x="41.5802%" y="1519.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="41.3425%" y="1509" width="0.0123%" height="15" fill="rgb(231,26,43)" fg:x="3369" fg:w="1"/><text x="41.5925%" y="1519.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="41.3548%" y="1509" width="0.0123%" height="15" fill="rgb(207,121,39)" fg:x="3370" fg:w="1"/><text x="41.6048%" y="1519.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynEq&gt;::dyn_eq (7 samples, 0.09%)</title><rect x="41.3670%" y="1509" width="0.0859%" height="15" fill="rgb(223,101,35)" fg:x="3371" fg:w="7"/><text x="41.6170%" y="1519.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (3 samples, 0.04%)</title><rect x="41.4161%" y="1493" width="0.0368%" height="15" fill="rgb(232,87,23)" fg:x="3375" fg:w="3"/><text x="41.6661%" y="1503.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (3 samples, 0.04%)</title><rect x="41.4161%" y="1477" width="0.0368%" height="15" fill="rgb(225,180,29)" fg:x="3375" fg:w="3"/><text x="41.6661%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="41.4529%" y="1509" width="0.0123%" height="15" fill="rgb(225,25,17)" fg:x="3378" fg:w="1"/><text x="41.7029%" y="1519.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="41.4652%" y="1509" width="0.0123%" height="15" fill="rgb(223,8,52)" fg:x="3379" fg:w="1"/><text x="41.7152%" y="1519.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="41.4775%" y="1509" width="0.0245%" height="15" fill="rgb(246,42,21)" fg:x="3380" fg:w="2"/><text x="41.7275%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;wgpu_core::device::life::ActiveSubmission&lt;gfx_backend_vulkan::Backend&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="41.4898%" y="1493" width="0.0123%" height="15" fill="rgb(205,64,43)" fg:x="3381" fg:w="1"/><text x="41.7398%" y="1503.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="41.5020%" y="1509" width="0.0123%" height="15" fill="rgb(221,160,13)" fg:x="3382" fg:w="1"/><text x="41.7520%" y="1519.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="41.5143%" y="1509" width="0.0736%" height="15" fill="rgb(239,58,35)" fg:x="3383" fg:w="6"/><text x="41.7643%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (2 samples, 0.02%)</title><rect x="41.5634%" y="1493" width="0.0245%" height="15" fill="rgb(251,26,40)" fg:x="3387" fg:w="2"/><text x="41.8134%" y="1503.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="41.5634%" y="1477" width="0.0245%" height="15" fill="rgb(247,0,4)" fg:x="3387" fg:w="2"/><text x="41.8134%" y="1487.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="41.5634%" y="1461" width="0.0245%" height="15" fill="rgb(218,130,10)" fg:x="3387" fg:w="2"/><text x="41.8134%" y="1471.50"></text></g><g><title>core::mem::maybe_uninit::MaybeUninit&lt;T&gt;::assume_init (2 samples, 0.02%)</title><rect x="41.5634%" y="1445" width="0.0245%" height="15" fill="rgb(239,32,7)" fg:x="3387" fg:w="2"/><text x="41.8134%" y="1455.50"></text></g><g><title>&lt;bevy_audio::AudioPlugin as bevy_app::plugin::Plugin&gt;::build (1 samples, 0.01%)</title><rect x="41.5879%" y="1509" width="0.0123%" height="15" fill="rgb(210,192,24)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1519.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::init_non_send_resource (1 samples, 0.01%)</title><rect x="41.5879%" y="1493" width="0.0123%" height="15" fill="rgb(226,212,17)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1503.50"></text></g><g><title>&lt;T as bevy_ecs::world::FromWorld&gt;::from_world (1 samples, 0.01%)</title><rect x="41.5879%" y="1477" width="0.0123%" height="15" fill="rgb(219,201,28)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1487.50"></text></g><g><title>&lt;bevy_audio::audio_output::AudioOutput&lt;P&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="41.5879%" y="1461" width="0.0123%" height="15" fill="rgb(235,207,41)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1471.50"></text></g><g><title>rodio::stream::OutputStream::try_default (1 samples, 0.01%)</title><rect x="41.5879%" y="1445" width="0.0123%" height="15" fill="rgb(241,95,54)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1455.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (1 samples, 0.01%)</title><rect x="41.5879%" y="1429" width="0.0123%" height="15" fill="rgb(248,12,23)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1439.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (1 samples, 0.01%)</title><rect x="41.5879%" y="1413" width="0.0123%" height="15" fill="rgb(228,173,4)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1423.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (1 samples, 0.01%)</title><rect x="41.5879%" y="1397" width="0.0123%" height="15" fill="rgb(254,99,5)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1407.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (1 samples, 0.01%)</title><rect x="41.5879%" y="1381" width="0.0123%" height="15" fill="rgb(212,184,17)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1391.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (1 samples, 0.01%)</title><rect x="41.5879%" y="1365" width="0.0123%" height="15" fill="rgb(252,174,1)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1375.50"></text></g><g><title>cpal::host::alsa::Device::default_config (1 samples, 0.01%)</title><rect x="41.5879%" y="1349" width="0.0123%" height="15" fill="rgb(241,118,51)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1359.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (1 samples, 0.01%)</title><rect x="41.5879%" y="1333" width="0.0123%" height="15" fill="rgb(227,94,47)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1343.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (1 samples, 0.01%)</title><rect x="41.5879%" y="1317" width="0.0123%" height="15" fill="rgb(229,104,2)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1327.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (1 samples, 0.01%)</title><rect x="41.5879%" y="1301" width="0.0123%" height="15" fill="rgb(219,28,31)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1311.50"></text></g><g><title>alsa::pcm::PCM::new (1 samples, 0.01%)</title><rect x="41.5879%" y="1285" width="0.0123%" height="15" fill="rgb(233,109,36)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1295.50"></text></g><g><title>alsa::pcm::PCM::open (1 samples, 0.01%)</title><rect x="41.5879%" y="1269" width="0.0123%" height="15" fill="rgb(246,88,11)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1279.50"></text></g><g><title>snd_pcm_open (1 samples, 0.01%)</title><rect x="41.5879%" y="1253" width="0.0123%" height="15" fill="rgb(209,212,17)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1263.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="41.5879%" y="1237" width="0.0123%" height="15" fill="rgb(243,59,29)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1247.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="41.5879%" y="1221" width="0.0123%" height="15" fill="rgb(244,205,48)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1231.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="41.5879%" y="1205" width="0.0123%" height="15" fill="rgb(227,30,6)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1215.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="41.5879%" y="1189" width="0.0123%" height="15" fill="rgb(220,205,48)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1199.50"></text></g><g><title>snd_dlopen (1 samples, 0.01%)</title><rect x="41.5879%" y="1173" width="0.0123%" height="15" fill="rgb(250,94,14)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1183.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="41.5879%" y="1157" width="0.0123%" height="15" fill="rgb(216,119,42)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1167.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="41.5879%" y="1141" width="0.0123%" height="15" fill="rgb(232,155,0)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1151.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="41.5879%" y="1125" width="0.0123%" height="15" fill="rgb(212,24,32)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1135.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="41.5879%" y="1109" width="0.0123%" height="15" fill="rgb(216,69,20)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1119.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="41.5879%" y="1093" width="0.0123%" height="15" fill="rgb(229,73,31)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1103.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="41.5879%" y="1077" width="0.0123%" height="15" fill="rgb(224,219,20)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1087.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="41.5879%" y="1061" width="0.0123%" height="15" fill="rgb(215,146,41)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1071.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="41.5879%" y="1045" width="0.0123%" height="15" fill="rgb(244,71,31)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1055.50"></text></g><g><title>_dl_check_map_versions (1 samples, 0.01%)</title><rect x="41.5879%" y="1029" width="0.0123%" height="15" fill="rgb(224,24,11)" fg:x="3389" fg:w="1"/><text x="41.8379%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="41.6002%" y="1509" width="0.0245%" height="15" fill="rgb(229,76,15)" fg:x="3390" fg:w="2"/><text x="41.8502%" y="1519.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (1 samples, 0.01%)</title><rect x="41.6493%" y="1429" width="0.0123%" height="15" fill="rgb(209,93,2)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1439.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1 samples, 0.01%)</title><rect x="41.6493%" y="1413" width="0.0123%" height="15" fill="rgb(216,200,50)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1423.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1 samples, 0.01%)</title><rect x="41.6493%" y="1397" width="0.0123%" height="15" fill="rgb(211,67,34)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1407.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1 samples, 0.01%)</title><rect x="41.6493%" y="1381" width="0.0123%" height="15" fill="rgb(225,87,47)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1391.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1 samples, 0.01%)</title><rect x="41.6493%" y="1365" width="0.0123%" height="15" fill="rgb(217,185,16)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1375.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (1 samples, 0.01%)</title><rect x="41.6493%" y="1349" width="0.0123%" height="15" fill="rgb(205,0,0)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="41.6493%" y="1333" width="0.0123%" height="15" fill="rgb(207,116,45)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="41.6493%" y="1317" width="0.0123%" height="15" fill="rgb(221,156,26)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1327.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (1 samples, 0.01%)</title><rect x="41.6493%" y="1301" width="0.0123%" height="15" fill="rgb(213,140,4)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1311.50"></text></g><g><title>async_executor::Executor::try_tick (1 samples, 0.01%)</title><rect x="41.6493%" y="1285" width="0.0123%" height="15" fill="rgb(231,224,15)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1295.50"></text></g><g><title>async_task::runnable::Runnable::run (1 samples, 0.01%)</title><rect x="41.6493%" y="1269" width="0.0123%" height="15" fill="rgb(244,76,20)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1279.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1 samples, 0.01%)</title><rect x="41.6493%" y="1253" width="0.0123%" height="15" fill="rgb(238,117,7)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="41.6493%" y="1237" width="0.0123%" height="15" fill="rgb(235,1,10)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1247.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1 samples, 0.01%)</title><rect x="41.6493%" y="1221" width="0.0123%" height="15" fill="rgb(216,165,6)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="41.6493%" y="1205" width="0.0123%" height="15" fill="rgb(246,91,35)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1215.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1 samples, 0.01%)</title><rect x="41.6493%" y="1189" width="0.0123%" height="15" fill="rgb(228,96,24)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1199.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="41.6493%" y="1173" width="0.0123%" height="15" fill="rgb(254,217,53)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1183.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="41.6493%" y="1157" width="0.0123%" height="15" fill="rgb(209,60,0)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="41.6493%" y="1141" width="0.0123%" height="15" fill="rgb(250,93,26)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1151.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="41.6493%" y="1125" width="0.0123%" height="15" fill="rgb(211,9,40)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1135.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (1 samples, 0.01%)</title><rect x="41.6493%" y="1109" width="0.0123%" height="15" fill="rgb(242,57,20)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1119.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="41.6493%" y="1093" width="0.0123%" height="15" fill="rgb(248,85,48)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1103.50"></text></g><g><title>wgpu::Device::poll (1 samples, 0.01%)</title><rect x="41.6493%" y="1077" width="0.0123%" height="15" fill="rgb(212,117,2)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1087.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (1 samples, 0.01%)</title><rect x="41.6493%" y="1061" width="0.0123%" height="15" fill="rgb(243,19,3)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1071.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (1 samples, 0.01%)</title><rect x="41.6493%" y="1045" width="0.0123%" height="15" fill="rgb(232,217,24)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1055.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="41.6493%" y="1029" width="0.0123%" height="15" fill="rgb(224,175,40)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1039.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="41.6493%" y="1013" width="0.0123%" height="15" fill="rgb(212,162,32)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1023.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (1 samples, 0.01%)</title><rect x="41.6493%" y="997" width="0.0123%" height="15" fill="rgb(215,9,4)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="1007.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (1 samples, 0.01%)</title><rect x="41.6493%" y="981" width="0.0123%" height="15" fill="rgb(242,42,7)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="991.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (1 samples, 0.01%)</title><rect x="41.6493%" y="965" width="0.0123%" height="15" fill="rgb(242,184,45)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="975.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="41.6493%" y="949" width="0.0123%" height="15" fill="rgb(228,111,51)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="959.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="41.6493%" y="933" width="0.0123%" height="15" fill="rgb(236,147,17)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="41.6493%" y="917" width="0.0123%" height="15" fill="rgb(210,75,22)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="927.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="41.6493%" y="901" width="0.0123%" height="15" fill="rgb(217,159,45)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="911.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (1 samples, 0.01%)</title><rect x="41.6493%" y="885" width="0.0123%" height="15" fill="rgb(245,165,53)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="895.50"></text></g><g><title>tracing::span::Span::new_with (1 samples, 0.01%)</title><rect x="41.6493%" y="869" width="0.0123%" height="15" fill="rgb(251,190,50)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="879.50"></text></g><g><title>tracing::span::Span::make_with (1 samples, 0.01%)</title><rect x="41.6493%" y="853" width="0.0123%" height="15" fill="rgb(208,203,29)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="863.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="41.6493%" y="837" width="0.0123%" height="15" fill="rgb(207,209,35)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="41.6493%" y="821" width="0.0123%" height="15" fill="rgb(230,144,49)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="41.6493%" y="805" width="0.0123%" height="15" fill="rgb(229,31,6)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="41.6493%" y="789" width="0.0123%" height="15" fill="rgb(251,129,24)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="41.6493%" y="773" width="0.0123%" height="15" fill="rgb(235,105,15)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="41.6493%" y="757" width="0.0123%" height="15" fill="rgb(216,52,43)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="41.6493%" y="741" width="0.0123%" height="15" fill="rgb(238,144,41)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="41.6493%" y="725" width="0.0123%" height="15" fill="rgb(243,63,9)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="735.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="41.6493%" y="709" width="0.0123%" height="15" fill="rgb(246,208,1)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="719.50"></text></g><g><title>&lt;tracing_core::callsite::Identifier as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="41.6493%" y="693" width="0.0123%" height="15" fill="rgb(233,182,18)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (1 samples, 0.01%)</title><rect x="41.6493%" y="677" width="0.0123%" height="15" fill="rgb(242,224,8)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="687.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="41.6493%" y="661" width="0.0123%" height="15" fill="rgb(243,54,37)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="671.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="41.6493%" y="645" width="0.0123%" height="15" fill="rgb(233,192,12)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="655.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="41.6493%" y="629" width="0.0123%" height="15" fill="rgb(251,192,53)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="41.6493%" y="613" width="0.0123%" height="15" fill="rgb(246,141,26)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="41.6493%" y="597" width="0.0123%" height="15" fill="rgb(239,195,19)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="41.6493%" y="581" width="0.0123%" height="15" fill="rgb(241,16,39)" fg:x="3394" fg:w="1"/><text x="41.8993%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="41.6616%" y="885" width="0.0123%" height="15" fill="rgb(223,13,53)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="41.6616%" y="869" width="0.0123%" height="15" fill="rgb(214,227,0)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="879.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="41.6616%" y="853" width="0.0123%" height="15" fill="rgb(228,103,26)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="863.50"></text></g><g><title>&lt;gpu_alloc_types::device::AllocationFlags as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="41.6616%" y="837" width="0.0123%" height="15" fill="rgb(254,177,53)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="847.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="41.6616%" y="821" width="0.0123%" height="15" fill="rgb(208,201,34)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="831.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="41.6616%" y="805" width="0.0123%" height="15" fill="rgb(212,39,5)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="41.6616%" y="789" width="0.0123%" height="15" fill="rgb(246,117,3)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="799.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="41.6616%" y="773" width="0.0123%" height="15" fill="rgb(244,118,39)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="41.6616%" y="757" width="0.0123%" height="15" fill="rgb(241,64,10)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="41.6616%" y="741" width="0.0123%" height="15" fill="rgb(229,39,44)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="41.6616%" y="725" width="0.0123%" height="15" fill="rgb(230,226,3)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="41.6616%" y="709" width="0.0123%" height="15" fill="rgb(222,13,42)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="41.6616%" y="693" width="0.0123%" height="15" fill="rgb(247,180,54)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="41.6616%" y="677" width="0.0123%" height="15" fill="rgb(205,96,16)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="41.6616%" y="661" width="0.0123%" height="15" fill="rgb(205,100,21)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="41.6616%" y="645" width="0.0123%" height="15" fill="rgb(248,51,4)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="41.6616%" y="629" width="0.0123%" height="15" fill="rgb(217,197,30)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="41.6616%" y="613" width="0.0123%" height="15" fill="rgb(240,179,40)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="623.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="41.6616%" y="597" width="0.0123%" height="15" fill="rgb(212,185,35)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="607.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="41.6616%" y="581" width="0.0123%" height="15" fill="rgb(251,222,31)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="41.6616%" y="565" width="0.0123%" height="15" fill="rgb(208,140,36)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="575.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="41.6616%" y="549" width="0.0123%" height="15" fill="rgb(220,148,1)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="559.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="41.6616%" y="533" width="0.0123%" height="15" fill="rgb(254,4,28)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="543.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="41.6616%" y="517" width="0.0123%" height="15" fill="rgb(222,185,44)" fg:x="3395" fg:w="1"/><text x="41.9116%" y="527.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (3 samples, 0.04%)</title><rect x="41.6616%" y="1189" width="0.0368%" height="15" fill="rgb(215,74,39)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1199.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (3 samples, 0.04%)</title><rect x="41.6616%" y="1173" width="0.0368%" height="15" fill="rgb(247,86,4)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1183.50"></text></g><g><title>tracing::span::Span::new (3 samples, 0.04%)</title><rect x="41.6616%" y="1157" width="0.0368%" height="15" fill="rgb(231,105,32)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1167.50"></text></g><g><title>tracing_core::dispatcher::get_default (3 samples, 0.04%)</title><rect x="41.6616%" y="1141" width="0.0368%" height="15" fill="rgb(222,65,35)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="41.6616%" y="1125" width="0.0368%" height="15" fill="rgb(218,145,35)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1135.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (3 samples, 0.04%)</title><rect x="41.6616%" y="1109" width="0.0368%" height="15" fill="rgb(208,7,15)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1119.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (3 samples, 0.04%)</title><rect x="41.6616%" y="1093" width="0.0368%" height="15" fill="rgb(209,83,13)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1103.50"></text></g><g><title>tracing::span::Span::new_with (3 samples, 0.04%)</title><rect x="41.6616%" y="1077" width="0.0368%" height="15" fill="rgb(218,3,10)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1087.50"></text></g><g><title>tracing::span::Span::make_with (3 samples, 0.04%)</title><rect x="41.6616%" y="1061" width="0.0368%" height="15" fill="rgb(211,219,4)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1071.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (3 samples, 0.04%)</title><rect x="41.6616%" y="1045" width="0.0368%" height="15" fill="rgb(228,194,12)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.04%)</title><rect x="41.6616%" y="1029" width="0.0368%" height="15" fill="rgb(210,175,7)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.04%)</title><rect x="41.6616%" y="1013" width="0.0368%" height="15" fill="rgb(243,132,6)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (3 samples, 0.04%)</title><rect x="41.6616%" y="997" width="0.0368%" height="15" fill="rgb(207,72,18)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="1007.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (3 samples, 0.04%)</title><rect x="41.6616%" y="981" width="0.0368%" height="15" fill="rgb(236,1,18)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="991.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="41.6616%" y="965" width="0.0368%" height="15" fill="rgb(227,0,18)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="975.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="41.6616%" y="949" width="0.0368%" height="15" fill="rgb(247,37,5)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="959.50"></text></g><g><title>tracing_core::span::Attributes::record (3 samples, 0.04%)</title><rect x="41.6616%" y="933" width="0.0368%" height="15" fill="rgb(237,179,24)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="943.50"></text></g><g><title>tracing_core::field::ValueSet::record (3 samples, 0.04%)</title><rect x="41.6616%" y="917" width="0.0368%" height="15" fill="rgb(226,53,20)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="927.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (3 samples, 0.04%)</title><rect x="41.6616%" y="901" width="0.0368%" height="15" fill="rgb(247,75,7)" fg:x="3395" fg:w="3"/><text x="41.9116%" y="911.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (2 samples, 0.02%)</title><rect x="41.6738%" y="885" width="0.0245%" height="15" fill="rgb(233,96,12)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (2 samples, 0.02%)</title><rect x="41.6738%" y="869" width="0.0245%" height="15" fill="rgb(224,125,0)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.02%)</title><rect x="41.6738%" y="853" width="0.0245%" height="15" fill="rgb(224,92,25)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="863.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="41.6738%" y="837" width="0.0245%" height="15" fill="rgb(224,42,24)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="847.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="41.6738%" y="821" width="0.0245%" height="15" fill="rgb(234,132,49)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="831.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="41.6738%" y="805" width="0.0245%" height="15" fill="rgb(248,100,35)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="815.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="41.6738%" y="789" width="0.0245%" height="15" fill="rgb(239,94,40)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="41.6738%" y="773" width="0.0245%" height="15" fill="rgb(235,139,28)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="41.6738%" y="757" width="0.0245%" height="15" fill="rgb(217,144,7)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="41.6738%" y="741" width="0.0245%" height="15" fill="rgb(227,55,4)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="41.6738%" y="725" width="0.0245%" height="15" fill="rgb(252,82,54)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="41.6738%" y="709" width="0.0245%" height="15" fill="rgb(245,172,4)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="41.6738%" y="693" width="0.0245%" height="15" fill="rgb(207,26,27)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="41.6738%" y="677" width="0.0245%" height="15" fill="rgb(252,98,18)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="41.6738%" y="661" width="0.0245%" height="15" fill="rgb(244,8,26)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="41.6738%" y="645" width="0.0245%" height="15" fill="rgb(237,173,45)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="655.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="41.6738%" y="629" width="0.0245%" height="15" fill="rgb(208,213,49)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="639.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="41.6738%" y="613" width="0.0245%" height="15" fill="rgb(212,122,37)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="623.50"></text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="41.6738%" y="597" width="0.0245%" height="15" fill="rgb(213,80,17)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="41.6738%" y="581" width="0.0245%" height="15" fill="rgb(206,210,43)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="591.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="41.6738%" y="565" width="0.0245%" height="15" fill="rgb(229,214,3)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="575.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="41.6738%" y="549" width="0.0245%" height="15" fill="rgb(235,213,29)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="559.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="41.6738%" y="533" width="0.0245%" height="15" fill="rgb(248,135,26)" fg:x="3396" fg:w="2"/><text x="41.9238%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="41.6984%" y="837" width="0.0123%" height="15" fill="rgb(242,188,12)" fg:x="3398" fg:w="1"/><text x="41.9484%" y="847.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (5 samples, 0.06%)</title><rect x="41.6616%" y="1349" width="0.0614%" height="15" fill="rgb(245,38,12)" fg:x="3395" fg:w="5"/><text x="41.9116%" y="1359.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (5 samples, 0.06%)</title><rect x="41.6616%" y="1333" width="0.0614%" height="15" fill="rgb(218,42,13)" fg:x="3395" fg:w="5"/><text x="41.9116%" y="1343.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (5 samples, 0.06%)</title><rect x="41.6616%" y="1317" width="0.0614%" height="15" fill="rgb(238,132,49)" fg:x="3395" fg:w="5"/><text x="41.9116%" y="1327.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (5 samples, 0.06%)</title><rect x="41.6616%" y="1301" width="0.0614%" height="15" fill="rgb(209,196,19)" fg:x="3395" fg:w="5"/><text x="41.9116%" y="1311.50"></text></g><g><title>wgpu::Device::create_buffer (5 samples, 0.06%)</title><rect x="41.6616%" y="1285" width="0.0614%" height="15" fill="rgb(244,131,22)" fg:x="3395" fg:w="5"/><text x="41.9116%" y="1295.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (5 samples, 0.06%)</title><rect x="41.6616%" y="1269" width="0.0614%" height="15" fill="rgb(223,18,34)" fg:x="3395" fg:w="5"/><text x="41.9116%" y="1279.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (5 samples, 0.06%)</title><rect x="41.6616%" y="1253" width="0.0614%" height="15" fill="rgb(252,124,54)" fg:x="3395" fg:w="5"/><text x="41.9116%" y="1263.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (5 samples, 0.06%)</title><rect x="41.6616%" y="1237" width="0.0614%" height="15" fill="rgb(229,106,42)" fg:x="3395" fg:w="5"/><text x="41.9116%" y="1247.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (5 samples, 0.06%)</title><rect x="41.6616%" y="1221" width="0.0614%" height="15" fill="rgb(221,129,1)" fg:x="3395" fg:w="5"/><text x="41.9116%" y="1231.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (5 samples, 0.06%)</title><rect x="41.6616%" y="1205" width="0.0614%" height="15" fill="rgb(229,74,15)" fg:x="3395" fg:w="5"/><text x="41.9116%" y="1215.50"></text></g><g><title>tracing::span::Span::new (2 samples, 0.02%)</title><rect x="41.6984%" y="1189" width="0.0245%" height="15" fill="rgb(210,206,50)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="41.6984%" y="1173" width="0.0245%" height="15" fill="rgb(251,114,31)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="41.6984%" y="1157" width="0.0245%" height="15" fill="rgb(215,225,28)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1167.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (2 samples, 0.02%)</title><rect x="41.6984%" y="1141" width="0.0245%" height="15" fill="rgb(237,109,14)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1151.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (2 samples, 0.02%)</title><rect x="41.6984%" y="1125" width="0.0245%" height="15" fill="rgb(230,13,37)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1135.50"></text></g><g><title>tracing::span::Span::new_with (2 samples, 0.02%)</title><rect x="41.6984%" y="1109" width="0.0245%" height="15" fill="rgb(231,40,28)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1119.50"></text></g><g><title>tracing::span::Span::make_with (2 samples, 0.02%)</title><rect x="41.6984%" y="1093" width="0.0245%" height="15" fill="rgb(231,202,18)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1103.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (2 samples, 0.02%)</title><rect x="41.6984%" y="1077" width="0.0245%" height="15" fill="rgb(225,33,18)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="41.6984%" y="1061" width="0.0245%" height="15" fill="rgb(223,64,47)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="41.6984%" y="1045" width="0.0245%" height="15" fill="rgb(234,114,13)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="41.6984%" y="1029" width="0.0245%" height="15" fill="rgb(248,56,40)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (2 samples, 0.02%)</title><rect x="41.6984%" y="1013" width="0.0245%" height="15" fill="rgb(221,194,21)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="41.6984%" y="997" width="0.0245%" height="15" fill="rgb(242,108,46)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="41.6984%" y="981" width="0.0245%" height="15" fill="rgb(220,106,10)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="41.6984%" y="965" width="0.0245%" height="15" fill="rgb(211,88,4)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="975.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.02%)</title><rect x="41.6984%" y="949" width="0.0245%" height="15" fill="rgb(214,95,34)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="959.50"></text></g><g><title>&lt;tracing_core::callsite::Identifier as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="41.6984%" y="933" width="0.0245%" height="15" fill="rgb(250,160,33)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (2 samples, 0.02%)</title><rect x="41.6984%" y="917" width="0.0245%" height="15" fill="rgb(225,29,10)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="927.50"></text></g><g><title>core::hash::Hasher::write_usize (2 samples, 0.02%)</title><rect x="41.6984%" y="901" width="0.0245%" height="15" fill="rgb(224,28,30)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="41.6984%" y="885" width="0.0245%" height="15" fill="rgb(231,77,4)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="41.6984%" y="869" width="0.0245%" height="15" fill="rgb(209,63,21)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="41.6984%" y="853" width="0.0245%" height="15" fill="rgb(226,22,11)" fg:x="3398" fg:w="2"/><text x="41.9484%" y="863.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="41.7106%" y="837" width="0.0123%" height="15" fill="rgb(216,82,30)" fg:x="3399" fg:w="1"/><text x="41.9606%" y="847.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (9 samples, 0.11%)</title><rect x="41.6247%" y="1509" width="0.1104%" height="15" fill="rgb(246,227,38)" fg:x="3392" fg:w="9"/><text x="41.8747%" y="1519.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (9 samples, 0.11%)</title><rect x="41.6247%" y="1493" width="0.1104%" height="15" fill="rgb(251,203,53)" fg:x="3392" fg:w="9"/><text x="41.8747%" y="1503.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (7 samples, 0.09%)</title><rect x="41.6493%" y="1477" width="0.0859%" height="15" fill="rgb(254,101,1)" fg:x="3394" fg:w="7"/><text x="41.8993%" y="1487.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (7 samples, 0.09%)</title><rect x="41.6493%" y="1461" width="0.0859%" height="15" fill="rgb(241,180,5)" fg:x="3394" fg:w="7"/><text x="41.8993%" y="1471.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (7 samples, 0.09%)</title><rect x="41.6493%" y="1445" width="0.0859%" height="15" fill="rgb(218,168,4)" fg:x="3394" fg:w="7"/><text x="41.8993%" y="1455.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (6 samples, 0.07%)</title><rect x="41.6616%" y="1429" width="0.0736%" height="15" fill="rgb(224,223,32)" fg:x="3395" fg:w="6"/><text x="41.9116%" y="1439.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (6 samples, 0.07%)</title><rect x="41.6616%" y="1413" width="0.0736%" height="15" fill="rgb(236,106,22)" fg:x="3395" fg:w="6"/><text x="41.9116%" y="1423.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (6 samples, 0.07%)</title><rect x="41.6616%" y="1397" width="0.0736%" height="15" fill="rgb(206,121,5)" fg:x="3395" fg:w="6"/><text x="41.9116%" y="1407.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (6 samples, 0.07%)</title><rect x="41.6616%" y="1381" width="0.0736%" height="15" fill="rgb(233,87,28)" fg:x="3395" fg:w="6"/><text x="41.9116%" y="1391.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (6 samples, 0.07%)</title><rect x="41.6616%" y="1365" width="0.0736%" height="15" fill="rgb(236,137,17)" fg:x="3395" fg:w="6"/><text x="41.9116%" y="1375.50"></text></g><g><title>wgpu::Queue::submit (1 samples, 0.01%)</title><rect x="41.7229%" y="1349" width="0.0123%" height="15" fill="rgb(209,183,38)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1359.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (1 samples, 0.01%)</title><rect x="41.7229%" y="1333" width="0.0123%" height="15" fill="rgb(206,162,44)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1343.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (1 samples, 0.01%)</title><rect x="41.7229%" y="1317" width="0.0123%" height="15" fill="rgb(237,70,39)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1327.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="41.7229%" y="1301" width="0.0123%" height="15" fill="rgb(212,176,5)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1311.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="41.7229%" y="1285" width="0.0123%" height="15" fill="rgb(232,95,16)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1295.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (1 samples, 0.01%)</title><rect x="41.7229%" y="1269" width="0.0123%" height="15" fill="rgb(219,115,35)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1279.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (1 samples, 0.01%)</title><rect x="41.7229%" y="1253" width="0.0123%" height="15" fill="rgb(251,67,27)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1263.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (1 samples, 0.01%)</title><rect x="41.7229%" y="1237" width="0.0123%" height="15" fill="rgb(222,95,40)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1247.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (1 samples, 0.01%)</title><rect x="41.7229%" y="1221" width="0.0123%" height="15" fill="rgb(250,35,16)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1231.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="41.7229%" y="1205" width="0.0123%" height="15" fill="rgb(224,86,44)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1215.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="41.7229%" y="1189" width="0.0123%" height="15" fill="rgb(237,53,53)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="41.7229%" y="1173" width="0.0123%" height="15" fill="rgb(208,171,33)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1183.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="41.7229%" y="1157" width="0.0123%" height="15" fill="rgb(222,64,27)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1167.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (1 samples, 0.01%)</title><rect x="41.7229%" y="1141" width="0.0123%" height="15" fill="rgb(221,121,35)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1151.50"></text></g><g><title>tracing::span::Span::new_with (1 samples, 0.01%)</title><rect x="41.7229%" y="1125" width="0.0123%" height="15" fill="rgb(228,137,42)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1135.50"></text></g><g><title>tracing::span::Span::make_with (1 samples, 0.01%)</title><rect x="41.7229%" y="1109" width="0.0123%" height="15" fill="rgb(227,54,21)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1119.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="41.7229%" y="1093" width="0.0123%" height="15" fill="rgb(240,168,33)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="41.7229%" y="1077" width="0.0123%" height="15" fill="rgb(243,159,6)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="41.7229%" y="1061" width="0.0123%" height="15" fill="rgb(205,211,41)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="41.7229%" y="1045" width="0.0123%" height="15" fill="rgb(253,30,1)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="41.7229%" y="1029" width="0.0123%" height="15" fill="rgb(226,80,18)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1039.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="41.7229%" y="1013" width="0.0123%" height="15" fill="rgb(253,156,46)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1023.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.01%)</title><rect x="41.7229%" y="997" width="0.0123%" height="15" fill="rgb(248,87,27)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="1007.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.01%)</title><rect x="41.7229%" y="981" width="0.0123%" height="15" fill="rgb(227,122,2)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="41.7229%" y="965" width="0.0123%" height="15" fill="rgb(229,94,39)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="41.7229%" y="949" width="0.0123%" height="15" fill="rgb(225,173,31)" fg:x="3400" fg:w="1"/><text x="41.9729%" y="959.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (3 samples, 0.04%)</title><rect x="41.7352%" y="1509" width="0.0368%" height="15" fill="rgb(239,176,30)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1519.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (3 samples, 0.04%)</title><rect x="41.7352%" y="1493" width="0.0368%" height="15" fill="rgb(212,104,21)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1503.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.04%)</title><rect x="41.7352%" y="1477" width="0.0368%" height="15" fill="rgb(240,209,40)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="41.7352%" y="1461" width="0.0368%" height="15" fill="rgb(234,195,5)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1471.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (3 samples, 0.04%)</title><rect x="41.7352%" y="1445" width="0.0368%" height="15" fill="rgb(238,213,1)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1455.50"></text></g><g><title>async_executor::Executor::try_tick (3 samples, 0.04%)</title><rect x="41.7352%" y="1429" width="0.0368%" height="15" fill="rgb(235,182,54)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1439.50"></text></g><g><title>async_task::runnable::Runnable::run (3 samples, 0.04%)</title><rect x="41.7352%" y="1413" width="0.0368%" height="15" fill="rgb(229,50,46)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1423.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3 samples, 0.04%)</title><rect x="41.7352%" y="1397" width="0.0368%" height="15" fill="rgb(219,145,13)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="41.7352%" y="1381" width="0.0368%" height="15" fill="rgb(220,226,10)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1391.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (3 samples, 0.04%)</title><rect x="41.7352%" y="1365" width="0.0368%" height="15" fill="rgb(248,47,30)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1375.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="41.7352%" y="1349" width="0.0368%" height="15" fill="rgb(231,209,44)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1359.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (3 samples, 0.04%)</title><rect x="41.7352%" y="1333" width="0.0368%" height="15" fill="rgb(209,80,30)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1343.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3 samples, 0.04%)</title><rect x="41.7352%" y="1317" width="0.0368%" height="15" fill="rgb(232,9,14)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1327.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (3 samples, 0.04%)</title><rect x="41.7352%" y="1301" width="0.0368%" height="15" fill="rgb(243,91,43)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1311.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3 samples, 0.04%)</title><rect x="41.7352%" y="1285" width="0.0368%" height="15" fill="rgb(231,90,52)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1295.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.04%)</title><rect x="41.7352%" y="1269" width="0.0368%" height="15" fill="rgb(253,192,44)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1279.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (3 samples, 0.04%)</title><rect x="41.7352%" y="1253" width="0.0368%" height="15" fill="rgb(241,66,31)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1263.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (3 samples, 0.04%)</title><rect x="41.7352%" y="1237" width="0.0368%" height="15" fill="rgb(235,81,37)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1247.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (3 samples, 0.04%)</title><rect x="41.7352%" y="1221" width="0.0368%" height="15" fill="rgb(223,221,9)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1231.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (3 samples, 0.04%)</title><rect x="41.7352%" y="1205" width="0.0368%" height="15" fill="rgb(242,180,7)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1215.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (3 samples, 0.04%)</title><rect x="41.7352%" y="1189" width="0.0368%" height="15" fill="rgb(243,78,19)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1199.50"></text></g><g><title>wgpu::Device::create_bind_group (3 samples, 0.04%)</title><rect x="41.7352%" y="1173" width="0.0368%" height="15" fill="rgb(233,23,17)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1183.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (3 samples, 0.04%)</title><rect x="41.7352%" y="1157" width="0.0368%" height="15" fill="rgb(252,122,45)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1167.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (3 samples, 0.04%)</title><rect x="41.7352%" y="1141" width="0.0368%" height="15" fill="rgb(247,108,20)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1151.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_bind_group (3 samples, 0.04%)</title><rect x="41.7352%" y="1125" width="0.0368%" height="15" fill="rgb(235,84,21)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1135.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::write_descriptor_set (3 samples, 0.04%)</title><rect x="41.7352%" y="1109" width="0.0368%" height="15" fill="rgb(247,129,10)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1119.50"></text></g><g><title>ash::device::DeviceV1_0::update_descriptor_sets (3 samples, 0.04%)</title><rect x="41.7352%" y="1093" width="0.0368%" height="15" fill="rgb(208,173,14)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1103.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::update_descriptor_sets (3 samples, 0.04%)</title><rect x="41.7352%" y="1077" width="0.0368%" height="15" fill="rgb(236,31,38)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="41.7352%" y="1061" width="0.0368%" height="15" fill="rgb(232,65,17)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="41.7352%" y="1045" width="0.0368%" height="15" fill="rgb(224,45,49)" fg:x="3401" fg:w="3"/><text x="41.9852%" y="1055.50"></text></g><g><title>epaint::mutex::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="41.8824%" y="917" width="0.0123%" height="15" fill="rgb(225,2,53)" fg:x="3413" fg:w="1"/><text x="42.1324%" y="927.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow (1 samples, 0.01%)</title><rect x="41.8824%" y="901" width="0.0123%" height="15" fill="rgb(248,210,53)" fg:x="3413" fg:w="1"/><text x="42.1324%" y="911.50"></text></g><g><title>atomic_refcell::AtomicBorrowRef::try_new (1 samples, 0.01%)</title><rect x="41.8824%" y="885" width="0.0123%" height="15" fill="rgb(211,1,30)" fg:x="3413" fg:w="1"/><text x="42.1324%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="41.8824%" y="869" width="0.0123%" height="15" fill="rgb(224,96,15)" fg:x="3413" fg:w="1"/><text x="42.1324%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="41.8824%" y="853" width="0.0123%" height="15" fill="rgb(252,45,11)" fg:x="3413" fg:w="1"/><text x="42.1324%" y="863.50"></text></g><g><title>&lt;ttf_parser::tables::glyf::GlyphPointsIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="41.8947%" y="805" width="0.0123%" height="15" fill="rgb(220,125,38)" fg:x="3414" fg:w="1"/><text x="42.1447%" y="815.50"></text></g><g><title>ttf_parser::tables::glyf::CoordsIter::next (1 samples, 0.01%)</title><rect x="41.8947%" y="789" width="0.0123%" height="15" fill="rgb(243,161,33)" fg:x="3414" fg:w="1"/><text x="42.1447%" y="799.50"></text></g><g><title>ttf_parser::parser::Stream::read (1 samples, 0.01%)</title><rect x="41.8947%" y="773" width="0.0123%" height="15" fill="rgb(248,197,34)" fg:x="3414" fg:w="1"/><text x="42.1447%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="41.8947%" y="757" width="0.0123%" height="15" fill="rgb(228,165,23)" fg:x="3414" fg:w="1"/><text x="42.1447%" y="767.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="41.8947%" y="741" width="0.0123%" height="15" fill="rgb(236,94,38)" fg:x="3414" fg:w="1"/><text x="42.1447%" y="751.50"></text></g><g><title>&lt;u8 as ttf_parser::parser::FromData&gt;::parse (1 samples, 0.01%)</title><rect x="41.8947%" y="725" width="0.0123%" height="15" fill="rgb(220,13,23)" fg:x="3414" fg:w="1"/><text x="42.1447%" y="735.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1 samples, 0.01%)</title><rect x="41.8947%" y="709" width="0.0123%" height="15" fill="rgb(234,26,39)" fg:x="3414" fg:w="1"/><text x="42.1447%" y="719.50"></text></g><g><title>ab_glyph::font::Font::outline_glyph (2 samples, 0.02%)</title><rect x="41.8947%" y="901" width="0.0245%" height="15" fill="rgb(205,117,44)" fg:x="3414" fg:w="2"/><text x="42.1447%" y="911.50"></text></g><g><title>&lt;ab_glyph::font_arc::FontArc as ab_glyph::font::Font&gt;::outline (2 samples, 0.02%)</title><rect x="41.8947%" y="885" width="0.0245%" height="15" fill="rgb(250,42,2)" fg:x="3414" fg:w="2"/><text x="42.1447%" y="895.50"></text></g><g><title>&lt;ab_glyph::ttfp::FontRef as ab_glyph::font::Font&gt;::outline (2 samples, 0.02%)</title><rect x="41.8947%" y="869" width="0.0245%" height="15" fill="rgb(223,83,14)" fg:x="3414" fg:w="2"/><text x="42.1447%" y="879.50"></text></g><g><title>ttf_parser::Face::outline_glyph (2 samples, 0.02%)</title><rect x="41.8947%" y="853" width="0.0245%" height="15" fill="rgb(241,147,50)" fg:x="3414" fg:w="2"/><text x="42.1447%" y="863.50"></text></g><g><title>ttf_parser::tables::glyf::Table::outline (2 samples, 0.02%)</title><rect x="41.8947%" y="837" width="0.0245%" height="15" fill="rgb(218,90,6)" fg:x="3414" fg:w="2"/><text x="42.1447%" y="847.50"></text></g><g><title>ttf_parser::tables::glyf::outline_impl (2 samples, 0.02%)</title><rect x="41.8947%" y="821" width="0.0245%" height="15" fill="rgb(210,191,5)" fg:x="3414" fg:w="2"/><text x="42.1447%" y="831.50"></text></g><g><title>ttf_parser::tables::glyf::Builder::push_point (1 samples, 0.01%)</title><rect x="41.9070%" y="805" width="0.0123%" height="15" fill="rgb(225,139,19)" fg:x="3415" fg:w="1"/><text x="42.1570%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (7 samples, 0.09%)</title><rect x="41.8824%" y="1077" width="0.0859%" height="15" fill="rgb(210,1,33)" fg:x="3413" fg:w="7"/><text x="42.1324%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (7 samples, 0.09%)</title><rect x="41.8824%" y="1061" width="0.0859%" height="15" fill="rgb(213,50,3)" fg:x="3413" fg:w="7"/><text x="42.1324%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.09%)</title><rect x="41.8824%" y="1045" width="0.0859%" height="15" fill="rgb(234,227,4)" fg:x="3413" fg:w="7"/><text x="42.1324%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.09%)</title><rect x="41.8824%" y="1029" width="0.0859%" height="15" fill="rgb(246,63,5)" fg:x="3413" fg:w="7"/><text x="42.1324%" y="1039.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (7 samples, 0.09%)</title><rect x="41.8824%" y="1013" width="0.0859%" height="15" fill="rgb(245,136,27)" fg:x="3413" fg:w="7"/><text x="42.1324%" y="1023.50"></text></g><g><title>epaint::text::fonts::Fonts::from_definitions::{{closure}} (7 samples, 0.09%)</title><rect x="41.8824%" y="997" width="0.0859%" height="15" fill="rgb(247,199,27)" fg:x="3413" fg:w="7"/><text x="42.1324%" y="1007.50"></text></g><g><title>epaint::text::font::Font::new (7 samples, 0.09%)</title><rect x="41.8824%" y="981" width="0.0859%" height="15" fill="rgb(252,158,49)" fg:x="3413" fg:w="7"/><text x="42.1324%" y="991.50"></text></g><g><title>epaint::text::font::Font::glyph_info (7 samples, 0.09%)</title><rect x="41.8824%" y="965" width="0.0859%" height="15" fill="rgb(254,73,1)" fg:x="3413" fg:w="7"/><text x="42.1324%" y="975.50"></text></g><g><title>epaint::text::font::Font::glyph_info_no_cache_or_fallback (7 samples, 0.09%)</title><rect x="41.8824%" y="949" width="0.0859%" height="15" fill="rgb(248,93,19)" fg:x="3413" fg:w="7"/><text x="42.1324%" y="959.50"></text></g><g><title>epaint::text::font::FontImpl::glyph_info (7 samples, 0.09%)</title><rect x="41.8824%" y="933" width="0.0859%" height="15" fill="rgb(206,67,5)" fg:x="3413" fg:w="7"/><text x="42.1324%" y="943.50"></text></g><g><title>epaint::text::font::allocate_glyph (6 samples, 0.07%)</title><rect x="41.8947%" y="917" width="0.0736%" height="15" fill="rgb(209,210,4)" fg:x="3414" fg:w="6"/><text x="42.1447%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (4 samples, 0.05%)</title><rect x="41.9193%" y="901" width="0.0491%" height="15" fill="rgb(214,185,36)" fg:x="3416" fg:w="4"/><text x="42.1693%" y="911.50"></text></g><g><title>epaint::text::font::allocate_glyph::{{closure}} (4 samples, 0.05%)</title><rect x="41.9193%" y="885" width="0.0491%" height="15" fill="rgb(233,191,26)" fg:x="3416" fg:w="4"/><text x="42.1693%" y="895.50"></text></g><g><title>ab_glyph::outlined::OutlinedGlyph::draw (4 samples, 0.05%)</title><rect x="41.9193%" y="869" width="0.0491%" height="15" fill="rgb(248,94,17)" fg:x="3416" fg:w="4"/><text x="42.1693%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.05%)</title><rect x="41.9193%" y="853" width="0.0491%" height="15" fill="rgb(250,64,4)" fg:x="3416" fg:w="4"/><text x="42.1693%" y="863.50"></text></g><g><title>ab_glyph::outlined::OutlinedGlyph::draw::{{closure}} (3 samples, 0.04%)</title><rect x="41.9315%" y="837" width="0.0368%" height="15" fill="rgb(218,41,53)" fg:x="3417" fg:w="3"/><text x="42.1815%" y="847.50"></text></g><g><title>ab_glyph_rasterizer::raster::Rasterizer::draw_line (3 samples, 0.04%)</title><rect x="41.9315%" y="821" width="0.0368%" height="15" fill="rgb(251,176,28)" fg:x="3417" fg:w="3"/><text x="42.1815%" y="831.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (8 samples, 0.10%)</title><rect x="41.8824%" y="1285" width="0.0982%" height="15" fill="rgb(247,22,9)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 0.10%)</title><rect x="41.8824%" y="1269" width="0.0982%" height="15" fill="rgb(218,201,14)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1279.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.10%)</title><rect x="41.8824%" y="1253" width="0.0982%" height="15" fill="rgb(218,94,10)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1263.50"></text></g><g><title>bevy_egui::systems::begin_frame (8 samples, 0.10%)</title><rect x="41.8824%" y="1237" width="0.0982%" height="15" fill="rgb(222,183,52)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1247.50"></text></g><g><title>egui::context::CtxRef::begin_frame (8 samples, 0.10%)</title><rect x="41.8824%" y="1221" width="0.0982%" height="15" fill="rgb(242,140,25)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1231.50"></text></g><g><title>egui::context::Context::begin_frame_mut (8 samples, 0.10%)</title><rect x="41.8824%" y="1205" width="0.0982%" height="15" fill="rgb(235,197,38)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1215.50"></text></g><g><title>epaint::text::fonts::Fonts::from_definitions (8 samples, 0.10%)</title><rect x="41.8824%" y="1189" width="0.0982%" height="15" fill="rgb(237,136,15)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.10%)</title><rect x="41.8824%" y="1173" width="0.0982%" height="15" fill="rgb(223,44,49)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1183.50"></text></g><g><title>&lt;alloc::collections::btree::map::BTreeMap&lt;K,V&gt; as core::iter::traits::collect::FromIterator&lt;(K,V)&gt;&gt;::from_iter (8 samples, 0.10%)</title><rect x="41.8824%" y="1157" width="0.0982%" height="15" fill="rgb(227,71,15)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (8 samples, 0.10%)</title><rect x="41.8824%" y="1141" width="0.0982%" height="15" fill="rgb(225,153,20)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (8 samples, 0.10%)</title><rect x="41.8824%" y="1125" width="0.0982%" height="15" fill="rgb(210,190,26)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (8 samples, 0.10%)</title><rect x="41.8824%" y="1109" width="0.0982%" height="15" fill="rgb(223,147,5)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (8 samples, 0.10%)</title><rect x="41.8824%" y="1093" width="0.0982%" height="15" fill="rgb(207,14,23)" fg:x="3413" fg:w="8"/><text x="42.1324%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="41.9683%" y="1077" width="0.0123%" height="15" fill="rgb(211,195,53)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="41.9683%" y="1061" width="0.0123%" height="15" fill="rgb(237,75,46)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="41.9683%" y="1045" width="0.0123%" height="15" fill="rgb(254,55,14)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="1055.50"></text></g><g><title>epaint::text::fonts::Fonts::from_definitions::{{closure}} (1 samples, 0.01%)</title><rect x="41.9683%" y="1029" width="0.0123%" height="15" fill="rgb(230,185,30)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="1039.50"></text></g><g><title>epaint::text::font::Font::new (1 samples, 0.01%)</title><rect x="41.9683%" y="1013" width="0.0123%" height="15" fill="rgb(220,14,11)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="1023.50"></text></g><g><title>epaint::text::font::Font::glyph_info (1 samples, 0.01%)</title><rect x="41.9683%" y="997" width="0.0123%" height="15" fill="rgb(215,169,44)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="1007.50"></text></g><g><title>epaint::text::font::Font::glyph_info_no_cache_or_fallback (1 samples, 0.01%)</title><rect x="41.9683%" y="981" width="0.0123%" height="15" fill="rgb(253,203,20)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="991.50"></text></g><g><title>epaint::text::font::FontImpl::glyph_info (1 samples, 0.01%)</title><rect x="41.9683%" y="965" width="0.0123%" height="15" fill="rgb(229,225,17)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="975.50"></text></g><g><title>epaint::text::font::allocate_glyph (1 samples, 0.01%)</title><rect x="41.9683%" y="949" width="0.0123%" height="15" fill="rgb(236,76,26)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="959.50"></text></g><g><title>ab_glyph::font::Font::outline_glyph (1 samples, 0.01%)</title><rect x="41.9683%" y="933" width="0.0123%" height="15" fill="rgb(234,15,30)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="943.50"></text></g><g><title>&lt;ab_glyph::font_arc::FontArc as ab_glyph::font::Font&gt;::outline (1 samples, 0.01%)</title><rect x="41.9683%" y="917" width="0.0123%" height="15" fill="rgb(211,113,48)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="927.50"></text></g><g><title>&lt;ab_glyph::ttfp::FontRef as ab_glyph::font::Font&gt;::outline (1 samples, 0.01%)</title><rect x="41.9683%" y="901" width="0.0123%" height="15" fill="rgb(221,31,36)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="911.50"></text></g><g><title>ttf_parser::Face::outline_glyph (1 samples, 0.01%)</title><rect x="41.9683%" y="885" width="0.0123%" height="15" fill="rgb(215,118,52)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="895.50"></text></g><g><title>ttf_parser::tables::glyf::Table::outline (1 samples, 0.01%)</title><rect x="41.9683%" y="869" width="0.0123%" height="15" fill="rgb(241,151,27)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="879.50"></text></g><g><title>ttf_parser::tables::glyf::outline_impl (1 samples, 0.01%)</title><rect x="41.9683%" y="853" width="0.0123%" height="15" fill="rgb(253,51,3)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="863.50"></text></g><g><title>ttf_parser::tables::glyf::parse_simple_outline (1 samples, 0.01%)</title><rect x="41.9683%" y="837" width="0.0123%" height="15" fill="rgb(216,201,24)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="847.50"></text></g><g><title>ttf_parser::tables::glyf::resolve_coords_len (1 samples, 0.01%)</title><rect x="41.9683%" y="821" width="0.0123%" height="15" fill="rgb(231,107,4)" fg:x="3420" fg:w="1"/><text x="42.2183%" y="831.50"></text></g><g><title>bevy_render::mesh::mesh::mesh_resource_provider_system (1 samples, 0.01%)</title><rect x="41.9806%" y="1237" width="0.0123%" height="15" fill="rgb(243,97,54)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (1 samples, 0.01%)</title><rect x="41.9806%" y="1221" width="0.0123%" height="15" fill="rgb(221,32,51)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1231.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (1 samples, 0.01%)</title><rect x="41.9806%" y="1205" width="0.0123%" height="15" fill="rgb(218,171,35)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1215.50"></text></g><g><title>wgpu::Device::create_buffer (1 samples, 0.01%)</title><rect x="41.9806%" y="1189" width="0.0123%" height="15" fill="rgb(214,20,53)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1199.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (1 samples, 0.01%)</title><rect x="41.9806%" y="1173" width="0.0123%" height="15" fill="rgb(239,9,52)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1183.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (1 samples, 0.01%)</title><rect x="41.9806%" y="1157" width="0.0123%" height="15" fill="rgb(215,114,45)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1167.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (1 samples, 0.01%)</title><rect x="41.9806%" y="1141" width="0.0123%" height="15" fill="rgb(208,118,9)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1151.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (1 samples, 0.01%)</title><rect x="41.9806%" y="1125" width="0.0123%" height="15" fill="rgb(235,7,39)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1135.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (1 samples, 0.01%)</title><rect x="41.9806%" y="1109" width="0.0123%" height="15" fill="rgb(243,225,15)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1119.50"></text></g><g><title>tracing::__macro_support::MacroCallsite::interest (1 samples, 0.01%)</title><rect x="41.9806%" y="1093" width="0.0123%" height="15" fill="rgb(225,216,18)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1103.50"></text></g><g><title>tracing::__macro_support::MacroCallsite::register (1 samples, 0.01%)</title><rect x="41.9806%" y="1077" width="0.0123%" height="15" fill="rgb(233,36,38)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1087.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.01%)</title><rect x="41.9806%" y="1061" width="0.0123%" height="15" fill="rgb(239,88,23)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1071.50"></text></g><g><title>std::sync::once::Once::call_inner (1 samples, 0.01%)</title><rect x="41.9806%" y="1045" width="0.0123%" height="15" fill="rgb(219,181,35)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1055.50"></text></g><g><title>tracing_core::callsite::register (1 samples, 0.01%)</title><rect x="41.9806%" y="1029" width="0.0123%" height="15" fill="rgb(215,18,46)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1039.50"></text></g><g><title>tracing_core::callsite::Registry::rebuild_callsite_interest (1 samples, 0.01%)</title><rect x="41.9806%" y="1013" width="0.0123%" height="15" fill="rgb(241,38,11)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="41.9806%" y="997" width="0.0123%" height="15" fill="rgb(248,169,45)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find_map (1 samples, 0.01%)</title><rect x="41.9806%" y="981" width="0.0123%" height="15" fill="rgb(239,50,49)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="41.9806%" y="965" width="0.0123%" height="15" fill="rgb(231,96,31)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="975.50"></text></g><g><title>tracing_core::callsite::Registry::rebuild_callsite_interest::{{closure}} (1 samples, 0.01%)</title><rect x="41.9806%" y="949" width="0.0123%" height="15" fill="rgb(224,193,37)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="959.50"></text></g><g><title>tracing_core::dispatcher::Registrar::try_register (1 samples, 0.01%)</title><rect x="41.9806%" y="933" width="0.0123%" height="15" fill="rgb(227,153,50)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="41.9806%" y="917" width="0.0123%" height="15" fill="rgb(249,228,3)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="927.50"></text></g><g><title>tracing_core::dispatcher::Registrar::try_register::{{closure}} (1 samples, 0.01%)</title><rect x="41.9806%" y="901" width="0.0123%" height="15" fill="rgb(219,164,43)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::register_callsite (1 samples, 0.01%)</title><rect x="41.9806%" y="885" width="0.0123%" height="15" fill="rgb(216,45,41)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::register_callsite (1 samples, 0.01%)</title><rect x="41.9806%" y="869" width="0.0123%" height="15" fill="rgb(210,226,51)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="879.50"></text></g><g><title>tracing_subscriber::layer::layered::Layered&lt;A,B,S&gt;::pick_interest (1 samples, 0.01%)</title><rect x="41.9806%" y="853" width="0.0123%" height="15" fill="rgb(209,117,49)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::register_callsite::{{closure}} (1 samples, 0.01%)</title><rect x="41.9806%" y="837" width="0.0123%" height="15" fill="rgb(206,196,24)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::register_callsite (1 samples, 0.01%)</title><rect x="41.9806%" y="821" width="0.0123%" height="15" fill="rgb(253,218,3)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::register_callsite (1 samples, 0.01%)</title><rect x="41.9806%" y="805" width="0.0123%" height="15" fill="rgb(252,166,2)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="815.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;tracing_subscriber::filter::directive::StaticDirective&gt;::enabled (1 samples, 0.01%)</title><rect x="41.9806%" y="789" width="0.0123%" height="15" fill="rgb(236,218,26)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="41.9806%" y="773" width="0.0123%" height="15" fill="rgb(254,84,19)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="783.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.01%)</title><rect x="41.9806%" y="757" width="0.0123%" height="15" fill="rgb(219,137,29)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="41.9806%" y="741" width="0.0123%" height="15" fill="rgb(227,47,52)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="751.50"></text></g><g><title>tracing_subscriber::filter::directive::DirectiveSet&lt;T&gt;::directives_for::{{closure}} (1 samples, 0.01%)</title><rect x="41.9806%" y="725" width="0.0123%" height="15" fill="rgb(229,167,24)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::filter::directive::StaticDirective as tracing_subscriber::filter::directive::Match&gt;::cares_about (1 samples, 0.01%)</title><rect x="41.9806%" y="709" width="0.0123%" height="15" fill="rgb(233,164,1)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="719.50"></text></g><g><title>tracing_core::metadata::Metadata::target (1 samples, 0.01%)</title><rect x="41.9806%" y="693" width="0.0123%" height="15" fill="rgb(218,88,48)" fg:x="3421" fg:w="1"/><text x="42.2306%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="41.9929%" y="1093" width="0.0123%" height="15" fill="rgb(226,214,24)" fg:x="3422" fg:w="1"/><text x="42.2429%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="41.9929%" y="1077" width="0.0123%" height="15" fill="rgb(233,29,12)" fg:x="3422" fg:w="1"/><text x="42.2429%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="41.9929%" y="1061" width="0.0123%" height="15" fill="rgb(219,120,34)" fg:x="3422" fg:w="1"/><text x="42.2429%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="41.9929%" y="1045" width="0.0123%" height="15" fill="rgb(226,78,44)" fg:x="3422" fg:w="1"/><text x="42.2429%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="41.9929%" y="1029" width="0.0123%" height="15" fill="rgb(240,15,48)" fg:x="3422" fg:w="1"/><text x="42.2429%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="41.9929%" y="1013" width="0.0123%" height="15" fill="rgb(253,176,7)" fg:x="3422" fg:w="1"/><text x="42.2429%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="41.9929%" y="997" width="0.0123%" height="15" fill="rgb(206,166,28)" fg:x="3422" fg:w="1"/><text x="42.2429%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="41.9929%" y="981" width="0.0123%" height="15" fill="rgb(241,53,51)" fg:x="3422" fg:w="1"/><text x="42.2429%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="41.9929%" y="965" width="0.0123%" height="15" fill="rgb(249,112,30)" fg:x="3422" fg:w="1"/><text x="42.2429%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="41.9929%" y="949" width="0.0123%" height="15" fill="rgb(217,85,30)" fg:x="3422" fg:w="1"/><text x="42.2429%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="41.9929%" y="933" width="0.0123%" height="15" fill="rgb(233,49,7)" fg:x="3422" fg:w="1"/><text x="42.2429%" y="943.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (2 samples, 0.02%)</title><rect x="41.9929%" y="1221" width="0.0245%" height="15" fill="rgb(234,109,9)" fg:x="3422" fg:w="2"/><text x="42.2429%" y="1231.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (2 samples, 0.02%)</title><rect x="41.9929%" y="1205" width="0.0245%" height="15" fill="rgb(253,95,22)" fg:x="3422" fg:w="2"/><text x="42.2429%" y="1215.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (2 samples, 0.02%)</title><rect x="41.9929%" y="1189" width="0.0245%" height="15" fill="rgb(233,176,25)" fg:x="3422" fg:w="2"/><text x="42.2429%" y="1199.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (2 samples, 0.02%)</title><rect x="41.9929%" y="1173" width="0.0245%" height="15" fill="rgb(236,33,39)" fg:x="3422" fg:w="2"/><text x="42.2429%" y="1183.50"></text></g><g><title>wgpu::Device::create_bind_group (2 samples, 0.02%)</title><rect x="41.9929%" y="1157" width="0.0245%" height="15" fill="rgb(223,226,42)" fg:x="3422" fg:w="2"/><text x="42.2429%" y="1167.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (2 samples, 0.02%)</title><rect x="41.9929%" y="1141" width="0.0245%" height="15" fill="rgb(216,99,33)" fg:x="3422" fg:w="2"/><text x="42.2429%" y="1151.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (2 samples, 0.02%)</title><rect x="41.9929%" y="1125" width="0.0245%" height="15" fill="rgb(235,84,23)" fg:x="3422" fg:w="2"/><text x="42.2429%" y="1135.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_bind_group (2 samples, 0.02%)</title><rect x="41.9929%" y="1109" width="0.0245%" height="15" fill="rgb(232,2,27)" fg:x="3422" fg:w="2"/><text x="42.2429%" y="1119.50"></text></g><g><title>wgpu_core::track::TrackerSet::new (1 samples, 0.01%)</title><rect x="42.0052%" y="1093" width="0.0123%" height="15" fill="rgb(241,23,22)" fg:x="3423" fg:w="1"/><text x="42.2552%" y="1103.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::new (1 samples, 0.01%)</title><rect x="42.0052%" y="1077" width="0.0123%" height="15" fill="rgb(211,73,27)" fg:x="3423" fg:w="1"/><text x="42.2552%" y="1087.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="42.0052%" y="1061" width="0.0123%" height="15" fill="rgb(235,109,49)" fg:x="3423" fg:w="1"/><text x="42.2552%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.01%)</title><rect x="42.0052%" y="1045" width="0.0123%" height="15" fill="rgb(230,99,29)" fg:x="3423" fg:w="1"/><text x="42.2552%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.01%)</title><rect x="42.0052%" y="1029" width="0.0123%" height="15" fill="rgb(245,199,7)" fg:x="3423" fg:w="1"/><text x="42.2552%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="42.0052%" y="1013" width="0.0123%" height="15" fill="rgb(217,179,10)" fg:x="3423" fg:w="1"/><text x="42.2552%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (1 samples, 0.01%)</title><rect x="42.0052%" y="997" width="0.0123%" height="15" fill="rgb(254,99,47)" fg:x="3423" fg:w="1"/><text x="42.2552%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (12 samples, 0.15%)</title><rect x="41.8824%" y="1493" width="0.1473%" height="15" fill="rgb(251,121,7)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1503.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (12 samples, 0.15%)</title><rect x="41.8824%" y="1477" width="0.1473%" height="15" fill="rgb(250,177,26)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1487.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.15%)</title><rect x="41.8824%" y="1461" width="0.1473%" height="15" fill="rgb(232,88,15)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1471.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.15%)</title><rect x="41.8824%" y="1445" width="0.1473%" height="15" fill="rgb(251,54,54)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1455.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (12 samples, 0.15%)</title><rect x="41.8824%" y="1429" width="0.1473%" height="15" fill="rgb(208,177,15)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1439.50"></text></g><g><title>async_executor::Executor::try_tick (12 samples, 0.15%)</title><rect x="41.8824%" y="1413" width="0.1473%" height="15" fill="rgb(205,97,32)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1423.50"></text></g><g><title>async_task::runnable::Runnable::run (12 samples, 0.15%)</title><rect x="41.8824%" y="1397" width="0.1473%" height="15" fill="rgb(217,192,13)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1407.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (12 samples, 0.15%)</title><rect x="41.8824%" y="1381" width="0.1473%" height="15" fill="rgb(215,163,41)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1391.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.15%)</title><rect x="41.8824%" y="1365" width="0.1473%" height="15" fill="rgb(246,83,29)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1375.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (12 samples, 0.15%)</title><rect x="41.8824%" y="1349" width="0.1473%" height="15" fill="rgb(219,2,45)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1359.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (12 samples, 0.15%)</title><rect x="41.8824%" y="1333" width="0.1473%" height="15" fill="rgb(242,215,33)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1343.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (12 samples, 0.15%)</title><rect x="41.8824%" y="1317" width="0.1473%" height="15" fill="rgb(217,1,6)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1327.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (12 samples, 0.15%)</title><rect x="41.8824%" y="1301" width="0.1473%" height="15" fill="rgb(207,85,52)" fg:x="3413" fg:w="12"/><text x="42.1324%" y="1311.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (4 samples, 0.05%)</title><rect x="41.9806%" y="1285" width="0.0491%" height="15" fill="rgb(231,171,19)" fg:x="3421" fg:w="4"/><text x="42.2306%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.05%)</title><rect x="41.9806%" y="1269" width="0.0491%" height="15" fill="rgb(207,128,4)" fg:x="3421" fg:w="4"/><text x="42.2306%" y="1279.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.05%)</title><rect x="41.9806%" y="1253" width="0.0491%" height="15" fill="rgb(219,208,4)" fg:x="3421" fg:w="4"/><text x="42.2306%" y="1263.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (3 samples, 0.04%)</title><rect x="41.9929%" y="1237" width="0.0368%" height="15" fill="rgb(235,161,42)" fg:x="3422" fg:w="3"/><text x="42.2429%" y="1247.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (1 samples, 0.01%)</title><rect x="42.0174%" y="1221" width="0.0123%" height="15" fill="rgb(247,218,18)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1231.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (1 samples, 0.01%)</title><rect x="42.0174%" y="1205" width="0.0123%" height="15" fill="rgb(232,114,51)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1215.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (1 samples, 0.01%)</title><rect x="42.0174%" y="1189" width="0.0123%" height="15" fill="rgb(222,95,3)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1199.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (1 samples, 0.01%)</title><rect x="42.0174%" y="1173" width="0.0123%" height="15" fill="rgb(240,65,29)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1183.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (1 samples, 0.01%)</title><rect x="42.0174%" y="1157" width="0.0123%" height="15" fill="rgb(249,209,20)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1167.50"></text></g><g><title>bevy_glsl_to_spirv::compile (1 samples, 0.01%)</title><rect x="42.0174%" y="1141" width="0.0123%" height="15" fill="rgb(241,48,37)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1151.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (1 samples, 0.01%)</title><rect x="42.0174%" y="1125" width="0.0123%" height="15" fill="rgb(230,140,42)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1135.50"></text></g><g><title>glslang_initialize_process (1 samples, 0.01%)</title><rect x="42.0174%" y="1109" width="0.0123%" height="15" fill="rgb(230,176,45)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1119.50"></text></g><g><title>glslang::InitializeProcess (1 samples, 0.01%)</title><rect x="42.0174%" y="1093" width="0.0123%" height="15" fill="rgb(245,112,21)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1103.50"></text></g><g><title>ShInitialize (1 samples, 0.01%)</title><rect x="42.0174%" y="1077" width="0.0123%" height="15" fill="rgb(207,183,35)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1087.50"></text></g><g><title>glslang::HlslScanContext::fillInKeywordMap (1 samples, 0.01%)</title><rect x="42.0174%" y="1061" width="0.0123%" height="15" fill="rgb(227,44,33)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1071.50"></text></g><g><title>std::unordered_map&lt;char const*, glslang::EHlslTokenClass, (anonymous namespace)::str_hash, (anonymous namespace)::str_eq, std::allocator&lt;std::pair&lt;char const* const, glslang::EHlslTokenClass&gt; &gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="42.0174%" y="1045" width="0.0123%" height="15" fill="rgb(246,120,21)" fg:x="3424" fg:w="1"/><text x="42.2674%" y="1055.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (1 samples, 0.01%)</title><rect x="42.0297%" y="1013" width="0.0123%" height="15" fill="rgb(235,57,52)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="1023.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (1 samples, 0.01%)</title><rect x="42.0297%" y="997" width="0.0123%" height="15" fill="rgb(238,84,10)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="1007.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (1 samples, 0.01%)</title><rect x="42.0297%" y="981" width="0.0123%" height="15" fill="rgb(251,200,32)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="991.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="42.0297%" y="965" width="0.0123%" height="15" fill="rgb(247,159,13)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="975.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="42.0297%" y="949" width="0.0123%" height="15" fill="rgb(238,64,4)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="42.0297%" y="933" width="0.0123%" height="15" fill="rgb(221,131,51)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="943.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="42.0297%" y="917" width="0.0123%" height="15" fill="rgb(242,5,29)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="927.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (1 samples, 0.01%)</title><rect x="42.0297%" y="901" width="0.0123%" height="15" fill="rgb(214,130,32)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="911.50"></text></g><g><title>tracing::span::Span::new_with (1 samples, 0.01%)</title><rect x="42.0297%" y="885" width="0.0123%" height="15" fill="rgb(244,210,16)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="895.50"></text></g><g><title>tracing::span::Span::make_with (1 samples, 0.01%)</title><rect x="42.0297%" y="869" width="0.0123%" height="15" fill="rgb(234,48,26)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="879.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="42.0297%" y="853" width="0.0123%" height="15" fill="rgb(231,82,38)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="42.0297%" y="837" width="0.0123%" height="15" fill="rgb(254,128,41)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="42.0297%" y="821" width="0.0123%" height="15" fill="rgb(212,73,49)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="42.0297%" y="805" width="0.0123%" height="15" fill="rgb(205,62,54)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="815.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.01%)</title><rect x="42.0297%" y="789" width="0.0123%" height="15" fill="rgb(228,0,8)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="799.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="42.0297%" y="773" width="0.0123%" height="15" fill="rgb(251,28,17)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="783.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="42.0297%" y="757" width="0.0123%" height="15" fill="rgb(238,105,27)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="767.50"></text></g><g><title>tracing_core::span::Attributes::record (1 samples, 0.01%)</title><rect x="42.0297%" y="741" width="0.0123%" height="15" fill="rgb(237,216,33)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="751.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="42.0297%" y="725" width="0.0123%" height="15" fill="rgb(229,228,25)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="735.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="42.0297%" y="709" width="0.0123%" height="15" fill="rgb(233,75,23)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="42.0297%" y="693" width="0.0123%" height="15" fill="rgb(231,207,16)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="42.0297%" y="677" width="0.0123%" height="15" fill="rgb(231,191,45)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="687.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="42.0297%" y="661" width="0.0123%" height="15" fill="rgb(224,133,17)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="42.0297%" y="645" width="0.0123%" height="15" fill="rgb(209,178,27)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="42.0297%" y="629" width="0.0123%" height="15" fill="rgb(218,37,11)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="42.0297%" y="613" width="0.0123%" height="15" fill="rgb(251,226,25)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="42.0297%" y="597" width="0.0123%" height="15" fill="rgb(209,222,27)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="42.0297%" y="581" width="0.0123%" height="15" fill="rgb(238,22,21)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="42.0297%" y="565" width="0.0123%" height="15" fill="rgb(233,161,25)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="42.0297%" y="549" width="0.0123%" height="15" fill="rgb(226,122,53)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="42.0297%" y="533" width="0.0123%" height="15" fill="rgb(220,123,17)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="42.0297%" y="517" width="0.0123%" height="15" fill="rgb(230,224,35)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="42.0297%" y="501" width="0.0123%" height="15" fill="rgb(246,83,8)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="511.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="42.0297%" y="485" width="0.0123%" height="15" fill="rgb(230,214,17)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="495.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="42.0297%" y="469" width="0.0123%" height="15" fill="rgb(222,97,18)" fg:x="3425" fg:w="1"/><text x="42.2797%" y="479.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (2 samples, 0.02%)</title><rect x="42.0297%" y="1461" width="0.0245%" height="15" fill="rgb(206,79,1)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1471.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (2 samples, 0.02%)</title><rect x="42.0297%" y="1445" width="0.0245%" height="15" fill="rgb(214,121,34)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1455.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2 samples, 0.02%)</title><rect x="42.0297%" y="1429" width="0.0245%" height="15" fill="rgb(249,199,46)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1439.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (2 samples, 0.02%)</title><rect x="42.0297%" y="1413" width="0.0245%" height="15" fill="rgb(214,222,46)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1423.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (2 samples, 0.02%)</title><rect x="42.0297%" y="1397" width="0.0245%" height="15" fill="rgb(248,168,30)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1407.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (2 samples, 0.02%)</title><rect x="42.0297%" y="1381" width="0.0245%" height="15" fill="rgb(226,14,28)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1391.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="42.0297%" y="1365" width="0.0245%" height="15" fill="rgb(253,123,1)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="42.0297%" y="1349" width="0.0245%" height="15" fill="rgb(225,24,42)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1359.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (2 samples, 0.02%)</title><rect x="42.0297%" y="1333" width="0.0245%" height="15" fill="rgb(216,161,37)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1343.50"></text></g><g><title>async_executor::Executor::try_tick (2 samples, 0.02%)</title><rect x="42.0297%" y="1317" width="0.0245%" height="15" fill="rgb(251,164,26)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1327.50"></text></g><g><title>async_task::runnable::Runnable::run (2 samples, 0.02%)</title><rect x="42.0297%" y="1301" width="0.0245%" height="15" fill="rgb(219,177,3)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1311.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2 samples, 0.02%)</title><rect x="42.0297%" y="1285" width="0.0245%" height="15" fill="rgb(222,65,0)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1295.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="42.0297%" y="1269" width="0.0245%" height="15" fill="rgb(223,69,54)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1279.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2 samples, 0.02%)</title><rect x="42.0297%" y="1253" width="0.0245%" height="15" fill="rgb(235,30,27)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="42.0297%" y="1237" width="0.0245%" height="15" fill="rgb(220,183,50)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1247.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2 samples, 0.02%)</title><rect x="42.0297%" y="1221" width="0.0245%" height="15" fill="rgb(248,198,15)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1231.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.02%)</title><rect x="42.0297%" y="1205" width="0.0245%" height="15" fill="rgb(222,211,4)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1215.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="42.0297%" y="1189" width="0.0245%" height="15" fill="rgb(214,102,34)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="42.0297%" y="1173" width="0.0245%" height="15" fill="rgb(245,92,5)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1183.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="42.0297%" y="1157" width="0.0245%" height="15" fill="rgb(252,72,51)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1167.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (2 samples, 0.02%)</title><rect x="42.0297%" y="1141" width="0.0245%" height="15" fill="rgb(252,208,19)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1151.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (2 samples, 0.02%)</title><rect x="42.0297%" y="1125" width="0.0245%" height="15" fill="rgb(211,69,7)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1135.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system::{{closure}} (2 samples, 0.02%)</title><rect x="42.0297%" y="1109" width="0.0245%" height="15" fill="rgb(211,27,16)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1119.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (2 samples, 0.02%)</title><rect x="42.0297%" y="1093" width="0.0245%" height="15" fill="rgb(219,216,14)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1103.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer (2 samples, 0.02%)</title><rect x="42.0297%" y="1077" width="0.0245%" height="15" fill="rgb(219,71,8)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1087.50"></text></g><g><title>wgpu::Device::create_buffer (2 samples, 0.02%)</title><rect x="42.0297%" y="1061" width="0.0245%" height="15" fill="rgb(223,170,53)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1071.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (2 samples, 0.02%)</title><rect x="42.0297%" y="1045" width="0.0245%" height="15" fill="rgb(246,21,26)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1055.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (2 samples, 0.02%)</title><rect x="42.0297%" y="1029" width="0.0245%" height="15" fill="rgb(248,20,46)" fg:x="3425" fg:w="2"/><text x="42.2797%" y="1039.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register_identity (1 samples, 0.01%)</title><rect x="42.0420%" y="1013" width="0.0123%" height="15" fill="rgb(252,94,11)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="1023.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register (1 samples, 0.01%)</title><rect x="42.0420%" y="997" width="0.0123%" height="15" fill="rgb(236,163,8)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="1007.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (1 samples, 0.01%)</title><rect x="42.0420%" y="981" width="0.0123%" height="15" fill="rgb(217,221,45)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="991.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (1 samples, 0.01%)</title><rect x="42.0420%" y="965" width="0.0123%" height="15" fill="rgb(238,38,17)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize_with (1 samples, 0.01%)</title><rect x="42.0420%" y="949" width="0.0123%" height="15" fill="rgb(242,210,23)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.01%)</title><rect x="42.0420%" y="933" width="0.0123%" height="15" fill="rgb(250,86,53)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="42.0420%" y="917" width="0.0123%" height="15" fill="rgb(223,168,25)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="42.0420%" y="901" width="0.0123%" height="15" fill="rgb(251,189,4)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="42.0420%" y="885" width="0.0123%" height="15" fill="rgb(245,19,28)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="42.0420%" y="869" width="0.0123%" height="15" fill="rgb(207,10,34)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="42.0420%" y="853" width="0.0123%" height="15" fill="rgb(235,153,31)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="42.0420%" y="837" width="0.0123%" height="15" fill="rgb(228,72,37)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="42.0420%" y="821" width="0.0123%" height="15" fill="rgb(215,15,16)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="831.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="42.0420%" y="805" width="0.0123%" height="15" fill="rgb(250,119,29)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="815.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="42.0420%" y="789" width="0.0123%" height="15" fill="rgb(214,59,1)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="42.0420%" y="773" width="0.0123%" height="15" fill="rgb(223,109,25)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="42.0420%" y="757" width="0.0123%" height="15" fill="rgb(230,198,22)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="42.0420%" y="741" width="0.0123%" height="15" fill="rgb(245,184,46)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="42.0420%" y="725" width="0.0123%" height="15" fill="rgb(253,73,16)" fg:x="3426" fg:w="1"/><text x="42.2920%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (4 samples, 0.05%)</title><rect x="42.0542%" y="1445" width="0.0491%" height="15" fill="rgb(206,94,45)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1455.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (4 samples, 0.05%)</title><rect x="42.0542%" y="1429" width="0.0491%" height="15" fill="rgb(236,83,27)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1439.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (4 samples, 0.05%)</title><rect x="42.0542%" y="1413" width="0.0491%" height="15" fill="rgb(220,196,8)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1423.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (4 samples, 0.05%)</title><rect x="42.0542%" y="1397" width="0.0491%" height="15" fill="rgb(254,185,14)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1407.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (4 samples, 0.05%)</title><rect x="42.0542%" y="1381" width="0.0491%" height="15" fill="rgb(226,50,22)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1391.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (4 samples, 0.05%)</title><rect x="42.0542%" y="1365" width="0.0491%" height="15" fill="rgb(253,147,0)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1375.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (4 samples, 0.05%)</title><rect x="42.0542%" y="1349" width="0.0491%" height="15" fill="rgb(252,46,33)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (4 samples, 0.05%)</title><rect x="42.0542%" y="1333" width="0.0491%" height="15" fill="rgb(242,22,54)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (4 samples, 0.05%)</title><rect x="42.0542%" y="1317" width="0.0491%" height="15" fill="rgb(223,178,32)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (4 samples, 0.05%)</title><rect x="42.0542%" y="1301" width="0.0491%" height="15" fill="rgb(214,106,53)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1311.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="42.0542%" y="1285" width="0.0491%" height="15" fill="rgb(232,65,50)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1295.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (4 samples, 0.05%)</title><rect x="42.0542%" y="1269" width="0.0491%" height="15" fill="rgb(231,110,28)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1279.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (4 samples, 0.05%)</title><rect x="42.0542%" y="1253" width="0.0491%" height="15" fill="rgb(216,71,40)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1263.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (4 samples, 0.05%)</title><rect x="42.0542%" y="1237" width="0.0491%" height="15" fill="rgb(229,89,53)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1247.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (4 samples, 0.05%)</title><rect x="42.0542%" y="1221" width="0.0491%" height="15" fill="rgb(210,124,14)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1231.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (4 samples, 0.05%)</title><rect x="42.0542%" y="1205" width="0.0491%" height="15" fill="rgb(236,213,6)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1215.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1189" width="0.0491%" height="15" fill="rgb(228,41,5)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1173" width="0.0491%" height="15" fill="rgb(221,167,25)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1157" width="0.0491%" height="15" fill="rgb(228,144,37)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1141" width="0.0491%" height="15" fill="rgb(227,189,38)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1125" width="0.0491%" height="15" fill="rgb(218,8,2)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1109" width="0.0491%" height="15" fill="rgb(209,61,28)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1093" width="0.0491%" height="15" fill="rgb(233,140,39)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1077" width="0.0491%" height="15" fill="rgb(251,66,48)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1061" width="0.0491%" height="15" fill="rgb(210,44,45)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1045" width="0.0491%" height="15" fill="rgb(214,136,46)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1029" width="0.0491%" height="15" fill="rgb(207,130,50)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="1013" width="0.0491%" height="15" fill="rgb(228,102,49)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="997" width="0.0491%" height="15" fill="rgb(253,55,1)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="981" width="0.0491%" height="15" fill="rgb(238,222,9)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="42.0542%" y="965" width="0.0491%" height="15" fill="rgb(246,99,6)" fg:x="3427" fg:w="4"/><text x="42.3042%" y="975.50"></text></g><g><title>[engine] (1 samples, 0.01%)</title><rect x="42.1156%" y="1173" width="0.0123%" height="15" fill="rgb(219,110,26)" fg:x="3432" fg:w="1"/><text x="42.3656%" y="1183.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="42.1279%" y="1173" width="0.0123%" height="15" fill="rgb(239,160,33)" fg:x="3433" fg:w="1"/><text x="42.3779%" y="1183.50"></text></g><g><title>glslang::TBuiltIns::relateTabledBuiltins (5 samples, 0.06%)</title><rect x="42.1033%" y="1205" width="0.0614%" height="15" fill="rgb(220,202,23)" fg:x="3431" fg:w="5"/><text x="42.3533%" y="1215.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (5 samples, 0.06%)</title><rect x="42.1033%" y="1189" width="0.0614%" height="15" fill="rgb(208,80,26)" fg:x="3431" fg:w="5"/><text x="42.3533%" y="1199.50"></text></g><g><title>std::_Rb_tree_increment (2 samples, 0.02%)</title><rect x="42.1401%" y="1173" width="0.0245%" height="15" fill="rgb(243,85,7)" fg:x="3434" fg:w="2"/><text x="42.3901%" y="1183.50"></text></g><g><title>glslang::TSymbolTable::setVariableExtensions (1 samples, 0.01%)</title><rect x="42.1647%" y="1205" width="0.0123%" height="15" fill="rgb(228,77,47)" fg:x="3436" fg:w="1"/><text x="42.4147%" y="1215.50"></text></g><g><title>glslang::GetThreadPoolAllocator (1 samples, 0.01%)</title><rect x="42.1647%" y="1189" width="0.0123%" height="15" fill="rgb(212,226,8)" fg:x="3436" fg:w="1"/><text x="42.4147%" y="1199.50"></text></g><g><title>__GI___pthread_getspecific (1 samples, 0.01%)</title><rect x="42.1647%" y="1173" width="0.0123%" height="15" fill="rgb(241,120,54)" fg:x="3436" fg:w="1"/><text x="42.4147%" y="1183.50"></text></g><g><title>__memchr_avx2 (1 samples, 0.01%)</title><rect x="42.2383%" y="1189" width="0.0123%" height="15" fill="rgb(226,80,16)" fg:x="3442" fg:w="1"/><text x="42.4883%" y="1199.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (13 samples, 0.16%)</title><rect x="42.1033%" y="1221" width="0.1595%" height="15" fill="rgb(240,76,13)" fg:x="3431" fg:w="13"/><text x="42.3533%" y="1231.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (7 samples, 0.09%)</title><rect x="42.1770%" y="1205" width="0.0859%" height="15" fill="rgb(252,74,8)" fg:x="3437" fg:w="7"/><text x="42.4270%" y="1215.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="42.2506%" y="1189" width="0.0123%" height="15" fill="rgb(244,155,2)" fg:x="3443" fg:w="1"/><text x="42.5006%" y="1199.50"></text></g><g><title>glslang::GetThreadPoolAllocator (1 samples, 0.01%)</title><rect x="42.3119%" y="1141" width="0.0123%" height="15" fill="rgb(215,81,35)" fg:x="3448" fg:w="1"/><text x="42.5619%" y="1151.50"></text></g><g><title>[engine] (1 samples, 0.01%)</title><rect x="42.3119%" y="1125" width="0.0123%" height="15" fill="rgb(206,55,2)" fg:x="3448" fg:w="1"/><text x="42.5619%" y="1135.50"></text></g><g><title>glslang::TType::clone (2 samples, 0.02%)</title><rect x="42.3119%" y="1157" width="0.0245%" height="15" fill="rgb(231,2,34)" fg:x="3448" fg:w="2"/><text x="42.5619%" y="1167.50"></text></g><g><title>glslang::TType::deepCopy (1 samples, 0.01%)</title><rect x="42.3242%" y="1141" width="0.0123%" height="15" fill="rgb(242,176,48)" fg:x="3449" fg:w="1"/><text x="42.5742%" y="1151.50"></text></g><g><title>glslang::TFunction::clone (6 samples, 0.07%)</title><rect x="42.2751%" y="1189" width="0.0736%" height="15" fill="rgb(249,31,36)" fg:x="3445" fg:w="6"/><text x="42.5251%" y="1199.50"></text></g><g><title>glslang::TFunction::TFunction (6 samples, 0.07%)</title><rect x="42.2751%" y="1173" width="0.0736%" height="15" fill="rgb(205,18,17)" fg:x="3445" fg:w="6"/><text x="42.5251%" y="1183.50"></text></g><g><title>glslang::TType::deepCopy (1 samples, 0.01%)</title><rect x="42.3365%" y="1157" width="0.0123%" height="15" fill="rgb(254,130,5)" fg:x="3450" fg:w="1"/><text x="42.5865%" y="1167.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (1 samples, 0.01%)</title><rect x="42.3488%" y="1157" width="0.0123%" height="15" fill="rgb(229,42,45)" fg:x="3451" fg:w="1"/><text x="42.5988%" y="1167.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="42.3488%" y="1141" width="0.0123%" height="15" fill="rgb(245,95,25)" fg:x="3451" fg:w="1"/><text x="42.5988%" y="1151.50"></text></g><g><title>glslang::TSymbolTable::copyTable (9 samples, 0.11%)</title><rect x="42.2629%" y="1221" width="0.1104%" height="15" fill="rgb(249,193,38)" fg:x="3444" fg:w="9"/><text x="42.5129%" y="1231.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (9 samples, 0.11%)</title><rect x="42.2629%" y="1205" width="0.1104%" height="15" fill="rgb(241,140,43)" fg:x="3444" fg:w="9"/><text x="42.5129%" y="1215.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (2 samples, 0.02%)</title><rect x="42.3488%" y="1189" width="0.0245%" height="15" fill="rgb(245,78,48)" fg:x="3451" fg:w="2"/><text x="42.5988%" y="1199.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (2 samples, 0.02%)</title><rect x="42.3488%" y="1173" width="0.0245%" height="15" fill="rgb(214,92,39)" fg:x="3451" fg:w="2"/><text x="42.5988%" y="1183.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_get_insert_unique_pos (1 samples, 0.01%)</title><rect x="42.3610%" y="1157" width="0.0123%" height="15" fill="rgb(211,189,14)" fg:x="3452" fg:w="1"/><text x="42.6110%" y="1167.50"></text></g><g><title>glslang::TSymbolTableLevel::readOnly (4 samples, 0.05%)</title><rect x="42.3733%" y="1221" width="0.0491%" height="15" fill="rgb(218,7,24)" fg:x="3453" fg:w="4"/><text x="42.6233%" y="1231.50"></text></g><g><title>std::_Rb_tree_increment (4 samples, 0.05%)</title><rect x="42.3733%" y="1205" width="0.0491%" height="15" fill="rgb(224,200,49)" fg:x="3453" fg:w="4"/><text x="42.6233%" y="1215.50"></text></g><g><title>std::_Rb_tree_increment (4 samples, 0.05%)</title><rect x="42.3733%" y="1189" width="0.0491%" height="15" fill="rgb(218,210,14)" fg:x="3453" fg:w="4"/><text x="42.6233%" y="1199.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (29 samples, 0.36%)</title><rect x="42.1033%" y="1333" width="0.3559%" height="15" fill="rgb(234,142,31)" fg:x="3431" fg:w="29"/><text x="42.3533%" y="1343.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (29 samples, 0.36%)</title><rect x="42.1033%" y="1317" width="0.3559%" height="15" fill="rgb(227,165,2)" fg:x="3431" fg:w="29"/><text x="42.3533%" y="1327.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (29 samples, 0.36%)</title><rect x="42.1033%" y="1301" width="0.3559%" height="15" fill="rgb(232,44,46)" fg:x="3431" fg:w="29"/><text x="42.3533%" y="1311.50"></text></g><g><title>bevy_glsl_to_spirv::compile (29 samples, 0.36%)</title><rect x="42.1033%" y="1285" width="0.3559%" height="15" fill="rgb(236,149,47)" fg:x="3431" fg:w="29"/><text x="42.3533%" y="1295.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (29 samples, 0.36%)</title><rect x="42.1033%" y="1269" width="0.3559%" height="15" fill="rgb(227,45,31)" fg:x="3431" fg:w="29"/><text x="42.3533%" y="1279.50"></text></g><g><title>glslang_shader_preprocess (29 samples, 0.36%)</title><rect x="42.1033%" y="1253" width="0.3559%" height="15" fill="rgb(240,176,51)" fg:x="3431" fg:w="29"/><text x="42.3533%" y="1263.50"></text></g><g><title>glslang::TShader::preprocess (29 samples, 0.36%)</title><rect x="42.1033%" y="1237" width="0.3559%" height="15" fill="rgb(249,146,41)" fg:x="3431" fg:w="29"/><text x="42.3533%" y="1247.50"></text></g><g><title>glslang::TSymbolTableLevel::~TSymbolTableLevel (3 samples, 0.04%)</title><rect x="42.4224%" y="1221" width="0.0368%" height="15" fill="rgb(213,208,4)" fg:x="3457" fg:w="3"/><text x="42.6724%" y="1231.50"></text></g><g><title>glslang::TFunction::~TFunction (3 samples, 0.04%)</title><rect x="42.4224%" y="1205" width="0.0368%" height="15" fill="rgb(245,84,36)" fg:x="3457" fg:w="3"/><text x="42.6724%" y="1215.50"></text></g><g><title>glslang::TBuiltIns::relateTabledBuiltins (3 samples, 0.04%)</title><rect x="42.4592%" y="1173" width="0.0368%" height="15" fill="rgb(254,84,18)" fg:x="3460" fg:w="3"/><text x="42.7092%" y="1183.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (3 samples, 0.04%)</title><rect x="42.4592%" y="1157" width="0.0368%" height="15" fill="rgb(225,38,54)" fg:x="3460" fg:w="3"/><text x="42.7092%" y="1167.50"></text></g><g><title>__memchr_avx2 (1 samples, 0.01%)</title><rect x="42.5451%" y="1157" width="0.0123%" height="15" fill="rgb(246,50,30)" fg:x="3467" fg:w="1"/><text x="42.7951%" y="1167.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (9 samples, 0.11%)</title><rect x="42.4592%" y="1189" width="0.1104%" height="15" fill="rgb(246,148,9)" fg:x="3460" fg:w="9"/><text x="42.7092%" y="1199.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (6 samples, 0.07%)</title><rect x="42.4960%" y="1173" width="0.0736%" height="15" fill="rgb(223,75,4)" fg:x="3463" fg:w="6"/><text x="42.7460%" y="1183.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="42.5574%" y="1157" width="0.0123%" height="15" fill="rgb(239,148,41)" fg:x="3468" fg:w="1"/><text x="42.8074%" y="1167.50"></text></g><g><title>glslang::TType::clone (1 samples, 0.01%)</title><rect x="42.6065%" y="1125" width="0.0123%" height="15" fill="rgb(205,195,3)" fg:x="3472" fg:w="1"/><text x="42.8565%" y="1135.50"></text></g><g><title>glslang::TType::deepCopy (1 samples, 0.01%)</title><rect x="42.6065%" y="1109" width="0.0123%" height="15" fill="rgb(254,161,1)" fg:x="3472" fg:w="1"/><text x="42.8565%" y="1119.50"></text></g><g><title>glslang::TFunction::clone (4 samples, 0.05%)</title><rect x="42.5819%" y="1157" width="0.0491%" height="15" fill="rgb(211,229,8)" fg:x="3470" fg:w="4"/><text x="42.8319%" y="1167.50"></text></g><g><title>glslang::TFunction::TFunction (4 samples, 0.05%)</title><rect x="42.5819%" y="1141" width="0.0491%" height="15" fill="rgb(220,97,9)" fg:x="3470" fg:w="4"/><text x="42.8319%" y="1151.50"></text></g><g><title>glslang::TType::deepCopy (1 samples, 0.01%)</title><rect x="42.6187%" y="1125" width="0.0123%" height="15" fill="rgb(240,218,8)" fg:x="3473" fg:w="1"/><text x="42.8687%" y="1135.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (3 samples, 0.04%)</title><rect x="42.6310%" y="1157" width="0.0368%" height="15" fill="rgb(250,44,0)" fg:x="3474" fg:w="3"/><text x="42.8810%" y="1167.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (3 samples, 0.04%)</title><rect x="42.6310%" y="1141" width="0.0368%" height="15" fill="rgb(236,41,53)" fg:x="3474" fg:w="3"/><text x="42.8810%" y="1151.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_get_insert_unique_pos (3 samples, 0.04%)</title><rect x="42.6310%" y="1125" width="0.0368%" height="15" fill="rgb(218,227,13)" fg:x="3474" fg:w="3"/><text x="42.8810%" y="1135.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="42.6433%" y="1109" width="0.0245%" height="15" fill="rgb(217,94,32)" fg:x="3475" fg:w="2"/><text x="42.8933%" y="1119.50"></text></g><g><title>glslang::TSymbolTable::copyTable (9 samples, 0.11%)</title><rect x="42.5696%" y="1189" width="0.1104%" height="15" fill="rgb(213,217,12)" fg:x="3469" fg:w="9"/><text x="42.8196%" y="1199.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (9 samples, 0.11%)</title><rect x="42.5696%" y="1173" width="0.1104%" height="15" fill="rgb(229,13,46)" fg:x="3469" fg:w="9"/><text x="42.8196%" y="1183.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="42.6678%" y="1157" width="0.0123%" height="15" fill="rgb(243,139,5)" fg:x="3477" fg:w="1"/><text x="42.9178%" y="1167.50"></text></g><g><title>glslang::TSymbolTableLevel::readOnly (4 samples, 0.05%)</title><rect x="42.6801%" y="1189" width="0.0491%" height="15" fill="rgb(249,38,45)" fg:x="3478" fg:w="4"/><text x="42.9301%" y="1199.50"></text></g><g><title>std::_Rb_tree_increment (2 samples, 0.02%)</title><rect x="42.7046%" y="1173" width="0.0245%" height="15" fill="rgb(216,70,11)" fg:x="3480" fg:w="2"/><text x="42.9546%" y="1183.50"></text></g><g><title>std::_Rb_tree_increment (2 samples, 0.02%)</title><rect x="42.7046%" y="1157" width="0.0245%" height="15" fill="rgb(253,101,25)" fg:x="3480" fg:w="2"/><text x="42.9546%" y="1167.50"></text></g><g><title>glslang::TSymbolTableLevel::~TSymbolTableLevel (1 samples, 0.01%)</title><rect x="42.7292%" y="1189" width="0.0123%" height="15" fill="rgb(207,197,30)" fg:x="3482" fg:w="1"/><text x="42.9792%" y="1199.50"></text></g><g><title>glslang::TFunction::~TFunction (1 samples, 0.01%)</title><rect x="42.7292%" y="1173" width="0.0123%" height="15" fill="rgb(238,87,13)" fg:x="3482" fg:w="1"/><text x="42.9792%" y="1183.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (53 samples, 0.65%)</title><rect x="42.1033%" y="1397" width="0.6504%" height="15" fill="rgb(215,155,8)" fg:x="3431" fg:w="53"/><text x="42.3533%" y="1407.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::prepare (53 samples, 0.65%)</title><rect x="42.1033%" y="1381" width="0.6504%" height="15" fill="rgb(239,166,38)" fg:x="3431" fg:w="53"/><text x="42.3533%" y="1391.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::init_pipeline (53 samples, 0.65%)</title><rect x="42.1033%" y="1365" width="0.6504%" height="15" fill="rgb(240,194,35)" fg:x="3431" fg:w="53"/><text x="42.3533%" y="1375.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (53 samples, 0.65%)</title><rect x="42.1033%" y="1349" width="0.6504%" height="15" fill="rgb(219,10,44)" fg:x="3431" fg:w="53"/><text x="42.3533%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.29%)</title><rect x="42.4592%" y="1333" width="0.2945%" height="15" fill="rgb(251,220,35)" fg:x="3460" fg:w="24"/><text x="42.7092%" y="1343.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (24 samples, 0.29%)</title><rect x="42.4592%" y="1317" width="0.2945%" height="15" fill="rgb(218,117,13)" fg:x="3460" fg:w="24"/><text x="42.7092%" y="1327.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (24 samples, 0.29%)</title><rect x="42.4592%" y="1301" width="0.2945%" height="15" fill="rgb(221,213,40)" fg:x="3460" fg:w="24"/><text x="42.7092%" y="1311.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (24 samples, 0.29%)</title><rect x="42.4592%" y="1285" width="0.2945%" height="15" fill="rgb(251,224,35)" fg:x="3460" fg:w="24"/><text x="42.7092%" y="1295.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (24 samples, 0.29%)</title><rect x="42.4592%" y="1269" width="0.2945%" height="15" fill="rgb(241,33,39)" fg:x="3460" fg:w="24"/><text x="42.7092%" y="1279.50"></text></g><g><title>bevy_glsl_to_spirv::compile (24 samples, 0.29%)</title><rect x="42.4592%" y="1253" width="0.2945%" height="15" fill="rgb(222,74,17)" fg:x="3460" fg:w="24"/><text x="42.7092%" y="1263.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (24 samples, 0.29%)</title><rect x="42.4592%" y="1237" width="0.2945%" height="15" fill="rgb(225,103,0)" fg:x="3460" fg:w="24"/><text x="42.7092%" y="1247.50"></text></g><g><title>glslang_shader_preprocess (24 samples, 0.29%)</title><rect x="42.4592%" y="1221" width="0.2945%" height="15" fill="rgb(240,0,12)" fg:x="3460" fg:w="24"/><text x="42.7092%" y="1231.50"></text></g><g><title>glslang::TShader::preprocess (24 samples, 0.29%)</title><rect x="42.4592%" y="1205" width="0.2945%" height="15" fill="rgb(233,213,37)" fg:x="3460" fg:w="24"/><text x="42.7092%" y="1215.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="42.7414%" y="1189" width="0.0123%" height="15" fill="rgb(225,84,52)" fg:x="3483" fg:w="1"/><text x="42.9914%" y="1199.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="42.7414%" y="1173" width="0.0123%" height="15" fill="rgb(247,160,51)" fg:x="3483" fg:w="1"/><text x="42.9914%" y="1183.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="42.7414%" y="1157" width="0.0123%" height="15" fill="rgb(244,60,51)" fg:x="3483" fg:w="1"/><text x="42.9914%" y="1167.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="42.7414%" y="1141" width="0.0123%" height="15" fill="rgb(233,114,7)" fg:x="3483" fg:w="1"/><text x="42.9914%" y="1151.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="42.7414%" y="1125" width="0.0123%" height="15" fill="rgb(246,136,16)" fg:x="3483" fg:w="1"/><text x="42.9914%" y="1135.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="42.7414%" y="1109" width="0.0123%" height="15" fill="rgb(243,114,45)" fg:x="3483" fg:w="1"/><text x="42.9914%" y="1119.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::end_render_pass (1 samples, 0.01%)</title><rect x="42.8028%" y="1253" width="0.0123%" height="15" fill="rgb(247,183,43)" fg:x="3488" fg:w="1"/><text x="43.0528%" y="1263.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::finish (1 samples, 0.01%)</title><rect x="42.8151%" y="1253" width="0.0123%" height="15" fill="rgb(251,210,42)" fg:x="3489" fg:w="1"/><text x="43.0651%" y="1263.50"></text></g><g><title>ash::device::DeviceV1_0::end_command_buffer (1 samples, 0.01%)</title><rect x="42.8151%" y="1237" width="0.0123%" height="15" fill="rgb(221,88,35)" fg:x="3489" fg:w="1"/><text x="43.0651%" y="1247.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::end_command_buffer (1 samples, 0.01%)</title><rect x="42.8151%" y="1221" width="0.0123%" height="15" fill="rgb(242,21,20)" fg:x="3489" fg:w="1"/><text x="43.0651%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="42.8151%" y="1205" width="0.0123%" height="15" fill="rgb(233,226,36)" fg:x="3489" fg:w="1"/><text x="43.0651%" y="1215.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="42.8273%" y="1253" width="0.0123%" height="15" fill="rgb(243,189,34)" fg:x="3490" fg:w="1"/><text x="43.0773%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="42.8396%" y="1253" width="0.0123%" height="15" fill="rgb(207,145,50)" fg:x="3491" fg:w="1"/><text x="43.0896%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="42.8396%" y="1237" width="0.0123%" height="15" fill="rgb(242,1,50)" fg:x="3491" fg:w="1"/><text x="43.0896%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="42.8396%" y="1221" width="0.0123%" height="15" fill="rgb(231,65,32)" fg:x="3491" fg:w="1"/><text x="43.0896%" y="1231.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="42.8396%" y="1205" width="0.0123%" height="15" fill="rgb(208,68,49)" fg:x="3491" fg:w="1"/><text x="43.0896%" y="1215.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="42.8396%" y="1189" width="0.0123%" height="15" fill="rgb(253,54,49)" fg:x="3491" fg:w="1"/><text x="43.0896%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="42.8519%" y="1253" width="0.0123%" height="15" fill="rgb(245,186,24)" fg:x="3492" fg:w="1"/><text x="43.1019%" y="1263.50"></text></g><g><title>arrayvec::ArrayVec&lt;A&gt;::len (1 samples, 0.01%)</title><rect x="42.8642%" y="1253" width="0.0123%" height="15" fill="rgb(209,2,41)" fg:x="3493" fg:w="1"/><text x="43.1142%" y="1263.50"></text></g><g><title>&lt;u8 as arrayvec::array::Index&gt;::to_usize (1 samples, 0.01%)</title><rect x="42.8642%" y="1237" width="0.0123%" height="15" fill="rgb(242,208,54)" fg:x="3493" fg:w="1"/><text x="43.1142%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::binding_model::PipelineLayout&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::binding_model::PipelineLayout&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="42.8764%" y="1253" width="0.0123%" height="15" fill="rgb(225,9,51)" fg:x="3494" fg:w="1"/><text x="43.1264%" y="1263.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.8764%" y="1237" width="0.0123%" height="15" fill="rgb(207,207,25)" fg:x="3494" fg:w="1"/><text x="43.1264%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.01%)</title><rect x="42.8764%" y="1221" width="0.0123%" height="15" fill="rgb(253,96,18)" fg:x="3494" fg:w="1"/><text x="43.1264%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="42.8764%" y="1205" width="0.0123%" height="15" fill="rgb(252,215,20)" fg:x="3494" fg:w="1"/><text x="43.1264%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="42.8764%" y="1189" width="0.0123%" height="15" fill="rgb(245,227,26)" fg:x="3494" fg:w="1"/><text x="43.1264%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="42.8887%" y="1253" width="0.0123%" height="15" fill="rgb(241,208,0)" fg:x="3495" fg:w="1"/><text x="43.1387%" y="1263.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.8887%" y="1237" width="0.0123%" height="15" fill="rgb(224,130,10)" fg:x="3495" fg:w="1"/><text x="43.1387%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.01%)</title><rect x="42.8887%" y="1221" width="0.0123%" height="15" fill="rgb(237,29,0)" fg:x="3495" fg:w="1"/><text x="43.1387%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="42.8887%" y="1205" width="0.0123%" height="15" fill="rgb(219,27,41)" fg:x="3495" fg:w="1"/><text x="43.1387%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="42.8887%" y="1189" width="0.0123%" height="15" fill="rgb(245,101,19)" fg:x="3495" fg:w="1"/><text x="43.1387%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::command::bundle::RenderBundle,wgpu_core::id::Id&lt;wgpu_core::command::bundle::RenderBundle&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="42.9010%" y="1253" width="0.0123%" height="15" fill="rgb(243,44,37)" fg:x="3496" fg:w="1"/><text x="43.1510%" y="1263.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.9010%" y="1237" width="0.0123%" height="15" fill="rgb(228,213,43)" fg:x="3496" fg:w="1"/><text x="43.1510%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.01%)</title><rect x="42.9010%" y="1221" width="0.0123%" height="15" fill="rgb(219,163,21)" fg:x="3496" fg:w="1"/><text x="43.1510%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="42.9010%" y="1205" width="0.0123%" height="15" fill="rgb(234,86,24)" fg:x="3496" fg:w="1"/><text x="43.1510%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="42.9010%" y="1189" width="0.0123%" height="15" fill="rgb(225,10,24)" fg:x="3496" fg:w="1"/><text x="43.1510%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (1 samples, 0.01%)</title><rect x="42.9132%" y="1253" width="0.0123%" height="15" fill="rgb(218,109,7)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="42.9132%" y="1237" width="0.0123%" height="15" fill="rgb(210,20,26)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="42.9132%" y="1221" width="0.0123%" height="15" fill="rgb(216,18,1)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="42.9132%" y="1205" width="0.0123%" height="15" fill="rgb(206,163,23)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="42.9132%" y="1189" width="0.0123%" height="15" fill="rgb(229,150,31)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.9132%" y="1173" width="0.0123%" height="15" fill="rgb(231,10,5)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="42.9132%" y="1157" width="0.0123%" height="15" fill="rgb(250,40,50)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1167.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="42.9132%" y="1141" width="0.0123%" height="15" fill="rgb(217,119,7)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1151.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="42.9132%" y="1125" width="0.0123%" height="15" fill="rgb(245,214,40)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;)&gt; (1 samples, 0.01%)</title><rect x="42.9132%" y="1109" width="0.0123%" height="15" fill="rgb(216,187,1)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="42.9132%" y="1093" width="0.0123%" height="15" fill="rgb(237,146,21)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="42.9132%" y="1077" width="0.0123%" height="15" fill="rgb(210,174,47)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1087.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="42.9132%" y="1061" width="0.0123%" height="15" fill="rgb(218,111,39)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1071.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="42.9132%" y="1045" width="0.0123%" height="15" fill="rgb(224,95,19)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="42.9132%" y="1029" width="0.0123%" height="15" fill="rgb(234,15,38)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="42.9132%" y="1013" width="0.0123%" height="15" fill="rgb(246,56,12)" fg:x="3497" fg:w="1"/><text x="43.1632%" y="1023.50"></text></g><g><title>wgpu_core::binding_model::BindGroup&lt;B&gt;::validate_dynamic_bindings (1 samples, 0.01%)</title><rect x="42.9255%" y="1253" width="0.0123%" height="15" fill="rgb(247,16,17)" fg:x="3498" fg:w="1"/><text x="43.1755%" y="1263.50"></text></g><g><title>wgpu_core::command::bind::Binder::new (1 samples, 0.01%)</title><rect x="42.9378%" y="1253" width="0.0123%" height="15" fill="rgb(215,151,11)" fg:x="3499" fg:w="1"/><text x="43.1878%" y="1263.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="42.9378%" y="1237" width="0.0123%" height="15" fill="rgb(225,16,24)" fg:x="3499" fg:w="1"/><text x="43.1878%" y="1247.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (1 samples, 0.01%)</title><rect x="42.9501%" y="1253" width="0.0123%" height="15" fill="rgb(217,117,5)" fg:x="3500" fg:w="1"/><text x="43.2001%" y="1263.50"></text></g><g><title>wgpu_core::command::bind::Binder::compatible_count (1 samples, 0.01%)</title><rect x="42.9501%" y="1237" width="0.0123%" height="15" fill="rgb(246,187,53)" fg:x="3500" fg:w="1"/><text x="43.2001%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.01%)</title><rect x="42.9501%" y="1221" width="0.0123%" height="15" fill="rgb(241,71,40)" fg:x="3500" fg:w="1"/><text x="43.2001%" y="1231.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::command::MapPassErr&lt;T,wgpu_core::command::render::RenderPassError&gt; for core::result::Result&lt;T,E&gt;&gt;::map_pass_err (1 samples, 0.01%)</title><rect x="42.9623%" y="1253" width="0.0123%" height="15" fill="rgb(231,67,39)" fg:x="3501" fg:w="1"/><text x="43.2123%" y="1263.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="42.9623%" y="1237" width="0.0123%" height="15" fill="rgb(222,120,24)" fg:x="3501" fg:w="1"/><text x="43.2123%" y="1247.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="42.9623%" y="1221" width="0.0123%" height="15" fill="rgb(248,3,3)" fg:x="3501" fg:w="1"/><text x="43.2123%" y="1231.50"></text></g><g><title>wgpu_core::command::render::State::is_ready (1 samples, 0.01%)</title><rect x="42.9746%" y="1253" width="0.0123%" height="15" fill="rgb(228,218,5)" fg:x="3502" fg:w="1"/><text x="43.2246%" y="1263.50"></text></g><g><title>&lt;wgpu_core::command::render::OptionalState as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="42.9746%" y="1237" width="0.0123%" height="15" fill="rgb(212,202,43)" fg:x="3502" fg:w="1"/><text x="43.2246%" y="1247.50"></text></g><g><title>wgpu_core::device::RenderPassContext::check_compatible (1 samples, 0.01%)</title><rect x="42.9869%" y="1253" width="0.0123%" height="15" fill="rgb(235,183,2)" fg:x="3503" fg:w="1"/><text x="43.2369%" y="1263.50"></text></g><g><title>core::cmp::PartialEq::ne (1 samples, 0.01%)</title><rect x="42.9869%" y="1237" width="0.0123%" height="15" fill="rgb(230,165,10)" fg:x="3503" fg:w="1"/><text x="43.2369%" y="1247.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="42.9869%" y="1221" width="0.0123%" height="15" fill="rgb(219,54,40)" fg:x="3503" fg:w="1"/><text x="43.2369%" y="1231.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="42.9869%" y="1205" width="0.0123%" height="15" fill="rgb(244,73,9)" fg:x="3503" fg:w="1"/><text x="43.2369%" y="1215.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="42.9869%" y="1189" width="0.0123%" height="15" fill="rgb(212,32,45)" fg:x="3503" fg:w="1"/><text x="43.2369%" y="1199.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="42.9869%" y="1173" width="0.0123%" height="15" fill="rgb(205,58,31)" fg:x="3503" fg:w="1"/><text x="43.2369%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="42.9869%" y="1157" width="0.0123%" height="15" fill="rgb(250,120,43)" fg:x="3503" fg:w="1"/><text x="43.2369%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="42.9869%" y="1141" width="0.0123%" height="15" fill="rgb(235,13,10)" fg:x="3503" fg:w="1"/><text x="43.2369%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="42.9869%" y="1125" width="0.0123%" height="15" fill="rgb(232,219,31)" fg:x="3503" fg:w="1"/><text x="43.2369%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="42.9991%" y="1189" width="0.0123%" height="15" fill="rgb(218,157,51)" fg:x="3504" fg:w="1"/><text x="43.2491%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="42.9991%" y="1173" width="0.0123%" height="15" fill="rgb(211,91,52)" fg:x="3504" fg:w="1"/><text x="43.2491%" y="1183.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (102 samples, 1.25%)</title><rect x="41.7720%" y="1509" width="1.2517%" height="15" fill="rgb(240,173,1)" fg:x="3404" fg:w="102"/><text x="42.0220%" y="1519.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (81 samples, 0.99%)</title><rect x="42.0297%" y="1493" width="0.9940%" height="15" fill="rgb(248,20,47)" fg:x="3425" fg:w="81"/><text x="42.2797%" y="1503.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (81 samples, 0.99%)</title><rect x="42.0297%" y="1477" width="0.9940%" height="15" fill="rgb(217,221,40)" fg:x="3425" fg:w="81"/><text x="42.2797%" y="1487.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (79 samples, 0.97%)</title><rect x="42.0542%" y="1461" width="0.9694%" height="15" fill="rgb(226,149,51)" fg:x="3427" fg:w="79"/><text x="42.3042%" y="1471.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (75 samples, 0.92%)</title><rect x="42.1033%" y="1445" width="0.9204%" height="15" fill="rgb(252,193,7)" fg:x="3431" fg:w="75"/><text x="42.3533%" y="1455.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (75 samples, 0.92%)</title><rect x="42.1033%" y="1429" width="0.9204%" height="15" fill="rgb(205,123,0)" fg:x="3431" fg:w="75"/><text x="42.3533%" y="1439.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (75 samples, 0.92%)</title><rect x="42.1033%" y="1413" width="0.9204%" height="15" fill="rgb(233,173,25)" fg:x="3431" fg:w="75"/><text x="42.3533%" y="1423.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (22 samples, 0.27%)</title><rect x="42.7537%" y="1397" width="0.2700%" height="15" fill="rgb(216,63,32)" fg:x="3484" fg:w="22"/><text x="43.0037%" y="1407.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (22 samples, 0.27%)</title><rect x="42.7537%" y="1381" width="0.2700%" height="15" fill="rgb(209,56,45)" fg:x="3484" fg:w="22"/><text x="43.0037%" y="1391.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (22 samples, 0.27%)</title><rect x="42.7537%" y="1365" width="0.2700%" height="15" fill="rgb(226,111,49)" fg:x="3484" fg:w="22"/><text x="43.0037%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (22 samples, 0.27%)</title><rect x="42.7537%" y="1349" width="0.2700%" height="15" fill="rgb(244,181,21)" fg:x="3484" fg:w="22"/><text x="43.0037%" y="1359.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (22 samples, 0.27%)</title><rect x="42.7537%" y="1333" width="0.2700%" height="15" fill="rgb(222,126,15)" fg:x="3484" fg:w="22"/><text x="43.0037%" y="1343.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (22 samples, 0.27%)</title><rect x="42.7537%" y="1317" width="0.2700%" height="15" fill="rgb(222,95,17)" fg:x="3484" fg:w="22"/><text x="43.0037%" y="1327.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (22 samples, 0.27%)</title><rect x="42.7537%" y="1301" width="0.2700%" height="15" fill="rgb(254,46,5)" fg:x="3484" fg:w="22"/><text x="43.0037%" y="1311.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (22 samples, 0.27%)</title><rect x="42.7537%" y="1285" width="0.2700%" height="15" fill="rgb(236,216,35)" fg:x="3484" fg:w="22"/><text x="43.0037%" y="1295.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (22 samples, 0.27%)</title><rect x="42.7537%" y="1269" width="0.2700%" height="15" fill="rgb(217,187,26)" fg:x="3484" fg:w="22"/><text x="43.0037%" y="1279.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (2 samples, 0.02%)</title><rect x="42.9991%" y="1253" width="0.0245%" height="15" fill="rgb(207,192,25)" fg:x="3504" fg:w="2"/><text x="43.2491%" y="1263.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.02%)</title><rect x="42.9991%" y="1237" width="0.0245%" height="15" fill="rgb(253,135,27)" fg:x="3504" fg:w="2"/><text x="43.2491%" y="1247.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.02%)</title><rect x="42.9991%" y="1221" width="0.0245%" height="15" fill="rgb(211,122,29)" fg:x="3504" fg:w="2"/><text x="43.2491%" y="1231.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (2 samples, 0.02%)</title><rect x="42.9991%" y="1205" width="0.0245%" height="15" fill="rgb(233,162,40)" fg:x="3504" fg:w="2"/><text x="43.2491%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="43.0114%" y="1189" width="0.0123%" height="15" fill="rgb(222,184,47)" fg:x="3505" fg:w="1"/><text x="43.2614%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="43.0114%" y="1173" width="0.0123%" height="15" fill="rgb(249,99,23)" fg:x="3505" fg:w="1"/><text x="43.2614%" y="1183.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::bind_graphics_pipeline (1 samples, 0.01%)</title><rect x="43.0237%" y="1269" width="0.0123%" height="15" fill="rgb(214,60,12)" fg:x="3506" fg:w="1"/><text x="43.2737%" y="1279.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_bind_pipeline (1 samples, 0.01%)</title><rect x="43.0237%" y="1253" width="0.0123%" height="15" fill="rgb(250,229,36)" fg:x="3506" fg:w="1"/><text x="43.2737%" y="1263.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_bind_pipeline (1 samples, 0.01%)</title><rect x="43.0237%" y="1237" width="0.0123%" height="15" fill="rgb(232,195,10)" fg:x="3506" fg:w="1"/><text x="43.2737%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.0237%" y="1221" width="0.0123%" height="15" fill="rgb(205,213,31)" fg:x="3506" fg:w="1"/><text x="43.2737%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.0237%" y="1205" width="0.0123%" height="15" fill="rgb(237,43,8)" fg:x="3506" fg:w="1"/><text x="43.2737%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.0237%" y="1189" width="0.0123%" height="15" fill="rgb(216,208,3)" fg:x="3506" fg:w="1"/><text x="43.2737%" y="1199.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (2 samples, 0.02%)</title><rect x="43.0237%" y="1509" width="0.0245%" height="15" fill="rgb(228,179,44)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1519.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (2 samples, 0.02%)</title><rect x="43.0237%" y="1493" width="0.0245%" height="15" fill="rgb(230,192,27)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1503.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (2 samples, 0.02%)</title><rect x="43.0237%" y="1477" width="0.0245%" height="15" fill="rgb(251,30,38)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1487.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (2 samples, 0.02%)</title><rect x="43.0237%" y="1461" width="0.0245%" height="15" fill="rgb(246,55,52)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1471.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (2 samples, 0.02%)</title><rect x="43.0237%" y="1445" width="0.0245%" height="15" fill="rgb(249,79,26)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1455.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (2 samples, 0.02%)</title><rect x="43.0237%" y="1429" width="0.0245%" height="15" fill="rgb(220,202,16)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1439.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (2 samples, 0.02%)</title><rect x="43.0237%" y="1413" width="0.0245%" height="15" fill="rgb(250,170,23)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1423.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (2 samples, 0.02%)</title><rect x="43.0237%" y="1397" width="0.0245%" height="15" fill="rgb(230,7,37)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1407.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (2 samples, 0.02%)</title><rect x="43.0237%" y="1381" width="0.0245%" height="15" fill="rgb(213,71,1)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (2 samples, 0.02%)</title><rect x="43.0237%" y="1365" width="0.0245%" height="15" fill="rgb(227,87,39)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1375.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (2 samples, 0.02%)</title><rect x="43.0237%" y="1349" width="0.0245%" height="15" fill="rgb(210,41,29)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1359.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="43.0237%" y="1333" width="0.0245%" height="15" fill="rgb(206,191,31)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1343.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (2 samples, 0.02%)</title><rect x="43.0237%" y="1317" width="0.0245%" height="15" fill="rgb(247,75,54)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1327.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (2 samples, 0.02%)</title><rect x="43.0237%" y="1301" width="0.0245%" height="15" fill="rgb(208,54,50)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1311.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (2 samples, 0.02%)</title><rect x="43.0237%" y="1285" width="0.0245%" height="15" fill="rgb(214,90,37)" fg:x="3506" fg:w="2"/><text x="43.2737%" y="1295.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::end_render_pass (1 samples, 0.01%)</title><rect x="43.0360%" y="1269" width="0.0123%" height="15" fill="rgb(220,132,6)" fg:x="3507" fg:w="1"/><text x="43.2860%" y="1279.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_end_render_pass (1 samples, 0.01%)</title><rect x="43.0360%" y="1253" width="0.0123%" height="15" fill="rgb(213,167,7)" fg:x="3507" fg:w="1"/><text x="43.2860%" y="1263.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_end_render_pass (1 samples, 0.01%)</title><rect x="43.0360%" y="1237" width="0.0123%" height="15" fill="rgb(243,36,27)" fg:x="3507" fg:w="1"/><text x="43.2860%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.0360%" y="1221" width="0.0123%" height="15" fill="rgb(235,147,12)" fg:x="3507" fg:w="1"/><text x="43.2860%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.0360%" y="1205" width="0.0123%" height="15" fill="rgb(212,198,44)" fg:x="3507" fg:w="1"/><text x="43.2860%" y="1215.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="43.0360%" y="1189" width="0.0123%" height="15" fill="rgb(218,68,50)" fg:x="3507" fg:w="1"/><text x="43.2860%" y="1199.50"></text></g><g><title>&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="43.2937%" y="1477" width="0.0123%" height="15" fill="rgb(224,79,48)" fg:x="3528" fg:w="1"/><text x="43.5437%" y="1487.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="43.2937%" y="1461" width="0.0123%" height="15" fill="rgb(213,191,50)" fg:x="3528" fg:w="1"/><text x="43.5437%" y="1471.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="43.2937%" y="1445" width="0.0123%" height="15" fill="rgb(254,146,10)" fg:x="3528" fg:w="1"/><text x="43.5437%" y="1455.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="43.2937%" y="1429" width="0.0123%" height="15" fill="rgb(215,175,11)" fg:x="3528" fg:w="1"/><text x="43.5437%" y="1439.50"></text></g><g><title>bevy_ecs::archetype::Archetypes::resource (1 samples, 0.01%)</title><rect x="43.2937%" y="1413" width="0.0123%" height="15" fill="rgb(207,49,7)" fg:x="3528" fg:w="1"/><text x="43.5437%" y="1423.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="43.2937%" y="1493" width="0.0245%" height="15" fill="rgb(234,144,29)" fg:x="3528" fg:w="2"/><text x="43.5437%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="43.3059%" y="1477" width="0.0123%" height="15" fill="rgb(213,222,48)" fg:x="3529" fg:w="1"/><text x="43.5559%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="43.3059%" y="1461" width="0.0123%" height="15" fill="rgb(222,8,6)" fg:x="3529" fg:w="1"/><text x="43.5559%" y="1471.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update_system (1 samples, 0.01%)</title><rect x="43.3059%" y="1445" width="0.0123%" height="15" fill="rgb(221,114,49)" fg:x="3529" fg:w="1"/><text x="43.5559%" y="1455.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (1 samples, 0.01%)</title><rect x="43.3305%" y="1429" width="0.0123%" height="15" fill="rgb(250,140,42)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1439.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (1 samples, 0.01%)</title><rect x="43.3305%" y="1413" width="0.0123%" height="15" fill="rgb(250,150,27)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1423.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (1 samples, 0.01%)</title><rect x="43.3305%" y="1397" width="0.0123%" height="15" fill="rgb(252,159,3)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1407.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (1 samples, 0.01%)</title><rect x="43.3305%" y="1381" width="0.0123%" height="15" fill="rgb(241,182,3)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1391.50"></text></g><g><title>wgpu::Device::create_bind_group (1 samples, 0.01%)</title><rect x="43.3305%" y="1365" width="0.0123%" height="15" fill="rgb(236,3,9)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1375.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (1 samples, 0.01%)</title><rect x="43.3305%" y="1349" width="0.0123%" height="15" fill="rgb(223,227,51)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1359.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (1 samples, 0.01%)</title><rect x="43.3305%" y="1333" width="0.0123%" height="15" fill="rgb(232,133,30)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1343.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_bind_group (1 samples, 0.01%)</title><rect x="43.3305%" y="1317" width="0.0123%" height="15" fill="rgb(209,93,27)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1327.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::allocate (1 samples, 0.01%)</title><rect x="43.3305%" y="1301" width="0.0123%" height="15" fill="rgb(208,108,34)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1311.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::allocate (1 samples, 0.01%)</title><rect x="43.3305%" y="1285" width="0.0123%" height="15" fill="rgb(215,189,13)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1295.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::allocate (1 samples, 0.01%)</title><rect x="43.3305%" y="1269" width="0.0123%" height="15" fill="rgb(206,88,23)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1279.50"></text></g><g><title>&lt;wgpu_core::device::descriptor::DescriptorDevice&lt;B&gt; as gpu_descriptor_types::device::DescriptorDevice&lt;&lt;B as gfx_hal::Backend&gt;::DescriptorSetLayout,&lt;B as gfx_hal::Backend&gt;::DescriptorPool,&lt;B as gfx_hal::Backend&gt;::DescriptorSet&gt;&gt;::alloc_descriptor_sets (1 samples, 0.01%)</title><rect x="43.3305%" y="1253" width="0.0123%" height="15" fill="rgb(240,173,0)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1263.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::DescriptorPool as gfx_hal::pso::descriptor::DescriptorPool&lt;gfx_backend_vulkan::Backend&gt;&gt;::allocate (1 samples, 0.01%)</title><rect x="43.3305%" y="1237" width="0.0123%" height="15" fill="rgb(223,106,52)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1247.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.01%)</title><rect x="43.3305%" y="1221" width="0.0123%" height="15" fill="rgb(206,130,16)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1231.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::DescriptorPool as gfx_hal::pso::descriptor::DescriptorPool&lt;gfx_backend_vulkan::Backend&gt;&gt;::allocate::{{closure}} (1 samples, 0.01%)</title><rect x="43.3305%" y="1205" width="0.0123%" height="15" fill="rgb(220,54,25)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1215.50"></text></g><g><title>&lt;gpu_descriptor::allocator::Allocation&lt;S&gt; as core::iter::traits::collect::Extend&lt;S&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="43.3305%" y="1189" width="0.0123%" height="15" fill="rgb(210,4,38)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="43.3305%" y="1173" width="0.0123%" height="15" fill="rgb(238,94,39)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="43.3305%" y="1157" width="0.0123%" height="15" fill="rgb(234,124,34)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="43.3305%" y="1141" width="0.0123%" height="15" fill="rgb(221,91,40)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="43.3305%" y="1125" width="0.0123%" height="15" fill="rgb(246,53,28)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="43.3305%" y="1109" width="0.0123%" height="15" fill="rgb(229,109,7)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="43.3305%" y="1093" width="0.0123%" height="15" fill="rgb(249,117,8)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1103.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="43.3305%" y="1077" width="0.0123%" height="15" fill="rgb(210,181,1)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1087.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="43.3305%" y="1061" width="0.0123%" height="15" fill="rgb(211,66,1)" fg:x="3531" fg:w="1"/><text x="43.5805%" y="1071.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="43.3427%" y="1237" width="0.0123%" height="15" fill="rgb(221,90,14)" fg:x="3532" fg:w="1"/><text x="43.5927%" y="1247.50"></text></g><g><title>glslang::TBuiltIns::initialize (4 samples, 0.05%)</title><rect x="43.3427%" y="1285" width="0.0491%" height="15" fill="rgb(219,222,44)" fg:x="3532" fg:w="4"/><text x="43.5927%" y="1295.50"></text></g><g><title>glslang::TBuiltIns::add2ndGenerationSamplingImaging (4 samples, 0.05%)</title><rect x="43.3427%" y="1269" width="0.0491%" height="15" fill="rgb(246,34,33)" fg:x="3532" fg:w="4"/><text x="43.5927%" y="1279.50"></text></g><g><title>glslang::TBuiltIns::addSamplingFunctions (4 samples, 0.05%)</title><rect x="43.3427%" y="1253" width="0.0491%" height="15" fill="rgb(227,135,41)" fg:x="3532" fg:w="4"/><text x="43.5927%" y="1263.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (3 samples, 0.04%)</title><rect x="43.3550%" y="1237" width="0.0368%" height="15" fill="rgb(226,15,14)" fg:x="3533" fg:w="3"/><text x="43.6050%" y="1247.50"></text></g><g><title>glslang::TFunction::clone (6 samples, 0.07%)</title><rect x="43.3918%" y="1253" width="0.0736%" height="15" fill="rgb(236,148,47)" fg:x="3536" fg:w="6"/><text x="43.6418%" y="1263.50"></text></g><g><title>glslang::TFunction::TFunction (6 samples, 0.07%)</title><rect x="43.3918%" y="1237" width="0.0736%" height="15" fill="rgb(233,162,52)" fg:x="3536" fg:w="6"/><text x="43.6418%" y="1247.50"></text></g><g><title>glslang::TType::clone (6 samples, 0.07%)</title><rect x="43.3918%" y="1221" width="0.0736%" height="15" fill="rgb(244,35,28)" fg:x="3536" fg:w="6"/><text x="43.6418%" y="1231.50"></text></g><g><title>glslang::TType::deepCopy (6 samples, 0.07%)</title><rect x="43.3918%" y="1205" width="0.0736%" height="15" fill="rgb(205,121,10)" fg:x="3536" fg:w="6"/><text x="43.6418%" y="1215.50"></text></g><g><title>glslang::GetThreadPoolAllocator (1 samples, 0.01%)</title><rect x="43.4532%" y="1189" width="0.0123%" height="15" fill="rgb(250,58,18)" fg:x="3541" fg:w="1"/><text x="43.7032%" y="1199.50"></text></g><g><title>__GI___pthread_getspecific (1 samples, 0.01%)</title><rect x="43.4532%" y="1173" width="0.0123%" height="15" fill="rgb(216,37,13)" fg:x="3541" fg:w="1"/><text x="43.7032%" y="1183.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (11 samples, 0.13%)</title><rect x="43.3427%" y="1397" width="0.1350%" height="15" fill="rgb(221,215,42)" fg:x="3532" fg:w="11"/><text x="43.5927%" y="1407.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (11 samples, 0.13%)</title><rect x="43.3427%" y="1381" width="0.1350%" height="15" fill="rgb(217,214,19)" fg:x="3532" fg:w="11"/><text x="43.5927%" y="1391.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (11 samples, 0.13%)</title><rect x="43.3427%" y="1365" width="0.1350%" height="15" fill="rgb(233,139,13)" fg:x="3532" fg:w="11"/><text x="43.5927%" y="1375.50"></text></g><g><title>bevy_glsl_to_spirv::compile (11 samples, 0.13%)</title><rect x="43.3427%" y="1349" width="0.1350%" height="15" fill="rgb(247,168,23)" fg:x="3532" fg:w="11"/><text x="43.5927%" y="1359.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (11 samples, 0.13%)</title><rect x="43.3427%" y="1333" width="0.1350%" height="15" fill="rgb(207,202,1)" fg:x="3532" fg:w="11"/><text x="43.5927%" y="1343.50"></text></g><g><title>glslang_shader_preprocess (11 samples, 0.13%)</title><rect x="43.3427%" y="1317" width="0.1350%" height="15" fill="rgb(220,155,48)" fg:x="3532" fg:w="11"/><text x="43.5927%" y="1327.50"></text></g><g><title>glslang::TShader::preprocess (11 samples, 0.13%)</title><rect x="43.3427%" y="1301" width="0.1350%" height="15" fill="rgb(250,43,26)" fg:x="3532" fg:w="11"/><text x="43.5927%" y="1311.50"></text></g><g><title>glslang::TSymbolTable::copyTable (7 samples, 0.09%)</title><rect x="43.3918%" y="1285" width="0.0859%" height="15" fill="rgb(212,190,23)" fg:x="3536" fg:w="7"/><text x="43.6418%" y="1295.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (7 samples, 0.09%)</title><rect x="43.3918%" y="1269" width="0.0859%" height="15" fill="rgb(216,39,24)" fg:x="3536" fg:w="7"/><text x="43.6418%" y="1279.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (1 samples, 0.01%)</title><rect x="43.4655%" y="1253" width="0.0123%" height="15" fill="rgb(252,113,16)" fg:x="3542" fg:w="1"/><text x="43.7155%" y="1263.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (1 samples, 0.01%)</title><rect x="43.4655%" y="1237" width="0.0123%" height="15" fill="rgb(208,113,19)" fg:x="3542" fg:w="1"/><text x="43.7155%" y="1247.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (1 samples, 0.01%)</title><rect x="43.4655%" y="1221" width="0.0123%" height="15" fill="rgb(234,107,25)" fg:x="3542" fg:w="1"/><text x="43.7155%" y="1231.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="43.4655%" y="1205" width="0.0123%" height="15" fill="rgb(234,217,51)" fg:x="3542" fg:w="1"/><text x="43.7155%" y="1215.50"></text></g><g><title>glslang::TBuiltIns::initialize (1 samples, 0.01%)</title><rect x="43.4777%" y="1253" width="0.0123%" height="15" fill="rgb(251,29,42)" fg:x="3543" fg:w="1"/><text x="43.7277%" y="1263.50"></text></g><g><title>glslang::TBuiltIns::add2ndGenerationSamplingImaging (1 samples, 0.01%)</title><rect x="43.4777%" y="1237" width="0.0123%" height="15" fill="rgb(221,62,51)" fg:x="3543" fg:w="1"/><text x="43.7277%" y="1247.50"></text></g><g><title>glslang::TBuiltIns::addGatherFunctions (1 samples, 0.01%)</title><rect x="43.4777%" y="1221" width="0.0123%" height="15" fill="rgb(240,192,43)" fg:x="3543" fg:w="1"/><text x="43.7277%" y="1231.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.01%)</title><rect x="43.4777%" y="1205" width="0.0123%" height="15" fill="rgb(224,157,47)" fg:x="3543" fg:w="1"/><text x="43.7277%" y="1215.50"></text></g><g><title>glslang::TSymbol::setExtensions (1 samples, 0.01%)</title><rect x="43.4900%" y="1189" width="0.0123%" height="15" fill="rgb(226,84,45)" fg:x="3544" fg:w="1"/><text x="43.7400%" y="1199.50"></text></g><g><title>glslang::TPoolAllocator::allocate (1 samples, 0.01%)</title><rect x="43.4900%" y="1173" width="0.0123%" height="15" fill="rgb(208,207,23)" fg:x="3544" fg:w="1"/><text x="43.7400%" y="1183.50"></text></g><g><title>operator new (1 samples, 0.01%)</title><rect x="43.4900%" y="1157" width="0.0123%" height="15" fill="rgb(253,34,51)" fg:x="3544" fg:w="1"/><text x="43.7400%" y="1167.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="43.4900%" y="1141" width="0.0123%" height="15" fill="rgb(227,26,34)" fg:x="3544" fg:w="1"/><text x="43.7400%" y="1151.50"></text></g><g><title>glslang::TPoolAllocator::allocate (1 samples, 0.01%)</title><rect x="43.5023%" y="1173" width="0.0123%" height="15" fill="rgb(245,75,19)" fg:x="3545" fg:w="1"/><text x="43.7523%" y="1183.50"></text></g><g><title>operator new (1 samples, 0.01%)</title><rect x="43.5023%" y="1157" width="0.0123%" height="15" fill="rgb(250,191,31)" fg:x="3545" fg:w="1"/><text x="43.7523%" y="1167.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="43.5023%" y="1141" width="0.0123%" height="15" fill="rgb(224,11,50)" fg:x="3545" fg:w="1"/><text x="43.7523%" y="1151.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (41 samples, 0.50%)</title><rect x="43.0482%" y="1509" width="0.5031%" height="15" fill="rgb(231,171,7)" fg:x="3508" fg:w="41"/><text x="43.2982%" y="1519.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (19 samples, 0.23%)</title><rect x="43.3182%" y="1493" width="0.2332%" height="15" fill="rgb(252,214,10)" fg:x="3530" fg:w="19"/><text x="43.5682%" y="1503.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (18 samples, 0.22%)</title><rect x="43.3305%" y="1477" width="0.2209%" height="15" fill="rgb(249,45,46)" fg:x="3531" fg:w="18"/><text x="43.5805%" y="1487.50"></text></g><g><title>core::ops::function::Fn::call (18 samples, 0.22%)</title><rect x="43.3305%" y="1461" width="0.2209%" height="15" fill="rgb(240,173,7)" fg:x="3531" fg:w="18"/><text x="43.5805%" y="1471.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (18 samples, 0.22%)</title><rect x="43.3305%" y="1445" width="0.2209%" height="15" fill="rgb(235,214,13)" fg:x="3531" fg:w="18"/><text x="43.5805%" y="1455.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (17 samples, 0.21%)</title><rect x="43.3427%" y="1429" width="0.2086%" height="15" fill="rgb(245,156,8)" fg:x="3532" fg:w="17"/><text x="43.5927%" y="1439.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (17 samples, 0.21%)</title><rect x="43.3427%" y="1413" width="0.2086%" height="15" fill="rgb(235,46,12)" fg:x="3532" fg:w="17"/><text x="43.5927%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.07%)</title><rect x="43.4777%" y="1397" width="0.0736%" height="15" fill="rgb(221,81,14)" fg:x="3543" fg:w="6"/><text x="43.7277%" y="1407.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (6 samples, 0.07%)</title><rect x="43.4777%" y="1381" width="0.0736%" height="15" fill="rgb(238,207,9)" fg:x="3543" fg:w="6"/><text x="43.7277%" y="1391.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (6 samples, 0.07%)</title><rect x="43.4777%" y="1365" width="0.0736%" height="15" fill="rgb(224,129,35)" fg:x="3543" fg:w="6"/><text x="43.7277%" y="1375.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (6 samples, 0.07%)</title><rect x="43.4777%" y="1349" width="0.0736%" height="15" fill="rgb(243,218,34)" fg:x="3543" fg:w="6"/><text x="43.7277%" y="1359.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (6 samples, 0.07%)</title><rect x="43.4777%" y="1333" width="0.0736%" height="15" fill="rgb(220,166,13)" fg:x="3543" fg:w="6"/><text x="43.7277%" y="1343.50"></text></g><g><title>bevy_glsl_to_spirv::compile (6 samples, 0.07%)</title><rect x="43.4777%" y="1317" width="0.0736%" height="15" fill="rgb(227,167,49)" fg:x="3543" fg:w="6"/><text x="43.7277%" y="1327.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (6 samples, 0.07%)</title><rect x="43.4777%" y="1301" width="0.0736%" height="15" fill="rgb(234,142,12)" fg:x="3543" fg:w="6"/><text x="43.7277%" y="1311.50"></text></g><g><title>glslang_shader_preprocess (6 samples, 0.07%)</title><rect x="43.4777%" y="1285" width="0.0736%" height="15" fill="rgb(207,100,48)" fg:x="3543" fg:w="6"/><text x="43.7277%" y="1295.50"></text></g><g><title>glslang::TShader::preprocess (6 samples, 0.07%)</title><rect x="43.4777%" y="1269" width="0.0736%" height="15" fill="rgb(210,25,14)" fg:x="3543" fg:w="6"/><text x="43.7277%" y="1279.50"></text></g><g><title>glslang::TSymbolTable::copyTable (5 samples, 0.06%)</title><rect x="43.4900%" y="1253" width="0.0614%" height="15" fill="rgb(246,116,27)" fg:x="3544" fg:w="5"/><text x="43.7400%" y="1263.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (5 samples, 0.06%)</title><rect x="43.4900%" y="1237" width="0.0614%" height="15" fill="rgb(214,193,42)" fg:x="3544" fg:w="5"/><text x="43.7400%" y="1247.50"></text></g><g><title>glslang::TFunction::clone (5 samples, 0.06%)</title><rect x="43.4900%" y="1221" width="0.0614%" height="15" fill="rgb(214,122,8)" fg:x="3544" fg:w="5"/><text x="43.7400%" y="1231.50"></text></g><g><title>glslang::TFunction::TFunction (5 samples, 0.06%)</title><rect x="43.4900%" y="1205" width="0.0614%" height="15" fill="rgb(244,173,18)" fg:x="3544" fg:w="5"/><text x="43.7400%" y="1215.50"></text></g><g><title>glslang::TType::clone (4 samples, 0.05%)</title><rect x="43.5023%" y="1189" width="0.0491%" height="15" fill="rgb(232,68,19)" fg:x="3545" fg:w="4"/><text x="43.7523%" y="1199.50"></text></g><g><title>glslang::TType::deepCopy (3 samples, 0.04%)</title><rect x="43.5145%" y="1173" width="0.0368%" height="15" fill="rgb(236,224,1)" fg:x="3546" fg:w="3"/><text x="43.7645%" y="1183.50"></text></g><g><title>glslang_program_SPIRV_generate (1 samples, 0.01%)</title><rect x="43.5514%" y="1381" width="0.0123%" height="15" fill="rgb(240,11,8)" fg:x="3549" fg:w="1"/><text x="43.8014%" y="1391.50"></text></g><g><title>glslang::GlslangToSpv (1 samples, 0.01%)</title><rect x="43.5514%" y="1365" width="0.0123%" height="15" fill="rgb(244,159,20)" fg:x="3549" fg:w="1"/><text x="43.8014%" y="1375.50"></text></g><g><title>glslang::SpirvToolsValidate (1 samples, 0.01%)</title><rect x="43.5514%" y="1349" width="0.0123%" height="15" fill="rgb(240,223,54)" fg:x="3549" fg:w="1"/><text x="43.8014%" y="1359.50"></text></g><g><title>spvValidateWithOptions (1 samples, 0.01%)</title><rect x="43.5514%" y="1333" width="0.0123%" height="15" fill="rgb(237,146,5)" fg:x="3549" fg:w="1"/><text x="43.8014%" y="1343.50"></text></g><g><title>spvtools::val::ValidationState_t::~ValidationState_t (1 samples, 0.01%)</title><rect x="43.5514%" y="1317" width="0.0123%" height="15" fill="rgb(218,221,32)" fg:x="3549" fg:w="1"/><text x="43.8014%" y="1327.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="43.5514%" y="1301" width="0.0123%" height="15" fill="rgb(244,96,26)" fg:x="3549" fg:w="1"/><text x="43.8014%" y="1311.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="43.5514%" y="1285" width="0.0123%" height="15" fill="rgb(245,184,37)" fg:x="3549" fg:w="1"/><text x="43.8014%" y="1295.50"></text></g><g><title>glslang::TBuiltIns::initialize (1 samples, 0.01%)</title><rect x="43.5636%" y="1349" width="0.0123%" height="15" fill="rgb(248,91,47)" fg:x="3550" fg:w="1"/><text x="43.8136%" y="1359.50"></text></g><g><title>glslang::TBuiltIns::add2ndGenerationSamplingImaging (1 samples, 0.01%)</title><rect x="43.5636%" y="1333" width="0.0123%" height="15" fill="rgb(243,199,8)" fg:x="3550" fg:w="1"/><text x="43.8136%" y="1343.50"></text></g><g><title>glslang::TBuiltIns::addSamplingFunctions (1 samples, 0.01%)</title><rect x="43.5636%" y="1317" width="0.0123%" height="15" fill="rgb(249,12,15)" fg:x="3550" fg:w="1"/><text x="43.8136%" y="1327.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::prepare (3 samples, 0.04%)</title><rect x="43.5514%" y="1509" width="0.0368%" height="15" fill="rgb(245,97,12)" fg:x="3549" fg:w="3"/><text x="43.8014%" y="1519.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::init_pipeline (3 samples, 0.04%)</title><rect x="43.5514%" y="1493" width="0.0368%" height="15" fill="rgb(244,61,1)" fg:x="3549" fg:w="3"/><text x="43.8014%" y="1503.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (3 samples, 0.04%)</title><rect x="43.5514%" y="1477" width="0.0368%" height="15" fill="rgb(222,194,10)" fg:x="3549" fg:w="3"/><text x="43.8014%" y="1487.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (3 samples, 0.04%)</title><rect x="43.5514%" y="1461" width="0.0368%" height="15" fill="rgb(226,178,8)" fg:x="3549" fg:w="3"/><text x="43.8014%" y="1471.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (3 samples, 0.04%)</title><rect x="43.5514%" y="1445" width="0.0368%" height="15" fill="rgb(241,32,34)" fg:x="3549" fg:w="3"/><text x="43.8014%" y="1455.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (3 samples, 0.04%)</title><rect x="43.5514%" y="1429" width="0.0368%" height="15" fill="rgb(254,26,6)" fg:x="3549" fg:w="3"/><text x="43.8014%" y="1439.50"></text></g><g><title>bevy_glsl_to_spirv::compile (3 samples, 0.04%)</title><rect x="43.5514%" y="1413" width="0.0368%" height="15" fill="rgb(249,71,11)" fg:x="3549" fg:w="3"/><text x="43.8014%" y="1423.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (3 samples, 0.04%)</title><rect x="43.5514%" y="1397" width="0.0368%" height="15" fill="rgb(232,170,27)" fg:x="3549" fg:w="3"/><text x="43.8014%" y="1407.50"></text></g><g><title>glslang_shader_preprocess (2 samples, 0.02%)</title><rect x="43.5636%" y="1381" width="0.0245%" height="15" fill="rgb(214,223,17)" fg:x="3550" fg:w="2"/><text x="43.8136%" y="1391.50"></text></g><g><title>glslang::TShader::preprocess (2 samples, 0.02%)</title><rect x="43.5636%" y="1365" width="0.0245%" height="15" fill="rgb(250,18,15)" fg:x="3550" fg:w="2"/><text x="43.8136%" y="1375.50"></text></g><g><title>glslang::TParseVersions::initializeExtensionBehavior (1 samples, 0.01%)</title><rect x="43.5759%" y="1349" width="0.0123%" height="15" fill="rgb(212,153,51)" fg:x="3551" fg:w="1"/><text x="43.8259%" y="1359.50"></text></g><g><title>std::map&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, glslang::TExtensionBehavior, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TExtensionBehavior&gt; &gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="43.5759%" y="1333" width="0.0123%" height="15" fill="rgb(219,194,12)" fg:x="3551" fg:w="1"/><text x="43.8259%" y="1343.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TExtensionBehavior&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TExtensionBehavior&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TExtensionBehavior&gt; &gt; &gt;::_M_emplace_hint_unique&lt;std::piecewise_construct_t const&amp;, std::tuple&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;&amp;&amp;&gt;, std::tuple&lt;&gt; &gt; (1 samples, 0.01%)</title><rect x="43.5759%" y="1317" width="0.0123%" height="15" fill="rgb(212,58,17)" fg:x="3551" fg:w="1"/><text x="43.8259%" y="1327.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="43.5759%" y="1301" width="0.0123%" height="15" fill="rgb(254,5,10)" fg:x="3551" fg:w="1"/><text x="43.8259%" y="1311.50"></text></g><g><title>&lt;wgpu_core::track::Resource&lt;S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.5882%" y="1349" width="0.0123%" height="15" fill="rgb(246,91,7)" fg:x="3552" fg:w="1"/><text x="43.8382%" y="1359.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.5882%" y="1333" width="0.0123%" height="15" fill="rgb(218,108,49)" fg:x="3552" fg:w="1"/><text x="43.8382%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="43.5882%" y="1317" width="0.0123%" height="15" fill="rgb(238,123,20)" fg:x="3552" fg:w="1"/><text x="43.8382%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="43.5882%" y="1301" width="0.0123%" height="15" fill="rgb(231,69,23)" fg:x="3552" fg:w="1"/><text x="43.8382%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="43.6004%" y="1317" width="0.0123%" height="15" fill="rgb(230,209,3)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="43.6004%" y="1301" width="0.0123%" height="15" fill="rgb(231,19,0)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="43.6004%" y="1285" width="0.0123%" height="15" fill="rgb(226,192,25)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="43.6004%" y="1269" width="0.0123%" height="15" fill="rgb(223,175,53)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="43.6004%" y="1253" width="0.0123%" height="15" fill="rgb(248,35,51)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="43.6004%" y="1237" width="0.0123%" height="15" fill="rgb(230,37,26)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="43.6004%" y="1221" width="0.0123%" height="15" fill="rgb(206,120,22)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1231.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="43.6004%" y="1205" width="0.0123%" height="15" fill="rgb(207,165,28)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="43.6004%" y="1189" width="0.0123%" height="15" fill="rgb(226,23,46)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="43.6004%" y="1173" width="0.0123%" height="15" fill="rgb(208,130,44)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="43.6004%" y="1157" width="0.0123%" height="15" fill="rgb(231,67,8)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1167.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="43.6004%" y="1141" width="0.0123%" height="15" fill="rgb(205,183,22)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1151.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="43.6004%" y="1125" width="0.0123%" height="15" fill="rgb(224,47,9)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1135.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="43.6004%" y="1109" width="0.0123%" height="15" fill="rgb(250,183,49)" fg:x="3553" fg:w="1"/><text x="43.8504%" y="1119.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (3 samples, 0.04%)</title><rect x="43.5882%" y="1381" width="0.0368%" height="15" fill="rgb(220,151,39)" fg:x="3552" fg:w="3"/><text x="43.8382%" y="1391.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (3 samples, 0.04%)</title><rect x="43.5882%" y="1365" width="0.0368%" height="15" fill="rgb(220,118,20)" fg:x="3552" fg:w="3"/><text x="43.8382%" y="1375.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="43.6004%" y="1349" width="0.0245%" height="15" fill="rgb(231,65,51)" fg:x="3553" fg:w="2"/><text x="43.8504%" y="1359.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="43.6004%" y="1333" width="0.0245%" height="15" fill="rgb(253,125,37)" fg:x="3553" fg:w="2"/><text x="43.8504%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="43.6127%" y="1317" width="0.0123%" height="15" fill="rgb(232,102,6)" fg:x="3554" fg:w="1"/><text x="43.8627%" y="1327.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="43.6127%" y="1301" width="0.0123%" height="15" fill="rgb(251,105,13)" fg:x="3554" fg:w="1"/><text x="43.8627%" y="1311.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="43.6127%" y="1285" width="0.0123%" height="15" fill="rgb(222,179,29)" fg:x="3554" fg:w="1"/><text x="43.8627%" y="1295.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="43.6127%" y="1269" width="0.0123%" height="15" fill="rgb(229,180,53)" fg:x="3554" fg:w="1"/><text x="43.8627%" y="1279.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.6250%" y="1333" width="0.0123%" height="15" fill="rgb(238,104,13)" fg:x="3555" fg:w="1"/><text x="43.8750%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="43.6250%" y="1317" width="0.0123%" height="15" fill="rgb(210,130,5)" fg:x="3555" fg:w="1"/><text x="43.8750%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="43.6250%" y="1301" width="0.0123%" height="15" fill="rgb(233,87,49)" fg:x="3555" fg:w="1"/><text x="43.8750%" y="1311.50"></text></g><g><title>&lt;wgpu_core::track::Resource&lt;S&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="43.6250%" y="1349" width="0.0245%" height="15" fill="rgb(243,34,9)" fg:x="3555" fg:w="2"/><text x="43.8750%" y="1359.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureState as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.6373%" y="1333" width="0.0123%" height="15" fill="rgb(235,225,10)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1343.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.6373%" y="1317" width="0.0123%" height="15" fill="rgb(212,0,30)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="43.6373%" y="1301" width="0.0123%" height="15" fill="rgb(211,177,0)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1311.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="43.6373%" y="1285" width="0.0123%" height="15" fill="rgb(225,220,11)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1295.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="43.6373%" y="1269" width="0.0123%" height="15" fill="rgb(215,10,13)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="43.6373%" y="1253" width="0.0123%" height="15" fill="rgb(240,177,14)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1263.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="43.6373%" y="1237" width="0.0123%" height="15" fill="rgb(243,7,39)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="43.6373%" y="1221" width="0.0123%" height="15" fill="rgb(212,99,0)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1231.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (1 samples, 0.01%)</title><rect x="43.6373%" y="1205" width="0.0123%" height="15" fill="rgb(225,162,48)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1215.50"></text></g><g><title>&lt;wgpu_core::track::range::RangedStates&lt;I,T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.6373%" y="1189" width="0.0123%" height="15" fill="rgb(246,16,25)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.6373%" y="1173" width="0.0123%" height="15" fill="rgb(220,150,2)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1183.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (1 samples, 0.01%)</title><rect x="43.6373%" y="1157" width="0.0123%" height="15" fill="rgb(237,113,11)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="43.6373%" y="1141" width="0.0123%" height="15" fill="rgb(236,70,20)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="43.6373%" y="1125" width="0.0123%" height="15" fill="rgb(234,94,7)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="43.6373%" y="1109" width="0.0123%" height="15" fill="rgb(250,221,0)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="43.6373%" y="1093" width="0.0123%" height="15" fill="rgb(245,149,46)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1103.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="43.6373%" y="1077" width="0.0123%" height="15" fill="rgb(215,37,27)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="43.6373%" y="1061" width="0.0123%" height="15" fill="rgb(232,65,3)" fg:x="3556" fg:w="1"/><text x="43.8873%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.01%)</title><rect x="43.6495%" y="1221" width="0.0123%" height="15" fill="rgb(214,2,16)" fg:x="3557" fg:w="1"/><text x="43.8995%" y="1231.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.01%)</title><rect x="43.6495%" y="1205" width="0.0123%" height="15" fill="rgb(227,131,50)" fg:x="3557" fg:w="1"/><text x="43.8995%" y="1215.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="43.6495%" y="1189" width="0.0123%" height="15" fill="rgb(247,131,45)" fg:x="3557" fg:w="1"/><text x="43.8995%" y="1199.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (7 samples, 0.09%)</title><rect x="43.5882%" y="1509" width="0.0859%" height="15" fill="rgb(215,97,47)" fg:x="3552" fg:w="7"/><text x="43.8382%" y="1519.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (7 samples, 0.09%)</title><rect x="43.5882%" y="1493" width="0.0859%" height="15" fill="rgb(233,143,12)" fg:x="3552" fg:w="7"/><text x="43.8382%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (7 samples, 0.09%)</title><rect x="43.5882%" y="1477" width="0.0859%" height="15" fill="rgb(222,57,17)" fg:x="3552" fg:w="7"/><text x="43.8382%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (7 samples, 0.09%)</title><rect x="43.5882%" y="1461" width="0.0859%" height="15" fill="rgb(214,119,38)" fg:x="3552" fg:w="7"/><text x="43.8382%" y="1471.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (7 samples, 0.09%)</title><rect x="43.5882%" y="1445" width="0.0859%" height="15" fill="rgb(217,28,47)" fg:x="3552" fg:w="7"/><text x="43.8382%" y="1455.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (7 samples, 0.09%)</title><rect x="43.5882%" y="1429" width="0.0859%" height="15" fill="rgb(231,14,52)" fg:x="3552" fg:w="7"/><text x="43.8382%" y="1439.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (7 samples, 0.09%)</title><rect x="43.5882%" y="1413" width="0.0859%" height="15" fill="rgb(220,158,18)" fg:x="3552" fg:w="7"/><text x="43.8382%" y="1423.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (7 samples, 0.09%)</title><rect x="43.5882%" y="1397" width="0.0859%" height="15" fill="rgb(222,143,46)" fg:x="3552" fg:w="7"/><text x="43.8382%" y="1407.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (4 samples, 0.05%)</title><rect x="43.6250%" y="1381" width="0.0491%" height="15" fill="rgb(227,165,5)" fg:x="3555" fg:w="4"/><text x="43.8750%" y="1391.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (4 samples, 0.05%)</title><rect x="43.6250%" y="1365" width="0.0491%" height="15" fill="rgb(216,222,49)" fg:x="3555" fg:w="4"/><text x="43.8750%" y="1375.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="43.6495%" y="1349" width="0.0245%" height="15" fill="rgb(238,73,39)" fg:x="3557" fg:w="2"/><text x="43.8995%" y="1359.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="43.6495%" y="1333" width="0.0245%" height="15" fill="rgb(252,115,9)" fg:x="3557" fg:w="2"/><text x="43.8995%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.02%)</title><rect x="43.6495%" y="1317" width="0.0245%" height="15" fill="rgb(238,202,4)" fg:x="3557" fg:w="2"/><text x="43.8995%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="43.6495%" y="1301" width="0.0245%" height="15" fill="rgb(252,153,44)" fg:x="3557" fg:w="2"/><text x="43.8995%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="43.6495%" y="1285" width="0.0245%" height="15" fill="rgb(235,128,27)" fg:x="3557" fg:w="2"/><text x="43.8995%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="43.6495%" y="1269" width="0.0245%" height="15" fill="rgb(221,121,47)" fg:x="3557" fg:w="2"/><text x="43.8995%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.02%)</title><rect x="43.6495%" y="1253" width="0.0245%" height="15" fill="rgb(247,211,47)" fg:x="3557" fg:w="2"/><text x="43.8995%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.02%)</title><rect x="43.6495%" y="1237" width="0.0245%" height="15" fill="rgb(252,47,49)" fg:x="3557" fg:w="2"/><text x="43.8995%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="43.6618%" y="1221" width="0.0123%" height="15" fill="rgb(219,119,53)" fg:x="3558" fg:w="1"/><text x="43.9118%" y="1231.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="43.6618%" y="1205" width="0.0123%" height="15" fill="rgb(243,165,53)" fg:x="3558" fg:w="1"/><text x="43.9118%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="43.6618%" y="1189" width="0.0123%" height="15" fill="rgb(230,12,35)" fg:x="3558" fg:w="1"/><text x="43.9118%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="43.6618%" y="1173" width="0.0123%" height="15" fill="rgb(239,57,49)" fg:x="3558" fg:w="1"/><text x="43.9118%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="43.6618%" y="1157" width="0.0123%" height="15" fill="rgb(231,154,7)" fg:x="3558" fg:w="1"/><text x="43.9118%" y="1167.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="43.6618%" y="1141" width="0.0123%" height="15" fill="rgb(248,81,34)" fg:x="3558" fg:w="1"/><text x="43.9118%" y="1151.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="43.6618%" y="1125" width="0.0123%" height="15" fill="rgb(247,9,5)" fg:x="3558" fg:w="1"/><text x="43.9118%" y="1135.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="43.6618%" y="1109" width="0.0123%" height="15" fill="rgb(228,172,27)" fg:x="3558" fg:w="1"/><text x="43.9118%" y="1119.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="43.6618%" y="1093" width="0.0123%" height="15" fill="rgb(230,57,44)" fg:x="3558" fg:w="1"/><text x="43.9118%" y="1103.50"></text></g><g><title>&lt;wgpu_core::track::Resource&lt;S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.6741%" y="1349" width="0.0123%" height="15" fill="rgb(249,35,22)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1359.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureState as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.6741%" y="1333" width="0.0123%" height="15" fill="rgb(250,137,27)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1343.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.6741%" y="1317" width="0.0123%" height="15" fill="rgb(251,57,31)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="43.6741%" y="1301" width="0.0123%" height="15" fill="rgb(238,60,0)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1311.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="43.6741%" y="1285" width="0.0123%" height="15" fill="rgb(242,185,39)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1295.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="43.6741%" y="1269" width="0.0123%" height="15" fill="rgb(240,63,43)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1279.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="43.6741%" y="1253" width="0.0123%" height="15" fill="rgb(236,155,6)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1263.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned (1 samples, 0.01%)</title><rect x="43.6741%" y="1237" width="0.0123%" height="15" fill="rgb(215,11,29)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="43.6741%" y="1221" width="0.0123%" height="15" fill="rgb(228,180,48)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1231.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::cloned::{{closure}} (1 samples, 0.01%)</title><rect x="43.6741%" y="1205" width="0.0123%" height="15" fill="rgb(241,102,12)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1215.50"></text></g><g><title>&lt;wgpu_core::track::range::RangedStates&lt;I,T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.6741%" y="1189" width="0.0123%" height="15" fill="rgb(246,213,4)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="43.6741%" y="1173" width="0.0123%" height="15" fill="rgb(218,134,35)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1183.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::convert::From&lt;&amp;[&lt;A as smallvec::Array&gt;::Item]&gt;&gt;::from (1 samples, 0.01%)</title><rect x="43.6741%" y="1157" width="0.0123%" height="15" fill="rgb(251,117,35)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="43.6741%" y="1141" width="0.0123%" height="15" fill="rgb(206,156,45)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="43.6741%" y="1125" width="0.0123%" height="15" fill="rgb(218,52,27)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1135.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="43.6741%" y="1109" width="0.0123%" height="15" fill="rgb(238,83,36)" fg:x="3559" fg:w="1"/><text x="43.9241%" y="1119.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (2 samples, 0.02%)</title><rect x="43.6741%" y="1381" width="0.0245%" height="15" fill="rgb(218,53,43)" fg:x="3559" fg:w="2"/><text x="43.9241%" y="1391.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (2 samples, 0.02%)</title><rect x="43.6741%" y="1365" width="0.0245%" height="15" fill="rgb(239,54,39)" fg:x="3559" fg:w="2"/><text x="43.9241%" y="1375.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="43.6863%" y="1349" width="0.0123%" height="15" fill="rgb(212,198,13)" fg:x="3560" fg:w="1"/><text x="43.9363%" y="1359.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="43.6863%" y="1333" width="0.0123%" height="15" fill="rgb(234,54,46)" fg:x="3560" fg:w="1"/><text x="43.9363%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="43.6863%" y="1317" width="0.0123%" height="15" fill="rgb(217,120,7)" fg:x="3560" fg:w="1"/><text x="43.9363%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="43.6863%" y="1301" width="0.0123%" height="15" fill="rgb(246,39,15)" fg:x="3560" fg:w="1"/><text x="43.9363%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="43.6863%" y="1285" width="0.0123%" height="15" fill="rgb(242,143,31)" fg:x="3560" fg:w="1"/><text x="43.9363%" y="1295.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1 samples, 0.01%)</title><rect x="43.6863%" y="1269" width="0.0123%" height="15" fill="rgb(252,60,24)" fg:x="3560" fg:w="1"/><text x="43.9363%" y="1279.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (4 samples, 0.05%)</title><rect x="43.6741%" y="1509" width="0.0491%" height="15" fill="rgb(249,220,7)" fg:x="3559" fg:w="4"/><text x="43.9241%" y="1519.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (4 samples, 0.05%)</title><rect x="43.6741%" y="1493" width="0.0491%" height="15" fill="rgb(236,67,13)" fg:x="3559" fg:w="4"/><text x="43.9241%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (4 samples, 0.05%)</title><rect x="43.6741%" y="1477" width="0.0491%" height="15" fill="rgb(210,62,39)" fg:x="3559" fg:w="4"/><text x="43.9241%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (4 samples, 0.05%)</title><rect x="43.6741%" y="1461" width="0.0491%" height="15" fill="rgb(219,122,53)" fg:x="3559" fg:w="4"/><text x="43.9241%" y="1471.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="43.6741%" y="1445" width="0.0491%" height="15" fill="rgb(218,87,25)" fg:x="3559" fg:w="4"/><text x="43.9241%" y="1455.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (4 samples, 0.05%)</title><rect x="43.6741%" y="1429" width="0.0491%" height="15" fill="rgb(234,179,48)" fg:x="3559" fg:w="4"/><text x="43.9241%" y="1439.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (4 samples, 0.05%)</title><rect x="43.6741%" y="1413" width="0.0491%" height="15" fill="rgb(248,90,0)" fg:x="3559" fg:w="4"/><text x="43.9241%" y="1423.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (4 samples, 0.05%)</title><rect x="43.6741%" y="1397" width="0.0491%" height="15" fill="rgb(207,228,37)" fg:x="3559" fg:w="4"/><text x="43.9241%" y="1407.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::finish (2 samples, 0.02%)</title><rect x="43.6986%" y="1381" width="0.0245%" height="15" fill="rgb(235,214,15)" fg:x="3561" fg:w="2"/><text x="43.9486%" y="1391.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (2 samples, 0.02%)</title><rect x="43.6986%" y="1365" width="0.0245%" height="15" fill="rgb(210,144,39)" fg:x="3561" fg:w="2"/><text x="43.9486%" y="1375.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (2 samples, 0.02%)</title><rect x="43.6986%" y="1349" width="0.0245%" height="15" fill="rgb(222,67,41)" fg:x="3561" fg:w="2"/><text x="43.9486%" y="1359.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="43.6986%" y="1333" width="0.0245%" height="15" fill="rgb(205,35,37)" fg:x="3561" fg:w="2"/><text x="43.9486%" y="1343.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="43.6986%" y="1317" width="0.0245%" height="15" fill="rgb(216,125,40)" fg:x="3561" fg:w="2"/><text x="43.9486%" y="1327.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="43.6986%" y="1301" width="0.0245%" height="15" fill="rgb(228,227,20)" fg:x="3561" fg:w="2"/><text x="43.9486%" y="1311.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="43.7232%" y="1509" width="0.0123%" height="15" fill="rgb(242,173,45)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1519.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (1 samples, 0.01%)</title><rect x="43.7232%" y="1493" width="0.0123%" height="15" fill="rgb(215,79,24)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1503.50"></text></g><g><title>wgpu::Device::create_swap_chain (1 samples, 0.01%)</title><rect x="43.7232%" y="1477" width="0.0123%" height="15" fill="rgb(238,164,38)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1487.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (1 samples, 0.01%)</title><rect x="43.7232%" y="1461" width="0.0123%" height="15" fill="rgb(245,196,38)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1471.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (1 samples, 0.01%)</title><rect x="43.7232%" y="1445" width="0.0123%" height="15" fill="rgb(231,217,29)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1455.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::configure_swapchain (1 samples, 0.01%)</title><rect x="43.7232%" y="1429" width="0.0123%" height="15" fill="rgb(245,6,4)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1439.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_backend_vulkan::Device&gt;::create_swapchain (1 samples, 0.01%)</title><rect x="43.7232%" y="1413" width="0.0123%" height="15" fill="rgb(214,76,49)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1423.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (1 samples, 0.01%)</title><rect x="43.7232%" y="1397" width="0.0123%" height="15" fill="rgb(205,96,12)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1407.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::create_swapchain_khr (1 samples, 0.01%)</title><rect x="43.7232%" y="1381" width="0.0123%" height="15" fill="rgb(243,131,4)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1391.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="43.7232%" y="1365" width="0.0123%" height="15" fill="rgb(214,114,4)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1375.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1349" width="0.0123%" height="15" fill="rgb(234,215,15)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1333" width="0.0123%" height="15" fill="rgb(250,216,45)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1317" width="0.0123%" height="15" fill="rgb(236,128,4)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1301" width="0.0123%" height="15" fill="rgb(234,50,33)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1285" width="0.0123%" height="15" fill="rgb(253,131,37)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1269" width="0.0123%" height="15" fill="rgb(218,55,27)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1279.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1253" width="0.0123%" height="15" fill="rgb(241,220,28)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1237" width="0.0123%" height="15" fill="rgb(241,90,48)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1247.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1221" width="0.0123%" height="15" fill="rgb(216,43,37)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1231.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1205" width="0.0123%" height="15" fill="rgb(207,173,9)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1189" width="0.0123%" height="15" fill="rgb(240,126,30)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1173" width="0.0123%" height="15" fill="rgb(228,178,53)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1157" width="0.0123%" height="15" fill="rgb(217,33,4)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1141" width="0.0123%" height="15" fill="rgb(206,124,34)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1125" width="0.0123%" height="15" fill="rgb(208,122,53)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7232%" y="1109" width="0.0123%" height="15" fill="rgb(215,202,26)" fg:x="3563" fg:w="1"/><text x="43.9732%" y="1119.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (1 samples, 0.01%)</title><rect x="43.7354%" y="1509" width="0.0123%" height="15" fill="rgb(232,198,31)" fg:x="3564" fg:w="1"/><text x="43.9854%" y="1519.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="43.7477%" y="1365" width="0.0123%" height="15" fill="rgb(222,23,35)" fg:x="3565" fg:w="1"/><text x="43.9977%" y="1375.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="43.7477%" y="1349" width="0.0123%" height="15" fill="rgb(242,27,53)" fg:x="3565" fg:w="1"/><text x="43.9977%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="43.7477%" y="1333" width="0.0123%" height="15" fill="rgb(210,216,42)" fg:x="3565" fg:w="1"/><text x="43.9977%" y="1343.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (2 samples, 0.02%)</title><rect x="43.7477%" y="1381" width="0.0245%" height="15" fill="rgb(234,39,38)" fg:x="3565" fg:w="2"/><text x="43.9977%" y="1391.50"></text></g><g><title>gfx_backend_vulkan::command::destructure_barriers (1 samples, 0.01%)</title><rect x="43.7600%" y="1365" width="0.0123%" height="15" fill="rgb(235,126,54)" fg:x="3566" fg:w="1"/><text x="44.0100%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="43.7600%" y="1349" width="0.0123%" height="15" fill="rgb(235,150,33)" fg:x="3566" fg:w="1"/><text x="44.0100%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="43.7722%" y="1349" width="0.0123%" height="15" fill="rgb(249,49,53)" fg:x="3567" fg:w="1"/><text x="44.0222%" y="1359.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="43.7722%" y="1333" width="0.0123%" height="15" fill="rgb(238,60,50)" fg:x="3567" fg:w="1"/><text x="44.0222%" y="1343.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="43.7722%" y="1317" width="0.0123%" height="15" fill="rgb(210,5,2)" fg:x="3567" fg:w="1"/><text x="44.0222%" y="1327.50"></text></g><g><title>&lt;wgpu_core::track::range::Merge&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="43.7722%" y="1301" width="0.0123%" height="15" fill="rgb(214,207,24)" fg:x="3567" fg:w="1"/><text x="44.0222%" y="1311.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="43.7722%" y="1285" width="0.0123%" height="15" fill="rgb(228,173,2)" fg:x="3567" fg:w="1"/><text x="44.0222%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.01%)</title><rect x="43.7722%" y="1269" width="0.0123%" height="15" fill="rgb(244,26,8)" fg:x="3567" fg:w="1"/><text x="44.0222%" y="1279.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="43.7722%" y="1253" width="0.0123%" height="15" fill="rgb(249,153,35)" fg:x="3567" fg:w="1"/><text x="44.0222%" y="1263.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="43.7722%" y="1237" width="0.0123%" height="15" fill="rgb(221,215,40)" fg:x="3567" fg:w="1"/><text x="44.0222%" y="1247.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::merge (2 samples, 0.02%)</title><rect x="43.7722%" y="1365" width="0.0245%" height="15" fill="rgb(238,106,35)" fg:x="3567" fg:w="2"/><text x="44.0222%" y="1375.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="43.7845%" y="1349" width="0.0123%" height="15" fill="rgb(207,195,21)" fg:x="3568" fg:w="1"/><text x="44.0345%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="43.7845%" y="1333" width="0.0123%" height="15" fill="rgb(205,43,29)" fg:x="3568" fg:w="1"/><text x="44.0345%" y="1343.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::merge (1 samples, 0.01%)</title><rect x="43.7845%" y="1317" width="0.0123%" height="15" fill="rgb(236,35,21)" fg:x="3568" fg:w="1"/><text x="44.0345%" y="1327.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (7 samples, 0.09%)</title><rect x="43.7477%" y="1397" width="0.0859%" height="15" fill="rgb(244,74,8)" fg:x="3565" fg:w="7"/><text x="43.9977%" y="1407.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (5 samples, 0.06%)</title><rect x="43.7722%" y="1381" width="0.0614%" height="15" fill="rgb(241,229,7)" fg:x="3567" fg:w="5"/><text x="44.0222%" y="1391.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.04%)</title><rect x="43.7968%" y="1365" width="0.0368%" height="15" fill="rgb(212,223,25)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1375.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.04%)</title><rect x="43.7968%" y="1349" width="0.0368%" height="15" fill="rgb(234,58,53)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1359.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (3 samples, 0.04%)</title><rect x="43.7968%" y="1333" width="0.0368%" height="15" fill="rgb(244,36,1)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="43.7968%" y="1317" width="0.0368%" height="15" fill="rgb(222,40,54)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.04%)</title><rect x="43.7968%" y="1301" width="0.0368%" height="15" fill="rgb(210,207,39)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.04%)</title><rect x="43.7968%" y="1285" width="0.0368%" height="15" fill="rgb(234,52,14)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.04%)</title><rect x="43.7968%" y="1269" width="0.0368%" height="15" fill="rgb(239,108,46)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.04%)</title><rect x="43.7968%" y="1253" width="0.0368%" height="15" fill="rgb(252,223,5)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="43.7968%" y="1237" width="0.0368%" height="15" fill="rgb(227,181,11)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1247.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.04%)</title><rect x="43.7968%" y="1221" width="0.0368%" height="15" fill="rgb(248,126,40)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="43.7968%" y="1205" width="0.0368%" height="15" fill="rgb(243,1,18)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="43.7968%" y="1189" width="0.0368%" height="15" fill="rgb(214,145,23)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="43.7968%" y="1173" width="0.0368%" height="15" fill="rgb(241,218,11)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1183.50"></text></g><g><title>__rdl_alloc (3 samples, 0.04%)</title><rect x="43.7968%" y="1157" width="0.0368%" height="15" fill="rgb(214,219,24)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1167.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.04%)</title><rect x="43.7968%" y="1141" width="0.0368%" height="15" fill="rgb(235,32,7)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1151.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="43.7968%" y="1125" width="0.0368%" height="15" fill="rgb(227,121,28)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1135.50"></text></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="43.7968%" y="1109" width="0.0368%" height="15" fill="rgb(216,129,49)" fg:x="3569" fg:w="3"/><text x="44.0468%" y="1119.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::finish (2 samples, 0.02%)</title><rect x="43.8336%" y="1397" width="0.0245%" height="15" fill="rgb(207,194,50)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1407.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (2 samples, 0.02%)</title><rect x="43.8336%" y="1381" width="0.0245%" height="15" fill="rgb(207,4,18)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1391.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (2 samples, 0.02%)</title><rect x="43.8336%" y="1365" width="0.0245%" height="15" fill="rgb(213,50,30)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1375.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="43.8336%" y="1349" width="0.0245%" height="15" fill="rgb(208,77,22)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1359.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="43.8336%" y="1333" width="0.0245%" height="15" fill="rgb(244,204,34)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.02%)</title><rect x="43.8336%" y="1317" width="0.0245%" height="15" fill="rgb(230,20,17)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="43.8336%" y="1301" width="0.0245%" height="15" fill="rgb(237,83,15)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="43.8336%" y="1285" width="0.0245%" height="15" fill="rgb(221,109,25)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="43.8336%" y="1269" width="0.0245%" height="15" fill="rgb(205,194,52)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.02%)</title><rect x="43.8336%" y="1253" width="0.0245%" height="15" fill="rgb(244,173,54)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.02%)</title><rect x="43.8336%" y="1237" width="0.0245%" height="15" fill="rgb(227,181,18)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="43.8336%" y="1221" width="0.0245%" height="15" fill="rgb(238,36,30)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1231.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="43.8336%" y="1205" width="0.0245%" height="15" fill="rgb(254,85,0)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="43.8336%" y="1189" width="0.0245%" height="15" fill="rgb(247,63,33)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="43.8336%" y="1173" width="0.0245%" height="15" fill="rgb(220,7,54)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="43.8336%" y="1157" width="0.0245%" height="15" fill="rgb(238,227,21)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1167.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="43.8336%" y="1141" width="0.0245%" height="15" fill="rgb(237,29,31)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1151.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="43.8336%" y="1125" width="0.0245%" height="15" fill="rgb(211,21,50)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1135.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="43.8336%" y="1109" width="0.0245%" height="15" fill="rgb(239,119,2)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1119.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="43.8336%" y="1093" width="0.0245%" height="15" fill="rgb(250,2,39)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1103.50"></text></g><g><title>malloc_consolidate (2 samples, 0.02%)</title><rect x="43.8336%" y="1077" width="0.0245%" height="15" fill="rgb(244,46,53)" fg:x="3572" fg:w="2"/><text x="44.0836%" y="1087.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (11 samples, 0.13%)</title><rect x="43.7477%" y="1509" width="0.1350%" height="15" fill="rgb(209,21,19)" fg:x="3565" fg:w="11"/><text x="43.9977%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (11 samples, 0.13%)</title><rect x="43.7477%" y="1493" width="0.1350%" height="15" fill="rgb(236,145,4)" fg:x="3565" fg:w="11"/><text x="43.9977%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (11 samples, 0.13%)</title><rect x="43.7477%" y="1477" width="0.1350%" height="15" fill="rgb(220,133,36)" fg:x="3565" fg:w="11"/><text x="43.9977%" y="1487.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (11 samples, 0.13%)</title><rect x="43.7477%" y="1461" width="0.1350%" height="15" fill="rgb(244,18,3)" fg:x="3565" fg:w="11"/><text x="43.9977%" y="1471.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (11 samples, 0.13%)</title><rect x="43.7477%" y="1445" width="0.1350%" height="15" fill="rgb(232,171,48)" fg:x="3565" fg:w="11"/><text x="43.9977%" y="1455.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (11 samples, 0.13%)</title><rect x="43.7477%" y="1429" width="0.1350%" height="15" fill="rgb(223,223,53)" fg:x="3565" fg:w="11"/><text x="43.9977%" y="1439.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (11 samples, 0.13%)</title><rect x="43.7477%" y="1413" width="0.1350%" height="15" fill="rgb(246,92,13)" fg:x="3565" fg:w="11"/><text x="43.9977%" y="1423.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (2 samples, 0.02%)</title><rect x="43.8581%" y="1397" width="0.0245%" height="15" fill="rgb(229,171,10)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1407.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (2 samples, 0.02%)</title><rect x="43.8581%" y="1381" width="0.0245%" height="15" fill="rgb(213,131,26)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1391.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="43.8581%" y="1365" width="0.0245%" height="15" fill="rgb(242,87,54)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1375.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="43.8581%" y="1349" width="0.0245%" height="15" fill="rgb(237,21,35)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1359.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.02%)</title><rect x="43.8581%" y="1333" width="0.0245%" height="15" fill="rgb(253,13,47)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="43.8581%" y="1317" width="0.0245%" height="15" fill="rgb(215,122,49)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="43.8581%" y="1301" width="0.0245%" height="15" fill="rgb(209,179,30)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="43.8581%" y="1285" width="0.0245%" height="15" fill="rgb(235,100,24)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.02%)</title><rect x="43.8581%" y="1269" width="0.0245%" height="15" fill="rgb(209,67,24)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.02%)</title><rect x="43.8581%" y="1253" width="0.0245%" height="15" fill="rgb(206,74,32)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="43.8581%" y="1237" width="0.0245%" height="15" fill="rgb(212,45,25)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1247.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="43.8581%" y="1221" width="0.0245%" height="15" fill="rgb(239,26,3)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="43.8581%" y="1205" width="0.0245%" height="15" fill="rgb(218,36,15)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1215.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="43.8581%" y="1189" width="0.0245%" height="15" fill="rgb(206,108,24)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="43.8581%" y="1173" width="0.0245%" height="15" fill="rgb(234,204,42)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1183.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="43.8581%" y="1157" width="0.0245%" height="15" fill="rgb(229,2,11)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1167.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="43.8581%" y="1141" width="0.0245%" height="15" fill="rgb(221,20,48)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1151.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="43.8581%" y="1125" width="0.0245%" height="15" fill="rgb(244,164,10)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1135.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="43.8581%" y="1109" width="0.0245%" height="15" fill="rgb(243,229,2)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1119.50"></text></g><g><title>malloc_consolidate (2 samples, 0.02%)</title><rect x="43.8581%" y="1093" width="0.0245%" height="15" fill="rgb(232,131,37)" fg:x="3574" fg:w="2"/><text x="44.1081%" y="1103.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="43.8827%" y="1509" width="0.0123%" height="15" fill="rgb(217,156,11)" fg:x="3576" fg:w="1"/><text x="44.1327%" y="1519.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (1 samples, 0.01%)</title><rect x="43.8950%" y="1509" width="0.0123%" height="15" fill="rgb(239,99,48)" fg:x="3577" fg:w="1"/><text x="44.1450%" y="1519.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_index_buffer (1 samples, 0.01%)</title><rect x="43.9072%" y="1509" width="0.0123%" height="15" fill="rgb(231,209,9)" fg:x="3578" fg:w="1"/><text x="44.1572%" y="1519.50"></text></g><g><title>glslang::TFunction::clone (3 samples, 0.04%)</title><rect x="43.9563%" y="1189" width="0.0368%" height="15" fill="rgb(254,97,27)" fg:x="3582" fg:w="3"/><text x="44.2063%" y="1199.50"></text></g><g><title>glslang::TFunction::TFunction (3 samples, 0.04%)</title><rect x="43.9563%" y="1173" width="0.0368%" height="15" fill="rgb(223,151,38)" fg:x="3582" fg:w="3"/><text x="44.2063%" y="1183.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (5 samples, 0.06%)</title><rect x="43.9563%" y="1333" width="0.0614%" height="15" fill="rgb(219,206,35)" fg:x="3582" fg:w="5"/><text x="44.2063%" y="1343.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (5 samples, 0.06%)</title><rect x="43.9563%" y="1317" width="0.0614%" height="15" fill="rgb(216,130,31)" fg:x="3582" fg:w="5"/><text x="44.2063%" y="1327.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (5 samples, 0.06%)</title><rect x="43.9563%" y="1301" width="0.0614%" height="15" fill="rgb(251,97,34)" fg:x="3582" fg:w="5"/><text x="44.2063%" y="1311.50"></text></g><g><title>bevy_glsl_to_spirv::compile (5 samples, 0.06%)</title><rect x="43.9563%" y="1285" width="0.0614%" height="15" fill="rgb(246,159,47)" fg:x="3582" fg:w="5"/><text x="44.2063%" y="1295.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (5 samples, 0.06%)</title><rect x="43.9563%" y="1269" width="0.0614%" height="15" fill="rgb(232,87,10)" fg:x="3582" fg:w="5"/><text x="44.2063%" y="1279.50"></text></g><g><title>glslang_shader_preprocess (5 samples, 0.06%)</title><rect x="43.9563%" y="1253" width="0.0614%" height="15" fill="rgb(249,1,37)" fg:x="3582" fg:w="5"/><text x="44.2063%" y="1263.50"></text></g><g><title>glslang::TShader::preprocess (5 samples, 0.06%)</title><rect x="43.9563%" y="1237" width="0.0614%" height="15" fill="rgb(239,135,14)" fg:x="3582" fg:w="5"/><text x="44.2063%" y="1247.50"></text></g><g><title>glslang::TSymbolTable::copyTable (5 samples, 0.06%)</title><rect x="43.9563%" y="1221" width="0.0614%" height="15" fill="rgb(253,116,46)" fg:x="3582" fg:w="5"/><text x="44.2063%" y="1231.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (5 samples, 0.06%)</title><rect x="43.9563%" y="1205" width="0.0614%" height="15" fill="rgb(222,217,37)" fg:x="3582" fg:w="5"/><text x="44.2063%" y="1215.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (2 samples, 0.02%)</title><rect x="43.9931%" y="1189" width="0.0245%" height="15" fill="rgb(252,96,8)" fg:x="3585" fg:w="2"/><text x="44.2431%" y="1199.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (2 samples, 0.02%)</title><rect x="43.9931%" y="1173" width="0.0245%" height="15" fill="rgb(254,103,41)" fg:x="3585" fg:w="2"/><text x="44.2431%" y="1183.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="43.9931%" y="1157" width="0.0245%" height="15" fill="rgb(218,213,19)" fg:x="3585" fg:w="2"/><text x="44.2431%" y="1167.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (1 samples, 0.01%)</title><rect x="44.0177%" y="1189" width="0.0123%" height="15" fill="rgb(253,95,21)" fg:x="3587" fg:w="1"/><text x="44.2677%" y="1199.50"></text></g><g><title>glslang::TBuiltIns::relateTabledBuiltins (1 samples, 0.01%)</title><rect x="44.0177%" y="1173" width="0.0123%" height="15" fill="rgb(229,26,28)" fg:x="3587" fg:w="1"/><text x="44.2677%" y="1183.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (1 samples, 0.01%)</title><rect x="44.0177%" y="1157" width="0.0123%" height="15" fill="rgb(230,129,16)" fg:x="3587" fg:w="1"/><text x="44.2677%" y="1167.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::_S_construct&lt;char const*&gt; (1 samples, 0.01%)</title><rect x="44.0177%" y="1141" width="0.0123%" height="15" fill="rgb(236,126,17)" fg:x="3587" fg:w="1"/><text x="44.2677%" y="1151.50"></text></g><g><title>glslang::TFunction::clone (4 samples, 0.05%)</title><rect x="44.0299%" y="1157" width="0.0491%" height="15" fill="rgb(209,33,33)" fg:x="3588" fg:w="4"/><text x="44.2799%" y="1167.50"></text></g><g><title>glslang::TFunction::TFunction (4 samples, 0.05%)</title><rect x="44.0299%" y="1141" width="0.0491%" height="15" fill="rgb(227,85,29)" fg:x="3588" fg:w="4"/><text x="44.2799%" y="1151.50"></text></g><g><title>glslang::TSymbol::getNumExtensions (1 samples, 0.01%)</title><rect x="44.0668%" y="1125" width="0.0123%" height="15" fill="rgb(241,53,46)" fg:x="3591" fg:w="1"/><text x="44.3168%" y="1135.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (13 samples, 0.16%)</title><rect x="43.9563%" y="1493" width="0.1595%" height="15" fill="rgb(228,167,53)" fg:x="3582" fg:w="13"/><text x="44.2063%" y="1503.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.16%)</title><rect x="43.9563%" y="1477" width="0.1595%" height="15" fill="rgb(238,195,45)" fg:x="3582" fg:w="13"/><text x="44.2063%" y="1487.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (13 samples, 0.16%)</title><rect x="43.9563%" y="1461" width="0.1595%" height="15" fill="rgb(252,124,45)" fg:x="3582" fg:w="13"/><text x="44.2063%" y="1471.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (13 samples, 0.16%)</title><rect x="43.9563%" y="1445" width="0.1595%" height="15" fill="rgb(251,38,35)" fg:x="3582" fg:w="13"/><text x="44.2063%" y="1455.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (13 samples, 0.16%)</title><rect x="43.9563%" y="1429" width="0.1595%" height="15" fill="rgb(227,33,2)" fg:x="3582" fg:w="13"/><text x="44.2063%" y="1439.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (13 samples, 0.16%)</title><rect x="43.9563%" y="1413" width="0.1595%" height="15" fill="rgb(223,157,46)" fg:x="3582" fg:w="13"/><text x="44.2063%" y="1423.50"></text></g><g><title>core::ops::function::Fn::call (13 samples, 0.16%)</title><rect x="43.9563%" y="1397" width="0.1595%" height="15" fill="rgb(222,78,41)" fg:x="3582" fg:w="13"/><text x="44.2063%" y="1407.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (13 samples, 0.16%)</title><rect x="43.9563%" y="1381" width="0.1595%" height="15" fill="rgb(248,176,11)" fg:x="3582" fg:w="13"/><text x="44.2063%" y="1391.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (13 samples, 0.16%)</title><rect x="43.9563%" y="1365" width="0.1595%" height="15" fill="rgb(241,221,18)" fg:x="3582" fg:w="13"/><text x="44.2063%" y="1375.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (13 samples, 0.16%)</title><rect x="43.9563%" y="1349" width="0.1595%" height="15" fill="rgb(218,85,22)" fg:x="3582" fg:w="13"/><text x="44.2063%" y="1359.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (8 samples, 0.10%)</title><rect x="44.0177%" y="1333" width="0.0982%" height="15" fill="rgb(222,223,7)" fg:x="3587" fg:w="8"/><text x="44.2677%" y="1343.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (8 samples, 0.10%)</title><rect x="44.0177%" y="1317" width="0.0982%" height="15" fill="rgb(254,59,39)" fg:x="3587" fg:w="8"/><text x="44.2677%" y="1327.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (8 samples, 0.10%)</title><rect x="44.0177%" y="1301" width="0.0982%" height="15" fill="rgb(247,100,27)" fg:x="3587" fg:w="8"/><text x="44.2677%" y="1311.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (8 samples, 0.10%)</title><rect x="44.0177%" y="1285" width="0.0982%" height="15" fill="rgb(237,207,10)" fg:x="3587" fg:w="8"/><text x="44.2677%" y="1295.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (8 samples, 0.10%)</title><rect x="44.0177%" y="1269" width="0.0982%" height="15" fill="rgb(220,121,28)" fg:x="3587" fg:w="8"/><text x="44.2677%" y="1279.50"></text></g><g><title>bevy_glsl_to_spirv::compile (8 samples, 0.10%)</title><rect x="44.0177%" y="1253" width="0.0982%" height="15" fill="rgb(213,223,20)" fg:x="3587" fg:w="8"/><text x="44.2677%" y="1263.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (8 samples, 0.10%)</title><rect x="44.0177%" y="1237" width="0.0982%" height="15" fill="rgb(205,121,27)" fg:x="3587" fg:w="8"/><text x="44.2677%" y="1247.50"></text></g><g><title>glslang_shader_preprocess (8 samples, 0.10%)</title><rect x="44.0177%" y="1221" width="0.0982%" height="15" fill="rgb(253,24,53)" fg:x="3587" fg:w="8"/><text x="44.2677%" y="1231.50"></text></g><g><title>glslang::TShader::preprocess (8 samples, 0.10%)</title><rect x="44.0177%" y="1205" width="0.0982%" height="15" fill="rgb(224,224,47)" fg:x="3587" fg:w="8"/><text x="44.2677%" y="1215.50"></text></g><g><title>glslang::TSymbolTable::copyTable (7 samples, 0.09%)</title><rect x="44.0299%" y="1189" width="0.0859%" height="15" fill="rgb(250,125,36)" fg:x="3588" fg:w="7"/><text x="44.2799%" y="1199.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (7 samples, 0.09%)</title><rect x="44.0299%" y="1173" width="0.0859%" height="15" fill="rgb(240,144,38)" fg:x="3588" fg:w="7"/><text x="44.2799%" y="1183.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (3 samples, 0.04%)</title><rect x="44.0790%" y="1157" width="0.0368%" height="15" fill="rgb(250,15,50)" fg:x="3592" fg:w="3"/><text x="44.3290%" y="1167.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (3 samples, 0.04%)</title><rect x="44.0790%" y="1141" width="0.0368%" height="15" fill="rgb(210,24,26)" fg:x="3592" fg:w="3"/><text x="44.3290%" y="1151.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="44.0913%" y="1125" width="0.0245%" height="15" fill="rgb(234,53,53)" fg:x="3593" fg:w="2"/><text x="44.3413%" y="1135.50"></text></g><g><title>glslang::TType::clone (1 samples, 0.01%)</title><rect x="44.1158%" y="1189" width="0.0123%" height="15" fill="rgb(208,108,28)" fg:x="3595" fg:w="1"/><text x="44.3658%" y="1199.50"></text></g><g><title>glslang::TType::deepCopy (1 samples, 0.01%)</title><rect x="44.1281%" y="1189" width="0.0123%" height="15" fill="rgb(227,143,7)" fg:x="3596" fg:w="1"/><text x="44.3781%" y="1199.50"></text></g><g><title>glslang::TFunction::clone (3 samples, 0.04%)</title><rect x="44.1158%" y="1221" width="0.0368%" height="15" fill="rgb(238,189,38)" fg:x="3595" fg:w="3"/><text x="44.3658%" y="1231.50"></text></g><g><title>glslang::TFunction::TFunction (3 samples, 0.04%)</title><rect x="44.1158%" y="1205" width="0.0368%" height="15" fill="rgb(222,69,15)" fg:x="3595" fg:w="3"/><text x="44.3658%" y="1215.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::assign (1 samples, 0.01%)</title><rect x="44.1404%" y="1189" width="0.0123%" height="15" fill="rgb(213,169,7)" fg:x="3597" fg:w="1"/><text x="44.3904%" y="1199.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (6 samples, 0.07%)</title><rect x="44.1158%" y="1365" width="0.0736%" height="15" fill="rgb(251,219,4)" fg:x="3595" fg:w="6"/><text x="44.3658%" y="1375.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (6 samples, 0.07%)</title><rect x="44.1158%" y="1349" width="0.0736%" height="15" fill="rgb(241,55,40)" fg:x="3595" fg:w="6"/><text x="44.3658%" y="1359.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (6 samples, 0.07%)</title><rect x="44.1158%" y="1333" width="0.0736%" height="15" fill="rgb(243,57,30)" fg:x="3595" fg:w="6"/><text x="44.3658%" y="1343.50"></text></g><g><title>bevy_glsl_to_spirv::compile (6 samples, 0.07%)</title><rect x="44.1158%" y="1317" width="0.0736%" height="15" fill="rgb(234,50,30)" fg:x="3595" fg:w="6"/><text x="44.3658%" y="1327.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (6 samples, 0.07%)</title><rect x="44.1158%" y="1301" width="0.0736%" height="15" fill="rgb(239,23,42)" fg:x="3595" fg:w="6"/><text x="44.3658%" y="1311.50"></text></g><g><title>glslang_shader_preprocess (6 samples, 0.07%)</title><rect x="44.1158%" y="1285" width="0.0736%" height="15" fill="rgb(217,38,19)" fg:x="3595" fg:w="6"/><text x="44.3658%" y="1295.50"></text></g><g><title>glslang::TShader::preprocess (6 samples, 0.07%)</title><rect x="44.1158%" y="1269" width="0.0736%" height="15" fill="rgb(215,179,16)" fg:x="3595" fg:w="6"/><text x="44.3658%" y="1279.50"></text></g><g><title>glslang::TSymbolTable::copyTable (6 samples, 0.07%)</title><rect x="44.1158%" y="1253" width="0.0736%" height="15" fill="rgb(254,21,37)" fg:x="3595" fg:w="6"/><text x="44.3658%" y="1263.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (6 samples, 0.07%)</title><rect x="44.1158%" y="1237" width="0.0736%" height="15" fill="rgb(219,207,48)" fg:x="3595" fg:w="6"/><text x="44.3658%" y="1247.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (3 samples, 0.04%)</title><rect x="44.1527%" y="1221" width="0.0368%" height="15" fill="rgb(227,225,41)" fg:x="3598" fg:w="3"/><text x="44.4027%" y="1231.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (3 samples, 0.04%)</title><rect x="44.1527%" y="1205" width="0.0368%" height="15" fill="rgb(223,130,1)" fg:x="3598" fg:w="3"/><text x="44.4027%" y="1215.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_get_insert_unique_pos (3 samples, 0.04%)</title><rect x="44.1527%" y="1189" width="0.0368%" height="15" fill="rgb(249,54,42)" fg:x="3598" fg:w="3"/><text x="44.4027%" y="1199.50"></text></g><g><title>glslang::TType::clone (1 samples, 0.01%)</title><rect x="44.1895%" y="1157" width="0.0123%" height="15" fill="rgb(248,69,25)" fg:x="3601" fg:w="1"/><text x="44.4395%" y="1167.50"></text></g><g><title>glslang::TFunction::clone (2 samples, 0.02%)</title><rect x="44.1895%" y="1189" width="0.0245%" height="15" fill="rgb(234,21,32)" fg:x="3601" fg:w="2"/><text x="44.4395%" y="1199.50"></text></g><g><title>glslang::TFunction::TFunction (2 samples, 0.02%)</title><rect x="44.1895%" y="1173" width="0.0245%" height="15" fill="rgb(252,136,6)" fg:x="3601" fg:w="2"/><text x="44.4395%" y="1183.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::_S_construct&lt;char const*&gt; (1 samples, 0.01%)</title><rect x="44.2017%" y="1157" width="0.0123%" height="15" fill="rgb(245,87,12)" fg:x="3602" fg:w="1"/><text x="44.4517%" y="1167.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (1 samples, 0.01%)</title><rect x="44.2140%" y="1157" width="0.0123%" height="15" fill="rgb(208,12,15)" fg:x="3603" fg:w="1"/><text x="44.4640%" y="1167.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (12 samples, 0.15%)</title><rect x="44.1158%" y="1493" width="0.1473%" height="15" fill="rgb(250,98,2)" fg:x="3595" fg:w="12"/><text x="44.3658%" y="1503.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (12 samples, 0.15%)</title><rect x="44.1158%" y="1477" width="0.1473%" height="15" fill="rgb(205,213,15)" fg:x="3595" fg:w="12"/><text x="44.3658%" y="1487.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (12 samples, 0.15%)</title><rect x="44.1158%" y="1461" width="0.1473%" height="15" fill="rgb(248,192,44)" fg:x="3595" fg:w="12"/><text x="44.3658%" y="1471.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (12 samples, 0.15%)</title><rect x="44.1158%" y="1445" width="0.1473%" height="15" fill="rgb(221,89,17)" fg:x="3595" fg:w="12"/><text x="44.3658%" y="1455.50"></text></g><g><title>core::ops::function::Fn::call (12 samples, 0.15%)</title><rect x="44.1158%" y="1429" width="0.1473%" height="15" fill="rgb(209,55,3)" fg:x="3595" fg:w="12"/><text x="44.3658%" y="1439.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (12 samples, 0.15%)</title><rect x="44.1158%" y="1413" width="0.1473%" height="15" fill="rgb(247,23,45)" fg:x="3595" fg:w="12"/><text x="44.3658%" y="1423.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (12 samples, 0.15%)</title><rect x="44.1158%" y="1397" width="0.1473%" height="15" fill="rgb(235,152,23)" fg:x="3595" fg:w="12"/><text x="44.3658%" y="1407.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (12 samples, 0.15%)</title><rect x="44.1158%" y="1381" width="0.1473%" height="15" fill="rgb(244,63,13)" fg:x="3595" fg:w="12"/><text x="44.3658%" y="1391.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.07%)</title><rect x="44.1895%" y="1365" width="0.0736%" height="15" fill="rgb(227,30,37)" fg:x="3601" fg:w="6"/><text x="44.4395%" y="1375.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (6 samples, 0.07%)</title><rect x="44.1895%" y="1349" width="0.0736%" height="15" fill="rgb(224,49,42)" fg:x="3601" fg:w="6"/><text x="44.4395%" y="1359.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (6 samples, 0.07%)</title><rect x="44.1895%" y="1333" width="0.0736%" height="15" fill="rgb(218,129,5)" fg:x="3601" fg:w="6"/><text x="44.4395%" y="1343.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (6 samples, 0.07%)</title><rect x="44.1895%" y="1317" width="0.0736%" height="15" fill="rgb(240,199,54)" fg:x="3601" fg:w="6"/><text x="44.4395%" y="1327.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (6 samples, 0.07%)</title><rect x="44.1895%" y="1301" width="0.0736%" height="15" fill="rgb(234,31,13)" fg:x="3601" fg:w="6"/><text x="44.4395%" y="1311.50"></text></g><g><title>bevy_glsl_to_spirv::compile (6 samples, 0.07%)</title><rect x="44.1895%" y="1285" width="0.0736%" height="15" fill="rgb(219,73,54)" fg:x="3601" fg:w="6"/><text x="44.4395%" y="1295.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (6 samples, 0.07%)</title><rect x="44.1895%" y="1269" width="0.0736%" height="15" fill="rgb(251,162,10)" fg:x="3601" fg:w="6"/><text x="44.4395%" y="1279.50"></text></g><g><title>glslang_shader_preprocess (6 samples, 0.07%)</title><rect x="44.1895%" y="1253" width="0.0736%" height="15" fill="rgb(240,138,47)" fg:x="3601" fg:w="6"/><text x="44.4395%" y="1263.50"></text></g><g><title>glslang::TShader::preprocess (6 samples, 0.07%)</title><rect x="44.1895%" y="1237" width="0.0736%" height="15" fill="rgb(216,138,26)" fg:x="3601" fg:w="6"/><text x="44.4395%" y="1247.50"></text></g><g><title>glslang::TSymbolTable::copyTable (6 samples, 0.07%)</title><rect x="44.1895%" y="1221" width="0.0736%" height="15" fill="rgb(243,17,35)" fg:x="3601" fg:w="6"/><text x="44.4395%" y="1231.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (6 samples, 0.07%)</title><rect x="44.1895%" y="1205" width="0.0736%" height="15" fill="rgb(241,60,18)" fg:x="3601" fg:w="6"/><text x="44.4395%" y="1215.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (4 samples, 0.05%)</title><rect x="44.2140%" y="1189" width="0.0491%" height="15" fill="rgb(234,2,44)" fg:x="3603" fg:w="4"/><text x="44.4640%" y="1199.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (4 samples, 0.05%)</title><rect x="44.2140%" y="1173" width="0.0491%" height="15" fill="rgb(225,225,33)" fg:x="3603" fg:w="4"/><text x="44.4640%" y="1183.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_get_insert_unique_pos (3 samples, 0.04%)</title><rect x="44.2263%" y="1157" width="0.0368%" height="15" fill="rgb(234,50,31)" fg:x="3604" fg:w="3"/><text x="44.4763%" y="1167.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.04%)</title><rect x="44.2263%" y="1141" width="0.0368%" height="15" fill="rgb(249,6,25)" fg:x="3604" fg:w="3"/><text x="44.4763%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.36%)</title><rect x="43.9195%" y="1509" width="0.3559%" height="15" fill="rgb(241,5,17)" fg:x="3579" fg:w="29"/><text x="44.1695%" y="1519.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::new::{{closure}} (1 samples, 0.01%)</title><rect x="44.2631%" y="1493" width="0.0123%" height="15" fill="rgb(207,116,10)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1503.50"></text></g><g><title>wgpu::Instance::request_adapter (1 samples, 0.01%)</title><rect x="44.2631%" y="1477" width="0.0123%" height="15" fill="rgb(222,128,18)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1487.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::instance_request_adapter (1 samples, 0.01%)</title><rect x="44.2631%" y="1461" width="0.0123%" height="15" fill="rgb(229,109,25)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1471.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (1 samples, 0.01%)</title><rect x="44.2631%" y="1445" width="0.0123%" height="15" fill="rgb(222,102,25)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1455.50"></text></g><g><title>&lt;gfx_backend_vulkan::Instance as gfx_hal::Instance&lt;gfx_backend_vulkan::Backend&gt;&gt;::enumerate_adapters (1 samples, 0.01%)</title><rect x="44.2631%" y="1429" width="0.0123%" height="15" fill="rgb(239,211,5)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1439.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="44.2631%" y="1413" width="0.0123%" height="15" fill="rgb(223,136,26)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1423.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="44.2631%" y="1397" width="0.0123%" height="15" fill="rgb(227,30,15)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1407.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="44.2631%" y="1381" width="0.0123%" height="15" fill="rgb(247,76,4)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1391.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="44.2631%" y="1365" width="0.0123%" height="15" fill="rgb(245,38,48)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1375.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="44.2631%" y="1349" width="0.0123%" height="15" fill="rgb(210,220,14)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1359.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="44.2631%" y="1333" width="0.0123%" height="15" fill="rgb(224,60,51)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="44.2631%" y="1317" width="0.0123%" height="15" fill="rgb(212,133,49)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="44.2631%" y="1301" width="0.0123%" height="15" fill="rgb(231,39,22)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1311.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="44.2631%" y="1285" width="0.0123%" height="15" fill="rgb(236,173,22)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1295.50"></text></g><g><title>&lt;gfx_backend_vulkan::Instance as gfx_hal::Instance&lt;gfx_backend_vulkan::Backend&gt;&gt;::enumerate_adapters::{{closure}} (1 samples, 0.01%)</title><rect x="44.2631%" y="1269" width="0.0123%" height="15" fill="rgb(210,70,0)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1279.50"></text></g><g><title>ash::instance::InstanceV1_0::enumerate_device_extension_properties (1 samples, 0.01%)</title><rect x="44.2631%" y="1253" width="0.0123%" height="15" fill="rgb(215,170,11)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1263.50"></text></g><g><title>ash::vk::features::InstanceFnV1_0::enumerate_device_extension_properties (1 samples, 0.01%)</title><rect x="44.2631%" y="1237" width="0.0123%" height="15" fill="rgb(220,154,28)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1247.50"></text></g><g><title>vkEnumerateDeviceExtensionProperties (1 samples, 0.01%)</title><rect x="44.2631%" y="1221" width="0.0123%" height="15" fill="rgb(240,160,41)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1231.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="44.2631%" y="1205" width="0.0123%" height="15" fill="rgb(243,215,41)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1215.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="44.2631%" y="1189" width="0.0123%" height="15" fill="rgb(214,208,31)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1199.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="44.2631%" y="1173" width="0.0123%" height="15" fill="rgb(247,57,22)" fg:x="3607" fg:w="1"/><text x="44.5131%" y="1183.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (1 samples, 0.01%)</title><rect x="44.2754%" y="1509" width="0.0123%" height="15" fill="rgb(228,73,52)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1519.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (1 samples, 0.01%)</title><rect x="44.2754%" y="1493" width="0.0123%" height="15" fill="rgb(252,60,9)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1503.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (1 samples, 0.01%)</title><rect x="44.2754%" y="1477" width="0.0123%" height="15" fill="rgb(233,9,51)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1487.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (1 samples, 0.01%)</title><rect x="44.2754%" y="1461" width="0.0123%" height="15" fill="rgb(223,67,14)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1471.50"></text></g><g><title>cpal::host::alsa::Device::default_config (1 samples, 0.01%)</title><rect x="44.2754%" y="1445" width="0.0123%" height="15" fill="rgb(222,86,2)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1455.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (1 samples, 0.01%)</title><rect x="44.2754%" y="1429" width="0.0123%" height="15" fill="rgb(243,58,54)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1439.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (1 samples, 0.01%)</title><rect x="44.2754%" y="1413" width="0.0123%" height="15" fill="rgb(210,200,39)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1423.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (1 samples, 0.01%)</title><rect x="44.2754%" y="1397" width="0.0123%" height="15" fill="rgb(238,135,9)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1407.50"></text></g><g><title>alsa::pcm::PCM::new (1 samples, 0.01%)</title><rect x="44.2754%" y="1381" width="0.0123%" height="15" fill="rgb(232,179,7)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1391.50"></text></g><g><title>alsa::pcm::PCM::open (1 samples, 0.01%)</title><rect x="44.2754%" y="1365" width="0.0123%" height="15" fill="rgb(245,65,41)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1375.50"></text></g><g><title>snd_pcm_open (1 samples, 0.01%)</title><rect x="44.2754%" y="1349" width="0.0123%" height="15" fill="rgb(227,43,8)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1359.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="44.2754%" y="1333" width="0.0123%" height="15" fill="rgb(235,91,14)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1343.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="44.2754%" y="1317" width="0.0123%" height="15" fill="rgb(235,219,31)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1327.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="44.2754%" y="1301" width="0.0123%" height="15" fill="rgb(227,121,25)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1311.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="44.2754%" y="1285" width="0.0123%" height="15" fill="rgb(254,129,24)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1295.50"></text></g><g><title>snd_dlopen (1 samples, 0.01%)</title><rect x="44.2754%" y="1269" width="0.0123%" height="15" fill="rgb(226,144,49)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1279.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="44.2754%" y="1253" width="0.0123%" height="15" fill="rgb(214,187,32)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1263.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="44.2754%" y="1237" width="0.0123%" height="15" fill="rgb(243,129,46)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1247.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="44.2754%" y="1221" width="0.0123%" height="15" fill="rgb(221,185,35)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1231.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="44.2754%" y="1205" width="0.0123%" height="15" fill="rgb(205,0,32)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1215.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="44.2754%" y="1189" width="0.0123%" height="15" fill="rgb(229,179,12)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1199.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="44.2754%" y="1173" width="0.0123%" height="15" fill="rgb(252,107,19)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1183.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="44.2754%" y="1157" width="0.0123%" height="15" fill="rgb(220,95,27)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1167.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="44.2754%" y="1141" width="0.0123%" height="15" fill="rgb(240,113,40)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1151.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="44.2754%" y="1125" width="0.0123%" height="15" fill="rgb(208,4,43)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1135.50"></text></g><g><title>_dl_name_match_p (1 samples, 0.01%)</title><rect x="44.2754%" y="1109" width="0.0123%" height="15" fill="rgb(247,189,30)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1119.50"></text></g><g><title>strcmp (1 samples, 0.01%)</title><rect x="44.2754%" y="1093" width="0.0123%" height="15" fill="rgb(231,157,17)" fg:x="3608" fg:w="1"/><text x="44.5254%" y="1103.50"></text></g><g><title>&lt;gfx_backend_vulkan::PhysicalDevice as gfx_hal::adapter::PhysicalDevice&lt;gfx_backend_vulkan::Backend&gt;&gt;::open (1 samples, 0.01%)</title><rect x="44.2876%" y="1509" width="0.0123%" height="15" fill="rgb(224,139,6)" fg:x="3609" fg:w="1"/><text x="44.5376%" y="1519.50"></text></g><g><title>&lt;ash::instance::Instance as ash::instance::InstanceV1_0&gt;::create_device (1 samples, 0.01%)</title><rect x="44.2876%" y="1493" width="0.0123%" height="15" fill="rgb(223,83,16)" fg:x="3609" fg:w="1"/><text x="44.5376%" y="1503.50"></text></g><g><title>ash::vk::features::InstanceFnV1_0::create_device (1 samples, 0.01%)</title><rect x="44.2876%" y="1477" width="0.0123%" height="15" fill="rgb(232,211,20)" fg:x="3609" fg:w="1"/><text x="44.5376%" y="1487.50"></text></g><g><title>vkCreateDevice (1 samples, 0.01%)</title><rect x="44.2876%" y="1461" width="0.0123%" height="15" fill="rgb(225,203,35)" fg:x="3609" fg:w="1"/><text x="44.5376%" y="1471.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="44.2876%" y="1445" width="0.0123%" height="15" fill="rgb(215,211,44)" fg:x="3609" fg:w="1"/><text x="44.5376%" y="1455.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="44.2876%" y="1429" width="0.0123%" height="15" fill="rgb(248,213,26)" fg:x="3609" fg:w="1"/><text x="44.5376%" y="1439.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="44.2876%" y="1413" width="0.0123%" height="15" fill="rgb(214,23,52)" fg:x="3609" fg:w="1"/><text x="44.5376%" y="1423.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="44.2876%" y="1397" width="0.0123%" height="15" fill="rgb(225,173,50)" fg:x="3609" fg:w="1"/><text x="44.5376%" y="1407.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="44.2876%" y="1381" width="0.0123%" height="15" fill="rgb(206,150,22)" fg:x="3609" fg:w="1"/><text x="44.5376%" y="1391.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="44.2876%" y="1365" width="0.0123%" height="15" fill="rgb(239,64,23)" fg:x="3609" fg:w="1"/><text x="44.5376%" y="1375.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin_render_pass (1 samples, 0.01%)</title><rect x="44.2999%" y="1509" width="0.0123%" height="15" fill="rgb(242,50,38)" fg:x="3610" fg:w="1"/><text x="44.5499%" y="1519.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_begin_render_pass (1 samples, 0.01%)</title><rect x="44.2999%" y="1493" width="0.0123%" height="15" fill="rgb(217,91,15)" fg:x="3610" fg:w="1"/><text x="44.5499%" y="1503.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_begin_render_pass (1 samples, 0.01%)</title><rect x="44.2999%" y="1477" width="0.0123%" height="15" fill="rgb(230,172,6)" fg:x="3610" fg:w="1"/><text x="44.5499%" y="1487.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (3 samples, 0.04%)</title><rect x="44.3122%" y="1509" width="0.0368%" height="15" fill="rgb(221,98,26)" fg:x="3611" fg:w="3"/><text x="44.5622%" y="1519.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="44.3367%" y="1493" width="0.0123%" height="15" fill="rgb(227,210,45)" fg:x="3613" fg:w="1"/><text x="44.5867%" y="1503.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="44.3367%" y="1477" width="0.0123%" height="15" fill="rgb(206,8,30)" fg:x="3613" fg:w="1"/><text x="44.5867%" y="1487.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_scissors (1 samples, 0.01%)</title><rect x="44.3490%" y="1509" width="0.0123%" height="15" fill="rgb(241,219,17)" fg:x="3614" fg:w="1"/><text x="44.5990%" y="1519.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="44.3613%" y="1509" width="0.0123%" height="15" fill="rgb(247,121,29)" fg:x="3615" fg:w="1"/><text x="44.6113%" y="1519.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="44.3735%" y="1509" width="0.0123%" height="15" fill="rgb(219,169,49)" fg:x="3616" fg:w="1"/><text x="44.6235%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.01%)</title><rect x="44.3735%" y="1493" width="0.0123%" height="15" fill="rgb(253,49,49)" fg:x="3616" fg:w="1"/><text x="44.6235%" y="1503.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="44.3858%" y="1509" width="0.0123%" height="15" fill="rgb(217,178,3)" fg:x="3617" fg:w="1"/><text x="44.6358%" y="1519.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (2 samples, 0.02%)</title><rect x="44.3981%" y="1509" width="0.0245%" height="15" fill="rgb(234,73,37)" fg:x="3618" fg:w="2"/><text x="44.6481%" y="1519.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::clear (1 samples, 0.01%)</title><rect x="44.4104%" y="1493" width="0.0123%" height="15" fill="rgb(250,98,22)" fg:x="3619" fg:w="1"/><text x="44.6604%" y="1503.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (1 samples, 0.01%)</title><rect x="44.4104%" y="1477" width="0.0123%" height="15" fill="rgb(220,108,37)" fg:x="3619" fg:w="1"/><text x="44.6604%" y="1487.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="44.4104%" y="1461" width="0.0123%" height="15" fill="rgb(225,168,10)" fg:x="3619" fg:w="1"/><text x="44.6604%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="44.4104%" y="1445" width="0.0123%" height="15" fill="rgb(247,215,21)" fg:x="3619" fg:w="1"/><text x="44.6604%" y="1455.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (3 samples, 0.04%)</title><rect x="44.4226%" y="1461" width="0.0368%" height="15" fill="rgb(253,189,31)" fg:x="3620" fg:w="3"/><text x="44.6726%" y="1471.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (3 samples, 0.04%)</title><rect x="44.4226%" y="1445" width="0.0368%" height="15" fill="rgb(241,54,22)" fg:x="3620" fg:w="3"/><text x="44.6726%" y="1455.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (3 samples, 0.04%)</title><rect x="44.4226%" y="1429" width="0.0368%" height="15" fill="rgb(211,87,4)" fg:x="3620" fg:w="3"/><text x="44.6726%" y="1439.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (3 samples, 0.04%)</title><rect x="44.4226%" y="1413" width="0.0368%" height="15" fill="rgb(245,112,24)" fg:x="3620" fg:w="3"/><text x="44.6726%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="44.4226%" y="1397" width="0.0368%" height="15" fill="rgb(235,190,41)" fg:x="3620" fg:w="3"/><text x="44.6726%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="44.4226%" y="1381" width="0.0368%" height="15" fill="rgb(214,89,8)" fg:x="3620" fg:w="3"/><text x="44.6726%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="44.4226%" y="1365" width="0.0368%" height="15" fill="rgb(249,155,35)" fg:x="3620" fg:w="3"/><text x="44.6726%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="44.4349%" y="1349" width="0.0245%" height="15" fill="rgb(249,88,26)" fg:x="3621" fg:w="2"/><text x="44.6849%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="44.4349%" y="1333" width="0.0245%" height="15" fill="rgb(232,56,8)" fg:x="3621" fg:w="2"/><text x="44.6849%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="44.4349%" y="1317" width="0.0245%" height="15" fill="rgb(240,95,3)" fg:x="3621" fg:w="2"/><text x="44.6849%" y="1327.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="44.5085%" y="1445" width="0.0245%" height="15" fill="rgb(222,44,28)" fg:x="3627" fg:w="2"/><text x="44.7585%" y="1455.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="44.5331%" y="1445" width="0.0123%" height="15" fill="rgb(234,16,30)" fg:x="3629" fg:w="1"/><text x="44.7831%" y="1455.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start::{{closure}} (1 samples, 0.01%)</title><rect x="44.5331%" y="1429" width="0.0123%" height="15" fill="rgb(223,26,17)" fg:x="3629" fg:w="1"/><text x="44.7831%" y="1439.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.01%)</title><rect x="44.5453%" y="1445" width="0.0123%" height="15" fill="rgb(239,187,47)" fg:x="3630" fg:w="1"/><text x="44.7953%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::render::RenderPassErrorInner&gt; (1 samples, 0.01%)</title><rect x="44.5453%" y="1429" width="0.0123%" height="15" fill="rgb(247,102,50)" fg:x="3630" fg:w="1"/><text x="44.7953%" y="1439.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="44.5576%" y="1429" width="0.0123%" height="15" fill="rgb(231,216,22)" fg:x="3631" fg:w="1"/><text x="44.8076%" y="1439.50"></text></g><g><title>wgpu_core::device::AttachmentData&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="44.5576%" y="1445" width="0.0245%" height="15" fill="rgb(216,201,26)" fg:x="3631" fg:w="2"/><text x="44.8076%" y="1455.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="44.5699%" y="1429" width="0.0123%" height="15" fill="rgb(214,186,23)" fg:x="3632" fg:w="1"/><text x="44.8199%" y="1439.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (1 samples, 0.01%)</title><rect x="44.5699%" y="1413" width="0.0123%" height="15" fill="rgb(235,184,4)" fg:x="3632" fg:w="1"/><text x="44.8199%" y="1423.50"></text></g><g><title>wgpu_core::device::AttachmentData&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="44.5699%" y="1397" width="0.0123%" height="15" fill="rgb(244,46,17)" fg:x="3632" fg:w="1"/><text x="44.8199%" y="1407.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::query (1 samples, 0.01%)</title><rect x="44.5822%" y="1445" width="0.0123%" height="15" fill="rgb(248,74,46)" fg:x="3633" fg:w="1"/><text x="44.8322%" y="1455.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.01%)</title><rect x="44.5944%" y="1429" width="0.0123%" height="15" fill="rgb(243,79,5)" fg:x="3634" fg:w="1"/><text x="44.8444%" y="1439.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (16 samples, 0.20%)</title><rect x="44.4226%" y="1509" width="0.1963%" height="15" fill="rgb(213,148,1)" fg:x="3620" fg:w="16"/><text x="44.6726%" y="1519.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (16 samples, 0.20%)</title><rect x="44.4226%" y="1493" width="0.1963%" height="15" fill="rgb(221,30,0)" fg:x="3620" fg:w="16"/><text x="44.6726%" y="1503.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (16 samples, 0.20%)</title><rect x="44.4226%" y="1477" width="0.1963%" height="15" fill="rgb(207,85,29)" fg:x="3620" fg:w="16"/><text x="44.6726%" y="1487.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start (13 samples, 0.16%)</title><rect x="44.4594%" y="1461" width="0.1595%" height="15" fill="rgb(239,31,46)" fg:x="3623" fg:w="13"/><text x="44.7094%" y="1471.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (2 samples, 0.02%)</title><rect x="44.5944%" y="1445" width="0.0245%" height="15" fill="rgb(219,6,1)" fg:x="3634" fg:w="2"/><text x="44.8444%" y="1455.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (1 samples, 0.01%)</title><rect x="44.6067%" y="1429" width="0.0123%" height="15" fill="rgb(229,90,29)" fg:x="3635" fg:w="1"/><text x="44.8567%" y="1439.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (1 samples, 0.01%)</title><rect x="44.6067%" y="1413" width="0.0123%" height="15" fill="rgb(242,201,42)" fg:x="3635" fg:w="1"/><text x="44.8567%" y="1423.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="44.6067%" y="1397" width="0.0123%" height="15" fill="rgb(243,80,54)" fg:x="3635" fg:w="1"/><text x="44.8567%" y="1407.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="44.6067%" y="1381" width="0.0123%" height="15" fill="rgb(223,166,15)" fg:x="3635" fg:w="1"/><text x="44.8567%" y="1391.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="44.6067%" y="1365" width="0.0123%" height="15" fill="rgb(238,78,27)" fg:x="3635" fg:w="1"/><text x="44.8567%" y="1375.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (1 samples, 0.01%)</title><rect x="44.6190%" y="1509" width="0.0123%" height="15" fill="rgb(235,28,43)" fg:x="3636" fg:w="1"/><text x="44.8690%" y="1519.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="44.6190%" y="1493" width="0.0123%" height="15" fill="rgb(240,210,28)" fg:x="3636" fg:w="1"/><text x="44.8690%" y="1503.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="44.6190%" y="1477" width="0.0123%" height="15" fill="rgb(253,6,46)" fg:x="3636" fg:w="1"/><text x="44.8690%" y="1487.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="44.6190%" y="1461" width="0.0123%" height="15" fill="rgb(250,159,47)" fg:x="3636" fg:w="1"/><text x="44.8690%" y="1471.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="44.6190%" y="1445" width="0.0123%" height="15" fill="rgb(216,139,2)" fg:x="3636" fg:w="1"/><text x="44.8690%" y="1455.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="44.6190%" y="1429" width="0.0123%" height="15" fill="rgb(221,124,44)" fg:x="3636" fg:w="1"/><text x="44.8690%" y="1439.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="44.6190%" y="1413" width="0.0123%" height="15" fill="rgb(205,37,22)" fg:x="3636" fg:w="1"/><text x="44.8690%" y="1423.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="44.6190%" y="1397" width="0.0123%" height="15" fill="rgb(250,55,8)" fg:x="3636" fg:w="1"/><text x="44.8690%" y="1407.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_render_pipeline (5 samples, 0.06%)</title><rect x="44.6312%" y="1509" width="0.0614%" height="15" fill="rgb(215,83,48)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1519.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_render_pipeline (5 samples, 0.06%)</title><rect x="44.6312%" y="1493" width="0.0614%" height="15" fill="rgb(253,2,32)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1503.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_render_pipeline (5 samples, 0.06%)</title><rect x="44.6312%" y="1477" width="0.0614%" height="15" fill="rgb(236,67,28)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1487.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_graphics_pipeline (5 samples, 0.06%)</title><rect x="44.6312%" y="1461" width="0.0614%" height="15" fill="rgb(252,55,15)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1471.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_graphics_pipelines (5 samples, 0.06%)</title><rect x="44.6312%" y="1445" width="0.0614%" height="15" fill="rgb(243,173,17)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="44.6312%" y="1429" width="0.0614%" height="15" fill="rgb(215,212,13)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1439.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="44.6312%" y="1413" width="0.0614%" height="15" fill="rgb(253,176,6)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="44.6312%" y="1397" width="0.0614%" height="15" fill="rgb(236,105,26)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="44.6312%" y="1381" width="0.0614%" height="15" fill="rgb(239,226,32)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="44.6312%" y="1365" width="0.0614%" height="15" fill="rgb(236,104,51)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="44.6312%" y="1349" width="0.0614%" height="15" fill="rgb(220,172,33)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="44.6312%" y="1333" width="0.0614%" height="15" fill="rgb(224,182,25)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="44.6312%" y="1317" width="0.0614%" height="15" fill="rgb(236,184,24)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="44.6312%" y="1301" width="0.0614%" height="15" fill="rgb(241,221,14)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="44.6312%" y="1285" width="0.0614%" height="15" fill="rgb(227,146,5)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="44.6312%" y="1269" width="0.0614%" height="15" fill="rgb(214,15,23)" fg:x="3637" fg:w="5"/><text x="44.8812%" y="1279.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (1 samples, 0.01%)</title><rect x="44.6926%" y="1509" width="0.0123%" height="15" fill="rgb(233,157,31)" fg:x="3642" fg:w="1"/><text x="44.9426%" y="1519.50"></text></g><g><title>XPending (1 samples, 0.01%)</title><rect x="44.7049%" y="1509" width="0.0123%" height="15" fill="rgb(211,27,52)" fg:x="3643" fg:w="1"/><text x="44.9549%" y="1519.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="44.7171%" y="1493" width="0.0123%" height="15" fill="rgb(212,223,15)" fg:x="3644" fg:w="1"/><text x="44.9671%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_text::font::Font&gt;&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="44.7171%" y="1477" width="0.0123%" height="15" fill="rgb(254,211,0)" fg:x="3644" fg:w="1"/><text x="44.9671%" y="1487.50"></text></g><g><title>glslang::TPpContext::tStringInput::scan (1 samples, 0.01%)</title><rect x="44.7294%" y="1493" width="0.0123%" height="15" fill="rgb(205,43,38)" fg:x="3645" fg:w="1"/><text x="44.9794%" y="1503.50"></text></g><g><title>glslang::TPpContext::tokenPaste (2 samples, 0.02%)</title><rect x="44.7417%" y="1493" width="0.0245%" height="15" fill="rgb(242,206,46)" fg:x="3646" fg:w="2"/><text x="44.9917%" y="1503.50"></text></g><g><title>[engine] (5 samples, 0.06%)</title><rect x="44.7171%" y="1509" width="0.0614%" height="15" fill="rgb(220,221,12)" fg:x="3644" fg:w="5"/><text x="44.9671%" y="1519.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister (1 samples, 0.01%)</title><rect x="44.7662%" y="1493" width="0.0123%" height="15" fill="rgb(217,156,35)" fg:x="3648" fg:w="1"/><text x="45.0162%" y="1503.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (4 samples, 0.05%)</title><rect x="44.7785%" y="1509" width="0.0491%" height="15" fill="rgb(207,181,49)" fg:x="3649" fg:w="4"/><text x="45.0285%" y="1519.50"></text></g><g><title>XStringToKeysym (2 samples, 0.02%)</title><rect x="45.0362%" y="1493" width="0.0245%" height="15" fill="rgb(235,103,47)" fg:x="3670" fg:w="2"/><text x="45.2862%" y="1503.50"></text></g><g><title>[libX11.so.6.4.0] (29 samples, 0.36%)</title><rect x="45.0730%" y="1477" width="0.3559%" height="15" fill="rgb(222,63,28)" fg:x="3673" fg:w="29"/><text x="45.3230%" y="1487.50"></text></g><g><title>fgetc (29 samples, 0.36%)</title><rect x="45.0730%" y="1461" width="0.3559%" height="15" fill="rgb(244,137,21)" fg:x="3673" fg:w="29"/><text x="45.3230%" y="1471.50"></text></g><g><title>[libX11.so.6.4.0] (37 samples, 0.45%)</title><rect x="45.0607%" y="1493" width="0.4540%" height="15" fill="rgb(228,35,27)" fg:x="3672" fg:w="37"/><text x="45.3107%" y="1503.50"></text></g><g><title>fgetc (7 samples, 0.09%)</title><rect x="45.4289%" y="1477" width="0.0859%" height="15" fill="rgb(226,191,41)" fg:x="3702" fg:w="7"/><text x="45.6789%" y="1487.50"></text></g><g><title>_XlcMapOSLocaleName (1 samples, 0.01%)</title><rect x="45.5148%" y="1461" width="0.0123%" height="15" fill="rgb(210,154,3)" fg:x="3709" fg:w="1"/><text x="45.7648%" y="1471.50"></text></g><g><title>__strstr_sse2_unaligned (1 samples, 0.01%)</title><rect x="45.5148%" y="1445" width="0.0123%" height="15" fill="rgb(216,60,49)" fg:x="3709" fg:w="1"/><text x="45.7648%" y="1455.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="45.5271%" y="1461" width="0.0123%" height="15" fill="rgb(226,17,20)" fg:x="3710" fg:w="1"/><text x="45.7771%" y="1471.50"></text></g><g><title>_XOpenLC (3 samples, 0.04%)</title><rect x="45.5148%" y="1477" width="0.0368%" height="15" fill="rgb(206,115,35)" fg:x="3709" fg:w="3"/><text x="45.7648%" y="1487.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="45.5393%" y="1461" width="0.0123%" height="15" fill="rgb(227,88,1)" fg:x="3711" fg:w="1"/><text x="45.7893%" y="1471.50"></text></g><g><title>XrmStringToQuark (1 samples, 0.01%)</title><rect x="45.5516%" y="1461" width="0.0123%" height="15" fill="rgb(230,222,24)" fg:x="3712" fg:w="1"/><text x="45.8016%" y="1471.50"></text></g><g><title>_Xlcmbstoutf8 (5 samples, 0.06%)</title><rect x="45.5148%" y="1493" width="0.0614%" height="15" fill="rgb(214,124,32)" fg:x="3709" fg:w="5"/><text x="45.7648%" y="1503.50"></text></g><g><title>_XlcOpenConverter (2 samples, 0.02%)</title><rect x="45.5516%" y="1477" width="0.0245%" height="15" fill="rgb(240,41,36)" fg:x="3712" fg:w="2"/><text x="45.8016%" y="1487.50"></text></g><g><title>_XrmInternalStringToQuark (1 samples, 0.01%)</title><rect x="45.5639%" y="1461" width="0.0123%" height="15" fill="rgb(221,17,52)" fg:x="3713" fg:w="1"/><text x="45.8139%" y="1471.50"></text></g><g><title>_XOpenLC (1 samples, 0.01%)</title><rect x="45.5761%" y="1477" width="0.0123%" height="15" fill="rgb(252,70,16)" fg:x="3714" fg:w="1"/><text x="45.8261%" y="1487.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="45.5761%" y="1461" width="0.0123%" height="15" fill="rgb(250,177,4)" fg:x="3714" fg:w="1"/><text x="45.8261%" y="1471.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="45.5884%" y="1461" width="0.0123%" height="15" fill="rgb(240,188,47)" fg:x="3715" fg:w="1"/><text x="45.8384%" y="1471.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="45.5884%" y="1445" width="0.0123%" height="15" fill="rgb(215,92,12)" fg:x="3715" fg:w="1"/><text x="45.8384%" y="1455.50"></text></g><g><title>_XlcOpenConverter (2 samples, 0.02%)</title><rect x="45.5884%" y="1477" width="0.0245%" height="15" fill="rgb(242,110,29)" fg:x="3715" fg:w="2"/><text x="45.8384%" y="1487.50"></text></g><g><title>_XrmInternalStringToQuark (1 samples, 0.01%)</title><rect x="45.6007%" y="1461" width="0.0123%" height="15" fill="rgb(208,211,26)" fg:x="3716" fg:w="1"/><text x="45.8507%" y="1471.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="45.6007%" y="1445" width="0.0123%" height="15" fill="rgb(244,147,6)" fg:x="3716" fg:w="1"/><text x="45.8507%" y="1455.50"></text></g><g><title>_Xlcmbstowcs (4 samples, 0.05%)</title><rect x="45.5761%" y="1493" width="0.0491%" height="15" fill="rgb(211,130,42)" fg:x="3714" fg:w="4"/><text x="45.8261%" y="1503.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="45.6130%" y="1477" width="0.0123%" height="15" fill="rgb(220,63,1)" fg:x="3717" fg:w="1"/><text x="45.8630%" y="1487.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="45.6130%" y="1461" width="0.0123%" height="15" fill="rgb(241,212,30)" fg:x="3717" fg:w="1"/><text x="45.8630%" y="1471.50"></text></g><g><title>[libX11.so.6.4.0] (67 samples, 0.82%)</title><rect x="44.8276%" y="1509" width="0.8222%" height="15" fill="rgb(233,153,17)" fg:x="3653" fg:w="67"/><text x="45.0776%" y="1519.50"></text></g><g><title>__strlen_avx2 (2 samples, 0.02%)</title><rect x="45.6252%" y="1493" width="0.0245%" height="15" fill="rgb(236,3,10)" fg:x="3718" fg:w="2"/><text x="45.8752%" y="1503.50"></text></g><g><title>[libasound.so.2.0.0] (5 samples, 0.06%)</title><rect x="45.6498%" y="1509" width="0.0614%" height="15" fill="rgb(232,41,21)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1519.50"></text></g><g><title>snd_dlopen (5 samples, 0.06%)</title><rect x="45.6498%" y="1493" width="0.0614%" height="15" fill="rgb(206,63,51)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1503.50"></text></g><g><title>dlopen (5 samples, 0.06%)</title><rect x="45.6498%" y="1477" width="0.0614%" height="15" fill="rgb(250,214,3)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1487.50"></text></g><g><title>[libdl-2.33.so] (5 samples, 0.06%)</title><rect x="45.6498%" y="1461" width="0.0614%" height="15" fill="rgb(254,89,27)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1471.50"></text></g><g><title>__GI__dl_catch_error (5 samples, 0.06%)</title><rect x="45.6498%" y="1445" width="0.0614%" height="15" fill="rgb(249,41,14)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1455.50"></text></g><g><title>__GI__dl_catch_exception (5 samples, 0.06%)</title><rect x="45.6498%" y="1429" width="0.0614%" height="15" fill="rgb(221,196,51)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1439.50"></text></g><g><title>[libdl-2.33.so] (5 samples, 0.06%)</title><rect x="45.6498%" y="1413" width="0.0614%" height="15" fill="rgb(214,116,26)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1423.50"></text></g><g><title>_dl_open (5 samples, 0.06%)</title><rect x="45.6498%" y="1397" width="0.0614%" height="15" fill="rgb(236,67,7)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1407.50"></text></g><g><title>__GI__dl_catch_exception (5 samples, 0.06%)</title><rect x="45.6498%" y="1381" width="0.0614%" height="15" fill="rgb(253,179,32)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1391.50"></text></g><g><title>dl_open_worker (5 samples, 0.06%)</title><rect x="45.6498%" y="1365" width="0.0614%" height="15" fill="rgb(218,33,15)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1375.50"></text></g><g><title>_dl_map_object_deps (5 samples, 0.06%)</title><rect x="45.6498%" y="1349" width="0.0614%" height="15" fill="rgb(217,202,41)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1359.50"></text></g><g><title>__GI__dl_catch_exception (5 samples, 0.06%)</title><rect x="45.6498%" y="1333" width="0.0614%" height="15" fill="rgb(234,133,5)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1343.50"></text></g><g><title>openaux (5 samples, 0.06%)</title><rect x="45.6498%" y="1317" width="0.0614%" height="15" fill="rgb(240,47,40)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1327.50"></text></g><g><title>_dl_map_object (5 samples, 0.06%)</title><rect x="45.6498%" y="1301" width="0.0614%" height="15" fill="rgb(234,166,26)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1311.50"></text></g><g><title>open_verify.constprop.0 (5 samples, 0.06%)</title><rect x="45.6498%" y="1285" width="0.0614%" height="15" fill="rgb(244,125,51)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1295.50"></text></g><g><title>__read_nocancel (5 samples, 0.06%)</title><rect x="45.6498%" y="1269" width="0.0614%" height="15" fill="rgb(229,171,11)" fg:x="3720" fg:w="5"/><text x="45.8998%" y="1279.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="45.7111%" y="1509" width="0.0123%" height="15" fill="rgb(224,38,45)" fg:x="3725" fg:w="1"/><text x="45.9611%" y="1519.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1 samples, 0.01%)</title><rect x="45.7111%" y="1493" width="0.0123%" height="15" fill="rgb(237,27,7)" fg:x="3725" fg:w="1"/><text x="45.9611%" y="1503.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="45.7111%" y="1477" width="0.0123%" height="15" fill="rgb(216,52,7)" fg:x="3725" fg:w="1"/><text x="45.9611%" y="1487.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="45.7111%" y="1461" width="0.0123%" height="15" fill="rgb(243,11,11)" fg:x="3725" fg:w="1"/><text x="45.9611%" y="1471.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="45.7111%" y="1445" width="0.0123%" height="15" fill="rgb(253,167,20)" fg:x="3725" fg:w="1"/><text x="45.9611%" y="1455.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="45.7111%" y="1429" width="0.0123%" height="15" fill="rgb(215,207,5)" fg:x="3725" fg:w="1"/><text x="45.9611%" y="1439.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="45.7111%" y="1413" width="0.0123%" height="15" fill="rgb(252,127,31)" fg:x="3725" fg:w="1"/><text x="45.9611%" y="1423.50"></text></g><g><title>std::collections::hash::map::RandomState::new (1 samples, 0.01%)</title><rect x="45.7111%" y="1397" width="0.0123%" height="15" fill="rgb(209,106,27)" fg:x="3725" fg:w="1"/><text x="45.9611%" y="1407.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="45.7111%" y="1381" width="0.0123%" height="15" fill="rgb(214,220,18)" fg:x="3725" fg:w="1"/><text x="45.9611%" y="1391.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="45.7111%" y="1365" width="0.0123%" height="15" fill="rgb(237,89,12)" fg:x="3725" fg:w="1"/><text x="45.9611%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.3615%" y="1365" width="0.0123%" height="15" fill="rgb(209,167,36)" fg:x="3778" fg:w="1"/><text x="46.6115%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.3615%" y="1349" width="0.0123%" height="15" fill="rgb(243,45,22)" fg:x="3778" fg:w="1"/><text x="46.6115%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.3615%" y="1333" width="0.0123%" height="15" fill="rgb(239,2,46)" fg:x="3778" fg:w="1"/><text x="46.6115%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.3615%" y="1317" width="0.0123%" height="15" fill="rgb(241,101,0)" fg:x="3778" fg:w="1"/><text x="46.6115%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.3615%" y="1301" width="0.0123%" height="15" fill="rgb(244,34,31)" fg:x="3778" fg:w="1"/><text x="46.6115%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.3615%" y="1285" width="0.0123%" height="15" fill="rgb(248,23,22)" fg:x="3778" fg:w="1"/><text x="46.6115%" y="1295.50"></text></g><g><title>__GI___sysconf (1 samples, 0.01%)</title><rect x="46.3615%" y="1269" width="0.0123%" height="15" fill="rgb(218,27,48)" fg:x="3778" fg:w="1"/><text x="46.6115%" y="1279.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (54 samples, 0.66%)</title><rect x="45.7234%" y="1509" width="0.6627%" height="15" fill="rgb(232,78,1)" fg:x="3726" fg:w="54"/><text x="45.9734%" y="1519.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.3615%" y="1493" width="0.0245%" height="15" fill="rgb(233,169,12)" fg:x="3778" fg:w="2"/><text x="46.6115%" y="1503.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.3615%" y="1477" width="0.0245%" height="15" fill="rgb(225,222,54)" fg:x="3778" fg:w="2"/><text x="46.6115%" y="1487.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.3615%" y="1461" width="0.0245%" height="15" fill="rgb(245,126,29)" fg:x="3778" fg:w="2"/><text x="46.6115%" y="1471.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.3615%" y="1445" width="0.0245%" height="15" fill="rgb(241,63,48)" fg:x="3778" fg:w="2"/><text x="46.6115%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.3615%" y="1429" width="0.0245%" height="15" fill="rgb(235,126,38)" fg:x="3778" fg:w="2"/><text x="46.6115%" y="1439.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.3615%" y="1413" width="0.0245%" height="15" fill="rgb(232,96,49)" fg:x="3778" fg:w="2"/><text x="46.6115%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.3615%" y="1397" width="0.0245%" height="15" fill="rgb(211,146,40)" fg:x="3778" fg:w="2"/><text x="46.6115%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.3615%" y="1381" width="0.0245%" height="15" fill="rgb(247,93,44)" fg:x="3778" fg:w="2"/><text x="46.6115%" y="1391.50"></text></g><g><title>__GI___snprintf (1 samples, 0.01%)</title><rect x="46.3738%" y="1365" width="0.0123%" height="15" fill="rgb(251,41,49)" fg:x="3779" fg:w="1"/><text x="46.6238%" y="1375.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="46.3738%" y="1349" width="0.0123%" height="15" fill="rgb(218,155,12)" fg:x="3779" fg:w="1"/><text x="46.6238%" y="1359.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="46.3738%" y="1333" width="0.0123%" height="15" fill="rgb(221,161,30)" fg:x="3779" fg:w="1"/><text x="46.6238%" y="1343.50"></text></g><g><title>_XRead (1 samples, 0.01%)</title><rect x="46.3861%" y="1317" width="0.0123%" height="15" fill="rgb(221,179,11)" fg:x="3780" fg:w="1"/><text x="46.6361%" y="1327.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="46.3861%" y="1301" width="0.0123%" height="15" fill="rgb(224,170,48)" fg:x="3780" fg:w="1"/><text x="46.6361%" y="1311.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.3861%" y="1349" width="0.0245%" height="15" fill="rgb(223,117,5)" fg:x="3780" fg:w="2"/><text x="46.6361%" y="1359.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.3861%" y="1333" width="0.0245%" height="15" fill="rgb(209,52,20)" fg:x="3780" fg:w="2"/><text x="46.6361%" y="1343.50"></text></g><g><title>_XReply (1 samples, 0.01%)</title><rect x="46.3983%" y="1317" width="0.0123%" height="15" fill="rgb(209,19,41)" fg:x="3781" fg:w="1"/><text x="46.6483%" y="1327.50"></text></g><g><title>_XSend (1 samples, 0.01%)</title><rect x="46.3983%" y="1301" width="0.0123%" height="15" fill="rgb(210,177,12)" fg:x="3781" fg:w="1"/><text x="46.6483%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.4229%" y="1317" width="0.0123%" height="15" fill="rgb(211,159,37)" fg:x="3783" fg:w="1"/><text x="46.6729%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.4229%" y="1301" width="0.0123%" height="15" fill="rgb(209,20,2)" fg:x="3783" fg:w="1"/><text x="46.6729%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.4229%" y="1285" width="0.0123%" height="15" fill="rgb(244,3,46)" fg:x="3783" fg:w="1"/><text x="46.6729%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.4229%" y="1269" width="0.0123%" height="15" fill="rgb(220,94,38)" fg:x="3783" fg:w="1"/><text x="46.6729%" y="1279.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (5 samples, 0.06%)</title><rect x="46.3861%" y="1493" width="0.0614%" height="15" fill="rgb(253,14,31)" fg:x="3780" fg:w="5"/><text x="46.6361%" y="1503.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="46.3861%" y="1477" width="0.0614%" height="15" fill="rgb(234,176,13)" fg:x="3780" fg:w="5"/><text x="46.6361%" y="1487.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="46.3861%" y="1461" width="0.0614%" height="15" fill="rgb(218,62,25)" fg:x="3780" fg:w="5"/><text x="46.6361%" y="1471.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="46.3861%" y="1445" width="0.0614%" height="15" fill="rgb(216,124,40)" fg:x="3780" fg:w="5"/><text x="46.6361%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="46.3861%" y="1429" width="0.0614%" height="15" fill="rgb(228,170,12)" fg:x="3780" fg:w="5"/><text x="46.6361%" y="1439.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="46.3861%" y="1413" width="0.0614%" height="15" fill="rgb(231,226,5)" fg:x="3780" fg:w="5"/><text x="46.6361%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="46.3861%" y="1397" width="0.0614%" height="15" fill="rgb(237,122,22)" fg:x="3780" fg:w="5"/><text x="46.6361%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="46.3861%" y="1381" width="0.0614%" height="15" fill="rgb(209,185,25)" fg:x="3780" fg:w="5"/><text x="46.6361%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="46.3861%" y="1365" width="0.0614%" height="15" fill="rgb(228,200,32)" fg:x="3780" fg:w="5"/><text x="46.6361%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="46.4106%" y="1349" width="0.0368%" height="15" fill="rgb(217,140,10)" fg:x="3782" fg:w="3"/><text x="46.6606%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="46.4106%" y="1333" width="0.0368%" height="15" fill="rgb(253,17,24)" fg:x="3782" fg:w="3"/><text x="46.6606%" y="1343.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="46.4351%" y="1317" width="0.0123%" height="15" fill="rgb(212,61,6)" fg:x="3784" fg:w="1"/><text x="46.6851%" y="1327.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.4474%" y="1365" width="0.0123%" height="15" fill="rgb(205,14,25)" fg:x="3785" fg:w="1"/><text x="46.6974%" y="1375.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="46.4474%" y="1349" width="0.0123%" height="15" fill="rgb(232,69,41)" fg:x="3785" fg:w="1"/><text x="46.6974%" y="1359.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.4474%" y="1477" width="0.0245%" height="15" fill="rgb(241,106,47)" fg:x="3785" fg:w="2"/><text x="46.6974%" y="1487.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.4474%" y="1461" width="0.0245%" height="15" fill="rgb(210,213,53)" fg:x="3785" fg:w="2"/><text x="46.6974%" y="1471.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.4474%" y="1445" width="0.0245%" height="15" fill="rgb(253,175,27)" fg:x="3785" fg:w="2"/><text x="46.6974%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.4474%" y="1429" width="0.0245%" height="15" fill="rgb(211,171,24)" fg:x="3785" fg:w="2"/><text x="46.6974%" y="1439.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.4474%" y="1413" width="0.0245%" height="15" fill="rgb(229,80,7)" fg:x="3785" fg:w="2"/><text x="46.6974%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.4474%" y="1397" width="0.0245%" height="15" fill="rgb(212,46,39)" fg:x="3785" fg:w="2"/><text x="46.6974%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="46.4474%" y="1381" width="0.0245%" height="15" fill="rgb(240,80,45)" fg:x="3785" fg:w="2"/><text x="46.6974%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="46.4597%" y="1365" width="0.0123%" height="15" fill="rgb(253,177,40)" fg:x="3786" fg:w="1"/><text x="46.7097%" y="1375.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="46.4720%" y="1477" width="0.0123%" height="15" fill="rgb(249,200,15)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1487.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="46.4720%" y="1461" width="0.0123%" height="15" fill="rgb(217,78,26)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1471.50"></text></g><g><title>gfx_backend_vulkan::debug_utils_messenger_callback (1 samples, 0.01%)</title><rect x="46.4720%" y="1445" width="0.0123%" height="15" fill="rgb(254,151,32)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="46.4720%" y="1429" width="0.0123%" height="15" fill="rgb(226,165,27)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="46.4720%" y="1413" width="0.0123%" height="15" fill="rgb(250,206,4)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="46.4720%" y="1397" width="0.0123%" height="15" fill="rgb(231,229,27)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1407.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="46.4720%" y="1381" width="0.0123%" height="15" fill="rgb(239,217,8)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1391.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="46.4720%" y="1365" width="0.0123%" height="15" fill="rgb(225,204,27)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1375.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="46.4720%" y="1349" width="0.0123%" height="15" fill="rgb(230,56,32)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1359.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="46.4720%" y="1333" width="0.0123%" height="15" fill="rgb(222,56,27)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1343.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="46.4720%" y="1317" width="0.0123%" height="15" fill="rgb(253,108,27)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1327.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="46.4720%" y="1301" width="0.0123%" height="15" fill="rgb(212,87,36)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1311.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="46.4720%" y="1285" width="0.0123%" height="15" fill="rgb(247,82,36)" fg:x="3787" fg:w="1"/><text x="46.7220%" y="1295.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="46.4842%" y="1477" width="0.0123%" height="15" fill="rgb(222,143,9)" fg:x="3788" fg:w="1"/><text x="46.7342%" y="1487.50"></text></g><g><title>[libvulkan.so.1.2.194] (5 samples, 0.06%)</title><rect x="46.4474%" y="1493" width="0.0614%" height="15" fill="rgb(238,162,48)" fg:x="3785" fg:w="5"/><text x="46.6974%" y="1503.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="46.4965%" y="1477" width="0.0123%" height="15" fill="rgb(221,59,43)" fg:x="3789" fg:w="1"/><text x="46.7465%" y="1487.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="46.4965%" y="1461" width="0.0123%" height="15" fill="rgb(205,166,41)" fg:x="3789" fg:w="1"/><text x="46.7465%" y="1471.50"></text></g><g><title>[libvulkan.so.1.2.194] (11 samples, 0.13%)</title><rect x="46.3861%" y="1509" width="0.1350%" height="15" fill="rgb(241,186,40)" fg:x="3780" fg:w="11"/><text x="46.6361%" y="1519.50"></text></g><g><title>___snprintf_chk (1 samples, 0.01%)</title><rect x="46.5088%" y="1493" width="0.0123%" height="15" fill="rgb(216,119,35)" fg:x="3790" fg:w="1"/><text x="46.7588%" y="1503.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="46.5088%" y="1477" width="0.0123%" height="15" fill="rgb(208,68,38)" fg:x="3790" fg:w="1"/><text x="46.7588%" y="1487.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="46.5088%" y="1461" width="0.0123%" height="15" fill="rgb(217,113,1)" fg:x="3790" fg:w="1"/><text x="46.7588%" y="1471.50"></text></g><g><title>__strchrnul_avx2 (1 samples, 0.01%)</title><rect x="46.5088%" y="1445" width="0.0123%" height="15" fill="rgb(242,153,3)" fg:x="3790" fg:w="1"/><text x="46.7588%" y="1455.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="46.5210%" y="1509" width="0.0245%" height="15" fill="rgb(229,76,35)" fg:x="3791" fg:w="2"/><text x="46.7710%" y="1519.50"></text></g><g><title>_XEventsQueued (1 samples, 0.01%)</title><rect x="46.5456%" y="1509" width="0.0123%" height="15" fill="rgb(229,125,34)" fg:x="3793" fg:w="1"/><text x="46.7956%" y="1519.50"></text></g><g><title>_XOpenLC (1 samples, 0.01%)</title><rect x="46.5579%" y="1509" width="0.0123%" height="15" fill="rgb(238,179,36)" fg:x="3794" fg:w="1"/><text x="46.8079%" y="1519.50"></text></g><g><title>_XSend (1 samples, 0.01%)</title><rect x="46.5701%" y="1509" width="0.0123%" height="15" fill="rgb(244,183,19)" fg:x="3795" fg:w="1"/><text x="46.8201%" y="1519.50"></text></g><g><title>_XlcResolveLocaleName (2 samples, 0.02%)</title><rect x="46.5824%" y="1509" width="0.0245%" height="15" fill="rgb(216,85,49)" fg:x="3796" fg:w="2"/><text x="46.8324%" y="1519.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.02%)</title><rect x="46.5824%" y="1493" width="0.0245%" height="15" fill="rgb(208,161,47)" fg:x="3796" fg:w="2"/><text x="46.8324%" y="1503.50"></text></g><g><title>fgets (2 samples, 0.02%)</title><rect x="46.5824%" y="1477" width="0.0245%" height="15" fill="rgb(233,210,18)" fg:x="3796" fg:w="2"/><text x="46.8324%" y="1487.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="46.6069%" y="1509" width="0.0245%" height="15" fill="rgb(205,104,42)" fg:x="3798" fg:w="2"/><text x="46.8569%" y="1519.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="46.6315%" y="1509" width="0.0123%" height="15" fill="rgb(248,90,43)" fg:x="3800" fg:w="1"/><text x="46.8815%" y="1519.50"></text></g><g><title>__pthread_cond_signal (2 samples, 0.02%)</title><rect x="46.6438%" y="1509" width="0.0245%" height="15" fill="rgb(206,198,11)" fg:x="3801" fg:w="2"/><text x="46.8938%" y="1519.50"></text></g><g><title>__read_nocancel (1 samples, 0.01%)</title><rect x="46.6683%" y="1509" width="0.0123%" height="15" fill="rgb(239,165,27)" fg:x="3803" fg:w="1"/><text x="46.9183%" y="1519.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="46.6806%" y="1509" width="0.0245%" height="15" fill="rgb(246,44,32)" fg:x="3804" fg:w="2"/><text x="46.9306%" y="1519.50"></text></g><g><title>alloc::collections::btree::node::Handle&lt;alloc::collections::btree::node::NodeRef&lt;alloc::collections::btree::node::marker::Mut,K,V,alloc::collections::btree::node::marker::Leaf&gt;,alloc::collections::btree::node::marker::Edge&gt;::insert_recursing (1 samples, 0.01%)</title><rect x="46.7051%" y="1509" width="0.0123%" height="15" fill="rgb(252,65,42)" fg:x="3806" fg:w="1"/><text x="46.9551%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="46.7174%" y="1509" width="0.0245%" height="15" fill="rgb(246,197,18)" fg:x="3807" fg:w="2"/><text x="46.9674%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="46.7174%" y="1493" width="0.0245%" height="15" fill="rgb(216,192,4)" fg:x="3807" fg:w="2"/><text x="46.9674%" y="1503.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="46.7297%" y="1477" width="0.0123%" height="15" fill="rgb(208,117,10)" fg:x="3808" fg:w="1"/><text x="46.9797%" y="1487.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="46.7297%" y="1461" width="0.0123%" height="15" fill="rgb(240,61,47)" fg:x="3808" fg:w="1"/><text x="46.9797%" y="1471.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="46.7419%" y="1509" width="0.0245%" height="15" fill="rgb(228,178,21)" fg:x="3809" fg:w="2"/><text x="46.9919%" y="1519.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.01%)</title><rect x="46.7665%" y="1509" width="0.0123%" height="15" fill="rgb(219,96,54)" fg:x="3811" fg:w="1"/><text x="47.0165%" y="1519.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (2 samples, 0.02%)</title><rect x="46.7787%" y="1285" width="0.0245%" height="15" fill="rgb(250,177,24)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1295.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (2 samples, 0.02%)</title><rect x="46.7787%" y="1269" width="0.0245%" height="15" fill="rgb(242,154,46)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1279.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (2 samples, 0.02%)</title><rect x="46.7787%" y="1253" width="0.0245%" height="15" fill="rgb(226,176,29)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1263.50"></text></g><g><title>bevy_glsl_to_spirv::compile (2 samples, 0.02%)</title><rect x="46.7787%" y="1237" width="0.0245%" height="15" fill="rgb(226,29,2)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1247.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (2 samples, 0.02%)</title><rect x="46.7787%" y="1221" width="0.0245%" height="15" fill="rgb(237,104,14)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1231.50"></text></g><g><title>glslang_shader_preprocess (2 samples, 0.02%)</title><rect x="46.7787%" y="1205" width="0.0245%" height="15" fill="rgb(245,207,31)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1215.50"></text></g><g><title>glslang::TShader::preprocess (2 samples, 0.02%)</title><rect x="46.7787%" y="1189" width="0.0245%" height="15" fill="rgb(229,211,45)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1199.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="46.7787%" y="1173" width="0.0245%" height="15" fill="rgb(229,113,15)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1183.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="46.7787%" y="1157" width="0.0245%" height="15" fill="rgb(237,147,15)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1167.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="46.7787%" y="1141" width="0.0245%" height="15" fill="rgb(244,120,12)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1151.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="46.7787%" y="1125" width="0.0245%" height="15" fill="rgb(205,120,12)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1135.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="46.7787%" y="1109" width="0.0245%" height="15" fill="rgb(231,26,45)" fg:x="3812" fg:w="2"/><text x="47.0287%" y="1119.50"></text></g><g><title>glslang::TSymbolTable::copyTable (5 samples, 0.06%)</title><rect x="46.8033%" y="1141" width="0.0614%" height="15" fill="rgb(246,98,1)" fg:x="3814" fg:w="5"/><text x="47.0533%" y="1151.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (5 samples, 0.06%)</title><rect x="46.8033%" y="1125" width="0.0614%" height="15" fill="rgb(207,68,45)" fg:x="3814" fg:w="5"/><text x="47.0533%" y="1135.50"></text></g><g><title>std::_Rb_tree_increment (2 samples, 0.02%)</title><rect x="46.8401%" y="1109" width="0.0245%" height="15" fill="rgb(231,27,38)" fg:x="3817" fg:w="2"/><text x="47.0901%" y="1119.50"></text></g><g><title>async_executor::Executor::try_tick (8 samples, 0.10%)</title><rect x="46.7787%" y="1509" width="0.0982%" height="15" fill="rgb(214,223,3)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1519.50"></text></g><g><title>async_task::runnable::Runnable::run (8 samples, 0.10%)</title><rect x="46.7787%" y="1493" width="0.0982%" height="15" fill="rgb(228,195,46)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1503.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (8 samples, 0.10%)</title><rect x="46.7787%" y="1477" width="0.0982%" height="15" fill="rgb(231,100,42)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1487.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.10%)</title><rect x="46.7787%" y="1461" width="0.0982%" height="15" fill="rgb(236,53,4)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1471.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (8 samples, 0.10%)</title><rect x="46.7787%" y="1445" width="0.0982%" height="15" fill="rgb(230,152,12)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1455.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.10%)</title><rect x="46.7787%" y="1429" width="0.0982%" height="15" fill="rgb(226,101,19)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1439.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (8 samples, 0.10%)</title><rect x="46.7787%" y="1413" width="0.0982%" height="15" fill="rgb(250,149,32)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1423.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (8 samples, 0.10%)</title><rect x="46.7787%" y="1397" width="0.0982%" height="15" fill="rgb(232,178,12)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1407.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (8 samples, 0.10%)</title><rect x="46.7787%" y="1381" width="0.0982%" height="15" fill="rgb(246,151,17)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1391.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 0.10%)</title><rect x="46.7787%" y="1365" width="0.0982%" height="15" fill="rgb(252,17,51)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1375.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.10%)</title><rect x="46.7787%" y="1349" width="0.0982%" height="15" fill="rgb(250,207,23)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1359.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (8 samples, 0.10%)</title><rect x="46.7787%" y="1333" width="0.0982%" height="15" fill="rgb(205,27,5)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1343.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (8 samples, 0.10%)</title><rect x="46.7787%" y="1317" width="0.0982%" height="15" fill="rgb(224,32,19)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1327.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (8 samples, 0.10%)</title><rect x="46.7787%" y="1301" width="0.0982%" height="15" fill="rgb(247,214,40)" fg:x="3812" fg:w="8"/><text x="47.0287%" y="1311.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.07%)</title><rect x="46.8033%" y="1285" width="0.0736%" height="15" fill="rgb(239,199,17)" fg:x="3814" fg:w="6"/><text x="47.0533%" y="1295.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (6 samples, 0.07%)</title><rect x="46.8033%" y="1269" width="0.0736%" height="15" fill="rgb(251,159,9)" fg:x="3814" fg:w="6"/><text x="47.0533%" y="1279.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (6 samples, 0.07%)</title><rect x="46.8033%" y="1253" width="0.0736%" height="15" fill="rgb(225,78,32)" fg:x="3814" fg:w="6"/><text x="47.0533%" y="1263.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (6 samples, 0.07%)</title><rect x="46.8033%" y="1237" width="0.0736%" height="15" fill="rgb(206,97,47)" fg:x="3814" fg:w="6"/><text x="47.0533%" y="1247.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (6 samples, 0.07%)</title><rect x="46.8033%" y="1221" width="0.0736%" height="15" fill="rgb(227,107,4)" fg:x="3814" fg:w="6"/><text x="47.0533%" y="1231.50"></text></g><g><title>bevy_glsl_to_spirv::compile (6 samples, 0.07%)</title><rect x="46.8033%" y="1205" width="0.0736%" height="15" fill="rgb(241,146,50)" fg:x="3814" fg:w="6"/><text x="47.0533%" y="1215.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (6 samples, 0.07%)</title><rect x="46.8033%" y="1189" width="0.0736%" height="15" fill="rgb(232,92,30)" fg:x="3814" fg:w="6"/><text x="47.0533%" y="1199.50"></text></g><g><title>glslang_shader_preprocess (6 samples, 0.07%)</title><rect x="46.8033%" y="1173" width="0.0736%" height="15" fill="rgb(222,0,40)" fg:x="3814" fg:w="6"/><text x="47.0533%" y="1183.50"></text></g><g><title>glslang::TShader::preprocess (6 samples, 0.07%)</title><rect x="46.8033%" y="1157" width="0.0736%" height="15" fill="rgb(219,54,33)" fg:x="3814" fg:w="6"/><text x="47.0533%" y="1167.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="46.8646%" y="1141" width="0.0123%" height="15" fill="rgb(226,209,28)" fg:x="3819" fg:w="1"/><text x="47.1146%" y="1151.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="46.8646%" y="1125" width="0.0123%" height="15" fill="rgb(254,205,35)" fg:x="3819" fg:w="1"/><text x="47.1146%" y="1135.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="46.8646%" y="1109" width="0.0123%" height="15" fill="rgb(230,159,3)" fg:x="3819" fg:w="1"/><text x="47.1146%" y="1119.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="46.8646%" y="1093" width="0.0123%" height="15" fill="rgb(232,190,24)" fg:x="3819" fg:w="1"/><text x="47.1146%" y="1103.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="46.8646%" y="1077" width="0.0123%" height="15" fill="rgb(217,227,44)" fg:x="3819" fg:w="1"/><text x="47.1146%" y="1087.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="46.8646%" y="1061" width="0.0123%" height="15" fill="rgb(236,211,1)" fg:x="3819" fg:w="1"/><text x="47.1146%" y="1071.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (4 samples, 0.05%)</title><rect x="46.8769%" y="1509" width="0.0491%" height="15" fill="rgb(250,127,46)" fg:x="3820" fg:w="4"/><text x="47.1269%" y="1519.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.04%)</title><rect x="46.9628%" y="1157" width="0.0368%" height="15" fill="rgb(229,213,6)" fg:x="3827" fg:w="3"/><text x="47.2128%" y="1167.50"></text></g><g><title>glslang::TBuiltIns::relateTabledBuiltins (10 samples, 0.12%)</title><rect x="46.9260%" y="1189" width="0.1227%" height="15" fill="rgb(237,15,36)" fg:x="3824" fg:w="10"/><text x="47.1760%" y="1199.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (10 samples, 0.12%)</title><rect x="46.9260%" y="1173" width="0.1227%" height="15" fill="rgb(213,131,41)" fg:x="3824" fg:w="10"/><text x="47.1760%" y="1183.50"></text></g><g><title>std::_Rb_tree_increment (4 samples, 0.05%)</title><rect x="46.9996%" y="1157" width="0.0491%" height="15" fill="rgb(225,82,44)" fg:x="3830" fg:w="4"/><text x="47.2496%" y="1167.50"></text></g><g><title>__memchr_avx2 (1 samples, 0.01%)</title><rect x="47.0978%" y="1173" width="0.0123%" height="15" fill="rgb(249,42,11)" fg:x="3838" fg:w="1"/><text x="47.3478%" y="1183.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="47.1101%" y="1173" width="0.0123%" height="15" fill="rgb(253,11,29)" fg:x="3839" fg:w="1"/><text x="47.3601%" y="1183.50"></text></g><g><title>glslang::TFunction::relateToOperator (1 samples, 0.01%)</title><rect x="47.1223%" y="1173" width="0.0123%" height="15" fill="rgb(206,8,54)" fg:x="3840" fg:w="1"/><text x="47.3723%" y="1183.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (14 samples, 0.17%)</title><rect x="47.0487%" y="1189" width="0.1718%" height="15" fill="rgb(222,186,2)" fg:x="3834" fg:w="14"/><text x="47.2987%" y="1199.50"></text></g><g><title>std::_Rb_tree_increment (7 samples, 0.09%)</title><rect x="47.1346%" y="1173" width="0.0859%" height="15" fill="rgb(221,206,53)" fg:x="3841" fg:w="7"/><text x="47.3846%" y="1183.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (26 samples, 0.32%)</title><rect x="46.9260%" y="1205" width="0.3191%" height="15" fill="rgb(230,150,21)" fg:x="3824" fg:w="26"/><text x="47.1760%" y="1215.50"></text></g><g><title>glslang::TSymbolTableLevel::setFunctionExtensions (2 samples, 0.02%)</title><rect x="47.2205%" y="1189" width="0.0245%" height="15" fill="rgb(253,202,10)" fg:x="3848" fg:w="2"/><text x="47.4705%" y="1199.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="47.2328%" y="1173" width="0.0123%" height="15" fill="rgb(238,109,40)" fg:x="3849" fg:w="1"/><text x="47.4828%" y="1183.50"></text></g><g><title>glslang::TPoolAllocator::~TPoolAllocator (1 samples, 0.01%)</title><rect x="47.2451%" y="1205" width="0.0123%" height="15" fill="rgb(247,120,22)" fg:x="3850" fg:w="1"/><text x="47.4951%" y="1215.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.2451%" y="1189" width="0.0123%" height="15" fill="rgb(207,43,30)" fg:x="3850" fg:w="1"/><text x="47.4951%" y="1199.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.2451%" y="1173" width="0.0123%" height="15" fill="rgb(213,211,24)" fg:x="3850" fg:w="1"/><text x="47.4951%" y="1183.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (28 samples, 0.34%)</title><rect x="46.9260%" y="1317" width="0.3436%" height="15" fill="rgb(239,73,39)" fg:x="3824" fg:w="28"/><text x="47.1760%" y="1327.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (28 samples, 0.34%)</title><rect x="46.9260%" y="1301" width="0.3436%" height="15" fill="rgb(245,182,19)" fg:x="3824" fg:w="28"/><text x="47.1760%" y="1311.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (28 samples, 0.34%)</title><rect x="46.9260%" y="1285" width="0.3436%" height="15" fill="rgb(247,143,26)" fg:x="3824" fg:w="28"/><text x="47.1760%" y="1295.50"></text></g><g><title>bevy_glsl_to_spirv::compile (28 samples, 0.34%)</title><rect x="46.9260%" y="1269" width="0.3436%" height="15" fill="rgb(228,191,23)" fg:x="3824" fg:w="28"/><text x="47.1760%" y="1279.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (28 samples, 0.34%)</title><rect x="46.9260%" y="1253" width="0.3436%" height="15" fill="rgb(253,165,31)" fg:x="3824" fg:w="28"/><text x="47.1760%" y="1263.50"></text></g><g><title>glslang_shader_preprocess (28 samples, 0.34%)</title><rect x="46.9260%" y="1237" width="0.3436%" height="15" fill="rgb(234,138,20)" fg:x="3824" fg:w="28"/><text x="47.1760%" y="1247.50"></text></g><g><title>glslang::TShader::preprocess (28 samples, 0.34%)</title><rect x="46.9260%" y="1221" width="0.3436%" height="15" fill="rgb(218,191,29)" fg:x="3824" fg:w="28"/><text x="47.1760%" y="1231.50"></text></g><g><title>glslang::TSymbolTable::copyTable (1 samples, 0.01%)</title><rect x="47.2573%" y="1205" width="0.0123%" height="15" fill="rgb(221,157,19)" fg:x="3851" fg:w="1"/><text x="47.5073%" y="1215.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (1 samples, 0.01%)</title><rect x="47.2573%" y="1189" width="0.0123%" height="15" fill="rgb(237,26,42)" fg:x="3851" fg:w="1"/><text x="47.5073%" y="1199.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (1 samples, 0.01%)</title><rect x="47.2573%" y="1173" width="0.0123%" height="15" fill="rgb(220,163,24)" fg:x="3851" fg:w="1"/><text x="47.5073%" y="1183.50"></text></g><g><title>bevy_render::renderer::render_resource_context::RenderResourceContext::reflect_pipeline_layout (1 samples, 0.01%)</title><rect x="47.2696%" y="1317" width="0.0123%" height="15" fill="rgb(242,115,20)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="47.2696%" y="1301" width="0.0123%" height="15" fill="rgb(210,206,9)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="47.2696%" y="1285" width="0.0123%" height="15" fill="rgb(208,71,17)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1295.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="47.2696%" y="1269" width="0.0123%" height="15" fill="rgb(233,7,5)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="47.2696%" y="1253" width="0.0123%" height="15" fill="rgb(207,92,33)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1263.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="47.2696%" y="1237" width="0.0123%" height="15" fill="rgb(218,87,9)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="47.2696%" y="1221" width="0.0123%" height="15" fill="rgb(219,47,37)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="47.2696%" y="1205" width="0.0123%" height="15" fill="rgb(221,152,34)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1215.50"></text></g><g><title>bevy_render::renderer::render_resource_context::RenderResourceContext::reflect_pipeline_layout::{{closure}} (1 samples, 0.01%)</title><rect x="47.2696%" y="1189" width="0.0123%" height="15" fill="rgb(235,176,21)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1199.50"></text></g><g><title>bevy_render::shader::shader::Shader::reflect_layout (1 samples, 0.01%)</title><rect x="47.2696%" y="1173" width="0.0123%" height="15" fill="rgb(232,212,21)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1183.50"></text></g><g><title>bevy_render::shader::shader_reflect::&lt;impl bevy_render::shader::ShaderLayout&gt;::from_spirv (1 samples, 0.01%)</title><rect x="47.2696%" y="1157" width="0.0123%" height="15" fill="rgb(245,82,39)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1167.50"></text></g><g><title>spirv_reflect::ShaderModule::enumerate_descriptor_sets (1 samples, 0.01%)</title><rect x="47.2696%" y="1141" width="0.0123%" height="15" fill="rgb(241,52,51)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="47.2696%" y="1125" width="0.0123%" height="15" fill="rgb(219,91,24)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="47.2696%" y="1109" width="0.0123%" height="15" fill="rgb(241,142,12)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="47.2696%" y="1093" width="0.0123%" height="15" fill="rgb(230,27,9)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="47.2696%" y="1077" width="0.0123%" height="15" fill="rgb(249,181,32)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="47.2696%" y="1061" width="0.0123%" height="15" fill="rgb(230,107,3)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="47.2696%" y="1045" width="0.0123%" height="15" fill="rgb(246,204,14)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="47.2696%" y="1029" width="0.0123%" height="15" fill="rgb(213,192,47)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="47.2696%" y="1013" width="0.0123%" height="15" fill="rgb(240,44,36)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1023.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="47.2696%" y="997" width="0.0123%" height="15" fill="rgb(244,209,38)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="1007.50"></text></g><g><title>spirv_reflect::ShaderModule::enumerate_descriptor_sets::{{closure}} (1 samples, 0.01%)</title><rect x="47.2696%" y="981" width="0.0123%" height="15" fill="rgb(219,34,37)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="991.50"></text></g><g><title>spirv_reflect::convert::ffi_to_descriptor_set (1 samples, 0.01%)</title><rect x="47.2696%" y="965" width="0.0123%" height="15" fill="rgb(210,28,6)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="47.2696%" y="949" width="0.0123%" height="15" fill="rgb(244,110,52)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="959.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="47.2696%" y="933" width="0.0123%" height="15" fill="rgb(254,124,47)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="47.2696%" y="917" width="0.0123%" height="15" fill="rgb(254,110,13)" fg:x="3852" fg:w="1"/><text x="47.5196%" y="927.50"></text></g><g><title>__memchr_avx2 (2 samples, 0.02%)</title><rect x="47.3064%" y="1125" width="0.0245%" height="15" fill="rgb(252,57,21)" fg:x="3855" fg:w="2"/><text x="47.5564%" y="1135.50"></text></g><g><title>glslang::TBuiltIns::relateTabledBuiltins (6 samples, 0.07%)</title><rect x="47.2819%" y="1157" width="0.0736%" height="15" fill="rgb(242,60,45)" fg:x="3853" fg:w="6"/><text x="47.5319%" y="1167.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (6 samples, 0.07%)</title><rect x="47.2819%" y="1141" width="0.0736%" height="15" fill="rgb(234,49,30)" fg:x="3853" fg:w="6"/><text x="47.5319%" y="1151.50"></text></g><g><title>__strlen_avx2 (2 samples, 0.02%)</title><rect x="47.3310%" y="1125" width="0.0245%" height="15" fill="rgb(218,98,6)" fg:x="3857" fg:w="2"/><text x="47.5810%" y="1135.50"></text></g><g><title>[engine] (1 samples, 0.01%)</title><rect x="47.4782%" y="1141" width="0.0123%" height="15" fill="rgb(220,174,29)" fg:x="3869" fg:w="1"/><text x="47.7282%" y="1151.50"></text></g><g><title>__memchr_avx2 (2 samples, 0.02%)</title><rect x="47.4905%" y="1141" width="0.0245%" height="15" fill="rgb(236,163,23)" fg:x="3870" fg:w="2"/><text x="47.7405%" y="1151.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="47.5150%" y="1141" width="0.0123%" height="15" fill="rgb(242,114,45)" fg:x="3872" fg:w="1"/><text x="47.7650%" y="1151.50"></text></g><g><title>__strlen_avx2 (2 samples, 0.02%)</title><rect x="47.5273%" y="1141" width="0.0245%" height="15" fill="rgb(232,10,53)" fg:x="3873" fg:w="2"/><text x="47.7773%" y="1151.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (20 samples, 0.25%)</title><rect x="47.3555%" y="1157" width="0.2454%" height="15" fill="rgb(245,108,29)" fg:x="3859" fg:w="20"/><text x="47.6055%" y="1167.50"></text></g><g><title>std::_Rb_tree_increment (4 samples, 0.05%)</title><rect x="47.5518%" y="1141" width="0.0491%" height="15" fill="rgb(240,89,53)" fg:x="3875" fg:w="4"/><text x="47.8018%" y="1151.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (27 samples, 0.33%)</title><rect x="47.2819%" y="1173" width="0.3313%" height="15" fill="rgb(226,60,45)" fg:x="3853" fg:w="27"/><text x="47.5319%" y="1183.50"></text></g><g><title>glslang::TSymbolTableLevel::setFunctionExtensions (1 samples, 0.01%)</title><rect x="47.6009%" y="1157" width="0.0123%" height="15" fill="rgb(230,41,44)" fg:x="3879" fg:w="1"/><text x="47.8509%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (57 samples, 0.70%)</title><rect x="46.9260%" y="1509" width="0.6995%" height="15" fill="rgb(230,26,20)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1519.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 0.70%)</title><rect x="46.9260%" y="1493" width="0.6995%" height="15" fill="rgb(237,170,32)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1503.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (57 samples, 0.70%)</title><rect x="46.9260%" y="1477" width="0.6995%" height="15" fill="rgb(212,35,42)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1487.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (57 samples, 0.70%)</title><rect x="46.9260%" y="1461" width="0.6995%" height="15" fill="rgb(227,31,34)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1471.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (57 samples, 0.70%)</title><rect x="46.9260%" y="1445" width="0.6995%" height="15" fill="rgb(216,19,18)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1455.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (57 samples, 0.70%)</title><rect x="46.9260%" y="1429" width="0.6995%" height="15" fill="rgb(211,133,42)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1439.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (57 samples, 0.70%)</title><rect x="46.9260%" y="1413" width="0.6995%" height="15" fill="rgb(244,66,13)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1423.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (57 samples, 0.70%)</title><rect x="46.9260%" y="1397" width="0.6995%" height="15" fill="rgb(218,185,50)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1407.50"></text></g><g><title>core::ops::function::Fn::call (57 samples, 0.70%)</title><rect x="46.9260%" y="1381" width="0.6995%" height="15" fill="rgb(219,149,13)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1391.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (57 samples, 0.70%)</title><rect x="46.9260%" y="1365" width="0.6995%" height="15" fill="rgb(221,125,0)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1375.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (57 samples, 0.70%)</title><rect x="46.9260%" y="1349" width="0.6995%" height="15" fill="rgb(247,126,27)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1359.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (57 samples, 0.70%)</title><rect x="46.9260%" y="1333" width="0.6995%" height="15" fill="rgb(250,138,30)" fg:x="3824" fg:w="57"/><text x="47.1760%" y="1343.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (28 samples, 0.34%)</title><rect x="47.2819%" y="1317" width="0.3436%" height="15" fill="rgb(230,151,9)" fg:x="3853" fg:w="28"/><text x="47.5319%" y="1327.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (28 samples, 0.34%)</title><rect x="47.2819%" y="1301" width="0.3436%" height="15" fill="rgb(233,80,38)" fg:x="3853" fg:w="28"/><text x="47.5319%" y="1311.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (28 samples, 0.34%)</title><rect x="47.2819%" y="1285" width="0.3436%" height="15" fill="rgb(232,68,43)" fg:x="3853" fg:w="28"/><text x="47.5319%" y="1295.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (28 samples, 0.34%)</title><rect x="47.2819%" y="1269" width="0.3436%" height="15" fill="rgb(254,5,50)" fg:x="3853" fg:w="28"/><text x="47.5319%" y="1279.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (28 samples, 0.34%)</title><rect x="47.2819%" y="1253" width="0.3436%" height="15" fill="rgb(225,45,5)" fg:x="3853" fg:w="28"/><text x="47.5319%" y="1263.50"></text></g><g><title>bevy_glsl_to_spirv::compile (28 samples, 0.34%)</title><rect x="47.2819%" y="1237" width="0.3436%" height="15" fill="rgb(239,22,3)" fg:x="3853" fg:w="28"/><text x="47.5319%" y="1247.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (28 samples, 0.34%)</title><rect x="47.2819%" y="1221" width="0.3436%" height="15" fill="rgb(243,129,0)" fg:x="3853" fg:w="28"/><text x="47.5319%" y="1231.50"></text></g><g><title>glslang_shader_preprocess (28 samples, 0.34%)</title><rect x="47.2819%" y="1205" width="0.3436%" height="15" fill="rgb(223,164,0)" fg:x="3853" fg:w="28"/><text x="47.5319%" y="1215.50"></text></g><g><title>glslang::TShader::preprocess (28 samples, 0.34%)</title><rect x="47.2819%" y="1189" width="0.3436%" height="15" fill="rgb(221,46,29)" fg:x="3853" fg:w="28"/><text x="47.5319%" y="1199.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="47.6132%" y="1173" width="0.0123%" height="15" fill="rgb(205,97,47)" fg:x="3880" fg:w="1"/><text x="47.8632%" y="1183.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="47.6132%" y="1157" width="0.0123%" height="15" fill="rgb(249,14,8)" fg:x="3880" fg:w="1"/><text x="47.8632%" y="1167.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="47.6132%" y="1141" width="0.0123%" height="15" fill="rgb(216,77,3)" fg:x="3880" fg:w="1"/><text x="47.8632%" y="1151.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="47.6132%" y="1125" width="0.0123%" height="15" fill="rgb(206,168,54)" fg:x="3880" fg:w="1"/><text x="47.8632%" y="1135.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="47.6132%" y="1109" width="0.0123%" height="15" fill="rgb(236,3,41)" fg:x="3880" fg:w="1"/><text x="47.8632%" y="1119.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="47.6132%" y="1093" width="0.0123%" height="15" fill="rgb(231,132,24)" fg:x="3880" fg:w="1"/><text x="47.8632%" y="1103.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="47.6132%" y="1077" width="0.0123%" height="15" fill="rgb(227,221,40)" fg:x="3880" fg:w="1"/><text x="47.8632%" y="1087.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::extend (1 samples, 0.01%)</title><rect x="47.6255%" y="1509" width="0.0123%" height="15" fill="rgb(233,151,11)" fg:x="3881" fg:w="1"/><text x="47.8755%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;::drain::{{closure}}&gt;,core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="47.6255%" y="1493" width="0.0123%" height="15" fill="rgb(247,81,35)" fg:x="3881" fg:w="1"/><text x="47.8755%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="47.6255%" y="1477" width="0.0123%" height="15" fill="rgb(243,128,48)" fg:x="3881" fg:w="1"/><text x="47.8755%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;::drain::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="47.6255%" y="1461" width="0.0123%" height="15" fill="rgb(253,16,10)" fg:x="3881" fg:w="1"/><text x="47.8755%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::mesh::mesh::Mesh&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="47.6255%" y="1445" width="0.0123%" height="15" fill="rgb(228,67,27)" fg:x="3881" fg:w="1"/><text x="47.8755%" y="1455.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (4 samples, 0.05%)</title><rect x="47.6377%" y="1509" width="0.0491%" height="15" fill="rgb(231,105,25)" fg:x="3882" fg:w="4"/><text x="47.8877%" y="1519.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (2 samples, 0.02%)</title><rect x="47.6623%" y="1493" width="0.0245%" height="15" fill="rgb(213,166,47)" fg:x="3884" fg:w="2"/><text x="47.9123%" y="1503.50"></text></g><g><title>bevy_diagnostic::frame_time_diagnostics_plugin::FrameTimeDiagnosticsPlugin::diagnostic_system (1 samples, 0.01%)</title><rect x="47.6868%" y="1509" width="0.0123%" height="15" fill="rgb(209,27,10)" fg:x="3886" fg:w="1"/><text x="47.9368%" y="1519.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::add_write (1 samples, 0.01%)</title><rect x="47.6991%" y="1509" width="0.0123%" height="15" fill="rgb(241,44,30)" fg:x="3887" fg:w="1"/><text x="47.9491%" y="1519.50"></text></g><g><title>bevy_scene::scene_spawner::scene_spawner_system::{{closure}} (1 samples, 0.01%)</title><rect x="47.7236%" y="1493" width="0.0123%" height="15" fill="rgb(223,216,15)" fg:x="3889" fg:w="1"/><text x="47.9736%" y="1503.50"></text></g><g><title>bevy_app::event::ManualEventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="47.7236%" y="1477" width="0.0123%" height="15" fill="rgb(227,14,7)" fg:x="3889" fg:w="1"/><text x="47.9736%" y="1487.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (1 samples, 0.01%)</title><rect x="47.7359%" y="1477" width="0.0123%" height="15" fill="rgb(237,14,5)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1487.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::prepare (1 samples, 0.01%)</title><rect x="47.7359%" y="1461" width="0.0123%" height="15" fill="rgb(232,14,36)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1471.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::init_pipeline (1 samples, 0.01%)</title><rect x="47.7359%" y="1445" width="0.0123%" height="15" fill="rgb(234,0,38)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1455.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (1 samples, 0.01%)</title><rect x="47.7359%" y="1429" width="0.0123%" height="15" fill="rgb(207,170,14)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1439.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (1 samples, 0.01%)</title><rect x="47.7359%" y="1413" width="0.0123%" height="15" fill="rgb(252,45,13)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1423.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (1 samples, 0.01%)</title><rect x="47.7359%" y="1397" width="0.0123%" height="15" fill="rgb(213,142,7)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1407.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (1 samples, 0.01%)</title><rect x="47.7359%" y="1381" width="0.0123%" height="15" fill="rgb(216,157,23)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1391.50"></text></g><g><title>bevy_glsl_to_spirv::compile (1 samples, 0.01%)</title><rect x="47.7359%" y="1365" width="0.0123%" height="15" fill="rgb(212,145,33)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1375.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (1 samples, 0.01%)</title><rect x="47.7359%" y="1349" width="0.0123%" height="15" fill="rgb(233,26,13)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1359.50"></text></g><g><title>glslang_shader_preprocess (1 samples, 0.01%)</title><rect x="47.7359%" y="1333" width="0.0123%" height="15" fill="rgb(219,196,19)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1343.50"></text></g><g><title>glslang::TShader::preprocess (1 samples, 0.01%)</title><rect x="47.7359%" y="1317" width="0.0123%" height="15" fill="rgb(246,56,21)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1327.50"></text></g><g><title>glslang::TBuiltIns::initialize (1 samples, 0.01%)</title><rect x="47.7359%" y="1301" width="0.0123%" height="15" fill="rgb(222,28,53)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1311.50"></text></g><g><title>glslang::TBuiltIns::add2ndGenerationSamplingImaging (1 samples, 0.01%)</title><rect x="47.7359%" y="1285" width="0.0123%" height="15" fill="rgb(224,5,27)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1295.50"></text></g><g><title>glslang::TBuiltIns::addImageFunctions (1 samples, 0.01%)</title><rect x="47.7359%" y="1269" width="0.0123%" height="15" fill="rgb(220,153,33)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1279.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.01%)</title><rect x="47.7359%" y="1253" width="0.0123%" height="15" fill="rgb(226,58,19)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1263.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="47.7359%" y="1237" width="0.0123%" height="15" fill="rgb(239,112,23)" fg:x="3890" fg:w="1"/><text x="47.9859%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::bind_graphics_pipeline (1 samples, 0.01%)</title><rect x="47.7482%" y="1333" width="0.0123%" height="15" fill="rgb(251,213,20)" fg:x="3891" fg:w="1"/><text x="47.9982%" y="1343.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_bind_pipeline (1 samples, 0.01%)</title><rect x="47.7482%" y="1317" width="0.0123%" height="15" fill="rgb(215,181,21)" fg:x="3891" fg:w="1"/><text x="47.9982%" y="1327.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_bind_pipeline (1 samples, 0.01%)</title><rect x="47.7482%" y="1301" width="0.0123%" height="15" fill="rgb(240,8,35)" fg:x="3891" fg:w="1"/><text x="47.9982%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="47.7482%" y="1285" width="0.0123%" height="15" fill="rgb(232,203,3)" fg:x="3891" fg:w="1"/><text x="47.9982%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="47.7482%" y="1269" width="0.0123%" height="15" fill="rgb(214,202,43)" fg:x="3891" fg:w="1"/><text x="47.9982%" y="1279.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (2 samples, 0.02%)</title><rect x="47.7605%" y="1333" width="0.0245%" height="15" fill="rgb(254,35,11)" fg:x="3892" fg:w="2"/><text x="48.0105%" y="1343.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (2 samples, 0.02%)</title><rect x="47.7605%" y="1317" width="0.0245%" height="15" fill="rgb(239,173,13)" fg:x="3892" fg:w="2"/><text x="48.0105%" y="1327.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (2 samples, 0.02%)</title><rect x="47.7605%" y="1301" width="0.0245%" height="15" fill="rgb(220,141,0)" fg:x="3892" fg:w="2"/><text x="48.0105%" y="1311.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (2 samples, 0.02%)</title><rect x="47.7605%" y="1285" width="0.0245%" height="15" fill="rgb(210,98,12)" fg:x="3892" fg:w="2"/><text x="48.0105%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="47.7605%" y="1269" width="0.0245%" height="15" fill="rgb(254,153,22)" fg:x="3892" fg:w="2"/><text x="48.0105%" y="1279.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="47.7605%" y="1253" width="0.0245%" height="15" fill="rgb(247,223,17)" fg:x="3892" fg:w="2"/><text x="48.0105%" y="1263.50"></text></g><g><title>wgpu_core::command::bind::Binder::new (1 samples, 0.01%)</title><rect x="47.7850%" y="1333" width="0.0123%" height="15" fill="rgb(246,56,7)" fg:x="3894" fg:w="1"/><text x="48.0350%" y="1343.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="47.7850%" y="1317" width="0.0123%" height="15" fill="rgb(240,226,12)" fg:x="3894" fg:w="1"/><text x="48.0350%" y="1327.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="47.7850%" y="1301" width="0.0123%" height="15" fill="rgb(205,87,46)" fg:x="3894" fg:w="1"/><text x="48.0350%" y="1311.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.01%)</title><rect x="47.7973%" y="1333" width="0.0123%" height="15" fill="rgb(245,214,51)" fg:x="3895" fg:w="1"/><text x="48.0473%" y="1343.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="47.7973%" y="1317" width="0.0123%" height="15" fill="rgb(223,172,33)" fg:x="3895" fg:w="1"/><text x="48.0473%" y="1327.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="47.7973%" y="1301" width="0.0123%" height="15" fill="rgb(227,203,34)" fg:x="3895" fg:w="1"/><text x="48.0473%" y="1311.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="47.7973%" y="1285" width="0.0123%" height="15" fill="rgb(248,143,44)" fg:x="3895" fg:w="1"/><text x="48.0473%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="47.7973%" y="1269" width="0.0123%" height="15" fill="rgb(226,162,5)" fg:x="3895" fg:w="1"/><text x="48.0473%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="47.7973%" y="1253" width="0.0123%" height="15" fill="rgb(211,143,1)" fg:x="3895" fg:w="1"/><text x="48.0473%" y="1263.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (1 samples, 0.01%)</title><rect x="47.8095%" y="1333" width="0.0123%" height="15" fill="rgb(224,96,15)" fg:x="3896" fg:w="1"/><text x="48.0595%" y="1343.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.01%)</title><rect x="47.8095%" y="1317" width="0.0123%" height="15" fill="rgb(222,4,38)" fg:x="3896" fg:w="1"/><text x="48.0595%" y="1327.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (7 samples, 0.09%)</title><rect x="47.7482%" y="1461" width="0.0859%" height="15" fill="rgb(253,228,15)" fg:x="3891" fg:w="7"/><text x="47.9982%" y="1471.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (7 samples, 0.09%)</title><rect x="47.7482%" y="1445" width="0.0859%" height="15" fill="rgb(242,194,12)" fg:x="3891" fg:w="7"/><text x="47.9982%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (7 samples, 0.09%)</title><rect x="47.7482%" y="1429" width="0.0859%" height="15" fill="rgb(214,177,31)" fg:x="3891" fg:w="7"/><text x="47.9982%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (7 samples, 0.09%)</title><rect x="47.7482%" y="1413" width="0.0859%" height="15" fill="rgb(226,58,51)" fg:x="3891" fg:w="7"/><text x="47.9982%" y="1423.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (7 samples, 0.09%)</title><rect x="47.7482%" y="1397" width="0.0859%" height="15" fill="rgb(250,119,16)" fg:x="3891" fg:w="7"/><text x="47.9982%" y="1407.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (7 samples, 0.09%)</title><rect x="47.7482%" y="1381" width="0.0859%" height="15" fill="rgb(223,128,53)" fg:x="3891" fg:w="7"/><text x="47.9982%" y="1391.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (7 samples, 0.09%)</title><rect x="47.7482%" y="1365" width="0.0859%" height="15" fill="rgb(251,199,15)" fg:x="3891" fg:w="7"/><text x="47.9982%" y="1375.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (7 samples, 0.09%)</title><rect x="47.7482%" y="1349" width="0.0859%" height="15" fill="rgb(235,168,42)" fg:x="3891" fg:w="7"/><text x="47.9982%" y="1359.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (1 samples, 0.01%)</title><rect x="47.8218%" y="1333" width="0.0123%" height="15" fill="rgb(250,210,17)" fg:x="3897" fg:w="1"/><text x="48.0718%" y="1343.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (1 samples, 0.01%)</title><rect x="47.8218%" y="1317" width="0.0123%" height="15" fill="rgb(226,36,41)" fg:x="3897" fg:w="1"/><text x="48.0718%" y="1327.50"></text></g><g><title>&lt;wgpu_core::track::Resource&lt;S&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="47.8218%" y="1301" width="0.0123%" height="15" fill="rgb(225,87,10)" fg:x="3897" fg:w="1"/><text x="48.0718%" y="1311.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="47.8218%" y="1285" width="0.0123%" height="15" fill="rgb(228,83,9)" fg:x="3897" fg:w="1"/><text x="48.0718%" y="1295.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="47.8218%" y="1269" width="0.0123%" height="15" fill="rgb(225,16,36)" fg:x="3897" fg:w="1"/><text x="48.0718%" y="1279.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="47.8218%" y="1253" width="0.0123%" height="15" fill="rgb(242,198,13)" fg:x="3897" fg:w="1"/><text x="48.0718%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="47.8341%" y="1253" width="0.0245%" height="15" fill="rgb(239,25,51)" fg:x="3898" fg:w="2"/><text x="48.0841%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="47.8464%" y="1237" width="0.0123%" height="15" fill="rgb(239,28,37)" fg:x="3899" fg:w="1"/><text x="48.0964%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::end_render_pass (3 samples, 0.04%)</title><rect x="47.8341%" y="1333" width="0.0368%" height="15" fill="rgb(234,70,17)" fg:x="3898" fg:w="3"/><text x="48.0841%" y="1343.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_end_render_pass (3 samples, 0.04%)</title><rect x="47.8341%" y="1317" width="0.0368%" height="15" fill="rgb(231,215,53)" fg:x="3898" fg:w="3"/><text x="48.0841%" y="1327.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_end_render_pass (3 samples, 0.04%)</title><rect x="47.8341%" y="1301" width="0.0368%" height="15" fill="rgb(218,140,42)" fg:x="3898" fg:w="3"/><text x="48.0841%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="47.8341%" y="1285" width="0.0368%" height="15" fill="rgb(233,227,45)" fg:x="3898" fg:w="3"/><text x="48.0841%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="47.8341%" y="1269" width="0.0368%" height="15" fill="rgb(225,189,21)" fg:x="3898" fg:w="3"/><text x="48.0841%" y="1279.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.8586%" y="1253" width="0.0123%" height="15" fill="rgb(237,176,54)" fg:x="3900" fg:w="1"/><text x="48.1086%" y="1263.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.8586%" y="1237" width="0.0123%" height="15" fill="rgb(215,131,46)" fg:x="3900" fg:w="1"/><text x="48.1086%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="47.8709%" y="1333" width="0.0123%" height="15" fill="rgb(218,95,20)" fg:x="3901" fg:w="1"/><text x="48.1209%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="47.8709%" y="1317" width="0.0123%" height="15" fill="rgb(208,198,12)" fg:x="3901" fg:w="1"/><text x="48.1209%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="47.8709%" y="1301" width="0.0123%" height="15" fill="rgb(239,107,50)" fg:x="3901" fg:w="1"/><text x="48.1209%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="47.8709%" y="1285" width="0.0123%" height="15" fill="rgb(240,217,37)" fg:x="3901" fg:w="1"/><text x="48.1209%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="47.8709%" y="1269" width="0.0123%" height="15" fill="rgb(242,197,49)" fg:x="3901" fg:w="1"/><text x="48.1209%" y="1279.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="47.8709%" y="1253" width="0.0123%" height="15" fill="rgb(219,171,17)" fg:x="3901" fg:w="1"/><text x="48.1209%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="47.8709%" y="1237" width="0.0123%" height="15" fill="rgb(209,81,40)" fg:x="3901" fg:w="1"/><text x="48.1209%" y="1247.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="47.8709%" y="1221" width="0.0123%" height="15" fill="rgb(237,156,30)" fg:x="3901" fg:w="1"/><text x="48.1209%" y="1231.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="47.8709%" y="1205" width="0.0123%" height="15" fill="rgb(212,127,16)" fg:x="3901" fg:w="1"/><text x="48.1209%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (1 samples, 0.01%)</title><rect x="47.8832%" y="1333" width="0.0123%" height="15" fill="rgb(226,66,32)" fg:x="3902" fg:w="1"/><text x="48.1332%" y="1343.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;wgpu_core::track::texture::TextureState&gt;&gt; (1 samples, 0.01%)</title><rect x="47.8832%" y="1317" width="0.0123%" height="15" fill="rgb(245,22,46)" fg:x="3902" fg:w="1"/><text x="48.1332%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::texture::TextureState&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="47.8832%" y="1301" width="0.0123%" height="15" fill="rgb(210,112,21)" fg:x="3902" fg:w="1"/><text x="48.1332%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::texture::TextureState&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="47.8832%" y="1285" width="0.0123%" height="15" fill="rgb(207,118,39)" fg:x="3902" fg:w="1"/><text x="48.1332%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::texture::TextureState&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="47.8832%" y="1269" width="0.0123%" height="15" fill="rgb(205,206,35)" fg:x="3902" fg:w="1"/><text x="48.1332%" y="1279.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="47.8832%" y="1253" width="0.0123%" height="15" fill="rgb(222,120,2)" fg:x="3902" fg:w="1"/><text x="48.1332%" y="1263.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="47.8832%" y="1237" width="0.0123%" height="15" fill="rgb(205,38,18)" fg:x="3902" fg:w="1"/><text x="48.1332%" y="1247.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (3 samples, 0.04%)</title><rect x="47.8954%" y="1333" width="0.0368%" height="15" fill="rgb(226,61,2)" fg:x="3903" fg:w="3"/><text x="48.1454%" y="1343.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (3 samples, 0.04%)</title><rect x="47.8954%" y="1317" width="0.0368%" height="15" fill="rgb(242,161,23)" fg:x="3903" fg:w="3"/><text x="48.1454%" y="1327.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (3 samples, 0.04%)</title><rect x="47.8954%" y="1301" width="0.0368%" height="15" fill="rgb(213,13,52)" fg:x="3903" fg:w="3"/><text x="48.1454%" y="1311.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (3 samples, 0.04%)</title><rect x="47.8954%" y="1285" width="0.0368%" height="15" fill="rgb(246,209,47)" fg:x="3903" fg:w="3"/><text x="48.1454%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="47.8954%" y="1269" width="0.0368%" height="15" fill="rgb(214,41,3)" fg:x="3903" fg:w="3"/><text x="48.1454%" y="1279.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="47.9077%" y="1253" width="0.0245%" height="15" fill="rgb(236,119,38)" fg:x="3904" fg:w="2"/><text x="48.1577%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="47.9323%" y="1269" width="0.0123%" height="15" fill="rgb(218,50,11)" fg:x="3906" fg:w="1"/><text x="48.1823%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="47.9323%" y="1253" width="0.0123%" height="15" fill="rgb(228,38,11)" fg:x="3906" fg:w="1"/><text x="48.1823%" y="1263.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="47.9445%" y="1253" width="0.0123%" height="15" fill="rgb(212,13,9)" fg:x="3907" fg:w="1"/><text x="48.1945%" y="1263.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (3 samples, 0.04%)</title><rect x="47.9323%" y="1333" width="0.0368%" height="15" fill="rgb(208,211,9)" fg:x="3906" fg:w="3"/><text x="48.1823%" y="1343.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (3 samples, 0.04%)</title><rect x="47.9323%" y="1317" width="0.0368%" height="15" fill="rgb(239,39,32)" fg:x="3906" fg:w="3"/><text x="48.1823%" y="1327.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.04%)</title><rect x="47.9323%" y="1301" width="0.0368%" height="15" fill="rgb(254,179,26)" fg:x="3906" fg:w="3"/><text x="48.1823%" y="1311.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.04%)</title><rect x="47.9323%" y="1285" width="0.0368%" height="15" fill="rgb(249,165,28)" fg:x="3906" fg:w="3"/><text x="48.1823%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="47.9445%" y="1269" width="0.0245%" height="15" fill="rgb(225,59,50)" fg:x="3907" fg:w="2"/><text x="48.1945%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="47.9568%" y="1253" width="0.0123%" height="15" fill="rgb(209,122,5)" fg:x="3908" fg:w="1"/><text x="48.2068%" y="1263.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="47.9568%" y="1237" width="0.0123%" height="15" fill="rgb(214,65,34)" fg:x="3908" fg:w="1"/><text x="48.2068%" y="1247.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="47.9568%" y="1221" width="0.0123%" height="15" fill="rgb(249,183,32)" fg:x="3908" fg:w="1"/><text x="48.2068%" y="1231.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (1 samples, 0.01%)</title><rect x="47.9568%" y="1205" width="0.0123%" height="15" fill="rgb(218,122,24)" fg:x="3908" fg:w="1"/><text x="48.2068%" y="1215.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (1 samples, 0.01%)</title><rect x="47.9691%" y="1333" width="0.0123%" height="15" fill="rgb(224,109,18)" fg:x="3909" fg:w="1"/><text x="48.2191%" y="1343.50"></text></g><g><title>wgpu_core::command::bind::BindGroupEntry::provide (1 samples, 0.01%)</title><rect x="47.9691%" y="1317" width="0.0123%" height="15" fill="rgb(210,68,50)" fg:x="3909" fg:w="1"/><text x="48.2191%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="47.9691%" y="1301" width="0.0123%" height="15" fill="rgb(212,184,34)" fg:x="3909" fg:w="1"/><text x="48.2191%" y="1311.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="47.9691%" y="1285" width="0.0123%" height="15" fill="rgb(238,105,48)" fg:x="3909" fg:w="1"/><text x="48.2191%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="47.9691%" y="1269" width="0.0123%" height="15" fill="rgb(222,134,54)" fg:x="3909" fg:w="1"/><text x="48.2191%" y="1279.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="47.9691%" y="1253" width="0.0123%" height="15" fill="rgb(246,24,43)" fg:x="3909" fg:w="1"/><text x="48.2191%" y="1263.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="47.9691%" y="1237" width="0.0123%" height="15" fill="rgb(227,169,22)" fg:x="3909" fg:w="1"/><text x="48.2191%" y="1247.50"></text></g><g><title>wgpu_core::command::query::QueryResetMap&lt;B&gt;::reset_queries (1 samples, 0.01%)</title><rect x="47.9813%" y="1333" width="0.0123%" height="15" fill="rgb(253,152,4)" fg:x="3910" fg:w="1"/><text x="48.2313%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="47.9813%" y="1317" width="0.0123%" height="15" fill="rgb(219,158,36)" fg:x="3910" fg:w="1"/><text x="48.2313%" y="1327.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="47.9813%" y="1301" width="0.0123%" height="15" fill="rgb(251,128,40)" fg:x="3910" fg:w="1"/><text x="48.2313%" y="1311.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (1 samples, 0.01%)</title><rect x="47.9936%" y="1333" width="0.0123%" height="15" fill="rgb(254,101,39)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1343.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (1 samples, 0.01%)</title><rect x="47.9936%" y="1317" width="0.0123%" height="15" fill="rgb(221,168,40)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1327.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (1 samples, 0.01%)</title><rect x="47.9936%" y="1301" width="0.0123%" height="15" fill="rgb(221,14,27)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1311.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="47.9936%" y="1285" width="0.0123%" height="15" fill="rgb(207,36,43)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1295.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="47.9936%" y="1269" width="0.0123%" height="15" fill="rgb(240,172,53)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1279.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="47.9936%" y="1253" width="0.0123%" height="15" fill="rgb(241,138,43)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="47.9936%" y="1237" width="0.0123%" height="15" fill="rgb(227,78,19)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="47.9936%" y="1221" width="0.0123%" height="15" fill="rgb(215,127,44)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="47.9936%" y="1205" width="0.0123%" height="15" fill="rgb(227,13,10)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="47.9936%" y="1189" width="0.0123%" height="15" fill="rgb(249,177,6)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="47.9936%" y="1173" width="0.0123%" height="15" fill="rgb(215,154,26)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="47.9936%" y="1157" width="0.0123%" height="15" fill="rgb(250,168,20)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1167.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="47.9936%" y="1141" width="0.0123%" height="15" fill="rgb(222,53,38)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="47.9936%" y="1125" width="0.0123%" height="15" fill="rgb(245,154,5)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1135.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="47.9936%" y="1109" width="0.0123%" height="15" fill="rgb(214,89,50)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1119.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="47.9936%" y="1093" width="0.0123%" height="15" fill="rgb(232,73,14)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1103.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="47.9936%" y="1077" width="0.0123%" height="15" fill="rgb(230,101,20)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1087.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="47.9936%" y="1061" width="0.0123%" height="15" fill="rgb(208,56,28)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1071.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="47.9936%" y="1045" width="0.0123%" height="15" fill="rgb(247,205,22)" fg:x="3911" fg:w="1"/><text x="48.2436%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="48.0059%" y="1301" width="0.0123%" height="15" fill="rgb(252,109,51)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1311.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="48.0059%" y="1285" width="0.0123%" height="15" fill="rgb(220,40,24)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="48.0059%" y="1269" width="0.0123%" height="15" fill="rgb(251,108,7)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="48.0059%" y="1253" width="0.0123%" height="15" fill="rgb(238,102,51)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="48.0059%" y="1237" width="0.0123%" height="15" fill="rgb(219,149,34)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="48.0059%" y="1221" width="0.0123%" height="15" fill="rgb(239,70,0)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="48.0059%" y="1205" width="0.0123%" height="15" fill="rgb(246,214,23)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="48.0059%" y="1189" width="0.0123%" height="15" fill="rgb(239,221,51)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="48.0059%" y="1173" width="0.0123%" height="15" fill="rgb(254,62,14)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1183.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="48.0059%" y="1157" width="0.0123%" height="15" fill="rgb(253,57,33)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="48.0059%" y="1141" width="0.0123%" height="15" fill="rgb(229,34,6)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="48.0059%" y="1125" width="0.0123%" height="15" fill="rgb(235,191,23)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="48.0059%" y="1109" width="0.0123%" height="15" fill="rgb(217,207,27)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1119.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="48.0059%" y="1093" width="0.0123%" height="15" fill="rgb(232,41,44)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1103.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="48.0059%" y="1077" width="0.0123%" height="15" fill="rgb(221,188,19)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1087.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="48.0059%" y="1061" width="0.0123%" height="15" fill="rgb(245,180,45)" fg:x="3912" fg:w="1"/><text x="48.2559%" y="1071.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (17 samples, 0.21%)</title><rect x="47.8341%" y="1461" width="0.2086%" height="15" fill="rgb(250,220,42)" fg:x="3898" fg:w="17"/><text x="48.0841%" y="1471.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (17 samples, 0.21%)</title><rect x="47.8341%" y="1445" width="0.2086%" height="15" fill="rgb(234,16,34)" fg:x="3898" fg:w="17"/><text x="48.0841%" y="1455.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (17 samples, 0.21%)</title><rect x="47.8341%" y="1429" width="0.2086%" height="15" fill="rgb(233,217,23)" fg:x="3898" fg:w="17"/><text x="48.0841%" y="1439.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (17 samples, 0.21%)</title><rect x="47.8341%" y="1413" width="0.2086%" height="15" fill="rgb(209,22,46)" fg:x="3898" fg:w="17"/><text x="48.0841%" y="1423.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (17 samples, 0.21%)</title><rect x="47.8341%" y="1397" width="0.2086%" height="15" fill="rgb(213,101,18)" fg:x="3898" fg:w="17"/><text x="48.0841%" y="1407.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (17 samples, 0.21%)</title><rect x="47.8341%" y="1381" width="0.2086%" height="15" fill="rgb(215,179,52)" fg:x="3898" fg:w="17"/><text x="48.0841%" y="1391.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (17 samples, 0.21%)</title><rect x="47.8341%" y="1365" width="0.2086%" height="15" fill="rgb(223,50,25)" fg:x="3898" fg:w="17"/><text x="48.0841%" y="1375.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (17 samples, 0.21%)</title><rect x="47.8341%" y="1349" width="0.2086%" height="15" fill="rgb(224,51,44)" fg:x="3898" fg:w="17"/><text x="48.0841%" y="1359.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (3 samples, 0.04%)</title><rect x="48.0059%" y="1333" width="0.0368%" height="15" fill="rgb(224,13,54)" fg:x="3912" fg:w="3"/><text x="48.2559%" y="1343.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (3 samples, 0.04%)</title><rect x="48.0059%" y="1317" width="0.0368%" height="15" fill="rgb(219,58,47)" fg:x="3912" fg:w="3"/><text x="48.2559%" y="1327.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (2 samples, 0.02%)</title><rect x="48.0182%" y="1301" width="0.0245%" height="15" fill="rgb(246,124,34)" fg:x="3913" fg:w="2"/><text x="48.2682%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2 samples, 0.02%)</title><rect x="48.0182%" y="1285" width="0.0245%" height="15" fill="rgb(245,109,25)" fg:x="3913" fg:w="2"/><text x="48.2682%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.02%)</title><rect x="48.0182%" y="1269" width="0.0245%" height="15" fill="rgb(235,48,23)" fg:x="3913" fg:w="2"/><text x="48.2682%" y="1279.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="48.0182%" y="1253" width="0.0245%" height="15" fill="rgb(229,203,36)" fg:x="3913" fg:w="2"/><text x="48.2682%" y="1263.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.02%)</title><rect x="48.0182%" y="1237" width="0.0245%" height="15" fill="rgb(234,180,9)" fg:x="3913" fg:w="2"/><text x="48.2682%" y="1247.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (2 samples, 0.02%)</title><rect x="48.0182%" y="1221" width="0.0245%" height="15" fill="rgb(228,98,45)" fg:x="3913" fg:w="2"/><text x="48.2682%" y="1231.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (28 samples, 0.34%)</title><rect x="47.7114%" y="1509" width="0.3436%" height="15" fill="rgb(240,24,36)" fg:x="3888" fg:w="28"/><text x="47.9614%" y="1519.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (26 samples, 0.32%)</title><rect x="47.7359%" y="1493" width="0.3191%" height="15" fill="rgb(227,154,19)" fg:x="3890" fg:w="26"/><text x="47.9859%" y="1503.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (25 samples, 0.31%)</title><rect x="47.7482%" y="1477" width="0.3068%" height="15" fill="rgb(231,2,48)" fg:x="3891" fg:w="25"/><text x="47.9982%" y="1487.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="48.0427%" y="1461" width="0.0123%" height="15" fill="rgb(219,216,0)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1471.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (1 samples, 0.01%)</title><rect x="48.0427%" y="1445" width="0.0123%" height="15" fill="rgb(251,88,0)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1455.50"></text></g><g><title>wgpu::Device::create_swap_chain (1 samples, 0.01%)</title><rect x="48.0427%" y="1429" width="0.0123%" height="15" fill="rgb(242,45,45)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1439.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (1 samples, 0.01%)</title><rect x="48.0427%" y="1413" width="0.0123%" height="15" fill="rgb(218,149,45)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1423.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (1 samples, 0.01%)</title><rect x="48.0427%" y="1397" width="0.0123%" height="15" fill="rgb(247,194,10)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1407.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::configure_swapchain (1 samples, 0.01%)</title><rect x="48.0427%" y="1381" width="0.0123%" height="15" fill="rgb(234,33,37)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1391.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_backend_vulkan::Device&gt;::create_swapchain (1 samples, 0.01%)</title><rect x="48.0427%" y="1365" width="0.0123%" height="15" fill="rgb(218,61,13)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1375.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (1 samples, 0.01%)</title><rect x="48.0427%" y="1349" width="0.0123%" height="15" fill="rgb(210,80,52)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1359.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::create_swapchain_khr (1 samples, 0.01%)</title><rect x="48.0427%" y="1333" width="0.0123%" height="15" fill="rgb(218,203,27)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1343.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="48.0427%" y="1317" width="0.0123%" height="15" fill="rgb(209,126,33)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1327.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.0427%" y="1301" width="0.0123%" height="15" fill="rgb(234,173,41)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.0427%" y="1285" width="0.0123%" height="15" fill="rgb(228,166,9)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.0427%" y="1269" width="0.0123%" height="15" fill="rgb(208,124,43)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1279.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.0427%" y="1253" width="0.0123%" height="15" fill="rgb(212,154,38)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.0427%" y="1237" width="0.0123%" height="15" fill="rgb(246,179,35)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.0427%" y="1221" width="0.0123%" height="15" fill="rgb(251,3,50)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1231.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.0427%" y="1205" width="0.0123%" height="15" fill="rgb(219,96,8)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.0427%" y="1189" width="0.0123%" height="15" fill="rgb(251,216,33)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1199.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.0427%" y="1173" width="0.0123%" height="15" fill="rgb(243,145,29)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1183.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.0427%" y="1157" width="0.0123%" height="15" fill="rgb(210,75,20)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1167.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.0427%" y="1141" width="0.0123%" height="15" fill="rgb(235,56,8)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1151.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="48.0427%" y="1125" width="0.0123%" height="15" fill="rgb(226,175,49)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1135.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="48.0427%" y="1109" width="0.0123%" height="15" fill="rgb(242,204,23)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1119.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="48.0427%" y="1093" width="0.0123%" height="15" fill="rgb(225,104,24)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1103.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="48.0427%" y="1077" width="0.0123%" height="15" fill="rgb(253,34,1)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1087.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="48.0427%" y="1061" width="0.0123%" height="15" fill="rgb(233,199,23)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1071.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="48.0427%" y="1045" width="0.0123%" height="15" fill="rgb(247,7,51)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1055.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="48.0427%" y="1029" width="0.0123%" height="15" fill="rgb(214,146,12)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1039.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="48.0427%" y="1013" width="0.0123%" height="15" fill="rgb(234,181,43)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1023.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="48.0427%" y="997" width="0.0123%" height="15" fill="rgb(239,148,6)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="1007.50"></text></g><g><title>open_path (1 samples, 0.01%)</title><rect x="48.0427%" y="981" width="0.0123%" height="15" fill="rgb(206,151,17)" fg:x="3915" fg:w="1"/><text x="48.2927%" y="991.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (1 samples, 0.01%)</title><rect x="48.0550%" y="1493" width="0.0123%" height="15" fill="rgb(213,215,10)" fg:x="3916" fg:w="1"/><text x="48.3050%" y="1503.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (2 samples, 0.02%)</title><rect x="48.0550%" y="1509" width="0.0245%" height="15" fill="rgb(215,220,44)" fg:x="3916" fg:w="2"/><text x="48.3050%" y="1519.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="48.0672%" y="1493" width="0.0123%" height="15" fill="rgb(245,205,37)" fg:x="3917" fg:w="1"/><text x="48.3172%" y="1503.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="48.0672%" y="1477" width="0.0123%" height="15" fill="rgb(245,130,43)" fg:x="3917" fg:w="1"/><text x="48.3172%" y="1487.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="48.0672%" y="1461" width="0.0123%" height="15" fill="rgb(231,227,38)" fg:x="3917" fg:w="1"/><text x="48.3172%" y="1471.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (1 samples, 0.01%)</title><rect x="48.0795%" y="1509" width="0.0123%" height="15" fill="rgb(233,185,4)" fg:x="3918" fg:w="1"/><text x="48.3295%" y="1519.50"></text></g><g><title>bevy_render::draw::clear_draw_system (1 samples, 0.01%)</title><rect x="48.0918%" y="1509" width="0.0123%" height="15" fill="rgb(224,154,43)" fg:x="3919" fg:w="1"/><text x="48.3418%" y="1519.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="48.0918%" y="1493" width="0.0123%" height="15" fill="rgb(235,156,15)" fg:x="3919" fg:w="1"/><text x="48.3418%" y="1503.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (2 samples, 0.02%)</title><rect x="48.1041%" y="1493" width="0.0245%" height="15" fill="rgb(211,55,43)" fg:x="3920" fg:w="2"/><text x="48.3541%" y="1503.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (2 samples, 0.02%)</title><rect x="48.1041%" y="1477" width="0.0245%" height="15" fill="rgb(247,149,40)" fg:x="3920" fg:w="2"/><text x="48.3541%" y="1487.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (2 samples, 0.02%)</title><rect x="48.1041%" y="1461" width="0.0245%" height="15" fill="rgb(232,171,16)" fg:x="3920" fg:w="2"/><text x="48.3541%" y="1471.50"></text></g><g><title>bevy_glsl_to_spirv::compile (2 samples, 0.02%)</title><rect x="48.1041%" y="1445" width="0.0245%" height="15" fill="rgb(215,117,49)" fg:x="3920" fg:w="2"/><text x="48.3541%" y="1455.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (2 samples, 0.02%)</title><rect x="48.1041%" y="1429" width="0.0245%" height="15" fill="rgb(246,194,11)" fg:x="3920" fg:w="2"/><text x="48.3541%" y="1439.50"></text></g><g><title>glslang_shader_preprocess (2 samples, 0.02%)</title><rect x="48.1041%" y="1413" width="0.0245%" height="15" fill="rgb(242,101,44)" fg:x="3920" fg:w="2"/><text x="48.3541%" y="1423.50"></text></g><g><title>glslang::TShader::preprocess (2 samples, 0.02%)</title><rect x="48.1041%" y="1397" width="0.0245%" height="15" fill="rgb(226,174,6)" fg:x="3920" fg:w="2"/><text x="48.3541%" y="1407.50"></text></g><g><title>glslang::TBuiltIns::initialize (2 samples, 0.02%)</title><rect x="48.1041%" y="1381" width="0.0245%" height="15" fill="rgb(213,150,20)" fg:x="3920" fg:w="2"/><text x="48.3541%" y="1391.50"></text></g><g><title>__GI___snprintf (2 samples, 0.02%)</title><rect x="48.1041%" y="1365" width="0.0245%" height="15" fill="rgb(222,124,42)" fg:x="3920" fg:w="2"/><text x="48.3541%" y="1375.50"></text></g><g><title>__vsnprintf_internal (2 samples, 0.02%)</title><rect x="48.1041%" y="1349" width="0.0245%" height="15" fill="rgb(250,19,47)" fg:x="3920" fg:w="2"/><text x="48.3541%" y="1359.50"></text></g><g><title>__vfprintf_internal (2 samples, 0.02%)</title><rect x="48.1041%" y="1333" width="0.0245%" height="15" fill="rgb(241,217,19)" fg:x="3920" fg:w="2"/><text x="48.3541%" y="1343.50"></text></g><g><title>glslang::TBuiltIns::initialize (1 samples, 0.01%)</title><rect x="48.1286%" y="1349" width="0.0123%" height="15" fill="rgb(207,210,34)" fg:x="3922" fg:w="1"/><text x="48.3786%" y="1359.50"></text></g><g><title>__GI___snprintf (1 samples, 0.01%)</title><rect x="48.1286%" y="1333" width="0.0123%" height="15" fill="rgb(244,45,4)" fg:x="3922" fg:w="1"/><text x="48.3786%" y="1343.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="48.1286%" y="1317" width="0.0123%" height="15" fill="rgb(252,134,50)" fg:x="3922" fg:w="1"/><text x="48.3786%" y="1327.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="48.1286%" y="1301" width="0.0123%" height="15" fill="rgb(238,74,2)" fg:x="3922" fg:w="1"/><text x="48.3786%" y="1311.50"></text></g><g><title>__strchrnul_avx2 (1 samples, 0.01%)</title><rect x="48.1286%" y="1285" width="0.0123%" height="15" fill="rgb(226,58,46)" fg:x="3922" fg:w="1"/><text x="48.3786%" y="1295.50"></text></g><g><title>operator delete[] (1 samples, 0.01%)</title><rect x="48.1409%" y="1349" width="0.0123%" height="15" fill="rgb(232,83,35)" fg:x="3923" fg:w="1"/><text x="48.3909%" y="1359.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (5 samples, 0.06%)</title><rect x="48.1041%" y="1509" width="0.0614%" height="15" fill="rgb(212,148,47)" fg:x="3920" fg:w="5"/><text x="48.3541%" y="1519.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="48.1286%" y="1493" width="0.0368%" height="15" fill="rgb(235,29,1)" fg:x="3922" fg:w="3"/><text x="48.3786%" y="1503.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (3 samples, 0.04%)</title><rect x="48.1286%" y="1477" width="0.0368%" height="15" fill="rgb(247,55,37)" fg:x="3922" fg:w="3"/><text x="48.3786%" y="1487.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (3 samples, 0.04%)</title><rect x="48.1286%" y="1461" width="0.0368%" height="15" fill="rgb(222,48,3)" fg:x="3922" fg:w="3"/><text x="48.3786%" y="1471.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (3 samples, 0.04%)</title><rect x="48.1286%" y="1445" width="0.0368%" height="15" fill="rgb(234,21,33)" fg:x="3922" fg:w="3"/><text x="48.3786%" y="1455.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (3 samples, 0.04%)</title><rect x="48.1286%" y="1429" width="0.0368%" height="15" fill="rgb(247,178,53)" fg:x="3922" fg:w="3"/><text x="48.3786%" y="1439.50"></text></g><g><title>bevy_glsl_to_spirv::compile (3 samples, 0.04%)</title><rect x="48.1286%" y="1413" width="0.0368%" height="15" fill="rgb(225,75,7)" fg:x="3922" fg:w="3"/><text x="48.3786%" y="1423.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (3 samples, 0.04%)</title><rect x="48.1286%" y="1397" width="0.0368%" height="15" fill="rgb(219,199,7)" fg:x="3922" fg:w="3"/><text x="48.3786%" y="1407.50"></text></g><g><title>glslang_shader_preprocess (3 samples, 0.04%)</title><rect x="48.1286%" y="1381" width="0.0368%" height="15" fill="rgb(209,93,42)" fg:x="3922" fg:w="3"/><text x="48.3786%" y="1391.50"></text></g><g><title>glslang::TShader::preprocess (3 samples, 0.04%)</title><rect x="48.1286%" y="1365" width="0.0368%" height="15" fill="rgb(240,175,17)" fg:x="3922" fg:w="3"/><text x="48.3786%" y="1375.50"></text></g><g><title>std::string::append (1 samples, 0.01%)</title><rect x="48.1531%" y="1349" width="0.0123%" height="15" fill="rgb(232,106,7)" fg:x="3924" fg:w="1"/><text x="48.4031%" y="1359.50"></text></g><g><title>std::string::reserve (1 samples, 0.01%)</title><rect x="48.1531%" y="1333" width="0.0123%" height="15" fill="rgb(242,106,43)" fg:x="3924" fg:w="1"/><text x="48.4031%" y="1343.50"></text></g><g><title>__GI___snprintf (1 samples, 0.01%)</title><rect x="48.1900%" y="1333" width="0.0123%" height="15" fill="rgb(242,61,37)" fg:x="3927" fg:w="1"/><text x="48.4400%" y="1343.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="48.1900%" y="1317" width="0.0123%" height="15" fill="rgb(205,72,10)" fg:x="3927" fg:w="1"/><text x="48.4400%" y="1327.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="48.1900%" y="1301" width="0.0123%" height="15" fill="rgb(214,184,36)" fg:x="3927" fg:w="1"/><text x="48.4400%" y="1311.50"></text></g><g><title>_itoa_word (1 samples, 0.01%)</title><rect x="48.1900%" y="1285" width="0.0123%" height="15" fill="rgb(206,107,18)" fg:x="3927" fg:w="1"/><text x="48.4400%" y="1295.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (4 samples, 0.05%)</title><rect x="48.1654%" y="1509" width="0.0491%" height="15" fill="rgb(210,75,5)" fg:x="3925" fg:w="4"/><text x="48.4154%" y="1519.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (2 samples, 0.02%)</title><rect x="48.1900%" y="1493" width="0.0245%" height="15" fill="rgb(205,3,19)" fg:x="3927" fg:w="2"/><text x="48.4400%" y="1503.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (2 samples, 0.02%)</title><rect x="48.1900%" y="1477" width="0.0245%" height="15" fill="rgb(207,181,42)" fg:x="3927" fg:w="2"/><text x="48.4400%" y="1487.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (2 samples, 0.02%)</title><rect x="48.1900%" y="1461" width="0.0245%" height="15" fill="rgb(229,179,43)" fg:x="3927" fg:w="2"/><text x="48.4400%" y="1471.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (2 samples, 0.02%)</title><rect x="48.1900%" y="1445" width="0.0245%" height="15" fill="rgb(246,95,30)" fg:x="3927" fg:w="2"/><text x="48.4400%" y="1455.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (2 samples, 0.02%)</title><rect x="48.1900%" y="1429" width="0.0245%" height="15" fill="rgb(234,144,45)" fg:x="3927" fg:w="2"/><text x="48.4400%" y="1439.50"></text></g><g><title>bevy_glsl_to_spirv::compile (2 samples, 0.02%)</title><rect x="48.1900%" y="1413" width="0.0245%" height="15" fill="rgb(250,54,25)" fg:x="3927" fg:w="2"/><text x="48.4400%" y="1423.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (2 samples, 0.02%)</title><rect x="48.1900%" y="1397" width="0.0245%" height="15" fill="rgb(215,195,40)" fg:x="3927" fg:w="2"/><text x="48.4400%" y="1407.50"></text></g><g><title>glslang_shader_preprocess (2 samples, 0.02%)</title><rect x="48.1900%" y="1381" width="0.0245%" height="15" fill="rgb(233,188,42)" fg:x="3927" fg:w="2"/><text x="48.4400%" y="1391.50"></text></g><g><title>glslang::TShader::preprocess (2 samples, 0.02%)</title><rect x="48.1900%" y="1365" width="0.0245%" height="15" fill="rgb(247,227,35)" fg:x="3927" fg:w="2"/><text x="48.4400%" y="1375.50"></text></g><g><title>glslang::TBuiltIns::initialize (2 samples, 0.02%)</title><rect x="48.1900%" y="1349" width="0.0245%" height="15" fill="rgb(249,124,27)" fg:x="3927" fg:w="2"/><text x="48.4400%" y="1359.50"></text></g><g><title>glslang::TBuiltIns::add2ndGenerationSamplingImaging (1 samples, 0.01%)</title><rect x="48.2022%" y="1333" width="0.0123%" height="15" fill="rgb(219,207,25)" fg:x="3928" fg:w="1"/><text x="48.4522%" y="1343.50"></text></g><g><title>glslang::TBuiltIns::addSamplingFunctions (1 samples, 0.01%)</title><rect x="48.2022%" y="1317" width="0.0123%" height="15" fill="rgb(241,216,47)" fg:x="3928" fg:w="1"/><text x="48.4522%" y="1327.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.01%)</title><rect x="48.2022%" y="1301" width="0.0123%" height="15" fill="rgb(233,82,50)" fg:x="3928" fg:w="1"/><text x="48.4522%" y="1311.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::reserve (1 samples, 0.01%)</title><rect x="48.2022%" y="1285" width="0.0123%" height="15" fill="rgb(232,63,2)" fg:x="3928" fg:w="1"/><text x="48.4522%" y="1295.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::get_node_state (2 samples, 0.02%)</title><rect x="48.2145%" y="1509" width="0.0245%" height="15" fill="rgb(236,184,28)" fg:x="3929" fg:w="2"/><text x="48.4645%" y="1519.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (1 samples, 0.01%)</title><rect x="48.2390%" y="1509" width="0.0123%" height="15" fill="rgb(254,63,27)" fg:x="3931" fg:w="1"/><text x="48.4890%" y="1519.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (1 samples, 0.01%)</title><rect x="48.2513%" y="1509" width="0.0123%" height="15" fill="rgb(253,106,28)" fg:x="3932" fg:w="1"/><text x="48.5013%" y="1519.50"></text></g><g><title>bevy_render::shader::shader::shader_update_system (1 samples, 0.01%)</title><rect x="48.2636%" y="1509" width="0.0123%" height="15" fill="rgb(225,141,39)" fg:x="3933" fg:w="1"/><text x="48.5136%" y="1519.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (1 samples, 0.01%)</title><rect x="48.2759%" y="1509" width="0.0123%" height="15" fill="rgb(222,157,20)" fg:x="3934" fg:w="1"/><text x="48.5259%" y="1519.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="48.2759%" y="1493" width="0.0123%" height="15" fill="rgb(210,190,9)" fg:x="3934" fg:w="1"/><text x="48.5259%" y="1503.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (1 samples, 0.01%)</title><rect x="48.2881%" y="1509" width="0.0123%" height="15" fill="rgb(242,167,7)" fg:x="3935" fg:w="1"/><text x="48.5381%" y="1519.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="48.2881%" y="1493" width="0.0123%" height="15" fill="rgb(227,82,41)" fg:x="3935" fg:w="1"/><text x="48.5381%" y="1503.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="48.2881%" y="1477" width="0.0123%" height="15" fill="rgb(222,131,13)" fg:x="3935" fg:w="1"/><text x="48.5381%" y="1487.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="48.2881%" y="1461" width="0.0123%" height="15" fill="rgb(221,98,26)" fg:x="3935" fg:w="1"/><text x="48.5381%" y="1471.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::bind_graphics_descriptor_sets (2 samples, 0.02%)</title><rect x="48.3004%" y="1365" width="0.0245%" height="15" fill="rgb(251,63,52)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1375.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets (2 samples, 0.02%)</title><rect x="48.3004%" y="1349" width="0.0245%" height="15" fill="rgb(246,25,43)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1359.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (2 samples, 0.02%)</title><rect x="48.3004%" y="1333" width="0.0245%" height="15" fill="rgb(247,167,15)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1343.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets::{{closure}} (2 samples, 0.02%)</title><rect x="48.3004%" y="1317" width="0.0245%" height="15" fill="rgb(240,104,42)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1327.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (2 samples, 0.02%)</title><rect x="48.3004%" y="1301" width="0.0245%" height="15" fill="rgb(224,54,6)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1311.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (2 samples, 0.02%)</title><rect x="48.3004%" y="1285" width="0.0245%" height="15" fill="rgb(244,108,35)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1295.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (2 samples, 0.02%)</title><rect x="48.3004%" y="1269" width="0.0245%" height="15" fill="rgb(216,154,2)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1279.50"></text></g><g><title>inplace_it::fixed_array::indirect (2 samples, 0.02%)</title><rect x="48.3004%" y="1253" width="0.0245%" height="15" fill="rgb(222,8,47)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1263.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (2 samples, 0.02%)</title><rect x="48.3004%" y="1237" width="0.0245%" height="15" fill="rgb(252,93,1)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1247.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (2 samples, 0.02%)</title><rect x="48.3004%" y="1221" width="0.0245%" height="15" fill="rgb(223,226,51)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1231.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="48.3004%" y="1205" width="0.0245%" height="15" fill="rgb(206,147,9)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1215.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_bind_descriptor_sets (2 samples, 0.02%)</title><rect x="48.3004%" y="1189" width="0.0245%" height="15" fill="rgb(248,180,41)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1199.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_bind_descriptor_sets (2 samples, 0.02%)</title><rect x="48.3004%" y="1173" width="0.0245%" height="15" fill="rgb(209,47,50)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="48.3004%" y="1157" width="0.0245%" height="15" fill="rgb(243,65,31)" fg:x="3936" fg:w="2"/><text x="48.5504%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.3127%" y="1141" width="0.0123%" height="15" fill="rgb(228,128,1)" fg:x="3937" fg:w="1"/><text x="48.5627%" y="1151.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::bind_vertex_buffers (1 samples, 0.01%)</title><rect x="48.3249%" y="1365" width="0.0123%" height="15" fill="rgb(231,192,16)" fg:x="3938" fg:w="1"/><text x="48.5749%" y="1375.50"></text></g><g><title>core::iter::traits::iterator::Iterator::unzip (1 samples, 0.01%)</title><rect x="48.3249%" y="1349" width="0.0123%" height="15" fill="rgb(224,26,40)" fg:x="3938" fg:w="1"/><text x="48.5749%" y="1359.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="48.3249%" y="1333" width="0.0123%" height="15" fill="rgb(214,192,17)" fg:x="3938" fg:w="1"/><text x="48.5749%" y="1343.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="48.3249%" y="1317" width="0.0123%" height="15" fill="rgb(225,147,18)" fg:x="3938" fg:w="1"/><text x="48.5749%" y="1327.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="48.3249%" y="1301" width="0.0123%" height="15" fill="rgb(205,35,11)" fg:x="3938" fg:w="1"/><text x="48.5749%" y="1311.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="48.3249%" y="1285" width="0.0123%" height="15" fill="rgb(242,40,42)" fg:x="3938" fg:w="1"/><text x="48.5749%" y="1295.50"></text></g><g><title>&lt;(ExtendA,ExtendB) as core::iter::traits::collect::Extend&lt;(A,B)&gt;&gt;::extend::extend::{{closure}} (1 samples, 0.01%)</title><rect x="48.3249%" y="1269" width="0.0123%" height="15" fill="rgb(250,170,13)" fg:x="3938" fg:w="1"/><text x="48.5749%" y="1279.50"></text></g><g><title>core::iter::traits::collect::Extend::extend_one (1 samples, 0.01%)</title><rect x="48.3249%" y="1253" width="0.0123%" height="15" fill="rgb(240,161,28)" fg:x="3938" fg:w="1"/><text x="48.5749%" y="1263.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="48.3249%" y="1237" width="0.0123%" height="15" fill="rgb(245,179,12)" fg:x="3938" fg:w="1"/><text x="48.5749%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SetLenOnDrop&gt; (1 samples, 0.01%)</title><rect x="48.3249%" y="1221" width="0.0123%" height="15" fill="rgb(250,92,32)" fg:x="3938" fg:w="1"/><text x="48.5749%" y="1231.50"></text></g><g><title>&lt;smallvec::SetLenOnDrop as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="48.3249%" y="1205" width="0.0123%" height="15" fill="rgb(233,10,40)" fg:x="3938" fg:w="1"/><text x="48.5749%" y="1215.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (1 samples, 0.01%)</title><rect x="48.3372%" y="1365" width="0.0123%" height="15" fill="rgb(217,98,1)" fg:x="3939" fg:w="1"/><text x="48.5872%" y="1375.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (1 samples, 0.01%)</title><rect x="48.3372%" y="1349" width="0.0123%" height="15" fill="rgb(238,202,7)" fg:x="3939" fg:w="1"/><text x="48.5872%" y="1359.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (1 samples, 0.01%)</title><rect x="48.3372%" y="1333" width="0.0123%" height="15" fill="rgb(222,91,3)" fg:x="3939" fg:w="1"/><text x="48.5872%" y="1343.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (1 samples, 0.01%)</title><rect x="48.3372%" y="1317" width="0.0123%" height="15" fill="rgb(211,170,49)" fg:x="3939" fg:w="1"/><text x="48.5872%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.3372%" y="1301" width="0.0123%" height="15" fill="rgb(253,139,18)" fg:x="3939" fg:w="1"/><text x="48.5872%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.3372%" y="1285" width="0.0123%" height="15" fill="rgb(222,4,43)" fg:x="3939" fg:w="1"/><text x="48.5872%" y="1295.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (3 samples, 0.04%)</title><rect x="48.3495%" y="1349" width="0.0368%" height="15" fill="rgb(207,205,12)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1359.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.04%)</title><rect x="48.3495%" y="1333" width="0.0368%" height="15" fill="rgb(216,159,46)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1343.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.04%)</title><rect x="48.3495%" y="1317" width="0.0368%" height="15" fill="rgb(236,115,1)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (3 samples, 0.04%)</title><rect x="48.3495%" y="1301" width="0.0368%" height="15" fill="rgb(251,35,33)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="48.3495%" y="1285" width="0.0368%" height="15" fill="rgb(248,62,51)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.04%)</title><rect x="48.3495%" y="1269" width="0.0368%" height="15" fill="rgb(254,180,19)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.04%)</title><rect x="48.3495%" y="1253" width="0.0368%" height="15" fill="rgb(217,100,32)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.04%)</title><rect x="48.3495%" y="1237" width="0.0368%" height="15" fill="rgb(224,71,22)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.04%)</title><rect x="48.3495%" y="1221" width="0.0368%" height="15" fill="rgb(251,185,33)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="48.3495%" y="1205" width="0.0368%" height="15" fill="rgb(209,75,48)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1215.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.04%)</title><rect x="48.3495%" y="1189" width="0.0368%" height="15" fill="rgb(253,190,16)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.04%)</title><rect x="48.3495%" y="1173" width="0.0368%" height="15" fill="rgb(226,140,1)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.04%)</title><rect x="48.3495%" y="1157" width="0.0368%" height="15" fill="rgb(206,75,30)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.04%)</title><rect x="48.3495%" y="1141" width="0.0368%" height="15" fill="rgb(231,208,37)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1151.50"></text></g><g><title>__rdl_alloc (3 samples, 0.04%)</title><rect x="48.3495%" y="1125" width="0.0368%" height="15" fill="rgb(238,136,40)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1135.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (3 samples, 0.04%)</title><rect x="48.3495%" y="1109" width="0.0368%" height="15" fill="rgb(247,137,17)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1119.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="48.3495%" y="1093" width="0.0368%" height="15" fill="rgb(240,60,40)" fg:x="3940" fg:w="3"/><text x="48.5995%" y="1103.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="48.3740%" y="1077" width="0.0123%" height="15" fill="rgb(236,68,50)" fg:x="3942" fg:w="1"/><text x="48.6240%" y="1087.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (9 samples, 0.11%)</title><rect x="48.3004%" y="1493" width="0.1104%" height="15" fill="rgb(230,42,12)" fg:x="3936" fg:w="9"/><text x="48.5504%" y="1503.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (9 samples, 0.11%)</title><rect x="48.3004%" y="1477" width="0.1104%" height="15" fill="rgb(219,16,16)" fg:x="3936" fg:w="9"/><text x="48.5504%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (9 samples, 0.11%)</title><rect x="48.3004%" y="1461" width="0.1104%" height="15" fill="rgb(220,38,35)" fg:x="3936" fg:w="9"/><text x="48.5504%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (9 samples, 0.11%)</title><rect x="48.3004%" y="1445" width="0.1104%" height="15" fill="rgb(228,33,1)" fg:x="3936" fg:w="9"/><text x="48.5504%" y="1455.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (9 samples, 0.11%)</title><rect x="48.3004%" y="1429" width="0.1104%" height="15" fill="rgb(241,46,31)" fg:x="3936" fg:w="9"/><text x="48.5504%" y="1439.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (9 samples, 0.11%)</title><rect x="48.3004%" y="1413" width="0.1104%" height="15" fill="rgb(232,58,20)" fg:x="3936" fg:w="9"/><text x="48.5504%" y="1423.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (9 samples, 0.11%)</title><rect x="48.3004%" y="1397" width="0.1104%" height="15" fill="rgb(206,228,53)" fg:x="3936" fg:w="9"/><text x="48.5504%" y="1407.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (9 samples, 0.11%)</title><rect x="48.3004%" y="1381" width="0.1104%" height="15" fill="rgb(206,88,33)" fg:x="3936" fg:w="9"/><text x="48.5504%" y="1391.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (5 samples, 0.06%)</title><rect x="48.3495%" y="1365" width="0.0614%" height="15" fill="rgb(238,69,7)" fg:x="3940" fg:w="5"/><text x="48.5995%" y="1375.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (2 samples, 0.02%)</title><rect x="48.3863%" y="1349" width="0.0245%" height="15" fill="rgb(250,21,46)" fg:x="3943" fg:w="2"/><text x="48.6363%" y="1359.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="48.3863%" y="1333" width="0.0245%" height="15" fill="rgb(215,212,21)" fg:x="3943" fg:w="2"/><text x="48.6363%" y="1343.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="48.3863%" y="1317" width="0.0245%" height="15" fill="rgb(211,35,12)" fg:x="3943" fg:w="2"/><text x="48.6363%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.02%)</title><rect x="48.3863%" y="1301" width="0.0245%" height="15" fill="rgb(231,184,16)" fg:x="3943" fg:w="2"/><text x="48.6363%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="48.3863%" y="1285" width="0.0245%" height="15" fill="rgb(242,140,15)" fg:x="3943" fg:w="2"/><text x="48.6363%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="48.3863%" y="1269" width="0.0245%" height="15" fill="rgb(220,37,14)" fg:x="3943" fg:w="2"/><text x="48.6363%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="48.3863%" y="1253" width="0.0245%" height="15" fill="rgb(223,146,22)" fg:x="3943" fg:w="2"/><text x="48.6363%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="48.3986%" y="1237" width="0.0123%" height="15" fill="rgb(216,132,15)" fg:x="3944" fg:w="1"/><text x="48.6486%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="48.3986%" y="1221" width="0.0123%" height="15" fill="rgb(248,83,5)" fg:x="3944" fg:w="1"/><text x="48.6486%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="48.3986%" y="1205" width="0.0123%" height="15" fill="rgb(231,206,48)" fg:x="3944" fg:w="1"/><text x="48.6486%" y="1215.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="48.3986%" y="1189" width="0.0123%" height="15" fill="rgb(253,185,37)" fg:x="3944" fg:w="1"/><text x="48.6486%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="48.3986%" y="1173" width="0.0123%" height="15" fill="rgb(208,21,44)" fg:x="3944" fg:w="1"/><text x="48.6486%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="48.3986%" y="1157" width="0.0123%" height="15" fill="rgb(236,125,4)" fg:x="3944" fg:w="1"/><text x="48.6486%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="48.3986%" y="1141" width="0.0123%" height="15" fill="rgb(226,134,25)" fg:x="3944" fg:w="1"/><text x="48.6486%" y="1151.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="48.3986%" y="1125" width="0.0123%" height="15" fill="rgb(250,201,12)" fg:x="3944" fg:w="1"/><text x="48.6486%" y="1135.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="48.3986%" y="1109" width="0.0123%" height="15" fill="rgb(225,92,18)" fg:x="3944" fg:w="1"/><text x="48.6486%" y="1119.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="48.3986%" y="1093" width="0.0123%" height="15" fill="rgb(227,35,22)" fg:x="3944" fg:w="1"/><text x="48.6486%" y="1103.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::bind_graphics_descriptor_sets (6 samples, 0.07%)</title><rect x="48.4108%" y="1365" width="0.0736%" height="15" fill="rgb(214,180,52)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1375.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets (6 samples, 0.07%)</title><rect x="48.4108%" y="1349" width="0.0736%" height="15" fill="rgb(233,55,38)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1359.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (6 samples, 0.07%)</title><rect x="48.4108%" y="1333" width="0.0736%" height="15" fill="rgb(249,171,43)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1343.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets::{{closure}} (6 samples, 0.07%)</title><rect x="48.4108%" y="1317" width="0.0736%" height="15" fill="rgb(239,87,2)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1327.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (6 samples, 0.07%)</title><rect x="48.4108%" y="1301" width="0.0736%" height="15" fill="rgb(248,141,5)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1311.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (6 samples, 0.07%)</title><rect x="48.4108%" y="1285" width="0.0736%" height="15" fill="rgb(238,33,42)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1295.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (6 samples, 0.07%)</title><rect x="48.4108%" y="1269" width="0.0736%" height="15" fill="rgb(231,57,19)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1279.50"></text></g><g><title>inplace_it::fixed_array::indirect (6 samples, 0.07%)</title><rect x="48.4108%" y="1253" width="0.0736%" height="15" fill="rgb(214,78,53)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1263.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (6 samples, 0.07%)</title><rect x="48.4108%" y="1237" width="0.0736%" height="15" fill="rgb(206,132,29)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1247.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (6 samples, 0.07%)</title><rect x="48.4108%" y="1221" width="0.0736%" height="15" fill="rgb(248,174,31)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1231.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets::{{closure}}::{{closure}} (6 samples, 0.07%)</title><rect x="48.4108%" y="1205" width="0.0736%" height="15" fill="rgb(221,87,13)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1215.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_bind_descriptor_sets (6 samples, 0.07%)</title><rect x="48.4108%" y="1189" width="0.0736%" height="15" fill="rgb(223,197,17)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1199.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_bind_descriptor_sets (6 samples, 0.07%)</title><rect x="48.4108%" y="1173" width="0.0736%" height="15" fill="rgb(220,144,50)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="48.4108%" y="1157" width="0.0736%" height="15" fill="rgb(244,201,11)" fg:x="3945" fg:w="6"/><text x="48.6608%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="48.4354%" y="1141" width="0.0491%" height="15" fill="rgb(249,81,34)" fg:x="3947" fg:w="4"/><text x="48.6854%" y="1151.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::bind_vertex_buffers (1 samples, 0.01%)</title><rect x="48.4845%" y="1365" width="0.0123%" height="15" fill="rgb(205,161,12)" fg:x="3951" fg:w="1"/><text x="48.7345%" y="1375.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_bind_vertex_buffers (1 samples, 0.01%)</title><rect x="48.4845%" y="1349" width="0.0123%" height="15" fill="rgb(252,139,50)" fg:x="3951" fg:w="1"/><text x="48.7345%" y="1359.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_bind_vertex_buffers (1 samples, 0.01%)</title><rect x="48.4845%" y="1333" width="0.0123%" height="15" fill="rgb(205,169,14)" fg:x="3951" fg:w="1"/><text x="48.7345%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.4845%" y="1317" width="0.0123%" height="15" fill="rgb(248,198,33)" fg:x="3951" fg:w="1"/><text x="48.7345%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.4845%" y="1301" width="0.0123%" height="15" fill="rgb(236,23,21)" fg:x="3951" fg:w="1"/><text x="48.7345%" y="1311.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (8 samples, 0.10%)</title><rect x="48.4108%" y="1493" width="0.0982%" height="15" fill="rgb(231,13,38)" fg:x="3945" fg:w="8"/><text x="48.6608%" y="1503.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (8 samples, 0.10%)</title><rect x="48.4108%" y="1477" width="0.0982%" height="15" fill="rgb(239,139,21)" fg:x="3945" fg:w="8"/><text x="48.6608%" y="1487.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (8 samples, 0.10%)</title><rect x="48.4108%" y="1461" width="0.0982%" height="15" fill="rgb(222,164,45)" fg:x="3945" fg:w="8"/><text x="48.6608%" y="1471.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (8 samples, 0.10%)</title><rect x="48.4108%" y="1445" width="0.0982%" height="15" fill="rgb(230,52,27)" fg:x="3945" fg:w="8"/><text x="48.6608%" y="1455.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (8 samples, 0.10%)</title><rect x="48.4108%" y="1429" width="0.0982%" height="15" fill="rgb(227,143,42)" fg:x="3945" fg:w="8"/><text x="48.6608%" y="1439.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (8 samples, 0.10%)</title><rect x="48.4108%" y="1413" width="0.0982%" height="15" fill="rgb(249,127,1)" fg:x="3945" fg:w="8"/><text x="48.6608%" y="1423.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (8 samples, 0.10%)</title><rect x="48.4108%" y="1397" width="0.0982%" height="15" fill="rgb(243,107,26)" fg:x="3945" fg:w="8"/><text x="48.6608%" y="1407.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (8 samples, 0.10%)</title><rect x="48.4108%" y="1381" width="0.0982%" height="15" fill="rgb(225,7,45)" fg:x="3945" fg:w="8"/><text x="48.6608%" y="1391.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::finish (1 samples, 0.01%)</title><rect x="48.4967%" y="1365" width="0.0123%" height="15" fill="rgb(241,88,38)" fg:x="3952" fg:w="1"/><text x="48.7467%" y="1375.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (18 samples, 0.22%)</title><rect x="48.3004%" y="1509" width="0.2209%" height="15" fill="rgb(226,121,9)" fg:x="3936" fg:w="18"/><text x="48.5504%" y="1519.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="48.5090%" y="1493" width="0.0123%" height="15" fill="rgb(253,60,29)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1503.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (1 samples, 0.01%)</title><rect x="48.5090%" y="1477" width="0.0123%" height="15" fill="rgb(244,181,39)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1487.50"></text></g><g><title>wgpu::Device::create_swap_chain (1 samples, 0.01%)</title><rect x="48.5090%" y="1461" width="0.0123%" height="15" fill="rgb(252,203,31)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1471.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (1 samples, 0.01%)</title><rect x="48.5090%" y="1445" width="0.0123%" height="15" fill="rgb(224,120,8)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1455.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (1 samples, 0.01%)</title><rect x="48.5090%" y="1429" width="0.0123%" height="15" fill="rgb(205,171,54)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1439.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::configure_swapchain (1 samples, 0.01%)</title><rect x="48.5090%" y="1413" width="0.0123%" height="15" fill="rgb(235,89,11)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1423.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_backend_vulkan::Device&gt;::create_swapchain (1 samples, 0.01%)</title><rect x="48.5090%" y="1397" width="0.0123%" height="15" fill="rgb(212,180,28)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1407.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (1 samples, 0.01%)</title><rect x="48.5090%" y="1381" width="0.0123%" height="15" fill="rgb(247,84,49)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1391.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::create_swapchain_khr (1 samples, 0.01%)</title><rect x="48.5090%" y="1365" width="0.0123%" height="15" fill="rgb(236,187,52)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1375.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="48.5090%" y="1349" width="0.0123%" height="15" fill="rgb(227,24,15)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1359.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5090%" y="1333" width="0.0123%" height="15" fill="rgb(227,211,13)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5090%" y="1317" width="0.0123%" height="15" fill="rgb(245,52,14)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5090%" y="1301" width="0.0123%" height="15" fill="rgb(225,185,13)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5090%" y="1285" width="0.0123%" height="15" fill="rgb(217,160,29)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5090%" y="1269" width="0.0123%" height="15" fill="rgb(216,115,53)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1279.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5090%" y="1253" width="0.0123%" height="15" fill="rgb(236,99,5)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1263.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5090%" y="1237" width="0.0123%" height="15" fill="rgb(222,60,38)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5090%" y="1221" width="0.0123%" height="15" fill="rgb(212,82,22)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1231.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5090%" y="1205" width="0.0123%" height="15" fill="rgb(214,48,28)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1215.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5090%" y="1189" width="0.0123%" height="15" fill="rgb(245,196,50)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5090%" y="1173" width="0.0123%" height="15" fill="rgb(225,159,46)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1183.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="48.5090%" y="1157" width="0.0123%" height="15" fill="rgb(207,195,48)" fg:x="3953" fg:w="1"/><text x="48.7590%" y="1167.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="48.5213%" y="1509" width="0.0123%" height="15" fill="rgb(240,73,3)" fg:x="3954" fg:w="1"/><text x="48.7713%" y="1519.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::handle_window_created_events (1 samples, 0.01%)</title><rect x="48.5336%" y="1509" width="0.0123%" height="15" fill="rgb(245,57,23)" fg:x="3955" fg:w="1"/><text x="48.7836%" y="1519.50"></text></g><g><title>bevy_app::event::ManualEventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="48.5336%" y="1493" width="0.0123%" height="15" fill="rgb(240,75,18)" fg:x="3955" fg:w="1"/><text x="48.7836%" y="1503.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::draw_indexed (1 samples, 0.01%)</title><rect x="48.5458%" y="1301" width="0.0123%" height="15" fill="rgb(238,168,12)" fg:x="3956" fg:w="1"/><text x="48.7958%" y="1311.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_draw_indexed (1 samples, 0.01%)</title><rect x="48.5458%" y="1285" width="0.0123%" height="15" fill="rgb(226,20,40)" fg:x="3956" fg:w="1"/><text x="48.7958%" y="1295.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_draw_indexed (1 samples, 0.01%)</title><rect x="48.5458%" y="1269" width="0.0123%" height="15" fill="rgb(224,130,35)" fg:x="3956" fg:w="1"/><text x="48.7958%" y="1279.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5458%" y="1253" width="0.0123%" height="15" fill="rgb(225,63,41)" fg:x="3956" fg:w="1"/><text x="48.7958%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5458%" y="1237" width="0.0123%" height="15" fill="rgb(219,3,3)" fg:x="3956" fg:w="1"/><text x="48.7958%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::end_render_pass (3 samples, 0.04%)</title><rect x="48.5581%" y="1301" width="0.0368%" height="15" fill="rgb(218,157,4)" fg:x="3957" fg:w="3"/><text x="48.8081%" y="1311.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_end_render_pass (3 samples, 0.04%)</title><rect x="48.5581%" y="1285" width="0.0368%" height="15" fill="rgb(232,76,36)" fg:x="3957" fg:w="3"/><text x="48.8081%" y="1295.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_end_render_pass (3 samples, 0.04%)</title><rect x="48.5581%" y="1269" width="0.0368%" height="15" fill="rgb(247,36,0)" fg:x="3957" fg:w="3"/><text x="48.8081%" y="1279.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="48.5581%" y="1253" width="0.0368%" height="15" fill="rgb(205,2,34)" fg:x="3957" fg:w="3"/><text x="48.8081%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="48.5581%" y="1237" width="0.0368%" height="15" fill="rgb(239,136,13)" fg:x="3957" fg:w="3"/><text x="48.8081%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="48.5581%" y="1221" width="0.0368%" height="15" fill="rgb(253,122,12)" fg:x="3957" fg:w="3"/><text x="48.8081%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="48.5826%" y="1205" width="0.0123%" height="15" fill="rgb(222,174,7)" fg:x="3959" fg:w="1"/><text x="48.8326%" y="1215.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::Index&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index (1 samples, 0.01%)</title><rect x="48.5949%" y="1301" width="0.0123%" height="15" fill="rgb(208,191,42)" fg:x="3960" fg:w="1"/><text x="48.8449%" y="1311.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.01%)</title><rect x="48.5949%" y="1285" width="0.0123%" height="15" fill="rgb(237,212,15)" fg:x="3960" fg:w="1"/><text x="48.8449%" y="1295.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (1 samples, 0.01%)</title><rect x="48.5949%" y="1269" width="0.0123%" height="15" fill="rgb(215,65,20)" fg:x="3960" fg:w="1"/><text x="48.8449%" y="1279.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::extend (1 samples, 0.01%)</title><rect x="48.6072%" y="1301" width="0.0123%" height="15" fill="rgb(232,103,11)" fg:x="3961" fg:w="1"/><text x="48.8572%" y="1311.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate_for_thread_id (1 samples, 0.01%)</title><rect x="48.6072%" y="1285" width="0.0123%" height="15" fill="rgb(235,148,18)" fg:x="3961" fg:w="1"/><text x="48.8572%" y="1295.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.01%)</title><rect x="48.6072%" y="1269" width="0.0123%" height="15" fill="rgb(240,173,7)" fg:x="3961" fg:w="1"/><text x="48.8572%" y="1279.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="48.6072%" y="1253" width="0.0123%" height="15" fill="rgb(228,182,25)" fg:x="3961" fg:w="1"/><text x="48.8572%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.01%)</title><rect x="48.6072%" y="1237" width="0.0123%" height="15" fill="rgb(247,3,52)" fg:x="3961" fg:w="1"/><text x="48.8572%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="48.6072%" y="1221" width="0.0123%" height="15" fill="rgb(226,155,8)" fg:x="3961" fg:w="1"/><text x="48.8572%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="48.6072%" y="1205" width="0.0123%" height="15" fill="rgb(243,195,38)" fg:x="3961" fg:w="1"/><text x="48.8572%" y="1215.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="48.6072%" y="1189" width="0.0123%" height="15" fill="rgb(254,181,33)" fg:x="3961" fg:w="1"/><text x="48.8572%" y="1199.50"></text></g><g><title>&lt;std::thread::ThreadId as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="48.6072%" y="1173" width="0.0123%" height="15" fill="rgb(232,98,23)" fg:x="3961" fg:w="1"/><text x="48.8572%" y="1183.50"></text></g><g><title>&lt;core::num::nonzero::NonZeroU64 as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="48.6072%" y="1157" width="0.0123%" height="15" fill="rgb(205,23,10)" fg:x="3961" fg:w="1"/><text x="48.8572%" y="1167.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="48.6195%" y="1253" width="0.0123%" height="15" fill="rgb(212,124,38)" fg:x="3962" fg:w="1"/><text x="48.8695%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="48.6195%" y="1237" width="0.0123%" height="15" fill="rgb(228,207,2)" fg:x="3962" fg:w="1"/><text x="48.8695%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="48.6195%" y="1221" width="0.0123%" height="15" fill="rgb(215,120,22)" fg:x="3962" fg:w="1"/><text x="48.8695%" y="1231.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (8 samples, 0.10%)</title><rect x="48.5458%" y="1509" width="0.0982%" height="15" fill="rgb(251,172,33)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1519.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (8 samples, 0.10%)</title><rect x="48.5458%" y="1493" width="0.0982%" height="15" fill="rgb(250,83,2)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1503.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (8 samples, 0.10%)</title><rect x="48.5458%" y="1477" width="0.0982%" height="15" fill="rgb(210,132,53)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1487.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (8 samples, 0.10%)</title><rect x="48.5458%" y="1461" width="0.0982%" height="15" fill="rgb(221,208,36)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1471.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (8 samples, 0.10%)</title><rect x="48.5458%" y="1445" width="0.0982%" height="15" fill="rgb(205,192,46)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1455.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (8 samples, 0.10%)</title><rect x="48.5458%" y="1429" width="0.0982%" height="15" fill="rgb(223,163,14)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1439.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (8 samples, 0.10%)</title><rect x="48.5458%" y="1413" width="0.0982%" height="15" fill="rgb(218,41,28)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1423.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (8 samples, 0.10%)</title><rect x="48.5458%" y="1397" width="0.0982%" height="15" fill="rgb(235,104,10)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1407.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (8 samples, 0.10%)</title><rect x="48.5458%" y="1381" width="0.0982%" height="15" fill="rgb(246,17,4)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1391.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (8 samples, 0.10%)</title><rect x="48.5458%" y="1365" width="0.0982%" height="15" fill="rgb(240,7,16)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1375.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (8 samples, 0.10%)</title><rect x="48.5458%" y="1349" width="0.0982%" height="15" fill="rgb(213,160,23)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1359.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (8 samples, 0.10%)</title><rect x="48.5458%" y="1333" width="0.0982%" height="15" fill="rgb(251,179,49)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1343.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (8 samples, 0.10%)</title><rect x="48.5458%" y="1317" width="0.0982%" height="15" fill="rgb(247,198,10)" fg:x="3956" fg:w="8"/><text x="48.7958%" y="1327.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (2 samples, 0.02%)</title><rect x="48.6195%" y="1301" width="0.0245%" height="15" fill="rgb(220,65,29)" fg:x="3962" fg:w="2"/><text x="48.8695%" y="1311.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (2 samples, 0.02%)</title><rect x="48.6195%" y="1285" width="0.0245%" height="15" fill="rgb(237,171,28)" fg:x="3962" fg:w="2"/><text x="48.8695%" y="1295.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (2 samples, 0.02%)</title><rect x="48.6195%" y="1269" width="0.0245%" height="15" fill="rgb(228,44,26)" fg:x="3962" fg:w="2"/><text x="48.8695%" y="1279.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="48.6317%" y="1253" width="0.0123%" height="15" fill="rgb(216,210,27)" fg:x="3963" fg:w="1"/><text x="48.8817%" y="1263.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="48.6317%" y="1237" width="0.0123%" height="15" fill="rgb(252,10,17)" fg:x="3963" fg:w="1"/><text x="48.8817%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="48.6317%" y="1221" width="0.0123%" height="15" fill="rgb(214,172,30)" fg:x="3963" fg:w="1"/><text x="48.8817%" y="1231.50"></text></g><g><title>bevy_winit::change_window (1 samples, 0.01%)</title><rect x="48.6440%" y="1509" width="0.0123%" height="15" fill="rgb(253,130,48)" fg:x="3964" fg:w="1"/><text x="48.8940%" y="1519.50"></text></g><g><title>bevy_winit::handle_create_window_events (1 samples, 0.01%)</title><rect x="48.6563%" y="1509" width="0.0123%" height="15" fill="rgb(226,99,43)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1519.50"></text></g><g><title>bevy_winit::winit_windows::WinitWindows::create_window (1 samples, 0.01%)</title><rect x="48.6563%" y="1493" width="0.0123%" height="15" fill="rgb(239,111,26)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1503.50"></text></g><g><title>winit::window::WindowBuilder::build (1 samples, 0.01%)</title><rect x="48.6563%" y="1477" width="0.0123%" height="15" fill="rgb(240,27,53)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1487.50"></text></g><g><title>winit::platform_impl::platform::Window::new (1 samples, 0.01%)</title><rect x="48.6563%" y="1461" width="0.0123%" height="15" fill="rgb(254,163,12)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1471.50"></text></g><g><title>winit::platform_impl::platform::x11::Window::new (1 samples, 0.01%)</title><rect x="48.6563%" y="1445" width="0.0123%" height="15" fill="rgb(225,51,48)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1455.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::new (1 samples, 0.01%)</title><rect x="48.6563%" y="1429" width="0.0123%" height="15" fill="rgb(205,19,32)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1439.50"></text></g><g><title>winit::platform_impl::platform::x11::monitor::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::available_monitors (1 samples, 0.01%)</title><rect x="48.6563%" y="1413" width="0.0123%" height="15" fill="rgb(218,119,26)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1423.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.01%)</title><rect x="48.6563%" y="1397" width="0.0123%" height="15" fill="rgb(231,173,33)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1407.50"></text></g><g><title>winit::platform_impl::platform::x11::monitor::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::available_monitors::{{closure}} (1 samples, 0.01%)</title><rect x="48.6563%" y="1381" width="0.0123%" height="15" fill="rgb(241,100,29)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1391.50"></text></g><g><title>winit::platform_impl::platform::x11::monitor::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::query_monitor_list (1 samples, 0.01%)</title><rect x="48.6563%" y="1365" width="0.0123%" height="15" fill="rgb(250,194,34)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1375.50"></text></g><g><title>XRRGetOutputPrimary (1 samples, 0.01%)</title><rect x="48.6563%" y="1349" width="0.0123%" height="15" fill="rgb(215,23,50)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1359.50"></text></g><g><title>_XReply (1 samples, 0.01%)</title><rect x="48.6563%" y="1333" width="0.0123%" height="15" fill="rgb(206,49,37)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1343.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="48.6563%" y="1317" width="0.0123%" height="15" fill="rgb(247,39,21)" fg:x="3965" fg:w="1"/><text x="48.9063%" y="1327.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (1 samples, 0.01%)</title><rect x="48.6685%" y="1221" width="0.0123%" height="15" fill="rgb(209,220,15)" fg:x="3966" fg:w="1"/><text x="48.9185%" y="1231.50"></text></g><g><title>async_executor::LocalExecutor::inner (1 samples, 0.01%)</title><rect x="48.6685%" y="1205" width="0.0123%" height="15" fill="rgb(206,41,33)" fg:x="3966" fg:w="1"/><text x="48.9185%" y="1215.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.01%)</title><rect x="48.6685%" y="1189" width="0.0123%" height="15" fill="rgb(221,225,45)" fg:x="3966" fg:w="1"/><text x="48.9185%" y="1199.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.01%)</title><rect x="48.6685%" y="1173" width="0.0123%" height="15" fill="rgb(216,27,18)" fg:x="3966" fg:w="1"/><text x="48.9185%" y="1183.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (3 samples, 0.04%)</title><rect x="48.6685%" y="1301" width="0.0368%" height="15" fill="rgb(250,193,34)" fg:x="3966" fg:w="3"/><text x="48.9185%" y="1311.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (3 samples, 0.04%)</title><rect x="48.6685%" y="1285" width="0.0368%" height="15" fill="rgb(227,215,20)" fg:x="3966" fg:w="3"/><text x="48.9185%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3 samples, 0.04%)</title><rect x="48.6685%" y="1269" width="0.0368%" height="15" fill="rgb(242,211,27)" fg:x="3966" fg:w="3"/><text x="48.9185%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="48.6685%" y="1253" width="0.0368%" height="15" fill="rgb(229,190,30)" fg:x="3966" fg:w="3"/><text x="48.9185%" y="1263.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (3 samples, 0.04%)</title><rect x="48.6685%" y="1237" width="0.0368%" height="15" fill="rgb(253,31,29)" fg:x="3966" fg:w="3"/><text x="48.9185%" y="1247.50"></text></g><g><title>futures_lite::future::block_on (2 samples, 0.02%)</title><rect x="48.6808%" y="1221" width="0.0245%" height="15" fill="rgb(229,177,52)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="48.6808%" y="1205" width="0.0245%" height="15" fill="rgb(226,88,8)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="48.6808%" y="1189" width="0.0245%" height="15" fill="rgb(214,55,27)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1199.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (2 samples, 0.02%)</title><rect x="48.6808%" y="1173" width="0.0245%" height="15" fill="rgb(233,202,5)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1183.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="48.6808%" y="1157" width="0.0245%" height="15" fill="rgb(251,49,30)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1167.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="48.6808%" y="1141" width="0.0245%" height="15" fill="rgb(235,18,52)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1151.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="48.6808%" y="1125" width="0.0245%" height="15" fill="rgb(250,111,51)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1135.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (2 samples, 0.02%)</title><rect x="48.6808%" y="1109" width="0.0245%" height="15" fill="rgb(218,13,25)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1119.50"></text></g><g><title>async_task::header::Header::register (2 samples, 0.02%)</title><rect x="48.6808%" y="1093" width="0.0245%" height="15" fill="rgb(248,96,7)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1103.50"></text></g><g><title>async_task::utils::abort_on_panic (2 samples, 0.02%)</title><rect x="48.6808%" y="1077" width="0.0245%" height="15" fill="rgb(217,31,15)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1087.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (2 samples, 0.02%)</title><rect x="48.6808%" y="1061" width="0.0245%" height="15" fill="rgb(228,59,49)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (2 samples, 0.02%)</title><rect x="48.6808%" y="1045" width="0.0245%" height="15" fill="rgb(210,152,38)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2 samples, 0.02%)</title><rect x="48.6808%" y="1029" width="0.0245%" height="15" fill="rgb(206,71,11)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1039.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="48.6808%" y="1013" width="0.0245%" height="15" fill="rgb(244,199,5)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1023.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (2 samples, 0.02%)</title><rect x="48.6808%" y="997" width="0.0245%" height="15" fill="rgb(253,49,1)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="1007.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="48.6808%" y="981" width="0.0245%" height="15" fill="rgb(225,206,40)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="48.6808%" y="965" width="0.0245%" height="15" fill="rgb(243,116,47)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="48.6808%" y="949" width="0.0245%" height="15" fill="rgb(219,225,16)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="48.6808%" y="933" width="0.0245%" height="15" fill="rgb(233,29,47)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="48.6808%" y="917" width="0.0245%" height="15" fill="rgb(250,179,18)" fg:x="3967" fg:w="2"/><text x="48.9308%" y="927.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (1 samples, 0.01%)</title><rect x="48.7054%" y="1237" width="0.0123%" height="15" fill="rgb(215,176,6)" fg:x="3969" fg:w="1"/><text x="48.9554%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (2 samples, 0.02%)</title><rect x="48.7054%" y="1269" width="0.0245%" height="15" fill="rgb(214,117,39)" fg:x="3969" fg:w="2"/><text x="48.9554%" y="1279.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (2 samples, 0.02%)</title><rect x="48.7054%" y="1253" width="0.0245%" height="15" fill="rgb(247,183,36)" fg:x="3969" fg:w="2"/><text x="48.9554%" y="1263.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (1 samples, 0.01%)</title><rect x="48.7176%" y="1237" width="0.0123%" height="15" fill="rgb(237,200,3)" fg:x="3970" fg:w="1"/><text x="48.9676%" y="1247.50"></text></g><g><title>bevy_ecs::archetype::Archetype::swap_remove (1 samples, 0.01%)</title><rect x="48.7176%" y="1221" width="0.0123%" height="15" fill="rgb(212,220,24)" fg:x="3970" fg:w="1"/><text x="48.9676%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (1 samples, 0.01%)</title><rect x="48.7176%" y="1205" width="0.0123%" height="15" fill="rgb(245,216,20)" fg:x="3970" fg:w="1"/><text x="48.9676%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::set_len (1 samples, 0.01%)</title><rect x="48.7176%" y="1189" width="0.0123%" height="15" fill="rgb(219,124,7)" fg:x="3970" fg:w="1"/><text x="48.9676%" y="1199.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (6 samples, 0.07%)</title><rect x="48.6685%" y="1349" width="0.0736%" height="15" fill="rgb(227,167,8)" fg:x="3966" fg:w="6"/><text x="48.9185%" y="1359.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (6 samples, 0.07%)</title><rect x="48.6685%" y="1333" width="0.0736%" height="15" fill="rgb(241,37,2)" fg:x="3966" fg:w="6"/><text x="48.9185%" y="1343.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (6 samples, 0.07%)</title><rect x="48.6685%" y="1317" width="0.0736%" height="15" fill="rgb(238,134,33)" fg:x="3966" fg:w="6"/><text x="48.9185%" y="1327.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (3 samples, 0.04%)</title><rect x="48.7054%" y="1301" width="0.0368%" height="15" fill="rgb(248,48,27)" fg:x="3969" fg:w="3"/><text x="48.9554%" y="1311.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (3 samples, 0.04%)</title><rect x="48.7054%" y="1285" width="0.0368%" height="15" fill="rgb(212,14,16)" fg:x="3969" fg:w="3"/><text x="48.9554%" y="1295.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertBundle&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (1 samples, 0.01%)</title><rect x="48.7299%" y="1269" width="0.0123%" height="15" fill="rgb(217,205,37)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1279.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (1 samples, 0.01%)</title><rect x="48.7299%" y="1253" width="0.0123%" height="15" fill="rgb(233,185,47)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1263.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (1 samples, 0.01%)</title><rect x="48.7299%" y="1237" width="0.0123%" height="15" fill="rgb(244,88,8)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1247.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (1 samples, 0.01%)</title><rect x="48.7299%" y="1221" width="0.0123%" height="15" fill="rgb(213,0,20)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1231.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info::{{closure}} (1 samples, 0.01%)</title><rect x="48.7299%" y="1205" width="0.0123%" height="15" fill="rgb(238,159,36)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1215.50"></text></g><g><title>bevy_ecs::bundle::initialize_bundle (1 samples, 0.01%)</title><rect x="48.7299%" y="1189" width="0.0123%" height="15" fill="rgb(253,173,17)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="48.7299%" y="1173" width="0.0123%" height="15" fill="rgb(221,23,28)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="48.7299%" y="1157" width="0.0123%" height="15" fill="rgb(218,113,15)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="48.7299%" y="1141" width="0.0123%" height="15" fill="rgb(233,58,3)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="48.7299%" y="1125" width="0.0123%" height="15" fill="rgb(250,46,35)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="48.7299%" y="1109" width="0.0123%" height="15" fill="rgb(210,169,11)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1119.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="48.7299%" y="1093" width="0.0123%" height="15" fill="rgb(246,88,19)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1103.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="48.7299%" y="1077" width="0.0123%" height="15" fill="rgb(206,81,49)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1087.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="48.7299%" y="1061" width="0.0123%" height="15" fill="rgb(232,144,18)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1071.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="48.7299%" y="1045" width="0.0123%" height="15" fill="rgb(235,2,27)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1055.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="48.7299%" y="1029" width="0.0123%" height="15" fill="rgb(239,157,39)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1039.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="48.7299%" y="1013" width="0.0123%" height="15" fill="rgb(220,11,17)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1023.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="48.7299%" y="997" width="0.0123%" height="15" fill="rgb(243,94,50)" fg:x="3971" fg:w="1"/><text x="48.9799%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::LOCAL_EXECUTOR::__getit (2 samples, 0.02%)</title><rect x="48.7422%" y="1269" width="0.0245%" height="15" fill="rgb(218,22,0)" fg:x="3972" fg:w="2"/><text x="48.9922%" y="1279.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="48.7422%" y="1253" width="0.0245%" height="15" fill="rgb(249,70,21)" fg:x="3972" fg:w="2"/><text x="48.9922%" y="1263.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="48.7422%" y="1237" width="0.0245%" height="15" fill="rgb(245,111,46)" fg:x="3972" fg:w="2"/><text x="48.9922%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="48.7422%" y="1221" width="0.0245%" height="15" fill="rgb(244,183,12)" fg:x="3972" fg:w="2"/><text x="48.9922%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="48.9262%" y="1221" width="0.0123%" height="15" fill="rgb(207,117,0)" fg:x="3987" fg:w="1"/><text x="49.1762%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (5 samples, 0.06%)</title><rect x="48.9631%" y="1205" width="0.0614%" height="15" fill="rgb(206,20,43)" fg:x="3990" fg:w="5"/><text x="49.2131%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (5 samples, 0.06%)</title><rect x="48.9631%" y="1189" width="0.0614%" height="15" fill="rgb(221,104,11)" fg:x="3990" fg:w="5"/><text x="49.2131%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (5 samples, 0.06%)</title><rect x="48.9631%" y="1173" width="0.0614%" height="15" fill="rgb(254,36,50)" fg:x="3990" fg:w="5"/><text x="49.2131%" y="1183.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.22%)</title><rect x="48.9385%" y="1221" width="0.2209%" height="15" fill="rgb(252,17,15)" fg:x="3988" fg:w="18"/><text x="49.1885%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.13%)</title><rect x="49.0244%" y="1205" width="0.1350%" height="15" fill="rgb(219,129,43)" fg:x="3995" fg:w="11"/><text x="49.2744%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.13%)</title><rect x="49.0244%" y="1189" width="0.1350%" height="15" fill="rgb(205,34,45)" fg:x="3995" fg:w="11"/><text x="49.2744%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="49.1594%" y="1205" width="0.0245%" height="15" fill="rgb(251,201,32)" fg:x="4006" fg:w="2"/><text x="49.4094%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="49.1594%" y="1189" width="0.0245%" height="15" fill="rgb(205,56,0)" fg:x="4006" fg:w="2"/><text x="49.4094%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="49.1594%" y="1173" width="0.0245%" height="15" fill="rgb(211,193,27)" fg:x="4006" fg:w="2"/><text x="49.4094%" y="1183.50"></text></g><g><title>&lt;async_channel::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.07%)</title><rect x="49.1594%" y="1221" width="0.0736%" height="15" fill="rgb(231,100,42)" fg:x="4006" fg:w="6"/><text x="49.4094%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (4 samples, 0.05%)</title><rect x="49.1839%" y="1205" width="0.0491%" height="15" fill="rgb(245,85,27)" fg:x="4008" fg:w="4"/><text x="49.4339%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_add (4 samples, 0.05%)</title><rect x="49.1839%" y="1189" width="0.0491%" height="15" fill="rgb(241,76,24)" fg:x="4008" fg:w="4"/><text x="49.4339%" y="1199.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (1 samples, 0.01%)</title><rect x="49.2330%" y="1221" width="0.0123%" height="15" fill="rgb(249,157,15)" fg:x="4012" fg:w="1"/><text x="49.4830%" y="1231.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="49.3067%" y="997" width="0.0123%" height="15" fill="rgb(222,218,25)" fg:x="4018" fg:w="1"/><text x="49.5567%" y="1007.50"></text></g><g><title>_int_free (4 samples, 0.05%)</title><rect x="49.3189%" y="997" width="0.0491%" height="15" fill="rgb(252,156,52)" fg:x="4019" fg:w="4"/><text x="49.5689%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.16%)</title><rect x="49.2698%" y="1109" width="0.1595%" height="15" fill="rgb(211,185,7)" fg:x="4015" fg:w="13"/><text x="49.5198%" y="1119.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.16%)</title><rect x="49.2698%" y="1093" width="0.1595%" height="15" fill="rgb(234,108,24)" fg:x="4015" fg:w="13"/><text x="49.5198%" y="1103.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.16%)</title><rect x="49.2698%" y="1077" width="0.1595%" height="15" fill="rgb(227,218,2)" fg:x="4015" fg:w="13"/><text x="49.5198%" y="1087.50"></text></g><g><title>__rdl_realloc (13 samples, 0.16%)</title><rect x="49.2698%" y="1061" width="0.1595%" height="15" fill="rgb(224,0,36)" fg:x="4015" fg:w="13"/><text x="49.5198%" y="1071.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (13 samples, 0.16%)</title><rect x="49.2698%" y="1045" width="0.1595%" height="15" fill="rgb(233,201,10)" fg:x="4015" fg:w="13"/><text x="49.5198%" y="1055.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.16%)</title><rect x="49.2698%" y="1029" width="0.1595%" height="15" fill="rgb(252,209,14)" fg:x="4015" fg:w="13"/><text x="49.5198%" y="1039.50"></text></g><g><title>_int_realloc (11 samples, 0.13%)</title><rect x="49.2944%" y="1013" width="0.1350%" height="15" fill="rgb(205,93,49)" fg:x="4017" fg:w="11"/><text x="49.5444%" y="1023.50"></text></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="49.3680%" y="997" width="0.0614%" height="15" fill="rgb(234,116,45)" fg:x="4023" fg:w="5"/><text x="49.6180%" y="1007.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="49.4171%" y="981" width="0.0123%" height="15" fill="rgb(248,89,35)" fg:x="4027" fg:w="1"/><text x="49.6671%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (14 samples, 0.17%)</title><rect x="49.2698%" y="1205" width="0.1718%" height="15" fill="rgb(233,167,45)" fg:x="4015" fg:w="14"/><text x="49.5198%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.17%)</title><rect x="49.2698%" y="1189" width="0.1718%" height="15" fill="rgb(248,228,14)" fg:x="4015" fg:w="14"/><text x="49.5198%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.17%)</title><rect x="49.2698%" y="1173" width="0.1718%" height="15" fill="rgb(246,91,14)" fg:x="4015" fg:w="14"/><text x="49.5198%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.17%)</title><rect x="49.2698%" y="1157" width="0.1718%" height="15" fill="rgb(227,142,5)" fg:x="4015" fg:w="14"/><text x="49.5198%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (14 samples, 0.17%)</title><rect x="49.2698%" y="1141" width="0.1718%" height="15" fill="rgb(221,63,33)" fg:x="4015" fg:w="14"/><text x="49.5198%" y="1151.50"></text></g><g><title>alloc::raw_vec::finish_grow (14 samples, 0.17%)</title><rect x="49.2698%" y="1125" width="0.1718%" height="15" fill="rgb(233,49,0)" fg:x="4015" fg:w="14"/><text x="49.5198%" y="1135.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="49.4294%" y="1109" width="0.0123%" height="15" fill="rgb(251,115,38)" fg:x="4028" fg:w="1"/><text x="49.6794%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="49.4416%" y="1189" width="0.0245%" height="15" fill="rgb(231,214,32)" fg:x="4029" fg:w="2"/><text x="49.6916%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="49.4416%" y="1173" width="0.0245%" height="15" fill="rgb(248,73,46)" fg:x="4029" fg:w="2"/><text x="49.6916%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="49.4416%" y="1157" width="0.0245%" height="15" fill="rgb(237,156,4)" fg:x="4029" fg:w="2"/><text x="49.6916%" y="1167.50"></text></g><g><title>async_executor::Executor::schedule (3 samples, 0.04%)</title><rect x="49.4662%" y="1189" width="0.0368%" height="15" fill="rgb(227,132,2)" fg:x="4031" fg:w="3"/><text x="49.7162%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="49.4662%" y="1173" width="0.0368%" height="15" fill="rgb(248,161,9)" fg:x="4031" fg:w="3"/><text x="49.7162%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.04%)</title><rect x="49.4662%" y="1157" width="0.0368%" height="15" fill="rgb(238,77,38)" fg:x="4031" fg:w="3"/><text x="49.7162%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.04%)</title><rect x="49.4662%" y="1141" width="0.0368%" height="15" fill="rgb(222,166,40)" fg:x="4031" fg:w="3"/><text x="49.7162%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (6 samples, 0.07%)</title><rect x="49.5153%" y="1125" width="0.0736%" height="15" fill="rgb(214,168,45)" fg:x="4035" fg:w="6"/><text x="49.7653%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.07%)</title><rect x="49.5153%" y="1109" width="0.0736%" height="15" fill="rgb(226,64,37)" fg:x="4035" fg:w="6"/><text x="49.7653%" y="1119.50"></text></g><g><title>core::task::wake::Waker::wake (2 samples, 0.02%)</title><rect x="49.5889%" y="1125" width="0.0245%" height="15" fill="rgb(232,210,43)" fg:x="4041" fg:w="2"/><text x="49.8389%" y="1135.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (2 samples, 0.02%)</title><rect x="49.5889%" y="1109" width="0.0245%" height="15" fill="rgb(214,76,33)" fg:x="4041" fg:w="2"/><text x="49.8389%" y="1119.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (2 samples, 0.02%)</title><rect x="49.5889%" y="1093" width="0.0245%" height="15" fill="rgb(210,78,5)" fg:x="4041" fg:w="2"/><text x="49.8389%" y="1103.50"></text></g><g><title>parking::Unparker::unpark (2 samples, 0.02%)</title><rect x="49.5889%" y="1077" width="0.0245%" height="15" fill="rgb(211,107,37)" fg:x="4041" fg:w="2"/><text x="49.8389%" y="1087.50"></text></g><g><title>async_executor::State::notify (9 samples, 0.11%)</title><rect x="49.5153%" y="1141" width="0.1104%" height="15" fill="rgb(249,67,16)" fg:x="4035" fg:w="9"/><text x="49.7653%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="49.6134%" y="1125" width="0.0123%" height="15" fill="rgb(222,114,31)" fg:x="4043" fg:w="1"/><text x="49.8634%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="49.6134%" y="1109" width="0.0123%" height="15" fill="rgb(242,118,19)" fg:x="4043" fg:w="1"/><text x="49.8634%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="49.6134%" y="1093" width="0.0123%" height="15" fill="rgb(223,115,1)" fg:x="4043" fg:w="1"/><text x="49.8634%" y="1103.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="49.6134%" y="1077" width="0.0123%" height="15" fill="rgb(241,182,54)" fg:x="4043" fg:w="1"/><text x="49.8634%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.13%)</title><rect x="49.6380%" y="1109" width="0.1350%" height="15" fill="rgb(244,166,36)" fg:x="4045" fg:w="11"/><text x="49.8880%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.13%)</title><rect x="49.6380%" y="1093" width="0.1350%" height="15" fill="rgb(241,52,43)" fg:x="4045" fg:w="11"/><text x="49.8880%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="49.7730%" y="1109" width="0.0123%" height="15" fill="rgb(236,82,9)" fg:x="4056" fg:w="1"/><text x="50.0230%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="49.7730%" y="1093" width="0.0123%" height="15" fill="rgb(241,119,0)" fg:x="4056" fg:w="1"/><text x="50.0230%" y="1103.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (29 samples, 0.36%)</title><rect x="49.5153%" y="1157" width="0.3559%" height="15" fill="rgb(221,19,22)" fg:x="4035" fg:w="29"/><text x="49.7653%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (20 samples, 0.25%)</title><rect x="49.6257%" y="1141" width="0.2454%" height="15" fill="rgb(254,144,35)" fg:x="4044" fg:w="20"/><text x="49.8757%" y="1151.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (20 samples, 0.25%)</title><rect x="49.6257%" y="1125" width="0.2454%" height="15" fill="rgb(246,132,30)" fg:x="4044" fg:w="20"/><text x="49.8757%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (7 samples, 0.09%)</title><rect x="49.7852%" y="1109" width="0.0859%" height="15" fill="rgb(234,69,28)" fg:x="4057" fg:w="7"/><text x="50.0352%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_or (7 samples, 0.09%)</title><rect x="49.7852%" y="1093" width="0.0859%" height="15" fill="rgb(219,106,47)" fg:x="4057" fg:w="7"/><text x="50.0352%" y="1103.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (10 samples, 0.12%)</title><rect x="49.8711%" y="1157" width="0.1227%" height="15" fill="rgb(218,79,24)" fg:x="4064" fg:w="10"/><text x="50.1211%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.12%)</title><rect x="49.8711%" y="1141" width="0.1227%" height="15" fill="rgb(225,26,21)" fg:x="4064" fg:w="10"/><text x="50.1211%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.12%)</title><rect x="49.8711%" y="1125" width="0.1227%" height="15" fill="rgb(217,68,49)" fg:x="4064" fg:w="10"/><text x="50.1211%" y="1135.50"></text></g><g><title>async_task::runnable::Runnable::schedule (47 samples, 0.58%)</title><rect x="49.5030%" y="1189" width="0.5768%" height="15" fill="rgb(220,204,28)" fg:x="4034" fg:w="47"/><text x="49.7530%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (47 samples, 0.58%)</title><rect x="49.5030%" y="1173" width="0.5768%" height="15" fill="rgb(237,208,43)" fg:x="4034" fg:w="47"/><text x="49.7530%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (7 samples, 0.09%)</title><rect x="49.9939%" y="1157" width="0.0859%" height="15" fill="rgb(213,97,42)" fg:x="4074" fg:w="7"/><text x="50.2439%" y="1167.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (7 samples, 0.09%)</title><rect x="49.9939%" y="1141" width="0.0859%" height="15" fill="rgb(238,96,52)" fg:x="4074" fg:w="7"/><text x="50.2439%" y="1151.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (7 samples, 0.09%)</title><rect x="49.9939%" y="1125" width="0.0859%" height="15" fill="rgb(228,14,13)" fg:x="4074" fg:w="7"/><text x="50.2439%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.09%)</title><rect x="49.9939%" y="1109" width="0.0859%" height="15" fill="rgb(219,123,13)" fg:x="4074" fg:w="7"/><text x="50.2439%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.09%)</title><rect x="49.9939%" y="1093" width="0.0859%" height="15" fill="rgb(216,144,17)" fg:x="4074" fg:w="7"/><text x="50.2439%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::waker (22 samples, 0.27%)</title><rect x="50.0798%" y="1189" width="0.2700%" height="15" fill="rgb(230,228,29)" fg:x="4081" fg:w="22"/><text x="50.3298%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (21 samples, 0.26%)</title><rect x="50.0920%" y="1173" width="0.2577%" height="15" fill="rgb(233,18,5)" fg:x="4082" fg:w="21"/><text x="50.3420%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.26%)</title><rect x="50.0920%" y="1157" width="0.2577%" height="15" fill="rgb(233,197,12)" fg:x="4082" fg:w="21"/><text x="50.3420%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.26%)</title><rect x="50.0920%" y="1141" width="0.2577%" height="15" fill="rgb(234,140,29)" fg:x="4082" fg:w="21"/><text x="50.3420%" y="1151.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="50.3497%" y="1173" width="0.0245%" height="15" fill="rgb(233,113,19)" fg:x="4103" fg:w="2"/><text x="50.5997%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (54 samples, 0.66%)</title><rect x="50.3743%" y="1157" width="0.6627%" height="15" fill="rgb(246,209,13)" fg:x="4105" fg:w="54"/><text x="50.6243%" y="1167.50"></text></g><g><title>__rdl_alloc (54 samples, 0.66%)</title><rect x="50.3743%" y="1141" width="0.6627%" height="15" fill="rgb(242,79,54)" fg:x="4105" fg:w="54"/><text x="50.6243%" y="1151.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (54 samples, 0.66%)</title><rect x="50.3743%" y="1125" width="0.6627%" height="15" fill="rgb(219,73,16)" fg:x="4105" fg:w="54"/><text x="50.6243%" y="1135.50"></text></g><g><title>__GI___libc_malloc (54 samples, 0.66%)</title><rect x="50.3743%" y="1109" width="0.6627%" height="15" fill="rgb(224,52,10)" fg:x="4105" fg:w="54"/><text x="50.6243%" y="1119.50"></text></g><g><title>_int_malloc (35 samples, 0.43%)</title><rect x="50.6074%" y="1093" width="0.4295%" height="15" fill="rgb(237,179,5)" fg:x="4124" fg:w="35"/><text x="50.8574%" y="1103.50"></text></g><g><title>unlink_chunk.constprop.0 (10 samples, 0.12%)</title><rect x="50.9142%" y="1077" width="0.1227%" height="15" fill="rgb(231,20,6)" fg:x="4149" fg:w="10"/><text x="51.1642%" y="1087.50"></text></g><g><title>async_task::runnable::spawn_unchecked (57 samples, 0.70%)</title><rect x="50.3497%" y="1189" width="0.6995%" height="15" fill="rgb(253,171,45)" fg:x="4103" fg:w="57"/><text x="50.5997%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (55 samples, 0.67%)</title><rect x="50.3743%" y="1173" width="0.6749%" height="15" fill="rgb(230,75,49)" fg:x="4105" fg:w="55"/><text x="50.6243%" y="1183.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="51.0369%" y="1157" width="0.0123%" height="15" fill="rgb(216,83,46)" fg:x="4159" fg:w="1"/><text x="51.2869%" y="1167.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="51.0369%" y="1141" width="0.0123%" height="15" fill="rgb(236,56,9)" fg:x="4159" fg:w="1"/><text x="51.2869%" y="1151.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="51.0369%" y="1125" width="0.0123%" height="15" fill="rgb(215,28,34)" fg:x="4159" fg:w="1"/><text x="51.2869%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (5 samples, 0.06%)</title><rect x="51.0492%" y="1189" width="0.0614%" height="15" fill="rgb(230,222,20)" fg:x="4160" fg:w="5"/><text x="51.2992%" y="1199.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="51.0492%" y="1173" width="0.0614%" height="15" fill="rgb(235,209,51)" fg:x="4160" fg:w="5"/><text x="51.2992%" y="1183.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (5 samples, 0.06%)</title><rect x="51.0492%" y="1157" width="0.0614%" height="15" fill="rgb(235,167,1)" fg:x="4160" fg:w="5"/><text x="51.2992%" y="1167.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (5 samples, 0.06%)</title><rect x="51.0492%" y="1141" width="0.0614%" height="15" fill="rgb(248,220,0)" fg:x="4160" fg:w="5"/><text x="51.2992%" y="1151.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (5 samples, 0.06%)</title><rect x="51.0492%" y="1125" width="0.0614%" height="15" fill="rgb(239,0,18)" fg:x="4160" fg:w="5"/><text x="51.2992%" y="1135.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (4 samples, 0.05%)</title><rect x="51.1106%" y="1189" width="0.0491%" height="15" fill="rgb(229,179,11)" fg:x="4165" fg:w="4"/><text x="51.3606%" y="1199.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (4 samples, 0.05%)</title><rect x="51.1106%" y="1173" width="0.0491%" height="15" fill="rgb(226,116,53)" fg:x="4165" fg:w="4"/><text x="51.3606%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;slab::Entry&lt;core::task::wake::Waker&gt;&gt; (1 samples, 0.01%)</title><rect x="51.1474%" y="1157" width="0.0123%" height="15" fill="rgb(218,1,49)" fg:x="4168" fg:w="1"/><text x="51.3974%" y="1167.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (162 samples, 1.99%)</title><rect x="49.2453%" y="1221" width="1.9880%" height="15" fill="rgb(208,184,47)" fg:x="4013" fg:w="162"/><text x="49.4953%" y="1231.50">b..</text></g><g><title>async_executor::Executor::spawn (146 samples, 1.79%)</title><rect x="49.4416%" y="1205" width="1.7916%" height="15" fill="rgb(238,174,3)" fg:x="4029" fg:w="146"/><text x="49.6916%" y="1215.50">a..</text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.07%)</title><rect x="51.1597%" y="1189" width="0.0736%" height="15" fill="rgb(247,188,6)" fg:x="4169" fg:w="6"/><text x="51.4097%" y="1199.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (6 samples, 0.07%)</title><rect x="51.1597%" y="1173" width="0.0736%" height="15" fill="rgb(211,165,46)" fg:x="4169" fg:w="6"/><text x="51.4097%" y="1183.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (6 samples, 0.07%)</title><rect x="51.1597%" y="1157" width="0.0736%" height="15" fill="rgb(222,190,10)" fg:x="4169" fg:w="6"/><text x="51.4097%" y="1167.50"></text></g><g><title>__GI___pthread_mutex_lock (6 samples, 0.07%)</title><rect x="51.1597%" y="1141" width="0.0736%" height="15" fill="rgb(206,185,3)" fg:x="4169" fg:w="6"/><text x="51.4097%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (5 samples, 0.06%)</title><rect x="51.2333%" y="1205" width="0.0614%" height="15" fill="rgb(244,125,37)" fg:x="4175" fg:w="5"/><text x="51.4833%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (5 samples, 0.06%)</title><rect x="51.2333%" y="1189" width="0.0614%" height="15" fill="rgb(211,43,7)" fg:x="4175" fg:w="5"/><text x="51.4833%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="51.2701%" y="1173" width="0.0245%" height="15" fill="rgb(250,41,42)" fg:x="4178" fg:w="2"/><text x="51.5201%" y="1183.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (7 samples, 0.09%)</title><rect x="51.2333%" y="1221" width="0.0859%" height="15" fill="rgb(254,54,42)" fg:x="4175" fg:w="7"/><text x="51.4833%" y="1231.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.02%)</title><rect x="51.2946%" y="1205" width="0.0245%" height="15" fill="rgb(213,71,43)" fg:x="4180" fg:w="2"/><text x="51.5446%" y="1215.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (204 samples, 2.50%)</title><rect x="48.8281%" y="1237" width="2.5034%" height="15" fill="rgb(249,3,44)" fg:x="3979" fg:w="204"/><text x="49.0781%" y="1247.50">be..</text></g><g><title>fixedbitset::FixedBitSet::insert (1 samples, 0.01%)</title><rect x="51.3192%" y="1221" width="0.0123%" height="15" fill="rgb(229,80,41)" fg:x="4182" fg:w="1"/><text x="51.5692%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="51.3315%" y="1221" width="0.0245%" height="15" fill="rgb(231,25,28)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="51.3315%" y="1205" width="0.0245%" height="15" fill="rgb(208,79,48)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="51.3315%" y="1189" width="0.0245%" height="15" fill="rgb(207,196,38)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="51.3315%" y="1173" width="0.0245%" height="15" fill="rgb(228,105,49)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="51.3315%" y="1157" width="0.0245%" height="15" fill="rgb(237,99,15)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="51.3315%" y="1141" width="0.0245%" height="15" fill="rgb(224,207,46)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="51.3315%" y="1125" width="0.0245%" height="15" fill="rgb(249,117,50)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1135.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="51.3315%" y="1109" width="0.0245%" height="15" fill="rgb(248,17,13)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="51.3315%" y="1093" width="0.0245%" height="15" fill="rgb(228,187,36)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1103.50"></text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="51.3315%" y="1077" width="0.0245%" height="15" fill="rgb(234,132,20)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1087.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="51.3315%" y="1061" width="0.0245%" height="15" fill="rgb(209,170,46)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1071.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="51.3315%" y="1045" width="0.0245%" height="15" fill="rgb(237,23,19)" fg:x="4183" fg:w="2"/><text x="51.5815%" y="1055.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="51.3437%" y="1029" width="0.0123%" height="15" fill="rgb(227,21,26)" fg:x="4184" fg:w="1"/><text x="51.5937%" y="1039.50"></text></g><g><title>async_executor::Executor::schedule (1 samples, 0.01%)</title><rect x="51.3805%" y="1205" width="0.0123%" height="15" fill="rgb(222,220,48)" fg:x="4187" fg:w="1"/><text x="51.6305%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="51.3805%" y="1189" width="0.0123%" height="15" fill="rgb(214,9,16)" fg:x="4187" fg:w="1"/><text x="51.6305%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="51.3805%" y="1173" width="0.0123%" height="15" fill="rgb(209,73,30)" fg:x="4187" fg:w="1"/><text x="51.6305%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="51.3805%" y="1157" width="0.0123%" height="15" fill="rgb(207,20,33)" fg:x="4187" fg:w="1"/><text x="51.6305%" y="1167.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="51.3928%" y="1157" width="0.0123%" height="15" fill="rgb(219,153,12)" fg:x="4188" fg:w="1"/><text x="51.6428%" y="1167.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="51.3928%" y="1141" width="0.0123%" height="15" fill="rgb(235,97,25)" fg:x="4188" fg:w="1"/><text x="51.6428%" y="1151.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.01%)</title><rect x="51.3928%" y="1125" width="0.0123%" height="15" fill="rgb(244,30,34)" fg:x="4188" fg:w="1"/><text x="51.6428%" y="1135.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.01%)</title><rect x="51.3928%" y="1109" width="0.0123%" height="15" fill="rgb(214,106,45)" fg:x="4188" fg:w="1"/><text x="51.6428%" y="1119.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="51.3928%" y="1093" width="0.0123%" height="15" fill="rgb(226,41,9)" fg:x="4188" fg:w="1"/><text x="51.6428%" y="1103.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="51.3928%" y="1077" width="0.0123%" height="15" fill="rgb(253,139,29)" fg:x="4188" fg:w="1"/><text x="51.6428%" y="1087.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="51.3928%" y="1061" width="0.0123%" height="15" fill="rgb(213,205,39)" fg:x="4188" fg:w="1"/><text x="51.6428%" y="1071.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="51.3928%" y="1045" width="0.0123%" height="15" fill="rgb(209,27,10)" fg:x="4188" fg:w="1"/><text x="51.6428%" y="1055.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="51.3928%" y="1029" width="0.0123%" height="15" fill="rgb(249,142,16)" fg:x="4188" fg:w="1"/><text x="51.6428%" y="1039.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.01%)</title><rect x="51.3928%" y="1013" width="0.0123%" height="15" fill="rgb(242,65,12)" fg:x="4188" fg:w="1"/><text x="51.6428%" y="1023.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (3 samples, 0.04%)</title><rect x="51.3928%" y="1173" width="0.0368%" height="15" fill="rgb(232,48,10)" fg:x="4188" fg:w="3"/><text x="51.6428%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (2 samples, 0.02%)</title><rect x="51.4051%" y="1157" width="0.0245%" height="15" fill="rgb(253,67,19)" fg:x="4189" fg:w="2"/><text x="51.6551%" y="1167.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (2 samples, 0.02%)</title><rect x="51.4051%" y="1141" width="0.0245%" height="15" fill="rgb(227,93,29)" fg:x="4189" fg:w="2"/><text x="51.6551%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.02%)</title><rect x="51.4051%" y="1125" width="0.0245%" height="15" fill="rgb(226,189,53)" fg:x="4189" fg:w="2"/><text x="51.6551%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.02%)</title><rect x="51.4051%" y="1109" width="0.0245%" height="15" fill="rgb(223,224,1)" fg:x="4189" fg:w="2"/><text x="51.6551%" y="1119.50"></text></g><g><title>async_task::runnable::Runnable::schedule (4 samples, 0.05%)</title><rect x="51.3928%" y="1205" width="0.0491%" height="15" fill="rgb(221,84,32)" fg:x="4188" fg:w="4"/><text x="51.6428%" y="1215.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (4 samples, 0.05%)</title><rect x="51.3928%" y="1189" width="0.0491%" height="15" fill="rgb(214,189,28)" fg:x="4188" fg:w="4"/><text x="51.6428%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="51.4296%" y="1173" width="0.0123%" height="15" fill="rgb(234,7,52)" fg:x="4191" fg:w="1"/><text x="51.6796%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="51.4296%" y="1157" width="0.0123%" height="15" fill="rgb(249,73,31)" fg:x="4191" fg:w="1"/><text x="51.6796%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="51.4296%" y="1141" width="0.0123%" height="15" fill="rgb(253,153,41)" fg:x="4191" fg:w="1"/><text x="51.6796%" y="1151.50"></text></g><g><title>async_task::runnable::Runnable::waker (2 samples, 0.02%)</title><rect x="51.4419%" y="1205" width="0.0245%" height="15" fill="rgb(249,52,34)" fg:x="4192" fg:w="2"/><text x="51.6919%" y="1215.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (2 samples, 0.02%)</title><rect x="51.4419%" y="1189" width="0.0245%" height="15" fill="rgb(236,177,47)" fg:x="4192" fg:w="2"/><text x="51.6919%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="51.4419%" y="1173" width="0.0245%" height="15" fill="rgb(252,185,45)" fg:x="4192" fg:w="2"/><text x="51.6919%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="51.4419%" y="1157" width="0.0245%" height="15" fill="rgb(251,15,30)" fg:x="4192" fg:w="2"/><text x="51.6919%" y="1167.50"></text></g><g><title>async_task::runnable::spawn_unchecked (1 samples, 0.01%)</title><rect x="51.4664%" y="1205" width="0.0123%" height="15" fill="rgb(233,31,4)" fg:x="4194" fg:w="1"/><text x="51.7164%" y="1215.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (1 samples, 0.01%)</title><rect x="51.4664%" y="1189" width="0.0123%" height="15" fill="rgb(254,44,24)" fg:x="4194" fg:w="1"/><text x="51.7164%" y="1199.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="51.4664%" y="1173" width="0.0123%" height="15" fill="rgb(218,54,1)" fg:x="4194" fg:w="1"/><text x="51.7164%" y="1183.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="51.4664%" y="1157" width="0.0123%" height="15" fill="rgb(243,209,39)" fg:x="4194" fg:w="1"/><text x="51.7164%" y="1167.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="51.4664%" y="1141" width="0.0123%" height="15" fill="rgb(206,75,33)" fg:x="4194" fg:w="1"/><text x="51.7164%" y="1151.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (3 samples, 0.04%)</title><rect x="51.4787%" y="1205" width="0.0368%" height="15" fill="rgb(223,108,18)" fg:x="4195" fg:w="3"/><text x="51.7287%" y="1215.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (3 samples, 0.04%)</title><rect x="51.4787%" y="1189" width="0.0368%" height="15" fill="rgb(244,89,31)" fg:x="4195" fg:w="3"/><text x="51.7287%" y="1199.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (221 samples, 2.71%)</title><rect x="48.8281%" y="1253" width="2.7120%" height="15" fill="rgb(222,167,27)" fg:x="3979" fg:w="221"/><text x="49.0781%" y="1263.50">&lt;b..</text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (17 samples, 0.21%)</title><rect x="51.3315%" y="1237" width="0.2086%" height="15" fill="rgb(247,41,16)" fg:x="4183" fg:w="17"/><text x="51.5815%" y="1247.50"></text></g><g><title>async_executor::Executor::spawn (15 samples, 0.18%)</title><rect x="51.3560%" y="1221" width="0.1841%" height="15" fill="rgb(233,168,40)" fg:x="4185" fg:w="15"/><text x="51.6060%" y="1231.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="51.5155%" y="1205" width="0.0245%" height="15" fill="rgb(205,211,8)" fg:x="4198" fg:w="2"/><text x="51.7655%" y="1215.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.02%)</title><rect x="51.5155%" y="1189" width="0.0245%" height="15" fill="rgb(238,105,11)" fg:x="4198" fg:w="2"/><text x="51.7655%" y="1199.50"></text></g><g><title>async_executor::Executor::state (1 samples, 0.01%)</title><rect x="51.6014%" y="1237" width="0.0123%" height="15" fill="rgb(223,142,52)" fg:x="4205" fg:w="1"/><text x="51.8514%" y="1247.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.01%)</title><rect x="51.6014%" y="1221" width="0.0123%" height="15" fill="rgb(238,51,33)" fg:x="4205" fg:w="1"/><text x="51.8514%" y="1231.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.01%)</title><rect x="51.6014%" y="1205" width="0.0123%" height="15" fill="rgb(231,188,43)" fg:x="4205" fg:w="1"/><text x="51.8514%" y="1215.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="51.6014%" y="1189" width="0.0123%" height="15" fill="rgb(216,92,17)" fg:x="4205" fg:w="1"/><text x="51.8514%" y="1199.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (1 samples, 0.01%)</title><rect x="51.6014%" y="1173" width="0.0123%" height="15" fill="rgb(228,2,40)" fg:x="4205" fg:w="1"/><text x="51.8514%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="51.6014%" y="1157" width="0.0123%" height="15" fill="rgb(226,73,15)" fg:x="4205" fg:w="1"/><text x="51.8514%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="51.6014%" y="1141" width="0.0123%" height="15" fill="rgb(227,66,46)" fg:x="4205" fg:w="1"/><text x="51.8514%" y="1151.50"></text></g><g><title>async_executor::Executor::try_tick (1 samples, 0.01%)</title><rect x="51.6137%" y="1237" width="0.0123%" height="15" fill="rgb(209,71,6)" fg:x="4206" fg:w="1"/><text x="51.8637%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.01%)</title><rect x="51.6260%" y="1221" width="0.0123%" height="15" fill="rgb(246,100,25)" fg:x="4207" fg:w="1"/><text x="51.8760%" y="1231.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.6260%" y="1205" width="0.0123%" height="15" fill="rgb(248,185,27)" fg:x="4207" fg:w="1"/><text x="51.8760%" y="1215.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="51.6260%" y="1189" width="0.0123%" height="15" fill="rgb(225,118,47)" fg:x="4207" fg:w="1"/><text x="51.8760%" y="1199.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="51.6260%" y="1173" width="0.0123%" height="15" fill="rgb(220,185,44)" fg:x="4207" fg:w="1"/><text x="51.8760%" y="1183.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="51.6260%" y="1157" width="0.0123%" height="15" fill="rgb(227,95,24)" fg:x="4207" fg:w="1"/><text x="51.8760%" y="1167.50"></text></g><g><title>async_executor::State::notify (7 samples, 0.09%)</title><rect x="51.6260%" y="1237" width="0.0859%" height="15" fill="rgb(252,84,24)" fg:x="4207" fg:w="7"/><text x="51.8760%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (6 samples, 0.07%)</title><rect x="51.6382%" y="1221" width="0.0736%" height="15" fill="rgb(240,34,44)" fg:x="4208" fg:w="6"/><text x="51.8882%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (6 samples, 0.07%)</title><rect x="51.6382%" y="1205" width="0.0736%" height="15" fill="rgb(209,72,54)" fg:x="4208" fg:w="6"/><text x="51.8882%" y="1215.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="51.7978%" y="1109" width="0.0123%" height="15" fill="rgb(226,19,45)" fg:x="4221" fg:w="1"/><text x="52.0478%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="51.7978%" y="1093" width="0.0123%" height="15" fill="rgb(246,7,45)" fg:x="4221" fg:w="1"/><text x="52.0478%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="51.7978%" y="1077" width="0.0123%" height="15" fill="rgb(225,45,2)" fg:x="4221" fg:w="1"/><text x="52.0478%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="51.7978%" y="1061" width="0.0123%" height="15" fill="rgb(221,80,29)" fg:x="4221" fg:w="1"/><text x="52.0478%" y="1071.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.8100%" y="1093" width="0.0123%" height="15" fill="rgb(228,11,19)" fg:x="4222" fg:w="1"/><text x="52.0600%" y="1103.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (4 samples, 0.05%)</title><rect x="51.7855%" y="1125" width="0.0491%" height="15" fill="rgb(243,17,21)" fg:x="4220" fg:w="4"/><text x="52.0355%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (2 samples, 0.02%)</title><rect x="51.8100%" y="1109" width="0.0245%" height="15" fill="rgb(243,88,8)" fg:x="4222" fg:w="2"/><text x="52.0600%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (1 samples, 0.01%)</title><rect x="51.8223%" y="1093" width="0.0123%" height="15" fill="rgb(214,17,9)" fg:x="4223" fg:w="1"/><text x="52.0723%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.8223%" y="1077" width="0.0123%" height="15" fill="rgb(232,169,15)" fg:x="4223" fg:w="1"/><text x="52.0723%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="51.8223%" y="1061" width="0.0123%" height="15" fill="rgb(232,86,53)" fg:x="4223" fg:w="1"/><text x="52.0723%" y="1071.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="51.8223%" y="1045" width="0.0123%" height="15" fill="rgb(222,100,4)" fg:x="4223" fg:w="1"/><text x="52.0723%" y="1055.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="51.8223%" y="1029" width="0.0123%" height="15" fill="rgb(253,151,38)" fg:x="4223" fg:w="1"/><text x="52.0723%" y="1039.50"></text></g><g><title>concurrent_queue::full_fence (3 samples, 0.04%)</title><rect x="51.9082%" y="1077" width="0.0368%" height="15" fill="rgb(238,215,29)" fg:x="4230" fg:w="3"/><text x="52.1582%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (3 samples, 0.04%)</title><rect x="51.9082%" y="1061" width="0.0368%" height="15" fill="rgb(205,128,53)" fg:x="4230" fg:w="3"/><text x="52.1582%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.04%)</title><rect x="51.9082%" y="1045" width="0.0368%" height="15" fill="rgb(248,183,14)" fg:x="4230" fg:w="3"/><text x="52.1582%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.04%)</title><rect x="51.9082%" y="1029" width="0.0368%" height="15" fill="rgb(244,172,35)" fg:x="4230" fg:w="3"/><text x="52.1582%" y="1039.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (1 samples, 0.01%)</title><rect x="51.9450%" y="1077" width="0.0123%" height="15" fill="rgb(234,93,19)" fg:x="4233" fg:w="1"/><text x="52.1950%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="51.9450%" y="1061" width="0.0123%" height="15" fill="rgb(227,109,7)" fg:x="4233" fg:w="1"/><text x="52.1950%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="51.9450%" y="1045" width="0.0123%" height="15" fill="rgb(233,136,54)" fg:x="4233" fg:w="1"/><text x="52.1950%" y="1055.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (1 samples, 0.01%)</title><rect x="51.9573%" y="1077" width="0.0123%" height="15" fill="rgb(233,19,40)" fg:x="4234" fg:w="1"/><text x="52.2073%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="51.9573%" y="1061" width="0.0123%" height="15" fill="rgb(247,41,18)" fg:x="4234" fg:w="1"/><text x="52.2073%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="51.9573%" y="1045" width="0.0123%" height="15" fill="rgb(220,34,34)" fg:x="4234" fg:w="1"/><text x="52.2073%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.04%)</title><rect x="51.9696%" y="1077" width="0.0368%" height="15" fill="rgb(222,135,32)" fg:x="4235" fg:w="3"/><text x="52.2196%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.04%)</title><rect x="51.9696%" y="1061" width="0.0368%" height="15" fill="rgb(214,80,19)" fg:x="4235" fg:w="3"/><text x="52.2196%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="52.0064%" y="1077" width="0.0123%" height="15" fill="rgb(234,54,46)" fg:x="4238" fg:w="1"/><text x="52.2564%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="52.0064%" y="1061" width="0.0123%" height="15" fill="rgb(251,48,23)" fg:x="4238" fg:w="1"/><text x="52.2564%" y="1071.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (17 samples, 0.21%)</title><rect x="51.8346%" y="1125" width="0.2086%" height="15" fill="rgb(254,109,52)" fg:x="4224" fg:w="17"/><text x="52.0846%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (15 samples, 0.18%)</title><rect x="51.8591%" y="1109" width="0.1841%" height="15" fill="rgb(240,186,19)" fg:x="4226" fg:w="15"/><text x="52.1091%" y="1119.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (12 samples, 0.15%)</title><rect x="51.8959%" y="1093" width="0.1473%" height="15" fill="rgb(246,187,17)" fg:x="4229" fg:w="12"/><text x="52.1459%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="52.0187%" y="1077" width="0.0245%" height="15" fill="rgb(212,21,5)" fg:x="4239" fg:w="2"/><text x="52.2687%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="52.0187%" y="1061" width="0.0245%" height="15" fill="rgb(225,185,18)" fg:x="4239" fg:w="2"/><text x="52.2687%" y="1071.50"></text></g><g><title>event_listener::Event::listen (2 samples, 0.02%)</title><rect x="52.0432%" y="1125" width="0.0245%" height="15" fill="rgb(245,114,17)" fg:x="4241" fg:w="2"/><text x="52.2932%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (2 samples, 0.02%)</title><rect x="52.0432%" y="1109" width="0.0245%" height="15" fill="rgb(223,164,24)" fg:x="4241" fg:w="2"/><text x="52.2932%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (2 samples, 0.02%)</title><rect x="52.0432%" y="1093" width="0.0245%" height="15" fill="rgb(211,228,3)" fg:x="4241" fg:w="2"/><text x="52.2932%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="52.0432%" y="1077" width="0.0245%" height="15" fill="rgb(223,16,38)" fg:x="4241" fg:w="2"/><text x="52.2932%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.02%)</title><rect x="52.0432%" y="1061" width="0.0245%" height="15" fill="rgb(207,31,54)" fg:x="4241" fg:w="2"/><text x="52.2932%" y="1071.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.02%)</title><rect x="52.0432%" y="1045" width="0.0245%" height="15" fill="rgb(220,39,11)" fg:x="4241" fg:w="2"/><text x="52.2932%" y="1055.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="52.0432%" y="1029" width="0.0245%" height="15" fill="rgb(235,185,0)" fg:x="4241" fg:w="2"/><text x="52.2932%" y="1039.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.29%)</title><rect x="51.7855%" y="1141" width="0.2945%" height="15" fill="rgb(249,39,18)" fg:x="4220" fg:w="24"/><text x="52.0355%" y="1151.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="52.0677%" y="1125" width="0.0123%" height="15" fill="rgb(240,110,33)" fg:x="4243" fg:w="1"/><text x="52.3177%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (1 samples, 0.01%)</title><rect x="52.0677%" y="1109" width="0.0123%" height="15" fill="rgb(210,92,42)" fg:x="4243" fg:w="1"/><text x="52.3177%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="52.0677%" y="1093" width="0.0123%" height="15" fill="rgb(218,215,28)" fg:x="4243" fg:w="1"/><text x="52.3177%" y="1103.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="52.0677%" y="1077" width="0.0123%" height="15" fill="rgb(238,215,36)" fg:x="4243" fg:w="1"/><text x="52.3177%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="52.0677%" y="1061" width="0.0123%" height="15" fill="rgb(220,31,10)" fg:x="4243" fg:w="1"/><text x="52.3177%" y="1071.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="52.0677%" y="1045" width="0.0123%" height="15" fill="rgb(212,93,14)" fg:x="4243" fg:w="1"/><text x="52.3177%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2 samples, 0.02%)</title><rect x="52.1905%" y="1045" width="0.0245%" height="15" fill="rgb(254,207,2)" fg:x="4253" fg:w="2"/><text x="52.4405%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="52.1905%" y="1029" width="0.0245%" height="15" fill="rgb(205,57,44)" fg:x="4253" fg:w="2"/><text x="52.4405%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="52.1905%" y="1013" width="0.0245%" height="15" fill="rgb(226,151,19)" fg:x="4253" fg:w="2"/><text x="52.4405%" y="1023.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (8 samples, 0.10%)</title><rect x="52.1536%" y="1077" width="0.0982%" height="15" fill="rgb(230,72,30)" fg:x="4250" fg:w="8"/><text x="52.4036%" y="1087.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::push (5 samples, 0.06%)</title><rect x="52.1905%" y="1061" width="0.0614%" height="15" fill="rgb(244,0,8)" fg:x="4253" fg:w="5"/><text x="52.4405%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (3 samples, 0.04%)</title><rect x="52.2150%" y="1045" width="0.0368%" height="15" fill="rgb(230,192,6)" fg:x="4255" fg:w="3"/><text x="52.4650%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_and (3 samples, 0.04%)</title><rect x="52.2150%" y="1029" width="0.0368%" height="15" fill="rgb(233,207,13)" fg:x="4255" fg:w="3"/><text x="52.4650%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (3 samples, 0.04%)</title><rect x="52.2641%" y="1061" width="0.0368%" height="15" fill="rgb(206,227,7)" fg:x="4259" fg:w="3"/><text x="52.5141%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (3 samples, 0.04%)</title><rect x="52.2641%" y="1045" width="0.0368%" height="15" fill="rgb(213,217,25)" fg:x="4259" fg:w="3"/><text x="52.5141%" y="1055.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="52.2641%" y="1029" width="0.0368%" height="15" fill="rgb(249,75,4)" fg:x="4259" fg:w="3"/><text x="52.5141%" y="1039.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.04%)</title><rect x="52.2641%" y="1013" width="0.0368%" height="15" fill="rgb(225,114,18)" fg:x="4259" fg:w="3"/><text x="52.5141%" y="1023.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.04%)</title><rect x="52.2641%" y="997" width="0.0368%" height="15" fill="rgb(211,162,40)" fg:x="4259" fg:w="3"/><text x="52.5141%" y="1007.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (3 samples, 0.04%)</title><rect x="52.2641%" y="981" width="0.0368%" height="15" fill="rgb(206,49,29)" fg:x="4259" fg:w="3"/><text x="52.5141%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="52.3009%" y="1061" width="0.0491%" height="15" fill="rgb(244,8,6)" fg:x="4262" fg:w="4"/><text x="52.5509%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="52.3009%" y="1045" width="0.0491%" height="15" fill="rgb(231,194,28)" fg:x="4262" fg:w="4"/><text x="52.5509%" y="1055.50"></text></g><g><title>event_listener::Inner::lock (2 samples, 0.02%)</title><rect x="52.3500%" y="1061" width="0.0245%" height="15" fill="rgb(210,69,5)" fg:x="4266" fg:w="2"/><text x="52.6000%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="52.3623%" y="1045" width="0.0123%" height="15" fill="rgb(216,186,12)" fg:x="4267" fg:w="1"/><text x="52.6123%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="52.3623%" y="1029" width="0.0123%" height="15" fill="rgb(238,61,15)" fg:x="4267" fg:w="1"/><text x="52.6123%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="52.3623%" y="1013" width="0.0123%" height="15" fill="rgb(226,104,1)" fg:x="4267" fg:w="1"/><text x="52.6123%" y="1023.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="52.3623%" y="997" width="0.0123%" height="15" fill="rgb(229,128,15)" fg:x="4267" fg:w="1"/><text x="52.6123%" y="1007.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="52.3991%" y="1029" width="0.0123%" height="15" fill="rgb(247,110,15)" fg:x="4270" fg:w="1"/><text x="52.6491%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (3 samples, 0.04%)</title><rect x="52.4113%" y="997" width="0.0368%" height="15" fill="rgb(210,74,48)" fg:x="4271" fg:w="3"/><text x="52.6613%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.04%)</title><rect x="52.4113%" y="981" width="0.0368%" height="15" fill="rgb(246,121,10)" fg:x="4271" fg:w="3"/><text x="52.6613%" y="991.50"></text></g><g><title>async_executor::State::notify (4 samples, 0.05%)</title><rect x="52.4113%" y="1013" width="0.0491%" height="15" fill="rgb(214,156,37)" fg:x="4271" fg:w="4"/><text x="52.6613%" y="1023.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="52.4482%" y="997" width="0.0123%" height="15" fill="rgb(214,210,34)" fg:x="4274" fg:w="1"/><text x="52.6982%" y="1007.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.01%)</title><rect x="52.4482%" y="981" width="0.0123%" height="15" fill="rgb(237,93,35)" fg:x="4274" fg:w="1"/><text x="52.6982%" y="991.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.01%)</title><rect x="52.4482%" y="965" width="0.0123%" height="15" fill="rgb(206,36,8)" fg:x="4274" fg:w="1"/><text x="52.6982%" y="975.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="52.4482%" y="949" width="0.0123%" height="15" fill="rgb(208,151,12)" fg:x="4274" fg:w="1"/><text x="52.6982%" y="959.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="52.4482%" y="933" width="0.0123%" height="15" fill="rgb(225,133,52)" fg:x="4274" fg:w="1"/><text x="52.6982%" y="943.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="52.4482%" y="917" width="0.0123%" height="15" fill="rgb(231,71,53)" fg:x="4274" fg:w="1"/><text x="52.6982%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="52.4482%" y="901" width="0.0123%" height="15" fill="rgb(243,76,21)" fg:x="4274" fg:w="1"/><text x="52.6982%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="52.4482%" y="885" width="0.0123%" height="15" fill="rgb(252,144,3)" fg:x="4274" fg:w="1"/><text x="52.6982%" y="895.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="52.4482%" y="869" width="0.0123%" height="15" fill="rgb(231,199,10)" fg:x="4274" fg:w="1"/><text x="52.6982%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.07%)</title><rect x="52.4850%" y="949" width="0.0736%" height="15" fill="rgb(215,18,11)" fg:x="4277" fg:w="6"/><text x="52.7350%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.07%)</title><rect x="52.4850%" y="933" width="0.0736%" height="15" fill="rgb(241,65,24)" fg:x="4277" fg:w="6"/><text x="52.7350%" y="943.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (8 samples, 0.10%)</title><rect x="52.4727%" y="997" width="0.0982%" height="15" fill="rgb(251,192,38)" fg:x="4276" fg:w="8"/><text x="52.7227%" y="1007.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (8 samples, 0.10%)</title><rect x="52.4727%" y="981" width="0.0982%" height="15" fill="rgb(205,9,35)" fg:x="4276" fg:w="8"/><text x="52.7227%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (8 samples, 0.10%)</title><rect x="52.4727%" y="965" width="0.0982%" height="15" fill="rgb(229,225,49)" fg:x="4276" fg:w="8"/><text x="52.7227%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="52.5586%" y="949" width="0.0123%" height="15" fill="rgb(207,125,39)" fg:x="4283" fg:w="1"/><text x="52.8086%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="52.5586%" y="933" width="0.0123%" height="15" fill="rgb(222,78,19)" fg:x="4283" fg:w="1"/><text x="52.8086%" y="943.50"></text></g><g><title>event_listener::List::notify (22 samples, 0.27%)</title><rect x="52.3745%" y="1061" width="0.2700%" height="15" fill="rgb(248,207,20)" fg:x="4268" fg:w="22"/><text x="52.6245%" y="1071.50"></text></g><g><title>core::task::wake::Waker::wake (20 samples, 0.25%)</title><rect x="52.3991%" y="1045" width="0.2454%" height="15" fill="rgb(205,103,49)" fg:x="4270" fg:w="20"/><text x="52.6491%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (19 samples, 0.23%)</title><rect x="52.4113%" y="1029" width="0.2332%" height="15" fill="rgb(216,42,28)" fg:x="4271" fg:w="19"/><text x="52.6613%" y="1039.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (15 samples, 0.18%)</title><rect x="52.4604%" y="1013" width="0.1841%" height="15" fill="rgb(213,205,53)" fg:x="4275" fg:w="15"/><text x="52.7104%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.07%)</title><rect x="52.5709%" y="997" width="0.0736%" height="15" fill="rgb(239,140,53)" fg:x="4284" fg:w="6"/><text x="52.8209%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.07%)</title><rect x="52.5709%" y="981" width="0.0736%" height="15" fill="rgb(248,95,9)" fg:x="4284" fg:w="6"/><text x="52.8209%" y="991.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (46 samples, 0.56%)</title><rect x="52.1291%" y="1109" width="0.5645%" height="15" fill="rgb(254,58,47)" fg:x="4248" fg:w="46"/><text x="52.3791%" y="1119.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (44 samples, 0.54%)</title><rect x="52.1536%" y="1093" width="0.5399%" height="15" fill="rgb(234,227,14)" fg:x="4250" fg:w="44"/><text x="52.4036%" y="1103.50"></text></g><g><title>event_listener::Event::notify (36 samples, 0.44%)</title><rect x="52.2518%" y="1077" width="0.4418%" height="15" fill="rgb(205,192,45)" fg:x="4258" fg:w="36"/><text x="52.5018%" y="1087.50"></text></g><g><title>event_listener::full_fence (4 samples, 0.05%)</title><rect x="52.6445%" y="1061" width="0.0491%" height="15" fill="rgb(253,187,31)" fg:x="4290" fg:w="4"/><text x="52.8945%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (4 samples, 0.05%)</title><rect x="52.6445%" y="1045" width="0.0491%" height="15" fill="rgb(222,6,32)" fg:x="4290" fg:w="4"/><text x="52.8945%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.05%)</title><rect x="52.6445%" y="1029" width="0.0491%" height="15" fill="rgb(249,190,19)" fg:x="4290" fg:w="4"/><text x="52.8945%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.05%)</title><rect x="52.6445%" y="1013" width="0.0491%" height="15" fill="rgb(251,28,20)" fg:x="4290" fg:w="4"/><text x="52.8945%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="52.6936%" y="1109" width="0.0123%" height="15" fill="rgb(210,223,40)" fg:x="4294" fg:w="1"/><text x="52.9436%" y="1119.50"></text></g><g><title>&lt;fixedbitset::Ones as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="52.7059%" y="1109" width="0.0491%" height="15" fill="rgb(216,137,22)" fg:x="4295" fg:w="4"/><text x="52.9559%" y="1119.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (2 samples, 0.02%)</title><rect x="52.7549%" y="1109" width="0.0245%" height="15" fill="rgb(247,39,34)" fg:x="4299" fg:w="2"/><text x="53.0049%" y="1119.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (2 samples, 0.02%)</title><rect x="52.7549%" y="1093" width="0.0245%" height="15" fill="rgb(239,43,50)" fg:x="4299" fg:w="2"/><text x="53.0049%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="52.7672%" y="1077" width="0.0123%" height="15" fill="rgb(241,212,9)" fg:x="4300" fg:w="1"/><text x="53.0172%" y="1087.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (1 samples, 0.01%)</title><rect x="52.7672%" y="1061" width="0.0123%" height="15" fill="rgb(205,8,2)" fg:x="4300" fg:w="1"/><text x="53.0172%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.05%)</title><rect x="52.7918%" y="1061" width="0.0491%" height="15" fill="rgb(217,173,54)" fg:x="4302" fg:w="4"/><text x="53.0418%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="52.8286%" y="1045" width="0.0123%" height="15" fill="rgb(208,149,52)" fg:x="4305" fg:w="1"/><text x="53.0786%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="52.9267%" y="1029" width="0.0123%" height="15" fill="rgb(239,99,40)" fg:x="4313" fg:w="1"/><text x="53.1767%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="52.9267%" y="1013" width="0.0123%" height="15" fill="rgb(233,214,26)" fg:x="4313" fg:w="1"/><text x="53.1767%" y="1023.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (19 samples, 0.23%)</title><rect x="52.7795%" y="1109" width="0.2332%" height="15" fill="rgb(231,225,37)" fg:x="4301" fg:w="19"/><text x="53.0295%" y="1119.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (19 samples, 0.23%)</title><rect x="52.7795%" y="1093" width="0.2332%" height="15" fill="rgb(252,55,35)" fg:x="4301" fg:w="19"/><text x="53.0295%" y="1103.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (18 samples, 0.22%)</title><rect x="52.7918%" y="1077" width="0.2209%" height="15" fill="rgb(239,43,18)" fg:x="4302" fg:w="18"/><text x="53.0418%" y="1087.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (14 samples, 0.17%)</title><rect x="52.8408%" y="1061" width="0.1718%" height="15" fill="rgb(251,125,49)" fg:x="4306" fg:w="14"/><text x="53.0908%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (14 samples, 0.17%)</title><rect x="52.8408%" y="1045" width="0.1718%" height="15" fill="rgb(212,83,54)" fg:x="4306" fg:w="14"/><text x="53.0908%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (6 samples, 0.07%)</title><rect x="52.9390%" y="1029" width="0.0736%" height="15" fill="rgb(250,75,6)" fg:x="4314" fg:w="6"/><text x="53.1890%" y="1039.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint::{{closure}} (6 samples, 0.07%)</title><rect x="52.9390%" y="1013" width="0.0736%" height="15" fill="rgb(252,36,40)" fg:x="4314" fg:w="6"/><text x="53.1890%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (77 samples, 0.94%)</title><rect x="52.0800%" y="1141" width="0.9449%" height="15" fill="rgb(230,91,51)" fg:x="4244" fg:w="77"/><text x="52.3300%" y="1151.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (77 samples, 0.94%)</title><rect x="52.0800%" y="1125" width="0.9449%" height="15" fill="rgb(212,92,28)" fg:x="4244" fg:w="77"/><text x="52.3300%" y="1135.50"></text></g><g><title>fixedbitset::FixedBitSet::difference_with (1 samples, 0.01%)</title><rect x="53.0126%" y="1109" width="0.0123%" height="15" fill="rgb(227,13,22)" fg:x="4320" fg:w="1"/><text x="53.2626%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="53.0126%" y="1093" width="0.0123%" height="15" fill="rgb(239,204,32)" fg:x="4320" fg:w="1"/><text x="53.2626%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="53.0126%" y="1077" width="0.0123%" height="15" fill="rgb(228,49,41)" fg:x="4320" fg:w="1"/><text x="53.2626%" y="1087.50"></text></g><g><title>concurrent_queue::full_fence (1 samples, 0.01%)</title><rect x="53.0372%" y="1093" width="0.0123%" height="15" fill="rgb(206,95,6)" fg:x="4322" fg:w="1"/><text x="53.2872%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="53.0372%" y="1077" width="0.0123%" height="15" fill="rgb(251,20,14)" fg:x="4322" fg:w="1"/><text x="53.2872%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="53.0372%" y="1061" width="0.0123%" height="15" fill="rgb(214,99,28)" fg:x="4322" fg:w="1"/><text x="53.2872%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="53.0372%" y="1045" width="0.0123%" height="15" fill="rgb(239,122,54)" fg:x="4322" fg:w="1"/><text x="53.2872%" y="1055.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (1 samples, 0.01%)</title><rect x="53.0495%" y="1093" width="0.0123%" height="15" fill="rgb(218,217,46)" fg:x="4323" fg:w="1"/><text x="53.2995%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="53.0495%" y="1077" width="0.0123%" height="15" fill="rgb(249,106,28)" fg:x="4323" fg:w="1"/><text x="53.2995%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="53.0495%" y="1061" width="0.0123%" height="15" fill="rgb(250,158,18)" fg:x="4323" fg:w="1"/><text x="53.2995%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="53.0617%" y="1093" width="0.0123%" height="15" fill="rgb(226,137,29)" fg:x="4324" fg:w="1"/><text x="53.3117%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="53.0617%" y="1077" width="0.0123%" height="15" fill="rgb(210,188,1)" fg:x="4324" fg:w="1"/><text x="53.3117%" y="1087.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (5 samples, 0.06%)</title><rect x="53.0249%" y="1125" width="0.0614%" height="15" fill="rgb(227,84,42)" fg:x="4321" fg:w="5"/><text x="53.2749%" y="1135.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (5 samples, 0.06%)</title><rect x="53.0249%" y="1109" width="0.0614%" height="15" fill="rgb(222,147,48)" fg:x="4321" fg:w="5"/><text x="53.2749%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="53.0740%" y="1093" width="0.0123%" height="15" fill="rgb(241,150,43)" fg:x="4325" fg:w="1"/><text x="53.3240%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="53.0740%" y="1077" width="0.0123%" height="15" fill="rgb(206,139,52)" fg:x="4325" fg:w="1"/><text x="53.3240%" y="1087.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (6 samples, 0.07%)</title><rect x="53.0249%" y="1141" width="0.0736%" height="15" fill="rgb(230,63,14)" fg:x="4321" fg:w="6"/><text x="53.2749%" y="1151.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="53.0863%" y="1125" width="0.0123%" height="15" fill="rgb(247,8,20)" fg:x="4326" fg:w="1"/><text x="53.3363%" y="1135.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="53.0863%" y="1109" width="0.0123%" height="15" fill="rgb(213,115,4)" fg:x="4326" fg:w="1"/><text x="53.3363%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="53.0863%" y="1093" width="0.0123%" height="15" fill="rgb(241,79,49)" fg:x="4326" fg:w="1"/><text x="53.3363%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="53.0863%" y="1077" width="0.0123%" height="15" fill="rgb(222,42,35)" fg:x="4326" fg:w="1"/><text x="53.3363%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="53.0863%" y="1061" width="0.0123%" height="15" fill="rgb(247,59,23)" fg:x="4326" fg:w="1"/><text x="53.3363%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="53.0985%" y="1125" width="0.0123%" height="15" fill="rgb(247,93,18)" fg:x="4327" fg:w="1"/><text x="53.3485%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="53.0985%" y="1109" width="0.0123%" height="15" fill="rgb(249,107,47)" fg:x="4327" fg:w="1"/><text x="53.3485%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="53.0985%" y="1093" width="0.0123%" height="15" fill="rgb(219,27,1)" fg:x="4327" fg:w="1"/><text x="53.3485%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="53.0985%" y="1077" width="0.0123%" height="15" fill="rgb(217,82,32)" fg:x="4327" fg:w="1"/><text x="53.3485%" y="1087.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="53.0985%" y="1061" width="0.0123%" height="15" fill="rgb(250,129,47)" fg:x="4327" fg:w="1"/><text x="53.3485%" y="1071.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (2 samples, 0.02%)</title><rect x="53.0985%" y="1141" width="0.0245%" height="15" fill="rgb(253,88,35)" fg:x="4327" fg:w="2"/><text x="53.3485%" y="1151.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (1 samples, 0.01%)</title><rect x="53.1108%" y="1125" width="0.0123%" height="15" fill="rgb(245,221,14)" fg:x="4328" fg:w="1"/><text x="53.3608%" y="1135.50"></text></g><g><title>&lt;fixedbitset::Ones as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="53.1476%" y="1125" width="0.0123%" height="15" fill="rgb(217,119,54)" fg:x="4331" fg:w="1"/><text x="53.3976%" y="1135.50"></text></g><g><title>core::num::&lt;impl u32&gt;::trailing_zeros (1 samples, 0.01%)</title><rect x="53.1476%" y="1109" width="0.0123%" height="15" fill="rgb(247,128,31)" fg:x="4331" fg:w="1"/><text x="53.3976%" y="1119.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::clear (4 samples, 0.05%)</title><rect x="53.1599%" y="1125" width="0.0491%" height="15" fill="rgb(211,99,22)" fg:x="4332" fg:w="4"/><text x="53.4099%" y="1135.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (4 samples, 0.05%)</title><rect x="53.1599%" y="1109" width="0.0491%" height="15" fill="rgb(212,20,17)" fg:x="4332" fg:w="4"/><text x="53.4099%" y="1119.50"></text></g><g><title>__memset_avx2_unaligned_erms (4 samples, 0.05%)</title><rect x="53.1599%" y="1093" width="0.0491%" height="15" fill="rgb(209,159,29)" fg:x="4332" fg:w="4"/><text x="53.4099%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.02%)</title><rect x="53.2458%" y="1077" width="0.0245%" height="15" fill="rgb(222,177,53)" fg:x="4339" fg:w="2"/><text x="53.4958%" y="1087.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (6 samples, 0.07%)</title><rect x="53.2090%" y="1125" width="0.0736%" height="15" fill="rgb(234,46,43)" fg:x="4336" fg:w="6"/><text x="53.4590%" y="1135.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (6 samples, 0.07%)</title><rect x="53.2090%" y="1109" width="0.0736%" height="15" fill="rgb(208,108,14)" fg:x="4336" fg:w="6"/><text x="53.4590%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="53.2458%" y="1093" width="0.0368%" height="15" fill="rgb(226,78,53)" fg:x="4339" fg:w="3"/><text x="53.4958%" y="1103.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (1 samples, 0.01%)</title><rect x="53.2703%" y="1077" width="0.0123%" height="15" fill="rgb(230,20,41)" fg:x="4341" fg:w="1"/><text x="53.5203%" y="1087.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (15 samples, 0.18%)</title><rect x="53.1231%" y="1141" width="0.1841%" height="15" fill="rgb(213,195,35)" fg:x="4329" fg:w="15"/><text x="53.3731%" y="1151.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (2 samples, 0.02%)</title><rect x="53.2826%" y="1125" width="0.0245%" height="15" fill="rgb(242,62,36)" fg:x="4342" fg:w="2"/><text x="53.5326%" y="1135.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::update_counters_and_queue_systems (4 samples, 0.05%)</title><rect x="53.3072%" y="1141" width="0.0491%" height="15" fill="rgb(222,210,37)" fg:x="4344" fg:w="4"/><text x="53.5572%" y="1151.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="53.3440%" y="1125" width="0.0123%" height="15" fill="rgb(232,107,19)" fg:x="4347" fg:w="1"/><text x="53.5940%" y="1135.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="53.3440%" y="1109" width="0.0123%" height="15" fill="rgb(235,85,17)" fg:x="4347" fg:w="1"/><text x="53.5940%" y="1119.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="53.3562%" y="997" width="0.0123%" height="15" fill="rgb(219,195,31)" fg:x="4348" fg:w="1"/><text x="53.6062%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (3 samples, 0.04%)</title><rect x="53.3562%" y="1077" width="0.0368%" height="15" fill="rgb(231,183,30)" fg:x="4348" fg:w="3"/><text x="53.6062%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (3 samples, 0.04%)</title><rect x="53.3562%" y="1061" width="0.0368%" height="15" fill="rgb(212,0,11)" fg:x="4348" fg:w="3"/><text x="53.6062%" y="1071.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="53.3562%" y="1045" width="0.0368%" height="15" fill="rgb(249,53,54)" fg:x="4348" fg:w="3"/><text x="53.6062%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.04%)</title><rect x="53.3562%" y="1029" width="0.0368%" height="15" fill="rgb(211,118,13)" fg:x="4348" fg:w="3"/><text x="53.6062%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.04%)</title><rect x="53.3562%" y="1013" width="0.0368%" height="15" fill="rgb(237,42,9)" fg:x="4348" fg:w="3"/><text x="53.6062%" y="1023.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="53.3685%" y="997" width="0.0245%" height="15" fill="rgb(227,68,32)" fg:x="4349" fg:w="2"/><text x="53.6185%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;usize&gt;&gt; (6 samples, 0.07%)</title><rect x="53.3562%" y="1141" width="0.0736%" height="15" fill="rgb(238,10,7)" fg:x="4348" fg:w="6"/><text x="53.6062%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (6 samples, 0.07%)</title><rect x="53.3562%" y="1125" width="0.0736%" height="15" fill="rgb(224,42,12)" fg:x="4348" fg:w="6"/><text x="53.6062%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (6 samples, 0.07%)</title><rect x="53.3562%" y="1109" width="0.0736%" height="15" fill="rgb(252,190,5)" fg:x="4348" fg:w="6"/><text x="53.6062%" y="1119.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (6 samples, 0.07%)</title><rect x="53.3562%" y="1093" width="0.0736%" height="15" fill="rgb(220,214,39)" fg:x="4348" fg:w="6"/><text x="53.6062%" y="1103.50"></text></g><g><title>event_listener::Inner::lock (3 samples, 0.04%)</title><rect x="53.3931%" y="1077" width="0.0368%" height="15" fill="rgb(247,98,4)" fg:x="4351" fg:w="3"/><text x="53.6431%" y="1087.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.04%)</title><rect x="53.3931%" y="1061" width="0.0368%" height="15" fill="rgb(211,60,12)" fg:x="4351" fg:w="3"/><text x="53.6431%" y="1071.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.04%)</title><rect x="53.3931%" y="1045" width="0.0368%" height="15" fill="rgb(224,42,10)" fg:x="4351" fg:w="3"/><text x="53.6431%" y="1055.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (3 samples, 0.04%)</title><rect x="53.3931%" y="1029" width="0.0368%" height="15" fill="rgb(217,167,4)" fg:x="4351" fg:w="3"/><text x="53.6431%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_lock (3 samples, 0.04%)</title><rect x="53.3931%" y="1013" width="0.0368%" height="15" fill="rgb(253,18,17)" fg:x="4351" fg:w="3"/><text x="53.6431%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (143 samples, 1.75%)</title><rect x="51.7732%" y="1157" width="1.7548%" height="15" fill="rgb(249,186,44)" fg:x="4219" fg:w="143"/><text x="52.0232%" y="1167.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones (8 samples, 0.10%)</title><rect x="53.4299%" y="1141" width="0.0982%" height="15" fill="rgb(254,124,54)" fg:x="4354" fg:w="8"/><text x="53.6799%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (4 samples, 0.05%)</title><rect x="53.4790%" y="1125" width="0.0491%" height="15" fill="rgb(220,124,39)" fg:x="4358" fg:w="4"/><text x="53.7290%" y="1135.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (4 samples, 0.05%)</title><rect x="53.4790%" y="1109" width="0.0491%" height="15" fill="rgb(225,96,46)" fg:x="4358" fg:w="4"/><text x="53.7290%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (4 samples, 0.05%)</title><rect x="53.4790%" y="1093" width="0.0491%" height="15" fill="rgb(221,106,12)" fg:x="4358" fg:w="4"/><text x="53.7290%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (4 samples, 0.05%)</title><rect x="53.4790%" y="1077" width="0.0491%" height="15" fill="rgb(227,133,23)" fg:x="4358" fg:w="4"/><text x="53.7290%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.05%)</title><rect x="53.4790%" y="1061" width="0.0491%" height="15" fill="rgb(216,44,52)" fg:x="4358" fg:w="4"/><text x="53.7290%" y="1071.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones::{{closure}} (4 samples, 0.05%)</title><rect x="53.4790%" y="1045" width="0.0491%" height="15" fill="rgb(239,149,7)" fg:x="4358" fg:w="4"/><text x="53.7290%" y="1055.50"></text></g><g><title>core::num::&lt;impl u32&gt;::count_ones (3 samples, 0.04%)</title><rect x="53.4912%" y="1029" width="0.0368%" height="15" fill="rgb(211,157,31)" fg:x="4359" fg:w="3"/><text x="53.7412%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="53.5280%" y="1157" width="0.0245%" height="15" fill="rgb(206,215,22)" fg:x="4362" fg:w="2"/><text x="53.7780%" y="1167.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="53.6017%" y="1109" width="0.0245%" height="15" fill="rgb(208,113,15)" fg:x="4368" fg:w="2"/><text x="53.8517%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (2 samples, 0.02%)</title><rect x="53.6017%" y="1093" width="0.0245%" height="15" fill="rgb(207,189,15)" fg:x="4368" fg:w="2"/><text x="53.8517%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="53.6017%" y="1077" width="0.0245%" height="15" fill="rgb(231,115,4)" fg:x="4368" fg:w="2"/><text x="53.8517%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="53.6017%" y="1061" width="0.0245%" height="15" fill="rgb(253,117,2)" fg:x="4368" fg:w="2"/><text x="53.8517%" y="1071.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="53.6017%" y="1125" width="0.0368%" height="15" fill="rgb(248,48,24)" fg:x="4368" fg:w="3"/><text x="53.8517%" y="1135.50"></text></g><g><title>event_listener::Inner::lock (1 samples, 0.01%)</title><rect x="53.6262%" y="1109" width="0.0123%" height="15" fill="rgb(241,28,46)" fg:x="4370" fg:w="1"/><text x="53.8762%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="53.6262%" y="1093" width="0.0123%" height="15" fill="rgb(216,165,52)" fg:x="4370" fg:w="1"/><text x="53.8762%" y="1103.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="53.6262%" y="1077" width="0.0123%" height="15" fill="rgb(220,222,34)" fg:x="4370" fg:w="1"/><text x="53.8762%" y="1087.50"></text></g><g><title>std::sync::poison::Flag::borrow (1 samples, 0.01%)</title><rect x="53.6262%" y="1061" width="0.0123%" height="15" fill="rgb(247,222,49)" fg:x="4370" fg:w="1"/><text x="53.8762%" y="1071.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="53.6262%" y="1045" width="0.0123%" height="15" fill="rgb(240,10,31)" fg:x="4370" fg:w="1"/><text x="53.8762%" y="1055.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="53.6262%" y="1029" width="0.0123%" height="15" fill="rgb(221,199,35)" fg:x="4370" fg:w="1"/><text x="53.8762%" y="1039.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="53.6262%" y="1013" width="0.0123%" height="15" fill="rgb(230,223,11)" fg:x="4370" fg:w="1"/><text x="53.8762%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="53.6262%" y="997" width="0.0123%" height="15" fill="rgb(218,82,45)" fg:x="4370" fg:w="1"/><text x="53.8762%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="53.6262%" y="981" width="0.0123%" height="15" fill="rgb(233,213,33)" fg:x="4370" fg:w="1"/><text x="53.8762%" y="991.50"></text></g><g><title>[engine] (1 samples, 0.01%)</title><rect x="53.6385%" y="1125" width="0.0123%" height="15" fill="rgb(210,143,52)" fg:x="4371" fg:w="1"/><text x="53.8885%" y="1135.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="53.6385%" y="1109" width="0.0123%" height="15" fill="rgb(206,95,4)" fg:x="4371" fg:w="1"/><text x="53.8885%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (7 samples, 0.09%)</title><rect x="53.6630%" y="1077" width="0.0859%" height="15" fill="rgb(246,164,46)" fg:x="4373" fg:w="7"/><text x="53.9130%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (7 samples, 0.09%)</title><rect x="53.6630%" y="1061" width="0.0859%" height="15" fill="rgb(213,210,47)" fg:x="4373" fg:w="7"/><text x="53.9130%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (7 samples, 0.09%)</title><rect x="53.6630%" y="1045" width="0.0859%" height="15" fill="rgb(210,12,38)" fg:x="4373" fg:w="7"/><text x="53.9130%" y="1055.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (9 samples, 0.11%)</title><rect x="53.6508%" y="1125" width="0.1104%" height="15" fill="rgb(252,192,54)" fg:x="4372" fg:w="9"/><text x="53.9008%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (9 samples, 0.11%)</title><rect x="53.6508%" y="1109" width="0.1104%" height="15" fill="rgb(242,92,6)" fg:x="4372" fg:w="9"/><text x="53.9008%" y="1119.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (9 samples, 0.11%)</title><rect x="53.6508%" y="1093" width="0.1104%" height="15" fill="rgb(253,154,15)" fg:x="4372" fg:w="9"/><text x="53.9008%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (1 samples, 0.01%)</title><rect x="53.7489%" y="1077" width="0.0123%" height="15" fill="rgb(209,20,43)" fg:x="4380" fg:w="1"/><text x="53.9989%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_and (1 samples, 0.01%)</title><rect x="53.7489%" y="1061" width="0.0123%" height="15" fill="rgb(232,28,49)" fg:x="4380" fg:w="1"/><text x="53.9989%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (10 samples, 0.12%)</title><rect x="53.7735%" y="1109" width="0.1227%" height="15" fill="rgb(248,131,53)" fg:x="4382" fg:w="10"/><text x="54.0235%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (10 samples, 0.12%)</title><rect x="53.7735%" y="1093" width="0.1227%" height="15" fill="rgb(214,16,30)" fg:x="4382" fg:w="10"/><text x="54.0235%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_add (10 samples, 0.12%)</title><rect x="53.7735%" y="1077" width="0.1227%" height="15" fill="rgb(245,16,0)" fg:x="4382" fg:w="10"/><text x="54.0235%" y="1087.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="53.8962%" y="1029" width="0.0123%" height="15" fill="rgb(245,17,35)" fg:x="4392" fg:w="1"/><text x="54.1462%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (3 samples, 0.04%)</title><rect x="53.8962%" y="1109" width="0.0368%" height="15" fill="rgb(249,27,53)" fg:x="4392" fg:w="3"/><text x="54.1462%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (3 samples, 0.04%)</title><rect x="53.8962%" y="1093" width="0.0368%" height="15" fill="rgb(214,73,24)" fg:x="4392" fg:w="3"/><text x="54.1462%" y="1103.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="53.8962%" y="1077" width="0.0368%" height="15" fill="rgb(223,84,37)" fg:x="4392" fg:w="3"/><text x="54.1462%" y="1087.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (3 samples, 0.04%)</title><rect x="53.8962%" y="1061" width="0.0368%" height="15" fill="rgb(210,109,28)" fg:x="4392" fg:w="3"/><text x="54.1462%" y="1071.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (3 samples, 0.04%)</title><rect x="53.8962%" y="1045" width="0.0368%" height="15" fill="rgb(208,186,6)" fg:x="4392" fg:w="3"/><text x="54.1462%" y="1055.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="53.9085%" y="1029" width="0.0245%" height="15" fill="rgb(235,201,30)" fg:x="4393" fg:w="2"/><text x="54.1585%" y="1039.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.01%)</title><rect x="53.9330%" y="1109" width="0.0123%" height="15" fill="rgb(216,198,48)" fg:x="4395" fg:w="1"/><text x="54.1830%" y="1119.50"></text></g><g><title>std::sync::poison::Flag::get (1 samples, 0.01%)</title><rect x="53.9453%" y="1045" width="0.0123%" height="15" fill="rgb(254,186,25)" fg:x="4396" fg:w="1"/><text x="54.1953%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="53.9453%" y="1029" width="0.0123%" height="15" fill="rgb(227,87,5)" fg:x="4396" fg:w="1"/><text x="54.1953%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="53.9453%" y="1013" width="0.0123%" height="15" fill="rgb(236,205,25)" fg:x="4396" fg:w="1"/><text x="54.1953%" y="1023.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="53.9453%" y="1077" width="0.0245%" height="15" fill="rgb(229,99,32)" fg:x="4396" fg:w="2"/><text x="54.1953%" y="1087.50"></text></g><g><title>std::sync::poison::Flag::borrow (2 samples, 0.02%)</title><rect x="53.9453%" y="1061" width="0.0245%" height="15" fill="rgb(231,177,31)" fg:x="4396" fg:w="2"/><text x="54.1953%" y="1071.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="53.9575%" y="1045" width="0.0123%" height="15" fill="rgb(246,15,2)" fg:x="4397" fg:w="1"/><text x="54.2075%" y="1055.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="53.9575%" y="1029" width="0.0123%" height="15" fill="rgb(207,39,15)" fg:x="4397" fg:w="1"/><text x="54.2075%" y="1039.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="53.9575%" y="1013" width="0.0123%" height="15" fill="rgb(207,44,9)" fg:x="4397" fg:w="1"/><text x="54.2075%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="53.9575%" y="997" width="0.0123%" height="15" fill="rgb(225,224,33)" fg:x="4397" fg:w="1"/><text x="54.2075%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="53.9575%" y="981" width="0.0123%" height="15" fill="rgb(252,151,3)" fg:x="4397" fg:w="1"/><text x="54.2075%" y="991.50"></text></g><g><title>event_listener::Inner::lock (6 samples, 0.07%)</title><rect x="53.9453%" y="1109" width="0.0736%" height="15" fill="rgb(211,140,13)" fg:x="4396" fg:w="6"/><text x="54.1953%" y="1119.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (6 samples, 0.07%)</title><rect x="53.9453%" y="1093" width="0.0736%" height="15" fill="rgb(239,225,17)" fg:x="4396" fg:w="6"/><text x="54.1953%" y="1103.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (4 samples, 0.05%)</title><rect x="53.9698%" y="1077" width="0.0491%" height="15" fill="rgb(223,170,52)" fg:x="4398" fg:w="4"/><text x="54.2198%" y="1087.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (4 samples, 0.05%)</title><rect x="53.9698%" y="1061" width="0.0491%" height="15" fill="rgb(212,64,21)" fg:x="4398" fg:w="4"/><text x="54.2198%" y="1071.50"></text></g><g><title>__GI___pthread_mutex_lock (4 samples, 0.05%)</title><rect x="53.9698%" y="1045" width="0.0491%" height="15" fill="rgb(236,126,48)" fg:x="4398" fg:w="4"/><text x="54.2198%" y="1055.50"></text></g><g><title>event_listener::List::insert (2 samples, 0.02%)</title><rect x="54.0189%" y="1109" width="0.0245%" height="15" fill="rgb(209,135,11)" fg:x="4402" fg:w="2"/><text x="54.2689%" y="1119.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.49%)</title><rect x="53.5649%" y="1141" width="0.4909%" height="15" fill="rgb(228,126,40)" fg:x="4365" fg:w="40"/><text x="53.8149%" y="1151.50"></text></g><g><title>event_listener::Event::listen (24 samples, 0.29%)</title><rect x="53.7612%" y="1125" width="0.2945%" height="15" fill="rgb(205,196,36)" fg:x="4381" fg:w="24"/><text x="54.0112%" y="1135.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="54.0434%" y="1109" width="0.0123%" height="15" fill="rgb(243,160,33)" fg:x="4404" fg:w="1"/><text x="54.2934%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="54.0434%" y="1093" width="0.0123%" height="15" fill="rgb(210,84,20)" fg:x="4404" fg:w="1"/><text x="54.2934%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="54.0434%" y="1077" width="0.0123%" height="15" fill="rgb(228,213,30)" fg:x="4404" fg:w="1"/><text x="54.2934%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="54.0434%" y="1061" width="0.0123%" height="15" fill="rgb(252,33,45)" fg:x="4404" fg:w="1"/><text x="54.2934%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="54.0925%" y="1077" width="0.0123%" height="15" fill="rgb(254,227,20)" fg:x="4408" fg:w="1"/><text x="54.3425%" y="1087.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="54.0925%" y="1061" width="0.0123%" height="15" fill="rgb(228,192,2)" fg:x="4408" fg:w="1"/><text x="54.3425%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="54.1048%" y="1077" width="0.0123%" height="15" fill="rgb(233,32,8)" fg:x="4409" fg:w="1"/><text x="54.3548%" y="1087.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="54.1048%" y="1061" width="0.0123%" height="15" fill="rgb(220,146,47)" fg:x="4409" fg:w="1"/><text x="54.3548%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (8 samples, 0.10%)</title><rect x="54.1171%" y="1077" width="0.0982%" height="15" fill="rgb(246,194,1)" fg:x="4410" fg:w="8"/><text x="54.3671%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (8 samples, 0.10%)</title><rect x="54.1171%" y="1061" width="0.0982%" height="15" fill="rgb(218,203,9)" fg:x="4410" fg:w="8"/><text x="54.3671%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (6 samples, 0.07%)</title><rect x="54.2152%" y="1077" width="0.0736%" height="15" fill="rgb(237,97,14)" fg:x="4418" fg:w="6"/><text x="54.4652%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_or (6 samples, 0.07%)</title><rect x="54.2152%" y="1061" width="0.0736%" height="15" fill="rgb(239,76,15)" fg:x="4418" fg:w="6"/><text x="54.4652%" y="1071.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (21 samples, 0.26%)</title><rect x="54.0557%" y="1109" width="0.2577%" height="15" fill="rgb(222,53,45)" fg:x="4405" fg:w="21"/><text x="54.3057%" y="1119.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (19 samples, 0.23%)</title><rect x="54.0803%" y="1093" width="0.2332%" height="15" fill="rgb(237,88,5)" fg:x="4407" fg:w="19"/><text x="54.3303%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="54.2889%" y="1077" width="0.0245%" height="15" fill="rgb(218,223,35)" fg:x="4424" fg:w="2"/><text x="54.5389%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="54.2889%" y="1061" width="0.0245%" height="15" fill="rgb(243,229,38)" fg:x="4424" fg:w="2"/><text x="54.5389%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (1 samples, 0.01%)</title><rect x="54.3134%" y="1093" width="0.0123%" height="15" fill="rgb(240,75,41)" fg:x="4426" fg:w="1"/><text x="54.5634%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (1 samples, 0.01%)</title><rect x="54.3134%" y="1077" width="0.0123%" height="15" fill="rgb(209,110,37)" fg:x="4426" fg:w="1"/><text x="54.5634%" y="1087.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="54.3134%" y="1061" width="0.0123%" height="15" fill="rgb(221,130,46)" fg:x="4426" fg:w="1"/><text x="54.5634%" y="1071.50"></text></g><g><title>async_executor::State::notify (3 samples, 0.04%)</title><rect x="54.3380%" y="1045" width="0.0368%" height="15" fill="rgb(237,160,20)" fg:x="4428" fg:w="3"/><text x="54.5880%" y="1055.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="54.3625%" y="1029" width="0.0123%" height="15" fill="rgb(234,126,24)" fg:x="4430" fg:w="1"/><text x="54.6125%" y="1039.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.01%)</title><rect x="54.3625%" y="1013" width="0.0123%" height="15" fill="rgb(207,177,9)" fg:x="4430" fg:w="1"/><text x="54.6125%" y="1023.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.01%)</title><rect x="54.3625%" y="997" width="0.0123%" height="15" fill="rgb(231,191,33)" fg:x="4430" fg:w="1"/><text x="54.6125%" y="1007.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="54.3625%" y="981" width="0.0123%" height="15" fill="rgb(207,42,1)" fg:x="4430" fg:w="1"/><text x="54.6125%" y="991.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="54.3625%" y="965" width="0.0123%" height="15" fill="rgb(218,34,50)" fg:x="4430" fg:w="1"/><text x="54.6125%" y="975.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="54.3625%" y="949" width="0.0123%" height="15" fill="rgb(254,126,39)" fg:x="4430" fg:w="1"/><text x="54.6125%" y="959.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="54.3625%" y="933" width="0.0123%" height="15" fill="rgb(251,17,26)" fg:x="4430" fg:w="1"/><text x="54.6125%" y="943.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="54.3625%" y="917" width="0.0123%" height="15" fill="rgb(252,215,34)" fg:x="4430" fg:w="1"/><text x="54.6125%" y="927.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.01%)</title><rect x="54.3625%" y="901" width="0.0123%" height="15" fill="rgb(217,120,44)" fg:x="4430" fg:w="1"/><text x="54.6125%" y="911.50"></text></g><g><title>event_listener::List::notify (5 samples, 0.06%)</title><rect x="54.3257%" y="1093" width="0.0614%" height="15" fill="rgb(211,31,11)" fg:x="4427" fg:w="5"/><text x="54.5757%" y="1103.50"></text></g><g><title>core::task::wake::Waker::wake (4 samples, 0.05%)</title><rect x="54.3380%" y="1077" width="0.0491%" height="15" fill="rgb(222,69,51)" fg:x="4428" fg:w="4"/><text x="54.5880%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (4 samples, 0.05%)</title><rect x="54.3380%" y="1061" width="0.0491%" height="15" fill="rgb(215,229,42)" fg:x="4428" fg:w="4"/><text x="54.5880%" y="1071.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="54.3748%" y="1045" width="0.0123%" height="15" fill="rgb(212,102,15)" fg:x="4431" fg:w="1"/><text x="54.6248%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="54.3748%" y="1029" width="0.0123%" height="15" fill="rgb(205,179,41)" fg:x="4431" fg:w="1"/><text x="54.6248%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="54.3748%" y="1013" width="0.0123%" height="15" fill="rgb(219,148,46)" fg:x="4431" fg:w="1"/><text x="54.6248%" y="1023.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (29 samples, 0.36%)</title><rect x="54.0557%" y="1125" width="0.3559%" height="15" fill="rgb(243,40,19)" fg:x="4405" fg:w="29"/><text x="54.3057%" y="1135.50"></text></g><g><title>event_listener::Event::notify (8 samples, 0.10%)</title><rect x="54.3134%" y="1109" width="0.0982%" height="15" fill="rgb(208,206,34)" fg:x="4426" fg:w="8"/><text x="54.5634%" y="1119.50"></text></g><g><title>event_listener::full_fence (2 samples, 0.02%)</title><rect x="54.3870%" y="1093" width="0.0245%" height="15" fill="rgb(244,184,38)" fg:x="4432" fg:w="2"/><text x="54.6370%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2 samples, 0.02%)</title><rect x="54.3870%" y="1077" width="0.0245%" height="15" fill="rgb(244,151,47)" fg:x="4432" fg:w="2"/><text x="54.6370%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="54.3870%" y="1061" width="0.0245%" height="15" fill="rgb(236,134,42)" fg:x="4432" fg:w="2"/><text x="54.6370%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="54.3870%" y="1045" width="0.0245%" height="15" fill="rgb(233,93,22)" fg:x="4432" fg:w="2"/><text x="54.6370%" y="1055.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.37%)</title><rect x="54.0557%" y="1141" width="0.3681%" height="15" fill="rgb(211,202,10)" fg:x="4405" fg:w="30"/><text x="54.3057%" y="1151.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="54.4116%" y="1125" width="0.0123%" height="15" fill="rgb(240,63,8)" fg:x="4434" fg:w="1"/><text x="54.6616%" y="1135.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="54.4116%" y="1109" width="0.0123%" height="15" fill="rgb(214,9,4)" fg:x="4434" fg:w="1"/><text x="54.6616%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="54.4116%" y="1093" width="0.0123%" height="15" fill="rgb(243,66,45)" fg:x="4434" fg:w="1"/><text x="54.6616%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="54.4116%" y="1077" width="0.0123%" height="15" fill="rgb(220,50,42)" fg:x="4434" fg:w="1"/><text x="54.6616%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="54.4116%" y="1061" width="0.0123%" height="15" fill="rgb(220,134,27)" fg:x="4434" fg:w="1"/><text x="54.6616%" y="1071.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ticks_mut_ptr (1 samples, 0.01%)</title><rect x="54.4484%" y="1061" width="0.0123%" height="15" fill="rgb(246,151,50)" fg:x="4437" fg:w="1"/><text x="54.6984%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="54.4484%" y="1045" width="0.0123%" height="15" fill="rgb(238,216,27)" fg:x="4437" fg:w="1"/><text x="54.6984%" y="1055.50"></text></g><g><title>&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="54.4484%" y="1109" width="0.0245%" height="15" fill="rgb(250,92,11)" fg:x="4437" fg:w="2"/><text x="54.6984%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="54.4484%" y="1093" width="0.0245%" height="15" fill="rgb(248,183,6)" fg:x="4437" fg:w="2"/><text x="54.6984%" y="1103.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (2 samples, 0.02%)</title><rect x="54.4484%" y="1077" width="0.0245%" height="15" fill="rgb(211,204,50)" fg:x="4437" fg:w="2"/><text x="54.6984%" y="1087.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="54.4607%" y="1061" width="0.0123%" height="15" fill="rgb(252,55,47)" fg:x="4438" fg:w="1"/><text x="54.7107%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="54.4607%" y="1045" width="0.0123%" height="15" fill="rgb(240,198,32)" fg:x="4438" fg:w="1"/><text x="54.7107%" y="1055.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="54.4607%" y="1029" width="0.0123%" height="15" fill="rgb(224,203,19)" fg:x="4438" fg:w="1"/><text x="54.7107%" y="1039.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="54.4607%" y="1013" width="0.0123%" height="15" fill="rgb(205,27,16)" fg:x="4438" fg:w="1"/><text x="54.7107%" y="1023.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (1 samples, 0.01%)</title><rect x="54.4607%" y="997" width="0.0123%" height="15" fill="rgb(224,226,17)" fg:x="4438" fg:w="1"/><text x="54.7107%" y="1007.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update_system (2 samples, 0.02%)</title><rect x="54.4729%" y="1077" width="0.0245%" height="15" fill="rgb(205,216,54)" fg:x="4439" fg:w="2"/><text x="54.7229%" y="1087.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update (2 samples, 0.02%)</title><rect x="54.4729%" y="1061" width="0.0245%" height="15" fill="rgb(248,168,46)" fg:x="4439" fg:w="2"/><text x="54.7229%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_gltf::Gltf&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="54.4852%" y="1045" width="0.0123%" height="15" fill="rgb(226,111,45)" fg:x="4440" fg:w="1"/><text x="54.7352%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="54.4852%" y="1029" width="0.0123%" height="15" fill="rgb(231,15,9)" fg:x="4440" fg:w="1"/><text x="54.7352%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="54.4975%" y="1061" width="0.0368%" height="15" fill="rgb(243,168,3)" fg:x="4441" fg:w="3"/><text x="54.7475%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="54.5220%" y="1045" width="0.0123%" height="15" fill="rgb(221,220,54)" fg:x="4443" fg:w="1"/><text x="54.7720%" y="1055.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (1 samples, 0.01%)</title><rect x="54.5220%" y="1029" width="0.0123%" height="15" fill="rgb(232,174,38)" fg:x="4443" fg:w="1"/><text x="54.7720%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; (1 samples, 0.01%)</title><rect x="54.6816%" y="981" width="0.0123%" height="15" fill="rgb(205,14,38)" fg:x="4456" fg:w="1"/><text x="54.9316%" y="991.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="54.6816%" y="965" width="0.0123%" height="15" fill="rgb(234,89,19)" fg:x="4456" fg:w="1"/><text x="54.9316%" y="975.50"></text></g><g><title>bevy_render::draw::clear_draw_system (23 samples, 0.28%)</title><rect x="54.4975%" y="1077" width="0.2822%" height="15" fill="rgb(216,68,51)" fg:x="4441" fg:w="23"/><text x="54.7475%" y="1087.50"></text></g><g><title>bevy_render::draw::Draw::clear_render_commands (20 samples, 0.25%)</title><rect x="54.5343%" y="1061" width="0.2454%" height="15" fill="rgb(213,49,2)" fg:x="4444" fg:w="20"/><text x="54.7843%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (20 samples, 0.25%)</title><rect x="54.5343%" y="1045" width="0.2454%" height="15" fill="rgb(242,146,30)" fg:x="4444" fg:w="20"/><text x="54.7843%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (20 samples, 0.25%)</title><rect x="54.5343%" y="1029" width="0.2454%" height="15" fill="rgb(224,188,11)" fg:x="4444" fg:w="20"/><text x="54.7843%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::draw::RenderCommand]&gt; (20 samples, 0.25%)</title><rect x="54.5343%" y="1013" width="0.2454%" height="15" fill="rgb(213,159,11)" fg:x="4444" fg:w="20"/><text x="54.7843%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::draw::RenderCommand&gt; (20 samples, 0.25%)</title><rect x="54.5343%" y="997" width="0.2454%" height="15" fill="rgb(229,13,31)" fg:x="4444" fg:w="20"/><text x="54.7843%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (7 samples, 0.09%)</title><rect x="54.6938%" y="981" width="0.0859%" height="15" fill="rgb(209,103,11)" fg:x="4457" fg:w="7"/><text x="54.9438%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (7 samples, 0.09%)</title><rect x="54.6938%" y="965" width="0.0859%" height="15" fill="rgb(206,3,4)" fg:x="4457" fg:w="7"/><text x="54.9438%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.09%)</title><rect x="54.6938%" y="949" width="0.0859%" height="15" fill="rgb(252,10,49)" fg:x="4457" fg:w="7"/><text x="54.9438%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.09%)</title><rect x="54.6938%" y="933" width="0.0859%" height="15" fill="rgb(217,160,32)" fg:x="4457" fg:w="7"/><text x="54.9438%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.09%)</title><rect x="54.6938%" y="917" width="0.0859%" height="15" fill="rgb(249,196,0)" fg:x="4457" fg:w="7"/><text x="54.9438%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (8 samples, 0.10%)</title><rect x="54.8165%" y="1061" width="0.0982%" height="15" fill="rgb(213,17,48)" fg:x="4467" fg:w="8"/><text x="55.0665%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.10%)</title><rect x="54.9147%" y="1061" width="0.0982%" height="15" fill="rgb(206,42,46)" fg:x="4475" fg:w="8"/><text x="55.1647%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (6 samples, 0.07%)</title><rect x="54.9393%" y="1045" width="0.0736%" height="15" fill="rgb(212,105,24)" fg:x="4477" fg:w="6"/><text x="55.1893%" y="1055.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (6 samples, 0.07%)</title><rect x="54.9393%" y="1029" width="0.0736%" height="15" fill="rgb(243,216,30)" fg:x="4477" fg:w="6"/><text x="55.1893%" y="1039.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (6 samples, 0.07%)</title><rect x="54.9393%" y="1013" width="0.0736%" height="15" fill="rgb(207,121,3)" fg:x="4477" fg:w="6"/><text x="55.1893%" y="1023.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (6 samples, 0.07%)</title><rect x="54.9393%" y="997" width="0.0736%" height="15" fill="rgb(249,78,0)" fg:x="4477" fg:w="6"/><text x="55.1893%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (6 samples, 0.07%)</title><rect x="54.9393%" y="981" width="0.0736%" height="15" fill="rgb(244,151,32)" fg:x="4477" fg:w="6"/><text x="55.1893%" y="991.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (6 samples, 0.07%)</title><rect x="54.9393%" y="965" width="0.0736%" height="15" fill="rgb(228,63,25)" fg:x="4477" fg:w="6"/><text x="55.1893%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (6 samples, 0.07%)</title><rect x="54.9393%" y="949" width="0.0736%" height="15" fill="rgb(231,158,23)" fg:x="4477" fg:w="6"/><text x="55.1893%" y="959.50"></text></g><g><title>&lt;bevy_ecs::world::pointer::Mut&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="55.0129%" y="1061" width="0.0123%" height="15" fill="rgb(248,107,23)" fg:x="4483" fg:w="1"/><text x="55.2629%" y="1071.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::set_changed (1 samples, 0.01%)</title><rect x="55.0129%" y="1045" width="0.0123%" height="15" fill="rgb(215,168,21)" fg:x="4483" fg:w="1"/><text x="55.2629%" y="1055.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="55.0252%" y="1061" width="0.0123%" height="15" fill="rgb(227,83,22)" fg:x="4484" fg:w="1"/><text x="55.2752%" y="1071.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="55.0252%" y="1045" width="0.0123%" height="15" fill="rgb(217,118,43)" fg:x="4484" fg:w="1"/><text x="55.2752%" y="1055.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="55.0252%" y="1029" width="0.0123%" height="15" fill="rgb(229,220,41)" fg:x="4484" fg:w="1"/><text x="55.2752%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="55.0252%" y="1013" width="0.0123%" height="15" fill="rgb(254,146,46)" fg:x="4484" fg:w="1"/><text x="55.2752%" y="1023.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (1 samples, 0.01%)</title><rect x="55.0374%" y="1061" width="0.0123%" height="15" fill="rgb(233,208,31)" fg:x="4485" fg:w="1"/><text x="55.2874%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;,hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;::clear::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="55.0497%" y="997" width="0.0245%" height="15" fill="rgb(222,162,7)" fg:x="4486" fg:w="2"/><text x="55.2997%" y="1007.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="55.0497%" y="981" width="0.0245%" height="15" fill="rgb(230,117,45)" fg:x="4486" fg:w="2"/><text x="55.2997%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (2 samples, 0.02%)</title><rect x="55.0497%" y="965" width="0.0245%" height="15" fill="rgb(239,163,6)" fg:x="4486" fg:w="2"/><text x="55.2997%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (2 samples, 0.02%)</title><rect x="55.0497%" y="949" width="0.0245%" height="15" fill="rgb(246,130,17)" fg:x="4486" fg:w="2"/><text x="55.2997%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (2 samples, 0.02%)</title><rect x="55.0497%" y="933" width="0.0245%" height="15" fill="rgb(216,84,5)" fg:x="4486" fg:w="2"/><text x="55.2997%" y="943.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (50 samples, 0.61%)</title><rect x="54.7797%" y="1077" width="0.6136%" height="15" fill="rgb(230,200,21)" fg:x="4464" fg:w="50"/><text x="55.0297%" y="1087.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (28 samples, 0.34%)</title><rect x="55.0497%" y="1061" width="0.3436%" height="15" fill="rgb(224,2,8)" fg:x="4486" fg:w="28"/><text x="55.2997%" y="1071.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (28 samples, 0.34%)</title><rect x="55.0497%" y="1045" width="0.3436%" height="15" fill="rgb(238,178,10)" fg:x="4486" fg:w="28"/><text x="55.2997%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (28 samples, 0.34%)</title><rect x="55.0497%" y="1029" width="0.3436%" height="15" fill="rgb(242,153,24)" fg:x="4486" fg:w="28"/><text x="55.2997%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (28 samples, 0.34%)</title><rect x="55.0497%" y="1013" width="0.3436%" height="15" fill="rgb(242,32,48)" fg:x="4486" fg:w="28"/><text x="55.2997%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (26 samples, 0.32%)</title><rect x="55.0742%" y="997" width="0.3191%" height="15" fill="rgb(227,36,0)" fg:x="4488" fg:w="26"/><text x="55.3242%" y="1007.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="55.3933%" y="1077" width="0.0123%" height="15" fill="rgb(251,33,35)" fg:x="4514" fg:w="1"/><text x="55.6433%" y="1087.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.4178%" y="1061" width="0.0245%" height="15" fill="rgb(232,168,51)" fg:x="4516" fg:w="2"/><text x="55.6678%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.4178%" y="1045" width="0.0245%" height="15" fill="rgb(228,56,10)" fg:x="4516" fg:w="2"/><text x="55.6678%" y="1055.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (1 samples, 0.01%)</title><rect x="55.4301%" y="1029" width="0.0123%" height="15" fill="rgb(231,10,26)" fg:x="4517" fg:w="1"/><text x="55.6801%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (1 samples, 0.01%)</title><rect x="55.4301%" y="1013" width="0.0123%" height="15" fill="rgb(226,202,12)" fg:x="4517" fg:w="1"/><text x="55.6801%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="55.4301%" y="997" width="0.0123%" height="15" fill="rgb(251,49,21)" fg:x="4517" fg:w="1"/><text x="55.6801%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="55.4301%" y="981" width="0.0123%" height="15" fill="rgb(206,228,28)" fg:x="4517" fg:w="1"/><text x="55.6801%" y="991.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (82 samples, 1.01%)</title><rect x="54.4484%" y="1125" width="1.0063%" height="15" fill="rgb(205,198,31)" fg:x="4437" fg:w="82"/><text x="54.6984%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (80 samples, 0.98%)</title><rect x="54.4729%" y="1109" width="0.9817%" height="15" fill="rgb(213,69,1)" fg:x="4439" fg:w="80"/><text x="54.7229%" y="1119.50"></text></g><g><title>core::ops::function::Fn::call (80 samples, 0.98%)</title><rect x="54.4729%" y="1093" width="0.9817%" height="15" fill="rgb(209,177,9)" fg:x="4439" fg:w="80"/><text x="54.7229%" y="1103.50"></text></g><g><title>engine::engine::render::animate_sprite_system (4 samples, 0.05%)</title><rect x="55.4056%" y="1077" width="0.0491%" height="15" fill="rgb(227,119,30)" fg:x="4515" fg:w="4"/><text x="55.6556%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="55.4424%" y="1061" width="0.0123%" height="15" fill="rgb(234,106,41)" fg:x="4518" fg:w="1"/><text x="55.6924%" y="1071.50"></text></g><g><title>&lt;bevy_app::event::EventWriterState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_app::event::Events&lt;T&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,),T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="55.4547%" y="1093" width="0.0123%" height="15" fill="rgb(244,103,47)" fg:x="4519" fg:w="1"/><text x="55.7047%" y="1103.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="55.4547%" y="1077" width="0.0123%" height="15" fill="rgb(212,211,25)" fg:x="4519" fg:w="1"/><text x="55.7047%" y="1087.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="55.4547%" y="1061" width="0.0123%" height="15" fill="rgb(208,63,53)" fg:x="4519" fg:w="1"/><text x="55.7047%" y="1071.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="55.4547%" y="1045" width="0.0123%" height="15" fill="rgb(213,176,21)" fg:x="4519" fg:w="1"/><text x="55.7047%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="55.4547%" y="1029" width="0.0123%" height="15" fill="rgb(243,124,12)" fg:x="4519" fg:w="1"/><text x="55.7047%" y="1039.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="55.4547%" y="1013" width="0.0123%" height="15" fill="rgb(239,2,35)" fg:x="4519" fg:w="1"/><text x="55.7047%" y="1023.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="55.4547%" y="997" width="0.0123%" height="15" fill="rgb(253,169,22)" fg:x="4519" fg:w="1"/><text x="55.7047%" y="1007.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (1 samples, 0.01%)</title><rect x="55.4547%" y="981" width="0.0123%" height="15" fill="rgb(254,51,12)" fg:x="4519" fg:w="1"/><text x="55.7047%" y="991.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="55.4547%" y="1109" width="0.0245%" height="15" fill="rgb(244,17,47)" fg:x="4519" fg:w="2"/><text x="55.7047%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="55.4669%" y="1093" width="0.0123%" height="15" fill="rgb(251,45,46)" fg:x="4520" fg:w="1"/><text x="55.7169%" y="1103.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="55.4669%" y="1077" width="0.0123%" height="15" fill="rgb(223,87,43)" fg:x="4520" fg:w="1"/><text x="55.7169%" y="1087.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="55.4669%" y="1061" width="0.0123%" height="15" fill="rgb(230,132,31)" fg:x="4520" fg:w="1"/><text x="55.7169%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="55.4669%" y="1045" width="0.0123%" height="15" fill="rgb(206,99,1)" fg:x="4520" fg:w="1"/><text x="55.7169%" y="1055.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="55.4669%" y="1029" width="0.0123%" height="15" fill="rgb(227,110,25)" fg:x="4520" fg:w="1"/><text x="55.7169%" y="1039.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="55.4669%" y="1013" width="0.0123%" height="15" fill="rgb(217,182,7)" fg:x="4520" fg:w="1"/><text x="55.7169%" y="1023.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (1 samples, 0.01%)</title><rect x="55.4669%" y="997" width="0.0123%" height="15" fill="rgb(250,176,4)" fg:x="4520" fg:w="1"/><text x="55.7169%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_gltf::Gltf&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_gltf::Gltf&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="55.5037%" y="1013" width="0.0123%" height="15" fill="rgb(244,98,30)" fg:x="4523" fg:w="1"/><text x="55.7537%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_gltf::Gltf&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_gltf::Gltf&gt;&gt;::drain::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="55.5037%" y="997" width="0.0123%" height="15" fill="rgb(228,150,42)" fg:x="4523" fg:w="1"/><text x="55.7537%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_gltf::Gltf&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="55.5037%" y="981" width="0.0123%" height="15" fill="rgb(231,91,46)" fg:x="4523" fg:w="1"/><text x="55.7537%" y="991.50"></text></g><g><title>[engine] (1 samples, 0.01%)</title><rect x="55.5037%" y="965" width="0.0123%" height="15" fill="rgb(252,161,32)" fg:x="4523" fg:w="1"/><text x="55.7537%" y="975.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="55.5037%" y="949" width="0.0123%" height="15" fill="rgb(236,69,41)" fg:x="4523" fg:w="1"/><text x="55.7537%" y="959.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::asset_event_system (4 samples, 0.05%)</title><rect x="55.4792%" y="1077" width="0.0491%" height="15" fill="rgb(212,160,3)" fg:x="4521" fg:w="4"/><text x="55.7292%" y="1087.50"></text></g><g><title>bevy_app::event::EventWriter&lt;T&gt;::send_batch (4 samples, 0.05%)</title><rect x="55.4792%" y="1061" width="0.0491%" height="15" fill="rgb(216,5,50)" fg:x="4521" fg:w="4"/><text x="55.7292%" y="1071.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::extend (4 samples, 0.05%)</title><rect x="55.4792%" y="1045" width="0.0491%" height="15" fill="rgb(241,138,25)" fg:x="4521" fg:w="4"/><text x="55.7292%" y="1055.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="55.4915%" y="1029" width="0.0368%" height="15" fill="rgb(239,42,18)" fg:x="4522" fg:w="3"/><text x="55.7415%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="55.5160%" y="1013" width="0.0123%" height="15" fill="rgb(239,40,7)" fg:x="4524" fg:w="1"/><text x="55.7660%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;::drain::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="55.5160%" y="997" width="0.0123%" height="15" fill="rgb(239,11,31)" fg:x="4524" fg:w="1"/><text x="55.7660%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="55.5160%" y="981" width="0.0123%" height="15" fill="rgb(224,77,40)" fg:x="4524" fg:w="1"/><text x="55.7660%" y="991.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="55.5160%" y="965" width="0.0123%" height="15" fill="rgb(226,15,5)" fg:x="4524" fg:w="1"/><text x="55.7660%" y="975.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (2 samples, 0.02%)</title><rect x="55.5774%" y="1045" width="0.0245%" height="15" fill="rgb(254,188,5)" fg:x="4529" fg:w="2"/><text x="55.8274%" y="1055.50"></text></g><g><title>&lt;T as downcast_rs::Downcast&gt;::as_any (2 samples, 0.02%)</title><rect x="55.5774%" y="1029" width="0.0245%" height="15" fill="rgb(241,148,52)" fg:x="4529" fg:w="2"/><text x="55.8274%" y="1039.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (8 samples, 0.10%)</title><rect x="55.5283%" y="1077" width="0.0982%" height="15" fill="rgb(251,48,36)" fg:x="4525" fg:w="8"/><text x="55.7783%" y="1087.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (8 samples, 0.10%)</title><rect x="55.5283%" y="1061" width="0.0982%" height="15" fill="rgb(243,83,13)" fg:x="4525" fg:w="8"/><text x="55.7783%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="55.6019%" y="1045" width="0.0245%" height="15" fill="rgb(210,105,0)" fg:x="4531" fg:w="2"/><text x="55.8519%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="55.6019%" y="1029" width="0.0245%" height="15" fill="rgb(239,60,36)" fg:x="4531" fg:w="2"/><text x="55.8519%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="55.6019%" y="1013" width="0.0245%" height="15" fill="rgb(210,20,0)" fg:x="4531" fg:w="2"/><text x="55.8519%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="55.6019%" y="997" width="0.0245%" height="15" fill="rgb(244,26,53)" fg:x="4531" fg:w="2"/><text x="55.8519%" y="1007.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="55.6019%" y="981" width="0.0245%" height="15" fill="rgb(240,100,49)" fg:x="4531" fg:w="2"/><text x="55.8519%" y="991.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (2 samples, 0.02%)</title><rect x="55.6019%" y="965" width="0.0245%" height="15" fill="rgb(250,46,45)" fg:x="4531" fg:w="2"/><text x="55.8519%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="55.6019%" y="949" width="0.0245%" height="15" fill="rgb(220,181,29)" fg:x="4531" fg:w="2"/><text x="55.8519%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (2 samples, 0.02%)</title><rect x="55.6019%" y="933" width="0.0245%" height="15" fill="rgb(213,137,33)" fg:x="4531" fg:w="2"/><text x="55.8519%" y="943.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="55.6019%" y="917" width="0.0245%" height="15" fill="rgb(213,27,48)" fg:x="4531" fg:w="2"/><text x="55.8519%" y="927.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (2 samples, 0.02%)</title><rect x="55.6019%" y="901" width="0.0245%" height="15" fill="rgb(245,180,39)" fg:x="4531" fg:w="2"/><text x="55.8519%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="55.6265%" y="1061" width="0.0123%" height="15" fill="rgb(212,158,42)" fg:x="4533" fg:w="1"/><text x="55.8765%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.6265%" y="1045" width="0.0123%" height="15" fill="rgb(228,193,18)" fg:x="4533" fg:w="1"/><text x="55.8765%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.6265%" y="1029" width="0.0123%" height="15" fill="rgb(245,172,29)" fg:x="4533" fg:w="1"/><text x="55.8765%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="55.6265%" y="1013" width="0.0123%" height="15" fill="rgb(207,98,24)" fg:x="4533" fg:w="1"/><text x="55.8765%" y="1023.50"></text></g><g><title>bevy_egui::systems::begin_frame (2 samples, 0.02%)</title><rect x="55.6265%" y="1077" width="0.0245%" height="15" fill="rgb(249,92,26)" fg:x="4533" fg:w="2"/><text x="55.8765%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.01%)</title><rect x="55.6387%" y="1061" width="0.0123%" height="15" fill="rgb(217,176,26)" fg:x="4534" fg:w="1"/><text x="55.8887%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="55.6387%" y="1045" width="0.0123%" height="15" fill="rgb(221,8,39)" fg:x="4534" fg:w="1"/><text x="55.8887%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.01%)</title><rect x="55.6387%" y="1029" width="0.0123%" height="15" fill="rgb(208,90,18)" fg:x="4534" fg:w="1"/><text x="55.8887%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="55.6387%" y="1013" width="0.0123%" height="15" fill="rgb(207,202,30)" fg:x="4534" fg:w="1"/><text x="55.8887%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="55.6387%" y="997" width="0.0123%" height="15" fill="rgb(231,124,22)" fg:x="4534" fg:w="1"/><text x="55.8887%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="55.6387%" y="981" width="0.0123%" height="15" fill="rgb(206,15,5)" fg:x="4534" fg:w="1"/><text x="55.8887%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="55.6387%" y="965" width="0.0123%" height="15" fill="rgb(239,16,52)" fg:x="4534" fg:w="1"/><text x="55.8887%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="55.6387%" y="949" width="0.0123%" height="15" fill="rgb(245,213,29)" fg:x="4534" fg:w="1"/><text x="55.8887%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="55.6387%" y="933" width="0.0123%" height="15" fill="rgb(213,203,36)" fg:x="4534" fg:w="1"/><text x="55.8887%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="55.6387%" y="917" width="0.0123%" height="15" fill="rgb(209,55,18)" fg:x="4534" fg:w="1"/><text x="55.8887%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="55.6387%" y="901" width="0.0123%" height="15" fill="rgb(207,133,49)" fg:x="4534" fg:w="1"/><text x="55.8887%" y="911.50"></text></g><g><title>bevy_input::keyboard::keyboard_input_system (1 samples, 0.01%)</title><rect x="55.6510%" y="1077" width="0.0123%" height="15" fill="rgb(240,33,46)" fg:x="4535" fg:w="1"/><text x="55.9010%" y="1087.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="55.6510%" y="1061" width="0.0123%" height="15" fill="rgb(212,35,2)" fg:x="4535" fg:w="1"/><text x="55.9010%" y="1071.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter_with_id (1 samples, 0.01%)</title><rect x="55.6510%" y="1045" width="0.0123%" height="15" fill="rgb(231,119,28)" fg:x="4535" fg:w="1"/><text x="55.9010%" y="1055.50"></text></g><g><title>bevy_app::event::internal_event_reader (1 samples, 0.01%)</title><rect x="55.6510%" y="1029" width="0.0123%" height="15" fill="rgb(252,178,7)" fg:x="4535" fg:w="1"/><text x="55.9010%" y="1039.50"></text></g><g><title>bevy_input::touch::touch_screen_input_system (1 samples, 0.01%)</title><rect x="55.6633%" y="1077" width="0.0123%" height="15" fill="rgb(251,91,4)" fg:x="4536" fg:w="1"/><text x="55.9133%" y="1087.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="55.6633%" y="1061" width="0.0123%" height="15" fill="rgb(233,122,19)" fg:x="4536" fg:w="1"/><text x="55.9133%" y="1071.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter_with_id (1 samples, 0.01%)</title><rect x="55.6633%" y="1045" width="0.0123%" height="15" fill="rgb(231,208,46)" fg:x="4536" fg:w="1"/><text x="55.9133%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::Res&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="55.6633%" y="1029" width="0.0123%" height="15" fill="rgb(243,15,41)" fg:x="4536" fg:w="1"/><text x="55.9133%" y="1039.50"></text></g><g><title>bevy_render::camera::active_cameras::active_cameras_system (1 samples, 0.01%)</title><rect x="55.6755%" y="1077" width="0.0123%" height="15" fill="rgb(210,32,43)" fg:x="4537" fg:w="1"/><text x="55.9255%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map_or (1 samples, 0.01%)</title><rect x="55.6755%" y="1061" width="0.0123%" height="15" fill="rgb(222,177,15)" fg:x="4537" fg:w="1"/><text x="55.9255%" y="1071.50"></text></g><g><title>bevy_render::camera::active_cameras::active_cameras_system::{{closure}} (1 samples, 0.01%)</title><rect x="55.6755%" y="1045" width="0.0123%" height="15" fill="rgb(244,121,34)" fg:x="4537" fg:w="1"/><text x="55.9255%" y="1055.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (1 samples, 0.01%)</title><rect x="55.6755%" y="1029" width="0.0123%" height="15" fill="rgb(234,138,4)" fg:x="4537" fg:w="1"/><text x="55.9255%" y="1039.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (1 samples, 0.01%)</title><rect x="55.6755%" y="1013" width="0.0123%" height="15" fill="rgb(240,97,48)" fg:x="4537" fg:w="1"/><text x="55.9255%" y="1023.50"></text></g><g><title>bevy_ecs::entity::Entities::get (1 samples, 0.01%)</title><rect x="55.6755%" y="997" width="0.0123%" height="15" fill="rgb(237,65,54)" fg:x="4537" fg:w="1"/><text x="55.9255%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="55.6755%" y="981" width="0.0123%" height="15" fill="rgb(214,25,24)" fg:x="4537" fg:w="1"/><text x="55.9255%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="55.6755%" y="965" width="0.0123%" height="15" fill="rgb(213,5,3)" fg:x="4537" fg:w="1"/><text x="55.9255%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="55.6755%" y="949" width="0.0123%" height="15" fill="rgb(219,81,29)" fg:x="4537" fg:w="1"/><text x="55.9255%" y="959.50"></text></g><g><title>&lt;bevy_render::shader::shader_defs::ShaderDefIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.6878%" y="1061" width="0.0123%" height="15" fill="rgb(220,43,48)" fg:x="4538" fg:w="1"/><text x="55.9378%" y="1071.50"></text></g><g><title>&lt;bevy_sprite::color_material::ColorMaterial as bevy_render::shader::shader_defs::ShaderDefs&gt;::get_shader_def (1 samples, 0.01%)</title><rect x="55.6878%" y="1045" width="0.0123%" height="15" fill="rgb(239,157,2)" fg:x="4538" fg:w="1"/><text x="55.9378%" y="1055.50"></text></g><g><title>bevy_render::shader::shader_defs::asset_shader_defs_system (2 samples, 0.02%)</title><rect x="55.6878%" y="1077" width="0.0245%" height="15" fill="rgb(213,104,43)" fg:x="4538" fg:w="2"/><text x="55.9378%" y="1087.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="55.7001%" y="1061" width="0.0123%" height="15" fill="rgb(237,84,9)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="55.7001%" y="1045" width="0.0123%" height="15" fill="rgb(252,6,33)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="55.7001%" y="1029" width="0.0123%" height="15" fill="rgb(251,172,22)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="55.7001%" y="1013" width="0.0123%" height="15" fill="rgb(244,91,53)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="55.7001%" y="997" width="0.0123%" height="15" fill="rgb(219,29,30)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="55.7001%" y="981" width="0.0123%" height="15" fill="rgb(213,3,15)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="55.7001%" y="965" width="0.0123%" height="15" fill="rgb(208,25,28)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="55.7001%" y="949" width="0.0123%" height="15" fill="rgb(252,144,25)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="55.7001%" y="933" width="0.0123%" height="15" fill="rgb(226,220,25)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="55.7001%" y="917" width="0.0123%" height="15" fill="rgb(212,131,28)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="55.7001%" y="901" width="0.0123%" height="15" fill="rgb(219,143,52)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="55.7001%" y="885" width="0.0123%" height="15" fill="rgb(215,56,7)" fg:x="4539" fg:w="1"/><text x="55.9501%" y="895.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (22 samples, 0.27%)</title><rect x="55.4547%" y="1125" width="0.2700%" height="15" fill="rgb(239,59,51)" fg:x="4519" fg:w="22"/><text x="55.7047%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (20 samples, 0.25%)</title><rect x="55.4792%" y="1109" width="0.2454%" height="15" fill="rgb(209,215,4)" fg:x="4521" fg:w="20"/><text x="55.7292%" y="1119.50"></text></g><g><title>core::ops::function::Fn::call (20 samples, 0.25%)</title><rect x="55.4792%" y="1093" width="0.2454%" height="15" fill="rgb(221,118,39)" fg:x="4521" fg:w="20"/><text x="55.7292%" y="1103.50"></text></g><g><title>bevy_window::system::exit_on_window_close_system (1 samples, 0.01%)</title><rect x="55.7124%" y="1077" width="0.0123%" height="15" fill="rgb(236,6,44)" fg:x="4540" fg:w="1"/><text x="55.9624%" y="1087.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="55.7124%" y="1061" width="0.0123%" height="15" fill="rgb(216,122,9)" fg:x="4540" fg:w="1"/><text x="55.9624%" y="1071.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter_with_id (1 samples, 0.01%)</title><rect x="55.7124%" y="1045" width="0.0123%" height="15" fill="rgb(244,134,42)" fg:x="4540" fg:w="1"/><text x="55.9624%" y="1055.50"></text></g><g><title>bevy_app::event::internal_event_reader (1 samples, 0.01%)</title><rect x="55.7124%" y="1029" width="0.0123%" height="15" fill="rgb(209,189,35)" fg:x="4540" fg:w="1"/><text x="55.9624%" y="1039.50"></text></g><g><title>&lt;(P0,P1,P2) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="55.7246%" y="1109" width="0.0245%" height="15" fill="rgb(250,47,36)" fg:x="4541" fg:w="2"/><text x="55.9746%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="55.7369%" y="1093" width="0.0123%" height="15" fill="rgb(252,112,4)" fg:x="4542" fg:w="1"/><text x="55.9869%" y="1103.50"></text></g><g><title>bevy_diagnostic::frame_time_diagnostics_plugin::FrameTimeDiagnosticsPlugin::diagnostic_system (1 samples, 0.01%)</title><rect x="55.7492%" y="1077" width="0.0123%" height="15" fill="rgb(221,79,51)" fg:x="4543" fg:w="1"/><text x="55.9992%" y="1087.50"></text></g><g><title>bevy_diagnostic::diagnostic::Diagnostics::add_measurement (1 samples, 0.01%)</title><rect x="55.7492%" y="1061" width="0.0123%" height="15" fill="rgb(232,65,53)" fg:x="4543" fg:w="1"/><text x="55.9992%" y="1071.50"></text></g><g><title>bevy_diagnostic::diagnostic::Diagnostic::add_measurement (1 samples, 0.01%)</title><rect x="55.7492%" y="1045" width="0.0123%" height="15" fill="rgb(211,37,7)" fg:x="4543" fg:w="1"/><text x="55.9992%" y="1055.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::len (1 samples, 0.01%)</title><rect x="55.7492%" y="1029" width="0.0123%" height="15" fill="rgb(234,221,18)" fg:x="4543" fg:w="1"/><text x="55.9992%" y="1039.50"></text></g><g><title>bevy_render::texture::texture::Texture::texture_resource_system (2 samples, 0.02%)</title><rect x="55.7614%" y="1077" width="0.0245%" height="15" fill="rgb(220,158,26)" fg:x="4544" fg:w="2"/><text x="56.0114%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;&amp;bevy_asset::handle::Handle&lt;bevy_render::texture::texture::Texture&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="55.7737%" y="1061" width="0.0123%" height="15" fill="rgb(220,70,6)" fg:x="4545" fg:w="1"/><text x="56.0237%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;&amp;bevy_asset::handle::Handle&lt;bevy_render::texture::texture::Texture&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="55.7737%" y="1045" width="0.0123%" height="15" fill="rgb(250,39,48)" fg:x="4545" fg:w="1"/><text x="56.0237%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;bevy_asset::handle::Handle&lt;bevy_render::texture::texture::Texture&gt;,(),ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="55.7737%" y="1029" width="0.0123%" height="15" fill="rgb(206,40,27)" fg:x="4545" fg:w="1"/><text x="56.0237%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;bevy_asset::handle::Handle&lt;bevy_render::texture::texture::Texture&gt;,())&gt;&gt; (1 samples, 0.01%)</title><rect x="55.7737%" y="1013" width="0.0123%" height="15" fill="rgb(247,80,36)" fg:x="4545" fg:w="1"/><text x="56.0237%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="55.7737%" y="997" width="0.0123%" height="15" fill="rgb(222,9,20)" fg:x="4545" fg:w="1"/><text x="56.0237%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.01%)</title><rect x="55.7737%" y="981" width="0.0123%" height="15" fill="rgb(217,26,45)" fg:x="4545" fg:w="1"/><text x="56.0237%" y="991.50"></text></g><g><title>bevy_sprite::sprite::sprite_system (1 samples, 0.01%)</title><rect x="55.7860%" y="1077" width="0.0123%" height="15" fill="rgb(221,67,14)" fg:x="4546" fg:w="1"/><text x="56.0360%" y="1087.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="55.7860%" y="1061" width="0.0123%" height="15" fill="rgb(248,100,24)" fg:x="4546" fg:w="1"/><text x="56.0360%" y="1071.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="55.7860%" y="1045" width="0.0123%" height="15" fill="rgb(230,187,16)" fg:x="4546" fg:w="1"/><text x="56.0360%" y="1055.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="55.7860%" y="1029" width="0.0123%" height="15" fill="rgb(205,108,13)" fg:x="4546" fg:w="1"/><text x="56.0360%" y="1039.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="55.7860%" y="1013" width="0.0123%" height="15" fill="rgb(235,71,51)" fg:x="4546" fg:w="1"/><text x="56.0360%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="55.7860%" y="997" width="0.0123%" height="15" fill="rgb(251,172,48)" fg:x="4546" fg:w="1"/><text x="56.0360%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.7983%" y="1061" width="0.0123%" height="15" fill="rgb(240,96,49)" fg:x="4547" fg:w="1"/><text x="56.0483%" y="1071.50"></text></g><g><title>bevy_ecs::storage::table::Table::len (1 samples, 0.01%)</title><rect x="55.7983%" y="1045" width="0.0123%" height="15" fill="rgb(235,46,36)" fg:x="4547" fg:w="1"/><text x="56.0483%" y="1055.50"></text></g><g><title>bevy_ui::update::ui_z_system (2 samples, 0.02%)</title><rect x="55.7983%" y="1077" width="0.0245%" height="15" fill="rgb(244,3,49)" fg:x="4547" fg:w="2"/><text x="56.0483%" y="1087.50"></text></g><g><title>bevy_ui::update::update_hierarchy (1 samples, 0.01%)</title><rect x="55.8105%" y="1061" width="0.0123%" height="15" fill="rgb(206,78,54)" fg:x="4548" fg:w="1"/><text x="56.0605%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.8228%" y="1061" width="0.0245%" height="15" fill="rgb(208,85,42)" fg:x="4549" fg:w="2"/><text x="56.0728%" y="1071.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (7 samples, 0.09%)</title><rect x="55.8473%" y="1013" width="0.0859%" height="15" fill="rgb(219,196,21)" fg:x="4551" fg:w="7"/><text x="56.0973%" y="1023.50"></text></g><g><title>alloc::alloc::exchange_malloc (7 samples, 0.09%)</title><rect x="55.8473%" y="997" width="0.0859%" height="15" fill="rgb(238,19,9)" fg:x="4551" fg:w="7"/><text x="56.0973%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (7 samples, 0.09%)</title><rect x="55.8473%" y="981" width="0.0859%" height="15" fill="rgb(206,86,13)" fg:x="4551" fg:w="7"/><text x="56.0973%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (7 samples, 0.09%)</title><rect x="55.8473%" y="965" width="0.0859%" height="15" fill="rgb(214,123,40)" fg:x="4551" fg:w="7"/><text x="56.0973%" y="975.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.09%)</title><rect x="55.8473%" y="949" width="0.0859%" height="15" fill="rgb(243,53,5)" fg:x="4551" fg:w="7"/><text x="56.0973%" y="959.50"></text></g><g><title>__rdl_alloc (7 samples, 0.09%)</title><rect x="55.8473%" y="933" width="0.0859%" height="15" fill="rgb(254,186,31)" fg:x="4551" fg:w="7"/><text x="56.0973%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (7 samples, 0.09%)</title><rect x="55.8473%" y="917" width="0.0859%" height="15" fill="rgb(221,216,25)" fg:x="4551" fg:w="7"/><text x="56.0973%" y="927.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.09%)</title><rect x="55.8473%" y="901" width="0.0859%" height="15" fill="rgb(248,107,42)" fg:x="4551" fg:w="7"/><text x="56.0973%" y="911.50"></text></g><g><title>_int_malloc (4 samples, 0.05%)</title><rect x="55.8842%" y="885" width="0.0491%" height="15" fill="rgb(221,85,43)" fg:x="4554" fg:w="4"/><text x="56.1342%" y="895.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="55.9210%" y="869" width="0.0123%" height="15" fill="rgb(225,34,24)" fg:x="4557" fg:w="1"/><text x="56.1710%" y="879.50"></text></g><g><title>bevy_ecs::system::commands::EntityCommands::remove (8 samples, 0.10%)</title><rect x="55.8473%" y="1061" width="0.0982%" height="15" fill="rgb(211,119,1)" fg:x="4551" fg:w="8"/><text x="56.0973%" y="1071.50"></text></g><g><title>bevy_ecs::system::commands::Commands::add (8 samples, 0.10%)</title><rect x="55.8473%" y="1045" width="0.0982%" height="15" fill="rgb(254,216,46)" fg:x="4551" fg:w="8"/><text x="56.0973%" y="1055.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push (8 samples, 0.10%)</title><rect x="55.8473%" y="1029" width="0.0982%" height="15" fill="rgb(238,11,38)" fg:x="4551" fg:w="8"/><text x="56.0973%" y="1039.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push_boxed (1 samples, 0.01%)</title><rect x="55.9332%" y="1013" width="0.0123%" height="15" fill="rgb(233,50,15)" fg:x="4558" fg:w="1"/><text x="56.1832%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="55.9332%" y="997" width="0.0123%" height="15" fill="rgb(217,181,29)" fg:x="4558" fg:w="1"/><text x="56.1832%" y="1007.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="55.9332%" y="981" width="0.0123%" height="15" fill="rgb(214,56,3)" fg:x="4558" fg:w="1"/><text x="56.1832%" y="991.50"></text></g><g><title>engine::engine::actor::ai::eating::find_food_system (11 samples, 0.13%)</title><rect x="55.8228%" y="1077" width="0.1350%" height="15" fill="rgb(230,69,45)" fg:x="4549" fg:w="11"/><text x="56.0728%" y="1087.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter (1 samples, 0.01%)</title><rect x="55.9455%" y="1061" width="0.0123%" height="15" fill="rgb(224,201,50)" fg:x="4559" fg:w="1"/><text x="56.1955%" y="1071.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="55.9455%" y="1045" width="0.0123%" height="15" fill="rgb(217,228,18)" fg:x="4559" fg:w="1"/><text x="56.1955%" y="1055.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="55.9455%" y="1029" width="0.0123%" height="15" fill="rgb(239,33,44)" fg:x="4559" fg:w="1"/><text x="56.1955%" y="1039.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (20 samples, 0.25%)</title><rect x="55.7246%" y="1125" width="0.2454%" height="15" fill="rgb(248,210,23)" fg:x="4541" fg:w="20"/><text x="55.9746%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (18 samples, 0.22%)</title><rect x="55.7492%" y="1109" width="0.2209%" height="15" fill="rgb(253,135,8)" fg:x="4543" fg:w="18"/><text x="55.9992%" y="1119.50"></text></g><g><title>core::ops::function::Fn::call (18 samples, 0.22%)</title><rect x="55.7492%" y="1093" width="0.2209%" height="15" fill="rgb(217,98,21)" fg:x="4543" fg:w="18"/><text x="55.9992%" y="1103.50"></text></g><g><title>engine::engine::actor::ai::pick_up_system (1 samples, 0.01%)</title><rect x="55.9578%" y="1077" width="0.0123%" height="15" fill="rgb(253,130,21)" fg:x="4560" fg:w="1"/><text x="56.2078%" y="1087.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="55.9578%" y="1061" width="0.0123%" height="15" fill="rgb(207,81,54)" fg:x="4560" fg:w="1"/><text x="56.2078%" y="1071.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="55.9578%" y="1045" width="0.0123%" height="15" fill="rgb(232,48,33)" fg:x="4560" fg:w="1"/><text x="56.2078%" y="1055.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="55.9578%" y="1029" width="0.0123%" height="15" fill="rgb(211,9,35)" fg:x="4560" fg:w="1"/><text x="56.2078%" y="1039.50"></text></g><g><title>&lt;(F0,F1,F2) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="55.9578%" y="1013" width="0.0123%" height="15" fill="rgb(205,152,21)" fg:x="4560" fg:w="1"/><text x="56.2078%" y="1023.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="55.9578%" y="997" width="0.0123%" height="15" fill="rgb(249,21,27)" fg:x="4560" fg:w="1"/><text x="56.2078%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="55.9823%" y="1093" width="0.0123%" height="15" fill="rgb(252,29,24)" fg:x="4562" fg:w="1"/><text x="56.2323%" y="1103.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="55.9823%" y="1077" width="0.0123%" height="15" fill="rgb(230,130,50)" fg:x="4562" fg:w="1"/><text x="56.2323%" y="1087.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="55.9823%" y="1061" width="0.0123%" height="15" fill="rgb(239,144,14)" fg:x="4562" fg:w="1"/><text x="56.2323%" y="1071.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="55.9823%" y="1045" width="0.0123%" height="15" fill="rgb(227,111,50)" fg:x="4562" fg:w="1"/><text x="56.2323%" y="1055.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="55.9823%" y="1029" width="0.0123%" height="15" fill="rgb(254,84,20)" fg:x="4562" fg:w="1"/><text x="56.2323%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="55.9823%" y="1013" width="0.0123%" height="15" fill="rgb(232,90,48)" fg:x="4562" fg:w="1"/><text x="56.2323%" y="1023.50"></text></g><g><title>&lt;(P0,P1,P2,P3) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (3 samples, 0.04%)</title><rect x="55.9701%" y="1109" width="0.0368%" height="15" fill="rgb(253,63,47)" fg:x="4561" fg:w="3"/><text x="56.2201%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="55.9946%" y="1093" width="0.0123%" height="15" fill="rgb(251,146,35)" fg:x="4563" fg:w="1"/><text x="56.2446%" y="1103.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="55.9946%" y="1077" width="0.0123%" height="15" fill="rgb(229,192,35)" fg:x="4563" fg:w="1"/><text x="56.2446%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="55.9946%" y="1061" width="0.0123%" height="15" fill="rgb(225,68,9)" fg:x="4563" fg:w="1"/><text x="56.2446%" y="1071.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="55.9946%" y="1045" width="0.0123%" height="15" fill="rgb(214,97,34)" fg:x="4563" fg:w="1"/><text x="56.2446%" y="1055.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="55.9946%" y="1029" width="0.0123%" height="15" fill="rgb(253,31,26)" fg:x="4563" fg:w="1"/><text x="56.2446%" y="1039.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (1 samples, 0.01%)</title><rect x="55.9946%" y="1013" width="0.0123%" height="15" fill="rgb(225,151,47)" fg:x="4563" fg:w="1"/><text x="56.2446%" y="1023.50"></text></g><g><title>bevy_render::camera::camera::camera_system (1 samples, 0.01%)</title><rect x="56.0069%" y="1077" width="0.0123%" height="15" fill="rgb(206,185,9)" fg:x="4564" fg:w="1"/><text x="56.2569%" y="1087.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="56.0069%" y="1061" width="0.0123%" height="15" fill="rgb(249,65,17)" fg:x="4564" fg:w="1"/><text x="56.2569%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="56.0069%" y="1045" width="0.0123%" height="15" fill="rgb(220,110,10)" fg:x="4564" fg:w="1"/><text x="56.2569%" y="1055.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (1 samples, 0.01%)</title><rect x="56.0069%" y="1029" width="0.0123%" height="15" fill="rgb(222,198,49)" fg:x="4564" fg:w="1"/><text x="56.2569%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::query::filter::AddedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="56.0069%" y="1013" width="0.0123%" height="15" fill="rgb(239,81,13)" fg:x="4564" fg:w="1"/><text x="56.2569%" y="1023.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::is_added (1 samples, 0.01%)</title><rect x="56.0069%" y="997" width="0.0123%" height="15" fill="rgb(216,128,11)" fg:x="4564" fg:w="1"/><text x="56.2569%" y="1007.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="56.0069%" y="981" width="0.0123%" height="15" fill="rgb(247,156,8)" fg:x="4564" fg:w="1"/><text x="56.2569%" y="991.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::OptionFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (2 samples, 0.02%)</title><rect x="56.0560%" y="1029" width="0.0245%" height="15" fill="rgb(219,173,1)" fg:x="4568" fg:w="2"/><text x="56.3060%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadState&lt;T&gt; as bevy_ecs::query::fetch::FetchState&gt;::matches_table (2 samples, 0.02%)</title><rect x="56.0560%" y="1013" width="0.0245%" height="15" fill="rgb(227,42,24)" fg:x="4568" fg:w="2"/><text x="56.3060%" y="1023.50"></text></g><g><title>bevy_ecs::storage::table::Table::has_column (2 samples, 0.02%)</title><rect x="56.0560%" y="997" width="0.0245%" height="15" fill="rgb(253,219,50)" fg:x="4568" fg:w="2"/><text x="56.3060%" y="1007.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::contains (2 samples, 0.02%)</title><rect x="56.0560%" y="981" width="0.0245%" height="15" fill="rgb(215,191,54)" fg:x="4568" fg:w="2"/><text x="56.3060%" y="991.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::contains (2 samples, 0.02%)</title><rect x="56.0560%" y="965" width="0.0245%" height="15" fill="rgb(238,83,12)" fg:x="4568" fg:w="2"/><text x="56.3060%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="56.0560%" y="949" width="0.0245%" height="15" fill="rgb(205,124,9)" fg:x="4568" fg:w="2"/><text x="56.3060%" y="959.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::contains::{{closure}} (2 samples, 0.02%)</title><rect x="56.0560%" y="933" width="0.0245%" height="15" fill="rgb(253,174,7)" fg:x="4568" fg:w="2"/><text x="56.3060%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.02%)</title><rect x="56.0560%" y="917" width="0.0245%" height="15" fill="rgb(206,134,49)" fg:x="4568" fg:w="2"/><text x="56.3060%" y="927.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_table (3 samples, 0.04%)</title><rect x="56.0560%" y="1045" width="0.0368%" height="15" fill="rgb(221,89,20)" fg:x="4568" fg:w="3"/><text x="56.3060%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="56.0805%" y="1029" width="0.0123%" height="15" fill="rgb(240,205,13)" fg:x="4570" fg:w="1"/><text x="56.3305%" y="1039.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (1 samples, 0.01%)</title><rect x="56.0805%" y="1013" width="0.0123%" height="15" fill="rgb(237,174,32)" fg:x="4570" fg:w="1"/><text x="56.3305%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="56.0560%" y="1061" width="0.0491%" height="15" fill="rgb(226,12,15)" fg:x="4568" fg:w="4"/><text x="56.3060%" y="1071.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="56.0928%" y="1045" width="0.0123%" height="15" fill="rgb(245,160,52)" fg:x="4571" fg:w="1"/><text x="56.3428%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::OptionFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="56.0928%" y="1029" width="0.0123%" height="15" fill="rgb(253,80,21)" fg:x="4571" fg:w="1"/><text x="56.3428%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::EntityFetch as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (1 samples, 0.01%)</title><rect x="56.1050%" y="1029" width="0.0123%" height="15" fill="rgb(231,225,22)" fg:x="4572" fg:w="1"/><text x="56.3550%" y="1039.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ticks_mut_ptr (1 samples, 0.01%)</title><rect x="56.1173%" y="1013" width="0.0123%" height="15" fill="rgb(253,185,12)" fg:x="4573" fg:w="1"/><text x="56.3673%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="56.1173%" y="997" width="0.0123%" height="15" fill="rgb(234,197,21)" fg:x="4573" fg:w="1"/><text x="56.3673%" y="1007.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (4 samples, 0.05%)</title><rect x="56.1050%" y="1061" width="0.0491%" height="15" fill="rgb(210,47,30)" fg:x="4572" fg:w="4"/><text x="56.3550%" y="1071.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (4 samples, 0.05%)</title><rect x="56.1050%" y="1045" width="0.0491%" height="15" fill="rgb(246,139,27)" fg:x="4572" fg:w="4"/><text x="56.3550%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (3 samples, 0.04%)</title><rect x="56.1173%" y="1029" width="0.0368%" height="15" fill="rgb(226,130,16)" fg:x="4573" fg:w="3"/><text x="56.3673%" y="1039.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (2 samples, 0.02%)</title><rect x="56.1296%" y="1013" width="0.0245%" height="15" fill="rgb(237,208,20)" fg:x="4574" fg:w="2"/><text x="56.3796%" y="1023.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="56.1419%" y="997" width="0.0123%" height="15" fill="rgb(245,186,28)" fg:x="4575" fg:w="1"/><text x="56.3919%" y="1007.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="56.1419%" y="981" width="0.0123%" height="15" fill="rgb(238,105,39)" fg:x="4575" fg:w="1"/><text x="56.3919%" y="991.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="56.1419%" y="965" width="0.0123%" height="15" fill="rgb(253,228,11)" fg:x="4575" fg:w="1"/><text x="56.3919%" y="975.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="56.1419%" y="949" width="0.0123%" height="15" fill="rgb(224,136,38)" fg:x="4575" fg:w="1"/><text x="56.3919%" y="959.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (1 samples, 0.01%)</title><rect x="56.1541%" y="1061" width="0.0123%" height="15" fill="rgb(211,3,25)" fg:x="4576" fg:w="1"/><text x="56.4041%" y="1071.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (13 samples, 0.16%)</title><rect x="56.0191%" y="1077" width="0.1595%" height="15" fill="rgb(238,66,34)" fg:x="4565" fg:w="13"/><text x="56.2691%" y="1087.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.01%)</title><rect x="56.1664%" y="1061" width="0.0123%" height="15" fill="rgb(223,188,11)" fg:x="4577" fg:w="1"/><text x="56.4164%" y="1071.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (18 samples, 0.22%)</title><rect x="55.9701%" y="1125" width="0.2209%" height="15" fill="rgb(221,10,35)" fg:x="4561" fg:w="18"/><text x="56.2201%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (15 samples, 0.18%)</title><rect x="56.0069%" y="1109" width="0.1841%" height="15" fill="rgb(223,18,44)" fg:x="4564" fg:w="15"/><text x="56.2569%" y="1119.50"></text></g><g><title>core::ops::function::Fn::call (15 samples, 0.18%)</title><rect x="56.0069%" y="1093" width="0.1841%" height="15" fill="rgb(220,97,41)" fg:x="4564" fg:w="15"/><text x="56.2569%" y="1103.50"></text></g><g><title>engine::engine::render::camera_movement::camera_movement (1 samples, 0.01%)</title><rect x="56.1787%" y="1077" width="0.0123%" height="15" fill="rgb(206,95,45)" fg:x="4578" fg:w="1"/><text x="56.4287%" y="1087.50"></text></g><g><title>bevy_input::input::Input&lt;T&gt;::pressed (1 samples, 0.01%)</title><rect x="56.1787%" y="1061" width="0.0123%" height="15" fill="rgb(209,96,13)" fg:x="4578" fg:w="1"/><text x="56.4287%" y="1071.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.01%)</title><rect x="56.1787%" y="1045" width="0.0123%" height="15" fill="rgb(237,39,34)" fg:x="4578" fg:w="1"/><text x="56.4287%" y="1055.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.01%)</title><rect x="56.1787%" y="1029" width="0.0123%" height="15" fill="rgb(213,49,47)" fg:x="4578" fg:w="1"/><text x="56.4287%" y="1039.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="56.1909%" y="1125" width="0.0123%" height="15" fill="rgb(205,107,27)" fg:x="4579" fg:w="1"/><text x="56.4409%" y="1135.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="56.1909%" y="1109" width="0.0123%" height="15" fill="rgb(212,142,9)" fg:x="4579" fg:w="1"/><text x="56.4409%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="56.1909%" y="1093" width="0.0123%" height="15" fill="rgb(226,182,0)" fg:x="4579" fg:w="1"/><text x="56.4409%" y="1103.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="56.1909%" y="1077" width="0.0123%" height="15" fill="rgb(231,3,53)" fg:x="4579" fg:w="1"/><text x="56.4409%" y="1087.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ticks_mut_ptr (1 samples, 0.01%)</title><rect x="56.1909%" y="1061" width="0.0123%" height="15" fill="rgb(246,111,28)" fg:x="4579" fg:w="1"/><text x="56.4409%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="56.1909%" y="1045" width="0.0123%" height="15" fill="rgb(254,183,7)" fg:x="4579" fg:w="1"/><text x="56.4409%" y="1055.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="56.2032%" y="1125" width="0.0123%" height="15" fill="rgb(247,177,28)" fg:x="4580" fg:w="1"/><text x="56.4532%" y="1135.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6,P7) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="56.2032%" y="1109" width="0.0123%" height="15" fill="rgb(244,43,1)" fg:x="4580" fg:w="1"/><text x="56.4532%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="56.2032%" y="1093" width="0.0123%" height="15" fill="rgb(207,2,35)" fg:x="4580" fg:w="1"/><text x="56.4532%" y="1103.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="56.2155%" y="1125" width="0.0123%" height="15" fill="rgb(213,83,22)" fg:x="4581" fg:w="1"/><text x="56.4655%" y="1135.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6,P7,P8) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="56.2155%" y="1109" width="0.0123%" height="15" fill="rgb(246,212,13)" fg:x="4581" fg:w="1"/><text x="56.4655%" y="1119.50"></text></g><g><title>bevy_ecs::world::World::increment_change_tick (3 samples, 0.04%)</title><rect x="56.2278%" y="1125" width="0.0368%" height="15" fill="rgb(213,127,46)" fg:x="4582" fg:w="3"/><text x="56.4778%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (3 samples, 0.04%)</title><rect x="56.2278%" y="1109" width="0.0368%" height="15" fill="rgb(219,215,39)" fg:x="4582" fg:w="3"/><text x="56.4778%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.04%)</title><rect x="56.2278%" y="1093" width="0.0368%" height="15" fill="rgb(227,99,17)" fg:x="4582" fg:w="3"/><text x="56.4778%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.02%)</title><rect x="56.2646%" y="1125" width="0.0245%" height="15" fill="rgb(208,155,18)" fg:x="4585" fg:w="2"/><text x="56.5146%" y="1135.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (153 samples, 1.88%)</title><rect x="54.4239%" y="1141" width="1.8775%" height="15" fill="rgb(223,204,38)" fg:x="4435" fg:w="153"/><text x="54.6739%" y="1151.50">&lt;..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.01%)</title><rect x="56.2891%" y="1125" width="0.0123%" height="15" fill="rgb(212,114,21)" fg:x="4587" fg:w="1"/><text x="56.5391%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (2 samples, 0.02%)</title><rect x="56.3014%" y="1141" width="0.0245%" height="15" fill="rgb(250,74,13)" fg:x="4588" fg:w="2"/><text x="56.5514%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;()&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="56.3014%" y="1125" width="0.0245%" height="15" fill="rgb(234,7,1)" fg:x="4588" fg:w="2"/><text x="56.5514%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="56.3014%" y="1109" width="0.0245%" height="15" fill="rgb(207,138,31)" fg:x="4588" fg:w="2"/><text x="56.5514%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="56.3014%" y="1093" width="0.0245%" height="15" fill="rgb(215,186,42)" fg:x="4588" fg:w="2"/><text x="56.5514%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="56.3014%" y="1077" width="0.0245%" height="15" fill="rgb(229,205,49)" fg:x="4588" fg:w="2"/><text x="56.5514%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (2 samples, 0.02%)</title><rect x="56.3382%" y="1077" width="0.0245%" height="15" fill="rgb(216,156,32)" fg:x="4591" fg:w="2"/><text x="56.5882%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (2 samples, 0.02%)</title><rect x="56.3382%" y="1061" width="0.0245%" height="15" fill="rgb(238,7,21)" fg:x="4591" fg:w="2"/><text x="56.5882%" y="1071.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="56.3382%" y="1045" width="0.0245%" height="15" fill="rgb(249,190,22)" fg:x="4591" fg:w="2"/><text x="56.5882%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.02%)</title><rect x="56.3382%" y="1029" width="0.0245%" height="15" fill="rgb(253,51,31)" fg:x="4591" fg:w="2"/><text x="56.5882%" y="1039.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.02%)</title><rect x="56.3382%" y="1013" width="0.0245%" height="15" fill="rgb(237,90,54)" fg:x="4591" fg:w="2"/><text x="56.5882%" y="1023.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="56.3382%" y="997" width="0.0245%" height="15" fill="rgb(250,214,33)" fg:x="4591" fg:w="2"/><text x="56.5882%" y="1007.50"></text></g><g><title>event_listener::Inner::lock (2 samples, 0.02%)</title><rect x="56.3627%" y="1077" width="0.0245%" height="15" fill="rgb(237,10,49)" fg:x="4593" fg:w="2"/><text x="56.6127%" y="1087.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="56.3627%" y="1061" width="0.0245%" height="15" fill="rgb(241,56,36)" fg:x="4593" fg:w="2"/><text x="56.6127%" y="1071.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.02%)</title><rect x="56.3627%" y="1045" width="0.0245%" height="15" fill="rgb(227,164,12)" fg:x="4593" fg:w="2"/><text x="56.6127%" y="1055.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.02%)</title><rect x="56.3627%" y="1029" width="0.0245%" height="15" fill="rgb(249,149,35)" fg:x="4593" fg:w="2"/><text x="56.6127%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="56.3627%" y="1013" width="0.0245%" height="15" fill="rgb(238,227,50)" fg:x="4593" fg:w="2"/><text x="56.6127%" y="1023.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (5 samples, 0.06%)</title><rect x="56.3382%" y="1093" width="0.0614%" height="15" fill="rgb(235,102,45)" fg:x="4591" fg:w="5"/><text x="56.5882%" y="1103.50"></text></g><g><title>event_listener::List::remove (1 samples, 0.01%)</title><rect x="56.3873%" y="1077" width="0.0123%" height="15" fill="rgb(211,10,38)" fg:x="4595" fg:w="1"/><text x="56.6373%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (7 samples, 0.09%)</title><rect x="56.3259%" y="1141" width="0.0859%" height="15" fill="rgb(219,77,48)" fg:x="4590" fg:w="7"/><text x="56.5759%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (7 samples, 0.09%)</title><rect x="56.3259%" y="1125" width="0.0859%" height="15" fill="rgb(246,6,15)" fg:x="4590" fg:w="7"/><text x="56.5759%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (6 samples, 0.07%)</title><rect x="56.3382%" y="1109" width="0.0736%" height="15" fill="rgb(207,220,2)" fg:x="4591" fg:w="6"/><text x="56.5882%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (1 samples, 0.01%)</title><rect x="56.3996%" y="1093" width="0.0123%" height="15" fill="rgb(242,48,14)" fg:x="4596" fg:w="1"/><text x="56.6496%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="56.3996%" y="1077" width="0.0123%" height="15" fill="rgb(218,19,27)" fg:x="4596" fg:w="1"/><text x="56.6496%" y="1087.50"></text></g><g><title>&lt;async_channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="56.4118%" y="1125" width="0.0491%" height="15" fill="rgb(228,0,35)" fg:x="4597" fg:w="4"/><text x="56.6618%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.05%)</title><rect x="56.4118%" y="1109" width="0.0491%" height="15" fill="rgb(244,142,54)" fg:x="4597" fg:w="4"/><text x="56.6618%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.05%)</title><rect x="56.4118%" y="1093" width="0.0491%" height="15" fill="rgb(243,217,40)" fg:x="4597" fg:w="4"/><text x="56.6618%" y="1103.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (383 samples, 4.70%)</title><rect x="51.7732%" y="1173" width="4.7000%" height="15" fill="rgb(207,114,16)" fg:x="4219" fg:w="383"/><text x="52.0232%" y="1183.50">&lt;core..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (238 samples, 2.92%)</title><rect x="53.5526%" y="1157" width="2.9206%" height="15" fill="rgb(224,33,25)" fg:x="4364" fg:w="238"/><text x="53.8026%" y="1167.50">be..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Sender&lt;usize&gt;&gt; (5 samples, 0.06%)</title><rect x="56.4118%" y="1141" width="0.0614%" height="15" fill="rgb(230,93,54)" fg:x="4597" fg:w="5"/><text x="56.6618%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;usize&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="56.4609%" y="1125" width="0.0123%" height="15" fill="rgb(224,56,24)" fg:x="4601" fg:w="1"/><text x="56.7109%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="56.4609%" y="1109" width="0.0123%" height="15" fill="rgb(235,189,50)" fg:x="4601" fg:w="1"/><text x="56.7109%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="56.4609%" y="1093" width="0.0123%" height="15" fill="rgb(242,173,8)" fg:x="4601" fg:w="1"/><text x="56.7109%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="56.4609%" y="1077" width="0.0123%" height="15" fill="rgb(209,206,10)" fg:x="4601" fg:w="1"/><text x="56.7109%" y="1087.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="56.4732%" y="1157" width="0.0123%" height="15" fill="rgb(213,182,44)" fg:x="4602" fg:w="1"/><text x="56.7232%" y="1167.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="56.4732%" y="1141" width="0.0123%" height="15" fill="rgb(243,51,15)" fg:x="4602" fg:w="1"/><text x="56.7232%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="56.4732%" y="1125" width="0.0123%" height="15" fill="rgb(241,13,14)" fg:x="4602" fg:w="1"/><text x="56.7232%" y="1135.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="56.4732%" y="1109" width="0.0123%" height="15" fill="rgb(239,147,24)" fg:x="4602" fg:w="1"/><text x="56.7232%" y="1119.50"></text></g><g><title>std::sync::poison::Flag::borrow (1 samples, 0.01%)</title><rect x="56.4732%" y="1093" width="0.0123%" height="15" fill="rgb(223,129,16)" fg:x="4602" fg:w="1"/><text x="56.7232%" y="1103.50"></text></g><g><title>std::sync::poison::Flag::get (1 samples, 0.01%)</title><rect x="56.4732%" y="1077" width="0.0123%" height="15" fill="rgb(209,169,13)" fg:x="4602" fg:w="1"/><text x="56.7232%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="56.4732%" y="1061" width="0.0123%" height="15" fill="rgb(235,159,41)" fg:x="4602" fg:w="1"/><text x="56.7232%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="56.4732%" y="1045" width="0.0123%" height="15" fill="rgb(223,219,48)" fg:x="4602" fg:w="1"/><text x="56.7232%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="56.4732%" y="1173" width="0.0245%" height="15" fill="rgb(236,80,13)" fg:x="4602" fg:w="2"/><text x="56.7232%" y="1183.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="56.4855%" y="1157" width="0.0123%" height="15" fill="rgb(213,5,6)" fg:x="4603" fg:w="1"/><text x="56.7355%" y="1167.50"></text></g><g><title>core::mem::drop (4 samples, 0.05%)</title><rect x="56.4977%" y="1125" width="0.0491%" height="15" fill="rgb(205,59,21)" fg:x="4604" fg:w="4"/><text x="56.7477%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (4 samples, 0.05%)</title><rect x="56.4977%" y="1109" width="0.0491%" height="15" fill="rgb(247,137,35)" fg:x="4604" fg:w="4"/><text x="56.7477%" y="1119.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="56.4977%" y="1093" width="0.0491%" height="15" fill="rgb(242,208,28)" fg:x="4604" fg:w="4"/><text x="56.7477%" y="1103.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (4 samples, 0.05%)</title><rect x="56.4977%" y="1077" width="0.0491%" height="15" fill="rgb(245,62,25)" fg:x="4604" fg:w="4"/><text x="56.7477%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.04%)</title><rect x="56.5100%" y="1061" width="0.0368%" height="15" fill="rgb(233,99,54)" fg:x="4605" fg:w="3"/><text x="56.7600%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.04%)</title><rect x="56.5100%" y="1045" width="0.0368%" height="15" fill="rgb(213,10,37)" fg:x="4605" fg:w="3"/><text x="56.7600%" y="1055.50"></text></g><g><title>slab::Slab&lt;T&gt;::contains (2 samples, 0.02%)</title><rect x="56.5468%" y="1125" width="0.0245%" height="15" fill="rgb(235,143,30)" fg:x="4608" fg:w="2"/><text x="56.7968%" y="1135.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.09%)</title><rect x="56.4977%" y="1157" width="0.0859%" height="15" fill="rgb(250,146,33)" fg:x="4604" fg:w="7"/><text x="56.7477%" y="1167.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (7 samples, 0.09%)</title><rect x="56.4977%" y="1141" width="0.0859%" height="15" fill="rgb(226,198,42)" fg:x="4604" fg:w="7"/><text x="56.7477%" y="1151.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="56.5714%" y="1125" width="0.0123%" height="15" fill="rgb(222,55,6)" fg:x="4610" fg:w="1"/><text x="56.8214%" y="1135.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="56.5714%" y="1109" width="0.0123%" height="15" fill="rgb(213,224,31)" fg:x="4610" fg:w="1"/><text x="56.8214%" y="1119.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="56.5714%" y="1093" width="0.0123%" height="15" fill="rgb(226,103,35)" fg:x="4610" fg:w="1"/><text x="56.8214%" y="1103.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="56.5714%" y="1077" width="0.0123%" height="15" fill="rgb(205,66,45)" fg:x="4610" fg:w="1"/><text x="56.8214%" y="1087.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="56.5836%" y="1157" width="0.0123%" height="15" fill="rgb(226,51,42)" fg:x="4611" fg:w="1"/><text x="56.8336%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (395 samples, 4.85%)</title><rect x="51.7610%" y="1205" width="4.8472%" height="15" fill="rgb(206,69,1)" fg:x="4218" fg:w="395"/><text x="52.0110%" y="1215.50">&lt;core:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (395 samples, 4.85%)</title><rect x="51.7610%" y="1189" width="4.8472%" height="15" fill="rgb(213,228,47)" fg:x="4218" fg:w="395"/><text x="52.0110%" y="1199.50">async_..</text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (9 samples, 0.11%)</title><rect x="56.4977%" y="1173" width="0.1104%" height="15" fill="rgb(224,204,18)" fg:x="4604" fg:w="9"/><text x="56.7477%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="56.5959%" y="1157" width="0.0123%" height="15" fill="rgb(253,187,47)" fg:x="4612" fg:w="1"/><text x="56.8459%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.01%)</title><rect x="56.5959%" y="1141" width="0.0123%" height="15" fill="rgb(232,61,2)" fg:x="4612" fg:w="1"/><text x="56.8459%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="56.5959%" y="1125" width="0.0123%" height="15" fill="rgb(213,132,35)" fg:x="4612" fg:w="1"/><text x="56.8459%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="56.5959%" y="1109" width="0.0123%" height="15" fill="rgb(247,33,21)" fg:x="4612" fg:w="1"/><text x="56.8459%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="56.5959%" y="1093" width="0.0123%" height="15" fill="rgb(233,71,46)" fg:x="4612" fg:w="1"/><text x="56.8459%" y="1103.50"></text></g><g><title>async_task::header::Header::take (1 samples, 0.01%)</title><rect x="56.6082%" y="1205" width="0.0123%" height="15" fill="rgb(222,173,43)" fg:x="4613" fg:w="1"/><text x="56.8582%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="56.6082%" y="1189" width="0.0123%" height="15" fill="rgb(249,218,47)" fg:x="4613" fg:w="1"/><text x="56.8582%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="56.6082%" y="1173" width="0.0123%" height="15" fill="rgb(254,185,48)" fg:x="4613" fg:w="1"/><text x="56.8582%" y="1183.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (1 samples, 0.01%)</title><rect x="56.6204%" y="1205" width="0.0123%" height="15" fill="rgb(252,165,50)" fg:x="4614" fg:w="1"/><text x="56.8704%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="56.6204%" y="1189" width="0.0123%" height="15" fill="rgb(206,219,6)" fg:x="4614" fg:w="1"/><text x="56.8704%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="56.6204%" y="1173" width="0.0123%" height="15" fill="rgb(212,212,45)" fg:x="4614" fg:w="1"/><text x="56.8704%" y="1183.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (2 samples, 0.02%)</title><rect x="56.6327%" y="1157" width="0.0245%" height="15" fill="rgb(221,31,9)" fg:x="4615" fg:w="2"/><text x="56.8827%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (2 samples, 0.02%)</title><rect x="56.6327%" y="1141" width="0.0245%" height="15" fill="rgb(234,198,39)" fg:x="4615" fg:w="2"/><text x="56.8827%" y="1151.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (2 samples, 0.02%)</title><rect x="56.6327%" y="1125" width="0.0245%" height="15" fill="rgb(252,145,46)" fg:x="4615" fg:w="2"/><text x="56.8827%" y="1135.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (2 samples, 0.02%)</title><rect x="56.6327%" y="1109" width="0.0245%" height="15" fill="rgb(237,149,0)" fg:x="4615" fg:w="2"/><text x="56.8827%" y="1119.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (2 samples, 0.02%)</title><rect x="56.6327%" y="1093" width="0.0245%" height="15" fill="rgb(229,65,5)" fg:x="4615" fg:w="2"/><text x="56.8827%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.02%)</title><rect x="56.6327%" y="1077" width="0.0245%" height="15" fill="rgb(235,60,36)" fg:x="4615" fg:w="2"/><text x="56.8827%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.02%)</title><rect x="56.6327%" y="1061" width="0.0245%" height="15" fill="rgb(222,47,18)" fg:x="4615" fg:w="2"/><text x="56.8827%" y="1071.50"></text></g><g><title>async_task::utils::abort_on_panic (3 samples, 0.04%)</title><rect x="56.6327%" y="1205" width="0.0368%" height="15" fill="rgb(235,114,22)" fg:x="4615" fg:w="3"/><text x="56.8827%" y="1215.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (3 samples, 0.04%)</title><rect x="56.6327%" y="1189" width="0.0368%" height="15" fill="rgb(209,167,11)" fg:x="4615" fg:w="3"/><text x="56.8827%" y="1199.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.04%)</title><rect x="56.6327%" y="1173" width="0.0368%" height="15" fill="rgb(251,73,18)" fg:x="4615" fg:w="3"/><text x="56.8827%" y="1183.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="56.6573%" y="1157" width="0.0123%" height="15" fill="rgb(217,60,17)" fg:x="4617" fg:w="1"/><text x="56.9073%" y="1167.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="56.6573%" y="1141" width="0.0123%" height="15" fill="rgb(224,36,37)" fg:x="4617" fg:w="1"/><text x="56.9073%" y="1151.50"></text></g><g><title>async_task::runnable::Runnable::run (416 samples, 5.10%)</title><rect x="51.7119%" y="1237" width="5.1049%" height="15" fill="rgb(211,21,32)" fg:x="4214" fg:w="416"/><text x="51.9619%" y="1247.50">async_..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (416 samples, 5.10%)</title><rect x="51.7119%" y="1221" width="5.1049%" height="15" fill="rgb(231,55,48)" fg:x="4214" fg:w="416"/><text x="51.9619%" y="1231.50">async_..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (12 samples, 0.15%)</title><rect x="56.6695%" y="1205" width="0.1473%" height="15" fill="rgb(227,42,18)" fg:x="4618" fg:w="12"/><text x="56.9195%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.15%)</title><rect x="56.6695%" y="1189" width="0.1473%" height="15" fill="rgb(217,2,27)" fg:x="4618" fg:w="12"/><text x="56.9195%" y="1199.50"></text></g><g><title>concurrent_queue::full_fence (37 samples, 0.45%)</title><rect x="56.8781%" y="1205" width="0.4540%" height="15" fill="rgb(251,138,23)" fg:x="4635" fg:w="37"/><text x="57.1281%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (37 samples, 0.45%)</title><rect x="56.8781%" y="1189" width="0.4540%" height="15" fill="rgb(226,184,11)" fg:x="4635" fg:w="37"/><text x="57.1281%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (37 samples, 0.45%)</title><rect x="56.8781%" y="1173" width="0.4540%" height="15" fill="rgb(242,142,12)" fg:x="4635" fg:w="37"/><text x="57.1281%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.45%)</title><rect x="56.8781%" y="1157" width="0.4540%" height="15" fill="rgb(234,187,18)" fg:x="4635" fg:w="37"/><text x="57.1281%" y="1167.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (1 samples, 0.01%)</title><rect x="57.3322%" y="1205" width="0.0123%" height="15" fill="rgb(237,44,42)" fg:x="4672" fg:w="1"/><text x="57.5822%" y="1215.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (1 samples, 0.01%)</title><rect x="57.3445%" y="1205" width="0.0123%" height="15" fill="rgb(211,90,23)" fg:x="4673" fg:w="1"/><text x="57.5945%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="57.3445%" y="1189" width="0.0123%" height="15" fill="rgb(207,81,18)" fg:x="4673" fg:w="1"/><text x="57.5945%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="57.3445%" y="1173" width="0.0123%" height="15" fill="rgb(222,107,28)" fg:x="4673" fg:w="1"/><text x="57.5945%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="57.3567%" y="1205" width="0.0123%" height="15" fill="rgb(237,83,52)" fg:x="4674" fg:w="1"/><text x="57.6067%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="57.3567%" y="1189" width="0.0123%" height="15" fill="rgb(208,67,11)" fg:x="4674" fg:w="1"/><text x="57.6067%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.04%)</title><rect x="57.3690%" y="1205" width="0.0368%" height="15" fill="rgb(249,157,49)" fg:x="4675" fg:w="3"/><text x="57.6190%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.04%)</title><rect x="57.3690%" y="1189" width="0.0368%" height="15" fill="rgb(243,200,1)" fg:x="4675" fg:w="3"/><text x="57.6190%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (4 samples, 0.05%)</title><rect x="57.4058%" y="1205" width="0.0491%" height="15" fill="rgb(225,162,37)" fg:x="4678" fg:w="4"/><text x="57.6558%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_or (4 samples, 0.05%)</title><rect x="57.4058%" y="1189" width="0.0491%" height="15" fill="rgb(242,92,13)" fg:x="4678" fg:w="4"/><text x="57.6558%" y="1199.50"></text></g><g><title>async_executor::Executor::try_tick (486 samples, 5.96%)</title><rect x="51.5401%" y="1253" width="5.9639%" height="15" fill="rgb(220,43,36)" fg:x="4200" fg:w="486"/><text x="51.7901%" y="1263.50">async_ex..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (56 samples, 0.69%)</title><rect x="56.8168%" y="1237" width="0.6872%" height="15" fill="rgb(213,165,48)" fg:x="4630" fg:w="56"/><text x="57.0668%" y="1247.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (52 samples, 0.64%)</title><rect x="56.8659%" y="1221" width="0.6381%" height="15" fill="rgb(227,200,9)" fg:x="4634" fg:w="52"/><text x="57.1159%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="57.4549%" y="1205" width="0.0491%" height="15" fill="rgb(221,222,28)" fg:x="4682" fg:w="4"/><text x="57.7049%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="57.4549%" y="1189" width="0.0491%" height="15" fill="rgb(223,142,26)" fg:x="4682" fg:w="4"/><text x="57.7049%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="57.5040%" y="1237" width="0.0123%" height="15" fill="rgb(243,46,9)" fg:x="4686" fg:w="1"/><text x="57.7540%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="57.5040%" y="1221" width="0.0123%" height="15" fill="rgb(250,56,11)" fg:x="4686" fg:w="1"/><text x="57.7540%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="57.5040%" y="1205" width="0.0123%" height="15" fill="rgb(229,113,5)" fg:x="4686" fg:w="1"/><text x="57.7540%" y="1215.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (2 samples, 0.02%)</title><rect x="57.5163%" y="1157" width="0.0245%" height="15" fill="rgb(244,108,28)" fg:x="4687" fg:w="2"/><text x="57.7663%" y="1167.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="57.5163%" y="1141" width="0.0245%" height="15" fill="rgb(242,119,50)" fg:x="4687" fg:w="2"/><text x="57.7663%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="57.5408%" y="1157" width="0.0123%" height="15" fill="rgb(224,164,23)" fg:x="4689" fg:w="1"/><text x="57.7908%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="57.5408%" y="1141" width="0.0123%" height="15" fill="rgb(214,227,44)" fg:x="4689" fg:w="1"/><text x="57.7908%" y="1151.50"></text></g><g><title>async_task::runnable::Runnable::schedule (5 samples, 0.06%)</title><rect x="57.5163%" y="1237" width="0.0614%" height="15" fill="rgb(238,202,4)" fg:x="4687" fg:w="5"/><text x="57.7663%" y="1247.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (5 samples, 0.06%)</title><rect x="57.5163%" y="1221" width="0.0614%" height="15" fill="rgb(213,190,30)" fg:x="4687" fg:w="5"/><text x="57.7663%" y="1231.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (5 samples, 0.06%)</title><rect x="57.5163%" y="1205" width="0.0614%" height="15" fill="rgb(239,15,2)" fg:x="4687" fg:w="5"/><text x="57.7663%" y="1215.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (5 samples, 0.06%)</title><rect x="57.5163%" y="1189" width="0.0614%" height="15" fill="rgb(249,229,4)" fg:x="4687" fg:w="5"/><text x="57.7663%" y="1199.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (5 samples, 0.06%)</title><rect x="57.5163%" y="1173" width="0.0614%" height="15" fill="rgb(239,75,44)" fg:x="4687" fg:w="5"/><text x="57.7663%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="57.5531%" y="1157" width="0.0245%" height="15" fill="rgb(251,206,23)" fg:x="4690" fg:w="2"/><text x="57.8031%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="57.5531%" y="1141" width="0.0245%" height="15" fill="rgb(215,208,0)" fg:x="4690" fg:w="2"/><text x="57.8031%" y="1151.50"></text></g><g><title>async_task::runnable::spawn_unchecked (1 samples, 0.01%)</title><rect x="57.5776%" y="1237" width="0.0123%" height="15" fill="rgb(230,75,50)" fg:x="4692" fg:w="1"/><text x="57.8276%" y="1247.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (1 samples, 0.01%)</title><rect x="57.5776%" y="1221" width="0.0123%" height="15" fill="rgb(246,180,39)" fg:x="4692" fg:w="1"/><text x="57.8276%" y="1231.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="57.5776%" y="1205" width="0.0123%" height="15" fill="rgb(249,175,24)" fg:x="4692" fg:w="1"/><text x="57.8276%" y="1215.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="57.5776%" y="1189" width="0.0123%" height="15" fill="rgb(247,176,22)" fg:x="4692" fg:w="1"/><text x="57.8276%" y="1199.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="57.5776%" y="1173" width="0.0123%" height="15" fill="rgb(241,100,24)" fg:x="4692" fg:w="1"/><text x="57.8276%" y="1183.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="57.5776%" y="1157" width="0.0123%" height="15" fill="rgb(233,4,35)" fg:x="4692" fg:w="1"/><text x="57.8276%" y="1167.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (2 samples, 0.02%)</title><rect x="57.5899%" y="1237" width="0.0245%" height="15" fill="rgb(211,164,46)" fg:x="4693" fg:w="2"/><text x="57.8399%" y="1247.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (2 samples, 0.02%)</title><rect x="57.5899%" y="1221" width="0.0245%" height="15" fill="rgb(242,99,53)" fg:x="4693" fg:w="2"/><text x="57.8399%" y="1231.50"></text></g><g><title>async_executor::LocalExecutor::spawn (14 samples, 0.17%)</title><rect x="57.5040%" y="1253" width="0.1718%" height="15" fill="rgb(243,45,33)" fg:x="4686" fg:w="14"/><text x="57.7540%" y="1263.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (5 samples, 0.06%)</title><rect x="57.6144%" y="1237" width="0.0614%" height="15" fill="rgb(217,55,21)" fg:x="4695" fg:w="5"/><text x="57.8644%" y="1247.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (5 samples, 0.06%)</title><rect x="57.6144%" y="1221" width="0.0614%" height="15" fill="rgb(245,145,46)" fg:x="4695" fg:w="5"/><text x="57.8644%" y="1231.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.02%)</title><rect x="57.6512%" y="1205" width="0.0245%" height="15" fill="rgb(215,112,45)" fg:x="4698" fg:w="2"/><text x="57.9012%" y="1215.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="57.6512%" y="1189" width="0.0245%" height="15" fill="rgb(228,104,16)" fg:x="4698" fg:w="2"/><text x="57.9012%" y="1199.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="57.6758%" y="1173" width="0.0368%" height="15" fill="rgb(239,186,38)" fg:x="4700" fg:w="3"/><text x="57.9258%" y="1183.50"></text></g><g><title>async_executor::Executor::state (4 samples, 0.05%)</title><rect x="57.6758%" y="1221" width="0.0491%" height="15" fill="rgb(228,38,35)" fg:x="4700" fg:w="4"/><text x="57.9258%" y="1231.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (4 samples, 0.05%)</title><rect x="57.6758%" y="1205" width="0.0491%" height="15" fill="rgb(251,42,40)" fg:x="4700" fg:w="4"/><text x="57.9258%" y="1215.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (4 samples, 0.05%)</title><rect x="57.6758%" y="1189" width="0.0491%" height="15" fill="rgb(210,51,19)" fg:x="4700" fg:w="4"/><text x="57.9258%" y="1199.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="57.7126%" y="1173" width="0.0123%" height="15" fill="rgb(236,94,42)" fg:x="4703" fg:w="1"/><text x="57.9626%" y="1183.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (1 samples, 0.01%)</title><rect x="57.7126%" y="1157" width="0.0123%" height="15" fill="rgb(239,167,16)" fg:x="4703" fg:w="1"/><text x="57.9626%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="57.7126%" y="1141" width="0.0123%" height="15" fill="rgb(252,175,31)" fg:x="4703" fg:w="1"/><text x="57.9626%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="57.7126%" y="1125" width="0.0123%" height="15" fill="rgb(206,166,30)" fg:x="4703" fg:w="1"/><text x="57.9626%" y="1135.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (2 samples, 0.02%)</title><rect x="57.7249%" y="1221" width="0.0245%" height="15" fill="rgb(206,209,37)" fg:x="4704" fg:w="2"/><text x="57.9749%" y="1231.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="57.7494%" y="1221" width="0.0123%" height="15" fill="rgb(226,91,4)" fg:x="4706" fg:w="1"/><text x="57.9994%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.01%)</title><rect x="57.7494%" y="1205" width="0.0123%" height="15" fill="rgb(222,167,0)" fg:x="4706" fg:w="1"/><text x="57.9994%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="57.7494%" y="1189" width="0.0123%" height="15" fill="rgb(211,70,14)" fg:x="4706" fg:w="1"/><text x="57.9994%" y="1199.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.01%)</title><rect x="57.8230%" y="1061" width="0.0123%" height="15" fill="rgb(214,84,42)" fg:x="4712" fg:w="1"/><text x="58.0730%" y="1071.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (1 samples, 0.01%)</title><rect x="57.8230%" y="1045" width="0.0123%" height="15" fill="rgb(235,157,37)" fg:x="4712" fg:w="1"/><text x="58.0730%" y="1055.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="57.8230%" y="1029" width="0.0123%" height="15" fill="rgb(225,13,6)" fg:x="4712" fg:w="1"/><text x="58.0730%" y="1039.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="57.8230%" y="1013" width="0.0123%" height="15" fill="rgb(205,202,1)" fg:x="4712" fg:w="1"/><text x="58.0730%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="57.8230%" y="997" width="0.0123%" height="15" fill="rgb(232,195,26)" fg:x="4712" fg:w="1"/><text x="58.0730%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="57.8230%" y="981" width="0.0123%" height="15" fill="rgb(208,102,26)" fg:x="4712" fg:w="1"/><text x="58.0730%" y="991.50"></text></g><g><title>async_task::header::Header::register (7 samples, 0.09%)</title><rect x="57.8230%" y="1077" width="0.0859%" height="15" fill="rgb(215,41,39)" fg:x="4712" fg:w="7"/><text x="58.0730%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (6 samples, 0.07%)</title><rect x="57.8353%" y="1061" width="0.0736%" height="15" fill="rgb(247,139,11)" fg:x="4713" fg:w="6"/><text x="58.0853%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (6 samples, 0.07%)</title><rect x="57.8353%" y="1045" width="0.0736%" height="15" fill="rgb(243,99,6)" fg:x="4713" fg:w="6"/><text x="58.0853%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.04%)</title><rect x="57.9089%" y="1077" width="0.0368%" height="15" fill="rgb(230,168,48)" fg:x="4719" fg:w="3"/><text x="58.1589%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.04%)</title><rect x="57.9089%" y="1061" width="0.0368%" height="15" fill="rgb(238,227,13)" fg:x="4719" fg:w="3"/><text x="58.1589%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.04%)</title><rect x="57.9458%" y="1077" width="0.0368%" height="15" fill="rgb(209,109,13)" fg:x="4722" fg:w="3"/><text x="58.1958%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.04%)</title><rect x="57.9458%" y="1061" width="0.0368%" height="15" fill="rgb(228,195,1)" fg:x="4722" fg:w="3"/><text x="58.1958%" y="1071.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (15 samples, 0.18%)</title><rect x="57.8108%" y="1109" width="0.1841%" height="15" fill="rgb(230,218,0)" fg:x="4711" fg:w="15"/><text x="58.0608%" y="1119.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (15 samples, 0.18%)</title><rect x="57.8108%" y="1093" width="0.1841%" height="15" fill="rgb(206,1,45)" fg:x="4711" fg:w="15"/><text x="58.0608%" y="1103.50"></text></g><g><title>core::task::wake::Context::waker (1 samples, 0.01%)</title><rect x="57.9826%" y="1077" width="0.0123%" height="15" fill="rgb(209,124,26)" fg:x="4725" fg:w="1"/><text x="58.2326%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="57.9948%" y="1109" width="0.0123%" height="15" fill="rgb(220,59,8)" fg:x="4726" fg:w="1"/><text x="58.2448%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="58.0071%" y="1109" width="0.0123%" height="15" fill="rgb(251,41,37)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="1119.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="58.0071%" y="1093" width="0.0123%" height="15" fill="rgb(239,152,21)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;async_task::task::Task&lt;()&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="58.0071%" y="1077" width="0.0123%" height="15" fill="rgb(226,32,1)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="1087.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="58.0071%" y="1061" width="0.0123%" height="15" fill="rgb(230,154,36)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="58.0071%" y="1045" width="0.0123%" height="15" fill="rgb(208,228,43)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="1055.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="58.0071%" y="1029" width="0.0123%" height="15" fill="rgb(214,203,3)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="58.0071%" y="1013" width="0.0123%" height="15" fill="rgb(207,149,29)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="1023.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="58.0071%" y="997" width="0.0123%" height="15" fill="rgb(250,105,7)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="1007.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="58.0071%" y="981" width="0.0123%" height="15" fill="rgb(232,222,16)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="991.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="58.0071%" y="965" width="0.0123%" height="15" fill="rgb(209,32,24)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="975.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.0071%" y="949" width="0.0123%" height="15" fill="rgb(225,13,6)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="959.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.0071%" y="933" width="0.0123%" height="15" fill="rgb(245,226,26)" fg:x="4727" fg:w="1"/><text x="58.2571%" y="943.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_canceled (1 samples, 0.01%)</title><rect x="58.0194%" y="1077" width="0.0123%" height="15" fill="rgb(229,178,27)" fg:x="4728" fg:w="1"/><text x="58.2694%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="58.0194%" y="1061" width="0.0123%" height="15" fill="rgb(205,227,28)" fg:x="4728" fg:w="1"/><text x="58.2694%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="58.0194%" y="1045" width="0.0123%" height="15" fill="rgb(210,191,45)" fg:x="4728" fg:w="1"/><text x="58.2694%" y="1055.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.09%)</title><rect x="58.0194%" y="1093" width="0.0859%" height="15" fill="rgb(206,124,16)" fg:x="4728" fg:w="7"/><text x="58.2694%" y="1103.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_detached (6 samples, 0.07%)</title><rect x="58.0317%" y="1077" width="0.0736%" height="15" fill="rgb(210,162,0)" fg:x="4729" fg:w="6"/><text x="58.2817%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.06%)</title><rect x="58.0439%" y="1061" width="0.0614%" height="15" fill="rgb(211,54,38)" fg:x="4730" fg:w="5"/><text x="58.2939%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.06%)</title><rect x="58.0439%" y="1045" width="0.0614%" height="15" fill="rgb(248,192,3)" fg:x="4730" fg:w="5"/><text x="58.2939%" y="1055.50"></text></g><g><title>__GI___libc_free (11 samples, 0.13%)</title><rect x="58.1053%" y="1093" width="0.1350%" height="15" fill="rgb(233,187,18)" fg:x="4735" fg:w="11"/><text x="58.3553%" y="1103.50"></text></g><g><title>_int_free (11 samples, 0.13%)</title><rect x="58.1053%" y="1077" width="0.1350%" height="15" fill="rgb(237,208,14)" fg:x="4735" fg:w="11"/><text x="58.3553%" y="1087.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.02%)</title><rect x="58.2157%" y="1061" width="0.0245%" height="15" fill="rgb(212,77,1)" fg:x="4744" fg:w="2"/><text x="58.4657%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.49%)</title><rect x="57.7985%" y="1189" width="0.4909%" height="15" fill="rgb(210,163,22)" fg:x="4710" fg:w="40"/><text x="58.0485%" y="1199.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (40 samples, 0.49%)</title><rect x="57.7985%" y="1173" width="0.4909%" height="15" fill="rgb(250,58,28)" fg:x="4710" fg:w="40"/><text x="58.0485%" y="1183.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (40 samples, 0.49%)</title><rect x="57.7985%" y="1157" width="0.4909%" height="15" fill="rgb(254,28,41)" fg:x="4710" fg:w="40"/><text x="58.0485%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.49%)</title><rect x="57.7985%" y="1141" width="0.4909%" height="15" fill="rgb(237,162,36)" fg:x="4710" fg:w="40"/><text x="58.0485%" y="1151.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (40 samples, 0.49%)</title><rect x="57.7985%" y="1125" width="0.4909%" height="15" fill="rgb(232,56,6)" fg:x="4710" fg:w="40"/><text x="58.0485%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (22 samples, 0.27%)</title><rect x="58.0194%" y="1109" width="0.2700%" height="15" fill="rgb(216,127,42)" fg:x="4728" fg:w="22"/><text x="58.2694%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (4 samples, 0.05%)</title><rect x="58.2403%" y="1093" width="0.0491%" height="15" fill="rgb(241,69,15)" fg:x="4746" fg:w="4"/><text x="58.4903%" y="1103.50"></text></g><g><title>async_task::utils::abort_on_panic (4 samples, 0.05%)</title><rect x="58.2403%" y="1077" width="0.0491%" height="15" fill="rgb(227,180,19)" fg:x="4746" fg:w="4"/><text x="58.4903%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy::{{closure}} (4 samples, 0.05%)</title><rect x="58.2403%" y="1061" width="0.0491%" height="15" fill="rgb(231,188,29)" fg:x="4746" fg:w="4"/><text x="58.4903%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (4 samples, 0.05%)</title><rect x="58.2403%" y="1045" width="0.0491%" height="15" fill="rgb(224,176,27)" fg:x="4746" fg:w="4"/><text x="58.4903%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::LocalExecutor::schedule::{{closure}}&gt; (4 samples, 0.05%)</title><rect x="58.2403%" y="1029" width="0.0491%" height="15" fill="rgb(249,214,19)" fg:x="4746" fg:w="4"/><text x="58.4903%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (4 samples, 0.05%)</title><rect x="58.2403%" y="1013" width="0.0491%" height="15" fill="rgb(240,0,4)" fg:x="4746" fg:w="4"/><text x="58.4903%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="58.2403%" y="997" width="0.0491%" height="15" fill="rgb(233,28,41)" fg:x="4746" fg:w="4"/><text x="58.4903%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.05%)</title><rect x="58.2403%" y="981" width="0.0491%" height="15" fill="rgb(220,90,51)" fg:x="4746" fg:w="4"/><text x="58.4903%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.05%)</title><rect x="58.2403%" y="965" width="0.0491%" height="15" fill="rgb(250,52,22)" fg:x="4746" fg:w="4"/><text x="58.4903%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (4 samples, 0.05%)</title><rect x="58.2894%" y="1189" width="0.0491%" height="15" fill="rgb(231,152,36)" fg:x="4750" fg:w="4"/><text x="58.5394%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.05%)</title><rect x="58.2894%" y="1173" width="0.0491%" height="15" fill="rgb(250,218,4)" fg:x="4750" fg:w="4"/><text x="58.5394%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.05%)</title><rect x="58.2894%" y="1157" width="0.0491%" height="15" fill="rgb(210,38,21)" fg:x="4750" fg:w="4"/><text x="58.5394%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="58.3384%" y="1125" width="0.0123%" height="15" fill="rgb(230,75,13)" fg:x="4754" fg:w="1"/><text x="58.5884%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="58.3384%" y="1109" width="0.0123%" height="15" fill="rgb(250,68,53)" fg:x="4754" fg:w="1"/><text x="58.5884%" y="1119.50"></text></g><g><title>async_task::utils::abort_on_panic (2 samples, 0.02%)</title><rect x="58.3384%" y="1189" width="0.0245%" height="15" fill="rgb(250,210,16)" fg:x="4754" fg:w="2"/><text x="58.5884%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (2 samples, 0.02%)</title><rect x="58.3384%" y="1173" width="0.0245%" height="15" fill="rgb(240,132,5)" fg:x="4754" fg:w="2"/><text x="58.5884%" y="1183.50"></text></g><g><title>core::task::wake::Waker::wake (2 samples, 0.02%)</title><rect x="58.3384%" y="1157" width="0.0245%" height="15" fill="rgb(222,148,48)" fg:x="4754" fg:w="2"/><text x="58.5884%" y="1167.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (2 samples, 0.02%)</title><rect x="58.3384%" y="1141" width="0.0245%" height="15" fill="rgb(247,181,24)" fg:x="4754" fg:w="2"/><text x="58.5884%" y="1151.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.01%)</title><rect x="58.3507%" y="1125" width="0.0123%" height="15" fill="rgb(239,5,31)" fg:x="4755" fg:w="1"/><text x="58.6007%" y="1135.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="58.3507%" y="1109" width="0.0123%" height="15" fill="rgb(241,152,38)" fg:x="4755" fg:w="1"/><text x="58.6007%" y="1119.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="58.3507%" y="1093" width="0.0123%" height="15" fill="rgb(246,200,37)" fg:x="4755" fg:w="1"/><text x="58.6007%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (54 samples, 0.66%)</title><rect x="57.7617%" y="1221" width="0.6627%" height="15" fill="rgb(243,210,26)" fg:x="4707" fg:w="54"/><text x="58.0117%" y="1231.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (54 samples, 0.66%)</title><rect x="57.7617%" y="1205" width="0.6627%" height="15" fill="rgb(222,22,22)" fg:x="4707" fg:w="54"/><text x="58.0117%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (5 samples, 0.06%)</title><rect x="58.3630%" y="1189" width="0.0614%" height="15" fill="rgb(208,129,28)" fg:x="4756" fg:w="5"/><text x="58.6130%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (5 samples, 0.06%)</title><rect x="58.3630%" y="1173" width="0.0614%" height="15" fill="rgb(254,169,28)" fg:x="4756" fg:w="5"/><text x="58.6130%" y="1183.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="58.5225%" y="1189" width="0.0123%" height="15" fill="rgb(225,45,17)" fg:x="4769" fg:w="1"/><text x="58.7725%" y="1199.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="58.5225%" y="1173" width="0.0123%" height="15" fill="rgb(232,199,2)" fg:x="4769" fg:w="1"/><text x="58.7725%" y="1183.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="58.5225%" y="1157" width="0.0123%" height="15" fill="rgb(235,33,40)" fg:x="4769" fg:w="1"/><text x="58.7725%" y="1167.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="58.5225%" y="1141" width="0.0123%" height="15" fill="rgb(237,89,50)" fg:x="4769" fg:w="1"/><text x="58.7725%" y="1151.50"></text></g><g><title>concurrent_queue::full_fence (34 samples, 0.42%)</title><rect x="58.5348%" y="1189" width="0.4172%" height="15" fill="rgb(238,126,5)" fg:x="4770" fg:w="34"/><text x="58.7848%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (34 samples, 0.42%)</title><rect x="58.5348%" y="1173" width="0.4172%" height="15" fill="rgb(247,214,42)" fg:x="4770" fg:w="34"/><text x="58.7848%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (34 samples, 0.42%)</title><rect x="58.5348%" y="1157" width="0.4172%" height="15" fill="rgb(238,60,45)" fg:x="4770" fg:w="34"/><text x="58.7848%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (34 samples, 0.42%)</title><rect x="58.5348%" y="1141" width="0.4172%" height="15" fill="rgb(225,69,44)" fg:x="4770" fg:w="34"/><text x="58.7848%" y="1151.50"></text></g><g><title>concurrent_queue::unbounded::Block&lt;T&gt;::destroy (1 samples, 0.01%)</title><rect x="58.9520%" y="1189" width="0.0123%" height="15" fill="rgb(241,13,44)" fg:x="4804" fg:w="1"/><text x="59.2020%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="58.9520%" y="1173" width="0.0123%" height="15" fill="rgb(227,121,22)" fg:x="4804" fg:w="1"/><text x="59.2020%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="58.9520%" y="1157" width="0.0123%" height="15" fill="rgb(231,160,23)" fg:x="4804" fg:w="1"/><text x="59.2020%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.02%)</title><rect x="58.9643%" y="1189" width="0.0245%" height="15" fill="rgb(250,179,43)" fg:x="4805" fg:w="2"/><text x="59.2143%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="58.9643%" y="1173" width="0.0245%" height="15" fill="rgb(233,54,46)" fg:x="4805" fg:w="2"/><text x="59.2143%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="58.9888%" y="1189" width="0.0245%" height="15" fill="rgb(247,120,42)" fg:x="4807" fg:w="2"/><text x="59.2388%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="58.9888%" y="1173" width="0.0245%" height="15" fill="rgb(221,219,12)" fg:x="4807" fg:w="2"/><text x="59.2388%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (2 samples, 0.02%)</title><rect x="59.0134%" y="1189" width="0.0245%" height="15" fill="rgb(211,126,8)" fg:x="4809" fg:w="2"/><text x="59.2634%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_or (2 samples, 0.02%)</title><rect x="59.0134%" y="1173" width="0.0245%" height="15" fill="rgb(218,154,33)" fg:x="4809" fg:w="2"/><text x="59.2634%" y="1183.50"></text></g><g><title>async_executor::Executor::try_tick (115 samples, 1.41%)</title><rect x="57.6758%" y="1237" width="1.4112%" height="15" fill="rgb(212,199,16)" fg:x="4700" fg:w="115"/><text x="57.9258%" y="1247.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (54 samples, 0.66%)</title><rect x="58.4243%" y="1221" width="0.6627%" height="15" fill="rgb(236,215,46)" fg:x="4761" fg:w="54"/><text x="58.6743%" y="1231.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (53 samples, 0.65%)</title><rect x="58.4366%" y="1205" width="0.6504%" height="15" fill="rgb(232,32,22)" fg:x="4762" fg:w="53"/><text x="58.6866%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="59.0379%" y="1189" width="0.0491%" height="15" fill="rgb(234,79,15)" fg:x="4811" fg:w="4"/><text x="59.2879%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="59.0379%" y="1173" width="0.0491%" height="15" fill="rgb(235,187,47)" fg:x="4811" fg:w="4"/><text x="59.2879%" y="1183.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (116 samples, 1.42%)</title><rect x="57.6758%" y="1253" width="1.4235%" height="15" fill="rgb(244,69,37)" fg:x="4700" fg:w="116"/><text x="57.9258%" y="1263.50"></text></g><g><title>async_executor::LocalExecutor::inner (1 samples, 0.01%)</title><rect x="59.0870%" y="1237" width="0.0123%" height="15" fill="rgb(249,140,25)" fg:x="4815" fg:w="1"/><text x="59.3370%" y="1247.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.01%)</title><rect x="59.0870%" y="1221" width="0.0123%" height="15" fill="rgb(213,69,8)" fg:x="4815" fg:w="1"/><text x="59.3370%" y="1231.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.01%)</title><rect x="59.0870%" y="1205" width="0.0123%" height="15" fill="rgb(220,136,2)" fg:x="4815" fg:w="1"/><text x="59.3370%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_tasks::task_pool::Scope&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="59.0993%" y="1253" width="0.0123%" height="15" fill="rgb(237,50,36)" fg:x="4816" fg:w="1"/><text x="59.3493%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="59.0993%" y="1237" width="0.0123%" height="15" fill="rgb(226,18,11)" fg:x="4816" fg:w="1"/><text x="59.3493%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="59.0993%" y="1221" width="0.0123%" height="15" fill="rgb(243,156,2)" fg:x="4816" fg:w="1"/><text x="59.3493%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[async_task::task::Task&lt;()&gt;]&gt; (1 samples, 0.01%)</title><rect x="59.0993%" y="1205" width="0.0123%" height="15" fill="rgb(218,8,34)" fg:x="4816" fg:w="1"/><text x="59.3493%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="59.0993%" y="1189" width="0.0123%" height="15" fill="rgb(250,94,35)" fg:x="4816" fg:w="1"/><text x="59.3493%" y="1199.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="59.0993%" y="1173" width="0.0123%" height="15" fill="rgb(229,127,21)" fg:x="4816" fg:w="1"/><text x="59.3493%" y="1183.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (3 samples, 0.04%)</title><rect x="59.2465%" y="1205" width="0.0368%" height="15" fill="rgb(234,49,5)" fg:x="4828" fg:w="3"/><text x="59.4965%" y="1215.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="59.2711%" y="1189" width="0.0123%" height="15" fill="rgb(248,12,16)" fg:x="4830" fg:w="1"/><text x="59.5211%" y="1199.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="59.2711%" y="1173" width="0.0123%" height="15" fill="rgb(208,220,31)" fg:x="4830" fg:w="1"/><text x="59.5211%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="59.2711%" y="1157" width="0.0123%" height="15" fill="rgb(243,184,0)" fg:x="4830" fg:w="1"/><text x="59.5211%" y="1167.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="59.2956%" y="1189" width="0.0368%" height="15" fill="rgb(217,38,21)" fg:x="4832" fg:w="3"/><text x="59.5456%" y="1199.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.04%)</title><rect x="59.2956%" y="1173" width="0.0368%" height="15" fill="rgb(239,120,45)" fg:x="4832" fg:w="3"/><text x="59.5456%" y="1183.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (3 samples, 0.04%)</title><rect x="59.2956%" y="1157" width="0.0368%" height="15" fill="rgb(235,33,2)" fg:x="4832" fg:w="3"/><text x="59.5456%" y="1167.50"></text></g><g><title>async_task::header::Header::register (2 samples, 0.02%)</title><rect x="59.3079%" y="1141" width="0.0245%" height="15" fill="rgb(249,161,5)" fg:x="4833" fg:w="2"/><text x="59.5579%" y="1151.50"></text></g><g><title>async_task::utils::abort_on_panic (2 samples, 0.02%)</title><rect x="59.3079%" y="1125" width="0.0245%" height="15" fill="rgb(250,165,48)" fg:x="4833" fg:w="2"/><text x="59.5579%" y="1135.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (2 samples, 0.02%)</title><rect x="59.3079%" y="1109" width="0.0245%" height="15" fill="rgb(221,23,45)" fg:x="4833" fg:w="2"/><text x="59.5579%" y="1119.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="59.3079%" y="1093" width="0.0245%" height="15" fill="rgb(217,108,46)" fg:x="4833" fg:w="2"/><text x="59.5579%" y="1103.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (2 samples, 0.02%)</title><rect x="59.3079%" y="1077" width="0.0245%" height="15" fill="rgb(254,26,35)" fg:x="4833" fg:w="2"/><text x="59.5579%" y="1087.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="59.3079%" y="1061" width="0.0245%" height="15" fill="rgb(218,223,28)" fg:x="4833" fg:w="2"/><text x="59.5579%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="59.3079%" y="1045" width="0.0245%" height="15" fill="rgb(242,27,47)" fg:x="4833" fg:w="2"/><text x="59.5579%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="59.3079%" y="1029" width="0.0245%" height="15" fill="rgb(218,39,35)" fg:x="4833" fg:w="2"/><text x="59.5579%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="59.3079%" y="1013" width="0.0245%" height="15" fill="rgb(232,127,16)" fg:x="4833" fg:w="2"/><text x="59.5579%" y="1023.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (27 samples, 0.33%)</title><rect x="59.5779%" y="1077" width="0.3313%" height="15" fill="rgb(231,219,51)" fg:x="4855" fg:w="27"/><text x="59.8279%" y="1087.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (27 samples, 0.33%)</title><rect x="59.5779%" y="1061" width="0.3313%" height="15" fill="rgb(217,220,46)" fg:x="4855" fg:w="27"/><text x="59.8279%" y="1071.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.29%)</title><rect x="59.6147%" y="1045" width="0.2945%" height="15" fill="rgb(230,75,1)" fg:x="4858" fg:w="24"/><text x="59.8647%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (24 samples, 0.29%)</title><rect x="59.6147%" y="1029" width="0.2945%" height="15" fill="rgb(218,2,8)" fg:x="4858" fg:w="24"/><text x="59.8647%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (23 samples, 0.28%)</title><rect x="59.6269%" y="1013" width="0.2822%" height="15" fill="rgb(206,111,30)" fg:x="4859" fg:w="23"/><text x="59.8769%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (23 samples, 0.28%)</title><rect x="59.6269%" y="997" width="0.2822%" height="15" fill="rgb(209,135,6)" fg:x="4859" fg:w="23"/><text x="59.8769%" y="1007.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (1 samples, 0.01%)</title><rect x="59.9092%" y="1013" width="0.0123%" height="15" fill="rgb(205,169,10)" fg:x="4882" fg:w="1"/><text x="60.1592%" y="1023.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (1 samples, 0.01%)</title><rect x="59.9092%" y="997" width="0.0123%" height="15" fill="rgb(212,204,38)" fg:x="4882" fg:w="1"/><text x="60.1592%" y="1007.50"></text></g><g><title>async_task::utils::abort_on_panic (62 samples, 0.76%)</title><rect x="59.5779%" y="1109" width="0.7608%" height="15" fill="rgb(205,199,14)" fg:x="4855" fg:w="62"/><text x="59.8279%" y="1119.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (62 samples, 0.76%)</title><rect x="59.5779%" y="1093" width="0.7608%" height="15" fill="rgb(212,4,6)" fg:x="4855" fg:w="62"/><text x="59.8279%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (35 samples, 0.43%)</title><rect x="59.9092%" y="1077" width="0.4295%" height="15" fill="rgb(250,15,10)" fg:x="4882" fg:w="35"/><text x="60.1592%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (35 samples, 0.43%)</title><rect x="59.9092%" y="1061" width="0.4295%" height="15" fill="rgb(212,49,51)" fg:x="4882" fg:w="35"/><text x="60.1592%" y="1071.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (35 samples, 0.43%)</title><rect x="59.9092%" y="1045" width="0.4295%" height="15" fill="rgb(235,21,9)" fg:x="4882" fg:w="35"/><text x="60.1592%" y="1055.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (35 samples, 0.43%)</title><rect x="59.9092%" y="1029" width="0.4295%" height="15" fill="rgb(251,31,32)" fg:x="4882" fg:w="35"/><text x="60.1592%" y="1039.50"></text></g><g><title>core::mem::drop (34 samples, 0.42%)</title><rect x="59.9215%" y="1013" width="0.4172%" height="15" fill="rgb(246,23,9)" fg:x="4883" fg:w="34"/><text x="60.1715%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (34 samples, 0.42%)</title><rect x="59.9215%" y="997" width="0.4172%" height="15" fill="rgb(225,216,14)" fg:x="4883" fg:w="34"/><text x="60.1715%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.42%)</title><rect x="59.9215%" y="981" width="0.4172%" height="15" fill="rgb(215,200,26)" fg:x="4883" fg:w="34"/><text x="60.1715%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (33 samples, 0.40%)</title><rect x="59.9337%" y="965" width="0.4050%" height="15" fill="rgb(237,130,47)" fg:x="4884" fg:w="33"/><text x="60.1837%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (33 samples, 0.40%)</title><rect x="59.9337%" y="949" width="0.4050%" height="15" fill="rgb(247,74,14)" fg:x="4884" fg:w="33"/><text x="60.1837%" y="959.50"></text></g><g><title>async_task::header::Header::register (141 samples, 1.73%)</title><rect x="59.4797%" y="1125" width="1.7303%" height="15" fill="rgb(254,97,46)" fg:x="4847" fg:w="141"/><text x="59.7297%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (71 samples, 0.87%)</title><rect x="60.3387%" y="1109" width="0.8713%" height="15" fill="rgb(234,191,1)" fg:x="4917" fg:w="71"/><text x="60.5887%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (71 samples, 0.87%)</title><rect x="60.3387%" y="1093" width="0.8713%" height="15" fill="rgb(215,165,14)" fg:x="4917" fg:w="71"/><text x="60.5887%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="61.2100%" y="1125" width="0.0123%" height="15" fill="rgb(230,182,6)" fg:x="4988" fg:w="1"/><text x="61.4600%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="61.2100%" y="1109" width="0.0123%" height="15" fill="rgb(210,127,39)" fg:x="4988" fg:w="1"/><text x="61.4600%" y="1119.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (173 samples, 2.12%)</title><rect x="59.3324%" y="1189" width="2.1230%" height="15" fill="rgb(223,212,51)" fg:x="4835" fg:w="173"/><text x="59.5824%" y="1199.50">&lt;..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (173 samples, 2.12%)</title><rect x="59.3324%" y="1173" width="2.1230%" height="15" fill="rgb(226,176,43)" fg:x="4835" fg:w="173"/><text x="59.5824%" y="1183.50">&lt;..</text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (173 samples, 2.12%)</title><rect x="59.3324%" y="1157" width="2.1230%" height="15" fill="rgb(222,155,4)" fg:x="4835" fg:w="173"/><text x="59.5824%" y="1167.50">&lt;..</text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (173 samples, 2.12%)</title><rect x="59.3324%" y="1141" width="2.1230%" height="15" fill="rgb(215,149,7)" fg:x="4835" fg:w="173"/><text x="59.5824%" y="1151.50">a..</text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.23%)</title><rect x="61.2222%" y="1125" width="0.2332%" height="15" fill="rgb(252,199,23)" fg:x="4989" fg:w="19"/><text x="61.4722%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.23%)</title><rect x="61.2222%" y="1109" width="0.2332%" height="15" fill="rgb(245,52,29)" fg:x="4989" fg:w="19"/><text x="61.4722%" y="1119.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.02%)</title><rect x="61.4554%" y="1189" width="0.0245%" height="15" fill="rgb(221,228,19)" fg:x="5008" fg:w="2"/><text x="61.7054%" y="1199.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.02%)</title><rect x="61.4554%" y="1173" width="0.0245%" height="15" fill="rgb(253,101,6)" fg:x="5008" fg:w="2"/><text x="61.7054%" y="1183.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="61.4554%" y="1157" width="0.0245%" height="15" fill="rgb(211,130,8)" fg:x="5008" fg:w="2"/><text x="61.7054%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="61.4554%" y="1141" width="0.0245%" height="15" fill="rgb(238,37,53)" fg:x="5008" fg:w="2"/><text x="61.7054%" y="1151.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="61.4554%" y="1125" width="0.0245%" height="15" fill="rgb(235,145,5)" fg:x="5008" fg:w="2"/><text x="61.7054%" y="1135.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="61.4554%" y="1109" width="0.0245%" height="15" fill="rgb(244,12,43)" fg:x="5008" fg:w="2"/><text x="61.7054%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (2 samples, 0.02%)</title><rect x="61.4799%" y="1189" width="0.0245%" height="15" fill="rgb(246,195,24)" fg:x="5010" fg:w="2"/><text x="61.7299%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (2 samples, 0.02%)</title><rect x="61.4799%" y="1173" width="0.0245%" height="15" fill="rgb(235,163,6)" fg:x="5010" fg:w="2"/><text x="61.7299%" y="1183.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="61.4799%" y="1157" width="0.0245%" height="15" fill="rgb(236,218,17)" fg:x="5010" fg:w="2"/><text x="61.7299%" y="1167.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="61.4799%" y="1141" width="0.0245%" height="15" fill="rgb(235,12,38)" fg:x="5010" fg:w="2"/><text x="61.7299%" y="1151.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="61.4799%" y="1125" width="0.0245%" height="15" fill="rgb(225,195,33)" fg:x="5010" fg:w="2"/><text x="61.7299%" y="1135.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="61.4799%" y="1109" width="0.0245%" height="15" fill="rgb(238,54,35)" fg:x="5010" fg:w="2"/><text x="61.7299%" y="1119.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="61.4799%" y="1093" width="0.0245%" height="15" fill="rgb(238,33,7)" fg:x="5010" fg:w="2"/><text x="61.7299%" y="1103.50"></text></g><g><title>__futex_abstimed_wait_common64 (1 samples, 0.01%)</title><rect x="61.5536%" y="1093" width="0.0123%" height="15" fill="rgb(245,5,14)" fg:x="5016" fg:w="1"/><text x="61.8036%" y="1103.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.01%)</title><rect x="61.5536%" y="1077" width="0.0123%" height="15" fill="rgb(251,95,31)" fg:x="5016" fg:w="1"/><text x="61.8036%" y="1087.50"></text></g><g><title>std::sync::condvar::Condvar::wait (6 samples, 0.07%)</title><rect x="61.5045%" y="1157" width="0.0736%" height="15" fill="rgb(222,15,46)" fg:x="5012" fg:w="6"/><text x="61.7545%" y="1167.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (6 samples, 0.07%)</title><rect x="61.5045%" y="1141" width="0.0736%" height="15" fill="rgb(226,182,24)" fg:x="5012" fg:w="6"/><text x="61.7545%" y="1151.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (6 samples, 0.07%)</title><rect x="61.5045%" y="1125" width="0.0736%" height="15" fill="rgb(229,105,41)" fg:x="5012" fg:w="6"/><text x="61.7545%" y="1135.50"></text></g><g><title>__pthread_cond_wait (6 samples, 0.07%)</title><rect x="61.5045%" y="1109" width="0.0736%" height="15" fill="rgb(216,99,53)" fg:x="5012" fg:w="6"/><text x="61.7545%" y="1119.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="61.5658%" y="1093" width="0.0123%" height="15" fill="rgb(253,26,20)" fg:x="5017" fg:w="1"/><text x="61.8158%" y="1103.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (189 samples, 2.32%)</title><rect x="59.2833%" y="1205" width="2.3193%" height="15" fill="rgb(249,155,28)" fg:x="4831" fg:w="189"/><text x="59.5333%" y="1215.50">f..</text></g><g><title>parking::Parker::park (8 samples, 0.10%)</title><rect x="61.5045%" y="1189" width="0.0982%" height="15" fill="rgb(241,221,2)" fg:x="5012" fg:w="8"/><text x="61.7545%" y="1199.50"></text></g><g><title>parking::Inner::park (8 samples, 0.10%)</title><rect x="61.5045%" y="1173" width="0.0982%" height="15" fill="rgb(219,124,6)" fg:x="5012" fg:w="8"/><text x="61.7545%" y="1183.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="61.5781%" y="1157" width="0.0245%" height="15" fill="rgb(233,37,6)" fg:x="5018" fg:w="2"/><text x="61.8281%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.02%)</title><rect x="61.5781%" y="1141" width="0.0245%" height="15" fill="rgb(238,20,14)" fg:x="5018" fg:w="2"/><text x="61.8281%" y="1151.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.02%)</title><rect x="61.5781%" y="1125" width="0.0245%" height="15" fill="rgb(232,106,27)" fg:x="5018" fg:w="2"/><text x="61.8281%" y="1135.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="61.5781%" y="1109" width="0.0245%" height="15" fill="rgb(246,157,24)" fg:x="5018" fg:w="2"/><text x="61.8281%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1,050 samples, 12.89%)</title><rect x="48.7422%" y="1333" width="12.8850%" height="15" fill="rgb(214,153,10)" fg:x="3972" fg:w="1050"/><text x="48.9922%" y="1343.50">&lt;bevy_ecs::schedule..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (1,050 samples, 12.89%)</title><rect x="48.7422%" y="1317" width="12.8850%" height="15" fill="rgb(212,94,6)" fg:x="3972" fg:w="1050"/><text x="48.9922%" y="1327.50">bevy_tasks::task_po..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,050 samples, 12.89%)</title><rect x="48.7422%" y="1301" width="12.8850%" height="15" fill="rgb(254,25,27)" fg:x="3972" fg:w="1050"/><text x="48.9922%" y="1311.50">std::thread::local:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,050 samples, 12.89%)</title><rect x="48.7422%" y="1285" width="12.8850%" height="15" fill="rgb(250,43,52)" fg:x="3972" fg:w="1050"/><text x="48.9922%" y="1295.50">std::thread::local:..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (1,048 samples, 12.86%)</title><rect x="48.7667%" y="1269" width="12.8605%" height="15" fill="rgb(221,226,40)" fg:x="3974" fg:w="1048"/><text x="49.0167%" y="1279.50">bevy_tasks::task_po..</text></g><g><title>futures_lite::future::block_on (205 samples, 2.52%)</title><rect x="59.1115%" y="1253" width="2.5156%" height="15" fill="rgb(235,162,34)" fg:x="4817" fg:w="205"/><text x="59.3615%" y="1263.50">fu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (198 samples, 2.43%)</title><rect x="59.1974%" y="1237" width="2.4297%" height="15" fill="rgb(239,24,26)" fg:x="4824" fg:w="198"/><text x="59.4474%" y="1247.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (195 samples, 2.39%)</title><rect x="59.2343%" y="1221" width="2.3929%" height="15" fill="rgb(244,226,11)" fg:x="4827" fg:w="195"/><text x="59.4843%" y="1231.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="61.6027%" y="1205" width="0.0245%" height="15" fill="rgb(225,23,10)" fg:x="5020" fg:w="2"/><text x="61.8527%" y="1215.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (1 samples, 0.01%)</title><rect x="61.6272%" y="1301" width="0.0123%" height="15" fill="rgb(249,125,6)" fg:x="5022" fg:w="1"/><text x="61.8772%" y="1311.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (1 samples, 0.01%)</title><rect x="61.6272%" y="1285" width="0.0123%" height="15" fill="rgb(246,212,12)" fg:x="5022" fg:w="1"/><text x="61.8772%" y="1295.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (1 samples, 0.01%)</title><rect x="61.6272%" y="1269" width="0.0123%" height="15" fill="rgb(230,43,32)" fg:x="5022" fg:w="1"/><text x="61.8772%" y="1279.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (1 samples, 0.01%)</title><rect x="61.6272%" y="1253" width="0.0123%" height="15" fill="rgb(210,95,23)" fg:x="5022" fg:w="1"/><text x="61.8772%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="61.6272%" y="1237" width="0.0123%" height="15" fill="rgb(229,103,33)" fg:x="5022" fg:w="1"/><text x="61.8772%" y="1247.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="61.6395%" y="1237" width="0.0123%" height="15" fill="rgb(222,104,27)" fg:x="5023" fg:w="1"/><text x="61.8895%" y="1247.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="61.6395%" y="1221" width="0.0123%" height="15" fill="rgb(239,221,23)" fg:x="5023" fg:w="1"/><text x="61.8895%" y="1231.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="61.6395%" y="1205" width="0.0123%" height="15" fill="rgb(222,98,21)" fg:x="5023" fg:w="1"/><text x="61.8895%" y="1215.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="61.6395%" y="1189" width="0.0123%" height="15" fill="rgb(231,101,20)" fg:x="5023" fg:w="1"/><text x="61.8895%" y="1199.50"></text></g><g><title>&lt;core::any::TypeId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="61.6640%" y="1109" width="0.0123%" height="15" fill="rgb(215,150,22)" fg:x="5025" fg:w="1"/><text x="61.9140%" y="1119.50"></text></g><g><title>&lt;core::any::TypeId as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="61.6640%" y="1189" width="0.0368%" height="15" fill="rgb(248,3,34)" fg:x="5025" fg:w="3"/><text x="61.9140%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (3 samples, 0.04%)</title><rect x="61.6640%" y="1173" width="0.0368%" height="15" fill="rgb(220,141,21)" fg:x="5025" fg:w="3"/><text x="61.9140%" y="1183.50"></text></g><g><title>core::hash::Hasher::write_u64 (3 samples, 0.04%)</title><rect x="61.6640%" y="1157" width="0.0368%" height="15" fill="rgb(223,41,48)" fg:x="5025" fg:w="3"/><text x="61.9140%" y="1167.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="61.6640%" y="1141" width="0.0368%" height="15" fill="rgb(247,12,5)" fg:x="5025" fg:w="3"/><text x="61.9140%" y="1151.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="61.6640%" y="1125" width="0.0368%" height="15" fill="rgb(206,173,10)" fg:x="5025" fg:w="3"/><text x="61.9140%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="61.6763%" y="1109" width="0.0245%" height="15" fill="rgb(233,214,37)" fg:x="5026" fg:w="2"/><text x="61.9263%" y="1119.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="61.6886%" y="1093" width="0.0123%" height="15" fill="rgb(238,86,43)" fg:x="5027" fg:w="1"/><text x="61.9386%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="61.7008%" y="1189" width="0.0123%" height="15" fill="rgb(212,182,8)" fg:x="5028" fg:w="1"/><text x="61.9508%" y="1199.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="61.7008%" y="1173" width="0.0123%" height="15" fill="rgb(240,91,47)" fg:x="5028" fg:w="1"/><text x="61.9508%" y="1183.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="61.7008%" y="1157" width="0.0123%" height="15" fill="rgb(209,138,26)" fg:x="5028" fg:w="1"/><text x="61.9508%" y="1167.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="61.7008%" y="1141" width="0.0123%" height="15" fill="rgb(231,163,20)" fg:x="5028" fg:w="1"/><text x="61.9508%" y="1151.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="61.7008%" y="1125" width="0.0123%" height="15" fill="rgb(214,91,54)" fg:x="5028" fg:w="1"/><text x="61.9508%" y="1135.50"></text></g><g><title>hashbrown::map::make_insert_hash (5 samples, 0.06%)</title><rect x="61.6640%" y="1205" width="0.0614%" height="15" fill="rgb(230,32,17)" fg:x="5025" fg:w="5"/><text x="61.9140%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="61.7131%" y="1189" width="0.0123%" height="15" fill="rgb(231,34,34)" fg:x="5029" fg:w="1"/><text x="61.9631%" y="1199.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (10 samples, 0.12%)</title><rect x="61.6395%" y="1253" width="0.1227%" height="15" fill="rgb(224,228,27)" fg:x="5023" fg:w="10"/><text x="61.8895%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (9 samples, 0.11%)</title><rect x="61.6517%" y="1237" width="0.1104%" height="15" fill="rgb(219,35,40)" fg:x="5024" fg:w="9"/><text x="61.9017%" y="1247.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (9 samples, 0.11%)</title><rect x="61.6517%" y="1221" width="0.1104%" height="15" fill="rgb(234,42,8)" fg:x="5024" fg:w="9"/><text x="61.9017%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="61.7254%" y="1205" width="0.0368%" height="15" fill="rgb(226,75,22)" fg:x="5030" fg:w="3"/><text x="61.9754%" y="1215.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="61.7499%" y="1189" width="0.0123%" height="15" fill="rgb(242,203,28)" fg:x="5032" fg:w="1"/><text x="61.9999%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="61.7499%" y="1173" width="0.0123%" height="15" fill="rgb(221,3,9)" fg:x="5032" fg:w="1"/><text x="61.9999%" y="1183.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="61.7499%" y="1157" width="0.0123%" height="15" fill="rgb(214,34,31)" fg:x="5032" fg:w="1"/><text x="61.9999%" y="1167.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.01%)</title><rect x="61.7499%" y="1141" width="0.0123%" height="15" fill="rgb(252,119,15)" fg:x="5032" fg:w="1"/><text x="61.9999%" y="1151.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (13 samples, 0.16%)</title><rect x="61.6272%" y="1333" width="0.1595%" height="15" fill="rgb(244,224,31)" fg:x="5022" fg:w="13"/><text x="61.8772%" y="1343.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (13 samples, 0.16%)</title><rect x="61.6272%" y="1317" width="0.1595%" height="15" fill="rgb(215,8,51)" fg:x="5022" fg:w="13"/><text x="61.8772%" y="1327.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Remove&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (12 samples, 0.15%)</title><rect x="61.6395%" y="1301" width="0.1473%" height="15" fill="rgb(207,24,1)" fg:x="5023" fg:w="12"/><text x="61.8895%" y="1311.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove (12 samples, 0.15%)</title><rect x="61.6395%" y="1285" width="0.1473%" height="15" fill="rgb(245,90,0)" fg:x="5023" fg:w="12"/><text x="61.8895%" y="1295.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove_bundle (12 samples, 0.15%)</title><rect x="61.6395%" y="1269" width="0.1473%" height="15" fill="rgb(246,43,48)" fg:x="5023" fg:w="12"/><text x="61.8895%" y="1279.50"></text></g><g><title>bevy_ecs::world::entity_ref::remove_bundle_from_archetype (2 samples, 0.02%)</title><rect x="61.7622%" y="1253" width="0.0245%" height="15" fill="rgb(252,218,10)" fg:x="5033" fg:w="2"/><text x="62.0122%" y="1263.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.01%)</title><rect x="61.7990%" y="1205" width="0.0123%" height="15" fill="rgb(231,24,35)" fg:x="5036" fg:w="1"/><text x="62.0490%" y="1215.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="61.7990%" y="1189" width="0.0123%" height="15" fill="rgb(225,66,19)" fg:x="5036" fg:w="1"/><text x="62.0490%" y="1199.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="61.7990%" y="1173" width="0.0123%" height="15" fill="rgb(214,96,51)" fg:x="5036" fg:w="1"/><text x="62.0490%" y="1183.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="61.7990%" y="1157" width="0.0123%" height="15" fill="rgb(251,151,47)" fg:x="5036" fg:w="1"/><text x="62.0490%" y="1167.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (3 samples, 0.04%)</title><rect x="61.7867%" y="1333" width="0.0368%" height="15" fill="rgb(236,79,14)" fg:x="5035" fg:w="3"/><text x="62.0367%" y="1343.50"></text></g><g><title>bevy_ecs::system::system::System::run (3 samples, 0.04%)</title><rect x="61.7867%" y="1317" width="0.0368%" height="15" fill="rgb(210,205,11)" fg:x="5035" fg:w="3"/><text x="62.0367%" y="1327.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3 samples, 0.04%)</title><rect x="61.7867%" y="1301" width="0.0368%" height="15" fill="rgb(233,142,53)" fg:x="5035" fg:w="3"/><text x="62.0367%" y="1311.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (3 samples, 0.04%)</title><rect x="61.7867%" y="1285" width="0.0368%" height="15" fill="rgb(212,116,48)" fg:x="5035" fg:w="3"/><text x="62.0367%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3 samples, 0.04%)</title><rect x="61.7867%" y="1269" width="0.0368%" height="15" fill="rgb(234,55,33)" fg:x="5035" fg:w="3"/><text x="62.0367%" y="1279.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.04%)</title><rect x="61.7867%" y="1253" width="0.0368%" height="15" fill="rgb(253,92,27)" fg:x="5035" fg:w="3"/><text x="62.0367%" y="1263.50"></text></g><g><title>bevy_console::console_system (3 samples, 0.04%)</title><rect x="61.7867%" y="1237" width="0.0368%" height="15" fill="rgb(220,7,35)" fg:x="5035" fg:w="3"/><text x="62.0367%" y="1247.50"></text></g><g><title>egui::containers::window::Window::new (3 samples, 0.04%)</title><rect x="61.7867%" y="1221" width="0.0368%" height="15" fill="rgb(246,124,6)" fg:x="5035" fg:w="3"/><text x="62.0367%" y="1231.50"></text></g><g><title>egui::containers::area::Area::new (1 samples, 0.01%)</title><rect x="61.8113%" y="1205" width="0.0123%" height="15" fill="rgb(212,111,51)" fg:x="5037" fg:w="1"/><text x="62.0613%" y="1215.50"></text></g><g><title>egui::id::Id::new (1 samples, 0.01%)</title><rect x="61.8113%" y="1189" width="0.0123%" height="15" fill="rgb(253,116,7)" fg:x="5037" fg:w="1"/><text x="62.0613%" y="1199.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="61.8113%" y="1173" width="0.0123%" height="15" fill="rgb(213,145,18)" fg:x="5037" fg:w="1"/><text x="62.0613%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="61.8113%" y="1157" width="0.0123%" height="15" fill="rgb(219,149,7)" fg:x="5037" fg:w="1"/><text x="62.0613%" y="1167.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="61.8113%" y="1141" width="0.0123%" height="15" fill="rgb(225,156,20)" fg:x="5037" fg:w="1"/><text x="62.0613%" y="1151.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="61.8113%" y="1125" width="0.0123%" height="15" fill="rgb(211,98,19)" fg:x="5037" fg:w="1"/><text x="62.0613%" y="1135.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="61.8113%" y="1109" width="0.0123%" height="15" fill="rgb(231,192,31)" fg:x="5037" fg:w="1"/><text x="62.0613%" y="1119.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="61.8113%" y="1093" width="0.0123%" height="15" fill="rgb(249,95,19)" fg:x="5037" fg:w="1"/><text x="62.0613%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="61.8113%" y="1077" width="0.0123%" height="15" fill="rgb(247,101,36)" fg:x="5037" fg:w="1"/><text x="62.0613%" y="1087.50"></text></g><g><title>bevy_scene::scene_spawner::SceneSpawner::despawn_queued_scenes (1 samples, 0.01%)</title><rect x="61.8235%" y="1269" width="0.0123%" height="15" fill="rgb(221,45,43)" fg:x="5038" fg:w="1"/><text x="62.0735%" y="1279.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (4 samples, 0.05%)</title><rect x="61.8235%" y="1301" width="0.0491%" height="15" fill="rgb(220,42,1)" fg:x="5038" fg:w="4"/><text x="62.0735%" y="1311.50"></text></g><g><title>bevy_scene::scene_spawner::scene_spawner_system::{{closure}} (4 samples, 0.05%)</title><rect x="61.8235%" y="1285" width="0.0491%" height="15" fill="rgb(236,19,24)" fg:x="5038" fg:w="4"/><text x="62.0735%" y="1295.50"></text></g><g><title>bevy_scene::scene_spawner::SceneSpawner::spawn_queued_scenes (3 samples, 0.04%)</title><rect x="61.8358%" y="1269" width="0.0368%" height="15" fill="rgb(225,192,6)" fg:x="5039" fg:w="3"/><text x="62.0858%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bevy_asset::handle::Handle&lt;bevy_scene::dynamic_scene::DynamicScene&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="61.8604%" y="1253" width="0.0123%" height="15" fill="rgb(242,30,19)" fg:x="5041" fg:w="1"/><text x="62.1104%" y="1263.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="61.8604%" y="1237" width="0.0123%" height="15" fill="rgb(240,36,6)" fg:x="5041" fg:w="1"/><text x="62.1104%" y="1247.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="61.8604%" y="1221" width="0.0123%" height="15" fill="rgb(246,40,28)" fg:x="5041" fg:w="1"/><text x="62.1104%" y="1231.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (2 samples, 0.02%)</title><rect x="61.8726%" y="1269" width="0.0245%" height="15" fill="rgb(225,155,33)" fg:x="5042" fg:w="2"/><text x="62.1226%" y="1279.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="61.8726%" y="1253" width="0.0245%" height="15" fill="rgb(240,65,18)" fg:x="5042" fg:w="2"/><text x="62.1226%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="61.8726%" y="1237" width="0.0245%" height="15" fill="rgb(217,0,48)" fg:x="5042" fg:w="2"/><text x="62.1226%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="61.8726%" y="1221" width="0.0245%" height="15" fill="rgb(217,80,15)" fg:x="5042" fg:w="2"/><text x="62.1226%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="61.8726%" y="1205" width="0.0245%" height="15" fill="rgb(253,43,51)" fg:x="5042" fg:w="2"/><text x="62.1226%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="61.8726%" y="1189" width="0.0245%" height="15" fill="rgb(246,60,4)" fg:x="5042" fg:w="2"/><text x="62.1226%" y="1199.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="61.8849%" y="1173" width="0.0123%" height="15" fill="rgb(230,40,54)" fg:x="5043" fg:w="1"/><text x="62.1349%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="61.8849%" y="1157" width="0.0123%" height="15" fill="rgb(208,20,44)" fg:x="5043" fg:w="1"/><text x="62.1349%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="61.8849%" y="1141" width="0.0123%" height="15" fill="rgb(230,22,22)" fg:x="5043" fg:w="1"/><text x="62.1349%" y="1151.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_non_send_mut (3 samples, 0.04%)</title><rect x="61.8726%" y="1285" width="0.0368%" height="15" fill="rgb(207,57,4)" fg:x="5042" fg:w="3"/><text x="62.1226%" y="1295.50"></text></g><g><title>bevy_ecs::world::World::get_non_send_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="61.8972%" y="1269" width="0.0123%" height="15" fill="rgb(242,130,33)" fg:x="5044" fg:w="1"/><text x="62.1472%" y="1279.50"></text></g><g><title>bevy_ecs::world::World::validate_non_send_access (1 samples, 0.01%)</title><rect x="61.8972%" y="1253" width="0.0123%" height="15" fill="rgb(218,66,43)" fg:x="5044" fg:w="1"/><text x="62.1472%" y="1263.50"></text></g><g><title>bevy_ecs::world::MainThreadValidator::is_main_thread (1 samples, 0.01%)</title><rect x="61.8972%" y="1237" width="0.0123%" height="15" fill="rgb(236,105,16)" fg:x="5044" fg:w="1"/><text x="62.1472%" y="1247.50"></text></g><g><title>std::thread::current (1 samples, 0.01%)</title><rect x="61.8972%" y="1221" width="0.0123%" height="15" fill="rgb(230,46,15)" fg:x="5044" fg:w="1"/><text x="62.1472%" y="1231.50"></text></g><g><title>std::sys_common::thread_info::current_thread (1 samples, 0.01%)</title><rect x="61.8972%" y="1205" width="0.0123%" height="15" fill="rgb(251,172,40)" fg:x="5044" fg:w="1"/><text x="62.1472%" y="1215.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with (1 samples, 0.01%)</title><rect x="61.8972%" y="1189" width="0.0123%" height="15" fill="rgb(225,217,32)" fg:x="5044" fg:w="1"/><text x="62.1472%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="61.8972%" y="1173" width="0.0123%" height="15" fill="rgb(243,10,29)" fg:x="5044" fg:w="1"/><text x="62.1472%" y="1183.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with::{{closure}} (1 samples, 0.01%)</title><rect x="61.8972%" y="1157" width="0.0123%" height="15" fill="rgb(207,102,10)" fg:x="5044" fg:w="1"/><text x="62.1472%" y="1167.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (1 samples, 0.01%)</title><rect x="61.9094%" y="1285" width="0.0123%" height="15" fill="rgb(241,125,5)" fg:x="5045" fg:w="1"/><text x="62.1594%" y="1295.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldBorrowMut&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="61.9094%" y="1269" width="0.0123%" height="15" fill="rgb(230,125,29)" fg:x="5045" fg:w="1"/><text x="62.1594%" y="1279.50"></text></g><g><title>bevy_ecs::world::world_cell::ArchetypeComponentAccess::write (1 samples, 0.01%)</title><rect x="61.9094%" y="1253" width="0.0123%" height="15" fill="rgb(223,65,44)" fg:x="5045" fg:w="1"/><text x="62.1594%" y="1263.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_or_insert_with (1 samples, 0.01%)</title><rect x="61.9094%" y="1237" width="0.0123%" height="15" fill="rgb(224,188,28)" fg:x="5045" fg:w="1"/><text x="62.1594%" y="1247.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="61.9094%" y="1221" width="0.0123%" height="15" fill="rgb(254,197,27)" fg:x="5045" fg:w="1"/><text x="62.1594%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="61.9094%" y="1205" width="0.0123%" height="15" fill="rgb(220,200,25)" fg:x="5045" fg:w="1"/><text x="62.1594%" y="1215.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="61.9094%" y="1189" width="0.0123%" height="15" fill="rgb(239,225,54)" fg:x="5045" fg:w="1"/><text x="62.1594%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="61.9094%" y="1173" width="0.0123%" height="15" fill="rgb(211,59,40)" fg:x="5045" fg:w="1"/><text x="62.1594%" y="1183.50"></text></g><g><title>__GI___poll (1 samples, 0.01%)</title><rect x="61.9217%" y="1189" width="0.0123%" height="15" fill="rgb(213,176,46)" fg:x="5046" fg:w="1"/><text x="62.1717%" y="1199.50"></text></g><g><title>__libc_enable_asynccancel (1 samples, 0.01%)</title><rect x="61.9217%" y="1173" width="0.0123%" height="15" fill="rgb(226,99,4)" fg:x="5046" fg:w="1"/><text x="62.1717%" y="1183.50"></text></g><g><title>bevy_gilrs::gilrs_system::gilrs_event_system (8 samples, 0.10%)</title><rect x="61.8726%" y="1301" width="0.0982%" height="15" fill="rgb(239,203,43)" fg:x="5042" fg:w="8"/><text x="62.1226%" y="1311.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event (4 samples, 0.05%)</title><rect x="61.9217%" y="1285" width="0.0491%" height="15" fill="rgb(246,1,45)" fg:x="5046" fg:w="4"/><text x="62.1717%" y="1295.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event_priv (4 samples, 0.05%)</title><rect x="61.9217%" y="1269" width="0.0491%" height="15" fill="rgb(231,42,52)" fg:x="5046" fg:w="4"/><text x="62.1717%" y="1279.50"></text></g><g><title>gilrs_core::Gilrs::next_event (4 samples, 0.05%)</title><rect x="61.9217%" y="1253" width="0.0491%" height="15" fill="rgb(240,13,50)" fg:x="5046" fg:w="4"/><text x="62.1717%" y="1263.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::next_event (4 samples, 0.05%)</title><rect x="61.9217%" y="1237" width="0.0491%" height="15" fill="rgb(225,81,14)" fg:x="5046" fg:w="4"/><text x="62.1717%" y="1247.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::handle_hotplug (4 samples, 0.05%)</title><rect x="61.9217%" y="1221" width="0.0491%" height="15" fill="rgb(216,182,23)" fg:x="5046" fg:w="4"/><text x="62.1717%" y="1231.50"></text></g><g><title>gilrs_core::platform::platform::udev::Monitor::hotplug_available (4 samples, 0.05%)</title><rect x="61.9217%" y="1205" width="0.0491%" height="15" fill="rgb(233,137,19)" fg:x="5046" fg:w="4"/><text x="62.1717%" y="1215.50"></text></g><g><title>udev_monitor_get_fd (3 samples, 0.04%)</title><rect x="61.9340%" y="1189" width="0.0368%" height="15" fill="rgb(242,61,46)" fg:x="5047" fg:w="3"/><text x="62.1840%" y="1199.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1 samples, 0.01%)</title><rect x="61.9708%" y="1253" width="0.0123%" height="15" fill="rgb(221,168,51)" fg:x="5050" fg:w="1"/><text x="62.2208%" y="1263.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynEq&gt;::as_any (1 samples, 0.01%)</title><rect x="61.9831%" y="1109" width="0.0123%" height="15" fill="rgb(238,48,15)" fg:x="5051" fg:w="1"/><text x="62.2331%" y="1119.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (3 samples, 0.04%)</title><rect x="61.9708%" y="1301" width="0.0368%" height="15" fill="rgb(216,13,16)" fg:x="5050" fg:w="3"/><text x="62.2208%" y="1311.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (3 samples, 0.04%)</title><rect x="61.9708%" y="1285" width="0.0368%" height="15" fill="rgb(223,185,34)" fg:x="5050" fg:w="3"/><text x="62.2208%" y="1295.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (3 samples, 0.04%)</title><rect x="61.9708%" y="1269" width="0.0368%" height="15" fill="rgb(228,94,42)" fg:x="5050" fg:w="3"/><text x="62.2208%" y="1279.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (2 samples, 0.02%)</title><rect x="61.9831%" y="1253" width="0.0245%" height="15" fill="rgb(218,166,43)" fg:x="5051" fg:w="2"/><text x="62.2331%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="61.9831%" y="1237" width="0.0245%" height="15" fill="rgb(232,30,50)" fg:x="5051" fg:w="2"/><text x="62.2331%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (2 samples, 0.02%)</title><rect x="61.9831%" y="1221" width="0.0245%" height="15" fill="rgb(245,206,45)" fg:x="5051" fg:w="2"/><text x="62.2331%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="61.9831%" y="1205" width="0.0245%" height="15" fill="rgb(220,56,22)" fg:x="5051" fg:w="2"/><text x="62.2331%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="61.9831%" y="1189" width="0.0245%" height="15" fill="rgb(239,129,38)" fg:x="5051" fg:w="2"/><text x="62.2331%" y="1199.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.02%)</title><rect x="61.9831%" y="1173" width="0.0245%" height="15" fill="rgb(207,68,41)" fg:x="5051" fg:w="2"/><text x="62.2331%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="61.9831%" y="1157" width="0.0245%" height="15" fill="rgb(221,21,7)" fg:x="5051" fg:w="2"/><text x="62.2331%" y="1167.50"></text></g><g><title>&lt;dyn bevy_ecs::schedule::label::StageLabel as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="61.9831%" y="1141" width="0.0245%" height="15" fill="rgb(240,33,25)" fg:x="5051" fg:w="2"/><text x="62.2331%" y="1151.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynEq&gt;::dyn_eq (2 samples, 0.02%)</title><rect x="61.9831%" y="1125" width="0.0245%" height="15" fill="rgb(242,119,10)" fg:x="5051" fg:w="2"/><text x="62.2331%" y="1135.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (1 samples, 0.01%)</title><rect x="61.9953%" y="1109" width="0.0123%" height="15" fill="rgb(214,149,40)" fg:x="5052" fg:w="1"/><text x="62.2453%" y="1119.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (1 samples, 0.01%)</title><rect x="61.9953%" y="1093" width="0.0123%" height="15" fill="rgb(228,25,36)" fg:x="5052" fg:w="1"/><text x="62.2453%" y="1103.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (1 samples, 0.01%)</title><rect x="61.9953%" y="1077" width="0.0123%" height="15" fill="rgb(222,59,15)" fg:x="5052" fg:w="1"/><text x="62.2453%" y="1087.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (1 samples, 0.01%)</title><rect x="62.0199%" y="1061" width="0.0123%" height="15" fill="rgb(218,170,0)" fg:x="5054" fg:w="1"/><text x="62.2699%" y="1071.50"></text></g><g><title>_XGetRequest (1 samples, 0.01%)</title><rect x="62.3021%" y="901" width="0.0123%" height="15" fill="rgb(232,173,23)" fg:x="5077" fg:w="1"/><text x="62.5521%" y="911.50"></text></g><g><title>_XFlush (1 samples, 0.01%)</title><rect x="62.3021%" y="885" width="0.0123%" height="15" fill="rgb(218,116,1)" fg:x="5077" fg:w="1"/><text x="62.5521%" y="895.50"></text></g><g><title>XSync (2 samples, 0.02%)</title><rect x="62.3021%" y="917" width="0.0245%" height="15" fill="rgb(207,34,4)" fg:x="5077" fg:w="2"/><text x="62.5521%" y="927.50"></text></g><g><title>_XReply (1 samples, 0.01%)</title><rect x="62.3144%" y="901" width="0.0123%" height="15" fill="rgb(229,54,52)" fg:x="5078" fg:w="1"/><text x="62.5644%" y="911.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="62.3144%" y="885" width="0.0123%" height="15" fill="rgb(211,86,23)" fg:x="5078" fg:w="1"/><text x="62.5644%" y="895.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (8 samples, 0.10%)</title><rect x="62.2530%" y="933" width="0.0982%" height="15" fill="rgb(254,153,34)" fg:x="5073" fg:w="8"/><text x="62.5030%" y="943.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="62.3267%" y="917" width="0.0245%" height="15" fill="rgb(219,220,14)" fg:x="5079" fg:w="2"/><text x="62.5767%" y="927.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="62.3389%" y="901" width="0.0123%" height="15" fill="rgb(247,8,26)" fg:x="5080" fg:w="1"/><text x="62.5889%" y="911.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="62.3389%" y="885" width="0.0123%" height="15" fill="rgb(213,129,42)" fg:x="5080" fg:w="1"/><text x="62.5889%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="62.7194%" y="885" width="0.0245%" height="15" fill="rgb(225,95,41)" fg:x="5111" fg:w="2"/><text x="62.9694%" y="895.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (60 samples, 0.74%)</title><rect x="62.0199%" y="1077" width="0.7363%" height="15" fill="rgb(215,134,24)" fg:x="5054" fg:w="60"/><text x="62.2699%" y="1087.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (59 samples, 0.72%)</title><rect x="62.0322%" y="1061" width="0.7240%" height="15" fill="rgb(235,23,54)" fg:x="5055" fg:w="59"/><text x="62.2822%" y="1071.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (59 samples, 0.72%)</title><rect x="62.0322%" y="1045" width="0.7240%" height="15" fill="rgb(229,96,31)" fg:x="5055" fg:w="59"/><text x="62.2822%" y="1055.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (59 samples, 0.72%)</title><rect x="62.0322%" y="1029" width="0.7240%" height="15" fill="rgb(206,111,12)" fg:x="5055" fg:w="59"/><text x="62.2822%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (58 samples, 0.71%)</title><rect x="62.0444%" y="1013" width="0.7117%" height="15" fill="rgb(222,177,8)" fg:x="5056" fg:w="58"/><text x="62.2944%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (56 samples, 0.69%)</title><rect x="62.0690%" y="997" width="0.6872%" height="15" fill="rgb(251,36,52)" fg:x="5058" fg:w="56"/><text x="62.3190%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (52 samples, 0.64%)</title><rect x="62.1181%" y="981" width="0.6381%" height="15" fill="rgb(216,182,29)" fg:x="5062" fg:w="52"/><text x="62.3681%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (51 samples, 0.63%)</title><rect x="62.1303%" y="965" width="0.6258%" height="15" fill="rgb(241,145,50)" fg:x="5063" fg:w="51"/><text x="62.3803%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (44 samples, 0.54%)</title><rect x="62.2162%" y="949" width="0.5399%" height="15" fill="rgb(231,71,35)" fg:x="5070" fg:w="44"/><text x="62.4662%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (33 samples, 0.40%)</title><rect x="62.3512%" y="933" width="0.4050%" height="15" fill="rgb(218,22,17)" fg:x="5081" fg:w="33"/><text x="62.6012%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.18%)</title><rect x="62.5721%" y="917" width="0.1841%" height="15" fill="rgb(225,227,6)" fg:x="5099" fg:w="15"/><text x="62.8221%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.09%)</title><rect x="62.6703%" y="901" width="0.0859%" height="15" fill="rgb(224,204,17)" fg:x="5107" fg:w="7"/><text x="62.9203%" y="911.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="62.7439%" y="885" width="0.0123%" height="15" fill="rgb(227,61,28)" fg:x="5113" fg:w="1"/><text x="62.9939%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="62.7562%" y="1077" width="0.0123%" height="15" fill="rgb(242,148,23)" fg:x="5114" fg:w="1"/><text x="63.0062%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="62.7562%" y="1061" width="0.0123%" height="15" fill="rgb(237,105,33)" fg:x="5114" fg:w="1"/><text x="63.0062%" y="1071.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="62.7562%" y="1045" width="0.0123%" height="15" fill="rgb(238,218,40)" fg:x="5114" fg:w="1"/><text x="63.0062%" y="1055.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="62.7562%" y="1029" width="0.0123%" height="15" fill="rgb(209,126,11)" fg:x="5114" fg:w="1"/><text x="63.0062%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="62.7562%" y="1013" width="0.0123%" height="15" fill="rgb(245,90,11)" fg:x="5114" fg:w="1"/><text x="63.0062%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="62.7562%" y="997" width="0.0123%" height="15" fill="rgb(211,195,10)" fg:x="5114" fg:w="1"/><text x="63.0062%" y="1007.50"></text></g><g><title>tracing::__macro_support::MacroCallsite::interest (1 samples, 0.01%)</title><rect x="62.7684%" y="1077" width="0.0123%" height="15" fill="rgb(231,45,45)" fg:x="5115" fg:w="1"/><text x="63.0184%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="62.7684%" y="1061" width="0.0123%" height="15" fill="rgb(246,100,43)" fg:x="5115" fg:w="1"/><text x="63.0184%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="62.7684%" y="1045" width="0.0123%" height="15" fill="rgb(241,193,8)" fg:x="5115" fg:w="1"/><text x="63.0184%" y="1055.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (64 samples, 0.79%)</title><rect x="62.0076%" y="1285" width="0.7854%" height="15" fill="rgb(208,76,19)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1295.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (64 samples, 0.79%)</title><rect x="62.0076%" y="1269" width="0.7854%" height="15" fill="rgb(223,69,40)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1279.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (64 samples, 0.79%)</title><rect x="62.0076%" y="1253" width="0.7854%" height="15" fill="rgb(207,120,39)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (64 samples, 0.79%)</title><rect x="62.0076%" y="1237" width="0.7854%" height="15" fill="rgb(212,209,28)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (64 samples, 0.79%)</title><rect x="62.0076%" y="1221" width="0.7854%" height="15" fill="rgb(246,82,29)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1231.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (64 samples, 0.79%)</title><rect x="62.0076%" y="1205" width="0.7854%" height="15" fill="rgb(239,6,40)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1215.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (64 samples, 0.79%)</title><rect x="62.0076%" y="1189" width="0.7854%" height="15" fill="rgb(228,181,35)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (64 samples, 0.79%)</title><rect x="62.0076%" y="1173" width="0.7854%" height="15" fill="rgb(238,151,2)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (64 samples, 0.79%)</title><rect x="62.0076%" y="1157" width="0.7854%" height="15" fill="rgb(236,94,18)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (64 samples, 0.79%)</title><rect x="62.0076%" y="1141" width="0.7854%" height="15" fill="rgb(208,38,14)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1151.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (64 samples, 0.79%)</title><rect x="62.0076%" y="1125" width="0.7854%" height="15" fill="rgb(234,215,27)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1135.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (64 samples, 0.79%)</title><rect x="62.0076%" y="1109" width="0.7854%" height="15" fill="rgb(254,211,53)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1119.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (64 samples, 0.79%)</title><rect x="62.0076%" y="1093" width="0.7854%" height="15" fill="rgb(216,175,11)" fg:x="5053" fg:w="64"/><text x="62.2576%" y="1103.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister (1 samples, 0.01%)</title><rect x="62.7807%" y="1077" width="0.0123%" height="15" fill="rgb(246,179,26)" fg:x="5116" fg:w="1"/><text x="63.0307%" y="1087.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::free (1 samples, 0.01%)</title><rect x="62.7807%" y="1061" width="0.0123%" height="15" fill="rgb(249,19,52)" fg:x="5116" fg:w="1"/><text x="63.0307%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt;&gt; (1 samples, 0.01%)</title><rect x="62.7807%" y="1045" width="0.0123%" height="15" fill="rgb(230,42,52)" fg:x="5116" fg:w="1"/><text x="63.0307%" y="1055.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="62.7807%" y="1029" width="0.0123%" height="15" fill="rgb(221,171,0)" fg:x="5116" fg:w="1"/><text x="63.0307%" y="1039.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="62.7807%" y="1013" width="0.0123%" height="15" fill="rgb(222,177,40)" fg:x="5116" fg:w="1"/><text x="63.0307%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="62.7807%" y="997" width="0.0123%" height="15" fill="rgb(247,34,16)" fg:x="5116" fg:w="1"/><text x="63.0307%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="62.7807%" y="981" width="0.0123%" height="15" fill="rgb(213,217,37)" fg:x="5116" fg:w="1"/><text x="63.0307%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::RefCount&gt;&gt; (1 samples, 0.01%)</title><rect x="62.7930%" y="1109" width="0.0123%" height="15" fill="rgb(231,189,24)" fg:x="5117" fg:w="1"/><text x="63.0430%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="62.7930%" y="1093" width="0.0123%" height="15" fill="rgb(214,22,9)" fg:x="5117" fg:w="1"/><text x="63.0430%" y="1103.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="62.7930%" y="1077" width="0.0123%" height="15" fill="rgb(212,70,22)" fg:x="5117" fg:w="1"/><text x="63.0430%" y="1087.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="62.7930%" y="1061" width="0.0123%" height="15" fill="rgb(249,64,51)" fg:x="5117" fg:w="1"/><text x="63.0430%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="62.7930%" y="1045" width="0.0123%" height="15" fill="rgb(249,148,20)" fg:x="5117" fg:w="1"/><text x="63.0430%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="62.7930%" y="1029" width="0.0123%" height="15" fill="rgb(246,46,48)" fg:x="5117" fg:w="1"/><text x="63.0430%" y="1039.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::remove_stale_bind_groups (2 samples, 0.02%)</title><rect x="62.7930%" y="1285" width="0.0245%" height="15" fill="rgb(217,34,48)" fg:x="5117" fg:w="2"/><text x="63.0430%" y="1295.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::remove_stale_bind_groups (2 samples, 0.02%)</title><rect x="62.7930%" y="1269" width="0.0245%" height="15" fill="rgb(222,45,26)" fg:x="5117" fg:w="2"/><text x="63.0430%" y="1279.50"></text></g><g><title>bevy_wgpu::wgpu_resources::BindGroupCounter::remove_stale_bind_groups (2 samples, 0.02%)</title><rect x="62.7930%" y="1253" width="0.0245%" height="15" fill="rgb(230,201,36)" fg:x="5117" fg:w="2"/><text x="63.0430%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::retain (2 samples, 0.02%)</title><rect x="62.7930%" y="1237" width="0.0245%" height="15" fill="rgb(217,30,43)" fg:x="5117" fg:w="2"/><text x="63.0430%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (2 samples, 0.02%)</title><rect x="62.7930%" y="1221" width="0.0245%" height="15" fill="rgb(230,197,40)" fg:x="5117" fg:w="2"/><text x="63.0430%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase (2 samples, 0.02%)</title><rect x="62.7930%" y="1205" width="0.0245%" height="15" fill="rgb(239,181,18)" fg:x="5117" fg:w="2"/><text x="63.0430%" y="1215.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.02%)</title><rect x="62.7930%" y="1189" width="0.0245%" height="15" fill="rgb(222,60,39)" fg:x="5117" fg:w="2"/><text x="63.0430%" y="1199.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.02%)</title><rect x="62.7930%" y="1173" width="0.0245%" height="15" fill="rgb(210,60,22)" fg:x="5117" fg:w="2"/><text x="63.0430%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::bind_group::BindGroupId,wgpu::BindGroup)&gt; (2 samples, 0.02%)</title><rect x="62.7930%" y="1157" width="0.0245%" height="15" fill="rgb(239,213,48)" fg:x="5117" fg:w="2"/><text x="63.0430%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BindGroup&gt; (2 samples, 0.02%)</title><rect x="62.7930%" y="1141" width="0.0245%" height="15" fill="rgb(253,214,23)" fg:x="5117" fg:w="2"/><text x="63.0430%" y="1151.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::bind_group_drop (2 samples, 0.02%)</title><rect x="62.7930%" y="1125" width="0.0245%" height="15" fill="rgb(211,98,45)" fg:x="5117" fg:w="2"/><text x="63.0430%" y="1135.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="62.8053%" y="1109" width="0.0123%" height="15" fill="rgb(239,130,44)" fg:x="5118" fg:w="1"/><text x="63.0553%" y="1119.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::handle_window_created_events (1 samples, 0.01%)</title><rect x="62.8175%" y="1285" width="0.0123%" height="15" fill="rgb(222,181,35)" fg:x="5119" fg:w="1"/><text x="63.0675%" y="1295.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource (1 samples, 0.01%)</title><rect x="62.8175%" y="1269" width="0.0123%" height="15" fill="rgb(219,219,49)" fg:x="5119" fg:w="1"/><text x="63.0675%" y="1279.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldBorrow&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="62.8175%" y="1253" width="0.0123%" height="15" fill="rgb(227,161,51)" fg:x="5119" fg:w="1"/><text x="63.0675%" y="1263.50"></text></g><g><title>bevy_ecs::world::world_cell::ArchetypeComponentAccess::read (1 samples, 0.01%)</title><rect x="62.8175%" y="1237" width="0.0123%" height="15" fill="rgb(239,112,27)" fg:x="5119" fg:w="1"/><text x="63.0675%" y="1247.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_or_insert_with (1 samples, 0.01%)</title><rect x="62.8175%" y="1221" width="0.0123%" height="15" fill="rgb(248,122,18)" fg:x="5119" fg:w="1"/><text x="63.0675%" y="1231.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="62.8175%" y="1205" width="0.0123%" height="15" fill="rgb(245,130,23)" fg:x="5119" fg:w="1"/><text x="63.0675%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="62.8175%" y="1189" width="0.0123%" height="15" fill="rgb(211,225,28)" fg:x="5119" fg:w="1"/><text x="63.0675%" y="1199.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="62.8175%" y="1173" width="0.0123%" height="15" fill="rgb(242,105,44)" fg:x="5119" fg:w="1"/><text x="63.0675%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="62.8175%" y="1157" width="0.0123%" height="15" fill="rgb(216,183,46)" fg:x="5119" fg:w="1"/><text x="63.0675%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="62.8421%" y="1173" width="0.0123%" height="15" fill="rgb(227,112,9)" fg:x="5121" fg:w="1"/><text x="63.0921%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="62.8421%" y="1157" width="0.0123%" height="15" fill="rgb(244,21,0)" fg:x="5121" fg:w="1"/><text x="63.0921%" y="1167.50"></text></g><g><title>bevy_render::render_graph::schedule::Stages::new (3 samples, 0.04%)</title><rect x="62.8298%" y="1221" width="0.0368%" height="15" fill="rgb(236,185,14)" fg:x="5120" fg:w="3"/><text x="63.0798%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.04%)</title><rect x="62.8298%" y="1205" width="0.0368%" height="15" fill="rgb(236,170,30)" fg:x="5120" fg:w="3"/><text x="63.0798%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.04%)</title><rect x="62.8298%" y="1189" width="0.0368%" height="15" fill="rgb(209,198,51)" fg:x="5120" fg:w="3"/><text x="63.0798%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="62.8543%" y="1173" width="0.0123%" height="15" fill="rgb(205,171,26)" fg:x="5122" fg:w="1"/><text x="63.1043%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="62.8543%" y="1157" width="0.0123%" height="15" fill="rgb(246,41,49)" fg:x="5122" fg:w="1"/><text x="63.1043%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="62.8543%" y="1141" width="0.0123%" height="15" fill="rgb(240,229,12)" fg:x="5122" fg:w="1"/><text x="63.1043%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="62.8543%" y="1125" width="0.0123%" height="15" fill="rgb(212,8,54)" fg:x="5122" fg:w="1"/><text x="63.1043%" y="1135.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.01%)</title><rect x="62.8543%" y="1109" width="0.0123%" height="15" fill="rgb(230,114,13)" fg:x="5122" fg:w="1"/><text x="63.1043%" y="1119.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="62.8543%" y="1093" width="0.0123%" height="15" fill="rgb(229,130,28)" fg:x="5122" fg:w="1"/><text x="63.1043%" y="1103.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="62.8543%" y="1077" width="0.0123%" height="15" fill="rgb(206,139,15)" fg:x="5122" fg:w="1"/><text x="63.1043%" y="1087.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="62.8543%" y="1061" width="0.0123%" height="15" fill="rgb(241,188,35)" fg:x="5122" fg:w="1"/><text x="63.1043%" y="1071.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="62.8543%" y="1045" width="0.0123%" height="15" fill="rgb(208,224,26)" fg:x="5122" fg:w="1"/><text x="63.1043%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="62.8666%" y="1205" width="0.0123%" height="15" fill="rgb(251,131,28)" fg:x="5123" fg:w="1"/><text x="63.1166%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="62.8789%" y="1205" width="0.0123%" height="15" fill="rgb(208,153,1)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="62.8789%" y="1189" width="0.0123%" height="15" fill="rgb(234,33,36)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="62.8789%" y="1173" width="0.0123%" height="15" fill="rgb(246,42,29)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1183.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::iter_node_outputs::{{closure}} (1 samples, 0.01%)</title><rect x="62.8789%" y="1157" width="0.0123%" height="15" fill="rgb(251,114,16)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1167.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::get_node_state (1 samples, 0.01%)</title><rect x="62.8789%" y="1141" width="0.0123%" height="15" fill="rgb(233,13,38)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="62.8789%" y="1125" width="0.0123%" height="15" fill="rgb(247,120,19)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="62.8789%" y="1109" width="0.0123%" height="15" fill="rgb(205,11,16)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="62.8789%" y="1093" width="0.0123%" height="15" fill="rgb(228,185,19)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="62.8789%" y="1077" width="0.0123%" height="15" fill="rgb(239,88,52)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="62.8789%" y="1061" width="0.0123%" height="15" fill="rgb(219,23,1)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1071.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="62.8789%" y="1045" width="0.0123%" height="15" fill="rgb(253,177,16)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1055.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="62.8789%" y="1029" width="0.0123%" height="15" fill="rgb(225,150,40)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="62.8789%" y="1013" width="0.0123%" height="15" fill="rgb(208,108,30)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1023.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::get_node_state (1 samples, 0.01%)</title><rect x="62.8789%" y="997" width="0.0123%" height="15" fill="rgb(214,122,4)" fg:x="5124" fg:w="1"/><text x="63.1289%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="62.8912%" y="1109" width="0.0245%" height="15" fill="rgb(229,74,37)" fg:x="5125" fg:w="2"/><text x="63.1412%" y="1119.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="62.8912%" y="1093" width="0.0245%" height="15" fill="rgb(233,61,41)" fg:x="5125" fg:w="2"/><text x="63.1412%" y="1103.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="62.8912%" y="1077" width="0.0245%" height="15" fill="rgb(238,191,5)" fg:x="5125" fg:w="2"/><text x="63.1412%" y="1087.50"></text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="62.8912%" y="1061" width="0.0245%" height="15" fill="rgb(233,78,24)" fg:x="5125" fg:w="2"/><text x="63.1412%" y="1071.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="62.8912%" y="1045" width="0.0245%" height="15" fill="rgb(211,142,8)" fg:x="5125" fg:w="2"/><text x="63.1412%" y="1055.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="62.8912%" y="1029" width="0.0245%" height="15" fill="rgb(253,38,53)" fg:x="5125" fg:w="2"/><text x="63.1412%" y="1039.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="62.8912%" y="1013" width="0.0245%" height="15" fill="rgb(234,63,51)" fg:x="5125" fg:w="2"/><text x="63.1412%" y="1023.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="62.8912%" y="997" width="0.0245%" height="15" fill="rgb(205,23,31)" fg:x="5125" fg:w="2"/><text x="63.1412%" y="1007.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.09%)</title><rect x="62.9157%" y="1109" width="0.0859%" height="15" fill="rgb(210,184,50)" fg:x="5127" fg:w="7"/><text x="63.1657%" y="1119.50"></text></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="62.9648%" y="1093" width="0.0368%" height="15" fill="rgb(222,112,26)" fg:x="5131" fg:w="3"/><text x="63.2148%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.12%)</title><rect x="62.8912%" y="1189" width="0.1227%" height="15" fill="rgb(250,98,18)" fg:x="5125" fg:w="10"/><text x="63.1412%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.12%)</title><rect x="62.8912%" y="1173" width="0.1227%" height="15" fill="rgb(250,34,12)" fg:x="5125" fg:w="10"/><text x="63.1412%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.12%)</title><rect x="62.8912%" y="1157" width="0.1227%" height="15" fill="rgb(236,141,30)" fg:x="5125" fg:w="10"/><text x="63.1412%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.12%)</title><rect x="62.8912%" y="1141" width="0.1227%" height="15" fill="rgb(246,134,38)" fg:x="5125" fg:w="10"/><text x="63.1412%" y="1151.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.12%)</title><rect x="62.8912%" y="1125" width="0.1227%" height="15" fill="rgb(240,114,4)" fg:x="5125" fg:w="10"/><text x="63.1412%" y="1135.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="63.0016%" y="1109" width="0.0123%" height="15" fill="rgb(243,113,39)" fg:x="5134" fg:w="1"/><text x="63.2516%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.13%)</title><rect x="62.8912%" y="1205" width="0.1350%" height="15" fill="rgb(239,215,4)" fg:x="5125" fg:w="11"/><text x="63.1412%" y="1215.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="63.0139%" y="1189" width="0.0123%" height="15" fill="rgb(236,229,45)" fg:x="5135" fg:w="1"/><text x="63.2639%" y="1199.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::iter_node_outputs (1 samples, 0.01%)</title><rect x="63.0261%" y="1205" width="0.0123%" height="15" fill="rgb(242,2,6)" fg:x="5136" fg:w="1"/><text x="63.2761%" y="1215.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::get_node_state (1 samples, 0.01%)</title><rect x="63.0261%" y="1189" width="0.0123%" height="15" fill="rgb(239,108,21)" fg:x="5136" fg:w="1"/><text x="63.2761%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="63.0261%" y="1173" width="0.0123%" height="15" fill="rgb(215,168,34)" fg:x="5136" fg:w="1"/><text x="63.2761%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="63.0261%" y="1157" width="0.0123%" height="15" fill="rgb(238,31,17)" fg:x="5136" fg:w="1"/><text x="63.2761%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="63.0261%" y="1141" width="0.0123%" height="15" fill="rgb(220,133,11)" fg:x="5136" fg:w="1"/><text x="63.2761%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="63.0261%" y="1125" width="0.0123%" height="15" fill="rgb(212,158,23)" fg:x="5136" fg:w="1"/><text x="63.2761%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="63.0261%" y="1109" width="0.0123%" height="15" fill="rgb(223,172,7)" fg:x="5136" fg:w="1"/><text x="63.2761%" y="1119.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="63.0261%" y="1093" width="0.0123%" height="15" fill="rgb(244,3,52)" fg:x="5136" fg:w="1"/><text x="63.2761%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="63.0261%" y="1077" width="0.0123%" height="15" fill="rgb(207,69,27)" fg:x="5136" fg:w="1"/><text x="63.2761%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="63.0261%" y="1061" width="0.0123%" height="15" fill="rgb(213,136,45)" fg:x="5136" fg:w="1"/><text x="63.2761%" y="1071.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::get_node_state (1 samples, 0.01%)</title><rect x="63.0261%" y="1045" width="0.0123%" height="15" fill="rgb(218,79,17)" fg:x="5136" fg:w="1"/><text x="63.2761%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="63.0384%" y="1189" width="0.0123%" height="15" fill="rgb(216,106,36)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="63.0384%" y="1173" width="0.0123%" height="15" fill="rgb(251,27,45)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="63.0384%" y="1157" width="0.0123%" height="15" fill="rgb(232,21,34)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="63.0384%" y="1141" width="0.0123%" height="15" fill="rgb(249,191,16)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="63.0384%" y="1125" width="0.0123%" height="15" fill="rgb(224,88,20)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="63.0384%" y="1109" width="0.0123%" height="15" fill="rgb(237,93,27)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="63.0384%" y="1093" width="0.0123%" height="15" fill="rgb(226,198,48)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1103.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="63.0384%" y="1077" width="0.0123%" height="15" fill="rgb(207,162,53)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1087.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="63.0384%" y="1061" width="0.0123%" height="15" fill="rgb(207,169,9)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1071.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="63.0384%" y="1045" width="0.0123%" height="15" fill="rgb(224,166,46)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1055.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="63.0384%" y="1029" width="0.0123%" height="15" fill="rgb(233,26,6)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1039.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="63.0384%" y="1013" width="0.0123%" height="15" fill="rgb(218,106,45)" fg:x="5137" fg:w="1"/><text x="63.2884%" y="1023.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (1 samples, 0.01%)</title><rect x="63.0507%" y="1173" width="0.0123%" height="15" fill="rgb(240,217,4)" fg:x="5138" fg:w="1"/><text x="63.3007%" y="1183.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node::{{closure}} (1 samples, 0.01%)</title><rect x="63.0507%" y="1157" width="0.0123%" height="15" fill="rgb(246,171,10)" fg:x="5138" fg:w="1"/><text x="63.3007%" y="1167.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (1 samples, 0.01%)</title><rect x="63.0507%" y="1141" width="0.0123%" height="15" fill="rgb(223,197,30)" fg:x="5138" fg:w="1"/><text x="63.3007%" y="1151.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::iter_node_outputs (1 samples, 0.01%)</title><rect x="63.0630%" y="1157" width="0.0123%" height="15" fill="rgb(207,92,16)" fg:x="5139" fg:w="1"/><text x="63.3130%" y="1167.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::get_node_state (1 samples, 0.01%)</title><rect x="63.0630%" y="1141" width="0.0123%" height="15" fill="rgb(211,6,44)" fg:x="5139" fg:w="1"/><text x="63.3130%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="63.0630%" y="1125" width="0.0123%" height="15" fill="rgb(219,139,2)" fg:x="5139" fg:w="1"/><text x="63.3130%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="63.0630%" y="1109" width="0.0123%" height="15" fill="rgb(224,103,21)" fg:x="5139" fg:w="1"/><text x="63.3130%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="63.0630%" y="1093" width="0.0123%" height="15" fill="rgb(254,110,48)" fg:x="5139" fg:w="1"/><text x="63.3130%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="63.0630%" y="1077" width="0.0123%" height="15" fill="rgb(212,88,19)" fg:x="5139" fg:w="1"/><text x="63.3130%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="63.0630%" y="1061" width="0.0123%" height="15" fill="rgb(248,103,6)" fg:x="5139" fg:w="1"/><text x="63.3130%" y="1071.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="63.0630%" y="1045" width="0.0123%" height="15" fill="rgb(214,53,46)" fg:x="5139" fg:w="1"/><text x="63.3130%" y="1055.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="63.0630%" y="1029" width="0.0123%" height="15" fill="rgb(236,190,24)" fg:x="5139" fg:w="1"/><text x="63.3130%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="63.0630%" y="1013" width="0.0123%" height="15" fill="rgb(254,58,28)" fg:x="5139" fg:w="1"/><text x="63.3130%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="63.0630%" y="997" width="0.0123%" height="15" fill="rgb(243,63,27)" fg:x="5139" fg:w="1"/><text x="63.3130%" y="1007.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (4 samples, 0.05%)</title><rect x="63.0384%" y="1205" width="0.0491%" height="15" fill="rgb(206,81,20)" fg:x="5137" fg:w="4"/><text x="63.2884%" y="1215.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (3 samples, 0.04%)</title><rect x="63.0507%" y="1189" width="0.0368%" height="15" fill="rgb(252,69,51)" fg:x="5138" fg:w="3"/><text x="63.3007%" y="1199.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (2 samples, 0.02%)</title><rect x="63.0630%" y="1173" width="0.0245%" height="15" fill="rgb(222,213,4)" fg:x="5139" fg:w="2"/><text x="63.3130%" y="1183.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="63.0752%" y="1157" width="0.0123%" height="15" fill="rgb(226,198,12)" fg:x="5140" fg:w="1"/><text x="63.3252%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="63.0752%" y="1141" width="0.0123%" height="15" fill="rgb(248,115,11)" fg:x="5140" fg:w="1"/><text x="63.3252%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="63.0752%" y="1125" width="0.0123%" height="15" fill="rgb(221,148,54)" fg:x="5140" fg:w="1"/><text x="63.3252%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="63.0752%" y="1109" width="0.0123%" height="15" fill="rgb(214,209,51)" fg:x="5140" fg:w="1"/><text x="63.3252%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="63.0752%" y="1093" width="0.0123%" height="15" fill="rgb(249,116,53)" fg:x="5140" fg:w="1"/><text x="63.3252%" y="1103.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="63.0752%" y="1077" width="0.0123%" height="15" fill="rgb(248,170,1)" fg:x="5140" fg:w="1"/><text x="63.3252%" y="1087.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="63.0752%" y="1061" width="0.0123%" height="15" fill="rgb(244,105,10)" fg:x="5140" fg:w="1"/><text x="63.3252%" y="1071.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="63.0752%" y="1045" width="0.0123%" height="15" fill="rgb(229,100,5)" fg:x="5140" fg:w="1"/><text x="63.3252%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.01%)</title><rect x="63.0875%" y="1205" width="0.0123%" height="15" fill="rgb(233,221,39)" fg:x="5141" fg:w="1"/><text x="63.3375%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="63.0875%" y="1189" width="0.0123%" height="15" fill="rgb(233,88,21)" fg:x="5141" fg:w="1"/><text x="63.3375%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="63.0875%" y="1173" width="0.0123%" height="15" fill="rgb(206,13,0)" fg:x="5141" fg:w="1"/><text x="63.3375%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="63.0875%" y="1157" width="0.0123%" height="15" fill="rgb(242,15,35)" fg:x="5141" fg:w="1"/><text x="63.3375%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="63.0875%" y="1141" width="0.0123%" height="15" fill="rgb(247,142,41)" fg:x="5141" fg:w="1"/><text x="63.3375%" y="1151.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="63.0875%" y="1125" width="0.0123%" height="15" fill="rgb(245,51,29)" fg:x="5141" fg:w="1"/><text x="63.3375%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="63.0875%" y="1109" width="0.0123%" height="15" fill="rgb(228,209,43)" fg:x="5141" fg:w="1"/><text x="63.3375%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="63.0875%" y="1093" width="0.0123%" height="15" fill="rgb(233,185,9)" fg:x="5141" fg:w="1"/><text x="63.3375%" y="1103.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="63.0875%" y="1077" width="0.0123%" height="15" fill="rgb(226,93,0)" fg:x="5141" fg:w="1"/><text x="63.3375%" y="1087.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.01%)</title><rect x="63.0998%" y="1109" width="0.0123%" height="15" fill="rgb(245,194,43)" fg:x="5142" fg:w="1"/><text x="63.3498%" y="1119.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="63.0998%" y="1093" width="0.0123%" height="15" fill="rgb(211,145,34)" fg:x="5142" fg:w="1"/><text x="63.3498%" y="1103.50"></text></g><g><title>&lt;bevy_render::render_graph::node::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="63.0998%" y="1077" width="0.0123%" height="15" fill="rgb(231,228,28)" fg:x="5142" fg:w="1"/><text x="63.3498%" y="1087.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="63.0998%" y="1061" width="0.0123%" height="15" fill="rgb(236,149,4)" fg:x="5142" fg:w="1"/><text x="63.3498%" y="1071.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="63.0998%" y="1045" width="0.0123%" height="15" fill="rgb(234,114,38)" fg:x="5142" fg:w="1"/><text x="63.3498%" y="1055.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="63.0998%" y="1029" width="0.0123%" height="15" fill="rgb(246,132,51)" fg:x="5142" fg:w="1"/><text x="63.3498%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="63.0998%" y="1013" width="0.0123%" height="15" fill="rgb(251,137,22)" fg:x="5142" fg:w="1"/><text x="63.3498%" y="1023.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="63.0998%" y="997" width="0.0123%" height="15" fill="rgb(243,59,52)" fg:x="5142" fg:w="1"/><text x="63.3498%" y="1007.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="63.0998%" y="981" width="0.0123%" height="15" fill="rgb(239,56,28)" fg:x="5142" fg:w="1"/><text x="63.3498%" y="991.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="63.0998%" y="965" width="0.0123%" height="15" fill="rgb(218,168,27)" fg:x="5142" fg:w="1"/><text x="63.3498%" y="975.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="63.0998%" y="949" width="0.0123%" height="15" fill="rgb(232,165,11)" fg:x="5142" fg:w="1"/><text x="63.3498%" y="959.50"></text></g><g><title>&lt;bevy_render::render_graph::schedule::DependentNodeStager as bevy_render::render_graph::schedule::RenderGraphStager&gt;::get_stages (24 samples, 0.29%)</title><rect x="62.8298%" y="1237" width="0.2945%" height="15" fill="rgb(253,55,41)" fg:x="5120" fg:w="24"/><text x="63.0798%" y="1247.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (21 samples, 0.26%)</title><rect x="62.8666%" y="1221" width="0.2577%" height="15" fill="rgb(233,206,24)" fg:x="5123" fg:w="21"/><text x="63.1166%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.02%)</title><rect x="63.0998%" y="1205" width="0.0245%" height="15" fill="rgb(220,199,8)" fg:x="5142" fg:w="2"/><text x="63.3498%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="63.0998%" y="1189" width="0.0245%" height="15" fill="rgb(254,65,26)" fg:x="5142" fg:w="2"/><text x="63.3498%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="63.0998%" y="1173" width="0.0245%" height="15" fill="rgb(253,102,23)" fg:x="5142" fg:w="2"/><text x="63.3498%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="63.0998%" y="1157" width="0.0245%" height="15" fill="rgb(231,103,35)" fg:x="5142" fg:w="2"/><text x="63.3498%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="63.0998%" y="1141" width="0.0245%" height="15" fill="rgb(238,26,10)" fg:x="5142" fg:w="2"/><text x="63.3498%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="63.0998%" y="1125" width="0.0245%" height="15" fill="rgb(234,191,34)" fg:x="5142" fg:w="2"/><text x="63.3498%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="63.1120%" y="1109" width="0.0123%" height="15" fill="rgb(206,210,9)" fg:x="5143" fg:w="1"/><text x="63.3620%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="63.1120%" y="1093" width="0.0123%" height="15" fill="rgb(219,155,3)" fg:x="5143" fg:w="1"/><text x="63.3620%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="63.1120%" y="1077" width="0.0123%" height="15" fill="rgb(221,62,52)" fg:x="5143" fg:w="1"/><text x="63.3620%" y="1087.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="63.1120%" y="1061" width="0.0123%" height="15" fill="rgb(215,197,36)" fg:x="5143" fg:w="1"/><text x="63.3620%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="63.1120%" y="1045" width="0.0123%" height="15" fill="rgb(226,222,6)" fg:x="5143" fg:w="1"/><text x="63.3620%" y="1055.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="63.1120%" y="1029" width="0.0123%" height="15" fill="rgb(215,58,28)" fg:x="5143" fg:w="1"/><text x="63.3620%" y="1039.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="63.1120%" y="1013" width="0.0123%" height="15" fill="rgb(212,148,2)" fg:x="5143" fg:w="1"/><text x="63.3620%" y="1023.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="63.1120%" y="997" width="0.0123%" height="15" fill="rgb(208,21,42)" fg:x="5143" fg:w="1"/><text x="63.3620%" y="1007.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="63.1120%" y="981" width="0.0123%" height="15" fill="rgb(209,107,26)" fg:x="5143" fg:w="1"/><text x="63.3620%" y="991.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="63.1120%" y="965" width="0.0123%" height="15" fill="rgb(254,60,47)" fg:x="5143" fg:w="1"/><text x="63.3620%" y="975.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="63.1120%" y="949" width="0.0123%" height="15" fill="rgb(207,226,45)" fg:x="5143" fg:w="1"/><text x="63.3620%" y="959.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::prepare (1 samples, 0.01%)</title><rect x="63.1243%" y="1205" width="0.0123%" height="15" fill="rgb(223,124,22)" fg:x="5144" fg:w="1"/><text x="63.3743%" y="1215.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource (1 samples, 0.01%)</title><rect x="63.1366%" y="1205" width="0.0123%" height="15" fill="rgb(240,162,13)" fg:x="5145" fg:w="1"/><text x="63.3866%" y="1215.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="63.1366%" y="1189" width="0.0123%" height="15" fill="rgb(244,199,31)" fg:x="5145" fg:w="1"/><text x="63.3866%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="63.1366%" y="1173" width="0.0123%" height="15" fill="rgb(207,92,16)" fg:x="5145" fg:w="1"/><text x="63.3866%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="63.1366%" y="1157" width="0.0123%" height="15" fill="rgb(215,31,19)" fg:x="5145" fg:w="1"/><text x="63.3866%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="63.1366%" y="1141" width="0.0123%" height="15" fill="rgb(245,118,14)" fg:x="5145" fg:w="1"/><text x="63.3866%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="63.1366%" y="1125" width="0.0123%" height="15" fill="rgb(248,12,46)" fg:x="5145" fg:w="1"/><text x="63.3866%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="63.1366%" y="1109" width="0.0123%" height="15" fill="rgb(209,119,0)" fg:x="5145" fg:w="1"/><text x="63.3866%" y="1119.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (2 samples, 0.02%)</title><rect x="63.1489%" y="1205" width="0.0245%" height="15" fill="rgb(254,51,44)" fg:x="5146" fg:w="2"/><text x="63.3989%" y="1215.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldBorrowMut&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="63.1611%" y="1189" width="0.0123%" height="15" fill="rgb(253,182,35)" fg:x="5147" fg:w="1"/><text x="63.4111%" y="1199.50"></text></g><g><title>bevy_ecs::world::world_cell::ArchetypeComponentAccess::write (1 samples, 0.01%)</title><rect x="63.1611%" y="1173" width="0.0123%" height="15" fill="rgb(205,198,39)" fg:x="5147" fg:w="1"/><text x="63.4111%" y="1183.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_or_insert_with (1 samples, 0.01%)</title><rect x="63.1611%" y="1157" width="0.0123%" height="15" fill="rgb(251,175,48)" fg:x="5147" fg:w="1"/><text x="63.4111%" y="1167.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="63.1611%" y="1141" width="0.0123%" height="15" fill="rgb(239,38,17)" fg:x="5147" fg:w="1"/><text x="63.4111%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="63.1611%" y="1125" width="0.0123%" height="15" fill="rgb(212,101,8)" fg:x="5147" fg:w="1"/><text x="63.4111%" y="1135.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="63.1611%" y="1109" width="0.0123%" height="15" fill="rgb(228,35,17)" fg:x="5147" fg:w="1"/><text x="63.4111%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="63.1611%" y="1093" width="0.0123%" height="15" fill="rgb(214,95,8)" fg:x="5147" fg:w="1"/><text x="63.4111%" y="1103.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::create_texture (2 samples, 0.02%)</title><rect x="63.1734%" y="1189" width="0.0245%" height="15" fill="rgb(210,176,35)" fg:x="5148" fg:w="2"/><text x="63.4234%" y="1199.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (2 samples, 0.02%)</title><rect x="63.1734%" y="1173" width="0.0245%" height="15" fill="rgb(226,4,3)" fg:x="5148" fg:w="2"/><text x="63.4234%" y="1183.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (1 samples, 0.01%)</title><rect x="63.1857%" y="1157" width="0.0123%" height="15" fill="rgb(232,133,14)" fg:x="5149" fg:w="1"/><text x="63.4357%" y="1167.50"></text></g><g><title>&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (1 samples, 0.01%)</title><rect x="63.2102%" y="1125" width="0.0123%" height="15" fill="rgb(250,191,8)" fg:x="5151" fg:w="1"/><text x="63.4602%" y="1135.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::init_textures (5 samples, 0.06%)</title><rect x="63.1734%" y="1205" width="0.0614%" height="15" fill="rgb(213,12,45)" fg:x="5148" fg:w="5"/><text x="63.4234%" y="1215.50"></text></g><g><title>bevy_egui::egui_node::as_bevy_texture (3 samples, 0.04%)</title><rect x="63.1979%" y="1189" width="0.0368%" height="15" fill="rgb(233,78,26)" fg:x="5150" fg:w="3"/><text x="63.4479%" y="1199.50"></text></g><g><title>epaint::color::Color32::from_white_alpha (3 samples, 0.04%)</title><rect x="63.1979%" y="1173" width="0.0368%" height="15" fill="rgb(245,222,11)" fg:x="5150" fg:w="3"/><text x="63.4479%" y="1183.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.04%)</title><rect x="63.1979%" y="1157" width="0.0368%" height="15" fill="rgb(216,174,12)" fg:x="5150" fg:w="3"/><text x="63.4479%" y="1167.50"></text></g><g><title>&lt;epaint::color::Color32 as core::convert::From&lt;epaint::color::Rgba&gt;&gt;::from (3 samples, 0.04%)</title><rect x="63.1979%" y="1141" width="0.0368%" height="15" fill="rgb(213,15,9)" fg:x="5150" fg:w="3"/><text x="63.4479%" y="1151.50"></text></g><g><title>epaint::color::linear_u8_from_linear_f32 (1 samples, 0.01%)</title><rect x="63.2225%" y="1125" width="0.0123%" height="15" fill="rgb(238,103,32)" fg:x="5152" fg:w="1"/><text x="63.4725%" y="1135.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="63.2348%" y="1189" width="0.0123%" height="15" fill="rgb(245,85,15)" fg:x="5153" fg:w="1"/><text x="63.4848%" y="1199.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="63.2348%" y="1173" width="0.0123%" height="15" fill="rgb(254,204,5)" fg:x="5153" fg:w="1"/><text x="63.4848%" y="1183.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.01%)</title><rect x="63.2348%" y="1157" width="0.0123%" height="15" fill="rgb(231,178,15)" fg:x="5153" fg:w="1"/><text x="63.4848%" y="1167.50"></text></g><g><title>ahash::random_state::RandomState::get_src (1 samples, 0.01%)</title><rect x="63.2348%" y="1141" width="0.0123%" height="15" fill="rgb(248,151,3)" fg:x="5153" fg:w="1"/><text x="63.4848%" y="1151.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_init (1 samples, 0.01%)</title><rect x="63.2348%" y="1125" width="0.0123%" height="15" fill="rgb(250,139,13)" fg:x="5153" fg:w="1"/><text x="63.4848%" y="1135.50"></text></g><g><title>once_cell::race::once_box::OnceBox&lt;T&gt;::get_or_try_init (1 samples, 0.01%)</title><rect x="63.2348%" y="1109" width="0.0123%" height="15" fill="rgb(243,107,53)" fg:x="5153" fg:w="1"/><text x="63.4848%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="63.2348%" y="1093" width="0.0123%" height="15" fill="rgb(232,81,15)" fg:x="5153" fg:w="1"/><text x="63.4848%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="63.2348%" y="1077" width="0.0123%" height="15" fill="rgb(225,187,48)" fg:x="5153" fg:w="1"/><text x="63.4848%" y="1087.50"></text></g><g><title>bevy_egui::EguiContext::ctx_for_window (1 samples, 0.01%)</title><rect x="63.2470%" y="1189" width="0.0123%" height="15" fill="rgb(205,116,12)" fg:x="5154" fg:w="1"/><text x="63.4970%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="63.2470%" y="1173" width="0.0123%" height="15" fill="rgb(220,222,31)" fg:x="5154" fg:w="1"/><text x="63.4970%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="63.2470%" y="1157" width="0.0123%" height="15" fill="rgb(233,187,49)" fg:x="5154" fg:w="1"/><text x="63.4970%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="63.2470%" y="1141" width="0.0123%" height="15" fill="rgb(211,168,53)" fg:x="5154" fg:w="1"/><text x="63.4970%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="63.2470%" y="1125" width="0.0123%" height="15" fill="rgb(206,160,16)" fg:x="5154" fg:w="1"/><text x="63.4970%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="63.2470%" y="1109" width="0.0123%" height="15" fill="rgb(254,164,13)" fg:x="5154" fg:w="1"/><text x="63.4970%" y="1119.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="63.2470%" y="1093" width="0.0123%" height="15" fill="rgb(229,45,30)" fg:x="5154" fg:w="1"/><text x="63.4970%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="63.2470%" y="1077" width="0.0123%" height="15" fill="rgb(237,32,10)" fg:x="5154" fg:w="1"/><text x="63.4970%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="63.2470%" y="1061" width="0.0123%" height="15" fill="rgb(251,20,47)" fg:x="5154" fg:w="1"/><text x="63.4970%" y="1071.50"></text></g><g><title>bevy_egui::EguiContext::ctx_for_window (1 samples, 0.01%)</title><rect x="63.2470%" y="1045" width="0.0123%" height="15" fill="rgb(251,116,12)" fg:x="5154" fg:w="1"/><text x="63.4970%" y="1055.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::process_asset_events (3 samples, 0.04%)</title><rect x="63.2348%" y="1205" width="0.0368%" height="15" fill="rgb(214,227,27)" fg:x="5153" fg:w="3"/><text x="63.4848%" y="1215.50"></text></g><g><title>egui::context::Context::texture (1 samples, 0.01%)</title><rect x="63.2593%" y="1189" width="0.0123%" height="15" fill="rgb(248,10,53)" fg:x="5155" fg:w="1"/><text x="63.5093%" y="1199.50"></text></g><g><title>epaint::text::fonts::Fonts::texture (1 samples, 0.01%)</title><rect x="63.2593%" y="1173" width="0.0123%" height="15" fill="rgb(221,176,25)" fg:x="5155" fg:w="1"/><text x="63.5093%" y="1183.50"></text></g><g><title>epaint::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="63.2593%" y="1157" width="0.0123%" height="15" fill="rgb(205,70,46)" fg:x="5155" fg:w="1"/><text x="63.5093%" y="1167.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (1 samples, 0.01%)</title><rect x="63.2593%" y="1141" width="0.0123%" height="15" fill="rgb(217,45,38)" fg:x="5155" fg:w="1"/><text x="63.5093%" y="1151.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (1 samples, 0.01%)</title><rect x="63.2593%" y="1125" width="0.0123%" height="15" fill="rgb(243,6,54)" fg:x="5155" fg:w="1"/><text x="63.5093%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="63.2593%" y="1109" width="0.0123%" height="15" fill="rgb(242,76,23)" fg:x="5155" fg:w="1"/><text x="63.5093%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="63.2593%" y="1093" width="0.0123%" height="15" fill="rgb(239,166,0)" fg:x="5155" fg:w="1"/><text x="63.5093%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="63.2716%" y="1189" width="0.0123%" height="15" fill="rgb(238,174,32)" fg:x="5156" fg:w="1"/><text x="63.5216%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="63.2716%" y="1173" width="0.0123%" height="15" fill="rgb(238,124,44)" fg:x="5156" fg:w="1"/><text x="63.5216%" y="1183.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="63.2716%" y="1157" width="0.0123%" height="15" fill="rgb(206,185,9)" fg:x="5156" fg:w="1"/><text x="63.5216%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="63.2716%" y="1141" width="0.0123%" height="15" fill="rgb(215,157,17)" fg:x="5156" fg:w="1"/><text x="63.5216%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="63.2838%" y="1109" width="0.0123%" height="15" fill="rgb(251,17,29)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="1119.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="63.2838%" y="1093" width="0.0123%" height="15" fill="rgb(227,113,27)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="1103.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="63.2838%" y="1077" width="0.0123%" height="15" fill="rgb(217,226,24)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="1087.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="63.2838%" y="1061" width="0.0123%" height="15" fill="rgb(251,99,38)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.01%)</title><rect x="63.2838%" y="1045" width="0.0123%" height="15" fill="rgb(231,147,19)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend::{{closure}} (1 samples, 0.01%)</title><rect x="63.2838%" y="1029" width="0.0123%" height="15" fill="rgb(230,86,8)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="63.2838%" y="1013" width="0.0123%" height="15" fill="rgb(237,159,39)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="1023.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="63.2838%" y="997" width="0.0123%" height="15" fill="rgb(247,179,47)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="1007.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for &amp;T&gt;::hash (1 samples, 0.01%)</title><rect x="63.2838%" y="981" width="0.0123%" height="15" fill="rgb(253,152,26)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="991.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="63.2838%" y="965" width="0.0123%" height="15" fill="rgb(222,211,15)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="975.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="63.2838%" y="949" width="0.0123%" height="15" fill="rgb(236,193,6)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="63.2838%" y="933" width="0.0123%" height="15" fill="rgb(226,206,10)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="943.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="63.2838%" y="917" width="0.0123%" height="15" fill="rgb(213,125,22)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="927.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="63.2838%" y="901" width="0.0123%" height="15" fill="rgb(221,66,28)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="63.2838%" y="885" width="0.0123%" height="15" fill="rgb(222,84,53)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="895.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="63.2838%" y="869" width="0.0123%" height="15" fill="rgb(243,50,15)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="879.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="63.2838%" y="853" width="0.0123%" height="15" fill="rgb(208,184,23)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="863.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="63.2838%" y="837" width="0.0123%" height="15" fill="rgb(221,83,2)" fg:x="5157" fg:w="1"/><text x="63.5338%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="63.2838%" y="1189" width="0.0245%" height="15" fill="rgb(236,53,24)" fg:x="5157" fg:w="2"/><text x="63.5338%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="63.2838%" y="1173" width="0.0245%" height="15" fill="rgb(244,171,29)" fg:x="5157" fg:w="2"/><text x="63.5338%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="63.2838%" y="1157" width="0.0245%" height="15" fill="rgb(205,19,11)" fg:x="5157" fg:w="2"/><text x="63.5338%" y="1167.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="63.2838%" y="1141" width="0.0245%" height="15" fill="rgb(207,108,29)" fg:x="5157" fg:w="2"/><text x="63.5338%" y="1151.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="63.2838%" y="1125" width="0.0245%" height="15" fill="rgb(236,215,43)" fg:x="5157" fg:w="2"/><text x="63.5338%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="63.2961%" y="1109" width="0.0123%" height="15" fill="rgb(213,58,35)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="63.2961%" y="1093" width="0.0123%" height="15" fill="rgb(220,211,46)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="63.2961%" y="1077" width="0.0123%" height="15" fill="rgb(212,134,16)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="63.2961%" y="1061" width="0.0123%" height="15" fill="rgb(232,90,44)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="63.2961%" y="1045" width="0.0123%" height="15" fill="rgb(212,18,36)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="63.2961%" y="1029" width="0.0123%" height="15" fill="rgb(206,112,24)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="63.2961%" y="1013" width="0.0123%" height="15" fill="rgb(238,223,40)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="1023.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="63.2961%" y="997" width="0.0123%" height="15" fill="rgb(226,169,20)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="63.2961%" y="981" width="0.0123%" height="15" fill="rgb(241,64,52)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="991.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="63.2961%" y="965" width="0.0123%" height="15" fill="rgb(228,120,25)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="975.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="63.2961%" y="949" width="0.0123%" height="15" fill="rgb(234,108,19)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="959.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="63.2961%" y="933" width="0.0123%" height="15" fill="rgb(236,133,29)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="63.2961%" y="917" width="0.0123%" height="15" fill="rgb(246,174,53)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="927.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="63.2961%" y="901" width="0.0123%" height="15" fill="rgb(210,105,35)" fg:x="5158" fg:w="1"/><text x="63.5461%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::keys (1 samples, 0.01%)</title><rect x="63.3084%" y="1189" width="0.0123%" height="15" fill="rgb(225,27,26)" fg:x="5159" fg:w="1"/><text x="63.5584%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="63.3084%" y="1173" width="0.0123%" height="15" fill="rgb(233,2,39)" fg:x="5159" fg:w="1"/><text x="63.5584%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="63.3084%" y="1157" width="0.0123%" height="15" fill="rgb(219,164,26)" fg:x="5159" fg:w="1"/><text x="63.5584%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="63.3084%" y="1141" width="0.0123%" height="15" fill="rgb(236,211,5)" fg:x="5159" fg:w="1"/><text x="63.5584%" y="1151.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="63.3084%" y="1125" width="0.0123%" height="15" fill="rgb(244,227,23)" fg:x="5159" fg:w="1"/><text x="63.5584%" y="1135.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="63.3084%" y="1109" width="0.0123%" height="15" fill="rgb(230,184,8)" fg:x="5159" fg:w="1"/><text x="63.5584%" y="1119.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="63.3084%" y="1093" width="0.0123%" height="15" fill="rgb(217,125,48)" fg:x="5159" fg:w="1"/><text x="63.5584%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (1 samples, 0.01%)</title><rect x="63.3207%" y="1189" width="0.0123%" height="15" fill="rgb(223,192,47)" fg:x="5160" fg:w="1"/><text x="63.5707%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="63.3207%" y="1173" width="0.0123%" height="15" fill="rgb(226,119,10)" fg:x="5160" fg:w="1"/><text x="63.5707%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="63.3207%" y="1157" width="0.0123%" height="15" fill="rgb(221,49,29)" fg:x="5160" fg:w="1"/><text x="63.5707%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="63.3207%" y="1141" width="0.0123%" height="15" fill="rgb(217,205,19)" fg:x="5160" fg:w="1"/><text x="63.5707%" y="1151.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="63.3207%" y="1125" width="0.0123%" height="15" fill="rgb(242,104,7)" fg:x="5160" fg:w="1"/><text x="63.5707%" y="1135.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="63.3207%" y="1109" width="0.0123%" height="15" fill="rgb(209,154,48)" fg:x="5160" fg:w="1"/><text x="63.5707%" y="1119.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="63.3207%" y="1093" width="0.0123%" height="15" fill="rgb(219,213,46)" fg:x="5160" fg:w="1"/><text x="63.5707%" y="1103.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::remove_unused_textures (6 samples, 0.07%)</title><rect x="63.2716%" y="1205" width="0.0736%" height="15" fill="rgb(229,105,38)" fg:x="5156" fg:w="6"/><text x="63.5216%" y="1215.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.01%)</title><rect x="63.3329%" y="1189" width="0.0123%" height="15" fill="rgb(205,151,5)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1199.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.01%)</title><rect x="63.3329%" y="1173" width="0.0123%" height="15" fill="rgb(248,115,40)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="63.3329%" y="1157" width="0.0123%" height="15" fill="rgb(206,179,2)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="63.3329%" y="1141" width="0.0123%" height="15" fill="rgb(230,103,24)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="63.3329%" y="1125" width="0.0123%" height="15" fill="rgb(218,152,4)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="63.3329%" y="1109" width="0.0123%" height="15" fill="rgb(236,161,54)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1119.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="63.3329%" y="1093" width="0.0123%" height="15" fill="rgb(226,65,17)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1103.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="63.3329%" y="1077" width="0.0123%" height="15" fill="rgb(221,134,44)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1087.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="63.3329%" y="1061" width="0.0123%" height="15" fill="rgb(251,129,4)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1071.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="63.3329%" y="1045" width="0.0123%" height="15" fill="rgb(244,32,34)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1055.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1 samples, 0.01%)</title><rect x="63.3329%" y="1029" width="0.0123%" height="15" fill="rgb(251,224,37)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1039.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.01%)</title><rect x="63.3329%" y="1013" width="0.0123%" height="15" fill="rgb(248,117,31)" fg:x="5161" fg:w="1"/><text x="63.5829%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.01%)</title><rect x="63.3452%" y="1205" width="0.0123%" height="15" fill="rgb(222,208,37)" fg:x="5162" fg:w="1"/><text x="63.5952%" y="1215.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::prepare (20 samples, 0.25%)</title><rect x="63.1243%" y="1221" width="0.2454%" height="15" fill="rgb(234,211,25)" fg:x="5144" fg:w="20"/><text x="63.3743%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::world::world_cell::WorldBorrowMut&lt;bevy_egui::EguiContext&gt;&gt; (1 samples, 0.01%)</title><rect x="63.3575%" y="1205" width="0.0123%" height="15" fill="rgb(211,72,6)" fg:x="5163" fg:w="1"/><text x="63.6075%" y="1215.50"></text></g><g><title>&lt;bevy_ecs::world::world_cell::WorldBorrowMut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="63.3575%" y="1189" width="0.0123%" height="15" fill="rgb(249,198,38)" fg:x="5163" fg:w="1"/><text x="63.6075%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="63.3697%" y="1173" width="0.0123%" height="15" fill="rgb(221,86,51)" fg:x="5164" fg:w="1"/><text x="63.6197%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="63.3697%" y="1157" width="0.0123%" height="15" fill="rgb(226,178,43)" fg:x="5164" fg:w="1"/><text x="63.6197%" y="1167.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="63.3697%" y="1141" width="0.0123%" height="15" fill="rgb(215,145,7)" fg:x="5164" fg:w="1"/><text x="63.6197%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="63.3697%" y="1125" width="0.0123%" height="15" fill="rgb(250,202,36)" fg:x="5164" fg:w="1"/><text x="63.6197%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="63.3697%" y="1109" width="0.0123%" height="15" fill="rgb(215,86,13)" fg:x="5164" fg:w="1"/><text x="63.6197%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="63.3697%" y="1093" width="0.0123%" height="15" fill="rgb(221,134,12)" fg:x="5164" fg:w="1"/><text x="63.6197%" y="1103.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="63.3697%" y="1077" width="0.0123%" height="15" fill="rgb(213,82,10)" fg:x="5164" fg:w="1"/><text x="63.6197%" y="1087.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="63.3697%" y="1061" width="0.0123%" height="15" fill="rgb(214,142,0)" fg:x="5164" fg:w="1"/><text x="63.6197%" y="1071.50"></text></g><g><title>&lt;bevy_render::draw::RenderCommand as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="63.3697%" y="1045" width="0.0123%" height="15" fill="rgb(205,145,9)" fg:x="5164" fg:w="1"/><text x="63.6197%" y="1055.50"></text></g><g><title>&lt;bevy_render::draw::RenderCommand as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="63.3820%" y="1173" width="0.0123%" height="15" fill="rgb(244,214,8)" fg:x="5165" fg:w="1"/><text x="63.6320%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="63.3943%" y="1173" width="0.0123%" height="15" fill="rgb(224,72,51)" fg:x="5166" fg:w="1"/><text x="63.6443%" y="1183.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="63.3943%" y="1157" width="0.0123%" height="15" fill="rgb(233,137,37)" fg:x="5166" fg:w="1"/><text x="63.6443%" y="1167.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get (3 samples, 0.04%)</title><rect x="63.4066%" y="1173" width="0.0368%" height="15" fill="rgb(208,71,28)" fg:x="5167" fg:w="3"/><text x="63.6566%" y="1183.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked (3 samples, 0.04%)</title><rect x="63.4066%" y="1157" width="0.0368%" height="15" fill="rgb(226,31,7)" fg:x="5167" fg:w="3"/><text x="63.6566%" y="1167.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (3 samples, 0.04%)</title><rect x="63.4066%" y="1141" width="0.0368%" height="15" fill="rgb(229,62,18)" fg:x="5167" fg:w="3"/><text x="63.6566%" y="1151.50"></text></g><g><title>bevy_ecs::entity::Entities::get (3 samples, 0.04%)</title><rect x="63.4066%" y="1125" width="0.0368%" height="15" fill="rgb(226,74,28)" fg:x="5167" fg:w="3"/><text x="63.6566%" y="1135.50"></text></g><g><title>bevy_ecs::archetype::Archetype::entity_table_row (1 samples, 0.01%)</title><rect x="63.4434%" y="1109" width="0.0123%" height="15" fill="rgb(214,170,18)" fg:x="5170" fg:w="1"/><text x="63.6934%" y="1119.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="63.4434%" y="1093" width="0.0123%" height="15" fill="rgb(227,229,35)" fg:x="5170" fg:w="1"/><text x="63.6934%" y="1103.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="63.4434%" y="1077" width="0.0123%" height="15" fill="rgb(225,181,39)" fg:x="5170" fg:w="1"/><text x="63.6934%" y="1087.50"></text></g><g><title>bevy_ecs::world::World::get (2 samples, 0.02%)</title><rect x="63.4434%" y="1173" width="0.0245%" height="15" fill="rgb(253,124,44)" fg:x="5170" fg:w="2"/><text x="63.6934%" y="1183.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityRef::get (2 samples, 0.02%)</title><rect x="63.4434%" y="1157" width="0.0245%" height="15" fill="rgb(220,75,18)" fg:x="5170" fg:w="2"/><text x="63.6934%" y="1167.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (2 samples, 0.02%)</title><rect x="63.4434%" y="1141" width="0.0245%" height="15" fill="rgb(239,175,43)" fg:x="5170" fg:w="2"/><text x="63.6934%" y="1151.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component (2 samples, 0.02%)</title><rect x="63.4434%" y="1125" width="0.0245%" height="15" fill="rgb(228,112,50)" fg:x="5170" fg:w="2"/><text x="63.6934%" y="1135.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (1 samples, 0.01%)</title><rect x="63.4556%" y="1109" width="0.0123%" height="15" fill="rgb(232,105,36)" fg:x="5171" fg:w="1"/><text x="63.7056%" y="1119.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="63.4556%" y="1093" width="0.0123%" height="15" fill="rgb(227,137,47)" fg:x="5171" fg:w="1"/><text x="63.7056%" y="1103.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="63.4556%" y="1077" width="0.0123%" height="15" fill="rgb(217,51,9)" fg:x="5171" fg:w="1"/><text x="63.7056%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="63.4556%" y="1061" width="0.0123%" height="15" fill="rgb(245,117,0)" fg:x="5171" fg:w="1"/><text x="63.7056%" y="1071.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="63.4556%" y="1045" width="0.0123%" height="15" fill="rgb(252,52,30)" fg:x="5171" fg:w="1"/><text x="63.7056%" y="1055.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="63.4556%" y="1029" width="0.0123%" height="15" fill="rgb(227,85,33)" fg:x="5171" fg:w="1"/><text x="63.7056%" y="1039.50"></text></g><g><title>bevy_ecs::world::World::get_resource (3 samples, 0.04%)</title><rect x="63.4679%" y="1173" width="0.0368%" height="15" fill="rgb(220,157,20)" fg:x="5172" fg:w="3"/><text x="63.7179%" y="1183.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (3 samples, 0.04%)</title><rect x="63.4679%" y="1157" width="0.0368%" height="15" fill="rgb(254,14,34)" fg:x="5172" fg:w="3"/><text x="63.7179%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.04%)</title><rect x="63.4679%" y="1141" width="0.0368%" height="15" fill="rgb(216,103,41)" fg:x="5172" fg:w="3"/><text x="63.7179%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.04%)</title><rect x="63.4679%" y="1125" width="0.0368%" height="15" fill="rgb(245,221,9)" fg:x="5172" fg:w="3"/><text x="63.7179%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.04%)</title><rect x="63.4679%" y="1109" width="0.0368%" height="15" fill="rgb(254,136,47)" fg:x="5172" fg:w="3"/><text x="63.7179%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.04%)</title><rect x="63.4679%" y="1093" width="0.0368%" height="15" fill="rgb(235,71,46)" fg:x="5172" fg:w="3"/><text x="63.7179%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="63.4679%" y="1077" width="0.0368%" height="15" fill="rgb(242,154,29)" fg:x="5172" fg:w="3"/><text x="63.7179%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="63.4925%" y="1061" width="0.0123%" height="15" fill="rgb(210,65,31)" fg:x="5174" fg:w="1"/><text x="63.7425%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="63.4925%" y="1045" width="0.0123%" height="15" fill="rgb(244,9,50)" fg:x="5174" fg:w="1"/><text x="63.7425%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="63.4925%" y="1029" width="0.0123%" height="15" fill="rgb(215,141,38)" fg:x="5174" fg:w="1"/><text x="63.7425%" y="1039.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="63.4925%" y="1013" width="0.0123%" height="15" fill="rgb(241,129,6)" fg:x="5174" fg:w="1"/><text x="63.7425%" y="1023.50"></text></g><g><title>bevy_render::camera::active_cameras::ActiveCameras::get_mut (1 samples, 0.01%)</title><rect x="63.5047%" y="1173" width="0.0123%" height="15" fill="rgb(253,169,4)" fg:x="5175" fg:w="1"/><text x="63.7547%" y="1183.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.01%)</title><rect x="63.5047%" y="1157" width="0.0123%" height="15" fill="rgb(237,82,36)" fg:x="5175" fg:w="1"/><text x="63.7547%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="63.5047%" y="1141" width="0.0123%" height="15" fill="rgb(209,171,11)" fg:x="5175" fg:w="1"/><text x="63.7547%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.01%)</title><rect x="63.5047%" y="1125" width="0.0123%" height="15" fill="rgb(242,19,22)" fg:x="5175" fg:w="1"/><text x="63.7547%" y="1135.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="63.5047%" y="1109" width="0.0123%" height="15" fill="rgb(251,122,24)" fg:x="5175" fg:w="1"/><text x="63.7547%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="63.5047%" y="1093" width="0.0123%" height="15" fill="rgb(226,166,42)" fg:x="5175" fg:w="1"/><text x="63.7547%" y="1103.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="63.5047%" y="1077" width="0.0123%" height="15" fill="rgb(244,101,48)" fg:x="5175" fg:w="1"/><text x="63.7547%" y="1087.50"></text></g><g><title>ahash::operations::read_small (1 samples, 0.01%)</title><rect x="63.5047%" y="1061" width="0.0123%" height="15" fill="rgb(227,125,1)" fg:x="5175" fg:w="1"/><text x="63.7547%" y="1071.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u32 (1 samples, 0.01%)</title><rect x="63.5047%" y="1045" width="0.0123%" height="15" fill="rgb(206,79,43)" fg:x="5175" fg:w="1"/><text x="63.7547%" y="1055.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare::{{closure}} (13 samples, 0.16%)</title><rect x="63.3697%" y="1189" width="0.1595%" height="15" fill="rgb(241,109,41)" fg:x="5164" fg:w="13"/><text x="63.6197%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="63.5170%" y="1173" width="0.0123%" height="15" fill="rgb(219,73,4)" fg:x="5176" fg:w="1"/><text x="63.7670%" y="1183.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="63.5170%" y="1157" width="0.0123%" height="15" fill="rgb(239,25,41)" fg:x="5176" fg:w="1"/><text x="63.7670%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="63.5170%" y="1141" width="0.0123%" height="15" fill="rgb(208,88,46)" fg:x="5176" fg:w="1"/><text x="63.7670%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="63.5170%" y="1125" width="0.0123%" height="15" fill="rgb(239,184,9)" fg:x="5176" fg:w="1"/><text x="63.7670%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="63.5170%" y="1109" width="0.0123%" height="15" fill="rgb(223,114,13)" fg:x="5176" fg:w="1"/><text x="63.7670%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="63.5170%" y="1093" width="0.0123%" height="15" fill="rgb(214,28,42)" fg:x="5176" fg:w="1"/><text x="63.7670%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="63.5170%" y="1077" width="0.0123%" height="15" fill="rgb(252,32,44)" fg:x="5176" fg:w="1"/><text x="63.7670%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="63.5170%" y="1061" width="0.0123%" height="15" fill="rgb(231,159,4)" fg:x="5176" fg:w="1"/><text x="63.7670%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.01%)</title><rect x="63.5170%" y="1045" width="0.0123%" height="15" fill="rgb(210,35,26)" fg:x="5176" fg:w="1"/><text x="63.7670%" y="1055.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.01%)</title><rect x="63.5170%" y="1029" width="0.0123%" height="15" fill="rgb(208,190,37)" fg:x="5176" fg:w="1"/><text x="63.7670%" y="1039.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="63.5170%" y="1013" width="0.0123%" height="15" fill="rgb(226,148,22)" fg:x="5176" fg:w="1"/><text x="63.7670%" y="1023.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (34 samples, 0.42%)</title><rect x="63.1243%" y="1237" width="0.4172%" height="15" fill="rgb(242,153,24)" fg:x="5144" fg:w="34"/><text x="63.3743%" y="1247.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare (14 samples, 0.17%)</title><rect x="63.3697%" y="1221" width="0.1718%" height="15" fill="rgb(213,133,7)" fg:x="5164" fg:w="14"/><text x="63.6197%" y="1231.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (14 samples, 0.17%)</title><rect x="63.3697%" y="1205" width="0.1718%" height="15" fill="rgb(248,206,18)" fg:x="5164" fg:w="14"/><text x="63.6197%" y="1215.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_mut (1 samples, 0.01%)</title><rect x="63.5293%" y="1189" width="0.0123%" height="15" fill="rgb(233,157,4)" fg:x="5177" fg:w="1"/><text x="63.7793%" y="1199.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="63.5293%" y="1173" width="0.0123%" height="15" fill="rgb(249,179,32)" fg:x="5177" fg:w="1"/><text x="63.7793%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="63.5293%" y="1157" width="0.0123%" height="15" fill="rgb(248,69,35)" fg:x="5177" fg:w="1"/><text x="63.7793%" y="1167.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="63.5293%" y="1141" width="0.0123%" height="15" fill="rgb(249,158,38)" fg:x="5177" fg:w="1"/><text x="63.7793%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="63.5293%" y="1125" width="0.0123%" height="15" fill="rgb(223,18,43)" fg:x="5177" fg:w="1"/><text x="63.7793%" y="1135.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="63.5415%" y="1221" width="0.0123%" height="15" fill="rgb(238,42,45)" fg:x="5178" fg:w="1"/><text x="63.7915%" y="1231.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.01%)</title><rect x="63.5415%" y="1205" width="0.0123%" height="15" fill="rgb(219,65,47)" fg:x="5178" fg:w="1"/><text x="63.7915%" y="1215.50"></text></g><g><title>alloc::slice::insert_head (1 samples, 0.01%)</title><rect x="63.5415%" y="1189" width="0.0123%" height="15" fill="rgb(248,153,12)" fg:x="5178" fg:w="1"/><text x="63.7915%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key::{{closure}} (1 samples, 0.01%)</title><rect x="63.5415%" y="1173" width="0.0123%" height="15" fill="rgb(240,118,4)" fg:x="5178" fg:w="1"/><text x="63.7915%" y="1183.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (1 samples, 0.01%)</title><rect x="63.5415%" y="1157" width="0.0123%" height="15" fill="rgb(250,96,34)" fg:x="5178" fg:w="1"/><text x="63.7915%" y="1167.50"></text></g><g><title>core::cmp::PartialOrd::lt (1 samples, 0.01%)</title><rect x="63.5415%" y="1141" width="0.0123%" height="15" fill="rgb(221,15,4)" fg:x="5178" fg:w="1"/><text x="63.7915%" y="1151.50"></text></g><g><title>&lt;bevy_render::render_graph::schedule::NodeIndices as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="63.5415%" y="1125" width="0.0123%" height="15" fill="rgb(217,149,33)" fg:x="5178" fg:w="1"/><text x="63.7915%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="63.5415%" y="1109" width="0.0123%" height="15" fill="rgb(213,58,29)" fg:x="5178" fg:w="1"/><text x="63.7915%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for usize&gt;::cmp (1 samples, 0.01%)</title><rect x="63.5415%" y="1093" width="0.0123%" height="15" fill="rgb(236,218,9)" fg:x="5178" fg:w="1"/><text x="63.7915%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="63.5661%" y="1205" width="0.0123%" height="15" fill="rgb(248,40,19)" fg:x="5180" fg:w="1"/><text x="63.8161%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="63.5784%" y="1141" width="0.0123%" height="15" fill="rgb(212,17,6)" fg:x="5181" fg:w="1"/><text x="63.8284%" y="1151.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="63.5906%" y="1125" width="0.0123%" height="15" fill="rgb(206,212,20)" fg:x="5182" fg:w="1"/><text x="63.8406%" y="1135.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="63.5906%" y="1109" width="0.0123%" height="15" fill="rgb(229,80,37)" fg:x="5182" fg:w="1"/><text x="63.8406%" y="1119.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="63.5906%" y="1093" width="0.0123%" height="15" fill="rgb(253,8,37)" fg:x="5182" fg:w="1"/><text x="63.8406%" y="1103.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="63.5906%" y="1077" width="0.0123%" height="15" fill="rgb(215,16,43)" fg:x="5182" fg:w="1"/><text x="63.8406%" y="1087.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="63.5906%" y="1061" width="0.0123%" height="15" fill="rgb(236,219,16)" fg:x="5182" fg:w="1"/><text x="63.8406%" y="1071.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="63.5906%" y="1045" width="0.0123%" height="15" fill="rgb(251,0,3)" fg:x="5182" fg:w="1"/><text x="63.8406%" y="1055.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="63.5906%" y="1029" width="0.0123%" height="15" fill="rgb(207,133,37)" fg:x="5182" fg:w="1"/><text x="63.8406%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="63.5906%" y="1013" width="0.0123%" height="15" fill="rgb(250,143,20)" fg:x="5182" fg:w="1"/><text x="63.8406%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.11%)</title><rect x="63.5784%" y="1205" width="0.1104%" height="15" fill="rgb(242,19,50)" fg:x="5181" fg:w="9"/><text x="63.8284%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.11%)</title><rect x="63.5784%" y="1189" width="0.1104%" height="15" fill="rgb(206,124,43)" fg:x="5181" fg:w="9"/><text x="63.8284%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.11%)</title><rect x="63.5784%" y="1173" width="0.1104%" height="15" fill="rgb(229,4,38)" fg:x="5181" fg:w="9"/><text x="63.8284%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.11%)</title><rect x="63.5784%" y="1157" width="0.1104%" height="15" fill="rgb(247,220,45)" fg:x="5181" fg:w="9"/><text x="63.8284%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (8 samples, 0.10%)</title><rect x="63.5906%" y="1141" width="0.0982%" height="15" fill="rgb(247,195,0)" fg:x="5182" fg:w="8"/><text x="63.8406%" y="1151.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.09%)</title><rect x="63.6029%" y="1125" width="0.0859%" height="15" fill="rgb(252,12,19)" fg:x="5183" fg:w="7"/><text x="63.8529%" y="1135.50"></text></g><g><title>_int_malloc (3 samples, 0.04%)</title><rect x="63.6520%" y="1109" width="0.0368%" height="15" fill="rgb(222,49,50)" fg:x="5187" fg:w="3"/><text x="63.9020%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.15%)</title><rect x="63.5538%" y="1221" width="0.1473%" height="15" fill="rgb(209,157,28)" fg:x="5179" fg:w="12"/><text x="63.8038%" y="1231.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="63.6888%" y="1205" width="0.0123%" height="15" fill="rgb(238,174,24)" fg:x="5190" fg:w="1"/><text x="63.9388%" y="1215.50"></text></g><g><title>bevy_render::render_graph::schedule::Stages::borrow (14 samples, 0.17%)</title><rect x="63.5415%" y="1237" width="0.1718%" height="15" fill="rgb(224,17,28)" fg:x="5178" fg:w="14"/><text x="63.7915%" y="1247.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="63.7011%" y="1221" width="0.0123%" height="15" fill="rgb(249,7,29)" fg:x="5191" fg:w="1"/><text x="63.9511%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="63.7011%" y="1205" width="0.0123%" height="15" fill="rgb(243,178,4)" fg:x="5191" fg:w="1"/><text x="63.9511%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="63.7011%" y="1189" width="0.0123%" height="15" fill="rgb(246,138,35)" fg:x="5191" fg:w="1"/><text x="63.9511%" y="1199.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="63.7011%" y="1173" width="0.0123%" height="15" fill="rgb(251,85,18)" fg:x="5191" fg:w="1"/><text x="63.9511%" y="1183.50"></text></g><g><title>&lt;bevy_render::render_graph::node::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="63.7011%" y="1157" width="0.0123%" height="15" fill="rgb(254,55,9)" fg:x="5191" fg:w="1"/><text x="63.9511%" y="1167.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="63.7011%" y="1141" width="0.0123%" height="15" fill="rgb(248,4,50)" fg:x="5191" fg:w="1"/><text x="63.9511%" y="1151.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="63.7011%" y="1125" width="0.0123%" height="15" fill="rgb(215,208,14)" fg:x="5191" fg:w="1"/><text x="63.9511%" y="1135.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="63.7011%" y="1109" width="0.0123%" height="15" fill="rgb(218,37,18)" fg:x="5191" fg:w="1"/><text x="63.9511%" y="1119.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="63.7011%" y="1093" width="0.0123%" height="15" fill="rgb(206,104,13)" fg:x="5191" fg:w="1"/><text x="63.9511%" y="1103.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="63.7011%" y="1077" width="0.0123%" height="15" fill="rgb(248,94,22)" fg:x="5191" fg:w="1"/><text x="63.9511%" y="1087.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u64 (1 samples, 0.01%)</title><rect x="63.7011%" y="1061" width="0.0123%" height="15" fill="rgb(235,42,46)" fg:x="5191" fg:w="1"/><text x="63.9511%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="63.7624%" y="1221" width="0.0245%" height="15" fill="rgb(220,228,48)" fg:x="5196" fg:w="2"/><text x="64.0124%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="63.7624%" y="1205" width="0.0245%" height="15" fill="rgb(216,58,12)" fg:x="5196" fg:w="2"/><text x="64.0124%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="63.7624%" y="1189" width="0.0245%" height="15" fill="rgb(223,97,52)" fg:x="5196" fg:w="2"/><text x="64.0124%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="63.7870%" y="1221" width="0.0123%" height="15" fill="rgb(208,159,17)" fg:x="5198" fg:w="1"/><text x="64.0370%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="63.7870%" y="1205" width="0.0123%" height="15" fill="rgb(215,172,9)" fg:x="5198" fg:w="1"/><text x="64.0370%" y="1215.50"></text></g><g><title>bevy_ecs::world::World::get_resource (1 samples, 0.01%)</title><rect x="63.8115%" y="1205" width="0.0123%" height="15" fill="rgb(252,175,30)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1215.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="63.8115%" y="1189" width="0.0123%" height="15" fill="rgb(209,159,10)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="63.8115%" y="1173" width="0.0123%" height="15" fill="rgb(229,73,51)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="63.8115%" y="1157" width="0.0123%" height="15" fill="rgb(208,212,43)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="63.8115%" y="1141" width="0.0123%" height="15" fill="rgb(254,123,53)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="63.8115%" y="1125" width="0.0123%" height="15" fill="rgb(254,128,49)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="63.8115%" y="1109" width="0.0123%" height="15" fill="rgb(246,16,16)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="63.8115%" y="1093" width="0.0123%" height="15" fill="rgb(209,200,1)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1103.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="63.8115%" y="1077" width="0.0123%" height="15" fill="rgb(235,9,3)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1087.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="63.8115%" y="1061" width="0.0123%" height="15" fill="rgb(233,121,54)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1071.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="63.8115%" y="1045" width="0.0123%" height="15" fill="rgb(236,80,25)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="63.8115%" y="1029" width="0.0123%" height="15" fill="rgb(220,44,24)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1039.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="63.8115%" y="1013" width="0.0123%" height="15" fill="rgb(236,225,16)" fg:x="5200" fg:w="1"/><text x="64.0615%" y="1023.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::process_attachments (1 samples, 0.01%)</title><rect x="63.8238%" y="1205" width="0.0123%" height="15" fill="rgb(237,140,0)" fg:x="5201" fg:w="1"/><text x="64.0738%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="63.8238%" y="1189" width="0.0123%" height="15" fill="rgb(243,225,53)" fg:x="5201" fg:w="1"/><text x="64.0738%" y="1199.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (4 samples, 0.05%)</title><rect x="63.7992%" y="1221" width="0.0491%" height="15" fill="rgb(240,140,30)" fg:x="5199" fg:w="4"/><text x="64.0492%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;epaint::ClippedMesh&gt;&gt; (1 samples, 0.01%)</title><rect x="63.8361%" y="1205" width="0.0123%" height="15" fill="rgb(217,51,16)" fg:x="5202" fg:w="1"/><text x="64.0861%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;epaint::ClippedMesh&gt;&gt; (1 samples, 0.01%)</title><rect x="63.8361%" y="1189" width="0.0123%" height="15" fill="rgb(245,75,50)" fg:x="5202" fg:w="1"/><text x="64.0861%" y="1199.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="63.8361%" y="1173" width="0.0123%" height="15" fill="rgb(208,174,22)" fg:x="5202" fg:w="1"/><text x="64.0861%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="63.8361%" y="1157" width="0.0123%" height="15" fill="rgb(219,98,50)" fg:x="5202" fg:w="1"/><text x="64.0861%" y="1167.50"></text></g><g><title>&lt;bevy_egui::transform_node::EguiTransformNode as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="63.8483%" y="1221" width="0.0123%" height="15" fill="rgb(243,138,3)" fg:x="5203" fg:w="1"/><text x="64.0983%" y="1231.50"></text></g><g><title>&lt;bevy_render::render_graph::node_slot::ResourceSlots as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="63.8606%" y="1221" width="0.0245%" height="15" fill="rgb(243,132,26)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="63.8606%" y="1205" width="0.0245%" height="15" fill="rgb(250,201,8)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1215.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (2 samples, 0.02%)</title><rect x="63.8606%" y="1189" width="0.0245%" height="15" fill="rgb(213,91,26)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1199.50"></text></g><g><title>alloc::slice::hack::to_vec (2 samples, 0.02%)</title><rect x="63.8606%" y="1173" width="0.0245%" height="15" fill="rgb(229,117,1)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1183.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (2 samples, 0.02%)</title><rect x="63.8606%" y="1157" width="0.0245%" height="15" fill="rgb(229,24,6)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="63.8606%" y="1141" width="0.0245%" height="15" fill="rgb(206,69,11)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="63.8606%" y="1125" width="0.0245%" height="15" fill="rgb(234,111,34)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="63.8606%" y="1109" width="0.0245%" height="15" fill="rgb(213,187,51)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="63.8606%" y="1093" width="0.0245%" height="15" fill="rgb(207,45,11)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="63.8606%" y="1077" width="0.0245%" height="15" fill="rgb(225,151,47)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="63.8606%" y="1061" width="0.0245%" height="15" fill="rgb(211,226,5)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1071.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="63.8606%" y="1045" width="0.0245%" height="15" fill="rgb(214,83,52)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1055.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="63.8606%" y="1029" width="0.0245%" height="15" fill="rgb(229,49,53)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1039.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="63.8606%" y="1013" width="0.0245%" height="15" fill="rgb(246,8,28)" fg:x="5204" fg:w="2"/><text x="64.1106%" y="1023.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="63.8729%" y="997" width="0.0123%" height="15" fill="rgb(207,28,41)" fg:x="5205" fg:w="1"/><text x="64.1229%" y="1007.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::camera_node::CameraNode as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="63.8851%" y="1221" width="0.0123%" height="15" fill="rgb(254,22,25)" fg:x="5206" fg:w="1"/><text x="64.1351%" y="1231.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="63.9097%" y="1189" width="0.0123%" height="15" fill="rgb(209,120,42)" fg:x="5208" fg:w="1"/><text x="64.1597%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="63.9097%" y="1173" width="0.0123%" height="15" fill="rgb(216,194,18)" fg:x="5208" fg:w="1"/><text x="64.1597%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="63.9097%" y="1157" width="0.0123%" height="15" fill="rgb(213,70,17)" fg:x="5208" fg:w="1"/><text x="64.1597%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="63.9097%" y="1141" width="0.0123%" height="15" fill="rgb(228,66,19)" fg:x="5208" fg:w="1"/><text x="64.1597%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="63.9097%" y="1125" width="0.0123%" height="15" fill="rgb(236,221,54)" fg:x="5208" fg:w="1"/><text x="64.1597%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="63.9097%" y="1109" width="0.0123%" height="15" fill="rgb(207,175,15)" fg:x="5208" fg:w="1"/><text x="64.1597%" y="1119.50"></text></g><g><title>bevy_ecs::world::World::get_resource (2 samples, 0.02%)</title><rect x="63.9097%" y="1205" width="0.0245%" height="15" fill="rgb(234,76,8)" fg:x="5208" fg:w="2"/><text x="64.1597%" y="1215.50"></text></g><g><title>bevy_ecs::world::World::get_resource_with_id (1 samples, 0.01%)</title><rect x="63.9220%" y="1189" width="0.0123%" height="15" fill="rgb(243,106,0)" fg:x="5209" fg:w="1"/><text x="64.1720%" y="1199.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="63.9220%" y="1173" width="0.0123%" height="15" fill="rgb(208,48,19)" fg:x="5209" fg:w="1"/><text x="64.1720%" y="1183.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="63.9220%" y="1157" width="0.0123%" height="15" fill="rgb(251,50,29)" fg:x="5209" fg:w="1"/><text x="64.1720%" y="1167.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="63.9220%" y="1141" width="0.0123%" height="15" fill="rgb(222,31,49)" fg:x="5209" fg:w="1"/><text x="64.1720%" y="1151.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="63.9220%" y="1125" width="0.0123%" height="15" fill="rgb(232,33,18)" fg:x="5209" fg:w="1"/><text x="64.1720%" y="1135.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="63.9220%" y="1109" width="0.0123%" height="15" fill="rgb(209,1,44)" fg:x="5209" fg:w="1"/><text x="64.1720%" y="1119.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (4 samples, 0.05%)</title><rect x="63.8974%" y="1221" width="0.0491%" height="15" fill="rgb(211,7,1)" fg:x="5207" fg:w="4"/><text x="64.1474%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="63.9342%" y="1205" width="0.0123%" height="15" fill="rgb(224,111,27)" fg:x="5210" fg:w="1"/><text x="64.1842%" y="1215.50"></text></g><g><title>bevy_app::event::ManualEventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="63.9588%" y="1205" width="0.0123%" height="15" fill="rgb(252,195,39)" fg:x="5212" fg:w="1"/><text x="64.2088%" y="1215.50"></text></g><g><title>bevy_app::event::internal_event_reader (1 samples, 0.01%)</title><rect x="63.9588%" y="1189" width="0.0123%" height="15" fill="rgb(237,198,5)" fg:x="5212" fg:w="1"/><text x="64.2088%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="63.9710%" y="1173" width="0.0123%" height="15" fill="rgb(232,148,1)" fg:x="5213" fg:w="1"/><text x="64.2210%" y="1183.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_texture_node::WindowTextureNode as bevy_render::render_graph::node::Node&gt;::update (4 samples, 0.05%)</title><rect x="63.9465%" y="1221" width="0.0491%" height="15" fill="rgb(249,41,3)" fg:x="5211" fg:w="4"/><text x="64.1965%" y="1231.50"></text></g><g><title>bevy_ecs::world::World::get_resource (2 samples, 0.02%)</title><rect x="63.9710%" y="1205" width="0.0245%" height="15" fill="rgb(215,14,33)" fg:x="5213" fg:w="2"/><text x="64.2210%" y="1215.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (2 samples, 0.02%)</title><rect x="63.9710%" y="1189" width="0.0245%" height="15" fill="rgb(209,146,24)" fg:x="5213" fg:w="2"/><text x="64.2210%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="63.9833%" y="1173" width="0.0123%" height="15" fill="rgb(219,51,47)" fg:x="5214" fg:w="1"/><text x="64.2333%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="63.9833%" y="1157" width="0.0123%" height="15" fill="rgb(234,217,40)" fg:x="5214" fg:w="1"/><text x="64.2333%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="63.9833%" y="1141" width="0.0123%" height="15" fill="rgb(228,34,26)" fg:x="5214" fg:w="1"/><text x="64.2333%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="63.9833%" y="1125" width="0.0123%" height="15" fill="rgb(224,50,29)" fg:x="5214" fg:w="1"/><text x="64.2333%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="63.9833%" y="1109" width="0.0123%" height="15" fill="rgb(205,79,51)" fg:x="5214" fg:w="1"/><text x="64.2333%" y="1119.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="63.9956%" y="1221" width="0.0245%" height="15" fill="rgb(218,136,28)" fg:x="5215" fg:w="2"/><text x="64.2456%" y="1231.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_resources::WgpuResources as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="63.9956%" y="1205" width="0.0245%" height="15" fill="rgb(220,150,10)" fg:x="5215" fg:w="2"/><text x="64.2456%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="63.9956%" y="1189" width="0.0245%" height="15" fill="rgb(242,158,47)" fg:x="5215" fg:w="2"/><text x="64.2456%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="63.9956%" y="1173" width="0.0245%" height="15" fill="rgb(209,68,0)" fg:x="5215" fg:w="2"/><text x="64.2456%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="63.9956%" y="1157" width="0.0245%" height="15" fill="rgb(208,13,41)" fg:x="5215" fg:w="2"/><text x="64.2456%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="64.0201%" y="1221" width="0.0123%" height="15" fill="rgb(226,201,7)" fg:x="5217" fg:w="1"/><text x="64.2701%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="64.0201%" y="1205" width="0.0123%" height="15" fill="rgb(236,103,26)" fg:x="5217" fg:w="1"/><text x="64.2701%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="64.0201%" y="1189" width="0.0123%" height="15" fill="rgb(243,162,8)" fg:x="5217" fg:w="1"/><text x="64.2701%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="64.0201%" y="1173" width="0.0123%" height="15" fill="rgb(237,225,11)" fg:x="5217" fg:w="1"/><text x="64.2701%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="64.0201%" y="1157" width="0.0123%" height="15" fill="rgb(247,186,32)" fg:x="5217" fg:w="1"/><text x="64.2701%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="64.0201%" y="1141" width="0.0123%" height="15" fill="rgb(215,26,28)" fg:x="5217" fg:w="1"/><text x="64.2701%" y="1151.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="64.0201%" y="1125" width="0.0123%" height="15" fill="rgb(208,121,6)" fg:x="5217" fg:w="1"/><text x="64.2701%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.05%)</title><rect x="64.1060%" y="1205" width="0.0491%" height="15" fill="rgb(225,91,3)" fg:x="5224" fg:w="4"/><text x="64.3560%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.05%)</title><rect x="64.1060%" y="1189" width="0.0491%" height="15" fill="rgb(246,119,36)" fg:x="5224" fg:w="4"/><text x="64.3560%" y="1199.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (4 samples, 0.05%)</title><rect x="64.1060%" y="1173" width="0.0491%" height="15" fill="rgb(254,173,2)" fg:x="5224" fg:w="4"/><text x="64.3560%" y="1183.50"></text></g><g><title>core::ptr::read (4 samples, 0.05%)</title><rect x="64.1060%" y="1157" width="0.0491%" height="15" fill="rgb(209,87,54)" fg:x="5224" fg:w="4"/><text x="64.3560%" y="1167.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::get_or_create (2 samples, 0.02%)</title><rect x="64.1551%" y="1189" width="0.0245%" height="15" fill="rgb(223,216,20)" fg:x="5228" fg:w="2"/><text x="64.4051%" y="1199.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (2 samples, 0.02%)</title><rect x="64.1551%" y="1173" width="0.0245%" height="15" fill="rgb(220,31,8)" fg:x="5228" fg:w="2"/><text x="64.4051%" y="1183.50"></text></g><g><title>wgpu::Device::create_command_encoder (2 samples, 0.02%)</title><rect x="64.1551%" y="1157" width="0.0245%" height="15" fill="rgb(220,185,15)" fg:x="5228" fg:w="2"/><text x="64.4051%" y="1167.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (2 samples, 0.02%)</title><rect x="64.1551%" y="1141" width="0.0245%" height="15" fill="rgb(247,190,50)" fg:x="5228" fg:w="2"/><text x="64.4051%" y="1151.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="64.1797%" y="1173" width="0.0123%" height="15" fill="rgb(239,173,47)" fg:x="5230" fg:w="1"/><text x="64.4297%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="64.1919%" y="1173" width="0.0123%" height="15" fill="rgb(218,190,42)" fg:x="5231" fg:w="1"/><text x="64.4419%" y="1183.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.1919%" y="1157" width="0.0123%" height="15" fill="rgb(251,207,16)" fg:x="5231" fg:w="1"/><text x="64.4419%" y="1167.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.01%)</title><rect x="64.1919%" y="1141" width="0.0123%" height="15" fill="rgb(222,199,47)" fg:x="5231" fg:w="1"/><text x="64.4419%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="64.1919%" y="1125" width="0.0123%" height="15" fill="rgb(245,190,7)" fg:x="5231" fg:w="1"/><text x="64.4419%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="64.1919%" y="1109" width="0.0123%" height="15" fill="rgb(239,85,38)" fg:x="5231" fg:w="1"/><text x="64.4419%" y="1119.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="64.2042%" y="1173" width="0.0123%" height="15" fill="rgb(229,69,51)" fg:x="5232" fg:w="1"/><text x="64.4542%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="64.2042%" y="1157" width="0.0123%" height="15" fill="rgb(231,104,51)" fg:x="5232" fg:w="1"/><text x="64.4542%" y="1167.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="64.2042%" y="1141" width="0.0123%" height="15" fill="rgb(235,49,4)" fg:x="5232" fg:w="1"/><text x="64.4542%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="64.2042%" y="1125" width="0.0123%" height="15" fill="rgb(246,166,20)" fg:x="5232" fg:w="1"/><text x="64.4542%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="64.2042%" y="1109" width="0.0123%" height="15" fill="rgb(230,119,37)" fg:x="5232" fg:w="1"/><text x="64.4542%" y="1119.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="64.2165%" y="1109" width="0.0123%" height="15" fill="rgb(234,77,34)" fg:x="5233" fg:w="1"/><text x="64.4665%" y="1119.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="64.2165%" y="1093" width="0.0123%" height="15" fill="rgb(211,222,33)" fg:x="5233" fg:w="1"/><text x="64.4665%" y="1103.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="64.2287%" y="1109" width="0.0123%" height="15" fill="rgb(226,45,42)" fg:x="5234" fg:w="1"/><text x="64.4787%" y="1119.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="64.2287%" y="1093" width="0.0123%" height="15" fill="rgb(215,174,28)" fg:x="5234" fg:w="1"/><text x="64.4787%" y="1103.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="64.2410%" y="997" width="0.0123%" height="15" fill="rgb(254,173,49)" fg:x="5235" fg:w="1"/><text x="64.4910%" y="1007.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="64.2410%" y="981" width="0.0123%" height="15" fill="rgb(229,191,6)" fg:x="5235" fg:w="1"/><text x="64.4910%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (2 samples, 0.02%)</title><rect x="64.2410%" y="1045" width="0.0245%" height="15" fill="rgb(212,145,22)" fg:x="5235" fg:w="2"/><text x="64.4910%" y="1055.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="64.2410%" y="1029" width="0.0245%" height="15" fill="rgb(226,6,51)" fg:x="5235" fg:w="2"/><text x="64.4910%" y="1039.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (2 samples, 0.02%)</title><rect x="64.2410%" y="1013" width="0.0245%" height="15" fill="rgb(227,128,8)" fg:x="5235" fg:w="2"/><text x="64.4910%" y="1023.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="64.2533%" y="997" width="0.0123%" height="15" fill="rgb(205,24,10)" fg:x="5236" fg:w="1"/><text x="64.5033%" y="1007.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.06%)</title><rect x="64.2165%" y="1125" width="0.0614%" height="15" fill="rgb(217,147,27)" fg:x="5233" fg:w="5"/><text x="64.4665%" y="1135.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="64.2410%" y="1109" width="0.0368%" height="15" fill="rgb(250,82,42)" fg:x="5235" fg:w="3"/><text x="64.4910%" y="1119.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="64.2410%" y="1093" width="0.0368%" height="15" fill="rgb(248,93,17)" fg:x="5235" fg:w="3"/><text x="64.4910%" y="1103.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (3 samples, 0.04%)</title><rect x="64.2410%" y="1077" width="0.0368%" height="15" fill="rgb(254,212,40)" fg:x="5235" fg:w="3"/><text x="64.4910%" y="1087.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.04%)</title><rect x="64.2410%" y="1061" width="0.0368%" height="15" fill="rgb(229,209,2)" fg:x="5235" fg:w="3"/><text x="64.4910%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="64.2656%" y="1045" width="0.0123%" height="15" fill="rgb(211,50,43)" fg:x="5237" fg:w="1"/><text x="64.5156%" y="1055.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="64.2656%" y="1029" width="0.0123%" height="15" fill="rgb(245,196,29)" fg:x="5237" fg:w="1"/><text x="64.5156%" y="1039.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="64.2656%" y="1013" width="0.0123%" height="15" fill="rgb(216,132,13)" fg:x="5237" fg:w="1"/><text x="64.5156%" y="1023.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="64.2656%" y="997" width="0.0123%" height="15" fill="rgb(251,108,21)" fg:x="5237" fg:w="1"/><text x="64.5156%" y="1007.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="64.2656%" y="981" width="0.0123%" height="15" fill="rgb(229,174,54)" fg:x="5237" fg:w="1"/><text x="64.5156%" y="991.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="64.2656%" y="965" width="0.0123%" height="15" fill="rgb(211,175,47)" fg:x="5237" fg:w="1"/><text x="64.5156%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="64.2778%" y="1093" width="0.0245%" height="15" fill="rgb(234,5,37)" fg:x="5238" fg:w="2"/><text x="64.5278%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="64.2778%" y="1077" width="0.0245%" height="15" fill="rgb(244,150,43)" fg:x="5238" fg:w="2"/><text x="64.5278%" y="1087.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="64.2778%" y="1061" width="0.0245%" height="15" fill="rgb(242,172,38)" fg:x="5238" fg:w="2"/><text x="64.5278%" y="1071.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="64.2901%" y="1045" width="0.0123%" height="15" fill="rgb(205,27,8)" fg:x="5239" fg:w="1"/><text x="64.5401%" y="1055.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="64.3024%" y="1045" width="0.0123%" height="15" fill="rgb(217,57,3)" fg:x="5240" fg:w="1"/><text x="64.5524%" y="1055.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="64.3024%" y="1093" width="0.0245%" height="15" fill="rgb(242,21,38)" fg:x="5240" fg:w="2"/><text x="64.5524%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (2 samples, 0.02%)</title><rect x="64.3024%" y="1077" width="0.0245%" height="15" fill="rgb(209,64,43)" fg:x="5240" fg:w="2"/><text x="64.5524%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="64.3024%" y="1061" width="0.0245%" height="15" fill="rgb(222,2,46)" fg:x="5240" fg:w="2"/><text x="64.5524%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="64.3146%" y="1045" width="0.0123%" height="15" fill="rgb(218,19,44)" fg:x="5241" fg:w="1"/><text x="64.5646%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.12%)</title><rect x="64.2165%" y="1173" width="0.1227%" height="15" fill="rgb(240,203,42)" fg:x="5233" fg:w="10"/><text x="64.4665%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.12%)</title><rect x="64.2165%" y="1157" width="0.1227%" height="15" fill="rgb(229,23,45)" fg:x="5233" fg:w="10"/><text x="64.4665%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.12%)</title><rect x="64.2165%" y="1141" width="0.1227%" height="15" fill="rgb(205,228,51)" fg:x="5233" fg:w="10"/><text x="64.4665%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.06%)</title><rect x="64.2778%" y="1125" width="0.0614%" height="15" fill="rgb(239,36,20)" fg:x="5238" fg:w="5"/><text x="64.5278%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.06%)</title><rect x="64.2778%" y="1109" width="0.0614%" height="15" fill="rgb(248,172,27)" fg:x="5238" fg:w="5"/><text x="64.5278%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="64.3269%" y="1093" width="0.0123%" height="15" fill="rgb(244,55,32)" fg:x="5242" fg:w="1"/><text x="64.5769%" y="1103.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="64.3269%" y="1077" width="0.0123%" height="15" fill="rgb(215,97,16)" fg:x="5242" fg:w="1"/><text x="64.5769%" y="1087.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="64.3269%" y="1061" width="0.0123%" height="15" fill="rgb(224,80,29)" fg:x="5242" fg:w="1"/><text x="64.5769%" y="1071.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="64.3269%" y="1045" width="0.0123%" height="15" fill="rgb(216,93,47)" fg:x="5242" fg:w="1"/><text x="64.5769%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="64.3269%" y="1029" width="0.0123%" height="15" fill="rgb(238,159,10)" fg:x="5242" fg:w="1"/><text x="64.5769%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="64.3269%" y="1013" width="0.0123%" height="15" fill="rgb(223,98,29)" fg:x="5242" fg:w="1"/><text x="64.5769%" y="1023.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="64.3269%" y="997" width="0.0123%" height="15" fill="rgb(210,176,23)" fg:x="5242" fg:w="1"/><text x="64.5769%" y="1007.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (16 samples, 0.20%)</title><rect x="64.1551%" y="1205" width="0.1963%" height="15" fill="rgb(242,162,27)" fg:x="5228" fg:w="16"/><text x="64.4051%" y="1215.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (14 samples, 0.17%)</title><rect x="64.1797%" y="1189" width="0.1718%" height="15" fill="rgb(245,109,32)" fg:x="5230" fg:w="14"/><text x="64.4297%" y="1199.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="64.3392%" y="1173" width="0.0123%" height="15" fill="rgb(248,87,8)" fg:x="5243" fg:w="1"/><text x="64.5892%" y="1183.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="64.3392%" y="1157" width="0.0123%" height="15" fill="rgb(250,160,50)" fg:x="5243" fg:w="1"/><text x="64.5892%" y="1167.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (29 samples, 0.36%)</title><rect x="64.0324%" y="1221" width="0.3559%" height="15" fill="rgb(246,165,25)" fg:x="5218" fg:w="29"/><text x="64.2824%" y="1231.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (3 samples, 0.04%)</title><rect x="64.3515%" y="1205" width="0.0368%" height="15" fill="rgb(249,219,3)" fg:x="5244" fg:w="3"/><text x="64.6015%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (3 samples, 0.04%)</title><rect x="64.3515%" y="1189" width="0.0368%" height="15" fill="rgb(226,66,5)" fg:x="5244" fg:w="3"/><text x="64.6015%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (3 samples, 0.04%)</title><rect x="64.3515%" y="1173" width="0.0368%" height="15" fill="rgb(250,220,43)" fg:x="5244" fg:w="3"/><text x="64.6015%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.04%)</title><rect x="64.3515%" y="1157" width="0.0368%" height="15" fill="rgb(225,111,31)" fg:x="5244" fg:w="3"/><text x="64.6015%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="64.3883%" y="1205" width="0.0245%" height="15" fill="rgb(248,106,18)" fg:x="5247" fg:w="2"/><text x="64.6383%" y="1215.50"></text></g><g><title>bevy_render::render_graph::node::Edges::get_input_slot_edge (4 samples, 0.05%)</title><rect x="64.3883%" y="1221" width="0.0491%" height="15" fill="rgb(220,226,45)" fg:x="5247" fg:w="4"/><text x="64.6383%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.02%)</title><rect x="64.4128%" y="1205" width="0.0245%" height="15" fill="rgb(208,58,53)" fg:x="5249" fg:w="2"/><text x="64.6628%" y="1215.50"></text></g><g><title>bevy_render::render_graph::node::Edges::get_input_slot_edge::{{closure}} (2 samples, 0.02%)</title><rect x="64.4128%" y="1189" width="0.0245%" height="15" fill="rgb(209,133,1)" fg:x="5249" fg:w="2"/><text x="64.6628%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="64.4496%" y="1125" width="0.0123%" height="15" fill="rgb(228,216,27)" fg:x="5252" fg:w="1"/><text x="64.6996%" y="1135.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.01%)</title><rect x="64.4496%" y="1109" width="0.0123%" height="15" fill="rgb(238,155,2)" fg:x="5252" fg:w="1"/><text x="64.6996%" y="1119.50"></text></g><g><title>smallvec::SmallVecData&lt;A&gt;::inline (1 samples, 0.01%)</title><rect x="64.4496%" y="1093" width="0.0123%" height="15" fill="rgb(244,99,37)" fg:x="5252" fg:w="1"/><text x="64.6996%" y="1103.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_finish (3 samples, 0.04%)</title><rect x="64.4374%" y="1157" width="0.0368%" height="15" fill="rgb(254,32,3)" fg:x="5251" fg:w="3"/><text x="64.6874%" y="1167.50"></text></g><g><title>wgpu_core::command::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_finish (3 samples, 0.04%)</title><rect x="64.4374%" y="1141" width="0.0368%" height="15" fill="rgb(234,46,50)" fg:x="5251" fg:w="3"/><text x="64.6874%" y="1151.50"></text></g><g><title>tracing::__macro_support::MacroCallsite::interest (1 samples, 0.01%)</title><rect x="64.4619%" y="1125" width="0.0123%" height="15" fill="rgb(232,118,51)" fg:x="5253" fg:w="1"/><text x="64.7119%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="64.4619%" y="1109" width="0.0123%" height="15" fill="rgb(207,24,32)" fg:x="5253" fg:w="1"/><text x="64.7119%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="64.4619%" y="1093" width="0.0123%" height="15" fill="rgb(208,107,43)" fg:x="5253" fg:w="1"/><text x="64.7119%" y="1103.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext::finish (4 samples, 0.05%)</title><rect x="64.4374%" y="1221" width="0.0491%" height="15" fill="rgb(231,28,9)" fg:x="5251" fg:w="4"/><text x="64.6874%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (4 samples, 0.05%)</title><rect x="64.4374%" y="1205" width="0.0491%" height="15" fill="rgb(241,204,15)" fg:x="5251" fg:w="4"/><text x="64.6874%" y="1215.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext::finish::{{closure}} (4 samples, 0.05%)</title><rect x="64.4374%" y="1189" width="0.0491%" height="15" fill="rgb(214,54,15)" fg:x="5251" fg:w="4"/><text x="64.6874%" y="1199.50"></text></g><g><title>wgpu::CommandEncoder::finish (4 samples, 0.05%)</title><rect x="64.4374%" y="1173" width="0.0491%" height="15" fill="rgb(230,12,28)" fg:x="5251" fg:w="4"/><text x="64.6874%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::CommandEncoder&gt; (1 samples, 0.01%)</title><rect x="64.4742%" y="1157" width="0.0123%" height="15" fill="rgb(221,171,5)" fg:x="5254" fg:w="1"/><text x="64.7242%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::direct::CommandEncoder&gt; (1 samples, 0.01%)</title><rect x="64.4742%" y="1141" width="0.0123%" height="15" fill="rgb(207,72,25)" fg:x="5254" fg:w="1"/><text x="64.7242%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu::backend::direct::ErrorSinkRaw&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="64.4742%" y="1125" width="0.0123%" height="15" fill="rgb(249,79,37)" fg:x="5254" fg:w="1"/><text x="64.7242%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.4742%" y="1109" width="0.0123%" height="15" fill="rgb(209,98,49)" fg:x="5254" fg:w="1"/><text x="64.7242%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="64.4742%" y="1093" width="0.0123%" height="15" fill="rgb(221,62,13)" fg:x="5254" fg:w="1"/><text x="64.7242%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="64.4742%" y="1077" width="0.0123%" height="15" fill="rgb(223,39,6)" fg:x="5254" fg:w="1"/><text x="64.7242%" y="1087.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.4864%" y="1189" width="0.0123%" height="15" fill="rgb(246,163,20)" fg:x="5255" fg:w="1"/><text x="64.7364%" y="1199.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.4864%" y="1173" width="0.0123%" height="15" fill="rgb(211,111,29)" fg:x="5255" fg:w="1"/><text x="64.7364%" y="1183.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="64.4987%" y="1189" width="0.0123%" height="15" fill="rgb(243,118,5)" fg:x="5256" fg:w="1"/><text x="64.7487%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="64.4987%" y="1173" width="0.0123%" height="15" fill="rgb(240,144,52)" fg:x="5256" fg:w="1"/><text x="64.7487%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="64.4987%" y="1157" width="0.0123%" height="15" fill="rgb(244,158,36)" fg:x="5256" fg:w="1"/><text x="64.7487%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="64.4987%" y="1141" width="0.0123%" height="15" fill="rgb(241,109,37)" fg:x="5256" fg:w="1"/><text x="64.7487%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="64.4987%" y="1125" width="0.0123%" height="15" fill="rgb(213,95,32)" fg:x="5256" fg:w="1"/><text x="64.7487%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots)&gt;&gt; (1 samples, 0.01%)</title><rect x="64.4987%" y="1109" width="0.0123%" height="15" fill="rgb(252,193,9)" fg:x="5256" fg:w="1"/><text x="64.7487%" y="1119.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.4987%" y="1093" width="0.0123%" height="15" fill="rgb(225,213,21)" fg:x="5256" fg:w="1"/><text x="64.7487%" y="1103.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.4987%" y="1077" width="0.0123%" height="15" fill="rgb(220,172,46)" fg:x="5256" fg:w="1"/><text x="64.7487%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="64.4864%" y="1221" width="0.0368%" height="15" fill="rgb(235,75,41)" fg:x="5255" fg:w="3"/><text x="64.7364%" y="1231.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="64.4864%" y="1205" width="0.0368%" height="15" fill="rgb(213,86,9)" fg:x="5255" fg:w="3"/><text x="64.7364%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="64.5110%" y="1189" width="0.0123%" height="15" fill="rgb(238,127,51)" fg:x="5257" fg:w="1"/><text x="64.7610%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="64.5110%" y="1173" width="0.0123%" height="15" fill="rgb(215,2,54)" fg:x="5257" fg:w="1"/><text x="64.7610%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.5233%" y="1205" width="0.0123%" height="15" fill="rgb(245,80,6)" fg:x="5258" fg:w="1"/><text x="64.7733%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wgpu::CommandBuffer&gt;&gt; (3 samples, 0.04%)</title><rect x="64.5233%" y="1221" width="0.0368%" height="15" fill="rgb(233,106,42)" fg:x="5258" fg:w="3"/><text x="64.7733%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wgpu::CommandBuffer&gt;&gt; (2 samples, 0.02%)</title><rect x="64.5355%" y="1205" width="0.0245%" height="15" fill="rgb(244,86,38)" fg:x="5259" fg:w="2"/><text x="64.7855%" y="1215.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="64.5355%" y="1189" width="0.0245%" height="15" fill="rgb(242,167,7)" fg:x="5259" fg:w="2"/><text x="64.7855%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="64.5355%" y="1173" width="0.0245%" height="15" fill="rgb(218,216,3)" fg:x="5259" fg:w="2"/><text x="64.7855%" y="1183.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="64.5355%" y="1157" width="0.0245%" height="15" fill="rgb(206,136,36)" fg:x="5259" fg:w="2"/><text x="64.7855%" y="1167.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="64.5355%" y="1141" width="0.0245%" height="15" fill="rgb(206,206,15)" fg:x="5259" fg:w="2"/><text x="64.7855%" y="1151.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="64.5355%" y="1125" width="0.0245%" height="15" fill="rgb(207,163,34)" fg:x="5259" fg:w="2"/><text x="64.7855%" y="1135.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="64.5355%" y="1109" width="0.0245%" height="15" fill="rgb(240,127,22)" fg:x="5259" fg:w="2"/><text x="64.7855%" y="1119.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.5478%" y="1093" width="0.0123%" height="15" fill="rgb(227,49,5)" fg:x="5260" fg:w="1"/><text x="64.7978%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext&gt; (1 samples, 0.01%)</title><rect x="64.5601%" y="1221" width="0.0123%" height="15" fill="rgb(231,8,6)" fg:x="5261" fg:w="1"/><text x="64.8101%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Device&gt;&gt; (1 samples, 0.01%)</title><rect x="64.5601%" y="1205" width="0.0123%" height="15" fill="rgb(223,21,24)" fg:x="5261" fg:w="1"/><text x="64.8101%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.5601%" y="1189" width="0.0123%" height="15" fill="rgb(244,44,52)" fg:x="5261" fg:w="1"/><text x="64.8101%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="64.5601%" y="1173" width="0.0123%" height="15" fill="rgb(207,73,28)" fg:x="5261" fg:w="1"/><text x="64.8101%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="64.5601%" y="1157" width="0.0123%" height="15" fill="rgb(234,215,10)" fg:x="5261" fg:w="1"/><text x="64.8101%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_window::window::WindowId,wgpu::SwapChain,ahash::random_state::RandomState&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="64.5723%" y="1205" width="0.0123%" height="15" fill="rgb(236,85,3)" fg:x="5262" fg:w="1"/><text x="64.8223%" y="1215.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.5723%" y="1189" width="0.0123%" height="15" fill="rgb(236,102,39)" fg:x="5262" fg:w="1"/><text x="64.8223%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId,u64,ahash::random_state::RandomState&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="64.5846%" y="1189" width="0.0123%" height="15" fill="rgb(243,50,8)" fg:x="5263" fg:w="1"/><text x="64.8346%" y="1199.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.5846%" y="1173" width="0.0123%" height="15" fill="rgb(207,111,4)" fg:x="5263" fg:w="1"/><text x="64.8346%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="64.5846%" y="1157" width="0.0123%" height="15" fill="rgb(230,52,42)" fg:x="5263" fg:w="1"/><text x="64.8346%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="64.5846%" y="1141" width="0.0123%" height="15" fill="rgb(252,178,50)" fg:x="5263" fg:w="1"/><text x="64.8346%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_resources::WgpuResources&gt; (3 samples, 0.04%)</title><rect x="64.5723%" y="1221" width="0.0368%" height="15" fill="rgb(234,46,35)" fg:x="5262" fg:w="3"/><text x="64.8223%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_resources::BindGroupCounter&gt; (2 samples, 0.02%)</title><rect x="64.5846%" y="1205" width="0.0245%" height="15" fill="rgb(228,69,37)" fg:x="5263" fg:w="2"/><text x="64.8346%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::channel::Receiver&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId&gt;&gt; (1 samples, 0.01%)</title><rect x="64.5969%" y="1189" width="0.0123%" height="15" fill="rgb(221,21,11)" fg:x="5264" fg:w="1"/><text x="64.8469%" y="1199.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.5969%" y="1173" width="0.0123%" height="15" fill="rgb(223,56,9)" fg:x="5264" fg:w="1"/><text x="64.8469%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="64.6092%" y="1141" width="0.0123%" height="15" fill="rgb(234,30,19)" fg:x="5265" fg:w="1"/><text x="64.8592%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="64.6092%" y="1125" width="0.0123%" height="15" fill="rgb(211,64,54)" fg:x="5265" fg:w="1"/><text x="64.8592%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::channel::Receiver&lt;core::option::Option&lt;wgpu::CommandBuffer&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="64.6092%" y="1221" width="0.0245%" height="15" fill="rgb(250,189,5)" fg:x="5265" fg:w="2"/><text x="64.8592%" y="1231.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="64.6092%" y="1205" width="0.0245%" height="15" fill="rgb(214,180,13)" fg:x="5265" fg:w="2"/><text x="64.8592%" y="1215.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::release (2 samples, 0.02%)</title><rect x="64.6092%" y="1189" width="0.0245%" height="15" fill="rgb(238,40,40)" fg:x="5265" fg:w="2"/><text x="64.8592%" y="1199.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop::{{closure}} (2 samples, 0.02%)</title><rect x="64.6092%" y="1173" width="0.0245%" height="15" fill="rgb(214,101,38)" fg:x="5265" fg:w="2"/><text x="64.8592%" y="1183.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::disconnect (2 samples, 0.02%)</title><rect x="64.6092%" y="1157" width="0.0245%" height="15" fill="rgb(242,65,53)" fg:x="5265" fg:w="2"/><text x="64.8592%" y="1167.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::disconnect (1 samples, 0.01%)</title><rect x="64.6214%" y="1141" width="0.0123%" height="15" fill="rgb(230,22,45)" fg:x="5266" fg:w="1"/><text x="64.8714%" y="1151.50"></text></g><g><title>&lt;crossbeam_channel::utils::SpinlockGuard&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="64.6214%" y="1125" width="0.0123%" height="15" fill="rgb(223,77,1)" fg:x="5266" fg:w="1"/><text x="64.8714%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::channel::Sender&lt;core::option::Option&lt;wgpu::CommandBuffer&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="64.6337%" y="1221" width="0.0123%" height="15" fill="rgb(227,33,37)" fg:x="5267" fg:w="1"/><text x="64.8837%" y="1231.50"></text></g><g><title>&lt;crossbeam_channel::channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.6337%" y="1205" width="0.0123%" height="15" fill="rgb(224,148,39)" fg:x="5267" fg:w="1"/><text x="64.8837%" y="1215.50"></text></g><g><title>crossbeam_channel::counter::Sender&lt;C&gt;::release (1 samples, 0.01%)</title><rect x="64.6337%" y="1189" width="0.0123%" height="15" fill="rgb(232,212,39)" fg:x="5267" fg:w="1"/><text x="64.8837%" y="1199.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="64.6337%" y="1173" width="0.0123%" height="15" fill="rgb(251,172,7)" fg:x="5267" fg:w="1"/><text x="64.8837%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::counter::Counter&lt;crossbeam_channel::flavors::array::Channel&lt;core::option::Option&lt;wgpu::CommandBuffer&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="64.6337%" y="1157" width="0.0123%" height="15" fill="rgb(219,39,9)" fg:x="5267" fg:w="1"/><text x="64.8837%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::counter::Counter&lt;crossbeam_channel::flavors::array::Channel&lt;core::option::Option&lt;wgpu::CommandBuffer&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="64.6337%" y="1141" width="0.0123%" height="15" fill="rgb(228,118,14)" fg:x="5267" fg:w="1"/><text x="64.8837%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::flavors::array::Channel&lt;core::option::Option&lt;wgpu::CommandBuffer&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="64.6337%" y="1125" width="0.0123%" height="15" fill="rgb(207,140,10)" fg:x="5267" fg:w="1"/><text x="64.8837%" y="1135.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Channel&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.6337%" y="1109" width="0.0123%" height="15" fill="rgb(227,111,53)" fg:x="5267" fg:w="1"/><text x="64.8837%" y="1119.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::len (1 samples, 0.01%)</title><rect x="64.6337%" y="1093" width="0.0123%" height="15" fill="rgb(216,165,16)" fg:x="5267" fg:w="1"/><text x="64.8837%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="64.6460%" y="1221" width="0.0123%" height="15" fill="rgb(226,111,18)" fg:x="5268" fg:w="1"/><text x="64.8960%" y="1231.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.6460%" y="1205" width="0.0123%" height="15" fill="rgb(251,27,17)" fg:x="5268" fg:w="1"/><text x="64.8960%" y="1215.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1 samples, 0.01%)</title><rect x="64.6460%" y="1189" width="0.0123%" height="15" fill="rgb(254,69,9)" fg:x="5268" fg:w="1"/><text x="64.8960%" y="1199.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="64.6460%" y="1173" width="0.0123%" height="15" fill="rgb(234,140,37)" fg:x="5268" fg:w="1"/><text x="64.8960%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="64.6460%" y="1157" width="0.0123%" height="15" fill="rgb(220,93,8)" fg:x="5268" fg:w="1"/><text x="64.8960%" y="1167.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (1 samples, 0.01%)</title><rect x="64.6582%" y="1221" width="0.0123%" height="15" fill="rgb(236,113,3)" fg:x="5269" fg:w="1"/><text x="64.9082%" y="1231.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="64.6582%" y="1205" width="0.0123%" height="15" fill="rgb(234,108,23)" fg:x="5269" fg:w="1"/><text x="64.9082%" y="1215.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 0.01%)</title><rect x="64.6705%" y="1221" width="0.0123%" height="15" fill="rgb(205,114,34)" fg:x="5270" fg:w="1"/><text x="64.9205%" y="1231.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send (1 samples, 0.01%)</title><rect x="64.6705%" y="1205" width="0.0123%" height="15" fill="rgb(236,200,45)" fg:x="5270" fg:w="1"/><text x="64.9205%" y="1215.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::start_send (1 samples, 0.01%)</title><rect x="64.6705%" y="1189" width="0.0123%" height="15" fill="rgb(227,194,29)" fg:x="5270" fg:w="1"/><text x="64.9205%" y="1199.50"></text></g><g><title>crossbeam_channel::channel::bounded (1 samples, 0.01%)</title><rect x="64.6828%" y="1221" width="0.0123%" height="15" fill="rgb(250,76,42)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1231.50"></text></g><g><title>crossbeam_channel::counter::new (1 samples, 0.01%)</title><rect x="64.6828%" y="1205" width="0.0123%" height="15" fill="rgb(208,128,8)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1215.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="64.6828%" y="1189" width="0.0123%" height="15" fill="rgb(229,209,35)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1199.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="64.6828%" y="1173" width="0.0123%" height="15" fill="rgb(215,39,53)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1183.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="64.6828%" y="1157" width="0.0123%" height="15" fill="rgb(219,123,41)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1167.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="64.6828%" y="1141" width="0.0123%" height="15" fill="rgb(212,158,18)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1151.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="64.6828%" y="1125" width="0.0123%" height="15" fill="rgb(234,196,53)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1135.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="64.6828%" y="1109" width="0.0123%" height="15" fill="rgb(210,139,12)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1119.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="64.6828%" y="1093" width="0.0123%" height="15" fill="rgb(220,116,54)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1103.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (1 samples, 0.01%)</title><rect x="64.6828%" y="1077" width="0.0123%" height="15" fill="rgb(247,103,28)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1087.50"></text></g><g><title>__posix_memalign (1 samples, 0.01%)</title><rect x="64.6828%" y="1061" width="0.0123%" height="15" fill="rgb(253,156,45)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1071.50"></text></g><g><title>_mid_memalign (1 samples, 0.01%)</title><rect x="64.6828%" y="1045" width="0.0123%" height="15" fill="rgb(237,157,52)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1055.50"></text></g><g><title>_int_memalign (1 samples, 0.01%)</title><rect x="64.6828%" y="1029" width="0.0123%" height="15" fill="rgb(253,112,16)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1039.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.6828%" y="1013" width="0.0123%" height="15" fill="rgb(234,70,18)" fg:x="5271" fg:w="1"/><text x="64.9328%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.02%)</title><rect x="64.6951%" y="1221" width="0.0245%" height="15" fill="rgb(247,138,19)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="64.6951%" y="1205" width="0.0245%" height="15" fill="rgb(207,171,1)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="64.6951%" y="1189" width="0.0245%" height="15" fill="rgb(239,213,3)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="64.6951%" y="1173" width="0.0245%" height="15" fill="rgb(226,112,4)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="64.6951%" y="1157" width="0.0245%" height="15" fill="rgb(252,170,12)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="64.6951%" y="1141" width="0.0245%" height="15" fill="rgb(241,106,13)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.02%)</title><rect x="64.6951%" y="1125" width="0.0245%" height="15" fill="rgb(225,73,23)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.02%)</title><rect x="64.6951%" y="1109" width="0.0245%" height="15" fill="rgb(251,227,29)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="64.6951%" y="1093" width="0.0245%" height="15" fill="rgb(237,144,13)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1103.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="64.6951%" y="1077" width="0.0245%" height="15" fill="rgb(232,106,46)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="64.6951%" y="1061" width="0.0245%" height="15" fill="rgb(245,154,53)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="64.6951%" y="1045" width="0.0245%" height="15" fill="rgb(212,119,47)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="64.6951%" y="1029" width="0.0245%" height="15" fill="rgb(253,135,25)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1039.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="64.6951%" y="1013" width="0.0245%" height="15" fill="rgb(253,208,39)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1023.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="64.6951%" y="997" width="0.0245%" height="15" fill="rgb(226,64,12)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="1007.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="64.6951%" y="981" width="0.0245%" height="15" fill="rgb(214,162,37)" fg:x="5272" fg:w="2"/><text x="64.9451%" y="991.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="64.7073%" y="965" width="0.0123%" height="15" fill="rgb(250,104,5)" fg:x="5273" fg:w="1"/><text x="64.9573%" y="975.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (1 samples, 0.01%)</title><rect x="64.7196%" y="1141" width="0.0123%" height="15" fill="rgb(220,202,50)" fg:x="5274" fg:w="1"/><text x="64.9696%" y="1151.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (1 samples, 0.01%)</title><rect x="64.7196%" y="1125" width="0.0123%" height="15" fill="rgb(248,67,38)" fg:x="5274" fg:w="1"/><text x="64.9696%" y="1135.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (84 samples, 1.03%)</title><rect x="63.7133%" y="1237" width="1.0308%" height="15" fill="rgb(242,94,35)" fg:x="5192" fg:w="84"/><text x="63.9633%" y="1247.50"></text></g><g><title>wgpu::Queue::submit (2 samples, 0.02%)</title><rect x="64.7196%" y="1221" width="0.0245%" height="15" fill="rgb(209,78,37)" fg:x="5274" fg:w="2"/><text x="64.9696%" y="1231.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (2 samples, 0.02%)</title><rect x="64.7196%" y="1205" width="0.0245%" height="15" fill="rgb(230,126,47)" fg:x="5274" fg:w="2"/><text x="64.9696%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="64.7196%" y="1189" width="0.0245%" height="15" fill="rgb(222,110,35)" fg:x="5274" fg:w="2"/><text x="64.9696%" y="1199.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="64.7196%" y="1173" width="0.0245%" height="15" fill="rgb(233,154,20)" fg:x="5274" fg:w="2"/><text x="64.9696%" y="1183.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as smallvec::Array&gt;::Item&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="64.7196%" y="1157" width="0.0245%" height="15" fill="rgb(223,53,50)" fg:x="5274" fg:w="2"/><text x="64.9696%" y="1167.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (1 samples, 0.01%)</title><rect x="64.7319%" y="1141" width="0.0123%" height="15" fill="rgb(251,27,26)" fg:x="5275" fg:w="1"/><text x="64.9819%" y="1151.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (224 samples, 2.75%)</title><rect x="62.0076%" y="1301" width="2.7488%" height="15" fill="rgb(223,189,16)" fg:x="5053" fg:w="224"/><text x="62.2576%" y="1311.50">be..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (157 samples, 1.93%)</title><rect x="62.8298%" y="1285" width="1.9266%" height="15" fill="rgb(207,5,54)" fg:x="5120" fg:w="157"/><text x="63.0798%" y="1295.50">b..</text></g><g><title>bevy_ecs::world::World::resource_scope (157 samples, 1.93%)</title><rect x="62.8298%" y="1269" width="1.9266%" height="15" fill="rgb(254,124,50)" fg:x="5120" fg:w="157"/><text x="63.0798%" y="1279.50">b..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (157 samples, 1.93%)</title><rect x="62.8298%" y="1253" width="1.9266%" height="15" fill="rgb(253,193,24)" fg:x="5120" fg:w="157"/><text x="63.0798%" y="1263.50">b..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::StageBorrow&gt;&gt; (1 samples, 0.01%)</title><rect x="64.7441%" y="1237" width="0.0123%" height="15" fill="rgb(235,170,24)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.7441%" y="1221" width="0.0123%" height="15" fill="rgb(222,212,52)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::StageBorrow]&gt; (1 samples, 0.01%)</title><rect x="64.7441%" y="1205" width="0.0123%" height="15" fill="rgb(223,17,45)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::StageBorrow&gt; (1 samples, 0.01%)</title><rect x="64.7441%" y="1189" width="0.0123%" height="15" fill="rgb(227,103,26)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::OrderedJobBorrow&gt;&gt; (1 samples, 0.01%)</title><rect x="64.7441%" y="1173" width="0.0123%" height="15" fill="rgb(251,151,25)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.7441%" y="1157" width="0.0123%" height="15" fill="rgb(248,144,29)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::OrderedJobBorrow]&gt; (1 samples, 0.01%)</title><rect x="64.7441%" y="1141" width="0.0123%" height="15" fill="rgb(245,97,16)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::OrderedJobBorrow&gt; (1 samples, 0.01%)</title><rect x="64.7441%" y="1125" width="0.0123%" height="15" fill="rgb(220,200,29)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;mut bevy_render::render_graph::node::NodeState&gt;&gt; (1 samples, 0.01%)</title><rect x="64.7441%" y="1109" width="0.0123%" height="15" fill="rgb(206,38,29)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;mut bevy_render::render_graph::node::NodeState&gt;&gt; (1 samples, 0.01%)</title><rect x="64.7441%" y="1093" width="0.0123%" height="15" fill="rgb(245,19,52)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1103.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="64.7441%" y="1077" width="0.0123%" height="15" fill="rgb(205,67,43)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="64.7441%" y="1061" width="0.0123%" height="15" fill="rgb(217,128,23)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1071.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="64.7441%" y="1045" width="0.0123%" height="15" fill="rgb(210,109,28)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1055.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="64.7441%" y="1029" width="0.0123%" height="15" fill="rgb(233,181,7)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1039.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="64.7441%" y="1013" width="0.0123%" height="15" fill="rgb(244,11,22)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1023.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="64.7441%" y="997" width="0.0123%" height="15" fill="rgb(205,124,54)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="1007.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="64.7441%" y="981" width="0.0123%" height="15" fill="rgb(218,21,27)" fg:x="5276" fg:w="1"/><text x="64.9941%" y="991.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource (1 samples, 0.01%)</title><rect x="64.7564%" y="1285" width="0.0123%" height="15" fill="rgb(224,153,33)" fg:x="5277" fg:w="1"/><text x="65.0064%" y="1295.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="64.7564%" y="1269" width="0.0123%" height="15" fill="rgb(240,219,28)" fg:x="5277" fg:w="1"/><text x="65.0064%" y="1279.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="64.7564%" y="1253" width="0.0123%" height="15" fill="rgb(214,80,29)" fg:x="5277" fg:w="1"/><text x="65.0064%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="64.7564%" y="1237" width="0.0123%" height="15" fill="rgb(247,148,44)" fg:x="5277" fg:w="1"/><text x="65.0064%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="64.7564%" y="1221" width="0.0123%" height="15" fill="rgb(243,110,30)" fg:x="5277" fg:w="1"/><text x="65.0064%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="64.7564%" y="1205" width="0.0123%" height="15" fill="rgb(243,173,41)" fg:x="5277" fg:w="1"/><text x="65.0064%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="64.7564%" y="1189" width="0.0123%" height="15" fill="rgb(225,160,47)" fg:x="5277" fg:w="1"/><text x="65.0064%" y="1199.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (241 samples, 2.96%)</title><rect x="61.8235%" y="1333" width="2.9574%" height="15" fill="rgb(215,44,21)" fg:x="5038" fg:w="241"/><text x="62.0735%" y="1343.50">&lt;be..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (241 samples, 2.96%)</title><rect x="61.8235%" y="1317" width="2.9574%" height="15" fill="rgb(248,90,3)" fg:x="5038" fg:w="241"/><text x="62.0735%" y="1327.50">&lt;al..</text></g><g><title>bevy_winit::change_window (2 samples, 0.02%)</title><rect x="64.7564%" y="1301" width="0.0245%" height="15" fill="rgb(220,196,49)" fg:x="5277" fg:w="2"/><text x="65.0064%" y="1311.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (1 samples, 0.01%)</title><rect x="64.7687%" y="1285" width="0.0123%" height="15" fill="rgb(217,138,14)" fg:x="5278" fg:w="1"/><text x="65.0187%" y="1295.50"></text></g><g><title>bevy_ecs::archetype::Archetype::get_archetype_component_id (1 samples, 0.01%)</title><rect x="64.7687%" y="1269" width="0.0123%" height="15" fill="rgb(219,111,20)" fg:x="5278" fg:w="1"/><text x="65.0187%" y="1279.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="64.7687%" y="1253" width="0.0123%" height="15" fill="rgb(218,114,4)" fg:x="5278" fg:w="1"/><text x="65.0187%" y="1263.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="64.7687%" y="1237" width="0.0123%" height="15" fill="rgb(238,133,3)" fg:x="5278" fg:w="1"/><text x="65.0187%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="64.7687%" y="1221" width="0.0123%" height="15" fill="rgb(224,95,0)" fg:x="5278" fg:w="1"/><text x="65.0187%" y="1231.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="64.7687%" y="1205" width="0.0123%" height="15" fill="rgb(220,169,35)" fg:x="5278" fg:w="1"/><text x="65.0187%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="64.7687%" y="1189" width="0.0123%" height="15" fill="rgb(242,116,47)" fg:x="5278" fg:w="1"/><text x="65.0187%" y="1199.50"></text></g><g><title>bevy_ecs::schedule::stage::SystemStage::initialize_systems (1 samples, 0.01%)</title><rect x="64.7810%" y="1333" width="0.0123%" height="15" fill="rgb(251,42,20)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1343.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::initialize (1 samples, 0.01%)</title><rect x="64.7810%" y="1317" width="0.0123%" height="15" fill="rgb(234,7,34)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1327.50"></text></g><g><title>&lt;(P0,P1,P2) as bevy_ecs::system::system_param::SystemParamState&gt;::init (1 samples, 0.01%)</title><rect x="64.7810%" y="1301" width="0.0123%" height="15" fill="rgb(243,208,13)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1311.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamState&gt;::init (1 samples, 0.01%)</title><rect x="64.7810%" y="1285" width="0.0123%" height="15" fill="rgb(227,33,28)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1295.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::add_write (1 samples, 0.01%)</title><rect x="64.7810%" y="1269" width="0.0123%" height="15" fill="rgb(250,47,37)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1279.50"></text></g><g><title>fixedbitset::FixedBitSet::grow (1 samples, 0.01%)</title><rect x="64.7810%" y="1253" width="0.0123%" height="15" fill="rgb(235,111,52)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1263.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="64.7810%" y="1237" width="0.0123%" height="15" fill="rgb(223,64,28)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.01%)</title><rect x="64.7810%" y="1221" width="0.0123%" height="15" fill="rgb(236,67,22)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="64.7810%" y="1205" width="0.0123%" height="15" fill="rgb(243,79,24)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="64.7810%" y="1189" width="0.0123%" height="15" fill="rgb(241,225,22)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="64.7810%" y="1173" width="0.0123%" height="15" fill="rgb(228,214,26)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="64.7810%" y="1157" width="0.0123%" height="15" fill="rgb(219,84,52)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1167.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="64.7810%" y="1141" width="0.0123%" height="15" fill="rgb(220,12,22)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1151.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="64.7810%" y="1125" width="0.0123%" height="15" fill="rgb(219,9,49)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1135.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="64.7810%" y="1109" width="0.0123%" height="15" fill="rgb(237,40,43)" fg:x="5279" fg:w="1"/><text x="65.0310%" y="1119.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1,315 samples, 16.14%)</title><rect x="48.6685%" y="1429" width="16.1369%" height="15" fill="rgb(212,189,32)" fg:x="3966" fg:w="1315"/><text x="48.9185%" y="1439.50">winit::platform_impl::pla..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (1,315 samples, 16.14%)</title><rect x="48.6685%" y="1413" width="16.1369%" height="15" fill="rgb(247,48,9)" fg:x="3966" fg:w="1315"/><text x="48.9185%" y="1423.50">bevy_winit::winit_runner_..</text></g><g><title>bevy_app::app::App::update (1,315 samples, 16.14%)</title><rect x="48.6685%" y="1397" width="16.1369%" height="15" fill="rgb(247,112,3)" fg:x="3966" fg:w="1315"/><text x="48.9185%" y="1407.50">bevy_app::app::App::update</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1,315 samples, 16.14%)</title><rect x="48.6685%" y="1381" width="16.1369%" height="15" fill="rgb(243,110,18)" fg:x="3966" fg:w="1315"/><text x="48.9185%" y="1391.50">&lt;bevy_ecs::schedule::Sche..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1,315 samples, 16.14%)</title><rect x="48.6685%" y="1365" width="16.1369%" height="15" fill="rgb(233,223,44)" fg:x="3966" fg:w="1315"/><text x="48.9185%" y="1375.50">bevy_ecs::schedule::Sched..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1,309 samples, 16.06%)</title><rect x="48.7422%" y="1349" width="16.0633%" height="15" fill="rgb(245,160,20)" fg:x="3972" fg:w="1309"/><text x="48.9922%" y="1359.50">&lt;bevy_ecs::schedule::stag..</text></g><g><title>bevy_ecs::schedule::stage::SystemStage::rebuild_orders_and_dependencies (1 samples, 0.01%)</title><rect x="64.7932%" y="1333" width="0.0123%" height="15" fill="rgb(225,37,1)" fg:x="5280" fg:w="1"/><text x="65.0432%" y="1343.50"></text></g><g><title>bevy_ecs::schedule::stage::process_systems (1 samples, 0.01%)</title><rect x="64.7932%" y="1317" width="0.0123%" height="15" fill="rgb(253,227,39)" fg:x="5280" fg:w="1"/><text x="65.0432%" y="1327.50"></text></g><g><title>bevy_ecs::schedule::graph_utils::build_dependency_graph (1 samples, 0.01%)</title><rect x="64.7932%" y="1301" width="0.0123%" height="15" fill="rgb(240,179,26)" fg:x="5280" fg:w="1"/><text x="65.0432%" y="1311.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="64.7932%" y="1285" width="0.0123%" height="15" fill="rgb(237,212,23)" fg:x="5280" fg:w="1"/><text x="65.0432%" y="1295.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="64.7932%" y="1269" width="0.0123%" height="15" fill="rgb(221,38,11)" fg:x="5280" fg:w="1"/><text x="65.0432%" y="1279.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="64.7932%" y="1253" width="0.0123%" height="15" fill="rgb(215,85,6)" fg:x="5280" fg:w="1"/><text x="65.0432%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="64.7932%" y="1237" width="0.0123%" height="15" fill="rgb(239,64,14)" fg:x="5280" fg:w="1"/><text x="65.0432%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="64.7932%" y="1221" width="0.0123%" height="15" fill="rgb(215,150,32)" fg:x="5280" fg:w="1"/><text x="65.0432%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="64.7932%" y="1205" width="0.0123%" height="15" fill="rgb(238,15,13)" fg:x="5280" fg:w="1"/><text x="65.0432%" y="1215.50"></text></g><g><title>winit::window::Window::inner_size (1 samples, 0.01%)</title><rect x="64.8055%" y="1333" width="0.0123%" height="15" fill="rgb(251,87,8)" fg:x="5281" fg:w="1"/><text x="65.0555%" y="1343.50"></text></g><g><title>winit::platform_impl::platform::Window::inner_size (1 samples, 0.01%)</title><rect x="64.8055%" y="1317" width="0.0123%" height="15" fill="rgb(206,86,1)" fg:x="5281" fg:w="1"/><text x="65.0555%" y="1327.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size (1 samples, 0.01%)</title><rect x="64.8055%" y="1301" width="0.0123%" height="15" fill="rgb(208,151,45)" fg:x="5281" fg:w="1"/><text x="65.0555%" y="1311.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::inner_size_physical (1 samples, 0.01%)</title><rect x="64.8055%" y="1285" width="0.0123%" height="15" fill="rgb(231,181,24)" fg:x="5281" fg:w="1"/><text x="65.0555%" y="1295.50"></text></g><g><title>winit::platform_impl::platform::x11::util::geometry::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_geometry (1 samples, 0.01%)</title><rect x="64.8055%" y="1269" width="0.0123%" height="15" fill="rgb(240,106,29)" fg:x="5281" fg:w="1"/><text x="65.0555%" y="1279.50"></text></g><g><title>XGetGeometry (1 samples, 0.01%)</title><rect x="64.8055%" y="1253" width="0.0123%" height="15" fill="rgb(227,166,11)" fg:x="5281" fg:w="1"/><text x="65.0555%" y="1263.50"></text></g><g><title>_XReply (1 samples, 0.01%)</title><rect x="64.8055%" y="1237" width="0.0123%" height="15" fill="rgb(254,14,34)" fg:x="5281" fg:w="1"/><text x="65.0555%" y="1247.50"></text></g><g><title>_XSend (1 samples, 0.01%)</title><rect x="64.8055%" y="1221" width="0.0123%" height="15" fill="rgb(223,222,6)" fg:x="5281" fg:w="1"/><text x="65.0555%" y="1231.50"></text></g><g><title>xcb_writev (1 samples, 0.01%)</title><rect x="64.8055%" y="1205" width="0.0123%" height="15" fill="rgb(245,69,24)" fg:x="5281" fg:w="1"/><text x="65.0555%" y="1215.50"></text></g><g><title>&lt;winit::platform_impl::platform::x11::monitor::VideoMode as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="64.8178%" y="1189" width="0.0123%" height="15" fill="rgb(213,193,7)" fg:x="5282" fg:w="1"/><text x="65.0678%" y="1199.50"></text></g><g><title>bevy_winit::run (1,319 samples, 16.19%)</title><rect x="48.6685%" y="1509" width="16.1860%" height="15" fill="rgb(237,92,51)" fg:x="3966" fg:w="1319"/><text x="48.9185%" y="1519.50">bevy_winit::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (1,319 samples, 16.19%)</title><rect x="48.6685%" y="1493" width="16.1860%" height="15" fill="rgb(225,194,6)" fg:x="3966" fg:w="1319"/><text x="48.9185%" y="1503.50">winit::event_loop::EventL..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (1,319 samples, 16.19%)</title><rect x="48.6685%" y="1477" width="16.1860%" height="15" fill="rgb(205,159,49)" fg:x="3966" fg:w="1319"/><text x="48.9185%" y="1487.50">winit::platform_impl::pla..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (1,319 samples, 16.19%)</title><rect x="48.6685%" y="1461" width="16.1860%" height="15" fill="rgb(219,69,2)" fg:x="3966" fg:w="1319"/><text x="48.9185%" y="1471.50">winit::platform_impl::pla..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1,319 samples, 16.19%)</title><rect x="48.6685%" y="1445" width="16.1860%" height="15" fill="rgb(215,107,24)" fg:x="3966" fg:w="1319"/><text x="48.9185%" y="1455.50">winit::platform_impl::pla..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (4 samples, 0.05%)</title><rect x="64.8055%" y="1429" width="0.0491%" height="15" fill="rgb(249,208,29)" fg:x="5281" fg:w="4"/><text x="65.0555%" y="1439.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (4 samples, 0.05%)</title><rect x="64.8055%" y="1413" width="0.0491%" height="15" fill="rgb(213,147,10)" fg:x="5281" fg:w="4"/><text x="65.0555%" y="1423.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}} (4 samples, 0.05%)</title><rect x="64.8055%" y="1397" width="0.0491%" height="15" fill="rgb(254,140,42)" fg:x="5281" fg:w="4"/><text x="65.0555%" y="1407.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (4 samples, 0.05%)</title><rect x="64.8055%" y="1381" width="0.0491%" height="15" fill="rgb(249,9,15)" fg:x="5281" fg:w="4"/><text x="65.0555%" y="1391.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}}::{{closure}} (4 samples, 0.05%)</title><rect x="64.8055%" y="1365" width="0.0491%" height="15" fill="rgb(210,19,33)" fg:x="5281" fg:w="4"/><text x="65.0555%" y="1375.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (4 samples, 0.05%)</title><rect x="64.8055%" y="1349" width="0.0491%" height="15" fill="rgb(241,121,22)" fg:x="5281" fg:w="4"/><text x="65.0555%" y="1359.50"></text></g><g><title>winit::window::Window::scale_factor (3 samples, 0.04%)</title><rect x="64.8178%" y="1333" width="0.0368%" height="15" fill="rgb(244,69,52)" fg:x="5282" fg:w="3"/><text x="65.0678%" y="1343.50"></text></g><g><title>winit::platform_impl::platform::Window::scale_factor (3 samples, 0.04%)</title><rect x="64.8178%" y="1317" width="0.0368%" height="15" fill="rgb(244,191,54)" fg:x="5282" fg:w="3"/><text x="65.0678%" y="1327.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::scale_factor (3 samples, 0.04%)</title><rect x="64.8178%" y="1301" width="0.0368%" height="15" fill="rgb(250,3,53)" fg:x="5282" fg:w="3"/><text x="65.0678%" y="1311.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::current_monitor (3 samples, 0.04%)</title><rect x="64.8178%" y="1285" width="0.0368%" height="15" fill="rgb(205,77,3)" fg:x="5282" fg:w="3"/><text x="65.0678%" y="1295.50"></text></g><g><title>&lt;winit::platform_impl::platform::x11::monitor::MonitorHandle as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="64.8178%" y="1269" width="0.0368%" height="15" fill="rgb(207,155,3)" fg:x="5282" fg:w="3"/><text x="65.0678%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="64.8178%" y="1253" width="0.0368%" height="15" fill="rgb(224,79,2)" fg:x="5282" fg:w="3"/><text x="65.0678%" y="1263.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (3 samples, 0.04%)</title><rect x="64.8178%" y="1237" width="0.0368%" height="15" fill="rgb(243,172,5)" fg:x="5282" fg:w="3"/><text x="65.0678%" y="1247.50"></text></g><g><title>alloc::slice::hack::to_vec (3 samples, 0.04%)</title><rect x="64.8178%" y="1221" width="0.0368%" height="15" fill="rgb(217,23,43)" fg:x="5282" fg:w="3"/><text x="65.0678%" y="1231.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (3 samples, 0.04%)</title><rect x="64.8178%" y="1205" width="0.0368%" height="15" fill="rgb(223,109,20)" fg:x="5282" fg:w="3"/><text x="65.0678%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="64.8300%" y="1189" width="0.0245%" height="15" fill="rgb(232,159,21)" fg:x="5283" fg:w="2"/><text x="65.0800%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="64.8300%" y="1173" width="0.0245%" height="15" fill="rgb(219,58,2)" fg:x="5283" fg:w="2"/><text x="65.0800%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="64.8300%" y="1157" width="0.0245%" height="15" fill="rgb(241,56,8)" fg:x="5283" fg:w="2"/><text x="65.0800%" y="1167.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="64.8300%" y="1141" width="0.0245%" height="15" fill="rgb(249,10,27)" fg:x="5283" fg:w="2"/><text x="65.0800%" y="1151.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="64.8300%" y="1125" width="0.0245%" height="15" fill="rgb(248,177,5)" fg:x="5283" fg:w="2"/><text x="65.0800%" y="1135.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="64.8300%" y="1109" width="0.0245%" height="15" fill="rgb(239,12,30)" fg:x="5283" fg:w="2"/><text x="65.0800%" y="1119.50"></text></g><g><title>__rdl_alloc (2 samples, 0.02%)</title><rect x="64.8300%" y="1093" width="0.0245%" height="15" fill="rgb(229,164,25)" fg:x="5283" fg:w="2"/><text x="65.0800%" y="1103.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (2 samples, 0.02%)</title><rect x="64.8300%" y="1077" width="0.0245%" height="15" fill="rgb(231,217,50)" fg:x="5283" fg:w="2"/><text x="65.0800%" y="1087.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="64.8300%" y="1061" width="0.0245%" height="15" fill="rgb(247,99,32)" fg:x="5283" fg:w="2"/><text x="65.0800%" y="1071.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="64.8300%" y="1045" width="0.0245%" height="15" fill="rgb(240,74,50)" fg:x="5283" fg:w="2"/><text x="65.0800%" y="1055.50"></text></g><g><title>malloc_consolidate (2 samples, 0.02%)</title><rect x="64.8300%" y="1029" width="0.0245%" height="15" fill="rgb(218,54,8)" fg:x="5283" fg:w="2"/><text x="65.0800%" y="1039.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (1 samples, 0.01%)</title><rect x="64.8669%" y="1397" width="0.0123%" height="15" fill="rgb(227,132,20)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1407.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1 samples, 0.01%)</title><rect x="64.8669%" y="1381" width="0.0123%" height="15" fill="rgb(232,134,12)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1391.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1 samples, 0.01%)</title><rect x="64.8669%" y="1365" width="0.0123%" height="15" fill="rgb(250,129,18)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1375.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1 samples, 0.01%)</title><rect x="64.8669%" y="1349" width="0.0123%" height="15" fill="rgb(232,129,47)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1359.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1 samples, 0.01%)</title><rect x="64.8669%" y="1333" width="0.0123%" height="15" fill="rgb(230,31,40)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1343.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (1 samples, 0.01%)</title><rect x="64.8669%" y="1317" width="0.0123%" height="15" fill="rgb(232,126,10)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="64.8669%" y="1301" width="0.0123%" height="15" fill="rgb(205,46,31)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="64.8669%" y="1285" width="0.0123%" height="15" fill="rgb(232,37,37)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1295.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (1 samples, 0.01%)</title><rect x="64.8669%" y="1269" width="0.0123%" height="15" fill="rgb(240,91,16)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1279.50"></text></g><g><title>async_executor::Executor::try_tick (1 samples, 0.01%)</title><rect x="64.8669%" y="1253" width="0.0123%" height="15" fill="rgb(224,160,9)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1263.50"></text></g><g><title>async_task::runnable::Runnable::run (1 samples, 0.01%)</title><rect x="64.8669%" y="1237" width="0.0123%" height="15" fill="rgb(215,116,14)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1247.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1 samples, 0.01%)</title><rect x="64.8669%" y="1221" width="0.0123%" height="15" fill="rgb(235,46,36)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="64.8669%" y="1205" width="0.0123%" height="15" fill="rgb(238,39,28)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1215.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1 samples, 0.01%)</title><rect x="64.8669%" y="1189" width="0.0123%" height="15" fill="rgb(242,125,29)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="64.8669%" y="1173" width="0.0123%" height="15" fill="rgb(238,211,30)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1183.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1 samples, 0.01%)</title><rect x="64.8669%" y="1157" width="0.0123%" height="15" fill="rgb(227,201,28)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1167.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="64.8669%" y="1141" width="0.0123%" height="15" fill="rgb(238,77,29)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1151.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="64.8669%" y="1125" width="0.0123%" height="15" fill="rgb(213,221,40)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="64.8669%" y="1109" width="0.0123%" height="15" fill="rgb(226,220,44)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1119.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="64.8669%" y="1093" width="0.0123%" height="15" fill="rgb(228,90,23)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1103.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (1 samples, 0.01%)</title><rect x="64.8669%" y="1077" width="0.0123%" height="15" fill="rgb(235,72,29)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1087.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="64.8669%" y="1061" width="0.0123%" height="15" fill="rgb(248,117,39)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1071.50"></text></g><g><title>wgpu::Device::poll (1 samples, 0.01%)</title><rect x="64.8669%" y="1045" width="0.0123%" height="15" fill="rgb(225,43,28)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1055.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (1 samples, 0.01%)</title><rect x="64.8669%" y="1029" width="0.0123%" height="15" fill="rgb(240,93,4)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1039.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (1 samples, 0.01%)</title><rect x="64.8669%" y="1013" width="0.0123%" height="15" fill="rgb(234,178,27)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1023.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="64.8669%" y="997" width="0.0123%" height="15" fill="rgb(254,88,22)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="1007.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="64.8669%" y="981" width="0.0123%" height="15" fill="rgb(240,206,50)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="991.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (1 samples, 0.01%)</title><rect x="64.8669%" y="965" width="0.0123%" height="15" fill="rgb(249,103,8)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="975.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (1 samples, 0.01%)</title><rect x="64.8669%" y="949" width="0.0123%" height="15" fill="rgb(241,178,36)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="959.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (1 samples, 0.01%)</title><rect x="64.8669%" y="933" width="0.0123%" height="15" fill="rgb(246,110,15)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="943.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="64.8669%" y="917" width="0.0123%" height="15" fill="rgb(207,14,43)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="927.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="64.8669%" y="901" width="0.0123%" height="15" fill="rgb(253,219,19)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="64.8669%" y="885" width="0.0123%" height="15" fill="rgb(216,126,5)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="895.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="64.8669%" y="869" width="0.0123%" height="15" fill="rgb(218,78,42)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="879.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (1 samples, 0.01%)</title><rect x="64.8669%" y="853" width="0.0123%" height="15" fill="rgb(215,154,40)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="863.50"></text></g><g><title>tracing::span::Span::new_with (1 samples, 0.01%)</title><rect x="64.8669%" y="837" width="0.0123%" height="15" fill="rgb(235,129,32)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="847.50"></text></g><g><title>tracing::span::Span::make_with (1 samples, 0.01%)</title><rect x="64.8669%" y="821" width="0.0123%" height="15" fill="rgb(218,51,8)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="831.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="64.8669%" y="805" width="0.0123%" height="15" fill="rgb(245,48,4)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="64.8669%" y="789" width="0.0123%" height="15" fill="rgb(250,175,12)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="64.8669%" y="773" width="0.0123%" height="15" fill="rgb(237,95,40)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="64.8669%" y="757" width="0.0123%" height="15" fill="rgb(244,120,0)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="64.8669%" y="741" width="0.0123%" height="15" fill="rgb(241,19,42)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="64.8669%" y="725" width="0.0123%" height="15" fill="rgb(217,174,48)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="64.8669%" y="709" width="0.0123%" height="15" fill="rgb(239,36,38)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="64.8669%" y="693" width="0.0123%" height="15" fill="rgb(220,63,49)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="703.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="64.8669%" y="677" width="0.0123%" height="15" fill="rgb(240,101,13)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="687.50"></text></g><g><title>&lt;tracing_core::callsite::Identifier as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="64.8669%" y="661" width="0.0123%" height="15" fill="rgb(209,184,51)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for *const T&gt;::hash (1 samples, 0.01%)</title><rect x="64.8669%" y="645" width="0.0123%" height="15" fill="rgb(206,136,39)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="655.50"></text></g><g><title>core::hash::Hasher::write_usize (1 samples, 0.01%)</title><rect x="64.8669%" y="629" width="0.0123%" height="15" fill="rgb(254,47,45)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="64.8669%" y="613" width="0.0123%" height="15" fill="rgb(252,103,20)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="64.8669%" y="597" width="0.0123%" height="15" fill="rgb(230,69,12)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="64.8669%" y="581" width="0.0123%" height="15" fill="rgb(219,2,28)" fg:x="5286" fg:w="1"/><text x="65.1169%" y="591.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (30 samples, 0.37%)</title><rect x="64.8791%" y="1381" width="0.3681%" height="15" fill="rgb(210,9,12)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1391.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (30 samples, 0.37%)</title><rect x="64.8791%" y="1365" width="0.3681%" height="15" fill="rgb(235,99,33)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1375.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (30 samples, 0.37%)</title><rect x="64.8791%" y="1349" width="0.3681%" height="15" fill="rgb(230,11,38)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (30 samples, 0.37%)</title><rect x="64.8791%" y="1333" width="0.3681%" height="15" fill="rgb(217,129,0)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (30 samples, 0.37%)</title><rect x="64.8791%" y="1317" width="0.3681%" height="15" fill="rgb(222,198,4)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1327.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (30 samples, 0.37%)</title><rect x="64.8791%" y="1301" width="0.3681%" height="15" fill="rgb(246,170,27)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1311.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (30 samples, 0.37%)</title><rect x="64.8791%" y="1285" width="0.3681%" height="15" fill="rgb(229,17,28)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (30 samples, 0.37%)</title><rect x="64.8791%" y="1269" width="0.3681%" height="15" fill="rgb(233,198,48)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (30 samples, 0.37%)</title><rect x="64.8791%" y="1253" width="0.3681%" height="15" fill="rgb(238,103,23)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (30 samples, 0.37%)</title><rect x="64.8791%" y="1237" width="0.3681%" height="15" fill="rgb(206,91,41)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1247.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (30 samples, 0.37%)</title><rect x="64.8791%" y="1221" width="0.3681%" height="15" fill="rgb(227,34,25)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1231.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (30 samples, 0.37%)</title><rect x="64.8791%" y="1205" width="0.3681%" height="15" fill="rgb(210,110,44)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1215.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (30 samples, 0.37%)</title><rect x="64.8791%" y="1189" width="0.3681%" height="15" fill="rgb(216,189,8)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1199.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (30 samples, 0.37%)</title><rect x="64.8791%" y="1173" width="0.3681%" height="15" fill="rgb(234,9,46)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1183.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (30 samples, 0.37%)</title><rect x="64.8791%" y="1157" width="0.3681%" height="15" fill="rgb(251,200,5)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1167.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (30 samples, 0.37%)</title><rect x="64.8791%" y="1141" width="0.3681%" height="15" fill="rgb(238,165,37)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1151.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="1125" width="0.3681%" height="15" fill="rgb(232,77,38)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="1109" width="0.3681%" height="15" fill="rgb(253,179,33)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="1093" width="0.3681%" height="15" fill="rgb(240,13,35)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="1077" width="0.3681%" height="15" fill="rgb(242,150,49)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="1061" width="0.3681%" height="15" fill="rgb(237,176,28)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="1045" width="0.3681%" height="15" fill="rgb(214,176,33)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="1029" width="0.3681%" height="15" fill="rgb(214,25,12)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="1013" width="0.3681%" height="15" fill="rgb(238,190,20)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="997" width="0.3681%" height="15" fill="rgb(208,11,19)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="981" width="0.3681%" height="15" fill="rgb(239,90,4)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="965" width="0.3681%" height="15" fill="rgb(248,110,3)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="949" width="0.3681%" height="15" fill="rgb(210,41,30)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="64.8791%" y="933" width="0.3681%" height="15" fill="rgb(239,36,8)" fg:x="5287" fg:w="30"/><text x="65.1291%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (23 samples, 0.28%)</title><rect x="64.9650%" y="917" width="0.2822%" height="15" fill="rgb(237,201,47)" fg:x="5294" fg:w="23"/><text x="65.2150%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.21%)</title><rect x="65.0387%" y="901" width="0.2086%" height="15" fill="rgb(224,140,29)" fg:x="5300" fg:w="17"/><text x="65.2887%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="65.1736%" y="885" width="0.0736%" height="15" fill="rgb(231,209,17)" fg:x="5311" fg:w="6"/><text x="65.4236%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="65.2105%" y="869" width="0.0368%" height="15" fill="rgb(249,196,1)" fg:x="5314" fg:w="3"/><text x="65.4605%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="65.2350%" y="853" width="0.0123%" height="15" fill="rgb(223,207,51)" fg:x="5316" fg:w="1"/><text x="65.4850%" y="863.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="65.2473%" y="805" width="0.0245%" height="15" fill="rgb(210,14,40)" fg:x="5317" fg:w="2"/><text x="65.4973%" y="815.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="65.2718%" y="741" width="0.0123%" height="15" fill="rgb(250,20,52)" fg:x="5319" fg:w="1"/><text x="65.5218%" y="751.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u128&gt;::fmt (1 samples, 0.01%)</title><rect x="65.2718%" y="725" width="0.0123%" height="15" fill="rgb(241,46,11)" fg:x="5319" fg:w="1"/><text x="65.5218%" y="735.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Display for u128&gt;::fmt (1 samples, 0.01%)</title><rect x="65.2718%" y="709" width="0.0123%" height="15" fill="rgb(219,105,5)" fg:x="5319" fg:w="1"/><text x="65.5218%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (5 samples, 0.06%)</title><rect x="65.2473%" y="853" width="0.0614%" height="15" fill="rgb(252,77,35)" fg:x="5317" fg:w="5"/><text x="65.4973%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.06%)</title><rect x="65.2473%" y="837" width="0.0614%" height="15" fill="rgb(243,119,2)" fg:x="5317" fg:w="5"/><text x="65.4973%" y="847.50"></text></g><g><title>core::fmt::write (5 samples, 0.06%)</title><rect x="65.2473%" y="821" width="0.0614%" height="15" fill="rgb(206,82,28)" fg:x="5317" fg:w="5"/><text x="65.4973%" y="831.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="65.2718%" y="805" width="0.0368%" height="15" fill="rgb(227,120,12)" fg:x="5319" fg:w="3"/><text x="65.5218%" y="815.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (3 samples, 0.04%)</title><rect x="65.2718%" y="789" width="0.0368%" height="15" fill="rgb(229,134,41)" fg:x="5319" fg:w="3"/><text x="65.5218%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.04%)</title><rect x="65.2718%" y="773" width="0.0368%" height="15" fill="rgb(239,96,32)" fg:x="5319" fg:w="3"/><text x="65.5218%" y="783.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (3 samples, 0.04%)</title><rect x="65.2718%" y="757" width="0.0368%" height="15" fill="rgb(225,46,27)" fg:x="5319" fg:w="3"/><text x="65.5218%" y="767.50"></text></g><g><title>core::fmt::num::fmt_u128 (2 samples, 0.02%)</title><rect x="65.2841%" y="741" width="0.0245%" height="15" fill="rgb(215,168,2)" fg:x="5320" fg:w="2"/><text x="65.5341%" y="751.50"></text></g><g><title>core::fmt::num::parse_u64_into (1 samples, 0.01%)</title><rect x="65.2964%" y="725" width="0.0123%" height="15" fill="rgb(207,170,52)" fg:x="5321" fg:w="1"/><text x="65.5464%" y="735.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="65.3209%" y="789" width="0.0123%" height="15" fill="rgb(237,198,36)" fg:x="5323" fg:w="1"/><text x="65.5709%" y="799.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (8 samples, 0.10%)</title><rect x="65.2473%" y="1141" width="0.0982%" height="15" fill="rgb(213,27,14)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="1151.50"></text></g><g><title>tracing::span::Span::new (8 samples, 0.10%)</title><rect x="65.2473%" y="1125" width="0.0982%" height="15" fill="rgb(218,77,5)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="1135.50"></text></g><g><title>tracing_core::dispatcher::get_default (8 samples, 0.10%)</title><rect x="65.2473%" y="1109" width="0.0982%" height="15" fill="rgb(230,219,39)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.10%)</title><rect x="65.2473%" y="1093" width="0.0982%" height="15" fill="rgb(245,177,7)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="1103.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (8 samples, 0.10%)</title><rect x="65.2473%" y="1077" width="0.0982%" height="15" fill="rgb(246,44,46)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="1087.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (8 samples, 0.10%)</title><rect x="65.2473%" y="1061" width="0.0982%" height="15" fill="rgb(207,173,15)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="1071.50"></text></g><g><title>tracing::span::Span::new_with (8 samples, 0.10%)</title><rect x="65.2473%" y="1045" width="0.0982%" height="15" fill="rgb(245,170,50)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="1055.50"></text></g><g><title>tracing::span::Span::make_with (8 samples, 0.10%)</title><rect x="65.2473%" y="1029" width="0.0982%" height="15" fill="rgb(233,156,21)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="1039.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (8 samples, 0.10%)</title><rect x="65.2473%" y="1013" width="0.0982%" height="15" fill="rgb(253,146,27)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (8 samples, 0.10%)</title><rect x="65.2473%" y="997" width="0.0982%" height="15" fill="rgb(247,66,29)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (8 samples, 0.10%)</title><rect x="65.2473%" y="981" width="0.0982%" height="15" fill="rgb(218,207,26)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (8 samples, 0.10%)</title><rect x="65.2473%" y="965" width="0.0982%" height="15" fill="rgb(234,93,26)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="975.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (8 samples, 0.10%)</title><rect x="65.2473%" y="949" width="0.0982%" height="15" fill="rgb(214,75,48)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="959.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (8 samples, 0.10%)</title><rect x="65.2473%" y="933" width="0.0982%" height="15" fill="rgb(229,119,22)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="943.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (8 samples, 0.10%)</title><rect x="65.2473%" y="917" width="0.0982%" height="15" fill="rgb(226,153,19)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="927.50"></text></g><g><title>tracing_core::span::Attributes::record (8 samples, 0.10%)</title><rect x="65.2473%" y="901" width="0.0982%" height="15" fill="rgb(220,204,36)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="911.50"></text></g><g><title>tracing_core::field::ValueSet::record (8 samples, 0.10%)</title><rect x="65.2473%" y="885" width="0.0982%" height="15" fill="rgb(253,181,43)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="895.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (8 samples, 0.10%)</title><rect x="65.2473%" y="869" width="0.0982%" height="15" fill="rgb(211,41,51)" fg:x="5317" fg:w="8"/><text x="65.4973%" y="879.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (3 samples, 0.04%)</title><rect x="65.3086%" y="853" width="0.0368%" height="15" fill="rgb(207,215,0)" fg:x="5322" fg:w="3"/><text x="65.5586%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (3 samples, 0.04%)</title><rect x="65.3086%" y="837" width="0.0368%" height="15" fill="rgb(212,153,10)" fg:x="5322" fg:w="3"/><text x="65.5586%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.04%)</title><rect x="65.3086%" y="821" width="0.0368%" height="15" fill="rgb(251,171,36)" fg:x="5322" fg:w="3"/><text x="65.5586%" y="831.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="65.3209%" y="805" width="0.0245%" height="15" fill="rgb(225,219,41)" fg:x="5323" fg:w="2"/><text x="65.5709%" y="815.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="65.3332%" y="789" width="0.0123%" height="15" fill="rgb(208,200,1)" fg:x="5324" fg:w="1"/><text x="65.5832%" y="799.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="65.3332%" y="773" width="0.0123%" height="15" fill="rgb(206,75,47)" fg:x="5324" fg:w="1"/><text x="65.5832%" y="783.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="65.3332%" y="757" width="0.0123%" height="15" fill="rgb(248,3,16)" fg:x="5324" fg:w="1"/><text x="65.5832%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="65.3454%" y="853" width="0.0123%" height="15" fill="rgb(242,157,36)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="65.3454%" y="837" width="0.0123%" height="15" fill="rgb(215,175,11)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="847.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="65.3454%" y="821" width="0.0123%" height="15" fill="rgb(252,222,22)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="831.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="65.3454%" y="805" width="0.0123%" height="15" fill="rgb(250,121,35)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="815.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="65.3454%" y="789" width="0.0123%" height="15" fill="rgb(233,120,49)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="65.3454%" y="773" width="0.0123%" height="15" fill="rgb(205,201,14)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="783.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="65.3454%" y="757" width="0.0123%" height="15" fill="rgb(219,58,45)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="767.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="65.3454%" y="741" width="0.0123%" height="15" fill="rgb(251,65,12)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="751.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="65.3454%" y="725" width="0.0123%" height="15" fill="rgb(224,47,31)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="65.3454%" y="709" width="0.0123%" height="15" fill="rgb(233,74,26)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="719.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="65.3454%" y="693" width="0.0123%" height="15" fill="rgb(231,211,31)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="65.3454%" y="677" width="0.0123%" height="15" fill="rgb(239,167,5)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="65.3454%" y="661" width="0.0123%" height="15" fill="rgb(241,85,0)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="65.3454%" y="645" width="0.0123%" height="15" fill="rgb(229,130,21)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="65.3454%" y="629" width="0.0123%" height="15" fill="rgb(254,84,49)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="65.3454%" y="613" width="0.0123%" height="15" fill="rgb(235,85,21)" fg:x="5325" fg:w="1"/><text x="65.5954%" y="623.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (10 samples, 0.12%)</title><rect x="65.2473%" y="1157" width="0.1227%" height="15" fill="rgb(246,128,52)" fg:x="5317" fg:w="10"/><text x="65.4973%" y="1167.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::alloc (2 samples, 0.02%)</title><rect x="65.3454%" y="1141" width="0.0245%" height="15" fill="rgb(243,114,49)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="1151.50"></text></g><g><title>tracing::span::Span::new (2 samples, 0.02%)</title><rect x="65.3454%" y="1125" width="0.0245%" height="15" fill="rgb(240,224,22)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="1135.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="65.3454%" y="1109" width="0.0245%" height="15" fill="rgb(247,201,52)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="65.3454%" y="1093" width="0.0245%" height="15" fill="rgb(231,70,45)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="1103.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (2 samples, 0.02%)</title><rect x="65.3454%" y="1077" width="0.0245%" height="15" fill="rgb(217,215,20)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="1087.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (2 samples, 0.02%)</title><rect x="65.3454%" y="1061" width="0.0245%" height="15" fill="rgb(226,170,30)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="1071.50"></text></g><g><title>tracing::span::Span::new_with (2 samples, 0.02%)</title><rect x="65.3454%" y="1045" width="0.0245%" height="15" fill="rgb(220,190,43)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="1055.50"></text></g><g><title>tracing::span::Span::make_with (2 samples, 0.02%)</title><rect x="65.3454%" y="1029" width="0.0245%" height="15" fill="rgb(218,20,18)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="1039.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (2 samples, 0.02%)</title><rect x="65.3454%" y="1013" width="0.0245%" height="15" fill="rgb(245,37,26)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="65.3454%" y="997" width="0.0245%" height="15" fill="rgb(241,127,29)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="65.3454%" y="981" width="0.0245%" height="15" fill="rgb(241,33,26)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (2 samples, 0.02%)</title><rect x="65.3454%" y="965" width="0.0245%" height="15" fill="rgb(220,106,21)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="975.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (2 samples, 0.02%)</title><rect x="65.3454%" y="949" width="0.0245%" height="15" fill="rgb(225,125,35)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="959.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (2 samples, 0.02%)</title><rect x="65.3454%" y="933" width="0.0245%" height="15" fill="rgb(248,80,22)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="943.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (2 samples, 0.02%)</title><rect x="65.3454%" y="917" width="0.0245%" height="15" fill="rgb(231,117,39)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="927.50"></text></g><g><title>tracing_core::span::Attributes::record (2 samples, 0.02%)</title><rect x="65.3454%" y="901" width="0.0245%" height="15" fill="rgb(239,183,16)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="911.50"></text></g><g><title>tracing_core::field::ValueSet::record (2 samples, 0.02%)</title><rect x="65.3454%" y="885" width="0.0245%" height="15" fill="rgb(221,61,19)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="895.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (2 samples, 0.02%)</title><rect x="65.3454%" y="869" width="0.0245%" height="15" fill="rgb(239,196,44)" fg:x="5325" fg:w="2"/><text x="65.5954%" y="879.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (1 samples, 0.01%)</title><rect x="65.3577%" y="853" width="0.0123%" height="15" fill="rgb(206,113,19)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="65.3577%" y="837" width="0.0123%" height="15" fill="rgb(245,114,12)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="847.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="65.3577%" y="821" width="0.0123%" height="15" fill="rgb(247,89,39)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="831.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="65.3577%" y="805" width="0.0123%" height="15" fill="rgb(213,85,14)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="815.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="65.3577%" y="789" width="0.0123%" height="15" fill="rgb(249,206,33)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="65.3577%" y="773" width="0.0123%" height="15" fill="rgb(235,167,47)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="783.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="65.3577%" y="757" width="0.0123%" height="15" fill="rgb(217,177,16)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="65.3577%" y="741" width="0.0123%" height="15" fill="rgb(250,228,29)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="65.3577%" y="725" width="0.0123%" height="15" fill="rgb(216,195,42)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="65.3577%" y="709" width="0.0123%" height="15" fill="rgb(232,192,32)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="65.3577%" y="693" width="0.0123%" height="15" fill="rgb(211,8,47)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="65.3577%" y="677" width="0.0123%" height="15" fill="rgb(251,201,9)" fg:x="5326" fg:w="1"/><text x="65.6077%" y="687.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (11 samples, 0.13%)</title><rect x="65.2473%" y="1317" width="0.1350%" height="15" fill="rgb(206,185,47)" fg:x="5317" fg:w="11"/><text x="65.4973%" y="1327.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (11 samples, 0.13%)</title><rect x="65.2473%" y="1301" width="0.1350%" height="15" fill="rgb(245,54,32)" fg:x="5317" fg:w="11"/><text x="65.4973%" y="1311.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (11 samples, 0.13%)</title><rect x="65.2473%" y="1285" width="0.1350%" height="15" fill="rgb(208,1,8)" fg:x="5317" fg:w="11"/><text x="65.4973%" y="1295.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (11 samples, 0.13%)</title><rect x="65.2473%" y="1269" width="0.1350%" height="15" fill="rgb(228,57,24)" fg:x="5317" fg:w="11"/><text x="65.4973%" y="1279.50"></text></g><g><title>wgpu::Device::create_buffer (11 samples, 0.13%)</title><rect x="65.2473%" y="1253" width="0.1350%" height="15" fill="rgb(251,24,8)" fg:x="5317" fg:w="11"/><text x="65.4973%" y="1263.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (11 samples, 0.13%)</title><rect x="65.2473%" y="1237" width="0.1350%" height="15" fill="rgb(236,196,50)" fg:x="5317" fg:w="11"/><text x="65.4973%" y="1247.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (11 samples, 0.13%)</title><rect x="65.2473%" y="1221" width="0.1350%" height="15" fill="rgb(246,222,29)" fg:x="5317" fg:w="11"/><text x="65.4973%" y="1231.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (11 samples, 0.13%)</title><rect x="65.2473%" y="1205" width="0.1350%" height="15" fill="rgb(211,34,40)" fg:x="5317" fg:w="11"/><text x="65.4973%" y="1215.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (11 samples, 0.13%)</title><rect x="65.2473%" y="1189" width="0.1350%" height="15" fill="rgb(210,66,51)" fg:x="5317" fg:w="11"/><text x="65.4973%" y="1199.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (11 samples, 0.13%)</title><rect x="65.2473%" y="1173" width="0.1350%" height="15" fill="rgb(250,56,43)" fg:x="5317" fg:w="11"/><text x="65.4973%" y="1183.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="65.3700%" y="1157" width="0.0123%" height="15" fill="rgb(240,111,50)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="1167.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="65.3700%" y="1141" width="0.0123%" height="15" fill="rgb(209,117,13)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="65.3700%" y="1125" width="0.0123%" height="15" fill="rgb(232,164,45)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="1135.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="65.3700%" y="1109" width="0.0123%" height="15" fill="rgb(205,69,32)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="1119.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (1 samples, 0.01%)</title><rect x="65.3700%" y="1093" width="0.0123%" height="15" fill="rgb(240,147,45)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="1103.50"></text></g><g><title>tracing::span::Span::new_with (1 samples, 0.01%)</title><rect x="65.3700%" y="1077" width="0.0123%" height="15" fill="rgb(221,94,48)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="1087.50"></text></g><g><title>tracing::span::Span::make_with (1 samples, 0.01%)</title><rect x="65.3700%" y="1061" width="0.0123%" height="15" fill="rgb(249,209,17)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="1071.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="65.3700%" y="1045" width="0.0123%" height="15" fill="rgb(228,57,28)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="65.3700%" y="1029" width="0.0123%" height="15" fill="rgb(250,133,26)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="65.3700%" y="1013" width="0.0123%" height="15" fill="rgb(254,15,16)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="65.3700%" y="997" width="0.0123%" height="15" fill="rgb(209,147,42)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="65.3700%" y="981" width="0.0123%" height="15" fill="rgb(208,5,29)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="991.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="65.3700%" y="965" width="0.0123%" height="15" fill="rgb(250,73,31)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="975.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="65.3700%" y="949" width="0.0123%" height="15" fill="rgb(238,45,10)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="959.50"></text></g><g><title>std::sync::poison::Flag::borrow (1 samples, 0.01%)</title><rect x="65.3700%" y="933" width="0.0123%" height="15" fill="rgb(214,104,5)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="943.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="65.3700%" y="917" width="0.0123%" height="15" fill="rgb(242,217,19)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="927.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="65.3700%" y="901" width="0.0123%" height="15" fill="rgb(246,113,27)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="911.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="65.3700%" y="885" width="0.0123%" height="15" fill="rgb(221,34,27)" fg:x="5327" fg:w="1"/><text x="65.6200%" y="895.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="65.3823%" y="1317" width="0.0123%" height="15" fill="rgb(246,109,6)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1327.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (1 samples, 0.01%)</title><rect x="65.3823%" y="1301" width="0.0123%" height="15" fill="rgb(217,12,25)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1311.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (1 samples, 0.01%)</title><rect x="65.3823%" y="1285" width="0.0123%" height="15" fill="rgb(250,195,5)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1295.50"></text></g><g><title>wgpu::Device::create_command_encoder (1 samples, 0.01%)</title><rect x="65.3823%" y="1269" width="0.0123%" height="15" fill="rgb(244,140,45)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1279.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (1 samples, 0.01%)</title><rect x="65.3823%" y="1253" width="0.0123%" height="15" fill="rgb(230,64,14)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1263.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (1 samples, 0.01%)</title><rect x="65.3823%" y="1237" width="0.0123%" height="15" fill="rgb(206,27,27)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1247.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register_identity (1 samples, 0.01%)</title><rect x="65.3823%" y="1221" width="0.0123%" height="15" fill="rgb(230,14,50)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1231.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register (1 samples, 0.01%)</title><rect x="65.3823%" y="1205" width="0.0123%" height="15" fill="rgb(237,172,14)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="65.3823%" y="1189" width="0.0123%" height="15" fill="rgb(209,25,21)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1199.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="65.3823%" y="1173" width="0.0123%" height="15" fill="rgb(248,148,22)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1183.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1 samples, 0.01%)</title><rect x="65.3823%" y="1157" width="0.0123%" height="15" fill="rgb(234,100,22)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="65.3823%" y="1141" width="0.0123%" height="15" fill="rgb(210,20,30)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="65.3823%" y="1125" width="0.0123%" height="15" fill="rgb(232,58,0)" fg:x="5328" fg:w="1"/><text x="65.6323%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="65.4313%" y="1029" width="0.0123%" height="15" fill="rgb(221,68,13)" fg:x="5332" fg:w="1"/><text x="65.6813%" y="1039.50"></text></g><g><title>memset@plt (1 samples, 0.01%)</title><rect x="65.4313%" y="1013" width="0.0123%" height="15" fill="rgb(231,194,11)" fg:x="5332" fg:w="1"/><text x="65.6813%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="65.4068%" y="1061" width="0.0491%" height="15" fill="rgb(235,51,41)" fg:x="5330" fg:w="4"/><text x="65.6568%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="65.4191%" y="1045" width="0.0368%" height="15" fill="rgb(240,50,32)" fg:x="5331" fg:w="3"/><text x="65.6691%" y="1055.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="65.4436%" y="1029" width="0.0123%" height="15" fill="rgb(240,185,36)" fg:x="5333" fg:w="1"/><text x="65.6936%" y="1039.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (6 samples, 0.07%)</title><rect x="65.3945%" y="1269" width="0.0736%" height="15" fill="rgb(211,168,15)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1279.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (6 samples, 0.07%)</title><rect x="65.3945%" y="1253" width="0.0736%" height="15" fill="rgb(221,70,0)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1263.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (6 samples, 0.07%)</title><rect x="65.3945%" y="1237" width="0.0736%" height="15" fill="rgb(205,21,33)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1247.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (6 samples, 0.07%)</title><rect x="65.3945%" y="1221" width="0.0736%" height="15" fill="rgb(225,106,10)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="65.3945%" y="1205" width="0.0736%" height="15" fill="rgb(236,200,50)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="65.3945%" y="1189" width="0.0736%" height="15" fill="rgb(249,93,23)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="65.3945%" y="1173" width="0.0736%" height="15" fill="rgb(244,115,35)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="65.3945%" y="1157" width="0.0736%" height="15" fill="rgb(231,129,47)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="65.3945%" y="1141" width="0.0736%" height="15" fill="rgb(225,160,50)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="65.3945%" y="1125" width="0.0736%" height="15" fill="rgb(218,135,23)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="65.3945%" y="1109" width="0.0736%" height="15" fill="rgb(227,119,14)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="65.3945%" y="1093" width="0.0736%" height="15" fill="rgb(242,138,13)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="65.3945%" y="1077" width="0.0736%" height="15" fill="rgb(215,11,16)" fg:x="5329" fg:w="6"/><text x="65.6445%" y="1087.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="65.4559%" y="1061" width="0.0123%" height="15" fill="rgb(234,170,50)" fg:x="5334" fg:w="1"/><text x="65.7059%" y="1071.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (1 samples, 0.01%)</title><rect x="65.4682%" y="1269" width="0.0123%" height="15" fill="rgb(233,34,20)" fg:x="5335" fg:w="1"/><text x="65.7182%" y="1279.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (1 samples, 0.01%)</title><rect x="65.4682%" y="1253" width="0.0123%" height="15" fill="rgb(237,100,45)" fg:x="5335" fg:w="1"/><text x="65.7182%" y="1263.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="65.4682%" y="1237" width="0.0123%" height="15" fill="rgb(231,184,36)" fg:x="5335" fg:w="1"/><text x="65.7182%" y="1247.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="65.4682%" y="1221" width="0.0123%" height="15" fill="rgb(252,93,2)" fg:x="5335" fg:w="1"/><text x="65.7182%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="65.4682%" y="1205" width="0.0123%" height="15" fill="rgb(248,176,47)" fg:x="5335" fg:w="1"/><text x="65.7182%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="65.4682%" y="1189" width="0.0123%" height="15" fill="rgb(249,125,23)" fg:x="5335" fg:w="1"/><text x="65.7182%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="65.4682%" y="1173" width="0.0123%" height="15" fill="rgb(239,67,42)" fg:x="5335" fg:w="1"/><text x="65.7182%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="65.4682%" y="1157" width="0.0123%" height="15" fill="rgb(244,162,4)" fg:x="5335" fg:w="1"/><text x="65.7182%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="65.4682%" y="1141" width="0.0123%" height="15" fill="rgb(214,150,38)" fg:x="5335" fg:w="1"/><text x="65.7182%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="65.4682%" y="1125" width="0.0123%" height="15" fill="rgb(228,211,28)" fg:x="5335" fg:w="1"/><text x="65.7182%" y="1135.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (52 samples, 0.64%)</title><rect x="64.8546%" y="1509" width="0.6381%" height="15" fill="rgb(212,98,48)" fg:x="5285" fg:w="52"/><text x="65.1046%" y="1519.50"></text></g><g><title>bevy_app::app::App::update (51 samples, 0.63%)</title><rect x="64.8669%" y="1493" width="0.6258%" height="15" fill="rgb(213,45,13)" fg:x="5286" fg:w="51"/><text x="65.1169%" y="1503.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (51 samples, 0.63%)</title><rect x="64.8669%" y="1477" width="0.6258%" height="15" fill="rgb(218,35,29)" fg:x="5286" fg:w="51"/><text x="65.1169%" y="1487.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (51 samples, 0.63%)</title><rect x="64.8669%" y="1461" width="0.6258%" height="15" fill="rgb(244,13,3)" fg:x="5286" fg:w="51"/><text x="65.1169%" y="1471.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (51 samples, 0.63%)</title><rect x="64.8669%" y="1445" width="0.6258%" height="15" fill="rgb(235,170,19)" fg:x="5286" fg:w="51"/><text x="65.1169%" y="1455.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (51 samples, 0.63%)</title><rect x="64.8669%" y="1429" width="0.6258%" height="15" fill="rgb(233,193,43)" fg:x="5286" fg:w="51"/><text x="65.1169%" y="1439.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (51 samples, 0.63%)</title><rect x="64.8669%" y="1413" width="0.6258%" height="15" fill="rgb(228,223,20)" fg:x="5286" fg:w="51"/><text x="65.1169%" y="1423.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (50 samples, 0.61%)</title><rect x="64.8791%" y="1397" width="0.6136%" height="15" fill="rgb(208,85,54)" fg:x="5287" fg:w="50"/><text x="65.1291%" y="1407.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (20 samples, 0.25%)</title><rect x="65.2473%" y="1381" width="0.2454%" height="15" fill="rgb(254,14,45)" fg:x="5317" fg:w="20"/><text x="65.4973%" y="1391.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (20 samples, 0.25%)</title><rect x="65.2473%" y="1365" width="0.2454%" height="15" fill="rgb(247,99,29)" fg:x="5317" fg:w="20"/><text x="65.4973%" y="1375.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (20 samples, 0.25%)</title><rect x="65.2473%" y="1349" width="0.2454%" height="15" fill="rgb(225,180,54)" fg:x="5317" fg:w="20"/><text x="65.4973%" y="1359.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (20 samples, 0.25%)</title><rect x="65.2473%" y="1333" width="0.2454%" height="15" fill="rgb(239,88,43)" fg:x="5317" fg:w="20"/><text x="65.4973%" y="1343.50"></text></g><g><title>wgpu::Queue::submit (8 samples, 0.10%)</title><rect x="65.3945%" y="1317" width="0.0982%" height="15" fill="rgb(209,47,11)" fg:x="5329" fg:w="8"/><text x="65.6445%" y="1327.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (8 samples, 0.10%)</title><rect x="65.3945%" y="1301" width="0.0982%" height="15" fill="rgb(219,179,23)" fg:x="5329" fg:w="8"/><text x="65.6445%" y="1311.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (8 samples, 0.10%)</title><rect x="65.3945%" y="1285" width="0.0982%" height="15" fill="rgb(213,183,19)" fg:x="5329" fg:w="8"/><text x="65.6445%" y="1295.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="65.4804%" y="1269" width="0.0123%" height="15" fill="rgb(210,11,9)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1279.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="65.4804%" y="1253" width="0.0123%" height="15" fill="rgb(239,194,16)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1263.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (1 samples, 0.01%)</title><rect x="65.4804%" y="1237" width="0.0123%" height="15" fill="rgb(246,23,50)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1247.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (1 samples, 0.01%)</title><rect x="65.4804%" y="1221" width="0.0123%" height="15" fill="rgb(245,10,41)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1231.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (1 samples, 0.01%)</title><rect x="65.4804%" y="1205" width="0.0123%" height="15" fill="rgb(228,43,24)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1215.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="65.4804%" y="1189" width="0.0123%" height="15" fill="rgb(220,151,0)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1199.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="65.4804%" y="1173" width="0.0123%" height="15" fill="rgb(232,219,10)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="65.4804%" y="1157" width="0.0123%" height="15" fill="rgb(227,217,48)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1167.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="65.4804%" y="1141" width="0.0123%" height="15" fill="rgb(210,66,35)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1151.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (1 samples, 0.01%)</title><rect x="65.4804%" y="1125" width="0.0123%" height="15" fill="rgb(254,6,7)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1135.50"></text></g><g><title>tracing::span::Span::new_with (1 samples, 0.01%)</title><rect x="65.4804%" y="1109" width="0.0123%" height="15" fill="rgb(235,222,42)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1119.50"></text></g><g><title>tracing::span::Span::make_with (1 samples, 0.01%)</title><rect x="65.4804%" y="1093" width="0.0123%" height="15" fill="rgb(245,126,5)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1103.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="65.4804%" y="1077" width="0.0123%" height="15" fill="rgb(215,73,17)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="65.4804%" y="1061" width="0.0123%" height="15" fill="rgb(219,198,52)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="65.4804%" y="1045" width="0.0123%" height="15" fill="rgb(217,159,18)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="65.4804%" y="1029" width="0.0123%" height="15" fill="rgb(212,177,18)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="65.4804%" y="1013" width="0.0123%" height="15" fill="rgb(241,10,11)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1023.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="65.4804%" y="997" width="0.0123%" height="15" fill="rgb(232,114,35)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="1007.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.01%)</title><rect x="65.4804%" y="981" width="0.0123%" height="15" fill="rgb(238,222,8)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="991.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.01%)</title><rect x="65.4804%" y="965" width="0.0123%" height="15" fill="rgb(251,153,44)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="975.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="65.4804%" y="949" width="0.0123%" height="15" fill="rgb(210,140,51)" fg:x="5336" fg:w="1"/><text x="65.7304%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="65.5050%" y="1333" width="0.0123%" height="15" fill="rgb(222,63,0)" fg:x="5338" fg:w="1"/><text x="65.7550%" y="1343.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="65.5050%" y="1317" width="0.0123%" height="15" fill="rgb(240,18,40)" fg:x="5338" fg:w="1"/><text x="65.7550%" y="1327.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="65.5050%" y="1301" width="0.0123%" height="15" fill="rgb(237,88,16)" fg:x="5338" fg:w="1"/><text x="65.7550%" y="1311.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.05%)</title><rect x="65.5050%" y="1413" width="0.0491%" height="15" fill="rgb(251,117,13)" fg:x="5338" fg:w="4"/><text x="65.7550%" y="1423.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.05%)</title><rect x="65.5050%" y="1397" width="0.0491%" height="15" fill="rgb(251,228,8)" fg:x="5338" fg:w="4"/><text x="65.7550%" y="1407.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.05%)</title><rect x="65.5050%" y="1381" width="0.0491%" height="15" fill="rgb(205,107,49)" fg:x="5338" fg:w="4"/><text x="65.7550%" y="1391.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.05%)</title><rect x="65.5050%" y="1365" width="0.0491%" height="15" fill="rgb(238,72,41)" fg:x="5338" fg:w="4"/><text x="65.7550%" y="1375.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (4 samples, 0.05%)</title><rect x="65.5050%" y="1349" width="0.0491%" height="15" fill="rgb(248,183,52)" fg:x="5338" fg:w="4"/><text x="65.7550%" y="1359.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (3 samples, 0.04%)</title><rect x="65.5172%" y="1333" width="0.0368%" height="15" fill="rgb(215,58,20)" fg:x="5339" fg:w="3"/><text x="65.7672%" y="1343.50"></text></g><g><title>&lt;std::collections::hash::set::IntoIter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.5541%" y="1413" width="0.0123%" height="15" fill="rgb(209,49,13)" fg:x="5342" fg:w="1"/><text x="65.8041%" y="1423.50"></text></g><g><title>&lt;hashbrown::set::IntoIter&lt;K,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.5541%" y="1397" width="0.0123%" height="15" fill="rgb(208,113,17)" fg:x="5342" fg:w="1"/><text x="65.8041%" y="1407.50"></text></g><g><title>&lt;hashbrown::map::IntoIter&lt;K,V,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.5541%" y="1381" width="0.0123%" height="15" fill="rgb(208,14,22)" fg:x="5342" fg:w="1"/><text x="65.8041%" y="1391.50"></text></g><g><title>&lt;hashbrown::raw::RawIntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.5541%" y="1365" width="0.0123%" height="15" fill="rgb(222,95,2)" fg:x="5342" fg:w="1"/><text x="65.8041%" y="1375.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.5541%" y="1349" width="0.0123%" height="15" fill="rgb(253,180,37)" fg:x="5342" fg:w="1"/><text x="65.8041%" y="1359.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.5541%" y="1333" width="0.0123%" height="15" fill="rgb(250,81,33)" fg:x="5342" fg:w="1"/><text x="65.8041%" y="1343.50"></text></g><g><title>mio::poll::Poll::poll1 (1 samples, 0.01%)</title><rect x="65.5663%" y="1381" width="0.0123%" height="15" fill="rgb(251,151,41)" fg:x="5343" fg:w="1"/><text x="65.8163%" y="1391.50"></text></g><g><title>mio::poll::Poll::poll (3 samples, 0.04%)</title><rect x="65.5663%" y="1413" width="0.0368%" height="15" fill="rgb(210,135,17)" fg:x="5343" fg:w="3"/><text x="65.8163%" y="1423.50"></text></g><g><title>mio::poll::Poll::poll1 (3 samples, 0.04%)</title><rect x="65.5663%" y="1397" width="0.0368%" height="15" fill="rgb(239,21,29)" fg:x="5343" fg:w="3"/><text x="65.8163%" y="1407.50"></text></g><g><title>mio::poll::Poll::poll2 (2 samples, 0.02%)</title><rect x="65.5786%" y="1381" width="0.0245%" height="15" fill="rgb(231,215,16)" fg:x="5344" fg:w="2"/><text x="65.8286%" y="1391.50"></text></g><g><title>mio::sys::unix::epoll::Selector::select (2 samples, 0.02%)</title><rect x="65.5786%" y="1365" width="0.0245%" height="15" fill="rgb(239,151,54)" fg:x="5344" fg:w="2"/><text x="65.8286%" y="1375.50"></text></g><g><title>epoll_wait (2 samples, 0.02%)</title><rect x="65.5786%" y="1349" width="0.0245%" height="15" fill="rgb(222,122,38)" fg:x="5344" fg:w="2"/><text x="65.8286%" y="1359.50"></text></g><g><title>mio_extras::channel::Receiver&lt;T&gt;::try_recv (3 samples, 0.04%)</title><rect x="65.6031%" y="1413" width="0.0368%" height="15" fill="rgb(243,128,1)" fg:x="5346" fg:w="3"/><text x="65.8531%" y="1423.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (3 samples, 0.04%)</title><rect x="65.6031%" y="1397" width="0.0368%" height="15" fill="rgb(225,74,21)" fg:x="5346" fg:w="3"/><text x="65.8531%" y="1407.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (2 samples, 0.02%)</title><rect x="65.6154%" y="1381" width="0.0245%" height="15" fill="rgb(216,210,10)" fg:x="5347" fg:w="2"/><text x="65.8654%" y="1391.50"></text></g><g><title>std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="65.6154%" y="1365" width="0.0245%" height="15" fill="rgb(228,76,19)" fg:x="5347" fg:w="2"/><text x="65.8654%" y="1375.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="65.6400%" y="1413" width="0.0123%" height="15" fill="rgb(236,80,34)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1423.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="65.6400%" y="1397" width="0.0123%" height="15" fill="rgb(225,173,23)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1407.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="65.6400%" y="1381" width="0.0123%" height="15" fill="rgb(253,38,1)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1391.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="65.6400%" y="1365" width="0.0123%" height="15" fill="rgb(206,155,35)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1375.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="65.6400%" y="1349" width="0.0123%" height="15" fill="rgb(254,27,53)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1359.50"></text></g><g><title>std::collections::hash::map::RandomState::new (1 samples, 0.01%)</title><rect x="65.6400%" y="1333" width="0.0123%" height="15" fill="rgb(225,52,41)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="65.6400%" y="1317" width="0.0123%" height="15" fill="rgb(244,53,18)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="65.6400%" y="1301" width="0.0123%" height="15" fill="rgb(254,206,48)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1311.50"></text></g><g><title>std::collections::hash::map::RandomState::new::KEYS::__getit (1 samples, 0.01%)</title><rect x="65.6400%" y="1285" width="0.0123%" height="15" fill="rgb(236,182,23)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1295.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="65.6400%" y="1269" width="0.0123%" height="15" fill="rgb(236,191,37)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1279.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="65.6400%" y="1253" width="0.0123%" height="15" fill="rgb(245,53,8)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="65.6400%" y="1237" width="0.0123%" height="15" fill="rgb(245,147,9)" fg:x="5349" fg:w="1"/><text x="65.8900%" y="1247.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (4 samples, 0.05%)</title><rect x="65.7627%" y="1317" width="0.0491%" height="15" fill="rgb(218,24,48)" fg:x="5359" fg:w="4"/><text x="66.0127%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (4 samples, 0.05%)</title><rect x="65.7627%" y="1301" width="0.0491%" height="15" fill="rgb(254,23,9)" fg:x="5359" fg:w="4"/><text x="66.0127%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="65.7995%" y="1285" width="0.0123%" height="15" fill="rgb(244,105,9)" fg:x="5362" fg:w="1"/><text x="66.0495%" y="1295.50"></text></g><g><title>&lt;bevy_tasks::usages::ComputeTaskPool as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="65.8363%" y="1301" width="0.0368%" height="15" fill="rgb(212,142,22)" fg:x="5365" fg:w="3"/><text x="66.0863%" y="1311.50"></text></g><g><title>&lt;bevy_tasks::task_pool::TaskPool as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="65.8363%" y="1285" width="0.0368%" height="15" fill="rgb(221,114,49)" fg:x="5365" fg:w="3"/><text x="66.0863%" y="1295.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="65.8363%" y="1269" width="0.0368%" height="15" fill="rgb(223,210,25)" fg:x="5365" fg:w="3"/><text x="66.0863%" y="1279.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.04%)</title><rect x="65.8363%" y="1253" width="0.0368%" height="15" fill="rgb(235,162,44)" fg:x="5365" fg:w="3"/><text x="66.0863%" y="1263.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.04%)</title><rect x="65.8363%" y="1237" width="0.0368%" height="15" fill="rgb(237,65,45)" fg:x="5365" fg:w="3"/><text x="66.0863%" y="1247.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::update_archetypes (3 samples, 0.04%)</title><rect x="65.8731%" y="1301" width="0.0368%" height="15" fill="rgb(208,79,9)" fg:x="5368" fg:w="3"/><text x="66.1231%" y="1311.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (3 samples, 0.04%)</title><rect x="65.9099%" y="1269" width="0.0368%" height="15" fill="rgb(215,228,8)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1279.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.04%)</title><rect x="65.9099%" y="1253" width="0.0368%" height="15" fill="rgb(205,185,17)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.04%)</title><rect x="65.9099%" y="1237" width="0.0368%" height="15" fill="rgb(213,62,36)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.04%)</title><rect x="65.9099%" y="1221" width="0.0368%" height="15" fill="rgb(209,34,9)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.04%)</title><rect x="65.9099%" y="1205" width="0.0368%" height="15" fill="rgb(246,151,27)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="65.9099%" y="1189" width="0.0368%" height="15" fill="rgb(218,206,3)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.04%)</title><rect x="65.9099%" y="1173" width="0.0368%" height="15" fill="rgb(242,202,1)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1183.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.04%)</title><rect x="65.9099%" y="1157" width="0.0368%" height="15" fill="rgb(227,185,16)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1167.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.04%)</title><rect x="65.9099%" y="1141" width="0.0368%" height="15" fill="rgb(241,1,14)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1151.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.04%)</title><rect x="65.9099%" y="1125" width="0.0368%" height="15" fill="rgb(212,113,25)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.04%)</title><rect x="65.9099%" y="1109" width="0.0368%" height="15" fill="rgb(247,37,43)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="65.9099%" y="1093" width="0.0368%" height="15" fill="rgb(226,54,8)" fg:x="5371" fg:w="3"/><text x="66.1599%" y="1103.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1 samples, 0.01%)</title><rect x="65.9467%" y="1253" width="0.0123%" height="15" fill="rgb(251,205,25)" fg:x="5374" fg:w="1"/><text x="66.1967%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="65.9590%" y="1221" width="0.0245%" height="15" fill="rgb(246,87,35)" fg:x="5375" fg:w="2"/><text x="66.2090%" y="1231.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (2 samples, 0.02%)</title><rect x="65.9590%" y="1205" width="0.0245%" height="15" fill="rgb(251,145,46)" fg:x="5375" fg:w="2"/><text x="66.2090%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="65.9590%" y="1189" width="0.0245%" height="15" fill="rgb(210,210,33)" fg:x="5375" fg:w="2"/><text x="66.2090%" y="1199.50"></text></g><g><title>bevy_ecs::world::World::contains_resource (10 samples, 0.12%)</title><rect x="65.9099%" y="1285" width="0.1227%" height="15" fill="rgb(221,151,11)" fg:x="5371" fg:w="10"/><text x="66.1599%" y="1295.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (7 samples, 0.09%)</title><rect x="65.9467%" y="1269" width="0.0859%" height="15" fill="rgb(208,160,28)" fg:x="5374" fg:w="7"/><text x="66.1967%" y="1279.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (6 samples, 0.07%)</title><rect x="65.9590%" y="1253" width="0.0736%" height="15" fill="rgb(243,69,29)" fg:x="5375" fg:w="6"/><text x="66.2090%" y="1263.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (6 samples, 0.07%)</title><rect x="65.9590%" y="1237" width="0.0736%" height="15" fill="rgb(224,144,4)" fg:x="5375" fg:w="6"/><text x="66.2090%" y="1247.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (4 samples, 0.05%)</title><rect x="65.9836%" y="1221" width="0.0491%" height="15" fill="rgb(211,140,38)" fg:x="5377" fg:w="4"/><text x="66.2336%" y="1231.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (4 samples, 0.05%)</title><rect x="65.9836%" y="1205" width="0.0491%" height="15" fill="rgb(252,189,15)" fg:x="5377" fg:w="4"/><text x="66.2336%" y="1215.50"></text></g><g><title>bevy_ecs::world::World::get_resource_or_insert_with (11 samples, 0.13%)</title><rect x="65.9099%" y="1301" width="0.1350%" height="15" fill="rgb(251,175,23)" fg:x="5371" fg:w="11"/><text x="66.1599%" y="1311.50"></text></g><g><title>bevy_ecs::world::World::get_resource_mut (1 samples, 0.01%)</title><rect x="66.0326%" y="1285" width="0.0123%" height="15" fill="rgb(212,184,11)" fg:x="5381" fg:w="1"/><text x="66.2826%" y="1295.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut (1 samples, 0.01%)</title><rect x="66.0326%" y="1269" width="0.0123%" height="15" fill="rgb(217,205,6)" fg:x="5381" fg:w="1"/><text x="66.2826%" y="1279.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="66.0326%" y="1253" width="0.0123%" height="15" fill="rgb(235,45,45)" fg:x="5381" fg:w="1"/><text x="66.2826%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="66.0326%" y="1237" width="0.0123%" height="15" fill="rgb(211,157,53)" fg:x="5381" fg:w="1"/><text x="66.2826%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="66.0326%" y="1221" width="0.0123%" height="15" fill="rgb(212,13,8)" fg:x="5381" fg:w="1"/><text x="66.2826%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="66.0326%" y="1205" width="0.0123%" height="15" fill="rgb(218,80,36)" fg:x="5381" fg:w="1"/><text x="66.2826%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="66.0326%" y="1189" width="0.0123%" height="15" fill="rgb(211,123,43)" fg:x="5381" fg:w="1"/><text x="66.2826%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="66.0326%" y="1173" width="0.0123%" height="15" fill="rgb(206,165,2)" fg:x="5381" fg:w="1"/><text x="66.2826%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::Executor&gt;&gt; (1 samples, 0.01%)</title><rect x="66.0449%" y="1269" width="0.0123%" height="15" fill="rgb(248,63,35)" fg:x="5382" fg:w="1"/><text x="66.2949%" y="1279.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="66.0449%" y="1253" width="0.0123%" height="15" fill="rgb(219,133,41)" fg:x="5382" fg:w="1"/><text x="66.2949%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="66.0449%" y="1237" width="0.0123%" height="15" fill="rgb(206,175,46)" fg:x="5382" fg:w="1"/><text x="66.2949%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="66.0449%" y="1221" width="0.0123%" height="15" fill="rgb(224,41,35)" fg:x="5382" fg:w="1"/><text x="66.2949%" y="1231.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (21 samples, 0.26%)</title><rect x="65.8118%" y="1317" width="0.2577%" height="15" fill="rgb(226,113,24)" fg:x="5363" fg:w="21"/><text x="66.0618%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_tasks::usages::ComputeTaskPool&gt; (2 samples, 0.02%)</title><rect x="66.0449%" y="1301" width="0.0245%" height="15" fill="rgb(219,51,41)" fg:x="5382" fg:w="2"/><text x="66.2949%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_tasks::task_pool::TaskPool&gt; (2 samples, 0.02%)</title><rect x="66.0449%" y="1285" width="0.0245%" height="15" fill="rgb(220,145,47)" fg:x="5382" fg:w="2"/><text x="66.2949%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;bevy_tasks::task_pool::TaskPoolInner&gt;&gt; (1 samples, 0.01%)</title><rect x="66.0572%" y="1269" width="0.0123%" height="15" fill="rgb(239,121,47)" fg:x="5383" fg:w="1"/><text x="66.3072%" y="1279.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="66.0572%" y="1253" width="0.0123%" height="15" fill="rgb(207,60,40)" fg:x="5383" fg:w="1"/><text x="66.3072%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="66.0572%" y="1237" width="0.0123%" height="15" fill="rgb(224,229,11)" fg:x="5383" fg:w="1"/><text x="66.3072%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="66.0572%" y="1221" width="0.0123%" height="15" fill="rgb(252,28,32)" fg:x="5383" fg:w="1"/><text x="66.3072%" y="1231.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run::should_run (11 samples, 0.13%)</title><rect x="66.0695%" y="1317" width="0.1350%" height="15" fill="rgb(207,52,49)" fg:x="5384" fg:w="11"/><text x="66.3195%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.13%)</title><rect x="66.0695%" y="1301" width="0.1350%" height="15" fill="rgb(243,51,50)" fg:x="5384" fg:w="11"/><text x="66.3195%" y="1311.50"></text></g><g><title>bevy_ecs::world::World::get_entity_mut (1 samples, 0.01%)</title><rect x="66.2290%" y="1269" width="0.0123%" height="15" fill="rgb(212,92,21)" fg:x="5397" fg:w="1"/><text x="66.4790%" y="1279.50"></text></g><g><title>bevy_ecs::entity::Entities::get (1 samples, 0.01%)</title><rect x="66.2290%" y="1253" width="0.0123%" height="15" fill="rgb(230,183,50)" fg:x="5397" fg:w="1"/><text x="66.4790%" y="1263.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Remove&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (6 samples, 0.07%)</title><rect x="66.2044%" y="1285" width="0.0736%" height="15" fill="rgb(225,48,9)" fg:x="5395" fg:w="6"/><text x="66.4544%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bevy_ecs::system::commands::Remove&lt;engine::engine::actor::ai::Moving&gt;&gt;&gt; (3 samples, 0.04%)</title><rect x="66.2413%" y="1269" width="0.0368%" height="15" fill="rgb(254,44,4)" fg:x="5398" fg:w="3"/><text x="66.4913%" y="1279.50"></text></g><g><title>alloc::alloc::box_free (3 samples, 0.04%)</title><rect x="66.2413%" y="1253" width="0.0368%" height="15" fill="rgb(252,128,37)" fg:x="5398" fg:w="3"/><text x="66.4913%" y="1263.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.04%)</title><rect x="66.2413%" y="1237" width="0.0368%" height="15" fill="rgb(227,178,8)" fg:x="5398" fg:w="3"/><text x="66.4913%" y="1247.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.04%)</title><rect x="66.2413%" y="1221" width="0.0368%" height="15" fill="rgb(205,206,32)" fg:x="5398" fg:w="3"/><text x="66.4913%" y="1231.50"></text></g><g><title>__rdl_dealloc (3 samples, 0.04%)</title><rect x="66.2413%" y="1205" width="0.0368%" height="15" fill="rgb(220,218,22)" fg:x="5398" fg:w="3"/><text x="66.4913%" y="1215.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3 samples, 0.04%)</title><rect x="66.2413%" y="1189" width="0.0368%" height="15" fill="rgb(236,41,28)" fg:x="5398" fg:w="3"/><text x="66.4913%" y="1199.50"></text></g><g><title>__GI___libc_free (3 samples, 0.04%)</title><rect x="66.2413%" y="1173" width="0.0368%" height="15" fill="rgb(219,37,7)" fg:x="5398" fg:w="3"/><text x="66.4913%" y="1183.50"></text></g><g><title>_int_free (3 samples, 0.04%)</title><rect x="66.2413%" y="1157" width="0.0368%" height="15" fill="rgb(206,160,15)" fg:x="5398" fg:w="3"/><text x="66.4913%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.01%)</title><rect x="66.2781%" y="1285" width="0.0123%" height="15" fill="rgb(208,82,21)" fg:x="5401" fg:w="1"/><text x="66.5281%" y="1295.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="66.2781%" y="1269" width="0.0123%" height="15" fill="rgb(226,130,25)" fg:x="5401" fg:w="1"/><text x="66.5281%" y="1279.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (9 samples, 0.11%)</title><rect x="66.2044%" y="1317" width="0.1104%" height="15" fill="rgb(212,72,24)" fg:x="5395" fg:w="9"/><text x="66.4544%" y="1327.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (9 samples, 0.11%)</title><rect x="66.2044%" y="1301" width="0.1104%" height="15" fill="rgb(206,28,16)" fg:x="5395" fg:w="9"/><text x="66.4544%" y="1311.50"></text></g><g><title>bevy_ecs::world::World::flush (2 samples, 0.02%)</title><rect x="66.2903%" y="1285" width="0.0245%" height="15" fill="rgb(249,41,5)" fg:x="5402" fg:w="2"/><text x="66.5403%" y="1295.50"></text></g><g><title>&lt;bevy_ecs::storage::table::Tables as core::ops::index::IndexMut&lt;bevy_ecs::storage::table::TableId&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="66.3026%" y="1269" width="0.0123%" height="15" fill="rgb(233,96,48)" fg:x="5403" fg:w="1"/><text x="66.5526%" y="1279.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="66.3026%" y="1253" width="0.0123%" height="15" fill="rgb(240,198,11)" fg:x="5403" fg:w="1"/><text x="66.5526%" y="1263.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="66.3026%" y="1237" width="0.0123%" height="15" fill="rgb(209,175,35)" fg:x="5403" fg:w="1"/><text x="66.5526%" y="1247.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="66.3026%" y="1221" width="0.0123%" height="15" fill="rgb(214,40,51)" fg:x="5403" fg:w="1"/><text x="66.5526%" y="1231.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (3 samples, 0.04%)</title><rect x="66.3272%" y="1269" width="0.0368%" height="15" fill="rgb(252,56,4)" fg:x="5405" fg:w="3"/><text x="66.5772%" y="1279.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3 samples, 0.04%)</title><rect x="66.3272%" y="1253" width="0.0368%" height="15" fill="rgb(219,131,5)" fg:x="5405" fg:w="3"/><text x="66.5772%" y="1263.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.04%)</title><rect x="66.3272%" y="1237" width="0.0368%" height="15" fill="rgb(223,67,53)" fg:x="5405" fg:w="3"/><text x="66.5772%" y="1247.50"></text></g><g><title>bevy_core::time::time::time_system (3 samples, 0.04%)</title><rect x="66.3272%" y="1221" width="0.0368%" height="15" fill="rgb(227,154,8)" fg:x="5405" fg:w="3"/><text x="66.5772%" y="1231.50"></text></g><g><title>bevy_core::time::time::Time::update (3 samples, 0.04%)</title><rect x="66.3272%" y="1205" width="0.0368%" height="15" fill="rgb(216,174,51)" fg:x="5405" fg:w="3"/><text x="66.5772%" y="1215.50"></text></g><g><title>bevy_core::time::time::Time::update_with_instant (3 samples, 0.04%)</title><rect x="66.3272%" y="1189" width="0.0368%" height="15" fill="rgb(239,60,34)" fg:x="5405" fg:w="3"/><text x="66.5772%" y="1199.50"></text></g><g><title>core::time::Duration::as_secs_f64 (3 samples, 0.04%)</title><rect x="66.3272%" y="1173" width="0.0368%" height="15" fill="rgb(236,165,48)" fg:x="5405" fg:w="3"/><text x="66.5772%" y="1183.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="66.3640%" y="1269" width="0.0123%" height="15" fill="rgb(210,37,26)" fg:x="5408" fg:w="1"/><text x="66.6140%" y="1279.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="66.3640%" y="1253" width="0.0123%" height="15" fill="rgb(211,3,17)" fg:x="5408" fg:w="1"/><text x="66.6140%" y="1263.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="66.3640%" y="1237" width="0.0123%" height="15" fill="rgb(234,88,49)" fg:x="5408" fg:w="1"/><text x="66.6140%" y="1247.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="66.3640%" y="1221" width="0.0123%" height="15" fill="rgb(233,40,17)" fg:x="5408" fg:w="1"/><text x="66.6140%" y="1231.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="66.3640%" y="1205" width="0.0123%" height="15" fill="rgb(235,127,31)" fg:x="5408" fg:w="1"/><text x="66.6140%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="66.3640%" y="1189" width="0.0123%" height="15" fill="rgb(248,167,17)" fg:x="5408" fg:w="1"/><text x="66.6140%" y="1199.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="66.3640%" y="1173" width="0.0123%" height="15" fill="rgb(218,179,8)" fg:x="5408" fg:w="1"/><text x="66.6140%" y="1183.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="66.3640%" y="1157" width="0.0123%" height="15" fill="rgb(216,92,14)" fg:x="5408" fg:w="1"/><text x="66.6140%" y="1167.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (1 samples, 0.01%)</title><rect x="66.3640%" y="1141" width="0.0123%" height="15" fill="rgb(221,198,46)" fg:x="5408" fg:w="1"/><text x="66.6140%" y="1151.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (6 samples, 0.07%)</title><rect x="66.3149%" y="1317" width="0.0736%" height="15" fill="rgb(244,7,25)" fg:x="5404" fg:w="6"/><text x="66.5649%" y="1327.50"></text></g><g><title>bevy_ecs::system::system::System::run (5 samples, 0.06%)</title><rect x="66.3272%" y="1301" width="0.0614%" height="15" fill="rgb(233,75,6)" fg:x="5405" fg:w="5"/><text x="66.5772%" y="1311.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (5 samples, 0.06%)</title><rect x="66.3272%" y="1285" width="0.0614%" height="15" fill="rgb(240,189,41)" fg:x="5405" fg:w="5"/><text x="66.5772%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="66.3762%" y="1269" width="0.0123%" height="15" fill="rgb(237,157,21)" fg:x="5409" fg:w="1"/><text x="66.6262%" y="1279.50"></text></g><g><title>bevy_ecs::world::World::cell (1 samples, 0.01%)</title><rect x="66.4008%" y="1269" width="0.0123%" height="15" fill="rgb(210,136,49)" fg:x="5411" fg:w="1"/><text x="66.6508%" y="1279.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::new (1 samples, 0.01%)</title><rect x="66.4008%" y="1253" width="0.0123%" height="15" fill="rgb(210,68,29)" fg:x="5411" fg:w="1"/><text x="66.6508%" y="1263.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="66.4008%" y="1237" width="0.0123%" height="15" fill="rgb(247,207,20)" fg:x="5411" fg:w="1"/><text x="66.6508%" y="1247.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="66.4008%" y="1221" width="0.0123%" height="15" fill="rgb(224,73,48)" fg:x="5411" fg:w="1"/><text x="66.6508%" y="1231.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_non_send (1 samples, 0.01%)</title><rect x="66.4131%" y="1269" width="0.0123%" height="15" fill="rgb(215,136,47)" fg:x="5412" fg:w="1"/><text x="66.6631%" y="1279.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="66.4131%" y="1253" width="0.0123%" height="15" fill="rgb(232,222,16)" fg:x="5412" fg:w="1"/><text x="66.6631%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="66.4131%" y="1237" width="0.0123%" height="15" fill="rgb(249,202,47)" fg:x="5412" fg:w="1"/><text x="66.6631%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="66.4131%" y="1221" width="0.0123%" height="15" fill="rgb(236,56,8)" fg:x="5412" fg:w="1"/><text x="66.6631%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="66.4131%" y="1205" width="0.0123%" height="15" fill="rgb(222,6,3)" fg:x="5412" fg:w="1"/><text x="66.6631%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="66.4131%" y="1189" width="0.0123%" height="15" fill="rgb(254,222,28)" fg:x="5412" fg:w="1"/><text x="66.6631%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="66.4131%" y="1173" width="0.0123%" height="15" fill="rgb(219,57,23)" fg:x="5412" fg:w="1"/><text x="66.6631%" y="1183.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (1 samples, 0.01%)</title><rect x="66.4253%" y="1269" width="0.0123%" height="15" fill="rgb(251,106,48)" fg:x="5413" fg:w="1"/><text x="66.6753%" y="1279.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="66.4253%" y="1253" width="0.0123%" height="15" fill="rgb(242,2,23)" fg:x="5413" fg:w="1"/><text x="66.6753%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="66.4253%" y="1237" width="0.0123%" height="15" fill="rgb(212,109,31)" fg:x="5413" fg:w="1"/><text x="66.6753%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="66.4253%" y="1221" width="0.0123%" height="15" fill="rgb(241,9,22)" fg:x="5413" fg:w="1"/><text x="66.6753%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="66.4253%" y="1205" width="0.0123%" height="15" fill="rgb(209,64,27)" fg:x="5413" fg:w="1"/><text x="66.6753%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="66.4253%" y="1189" width="0.0123%" height="15" fill="rgb(248,13,44)" fg:x="5413" fg:w="1"/><text x="66.6753%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="66.4253%" y="1173" width="0.0123%" height="15" fill="rgb(213,86,6)" fg:x="5413" fg:w="1"/><text x="66.6753%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="66.4253%" y="1157" width="0.0123%" height="15" fill="rgb(247,11,18)" fg:x="5413" fg:w="1"/><text x="66.6753%" y="1167.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="66.4253%" y="1141" width="0.0123%" height="15" fill="rgb(252,31,11)" fg:x="5413" fg:w="1"/><text x="66.6753%" y="1151.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="66.4253%" y="1125" width="0.0123%" height="15" fill="rgb(215,63,51)" fg:x="5413" fg:w="1"/><text x="66.6753%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="66.4253%" y="1109" width="0.0123%" height="15" fill="rgb(222,180,4)" fg:x="5413" fg:w="1"/><text x="66.6753%" y="1119.50"></text></g><g><title>bevy_audio::audio_output::play_queued_audio_system (5 samples, 0.06%)</title><rect x="66.4008%" y="1285" width="0.0614%" height="15" fill="rgb(233,4,23)" fg:x="5411" fg:w="5"/><text x="66.6508%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::world::world_cell::WorldCell&gt; (2 samples, 0.02%)</title><rect x="66.4376%" y="1269" width="0.0245%" height="15" fill="rgb(230,116,22)" fg:x="5414" fg:w="2"/><text x="66.6876%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;bevy_ecs::world::world_cell::ArchetypeComponentAccess&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="66.4376%" y="1253" width="0.0245%" height="15" fill="rgb(222,20,14)" fg:x="5414" fg:w="2"/><text x="66.6876%" y="1263.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="66.4376%" y="1237" width="0.0245%" height="15" fill="rgb(210,176,43)" fg:x="5414" fg:w="2"/><text x="66.6876%" y="1247.50"></text></g><g><title>alloc::rc::RcInnerPtr::dec_weak (2 samples, 0.02%)</title><rect x="66.4376%" y="1221" width="0.0245%" height="15" fill="rgb(219,67,32)" fg:x="5414" fg:w="2"/><text x="66.6876%" y="1231.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="66.4376%" y="1205" width="0.0245%" height="15" fill="rgb(228,91,39)" fg:x="5414" fg:w="2"/><text x="66.6876%" y="1215.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="66.4376%" y="1189" width="0.0245%" height="15" fill="rgb(254,63,14)" fg:x="5414" fg:w="2"/><text x="66.6876%" y="1199.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="66.4376%" y="1173" width="0.0245%" height="15" fill="rgb(216,171,39)" fg:x="5414" fg:w="2"/><text x="66.6876%" y="1183.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="66.4376%" y="1157" width="0.0245%" height="15" fill="rgb(248,68,25)" fg:x="5414" fg:w="2"/><text x="66.6876%" y="1167.50"></text></g><g><title>bevy_gilrs::gilrs_system::gilrs_event_system (1 samples, 0.01%)</title><rect x="66.4621%" y="1285" width="0.0123%" height="15" fill="rgb(239,63,16)" fg:x="5416" fg:w="1"/><text x="66.7121%" y="1295.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (1 samples, 0.01%)</title><rect x="66.4621%" y="1269" width="0.0123%" height="15" fill="rgb(225,111,43)" fg:x="5416" fg:w="1"/><text x="66.7121%" y="1279.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="66.4621%" y="1253" width="0.0123%" height="15" fill="rgb(246,165,17)" fg:x="5416" fg:w="1"/><text x="66.7121%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="66.4621%" y="1237" width="0.0123%" height="15" fill="rgb(208,124,1)" fg:x="5416" fg:w="1"/><text x="66.7121%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="66.4621%" y="1221" width="0.0123%" height="15" fill="rgb(234,147,33)" fg:x="5416" fg:w="1"/><text x="66.7121%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="66.4621%" y="1205" width="0.0123%" height="15" fill="rgb(240,86,30)" fg:x="5416" fg:w="1"/><text x="66.7121%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="66.4621%" y="1189" width="0.0123%" height="15" fill="rgb(237,34,51)" fg:x="5416" fg:w="1"/><text x="66.7121%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="66.4621%" y="1173" width="0.0123%" height="15" fill="rgb(232,131,41)" fg:x="5416" fg:w="1"/><text x="66.7121%" y="1183.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (1 samples, 0.01%)</title><rect x="66.4744%" y="1285" width="0.0123%" height="15" fill="rgb(227,129,53)" fg:x="5417" fg:w="1"/><text x="66.7244%" y="1295.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::take_schedule (1 samples, 0.01%)</title><rect x="66.4744%" y="1269" width="0.0123%" height="15" fill="rgb(230,90,35)" fg:x="5417" fg:w="1"/><text x="66.7244%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.01%)</title><rect x="66.4744%" y="1253" width="0.0123%" height="15" fill="rgb(248,88,27)" fg:x="5417" fg:w="1"/><text x="66.7244%" y="1263.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="66.4744%" y="1237" width="0.0123%" height="15" fill="rgb(223,18,17)" fg:x="5417" fg:w="1"/><text x="66.7244%" y="1247.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="66.4744%" y="1221" width="0.0123%" height="15" fill="rgb(241,11,10)" fg:x="5417" fg:w="1"/><text x="66.7244%" y="1231.50"></text></g><g><title>bevy_wgpu::get_wgpu_render_system::{{closure}} (1 samples, 0.01%)</title><rect x="66.4867%" y="1285" width="0.0123%" height="15" fill="rgb(232,111,52)" fg:x="5418" fg:w="1"/><text x="66.7367%" y="1295.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="66.5112%" y="1109" width="0.0123%" height="15" fill="rgb(228,67,8)" fg:x="5420" fg:w="1"/><text x="66.7612%" y="1119.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (1 samples, 0.01%)</title><rect x="66.5112%" y="1093" width="0.0123%" height="15" fill="rgb(251,168,31)" fg:x="5420" fg:w="1"/><text x="66.7612%" y="1103.50"></text></g><g><title>&lt;wgpu::TextureView as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="66.5235%" y="1093" width="0.0123%" height="15" fill="rgb(249,164,11)" fg:x="5421" fg:w="1"/><text x="66.7735%" y="1103.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (3 samples, 0.04%)</title><rect x="66.5112%" y="1269" width="0.0368%" height="15" fill="rgb(239,81,9)" fg:x="5420" fg:w="3"/><text x="66.7612%" y="1279.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (3 samples, 0.04%)</title><rect x="66.5112%" y="1253" width="0.0368%" height="15" fill="rgb(222,145,38)" fg:x="5420" fg:w="3"/><text x="66.7612%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (3 samples, 0.04%)</title><rect x="66.5112%" y="1237" width="0.0368%" height="15" fill="rgb(238,80,54)" fg:x="5420" fg:w="3"/><text x="66.7612%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (3 samples, 0.04%)</title><rect x="66.5112%" y="1221" width="0.0368%" height="15" fill="rgb(237,116,16)" fg:x="5420" fg:w="3"/><text x="66.7612%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (3 samples, 0.04%)</title><rect x="66.5112%" y="1205" width="0.0368%" height="15" fill="rgb(218,135,19)" fg:x="5420" fg:w="3"/><text x="66.7612%" y="1215.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.04%)</title><rect x="66.5112%" y="1189" width="0.0368%" height="15" fill="rgb(216,207,44)" fg:x="5420" fg:w="3"/><text x="66.7612%" y="1199.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.04%)</title><rect x="66.5112%" y="1173" width="0.0368%" height="15" fill="rgb(226,152,40)" fg:x="5420" fg:w="3"/><text x="66.7612%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (3 samples, 0.04%)</title><rect x="66.5112%" y="1157" width="0.0368%" height="15" fill="rgb(219,98,35)" fg:x="5420" fg:w="3"/><text x="66.7612%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (3 samples, 0.04%)</title><rect x="66.5112%" y="1141" width="0.0368%" height="15" fill="rgb(222,136,46)" fg:x="5420" fg:w="3"/><text x="66.7612%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (3 samples, 0.04%)</title><rect x="66.5112%" y="1125" width="0.0368%" height="15" fill="rgb(222,71,8)" fg:x="5420" fg:w="3"/><text x="66.7612%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::TextureView&gt; (2 samples, 0.02%)</title><rect x="66.5235%" y="1109" width="0.0245%" height="15" fill="rgb(209,89,53)" fg:x="5421" fg:w="2"/><text x="66.7735%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::backend::direct::Context&gt;&gt; (1 samples, 0.01%)</title><rect x="66.5358%" y="1093" width="0.0123%" height="15" fill="rgb(210,97,51)" fg:x="5422" fg:w="1"/><text x="66.7858%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="66.5358%" y="1077" width="0.0123%" height="15" fill="rgb(248,65,21)" fg:x="5422" fg:w="1"/><text x="66.7858%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="66.5358%" y="1061" width="0.0123%" height="15" fill="rgb(222,5,31)" fg:x="5422" fg:w="1"/><text x="66.7858%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="66.5358%" y="1045" width="0.0123%" height="15" fill="rgb(241,16,30)" fg:x="5422" fg:w="1"/><text x="66.7858%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="66.5726%" y="1173" width="0.0245%" height="15" fill="rgb(215,86,30)" fg:x="5425" fg:w="2"/><text x="66.8226%" y="1183.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="66.5726%" y="1157" width="0.0245%" height="15" fill="rgb(235,26,44)" fg:x="5425" fg:w="2"/><text x="66.8226%" y="1167.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (4 samples, 0.05%)</title><rect x="66.5726%" y="1221" width="0.0491%" height="15" fill="rgb(228,147,14)" fg:x="5425" fg:w="4"/><text x="66.8226%" y="1231.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (4 samples, 0.05%)</title><rect x="66.5726%" y="1205" width="0.0491%" height="15" fill="rgb(253,38,50)" fg:x="5425" fg:w="4"/><text x="66.8226%" y="1215.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (4 samples, 0.05%)</title><rect x="66.5726%" y="1189" width="0.0491%" height="15" fill="rgb(251,151,16)" fg:x="5425" fg:w="4"/><text x="66.8226%" y="1199.50"></text></g><g><title>core::sync::atomic::fence (2 samples, 0.02%)</title><rect x="66.5971%" y="1173" width="0.0245%" height="15" fill="rgb(224,64,19)" fg:x="5427" fg:w="2"/><text x="66.8471%" y="1183.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.01%)</title><rect x="66.6217%" y="1221" width="0.0123%" height="15" fill="rgb(235,214,47)" fg:x="5429" fg:w="1"/><text x="66.8717%" y="1231.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.01%)</title><rect x="66.6217%" y="1205" width="0.0123%" height="15" fill="rgb(218,15,19)" fg:x="5429" fg:w="1"/><text x="66.8717%" y="1215.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="66.6217%" y="1189" width="0.0123%" height="15" fill="rgb(247,209,3)" fg:x="5429" fg:w="1"/><text x="66.8717%" y="1199.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="66.6217%" y="1173" width="0.0123%" height="15" fill="rgb(217,29,2)" fg:x="5429" fg:w="1"/><text x="66.8717%" y="1183.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="66.6339%" y="1221" width="0.0123%" height="15" fill="rgb(234,9,9)" fg:x="5430" fg:w="1"/><text x="66.8839%" y="1231.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="66.6339%" y="1205" width="0.0123%" height="15" fill="rgb(207,43,14)" fg:x="5430" fg:w="1"/><text x="66.8839%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="66.6339%" y="1189" width="0.0123%" height="15" fill="rgb(216,219,36)" fg:x="5430" fg:w="1"/><text x="66.8839%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="66.6339%" y="1173" width="0.0123%" height="15" fill="rgb(238,12,26)" fg:x="5430" fg:w="1"/><text x="66.8839%" y="1183.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="66.6339%" y="1157" width="0.0123%" height="15" fill="rgb(226,67,30)" fg:x="5430" fg:w="1"/><text x="66.8839%" y="1167.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="66.6339%" y="1141" width="0.0123%" height="15" fill="rgb(229,154,7)" fg:x="5430" fg:w="1"/><text x="66.8839%" y="1151.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="66.6339%" y="1125" width="0.0123%" height="15" fill="rgb(249,90,18)" fg:x="5430" fg:w="1"/><text x="66.8839%" y="1135.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="66.6339%" y="1109" width="0.0123%" height="15" fill="rgb(223,53,15)" fg:x="5430" fg:w="1"/><text x="66.8839%" y="1119.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="66.6339%" y="1093" width="0.0123%" height="15" fill="rgb(253,86,38)" fg:x="5430" fg:w="1"/><text x="66.8839%" y="1103.50"></text></g><g><title>bevy_wgpu::wgpu_resources::BindGroupCounter::remove_stale_bind_groups::{{closure}} (2 samples, 0.02%)</title><rect x="66.6462%" y="1189" width="0.0245%" height="15" fill="rgb(222,198,9)" fg:x="5431" fg:w="2"/><text x="66.8962%" y="1199.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::remove_stale_bind_groups (11 samples, 0.13%)</title><rect x="66.5480%" y="1269" width="0.1350%" height="15" fill="rgb(240,146,25)" fg:x="5423" fg:w="11"/><text x="66.7980%" y="1279.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::remove_stale_bind_groups (11 samples, 0.13%)</title><rect x="66.5480%" y="1253" width="0.1350%" height="15" fill="rgb(225,38,10)" fg:x="5423" fg:w="11"/><text x="66.7980%" y="1263.50"></text></g><g><title>bevy_wgpu::wgpu_resources::BindGroupCounter::remove_stale_bind_groups (10 samples, 0.12%)</title><rect x="66.5603%" y="1237" width="0.1227%" height="15" fill="rgb(246,93,4)" fg:x="5424" fg:w="10"/><text x="66.8103%" y="1247.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::retain (3 samples, 0.04%)</title><rect x="66.6462%" y="1221" width="0.0368%" height="15" fill="rgb(222,55,18)" fg:x="5431" fg:w="3"/><text x="66.8962%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (3 samples, 0.04%)</title><rect x="66.6462%" y="1205" width="0.0368%" height="15" fill="rgb(233,137,48)" fg:x="5431" fg:w="3"/><text x="66.8962%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="66.6708%" y="1189" width="0.0123%" height="15" fill="rgb(214,8,54)" fg:x="5433" fg:w="1"/><text x="66.9208%" y="1199.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="66.6708%" y="1173" width="0.0123%" height="15" fill="rgb(206,75,4)" fg:x="5433" fg:w="1"/><text x="66.9208%" y="1183.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="66.6708%" y="1157" width="0.0123%" height="15" fill="rgb(238,171,14)" fg:x="5433" fg:w="1"/><text x="66.9208%" y="1167.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="66.6708%" y="1141" width="0.0123%" height="15" fill="rgb(233,70,41)" fg:x="5433" fg:w="1"/><text x="66.9208%" y="1151.50"></text></g><g><title>bevy_ecs::world::World::get_resource (1 samples, 0.01%)</title><rect x="66.6830%" y="1269" width="0.0123%" height="15" fill="rgb(214,68,36)" fg:x="5434" fg:w="1"/><text x="66.9330%" y="1279.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="66.6830%" y="1253" width="0.0123%" height="15" fill="rgb(223,29,5)" fg:x="5434" fg:w="1"/><text x="66.9330%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="66.6830%" y="1237" width="0.0123%" height="15" fill="rgb(251,22,40)" fg:x="5434" fg:w="1"/><text x="66.9330%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="66.6830%" y="1221" width="0.0123%" height="15" fill="rgb(210,67,41)" fg:x="5434" fg:w="1"/><text x="66.9330%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="66.6830%" y="1205" width="0.0123%" height="15" fill="rgb(225,177,31)" fg:x="5434" fg:w="1"/><text x="66.9330%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="66.6830%" y="1189" width="0.0123%" height="15" fill="rgb(221,229,11)" fg:x="5434" fg:w="1"/><text x="66.9330%" y="1199.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="66.6830%" y="1173" width="0.0123%" height="15" fill="rgb(247,172,52)" fg:x="5434" fg:w="1"/><text x="66.9330%" y="1183.50"></text></g><g><title>bevy_app::event::ManualEventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="66.6953%" y="1253" width="0.0123%" height="15" fill="rgb(212,73,19)" fg:x="5435" fg:w="1"/><text x="66.9453%" y="1263.50"></text></g><g><title>bevy_app::event::internal_event_reader (1 samples, 0.01%)</title><rect x="66.6953%" y="1237" width="0.0123%" height="15" fill="rgb(244,7,46)" fg:x="5435" fg:w="1"/><text x="66.9453%" y="1247.50"></text></g><g><title>bevy_ecs::archetype::Archetype::get_archetype_component_id (1 samples, 0.01%)</title><rect x="66.7076%" y="1237" width="0.0123%" height="15" fill="rgb(230,113,20)" fg:x="5436" fg:w="1"/><text x="66.9576%" y="1247.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="66.7076%" y="1221" width="0.0123%" height="15" fill="rgb(209,97,30)" fg:x="5436" fg:w="1"/><text x="66.9576%" y="1231.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="66.7076%" y="1205" width="0.0123%" height="15" fill="rgb(243,89,12)" fg:x="5436" fg:w="1"/><text x="66.9576%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="66.7076%" y="1189" width="0.0123%" height="15" fill="rgb(228,32,19)" fg:x="5436" fg:w="1"/><text x="66.9576%" y="1199.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="66.7076%" y="1173" width="0.0123%" height="15" fill="rgb(248,25,17)" fg:x="5436" fg:w="1"/><text x="66.9576%" y="1183.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="66.7076%" y="1157" width="0.0123%" height="15" fill="rgb(232,161,29)" fg:x="5436" fg:w="1"/><text x="66.9576%" y="1167.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource (2 samples, 0.02%)</title><rect x="66.7076%" y="1253" width="0.0245%" height="15" fill="rgb(251,192,11)" fg:x="5436" fg:w="2"/><text x="66.9576%" y="1263.50"></text></g><g><title>bevy_ecs::world::World::get_resource_with_id (1 samples, 0.01%)</title><rect x="66.7198%" y="1237" width="0.0123%" height="15" fill="rgb(240,47,32)" fg:x="5437" fg:w="1"/><text x="66.9698%" y="1247.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="66.7198%" y="1221" width="0.0123%" height="15" fill="rgb(250,16,45)" fg:x="5437" fg:w="1"/><text x="66.9698%" y="1231.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="66.7198%" y="1205" width="0.0123%" height="15" fill="rgb(227,217,42)" fg:x="5437" fg:w="1"/><text x="66.9698%" y="1215.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="66.7198%" y="1189" width="0.0123%" height="15" fill="rgb(206,82,54)" fg:x="5437" fg:w="1"/><text x="66.9698%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="66.7198%" y="1173" width="0.0123%" height="15" fill="rgb(243,145,25)" fg:x="5437" fg:w="1"/><text x="66.9698%" y="1183.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="66.7198%" y="1157" width="0.0123%" height="15" fill="rgb(207,166,24)" fg:x="5437" fg:w="1"/><text x="66.9698%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="66.7198%" y="1141" width="0.0123%" height="15" fill="rgb(215,191,44)" fg:x="5437" fg:w="1"/><text x="66.9698%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.01%)</title><rect x="66.7321%" y="1253" width="0.0123%" height="15" fill="rgb(234,218,51)" fg:x="5438" fg:w="1"/><text x="66.9821%" y="1263.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::handle_window_created_events (5 samples, 0.06%)</title><rect x="66.6953%" y="1269" width="0.0614%" height="15" fill="rgb(245,133,21)" fg:x="5435" fg:w="5"/><text x="66.9453%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::world::world_cell::WorldBorrow&lt;bevy_window::windows::Windows&gt;&gt; (1 samples, 0.01%)</title><rect x="66.7444%" y="1253" width="0.0123%" height="15" fill="rgb(230,136,45)" fg:x="5439" fg:w="1"/><text x="66.9944%" y="1263.50"></text></g><g><title>&lt;bevy_ecs::world::world_cell::WorldBorrow&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="66.7444%" y="1237" width="0.0123%" height="15" fill="rgb(247,63,43)" fg:x="5439" fg:w="1"/><text x="66.9944%" y="1247.50"></text></g><g><title>bevy_ecs::storage::table::Column::push_uninit (1 samples, 0.01%)</title><rect x="66.7567%" y="1237" width="0.0123%" height="15" fill="rgb(254,223,31)" fg:x="5440" fg:w="1"/><text x="67.0067%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="66.7567%" y="1221" width="0.0123%" height="15" fill="rgb(236,185,0)" fg:x="5440" fg:w="1"/><text x="67.0067%" y="1231.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="66.7567%" y="1205" width="0.0123%" height="15" fill="rgb(231,139,46)" fg:x="5440" fg:w="1"/><text x="67.0067%" y="1215.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (1 samples, 0.01%)</title><rect x="66.7689%" y="1237" width="0.0123%" height="15" fill="rgb(236,147,31)" fg:x="5441" fg:w="1"/><text x="67.0189%" y="1247.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (1 samples, 0.01%)</title><rect x="66.7689%" y="1221" width="0.0123%" height="15" fill="rgb(225,222,22)" fg:x="5441" fg:w="1"/><text x="67.0189%" y="1231.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="66.7689%" y="1205" width="0.0123%" height="15" fill="rgb(225,193,14)" fg:x="5441" fg:w="1"/><text x="67.0189%" y="1215.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="66.7689%" y="1189" width="0.0123%" height="15" fill="rgb(253,193,46)" fg:x="5441" fg:w="1"/><text x="67.0189%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="66.7812%" y="1141" width="0.0245%" height="15" fill="rgb(218,187,39)" fg:x="5442" fg:w="2"/><text x="67.0312%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::OrderedJobBorrow]&gt; (2 samples, 0.02%)</title><rect x="66.7812%" y="1125" width="0.0245%" height="15" fill="rgb(227,162,48)" fg:x="5442" fg:w="2"/><text x="67.0312%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::OrderedJobBorrow&gt; (2 samples, 0.02%)</title><rect x="66.7812%" y="1109" width="0.0245%" height="15" fill="rgb(222,25,5)" fg:x="5442" fg:w="2"/><text x="67.0312%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;mut bevy_render::render_graph::node::NodeState&gt;&gt; (2 samples, 0.02%)</title><rect x="66.7812%" y="1093" width="0.0245%" height="15" fill="rgb(211,205,16)" fg:x="5442" fg:w="2"/><text x="67.0312%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;mut bevy_render::render_graph::node::NodeState&gt;&gt; (2 samples, 0.02%)</title><rect x="66.7812%" y="1077" width="0.0245%" height="15" fill="rgb(244,191,2)" fg:x="5442" fg:w="2"/><text x="67.0312%" y="1087.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="66.7812%" y="1061" width="0.0245%" height="15" fill="rgb(248,159,12)" fg:x="5442" fg:w="2"/><text x="67.0312%" y="1071.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="66.7812%" y="1045" width="0.0245%" height="15" fill="rgb(235,204,17)" fg:x="5442" fg:w="2"/><text x="67.0312%" y="1055.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="66.7812%" y="1029" width="0.0245%" height="15" fill="rgb(240,21,27)" fg:x="5442" fg:w="2"/><text x="67.0312%" y="1039.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="66.7812%" y="1013" width="0.0245%" height="15" fill="rgb(224,170,31)" fg:x="5442" fg:w="2"/><text x="67.0312%" y="1023.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="66.7812%" y="997" width="0.0245%" height="15" fill="rgb(223,145,32)" fg:x="5442" fg:w="2"/><text x="67.0312%" y="1007.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="66.7812%" y="981" width="0.0245%" height="15" fill="rgb(243,100,5)" fg:x="5442" fg:w="2"/><text x="67.0312%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::StageBorrow&gt;&gt; (3 samples, 0.04%)</title><rect x="66.7812%" y="1221" width="0.0368%" height="15" fill="rgb(242,131,51)" fg:x="5442" fg:w="3"/><text x="67.0312%" y="1231.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="66.7812%" y="1205" width="0.0368%" height="15" fill="rgb(223,156,46)" fg:x="5442" fg:w="3"/><text x="67.0312%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::StageBorrow]&gt; (3 samples, 0.04%)</title><rect x="66.7812%" y="1189" width="0.0368%" height="15" fill="rgb(215,10,40)" fg:x="5442" fg:w="3"/><text x="67.0312%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::StageBorrow&gt; (3 samples, 0.04%)</title><rect x="66.7812%" y="1173" width="0.0368%" height="15" fill="rgb(233,155,0)" fg:x="5442" fg:w="3"/><text x="67.0312%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::OrderedJobBorrow&gt;&gt; (3 samples, 0.04%)</title><rect x="66.7812%" y="1157" width="0.0368%" height="15" fill="rgb(247,78,6)" fg:x="5442" fg:w="3"/><text x="67.0312%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_render::render_graph::schedule::OrderedJobBorrow&gt;&gt; (1 samples, 0.01%)</title><rect x="66.8057%" y="1141" width="0.0123%" height="15" fill="rgb(237,217,21)" fg:x="5444" fg:w="1"/><text x="67.0557%" y="1151.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="66.8057%" y="1125" width="0.0123%" height="15" fill="rgb(212,1,21)" fg:x="5444" fg:w="1"/><text x="67.0557%" y="1135.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="66.8057%" y="1109" width="0.0123%" height="15" fill="rgb(213,7,14)" fg:x="5444" fg:w="1"/><text x="67.0557%" y="1119.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (30 samples, 0.37%)</title><rect x="66.4990%" y="1285" width="0.3681%" height="15" fill="rgb(225,84,14)" fg:x="5419" fg:w="30"/><text x="66.7490%" y="1295.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (9 samples, 0.11%)</title><rect x="66.7567%" y="1269" width="0.1104%" height="15" fill="rgb(239,216,39)" fg:x="5440" fg:w="9"/><text x="67.0067%" y="1279.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (9 samples, 0.11%)</title><rect x="66.7567%" y="1253" width="0.1104%" height="15" fill="rgb(253,29,23)" fg:x="5440" fg:w="9"/><text x="67.0067%" y="1263.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (7 samples, 0.09%)</title><rect x="66.7812%" y="1237" width="0.0859%" height="15" fill="rgb(220,167,50)" fg:x="5442" fg:w="7"/><text x="67.0312%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::Stages&gt; (4 samples, 0.05%)</title><rect x="66.8180%" y="1221" width="0.0491%" height="15" fill="rgb(232,141,1)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::Stage&gt;&gt; (4 samples, 0.05%)</title><rect x="66.8180%" y="1205" width="0.0491%" height="15" fill="rgb(222,210,1)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="66.8180%" y="1189" width="0.0491%" height="15" fill="rgb(219,84,10)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::Stage]&gt; (4 samples, 0.05%)</title><rect x="66.8180%" y="1173" width="0.0491%" height="15" fill="rgb(245,188,6)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::Stage&gt; (4 samples, 0.05%)</title><rect x="66.8180%" y="1157" width="0.0491%" height="15" fill="rgb(252,139,39)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::OrderedJob&gt;&gt; (4 samples, 0.05%)</title><rect x="66.8180%" y="1141" width="0.0491%" height="15" fill="rgb(218,42,26)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="66.8180%" y="1125" width="0.0491%" height="15" fill="rgb(237,226,51)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::OrderedJob]&gt; (4 samples, 0.05%)</title><rect x="66.8180%" y="1109" width="0.0491%" height="15" fill="rgb(246,15,17)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::OrderedJob&gt; (4 samples, 0.05%)</title><rect x="66.8180%" y="1093" width="0.0491%" height="15" fill="rgb(228,170,42)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::node::NodeId&gt;&gt; (4 samples, 0.05%)</title><rect x="66.8180%" y="1077" width="0.0491%" height="15" fill="rgb(248,118,53)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_render::render_graph::node::NodeId&gt;&gt; (4 samples, 0.05%)</title><rect x="66.8180%" y="1061" width="0.0491%" height="15" fill="rgb(207,30,10)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1071.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="66.8180%" y="1045" width="0.0491%" height="15" fill="rgb(217,104,38)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.05%)</title><rect x="66.8180%" y="1029" width="0.0491%" height="15" fill="rgb(211,165,26)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1039.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.05%)</title><rect x="66.8180%" y="1013" width="0.0491%" height="15" fill="rgb(247,38,9)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1023.50"></text></g><g><title>__rdl_dealloc (4 samples, 0.05%)</title><rect x="66.8180%" y="997" width="0.0491%" height="15" fill="rgb(218,187,8)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="1007.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (4 samples, 0.05%)</title><rect x="66.8180%" y="981" width="0.0491%" height="15" fill="rgb(247,94,28)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="991.50"></text></g><g><title>__GI___libc_free (4 samples, 0.05%)</title><rect x="66.8180%" y="965" width="0.0491%" height="15" fill="rgb(218,173,30)" fg:x="5445" fg:w="4"/><text x="67.0680%" y="975.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (41 samples, 0.50%)</title><rect x="66.3885%" y="1317" width="0.5031%" height="15" fill="rgb(245,45,36)" fg:x="5410" fg:w="41"/><text x="66.6385%" y="1327.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (40 samples, 0.49%)</title><rect x="66.4008%" y="1301" width="0.4909%" height="15" fill="rgb(221,172,44)" fg:x="5411" fg:w="40"/><text x="66.6508%" y="1311.50"></text></g><g><title>core::ops::function::FnMut::call_mut (2 samples, 0.02%)</title><rect x="66.8671%" y="1285" width="0.0245%" height="15" fill="rgb(222,45,12)" fg:x="5449" fg:w="2"/><text x="67.1171%" y="1295.50"></text></g><g><title>bevy_ecs::world::World::clear_trackers (1 samples, 0.01%)</title><rect x="66.8794%" y="1269" width="0.0123%" height="15" fill="rgb(250,10,22)" fg:x="5450" fg:w="1"/><text x="67.1294%" y="1279.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::values_mut (1 samples, 0.01%)</title><rect x="66.8794%" y="1253" width="0.0123%" height="15" fill="rgb(239,27,0)" fg:x="5450" fg:w="1"/><text x="67.1294%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="66.8794%" y="1237" width="0.0123%" height="15" fill="rgb(223,118,22)" fg:x="5450" fg:w="1"/><text x="67.1294%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="66.8916%" y="1317" width="0.0123%" height="15" fill="rgb(251,81,25)" fg:x="5451" fg:w="1"/><text x="67.1416%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="66.8916%" y="1301" width="0.0123%" height="15" fill="rgb(237,225,53)" fg:x="5451" fg:w="1"/><text x="67.1416%" y="1311.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="66.9039%" y="1317" width="0.0245%" height="15" fill="rgb(237,186,51)" fg:x="5452" fg:w="2"/><text x="67.1539%" y="1327.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (103 samples, 1.26%)</title><rect x="65.6768%" y="1333" width="1.2640%" height="15" fill="rgb(247,209,11)" fg:x="5352" fg:w="103"/><text x="65.9268%" y="1343.50"></text></g><g><title>bevy_ecs::schedule::stage::SystemStage::rebuild_orders_and_dependencies (1 samples, 0.01%)</title><rect x="66.9285%" y="1317" width="0.0123%" height="15" fill="rgb(223,109,27)" fg:x="5454" fg:w="1"/><text x="67.1785%" y="1327.50"></text></g><g><title>bevy_ecs::schedule::stage::process_systems (1 samples, 0.01%)</title><rect x="66.9285%" y="1301" width="0.0123%" height="15" fill="rgb(246,181,13)" fg:x="5454" fg:w="1"/><text x="67.1785%" y="1311.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::sort_unstable_by_key (1 samples, 0.01%)</title><rect x="66.9285%" y="1285" width="0.0123%" height="15" fill="rgb(234,57,44)" fg:x="5454" fg:w="1"/><text x="67.1785%" y="1295.50"></text></g><g><title>core::slice::sort::quicksort (1 samples, 0.01%)</title><rect x="66.9285%" y="1269" width="0.0123%" height="15" fill="rgb(211,227,50)" fg:x="5454" fg:w="1"/><text x="67.1785%" y="1279.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.01%)</title><rect x="66.9285%" y="1253" width="0.0123%" height="15" fill="rgb(254,57,34)" fg:x="5454" fg:w="1"/><text x="67.1785%" y="1263.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.01%)</title><rect x="66.9285%" y="1237" width="0.0123%" height="15" fill="rgb(227,212,26)" fg:x="5454" fg:w="1"/><text x="67.1785%" y="1247.50"></text></g><g><title>core::slice::sort::insertion_sort (1 samples, 0.01%)</title><rect x="66.9285%" y="1221" width="0.0123%" height="15" fill="rgb(244,169,44)" fg:x="5454" fg:w="1"/><text x="67.1785%" y="1231.50"></text></g><g><title>core::slice::sort::recurse (1 samples, 0.01%)</title><rect x="66.9285%" y="1205" width="0.0123%" height="15" fill="rgb(236,135,50)" fg:x="5454" fg:w="1"/><text x="67.1785%" y="1215.50"></text></g><g><title>&lt;bevy_app::CoreStage as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="66.9530%" y="1221" width="0.0491%" height="15" fill="rgb(241,89,30)" fg:x="5456" fg:w="4"/><text x="67.2030%" y="1231.50"></text></g><g><title>&lt;bevy_render::RenderStage as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="67.0021%" y="1221" width="0.0123%" height="15" fill="rgb(206,113,34)" fg:x="5460" fg:w="1"/><text x="67.2521%" y="1231.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.09%)</title><rect x="66.9407%" y="1285" width="0.0859%" height="15" fill="rgb(218,104,52)" fg:x="5455" fg:w="7"/><text x="67.1907%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (7 samples, 0.09%)</title><rect x="66.9407%" y="1269" width="0.0859%" height="15" fill="rgb(223,82,32)" fg:x="5455" fg:w="7"/><text x="67.1907%" y="1279.50"></text></g><g><title>&lt;dyn bevy_ecs::schedule::label::StageLabel as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="66.9530%" y="1253" width="0.0736%" height="15" fill="rgb(249,219,30)" fg:x="5456" fg:w="6"/><text x="67.2030%" y="1263.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynHash&gt;::dyn_hash (6 samples, 0.07%)</title><rect x="66.9530%" y="1237" width="0.0736%" height="15" fill="rgb(233,141,21)" fg:x="5456" fg:w="6"/><text x="67.2030%" y="1247.50"></text></g><g><title>&lt;core::any::TypeId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="67.0144%" y="1221" width="0.0123%" height="15" fill="rgb(252,87,44)" fg:x="5461" fg:w="1"/><text x="67.2644%" y="1231.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.01%)</title><rect x="67.0144%" y="1205" width="0.0123%" height="15" fill="rgb(229,48,33)" fg:x="5461" fg:w="1"/><text x="67.2644%" y="1215.50"></text></g><g><title>&lt;&amp;mut H as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="67.0144%" y="1189" width="0.0123%" height="15" fill="rgb(229,23,22)" fg:x="5461" fg:w="1"/><text x="67.2644%" y="1199.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (3 samples, 0.04%)</title><rect x="67.0512%" y="1189" width="0.0368%" height="15" fill="rgb(244,116,16)" fg:x="5464" fg:w="3"/><text x="67.3012%" y="1199.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (3 samples, 0.04%)</title><rect x="67.0512%" y="1173" width="0.0368%" height="15" fill="rgb(247,45,10)" fg:x="5464" fg:w="3"/><text x="67.3012%" y="1183.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (3 samples, 0.04%)</title><rect x="67.0512%" y="1157" width="0.0368%" height="15" fill="rgb(228,60,29)" fg:x="5464" fg:w="3"/><text x="67.3012%" y="1167.50"></text></g><g><title>bevy_app::app::App::update (118 samples, 1.45%)</title><rect x="65.6645%" y="1381" width="1.4480%" height="15" fill="rgb(205,129,15)" fg:x="5351" fg:w="118"/><text x="65.9145%" y="1391.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (117 samples, 1.44%)</title><rect x="65.6768%" y="1365" width="1.4358%" height="15" fill="rgb(206,229,4)" fg:x="5352" fg:w="117"/><text x="65.9268%" y="1375.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (117 samples, 1.44%)</title><rect x="65.6768%" y="1349" width="1.4358%" height="15" fill="rgb(249,191,30)" fg:x="5352" fg:w="117"/><text x="65.9268%" y="1359.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (14 samples, 0.17%)</title><rect x="66.9407%" y="1333" width="0.1718%" height="15" fill="rgb(250,84,54)" fg:x="5455" fg:w="14"/><text x="67.1907%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (14 samples, 0.17%)</title><rect x="66.9407%" y="1317" width="0.1718%" height="15" fill="rgb(207,25,53)" fg:x="5455" fg:w="14"/><text x="67.1907%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (14 samples, 0.17%)</title><rect x="66.9407%" y="1301" width="0.1718%" height="15" fill="rgb(235,40,8)" fg:x="5455" fg:w="14"/><text x="67.1907%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (7 samples, 0.09%)</title><rect x="67.0266%" y="1285" width="0.0859%" height="15" fill="rgb(226,169,33)" fg:x="5462" fg:w="7"/><text x="67.2766%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (7 samples, 0.09%)</title><rect x="67.0266%" y="1269" width="0.0859%" height="15" fill="rgb(238,110,8)" fg:x="5462" fg:w="7"/><text x="67.2766%" y="1279.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.09%)</title><rect x="67.0266%" y="1253" width="0.0859%" height="15" fill="rgb(251,206,12)" fg:x="5462" fg:w="7"/><text x="67.2766%" y="1263.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (5 samples, 0.06%)</title><rect x="67.0512%" y="1237" width="0.0614%" height="15" fill="rgb(248,171,18)" fg:x="5464" fg:w="5"/><text x="67.3012%" y="1247.50"></text></g><g><title>&lt;dyn bevy_ecs::schedule::label::StageLabel as core::cmp::PartialEq&gt;::eq (5 samples, 0.06%)</title><rect x="67.0512%" y="1221" width="0.0614%" height="15" fill="rgb(213,65,46)" fg:x="5464" fg:w="5"/><text x="67.3012%" y="1231.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynEq&gt;::dyn_eq (5 samples, 0.06%)</title><rect x="67.0512%" y="1205" width="0.0614%" height="15" fill="rgb(211,154,15)" fg:x="5464" fg:w="5"/><text x="67.3012%" y="1215.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="67.0880%" y="1189" width="0.0245%" height="15" fill="rgb(217,75,43)" fg:x="5467" fg:w="2"/><text x="67.3380%" y="1199.50"></text></g><g><title>&lt;bevy_app::CoreStage as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="67.0880%" y="1173" width="0.0245%" height="15" fill="rgb(230,32,33)" fg:x="5467" fg:w="2"/><text x="67.3380%" y="1183.50"></text></g><g><title>bevy_ecs::world::World::get_resource_mut (1 samples, 0.01%)</title><rect x="67.1125%" y="1381" width="0.0123%" height="15" fill="rgb(221,100,16)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1391.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut (1 samples, 0.01%)</title><rect x="67.1125%" y="1365" width="0.0123%" height="15" fill="rgb(212,129,47)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1375.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="67.1125%" y="1349" width="0.0123%" height="15" fill="rgb(239,217,47)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1359.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="67.1125%" y="1333" width="0.0123%" height="15" fill="rgb(230,84,24)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="67.1125%" y="1317" width="0.0123%" height="15" fill="rgb(214,153,51)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="67.1125%" y="1301" width="0.0123%" height="15" fill="rgb(231,6,35)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="67.1125%" y="1285" width="0.0123%" height="15" fill="rgb(229,122,30)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="67.1125%" y="1269" width="0.0123%" height="15" fill="rgb(234,71,10)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="67.1125%" y="1253" width="0.0123%" height="15" fill="rgb(215,173,26)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1263.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="67.1125%" y="1237" width="0.0123%" height="15" fill="rgb(248,118,52)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1247.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="67.1125%" y="1221" width="0.0123%" height="15" fill="rgb(237,55,46)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1231.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="67.1125%" y="1205" width="0.0123%" height="15" fill="rgb(243,214,43)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1215.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="67.1125%" y="1189" width="0.0123%" height="15" fill="rgb(252,123,30)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1199.50"></text></g><g><title>bevy_winit::winit_runner_with::_{{closure}} (1 samples, 0.01%)</title><rect x="67.1125%" y="1173" width="0.0123%" height="15" fill="rgb(215,73,39)" fg:x="5469" fg:w="1"/><text x="67.3625%" y="1183.50"></text></g><g><title>bevy_ecs::world::World::cell (1 samples, 0.01%)</title><rect x="67.1248%" y="1365" width="0.0123%" height="15" fill="rgb(251,194,29)" fg:x="5470" fg:w="1"/><text x="67.3748%" y="1375.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::new (1 samples, 0.01%)</title><rect x="67.1248%" y="1349" width="0.0123%" height="15" fill="rgb(224,58,52)" fg:x="5470" fg:w="1"/><text x="67.3748%" y="1359.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="67.1248%" y="1333" width="0.0123%" height="15" fill="rgb(248,106,46)" fg:x="5470" fg:w="1"/><text x="67.3748%" y="1343.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="67.1248%" y="1317" width="0.0123%" height="15" fill="rgb(223,80,29)" fg:x="5470" fg:w="1"/><text x="67.3748%" y="1327.50"></text></g><g><title>bevy_ecs::archetype::Archetype::get_archetype_component_id (3 samples, 0.04%)</title><rect x="67.1616%" y="1349" width="0.0368%" height="15" fill="rgb(243,137,9)" fg:x="5473" fg:w="3"/><text x="67.4116%" y="1359.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (3 samples, 0.04%)</title><rect x="67.1616%" y="1333" width="0.0368%" height="15" fill="rgb(235,121,28)" fg:x="5473" fg:w="3"/><text x="67.4116%" y="1343.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (3 samples, 0.04%)</title><rect x="67.1616%" y="1317" width="0.0368%" height="15" fill="rgb(219,121,41)" fg:x="5473" fg:w="3"/><text x="67.4116%" y="1327.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.04%)</title><rect x="67.1616%" y="1301" width="0.0368%" height="15" fill="rgb(251,60,6)" fg:x="5473" fg:w="3"/><text x="67.4116%" y="1311.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (3 samples, 0.04%)</title><rect x="67.1616%" y="1285" width="0.0368%" height="15" fill="rgb(208,12,30)" fg:x="5473" fg:w="3"/><text x="67.4116%" y="1295.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.04%)</title><rect x="67.1616%" y="1269" width="0.0368%" height="15" fill="rgb(207,176,36)" fg:x="5473" fg:w="3"/><text x="67.4116%" y="1279.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (7 samples, 0.09%)</title><rect x="67.1371%" y="1365" width="0.0859%" height="15" fill="rgb(211,188,29)" fg:x="5471" fg:w="7"/><text x="67.3871%" y="1375.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (2 samples, 0.02%)</title><rect x="67.1984%" y="1349" width="0.0245%" height="15" fill="rgb(220,184,37)" fg:x="5476" fg:w="2"/><text x="67.4484%" y="1359.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="67.1984%" y="1333" width="0.0245%" height="15" fill="rgb(239,87,37)" fg:x="5476" fg:w="2"/><text x="67.4484%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="67.1984%" y="1317" width="0.0245%" height="15" fill="rgb(232,113,44)" fg:x="5476" fg:w="2"/><text x="67.4484%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="67.1984%" y="1301" width="0.0245%" height="15" fill="rgb(246,25,39)" fg:x="5476" fg:w="2"/><text x="67.4484%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="67.1984%" y="1285" width="0.0245%" height="15" fill="rgb(247,30,13)" fg:x="5476" fg:w="2"/><text x="67.4484%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="67.1984%" y="1269" width="0.0245%" height="15" fill="rgb(230,176,35)" fg:x="5476" fg:w="2"/><text x="67.4484%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="67.2107%" y="1253" width="0.0123%" height="15" fill="rgb(222,23,18)" fg:x="5477" fg:w="1"/><text x="67.4607%" y="1263.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="67.2107%" y="1237" width="0.0123%" height="15" fill="rgb(234,86,8)" fg:x="5477" fg:w="1"/><text x="67.4607%" y="1247.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="67.2107%" y="1221" width="0.0123%" height="15" fill="rgb(206,218,47)" fg:x="5477" fg:w="1"/><text x="67.4607%" y="1231.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="67.2107%" y="1205" width="0.0123%" height="15" fill="rgb(229,35,31)" fg:x="5477" fg:w="1"/><text x="67.4607%" y="1215.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="67.2107%" y="1189" width="0.0123%" height="15" fill="rgb(242,81,7)" fg:x="5477" fg:w="1"/><text x="67.4607%" y="1199.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (1 samples, 0.01%)</title><rect x="67.2107%" y="1173" width="0.0123%" height="15" fill="rgb(231,11,35)" fg:x="5477" fg:w="1"/><text x="67.4607%" y="1183.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (129 samples, 1.58%)</title><rect x="65.6522%" y="1413" width="1.5830%" height="15" fill="rgb(219,218,17)" fg:x="5350" fg:w="129"/><text x="65.9022%" y="1423.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (128 samples, 1.57%)</title><rect x="65.6645%" y="1397" width="1.5707%" height="15" fill="rgb(221,83,32)" fg:x="5351" fg:w="128"/><text x="65.9145%" y="1407.50"></text></g><g><title>bevy_winit::handle_create_window_events (9 samples, 0.11%)</title><rect x="67.1248%" y="1381" width="0.1104%" height="15" fill="rgb(233,49,54)" fg:x="5470" fg:w="9"/><text x="67.3748%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::world::world_cell::WorldBorrowMut&lt;bevy_winit::winit_windows::WinitWindows&gt;&gt; (1 samples, 0.01%)</title><rect x="67.2230%" y="1365" width="0.0123%" height="15" fill="rgb(206,18,51)" fg:x="5478" fg:w="1"/><text x="67.4730%" y="1375.50"></text></g><g><title>&lt;bevy_ecs::world::world_cell::WorldBorrowMut&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="67.2230%" y="1349" width="0.0123%" height="15" fill="rgb(249,193,15)" fg:x="5478" fg:w="1"/><text x="67.4730%" y="1359.50"></text></g><g><title>_XStoreEventCookie (1 samples, 0.01%)</title><rect x="67.2352%" y="1365" width="0.0123%" height="15" fill="rgb(245,186,19)" fg:x="5479" fg:w="1"/><text x="67.4852%" y="1375.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.2352%" y="1349" width="0.0123%" height="15" fill="rgb(230,4,24)" fg:x="5479" fg:w="1"/><text x="67.4852%" y="1359.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (2 samples, 0.02%)</title><rect x="67.2352%" y="1397" width="0.0245%" height="15" fill="rgb(234,75,27)" fg:x="5479" fg:w="2"/><text x="67.4852%" y="1407.50"></text></g><g><title>XCheckIfEvent (2 samples, 0.02%)</title><rect x="67.2352%" y="1381" width="0.0245%" height="15" fill="rgb(244,187,35)" fg:x="5479" fg:w="2"/><text x="67.4852%" y="1391.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event::predicate (1 samples, 0.01%)</title><rect x="67.2475%" y="1365" width="0.0123%" height="15" fill="rgb(241,97,43)" fg:x="5480" fg:w="1"/><text x="67.4975%" y="1375.50"></text></g><g><title>XFilterEvent (1 samples, 0.01%)</title><rect x="67.2721%" y="1381" width="0.0123%" height="15" fill="rgb(236,94,2)" fg:x="5482" fg:w="1"/><text x="67.5221%" y="1391.50"></text></g><g><title>core::ptr::drop_in_place&lt;winit::platform_impl::platform::x11::GenericEventCookie&gt; (1 samples, 0.01%)</title><rect x="67.2843%" y="1381" width="0.0123%" height="15" fill="rgb(231,175,7)" fg:x="5483" fg:w="1"/><text x="67.5343%" y="1391.50"></text></g><g><title>&lt;winit::platform_impl::platform::x11::GenericEventCookie as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="67.2843%" y="1365" width="0.0123%" height="15" fill="rgb(236,89,47)" fg:x="5483" fg:w="1"/><text x="67.5343%" y="1375.50"></text></g><g><title>XFreeEventData (1 samples, 0.01%)</title><rect x="67.2843%" y="1349" width="0.0123%" height="15" fill="rgb(213,191,37)" fg:x="5483" fg:w="1"/><text x="67.5343%" y="1359.50"></text></g><g><title>XFree (1 samples, 0.01%)</title><rect x="67.2843%" y="1333" width="0.0123%" height="15" fill="rgb(252,0,34)" fg:x="5483" fg:w="1"/><text x="67.5343%" y="1343.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="67.2843%" y="1317" width="0.0123%" height="15" fill="rgb(208,145,44)" fg:x="5483" fg:w="1"/><text x="67.5343%" y="1327.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="67.2843%" y="1301" width="0.0123%" height="15" fill="rgb(227,95,50)" fg:x="5483" fg:w="1"/><text x="67.5343%" y="1311.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}} (1 samples, 0.01%)</title><rect x="67.2966%" y="1381" width="0.0123%" height="15" fill="rgb(222,136,24)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1391.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1 samples, 0.01%)</title><rect x="67.2966%" y="1365" width="0.0123%" height="15" fill="rgb(218,105,10)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1375.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="67.2966%" y="1349" width="0.0123%" height="15" fill="rgb(216,65,28)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1359.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (1 samples, 0.01%)</title><rect x="67.2966%" y="1333" width="0.0123%" height="15" fill="rgb(229,6,28)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1343.50"></text></g><g><title>bevy_ecs::world::World::get_resource_mut (1 samples, 0.01%)</title><rect x="67.2966%" y="1317" width="0.0123%" height="15" fill="rgb(222,160,42)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1327.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut (1 samples, 0.01%)</title><rect x="67.2966%" y="1301" width="0.0123%" height="15" fill="rgb(235,83,49)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1311.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="67.2966%" y="1285" width="0.0123%" height="15" fill="rgb(236,86,36)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1295.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="67.2966%" y="1269" width="0.0123%" height="15" fill="rgb(236,19,41)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1279.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="67.2966%" y="1253" width="0.0123%" height="15" fill="rgb(217,71,31)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1263.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="67.2966%" y="1237" width="0.0123%" height="15" fill="rgb(236,209,25)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1247.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="67.2966%" y="1221" width="0.0123%" height="15" fill="rgb(247,104,21)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1231.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (1 samples, 0.01%)</title><rect x="67.2966%" y="1205" width="0.0123%" height="15" fill="rgb(243,80,38)" fg:x="5484" fg:w="1"/><text x="67.5466%" y="1215.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (7 samples, 0.09%)</title><rect x="67.2352%" y="1413" width="0.0859%" height="15" fill="rgb(232,109,38)" fg:x="5479" fg:w="7"/><text x="67.4852%" y="1423.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (5 samples, 0.06%)</title><rect x="67.2598%" y="1397" width="0.0614%" height="15" fill="rgb(212,177,53)" fg:x="5481" fg:w="5"/><text x="67.5098%" y="1407.50"></text></g><g><title>winit::platform_impl::platform::x11::GenericEventCookie::from_event (1 samples, 0.01%)</title><rect x="67.3089%" y="1381" width="0.0123%" height="15" fill="rgb(227,30,34)" fg:x="5485" fg:w="1"/><text x="67.5589%" y="1391.50"></text></g><g><title>XGetEventData (1 samples, 0.01%)</title><rect x="67.3089%" y="1365" width="0.0123%" height="15" fill="rgb(205,175,25)" fg:x="5485" fg:w="1"/><text x="67.5589%" y="1375.50"></text></g><g><title>_XFetchEventCookie (1 samples, 0.01%)</title><rect x="67.3089%" y="1349" width="0.0123%" height="15" fill="rgb(249,39,54)" fg:x="5485" fg:w="1"/><text x="67.5589%" y="1359.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="67.3089%" y="1333" width="0.0123%" height="15" fill="rgb(215,54,37)" fg:x="5485" fg:w="1"/><text x="67.5589%" y="1343.50"></text></g><g><title>[libX11.so.6.4.0] (4 samples, 0.05%)</title><rect x="67.3702%" y="1381" width="0.0491%" height="15" fill="rgb(205,60,46)" fg:x="5490" fg:w="4"/><text x="67.6202%" y="1391.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="67.4070%" y="1365" width="0.0123%" height="15" fill="rgb(238,89,29)" fg:x="5493" fg:w="1"/><text x="67.6570%" y="1375.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="67.4439%" y="1317" width="0.0245%" height="15" fill="rgb(212,48,10)" fg:x="5496" fg:w="2"/><text x="67.6939%" y="1327.50"></text></g><g><title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="67.4561%" y="1301" width="0.0123%" height="15" fill="rgb(237,186,28)" fg:x="5497" fg:w="1"/><text x="67.7061%" y="1311.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="67.4684%" y="1317" width="0.0123%" height="15" fill="rgb(237,204,4)" fg:x="5498" fg:w="1"/><text x="67.7184%" y="1327.50"></text></g><g><title>[libxcb.so.1.1.0] (4 samples, 0.05%)</title><rect x="67.4439%" y="1333" width="0.0491%" height="15" fill="rgb(237,15,47)" fg:x="5496" fg:w="4"/><text x="67.6939%" y="1343.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="67.4807%" y="1317" width="0.0123%" height="15" fill="rgb(244,110,25)" fg:x="5499" fg:w="1"/><text x="67.7307%" y="1327.50"></text></g><g><title>[libX11.so.6.4.0] (8 samples, 0.10%)</title><rect x="67.4316%" y="1365" width="0.0982%" height="15" fill="rgb(241,12,16)" fg:x="5495" fg:w="8"/><text x="67.6816%" y="1375.50"></text></g><g><title>[libX11.so.6.4.0] (7 samples, 0.09%)</title><rect x="67.4439%" y="1349" width="0.0859%" height="15" fill="rgb(235,25,9)" fg:x="5496" fg:w="7"/><text x="67.6939%" y="1359.50"></text></g><g><title>xcb_poll_for_event (3 samples, 0.04%)</title><rect x="67.4929%" y="1333" width="0.0368%" height="15" fill="rgb(245,159,19)" fg:x="5500" fg:w="3"/><text x="67.7429%" y="1343.50"></text></g><g><title>bevy_winit::winit_runner_with (167 samples, 2.05%)</title><rect x="65.4927%" y="1509" width="2.0493%" height="15" fill="rgb(236,63,32)" fg:x="5337" fg:w="167"/><text x="65.7427%" y="1519.50">b..</text></g><g><title>bevy_winit::run (167 samples, 2.05%)</title><rect x="65.4927%" y="1493" width="2.0493%" height="15" fill="rgb(235,32,52)" fg:x="5337" fg:w="167"/><text x="65.7427%" y="1503.50">b..</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (167 samples, 2.05%)</title><rect x="65.4927%" y="1477" width="2.0493%" height="15" fill="rgb(209,176,21)" fg:x="5337" fg:w="167"/><text x="65.7427%" y="1487.50">w..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (167 samples, 2.05%)</title><rect x="65.4927%" y="1461" width="2.0493%" height="15" fill="rgb(205,90,42)" fg:x="5337" fg:w="167"/><text x="65.7427%" y="1471.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (167 samples, 2.05%)</title><rect x="65.4927%" y="1445" width="2.0493%" height="15" fill="rgb(213,132,16)" fg:x="5337" fg:w="167"/><text x="65.7427%" y="1455.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (167 samples, 2.05%)</title><rect x="65.4927%" y="1429" width="2.0493%" height="15" fill="rgb(232,11,22)" fg:x="5337" fg:w="167"/><text x="65.7427%" y="1439.50">w..</text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (18 samples, 0.22%)</title><rect x="67.3211%" y="1413" width="0.2209%" height="15" fill="rgb(248,167,41)" fg:x="5486" fg:w="18"/><text x="67.5711%" y="1423.50"></text></g><g><title>XPending (14 samples, 0.17%)</title><rect x="67.3702%" y="1397" width="0.1718%" height="15" fill="rgb(209,127,6)" fg:x="5490" fg:w="14"/><text x="67.6202%" y="1407.50"></text></g><g><title>_XEventsQueued (10 samples, 0.12%)</title><rect x="67.4193%" y="1381" width="0.1227%" height="15" fill="rgb(246,210,34)" fg:x="5494" fg:w="10"/><text x="67.6693%" y="1391.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="67.5298%" y="1365" width="0.0123%" height="15" fill="rgb(238,165,13)" fg:x="5503" fg:w="1"/><text x="67.7798%" y="1375.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="67.5420%" y="1509" width="0.0123%" height="15" fill="rgb(233,98,15)" fg:x="5504" fg:w="1"/><text x="67.7920%" y="1519.50"></text></g><g><title>core::fmt::Formatter::pad_integral::write_prefix (1 samples, 0.01%)</title><rect x="67.5543%" y="1509" width="0.0123%" height="15" fill="rgb(215,215,51)" fg:x="5505" fg:w="1"/><text x="67.8043%" y="1519.50"></text></g><g><title>core::fmt::num::parse_u64_into (1 samples, 0.01%)</title><rect x="67.5666%" y="1509" width="0.0123%" height="15" fill="rgb(217,161,25)" fg:x="5506" fg:w="1"/><text x="67.8166%" y="1519.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="67.5788%" y="1509" width="0.0245%" height="15" fill="rgb(217,167,48)" fg:x="5507" fg:w="2"/><text x="67.8288%" y="1519.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="67.6034%" y="1509" width="0.0123%" height="15" fill="rgb(205,163,34)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1519.50"></text></g><g><title>bevy_winit::winit_runner (1 samples, 0.01%)</title><rect x="67.6034%" y="1493" width="0.0123%" height="15" fill="rgb(241,197,31)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1503.50"></text></g><g><title>winit::event_loop::EventLoop&lt;()&gt;::new (1 samples, 0.01%)</title><rect x="67.6034%" y="1477" width="0.0123%" height="15" fill="rgb(225,123,11)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1487.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::with_user_event (1 samples, 0.01%)</title><rect x="67.6034%" y="1461" width="0.0123%" height="15" fill="rgb(217,4,20)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1471.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="67.6034%" y="1445" width="0.0123%" height="15" fill="rgb(215,55,9)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1455.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_any_thread (1 samples, 0.01%)</title><rect x="67.6034%" y="1429" width="0.0123%" height="15" fill="rgb(218,165,5)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1439.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (1 samples, 0.01%)</title><rect x="67.6034%" y="1413" width="0.0123%" height="15" fill="rgb(222,175,15)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1423.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="67.6034%" y="1397" width="0.0123%" height="15" fill="rgb(223,85,34)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1407.50"></text></g><g><title>XSupportsLocale (1 samples, 0.01%)</title><rect x="67.6034%" y="1381" width="0.0123%" height="15" fill="rgb(234,228,29)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1391.50"></text></g><g><title>_XOpenLC (1 samples, 0.01%)</title><rect x="67.6034%" y="1365" width="0.0123%" height="15" fill="rgb(239,7,28)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1375.50"></text></g><g><title>_XlcUtf8Loader (1 samples, 0.01%)</title><rect x="67.6034%" y="1349" width="0.0123%" height="15" fill="rgb(252,222,53)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1359.50"></text></g><g><title>_XlcCreateLC (1 samples, 0.01%)</title><rect x="67.6034%" y="1333" width="0.0123%" height="15" fill="rgb(232,146,44)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1343.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="67.6034%" y="1317" width="0.0123%" height="15" fill="rgb(243,223,53)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1327.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="67.6034%" y="1301" width="0.0123%" height="15" fill="rgb(219,128,25)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1311.50"></text></g><g><title>_XlcCreateLocaleDataBase (1 samples, 0.01%)</title><rect x="67.6034%" y="1285" width="0.0123%" height="15" fill="rgb(223,56,32)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1295.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="67.6034%" y="1269" width="0.0123%" height="15" fill="rgb(237,41,3)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1279.50"></text></g><g><title>fgets (1 samples, 0.01%)</title><rect x="67.6034%" y="1253" width="0.0123%" height="15" fill="rgb(235,138,9)" fg:x="5509" fg:w="1"/><text x="67.8534%" y="1263.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5 samples, 0.06%)</title><rect x="67.6157%" y="1509" width="0.0614%" height="15" fill="rgb(214,131,10)" fg:x="5510" fg:w="5"/><text x="67.8657%" y="1519.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="67.6770%" y="1509" width="0.0123%" height="15" fill="rgb(229,89,7)" fg:x="5515" fg:w="1"/><text x="67.9270%" y="1519.50"></text></g><g><title>core::ptr::hash (2 samples, 0.02%)</title><rect x="67.6893%" y="1509" width="0.0245%" height="15" fill="rgb(240,24,42)" fg:x="5516" fg:w="2"/><text x="67.9393%" y="1519.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::recv (1 samples, 0.01%)</title><rect x="67.7138%" y="1509" width="0.0123%" height="15" fill="rgb(243,188,54)" fg:x="5518" fg:w="1"/><text x="67.9638%" y="1519.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (4 samples, 0.05%)</title><rect x="67.7261%" y="1509" width="0.0491%" height="15" fill="rgb(246,92,22)" fg:x="5519" fg:w="4"/><text x="67.9761%" y="1519.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (3 samples, 0.04%)</title><rect x="67.7384%" y="1493" width="0.0368%" height="15" fill="rgb(211,176,51)" fg:x="5520" fg:w="3"/><text x="67.9884%" y="1503.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::release (1 samples, 0.01%)</title><rect x="67.7752%" y="1509" width="0.0123%" height="15" fill="rgb(246,207,34)" fg:x="5523" fg:w="1"/><text x="68.0252%" y="1519.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (1 samples, 0.01%)</title><rect x="67.7752%" y="1493" width="0.0123%" height="15" fill="rgb(239,95,2)" fg:x="5523" fg:w="1"/><text x="68.0252%" y="1503.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::send (2 samples, 0.02%)</title><rect x="67.7875%" y="1509" width="0.0245%" height="15" fill="rgb(211,124,25)" fg:x="5524" fg:w="2"/><text x="68.0375%" y="1519.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="67.8120%" y="1509" width="0.0123%" height="15" fill="rgb(231,221,19)" fg:x="5526" fg:w="1"/><text x="68.0620%" y="1519.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (1 samples, 0.01%)</title><rect x="67.8243%" y="1509" width="0.0123%" height="15" fill="rgb(239,183,19)" fg:x="5527" fg:w="1"/><text x="68.0743%" y="1519.50"></text></g><g><title>egui::data::input::RawInput::take (1 samples, 0.01%)</title><rect x="67.8365%" y="1509" width="0.0123%" height="15" fill="rgb(221,130,29)" fg:x="5528" fg:w="1"/><text x="68.0865%" y="1519.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_plugins (1 samples, 0.01%)</title><rect x="67.8488%" y="1493" width="0.0123%" height="15" fill="rgb(206,130,36)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1503.50"></text></g><g><title>bevy_app::plugin_group::PluginGroupBuilder::finish (1 samples, 0.01%)</title><rect x="67.8488%" y="1477" width="0.0123%" height="15" fill="rgb(215,70,19)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1487.50"></text></g><g><title>&lt;bevy_audio::AudioPlugin as bevy_app::plugin::Plugin&gt;::build (1 samples, 0.01%)</title><rect x="67.8488%" y="1461" width="0.0123%" height="15" fill="rgb(244,16,43)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1471.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::init_non_send_resource (1 samples, 0.01%)</title><rect x="67.8488%" y="1445" width="0.0123%" height="15" fill="rgb(222,115,32)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1455.50"></text></g><g><title>&lt;T as bevy_ecs::world::FromWorld&gt;::from_world (1 samples, 0.01%)</title><rect x="67.8488%" y="1429" width="0.0123%" height="15" fill="rgb(247,48,25)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1439.50"></text></g><g><title>&lt;bevy_audio::audio_output::AudioOutput&lt;P&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="67.8488%" y="1413" width="0.0123%" height="15" fill="rgb(226,180,51)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1423.50"></text></g><g><title>rodio::stream::OutputStream::try_default (1 samples, 0.01%)</title><rect x="67.8488%" y="1397" width="0.0123%" height="15" fill="rgb(217,142,42)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1407.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (1 samples, 0.01%)</title><rect x="67.8488%" y="1381" width="0.0123%" height="15" fill="rgb(220,178,3)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1391.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (1 samples, 0.01%)</title><rect x="67.8488%" y="1365" width="0.0123%" height="15" fill="rgb(217,221,4)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1375.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (1 samples, 0.01%)</title><rect x="67.8488%" y="1349" width="0.0123%" height="15" fill="rgb(237,63,43)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1359.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (1 samples, 0.01%)</title><rect x="67.8488%" y="1333" width="0.0123%" height="15" fill="rgb(220,57,8)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1343.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (1 samples, 0.01%)</title><rect x="67.8488%" y="1317" width="0.0123%" height="15" fill="rgb(254,186,27)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1327.50"></text></g><g><title>cpal::host::alsa::Device::default_config (1 samples, 0.01%)</title><rect x="67.8488%" y="1301" width="0.0123%" height="15" fill="rgb(251,57,28)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1311.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (1 samples, 0.01%)</title><rect x="67.8488%" y="1285" width="0.0123%" height="15" fill="rgb(215,228,0)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1295.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (1 samples, 0.01%)</title><rect x="67.8488%" y="1269" width="0.0123%" height="15" fill="rgb(237,218,39)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1279.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (1 samples, 0.01%)</title><rect x="67.8488%" y="1253" width="0.0123%" height="15" fill="rgb(207,2,54)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1263.50"></text></g><g><title>alsa::pcm::PCM::new (1 samples, 0.01%)</title><rect x="67.8488%" y="1237" width="0.0123%" height="15" fill="rgb(232,76,50)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1247.50"></text></g><g><title>alsa::pcm::PCM::open (1 samples, 0.01%)</title><rect x="67.8488%" y="1221" width="0.0123%" height="15" fill="rgb(211,85,31)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1231.50"></text></g><g><title>snd_pcm_open (1 samples, 0.01%)</title><rect x="67.8488%" y="1205" width="0.0123%" height="15" fill="rgb(223,210,27)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1215.50"></text></g><g><title>snd_config_update_ref (1 samples, 0.01%)</title><rect x="67.8488%" y="1189" width="0.0123%" height="15" fill="rgb(254,36,8)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1199.50"></text></g><g><title>snd_config_update_r (1 samples, 0.01%)</title><rect x="67.8488%" y="1173" width="0.0123%" height="15" fill="rgb(213,4,25)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1183.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="67.8488%" y="1157" width="0.0123%" height="15" fill="rgb(224,2,39)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1167.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="67.8488%" y="1141" width="0.0123%" height="15" fill="rgb(208,8,39)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1151.50"></text></g><g><title>snd_config_hook_load (1 samples, 0.01%)</title><rect x="67.8488%" y="1125" width="0.0123%" height="15" fill="rgb(216,226,3)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1135.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="67.8488%" y="1109" width="0.0123%" height="15" fill="rgb(249,139,31)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1119.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="67.8488%" y="1093" width="0.0123%" height="15" fill="rgb(242,170,35)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1103.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="67.8488%" y="1077" width="0.0123%" height="15" fill="rgb(238,14,9)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1087.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="67.8488%" y="1061" width="0.0123%" height="15" fill="rgb(251,81,46)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1071.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="67.8488%" y="1045" width="0.0123%" height="15" fill="rgb(230,23,4)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1055.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="67.8488%" y="1029" width="0.0123%" height="15" fill="rgb(211,85,25)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1039.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="67.8488%" y="1013" width="0.0123%" height="15" fill="rgb(252,23,31)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1023.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="67.8488%" y="997" width="0.0123%" height="15" fill="rgb(234,163,38)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="1007.50"></text></g><g><title>__GI___isoc99_sscanf (1 samples, 0.01%)</title><rect x="67.8488%" y="981" width="0.0123%" height="15" fill="rgb(210,190,50)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="991.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.01%)</title><rect x="67.8488%" y="965" width="0.0123%" height="15" fill="rgb(228,158,3)" fg:x="5529" fg:w="1"/><text x="68.0988%" y="975.50"></text></g><g><title>engine::main (2 samples, 0.02%)</title><rect x="67.8488%" y="1509" width="0.0245%" height="15" fill="rgb(216,130,0)" fg:x="5529" fg:w="2"/><text x="68.0988%" y="1519.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::run (1 samples, 0.01%)</title><rect x="67.8611%" y="1493" width="0.0123%" height="15" fill="rgb(224,184,10)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1503.50"></text></g><g><title>bevy_app::app::App::run (1 samples, 0.01%)</title><rect x="67.8611%" y="1477" width="0.0123%" height="15" fill="rgb(214,202,18)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.01%)</title><rect x="67.8611%" y="1461" width="0.0123%" height="15" fill="rgb(213,229,54)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1471.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="67.8611%" y="1445" width="0.0123%" height="15" fill="rgb(246,120,0)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1455.50"></text></g><g><title>bevy_winit::winit_runner (1 samples, 0.01%)</title><rect x="67.8611%" y="1429" width="0.0123%" height="15" fill="rgb(237,6,15)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1439.50"></text></g><g><title>winit::event_loop::EventLoop&lt;()&gt;::new (1 samples, 0.01%)</title><rect x="67.8611%" y="1413" width="0.0123%" height="15" fill="rgb(252,156,15)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1423.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::with_user_event (1 samples, 0.01%)</title><rect x="67.8611%" y="1397" width="0.0123%" height="15" fill="rgb(249,78,18)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1407.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="67.8611%" y="1381" width="0.0123%" height="15" fill="rgb(230,223,44)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1391.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_any_thread (1 samples, 0.01%)</title><rect x="67.8611%" y="1365" width="0.0123%" height="15" fill="rgb(230,222,32)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1375.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (1 samples, 0.01%)</title><rect x="67.8611%" y="1349" width="0.0123%" height="15" fill="rgb(247,54,6)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1359.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="67.8611%" y="1333" width="0.0123%" height="15" fill="rgb(247,115,45)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1343.50"></text></g><g><title>winit::platform_impl::platform::x11::util::atom::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_atom_unchecked (1 samples, 0.01%)</title><rect x="67.8611%" y="1317" width="0.0123%" height="15" fill="rgb(213,203,37)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1327.50"></text></g><g><title>winit::platform_impl::platform::x11::util::atom::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_atom (1 samples, 0.01%)</title><rect x="67.8611%" y="1301" width="0.0123%" height="15" fill="rgb(248,188,18)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1311.50"></text></g><g><title>XInternAtom (1 samples, 0.01%)</title><rect x="67.8611%" y="1285" width="0.0123%" height="15" fill="rgb(206,80,8)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1295.50"></text></g><g><title>_XReply (1 samples, 0.01%)</title><rect x="67.8611%" y="1269" width="0.0123%" height="15" fill="rgb(245,217,31)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1279.50"></text></g><g><title>xcb_wait_for_reply64 (1 samples, 0.01%)</title><rect x="67.8611%" y="1253" width="0.0123%" height="15" fill="rgb(220,193,15)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1263.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="67.8611%" y="1237" width="0.0123%" height="15" fill="rgb(226,7,19)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1247.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="67.8611%" y="1221" width="0.0123%" height="15" fill="rgb(222,145,31)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1231.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="67.8611%" y="1205" width="0.0123%" height="15" fill="rgb(241,193,36)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1215.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="67.8611%" y="1189" width="0.0123%" height="15" fill="rgb(225,123,33)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1199.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="67.8611%" y="1173" width="0.0123%" height="15" fill="rgb(246,136,38)" fg:x="5530" fg:w="1"/><text x="68.1111%" y="1183.50"></text></g><g><title>find_derivation (1 samples, 0.01%)</title><rect x="67.8734%" y="1509" width="0.0123%" height="15" fill="rgb(243,56,24)" fg:x="5531" fg:w="1"/><text x="68.1234%" y="1519.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="67.8734%" y="1493" width="0.0123%" height="15" fill="rgb(215,147,2)" fg:x="5531" fg:w="1"/><text x="68.1234%" y="1503.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (4 samples, 0.05%)</title><rect x="67.8856%" y="1509" width="0.0491%" height="15" fill="rgb(209,155,27)" fg:x="5532" fg:w="4"/><text x="68.1356%" y="1519.50"></text></g><g><title>gfx_backend_vulkan::RawDevice::set_object_name (1 samples, 0.01%)</title><rect x="67.9347%" y="1509" width="0.0123%" height="15" fill="rgb(222,177,11)" fg:x="5536" fg:w="1"/><text x="68.1847%" y="1519.50"></text></g><g><title>gilrs::ff::server::run (1 samples, 0.01%)</title><rect x="67.9470%" y="1509" width="0.0123%" height="15" fill="rgb(212,227,15)" fg:x="5537" fg:w="1"/><text x="68.1970%" y="1519.50"></text></g><g><title>std::time::Instant::now (1 samples, 0.01%)</title><rect x="67.9470%" y="1493" width="0.0123%" height="15" fill="rgb(214,138,20)" fg:x="5537" fg:w="1"/><text x="68.1970%" y="1503.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (1 samples, 0.01%)</title><rect x="67.9470%" y="1477" width="0.0123%" height="15" fill="rgb(221,170,31)" fg:x="5537" fg:w="1"/><text x="68.1970%" y="1487.50"></text></g><g><title>std::sys::unix::time::inner::now (1 samples, 0.01%)</title><rect x="67.9470%" y="1461" width="0.0123%" height="15" fill="rgb(253,207,5)" fg:x="5537" fg:w="1"/><text x="68.1970%" y="1471.50"></text></g><g><title>glslang::GetThreadPoolAllocator (2 samples, 0.02%)</title><rect x="67.9593%" y="1509" width="0.0245%" height="15" fill="rgb(212,64,37)" fg:x="5538" fg:w="2"/><text x="68.2093%" y="1519.50"></text></g><g><title>glslang::GlslangToSpv (1 samples, 0.01%)</title><rect x="67.9838%" y="1509" width="0.0123%" height="15" fill="rgb(208,113,51)" fg:x="5540" fg:w="1"/><text x="68.2338%" y="1519.50"></text></g><g><title>glslang::TIntermAggregate::traverse (1 samples, 0.01%)</title><rect x="67.9838%" y="1493" width="0.0123%" height="15" fill="rgb(237,15,5)" fg:x="5540" fg:w="1"/><text x="68.2338%" y="1503.50"></text></g><g><title>glslang::TIntermAggregate::traverse (1 samples, 0.01%)</title><rect x="67.9838%" y="1477" width="0.0123%" height="15" fill="rgb(238,33,18)" fg:x="5540" fg:w="1"/><text x="68.2338%" y="1487.50"></text></g><g><title>glslang::TIntermAggregate::traverse (1 samples, 0.01%)</title><rect x="67.9838%" y="1461" width="0.0123%" height="15" fill="rgb(253,206,50)" fg:x="5540" fg:w="1"/><text x="68.2338%" y="1471.50"></text></g><g><title>glslang::TIntermBinary::traverse (1 samples, 0.01%)</title><rect x="67.9838%" y="1445" width="0.0123%" height="15" fill="rgb(242,158,43)" fg:x="5540" fg:w="1"/><text x="68.2338%" y="1455.50"></text></g><g><title>glslang::TIntermBinary::traverse (1 samples, 0.01%)</title><rect x="67.9838%" y="1429" width="0.0123%" height="15" fill="rgb(213,125,27)" fg:x="5540" fg:w="1"/><text x="68.2338%" y="1439.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="67.9838%" y="1413" width="0.0123%" height="15" fill="rgb(233,161,31)" fg:x="5540" fg:w="1"/><text x="68.2338%" y="1423.50"></text></g><g><title>glslang::TBuiltIns::addSamplingFunctions (1 samples, 0.01%)</title><rect x="67.9961%" y="1509" width="0.0123%" height="15" fill="rgb(218,135,6)" fg:x="5541" fg:w="1"/><text x="68.2461%" y="1519.50"></text></g><g><title>glslang::TFunction::relateToOperator (1 samples, 0.01%)</title><rect x="68.0083%" y="1509" width="0.0123%" height="15" fill="rgb(222,73,53)" fg:x="5542" fg:w="1"/><text x="68.2583%" y="1519.50"></text></g><g><title>glslang::TPpContext::tStringInput::getch (4 samples, 0.05%)</title><rect x="68.0206%" y="1509" width="0.0491%" height="15" fill="rgb(229,66,53)" fg:x="5543" fg:w="4"/><text x="68.2706%" y="1519.50"></text></g><g><title>glslang::TPpContext::tStringInput::scan (2 samples, 0.02%)</title><rect x="68.0697%" y="1509" width="0.0245%" height="15" fill="rgb(208,128,19)" fg:x="5547" fg:w="2"/><text x="68.3197%" y="1519.50"></text></g><g><title>glslang::TScanContext::identifierOrType (1 samples, 0.01%)</title><rect x="68.0942%" y="1509" width="0.0123%" height="15" fill="rgb(235,70,27)" fg:x="5549" fg:w="1"/><text x="68.3442%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (7 samples, 0.09%)</title><rect x="68.1065%" y="1509" width="0.0859%" height="15" fill="rgb(241,130,30)" fg:x="5550" fg:w="7"/><text x="68.3565%" y="1519.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (5 samples, 0.06%)</title><rect x="68.1311%" y="1493" width="0.0614%" height="15" fill="rgb(222,57,48)" fg:x="5552" fg:w="5"/><text x="68.3811%" y="1503.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.06%)</title><rect x="68.1311%" y="1477" width="0.0614%" height="15" fill="rgb(225,204,29)" fg:x="5552" fg:w="5"/><text x="68.3811%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="68.1311%" y="1461" width="0.0614%" height="15" fill="rgb(240,196,35)" fg:x="5552" fg:w="5"/><text x="68.3811%" y="1471.50"></text></g><g><title>&lt;dyn bevy_ecs::schedule::label::StageLabel as core::hash::Hash&gt;::hash (5 samples, 0.06%)</title><rect x="68.1311%" y="1445" width="0.0614%" height="15" fill="rgb(215,150,16)" fg:x="5552" fg:w="5"/><text x="68.3811%" y="1455.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (1 samples, 0.01%)</title><rect x="68.1924%" y="1509" width="0.0123%" height="15" fill="rgb(209,170,13)" fg:x="5557" fg:w="1"/><text x="68.4424%" y="1519.50"></text></g><g><title>hashbrown::map::make_insert_hash (4 samples, 0.05%)</title><rect x="68.2047%" y="1509" width="0.0491%" height="15" fill="rgb(235,75,31)" fg:x="5558" fg:w="4"/><text x="68.4547%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="68.2538%" y="1509" width="0.0123%" height="15" fill="rgb(252,1,47)" fg:x="5562" fg:w="1"/><text x="68.5038%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.04%)</title><rect x="68.2660%" y="1509" width="0.0368%" height="15" fill="rgb(241,2,36)" fg:x="5563" fg:w="3"/><text x="68.5160%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="68.3029%" y="1509" width="0.0245%" height="15" fill="rgb(236,191,4)" fg:x="5566" fg:w="2"/><text x="68.5529%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="68.3274%" y="1509" width="0.0123%" height="15" fill="rgb(212,65,35)" fg:x="5568" fg:w="1"/><text x="68.5774%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (3 samples, 0.04%)</title><rect x="68.3397%" y="1509" width="0.0368%" height="15" fill="rgb(209,49,33)" fg:x="5569" fg:w="3"/><text x="68.5897%" y="1519.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="68.3765%" y="1509" width="0.0123%" height="15" fill="rgb(208,36,46)" fg:x="5572" fg:w="1"/><text x="68.6265%" y="1519.50"></text></g><g><title>mio::poll::Poll::poll1 (2 samples, 0.02%)</title><rect x="68.3888%" y="1509" width="0.0245%" height="15" fill="rgb(210,125,2)" fg:x="5573" fg:w="2"/><text x="68.6388%" y="1519.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="68.4256%" y="1365" width="0.0123%" height="15" fill="rgb(225,62,6)" fg:x="5576" fg:w="1"/><text x="68.6756%" y="1375.50"></text></g><g><title>add_alias2.part.0 (1 samples, 0.01%)</title><rect x="68.4378%" y="1365" width="0.0123%" height="15" fill="rgb(210,54,27)" fg:x="5577" fg:w="1"/><text x="68.6878%" y="1375.50"></text></g><g><title>__GI___tsearch (1 samples, 0.01%)</title><rect x="68.4378%" y="1349" width="0.0123%" height="15" fill="rgb(249,189,52)" fg:x="5577" fg:w="1"/><text x="68.6878%" y="1359.50"></text></g><g><title>add_module.constprop.0 (5 samples, 0.06%)</title><rect x="68.4501%" y="1365" width="0.0614%" height="15" fill="rgb(225,134,40)" fg:x="5578" fg:w="5"/><text x="68.7001%" y="1375.50"></text></g><g><title>insert_module (5 samples, 0.06%)</title><rect x="68.4501%" y="1349" width="0.0614%" height="15" fill="rgb(206,13,37)" fg:x="5578" fg:w="5"/><text x="68.7001%" y="1359.50"></text></g><g><title>__strcmp_avx2 (5 samples, 0.06%)</title><rect x="68.4501%" y="1333" width="0.0614%" height="15" fill="rgb(232,114,28)" fg:x="5578" fg:w="5"/><text x="68.7001%" y="1343.50"></text></g><g><title>pa_log_levelv_meta (9 samples, 0.11%)</title><rect x="68.4133%" y="1509" width="0.1104%" height="15" fill="rgb(253,215,8)" fg:x="5575" fg:w="9"/><text x="68.6633%" y="1519.50"></text></g><g><title>[libpulsecommon-15.0.so] (9 samples, 0.11%)</title><rect x="68.4133%" y="1493" width="0.1104%" height="15" fill="rgb(254,64,19)" fg:x="5575" fg:w="9"/><text x="68.6633%" y="1503.50"></text></g><g><title>pa_log_set_ident (9 samples, 0.11%)</title><rect x="68.4133%" y="1477" width="0.1104%" height="15" fill="rgb(242,18,46)" fg:x="5575" fg:w="9"/><text x="68.6633%" y="1487.50"></text></g><g><title>[libpulse.so.0.24.0] (9 samples, 0.11%)</title><rect x="68.4133%" y="1461" width="0.1104%" height="15" fill="rgb(239,192,30)" fg:x="5575" fg:w="9"/><text x="68.6633%" y="1471.50"></text></g><g><title>iconv_open (9 samples, 0.11%)</title><rect x="68.4133%" y="1445" width="0.1104%" height="15" fill="rgb(232,73,14)" fg:x="5575" fg:w="9"/><text x="68.6633%" y="1455.50"></text></g><g><title>__GI___gconv_open (9 samples, 0.11%)</title><rect x="68.4133%" y="1429" width="0.1104%" height="15" fill="rgb(225,51,9)" fg:x="5575" fg:w="9"/><text x="68.6633%" y="1439.50"></text></g><g><title>__gconv_find_transform (9 samples, 0.11%)</title><rect x="68.4133%" y="1413" width="0.1104%" height="15" fill="rgb(242,217,54)" fg:x="5575" fg:w="9"/><text x="68.6633%" y="1423.50"></text></g><g><title>__pthread_once_slow (9 samples, 0.11%)</title><rect x="68.4133%" y="1397" width="0.1104%" height="15" fill="rgb(216,93,3)" fg:x="5575" fg:w="9"/><text x="68.6633%" y="1407.50"></text></g><g><title>__gconv_read_conf (9 samples, 0.11%)</title><rect x="68.4133%" y="1381" width="0.1104%" height="15" fill="rgb(230,119,33)" fg:x="5575" fg:w="9"/><text x="68.6633%" y="1391.50"></text></g><g><title>insert_module (1 samples, 0.01%)</title><rect x="68.5115%" y="1365" width="0.0123%" height="15" fill="rgb(238,170,27)" fg:x="5583" fg:w="1"/><text x="68.7615%" y="1375.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="68.5115%" y="1349" width="0.0123%" height="15" fill="rgb(229,8,2)" fg:x="5583" fg:w="1"/><text x="68.7615%" y="1359.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="68.5237%" y="1509" width="0.0123%" height="15" fill="rgb(205,214,42)" fg:x="5584" fg:w="1"/><text x="68.7737%" y="1519.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="68.5237%" y="1493" width="0.0123%" height="15" fill="rgb(245,113,1)" fg:x="5584" fg:w="1"/><text x="68.7737%" y="1503.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="68.5237%" y="1477" width="0.0123%" height="15" fill="rgb(252,50,2)" fg:x="5584" fg:w="1"/><text x="68.7737%" y="1487.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="68.5237%" y="1461" width="0.0123%" height="15" fill="rgb(225,122,24)" fg:x="5584" fg:w="1"/><text x="68.7737%" y="1471.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="68.5237%" y="1445" width="0.0123%" height="15" fill="rgb(234,129,31)" fg:x="5584" fg:w="1"/><text x="68.7737%" y="1455.50"></text></g><g><title>pulse_new (1 samples, 0.01%)</title><rect x="68.5360%" y="1509" width="0.0123%" height="15" fill="rgb(219,177,4)" fg:x="5585" fg:w="1"/><text x="68.7860%" y="1519.50"></text></g><g><title>pa_context_new_with_proplist (1 samples, 0.01%)</title><rect x="68.5360%" y="1493" width="0.0123%" height="15" fill="rgb(225,142,27)" fg:x="5585" fg:w="1"/><text x="68.7860%" y="1503.50"></text></g><g><title>pa_proplist_sets (1 samples, 0.01%)</title><rect x="68.5360%" y="1477" width="0.0123%" height="15" fill="rgb(205,107,51)" fg:x="5585" fg:w="1"/><text x="68.7860%" y="1487.50"></text></g><g><title>pa_hashmap_put (1 samples, 0.01%)</title><rect x="68.5360%" y="1461" width="0.0123%" height="15" fill="rgb(236,223,15)" fg:x="5585" fg:w="1"/><text x="68.7860%" y="1471.50"></text></g><g><title>pa_run_once (1 samples, 0.01%)</title><rect x="68.5360%" y="1445" width="0.0123%" height="15" fill="rgb(235,133,11)" fg:x="5585" fg:w="1"/><text x="68.7860%" y="1455.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="68.5360%" y="1429" width="0.0123%" height="15" fill="rgb(247,172,13)" fg:x="5585" fg:w="1"/><text x="68.7860%" y="1439.50"></text></g><g><title>pa_flist_new_with_name (1 samples, 0.01%)</title><rect x="68.5360%" y="1413" width="0.0123%" height="15" fill="rgb(233,191,41)" fg:x="5585" fg:w="1"/><text x="68.7860%" y="1423.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="68.5360%" y="1397" width="0.0123%" height="15" fill="rgb(250,65,16)" fg:x="5585" fg:w="1"/><text x="68.7860%" y="1407.50"></text></g><g><title>regex::exec::ExecBuilder::build (1 samples, 0.01%)</title><rect x="68.5483%" y="1509" width="0.0123%" height="15" fill="rgb(206,10,27)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1519.50"></text></g><g><title>regex::compile::Compiler::compile (1 samples, 0.01%)</title><rect x="68.5483%" y="1493" width="0.0123%" height="15" fill="rgb(212,96,22)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1503.50"></text></g><g><title>regex::compile::Compiler::compile_one (1 samples, 0.01%)</title><rect x="68.5483%" y="1477" width="0.0123%" height="15" fill="rgb(206,50,0)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1487.50"></text></g><g><title>regex::compile::Compiler::c_alternate (1 samples, 0.01%)</title><rect x="68.5483%" y="1461" width="0.0123%" height="15" fill="rgb(249,105,52)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1471.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.01%)</title><rect x="68.5483%" y="1445" width="0.0123%" height="15" fill="rgb(216,93,51)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1455.50"></text></g><g><title>regex::compile::Compiler::c_concat (1 samples, 0.01%)</title><rect x="68.5483%" y="1429" width="0.0123%" height="15" fill="rgb(217,172,13)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1439.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (1 samples, 0.01%)</title><rect x="68.5483%" y="1413" width="0.0123%" height="15" fill="rgb(235,199,38)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1423.50"></text></g><g><title>regex::compile::Compiler::c_concat (1 samples, 0.01%)</title><rect x="68.5483%" y="1397" width="0.0123%" height="15" fill="rgb(221,97,33)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1407.50"></text></g><g><title>regex::compile::Compiler::c_alternate (1 samples, 0.01%)</title><rect x="68.5483%" y="1381" width="0.0123%" height="15" fill="rgb(205,156,50)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1391.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.01%)</title><rect x="68.5483%" y="1365" width="0.0123%" height="15" fill="rgb(215,142,19)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1375.50"></text></g><g><title>regex::compile::Compiler::c_repeat_one_or_more (1 samples, 0.01%)</title><rect x="68.5483%" y="1349" width="0.0123%" height="15" fill="rgb(232,170,7)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1359.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.01%)</title><rect x="68.5483%" y="1333" width="0.0123%" height="15" fill="rgb(223,50,17)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1343.50"></text></g><g><title>regex::compile::CompileClass::compile (1 samples, 0.01%)</title><rect x="68.5483%" y="1317" width="0.0123%" height="15" fill="rgb(230,103,46)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1327.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.01%)</title><rect x="68.5483%" y="1301" width="0.0123%" height="15" fill="rgb(254,30,34)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1311.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq_ (1 samples, 0.01%)</title><rect x="68.5483%" y="1285" width="0.0123%" height="15" fill="rgb(235,198,1)" fg:x="5586" fg:w="1"/><text x="68.7983%" y="1295.50"></text></g><g><title>rodio::stream::OutputStream::try_default (6 samples, 0.07%)</title><rect x="68.5606%" y="1509" width="0.0736%" height="15" fill="rgb(217,105,47)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1519.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (6 samples, 0.07%)</title><rect x="68.5606%" y="1493" width="0.0736%" height="15" fill="rgb(231,18,12)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1503.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (6 samples, 0.07%)</title><rect x="68.5606%" y="1477" width="0.0736%" height="15" fill="rgb(218,196,1)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1487.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (6 samples, 0.07%)</title><rect x="68.5606%" y="1461" width="0.0736%" height="15" fill="rgb(210,32,3)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1471.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (6 samples, 0.07%)</title><rect x="68.5606%" y="1445" width="0.0736%" height="15" fill="rgb(227,178,30)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1455.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (6 samples, 0.07%)</title><rect x="68.5606%" y="1429" width="0.0736%" height="15" fill="rgb(231,140,27)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1439.50"></text></g><g><title>cpal::host::alsa::Device::default_config (6 samples, 0.07%)</title><rect x="68.5606%" y="1413" width="0.0736%" height="15" fill="rgb(206,66,35)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1423.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (6 samples, 0.07%)</title><rect x="68.5606%" y="1397" width="0.0736%" height="15" fill="rgb(212,34,2)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1407.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (6 samples, 0.07%)</title><rect x="68.5606%" y="1381" width="0.0736%" height="15" fill="rgb(207,201,33)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1391.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (6 samples, 0.07%)</title><rect x="68.5606%" y="1365" width="0.0736%" height="15" fill="rgb(221,135,32)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1375.50"></text></g><g><title>alsa::pcm::PCM::new (6 samples, 0.07%)</title><rect x="68.5606%" y="1349" width="0.0736%" height="15" fill="rgb(206,77,31)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1359.50"></text></g><g><title>alsa::pcm::PCM::open (6 samples, 0.07%)</title><rect x="68.5606%" y="1333" width="0.0736%" height="15" fill="rgb(252,198,50)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1343.50"></text></g><g><title>snd_pcm_open (6 samples, 0.07%)</title><rect x="68.5606%" y="1317" width="0.0736%" height="15" fill="rgb(206,79,27)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1327.50"></text></g><g><title>[libasound.so.2.0.0] (6 samples, 0.07%)</title><rect x="68.5606%" y="1301" width="0.0736%" height="15" fill="rgb(228,108,9)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1311.50"></text></g><g><title>[libasound.so.2.0.0] (6 samples, 0.07%)</title><rect x="68.5606%" y="1285" width="0.0736%" height="15" fill="rgb(213,9,39)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1295.50"></text></g><g><title>[libasound.so.2.0.0] (6 samples, 0.07%)</title><rect x="68.5606%" y="1269" width="0.0736%" height="15" fill="rgb(252,51,13)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1279.50"></text></g><g><title>[libasound.so.2.0.0] (6 samples, 0.07%)</title><rect x="68.5606%" y="1253" width="0.0736%" height="15" fill="rgb(218,202,39)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1263.50"></text></g><g><title>snd_dlopen (6 samples, 0.07%)</title><rect x="68.5606%" y="1237" width="0.0736%" height="15" fill="rgb(214,122,21)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1247.50"></text></g><g><title>dlopen (6 samples, 0.07%)</title><rect x="68.5606%" y="1221" width="0.0736%" height="15" fill="rgb(217,205,48)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1231.50"></text></g><g><title>[libdl-2.33.so] (6 samples, 0.07%)</title><rect x="68.5606%" y="1205" width="0.0736%" height="15" fill="rgb(230,216,13)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1215.50"></text></g><g><title>__GI__dl_catch_error (6 samples, 0.07%)</title><rect x="68.5606%" y="1189" width="0.0736%" height="15" fill="rgb(249,118,4)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1199.50"></text></g><g><title>__GI__dl_catch_exception (6 samples, 0.07%)</title><rect x="68.5606%" y="1173" width="0.0736%" height="15" fill="rgb(212,207,40)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1183.50"></text></g><g><title>[libdl-2.33.so] (6 samples, 0.07%)</title><rect x="68.5606%" y="1157" width="0.0736%" height="15" fill="rgb(217,156,26)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1167.50"></text></g><g><title>_dl_open (6 samples, 0.07%)</title><rect x="68.5606%" y="1141" width="0.0736%" height="15" fill="rgb(226,86,34)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1151.50"></text></g><g><title>__GI__dl_catch_exception (6 samples, 0.07%)</title><rect x="68.5606%" y="1125" width="0.0736%" height="15" fill="rgb(217,111,30)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1135.50"></text></g><g><title>dl_open_worker (6 samples, 0.07%)</title><rect x="68.5606%" y="1109" width="0.0736%" height="15" fill="rgb(228,64,18)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1119.50"></text></g><g><title>_dl_relocate_object (6 samples, 0.07%)</title><rect x="68.5606%" y="1093" width="0.0736%" height="15" fill="rgb(254,217,48)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1103.50"></text></g><g><title>_dl_lookup_symbol_x (6 samples, 0.07%)</title><rect x="68.5606%" y="1077" width="0.0736%" height="15" fill="rgb(226,156,48)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1087.50"></text></g><g><title>do_lookup_x (6 samples, 0.07%)</title><rect x="68.5606%" y="1061" width="0.0736%" height="15" fill="rgb(236,168,20)" fg:x="5587" fg:w="6"/><text x="68.8106%" y="1071.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (3 samples, 0.04%)</title><rect x="68.6342%" y="1509" width="0.0368%" height="15" fill="rgb(239,210,33)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1519.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (3 samples, 0.04%)</title><rect x="68.6342%" y="1493" width="0.0368%" height="15" fill="rgb(242,85,17)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1503.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (3 samples, 0.04%)</title><rect x="68.6342%" y="1477" width="0.0368%" height="15" fill="rgb(221,196,15)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1487.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (3 samples, 0.04%)</title><rect x="68.6342%" y="1461" width="0.0368%" height="15" fill="rgb(249,76,21)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1471.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (3 samples, 0.04%)</title><rect x="68.6342%" y="1445" width="0.0368%" height="15" fill="rgb(243,67,29)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1455.50"></text></g><g><title>cpal::host::alsa::Device::default_config (3 samples, 0.04%)</title><rect x="68.6342%" y="1429" width="0.0368%" height="15" fill="rgb(240,159,2)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1439.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (3 samples, 0.04%)</title><rect x="68.6342%" y="1413" width="0.0368%" height="15" fill="rgb(244,64,3)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1423.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (3 samples, 0.04%)</title><rect x="68.6342%" y="1397" width="0.0368%" height="15" fill="rgb(220,86,40)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1407.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (3 samples, 0.04%)</title><rect x="68.6342%" y="1381" width="0.0368%" height="15" fill="rgb(222,194,51)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1391.50"></text></g><g><title>alsa::pcm::PCM::new (3 samples, 0.04%)</title><rect x="68.6342%" y="1365" width="0.0368%" height="15" fill="rgb(207,154,19)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1375.50"></text></g><g><title>alsa::pcm::PCM::open (3 samples, 0.04%)</title><rect x="68.6342%" y="1349" width="0.0368%" height="15" fill="rgb(206,178,36)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1359.50"></text></g><g><title>snd_pcm_open (3 samples, 0.04%)</title><rect x="68.6342%" y="1333" width="0.0368%" height="15" fill="rgb(218,8,24)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1343.50"></text></g><g><title>[libasound.so.2.0.0] (3 samples, 0.04%)</title><rect x="68.6342%" y="1317" width="0.0368%" height="15" fill="rgb(226,83,41)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1327.50"></text></g><g><title>[libasound.so.2.0.0] (3 samples, 0.04%)</title><rect x="68.6342%" y="1301" width="0.0368%" height="15" fill="rgb(224,23,22)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1311.50"></text></g><g><title>[libasound.so.2.0.0] (3 samples, 0.04%)</title><rect x="68.6342%" y="1285" width="0.0368%" height="15" fill="rgb(218,198,45)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1295.50"></text></g><g><title>[libasound.so.2.0.0] (3 samples, 0.04%)</title><rect x="68.6342%" y="1269" width="0.0368%" height="15" fill="rgb(249,147,41)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1279.50"></text></g><g><title>snd_dlopen (3 samples, 0.04%)</title><rect x="68.6342%" y="1253" width="0.0368%" height="15" fill="rgb(244,224,13)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1263.50"></text></g><g><title>dlopen (3 samples, 0.04%)</title><rect x="68.6342%" y="1237" width="0.0368%" height="15" fill="rgb(225,97,27)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1247.50"></text></g><g><title>[libdl-2.33.so] (3 samples, 0.04%)</title><rect x="68.6342%" y="1221" width="0.0368%" height="15" fill="rgb(254,64,0)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1231.50"></text></g><g><title>__GI__dl_catch_error (3 samples, 0.04%)</title><rect x="68.6342%" y="1205" width="0.0368%" height="15" fill="rgb(208,130,43)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1215.50"></text></g><g><title>__GI__dl_catch_exception (3 samples, 0.04%)</title><rect x="68.6342%" y="1189" width="0.0368%" height="15" fill="rgb(247,91,25)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1199.50"></text></g><g><title>[libdl-2.33.so] (3 samples, 0.04%)</title><rect x="68.6342%" y="1173" width="0.0368%" height="15" fill="rgb(215,218,42)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1183.50"></text></g><g><title>_dl_open (3 samples, 0.04%)</title><rect x="68.6342%" y="1157" width="0.0368%" height="15" fill="rgb(233,9,24)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1167.50"></text></g><g><title>__GI__dl_catch_exception (3 samples, 0.04%)</title><rect x="68.6342%" y="1141" width="0.0368%" height="15" fill="rgb(252,105,38)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1151.50"></text></g><g><title>dl_open_worker (3 samples, 0.04%)</title><rect x="68.6342%" y="1125" width="0.0368%" height="15" fill="rgb(225,40,49)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1135.50"></text></g><g><title>_dl_relocate_object (3 samples, 0.04%)</title><rect x="68.6342%" y="1109" width="0.0368%" height="15" fill="rgb(232,196,19)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1119.50"></text></g><g><title>_dl_lookup_symbol_x (3 samples, 0.04%)</title><rect x="68.6342%" y="1093" width="0.0368%" height="15" fill="rgb(207,35,15)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1103.50"></text></g><g><title>do_lookup_x (3 samples, 0.04%)</title><rect x="68.6342%" y="1077" width="0.0368%" height="15" fill="rgb(238,68,36)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1087.50"></text></g><g><title>check_match (3 samples, 0.04%)</title><rect x="68.6342%" y="1061" width="0.0368%" height="15" fill="rgb(205,158,20)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1071.50"></text></g><g><title>strcmp (3 samples, 0.04%)</title><rect x="68.6342%" y="1045" width="0.0368%" height="15" fill="rgb(232,32,22)" fg:x="5593" fg:w="3"/><text x="68.8842%" y="1055.50"></text></g><g><title>_dl_map_object_from_fd (2 samples, 0.02%)</title><rect x="68.6710%" y="1301" width="0.0245%" height="15" fill="rgb(210,169,6)" fg:x="5596" fg:w="2"/><text x="68.9210%" y="1311.50"></text></g><g><title>snd_dlopen (3 samples, 0.04%)</title><rect x="68.6710%" y="1509" width="0.0368%" height="15" fill="rgb(229,28,12)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1519.50"></text></g><g><title>dlopen (3 samples, 0.04%)</title><rect x="68.6710%" y="1493" width="0.0368%" height="15" fill="rgb(229,78,10)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1503.50"></text></g><g><title>[libdl-2.33.so] (3 samples, 0.04%)</title><rect x="68.6710%" y="1477" width="0.0368%" height="15" fill="rgb(223,139,54)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1487.50"></text></g><g><title>__GI__dl_catch_error (3 samples, 0.04%)</title><rect x="68.6710%" y="1461" width="0.0368%" height="15" fill="rgb(207,110,4)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1471.50"></text></g><g><title>__GI__dl_catch_exception (3 samples, 0.04%)</title><rect x="68.6710%" y="1445" width="0.0368%" height="15" fill="rgb(248,30,41)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1455.50"></text></g><g><title>[libdl-2.33.so] (3 samples, 0.04%)</title><rect x="68.6710%" y="1429" width="0.0368%" height="15" fill="rgb(235,54,25)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1439.50"></text></g><g><title>_dl_open (3 samples, 0.04%)</title><rect x="68.6710%" y="1413" width="0.0368%" height="15" fill="rgb(213,107,41)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1423.50"></text></g><g><title>__GI__dl_catch_exception (3 samples, 0.04%)</title><rect x="68.6710%" y="1397" width="0.0368%" height="15" fill="rgb(237,102,9)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1407.50"></text></g><g><title>dl_open_worker (3 samples, 0.04%)</title><rect x="68.6710%" y="1381" width="0.0368%" height="15" fill="rgb(252,137,49)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1391.50"></text></g><g><title>_dl_map_object_deps (3 samples, 0.04%)</title><rect x="68.6710%" y="1365" width="0.0368%" height="15" fill="rgb(233,202,33)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1375.50"></text></g><g><title>__GI__dl_catch_exception (3 samples, 0.04%)</title><rect x="68.6710%" y="1349" width="0.0368%" height="15" fill="rgb(223,14,51)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1359.50"></text></g><g><title>openaux (3 samples, 0.04%)</title><rect x="68.6710%" y="1333" width="0.0368%" height="15" fill="rgb(248,70,23)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1343.50"></text></g><g><title>_dl_map_object (3 samples, 0.04%)</title><rect x="68.6710%" y="1317" width="0.0368%" height="15" fill="rgb(209,207,47)" fg:x="5596" fg:w="3"/><text x="68.9210%" y="1327.50"></text></g><g><title>open_verify.constprop.0 (1 samples, 0.01%)</title><rect x="68.6955%" y="1301" width="0.0123%" height="15" fill="rgb(245,124,2)" fg:x="5598" fg:w="1"/><text x="68.9455%" y="1311.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="68.6955%" y="1285" width="0.0123%" height="15" fill="rgb(249,208,11)" fg:x="5598" fg:w="1"/><text x="68.9455%" y="1295.50"></text></g><g><title>spvValidateWithOptions (1 samples, 0.01%)</title><rect x="68.7078%" y="1509" width="0.0123%" height="15" fill="rgb(247,112,7)" fg:x="5599" fg:w="1"/><text x="68.9578%" y="1519.50"></text></g><g><title>spvtools::val::(anonymous namespace)::ValidateBinaryUsingContextAndValidationState (1 samples, 0.01%)</title><rect x="68.7078%" y="1493" width="0.0123%" height="15" fill="rgb(209,192,31)" fg:x="5599" fg:w="1"/><text x="68.9578%" y="1503.50"></text></g><g><title>spvtools::val::ValidateSmallTypeUses (1 samples, 0.01%)</title><rect x="68.7078%" y="1477" width="0.0123%" height="15" fill="rgb(236,55,19)" fg:x="5599" fg:w="1"/><text x="68.9578%" y="1487.50"></text></g><g><title>spvtools::val::ValidationState_t::ContainsLimitedUseIntOrFloatType (1 samples, 0.01%)</title><rect x="68.7078%" y="1461" width="0.0123%" height="15" fill="rgb(252,89,41)" fg:x="5599" fg:w="1"/><text x="68.9578%" y="1471.50"></text></g><g><title>spvtools::val::ValidationState_t::ContainsSizedIntOrFloatType (1 samples, 0.01%)</title><rect x="68.7078%" y="1445" width="0.0123%" height="15" fill="rgb(220,172,14)" fg:x="5599" fg:w="1"/><text x="68.9578%" y="1455.50"></text></g><g><title>spvtools::val::(anonymous namespace)::ValidateBinaryUsingContextAndValidationState (1 samples, 0.01%)</title><rect x="68.7201%" y="1509" width="0.0123%" height="15" fill="rgb(252,65,2)" fg:x="5600" fg:w="1"/><text x="68.9701%" y="1519.50"></text></g><g><title>spvtools::val::MemoryPass (1 samples, 0.01%)</title><rect x="68.7201%" y="1493" width="0.0123%" height="15" fill="rgb(250,20,8)" fg:x="5600" fg:w="1"/><text x="68.9701%" y="1503.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_get_insert_unique_pos (1 samples, 0.01%)</title><rect x="68.7324%" y="1509" width="0.0123%" height="15" fill="rgb(234,149,13)" fg:x="5601" fg:w="1"/><text x="68.9824%" y="1519.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::reserve (1 samples, 0.01%)</title><rect x="68.7446%" y="1509" width="0.0123%" height="15" fill="rgb(223,219,12)" fg:x="5602" fg:w="1"/><text x="68.9946%" y="1519.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="68.7569%" y="1509" width="0.0123%" height="15" fill="rgb(234,13,49)" fg:x="5603" fg:w="1"/><text x="69.0069%" y="1519.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (1 samples, 0.01%)</title><rect x="68.8060%" y="1461" width="0.0123%" height="15" fill="rgb(214,41,25)" fg:x="5607" fg:w="1"/><text x="69.0560%" y="1471.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (1 samples, 0.01%)</title><rect x="68.8060%" y="1445" width="0.0123%" height="15" fill="rgb(232,198,52)" fg:x="5607" fg:w="1"/><text x="69.0560%" y="1455.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (1 samples, 0.01%)</title><rect x="68.8183%" y="1269" width="0.0123%" height="15" fill="rgb(236,111,46)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1279.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (1 samples, 0.01%)</title><rect x="68.8183%" y="1253" width="0.0123%" height="15" fill="rgb(253,30,20)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1263.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (1 samples, 0.01%)</title><rect x="68.8183%" y="1237" width="0.0123%" height="15" fill="rgb(247,141,17)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (1 samples, 0.01%)</title><rect x="68.8183%" y="1221" width="0.0123%" height="15" fill="rgb(214,195,21)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1231.50"></text></g><g><title>wgpu::Device::create_bind_group (1 samples, 0.01%)</title><rect x="68.8183%" y="1205" width="0.0123%" height="15" fill="rgb(214,98,12)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1215.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (1 samples, 0.01%)</title><rect x="68.8183%" y="1189" width="0.0123%" height="15" fill="rgb(239,4,26)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1199.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (1 samples, 0.01%)</title><rect x="68.8183%" y="1173" width="0.0123%" height="15" fill="rgb(234,210,35)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1183.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_bind_group (1 samples, 0.01%)</title><rect x="68.8183%" y="1157" width="0.0123%" height="15" fill="rgb(252,178,27)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1167.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::write_descriptor_set (1 samples, 0.01%)</title><rect x="68.8183%" y="1141" width="0.0123%" height="15" fill="rgb(217,50,1)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="68.8183%" y="1125" width="0.0123%" height="15" fill="rgb(233,137,5)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="68.8183%" y="1109" width="0.0123%" height="15" fill="rgb(217,227,25)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="68.8183%" y="1093" width="0.0123%" height="15" fill="rgb(242,89,38)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="68.8183%" y="1077" width="0.0123%" height="15" fill="rgb(212,190,30)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="68.8183%" y="1061" width="0.0123%" height="15" fill="rgb(222,120,8)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="68.8183%" y="1045" width="0.0123%" height="15" fill="rgb(227,181,9)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1055.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="68.8183%" y="1029" width="0.0123%" height="15" fill="rgb(222,125,29)" fg:x="5608" fg:w="1"/><text x="69.0683%" y="1039.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_render_pipeline (1 samples, 0.01%)</title><rect x="68.8305%" y="1237" width="0.0123%" height="15" fill="rgb(215,153,31)" fg:x="5609" fg:w="1"/><text x="69.0805%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_shader_module_from_source (1 samples, 0.01%)</title><rect x="68.8305%" y="1221" width="0.0123%" height="15" fill="rgb(228,77,30)" fg:x="5609" fg:w="1"/><text x="69.0805%" y="1231.50"></text></g><g><title>wgpu::Device::create_shader_module (1 samples, 0.01%)</title><rect x="68.8305%" y="1205" width="0.0123%" height="15" fill="rgb(226,110,9)" fg:x="5609" fg:w="1"/><text x="69.0805%" y="1215.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_shader_module (1 samples, 0.01%)</title><rect x="68.8305%" y="1189" width="0.0123%" height="15" fill="rgb(219,111,7)" fg:x="5609" fg:w="1"/><text x="69.0805%" y="1199.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_shader_module (1 samples, 0.01%)</title><rect x="68.8305%" y="1173" width="0.0123%" height="15" fill="rgb(229,167,25)" fg:x="5609" fg:w="1"/><text x="69.0805%" y="1183.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_shader_module (1 samples, 0.01%)</title><rect x="68.8305%" y="1157" width="0.0123%" height="15" fill="rgb(209,77,43)" fg:x="5609" fg:w="1"/><text x="69.0805%" y="1167.50"></text></g><g><title>naga::front::spv::Parser&lt;I&gt;::parse (1 samples, 0.01%)</title><rect x="68.8305%" y="1141" width="0.0123%" height="15" fill="rgb(233,70,39)" fg:x="5609" fg:w="1"/><text x="69.0805%" y="1151.50"></text></g><g><title>local_Rb_tree_increment (2 samples, 0.02%)</title><rect x="68.8673%" y="1077" width="0.0245%" height="15" fill="rgb(207,171,44)" fg:x="5612" fg:w="2"/><text x="69.1173%" y="1087.50"></text></g><g><title>local_Rb_tree_increment (3 samples, 0.04%)</title><rect x="68.8673%" y="1093" width="0.0368%" height="15" fill="rgb(244,91,6)" fg:x="5612" fg:w="3"/><text x="69.1173%" y="1103.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="68.8919%" y="1077" width="0.0123%" height="15" fill="rgb(234,136,12)" fg:x="5614" fg:w="1"/><text x="69.1419%" y="1087.50"></text></g><g><title>glslang::TSymbolTableLevel::readOnly (9 samples, 0.11%)</title><rect x="68.8428%" y="1125" width="0.1104%" height="15" fill="rgb(216,210,38)" fg:x="5610" fg:w="9"/><text x="69.0928%" y="1135.50"></text></g><g><title>std::_Rb_tree_increment (7 samples, 0.09%)</title><rect x="68.8673%" y="1109" width="0.0859%" height="15" fill="rgb(241,227,7)" fg:x="5612" fg:w="7"/><text x="69.1173%" y="1119.50"></text></g><g><title>std::_Rb_tree_increment (4 samples, 0.05%)</title><rect x="68.9042%" y="1093" width="0.0491%" height="15" fill="rgb(241,222,11)" fg:x="5615" fg:w="4"/><text x="69.1542%" y="1103.50"></text></g><g><title>glslang::TFunction::~TFunction (1 samples, 0.01%)</title><rect x="68.9532%" y="1109" width="0.0123%" height="15" fill="rgb(246,86,18)" fg:x="5619" fg:w="1"/><text x="69.2032%" y="1119.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (11 samples, 0.13%)</title><rect x="68.8428%" y="1237" width="0.1350%" height="15" fill="rgb(224,151,49)" fg:x="5610" fg:w="11"/><text x="69.0928%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (11 samples, 0.13%)</title><rect x="68.8428%" y="1221" width="0.1350%" height="15" fill="rgb(235,4,41)" fg:x="5610" fg:w="11"/><text x="69.0928%" y="1231.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (11 samples, 0.13%)</title><rect x="68.8428%" y="1205" width="0.1350%" height="15" fill="rgb(218,30,52)" fg:x="5610" fg:w="11"/><text x="69.0928%" y="1215.50"></text></g><g><title>bevy_glsl_to_spirv::compile (11 samples, 0.13%)</title><rect x="68.8428%" y="1189" width="0.1350%" height="15" fill="rgb(205,124,51)" fg:x="5610" fg:w="11"/><text x="69.0928%" y="1199.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (11 samples, 0.13%)</title><rect x="68.8428%" y="1173" width="0.1350%" height="15" fill="rgb(237,126,51)" fg:x="5610" fg:w="11"/><text x="69.0928%" y="1183.50"></text></g><g><title>glslang_shader_preprocess (11 samples, 0.13%)</title><rect x="68.8428%" y="1157" width="0.1350%" height="15" fill="rgb(225,32,46)" fg:x="5610" fg:w="11"/><text x="69.0928%" y="1167.50"></text></g><g><title>glslang::TShader::preprocess (11 samples, 0.13%)</title><rect x="68.8428%" y="1141" width="0.1350%" height="15" fill="rgb(251,60,49)" fg:x="5610" fg:w="11"/><text x="69.0928%" y="1151.50"></text></g><g><title>glslang::TSymbolTableLevel::~TSymbolTableLevel (2 samples, 0.02%)</title><rect x="68.9532%" y="1125" width="0.0245%" height="15" fill="rgb(234,18,23)" fg:x="5619" fg:w="2"/><text x="69.2032%" y="1135.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="68.9655%" y="1109" width="0.0123%" height="15" fill="rgb(234,25,23)" fg:x="5620" fg:w="1"/><text x="69.2155%" y="1119.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="68.9655%" y="1093" width="0.0123%" height="15" fill="rgb(210,43,52)" fg:x="5620" fg:w="1"/><text x="69.2155%" y="1103.50"></text></g><g><title>glslang::TSymbolTable::copyTable (1 samples, 0.01%)</title><rect x="68.9778%" y="1093" width="0.0123%" height="15" fill="rgb(237,198,21)" fg:x="5621" fg:w="1"/><text x="69.2278%" y="1103.50"></text></g><g><title>local_Rb_tree_increment (1 samples, 0.01%)</title><rect x="69.0023%" y="1061" width="0.0123%" height="15" fill="rgb(211,20,34)" fg:x="5623" fg:w="1"/><text x="69.2523%" y="1071.50"></text></g><g><title>local_Rb_tree_increment (1 samples, 0.01%)</title><rect x="69.0023%" y="1045" width="0.0123%" height="15" fill="rgb(221,155,50)" fg:x="5623" fg:w="1"/><text x="69.2523%" y="1055.50"></text></g><g><title>glslang::TSymbolTableLevel::readOnly (9 samples, 0.11%)</title><rect x="68.9901%" y="1093" width="0.1104%" height="15" fill="rgb(213,214,53)" fg:x="5622" fg:w="9"/><text x="69.2401%" y="1103.50"></text></g><g><title>std::_Rb_tree_increment (8 samples, 0.10%)</title><rect x="69.0023%" y="1077" width="0.0982%" height="15" fill="rgb(215,229,48)" fg:x="5623" fg:w="8"/><text x="69.2523%" y="1087.50"></text></g><g><title>std::_Rb_tree_increment (7 samples, 0.09%)</title><rect x="69.0146%" y="1061" width="0.0859%" height="15" fill="rgb(243,88,5)" fg:x="5624" fg:w="7"/><text x="69.2646%" y="1071.50"></text></g><g><title>glslang::TFunction::~TFunction (4 samples, 0.05%)</title><rect x="69.1128%" y="1077" width="0.0491%" height="15" fill="rgb(216,199,8)" fg:x="5632" fg:w="4"/><text x="69.3628%" y="1087.50"></text></g><g><title>async_executor::Executor::try_tick (29 samples, 0.36%)</title><rect x="68.8183%" y="1461" width="0.3559%" height="15" fill="rgb(241,22,4)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1471.50"></text></g><g><title>async_task::runnable::Runnable::run (29 samples, 0.36%)</title><rect x="68.8183%" y="1445" width="0.3559%" height="15" fill="rgb(209,190,22)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1455.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (29 samples, 0.36%)</title><rect x="68.8183%" y="1429" width="0.3559%" height="15" fill="rgb(251,138,45)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1439.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.36%)</title><rect x="68.8183%" y="1413" width="0.3559%" height="15" fill="rgb(219,111,22)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1423.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (29 samples, 0.36%)</title><rect x="68.8183%" y="1397" width="0.3559%" height="15" fill="rgb(253,29,49)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1407.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (29 samples, 0.36%)</title><rect x="68.8183%" y="1381" width="0.3559%" height="15" fill="rgb(238,129,49)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1391.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (29 samples, 0.36%)</title><rect x="68.8183%" y="1365" width="0.3559%" height="15" fill="rgb(240,26,41)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1375.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (29 samples, 0.36%)</title><rect x="68.8183%" y="1349" width="0.3559%" height="15" fill="rgb(221,47,33)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1359.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (29 samples, 0.36%)</title><rect x="68.8183%" y="1333" width="0.3559%" height="15" fill="rgb(216,200,17)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1343.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (29 samples, 0.36%)</title><rect x="68.8183%" y="1317" width="0.3559%" height="15" fill="rgb(230,151,26)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1327.50"></text></g><g><title>core::ops::function::Fn::call (29 samples, 0.36%)</title><rect x="68.8183%" y="1301" width="0.3559%" height="15" fill="rgb(242,182,16)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1311.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (29 samples, 0.36%)</title><rect x="68.8183%" y="1285" width="0.3559%" height="15" fill="rgb(236,35,53)" fg:x="5608" fg:w="29"/><text x="69.0683%" y="1295.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (28 samples, 0.34%)</title><rect x="68.8305%" y="1269" width="0.3436%" height="15" fill="rgb(214,180,28)" fg:x="5609" fg:w="28"/><text x="69.0805%" y="1279.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (28 samples, 0.34%)</title><rect x="68.8305%" y="1253" width="0.3436%" height="15" fill="rgb(208,173,36)" fg:x="5609" fg:w="28"/><text x="69.0805%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.20%)</title><rect x="68.9778%" y="1237" width="0.1963%" height="15" fill="rgb(218,39,15)" fg:x="5621" fg:w="16"/><text x="69.2278%" y="1247.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (16 samples, 0.20%)</title><rect x="68.9778%" y="1221" width="0.1963%" height="15" fill="rgb(213,145,15)" fg:x="5621" fg:w="16"/><text x="69.2278%" y="1231.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (16 samples, 0.20%)</title><rect x="68.9778%" y="1205" width="0.1963%" height="15" fill="rgb(242,110,37)" fg:x="5621" fg:w="16"/><text x="69.2278%" y="1215.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (16 samples, 0.20%)</title><rect x="68.9778%" y="1189" width="0.1963%" height="15" fill="rgb(247,146,22)" fg:x="5621" fg:w="16"/><text x="69.2278%" y="1199.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (16 samples, 0.20%)</title><rect x="68.9778%" y="1173" width="0.1963%" height="15" fill="rgb(215,191,7)" fg:x="5621" fg:w="16"/><text x="69.2278%" y="1183.50"></text></g><g><title>bevy_glsl_to_spirv::compile (16 samples, 0.20%)</title><rect x="68.9778%" y="1157" width="0.1963%" height="15" fill="rgb(240,158,1)" fg:x="5621" fg:w="16"/><text x="69.2278%" y="1167.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (16 samples, 0.20%)</title><rect x="68.9778%" y="1141" width="0.1963%" height="15" fill="rgb(241,78,32)" fg:x="5621" fg:w="16"/><text x="69.2278%" y="1151.50"></text></g><g><title>glslang_shader_preprocess (16 samples, 0.20%)</title><rect x="68.9778%" y="1125" width="0.1963%" height="15" fill="rgb(248,83,10)" fg:x="5621" fg:w="16"/><text x="69.2278%" y="1135.50"></text></g><g><title>glslang::TShader::preprocess (16 samples, 0.20%)</title><rect x="68.9778%" y="1109" width="0.1963%" height="15" fill="rgb(241,52,0)" fg:x="5621" fg:w="16"/><text x="69.2278%" y="1119.50"></text></g><g><title>glslang::TSymbolTableLevel::~TSymbolTableLevel (6 samples, 0.07%)</title><rect x="69.1005%" y="1093" width="0.0736%" height="15" fill="rgb(238,37,13)" fg:x="5631" fg:w="6"/><text x="69.3505%" y="1103.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="69.1619%" y="1077" width="0.0123%" height="15" fill="rgb(242,194,17)" fg:x="5636" fg:w="1"/><text x="69.4119%" y="1087.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="69.1619%" y="1061" width="0.0123%" height="15" fill="rgb(236,96,3)" fg:x="5636" fg:w="1"/><text x="69.4119%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.44%)</title><rect x="68.7692%" y="1509" width="0.4418%" height="15" fill="rgb(235,148,34)" fg:x="5604" fg:w="36"/><text x="69.0192%" y="1519.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.43%)</title><rect x="68.7814%" y="1493" width="0.4295%" height="15" fill="rgb(254,12,11)" fg:x="5605" fg:w="35"/><text x="69.0314%" y="1503.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (35 samples, 0.43%)</title><rect x="68.7814%" y="1477" width="0.4295%" height="15" fill="rgb(207,31,54)" fg:x="5605" fg:w="35"/><text x="69.0314%" y="1487.50"></text></g><g><title>futures_lite::future::block_on (3 samples, 0.04%)</title><rect x="69.1741%" y="1461" width="0.0368%" height="15" fill="rgb(252,14,28)" fg:x="5637" fg:w="3"/><text x="69.4241%" y="1471.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="69.2109%" y="1509" width="0.0123%" height="15" fill="rgb(252,108,36)" fg:x="5640" fg:w="1"/><text x="69.4609%" y="1519.50"></text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (1 samples, 0.01%)</title><rect x="69.2232%" y="1509" width="0.0123%" height="15" fill="rgb(214,149,7)" fg:x="5641" fg:w="1"/><text x="69.4732%" y="1519.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (1 samples, 0.01%)</title><rect x="69.2355%" y="1509" width="0.0123%" height="15" fill="rgb(243,94,12)" fg:x="5642" fg:w="1"/><text x="69.4855%" y="1519.50"></text></g><g><title>wgpu::BufferSlice::map_async (2 samples, 0.02%)</title><rect x="69.2478%" y="1509" width="0.0245%" height="15" fill="rgb(208,36,10)" fg:x="5643" fg:w="2"/><text x="69.4978%" y="1519.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="69.2846%" y="1461" width="0.0123%" height="15" fill="rgb(233,185,52)" fg:x="5646" fg:w="1"/><text x="69.5346%" y="1471.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="69.2846%" y="1445" width="0.0123%" height="15" fill="rgb(234,50,45)" fg:x="5646" fg:w="1"/><text x="69.5346%" y="1455.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="69.2846%" y="1429" width="0.0123%" height="15" fill="rgb(228,92,54)" fg:x="5646" fg:w="1"/><text x="69.5346%" y="1439.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="69.2846%" y="1413" width="0.0123%" height="15" fill="rgb(224,85,25)" fg:x="5646" fg:w="1"/><text x="69.5346%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.61%)</title><rect x="69.3214%" y="1413" width="0.6136%" height="15" fill="rgb(246,1,45)" fg:x="5649" fg:w="50"/><text x="69.5714%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (47 samples, 0.58%)</title><rect x="69.3582%" y="1397" width="0.5768%" height="15" fill="rgb(240,66,23)" fg:x="5652" fg:w="47"/><text x="69.6082%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (38 samples, 0.47%)</title><rect x="69.4686%" y="1381" width="0.4663%" height="15" fill="rgb(222,96,27)" fg:x="5661" fg:w="38"/><text x="69.7186%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (23 samples, 0.28%)</title><rect x="69.6527%" y="1365" width="0.2822%" height="15" fill="rgb(212,136,10)" fg:x="5676" fg:w="23"/><text x="69.9027%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.18%)</title><rect x="69.7509%" y="1349" width="0.1841%" height="15" fill="rgb(226,192,50)" fg:x="5684" fg:w="15"/><text x="70.0009%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (9 samples, 0.11%)</title><rect x="69.8245%" y="1333" width="0.1104%" height="15" fill="rgb(241,182,31)" fg:x="5690" fg:w="9"/><text x="70.0745%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="69.8736%" y="1317" width="0.0614%" height="15" fill="rgb(219,205,47)" fg:x="5694" fg:w="5"/><text x="70.1236%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="69.8736%" y="1301" width="0.0614%" height="15" fill="rgb(207,96,14)" fg:x="5694" fg:w="5"/><text x="70.1236%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="69.8859%" y="1285" width="0.0491%" height="15" fill="rgb(216,119,9)" fg:x="5695" fg:w="4"/><text x="70.1359%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="69.9227%" y="1269" width="0.0123%" height="15" fill="rgb(235,62,36)" fg:x="5698" fg:w="1"/><text x="70.1727%" y="1279.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="69.9227%" y="1253" width="0.0123%" height="15" fill="rgb(214,41,27)" fg:x="5698" fg:w="1"/><text x="70.1727%" y="1263.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_begin_render_pass (53 samples, 0.65%)</title><rect x="69.2968%" y="1461" width="0.6504%" height="15" fill="rgb(214,174,37)" fg:x="5647" fg:w="53"/><text x="69.5468%" y="1471.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_begin_render_pass (53 samples, 0.65%)</title><rect x="69.2968%" y="1445" width="0.6504%" height="15" fill="rgb(212,11,25)" fg:x="5647" fg:w="53"/><text x="69.5468%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (53 samples, 0.65%)</title><rect x="69.2968%" y="1429" width="0.6504%" height="15" fill="rgb(217,71,35)" fg:x="5647" fg:w="53"/><text x="69.5468%" y="1439.50"></text></g><g><title>__memcpy_sse2_unaligned (1 samples, 0.01%)</title><rect x="69.9350%" y="1413" width="0.0123%" height="15" fill="rgb(234,152,9)" fg:x="5699" fg:w="1"/><text x="70.1850%" y="1423.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin_render_pass (55 samples, 0.67%)</title><rect x="69.2846%" y="1477" width="0.6749%" height="15" fill="rgb(228,32,51)" fg:x="5646" fg:w="55"/><text x="69.5346%" y="1487.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (1 samples, 0.01%)</title><rect x="69.9472%" y="1461" width="0.0123%" height="15" fill="rgb(209,14,47)" fg:x="5700" fg:w="1"/><text x="70.1972%" y="1471.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_scissors (1 samples, 0.01%)</title><rect x="69.9595%" y="1477" width="0.0123%" height="15" fill="rgb(218,201,17)" fg:x="5701" fg:w="1"/><text x="70.2095%" y="1487.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="69.9595%" y="1461" width="0.0123%" height="15" fill="rgb(218,98,15)" fg:x="5701" fg:w="1"/><text x="70.2095%" y="1471.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (1 samples, 0.01%)</title><rect x="69.9595%" y="1445" width="0.0123%" height="15" fill="rgb(233,202,29)" fg:x="5701" fg:w="1"/><text x="70.2095%" y="1455.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (1 samples, 0.01%)</title><rect x="69.9595%" y="1429" width="0.0123%" height="15" fill="rgb(207,196,44)" fg:x="5701" fg:w="1"/><text x="70.2095%" y="1439.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="69.9595%" y="1413" width="0.0123%" height="15" fill="rgb(218,63,34)" fg:x="5701" fg:w="1"/><text x="70.2095%" y="1423.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (1 samples, 0.01%)</title><rect x="69.9595%" y="1397" width="0.0123%" height="15" fill="rgb(209,10,5)" fg:x="5701" fg:w="1"/><text x="70.2095%" y="1407.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (1 samples, 0.01%)</title><rect x="69.9595%" y="1381" width="0.0123%" height="15" fill="rgb(224,36,28)" fg:x="5701" fg:w="1"/><text x="70.2095%" y="1391.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_scissors::{{closure}} (1 samples, 0.01%)</title><rect x="69.9595%" y="1365" width="0.0123%" height="15" fill="rgb(249,178,7)" fg:x="5701" fg:w="1"/><text x="70.2095%" y="1375.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_set_scissor (1 samples, 0.01%)</title><rect x="69.9595%" y="1349" width="0.0123%" height="15" fill="rgb(253,163,10)" fg:x="5701" fg:w="1"/><text x="70.2095%" y="1359.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_set_scissor (1 samples, 0.01%)</title><rect x="69.9595%" y="1333" width="0.0123%" height="15" fill="rgb(245,67,46)" fg:x="5701" fg:w="1"/><text x="70.2095%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="69.9595%" y="1317" width="0.0123%" height="15" fill="rgb(225,14,18)" fg:x="5701" fg:w="1"/><text x="70.2095%" y="1327.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_viewports::{{closure}} (1 samples, 0.01%)</title><rect x="69.9840%" y="1365" width="0.0123%" height="15" fill="rgb(217,41,54)" fg:x="5703" fg:w="1"/><text x="70.2340%" y="1375.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_set_viewport (1 samples, 0.01%)</title><rect x="69.9840%" y="1349" width="0.0123%" height="15" fill="rgb(222,111,11)" fg:x="5703" fg:w="1"/><text x="70.2340%" y="1359.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_set_viewport (1 samples, 0.01%)</title><rect x="69.9840%" y="1333" width="0.0123%" height="15" fill="rgb(211,85,31)" fg:x="5703" fg:w="1"/><text x="70.2340%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="69.9840%" y="1317" width="0.0123%" height="15" fill="rgb(223,29,26)" fg:x="5703" fg:w="1"/><text x="70.2340%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="69.9840%" y="1301" width="0.0123%" height="15" fill="rgb(236,124,50)" fg:x="5703" fg:w="1"/><text x="70.2340%" y="1311.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_viewports (3 samples, 0.04%)</title><rect x="69.9718%" y="1477" width="0.0368%" height="15" fill="rgb(219,148,15)" fg:x="5702" fg:w="3"/><text x="70.2218%" y="1487.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (3 samples, 0.04%)</title><rect x="69.9718%" y="1461" width="0.0368%" height="15" fill="rgb(248,159,33)" fg:x="5702" fg:w="3"/><text x="70.2218%" y="1471.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (3 samples, 0.04%)</title><rect x="69.9718%" y="1445" width="0.0368%" height="15" fill="rgb(252,65,8)" fg:x="5702" fg:w="3"/><text x="70.2218%" y="1455.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (3 samples, 0.04%)</title><rect x="69.9718%" y="1429" width="0.0368%" height="15" fill="rgb(236,45,7)" fg:x="5702" fg:w="3"/><text x="70.2218%" y="1439.50"></text></g><g><title>inplace_it::fixed_array::indirect (2 samples, 0.02%)</title><rect x="69.9840%" y="1413" width="0.0245%" height="15" fill="rgb(244,3,48)" fg:x="5703" fg:w="2"/><text x="70.2340%" y="1423.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (2 samples, 0.02%)</title><rect x="69.9840%" y="1397" width="0.0245%" height="15" fill="rgb(224,123,53)" fg:x="5703" fg:w="2"/><text x="70.2340%" y="1407.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (2 samples, 0.02%)</title><rect x="69.9840%" y="1381" width="0.0245%" height="15" fill="rgb(223,173,15)" fg:x="5703" fg:w="2"/><text x="70.2340%" y="1391.50"></text></g><g><title>inplace_it::guards::uninitialized_slice_memory_guard::UninitializedSliceMemoryGuard&lt;T&gt;::init_with_dyn_iter (1 samples, 0.01%)</title><rect x="69.9963%" y="1365" width="0.0123%" height="15" fill="rgb(254,181,5)" fg:x="5704" fg:w="1"/><text x="70.2463%" y="1375.50"></text></g><g><title>inplace_it::guards::slice_memory_guard::SliceMemoryGuard&lt;T&gt;::new_from_iter (1 samples, 0.01%)</title><rect x="69.9963%" y="1349" width="0.0123%" height="15" fill="rgb(243,124,33)" fg:x="5704" fg:w="1"/><text x="70.2463%" y="1359.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="69.9963%" y="1333" width="0.0123%" height="15" fill="rgb(253,220,11)" fg:x="5704" fg:w="1"/><text x="70.2463%" y="1343.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="69.9963%" y="1317" width="0.0123%" height="15" fill="rgb(217,14,4)" fg:x="5704" fg:w="1"/><text x="70.2463%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="69.9963%" y="1301" width="0.0123%" height="15" fill="rgb(209,196,12)" fg:x="5704" fg:w="1"/><text x="70.2463%" y="1311.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_viewports::{{closure}} (1 samples, 0.01%)</title><rect x="69.9963%" y="1285" width="0.0123%" height="15" fill="rgb(237,108,29)" fg:x="5704" fg:w="1"/><text x="70.2463%" y="1295.50"></text></g><g><title>gfx_backend_vulkan::RawDevice::map_viewport (1 samples, 0.01%)</title><rect x="69.9963%" y="1269" width="0.0123%" height="15" fill="rgb(216,173,20)" fg:x="5704" fg:w="1"/><text x="70.2463%" y="1279.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="70.0086%" y="1445" width="0.0123%" height="15" fill="rgb(245,27,6)" fg:x="5705" fg:w="1"/><text x="70.2586%" y="1455.50"></text></g><g><title>&lt;wgpu_core::device::AttachmentData&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="70.0209%" y="1413" width="0.0123%" height="15" fill="rgb(210,181,20)" fg:x="5706" fg:w="1"/><text x="70.2709%" y="1423.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="70.0209%" y="1397" width="0.0123%" height="15" fill="rgb(235,213,1)" fg:x="5706" fg:w="1"/><text x="70.2709%" y="1407.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="70.0209%" y="1381" width="0.0123%" height="15" fill="rgb(239,68,43)" fg:x="5706" fg:w="1"/><text x="70.2709%" y="1391.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (63 samples, 0.77%)</title><rect x="69.2723%" y="1509" width="0.7731%" height="15" fill="rgb(254,137,43)" fg:x="5645" fg:w="63"/><text x="69.5223%" y="1519.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start (62 samples, 0.76%)</title><rect x="69.2846%" y="1493" width="0.7608%" height="15" fill="rgb(252,170,38)" fg:x="5646" fg:w="62"/><text x="69.5346%" y="1503.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.04%)</title><rect x="70.0086%" y="1477" width="0.0368%" height="15" fill="rgb(234,21,42)" fg:x="5705" fg:w="3"/><text x="70.2586%" y="1487.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.04%)</title><rect x="70.0086%" y="1461" width="0.0368%" height="15" fill="rgb(216,145,40)" fg:x="5705" fg:w="3"/><text x="70.2586%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="70.0209%" y="1445" width="0.0245%" height="15" fill="rgb(251,73,9)" fg:x="5706" fg:w="2"/><text x="70.2709%" y="1455.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2 samples, 0.02%)</title><rect x="70.0209%" y="1429" width="0.0245%" height="15" fill="rgb(242,54,6)" fg:x="5706" fg:w="2"/><text x="70.2709%" y="1439.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (1 samples, 0.01%)</title><rect x="70.0331%" y="1413" width="0.0123%" height="15" fill="rgb(239,70,7)" fg:x="5707" fg:w="1"/><text x="70.2831%" y="1423.50"></text></g><g><title>&lt;wgpu_core::device::AttachmentData&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="70.0331%" y="1397" width="0.0123%" height="15" fill="rgb(216,159,35)" fg:x="5707" fg:w="1"/><text x="70.2831%" y="1407.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="70.0331%" y="1381" width="0.0123%" height="15" fill="rgb(224,50,39)" fg:x="5707" fg:w="1"/><text x="70.2831%" y="1391.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="70.0331%" y="1365" width="0.0123%" height="15" fill="rgb(235,9,35)" fg:x="5707" fg:w="1"/><text x="70.2831%" y="1375.50"></text></g><g><title>wgpu_core::command::render::State::is_ready (1 samples, 0.01%)</title><rect x="70.0454%" y="1509" width="0.0123%" height="15" fill="rgb(239,34,21)" fg:x="5708" fg:w="1"/><text x="70.2954%" y="1519.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="70.0454%" y="1493" width="0.0123%" height="15" fill="rgb(218,162,43)" fg:x="5708" fg:w="1"/><text x="70.2954%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;wgpu_core::track::PendingTransition&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt;,wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;wgpu_core::hub::IdentityManagerFactory&gt;&gt;::command_encoder_copy_buffer_to_buffer&lt;gfx_backend_vulkan::Backend&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="70.0945%" y="1493" width="0.0123%" height="15" fill="rgb(219,89,33)" fg:x="5712" fg:w="1"/><text x="70.3445%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;wgpu_core::track::PendingTransition&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="70.0945%" y="1477" width="0.0123%" height="15" fill="rgb(226,125,37)" fg:x="5712" fg:w="1"/><text x="70.3445%" y="1487.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (5 samples, 0.06%)</title><rect x="70.0577%" y="1509" width="0.0614%" height="15" fill="rgb(233,149,30)" fg:x="5709" fg:w="5"/><text x="70.3077%" y="1519.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_replace (1 samples, 0.01%)</title><rect x="70.1068%" y="1493" width="0.0123%" height="15" fill="rgb(236,8,18)" fg:x="5713" fg:w="1"/><text x="70.3568%" y="1503.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (1 samples, 0.01%)</title><rect x="70.1068%" y="1477" width="0.0123%" height="15" fill="rgb(205,176,9)" fg:x="5713" fg:w="1"/><text x="70.3568%" y="1487.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (1 samples, 0.01%)</title><rect x="70.1190%" y="1509" width="0.0123%" height="15" fill="rgb(252,103,44)" fg:x="5714" fg:w="1"/><text x="70.3690%" y="1519.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_render_pipeline (1 samples, 0.01%)</title><rect x="70.1313%" y="1509" width="0.0123%" height="15" fill="rgb(207,68,53)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1519.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_render_pipeline (1 samples, 0.01%)</title><rect x="70.1313%" y="1493" width="0.0123%" height="15" fill="rgb(218,193,48)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1503.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_graphics_pipeline (1 samples, 0.01%)</title><rect x="70.1313%" y="1477" width="0.0123%" height="15" fill="rgb(234,121,52)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1487.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_graphics_pipelines (1 samples, 0.01%)</title><rect x="70.1313%" y="1461" width="0.0123%" height="15" fill="rgb(227,218,49)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1471.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1445" width="0.0123%" height="15" fill="rgb(221,8,7)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1429" width="0.0123%" height="15" fill="rgb(217,151,36)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1439.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1413" width="0.0123%" height="15" fill="rgb(213,71,5)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1397" width="0.0123%" height="15" fill="rgb(225,145,43)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1381" width="0.0123%" height="15" fill="rgb(235,118,19)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1365" width="0.0123%" height="15" fill="rgb(214,102,36)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1349" width="0.0123%" height="15" fill="rgb(220,56,43)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1333" width="0.0123%" height="15" fill="rgb(246,136,46)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1317" width="0.0123%" height="15" fill="rgb(249,99,12)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1301" width="0.0123%" height="15" fill="rgb(224,31,42)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1285" width="0.0123%" height="15" fill="rgb(208,96,21)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1269" width="0.0123%" height="15" fill="rgb(237,229,7)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1279.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1253" width="0.0123%" height="15" fill="rgb(210,12,6)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1237" width="0.0123%" height="15" fill="rgb(240,9,34)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1221" width="0.0123%" height="15" fill="rgb(211,68,37)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1205" width="0.0123%" height="15" fill="rgb(249,138,50)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1313%" y="1189" width="0.0123%" height="15" fill="rgb(243,185,40)" fg:x="5715" fg:w="1"/><text x="70.3813%" y="1199.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="70.1436%" y="1509" width="0.0123%" height="15" fill="rgb(242,92,35)" fg:x="5716" fg:w="1"/><text x="70.3936%" y="1519.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (1 samples, 0.01%)</title><rect x="70.1558%" y="1509" width="0.0123%" height="15" fill="rgb(244,98,5)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1519.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (1 samples, 0.01%)</title><rect x="70.1558%" y="1493" width="0.0123%" height="15" fill="rgb(228,186,29)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1503.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (1 samples, 0.01%)</title><rect x="70.1558%" y="1477" width="0.0123%" height="15" fill="rgb(253,7,44)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1487.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (1 samples, 0.01%)</title><rect x="70.1558%" y="1461" width="0.0123%" height="15" fill="rgb(216,11,45)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1471.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1445" width="0.0123%" height="15" fill="rgb(205,67,3)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1455.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1429" width="0.0123%" height="15" fill="rgb(250,18,3)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1439.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1413" width="0.0123%" height="15" fill="rgb(241,222,43)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1423.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1397" width="0.0123%" height="15" fill="rgb(233,115,3)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1407.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1381" width="0.0123%" height="15" fill="rgb(215,165,25)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1365" width="0.0123%" height="15" fill="rgb(234,179,6)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1349" width="0.0123%" height="15" fill="rgb(215,82,23)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1333" width="0.0123%" height="15" fill="rgb(211,47,18)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1317" width="0.0123%" height="15" fill="rgb(248,17,9)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1301" width="0.0123%" height="15" fill="rgb(210,212,12)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1285" width="0.0123%" height="15" fill="rgb(230,135,45)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1269" width="0.0123%" height="15" fill="rgb(214,121,41)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1279.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1253" width="0.0123%" height="15" fill="rgb(239,165,45)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1237" width="0.0123%" height="15" fill="rgb(214,85,51)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1221" width="0.0123%" height="15" fill="rgb(223,90,27)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1205" width="0.0123%" height="15" fill="rgb(244,84,11)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1189" width="0.0123%" height="15" fill="rgb(253,41,47)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1558%" y="1173" width="0.0123%" height="15" fill="rgb(232,39,5)" fg:x="5717" fg:w="1"/><text x="70.4058%" y="1183.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;B&gt;::finish (1 samples, 0.01%)</title><rect x="70.1681%" y="1509" width="0.0123%" height="15" fill="rgb(211,93,4)" fg:x="5718" fg:w="1"/><text x="70.4181%" y="1519.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1927%" y="1349" width="0.0123%" height="15" fill="rgb(219,50,49)" fg:x="5720" fg:w="1"/><text x="70.4427%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1927%" y="1333" width="0.0123%" height="15" fill="rgb(232,80,19)" fg:x="5720" fg:w="1"/><text x="70.4427%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1927%" y="1317" width="0.0123%" height="15" fill="rgb(215,227,39)" fg:x="5720" fg:w="1"/><text x="70.4427%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1927%" y="1301" width="0.0123%" height="15" fill="rgb(211,99,12)" fg:x="5720" fg:w="1"/><text x="70.4427%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.1927%" y="1285" width="0.0123%" height="15" fill="rgb(214,158,5)" fg:x="5720" fg:w="1"/><text x="70.4427%" y="1295.50"></text></g><g><title>__strncpy_avx2 (1 samples, 0.01%)</title><rect x="70.1927%" y="1269" width="0.0123%" height="15" fill="rgb(242,19,53)" fg:x="5720" fg:w="1"/><text x="70.4427%" y="1279.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.2049%" y="1317" width="0.0123%" height="15" fill="rgb(208,18,20)" fg:x="5721" fg:w="1"/><text x="70.4549%" y="1327.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="70.2049%" y="1301" width="0.0123%" height="15" fill="rgb(250,44,11)" fg:x="5721" fg:w="1"/><text x="70.4549%" y="1311.50"></text></g><g><title>__isoc99_fscanf (1 samples, 0.01%)</title><rect x="70.3031%" y="1189" width="0.0123%" height="15" fill="rgb(238,159,13)" fg:x="5729" fg:w="1"/><text x="70.5531%" y="1199.50"></text></g><g><title>__vfscanf_internal (1 samples, 0.01%)</title><rect x="70.3031%" y="1173" width="0.0123%" height="15" fill="rgb(231,74,18)" fg:x="5729" fg:w="1"/><text x="70.5531%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="70.3031%" y="1253" width="0.0245%" height="15" fill="rgb(229,219,45)" fg:x="5729" fg:w="2"/><text x="70.5531%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="70.3031%" y="1237" width="0.0245%" height="15" fill="rgb(210,221,1)" fg:x="5729" fg:w="2"/><text x="70.5531%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="70.3031%" y="1221" width="0.0245%" height="15" fill="rgb(209,60,51)" fg:x="5729" fg:w="2"/><text x="70.5531%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="70.3031%" y="1205" width="0.0245%" height="15" fill="rgb(252,97,34)" fg:x="5729" fg:w="2"/><text x="70.5531%" y="1215.50"></text></g><g><title>__xstat@plt (1 samples, 0.01%)</title><rect x="70.3154%" y="1189" width="0.0123%" height="15" fill="rgb(243,211,37)" fg:x="5730" fg:w="1"/><text x="70.5654%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="70.2786%" y="1269" width="0.0614%" height="15" fill="rgb(210,229,37)" fg:x="5727" fg:w="5"/><text x="70.5286%" y="1279.50"></text></g><g><title>__GI___snprintf (1 samples, 0.01%)</title><rect x="70.3276%" y="1253" width="0.0123%" height="15" fill="rgb(220,208,43)" fg:x="5731" fg:w="1"/><text x="70.5776%" y="1263.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="70.3276%" y="1237" width="0.0123%" height="15" fill="rgb(218,118,50)" fg:x="5731" fg:w="1"/><text x="70.5776%" y="1247.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="70.3276%" y="1221" width="0.0123%" height="15" fill="rgb(254,169,52)" fg:x="5731" fg:w="1"/><text x="70.5776%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (9 samples, 0.11%)</title><rect x="70.2417%" y="1285" width="0.1104%" height="15" fill="rgb(221,214,37)" fg:x="5724" fg:w="9"/><text x="70.4917%" y="1295.50"></text></g><g><title>__GI___snprintf (1 samples, 0.01%)</title><rect x="70.3399%" y="1269" width="0.0123%" height="15" fill="rgb(254,186,32)" fg:x="5732" fg:w="1"/><text x="70.5899%" y="1279.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="70.3399%" y="1253" width="0.0123%" height="15" fill="rgb(215,144,43)" fg:x="5732" fg:w="1"/><text x="70.5899%" y="1263.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="70.3399%" y="1237" width="0.0123%" height="15" fill="rgb(252,21,46)" fg:x="5732" fg:w="1"/><text x="70.5899%" y="1247.50"></text></g><g><title>__GI_____strtoll_l_internal (1 samples, 0.01%)</title><rect x="70.3522%" y="1285" width="0.0123%" height="15" fill="rgb(207,166,46)" fg:x="5733" fg:w="1"/><text x="70.6022%" y="1295.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (15 samples, 0.18%)</title><rect x="70.1927%" y="1365" width="0.1841%" height="15" fill="rgb(253,37,49)" fg:x="5720" fg:w="15"/><text x="70.4427%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.17%)</title><rect x="70.2049%" y="1349" width="0.1718%" height="15" fill="rgb(222,97,20)" fg:x="5721" fg:w="14"/><text x="70.4549%" y="1359.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.17%)</title><rect x="70.2049%" y="1333" width="0.1718%" height="15" fill="rgb(244,181,26)" fg:x="5721" fg:w="14"/><text x="70.4549%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.16%)</title><rect x="70.2172%" y="1317" width="0.1595%" height="15" fill="rgb(241,22,29)" fg:x="5722" fg:w="13"/><text x="70.4672%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.15%)</title><rect x="70.2295%" y="1301" width="0.1473%" height="15" fill="rgb(206,200,43)" fg:x="5723" fg:w="12"/><text x="70.4795%" y="1311.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="70.3645%" y="1285" width="0.0123%" height="15" fill="rgb(226,224,43)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1295.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="70.3645%" y="1269" width="0.0123%" height="15" fill="rgb(253,129,28)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1279.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="70.3645%" y="1253" width="0.0123%" height="15" fill="rgb(252,99,33)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1263.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="70.3645%" y="1237" width="0.0123%" height="15" fill="rgb(208,123,45)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1247.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="70.3645%" y="1221" width="0.0123%" height="15" fill="rgb(251,106,12)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1231.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="70.3645%" y="1205" width="0.0123%" height="15" fill="rgb(240,209,35)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1215.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="70.3645%" y="1189" width="0.0123%" height="15" fill="rgb(214,52,50)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1199.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="70.3645%" y="1173" width="0.0123%" height="15" fill="rgb(234,119,4)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1183.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="70.3645%" y="1157" width="0.0123%" height="15" fill="rgb(228,181,36)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1167.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="70.3645%" y="1141" width="0.0123%" height="15" fill="rgb(213,171,42)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1151.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="70.3645%" y="1125" width="0.0123%" height="15" fill="rgb(239,14,41)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1135.50"></text></g><g><title>check_match (1 samples, 0.01%)</title><rect x="70.3645%" y="1109" width="0.0123%" height="15" fill="rgb(239,111,46)" fg:x="5734" fg:w="1"/><text x="70.6145%" y="1119.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="70.3767%" y="1205" width="0.0123%" height="15" fill="rgb(214,72,7)" fg:x="5735" fg:w="1"/><text x="70.6267%" y="1215.50"></text></g><g><title>_dl_map_object_from_fd (1 samples, 0.01%)</title><rect x="70.3767%" y="1189" width="0.0123%" height="15" fill="rgb(221,114,1)" fg:x="5735" fg:w="1"/><text x="70.6267%" y="1199.50"></text></g><g><title>_dl_add_to_namespace_list (1 samples, 0.01%)</title><rect x="70.3767%" y="1173" width="0.0123%" height="15" fill="rgb(213,143,14)" fg:x="5735" fg:w="1"/><text x="70.6267%" y="1183.50"></text></g><g><title>&lt;ash::entry::EntryCustom&lt;L&gt; as ash::entry::EntryV1_0&gt;::create_instance (18 samples, 0.22%)</title><rect x="70.1804%" y="1461" width="0.2209%" height="15" fill="rgb(220,221,53)" fg:x="5719" fg:w="18"/><text x="70.4304%" y="1471.50"></text></g><g><title>ash::vk::features::EntryFnV1_0::create_instance (18 samples, 0.22%)</title><rect x="70.1804%" y="1445" width="0.2209%" height="15" fill="rgb(236,189,27)" fg:x="5719" fg:w="18"/><text x="70.4304%" y="1455.50"></text></g><g><title>vkCreateInstance (18 samples, 0.22%)</title><rect x="70.1804%" y="1429" width="0.2209%" height="15" fill="rgb(252,139,49)" fg:x="5719" fg:w="18"/><text x="70.4304%" y="1439.50"></text></g><g><title>[libvulkan.so.1.2.194] (18 samples, 0.22%)</title><rect x="70.1804%" y="1413" width="0.2209%" height="15" fill="rgb(231,158,33)" fg:x="5719" fg:w="18"/><text x="70.4304%" y="1423.50"></text></g><g><title>[libvulkan.so.1.2.194] (17 samples, 0.21%)</title><rect x="70.1927%" y="1397" width="0.2086%" height="15" fill="rgb(207,201,15)" fg:x="5720" fg:w="17"/><text x="70.4427%" y="1407.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (17 samples, 0.21%)</title><rect x="70.1927%" y="1381" width="0.2086%" height="15" fill="rgb(218,43,48)" fg:x="5720" fg:w="17"/><text x="70.4427%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="70.3767%" y="1365" width="0.0245%" height="15" fill="rgb(244,63,52)" fg:x="5735" fg:w="2"/><text x="70.6267%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="70.3767%" y="1349" width="0.0245%" height="15" fill="rgb(236,60,17)" fg:x="5735" fg:w="2"/><text x="70.6267%" y="1359.50"></text></g><g><title>dlopen (2 samples, 0.02%)</title><rect x="70.3767%" y="1333" width="0.0245%" height="15" fill="rgb(205,206,29)" fg:x="5735" fg:w="2"/><text x="70.6267%" y="1343.50"></text></g><g><title>[libdl-2.33.so] (2 samples, 0.02%)</title><rect x="70.3767%" y="1317" width="0.0245%" height="15" fill="rgb(205,209,35)" fg:x="5735" fg:w="2"/><text x="70.6267%" y="1327.50"></text></g><g><title>__GI__dl_catch_error (2 samples, 0.02%)</title><rect x="70.3767%" y="1301" width="0.0245%" height="15" fill="rgb(227,112,14)" fg:x="5735" fg:w="2"/><text x="70.6267%" y="1311.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="70.3767%" y="1285" width="0.0245%" height="15" fill="rgb(248,151,9)" fg:x="5735" fg:w="2"/><text x="70.6267%" y="1295.50"></text></g><g><title>[libdl-2.33.so] (2 samples, 0.02%)</title><rect x="70.3767%" y="1269" width="0.0245%" height="15" fill="rgb(247,45,40)" fg:x="5735" fg:w="2"/><text x="70.6267%" y="1279.50"></text></g><g><title>_dl_open (2 samples, 0.02%)</title><rect x="70.3767%" y="1253" width="0.0245%" height="15" fill="rgb(232,185,16)" fg:x="5735" fg:w="2"/><text x="70.6267%" y="1263.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="70.3767%" y="1237" width="0.0245%" height="15" fill="rgb(215,45,44)" fg:x="5735" fg:w="2"/><text x="70.6267%" y="1247.50"></text></g><g><title>dl_open_worker (2 samples, 0.02%)</title><rect x="70.3767%" y="1221" width="0.0245%" height="15" fill="rgb(206,69,32)" fg:x="5735" fg:w="2"/><text x="70.6267%" y="1231.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="70.3890%" y="1205" width="0.0123%" height="15" fill="rgb(233,98,50)" fg:x="5736" fg:w="1"/><text x="70.6390%" y="1215.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="70.4135%" y="1365" width="0.0123%" height="15" fill="rgb(232,217,52)" fg:x="5738" fg:w="1"/><text x="70.6635%" y="1375.50"></text></g><g><title>__readdir64 (1 samples, 0.01%)</title><rect x="70.4135%" y="1349" width="0.0123%" height="15" fill="rgb(250,42,51)" fg:x="5738" fg:w="1"/><text x="70.6635%" y="1359.50"></text></g><g><title>[libvulkan.so.1.2.194] (2 samples, 0.02%)</title><rect x="70.4135%" y="1381" width="0.0245%" height="15" fill="rgb(241,200,26)" fg:x="5738" fg:w="2"/><text x="70.6635%" y="1391.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="70.4258%" y="1365" width="0.0123%" height="15" fill="rgb(207,10,32)" fg:x="5739" fg:w="1"/><text x="70.6758%" y="1375.50"></text></g><g><title>dlopen (9 samples, 0.11%)</title><rect x="70.4381%" y="1381" width="0.1104%" height="15" fill="rgb(214,63,15)" fg:x="5740" fg:w="9"/><text x="70.6881%" y="1391.50"></text></g><g><title>[libdl-2.33.so] (9 samples, 0.11%)</title><rect x="70.4381%" y="1365" width="0.1104%" height="15" fill="rgb(234,176,14)" fg:x="5740" fg:w="9"/><text x="70.6881%" y="1375.50"></text></g><g><title>__GI__dl_catch_error (9 samples, 0.11%)</title><rect x="70.4381%" y="1349" width="0.1104%" height="15" fill="rgb(226,104,52)" fg:x="5740" fg:w="9"/><text x="70.6881%" y="1359.50"></text></g><g><title>__GI__dl_catch_exception (9 samples, 0.11%)</title><rect x="70.4381%" y="1333" width="0.1104%" height="15" fill="rgb(211,222,1)" fg:x="5740" fg:w="9"/><text x="70.6881%" y="1343.50"></text></g><g><title>[libdl-2.33.so] (9 samples, 0.11%)</title><rect x="70.4381%" y="1317" width="0.1104%" height="15" fill="rgb(237,7,3)" fg:x="5740" fg:w="9"/><text x="70.6881%" y="1327.50"></text></g><g><title>_dl_open (9 samples, 0.11%)</title><rect x="70.4381%" y="1301" width="0.1104%" height="15" fill="rgb(218,143,7)" fg:x="5740" fg:w="9"/><text x="70.6881%" y="1311.50"></text></g><g><title>__GI__dl_catch_exception (9 samples, 0.11%)</title><rect x="70.4381%" y="1285" width="0.1104%" height="15" fill="rgb(208,25,22)" fg:x="5740" fg:w="9"/><text x="70.6881%" y="1295.50"></text></g><g><title>dl_open_worker (9 samples, 0.11%)</title><rect x="70.4381%" y="1269" width="0.1104%" height="15" fill="rgb(228,127,16)" fg:x="5740" fg:w="9"/><text x="70.6881%" y="1279.50"></text></g><g><title>_dl_relocate_object (9 samples, 0.11%)</title><rect x="70.4381%" y="1253" width="0.1104%" height="15" fill="rgb(237,86,27)" fg:x="5740" fg:w="9"/><text x="70.6881%" y="1263.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="70.5363%" y="1237" width="0.0123%" height="15" fill="rgb(207,125,19)" fg:x="5748" fg:w="1"/><text x="70.7863%" y="1247.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="70.5363%" y="1221" width="0.0123%" height="15" fill="rgb(243,195,0)" fg:x="5748" fg:w="1"/><text x="70.7863%" y="1231.50"></text></g><g><title>XFree (1 samples, 0.01%)</title><rect x="70.5608%" y="1317" width="0.0123%" height="15" fill="rgb(230,95,18)" fg:x="5750" fg:w="1"/><text x="70.8108%" y="1327.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="70.5608%" y="1301" width="0.0123%" height="15" fill="rgb(232,157,21)" fg:x="5750" fg:w="1"/><text x="70.8108%" y="1311.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="70.5608%" y="1285" width="0.0123%" height="15" fill="rgb(212,120,50)" fg:x="5750" fg:w="1"/><text x="70.8108%" y="1295.50"></text></g><g><title>XGetVisualInfo (11 samples, 0.13%)</title><rect x="70.5731%" y="1317" width="0.1350%" height="15" fill="rgb(222,204,44)" fg:x="5751" fg:w="11"/><text x="70.8231%" y="1327.50"></text></g><g><title>_XVIDtoVisual (2 samples, 0.02%)</title><rect x="70.6835%" y="1301" width="0.0245%" height="15" fill="rgb(236,6,33)" fg:x="5760" fg:w="2"/><text x="70.9335%" y="1311.50"></text></g><g><title>XextAddDisplay (1 samples, 0.01%)</title><rect x="70.7081%" y="1317" width="0.0123%" height="15" fill="rgb(247,11,38)" fg:x="5762" fg:w="1"/><text x="70.9581%" y="1327.50"></text></g><g><title>XInitExtension (1 samples, 0.01%)</title><rect x="70.7081%" y="1301" width="0.0123%" height="15" fill="rgb(215,111,0)" fg:x="5762" fg:w="1"/><text x="70.9581%" y="1311.50"></text></g><g><title>XQueryExtension (1 samples, 0.01%)</title><rect x="70.7081%" y="1285" width="0.0123%" height="15" fill="rgb(211,65,46)" fg:x="5762" fg:w="1"/><text x="70.9581%" y="1295.50"></text></g><g><title>_XReply (1 samples, 0.01%)</title><rect x="70.7081%" y="1269" width="0.0123%" height="15" fill="rgb(216,5,12)" fg:x="5762" fg:w="1"/><text x="70.9581%" y="1279.50"></text></g><g><title>xcb_wait_for_reply64 (1 samples, 0.01%)</title><rect x="70.7081%" y="1253" width="0.0123%" height="15" fill="rgb(226,7,2)" fg:x="5762" fg:w="1"/><text x="70.9581%" y="1263.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="70.7081%" y="1237" width="0.0123%" height="15" fill="rgb(242,116,12)" fg:x="5762" fg:w="1"/><text x="70.9581%" y="1247.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="70.7081%" y="1221" width="0.0123%" height="15" fill="rgb(249,209,7)" fg:x="5762" fg:w="1"/><text x="70.9581%" y="1231.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="70.7081%" y="1205" width="0.0123%" height="15" fill="rgb(232,73,17)" fg:x="5762" fg:w="1"/><text x="70.9581%" y="1215.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="70.7081%" y="1189" width="0.0123%" height="15" fill="rgb(214,13,32)" fg:x="5762" fg:w="1"/><text x="70.9581%" y="1199.50"></text></g><g><title>__strcspn_sse42 (3 samples, 0.04%)</title><rect x="70.7326%" y="1301" width="0.0368%" height="15" fill="rgb(221,125,10)" fg:x="5764" fg:w="3"/><text x="70.9826%" y="1311.50"></text></g><g><title>ash::entry::EntryV1_0::enumerate_instance_extension_properties (31 samples, 0.38%)</title><rect x="70.4013%" y="1461" width="0.3804%" height="15" fill="rgb(246,7,44)" fg:x="5737" fg:w="31"/><text x="70.6513%" y="1471.50"></text></g><g><title>ash::vk::features::EntryFnV1_0::enumerate_instance_extension_properties (31 samples, 0.38%)</title><rect x="70.4013%" y="1445" width="0.3804%" height="15" fill="rgb(239,18,35)" fg:x="5737" fg:w="31"/><text x="70.6513%" y="1455.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (31 samples, 0.38%)</title><rect x="70.4013%" y="1429" width="0.3804%" height="15" fill="rgb(250,222,16)" fg:x="5737" fg:w="31"/><text x="70.6513%" y="1439.50"></text></g><g><title>[libvulkan.so.1.2.194] (31 samples, 0.38%)</title><rect x="70.4013%" y="1413" width="0.3804%" height="15" fill="rgb(219,100,8)" fg:x="5737" fg:w="31"/><text x="70.6513%" y="1423.50"></text></g><g><title>[libvulkan.so.1.2.194] (31 samples, 0.38%)</title><rect x="70.4013%" y="1397" width="0.3804%" height="15" fill="rgb(240,62,13)" fg:x="5737" fg:w="31"/><text x="70.6513%" y="1407.50"></text></g><g><title>vk_icdNegotiateLoaderICDInterfaceVersion (19 samples, 0.23%)</title><rect x="70.5485%" y="1381" width="0.2332%" height="15" fill="rgb(253,194,2)" fg:x="5749" fg:w="19"/><text x="70.7985%" y="1391.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (19 samples, 0.23%)</title><rect x="70.5485%" y="1365" width="0.2332%" height="15" fill="rgb(235,58,31)" fg:x="5749" fg:w="19"/><text x="70.7985%" y="1375.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (19 samples, 0.23%)</title><rect x="70.5485%" y="1349" width="0.2332%" height="15" fill="rgb(231,37,11)" fg:x="5749" fg:w="19"/><text x="70.7985%" y="1359.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (19 samples, 0.23%)</title><rect x="70.5485%" y="1333" width="0.2332%" height="15" fill="rgb(235,133,0)" fg:x="5749" fg:w="19"/><text x="70.7985%" y="1343.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (5 samples, 0.06%)</title><rect x="70.7203%" y="1317" width="0.0614%" height="15" fill="rgb(212,185,40)" fg:x="5763" fg:w="5"/><text x="70.9703%" y="1327.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="70.7694%" y="1301" width="0.0123%" height="15" fill="rgb(216,68,42)" fg:x="5767" fg:w="1"/><text x="71.0194%" y="1311.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="70.7817%" y="1365" width="0.0123%" height="15" fill="rgb(239,81,4)" fg:x="5768" fg:w="1"/><text x="71.0317%" y="1375.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="70.7817%" y="1349" width="0.0123%" height="15" fill="rgb(206,86,6)" fg:x="5768" fg:w="1"/><text x="71.0317%" y="1359.50"></text></g><g><title>__strncpy_avx2 (1 samples, 0.01%)</title><rect x="70.7817%" y="1333" width="0.0123%" height="15" fill="rgb(249,95,27)" fg:x="5768" fg:w="1"/><text x="71.0317%" y="1343.50"></text></g><g><title>ash::entry::EntryV1_0::enumerate_instance_layer_properties (2 samples, 0.02%)</title><rect x="70.7817%" y="1461" width="0.0245%" height="15" fill="rgb(205,155,45)" fg:x="5768" fg:w="2"/><text x="71.0317%" y="1471.50"></text></g><g><title>ash::vk::features::EntryFnV1_0::enumerate_instance_layer_properties (2 samples, 0.02%)</title><rect x="70.7817%" y="1445" width="0.0245%" height="15" fill="rgb(213,55,42)" fg:x="5768" fg:w="2"/><text x="71.0317%" y="1455.50"></text></g><g><title>vkEnumerateInstanceLayerProperties (2 samples, 0.02%)</title><rect x="70.7817%" y="1429" width="0.0245%" height="15" fill="rgb(249,197,4)" fg:x="5768" fg:w="2"/><text x="71.0317%" y="1439.50"></text></g><g><title>[libvulkan.so.1.2.194] (2 samples, 0.02%)</title><rect x="70.7817%" y="1413" width="0.0245%" height="15" fill="rgb(212,128,32)" fg:x="5768" fg:w="2"/><text x="71.0317%" y="1423.50"></text></g><g><title>[libvulkan.so.1.2.194] (2 samples, 0.02%)</title><rect x="70.7817%" y="1397" width="0.0245%" height="15" fill="rgb(252,47,30)" fg:x="5768" fg:w="2"/><text x="71.0317%" y="1407.50"></text></g><g><title>[libvulkan.so.1.2.194] (2 samples, 0.02%)</title><rect x="70.7817%" y="1381" width="0.0245%" height="15" fill="rgb(209,79,18)" fg:x="5768" fg:w="2"/><text x="71.0317%" y="1391.50"></text></g><g><title>__GI__IO_fread (1 samples, 0.01%)</title><rect x="70.7940%" y="1365" width="0.0123%" height="15" fill="rgb(225,81,38)" fg:x="5769" fg:w="1"/><text x="71.0440%" y="1375.50"></text></g><g><title>_IO_file_xsgetn (1 samples, 0.01%)</title><rect x="70.7940%" y="1349" width="0.0123%" height="15" fill="rgb(205,95,16)" fg:x="5769" fg:w="1"/><text x="71.0440%" y="1359.50"></text></g><g><title>__mempcpy_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="70.7940%" y="1333" width="0.0123%" height="15" fill="rgb(214,30,4)" fg:x="5769" fg:w="1"/><text x="71.0440%" y="1343.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (52 samples, 0.64%)</title><rect x="70.1804%" y="1509" width="0.6381%" height="15" fill="rgb(232,137,22)" fg:x="5719" fg:w="52"/><text x="70.4304%" y="1519.50"></text></g><g><title>wgpu_core::instance::Instance::new (52 samples, 0.64%)</title><rect x="70.1804%" y="1493" width="0.6381%" height="15" fill="rgb(232,156,19)" fg:x="5719" fg:w="52"/><text x="70.4304%" y="1503.50"></text></g><g><title>&lt;gfx_backend_vulkan::Instance as gfx_hal::Instance&lt;gfx_backend_vulkan::Backend&gt;&gt;::create (52 samples, 0.64%)</title><rect x="70.1804%" y="1477" width="0.6381%" height="15" fill="rgb(248,157,26)" fg:x="5719" fg:w="52"/><text x="70.4304%" y="1487.50"></text></g><g><title>ash::entry_libloading::&lt;impl ash::entry::EntryCustom&lt;alloc::sync::Arc&lt;libloading::Library&gt;&gt;&gt;::new (1 samples, 0.01%)</title><rect x="70.8062%" y="1461" width="0.0123%" height="15" fill="rgb(242,24,3)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1471.50"></text></g><g><title>libloading::Library::new (1 samples, 0.01%)</title><rect x="70.8062%" y="1445" width="0.0123%" height="15" fill="rgb(218,195,48)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1455.50"></text></g><g><title>libloading::os::unix::Library::new (1 samples, 0.01%)</title><rect x="70.8062%" y="1429" width="0.0123%" height="15" fill="rgb(214,193,36)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1439.50"></text></g><g><title>libloading::os::unix::Library::open (1 samples, 0.01%)</title><rect x="70.8062%" y="1413" width="0.0123%" height="15" fill="rgb(242,110,40)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1423.50"></text></g><g><title>libloading::os::unix::with_dlerror (1 samples, 0.01%)</title><rect x="70.8062%" y="1397" width="0.0123%" height="15" fill="rgb(233,150,26)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1407.50"></text></g><g><title>libloading::os::unix::Library::open::{{closure}} (1 samples, 0.01%)</title><rect x="70.8062%" y="1381" width="0.0123%" height="15" fill="rgb(239,200,30)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1391.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="70.8062%" y="1365" width="0.0123%" height="15" fill="rgb(226,28,11)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1375.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="70.8062%" y="1349" width="0.0123%" height="15" fill="rgb(220,26,48)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1359.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="70.8062%" y="1333" width="0.0123%" height="15" fill="rgb(232,10,11)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1343.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="70.8062%" y="1317" width="0.0123%" height="15" fill="rgb(252,143,50)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1327.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="70.8062%" y="1301" width="0.0123%" height="15" fill="rgb(206,58,22)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1311.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="70.8062%" y="1285" width="0.0123%" height="15" fill="rgb(250,9,45)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1295.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="70.8062%" y="1269" width="0.0123%" height="15" fill="rgb(225,148,14)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1279.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="70.8062%" y="1253" width="0.0123%" height="15" fill="rgb(205,178,40)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1263.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="70.8062%" y="1237" width="0.0123%" height="15" fill="rgb(215,201,4)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1247.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="70.8062%" y="1221" width="0.0123%" height="15" fill="rgb(219,223,24)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1231.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="70.8062%" y="1205" width="0.0123%" height="15" fill="rgb(217,19,31)" fg:x="5770" fg:w="1"/><text x="71.0562%" y="1215.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register (2 samples, 0.02%)</title><rect x="70.8185%" y="1509" width="0.0245%" height="15" fill="rgb(235,33,3)" fg:x="5771" fg:w="2"/><text x="71.0685%" y="1519.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (2 samples, 0.02%)</title><rect x="70.8430%" y="1509" width="0.0245%" height="15" fill="rgb(221,39,18)" fg:x="5773" fg:w="2"/><text x="71.0930%" y="1519.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (3 samples, 0.04%)</title><rect x="70.8676%" y="1509" width="0.0368%" height="15" fill="rgb(242,162,33)" fg:x="5775" fg:w="3"/><text x="71.1176%" y="1519.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (1 samples, 0.01%)</title><rect x="70.9044%" y="1509" width="0.0123%" height="15" fill="rgb(233,215,28)" fg:x="5778" fg:w="1"/><text x="71.1544%" y="1519.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="70.9044%" y="1493" width="0.0123%" height="15" fill="rgb(212,117,9)" fg:x="5778" fg:w="1"/><text x="71.1544%" y="1503.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="70.9044%" y="1477" width="0.0123%" height="15" fill="rgb(237,70,47)" fg:x="5778" fg:w="1"/><text x="71.1544%" y="1487.50"></text></g><g><title>ash::device::Device::load (1 samples, 0.01%)</title><rect x="70.9167%" y="1461" width="0.0123%" height="15" fill="rgb(206,177,13)" fg:x="5779" fg:w="1"/><text x="71.1667%" y="1471.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::load (1 samples, 0.01%)</title><rect x="70.9167%" y="1445" width="0.0123%" height="15" fill="rgb(209,174,33)" fg:x="5779" fg:w="1"/><text x="71.1667%" y="1455.50"></text></g><g><title>ash::device::Device::load::{{closure}} (1 samples, 0.01%)</title><rect x="70.9167%" y="1429" width="0.0123%" height="15" fill="rgb(226,6,11)" fg:x="5779" fg:w="1"/><text x="71.1667%" y="1439.50"></text></g><g><title>ash::vk::features::InstanceFnV1_0::get_device_proc_addr (1 samples, 0.01%)</title><rect x="70.9167%" y="1413" width="0.0123%" height="15" fill="rgb(240,214,6)" fg:x="5779" fg:w="1"/><text x="71.1667%" y="1423.50"></text></g><g><title>vkGetDeviceProcAddr (1 samples, 0.01%)</title><rect x="70.9167%" y="1397" width="0.0123%" height="15" fill="rgb(254,214,40)" fg:x="5779" fg:w="1"/><text x="71.1667%" y="1407.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="70.9167%" y="1381" width="0.0123%" height="15" fill="rgb(230,187,15)" fg:x="5779" fg:w="1"/><text x="71.1667%" y="1391.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="70.9167%" y="1365" width="0.0123%" height="15" fill="rgb(250,11,27)" fg:x="5779" fg:w="1"/><text x="71.1667%" y="1375.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="70.9289%" y="1349" width="0.0123%" height="15" fill="rgb(243,107,19)" fg:x="5780" fg:w="1"/><text x="71.1789%" y="1359.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="70.9289%" y="1397" width="0.0245%" height="15" fill="rgb(253,66,26)" fg:x="5780" fg:w="2"/><text x="71.1789%" y="1407.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="70.9289%" y="1381" width="0.0245%" height="15" fill="rgb(228,43,8)" fg:x="5780" fg:w="2"/><text x="71.1789%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="70.9289%" y="1365" width="0.0245%" height="15" fill="rgb(232,197,36)" fg:x="5780" fg:w="2"/><text x="71.1789%" y="1375.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="70.9412%" y="1349" width="0.0123%" height="15" fill="rgb(221,182,31)" fg:x="5781" fg:w="1"/><text x="71.1912%" y="1359.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.9535%" y="1365" width="0.0123%" height="15" fill="rgb(244,25,36)" fg:x="5782" fg:w="1"/><text x="71.2035%" y="1375.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="70.9535%" y="1381" width="0.0245%" height="15" fill="rgb(247,101,19)" fg:x="5782" fg:w="2"/><text x="71.2035%" y="1391.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.9658%" y="1365" width="0.0123%" height="15" fill="rgb(223,117,19)" fg:x="5783" fg:w="1"/><text x="71.2158%" y="1375.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="70.9658%" y="1349" width="0.0123%" height="15" fill="rgb(249,63,38)" fg:x="5783" fg:w="1"/><text x="71.2158%" y="1359.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="70.9658%" y="1333" width="0.0123%" height="15" fill="rgb(220,143,23)" fg:x="5783" fg:w="1"/><text x="71.2158%" y="1343.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;B&gt;::create_device (6 samples, 0.07%)</title><rect x="70.9167%" y="1509" width="0.0736%" height="15" fill="rgb(252,183,22)" fg:x="5779" fg:w="6"/><text x="71.1667%" y="1519.50"></text></g><g><title>&lt;gfx_backend_vulkan::PhysicalDevice as gfx_hal::adapter::PhysicalDevice&lt;gfx_backend_vulkan::Backend&gt;&gt;::open (6 samples, 0.07%)</title><rect x="70.9167%" y="1493" width="0.0736%" height="15" fill="rgb(243,176,15)" fg:x="5779" fg:w="6"/><text x="71.1667%" y="1503.50"></text></g><g><title>&lt;ash::instance::Instance as ash::instance::InstanceV1_0&gt;::create_device (6 samples, 0.07%)</title><rect x="70.9167%" y="1477" width="0.0736%" height="15" fill="rgb(244,204,46)" fg:x="5779" fg:w="6"/><text x="71.1667%" y="1487.50"></text></g><g><title>ash::vk::features::InstanceFnV1_0::create_device (5 samples, 0.06%)</title><rect x="70.9289%" y="1461" width="0.0614%" height="15" fill="rgb(227,28,54)" fg:x="5780" fg:w="5"/><text x="71.1789%" y="1471.50"></text></g><g><title>vkCreateDevice (5 samples, 0.06%)</title><rect x="70.9289%" y="1445" width="0.0614%" height="15" fill="rgb(231,10,15)" fg:x="5780" fg:w="5"/><text x="71.1789%" y="1455.50"></text></g><g><title>[libvulkan.so.1.2.194] (5 samples, 0.06%)</title><rect x="70.9289%" y="1429" width="0.0614%" height="15" fill="rgb(210,200,17)" fg:x="5780" fg:w="5"/><text x="71.1789%" y="1439.50"></text></g><g><title>[libvulkan.so.1.2.194] (5 samples, 0.06%)</title><rect x="70.9289%" y="1413" width="0.0614%" height="15" fill="rgb(251,106,46)" fg:x="5780" fg:w="5"/><text x="71.1789%" y="1423.50"></text></g><g><title>[libvulkan.so.1.2.194] (3 samples, 0.04%)</title><rect x="70.9535%" y="1397" width="0.0368%" height="15" fill="rgb(218,211,15)" fg:x="5782" fg:w="3"/><text x="71.2035%" y="1407.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="70.9780%" y="1381" width="0.0123%" height="15" fill="rgb(239,62,10)" fg:x="5784" fg:w="1"/><text x="71.2280%" y="1391.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (1 samples, 0.01%)</title><rect x="70.9903%" y="1509" width="0.0123%" height="15" fill="rgb(225,53,53)" fg:x="5785" fg:w="1"/><text x="71.2403%" y="1519.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (3 samples, 0.04%)</title><rect x="71.0026%" y="1509" width="0.0368%" height="15" fill="rgb(207,16,24)" fg:x="5786" fg:w="3"/><text x="71.2526%" y="1519.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (3 samples, 0.04%)</title><rect x="71.0026%" y="1493" width="0.0368%" height="15" fill="rgb(217,52,28)" fg:x="5786" fg:w="3"/><text x="71.2526%" y="1503.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (3 samples, 0.04%)</title><rect x="71.0026%" y="1477" width="0.0368%" height="15" fill="rgb(246,1,5)" fg:x="5786" fg:w="3"/><text x="71.2526%" y="1487.50"></text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::merge (1 samples, 0.01%)</title><rect x="71.0394%" y="1509" width="0.0123%" height="15" fill="rgb(221,29,26)" fg:x="5789" fg:w="1"/><text x="71.2894%" y="1519.50"></text></g><g><title>wgpu_core::track::range::RangedStates&lt;I,T&gt;::append (1 samples, 0.01%)</title><rect x="71.0517%" y="1509" width="0.0123%" height="15" fill="rgb(250,133,32)" fg:x="5790" fg:w="1"/><text x="71.3017%" y="1519.50"></text></g><g><title>wgpu_core::track::range::RangedStates&lt;I,T&gt;::isolate (1 samples, 0.01%)</title><rect x="71.0639%" y="1509" width="0.0123%" height="15" fill="rgb(236,63,16)" fg:x="5791" fg:w="1"/><text x="71.3139%" y="1519.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="71.0762%" y="1157" width="0.0123%" height="15" fill="rgb(231,159,14)" fg:x="5792" fg:w="1"/><text x="71.3262%" y="1167.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="71.0762%" y="1141" width="0.0123%" height="15" fill="rgb(207,102,36)" fg:x="5792" fg:w="1"/><text x="71.3262%" y="1151.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.01%)</title><rect x="71.0762%" y="1125" width="0.0123%" height="15" fill="rgb(230,224,31)" fg:x="5792" fg:w="1"/><text x="71.3262%" y="1135.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.01%)</title><rect x="71.0762%" y="1109" width="0.0123%" height="15" fill="rgb(215,182,16)" fg:x="5792" fg:w="1"/><text x="71.3262%" y="1119.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="71.0762%" y="1093" width="0.0123%" height="15" fill="rgb(226,113,2)" fg:x="5792" fg:w="1"/><text x="71.3262%" y="1103.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="71.0762%" y="1077" width="0.0123%" height="15" fill="rgb(241,18,35)" fg:x="5792" fg:w="1"/><text x="71.3262%" y="1087.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="71.0762%" y="1061" width="0.0123%" height="15" fill="rgb(240,165,44)" fg:x="5792" fg:w="1"/><text x="71.3262%" y="1071.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="71.0762%" y="1045" width="0.0123%" height="15" fill="rgb(229,130,47)" fg:x="5792" fg:w="1"/><text x="71.3262%" y="1055.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="71.0762%" y="1029" width="0.0123%" height="15" fill="rgb(223,93,7)" fg:x="5792" fg:w="1"/><text x="71.3262%" y="1039.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.01%)</title><rect x="71.0762%" y="1013" width="0.0123%" height="15" fill="rgb(205,180,36)" fg:x="5792" fg:w="1"/><text x="71.3262%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (2 samples, 0.02%)</title><rect x="71.0762%" y="1269" width="0.0245%" height="15" fill="rgb(221,103,28)" fg:x="5792" fg:w="2"/><text x="71.3262%" y="1279.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (2 samples, 0.02%)</title><rect x="71.0762%" y="1253" width="0.0245%" height="15" fill="rgb(212,4,3)" fg:x="5792" fg:w="2"/><text x="71.3262%" y="1263.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (2 samples, 0.02%)</title><rect x="71.0762%" y="1237" width="0.0245%" height="15" fill="rgb(209,221,53)" fg:x="5792" fg:w="2"/><text x="71.3262%" y="1247.50"></text></g><g><title>async_executor::Executor::spawn (2 samples, 0.02%)</title><rect x="71.0762%" y="1221" width="0.0245%" height="15" fill="rgb(233,229,52)" fg:x="5792" fg:w="2"/><text x="71.3262%" y="1231.50"></text></g><g><title>async_task::runnable::Runnable::schedule (2 samples, 0.02%)</title><rect x="71.0762%" y="1205" width="0.0245%" height="15" fill="rgb(254,127,37)" fg:x="5792" fg:w="2"/><text x="71.3262%" y="1215.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (2 samples, 0.02%)</title><rect x="71.0762%" y="1189" width="0.0245%" height="15" fill="rgb(207,161,26)" fg:x="5792" fg:w="2"/><text x="71.3262%" y="1199.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (2 samples, 0.02%)</title><rect x="71.0762%" y="1173" width="0.0245%" height="15" fill="rgb(223,75,5)" fg:x="5792" fg:w="2"/><text x="71.3262%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="71.0885%" y="1157" width="0.0123%" height="15" fill="rgb(235,115,52)" fg:x="5793" fg:w="1"/><text x="71.3385%" y="1167.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="71.0885%" y="1141" width="0.0123%" height="15" fill="rgb(240,91,46)" fg:x="5793" fg:w="1"/><text x="71.3385%" y="1151.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="71.0885%" y="1125" width="0.0123%" height="15" fill="rgb(251,144,21)" fg:x="5793" fg:w="1"/><text x="71.3385%" y="1135.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="71.0885%" y="1109" width="0.0123%" height="15" fill="rgb(247,220,47)" fg:x="5793" fg:w="1"/><text x="71.3385%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="71.0885%" y="1093" width="0.0123%" height="15" fill="rgb(253,122,1)" fg:x="5793" fg:w="1"/><text x="71.3385%" y="1103.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="71.0885%" y="1077" width="0.0123%" height="15" fill="rgb(221,0,24)" fg:x="5793" fg:w="1"/><text x="71.3385%" y="1087.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="71.0885%" y="1061" width="0.0123%" height="15" fill="rgb(220,204,54)" fg:x="5793" fg:w="1"/><text x="71.3385%" y="1071.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="71.0885%" y="1045" width="0.0123%" height="15" fill="rgb(205,96,25)" fg:x="5793" fg:w="1"/><text x="71.3385%" y="1055.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="71.0885%" y="1029" width="0.0123%" height="15" fill="rgb(247,77,20)" fg:x="5793" fg:w="1"/><text x="71.3385%" y="1039.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.0885%" y="1013" width="0.0123%" height="15" fill="rgb(245,151,8)" fg:x="5793" fg:w="1"/><text x="71.3385%" y="1023.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="71.0885%" y="997" width="0.0123%" height="15" fill="rgb(242,158,39)" fg:x="5793" fg:w="1"/><text x="71.3385%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::color_material::ColorMaterial&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::color_material::ColorMaterial&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="71.1007%" y="1029" width="0.0123%" height="15" fill="rgb(222,214,50)" fg:x="5794" fg:w="1"/><text x="71.3507%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::color_material::ColorMaterial&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::color_material::ColorMaterial&gt;&gt;::drain::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="71.1007%" y="1013" width="0.0123%" height="15" fill="rgb(229,60,39)" fg:x="5794" fg:w="1"/><text x="71.3507%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::color_material::ColorMaterial&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="71.1007%" y="997" width="0.0123%" height="15" fill="rgb(240,148,18)" fg:x="5794" fg:w="1"/><text x="71.3507%" y="1007.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="71.1007%" y="981" width="0.0123%" height="15" fill="rgb(215,96,11)" fg:x="5794" fg:w="1"/><text x="71.3507%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::color_material::ColorMaterial&gt;&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="71.1007%" y="965" width="0.0123%" height="15" fill="rgb(238,162,53)" fg:x="5794" fg:w="1"/><text x="71.3507%" y="975.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="71.1007%" y="949" width="0.0123%" height="15" fill="rgb(214,83,18)" fg:x="5794" fg:w="1"/><text x="71.3507%" y="959.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::asset_event_system (2 samples, 0.02%)</title><rect x="71.1007%" y="1093" width="0.0245%" height="15" fill="rgb(248,117,24)" fg:x="5794" fg:w="2"/><text x="71.3507%" y="1103.50"></text></g><g><title>bevy_app::event::EventWriter&lt;T&gt;::send_batch (2 samples, 0.02%)</title><rect x="71.1007%" y="1077" width="0.0245%" height="15" fill="rgb(238,190,6)" fg:x="5794" fg:w="2"/><text x="71.3507%" y="1087.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::extend (2 samples, 0.02%)</title><rect x="71.1007%" y="1061" width="0.0245%" height="15" fill="rgb(213,51,6)" fg:x="5794" fg:w="2"/><text x="71.3507%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="71.1007%" y="1045" width="0.0245%" height="15" fill="rgb(212,136,1)" fg:x="5794" fg:w="2"/><text x="71.3507%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="71.1130%" y="1029" width="0.0123%" height="15" fill="rgb(221,192,14)" fg:x="5795" fg:w="1"/><text x="71.3630%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;::drain::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="71.1130%" y="1013" width="0.0123%" height="15" fill="rgb(244,38,54)" fg:x="5795" fg:w="1"/><text x="71.3630%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="71.1130%" y="997" width="0.0123%" height="15" fill="rgb(240,45,28)" fg:x="5795" fg:w="1"/><text x="71.3630%" y="1007.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="71.1130%" y="981" width="0.0123%" height="15" fill="rgb(240,123,12)" fg:x="5795" fg:w="1"/><text x="71.3630%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::color_material::ColorMaterial&gt;&gt;,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="71.1130%" y="965" width="0.0123%" height="15" fill="rgb(216,14,30)" fg:x="5795" fg:w="1"/><text x="71.3630%" y="975.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="71.1130%" y="949" width="0.0123%" height="15" fill="rgb(212,50,24)" fg:x="5795" fg:w="1"/><text x="71.3630%" y="959.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (2 samples, 0.02%)</title><rect x="71.1376%" y="1061" width="0.0245%" height="15" fill="rgb(253,229,47)" fg:x="5797" fg:w="2"/><text x="71.3876%" y="1071.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (2 samples, 0.02%)</title><rect x="71.1376%" y="1045" width="0.0245%" height="15" fill="rgb(214,26,17)" fg:x="5797" fg:w="2"/><text x="71.3876%" y="1055.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (2 samples, 0.02%)</title><rect x="71.1376%" y="1029" width="0.0245%" height="15" fill="rgb(252,60,11)" fg:x="5797" fg:w="2"/><text x="71.3876%" y="1039.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (2 samples, 0.02%)</title><rect x="71.1376%" y="1013" width="0.0245%" height="15" fill="rgb(209,59,37)" fg:x="5797" fg:w="2"/><text x="71.3876%" y="1023.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (14 samples, 0.17%)</title><rect x="71.1007%" y="1141" width="0.1718%" height="15" fill="rgb(228,126,53)" fg:x="5794" fg:w="14"/><text x="71.3507%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (14 samples, 0.17%)</title><rect x="71.1007%" y="1125" width="0.1718%" height="15" fill="rgb(233,99,2)" fg:x="5794" fg:w="14"/><text x="71.3507%" y="1135.50"></text></g><g><title>core::ops::function::Fn::call (14 samples, 0.17%)</title><rect x="71.1007%" y="1109" width="0.1718%" height="15" fill="rgb(217,106,34)" fg:x="5794" fg:w="14"/><text x="71.3507%" y="1119.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (12 samples, 0.15%)</title><rect x="71.1253%" y="1093" width="0.1473%" height="15" fill="rgb(222,46,19)" fg:x="5796" fg:w="12"/><text x="71.3753%" y="1103.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (12 samples, 0.15%)</title><rect x="71.1253%" y="1077" width="0.1473%" height="15" fill="rgb(251,87,31)" fg:x="5796" fg:w="12"/><text x="71.3753%" y="1087.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (9 samples, 0.11%)</title><rect x="71.1621%" y="1061" width="0.1104%" height="15" fill="rgb(213,70,51)" fg:x="5799" fg:w="9"/><text x="71.4121%" y="1071.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (4 samples, 0.05%)</title><rect x="71.2235%" y="1045" width="0.0491%" height="15" fill="rgb(229,144,18)" fg:x="5804" fg:w="4"/><text x="71.4735%" y="1055.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (4 samples, 0.05%)</title><rect x="71.2235%" y="1029" width="0.0491%" height="15" fill="rgb(254,60,26)" fg:x="5804" fg:w="4"/><text x="71.4735%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.05%)</title><rect x="71.2235%" y="1013" width="0.0491%" height="15" fill="rgb(243,127,51)" fg:x="5804" fg:w="4"/><text x="71.4735%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.05%)</title><rect x="71.2235%" y="997" width="0.0491%" height="15" fill="rgb(221,51,25)" fg:x="5804" fg:w="4"/><text x="71.4735%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="71.3094%" y="1077" width="0.0123%" height="15" fill="rgb(205,42,7)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="71.3094%" y="1061" width="0.0123%" height="15" fill="rgb(236,177,48)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bevy_render::camera::visible_entities::VisibleEntity&gt;&gt; (1 samples, 0.01%)</title><rect x="71.3094%" y="1045" width="0.0123%" height="15" fill="rgb(226,79,31)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="1055.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="71.3094%" y="1029" width="0.0123%" height="15" fill="rgb(216,170,12)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bevy_render::camera::visible_entities::VisibleEntity,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="71.3094%" y="1013" width="0.0123%" height="15" fill="rgb(208,62,51)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="1023.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="71.3094%" y="997" width="0.0123%" height="15" fill="rgb(254,129,9)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_render::camera::visible_entities::VisibleEntity&gt;&gt; (1 samples, 0.01%)</title><rect x="71.3094%" y="981" width="0.0123%" height="15" fill="rgb(243,209,31)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="991.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="71.3094%" y="965" width="0.0123%" height="15" fill="rgb(213,159,23)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="71.3094%" y="949" width="0.0123%" height="15" fill="rgb(249,77,39)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="959.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="71.3094%" y="933" width="0.0123%" height="15" fill="rgb(230,13,33)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="943.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="71.3094%" y="917" width="0.0123%" height="15" fill="rgb(215,215,7)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="71.3094%" y="901" width="0.0123%" height="15" fill="rgb(222,92,25)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="911.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="71.3094%" y="885" width="0.0123%" height="15" fill="rgb(215,173,22)" fg:x="5811" fg:w="1"/><text x="71.5594%" y="895.50"></text></g><g><title>&lt;(F0,F1,F2) as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (1 samples, 0.01%)</title><rect x="71.3339%" y="1061" width="0.0123%" height="15" fill="rgb(247,205,52)" fg:x="5813" fg:w="1"/><text x="71.5839%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::OptionFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (1 samples, 0.01%)</title><rect x="71.3339%" y="1045" width="0.0123%" height="15" fill="rgb(240,210,37)" fg:x="5813" fg:w="1"/><text x="71.5839%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="71.3216%" y="1077" width="0.0368%" height="15" fill="rgb(224,13,10)" fg:x="5812" fg:w="3"/><text x="71.5716%" y="1087.50"></text></g><g><title>&lt;(F0,F1,F2) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (1 samples, 0.01%)</title><rect x="71.3462%" y="1061" width="0.0123%" height="15" fill="rgb(209,48,33)" fg:x="5814" fg:w="1"/><text x="71.5962%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::EntityFetch as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (1 samples, 0.01%)</title><rect x="71.3462%" y="1045" width="0.0123%" height="15" fill="rgb(228,219,23)" fg:x="5814" fg:w="1"/><text x="71.5962%" y="1055.50"></text></g><g><title>bevy_ecs::archetype::Archetype::entities (1 samples, 0.01%)</title><rect x="71.3462%" y="1029" width="0.0123%" height="15" fill="rgb(239,46,49)" fg:x="5814" fg:w="1"/><text x="71.5962%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="71.3462%" y="1013" width="0.0123%" height="15" fill="rgb(206,172,51)" fg:x="5814" fg:w="1"/><text x="71.5962%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="71.3462%" y="997" width="0.0123%" height="15" fill="rgb(213,212,35)" fg:x="5814" fg:w="1"/><text x="71.5962%" y="1007.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (4 samples, 0.05%)</title><rect x="71.3584%" y="1077" width="0.0491%" height="15" fill="rgb(252,40,27)" fg:x="5815" fg:w="4"/><text x="71.6084%" y="1087.50"></text></g><g><title>alloc::slice::merge_sort (4 samples, 0.05%)</title><rect x="71.3584%" y="1061" width="0.0491%" height="15" fill="rgb(212,33,41)" fg:x="5815" fg:w="4"/><text x="71.6084%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="71.3830%" y="1045" width="0.0245%" height="15" fill="rgb(232,160,27)" fg:x="5817" fg:w="2"/><text x="71.6330%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="71.3830%" y="1029" width="0.0245%" height="15" fill="rgb(244,160,20)" fg:x="5817" fg:w="2"/><text x="71.6330%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="71.3830%" y="1013" width="0.0245%" height="15" fill="rgb(205,66,20)" fg:x="5817" fg:w="2"/><text x="71.6330%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="71.3953%" y="997" width="0.0123%" height="15" fill="rgb(236,158,6)" fg:x="5818" fg:w="1"/><text x="71.6453%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="71.3953%" y="981" width="0.0123%" height="15" fill="rgb(232,25,36)" fg:x="5818" fg:w="1"/><text x="71.6453%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="71.3953%" y="965" width="0.0123%" height="15" fill="rgb(220,153,35)" fg:x="5818" fg:w="1"/><text x="71.6453%" y="975.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="71.3953%" y="949" width="0.0123%" height="15" fill="rgb(216,5,8)" fg:x="5818" fg:w="1"/><text x="71.6453%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (16 samples, 0.20%)</title><rect x="71.4075%" y="1077" width="0.1963%" height="15" fill="rgb(240,97,3)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.20%)</title><rect x="71.4075%" y="1061" width="0.1963%" height="15" fill="rgb(220,99,26)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.20%)</title><rect x="71.4075%" y="1045" width="0.1963%" height="15" fill="rgb(237,96,2)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="1055.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.20%)</title><rect x="71.4075%" y="1029" width="0.1963%" height="15" fill="rgb(217,197,47)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.20%)</title><rect x="71.4075%" y="1013" width="0.1963%" height="15" fill="rgb(252,133,54)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="1023.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.20%)</title><rect x="71.4075%" y="997" width="0.1963%" height="15" fill="rgb(233,37,30)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="1007.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.20%)</title><rect x="71.4075%" y="981" width="0.1963%" height="15" fill="rgb(239,182,12)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="991.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.20%)</title><rect x="71.4075%" y="965" width="0.1963%" height="15" fill="rgb(245,83,39)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="975.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.20%)</title><rect x="71.4075%" y="949" width="0.1963%" height="15" fill="rgb(222,109,36)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="959.50"></text></g><g><title>__rdl_realloc (16 samples, 0.20%)</title><rect x="71.4075%" y="933" width="0.1963%" height="15" fill="rgb(237,95,44)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="943.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (16 samples, 0.20%)</title><rect x="71.4075%" y="917" width="0.1963%" height="15" fill="rgb(216,36,54)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="927.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.20%)</title><rect x="71.4075%" y="901" width="0.1963%" height="15" fill="rgb(236,164,3)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="911.50"></text></g><g><title>_int_realloc (16 samples, 0.20%)</title><rect x="71.4075%" y="885" width="0.1963%" height="15" fill="rgb(223,15,21)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="895.50"></text></g><g><title>_int_malloc (16 samples, 0.20%)</title><rect x="71.4075%" y="869" width="0.1963%" height="15" fill="rgb(239,191,12)" fg:x="5819" fg:w="16"/><text x="71.6575%" y="879.50"></text></g><g><title>malloc_consolidate (15 samples, 0.18%)</title><rect x="71.4198%" y="853" width="0.1841%" height="15" fill="rgb(231,191,37)" fg:x="5820" fg:w="15"/><text x="71.6698%" y="863.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="71.6161%" y="1045" width="0.0123%" height="15" fill="rgb(209,155,36)" fg:x="5836" fg:w="1"/><text x="71.8661%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::component::StorageType as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="71.6161%" y="1029" width="0.0123%" height="15" fill="rgb(216,222,49)" fg:x="5836" fg:w="1"/><text x="71.8661%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="71.6284%" y="981" width="0.0123%" height="15" fill="rgb(218,181,2)" fg:x="5837" fg:w="1"/><text x="71.8784%" y="991.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="71.6284%" y="965" width="0.0123%" height="15" fill="rgb(239,125,9)" fg:x="5837" fg:w="1"/><text x="71.8784%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="71.6284%" y="949" width="0.0123%" height="15" fill="rgb(233,103,7)" fg:x="5837" fg:w="1"/><text x="71.8784%" y="959.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (31 samples, 0.38%)</title><rect x="71.2725%" y="1141" width="0.3804%" height="15" fill="rgb(209,223,5)" fg:x="5808" fg:w="31"/><text x="71.5225%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (31 samples, 0.38%)</title><rect x="71.2725%" y="1125" width="0.3804%" height="15" fill="rgb(234,71,27)" fg:x="5808" fg:w="31"/><text x="71.5225%" y="1135.50"></text></g><g><title>core::ops::function::Fn::call (30 samples, 0.37%)</title><rect x="71.2848%" y="1109" width="0.3681%" height="15" fill="rgb(251,202,16)" fg:x="5809" fg:w="30"/><text x="71.5348%" y="1119.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (30 samples, 0.37%)</title><rect x="71.2848%" y="1093" width="0.3681%" height="15" fill="rgb(231,180,0)" fg:x="5809" fg:w="30"/><text x="71.5348%" y="1103.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (4 samples, 0.05%)</title><rect x="71.6039%" y="1077" width="0.0491%" height="15" fill="rgb(223,58,28)" fg:x="5835" fg:w="4"/><text x="71.8539%" y="1087.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (4 samples, 0.05%)</title><rect x="71.6039%" y="1061" width="0.0491%" height="15" fill="rgb(250,34,24)" fg:x="5835" fg:w="4"/><text x="71.8539%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (2 samples, 0.02%)</title><rect x="71.6284%" y="1045" width="0.0245%" height="15" fill="rgb(235,24,16)" fg:x="5837" fg:w="2"/><text x="71.8784%" y="1055.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (2 samples, 0.02%)</title><rect x="71.6284%" y="1029" width="0.0245%" height="15" fill="rgb(219,28,33)" fg:x="5837" fg:w="2"/><text x="71.8784%" y="1039.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (2 samples, 0.02%)</title><rect x="71.6284%" y="1013" width="0.0245%" height="15" fill="rgb(228,150,43)" fg:x="5837" fg:w="2"/><text x="71.8784%" y="1023.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (2 samples, 0.02%)</title><rect x="71.6284%" y="997" width="0.0245%" height="15" fill="rgb(221,228,36)" fg:x="5837" fg:w="2"/><text x="71.8784%" y="1007.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="71.6407%" y="981" width="0.0123%" height="15" fill="rgb(232,116,17)" fg:x="5838" fg:w="1"/><text x="71.8907%" y="991.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="71.6407%" y="965" width="0.0123%" height="15" fill="rgb(220,110,51)" fg:x="5838" fg:w="1"/><text x="71.8907%" y="975.50"></text></g><g><title>bevy_egui::EguiContext::ctx_for_window (1 samples, 0.01%)</title><rect x="71.6530%" y="1077" width="0.0123%" height="15" fill="rgb(207,26,25)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="71.6530%" y="1061" width="0.0123%" height="15" fill="rgb(223,58,19)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="71.6530%" y="1045" width="0.0123%" height="15" fill="rgb(234,125,39)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="71.6530%" y="1029" width="0.0123%" height="15" fill="rgb(241,48,36)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="1039.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="71.6530%" y="1013" width="0.0123%" height="15" fill="rgb(217,148,51)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="1023.50"></text></g><g><title>&lt;bevy_window::window::WindowId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="71.6530%" y="997" width="0.0123%" height="15" fill="rgb(247,17,25)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="1007.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="71.6530%" y="981" width="0.0123%" height="15" fill="rgb(219,89,38)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="991.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="71.6530%" y="965" width="0.0123%" height="15" fill="rgb(220,145,2)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="71.6530%" y="949" width="0.0123%" height="15" fill="rgb(244,66,47)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="71.6530%" y="933" width="0.0123%" height="15" fill="rgb(226,182,5)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="943.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="71.6530%" y="917" width="0.0123%" height="15" fill="rgb(211,98,20)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="927.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="71.6530%" y="901" width="0.0123%" height="15" fill="rgb(217,103,52)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="911.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="71.6530%" y="885" width="0.0123%" height="15" fill="rgb(208,125,52)" fg:x="5839" fg:w="1"/><text x="71.9030%" y="895.50"></text></g><g><title>egui::context::Context::drain_paint_lists (1 samples, 0.01%)</title><rect x="71.6652%" y="1061" width="0.0123%" height="15" fill="rgb(244,70,13)" fg:x="5840" fg:w="1"/><text x="71.9152%" y="1071.50"></text></g><g><title>egui::layers::GraphicLayers::drain (1 samples, 0.01%)</title><rect x="71.6652%" y="1045" width="0.0123%" height="15" fill="rgb(253,124,3)" fg:x="5840" fg:w="1"/><text x="71.9152%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::ValuesMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.6652%" y="1029" width="0.0123%" height="15" fill="rgb(222,145,32)" fg:x="5840" fg:w="1"/><text x="71.9152%" y="1039.50"></text></g><g><title>&lt;std::collections::hash::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.6652%" y="1013" width="0.0123%" height="15" fill="rgb(232,183,47)" fg:x="5840" fg:w="1"/><text x="71.9152%" y="1023.50"></text></g><g><title>&lt;hashbrown::map::IterMut&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.6652%" y="997" width="0.0123%" height="15" fill="rgb(246,226,4)" fg:x="5840" fg:w="1"/><text x="71.9152%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.6652%" y="981" width="0.0123%" height="15" fill="rgb(228,185,46)" fg:x="5840" fg:w="1"/><text x="71.9152%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.6652%" y="965" width="0.0123%" height="15" fill="rgb(213,196,4)" fg:x="5840" fg:w="1"/><text x="71.9152%" y="975.50"></text></g><g><title>egui::context::Context::end_frame (2 samples, 0.02%)</title><rect x="71.6652%" y="1077" width="0.0245%" height="15" fill="rgb(212,2,45)" fg:x="5840" fg:w="2"/><text x="71.9152%" y="1087.50"></text></g><g><title>egui::context::Context::frame_state (1 samples, 0.01%)</title><rect x="71.6775%" y="1061" width="0.0123%" height="15" fill="rgb(217,145,50)" fg:x="5841" fg:w="1"/><text x="71.9275%" y="1071.50"></text></g><g><title>epaint::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="71.6775%" y="1045" width="0.0123%" height="15" fill="rgb(242,10,46)" fg:x="5841" fg:w="1"/><text x="71.9275%" y="1055.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (1 samples, 0.01%)</title><rect x="71.6775%" y="1029" width="0.0123%" height="15" fill="rgb(252,91,48)" fg:x="5841" fg:w="1"/><text x="71.9275%" y="1039.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (1 samples, 0.01%)</title><rect x="71.6775%" y="1013" width="0.0123%" height="15" fill="rgb(216,72,13)" fg:x="5841" fg:w="1"/><text x="71.9275%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="71.6775%" y="997" width="0.0123%" height="15" fill="rgb(219,6,37)" fg:x="5841" fg:w="1"/><text x="71.9275%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="71.6775%" y="981" width="0.0123%" height="15" fill="rgb(236,185,40)" fg:x="5841" fg:w="1"/><text x="71.9275%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.6898%" y="1029" width="0.0123%" height="15" fill="rgb(208,81,48)" fg:x="5842" fg:w="1"/><text x="71.9398%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.6898%" y="1013" width="0.0123%" height="15" fill="rgb(211,42,33)" fg:x="5842" fg:w="1"/><text x="71.9398%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.6898%" y="997" width="0.0123%" height="15" fill="rgb(211,90,39)" fg:x="5842" fg:w="1"/><text x="71.9398%" y="1007.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="71.6898%" y="981" width="0.0123%" height="15" fill="rgb(218,136,12)" fg:x="5842" fg:w="1"/><text x="71.9398%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.04%)</title><rect x="71.6898%" y="1077" width="0.0368%" height="15" fill="rgb(234,12,32)" fg:x="5842" fg:w="3"/><text x="71.9398%" y="1087.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.04%)</title><rect x="71.6898%" y="1061" width="0.0368%" height="15" fill="rgb(221,164,18)" fg:x="5842" fg:w="3"/><text x="71.9398%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="71.6898%" y="1045" width="0.0368%" height="15" fill="rgb(239,135,14)" fg:x="5842" fg:w="3"/><text x="71.9398%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="71.7020%" y="1029" width="0.0245%" height="15" fill="rgb(226,198,47)" fg:x="5843" fg:w="2"/><text x="71.9520%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="71.7020%" y="1013" width="0.0245%" height="15" fill="rgb(244,121,47)" fg:x="5843" fg:w="2"/><text x="71.9520%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="71.7020%" y="997" width="0.0245%" height="15" fill="rgb(226,21,48)" fg:x="5843" fg:w="2"/><text x="71.9520%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="71.7020%" y="981" width="0.0245%" height="15" fill="rgb(215,178,47)" fg:x="5843" fg:w="2"/><text x="71.9520%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="71.7020%" y="965" width="0.0245%" height="15" fill="rgb(206,212,19)" fg:x="5843" fg:w="2"/><text x="71.9520%" y="975.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="71.7020%" y="949" width="0.0245%" height="15" fill="rgb(230,104,34)" fg:x="5843" fg:w="2"/><text x="71.9520%" y="959.50"></text></g><g><title>bevy_egui::systems::process_output (7 samples, 0.09%)</title><rect x="71.6530%" y="1093" width="0.0859%" height="15" fill="rgb(210,96,51)" fg:x="5839" fg:w="7"/><text x="71.9030%" y="1103.50"></text></g><g><title>winit::window::Window::set_cursor_icon (1 samples, 0.01%)</title><rect x="71.7266%" y="1077" width="0.0123%" height="15" fill="rgb(229,111,47)" fg:x="5845" fg:w="1"/><text x="71.9766%" y="1087.50"></text></g><g><title>winit::platform_impl::platform::Window::set_cursor_icon (1 samples, 0.01%)</title><rect x="71.7266%" y="1061" width="0.0123%" height="15" fill="rgb(218,174,45)" fg:x="5845" fg:w="1"/><text x="71.9766%" y="1071.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::set_cursor_icon (1 samples, 0.01%)</title><rect x="71.7266%" y="1045" width="0.0123%" height="15" fill="rgb(215,21,32)" fg:x="5845" fg:w="1"/><text x="71.9766%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,winit::window::CursorIcon&gt;&gt; (1 samples, 0.01%)</title><rect x="71.7266%" y="1029" width="0.0123%" height="15" fill="rgb(235,72,21)" fg:x="5845" fg:w="1"/><text x="71.9766%" y="1039.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="71.7266%" y="1013" width="0.0123%" height="15" fill="rgb(250,113,30)" fg:x="5845" fg:w="1"/><text x="71.9766%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="71.7266%" y="997" width="0.0123%" height="15" fill="rgb(244,136,34)" fg:x="5845" fg:w="1"/><text x="71.9766%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="71.7266%" y="981" width="0.0123%" height="15" fill="rgb(213,226,47)" fg:x="5845" fg:w="1"/><text x="71.9766%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="71.7266%" y="965" width="0.0123%" height="15" fill="rgb(224,136,40)" fg:x="5845" fg:w="1"/><text x="71.9766%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="71.7389%" y="1077" width="0.0245%" height="15" fill="rgb(253,124,12)" fg:x="5846" fg:w="2"/><text x="71.9889%" y="1087.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (2 samples, 0.02%)</title><rect x="71.7389%" y="1061" width="0.0245%" height="15" fill="rgb(210,67,8)" fg:x="5846" fg:w="2"/><text x="71.9889%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (2 samples, 0.02%)</title><rect x="71.7389%" y="1045" width="0.0245%" height="15" fill="rgb(210,204,0)" fg:x="5846" fg:w="2"/><text x="71.9889%" y="1055.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::is_changed (2 samples, 0.02%)</title><rect x="71.7389%" y="1029" width="0.0245%" height="15" fill="rgb(217,179,22)" fg:x="5846" fg:w="2"/><text x="71.9889%" y="1039.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="71.7389%" y="1013" width="0.0245%" height="15" fill="rgb(237,192,33)" fg:x="5846" fg:w="2"/><text x="71.9889%" y="1023.50"></text></g><g><title>bevy_render::mesh::mesh::mesh_resource_provider_system (3 samples, 0.04%)</title><rect x="71.7389%" y="1093" width="0.0368%" height="15" fill="rgb(211,104,28)" fg:x="5846" fg:w="3"/><text x="71.9889%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.7634%" y="1077" width="0.0123%" height="15" fill="rgb(214,75,30)" fg:x="5848" fg:w="1"/><text x="72.0134%" y="1087.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.7634%" y="1061" width="0.0123%" height="15" fill="rgb(220,227,12)" fg:x="5848" fg:w="1"/><text x="72.0134%" y="1071.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.7634%" y="1045" width="0.0123%" height="15" fill="rgb(233,134,28)" fg:x="5848" fg:w="1"/><text x="72.0134%" y="1055.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.7634%" y="1029" width="0.0123%" height="15" fill="rgb(215,146,24)" fg:x="5848" fg:w="1"/><text x="72.0134%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.7634%" y="1013" width="0.0123%" height="15" fill="rgb(248,227,20)" fg:x="5848" fg:w="1"/><text x="72.0134%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.7634%" y="997" width="0.0123%" height="15" fill="rgb(250,44,42)" fg:x="5848" fg:w="1"/><text x="72.0134%" y="1007.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (2 samples, 0.02%)</title><rect x="72.0334%" y="1061" width="0.0245%" height="15" fill="rgb(219,5,35)" fg:x="5870" fg:w="2"/><text x="72.2834%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (2 samples, 0.02%)</title><rect x="72.0334%" y="1045" width="0.0245%" height="15" fill="rgb(241,132,32)" fg:x="5870" fg:w="2"/><text x="72.2834%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.04%)</title><rect x="72.0334%" y="1077" width="0.0368%" height="15" fill="rgb(234,212,51)" fg:x="5870" fg:w="3"/><text x="72.2834%" y="1087.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (1 samples, 0.01%)</title><rect x="72.0579%" y="1061" width="0.0123%" height="15" fill="rgb(242,173,29)" fg:x="5872" fg:w="1"/><text x="72.3079%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (1 samples, 0.01%)</title><rect x="72.0579%" y="1045" width="0.0123%" height="15" fill="rgb(212,159,2)" fg:x="5872" fg:w="1"/><text x="72.3079%" y="1055.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.04%)</title><rect x="72.0702%" y="1061" width="0.0368%" height="15" fill="rgb(238,165,31)" fg:x="5873" fg:w="3"/><text x="72.3202%" y="1071.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (3 samples, 0.04%)</title><rect x="72.0702%" y="1045" width="0.0368%" height="15" fill="rgb(241,57,36)" fg:x="5873" fg:w="3"/><text x="72.3202%" y="1055.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="72.1070%" y="997" width="0.0123%" height="15" fill="rgb(249,7,4)" fg:x="5876" fg:w="1"/><text x="72.3570%" y="1007.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="72.1070%" y="981" width="0.0123%" height="15" fill="rgb(250,137,44)" fg:x="5876" fg:w="1"/><text x="72.3570%" y="991.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="72.1070%" y="965" width="0.0123%" height="15" fill="rgb(244,185,1)" fg:x="5876" fg:w="1"/><text x="72.3570%" y="975.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.04%)</title><rect x="72.1070%" y="1013" width="0.0368%" height="15" fill="rgb(216,5,53)" fg:x="5876" fg:w="3"/><text x="72.3570%" y="1023.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="72.1193%" y="997" width="0.0245%" height="15" fill="rgb(234,89,21)" fg:x="5877" fg:w="2"/><text x="72.3693%" y="1007.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="72.1193%" y="981" width="0.0245%" height="15" fill="rgb(250,81,43)" fg:x="5877" fg:w="2"/><text x="72.3693%" y="991.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (2 samples, 0.02%)</title><rect x="72.1193%" y="965" width="0.0245%" height="15" fill="rgb(243,132,11)" fg:x="5877" fg:w="2"/><text x="72.3693%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="72.1193%" y="949" width="0.0245%" height="15" fill="rgb(253,159,28)" fg:x="5877" fg:w="2"/><text x="72.3693%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (2 samples, 0.02%)</title><rect x="72.1193%" y="933" width="0.0245%" height="15" fill="rgb(237,167,34)" fg:x="5877" fg:w="2"/><text x="72.3693%" y="943.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="72.1193%" y="917" width="0.0245%" height="15" fill="rgb(237,16,50)" fg:x="5877" fg:w="2"/><text x="72.3693%" y="927.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (2 samples, 0.02%)</title><rect x="72.1193%" y="901" width="0.0245%" height="15" fill="rgb(247,125,2)" fg:x="5877" fg:w="2"/><text x="72.3693%" y="911.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="72.1193%" y="885" width="0.0245%" height="15" fill="rgb(254,35,3)" fg:x="5877" fg:w="2"/><text x="72.3693%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="72.1438%" y="933" width="0.0123%" height="15" fill="rgb(237,209,21)" fg:x="5879" fg:w="1"/><text x="72.3938%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="72.1438%" y="917" width="0.0123%" height="15" fill="rgb(224,122,20)" fg:x="5879" fg:w="1"/><text x="72.3938%" y="927.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="72.1438%" y="901" width="0.0123%" height="15" fill="rgb(224,11,46)" fg:x="5879" fg:w="1"/><text x="72.3938%" y="911.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (8 samples, 0.10%)</title><rect x="72.0702%" y="1077" width="0.0982%" height="15" fill="rgb(248,21,33)" fg:x="5873" fg:w="8"/><text x="72.3202%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.06%)</title><rect x="72.1070%" y="1061" width="0.0614%" height="15" fill="rgb(222,144,7)" fg:x="5876" fg:w="5"/><text x="72.3570%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.06%)</title><rect x="72.1070%" y="1045" width="0.0614%" height="15" fill="rgb(205,141,37)" fg:x="5876" fg:w="5"/><text x="72.3570%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.06%)</title><rect x="72.1070%" y="1029" width="0.0614%" height="15" fill="rgb(237,130,8)" fg:x="5876" fg:w="5"/><text x="72.3570%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="72.1438%" y="1013" width="0.0245%" height="15" fill="rgb(209,179,39)" fg:x="5879" fg:w="2"/><text x="72.3938%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="72.1438%" y="997" width="0.0245%" height="15" fill="rgb(207,52,17)" fg:x="5879" fg:w="2"/><text x="72.3938%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="72.1438%" y="981" width="0.0245%" height="15" fill="rgb(253,158,17)" fg:x="5879" fg:w="2"/><text x="72.3938%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="72.1438%" y="965" width="0.0245%" height="15" fill="rgb(208,19,53)" fg:x="5879" fg:w="2"/><text x="72.3938%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="72.1438%" y="949" width="0.0245%" height="15" fill="rgb(233,152,13)" fg:x="5879" fg:w="2"/><text x="72.3938%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="72.1561%" y="933" width="0.0123%" height="15" fill="rgb(231,84,1)" fg:x="5880" fg:w="1"/><text x="72.4061%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="72.1561%" y="917" width="0.0123%" height="15" fill="rgb(229,142,48)" fg:x="5880" fg:w="1"/><text x="72.4061%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="72.1561%" y="901" width="0.0123%" height="15" fill="rgb(248,70,29)" fg:x="5880" fg:w="1"/><text x="72.4061%" y="911.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="72.1561%" y="885" width="0.0123%" height="15" fill="rgb(250,85,7)" fg:x="5880" fg:w="1"/><text x="72.4061%" y="895.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="72.1684%" y="1077" width="0.0123%" height="15" fill="rgb(235,140,43)" fg:x="5881" fg:w="1"/><text x="72.4184%" y="1087.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="72.1684%" y="1061" width="0.0123%" height="15" fill="rgb(216,0,5)" fg:x="5881" fg:w="1"/><text x="72.4184%" y="1071.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="72.1684%" y="1045" width="0.0123%" height="15" fill="rgb(223,167,29)" fg:x="5881" fg:w="1"/><text x="72.4184%" y="1055.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="72.1684%" y="1029" width="0.0123%" height="15" fill="rgb(229,150,33)" fg:x="5881" fg:w="1"/><text x="72.4184%" y="1039.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="72.1684%" y="1013" width="0.0123%" height="15" fill="rgb(227,26,52)" fg:x="5881" fg:w="1"/><text x="72.4184%" y="1023.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (4 samples, 0.05%)</title><rect x="72.2788%" y="1029" width="0.0491%" height="15" fill="rgb(250,60,52)" fg:x="5890" fg:w="4"/><text x="72.5288%" y="1039.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (4 samples, 0.05%)</title><rect x="72.2788%" y="1013" width="0.0491%" height="15" fill="rgb(228,81,46)" fg:x="5890" fg:w="4"/><text x="72.5288%" y="1023.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="72.3279%" y="981" width="0.0123%" height="15" fill="rgb(225,218,31)" fg:x="5894" fg:w="1"/><text x="72.5779%" y="991.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="72.3279%" y="965" width="0.0123%" height="15" fill="rgb(230,35,16)" fg:x="5894" fg:w="1"/><text x="72.5779%" y="975.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="72.3279%" y="949" width="0.0123%" height="15" fill="rgb(247,100,0)" fg:x="5894" fg:w="1"/><text x="72.5779%" y="959.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="72.3279%" y="933" width="0.0123%" height="15" fill="rgb(223,135,11)" fg:x="5894" fg:w="1"/><text x="72.5779%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="72.3279%" y="917" width="0.0123%" height="15" fill="rgb(207,136,0)" fg:x="5894" fg:w="1"/><text x="72.5779%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="72.3279%" y="901" width="0.0123%" height="15" fill="rgb(246,131,25)" fg:x="5894" fg:w="1"/><text x="72.5779%" y="911.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="72.3279%" y="885" width="0.0123%" height="15" fill="rgb(209,47,12)" fg:x="5894" fg:w="1"/><text x="72.5779%" y="895.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="72.3279%" y="869" width="0.0123%" height="15" fill="rgb(221,25,16)" fg:x="5894" fg:w="1"/><text x="72.5779%" y="879.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="72.3279%" y="853" width="0.0123%" height="15" fill="rgb(223,164,33)" fg:x="5894" fg:w="1"/><text x="72.5779%" y="863.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="72.3402%" y="965" width="0.0123%" height="15" fill="rgb(220,26,23)" fg:x="5895" fg:w="1"/><text x="72.5902%" y="975.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (7 samples, 0.09%)</title><rect x="72.2788%" y="1045" width="0.0859%" height="15" fill="rgb(231,224,1)" fg:x="5890" fg:w="7"/><text x="72.5288%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.04%)</title><rect x="72.3279%" y="1029" width="0.0368%" height="15" fill="rgb(229,221,24)" fg:x="5894" fg:w="3"/><text x="72.5779%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.04%)</title><rect x="72.3279%" y="1013" width="0.0368%" height="15" fill="rgb(213,34,10)" fg:x="5894" fg:w="3"/><text x="72.5779%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.04%)</title><rect x="72.3279%" y="997" width="0.0368%" height="15" fill="rgb(215,33,11)" fg:x="5894" fg:w="3"/><text x="72.5779%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="72.3402%" y="981" width="0.0245%" height="15" fill="rgb(216,20,41)" fg:x="5895" fg:w="2"/><text x="72.5902%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="72.3524%" y="965" width="0.0123%" height="15" fill="rgb(228,43,31)" fg:x="5896" fg:w="1"/><text x="72.6024%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="72.3524%" y="949" width="0.0123%" height="15" fill="rgb(227,83,26)" fg:x="5896" fg:w="1"/><text x="72.6024%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="72.3524%" y="933" width="0.0123%" height="15" fill="rgb(217,168,19)" fg:x="5896" fg:w="1"/><text x="72.6024%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="72.3524%" y="917" width="0.0123%" height="15" fill="rgb(231,34,33)" fg:x="5896" fg:w="1"/><text x="72.6024%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="72.3524%" y="901" width="0.0123%" height="15" fill="rgb(230,120,51)" fg:x="5896" fg:w="1"/><text x="72.6024%" y="911.50"></text></g><g><title>bevy_render::draw::Draw::set_bind_group (3 samples, 0.04%)</title><rect x="72.3647%" y="1045" width="0.0368%" height="15" fill="rgb(215,138,27)" fg:x="5897" fg:w="3"/><text x="72.6147%" y="1055.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="72.3647%" y="1029" width="0.0368%" height="15" fill="rgb(246,80,47)" fg:x="5897" fg:w="3"/><text x="72.6147%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="72.3647%" y="1013" width="0.0368%" height="15" fill="rgb(215,57,53)" fg:x="5897" fg:w="3"/><text x="72.6147%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.04%)</title><rect x="72.3647%" y="997" width="0.0368%" height="15" fill="rgb(229,137,5)" fg:x="5897" fg:w="3"/><text x="72.6147%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.04%)</title><rect x="72.3647%" y="981" width="0.0368%" height="15" fill="rgb(210,86,2)" fg:x="5897" fg:w="3"/><text x="72.6147%" y="991.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (2 samples, 0.02%)</title><rect x="72.4752%" y="885" width="0.0245%" height="15" fill="rgb(231,226,51)" fg:x="5906" fg:w="2"/><text x="72.7252%" y="895.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="72.4752%" y="869" width="0.0245%" height="15" fill="rgb(216,62,29)" fg:x="5906" fg:w="2"/><text x="72.7252%" y="879.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (2 samples, 0.02%)</title><rect x="72.4752%" y="853" width="0.0245%" height="15" fill="rgb(248,202,3)" fg:x="5906" fg:w="2"/><text x="72.7252%" y="863.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="72.4874%" y="837" width="0.0123%" height="15" fill="rgb(225,181,7)" fg:x="5907" fg:w="1"/><text x="72.7374%" y="847.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="72.4874%" y="821" width="0.0123%" height="15" fill="rgb(247,170,54)" fg:x="5907" fg:w="1"/><text x="72.7374%" y="831.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (9 samples, 0.11%)</title><rect x="72.4015%" y="949" width="0.1104%" height="15" fill="rgb(236,204,33)" fg:x="5900" fg:w="9"/><text x="72.6515%" y="959.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="72.4752%" y="933" width="0.0368%" height="15" fill="rgb(216,45,30)" fg:x="5906" fg:w="3"/><text x="72.7252%" y="943.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (3 samples, 0.04%)</title><rect x="72.4752%" y="917" width="0.0368%" height="15" fill="rgb(213,203,16)" fg:x="5906" fg:w="3"/><text x="72.7252%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.04%)</title><rect x="72.4752%" y="901" width="0.0368%" height="15" fill="rgb(215,46,16)" fg:x="5906" fg:w="3"/><text x="72.7252%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="72.4997%" y="885" width="0.0123%" height="15" fill="rgb(217,162,46)" fg:x="5908" fg:w="1"/><text x="72.7497%" y="895.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="72.4997%" y="869" width="0.0123%" height="15" fill="rgb(224,189,20)" fg:x="5908" fg:w="1"/><text x="72.7497%" y="879.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="72.4997%" y="853" width="0.0123%" height="15" fill="rgb(232,35,51)" fg:x="5908" fg:w="1"/><text x="72.7497%" y="863.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="72.4997%" y="837" width="0.0123%" height="15" fill="rgb(243,221,46)" fg:x="5908" fg:w="1"/><text x="72.7497%" y="847.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="72.4997%" y="821" width="0.0123%" height="15" fill="rgb(248,16,16)" fg:x="5908" fg:w="1"/><text x="72.7497%" y="831.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="72.4997%" y="805" width="0.0123%" height="15" fill="rgb(220,168,13)" fg:x="5908" fg:w="1"/><text x="72.7497%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.12%)</title><rect x="72.4015%" y="981" width="0.1227%" height="15" fill="rgb(243,102,39)" fg:x="5900" fg:w="10"/><text x="72.6515%" y="991.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (10 samples, 0.12%)</title><rect x="72.4015%" y="965" width="0.1227%" height="15" fill="rgb(245,82,32)" fg:x="5900" fg:w="10"/><text x="72.6515%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="72.5120%" y="949" width="0.0123%" height="15" fill="rgb(230,164,19)" fg:x="5909" fg:w="1"/><text x="72.7620%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="72.5242%" y="949" width="0.0245%" height="15" fill="rgb(221,9,41)" fg:x="5910" fg:w="2"/><text x="72.7742%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="72.5242%" y="933" width="0.0245%" height="15" fill="rgb(216,93,0)" fg:x="5910" fg:w="2"/><text x="72.7742%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="72.5242%" y="917" width="0.0245%" height="15" fill="rgb(235,113,9)" fg:x="5910" fg:w="2"/><text x="72.7742%" y="927.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="72.5365%" y="901" width="0.0123%" height="15" fill="rgb(209,224,10)" fg:x="5911" fg:w="1"/><text x="72.7865%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (10 samples, 0.12%)</title><rect x="72.5488%" y="949" width="0.1227%" height="15" fill="rgb(226,54,34)" fg:x="5912" fg:w="10"/><text x="72.7988%" y="959.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (10 samples, 0.12%)</title><rect x="72.5488%" y="933" width="0.1227%" height="15" fill="rgb(222,60,8)" fg:x="5912" fg:w="10"/><text x="72.7988%" y="943.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (10 samples, 0.12%)</title><rect x="72.5488%" y="917" width="0.1227%" height="15" fill="rgb(248,228,41)" fg:x="5912" fg:w="10"/><text x="72.7988%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="72.6715%" y="949" width="0.0123%" height="15" fill="rgb(226,31,32)" fg:x="5922" fg:w="1"/><text x="72.9215%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="72.6715%" y="933" width="0.0123%" height="15" fill="rgb(242,132,49)" fg:x="5922" fg:w="1"/><text x="72.9215%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="72.6715%" y="917" width="0.0123%" height="15" fill="rgb(224,194,19)" fg:x="5922" fg:w="1"/><text x="72.9215%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="72.6715%" y="901" width="0.0123%" height="15" fill="rgb(232,200,51)" fg:x="5922" fg:w="1"/><text x="72.9215%" y="911.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_mut_untyped (24 samples, 0.29%)</title><rect x="72.4015%" y="1045" width="0.2945%" height="15" fill="rgb(235,60,46)" fg:x="5900" fg:w="24"/><text x="72.6515%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (24 samples, 0.29%)</title><rect x="72.4015%" y="1029" width="0.2945%" height="15" fill="rgb(240,109,52)" fg:x="5900" fg:w="24"/><text x="72.6515%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (24 samples, 0.29%)</title><rect x="72.4015%" y="1013" width="0.2945%" height="15" fill="rgb(215,78,37)" fg:x="5900" fg:w="24"/><text x="72.6515%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (24 samples, 0.29%)</title><rect x="72.4015%" y="997" width="0.2945%" height="15" fill="rgb(225,141,7)" fg:x="5900" fg:w="24"/><text x="72.6515%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (14 samples, 0.17%)</title><rect x="72.5242%" y="981" width="0.1718%" height="15" fill="rgb(216,102,54)" fg:x="5910" fg:w="14"/><text x="72.7742%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.17%)</title><rect x="72.5242%" y="965" width="0.1718%" height="15" fill="rgb(238,143,13)" fg:x="5910" fg:w="14"/><text x="72.7742%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="72.6838%" y="949" width="0.0123%" height="15" fill="rgb(219,45,51)" fg:x="5923" fg:w="1"/><text x="72.9338%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="72.6838%" y="933" width="0.0123%" height="15" fill="rgb(242,105,46)" fg:x="5923" fg:w="1"/><text x="72.9338%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="72.6838%" y="917" width="0.0123%" height="15" fill="rgb(206,154,49)" fg:x="5923" fg:w="1"/><text x="72.9338%" y="927.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="72.6838%" y="901" width="0.0123%" height="15" fill="rgb(239,215,4)" fg:x="5923" fg:w="1"/><text x="72.9338%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="72.6838%" y="885" width="0.0123%" height="15" fill="rgb(238,82,17)" fg:x="5923" fg:w="1"/><text x="72.9338%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="72.6838%" y="869" width="0.0123%" height="15" fill="rgb(242,49,30)" fg:x="5923" fg:w="1"/><text x="72.9338%" y="879.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="72.6960%" y="933" width="0.0123%" height="15" fill="rgb(248,5,16)" fg:x="5924" fg:w="1"/><text x="72.9460%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="72.6960%" y="917" width="0.0123%" height="15" fill="rgb(237,138,32)" fg:x="5924" fg:w="1"/><text x="72.9460%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (9 samples, 0.11%)</title><rect x="72.6960%" y="949" width="0.1104%" height="15" fill="rgb(235,79,45)" fg:x="5924" fg:w="9"/><text x="72.9460%" y="959.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (8 samples, 0.10%)</title><rect x="72.7083%" y="933" width="0.0982%" height="15" fill="rgb(213,105,25)" fg:x="5925" fg:w="8"/><text x="72.9583%" y="943.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (8 samples, 0.10%)</title><rect x="72.7083%" y="917" width="0.0982%" height="15" fill="rgb(251,131,7)" fg:x="5925" fg:w="8"/><text x="72.9583%" y="927.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::iter_assets (10 samples, 0.12%)</title><rect x="72.6960%" y="1045" width="0.1227%" height="15" fill="rgb(211,155,7)" fg:x="5924" fg:w="10"/><text x="72.9460%" y="1055.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (10 samples, 0.12%)</title><rect x="72.6960%" y="1029" width="0.1227%" height="15" fill="rgb(243,70,15)" fg:x="5924" fg:w="10"/><text x="72.9460%" y="1039.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (10 samples, 0.12%)</title><rect x="72.6960%" y="1013" width="0.1227%" height="15" fill="rgb(215,171,2)" fg:x="5924" fg:w="10"/><text x="72.9460%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (10 samples, 0.12%)</title><rect x="72.6960%" y="997" width="0.1227%" height="15" fill="rgb(244,121,35)" fg:x="5924" fg:w="10"/><text x="72.9460%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (10 samples, 0.12%)</title><rect x="72.6960%" y="981" width="0.1227%" height="15" fill="rgb(249,147,17)" fg:x="5924" fg:w="10"/><text x="72.9460%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (10 samples, 0.12%)</title><rect x="72.6960%" y="965" width="0.1227%" height="15" fill="rgb(241,193,52)" fg:x="5924" fg:w="10"/><text x="72.9460%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::data_end (1 samples, 0.01%)</title><rect x="72.8065%" y="949" width="0.0123%" height="15" fill="rgb(217,159,39)" fg:x="5933" fg:w="1"/><text x="73.0565%" y="959.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get_bind_group (8 samples, 0.10%)</title><rect x="72.8188%" y="1029" width="0.0982%" height="15" fill="rgb(248,110,0)" fg:x="5934" fg:w="8"/><text x="73.0688%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (8 samples, 0.10%)</title><rect x="72.8188%" y="1013" width="0.0982%" height="15" fill="rgb(233,227,0)" fg:x="5934" fg:w="8"/><text x="73.0688%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (8 samples, 0.10%)</title><rect x="72.8188%" y="997" width="0.0982%" height="15" fill="rgb(252,55,2)" fg:x="5934" fg:w="8"/><text x="73.0688%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (8 samples, 0.10%)</title><rect x="72.8188%" y="981" width="0.0982%" height="15" fill="rgb(224,194,24)" fg:x="5934" fg:w="8"/><text x="73.0688%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.10%)</title><rect x="72.8188%" y="965" width="0.0982%" height="15" fill="rgb(247,5,33)" fg:x="5934" fg:w="8"/><text x="73.0688%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.10%)</title><rect x="72.8188%" y="949" width="0.0982%" height="15" fill="rgb(242,66,47)" fg:x="5934" fg:w="8"/><text x="73.0688%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="72.9047%" y="933" width="0.0123%" height="15" fill="rgb(213,107,12)" fg:x="5941" fg:w="1"/><text x="73.1547%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="72.9047%" y="917" width="0.0123%" height="15" fill="rgb(206,131,1)" fg:x="5941" fg:w="1"/><text x="73.1547%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="72.9047%" y="901" width="0.0123%" height="15" fill="rgb(214,9,36)" fg:x="5941" fg:w="1"/><text x="73.1547%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="72.9047%" y="885" width="0.0123%" height="15" fill="rgb(251,215,18)" fg:x="5941" fg:w="1"/><text x="73.1547%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="72.9047%" y="869" width="0.0123%" height="15" fill="rgb(251,64,9)" fg:x="5941" fg:w="1"/><text x="73.1547%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="72.9047%" y="853" width="0.0123%" height="15" fill="rgb(235,68,21)" fg:x="5941" fg:w="1"/><text x="73.1547%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="72.9415%" y="949" width="0.0123%" height="15" fill="rgb(240,69,38)" fg:x="5944" fg:w="1"/><text x="73.1915%" y="959.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="72.9415%" y="933" width="0.0123%" height="15" fill="rgb(231,18,27)" fg:x="5944" fg:w="1"/><text x="73.1915%" y="943.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.06%)</title><rect x="72.9415%" y="965" width="0.0614%" height="15" fill="rgb(215,154,25)" fg:x="5944" fg:w="5"/><text x="73.1915%" y="975.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (4 samples, 0.05%)</title><rect x="72.9537%" y="949" width="0.0491%" height="15" fill="rgb(224,33,46)" fg:x="5945" fg:w="4"/><text x="73.2037%" y="959.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (1 samples, 0.01%)</title><rect x="73.0028%" y="949" width="0.0123%" height="15" fill="rgb(248,191,53)" fg:x="5949" fg:w="1"/><text x="73.2528%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="73.0765%" y="917" width="0.0123%" height="15" fill="rgb(231,3,37)" fg:x="5955" fg:w="1"/><text x="73.3265%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="73.0765%" y="901" width="0.0123%" height="15" fill="rgb(209,152,2)" fg:x="5955" fg:w="1"/><text x="73.3265%" y="911.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="73.0765%" y="885" width="0.0123%" height="15" fill="rgb(212,208,43)" fg:x="5955" fg:w="1"/><text x="73.3265%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="73.0765%" y="933" width="0.0245%" height="15" fill="rgb(208,60,49)" fg:x="5955" fg:w="2"/><text x="73.3265%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="73.0887%" y="917" width="0.0123%" height="15" fill="rgb(245,135,6)" fg:x="5956" fg:w="1"/><text x="73.3387%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="73.0887%" y="901" width="0.0123%" height="15" fill="rgb(243,86,23)" fg:x="5956" fg:w="1"/><text x="73.3387%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.01%)</title><rect x="73.0887%" y="885" width="0.0123%" height="15" fill="rgb(223,7,20)" fg:x="5956" fg:w="1"/><text x="73.3387%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (13 samples, 0.16%)</title><rect x="73.1010%" y="885" width="0.1595%" height="15" fill="rgb(212,182,17)" fg:x="5957" fg:w="13"/><text x="73.3510%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.16%)</title><rect x="73.1010%" y="869" width="0.1595%" height="15" fill="rgb(237,94,50)" fg:x="5957" fg:w="13"/><text x="73.3510%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.16%)</title><rect x="73.1010%" y="853" width="0.1595%" height="15" fill="rgb(232,185,44)" fg:x="5957" fg:w="13"/><text x="73.3510%" y="863.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (89 samples, 1.09%)</title><rect x="72.1806%" y="1077" width="1.0922%" height="15" fill="rgb(205,50,36)" fg:x="5882" fg:w="89"/><text x="72.4306%" y="1087.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (89 samples, 1.09%)</title><rect x="72.1806%" y="1061" width="1.0922%" height="15" fill="rgb(252,32,32)" fg:x="5882" fg:w="89"/><text x="72.4306%" y="1071.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (37 samples, 0.45%)</title><rect x="72.8188%" y="1045" width="0.4540%" height="15" fill="rgb(241,123,33)" fg:x="5934" fg:w="37"/><text x="73.0688%" y="1055.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group_status (29 samples, 0.36%)</title><rect x="72.9169%" y="1029" width="0.3559%" height="15" fill="rgb(212,140,16)" fg:x="5942" fg:w="29"/><text x="73.1669%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (27 samples, 0.33%)</title><rect x="72.9415%" y="1013" width="0.3313%" height="15" fill="rgb(247,132,5)" fg:x="5944" fg:w="27"/><text x="73.1915%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (27 samples, 0.33%)</title><rect x="72.9415%" y="997" width="0.3313%" height="15" fill="rgb(209,137,38)" fg:x="5944" fg:w="27"/><text x="73.1915%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (27 samples, 0.33%)</title><rect x="72.9415%" y="981" width="0.3313%" height="15" fill="rgb(248,32,42)" fg:x="5944" fg:w="27"/><text x="73.1915%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (22 samples, 0.27%)</title><rect x="73.0028%" y="965" width="0.2700%" height="15" fill="rgb(216,188,40)" fg:x="5949" fg:w="22"/><text x="73.2528%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.26%)</title><rect x="73.0151%" y="949" width="0.2577%" height="15" fill="rgb(209,127,53)" fg:x="5950" fg:w="21"/><text x="73.2651%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (14 samples, 0.17%)</title><rect x="73.1010%" y="933" width="0.1718%" height="15" fill="rgb(254,162,9)" fg:x="5957" fg:w="14"/><text x="73.3510%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (14 samples, 0.17%)</title><rect x="73.1010%" y="917" width="0.1718%" height="15" fill="rgb(219,183,10)" fg:x="5957" fg:w="14"/><text x="73.3510%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (14 samples, 0.17%)</title><rect x="73.1010%" y="901" width="0.1718%" height="15" fill="rgb(217,192,21)" fg:x="5957" fg:w="14"/><text x="73.3510%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="73.2605%" y="885" width="0.0123%" height="15" fill="rgb(251,89,27)" fg:x="5970" fg:w="1"/><text x="73.5105%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="73.2605%" y="869" width="0.0123%" height="15" fill="rgb(253,55,28)" fg:x="5970" fg:w="1"/><text x="73.5105%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="73.2605%" y="853" width="0.0123%" height="15" fill="rgb(216,159,8)" fg:x="5970" fg:w="1"/><text x="73.5105%" y="863.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="73.2605%" y="837" width="0.0123%" height="15" fill="rgb(231,228,44)" fg:x="5970" fg:w="1"/><text x="73.5105%" y="847.50"></text></g><g><title>bevy_render::draw::Draw::set_pipeline (7 samples, 0.09%)</title><rect x="73.2851%" y="1061" width="0.0859%" height="15" fill="rgb(247,34,48)" fg:x="5972" fg:w="7"/><text x="73.5351%" y="1071.50"></text></g><g><title>bevy_render::draw::Draw::render_command (7 samples, 0.09%)</title><rect x="73.2851%" y="1045" width="0.0859%" height="15" fill="rgb(247,222,18)" fg:x="5972" fg:w="7"/><text x="73.5351%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.07%)</title><rect x="73.2973%" y="1029" width="0.0736%" height="15" fill="rgb(227,49,4)" fg:x="5973" fg:w="6"/><text x="73.5473%" y="1039.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="73.3464%" y="1013" width="0.0245%" height="15" fill="rgb(219,189,53)" fg:x="5977" fg:w="2"/><text x="73.5964%" y="1023.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::ShaderSpecialization as core::cmp::PartialEq&gt;::eq (6 samples, 0.07%)</title><rect x="73.3710%" y="949" width="0.0736%" height="15" fill="rgb(241,160,53)" fg:x="5979" fg:w="6"/><text x="73.6210%" y="959.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (6 samples, 0.07%)</title><rect x="73.3710%" y="933" width="0.0736%" height="15" fill="rgb(227,115,4)" fg:x="5979" fg:w="6"/><text x="73.6210%" y="943.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::len (2 samples, 0.02%)</title><rect x="73.4201%" y="917" width="0.0245%" height="15" fill="rgb(215,28,28)" fg:x="5983" fg:w="2"/><text x="73.6701%" y="927.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::len (2 samples, 0.02%)</title><rect x="73.4201%" y="901" width="0.0245%" height="15" fill="rgb(237,143,40)" fg:x="5983" fg:w="2"/><text x="73.6701%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::len (2 samples, 0.02%)</title><rect x="73.4201%" y="885" width="0.0245%" height="15" fill="rgb(205,107,24)" fg:x="5983" fg:w="2"/><text x="73.6701%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (2 samples, 0.02%)</title><rect x="73.4201%" y="869" width="0.0245%" height="15" fill="rgb(209,112,35)" fg:x="5983" fg:w="2"/><text x="73.6701%" y="879.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="73.4569%" y="773" width="0.0245%" height="15" fill="rgb(206,135,5)" fg:x="5986" fg:w="2"/><text x="73.7069%" y="783.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (3 samples, 0.04%)</title><rect x="73.4569%" y="789" width="0.0368%" height="15" fill="rgb(227,217,38)" fg:x="5986" fg:w="3"/><text x="73.7069%" y="799.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="73.4814%" y="773" width="0.0123%" height="15" fill="rgb(205,0,41)" fg:x="5988" fg:w="1"/><text x="73.7314%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="73.4814%" y="757" width="0.0123%" height="15" fill="rgb(220,20,40)" fg:x="5988" fg:w="1"/><text x="73.7314%" y="767.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="73.4814%" y="741" width="0.0123%" height="15" fill="rgb(216,145,3)" fg:x="5988" fg:w="1"/><text x="73.7314%" y="751.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="73.4814%" y="725" width="0.0123%" height="15" fill="rgb(207,130,51)" fg:x="5988" fg:w="1"/><text x="73.7314%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.06%)</title><rect x="73.4446%" y="901" width="0.0614%" height="15" fill="rgb(252,93,13)" fg:x="5985" fg:w="5"/><text x="73.6946%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (4 samples, 0.05%)</title><rect x="73.4569%" y="885" width="0.0491%" height="15" fill="rgb(210,105,15)" fg:x="5986" fg:w="4"/><text x="73.7069%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (4 samples, 0.05%)</title><rect x="73.4569%" y="869" width="0.0491%" height="15" fill="rgb(212,126,31)" fg:x="5986" fg:w="4"/><text x="73.7069%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (4 samples, 0.05%)</title><rect x="73.4569%" y="853" width="0.0491%" height="15" fill="rgb(241,167,46)" fg:x="5986" fg:w="4"/><text x="73.7069%" y="863.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (4 samples, 0.05%)</title><rect x="73.4569%" y="837" width="0.0491%" height="15" fill="rgb(217,143,19)" fg:x="5986" fg:w="4"/><text x="73.7069%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.05%)</title><rect x="73.4569%" y="821" width="0.0491%" height="15" fill="rgb(235,117,33)" fg:x="5986" fg:w="4"/><text x="73.7069%" y="831.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute as core::cmp::PartialEq&gt;::eq (4 samples, 0.05%)</title><rect x="73.4569%" y="805" width="0.0491%" height="15" fill="rgb(247,95,6)" fg:x="5986" fg:w="4"/><text x="73.7069%" y="815.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_format::VertexFormat as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="73.4937%" y="789" width="0.0123%" height="15" fill="rgb(243,206,43)" fg:x="5989" fg:w="1"/><text x="73.7437%" y="799.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout as core::cmp::PartialEq&gt;::eq (6 samples, 0.07%)</title><rect x="73.4446%" y="949" width="0.0736%" height="15" fill="rgb(229,65,54)" fg:x="5985" fg:w="6"/><text x="73.6946%" y="959.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (6 samples, 0.07%)</title><rect x="73.4446%" y="933" width="0.0736%" height="15" fill="rgb(247,137,34)" fg:x="5985" fg:w="6"/><text x="73.6946%" y="943.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.07%)</title><rect x="73.4446%" y="917" width="0.0736%" height="15" fill="rgb(245,174,44)" fg:x="5985" fg:w="6"/><text x="73.6946%" y="927.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="73.5060%" y="901" width="0.0123%" height="15" fill="rgb(223,64,15)" fg:x="5990" fg:w="1"/><text x="73.7560%" y="911.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="73.5673%" y="725" width="0.0123%" height="15" fill="rgb(243,153,36)" fg:x="5995" fg:w="1"/><text x="73.8173%" y="735.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="73.5673%" y="709" width="0.0123%" height="15" fill="rgb(252,23,4)" fg:x="5995" fg:w="1"/><text x="73.8173%" y="719.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (2 samples, 0.02%)</title><rect x="73.5673%" y="741" width="0.0245%" height="15" fill="rgb(209,132,13)" fg:x="5995" fg:w="2"/><text x="73.8173%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="73.5796%" y="725" width="0.0123%" height="15" fill="rgb(209,196,21)" fg:x="5996" fg:w="1"/><text x="73.8296%" y="735.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="73.5673%" y="757" width="0.0368%" height="15" fill="rgb(252,197,1)" fg:x="5995" fg:w="3"/><text x="73.8173%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="73.5919%" y="741" width="0.0123%" height="15" fill="rgb(229,42,46)" fg:x="5997" fg:w="1"/><text x="73.8419%" y="751.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (1 samples, 0.01%)</title><rect x="73.6041%" y="757" width="0.0123%" height="15" fill="rgb(219,85,8)" fg:x="5998" fg:w="1"/><text x="73.8541%" y="767.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="73.6041%" y="741" width="0.0123%" height="15" fill="rgb(223,185,14)" fg:x="5998" fg:w="1"/><text x="73.8541%" y="751.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="73.6041%" y="725" width="0.0123%" height="15" fill="rgb(217,196,18)" fg:x="5998" fg:w="1"/><text x="73.8541%" y="735.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="73.6041%" y="709" width="0.0123%" height="15" fill="rgb(220,122,37)" fg:x="5998" fg:w="1"/><text x="73.8541%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.07%)</title><rect x="73.5673%" y="805" width="0.0736%" height="15" fill="rgb(236,135,33)" fg:x="5995" fg:w="6"/><text x="73.8173%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (6 samples, 0.07%)</title><rect x="73.5673%" y="789" width="0.0736%" height="15" fill="rgb(222,86,54)" fg:x="5995" fg:w="6"/><text x="73.8173%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.07%)</title><rect x="73.5673%" y="773" width="0.0736%" height="15" fill="rgb(227,42,22)" fg:x="5995" fg:w="6"/><text x="73.8173%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (2 samples, 0.02%)</title><rect x="73.6164%" y="757" width="0.0245%" height="15" fill="rgb(243,101,27)" fg:x="5999" fg:w="2"/><text x="73.8664%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.01%)</title><rect x="73.6532%" y="741" width="0.0123%" height="15" fill="rgb(229,100,8)" fg:x="6002" fg:w="1"/><text x="73.9032%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="73.6532%" y="725" width="0.0123%" height="15" fill="rgb(252,68,10)" fg:x="6002" fg:w="1"/><text x="73.9032%" y="735.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.09%)</title><rect x="73.6532%" y="773" width="0.0859%" height="15" fill="rgb(219,19,31)" fg:x="6002" fg:w="7"/><text x="73.9032%" y="783.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (7 samples, 0.09%)</title><rect x="73.6532%" y="757" width="0.0859%" height="15" fill="rgb(246,150,44)" fg:x="6002" fg:w="7"/><text x="73.9032%" y="767.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.07%)</title><rect x="73.6655%" y="741" width="0.0736%" height="15" fill="rgb(211,14,39)" fg:x="6003" fg:w="6"/><text x="73.9155%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.07%)</title><rect x="73.6655%" y="725" width="0.0736%" height="15" fill="rgb(221,98,29)" fg:x="6003" fg:w="6"/><text x="73.9155%" y="735.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.07%)</title><rect x="73.6655%" y="709" width="0.0736%" height="15" fill="rgb(221,70,26)" fg:x="6003" fg:w="6"/><text x="73.9155%" y="719.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.07%)</title><rect x="73.6655%" y="693" width="0.0736%" height="15" fill="rgb(236,146,30)" fg:x="6003" fg:w="6"/><text x="73.9155%" y="703.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.06%)</title><rect x="73.6778%" y="677" width="0.0614%" height="15" fill="rgb(226,94,34)" fg:x="6004" fg:w="5"/><text x="73.9278%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (27 samples, 0.33%)</title><rect x="73.5673%" y="933" width="0.3313%" height="15" fill="rgb(248,132,21)" fg:x="5995" fg:w="27"/><text x="73.8173%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.33%)</title><rect x="73.5673%" y="917" width="0.3313%" height="15" fill="rgb(245,43,50)" fg:x="5995" fg:w="27"/><text x="73.8173%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (27 samples, 0.33%)</title><rect x="73.5673%" y="901" width="0.3313%" height="15" fill="rgb(245,132,31)" fg:x="5995" fg:w="27"/><text x="73.8173%" y="911.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (27 samples, 0.33%)</title><rect x="73.5673%" y="885" width="0.3313%" height="15" fill="rgb(230,171,4)" fg:x="5995" fg:w="27"/><text x="73.8173%" y="895.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (27 samples, 0.33%)</title><rect x="73.5673%" y="869" width="0.3313%" height="15" fill="rgb(235,6,45)" fg:x="5995" fg:w="27"/><text x="73.8173%" y="879.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (27 samples, 0.33%)</title><rect x="73.5673%" y="853" width="0.3313%" height="15" fill="rgb(220,80,28)" fg:x="5995" fg:w="27"/><text x="73.8173%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (27 samples, 0.33%)</title><rect x="73.5673%" y="837" width="0.3313%" height="15" fill="rgb(242,171,9)" fg:x="5995" fg:w="27"/><text x="73.8173%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (27 samples, 0.33%)</title><rect x="73.5673%" y="821" width="0.3313%" height="15" fill="rgb(214,135,29)" fg:x="5995" fg:w="27"/><text x="73.8173%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.26%)</title><rect x="73.6409%" y="805" width="0.2577%" height="15" fill="rgb(221,229,16)" fg:x="6001" fg:w="21"/><text x="73.8909%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.26%)</title><rect x="73.6409%" y="789" width="0.2577%" height="15" fill="rgb(253,59,46)" fg:x="6001" fg:w="21"/><text x="73.8909%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (13 samples, 0.16%)</title><rect x="73.7391%" y="773" width="0.1595%" height="15" fill="rgb(250,147,20)" fg:x="6009" fg:w="13"/><text x="73.9891%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (13 samples, 0.16%)</title><rect x="73.7391%" y="757" width="0.1595%" height="15" fill="rgb(236,64,48)" fg:x="6009" fg:w="13"/><text x="73.9891%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (13 samples, 0.16%)</title><rect x="73.7391%" y="741" width="0.1595%" height="15" fill="rgb(240,37,42)" fg:x="6009" fg:w="13"/><text x="73.9891%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (13 samples, 0.16%)</title><rect x="73.7391%" y="725" width="0.1595%" height="15" fill="rgb(220,41,50)" fg:x="6009" fg:w="13"/><text x="73.9891%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (13 samples, 0.16%)</title><rect x="73.7391%" y="709" width="0.1595%" height="15" fill="rgb(216,51,14)" fg:x="6009" fg:w="13"/><text x="73.9891%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.16%)</title><rect x="73.7391%" y="693" width="0.1595%" height="15" fill="rgb(215,83,10)" fg:x="6009" fg:w="13"/><text x="73.9891%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="73.8986%" y="853" width="0.0123%" height="15" fill="rgb(206,144,17)" fg:x="6022" fg:w="1"/><text x="74.1486%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="73.8986%" y="837" width="0.0123%" height="15" fill="rgb(219,196,37)" fg:x="6022" fg:w="1"/><text x="74.1486%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="73.8986%" y="821" width="0.0123%" height="15" fill="rgb(226,135,26)" fg:x="6022" fg:w="1"/><text x="74.1486%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (45 samples, 0.55%)</title><rect x="73.3710%" y="1045" width="0.5522%" height="15" fill="rgb(237,195,40)" fg:x="5979" fg:w="45"/><text x="73.6210%" y="1055.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}} (45 samples, 0.55%)</title><rect x="73.3710%" y="1029" width="0.5522%" height="15" fill="rgb(228,182,42)" fg:x="5979" fg:w="45"/><text x="73.6210%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (45 samples, 0.55%)</title><rect x="73.3710%" y="1013" width="0.5522%" height="15" fill="rgb(224,135,50)" fg:x="5979" fg:w="45"/><text x="73.6210%" y="1023.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}}::{{closure}} (45 samples, 0.55%)</title><rect x="73.3710%" y="997" width="0.5522%" height="15" fill="rgb(236,215,34)" fg:x="5979" fg:w="45"/><text x="73.6210%" y="1007.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (45 samples, 0.55%)</title><rect x="73.3710%" y="981" width="0.5522%" height="15" fill="rgb(244,213,27)" fg:x="5979" fg:w="45"/><text x="73.6210%" y="991.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (45 samples, 0.55%)</title><rect x="73.3710%" y="965" width="0.5522%" height="15" fill="rgb(233,37,53)" fg:x="5979" fg:w="45"/><text x="73.6210%" y="975.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (33 samples, 0.40%)</title><rect x="73.5182%" y="949" width="0.4050%" height="15" fill="rgb(222,132,14)" fg:x="5991" fg:w="33"/><text x="73.7682%" y="959.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (2 samples, 0.02%)</title><rect x="73.8986%" y="933" width="0.0245%" height="15" fill="rgb(219,202,29)" fg:x="6022" fg:w="2"/><text x="74.1486%" y="943.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (2 samples, 0.02%)</title><rect x="73.8986%" y="917" width="0.0245%" height="15" fill="rgb(226,157,39)" fg:x="6022" fg:w="2"/><text x="74.1486%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (2 samples, 0.02%)</title><rect x="73.8986%" y="901" width="0.0245%" height="15" fill="rgb(235,213,2)" fg:x="6022" fg:w="2"/><text x="74.1486%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2 samples, 0.02%)</title><rect x="73.8986%" y="885" width="0.0245%" height="15" fill="rgb(250,121,2)" fg:x="6022" fg:w="2"/><text x="74.1486%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.02%)</title><rect x="73.8986%" y="869" width="0.0245%" height="15" fill="rgb(206,192,33)" fg:x="6022" fg:w="2"/><text x="74.1486%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (1 samples, 0.01%)</title><rect x="73.9109%" y="853" width="0.0123%" height="15" fill="rgb(240,161,6)" fg:x="6023" fg:w="1"/><text x="74.1609%" y="863.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u64 (2 samples, 0.02%)</title><rect x="73.9355%" y="869" width="0.0245%" height="15" fill="rgb(246,53,30)" fg:x="6025" fg:w="2"/><text x="74.1855%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.05%)</title><rect x="73.9232%" y="997" width="0.0491%" height="15" fill="rgb(219,123,43)" fg:x="6024" fg:w="4"/><text x="74.1732%" y="1007.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="73.9232%" y="981" width="0.0491%" height="15" fill="rgb(236,53,49)" fg:x="6024" fg:w="4"/><text x="74.1732%" y="991.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (4 samples, 0.05%)</title><rect x="73.9232%" y="965" width="0.0491%" height="15" fill="rgb(241,156,1)" fg:x="6024" fg:w="4"/><text x="74.1732%" y="975.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="73.9355%" y="949" width="0.0368%" height="15" fill="rgb(209,73,26)" fg:x="6025" fg:w="3"/><text x="74.1855%" y="959.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (3 samples, 0.04%)</title><rect x="73.9355%" y="933" width="0.0368%" height="15" fill="rgb(206,114,3)" fg:x="6025" fg:w="3"/><text x="74.1855%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.04%)</title><rect x="73.9355%" y="917" width="0.0368%" height="15" fill="rgb(230,214,9)" fg:x="6025" fg:w="3"/><text x="74.1855%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (3 samples, 0.04%)</title><rect x="73.9355%" y="901" width="0.0368%" height="15" fill="rgb(240,184,46)" fg:x="6025" fg:w="3"/><text x="74.1855%" y="911.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (3 samples, 0.04%)</title><rect x="73.9355%" y="885" width="0.0368%" height="15" fill="rgb(242,169,54)" fg:x="6025" fg:w="3"/><text x="74.1855%" y="895.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="73.9600%" y="869" width="0.0123%" height="15" fill="rgb(207,168,50)" fg:x="6027" fg:w="1"/><text x="74.2100%" y="879.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="73.9600%" y="853" width="0.0123%" height="15" fill="rgb(240,114,2)" fg:x="6027" fg:w="1"/><text x="74.2100%" y="863.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (50 samples, 0.61%)</title><rect x="73.3710%" y="1061" width="0.6136%" height="15" fill="rgb(211,17,40)" fg:x="5979" fg:w="50"/><text x="73.6210%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.06%)</title><rect x="73.9232%" y="1045" width="0.0614%" height="15" fill="rgb(235,97,36)" fg:x="6024" fg:w="5"/><text x="74.1732%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.06%)</title><rect x="73.9232%" y="1029" width="0.0614%" height="15" fill="rgb(208,164,11)" fg:x="6024" fg:w="5"/><text x="74.1732%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.06%)</title><rect x="73.9232%" y="1013" width="0.0614%" height="15" fill="rgb(242,11,17)" fg:x="6024" fg:w="5"/><text x="74.1732%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="73.9723%" y="997" width="0.0123%" height="15" fill="rgb(215,86,33)" fg:x="6028" fg:w="1"/><text x="74.2223%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="73.9723%" y="981" width="0.0123%" height="15" fill="rgb(245,185,28)" fg:x="6028" fg:w="1"/><text x="74.2223%" y="991.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="73.9723%" y="965" width="0.0123%" height="15" fill="rgb(231,89,42)" fg:x="6028" fg:w="1"/><text x="74.2223%" y="975.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="73.9723%" y="949" width="0.0123%" height="15" fill="rgb(210,18,47)" fg:x="6028" fg:w="1"/><text x="74.2223%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="73.9723%" y="933" width="0.0123%" height="15" fill="rgb(214,84,8)" fg:x="6028" fg:w="1"/><text x="74.2223%" y="943.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (59 samples, 0.72%)</title><rect x="73.2728%" y="1077" width="0.7240%" height="15" fill="rgb(214,222,23)" fg:x="5971" fg:w="59"/><text x="73.5228%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="73.9845%" y="1061" width="0.0123%" height="15" fill="rgb(213,104,21)" fg:x="6029" fg:w="1"/><text x="74.2345%" y="1071.50"></text></g><g><title>bevy_render::draw::Draw::set_index_buffer (3 samples, 0.04%)</title><rect x="74.0214%" y="1061" width="0.0368%" height="15" fill="rgb(238,138,6)" fg:x="6032" fg:w="3"/><text x="74.2714%" y="1071.50"></text></g><g><title>bevy_render::draw::Draw::render_command (3 samples, 0.04%)</title><rect x="74.0214%" y="1045" width="0.0368%" height="15" fill="rgb(205,167,50)" fg:x="6032" fg:w="3"/><text x="74.2714%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.04%)</title><rect x="74.0214%" y="1029" width="0.0368%" height="15" fill="rgb(230,105,27)" fg:x="6032" fg:w="3"/><text x="74.2714%" y="1039.50"></text></g><g><title>core::ptr::write (3 samples, 0.04%)</title><rect x="74.0214%" y="1013" width="0.0368%" height="15" fill="rgb(222,97,48)" fg:x="6032" fg:w="3"/><text x="74.2714%" y="1023.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (197 samples, 2.42%)</title><rect x="71.6530%" y="1141" width="2.4175%" height="15" fill="rgb(222,197,14)" fg:x="5839" fg:w="197"/><text x="71.9030%" y="1151.50">&lt;F..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (197 samples, 2.42%)</title><rect x="71.6530%" y="1125" width="2.4175%" height="15" fill="rgb(210,105,47)" fg:x="5839" fg:w="197"/><text x="71.9030%" y="1135.50">co..</text></g><g><title>core::ops::function::Fn::call (197 samples, 2.42%)</title><rect x="71.6530%" y="1109" width="2.4175%" height="15" fill="rgb(238,158,19)" fg:x="5839" fg:w="197"/><text x="71.9030%" y="1119.50">co..</text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (187 samples, 2.29%)</title><rect x="71.7757%" y="1093" width="2.2948%" height="15" fill="rgb(226,176,23)" fg:x="5849" fg:w="187"/><text x="72.0257%" y="1103.50">b..</text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (6 samples, 0.07%)</title><rect x="73.9968%" y="1077" width="0.0736%" height="15" fill="rgb(208,79,31)" fg:x="6030" fg:w="6"/><text x="74.2468%" y="1087.50"></text></g><g><title>bevy_render::draw::Draw::set_vertex_buffer (1 samples, 0.01%)</title><rect x="74.0582%" y="1061" width="0.0123%" height="15" fill="rgb(221,154,21)" fg:x="6035" fg:w="1"/><text x="74.3082%" y="1071.50"></text></g><g><title>bevy_render::draw::Draw::render_command (1 samples, 0.01%)</title><rect x="74.0582%" y="1045" width="0.0123%" height="15" fill="rgb(213,61,41)" fg:x="6035" fg:w="1"/><text x="74.3082%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="74.0582%" y="1029" width="0.0123%" height="15" fill="rgb(215,28,33)" fg:x="6035" fg:w="1"/><text x="74.3082%" y="1039.50"></text></g><g><title>&lt;bevy_render::draw::DrawContextState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::shader::shader::Shader&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::pipeline::pipeline_compiler::PipelineCompiler&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::Res&lt;alloc::boxed::Box&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::shared_buffers::SharedBuffers&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="74.0704%" y="1061" width="0.0123%" height="15" fill="rgb(231,139,26)" fg:x="6036" fg:w="1"/><text x="74.3204%" y="1071.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="74.0704%" y="1125" width="0.0245%" height="15" fill="rgb(232,159,16)" fg:x="6036" fg:w="2"/><text x="74.3204%" y="1135.50"></text></g><g><title>&lt;bevy_render::draw::DrawContextState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::shader::shader::Shader&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::pipeline::pipeline_compiler::PipelineCompiler&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::Res&lt;alloc::boxed::Box&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::shared_buffers::SharedBuffers&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="74.0704%" y="1109" width="0.0245%" height="15" fill="rgb(233,80,10)" fg:x="6036" fg:w="2"/><text x="74.3204%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="74.0704%" y="1093" width="0.0245%" height="15" fill="rgb(208,147,29)" fg:x="6036" fg:w="2"/><text x="74.3204%" y="1103.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (2 samples, 0.02%)</title><rect x="74.0704%" y="1077" width="0.0245%" height="15" fill="rgb(213,10,12)" fg:x="6036" fg:w="2"/><text x="74.3204%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="74.0827%" y="1061" width="0.0123%" height="15" fill="rgb(231,218,13)" fg:x="6037" fg:w="1"/><text x="74.3327%" y="1071.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="74.0827%" y="1045" width="0.0123%" height="15" fill="rgb(244,199,44)" fg:x="6037" fg:w="1"/><text x="74.3327%" y="1055.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="74.0827%" y="1029" width="0.0123%" height="15" fill="rgb(240,144,53)" fg:x="6037" fg:w="1"/><text x="74.3327%" y="1039.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (1 samples, 0.01%)</title><rect x="74.0827%" y="1013" width="0.0123%" height="15" fill="rgb(223,57,28)" fg:x="6037" fg:w="1"/><text x="74.3327%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="74.0950%" y="1125" width="0.0123%" height="15" fill="rgb(213,134,38)" fg:x="6038" fg:w="1"/><text x="74.3450%" y="1135.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4,F5) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="74.1195%" y="1029" width="0.0123%" height="15" fill="rgb(251,182,42)" fg:x="6040" fg:w="1"/><text x="74.3695%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="74.1195%" y="1013" width="0.0123%" height="15" fill="rgb(229,93,13)" fg:x="6040" fg:w="1"/><text x="74.3695%" y="1023.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (2 samples, 0.02%)</title><rect x="74.1195%" y="1077" width="0.0245%" height="15" fill="rgb(234,171,3)" fg:x="6040" fg:w="2"/><text x="74.3695%" y="1087.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (2 samples, 0.02%)</title><rect x="74.1195%" y="1061" width="0.0245%" height="15" fill="rgb(241,105,32)" fg:x="6040" fg:w="2"/><text x="74.3695%" y="1071.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (2 samples, 0.02%)</title><rect x="74.1195%" y="1045" width="0.0245%" height="15" fill="rgb(221,66,3)" fg:x="6040" fg:w="2"/><text x="74.3695%" y="1055.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4,F5) as bevy_ecs::query::fetch::Fetch&gt;::is_dense (1 samples, 0.01%)</title><rect x="74.1318%" y="1029" width="0.0123%" height="15" fill="rgb(248,155,29)" fg:x="6041" fg:w="1"/><text x="74.3818%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::is_dense (1 samples, 0.01%)</title><rect x="74.1318%" y="1013" width="0.0123%" height="15" fill="rgb(231,31,5)" fg:x="6041" fg:w="1"/><text x="74.3818%" y="1023.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_layout (1 samples, 0.01%)</title><rect x="74.1441%" y="1077" width="0.0123%" height="15" fill="rgb(213,188,31)" fg:x="6042" fg:w="1"/><text x="74.3941%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="74.1441%" y="1061" width="0.0123%" height="15" fill="rgb(212,104,33)" fg:x="6042" fg:w="1"/><text x="74.3941%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="74.1441%" y="1045" width="0.0123%" height="15" fill="rgb(254,77,51)" fg:x="6042" fg:w="1"/><text x="74.3941%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="74.1441%" y="1029" width="0.0123%" height="15" fill="rgb(234,39,26)" fg:x="6042" fg:w="1"/><text x="74.3941%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="74.1441%" y="1013" width="0.0123%" height="15" fill="rgb(208,88,36)" fg:x="6042" fg:w="1"/><text x="74.3941%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="74.1441%" y="997" width="0.0123%" height="15" fill="rgb(243,222,10)" fg:x="6042" fg:w="1"/><text x="74.3941%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="74.1441%" y="981" width="0.0123%" height="15" fill="rgb(218,133,52)" fg:x="6042" fg:w="1"/><text x="74.3941%" y="991.50"></text></g><g><title>bevy_text::text2d::draw_text2d_system (5 samples, 0.06%)</title><rect x="74.1073%" y="1093" width="0.0614%" height="15" fill="rgb(222,25,26)" fg:x="6039" fg:w="5"/><text x="74.3573%" y="1103.50"></text></g><g><title>bevy_text::text2d::draw_text2d_system (1 samples, 0.01%)</title><rect x="74.1563%" y="1077" width="0.0123%" height="15" fill="rgb(243,174,24)" fg:x="6043" fg:w="1"/><text x="74.4063%" y="1087.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.1686%" y="1077" width="0.0123%" height="15" fill="rgb(233,188,52)" fg:x="6044" fg:w="1"/><text x="74.4186%" y="1087.50"></text></g><g><title>bevy_render::mesh::mesh::Mesh::get_vertex_buffer_layout (1 samples, 0.01%)</title><rect x="74.1809%" y="1077" width="0.0123%" height="15" fill="rgb(208,89,14)" fg:x="6045" fg:w="1"/><text x="74.4309%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="74.1809%" y="1061" width="0.0123%" height="15" fill="rgb(205,204,21)" fg:x="6045" fg:w="1"/><text x="74.4309%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="74.1809%" y="1045" width="0.0123%" height="15" fill="rgb(246,39,28)" fg:x="6045" fg:w="1"/><text x="74.4309%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="74.1809%" y="1029" width="0.0123%" height="15" fill="rgb(235,71,19)" fg:x="6045" fg:w="1"/><text x="74.4309%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="74.1809%" y="1013" width="0.0123%" height="15" fill="rgb(211,62,39)" fg:x="6045" fg:w="1"/><text x="74.4309%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="74.1809%" y="997" width="0.0123%" height="15" fill="rgb(246,118,20)" fg:x="6045" fg:w="1"/><text x="74.4309%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="74.1809%" y="981" width="0.0123%" height="15" fill="rgb(230,82,12)" fg:x="6045" fg:w="1"/><text x="74.4309%" y="991.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6),()&gt;&gt;::run (11 samples, 0.13%)</title><rect x="74.0704%" y="1141" width="0.1350%" height="15" fill="rgb(205,212,34)" fg:x="6036" fg:w="11"/><text x="74.3204%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (8 samples, 0.10%)</title><rect x="74.1073%" y="1125" width="0.0982%" height="15" fill="rgb(239,90,1)" fg:x="6039" fg:w="8"/><text x="74.3573%" y="1135.50"></text></g><g><title>core::ops::function::Fn::call (8 samples, 0.10%)</title><rect x="74.1073%" y="1109" width="0.0982%" height="15" fill="rgb(225,198,50)" fg:x="6039" fg:w="8"/><text x="74.3573%" y="1119.50"></text></g><g><title>bevy_ui::widget::text::draw_text_system (3 samples, 0.04%)</title><rect x="74.1686%" y="1093" width="0.0368%" height="15" fill="rgb(227,208,48)" fg:x="6044" fg:w="3"/><text x="74.4186%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout&gt; (1 samples, 0.01%)</title><rect x="74.1932%" y="1077" width="0.0123%" height="15" fill="rgb(238,134,41)" fg:x="6046" fg:w="1"/><text x="74.4432%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute&gt;&gt; (1 samples, 0.01%)</title><rect x="74.1932%" y="1061" width="0.0123%" height="15" fill="rgb(241,58,39)" fg:x="6046" fg:w="1"/><text x="74.4432%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="74.1932%" y="1045" width="0.0123%" height="15" fill="rgb(214,126,4)" fg:x="6046" fg:w="1"/><text x="74.4432%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute]&gt; (1 samples, 0.01%)</title><rect x="74.1932%" y="1029" width="0.0123%" height="15" fill="rgb(235,149,4)" fg:x="6046" fg:w="1"/><text x="74.4432%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::world::pointer::Mut&lt;T&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="74.2054%" y="1077" width="0.0123%" height="15" fill="rgb(236,59,29)" fg:x="6047" fg:w="1"/><text x="74.4554%" y="1087.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::set_changed (1 samples, 0.01%)</title><rect x="74.2054%" y="1061" width="0.0123%" height="15" fill="rgb(246,11,33)" fg:x="6047" fg:w="1"/><text x="74.4554%" y="1071.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="74.2177%" y="1077" width="0.0123%" height="15" fill="rgb(232,180,35)" fg:x="6048" fg:w="1"/><text x="74.4677%" y="1087.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter_with_id (1 samples, 0.01%)</title><rect x="74.2177%" y="1061" width="0.0123%" height="15" fill="rgb(220,35,37)" fg:x="6048" fg:w="1"/><text x="74.4677%" y="1071.50"></text></g><g><title>bevy_app::event::internal_event_reader (1 samples, 0.01%)</title><rect x="74.2177%" y="1045" width="0.0123%" height="15" fill="rgb(238,107,48)" fg:x="6048" fg:w="1"/><text x="74.4677%" y="1055.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="74.2300%" y="1077" width="0.0123%" height="15" fill="rgb(205,65,21)" fg:x="6049" fg:w="1"/><text x="74.4800%" y="1087.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="74.2300%" y="1061" width="0.0123%" height="15" fill="rgb(246,138,48)" fg:x="6049" fg:w="1"/><text x="74.4800%" y="1071.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="74.2300%" y="1045" width="0.0123%" height="15" fill="rgb(209,220,47)" fg:x="6049" fg:w="1"/><text x="74.4800%" y="1055.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="74.2300%" y="1029" width="0.0123%" height="15" fill="rgb(222,162,49)" fg:x="6049" fg:w="1"/><text x="74.4800%" y="1039.50"></text></g><g><title>bevy_ui::flex::FlexSurface::compute_window_layouts (1 samples, 0.01%)</title><rect x="74.2422%" y="1077" width="0.0123%" height="15" fill="rgb(243,123,11)" fg:x="6050" fg:w="1"/><text x="74.4922%" y="1087.50"></text></g><g><title>stretch::node::Stretch::compute_layout (1 samples, 0.01%)</title><rect x="74.2422%" y="1061" width="0.0123%" height="15" fill="rgb(221,229,41)" fg:x="6050" fg:w="1"/><text x="74.4922%" y="1071.50"></text></g><g><title>stretch::forest::Forest::compute_layout (1 samples, 0.01%)</title><rect x="74.2422%" y="1045" width="0.0123%" height="15" fill="rgb(216,68,4)" fg:x="6050" fg:w="1"/><text x="74.4922%" y="1055.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute (1 samples, 0.01%)</title><rect x="74.2422%" y="1029" width="0.0123%" height="15" fill="rgb(207,88,35)" fg:x="6050" fg:w="1"/><text x="74.4922%" y="1039.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::round_layout (1 samples, 0.01%)</title><rect x="74.2422%" y="1013" width="0.0123%" height="15" fill="rgb(252,2,5)" fg:x="6050" fg:w="1"/><text x="74.4922%" y="1023.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::round (1 samples, 0.01%)</title><rect x="74.2422%" y="997" width="0.0123%" height="15" fill="rgb(209,173,7)" fg:x="6050" fg:w="1"/><text x="74.4922%" y="1007.50"></text></g><g><title>roundf32 (1 samples, 0.01%)</title><rect x="74.2422%" y="981" width="0.0123%" height="15" fill="rgb(210,198,52)" fg:x="6050" fg:w="1"/><text x="74.4922%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="74.2545%" y="1061" width="0.0123%" height="15" fill="rgb(228,152,32)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="74.2545%" y="1045" width="0.0123%" height="15" fill="rgb(249,98,29)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="74.2545%" y="1029" width="0.0123%" height="15" fill="rgb(205,148,48)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="74.2545%" y="1013" width="0.0123%" height="15" fill="rgb(236,69,34)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.2545%" y="997" width="0.0123%" height="15" fill="rgb(220,151,41)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="74.2545%" y="981" width="0.0123%" height="15" fill="rgb(254,106,24)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="74.2545%" y="965" width="0.0123%" height="15" fill="rgb(210,37,48)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="975.50"></text></g><g><title>bevy_ui::flex::FlexSurface::set_window_children::{{closure}} (1 samples, 0.01%)</title><rect x="74.2545%" y="949" width="0.0123%" height="15" fill="rgb(254,131,5)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="74.2545%" y="933" width="0.0123%" height="15" fill="rgb(216,55,41)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="74.2545%" y="917" width="0.0123%" height="15" fill="rgb(250,35,31)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="74.2545%" y="901" width="0.0123%" height="15" fill="rgb(207,124,33)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="74.2545%" y="885" width="0.0123%" height="15" fill="rgb(249,175,17)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="74.2545%" y="869" width="0.0123%" height="15" fill="rgb(224,175,39)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="879.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="74.2545%" y="853" width="0.0123%" height="15" fill="rgb(208,67,49)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="863.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="74.2545%" y="837" width="0.0123%" height="15" fill="rgb(222,188,41)" fg:x="6051" fg:w="1"/><text x="74.5045%" y="847.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="74.2913%" y="1045" width="0.0123%" height="15" fill="rgb(243,213,30)" fg:x="6054" fg:w="1"/><text x="74.5413%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="74.2913%" y="1029" width="0.0123%" height="15" fill="rgb(253,100,45)" fg:x="6054" fg:w="1"/><text x="74.5413%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="74.3036%" y="1045" width="0.0123%" height="15" fill="rgb(226,24,44)" fg:x="6055" fg:w="1"/><text x="74.5536%" y="1055.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="74.3036%" y="1029" width="0.0123%" height="15" fill="rgb(215,41,24)" fg:x="6055" fg:w="1"/><text x="74.5536%" y="1039.50"></text></g><g><title>core::iter::adapters::process_results (1 samples, 0.01%)</title><rect x="74.3036%" y="1013" width="0.0123%" height="15" fill="rgb(254,53,33)" fg:x="6055" fg:w="1"/><text x="74.5536%" y="1023.50"></text></g><g><title>&lt;core::result::Result&lt;V,E&gt; as core::iter::traits::collect::FromIterator&lt;core::result::Result&lt;A,E&gt;&gt;&gt;::from_iter::{{closure}} (1 samples, 0.01%)</title><rect x="74.3036%" y="997" width="0.0123%" height="15" fill="rgb(242,103,10)" fg:x="6055" fg:w="1"/><text x="74.5536%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="74.3036%" y="981" width="0.0123%" height="15" fill="rgb(246,29,21)" fg:x="6055" fg:w="1"/><text x="74.5536%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="74.3036%" y="965" width="0.0123%" height="15" fill="rgb(251,154,1)" fg:x="6055" fg:w="1"/><text x="74.5536%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="74.3036%" y="949" width="0.0123%" height="15" fill="rgb(254,212,26)" fg:x="6055" fg:w="1"/><text x="74.5536%" y="959.50"></text></g><g><title>bevy_ui::flex::FlexSurface::set_window_children (6 samples, 0.07%)</title><rect x="74.2545%" y="1077" width="0.0736%" height="15" fill="rgb(251,187,46)" fg:x="6051" fg:w="6"/><text x="74.5045%" y="1087.50"></text></g><g><title>stretch::node::Stretch::set_children (5 samples, 0.06%)</title><rect x="74.2668%" y="1061" width="0.0614%" height="15" fill="rgb(224,208,14)" fg:x="6052" fg:w="5"/><text x="74.5168%" y="1071.50"></text></g><g><title>stretch::node::Stretch::find_node (1 samples, 0.01%)</title><rect x="74.3159%" y="1045" width="0.0123%" height="15" fill="rgb(222,176,26)" fg:x="6056" fg:w="1"/><text x="74.5659%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="74.3159%" y="1029" width="0.0123%" height="15" fill="rgb(241,219,52)" fg:x="6056" fg:w="1"/><text x="74.5659%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="74.3159%" y="1013" width="0.0123%" height="15" fill="rgb(252,198,21)" fg:x="6056" fg:w="1"/><text x="74.5659%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="74.3159%" y="997" width="0.0123%" height="15" fill="rgb(244,196,23)" fg:x="6056" fg:w="1"/><text x="74.5659%" y="1007.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="74.3159%" y="981" width="0.0123%" height="15" fill="rgb(239,121,44)" fg:x="6056" fg:w="1"/><text x="74.5659%" y="991.50"></text></g><g><title>&lt;stretch::node::Node as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.3159%" y="965" width="0.0123%" height="15" fill="rgb(249,203,23)" fg:x="6056" fg:w="1"/><text x="74.5659%" y="975.50"></text></g><g><title>&lt;stretch::id::Id as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="74.3159%" y="949" width="0.0123%" height="15" fill="rgb(238,219,10)" fg:x="6056" fg:w="1"/><text x="74.5659%" y="959.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="74.3159%" y="933" width="0.0123%" height="15" fill="rgb(241,35,46)" fg:x="6056" fg:w="1"/><text x="74.5659%" y="943.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.3281%" y="1061" width="0.0123%" height="15" fill="rgb(218,28,6)" fg:x="6057" fg:w="1"/><text x="74.5781%" y="1071.50"></text></g><g><title>bevy_ui::flex::flex_node_system::update_changed (2 samples, 0.02%)</title><rect x="74.3281%" y="1077" width="0.0245%" height="15" fill="rgb(233,151,50)" fg:x="6057" fg:w="2"/><text x="74.5781%" y="1087.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter (1 samples, 0.01%)</title><rect x="74.3404%" y="1061" width="0.0123%" height="15" fill="rgb(208,57,8)" fg:x="6058" fg:w="1"/><text x="74.5904%" y="1071.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="74.3404%" y="1045" width="0.0123%" height="15" fill="rgb(253,99,10)" fg:x="6058" fg:w="1"/><text x="74.5904%" y="1055.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="74.3404%" y="1029" width="0.0123%" height="15" fill="rgb(237,196,49)" fg:x="6058" fg:w="1"/><text x="74.5904%" y="1039.50"></text></g><g><title>bevy_ui::flex::flex_node_system (13 samples, 0.16%)</title><rect x="74.2054%" y="1093" width="0.1595%" height="15" fill="rgb(209,51,3)" fg:x="6047" fg:w="13"/><text x="74.4554%" y="1103.50"></text></g><g><title>bevy_window::windows::Windows::iter (1 samples, 0.01%)</title><rect x="74.3527%" y="1077" width="0.0123%" height="15" fill="rgb(238,129,10)" fg:x="6059" fg:w="1"/><text x="74.6027%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (1 samples, 0.01%)</title><rect x="74.3527%" y="1061" width="0.0123%" height="15" fill="rgb(246,201,16)" fg:x="6059" fg:w="1"/><text x="74.6027%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="74.3527%" y="1045" width="0.0123%" height="15" fill="rgb(250,160,20)" fg:x="6059" fg:w="1"/><text x="74.6027%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="74.3527%" y="1029" width="0.0123%" height="15" fill="rgb(251,107,25)" fg:x="6059" fg:w="1"/><text x="74.6027%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="74.3527%" y="1013" width="0.0123%" height="15" fill="rgb(212,103,39)" fg:x="6059" fg:w="1"/><text x="74.6027%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="74.3527%" y="997" width="0.0123%" height="15" fill="rgb(207,9,29)" fg:x="6059" fg:w="1"/><text x="74.6027%" y="1007.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="74.3527%" y="981" width="0.0123%" height="15" fill="rgb(227,84,3)" fg:x="6059" fg:w="1"/><text x="74.6027%" y="991.50"></text></g><g><title>bevy_ui::flex::flex_node_system (1 samples, 0.01%)</title><rect x="74.3527%" y="965" width="0.0123%" height="15" fill="rgb(242,194,7)" fg:x="6059" fg:w="1"/><text x="74.6027%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="74.3650%" y="1077" width="0.0123%" height="15" fill="rgb(230,40,4)" fg:x="6060" fg:w="1"/><text x="74.6150%" y="1087.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (270 samples, 3.31%)</title><rect x="71.0762%" y="1349" width="3.3133%" height="15" fill="rgb(243,229,33)" fg:x="5792" fg:w="270"/><text x="71.3262%" y="1359.50">&lt;be..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (270 samples, 3.31%)</title><rect x="71.0762%" y="1333" width="3.3133%" height="15" fill="rgb(240,65,24)" fg:x="5792" fg:w="270"/><text x="71.3262%" y="1343.50">bev..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (270 samples, 3.31%)</title><rect x="71.0762%" y="1317" width="3.3133%" height="15" fill="rgb(212,28,20)" fg:x="5792" fg:w="270"/><text x="71.3262%" y="1327.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (270 samples, 3.31%)</title><rect x="71.0762%" y="1301" width="3.3133%" height="15" fill="rgb(209,72,3)" fg:x="5792" fg:w="270"/><text x="71.3262%" y="1311.50">std..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (270 samples, 3.31%)</title><rect x="71.0762%" y="1285" width="3.3133%" height="15" fill="rgb(238,170,36)" fg:x="5792" fg:w="270"/><text x="71.3262%" y="1295.50">bev..</text></g><g><title>async_executor::Executor::try_tick (268 samples, 3.29%)</title><rect x="71.1007%" y="1269" width="3.2887%" height="15" fill="rgb(236,19,38)" fg:x="5794" fg:w="268"/><text x="71.3507%" y="1279.50">asy..</text></g><g><title>async_task::runnable::Runnable::run (268 samples, 3.29%)</title><rect x="71.1007%" y="1253" width="3.2887%" height="15" fill="rgb(230,67,43)" fg:x="5794" fg:w="268"/><text x="71.3507%" y="1263.50">asy..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (268 samples, 3.29%)</title><rect x="71.1007%" y="1237" width="3.2887%" height="15" fill="rgb(227,14,36)" fg:x="5794" fg:w="268"/><text x="71.3507%" y="1247.50">asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (268 samples, 3.29%)</title><rect x="71.1007%" y="1221" width="3.2887%" height="15" fill="rgb(247,171,49)" fg:x="5794" fg:w="268"/><text x="71.3507%" y="1231.50">&lt;co..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (268 samples, 3.29%)</title><rect x="71.1007%" y="1205" width="3.2887%" height="15" fill="rgb(235,164,51)" fg:x="5794" fg:w="268"/><text x="71.3507%" y="1215.50">asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (268 samples, 3.29%)</title><rect x="71.1007%" y="1189" width="3.2887%" height="15" fill="rgb(246,107,20)" fg:x="5794" fg:w="268"/><text x="71.3507%" y="1199.50">&lt;co..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (268 samples, 3.29%)</title><rect x="71.1007%" y="1173" width="3.2887%" height="15" fill="rgb(226,88,18)" fg:x="5794" fg:w="268"/><text x="71.3507%" y="1183.50">bev..</text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (268 samples, 3.29%)</title><rect x="71.1007%" y="1157" width="3.2887%" height="15" fill="rgb(235,136,9)" fg:x="5794" fg:w="268"/><text x="71.3507%" y="1167.50">&lt;be..</text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (15 samples, 0.18%)</title><rect x="74.2054%" y="1141" width="0.1841%" height="15" fill="rgb(209,3,34)" fg:x="6047" fg:w="15"/><text x="74.4554%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (15 samples, 0.18%)</title><rect x="74.2054%" y="1125" width="0.1841%" height="15" fill="rgb(213,38,19)" fg:x="6047" fg:w="15"/><text x="74.4554%" y="1135.50"></text></g><g><title>core::ops::function::Fn::call (15 samples, 0.18%)</title><rect x="74.2054%" y="1109" width="0.1841%" height="15" fill="rgb(254,24,24)" fg:x="6047" fg:w="15"/><text x="74.4554%" y="1119.50"></text></g><g><title>bevy_ui::widget::text::text_system (2 samples, 0.02%)</title><rect x="74.3650%" y="1093" width="0.0245%" height="15" fill="rgb(219,122,42)" fg:x="6060" fg:w="2"/><text x="74.6150%" y="1103.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter (1 samples, 0.01%)</title><rect x="74.3772%" y="1077" width="0.0123%" height="15" fill="rgb(205,128,31)" fg:x="6061" fg:w="1"/><text x="74.6272%" y="1087.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="74.3772%" y="1061" width="0.0123%" height="15" fill="rgb(212,142,0)" fg:x="6061" fg:w="1"/><text x="74.6272%" y="1071.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="74.3772%" y="1045" width="0.0123%" height="15" fill="rgb(211,25,35)" fg:x="6061" fg:w="1"/><text x="74.6272%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="74.3772%" y="1029" width="0.0123%" height="15" fill="rgb(220,150,53)" fg:x="6061" fg:w="1"/><text x="74.6272%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (1 samples, 0.01%)</title><rect x="74.3895%" y="1349" width="0.0123%" height="15" fill="rgb(220,30,24)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1359.50"></text></g><g><title>bevy_ecs::system::system::System::run (1 samples, 0.01%)</title><rect x="74.3895%" y="1333" width="0.0123%" height="15" fill="rgb(218,86,23)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1343.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="74.3895%" y="1317" width="0.0123%" height="15" fill="rgb(206,62,27)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1327.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="74.3895%" y="1301" width="0.0123%" height="15" fill="rgb(249,174,0)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1311.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="74.3895%" y="1285" width="0.0123%" height="15" fill="rgb(246,67,27)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1295.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="74.3895%" y="1269" width="0.0123%" height="15" fill="rgb(250,195,30)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1279.50"></text></g><g><title>bevy_console::console_system (1 samples, 0.01%)</title><rect x="74.3895%" y="1253" width="0.0123%" height="15" fill="rgb(251,171,50)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1263.50"></text></g><g><title>egui::containers::window::Window::new (1 samples, 0.01%)</title><rect x="74.3895%" y="1237" width="0.0123%" height="15" fill="rgb(236,196,10)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1247.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (1 samples, 0.01%)</title><rect x="74.3895%" y="1221" width="0.0123%" height="15" fill="rgb(249,228,52)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1231.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="74.3895%" y="1205" width="0.0123%" height="15" fill="rgb(219,60,51)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1215.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="74.3895%" y="1189" width="0.0123%" height="15" fill="rgb(240,198,24)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1199.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="74.3895%" y="1173" width="0.0123%" height="15" fill="rgb(240,192,40)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1183.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="74.3895%" y="1157" width="0.0123%" height="15" fill="rgb(219,118,5)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="74.3895%" y="1141" width="0.0123%" height="15" fill="rgb(205,202,34)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1151.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="74.3895%" y="1125" width="0.0123%" height="15" fill="rgb(234,153,26)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="74.3895%" y="1109" width="0.0123%" height="15" fill="rgb(229,26,29)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="74.3895%" y="1093" width="0.0123%" height="15" fill="rgb(237,115,21)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="74.3895%" y="1077" width="0.0123%" height="15" fill="rgb(252,144,15)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="74.3895%" y="1061" width="0.0123%" height="15" fill="rgb(232,26,13)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="74.3895%" y="1045" width="0.0123%" height="15" fill="rgb(206,44,19)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="74.3895%" y="1029" width="0.0123%" height="15" fill="rgb(249,159,2)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1039.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="74.3895%" y="1013" width="0.0123%" height="15" fill="rgb(231,5,32)" fg:x="6062" fg:w="1"/><text x="74.6395%" y="1023.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="74.4999%" y="1141" width="0.0368%" height="15" fill="rgb(249,210,18)" fg:x="6071" fg:w="3"/><text x="74.7499%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.04%)</title><rect x="74.4999%" y="1125" width="0.0368%" height="15" fill="rgb(215,223,36)" fg:x="6071" fg:w="3"/><text x="74.7499%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.04%)</title><rect x="74.4999%" y="1109" width="0.0368%" height="15" fill="rgb(245,185,20)" fg:x="6071" fg:w="3"/><text x="74.7499%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="74.5368%" y="1125" width="0.0123%" height="15" fill="rgb(206,224,11)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="74.5368%" y="1109" width="0.0123%" height="15" fill="rgb(248,73,42)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="74.5368%" y="1093" width="0.0123%" height="15" fill="rgb(219,149,31)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="74.5368%" y="1077" width="0.0123%" height="15" fill="rgb(243,104,17)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="74.5368%" y="1061" width="0.0123%" height="15" fill="rgb(244,117,33)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="1071.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="74.5368%" y="1045" width="0.0123%" height="15" fill="rgb(251,25,47)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="1055.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="74.5368%" y="1029" width="0.0123%" height="15" fill="rgb(249,70,13)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="1039.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="74.5368%" y="1013" width="0.0123%" height="15" fill="rgb(217,133,18)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="1023.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="74.5368%" y="997" width="0.0123%" height="15" fill="rgb(248,97,28)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="1007.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="74.5368%" y="981" width="0.0123%" height="15" fill="rgb(237,193,4)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="991.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="74.5368%" y="965" width="0.0123%" height="15" fill="rgb(247,198,45)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="975.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="74.5368%" y="949" width="0.0123%" height="15" fill="rgb(245,2,20)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="959.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="74.5368%" y="933" width="0.0123%" height="15" fill="rgb(210,71,36)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="943.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.5368%" y="917" width="0.0123%" height="15" fill="rgb(238,114,30)" fg:x="6074" fg:w="1"/><text x="74.7868%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="74.5490%" y="1109" width="0.0245%" height="15" fill="rgb(241,200,2)" fg:x="6075" fg:w="2"/><text x="74.7990%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="74.5490%" y="1093" width="0.0245%" height="15" fill="rgb(232,106,18)" fg:x="6075" fg:w="2"/><text x="74.7990%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="74.5490%" y="1077" width="0.0245%" height="15" fill="rgb(211,141,18)" fg:x="6075" fg:w="2"/><text x="74.7990%" y="1087.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="74.5736%" y="1077" width="0.0123%" height="15" fill="rgb(224,9,9)" fg:x="6077" fg:w="1"/><text x="74.8236%" y="1087.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="74.5736%" y="1061" width="0.0123%" height="15" fill="rgb(249,137,46)" fg:x="6077" fg:w="1"/><text x="74.8236%" y="1071.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="74.5736%" y="1045" width="0.0123%" height="15" fill="rgb(236,44,45)" fg:x="6077" fg:w="1"/><text x="74.8236%" y="1055.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.01%)</title><rect x="74.5736%" y="1029" width="0.0123%" height="15" fill="rgb(205,68,40)" fg:x="6077" fg:w="1"/><text x="74.8236%" y="1039.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.01%)</title><rect x="74.5736%" y="1013" width="0.0123%" height="15" fill="rgb(214,198,49)" fg:x="6077" fg:w="1"/><text x="74.8236%" y="1023.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="74.5736%" y="997" width="0.0123%" height="15" fill="rgb(226,140,45)" fg:x="6077" fg:w="1"/><text x="74.8236%" y="1007.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="74.5736%" y="981" width="0.0123%" height="15" fill="rgb(209,109,20)" fg:x="6077" fg:w="1"/><text x="74.8236%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (1 samples, 0.01%)</title><rect x="74.5736%" y="965" width="0.0123%" height="15" fill="rgb(217,33,46)" fg:x="6077" fg:w="1"/><text x="74.8236%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.01%)</title><rect x="74.5736%" y="949" width="0.0123%" height="15" fill="rgb(232,150,33)" fg:x="6077" fg:w="1"/><text x="74.8236%" y="959.50"></text></g><g><title>async_task::runnable::Runnable::schedule (2 samples, 0.02%)</title><rect x="74.5736%" y="1109" width="0.0245%" height="15" fill="rgb(233,76,25)" fg:x="6077" fg:w="2"/><text x="74.8236%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (2 samples, 0.02%)</title><rect x="74.5736%" y="1093" width="0.0245%" height="15" fill="rgb(254,219,23)" fg:x="6077" fg:w="2"/><text x="74.8236%" y="1103.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="74.5858%" y="1077" width="0.0123%" height="15" fill="rgb(233,108,4)" fg:x="6078" fg:w="1"/><text x="74.8358%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="74.5858%" y="1061" width="0.0123%" height="15" fill="rgb(229,98,6)" fg:x="6078" fg:w="1"/><text x="74.8358%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="74.5858%" y="1045" width="0.0123%" height="15" fill="rgb(217,40,27)" fg:x="6078" fg:w="1"/><text x="74.8358%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (13 samples, 0.16%)</title><rect x="74.4509%" y="1173" width="0.1595%" height="15" fill="rgb(221,35,43)" fg:x="6067" fg:w="13"/><text x="74.7009%" y="1183.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (13 samples, 0.16%)</title><rect x="74.4509%" y="1157" width="0.1595%" height="15" fill="rgb(212,107,11)" fg:x="6067" fg:w="13"/><text x="74.7009%" y="1167.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (6 samples, 0.07%)</title><rect x="74.5368%" y="1141" width="0.0736%" height="15" fill="rgb(245,42,44)" fg:x="6074" fg:w="6"/><text x="74.7868%" y="1151.50"></text></g><g><title>async_executor::Executor::spawn (5 samples, 0.06%)</title><rect x="74.5490%" y="1125" width="0.0614%" height="15" fill="rgb(209,31,12)" fg:x="6075" fg:w="5"/><text x="74.7990%" y="1135.50"></text></g><g><title>async_task::runnable::spawn_unchecked (1 samples, 0.01%)</title><rect x="74.5981%" y="1109" width="0.0123%" height="15" fill="rgb(210,228,54)" fg:x="6079" fg:w="1"/><text x="74.8481%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (1 samples, 0.01%)</title><rect x="74.5981%" y="1093" width="0.0123%" height="15" fill="rgb(241,19,33)" fg:x="6079" fg:w="1"/><text x="74.8481%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="74.5981%" y="1077" width="0.0123%" height="15" fill="rgb(229,51,27)" fg:x="6079" fg:w="1"/><text x="74.8481%" y="1087.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="74.5981%" y="1061" width="0.0123%" height="15" fill="rgb(214,167,49)" fg:x="6079" fg:w="1"/><text x="74.8481%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="74.5981%" y="1045" width="0.0123%" height="15" fill="rgb(248,140,47)" fg:x="6079" fg:w="1"/><text x="74.8481%" y="1055.50"></text></g><g><title>async_executor::Executor::try_tick (1 samples, 0.01%)</title><rect x="74.6472%" y="1157" width="0.0123%" height="15" fill="rgb(228,6,51)" fg:x="6083" fg:w="1"/><text x="74.8972%" y="1167.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="74.6595%" y="1157" width="0.0123%" height="15" fill="rgb(242,44,53)" fg:x="6084" fg:w="1"/><text x="74.9095%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.01%)</title><rect x="74.6595%" y="1141" width="0.0123%" height="15" fill="rgb(249,90,50)" fg:x="6084" fg:w="1"/><text x="74.9095%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="74.6595%" y="1125" width="0.0123%" height="15" fill="rgb(222,84,19)" fg:x="6084" fg:w="1"/><text x="74.9095%" y="1135.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="74.6963%" y="1045" width="0.0123%" height="15" fill="rgb(214,140,12)" fg:x="6087" fg:w="1"/><text x="74.9463%" y="1055.50"></text></g><g><title>event_listener::Inner::lock (1 samples, 0.01%)</title><rect x="74.6963%" y="1029" width="0.0123%" height="15" fill="rgb(210,20,43)" fg:x="6087" fg:w="1"/><text x="74.9463%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="74.6963%" y="1013" width="0.0123%" height="15" fill="rgb(243,1,40)" fg:x="6087" fg:w="1"/><text x="74.9463%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="74.6963%" y="997" width="0.0123%" height="15" fill="rgb(224,102,26)" fg:x="6087" fg:w="1"/><text x="74.9463%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="74.6963%" y="981" width="0.0123%" height="15" fill="rgb(221,179,1)" fg:x="6087" fg:w="1"/><text x="74.9463%" y="991.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="74.6963%" y="965" width="0.0123%" height="15" fill="rgb(216,209,47)" fg:x="6087" fg:w="1"/><text x="74.9463%" y="975.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="74.7086%" y="997" width="0.0123%" height="15" fill="rgb(251,135,9)" fg:x="6088" fg:w="1"/><text x="74.9586%" y="1007.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="74.7086%" y="981" width="0.0123%" height="15" fill="rgb(242,9,36)" fg:x="6088" fg:w="1"/><text x="74.9586%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="74.7086%" y="1029" width="0.0245%" height="15" fill="rgb(249,60,37)" fg:x="6088" fg:w="2"/><text x="74.9586%" y="1039.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="74.7086%" y="1013" width="0.0245%" height="15" fill="rgb(230,66,45)" fg:x="6088" fg:w="2"/><text x="74.9586%" y="1023.50"></text></g><g><title>concurrent_queue::full_fence (1 samples, 0.01%)</title><rect x="74.7208%" y="997" width="0.0123%" height="15" fill="rgb(216,1,47)" fg:x="6089" fg:w="1"/><text x="74.9708%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="74.7208%" y="981" width="0.0123%" height="15" fill="rgb(235,8,23)" fg:x="6089" fg:w="1"/><text x="74.9708%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="74.7208%" y="965" width="0.0123%" height="15" fill="rgb(225,136,11)" fg:x="6089" fg:w="1"/><text x="74.9708%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="74.7208%" y="949" width="0.0123%" height="15" fill="rgb(228,63,44)" fg:x="6089" fg:w="1"/><text x="74.9708%" y="959.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3 samples, 0.04%)</title><rect x="74.7086%" y="1045" width="0.0368%" height="15" fill="rgb(240,43,52)" fg:x="6088" fg:w="3"/><text x="74.9586%" y="1055.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="74.7331%" y="1029" width="0.0123%" height="15" fill="rgb(217,167,36)" fg:x="6090" fg:w="1"/><text x="74.9831%" y="1039.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="74.7331%" y="1013" width="0.0123%" height="15" fill="rgb(250,19,6)" fg:x="6090" fg:w="1"/><text x="74.9831%" y="1023.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.01%)</title><rect x="74.7454%" y="1045" width="0.0123%" height="15" fill="rgb(236,60,51)" fg:x="6091" fg:w="1"/><text x="74.9954%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="74.7454%" y="1029" width="0.0123%" height="15" fill="rgb(222,217,20)" fg:x="6091" fg:w="1"/><text x="74.9954%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="74.7454%" y="1013" width="0.0123%" height="15" fill="rgb(242,65,52)" fg:x="6091" fg:w="1"/><text x="74.9954%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="74.7454%" y="997" width="0.0123%" height="15" fill="rgb(217,5,41)" fg:x="6091" fg:w="1"/><text x="74.9954%" y="1007.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.09%)</title><rect x="74.6963%" y="1061" width="0.0859%" height="15" fill="rgb(223,208,53)" fg:x="6087" fg:w="7"/><text x="74.9463%" y="1071.50"></text></g><g><title>event_listener::Event::notify (2 samples, 0.02%)</title><rect x="74.7576%" y="1045" width="0.0245%" height="15" fill="rgb(221,104,30)" fg:x="6092" fg:w="2"/><text x="75.0076%" y="1055.50"></text></g><g><title>event_listener::Inner::lock (2 samples, 0.02%)</title><rect x="74.7576%" y="1029" width="0.0245%" height="15" fill="rgb(230,210,42)" fg:x="6092" fg:w="2"/><text x="75.0076%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="74.7576%" y="1013" width="0.0245%" height="15" fill="rgb(206,205,27)" fg:x="6092" fg:w="2"/><text x="75.0076%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.02%)</title><rect x="74.7576%" y="997" width="0.0245%" height="15" fill="rgb(233,114,38)" fg:x="6092" fg:w="2"/><text x="75.0076%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.02%)</title><rect x="74.7576%" y="981" width="0.0245%" height="15" fill="rgb(216,174,36)" fg:x="6092" fg:w="2"/><text x="75.0076%" y="991.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="74.7576%" y="965" width="0.0245%" height="15" fill="rgb(211,30,9)" fg:x="6092" fg:w="2"/><text x="75.0076%" y="975.50"></text></g><g><title>__lll_lock_wait (1 samples, 0.01%)</title><rect x="74.7699%" y="949" width="0.0123%" height="15" fill="rgb(216,8,21)" fg:x="6093" fg:w="1"/><text x="75.0199%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="74.7945%" y="981" width="0.0245%" height="15" fill="rgb(237,209,39)" fg:x="6095" fg:w="2"/><text x="75.0445%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="74.7945%" y="965" width="0.0245%" height="15" fill="rgb(235,111,47)" fg:x="6095" fg:w="2"/><text x="75.0445%" y="975.50"></text></g><g><title>event_listener::Inner::lock (3 samples, 0.04%)</title><rect x="74.8190%" y="981" width="0.0368%" height="15" fill="rgb(216,139,9)" fg:x="6097" fg:w="3"/><text x="75.0690%" y="991.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (3 samples, 0.04%)</title><rect x="74.8190%" y="965" width="0.0368%" height="15" fill="rgb(248,185,4)" fg:x="6097" fg:w="3"/><text x="75.0690%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (3 samples, 0.04%)</title><rect x="74.8190%" y="949" width="0.0368%" height="15" fill="rgb(239,185,25)" fg:x="6097" fg:w="3"/><text x="75.0690%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (3 samples, 0.04%)</title><rect x="74.8190%" y="933" width="0.0368%" height="15" fill="rgb(233,207,8)" fg:x="6097" fg:w="3"/><text x="75.0690%" y="943.50"></text></g><g><title>__GI___pthread_mutex_lock (3 samples, 0.04%)</title><rect x="74.8190%" y="917" width="0.0368%" height="15" fill="rgb(249,220,24)" fg:x="6097" fg:w="3"/><text x="75.0690%" y="927.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="74.8558%" y="933" width="0.0123%" height="15" fill="rgb(221,50,14)" fg:x="6100" fg:w="1"/><text x="75.1058%" y="943.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="74.8558%" y="917" width="0.0123%" height="15" fill="rgb(227,79,42)" fg:x="6100" fg:w="1"/><text x="75.1058%" y="927.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.01%)</title><rect x="74.8558%" y="901" width="0.0123%" height="15" fill="rgb(228,218,49)" fg:x="6100" fg:w="1"/><text x="75.1058%" y="911.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.01%)</title><rect x="74.8558%" y="885" width="0.0123%" height="15" fill="rgb(249,18,15)" fg:x="6100" fg:w="1"/><text x="75.1058%" y="895.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="74.8558%" y="869" width="0.0123%" height="15" fill="rgb(212,84,27)" fg:x="6100" fg:w="1"/><text x="75.1058%" y="879.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="74.8558%" y="853" width="0.0123%" height="15" fill="rgb(207,83,24)" fg:x="6100" fg:w="1"/><text x="75.1058%" y="863.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="74.8558%" y="837" width="0.0123%" height="15" fill="rgb(219,61,7)" fg:x="6100" fg:w="1"/><text x="75.1058%" y="847.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="74.8558%" y="821" width="0.0123%" height="15" fill="rgb(211,43,29)" fg:x="6100" fg:w="1"/><text x="75.1058%" y="831.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (1 samples, 0.01%)</title><rect x="74.8558%" y="805" width="0.0123%" height="15" fill="rgb(243,15,23)" fg:x="6100" fg:w="1"/><text x="75.1058%" y="815.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.01%)</title><rect x="74.8558%" y="789" width="0.0123%" height="15" fill="rgb(217,52,28)" fg:x="6100" fg:w="1"/><text x="75.1058%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="74.8681%" y="933" width="0.0123%" height="15" fill="rgb(210,35,6)" fg:x="6101" fg:w="1"/><text x="75.1181%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="74.8681%" y="917" width="0.0123%" height="15" fill="rgb(237,187,28)" fg:x="6101" fg:w="1"/><text x="75.1181%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="74.8681%" y="901" width="0.0123%" height="15" fill="rgb(231,136,24)" fg:x="6101" fg:w="1"/><text x="75.1181%" y="911.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.10%)</title><rect x="74.7945%" y="1029" width="0.0982%" height="15" fill="rgb(205,176,52)" fg:x="6095" fg:w="8"/><text x="75.0445%" y="1039.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (8 samples, 0.10%)</title><rect x="74.7945%" y="1013" width="0.0982%" height="15" fill="rgb(218,65,12)" fg:x="6095" fg:w="8"/><text x="75.0445%" y="1023.50"></text></g><g><title>event_listener::Event::notify (8 samples, 0.10%)</title><rect x="74.7945%" y="997" width="0.0982%" height="15" fill="rgb(234,101,21)" fg:x="6095" fg:w="8"/><text x="75.0445%" y="1007.50"></text></g><g><title>event_listener::List::notify (3 samples, 0.04%)</title><rect x="74.8558%" y="981" width="0.0368%" height="15" fill="rgb(206,13,20)" fg:x="6100" fg:w="3"/><text x="75.1058%" y="991.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.04%)</title><rect x="74.8558%" y="965" width="0.0368%" height="15" fill="rgb(236,89,44)" fg:x="6100" fg:w="3"/><text x="75.1058%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (3 samples, 0.04%)</title><rect x="74.8558%" y="949" width="0.0368%" height="15" fill="rgb(225,52,17)" fg:x="6100" fg:w="3"/><text x="75.1058%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="74.8804%" y="933" width="0.0123%" height="15" fill="rgb(214,27,25)" fg:x="6102" fg:w="1"/><text x="75.1304%" y="943.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="74.8804%" y="917" width="0.0123%" height="15" fill="rgb(240,141,35)" fg:x="6102" fg:w="1"/><text x="75.1304%" y="927.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="74.8804%" y="901" width="0.0123%" height="15" fill="rgb(216,126,3)" fg:x="6102" fg:w="1"/><text x="75.1304%" y="911.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="74.8804%" y="885" width="0.0123%" height="15" fill="rgb(249,196,23)" fg:x="6102" fg:w="1"/><text x="75.1304%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="74.8804%" y="869" width="0.0123%" height="15" fill="rgb(215,185,43)" fg:x="6102" fg:w="1"/><text x="75.1304%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="74.8804%" y="853" width="0.0123%" height="15" fill="rgb(208,194,36)" fg:x="6102" fg:w="1"/><text x="75.1304%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.13%)</title><rect x="74.7822%" y="1061" width="0.1350%" height="15" fill="rgb(245,182,12)" fg:x="6094" fg:w="11"/><text x="75.0322%" y="1071.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (11 samples, 0.13%)</title><rect x="74.7822%" y="1045" width="0.1350%" height="15" fill="rgb(244,222,52)" fg:x="6094" fg:w="11"/><text x="75.0322%" y="1055.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (2 samples, 0.02%)</title><rect x="74.8926%" y="1029" width="0.0245%" height="15" fill="rgb(236,222,51)" fg:x="6103" fg:w="2"/><text x="75.1426%" y="1039.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (2 samples, 0.02%)</title><rect x="74.8926%" y="1013" width="0.0245%" height="15" fill="rgb(254,71,22)" fg:x="6103" fg:w="2"/><text x="75.1426%" y="1023.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (1 samples, 0.01%)</title><rect x="74.9049%" y="997" width="0.0123%" height="15" fill="rgb(250,104,15)" fg:x="6104" fg:w="1"/><text x="75.1549%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="74.9049%" y="981" width="0.0123%" height="15" fill="rgb(229,223,46)" fg:x="6104" fg:w="1"/><text x="75.1549%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="74.9049%" y="965" width="0.0123%" height="15" fill="rgb(209,129,18)" fg:x="6104" fg:w="1"/><text x="75.1549%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1 samples, 0.01%)</title><rect x="74.9049%" y="949" width="0.0123%" height="15" fill="rgb(224,160,1)" fg:x="6104" fg:w="1"/><text x="75.1549%" y="959.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint::{{closure}} (1 samples, 0.01%)</title><rect x="74.9049%" y="933" width="0.0123%" height="15" fill="rgb(237,112,21)" fg:x="6104" fg:w="1"/><text x="75.1549%" y="943.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="74.9172%" y="1061" width="0.0123%" height="15" fill="rgb(215,198,53)" fg:x="6105" fg:w="1"/><text x="75.1672%" y="1071.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="74.9172%" y="1045" width="0.0123%" height="15" fill="rgb(218,227,35)" fg:x="6105" fg:w="1"/><text x="75.1672%" y="1055.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (1 samples, 0.01%)</title><rect x="74.9294%" y="1061" width="0.0123%" height="15" fill="rgb(232,121,22)" fg:x="6106" fg:w="1"/><text x="75.1794%" y="1071.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::clear (1 samples, 0.01%)</title><rect x="74.9294%" y="1045" width="0.0123%" height="15" fill="rgb(235,52,54)" fg:x="6106" fg:w="1"/><text x="75.1794%" y="1055.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (1 samples, 0.01%)</title><rect x="74.9294%" y="1029" width="0.0123%" height="15" fill="rgb(219,21,44)" fg:x="6106" fg:w="1"/><text x="75.1794%" y="1039.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="74.9294%" y="1013" width="0.0123%" height="15" fill="rgb(221,51,43)" fg:x="6106" fg:w="1"/><text x="75.1794%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;usize&gt;&gt; (2 samples, 0.02%)</title><rect x="74.9417%" y="1061" width="0.0245%" height="15" fill="rgb(225,77,42)" fg:x="6107" fg:w="2"/><text x="75.1917%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (2 samples, 0.02%)</title><rect x="74.9417%" y="1045" width="0.0245%" height="15" fill="rgb(214,117,53)" fg:x="6107" fg:w="2"/><text x="75.1917%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (2 samples, 0.02%)</title><rect x="74.9417%" y="1029" width="0.0245%" height="15" fill="rgb(218,227,27)" fg:x="6107" fg:w="2"/><text x="75.1917%" y="1039.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="74.9417%" y="1013" width="0.0245%" height="15" fill="rgb(223,214,36)" fg:x="6107" fg:w="2"/><text x="75.1917%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (2 samples, 0.02%)</title><rect x="74.9417%" y="997" width="0.0245%" height="15" fill="rgb(235,21,7)" fg:x="6107" fg:w="2"/><text x="75.1917%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (2 samples, 0.02%)</title><rect x="74.9417%" y="981" width="0.0245%" height="15" fill="rgb(244,216,4)" fg:x="6107" fg:w="2"/><text x="75.1917%" y="991.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="74.9417%" y="965" width="0.0245%" height="15" fill="rgb(249,197,24)" fg:x="6107" fg:w="2"/><text x="75.1917%" y="975.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.02%)</title><rect x="74.9417%" y="949" width="0.0245%" height="15" fill="rgb(222,169,49)" fg:x="6107" fg:w="2"/><text x="75.1917%" y="959.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.02%)</title><rect x="74.9417%" y="933" width="0.0245%" height="15" fill="rgb(207,137,33)" fg:x="6107" fg:w="2"/><text x="75.1917%" y="943.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="74.9417%" y="917" width="0.0245%" height="15" fill="rgb(219,180,40)" fg:x="6107" fg:w="2"/><text x="75.1917%" y="927.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (24 samples, 0.29%)</title><rect x="74.6963%" y="1077" width="0.2945%" height="15" fill="rgb(250,163,42)" fg:x="6087" fg:w="24"/><text x="74.9463%" y="1087.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones (2 samples, 0.02%)</title><rect x="74.9663%" y="1061" width="0.0245%" height="15" fill="rgb(239,163,0)" fg:x="6109" fg:w="2"/><text x="75.2163%" y="1071.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="74.9785%" y="1045" width="0.0123%" height="15" fill="rgb(252,38,28)" fg:x="6110" fg:w="1"/><text x="75.2285%" y="1055.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="74.9785%" y="1029" width="0.0123%" height="15" fill="rgb(254,203,26)" fg:x="6110" fg:w="1"/><text x="75.2285%" y="1039.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="74.9785%" y="1013" width="0.0123%" height="15" fill="rgb(209,129,32)" fg:x="6110" fg:w="1"/><text x="75.2285%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="74.9785%" y="997" width="0.0123%" height="15" fill="rgb(207,177,52)" fg:x="6110" fg:w="1"/><text x="75.2285%" y="1007.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="74.9785%" y="981" width="0.0123%" height="15" fill="rgb(230,209,36)" fg:x="6110" fg:w="1"/><text x="75.2285%" y="991.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones::{{closure}} (1 samples, 0.01%)</title><rect x="74.9785%" y="965" width="0.0123%" height="15" fill="rgb(238,131,0)" fg:x="6110" fg:w="1"/><text x="75.2285%" y="975.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="75.0031%" y="1045" width="0.0123%" height="15" fill="rgb(218,61,31)" fg:x="6112" fg:w="1"/><text x="75.2531%" y="1055.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="75.0031%" y="1029" width="0.0123%" height="15" fill="rgb(232,6,53)" fg:x="6112" fg:w="1"/><text x="75.2531%" y="1039.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="75.0031%" y="1013" width="0.0123%" height="15" fill="rgb(254,100,32)" fg:x="6112" fg:w="1"/><text x="75.2531%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="75.0031%" y="997" width="0.0123%" height="15" fill="rgb(229,194,49)" fg:x="6112" fg:w="1"/><text x="75.2531%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="75.0031%" y="981" width="0.0123%" height="15" fill="rgb(206,208,39)" fg:x="6112" fg:w="1"/><text x="75.2531%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="75.0031%" y="965" width="0.0123%" height="15" fill="rgb(246,226,14)" fg:x="6112" fg:w="1"/><text x="75.2531%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.04%)</title><rect x="75.0153%" y="1029" width="0.0368%" height="15" fill="rgb(226,48,32)" fg:x="6113" fg:w="3"/><text x="75.2653%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.04%)</title><rect x="75.0153%" y="1013" width="0.0368%" height="15" fill="rgb(252,43,54)" fg:x="6113" fg:w="3"/><text x="75.2653%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.04%)</title><rect x="75.0153%" y="997" width="0.0368%" height="15" fill="rgb(207,124,0)" fg:x="6113" fg:w="3"/><text x="75.2653%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (1 samples, 0.01%)</title><rect x="75.0522%" y="1029" width="0.0123%" height="15" fill="rgb(248,188,30)" fg:x="6116" fg:w="1"/><text x="75.3022%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (1 samples, 0.01%)</title><rect x="75.0522%" y="1013" width="0.0123%" height="15" fill="rgb(232,14,43)" fg:x="6116" fg:w="1"/><text x="75.3022%" y="1023.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="75.0522%" y="997" width="0.0123%" height="15" fill="rgb(218,52,29)" fg:x="6116" fg:w="1"/><text x="75.3022%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="75.0522%" y="981" width="0.0123%" height="15" fill="rgb(218,176,50)" fg:x="6116" fg:w="1"/><text x="75.3022%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="75.0522%" y="965" width="0.0123%" height="15" fill="rgb(213,112,0)" fg:x="6116" fg:w="1"/><text x="75.3022%" y="975.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="75.0522%" y="949" width="0.0123%" height="15" fill="rgb(244,216,8)" fg:x="6116" fg:w="1"/><text x="75.3022%" y="959.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.09%)</title><rect x="75.0031%" y="1061" width="0.0859%" height="15" fill="rgb(224,148,53)" fg:x="6112" fg:w="7"/><text x="75.2531%" y="1071.50"></text></g><g><title>event_listener::Event::listen (6 samples, 0.07%)</title><rect x="75.0153%" y="1045" width="0.0736%" height="15" fill="rgb(241,133,40)" fg:x="6113" fg:w="6"/><text x="75.2653%" y="1055.50"></text></g><g><title>event_listener::Inner::lock (2 samples, 0.02%)</title><rect x="75.0644%" y="1029" width="0.0245%" height="15" fill="rgb(232,17,44)" fg:x="6117" fg:w="2"/><text x="75.3144%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="75.0644%" y="1013" width="0.0245%" height="15" fill="rgb(213,32,25)" fg:x="6117" fg:w="2"/><text x="75.3144%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.02%)</title><rect x="75.0644%" y="997" width="0.0245%" height="15" fill="rgb(249,115,27)" fg:x="6117" fg:w="2"/><text x="75.3144%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.02%)</title><rect x="75.0644%" y="981" width="0.0245%" height="15" fill="rgb(241,50,1)" fg:x="6117" fg:w="2"/><text x="75.3144%" y="991.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="75.0644%" y="965" width="0.0245%" height="15" fill="rgb(244,175,40)" fg:x="6117" fg:w="2"/><text x="75.3144%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="75.0890%" y="1029" width="0.0123%" height="15" fill="rgb(230,94,34)" fg:x="6119" fg:w="1"/><text x="75.3390%" y="1039.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="75.0890%" y="1013" width="0.0123%" height="15" fill="rgb(223,185,29)" fg:x="6119" fg:w="1"/><text x="75.3390%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="75.0890%" y="997" width="0.0123%" height="15" fill="rgb(225,193,15)" fg:x="6119" fg:w="1"/><text x="75.3390%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="75.0890%" y="981" width="0.0123%" height="15" fill="rgb(252,121,38)" fg:x="6119" fg:w="1"/><text x="75.3390%" y="991.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="75.0890%" y="1061" width="0.0245%" height="15" fill="rgb(232,44,12)" fg:x="6119" fg:w="2"/><text x="75.3390%" y="1071.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (2 samples, 0.02%)</title><rect x="75.0890%" y="1045" width="0.0245%" height="15" fill="rgb(226,45,54)" fg:x="6119" fg:w="2"/><text x="75.3390%" y="1055.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="75.1012%" y="1029" width="0.0123%" height="15" fill="rgb(209,67,17)" fg:x="6120" fg:w="1"/><text x="75.3512%" y="1039.50"></text></g><g><title>event_listener::List::notify (1 samples, 0.01%)</title><rect x="75.1012%" y="1013" width="0.0123%" height="15" fill="rgb(219,108,52)" fg:x="6120" fg:w="1"/><text x="75.3512%" y="1023.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="75.1012%" y="997" width="0.0123%" height="15" fill="rgb(216,118,19)" fg:x="6120" fg:w="1"/><text x="75.3512%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (1 samples, 0.01%)</title><rect x="75.1012%" y="981" width="0.0123%" height="15" fill="rgb(228,120,40)" fg:x="6120" fg:w="1"/><text x="75.3512%" y="991.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="75.1012%" y="965" width="0.0123%" height="15" fill="rgb(221,218,34)" fg:x="6120" fg:w="1"/><text x="75.3512%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="75.1012%" y="949" width="0.0123%" height="15" fill="rgb(235,89,14)" fg:x="6120" fg:w="1"/><text x="75.3512%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="75.1012%" y="933" width="0.0123%" height="15" fill="rgb(248,89,7)" fg:x="6120" fg:w="1"/><text x="75.3512%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="75.1012%" y="917" width="0.0123%" height="15" fill="rgb(212,114,34)" fg:x="6120" fg:w="1"/><text x="75.3512%" y="927.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="75.1012%" y="901" width="0.0123%" height="15" fill="rgb(246,88,32)" fg:x="6120" fg:w="1"/><text x="75.3512%" y="911.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="75.1258%" y="1029" width="0.0123%" height="15" fill="rgb(237,135,0)" fg:x="6122" fg:w="1"/><text x="75.3758%" y="1039.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.01%)</title><rect x="75.1381%" y="965" width="0.0123%" height="15" fill="rgb(220,201,54)" fg:x="6123" fg:w="1"/><text x="75.3881%" y="975.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="75.1503%" y="965" width="0.0123%" height="15" fill="rgb(210,142,36)" fg:x="6124" fg:w="1"/><text x="75.4003%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="75.1503%" y="949" width="0.0123%" height="15" fill="rgb(247,189,26)" fg:x="6124" fg:w="1"/><text x="75.4003%" y="959.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="75.1503%" y="933" width="0.0123%" height="15" fill="rgb(223,89,24)" fg:x="6124" fg:w="1"/><text x="75.4003%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="75.1503%" y="917" width="0.0123%" height="15" fill="rgb(205,90,19)" fg:x="6124" fg:w="1"/><text x="75.4003%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="75.1503%" y="901" width="0.0123%" height="15" fill="rgb(234,57,40)" fg:x="6124" fg:w="1"/><text x="75.4003%" y="911.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (3 samples, 0.04%)</title><rect x="75.1381%" y="981" width="0.0368%" height="15" fill="rgb(213,109,10)" fg:x="6123" fg:w="3"/><text x="75.3881%" y="991.50"></text></g><g><title>wgpu::Device::poll (1 samples, 0.01%)</title><rect x="75.1626%" y="965" width="0.0123%" height="15" fill="rgb(214,189,23)" fg:x="6125" fg:w="1"/><text x="75.4126%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="75.1749%" y="965" width="0.0123%" height="15" fill="rgb(234,200,10)" fg:x="6126" fg:w="1"/><text x="75.4249%" y="975.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="75.1749%" y="949" width="0.0123%" height="15" fill="rgb(221,148,16)" fg:x="6126" fg:w="1"/><text x="75.4249%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.01%)</title><rect x="75.1749%" y="933" width="0.0123%" height="15" fill="rgb(230,115,10)" fg:x="6126" fg:w="1"/><text x="75.4249%" y="943.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (2 samples, 0.02%)</title><rect x="75.1749%" y="981" width="0.0245%" height="15" fill="rgb(220,106,42)" fg:x="6126" fg:w="2"/><text x="75.4249%" y="991.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (1 samples, 0.01%)</title><rect x="75.1871%" y="965" width="0.0123%" height="15" fill="rgb(225,105,39)" fg:x="6127" fg:w="1"/><text x="75.4371%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu::MapContext&gt;&gt; (1 samples, 0.01%)</title><rect x="75.1871%" y="949" width="0.0123%" height="15" fill="rgb(211,161,38)" fg:x="6127" fg:w="1"/><text x="75.4371%" y="959.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="75.1871%" y="933" width="0.0123%" height="15" fill="rgb(213,23,19)" fg:x="6127" fg:w="1"/><text x="75.4371%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="75.1871%" y="917" width="0.0123%" height="15" fill="rgb(240,2,33)" fg:x="6127" fg:w="1"/><text x="75.4371%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="75.1871%" y="901" width="0.0123%" height="15" fill="rgb(221,29,45)" fg:x="6127" fg:w="1"/><text x="75.4371%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="75.1871%" y="885" width="0.0123%" height="15" fill="rgb(242,10,19)" fg:x="6127" fg:w="1"/><text x="75.4371%" y="895.50"></text></g><g><title>bevy_render::camera::active_cameras::ActiveCameras::get_mut (1 samples, 0.01%)</title><rect x="75.1994%" y="981" width="0.0123%" height="15" fill="rgb(250,84,37)" fg:x="6128" fg:w="1"/><text x="75.4494%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.01%)</title><rect x="75.1994%" y="965" width="0.0123%" height="15" fill="rgb(214,136,7)" fg:x="6128" fg:w="1"/><text x="75.4494%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="75.1994%" y="949" width="0.0123%" height="15" fill="rgb(231,189,12)" fg:x="6128" fg:w="1"/><text x="75.4494%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.01%)</title><rect x="75.1994%" y="933" width="0.0123%" height="15" fill="rgb(244,40,16)" fg:x="6128" fg:w="1"/><text x="75.4494%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="75.1994%" y="917" width="0.0123%" height="15" fill="rgb(217,29,15)" fg:x="6128" fg:w="1"/><text x="75.4494%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="75.1994%" y="901" width="0.0123%" height="15" fill="rgb(235,172,33)" fg:x="6128" fg:w="1"/><text x="75.4494%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="75.1994%" y="885" width="0.0123%" height="15" fill="rgb(206,148,28)" fg:x="6128" fg:w="1"/><text x="75.4494%" y="895.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (1 samples, 0.01%)</title><rect x="75.1994%" y="869" width="0.0123%" height="15" fill="rgb(251,167,37)" fg:x="6128" fg:w="1"/><text x="75.4494%" y="879.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.01%)</title><rect x="75.1994%" y="853" width="0.0123%" height="15" fill="rgb(229,94,52)" fg:x="6128" fg:w="1"/><text x="75.4494%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="75.1994%" y="837" width="0.0123%" height="15" fill="rgb(216,132,9)" fg:x="6128" fg:w="1"/><text x="75.4494%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="75.1994%" y="821" width="0.0123%" height="15" fill="rgb(208,110,29)" fg:x="6128" fg:w="1"/><text x="75.4494%" y="831.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (8 samples, 0.10%)</title><rect x="75.1258%" y="1045" width="0.0982%" height="15" fill="rgb(241,23,8)" fg:x="6122" fg:w="8"/><text x="75.3758%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7 samples, 0.09%)</title><rect x="75.1381%" y="1029" width="0.0859%" height="15" fill="rgb(208,26,35)" fg:x="6123" fg:w="7"/><text x="75.3881%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (7 samples, 0.09%)</title><rect x="75.1381%" y="1013" width="0.0859%" height="15" fill="rgb(242,165,34)" fg:x="6123" fg:w="7"/><text x="75.3881%" y="1023.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (7 samples, 0.09%)</title><rect x="75.1381%" y="997" width="0.0859%" height="15" fill="rgb(222,222,33)" fg:x="6123" fg:w="7"/><text x="75.3881%" y="1007.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get (1 samples, 0.01%)</title><rect x="75.2117%" y="981" width="0.0123%" height="15" fill="rgb(227,16,52)" fg:x="6129" fg:w="1"/><text x="75.4617%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="75.2117%" y="965" width="0.0123%" height="15" fill="rgb(213,93,12)" fg:x="6129" fg:w="1"/><text x="75.4617%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="75.2117%" y="949" width="0.0123%" height="15" fill="rgb(238,41,5)" fg:x="6129" fg:w="1"/><text x="75.4617%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="75.2117%" y="933" width="0.0123%" height="15" fill="rgb(211,60,15)" fg:x="6129" fg:w="1"/><text x="75.4617%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="75.2117%" y="917" width="0.0123%" height="15" fill="rgb(209,11,34)" fg:x="6129" fg:w="1"/><text x="75.4617%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="75.2117%" y="901" width="0.0123%" height="15" fill="rgb(254,155,53)" fg:x="6129" fg:w="1"/><text x="75.4617%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="75.2117%" y="885" width="0.0123%" height="15" fill="rgb(236,174,8)" fg:x="6129" fg:w="1"/><text x="75.4617%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="75.2117%" y="869" width="0.0123%" height="15" fill="rgb(229,31,27)" fg:x="6129" fg:w="1"/><text x="75.4617%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="75.2117%" y="853" width="0.0123%" height="15" fill="rgb(242,226,26)" fg:x="6129" fg:w="1"/><text x="75.4617%" y="863.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="75.2240%" y="1045" width="0.0123%" height="15" fill="rgb(234,32,40)" fg:x="6130" fg:w="1"/><text x="75.4740%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="75.2240%" y="1029" width="0.0123%" height="15" fill="rgb(249,226,47)" fg:x="6130" fg:w="1"/><text x="75.4740%" y="1039.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="75.2240%" y="1013" width="0.0123%" height="15" fill="rgb(212,6,26)" fg:x="6130" fg:w="1"/><text x="75.4740%" y="1023.50"></text></g><g><title>bevy_pbr::render_graph::lights_node::lights_node_system (1 samples, 0.01%)</title><rect x="75.2240%" y="997" width="0.0123%" height="15" fill="rgb(249,202,29)" fg:x="6130" fg:w="1"/><text x="75.4740%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::count (1 samples, 0.01%)</title><rect x="75.2240%" y="981" width="0.0123%" height="15" fill="rgb(226,106,4)" fg:x="6130" fg:w="1"/><text x="75.4740%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="75.2240%" y="965" width="0.0123%" height="15" fill="rgb(251,2,27)" fg:x="6130" fg:w="1"/><text x="75.4740%" y="975.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="75.2240%" y="949" width="0.0123%" height="15" fill="rgb(236,208,0)" fg:x="6130" fg:w="1"/><text x="75.4740%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.58%)</title><rect x="74.6963%" y="1093" width="0.5768%" height="15" fill="rgb(211,66,17)" fg:x="6087" fg:w="47"/><text x="74.9463%" y="1103.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (23 samples, 0.28%)</title><rect x="74.9908%" y="1077" width="0.2822%" height="15" fill="rgb(216,129,9)" fg:x="6111" fg:w="23"/><text x="75.2408%" y="1087.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (13 samples, 0.16%)</title><rect x="75.1135%" y="1061" width="0.1595%" height="15" fill="rgb(215,130,23)" fg:x="6121" fg:w="13"/><text x="75.3635%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (3 samples, 0.04%)</title><rect x="75.2362%" y="1045" width="0.0368%" height="15" fill="rgb(253,157,11)" fg:x="6131" fg:w="3"/><text x="75.4862%" y="1055.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="75.2730%" y="1077" width="0.0245%" height="15" fill="rgb(224,25,14)" fg:x="6134" fg:w="2"/><text x="75.5230%" y="1087.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="75.2853%" y="1061" width="0.0123%" height="15" fill="rgb(238,16,7)" fg:x="6135" fg:w="1"/><text x="75.5353%" y="1071.50"></text></g><g><title>slab::Slab&lt;T&gt;::contains (1 samples, 0.01%)</title><rect x="75.2853%" y="1045" width="0.0123%" height="15" fill="rgb(228,74,11)" fg:x="6135" fg:w="1"/><text x="75.5353%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.63%)</title><rect x="74.6840%" y="1125" width="0.6258%" height="15" fill="rgb(239,221,27)" fg:x="6086" fg:w="51"/><text x="74.9340%" y="1135.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (51 samples, 0.63%)</title><rect x="74.6840%" y="1109" width="0.6258%" height="15" fill="rgb(229,166,18)" fg:x="6086" fg:w="51"/><text x="74.9340%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (3 samples, 0.04%)</title><rect x="75.2730%" y="1093" width="0.0368%" height="15" fill="rgb(254,94,46)" fg:x="6134" fg:w="3"/><text x="75.5230%" y="1103.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="75.2976%" y="1077" width="0.0123%" height="15" fill="rgb(241,79,19)" fg:x="6136" fg:w="1"/><text x="75.5476%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future (1 samples, 0.01%)</title><rect x="75.3099%" y="1125" width="0.0123%" height="15" fill="rgb(228,99,51)" fg:x="6137" fg:w="1"/><text x="75.5599%" y="1135.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.01%)</title><rect x="75.3099%" y="1109" width="0.0123%" height="15" fill="rgb(211,15,6)" fg:x="6137" fg:w="1"/><text x="75.5599%" y="1119.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future::{{closure}} (1 samples, 0.01%)</title><rect x="75.3099%" y="1093" width="0.0123%" height="15" fill="rgb(245,107,54)" fg:x="6137" fg:w="1"/><text x="75.5599%" y="1103.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="75.3099%" y="1077" width="0.0123%" height="15" fill="rgb(243,3,2)" fg:x="6137" fg:w="1"/><text x="75.5599%" y="1087.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.01%)</title><rect x="75.3221%" y="1125" width="0.0123%" height="15" fill="rgb(206,122,10)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="1135.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (1 samples, 0.01%)</title><rect x="75.3221%" y="1109" width="0.0123%" height="15" fill="rgb(224,88,4)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="1119.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="75.3221%" y="1093" width="0.0123%" height="15" fill="rgb(230,1,41)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="1103.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (1 samples, 0.01%)</title><rect x="75.3221%" y="1077" width="0.0123%" height="15" fill="rgb(230,1,31)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="75.3221%" y="1061" width="0.0123%" height="15" fill="rgb(232,67,19)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="1071.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="75.3221%" y="1045" width="0.0123%" height="15" fill="rgb(222,206,20)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="1055.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="75.3221%" y="1029" width="0.0123%" height="15" fill="rgb(217,225,19)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="1039.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="75.3221%" y="1013" width="0.0123%" height="15" fill="rgb(234,13,33)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="75.3221%" y="997" width="0.0123%" height="15" fill="rgb(254,5,1)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="75.3221%" y="981" width="0.0123%" height="15" fill="rgb(211,121,41)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="75.3221%" y="965" width="0.0123%" height="15" fill="rgb(213,199,35)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="75.3221%" y="949" width="0.0123%" height="15" fill="rgb(240,118,22)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="959.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="75.3221%" y="933" width="0.0123%" height="15" fill="rgb(238,184,25)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="943.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="75.3221%" y="917" width="0.0123%" height="15" fill="rgb(210,165,6)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="75.3221%" y="901" width="0.0123%" height="15" fill="rgb(235,149,5)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="911.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="75.3221%" y="885" width="0.0123%" height="15" fill="rgb(221,63,5)" fg:x="6138" fg:w="1"/><text x="75.5721%" y="895.50"></text></g><g><title>async_task::runnable::Runnable::run (55 samples, 0.67%)</title><rect x="74.6717%" y="1157" width="0.6749%" height="15" fill="rgb(250,44,41)" fg:x="6085" fg:w="55"/><text x="74.9217%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (54 samples, 0.66%)</title><rect x="74.6840%" y="1141" width="0.6627%" height="15" fill="rgb(235,112,47)" fg:x="6086" fg:w="54"/><text x="74.9340%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="75.3344%" y="1125" width="0.0123%" height="15" fill="rgb(252,176,34)" fg:x="6139" fg:w="1"/><text x="75.5844%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="75.3344%" y="1109" width="0.0123%" height="15" fill="rgb(234,50,19)" fg:x="6139" fg:w="1"/><text x="75.5844%" y="1119.50"></text></g><g><title>async_executor::Executor::try_tick (97 samples, 1.19%)</title><rect x="74.6104%" y="1173" width="1.1903%" height="15" fill="rgb(241,195,31)" fg:x="6080" fg:w="97"/><text x="74.8604%" y="1183.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (37 samples, 0.45%)</title><rect x="75.3467%" y="1157" width="0.4540%" height="15" fill="rgb(212,93,11)" fg:x="6140" fg:w="37"/><text x="75.5967%" y="1167.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (37 samples, 0.45%)</title><rect x="75.3467%" y="1141" width="0.4540%" height="15" fill="rgb(254,98,51)" fg:x="6140" fg:w="37"/><text x="75.5967%" y="1151.50"></text></g><g><title>concurrent_queue::full_fence (32 samples, 0.39%)</title><rect x="75.4080%" y="1125" width="0.3927%" height="15" fill="rgb(246,18,45)" fg:x="6145" fg:w="32"/><text x="75.6580%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (30 samples, 0.37%)</title><rect x="75.4326%" y="1109" width="0.3681%" height="15" fill="rgb(215,148,23)" fg:x="6147" fg:w="30"/><text x="75.6826%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (30 samples, 0.37%)</title><rect x="75.4326%" y="1093" width="0.3681%" height="15" fill="rgb(227,22,7)" fg:x="6147" fg:w="30"/><text x="75.6826%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.37%)</title><rect x="75.4326%" y="1077" width="0.3681%" height="15" fill="rgb(207,210,37)" fg:x="6147" fg:w="30"/><text x="75.6826%" y="1087.50"></text></g><g><title>async_executor::LocalExecutor::spawn (1 samples, 0.01%)</title><rect x="75.8007%" y="1173" width="0.0123%" height="15" fill="rgb(247,147,42)" fg:x="6177" fg:w="1"/><text x="76.0507%" y="1183.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="75.8007%" y="1157" width="0.0123%" height="15" fill="rgb(226,213,14)" fg:x="6177" fg:w="1"/><text x="76.0507%" y="1167.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="75.8007%" y="1141" width="0.0123%" height="15" fill="rgb(223,18,10)" fg:x="6177" fg:w="1"/><text x="76.0507%" y="1151.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="75.8007%" y="1125" width="0.0123%" height="15" fill="rgb(253,34,22)" fg:x="6177" fg:w="1"/><text x="76.0507%" y="1135.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="75.8007%" y="1109" width="0.0123%" height="15" fill="rgb(222,90,31)" fg:x="6177" fg:w="1"/><text x="76.0507%" y="1119.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (3 samples, 0.04%)</title><rect x="75.8375%" y="1141" width="0.0368%" height="15" fill="rgb(220,182,30)" fg:x="6180" fg:w="3"/><text x="76.0875%" y="1151.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="75.8866%" y="1029" width="0.0123%" height="15" fill="rgb(229,170,12)" fg:x="6184" fg:w="1"/><text x="76.1366%" y="1039.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="75.8866%" y="1013" width="0.0123%" height="15" fill="rgb(210,101,21)" fg:x="6184" fg:w="1"/><text x="76.1366%" y="1023.50"></text></g><g><title>async_task::header::Header::register (1 samples, 0.01%)</title><rect x="75.8989%" y="997" width="0.0123%" height="15" fill="rgb(237,177,31)" fg:x="6185" fg:w="1"/><text x="76.1489%" y="1007.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="75.8989%" y="1029" width="0.0245%" height="15" fill="rgb(215,91,34)" fg:x="6185" fg:w="2"/><text x="76.1489%" y="1039.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (2 samples, 0.02%)</title><rect x="75.8989%" y="1013" width="0.0245%" height="15" fill="rgb(229,206,16)" fg:x="6185" fg:w="2"/><text x="76.1489%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="75.9112%" y="997" width="0.0123%" height="15" fill="rgb(235,207,10)" fg:x="6186" fg:w="1"/><text x="76.1612%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="75.9112%" y="981" width="0.0123%" height="15" fill="rgb(247,18,10)" fg:x="6186" fg:w="1"/><text x="76.1612%" y="991.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="75.9234%" y="1013" width="0.0123%" height="15" fill="rgb(232,4,6)" fg:x="6187" fg:w="1"/><text x="76.1734%" y="1023.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="75.9234%" y="997" width="0.0123%" height="15" fill="rgb(247,93,45)" fg:x="6187" fg:w="1"/><text x="76.1734%" y="1007.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="75.9234%" y="981" width="0.0123%" height="15" fill="rgb(240,181,18)" fg:x="6187" fg:w="1"/><text x="76.1734%" y="991.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="75.8743%" y="1077" width="0.0736%" height="15" fill="rgb(208,224,0)" fg:x="6183" fg:w="6"/><text x="76.1243%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.07%)</title><rect x="75.8743%" y="1061" width="0.0736%" height="15" fill="rgb(224,207,54)" fg:x="6183" fg:w="6"/><text x="76.1243%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (6 samples, 0.07%)</title><rect x="75.8743%" y="1045" width="0.0736%" height="15" fill="rgb(217,152,29)" fg:x="6183" fg:w="6"/><text x="76.1243%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (2 samples, 0.02%)</title><rect x="75.9234%" y="1029" width="0.0245%" height="15" fill="rgb(243,78,27)" fg:x="6187" fg:w="2"/><text x="76.1734%" y="1039.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (1 samples, 0.01%)</title><rect x="75.9357%" y="1013" width="0.0123%" height="15" fill="rgb(228,111,9)" fg:x="6188" fg:w="1"/><text x="76.1857%" y="1023.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.01%)</title><rect x="75.9357%" y="997" width="0.0123%" height="15" fill="rgb(230,213,21)" fg:x="6188" fg:w="1"/><text x="76.1857%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy::{{closure}} (1 samples, 0.01%)</title><rect x="75.9357%" y="981" width="0.0123%" height="15" fill="rgb(248,50,36)" fg:x="6188" fg:w="1"/><text x="76.1857%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="75.9357%" y="965" width="0.0123%" height="15" fill="rgb(226,19,31)" fg:x="6188" fg:w="1"/><text x="76.1857%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::LocalExecutor::schedule::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="75.9357%" y="949" width="0.0123%" height="15" fill="rgb(205,132,21)" fg:x="6188" fg:w="1"/><text x="76.1857%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.01%)</title><rect x="75.9357%" y="933" width="0.0123%" height="15" fill="rgb(207,42,19)" fg:x="6188" fg:w="1"/><text x="76.1857%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="75.9357%" y="917" width="0.0123%" height="15" fill="rgb(229,69,35)" fg:x="6188" fg:w="1"/><text x="76.1857%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="75.9357%" y="901" width="0.0123%" height="15" fill="rgb(226,96,11)" fg:x="6188" fg:w="1"/><text x="76.1857%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="75.9357%" y="885" width="0.0123%" height="15" fill="rgb(236,133,54)" fg:x="6188" fg:w="1"/><text x="76.1857%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (7 samples, 0.09%)</title><rect x="75.8743%" y="1109" width="0.0859%" height="15" fill="rgb(247,166,21)" fg:x="6183" fg:w="7"/><text x="76.1243%" y="1119.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (7 samples, 0.09%)</title><rect x="75.8743%" y="1093" width="0.0859%" height="15" fill="rgb(220,132,12)" fg:x="6183" fg:w="7"/><text x="76.1243%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::LocalExecutor::spawn&lt;alloc::vec::Vec&lt;()&gt;,core::pin::Pin&lt;&amp;mut dyn core::future::future::Future+Output = alloc::vec::Vec&lt;()&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="75.9480%" y="1077" width="0.0123%" height="15" fill="rgb(233,27,30)" fg:x="6189" fg:w="1"/><text x="76.1980%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::LocalExecutor::spawn&lt;alloc::vec::Vec&lt;()&gt;,core::pin::Pin&lt;&amp;mut dyn core::future::future::Future+Output = alloc::vec::Vec&lt;()&gt;&gt;&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="75.9480%" y="1061" width="0.0123%" height="15" fill="rgb(246,161,27)" fg:x="6189" fg:w="1"/><text x="76.1980%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.01%)</title><rect x="75.9480%" y="1045" width="0.0123%" height="15" fill="rgb(240,56,3)" fg:x="6189" fg:w="1"/><text x="76.1980%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="75.9480%" y="1029" width="0.0123%" height="15" fill="rgb(242,190,9)" fg:x="6189" fg:w="1"/><text x="76.1980%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="75.9480%" y="1013" width="0.0123%" height="15" fill="rgb(234,3,52)" fg:x="6189" fg:w="1"/><text x="76.1980%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="75.9480%" y="997" width="0.0123%" height="15" fill="rgb(220,221,19)" fg:x="6189" fg:w="1"/><text x="76.1980%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (1 samples, 0.01%)</title><rect x="75.9602%" y="1109" width="0.0123%" height="15" fill="rgb(247,178,30)" fg:x="6190" fg:w="1"/><text x="76.2102%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="75.9602%" y="1093" width="0.0123%" height="15" fill="rgb(234,212,27)" fg:x="6190" fg:w="1"/><text x="76.2102%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="75.9602%" y="1077" width="0.0123%" height="15" fill="rgb(226,199,38)" fg:x="6190" fg:w="1"/><text x="76.2102%" y="1087.50"></text></g><g><title>async_task::runnable::Runnable::run (9 samples, 0.11%)</title><rect x="75.8743%" y="1141" width="0.1104%" height="15" fill="rgb(248,114,22)" fg:x="6183" fg:w="9"/><text x="76.1243%" y="1151.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9 samples, 0.11%)</title><rect x="75.8743%" y="1125" width="0.1104%" height="15" fill="rgb(221,180,4)" fg:x="6183" fg:w="9"/><text x="76.1243%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="75.9725%" y="1109" width="0.0123%" height="15" fill="rgb(220,229,24)" fg:x="6191" fg:w="1"/><text x="76.2225%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="75.9725%" y="1093" width="0.0123%" height="15" fill="rgb(226,184,27)" fg:x="6191" fg:w="1"/><text x="76.2225%" y="1103.50"></text></g><g><title>concurrent_queue::full_fence (39 samples, 0.48%)</title><rect x="76.0216%" y="1109" width="0.4786%" height="15" fill="rgb(232,99,15)" fg:x="6195" fg:w="39"/><text x="76.2716%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (37 samples, 0.45%)</title><rect x="76.0461%" y="1093" width="0.4540%" height="15" fill="rgb(250,167,16)" fg:x="6197" fg:w="37"/><text x="76.2961%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (37 samples, 0.45%)</title><rect x="76.0461%" y="1077" width="0.4540%" height="15" fill="rgb(243,113,6)" fg:x="6197" fg:w="37"/><text x="76.2961%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (37 samples, 0.45%)</title><rect x="76.0461%" y="1061" width="0.4540%" height="15" fill="rgb(244,147,52)" fg:x="6197" fg:w="37"/><text x="76.2961%" y="1071.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="76.5002%" y="1109" width="0.0123%" height="15" fill="rgb(235,59,50)" fg:x="6234" fg:w="1"/><text x="76.7502%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="76.5002%" y="1093" width="0.0123%" height="15" fill="rgb(250,188,6)" fg:x="6234" fg:w="1"/><text x="76.7502%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="76.5125%" y="1109" width="0.0123%" height="15" fill="rgb(236,173,11)" fg:x="6235" fg:w="1"/><text x="76.7625%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="76.5125%" y="1093" width="0.0123%" height="15" fill="rgb(233,64,3)" fg:x="6235" fg:w="1"/><text x="76.7625%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="76.5247%" y="1109" width="0.0123%" height="15" fill="rgb(207,92,7)" fg:x="6236" fg:w="1"/><text x="76.7747%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="76.5247%" y="1093" width="0.0123%" height="15" fill="rgb(221,30,19)" fg:x="6236" fg:w="1"/><text x="76.7747%" y="1103.50"></text></g><g><title>async_executor::Executor::try_tick (59 samples, 0.72%)</title><rect x="75.8253%" y="1157" width="0.7240%" height="15" fill="rgb(245,22,49)" fg:x="6179" fg:w="59"/><text x="76.0753%" y="1167.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (46 samples, 0.56%)</title><rect x="75.9848%" y="1141" width="0.5645%" height="15" fill="rgb(218,39,20)" fg:x="6192" fg:w="46"/><text x="76.2348%" y="1151.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (44 samples, 0.54%)</title><rect x="76.0093%" y="1125" width="0.5399%" height="15" fill="rgb(222,144,21)" fg:x="6194" fg:w="44"/><text x="76.2593%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="76.5370%" y="1109" width="0.0123%" height="15" fill="rgb(222,78,51)" fg:x="6237" fg:w="1"/><text x="76.7870%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="76.5370%" y="1093" width="0.0123%" height="15" fill="rgb(248,213,53)" fg:x="6237" fg:w="1"/><text x="76.7870%" y="1103.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (62 samples, 0.76%)</title><rect x="75.8130%" y="1173" width="0.7608%" height="15" fill="rgb(245,28,34)" fg:x="6178" fg:w="62"/><text x="76.0630%" y="1183.50"></text></g><g><title>async_executor::LocalExecutor::inner (2 samples, 0.02%)</title><rect x="76.5493%" y="1157" width="0.0245%" height="15" fill="rgb(229,186,26)" fg:x="6238" fg:w="2"/><text x="76.7993%" y="1167.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (2 samples, 0.02%)</title><rect x="76.5493%" y="1141" width="0.0245%" height="15" fill="rgb(224,0,41)" fg:x="6238" fg:w="2"/><text x="76.7993%" y="1151.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (2 samples, 0.02%)</title><rect x="76.5493%" y="1125" width="0.0245%" height="15" fill="rgb(223,136,51)" fg:x="6238" fg:w="2"/><text x="76.7993%" y="1135.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="76.5615%" y="1109" width="0.0123%" height="15" fill="rgb(234,50,9)" fg:x="6239" fg:w="1"/><text x="76.8115%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="76.5615%" y="1093" width="0.0123%" height="15" fill="rgb(242,164,20)" fg:x="6239" fg:w="1"/><text x="76.8115%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;alloc::vec::Vec&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="76.5738%" y="1173" width="0.0123%" height="15" fill="rgb(230,169,22)" fg:x="6240" fg:w="1"/><text x="76.8238%" y="1183.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="76.5738%" y="1157" width="0.0123%" height="15" fill="rgb(228,82,26)" fg:x="6240" fg:w="1"/><text x="76.8238%" y="1167.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_detached (1 samples, 0.01%)</title><rect x="76.5738%" y="1141" width="0.0123%" height="15" fill="rgb(244,220,31)" fg:x="6240" fg:w="1"/><text x="76.8238%" y="1151.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="76.5738%" y="1125" width="0.0123%" height="15" fill="rgb(214,35,25)" fg:x="6240" fg:w="1"/><text x="76.8238%" y="1135.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="76.5738%" y="1109" width="0.0123%" height="15" fill="rgb(245,162,54)" fg:x="6240" fg:w="1"/><text x="76.8238%" y="1119.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (2 samples, 0.02%)</title><rect x="76.6843%" y="1125" width="0.0245%" height="15" fill="rgb(210,43,24)" fg:x="6249" fg:w="2"/><text x="76.9343%" y="1135.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (36 samples, 0.44%)</title><rect x="76.9297%" y="997" width="0.4418%" height="15" fill="rgb(226,145,51)" fg:x="6269" fg:w="36"/><text x="77.1797%" y="1007.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (33 samples, 0.40%)</title><rect x="76.9665%" y="981" width="0.4050%" height="15" fill="rgb(237,52,53)" fg:x="6272" fg:w="33"/><text x="77.2165%" y="991.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 0.38%)</title><rect x="76.9910%" y="965" width="0.3804%" height="15" fill="rgb(216,226,7)" fg:x="6274" fg:w="31"/><text x="77.2410%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (31 samples, 0.38%)</title><rect x="76.9910%" y="949" width="0.3804%" height="15" fill="rgb(206,223,18)" fg:x="6274" fg:w="31"/><text x="77.2410%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (31 samples, 0.38%)</title><rect x="76.9910%" y="933" width="0.3804%" height="15" fill="rgb(221,1,10)" fg:x="6274" fg:w="31"/><text x="77.2410%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_add (31 samples, 0.38%)</title><rect x="76.9910%" y="917" width="0.3804%" height="15" fill="rgb(221,151,42)" fg:x="6274" fg:w="31"/><text x="77.2410%" y="927.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (1 samples, 0.01%)</title><rect x="77.3837%" y="933" width="0.0123%" height="15" fill="rgb(205,183,46)" fg:x="6306" fg:w="1"/><text x="77.6337%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (1 samples, 0.01%)</title><rect x="77.3837%" y="917" width="0.0123%" height="15" fill="rgb(239,229,1)" fg:x="6306" fg:w="1"/><text x="77.6337%" y="927.50"></text></g><g><title>async_task::utils::abort_on_panic (68 samples, 0.83%)</title><rect x="76.9174%" y="1029" width="0.8345%" height="15" fill="rgb(236,192,23)" fg:x="6268" fg:w="68"/><text x="77.1674%" y="1039.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (68 samples, 0.83%)</title><rect x="76.9174%" y="1013" width="0.8345%" height="15" fill="rgb(215,146,3)" fg:x="6268" fg:w="68"/><text x="77.1674%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (31 samples, 0.38%)</title><rect x="77.3715%" y="997" width="0.3804%" height="15" fill="rgb(235,52,27)" fg:x="6305" fg:w="31"/><text x="77.6215%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (30 samples, 0.37%)</title><rect x="77.3837%" y="981" width="0.3681%" height="15" fill="rgb(236,45,20)" fg:x="6306" fg:w="30"/><text x="77.6337%" y="991.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (30 samples, 0.37%)</title><rect x="77.3837%" y="965" width="0.3681%" height="15" fill="rgb(235,86,41)" fg:x="6306" fg:w="30"/><text x="77.6337%" y="975.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (30 samples, 0.37%)</title><rect x="77.3837%" y="949" width="0.3681%" height="15" fill="rgb(235,27,27)" fg:x="6306" fg:w="30"/><text x="77.6337%" y="959.50"></text></g><g><title>core::mem::drop (29 samples, 0.36%)</title><rect x="77.3960%" y="933" width="0.3559%" height="15" fill="rgb(232,4,34)" fg:x="6307" fg:w="29"/><text x="77.6460%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (29 samples, 0.36%)</title><rect x="77.3960%" y="917" width="0.3559%" height="15" fill="rgb(215,22,10)" fg:x="6307" fg:w="29"/><text x="77.6460%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (29 samples, 0.36%)</title><rect x="77.3960%" y="901" width="0.3559%" height="15" fill="rgb(230,228,27)" fg:x="6307" fg:w="29"/><text x="77.6460%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (29 samples, 0.36%)</title><rect x="77.3960%" y="885" width="0.3559%" height="15" fill="rgb(216,26,51)" fg:x="6307" fg:w="29"/><text x="77.6460%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (29 samples, 0.36%)</title><rect x="77.3960%" y="869" width="0.3559%" height="15" fill="rgb(225,180,50)" fg:x="6307" fg:w="29"/><text x="77.6460%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (1 samples, 0.01%)</title><rect x="77.7519%" y="1029" width="0.0123%" height="15" fill="rgb(236,211,2)" fg:x="6336" fg:w="1"/><text x="78.0019%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (1 samples, 0.01%)</title><rect x="77.7519%" y="1013" width="0.0123%" height="15" fill="rgb(250,51,20)" fg:x="6336" fg:w="1"/><text x="78.0019%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (72 samples, 0.88%)</title><rect x="77.7641%" y="1029" width="0.8835%" height="15" fill="rgb(232,70,37)" fg:x="6337" fg:w="72"/><text x="78.0141%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (72 samples, 0.88%)</title><rect x="77.7641%" y="1013" width="0.8835%" height="15" fill="rgb(226,183,39)" fg:x="6337" fg:w="72"/><text x="78.0141%" y="1023.50"></text></g><g><title>async_task::header::Header::register (153 samples, 1.88%)</title><rect x="76.7824%" y="1045" width="1.8775%" height="15" fill="rgb(232,228,21)" fg:x="6257" fg:w="153"/><text x="77.0324%" y="1055.50">a..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="78.6477%" y="1029" width="0.0123%" height="15" fill="rgb(251,118,32)" fg:x="6409" fg:w="1"/><text x="78.8977%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="78.6477%" y="1013" width="0.0123%" height="15" fill="rgb(235,172,38)" fg:x="6409" fg:w="1"/><text x="78.8977%" y="1023.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (180 samples, 2.21%)</title><rect x="76.7088%" y="1109" width="2.2089%" height="15" fill="rgb(235,63,18)" fg:x="6251" fg:w="180"/><text x="76.9588%" y="1119.50">&lt;..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (180 samples, 2.21%)</title><rect x="76.7088%" y="1093" width="2.2089%" height="15" fill="rgb(225,4,7)" fg:x="6251" fg:w="180"/><text x="76.9588%" y="1103.50">&lt;..</text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (180 samples, 2.21%)</title><rect x="76.7088%" y="1077" width="2.2089%" height="15" fill="rgb(231,61,1)" fg:x="6251" fg:w="180"/><text x="76.9588%" y="1087.50">&lt;..</text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (179 samples, 2.20%)</title><rect x="76.7211%" y="1061" width="2.1966%" height="15" fill="rgb(241,155,22)" fg:x="6252" fg:w="179"/><text x="76.9711%" y="1071.50">a..</text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.26%)</title><rect x="78.6600%" y="1045" width="0.2577%" height="15" fill="rgb(209,100,26)" fg:x="6410" fg:w="21"/><text x="78.9100%" y="1055.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.26%)</title><rect x="78.6600%" y="1029" width="0.2577%" height="15" fill="rgb(248,181,15)" fg:x="6410" fg:w="21"/><text x="78.9100%" y="1039.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (3 samples, 0.04%)</title><rect x="78.9177%" y="1109" width="0.0368%" height="15" fill="rgb(214,94,31)" fg:x="6431" fg:w="3"/><text x="79.1677%" y="1119.50"></text></g><g><title>core::cell::BorrowRefMut::new (3 samples, 0.04%)</title><rect x="78.9177%" y="1093" width="0.0368%" height="15" fill="rgb(207,16,42)" fg:x="6431" fg:w="3"/><text x="79.1677%" y="1103.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="78.9299%" y="1077" width="0.0245%" height="15" fill="rgb(208,127,13)" fg:x="6432" fg:w="2"/><text x="79.1799%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="78.9299%" y="1061" width="0.0245%" height="15" fill="rgb(220,211,18)" fg:x="6432" fg:w="2"/><text x="79.1799%" y="1071.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="78.9299%" y="1045" width="0.0245%" height="15" fill="rgb(221,55,38)" fg:x="6432" fg:w="2"/><text x="79.1799%" y="1055.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="78.9299%" y="1029" width="0.0245%" height="15" fill="rgb(252,219,45)" fg:x="6432" fg:w="2"/><text x="79.1799%" y="1039.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (375 samples, 4.60%)</title><rect x="74.4018%" y="1317" width="4.6018%" height="15" fill="rgb(248,53,35)" fg:x="6063" fg:w="375"/><text x="74.6518%" y="1327.50">bevy_..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (375 samples, 4.60%)</title><rect x="74.4018%" y="1301" width="4.6018%" height="15" fill="rgb(210,87,2)" fg:x="6063" fg:w="375"/><text x="74.6518%" y="1311.50">&lt;bevy..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (375 samples, 4.60%)</title><rect x="74.4018%" y="1285" width="4.6018%" height="15" fill="rgb(239,133,9)" fg:x="6063" fg:w="375"/><text x="74.6518%" y="1295.50">bevy_..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (375 samples, 4.60%)</title><rect x="74.4018%" y="1269" width="4.6018%" height="15" fill="rgb(214,114,5)" fg:x="6063" fg:w="375"/><text x="74.6518%" y="1279.50">&lt;bevy..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (375 samples, 4.60%)</title><rect x="74.4018%" y="1253" width="4.6018%" height="15" fill="rgb(206,124,24)" fg:x="6063" fg:w="375"/><text x="74.6518%" y="1263.50">&lt;bevy..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (375 samples, 4.60%)</title><rect x="74.4018%" y="1237" width="4.6018%" height="15" fill="rgb(212,57,33)" fg:x="6063" fg:w="375"/><text x="74.6518%" y="1247.50">bevy_..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (375 samples, 4.60%)</title><rect x="74.4018%" y="1221" width="4.6018%" height="15" fill="rgb(246,21,20)" fg:x="6063" fg:w="375"/><text x="74.6518%" y="1231.50">std::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (375 samples, 4.60%)</title><rect x="74.4018%" y="1205" width="4.6018%" height="15" fill="rgb(253,210,39)" fg:x="6063" fg:w="375"/><text x="74.6518%" y="1215.50">std::..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (375 samples, 4.60%)</title><rect x="74.4018%" y="1189" width="4.6018%" height="15" fill="rgb(209,187,24)" fg:x="6063" fg:w="375"/><text x="74.6518%" y="1199.50">bevy_..</text></g><g><title>futures_lite::future::block_on (197 samples, 2.42%)</title><rect x="76.5861%" y="1173" width="2.4175%" height="15" fill="rgb(246,136,17)" fg:x="6241" fg:w="197"/><text x="76.8361%" y="1183.50">fu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (193 samples, 2.37%)</title><rect x="76.6352%" y="1157" width="2.3684%" height="15" fill="rgb(211,0,30)" fg:x="6245" fg:w="193"/><text x="76.8852%" y="1167.50">st..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (190 samples, 2.33%)</title><rect x="76.6720%" y="1141" width="2.3316%" height="15" fill="rgb(216,199,7)" fg:x="6248" fg:w="190"/><text x="76.9220%" y="1151.50">s..</text></g><g><title>futures_lite::future::block_on::{{closure}} (187 samples, 2.29%)</title><rect x="76.7088%" y="1125" width="2.2948%" height="15" fill="rgb(207,210,19)" fg:x="6251" fg:w="187"/><text x="76.9588%" y="1135.50">f..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (4 samples, 0.05%)</title><rect x="78.9545%" y="1109" width="0.0491%" height="15" fill="rgb(237,187,39)" fg:x="6434" fg:w="4"/><text x="79.2045%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (4 samples, 0.05%)</title><rect x="78.9545%" y="1093" width="0.0491%" height="15" fill="rgb(243,194,42)" fg:x="6434" fg:w="4"/><text x="79.2045%" y="1103.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="78.9545%" y="1077" width="0.0491%" height="15" fill="rgb(225,194,19)" fg:x="6434" fg:w="4"/><text x="79.2045%" y="1087.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.05%)</title><rect x="78.9545%" y="1061" width="0.0491%" height="15" fill="rgb(224,192,14)" fg:x="6434" fg:w="4"/><text x="79.2045%" y="1071.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.05%)</title><rect x="78.9545%" y="1045" width="0.0491%" height="15" fill="rgb(252,21,18)" fg:x="6434" fg:w="4"/><text x="79.2045%" y="1055.50"></text></g><g><title>core::mem::replace (4 samples, 0.05%)</title><rect x="78.9545%" y="1029" width="0.0491%" height="15" fill="rgb(229,69,19)" fg:x="6434" fg:w="4"/><text x="79.2045%" y="1039.50"></text></g><g><title>core::ptr::write (4 samples, 0.05%)</title><rect x="78.9545%" y="1013" width="0.0491%" height="15" fill="rgb(251,31,53)" fg:x="6434" fg:w="4"/><text x="79.2045%" y="1023.50"></text></g><g><title>XGetXCBConnection (1 samples, 0.01%)</title><rect x="79.1017%" y="933" width="0.0123%" height="15" fill="rgb(218,39,50)" fg:x="6446" fg:w="1"/><text x="79.3517%" y="943.50"></text></g><g><title>_XGetRequest (2 samples, 0.02%)</title><rect x="79.1140%" y="917" width="0.0245%" height="15" fill="rgb(231,50,17)" fg:x="6447" fg:w="2"/><text x="79.3640%" y="927.50"></text></g><g><title>_XEventsQueued (2 samples, 0.02%)</title><rect x="79.1140%" y="901" width="0.0245%" height="15" fill="rgb(223,217,31)" fg:x="6447" fg:w="2"/><text x="79.3640%" y="911.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.02%)</title><rect x="79.1140%" y="885" width="0.0245%" height="15" fill="rgb(225,91,12)" fg:x="6447" fg:w="2"/><text x="79.3640%" y="895.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.02%)</title><rect x="79.1385%" y="885" width="0.0245%" height="15" fill="rgb(242,58,43)" fg:x="6449" fg:w="2"/><text x="79.3885%" y="895.50"></text></g><g><title>_XSend (3 samples, 0.04%)</title><rect x="79.1385%" y="901" width="0.0368%" height="15" fill="rgb(242,32,21)" fg:x="6449" fg:w="3"/><text x="79.3885%" y="911.50"></text></g><g><title>xcb_writev (1 samples, 0.01%)</title><rect x="79.1631%" y="885" width="0.0123%" height="15" fill="rgb(211,127,1)" fg:x="6451" fg:w="1"/><text x="79.4131%" y="895.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="79.1631%" y="869" width="0.0123%" height="15" fill="rgb(231,93,13)" fg:x="6451" fg:w="1"/><text x="79.4131%" y="879.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="79.1631%" y="853" width="0.0123%" height="15" fill="rgb(218,83,4)" fg:x="6451" fg:w="1"/><text x="79.4131%" y="863.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="79.2244%" y="837" width="0.0123%" height="15" fill="rgb(230,218,10)" fg:x="6456" fg:w="1"/><text x="79.4744%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="79.2244%" y="821" width="0.0123%" height="15" fill="rgb(235,127,18)" fg:x="6456" fg:w="1"/><text x="79.4744%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="79.2367%" y="837" width="0.0123%" height="15" fill="rgb(213,137,46)" fg:x="6457" fg:w="1"/><text x="79.4867%" y="847.50"></text></g><g><title>XSync (12 samples, 0.15%)</title><rect x="79.1140%" y="933" width="0.1473%" height="15" fill="rgb(235,179,24)" fg:x="6447" fg:w="12"/><text x="79.3640%" y="943.50"></text></g><g><title>_XReply (10 samples, 0.12%)</title><rect x="79.1385%" y="917" width="0.1227%" height="15" fill="rgb(247,58,49)" fg:x="6449" fg:w="10"/><text x="79.3885%" y="927.50"></text></g><g><title>xcb_wait_for_reply64 (7 samples, 0.09%)</title><rect x="79.1754%" y="901" width="0.0859%" height="15" fill="rgb(242,222,5)" fg:x="6452" fg:w="7"/><text x="79.4254%" y="911.50"></text></g><g><title>[libxcb.so.1.1.0] (7 samples, 0.09%)</title><rect x="79.1754%" y="885" width="0.0859%" height="15" fill="rgb(230,16,48)" fg:x="6452" fg:w="7"/><text x="79.4254%" y="895.50"></text></g><g><title>[libxcb.so.1.1.0] (7 samples, 0.09%)</title><rect x="79.1754%" y="869" width="0.0859%" height="15" fill="rgb(241,192,16)" fg:x="6452" fg:w="7"/><text x="79.4254%" y="879.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.07%)</title><rect x="79.1876%" y="853" width="0.0736%" height="15" fill="rgb(209,25,37)" fg:x="6453" fg:w="6"/><text x="79.4376%" y="863.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.01%)</title><rect x="79.2490%" y="837" width="0.0123%" height="15" fill="rgb(229,215,13)" fg:x="6458" fg:w="1"/><text x="79.4990%" y="847.50"></text></g><g><title>XGetXCBConnection (2 samples, 0.02%)</title><rect x="79.2735%" y="917" width="0.0245%" height="15" fill="rgb(213,199,8)" fg:x="6460" fg:w="2"/><text x="79.5235%" y="927.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="79.2981%" y="917" width="0.0123%" height="15" fill="rgb(226,151,19)" fg:x="6462" fg:w="1"/><text x="79.5481%" y="927.50"></text></g><g><title>xcb_poll_for_special_event (3 samples, 0.04%)</title><rect x="79.3103%" y="917" width="0.0368%" height="15" fill="rgb(254,183,12)" fg:x="6463" fg:w="3"/><text x="79.5603%" y="927.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="79.3349%" y="901" width="0.0123%" height="15" fill="rgb(245,8,3)" fg:x="6465" fg:w="1"/><text x="79.5849%" y="911.50"></text></g><g><title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="79.3349%" y="885" width="0.0123%" height="15" fill="rgb(229,159,35)" fg:x="6465" fg:w="1"/><text x="79.5849%" y="895.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="79.3349%" y="869" width="0.0123%" height="15" fill="rgb(209,145,1)" fg:x="6465" fg:w="1"/><text x="79.5849%" y="879.50"></text></g><g><title>xcb_present_pixmap (1 samples, 0.01%)</title><rect x="79.3472%" y="917" width="0.0123%" height="15" fill="rgb(228,183,16)" fg:x="6466" fg:w="1"/><text x="79.5972%" y="927.50"></text></g><g><title>xcb_send_request (1 samples, 0.01%)</title><rect x="79.3472%" y="901" width="0.0123%" height="15" fill="rgb(222,68,0)" fg:x="6466" fg:w="1"/><text x="79.5972%" y="911.50"></text></g><g><title>xcb_send_request_with_fds64 (1 samples, 0.01%)</title><rect x="79.3472%" y="885" width="0.0123%" height="15" fill="rgb(209,130,50)" fg:x="6466" fg:w="1"/><text x="79.5972%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="79.3472%" y="869" width="0.0123%" height="15" fill="rgb(228,176,44)" fg:x="6466" fg:w="1"/><text x="79.5972%" y="879.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (12 samples, 0.15%)</title><rect x="79.2613%" y="933" width="0.1473%" height="15" fill="rgb(221,164,2)" fg:x="6459" fg:w="12"/><text x="79.5113%" y="943.50"></text></g><g><title>xcb_sync_await_fence (4 samples, 0.05%)</title><rect x="79.3594%" y="917" width="0.0491%" height="15" fill="rgb(249,199,49)" fg:x="6467" fg:w="4"/><text x="79.6094%" y="927.50"></text></g><g><title>xcb_send_request (4 samples, 0.05%)</title><rect x="79.3594%" y="901" width="0.0491%" height="15" fill="rgb(228,205,53)" fg:x="6467" fg:w="4"/><text x="79.6094%" y="911.50"></text></g><g><title>xcb_send_request_with_fds64 (4 samples, 0.05%)</title><rect x="79.3594%" y="885" width="0.0491%" height="15" fill="rgb(235,77,20)" fg:x="6467" fg:w="4"/><text x="79.6094%" y="895.50"></text></g><g><title>xcb_get_extension_data (2 samples, 0.02%)</title><rect x="79.3840%" y="869" width="0.0245%" height="15" fill="rgb(227,147,34)" fg:x="6469" fg:w="2"/><text x="79.6340%" y="879.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="79.3840%" y="853" width="0.0245%" height="15" fill="rgb(226,203,52)" fg:x="6469" fg:w="2"/><text x="79.6340%" y="863.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="79.4085%" y="933" width="0.0123%" height="15" fill="rgb(226,186,23)" fg:x="6471" fg:w="1"/><text x="79.6585%" y="943.50"></text></g><g><title>__GI___poll (3 samples, 0.04%)</title><rect x="79.4208%" y="933" width="0.0368%" height="15" fill="rgb(236,13,30)" fg:x="6472" fg:w="3"/><text x="79.6708%" y="943.50"></text></g><g><title>__libc_disable_asynccancel (1 samples, 0.01%)</title><rect x="79.4453%" y="917" width="0.0123%" height="15" fill="rgb(228,121,22)" fg:x="6474" fg:w="1"/><text x="79.6953%" y="927.50"></text></g><g><title>xcb_flush (1 samples, 0.01%)</title><rect x="79.4576%" y="933" width="0.0123%" height="15" fill="rgb(248,222,26)" fg:x="6475" fg:w="1"/><text x="79.7076%" y="943.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="79.4576%" y="917" width="0.0123%" height="15" fill="rgb(251,72,25)" fg:x="6475" fg:w="1"/><text x="79.7076%" y="927.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="79.4576%" y="901" width="0.0123%" height="15" fill="rgb(223,114,24)" fg:x="6475" fg:w="1"/><text x="79.7076%" y="911.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="79.4576%" y="885" width="0.0123%" height="15" fill="rgb(232,190,43)" fg:x="6475" fg:w="1"/><text x="79.7076%" y="895.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (34 samples, 0.42%)</title><rect x="79.0895%" y="949" width="0.4172%" height="15" fill="rgb(208,90,0)" fg:x="6445" fg:w="34"/><text x="79.3395%" y="959.50"></text></g><g><title>xcb_wait_for_special_event (3 samples, 0.04%)</title><rect x="79.4699%" y="933" width="0.0368%" height="15" fill="rgb(234,149,31)" fg:x="6476" fg:w="3"/><text x="79.7199%" y="943.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="79.4821%" y="917" width="0.0245%" height="15" fill="rgb(235,188,36)" fg:x="6477" fg:w="2"/><text x="79.7321%" y="927.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="79.4821%" y="901" width="0.0245%" height="15" fill="rgb(219,59,51)" fg:x="6477" fg:w="2"/><text x="79.7321%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="79.6049%" y="885" width="0.0123%" height="15" fill="rgb(236,101,40)" fg:x="6487" fg:w="1"/><text x="79.8549%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="79.6049%" y="869" width="0.0123%" height="15" fill="rgb(235,33,7)" fg:x="6487" fg:w="1"/><text x="79.8549%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="79.6049%" y="853" width="0.0123%" height="15" fill="rgb(213,169,26)" fg:x="6487" fg:w="1"/><text x="79.8549%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.10%)</title><rect x="79.5312%" y="933" width="0.0982%" height="15" fill="rgb(218,99,34)" fg:x="6481" fg:w="8"/><text x="79.7812%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.10%)</title><rect x="79.5312%" y="917" width="0.0982%" height="15" fill="rgb(210,57,24)" fg:x="6481" fg:w="8"/><text x="79.7812%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="79.5803%" y="901" width="0.0491%" height="15" fill="rgb(231,181,54)" fg:x="6485" fg:w="4"/><text x="79.8303%" y="911.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="79.6171%" y="885" width="0.0123%" height="15" fill="rgb(251,188,48)" fg:x="6488" fg:w="1"/><text x="79.8671%" y="895.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="79.6294%" y="933" width="0.0245%" height="15" fill="rgb(243,12,45)" fg:x="6489" fg:w="2"/><text x="79.8794%" y="943.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (54 samples, 0.66%)</title><rect x="79.0036%" y="1301" width="0.6627%" height="15" fill="rgb(250,197,9)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1311.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (54 samples, 0.66%)</title><rect x="79.0036%" y="1285" width="0.6627%" height="15" fill="rgb(235,149,35)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1295.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (54 samples, 0.66%)</title><rect x="79.0036%" y="1269" width="0.6627%" height="15" fill="rgb(219,27,19)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (54 samples, 0.66%)</title><rect x="79.0036%" y="1253" width="0.6627%" height="15" fill="rgb(244,78,31)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (54 samples, 0.66%)</title><rect x="79.0036%" y="1237" width="0.6627%" height="15" fill="rgb(241,13,4)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1247.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (54 samples, 0.66%)</title><rect x="79.0036%" y="1221" width="0.6627%" height="15" fill="rgb(212,194,26)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1231.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (54 samples, 0.66%)</title><rect x="79.0036%" y="1205" width="0.6627%" height="15" fill="rgb(236,80,11)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (54 samples, 0.66%)</title><rect x="79.0036%" y="1189" width="0.6627%" height="15" fill="rgb(206,1,24)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (54 samples, 0.66%)</title><rect x="79.0036%" y="1173" width="0.6627%" height="15" fill="rgb(238,215,50)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (54 samples, 0.66%)</title><rect x="79.0036%" y="1157" width="0.6627%" height="15" fill="rgb(254,126,32)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1167.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (54 samples, 0.66%)</title><rect x="79.0036%" y="1141" width="0.6627%" height="15" fill="rgb(206,111,53)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1151.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (54 samples, 0.66%)</title><rect x="79.0036%" y="1125" width="0.6627%" height="15" fill="rgb(218,72,44)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1135.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (54 samples, 0.66%)</title><rect x="79.0036%" y="1109" width="0.6627%" height="15" fill="rgb(238,25,3)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1119.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (54 samples, 0.66%)</title><rect x="79.0036%" y="1093" width="0.6627%" height="15" fill="rgb(250,191,7)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1103.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (54 samples, 0.66%)</title><rect x="79.0036%" y="1077" width="0.6627%" height="15" fill="rgb(238,56,30)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1087.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (54 samples, 0.66%)</title><rect x="79.0036%" y="1061" width="0.6627%" height="15" fill="rgb(210,27,45)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1071.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (54 samples, 0.66%)</title><rect x="79.0036%" y="1045" width="0.6627%" height="15" fill="rgb(207,10,50)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (54 samples, 0.66%)</title><rect x="79.0036%" y="1029" width="0.6627%" height="15" fill="rgb(249,30,23)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (54 samples, 0.66%)</title><rect x="79.0036%" y="1013" width="0.6627%" height="15" fill="rgb(250,80,12)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (54 samples, 0.66%)</title><rect x="79.0036%" y="997" width="0.6627%" height="15" fill="rgb(210,221,37)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (54 samples, 0.66%)</title><rect x="79.0036%" y="981" width="0.6627%" height="15" fill="rgb(205,96,24)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (54 samples, 0.66%)</title><rect x="79.0036%" y="965" width="0.6627%" height="15" fill="rgb(247,104,22)" fg:x="6438" fg:w="54"/><text x="79.2536%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.16%)</title><rect x="79.5067%" y="949" width="0.1595%" height="15" fill="rgb(222,61,53)" fg:x="6479" fg:w="13"/><text x="79.7567%" y="959.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="79.6539%" y="933" width="0.0123%" height="15" fill="rgb(241,11,53)" fg:x="6491" fg:w="1"/><text x="79.9039%" y="943.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (1 samples, 0.01%)</title><rect x="79.6662%" y="1253" width="0.0123%" height="15" fill="rgb(230,111,47)" fg:x="6492" fg:w="1"/><text x="79.9162%" y="1263.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::prepare (1 samples, 0.01%)</title><rect x="79.6662%" y="1237" width="0.0123%" height="15" fill="rgb(218,187,29)" fg:x="6492" fg:w="1"/><text x="79.9162%" y="1247.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::init_textures (1 samples, 0.01%)</title><rect x="79.6662%" y="1221" width="0.0123%" height="15" fill="rgb(210,121,46)" fg:x="6492" fg:w="1"/><text x="79.9162%" y="1231.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::create_texture (1 samples, 0.01%)</title><rect x="79.6662%" y="1205" width="0.0123%" height="15" fill="rgb(250,43,19)" fg:x="6492" fg:w="1"/><text x="79.9162%" y="1215.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::copy_texture (1 samples, 0.01%)</title><rect x="79.6662%" y="1189" width="0.0123%" height="15" fill="rgb(238,61,12)" fg:x="6492" fg:w="1"/><text x="79.9162%" y="1199.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (1 samples, 0.01%)</title><rect x="79.6662%" y="1173" width="0.0123%" height="15" fill="rgb(251,198,9)" fg:x="6492" fg:w="1"/><text x="79.9162%" y="1183.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (1 samples, 0.01%)</title><rect x="79.6662%" y="1157" width="0.0123%" height="15" fill="rgb(214,192,38)" fg:x="6492" fg:w="1"/><text x="79.9162%" y="1167.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="79.6662%" y="1141" width="0.0123%" height="15" fill="rgb(214,73,19)" fg:x="6492" fg:w="1"/><text x="79.9162%" y="1151.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="79.6662%" y="1125" width="0.0123%" height="15" fill="rgb(249,222,49)" fg:x="6492" fg:w="1"/><text x="79.9162%" y="1135.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="79.6662%" y="1109" width="0.0123%" height="15" fill="rgb(231,181,54)" fg:x="6492" fg:w="1"/><text x="79.9162%" y="1119.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_bind_group (1 samples, 0.01%)</title><rect x="79.6785%" y="1189" width="0.0123%" height="15" fill="rgb(240,1,13)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="79.6785%" y="1173" width="0.0123%" height="15" fill="rgb(225,21,16)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="79.6785%" y="1157" width="0.0123%" height="15" fill="rgb(246,176,50)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="79.6785%" y="1141" width="0.0123%" height="15" fill="rgb(208,96,50)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="79.6785%" y="1125" width="0.0123%" height="15" fill="rgb(240,219,19)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="79.6785%" y="1109" width="0.0123%" height="15" fill="rgb(234,73,5)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="79.6785%" y="1093" width="0.0123%" height="15" fill="rgb(225,52,53)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1103.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="79.6785%" y="1077" width="0.0123%" height="15" fill="rgb(250,12,14)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1087.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="79.6785%" y="1061" width="0.0123%" height="15" fill="rgb(242,185,54)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1071.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="79.6785%" y="1045" width="0.0123%" height="15" fill="rgb(211,206,31)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="79.6785%" y="1029" width="0.0123%" height="15" fill="rgb(252,10,33)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="79.6785%" y="1013" width="0.0123%" height="15" fill="rgb(216,26,7)" fg:x="6493" fg:w="1"/><text x="79.9285%" y="1023.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (2 samples, 0.02%)</title><rect x="79.6785%" y="1205" width="0.0245%" height="15" fill="rgb(228,112,40)" fg:x="6493" fg:w="2"/><text x="79.9285%" y="1215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values (1 samples, 0.01%)</title><rect x="79.6908%" y="1189" width="0.0123%" height="15" fill="rgb(212,21,16)" fg:x="6494" fg:w="1"/><text x="79.9408%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="79.6908%" y="1173" width="0.0123%" height="15" fill="rgb(249,3,29)" fg:x="6494" fg:w="1"/><text x="79.9408%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="79.6908%" y="1157" width="0.0123%" height="15" fill="rgb(221,42,51)" fg:x="6494" fg:w="1"/><text x="79.9408%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="79.6908%" y="1141" width="0.0123%" height="15" fill="rgb(225,90,21)" fg:x="6494" fg:w="1"/><text x="79.9408%" y="1151.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="79.6908%" y="1125" width="0.0123%" height="15" fill="rgb(242,131,5)" fg:x="6494" fg:w="1"/><text x="79.9408%" y="1135.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="79.6908%" y="1109" width="0.0123%" height="15" fill="rgb(220,187,28)" fg:x="6494" fg:w="1"/><text x="79.9408%" y="1119.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="79.6908%" y="1093" width="0.0123%" height="15" fill="rgb(210,75,48)" fg:x="6494" fg:w="1"/><text x="79.9408%" y="1103.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::read (1 samples, 0.01%)</title><rect x="79.7030%" y="1205" width="0.0123%" height="15" fill="rgb(211,91,40)" fg:x="6495" fg:w="1"/><text x="79.9530%" y="1215.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="79.7030%" y="1189" width="0.0123%" height="15" fill="rgb(205,43,18)" fg:x="6495" fg:w="1"/><text x="79.9530%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="79.7030%" y="1173" width="0.0123%" height="15" fill="rgb(207,123,11)" fg:x="6495" fg:w="1"/><text x="79.9530%" y="1183.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="79.7030%" y="1157" width="0.0123%" height="15" fill="rgb(235,89,39)" fg:x="6495" fg:w="1"/><text x="79.9530%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="79.7030%" y="1141" width="0.0123%" height="15" fill="rgb(245,217,27)" fg:x="6495" fg:w="1"/><text x="79.9530%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="79.7030%" y="1125" width="0.0123%" height="15" fill="rgb(216,55,17)" fg:x="6495" fg:w="1"/><text x="79.9530%" y="1135.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (4 samples, 0.05%)</title><rect x="79.6785%" y="1221" width="0.0491%" height="15" fill="rgb(252,116,44)" fg:x="6493" fg:w="4"/><text x="79.9285%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (1 samples, 0.01%)</title><rect x="79.7153%" y="1205" width="0.0123%" height="15" fill="rgb(229,153,4)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (1 samples, 0.01%)</title><rect x="79.7153%" y="1189" width="0.0123%" height="15" fill="rgb(222,24,35)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::render::RenderPass&gt; (1 samples, 0.01%)</title><rect x="79.7153%" y="1173" width="0.0123%" height="15" fill="rgb(214,26,20)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::BasePass&lt;wgpu_core::command::draw::RenderCommand&gt;&gt; (1 samples, 0.01%)</title><rect x="79.7153%" y="1157" width="0.0123%" height="15" fill="rgb(215,14,45)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wgpu_core::command::draw::RenderCommand&gt;&gt; (1 samples, 0.01%)</title><rect x="79.7153%" y="1141" width="0.0123%" height="15" fill="rgb(217,212,50)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;wgpu_core::command::draw::RenderCommand&gt;&gt; (1 samples, 0.01%)</title><rect x="79.7153%" y="1125" width="0.0123%" height="15" fill="rgb(230,172,52)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1135.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="79.7153%" y="1109" width="0.0123%" height="15" fill="rgb(210,48,36)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="79.7153%" y="1093" width="0.0123%" height="15" fill="rgb(216,213,32)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1103.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="79.7153%" y="1077" width="0.0123%" height="15" fill="rgb(237,202,41)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1087.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="79.7153%" y="1061" width="0.0123%" height="15" fill="rgb(209,14,29)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1071.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="79.7153%" y="1045" width="0.0123%" height="15" fill="rgb(219,29,3)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1055.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="79.7153%" y="1029" width="0.0123%" height="15" fill="rgb(229,13,49)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1039.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="79.7153%" y="1013" width="0.0123%" height="15" fill="rgb(210,206,2)" fg:x="6496" fg:w="1"/><text x="79.9653%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BufferViewMut&gt; (1 samples, 0.01%)</title><rect x="79.7276%" y="1173" width="0.0123%" height="15" fill="rgb(216,154,46)" fg:x="6497" fg:w="1"/><text x="79.9776%" y="1183.50"></text></g><g><title>&lt;wgpu::BufferViewMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="79.7276%" y="1157" width="0.0123%" height="15" fill="rgb(211,170,52)" fg:x="6497" fg:w="1"/><text x="79.9776%" y="1167.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="79.7276%" y="1141" width="0.0123%" height="15" fill="rgb(233,109,47)" fg:x="6497" fg:w="1"/><text x="79.9776%" y="1151.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="79.7276%" y="1125" width="0.0123%" height="15" fill="rgb(208,212,30)" fg:x="6497" fg:w="1"/><text x="79.9776%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="79.7276%" y="1109" width="0.0123%" height="15" fill="rgb(215,190,19)" fg:x="6497" fg:w="1"/><text x="79.9776%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="79.7276%" y="1093" width="0.0123%" height="15" fill="rgb(207,164,53)" fg:x="6497" fg:w="1"/><text x="79.9776%" y="1103.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (1 samples, 0.01%)</title><rect x="79.7644%" y="1125" width="0.0123%" height="15" fill="rgb(213,87,49)" fg:x="6500" fg:w="1"/><text x="80.0144%" y="1135.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="79.7644%" y="1109" width="0.0123%" height="15" fill="rgb(241,216,24)" fg:x="6500" fg:w="1"/><text x="80.0144%" y="1119.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (1 samples, 0.01%)</title><rect x="79.7644%" y="1093" width="0.0123%" height="15" fill="rgb(241,123,45)" fg:x="6500" fg:w="1"/><text x="80.0144%" y="1103.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (1 samples, 0.01%)</title><rect x="79.7644%" y="1077" width="0.0123%" height="15" fill="rgb(220,36,15)" fg:x="6500" fg:w="1"/><text x="80.0144%" y="1087.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="79.7644%" y="1061" width="0.0123%" height="15" fill="rgb(215,202,9)" fg:x="6500" fg:w="1"/><text x="80.0144%" y="1071.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (1 samples, 0.01%)</title><rect x="79.7644%" y="1045" width="0.0123%" height="15" fill="rgb(252,71,26)" fg:x="6500" fg:w="1"/><text x="80.0144%" y="1055.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="79.7644%" y="1029" width="0.0123%" height="15" fill="rgb(243,195,19)" fg:x="6500" fg:w="1"/><text x="80.0144%" y="1039.50"></text></g><g><title>wgpu::Buffer::unmap (5 samples, 0.06%)</title><rect x="79.7398%" y="1173" width="0.0614%" height="15" fill="rgb(207,167,27)" fg:x="6498" fg:w="5"/><text x="79.9898%" y="1183.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (5 samples, 0.06%)</title><rect x="79.7398%" y="1157" width="0.0614%" height="15" fill="rgb(250,146,54)" fg:x="6498" fg:w="5"/><text x="79.9898%" y="1167.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (5 samples, 0.06%)</title><rect x="79.7398%" y="1141" width="0.0614%" height="15" fill="rgb(245,79,9)" fg:x="6498" fg:w="5"/><text x="79.9898%" y="1151.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;B&gt;&gt;::borrow_pending_writes (2 samples, 0.02%)</title><rect x="79.7767%" y="1125" width="0.0245%" height="15" fill="rgb(234,197,22)" fg:x="6501" fg:w="2"/><text x="80.0267%" y="1135.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (2 samples, 0.02%)</title><rect x="79.7767%" y="1109" width="0.0245%" height="15" fill="rgb(221,52,48)" fg:x="6501" fg:w="2"/><text x="80.0267%" y="1119.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (2 samples, 0.02%)</title><rect x="79.7767%" y="1093" width="0.0245%" height="15" fill="rgb(235,80,0)" fg:x="6501" fg:w="2"/><text x="80.0267%" y="1103.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (2 samples, 0.02%)</title><rect x="79.7767%" y="1077" width="0.0245%" height="15" fill="rgb(221,117,53)" fg:x="6501" fg:w="2"/><text x="80.0267%" y="1087.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (2 samples, 0.02%)</title><rect x="79.7767%" y="1061" width="0.0245%" height="15" fill="rgb(239,48,47)" fg:x="6501" fg:w="2"/><text x="80.0267%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="79.7767%" y="1045" width="0.0245%" height="15" fill="rgb(227,191,52)" fg:x="6501" fg:w="2"/><text x="80.0267%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="79.7767%" y="1029" width="0.0245%" height="15" fill="rgb(241,118,1)" fg:x="6501" fg:w="2"/><text x="80.0267%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="79.8012%" y="1157" width="0.0123%" height="15" fill="rgb(240,85,3)" fg:x="6503" fg:w="1"/><text x="80.0512%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="79.8012%" y="1141" width="0.0123%" height="15" fill="rgb(237,68,37)" fg:x="6503" fg:w="1"/><text x="80.0512%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="79.8012%" y="1125" width="0.0123%" height="15" fill="rgb(212,9,20)" fg:x="6503" fg:w="1"/><text x="80.0512%" y="1135.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (9 samples, 0.11%)</title><rect x="79.7276%" y="1189" width="0.1104%" height="15" fill="rgb(218,84,17)" fg:x="6497" fg:w="9"/><text x="79.9776%" y="1199.50"></text></g><g><title>wgpu::Device::create_buffer (3 samples, 0.04%)</title><rect x="79.8012%" y="1173" width="0.0368%" height="15" fill="rgb(235,147,20)" fg:x="6503" fg:w="3"/><text x="80.0512%" y="1183.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (2 samples, 0.02%)</title><rect x="79.8135%" y="1157" width="0.0245%" height="15" fill="rgb(208,224,1)" fg:x="6504" fg:w="2"/><text x="80.0635%" y="1167.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (12 samples, 0.15%)</title><rect x="79.7276%" y="1205" width="0.1473%" height="15" fill="rgb(232,97,50)" fg:x="6497" fg:w="12"/><text x="79.9776%" y="1215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (3 samples, 0.04%)</title><rect x="79.8380%" y="1189" width="0.0368%" height="15" fill="rgb(238,15,45)" fg:x="6506" fg:w="3"/><text x="80.0880%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (3 samples, 0.04%)</title><rect x="79.8380%" y="1173" width="0.0368%" height="15" fill="rgb(231,46,18)" fg:x="6506" fg:w="3"/><text x="80.0880%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (3 samples, 0.04%)</title><rect x="79.8380%" y="1157" width="0.0368%" height="15" fill="rgb(254,169,10)" fg:x="6506" fg:w="3"/><text x="80.0880%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="79.8380%" y="1141" width="0.0368%" height="15" fill="rgb(243,169,30)" fg:x="6506" fg:w="3"/><text x="80.0880%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.04%)</title><rect x="79.8380%" y="1125" width="0.0368%" height="15" fill="rgb(236,90,49)" fg:x="6506" fg:w="3"/><text x="80.0880%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.04%)</title><rect x="79.8380%" y="1109" width="0.0368%" height="15" fill="rgb(218,80,15)" fg:x="6506" fg:w="3"/><text x="80.0880%" y="1119.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.04%)</title><rect x="79.8380%" y="1093" width="0.0368%" height="15" fill="rgb(222,115,37)" fg:x="6506" fg:w="3"/><text x="80.0880%" y="1103.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.04%)</title><rect x="79.8380%" y="1077" width="0.0368%" height="15" fill="rgb(227,0,6)" fg:x="6506" fg:w="3"/><text x="80.0880%" y="1087.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.04%)</title><rect x="79.8380%" y="1061" width="0.0368%" height="15" fill="rgb(217,189,13)" fg:x="6506" fg:w="3"/><text x="80.0880%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="79.8380%" y="1045" width="0.0368%" height="15" fill="rgb(220,74,19)" fg:x="6506" fg:w="3"/><text x="80.0880%" y="1055.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="79.8748%" y="1077" width="0.0123%" height="15" fill="rgb(224,81,18)" fg:x="6509" fg:w="1"/><text x="80.1248%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="79.8748%" y="1061" width="0.0123%" height="15" fill="rgb(245,178,48)" fg:x="6509" fg:w="1"/><text x="80.1248%" y="1071.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="79.8748%" y="1045" width="0.0123%" height="15" fill="rgb(207,78,24)" fg:x="6509" fg:w="1"/><text x="80.1248%" y="1055.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="79.8748%" y="1029" width="0.0123%" height="15" fill="rgb(223,222,30)" fg:x="6509" fg:w="1"/><text x="80.1248%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="79.8748%" y="1013" width="0.0123%" height="15" fill="rgb(234,101,12)" fg:x="6509" fg:w="1"/><text x="80.1248%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="79.8748%" y="997" width="0.0123%" height="15" fill="rgb(209,80,46)" fg:x="6509" fg:w="1"/><text x="80.1248%" y="1007.50"></text></g><g><title>tracing::__macro_support::MacroCallsite::interest (1 samples, 0.01%)</title><rect x="79.8871%" y="1077" width="0.0123%" height="15" fill="rgb(228,79,14)" fg:x="6510" fg:w="1"/><text x="80.1371%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="79.8871%" y="1061" width="0.0123%" height="15" fill="rgb(220,219,34)" fg:x="6510" fg:w="1"/><text x="80.1371%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="79.8871%" y="1045" width="0.0123%" height="15" fill="rgb(207,80,21)" fg:x="6510" fg:w="1"/><text x="80.1371%" y="1055.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.04%)</title><rect x="79.8748%" y="1141" width="0.0368%" height="15" fill="rgb(210,154,44)" fg:x="6509" fg:w="3"/><text x="80.1248%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (3 samples, 0.04%)</title><rect x="79.8748%" y="1125" width="0.0368%" height="15" fill="rgb(246,44,39)" fg:x="6509" fg:w="3"/><text x="80.1248%" y="1135.50"></text></g><g><title>&lt;wgpu::Buffer as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="79.8748%" y="1109" width="0.0368%" height="15" fill="rgb(252,175,13)" fg:x="6509" fg:w="3"/><text x="80.1248%" y="1119.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_drop (3 samples, 0.04%)</title><rect x="79.8748%" y="1093" width="0.0368%" height="15" fill="rgb(211,50,39)" fg:x="6509" fg:w="3"/><text x="80.1248%" y="1103.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="79.8994%" y="1077" width="0.0123%" height="15" fill="rgb(231,204,27)" fg:x="6511" fg:w="1"/><text x="80.1494%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt;&gt; (4 samples, 0.05%)</title><rect x="79.8748%" y="1189" width="0.0491%" height="15" fill="rgb(253,26,34)" fg:x="6509" fg:w="4"/><text x="80.1248%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (4 samples, 0.05%)</title><rect x="79.8748%" y="1173" width="0.0491%" height="15" fill="rgb(207,139,38)" fg:x="6509" fg:w="4"/><text x="80.1248%" y="1183.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="79.8748%" y="1157" width="0.0491%" height="15" fill="rgb(248,54,27)" fg:x="6509" fg:w="4"/><text x="80.1248%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="79.9116%" y="1141" width="0.0123%" height="15" fill="rgb(234,25,33)" fg:x="6512" fg:w="1"/><text x="80.1616%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="79.9116%" y="1125" width="0.0123%" height="15" fill="rgb(249,107,47)" fg:x="6512" fg:w="1"/><text x="80.1616%" y="1135.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (17 samples, 0.21%)</title><rect x="79.7276%" y="1221" width="0.2086%" height="15" fill="rgb(230,190,31)" fg:x="6497" fg:w="17"/><text x="79.9776%" y="1231.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::remove_buffer (5 samples, 0.06%)</title><rect x="79.8748%" y="1205" width="0.0614%" height="15" fill="rgb(238,173,45)" fg:x="6509" fg:w="5"/><text x="80.1248%" y="1215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::remove (1 samples, 0.01%)</title><rect x="79.9239%" y="1189" width="0.0123%" height="15" fill="rgb(222,16,50)" fg:x="6513" fg:w="1"/><text x="80.1739%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove (1 samples, 0.01%)</title><rect x="79.9239%" y="1173" width="0.0123%" height="15" fill="rgb(251,204,47)" fg:x="6513" fg:w="1"/><text x="80.1739%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="79.9239%" y="1157" width="0.0123%" height="15" fill="rgb(225,12,3)" fg:x="6513" fg:w="1"/><text x="80.1739%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="79.9239%" y="1141" width="0.0123%" height="15" fill="rgb(214,208,22)" fg:x="6513" fg:w="1"/><text x="80.1739%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove (1 samples, 0.01%)</title><rect x="79.9239%" y="1125" width="0.0123%" height="15" fill="rgb(240,57,32)" fg:x="6513" fg:w="1"/><text x="80.1739%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::erase_no_drop (1 samples, 0.01%)</title><rect x="79.9239%" y="1109" width="0.0123%" height="15" fill="rgb(243,113,48)" fg:x="6513" fg:w="1"/><text x="80.1739%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::erase (1 samples, 0.01%)</title><rect x="79.9239%" y="1093" width="0.0123%" height="15" fill="rgb(225,135,30)" fg:x="6513" fg:w="1"/><text x="80.1739%" y="1103.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="79.9239%" y="1077" width="0.0123%" height="15" fill="rgb(222,3,53)" fg:x="6513" fg:w="1"/><text x="80.1739%" y="1087.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="79.9239%" y="1061" width="0.0123%" height="15" fill="rgb(243,142,2)" fg:x="6513" fg:w="1"/><text x="80.1739%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="79.9239%" y="1045" width="0.0123%" height="15" fill="rgb(233,67,14)" fg:x="6513" fg:w="1"/><text x="80.1739%" y="1055.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (22 samples, 0.27%)</title><rect x="79.6785%" y="1237" width="0.2700%" height="15" fill="rgb(245,125,36)" fg:x="6493" fg:w="22"/><text x="79.9285%" y="1247.50"></text></g><g><title>egui::context::Context::tessellate (1 samples, 0.01%)</title><rect x="79.9362%" y="1221" width="0.0123%" height="15" fill="rgb(225,199,6)" fg:x="6514" fg:w="1"/><text x="80.1862%" y="1231.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_bind_group (2 samples, 0.02%)</title><rect x="79.9485%" y="1189" width="0.0245%" height="15" fill="rgb(244,71,6)" fg:x="6515" fg:w="2"/><text x="80.1985%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="79.9485%" y="1173" width="0.0245%" height="15" fill="rgb(225,62,9)" fg:x="6515" fg:w="2"/><text x="80.1985%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="79.9485%" y="1157" width="0.0245%" height="15" fill="rgb(246,139,53)" fg:x="6515" fg:w="2"/><text x="80.1985%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="79.9485%" y="1141" width="0.0245%" height="15" fill="rgb(243,161,46)" fg:x="6515" fg:w="2"/><text x="80.1985%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="79.9485%" y="1125" width="0.0245%" height="15" fill="rgb(236,153,7)" fg:x="6515" fg:w="2"/><text x="80.1985%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="79.9485%" y="1109" width="0.0245%" height="15" fill="rgb(248,42,35)" fg:x="6515" fg:w="2"/><text x="80.1985%" y="1119.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="79.9607%" y="1093" width="0.0123%" height="15" fill="rgb(250,17,31)" fg:x="6516" fg:w="1"/><text x="80.2107%" y="1103.50"></text></g><g><title>&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="79.9607%" y="1077" width="0.0123%" height="15" fill="rgb(248,138,14)" fg:x="6516" fg:w="1"/><text x="80.2107%" y="1087.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_vertex_buffer (1 samples, 0.01%)</title><rect x="79.9730%" y="1189" width="0.0123%" height="15" fill="rgb(228,161,3)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="79.9730%" y="1173" width="0.0123%" height="15" fill="rgb(248,116,17)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="79.9730%" y="1157" width="0.0123%" height="15" fill="rgb(207,78,24)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="79.9730%" y="1141" width="0.0123%" height="15" fill="rgb(234,99,48)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="79.9730%" y="1125" width="0.0123%" height="15" fill="rgb(242,22,26)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="79.9730%" y="1109" width="0.0123%" height="15" fill="rgb(227,78,32)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="79.9730%" y="1093" width="0.0123%" height="15" fill="rgb(226,189,43)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1103.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="79.9730%" y="1077" width="0.0123%" height="15" fill="rgb(227,218,35)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1087.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="79.9730%" y="1061" width="0.0123%" height="15" fill="rgb(206,111,40)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1071.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="79.9730%" y="1045" width="0.0123%" height="15" fill="rgb(208,217,22)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="79.9730%" y="1029" width="0.0123%" height="15" fill="rgb(248,20,20)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="79.9730%" y="1013" width="0.0123%" height="15" fill="rgb(239,155,16)" fg:x="6517" fg:w="1"/><text x="80.2230%" y="1023.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="79.9853%" y="1189" width="0.0123%" height="15" fill="rgb(238,171,46)" fg:x="6518" fg:w="1"/><text x="80.2353%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="79.9853%" y="1173" width="0.0123%" height="15" fill="rgb(248,11,36)" fg:x="6518" fg:w="1"/><text x="80.2353%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="79.9853%" y="1157" width="0.0123%" height="15" fill="rgb(220,148,37)" fg:x="6518" fg:w="1"/><text x="80.2353%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="79.9853%" y="1141" width="0.0123%" height="15" fill="rgb(218,144,42)" fg:x="6518" fg:w="1"/><text x="80.2353%" y="1151.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="79.9853%" y="1125" width="0.0123%" height="15" fill="rgb(245,20,20)" fg:x="6518" fg:w="1"/><text x="80.2353%" y="1135.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="79.9853%" y="1109" width="0.0123%" height="15" fill="rgb(240,111,48)" fg:x="6518" fg:w="1"/><text x="80.2353%" y="1119.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="79.9853%" y="1093" width="0.0123%" height="15" fill="rgb(237,225,32)" fg:x="6518" fg:w="1"/><text x="80.2353%" y="1103.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (5 samples, 0.06%)</title><rect x="79.9485%" y="1205" width="0.0614%" height="15" fill="rgb(228,161,46)" fg:x="6515" fg:w="5"/><text x="80.1985%" y="1215.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::is_pipeline_set (1 samples, 0.01%)</title><rect x="79.9975%" y="1189" width="0.0123%" height="15" fill="rgb(235,196,21)" fg:x="6519" fg:w="1"/><text x="80.2475%" y="1199.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="79.9975%" y="1173" width="0.0123%" height="15" fill="rgb(250,133,21)" fg:x="6519" fg:w="1"/><text x="80.2475%" y="1183.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (6 samples, 0.07%)</title><rect x="79.9485%" y="1237" width="0.0736%" height="15" fill="rgb(236,94,32)" fg:x="6515" fg:w="6"/><text x="80.1985%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (6 samples, 0.07%)</title><rect x="79.9485%" y="1221" width="0.0736%" height="15" fill="rgb(219,176,25)" fg:x="6515" fg:w="6"/><text x="80.1985%" y="1231.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::read (1 samples, 0.01%)</title><rect x="80.0098%" y="1205" width="0.0123%" height="15" fill="rgb(211,17,43)" fg:x="6520" fg:w="1"/><text x="80.2598%" y="1215.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="80.0098%" y="1189" width="0.0123%" height="15" fill="rgb(220,75,23)" fg:x="6520" fg:w="1"/><text x="80.2598%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="80.0098%" y="1173" width="0.0123%" height="15" fill="rgb(215,122,32)" fg:x="6520" fg:w="1"/><text x="80.2598%" y="1183.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="80.0098%" y="1157" width="0.0123%" height="15" fill="rgb(218,57,38)" fg:x="6520" fg:w="1"/><text x="80.2598%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="80.0098%" y="1141" width="0.0123%" height="15" fill="rgb(233,208,46)" fg:x="6520" fg:w="1"/><text x="80.2598%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="80.0098%" y="1125" width="0.0123%" height="15" fill="rgb(221,35,50)" fg:x="6520" fg:w="1"/><text x="80.2598%" y="1135.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::configure_swapchain (1 samples, 0.01%)</title><rect x="80.0221%" y="1157" width="0.0123%" height="15" fill="rgb(229,213,29)" fg:x="6521" fg:w="1"/><text x="80.2721%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="80.0221%" y="1141" width="0.0123%" height="15" fill="rgb(229,110,40)" fg:x="6521" fg:w="1"/><text x="80.2721%" y="1151.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::configure_swapchain::{{closure}} (1 samples, 0.01%)</title><rect x="80.0221%" y="1125" width="0.0123%" height="15" fill="rgb(247,206,19)" fg:x="6521" fg:w="1"/><text x="80.2721%" y="1135.50"></text></g><g><title>gfx_backend_vulkan::window::SurfaceSwapchain::release_resources (1 samples, 0.01%)</title><rect x="80.0221%" y="1109" width="0.0123%" height="15" fill="rgb(216,229,45)" fg:x="6521" fg:w="1"/><text x="80.2721%" y="1119.50"></text></g><g><title>ash::device::DeviceV1_0::device_wait_idle (1 samples, 0.01%)</title><rect x="80.0221%" y="1093" width="0.0123%" height="15" fill="rgb(205,184,31)" fg:x="6521" fg:w="1"/><text x="80.2721%" y="1103.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::device_wait_idle (1 samples, 0.01%)</title><rect x="80.0221%" y="1077" width="0.0123%" height="15" fill="rgb(213,91,10)" fg:x="6521" fg:w="1"/><text x="80.2721%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="80.0221%" y="1061" width="0.0123%" height="15" fill="rgb(250,49,8)" fg:x="6521" fg:w="1"/><text x="80.2721%" y="1071.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="80.0466%" y="997" width="0.0123%" height="15" fill="rgb(207,26,8)" fg:x="6523" fg:w="1"/><text x="80.2966%" y="1007.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="80.0466%" y="981" width="0.0123%" height="15" fill="rgb(224,2,13)" fg:x="6523" fg:w="1"/><text x="80.2966%" y="991.50"></text></g><g><title>strcspn@plt (1 samples, 0.01%)</title><rect x="80.0466%" y="965" width="0.0123%" height="15" fill="rgb(219,108,27)" fg:x="6523" fg:w="1"/><text x="80.2966%" y="975.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (6 samples, 0.07%)</title><rect x="80.0221%" y="1221" width="0.0736%" height="15" fill="rgb(240,89,32)" fg:x="6521" fg:w="6"/><text x="80.2721%" y="1231.50"></text></g><g><title>wgpu::Device::create_swap_chain (6 samples, 0.07%)</title><rect x="80.0221%" y="1205" width="0.0736%" height="15" fill="rgb(248,205,3)" fg:x="6521" fg:w="6"/><text x="80.2721%" y="1215.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (6 samples, 0.07%)</title><rect x="80.0221%" y="1189" width="0.0736%" height="15" fill="rgb(236,197,47)" fg:x="6521" fg:w="6"/><text x="80.2721%" y="1199.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (6 samples, 0.07%)</title><rect x="80.0221%" y="1173" width="0.0736%" height="15" fill="rgb(244,185,52)" fg:x="6521" fg:w="6"/><text x="80.2721%" y="1183.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::Surface&lt;gfx_backend_vulkan::Backend&gt;&gt;::supports_queue_family (5 samples, 0.06%)</title><rect x="80.0344%" y="1157" width="0.0614%" height="15" fill="rgb(210,206,23)" fg:x="6522" fg:w="5"/><text x="80.2844%" y="1167.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_support (5 samples, 0.06%)</title><rect x="80.0344%" y="1141" width="0.0614%" height="15" fill="rgb(251,177,30)" fg:x="6522" fg:w="5"/><text x="80.2844%" y="1151.50"></text></g><g><title>ash::vk::extensions::KhrSurfaceFn::get_physical_device_surface_support_khr (5 samples, 0.06%)</title><rect x="80.0344%" y="1125" width="0.0614%" height="15" fill="rgb(243,27,45)" fg:x="6522" fg:w="5"/><text x="80.2844%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="80.0344%" y="1109" width="0.0614%" height="15" fill="rgb(248,141,51)" fg:x="6522" fg:w="5"/><text x="80.2844%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="80.0344%" y="1093" width="0.0614%" height="15" fill="rgb(235,102,15)" fg:x="6522" fg:w="5"/><text x="80.2844%" y="1103.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (5 samples, 0.06%)</title><rect x="80.0344%" y="1077" width="0.0614%" height="15" fill="rgb(214,164,53)" fg:x="6522" fg:w="5"/><text x="80.2844%" y="1087.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (5 samples, 0.06%)</title><rect x="80.0344%" y="1061" width="0.0614%" height="15" fill="rgb(228,18,51)" fg:x="6522" fg:w="5"/><text x="80.2844%" y="1071.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (5 samples, 0.06%)</title><rect x="80.0344%" y="1045" width="0.0614%" height="15" fill="rgb(205,211,11)" fg:x="6522" fg:w="5"/><text x="80.2844%" y="1055.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (5 samples, 0.06%)</title><rect x="80.0344%" y="1029" width="0.0614%" height="15" fill="rgb(208,63,6)" fg:x="6522" fg:w="5"/><text x="80.2844%" y="1039.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (5 samples, 0.06%)</title><rect x="80.0344%" y="1013" width="0.0614%" height="15" fill="rgb(245,76,14)" fg:x="6522" fg:w="5"/><text x="80.2844%" y="1023.50"></text></g><g><title>__strcspn_sse42 (3 samples, 0.04%)</title><rect x="80.0589%" y="997" width="0.0368%" height="15" fill="rgb(234,176,34)" fg:x="6524" fg:w="3"/><text x="80.3089%" y="1007.50"></text></g><g><title>getrandom::imp::getrandom_inner (1 samples, 0.01%)</title><rect x="80.0957%" y="1125" width="0.0123%" height="15" fill="rgb(243,156,42)" fg:x="6527" fg:w="1"/><text x="80.3457%" y="1135.50"></text></g><g><title>bevy_render::renderer::render_resource::texture::TextureId::new (2 samples, 0.02%)</title><rect x="80.0957%" y="1189" width="0.0245%" height="15" fill="rgb(237,182,10)" fg:x="6527" fg:w="2"/><text x="80.3457%" y="1199.50"></text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (2 samples, 0.02%)</title><rect x="80.0957%" y="1173" width="0.0245%" height="15" fill="rgb(244,117,0)" fg:x="6527" fg:w="2"/><text x="80.3457%" y="1183.50"></text></g><g><title>getrandom::getrandom (2 samples, 0.02%)</title><rect x="80.0957%" y="1157" width="0.0245%" height="15" fill="rgb(239,91,50)" fg:x="6527" fg:w="2"/><text x="80.3457%" y="1167.50"></text></g><g><title>getrandom::imp::getrandom_inner (2 samples, 0.02%)</title><rect x="80.0957%" y="1141" width="0.0245%" height="15" fill="rgb(206,38,9)" fg:x="6527" fg:w="2"/><text x="80.3457%" y="1151.50"></text></g><g><title>getrandom::util_libc::sys_fill_exact (1 samples, 0.01%)</title><rect x="80.1080%" y="1125" width="0.0123%" height="15" fill="rgb(205,25,10)" fg:x="6528" fg:w="1"/><text x="80.3580%" y="1135.50"></text></g><g><title>getrandom::imp::getrandom_inner::{{closure}} (1 samples, 0.01%)</title><rect x="80.1080%" y="1109" width="0.0123%" height="15" fill="rgb(206,224,7)" fg:x="6528" fg:w="1"/><text x="80.3580%" y="1119.50"></text></g><g><title>getrandom::imp::getrandom (1 samples, 0.01%)</title><rect x="80.1080%" y="1093" width="0.0123%" height="15" fill="rgb(227,157,10)" fg:x="6528" fg:w="1"/><text x="80.3580%" y="1103.50"></text></g><g><title>syscall (1 samples, 0.01%)</title><rect x="80.1080%" y="1077" width="0.0123%" height="15" fill="rgb(214,157,37)" fg:x="6528" fg:w="1"/><text x="80.3580%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="80.1203%" y="1189" width="0.0123%" height="15" fill="rgb(209,180,35)" fg:x="6529" fg:w="1"/><text x="80.3703%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="80.1203%" y="1173" width="0.0123%" height="15" fill="rgb(216,174,49)" fg:x="6529" fg:w="1"/><text x="80.3703%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="80.1203%" y="1157" width="0.0123%" height="15" fill="rgb(205,96,20)" fg:x="6529" fg:w="1"/><text x="80.3703%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="80.1203%" y="1141" width="0.0123%" height="15" fill="rgb(214,220,39)" fg:x="6529" fg:w="1"/><text x="80.3703%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="80.1203%" y="1125" width="0.0123%" height="15" fill="rgb(245,126,30)" fg:x="6529" fg:w="1"/><text x="80.3703%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="80.1203%" y="1109" width="0.0123%" height="15" fill="rgb(215,88,33)" fg:x="6529" fg:w="1"/><text x="80.3703%" y="1119.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="80.1203%" y="1093" width="0.0123%" height="15" fill="rgb(210,1,49)" fg:x="6529" fg:w="1"/><text x="80.3703%" y="1103.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="80.1203%" y="1077" width="0.0123%" height="15" fill="rgb(207,133,3)" fg:x="6529" fg:w="1"/><text x="80.3703%" y="1087.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="80.1203%" y="1061" width="0.0123%" height="15" fill="rgb(231,47,43)" fg:x="6529" fg:w="1"/><text x="80.3703%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="80.1203%" y="1045" width="0.0123%" height="15" fill="rgb(245,64,1)" fg:x="6529" fg:w="1"/><text x="80.3703%" y="1055.50"></text></g><g><title>ash::device::DeviceV1_0::reset_fences (1 samples, 0.01%)</title><rect x="80.1325%" y="1125" width="0.0123%" height="15" fill="rgb(253,145,20)" fg:x="6530" fg:w="1"/><text x="80.3825%" y="1135.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::reset_fences (1 samples, 0.01%)</title><rect x="80.1325%" y="1109" width="0.0123%" height="15" fill="rgb(211,39,18)" fg:x="6530" fg:w="1"/><text x="80.3825%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="80.1325%" y="1093" width="0.0123%" height="15" fill="rgb(223,225,18)" fg:x="6530" fg:w="1"/><text x="80.3825%" y="1103.50"></text></g><g><title>ash::device::DeviceV1_0::wait_for_fences (6 samples, 0.07%)</title><rect x="80.1448%" y="1125" width="0.0736%" height="15" fill="rgb(210,202,44)" fg:x="6531" fg:w="6"/><text x="80.3948%" y="1135.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::wait_for_fences (6 samples, 0.07%)</title><rect x="80.1448%" y="1109" width="0.0736%" height="15" fill="rgb(231,138,36)" fg:x="6531" fg:w="6"/><text x="80.3948%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="80.1448%" y="1093" width="0.0736%" height="15" fill="rgb(237,115,25)" fg:x="6531" fg:w="6"/><text x="80.3948%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="80.1693%" y="1077" width="0.0491%" height="15" fill="rgb(215,53,48)" fg:x="6533" fg:w="4"/><text x="80.4193%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="80.1816%" y="1061" width="0.0368%" height="15" fill="rgb(243,193,24)" fg:x="6534" fg:w="3"/><text x="80.4316%" y="1071.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (5 samples, 0.06%)</title><rect x="80.2184%" y="1061" width="0.0614%" height="15" fill="rgb(210,106,28)" fg:x="6537" fg:w="5"/><text x="80.4684%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="80.2675%" y="1045" width="0.0123%" height="15" fill="rgb(249,192,0)" fg:x="6541" fg:w="1"/><text x="80.5175%" y="1055.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="80.2675%" y="1029" width="0.0123%" height="15" fill="rgb(224,96,21)" fg:x="6541" fg:w="1"/><text x="80.5175%" y="1039.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::acquire_image (13 samples, 0.16%)</title><rect x="80.1325%" y="1141" width="0.1595%" height="15" fill="rgb(243,160,19)" fg:x="6530" fg:w="13"/><text x="80.3825%" y="1151.50"></text></g><g><title>gfx_backend_vulkan::window::Swapchain::acquire_image (6 samples, 0.07%)</title><rect x="80.2184%" y="1125" width="0.0736%" height="15" fill="rgb(219,205,50)" fg:x="6537" fg:w="6"/><text x="80.4684%" y="1135.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (6 samples, 0.07%)</title><rect x="80.2184%" y="1109" width="0.0736%" height="15" fill="rgb(218,175,44)" fg:x="6537" fg:w="6"/><text x="80.4684%" y="1119.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::acquire_next_image_khr (6 samples, 0.07%)</title><rect x="80.2184%" y="1093" width="0.0736%" height="15" fill="rgb(251,84,47)" fg:x="6537" fg:w="6"/><text x="80.4684%" y="1103.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (6 samples, 0.07%)</title><rect x="80.2184%" y="1077" width="0.0736%" height="15" fill="rgb(241,14,16)" fg:x="6537" fg:w="6"/><text x="80.4684%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="80.2798%" y="1061" width="0.0123%" height="15" fill="rgb(207,142,28)" fg:x="6542" fg:w="1"/><text x="80.5298%" y="1071.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register_identity (2 samples, 0.02%)</title><rect x="80.2921%" y="1141" width="0.0245%" height="15" fill="rgb(208,116,22)" fg:x="6543" fg:w="2"/><text x="80.5421%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::process (2 samples, 0.02%)</title><rect x="80.2921%" y="1125" width="0.0245%" height="15" fill="rgb(210,0,43)" fg:x="6543" fg:w="2"/><text x="80.5421%" y="1135.50"></text></g><g><title>wgpu_core::hub::IdentityManager::alloc (1 samples, 0.01%)</title><rect x="80.3043%" y="1109" width="0.0123%" height="15" fill="rgb(246,33,21)" fg:x="6544" fg:w="1"/><text x="80.5543%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="80.3043%" y="1093" width="0.0123%" height="15" fill="rgb(208,158,54)" fg:x="6544" fg:w="1"/><text x="80.5543%" y="1103.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (25 samples, 0.31%)</title><rect x="80.0221%" y="1237" width="0.3068%" height="15" fill="rgb(218,99,29)" fg:x="6521" fg:w="25"/><text x="80.2721%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::next_swap_chain_texture (19 samples, 0.23%)</title><rect x="80.0957%" y="1221" width="0.2332%" height="15" fill="rgb(226,29,7)" fg:x="6527" fg:w="19"/><text x="80.3457%" y="1231.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::try_next_swap_chain_texture (19 samples, 0.23%)</title><rect x="80.0957%" y="1205" width="0.2332%" height="15" fill="rgb(206,178,46)" fg:x="6527" fg:w="19"/><text x="80.3457%" y="1215.50"></text></g><g><title>wgpu::SwapChain::get_current_frame (16 samples, 0.20%)</title><rect x="80.1325%" y="1189" width="0.1963%" height="15" fill="rgb(205,169,32)" fg:x="6530" fg:w="16"/><text x="80.3825%" y="1199.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_get_current_texture_view (16 samples, 0.20%)</title><rect x="80.1325%" y="1173" width="0.1963%" height="15" fill="rgb(217,4,13)" fg:x="6530" fg:w="16"/><text x="80.3825%" y="1183.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_get_current_texture_view (16 samples, 0.20%)</title><rect x="80.1325%" y="1157" width="0.1963%" height="15" fill="rgb(210,140,37)" fg:x="6530" fg:w="16"/><text x="80.3825%" y="1167.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="80.3166%" y="1141" width="0.0123%" height="15" fill="rgb(229,80,10)" fg:x="6545" fg:w="1"/><text x="80.5666%" y="1151.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="80.3657%" y="1141" width="0.0245%" height="15" fill="rgb(212,175,34)" fg:x="6549" fg:w="2"/><text x="80.6157%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="80.3657%" y="1125" width="0.0245%" height="15" fill="rgb(216,207,24)" fg:x="6549" fg:w="2"/><text x="80.6157%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="80.3780%" y="1109" width="0.0123%" height="15" fill="rgb(234,163,3)" fg:x="6550" fg:w="1"/><text x="80.6280%" y="1119.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer::{{closure}} (1 samples, 0.01%)</title><rect x="80.3780%" y="1093" width="0.0123%" height="15" fill="rgb(248,101,16)" fg:x="6550" fg:w="1"/><text x="80.6280%" y="1103.50"></text></g><g><title>wgpu_core::track::PendingTransition&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::into_hal (1 samples, 0.01%)</title><rect x="80.3780%" y="1077" width="0.0123%" height="15" fill="rgb(209,152,54)" fg:x="6550" fg:w="1"/><text x="80.6280%" y="1087.50"></text></g><g><title>wgpu_core::conv::map_buffer_state (1 samples, 0.01%)</title><rect x="80.3780%" y="1061" width="0.0123%" height="15" fill="rgb(229,124,51)" fg:x="6550" fg:w="1"/><text x="80.6280%" y="1071.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="80.3902%" y="1109" width="0.0123%" height="15" fill="rgb(219,83,18)" fg:x="6551" fg:w="1"/><text x="80.6402%" y="1119.50"></text></g><g><title>&lt;core::iter::sources::once::Once&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="80.3902%" y="1093" width="0.0123%" height="15" fill="rgb(206,29,38)" fg:x="6551" fg:w="1"/><text x="80.6402%" y="1103.50"></text></g><g><title>&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="80.3902%" y="1077" width="0.0123%" height="15" fill="rgb(245,123,23)" fg:x="6551" fg:w="1"/><text x="80.6402%" y="1087.50"></text></g><g><title>&lt;core::option::Item&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="80.3902%" y="1061" width="0.0123%" height="15" fill="rgb(238,50,33)" fg:x="6551" fg:w="1"/><text x="80.6402%" y="1071.50"></text></g><g><title>inplace_it::fixed_array::indirect (2 samples, 0.02%)</title><rect x="80.4516%" y="1061" width="0.0245%" height="15" fill="rgb(234,165,23)" fg:x="6556" fg:w="2"/><text x="80.7016%" y="1071.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer::{{closure}} (117 samples, 1.44%)</title><rect x="80.4761%" y="1029" width="1.4358%" height="15" fill="rgb(211,82,31)" fg:x="6558" fg:w="117"/><text x="80.7261%" y="1039.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_copy_buffer (117 samples, 1.44%)</title><rect x="80.4761%" y="1013" width="1.4358%" height="15" fill="rgb(224,166,46)" fg:x="6558" fg:w="117"/><text x="80.7261%" y="1023.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_copy_buffer (117 samples, 1.44%)</title><rect x="80.4761%" y="997" width="1.4358%" height="15" fill="rgb(211,13,8)" fg:x="6558" fg:w="117"/><text x="80.7261%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (117 samples, 1.44%)</title><rect x="80.4761%" y="981" width="1.4358%" height="15" fill="rgb(212,7,42)" fg:x="6558" fg:w="117"/><text x="80.7261%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (114 samples, 1.40%)</title><rect x="80.5129%" y="965" width="1.3989%" height="15" fill="rgb(249,102,19)" fg:x="6561" fg:w="114"/><text x="80.7629%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="81.8873%" y="949" width="0.0245%" height="15" fill="rgb(225,41,13)" fg:x="6673" fg:w="2"/><text x="82.1373%" y="959.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (118 samples, 1.45%)</title><rect x="80.4761%" y="1045" width="1.4480%" height="15" fill="rgb(220,65,27)" fg:x="6558" fg:w="118"/><text x="80.7261%" y="1055.50"></text></g><g><title>inplace_it::guards::uninitialized_slice_memory_guard::UninitializedSliceMemoryGuard&lt;T&gt;::init_with_dyn_iter (1 samples, 0.01%)</title><rect x="81.9119%" y="1029" width="0.0123%" height="15" fill="rgb(206,4,41)" fg:x="6675" fg:w="1"/><text x="82.1619%" y="1039.50"></text></g><g><title>inplace_it::guards::slice_memory_guard::SliceMemoryGuard&lt;T&gt;::new_from_iter (1 samples, 0.01%)</title><rect x="81.9119%" y="1013" width="0.0123%" height="15" fill="rgb(219,60,39)" fg:x="6675" fg:w="1"/><text x="82.1619%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="81.9119%" y="997" width="0.0123%" height="15" fill="rgb(226,4,38)" fg:x="6675" fg:w="1"/><text x="82.1619%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="81.9119%" y="981" width="0.0123%" height="15" fill="rgb(250,52,3)" fg:x="6675" fg:w="1"/><text x="82.1619%" y="991.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (126 samples, 1.55%)</title><rect x="80.3902%" y="1141" width="1.5462%" height="15" fill="rgb(234,93,0)" fg:x="6551" fg:w="126"/><text x="80.6402%" y="1151.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (126 samples, 1.55%)</title><rect x="80.3902%" y="1125" width="1.5462%" height="15" fill="rgb(251,47,47)" fg:x="6551" fg:w="126"/><text x="80.6402%" y="1135.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (125 samples, 1.53%)</title><rect x="80.4025%" y="1109" width="1.5339%" height="15" fill="rgb(205,166,47)" fg:x="6552" fg:w="125"/><text x="80.6525%" y="1119.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (123 samples, 1.51%)</title><rect x="80.4270%" y="1093" width="1.5094%" height="15" fill="rgb(231,148,8)" fg:x="6554" fg:w="123"/><text x="80.6770%" y="1103.50"></text></g><g><title>inplace_it::fixed_array::indirect (121 samples, 1.48%)</title><rect x="80.4516%" y="1077" width="1.4848%" height="15" fill="rgb(244,185,19)" fg:x="6556" fg:w="121"/><text x="80.7016%" y="1087.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (119 samples, 1.46%)</title><rect x="80.4761%" y="1061" width="1.4603%" height="15" fill="rgb(224,201,45)" fg:x="6558" fg:w="119"/><text x="80.7261%" y="1071.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="81.9242%" y="1045" width="0.0123%" height="15" fill="rgb(240,77,39)" fg:x="6676" fg:w="1"/><text x="82.1742%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (3 samples, 0.04%)</title><rect x="81.9364%" y="1141" width="0.0368%" height="15" fill="rgb(248,211,29)" fg:x="6677" fg:w="3"/><text x="82.1864%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (5 samples, 0.06%)</title><rect x="81.9732%" y="1141" width="0.0614%" height="15" fill="rgb(232,214,46)" fg:x="6680" fg:w="5"/><text x="82.2232%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="82.0346%" y="1141" width="0.0123%" height="15" fill="rgb(213,99,54)" fg:x="6685" fg:w="1"/><text x="82.2846%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;wgpu_core::track::PendingTransition&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt;,wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;wgpu_core::hub::IdentityManagerFactory&gt;&gt;::command_encoder_copy_buffer_to_buffer&lt;gfx_backend_vulkan::Backend&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="82.0469%" y="1141" width="0.0123%" height="15" fill="rgb(240,19,46)" fg:x="6686" fg:w="1"/><text x="82.2969%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;wgpu_core::track::PendingTransition&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.0469%" y="1125" width="0.0123%" height="15" fill="rgb(243,89,10)" fg:x="6686" fg:w="1"/><text x="82.2969%" y="1135.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.0469%" y="1109" width="0.0123%" height="15" fill="rgb(249,28,32)" fg:x="6686" fg:w="1"/><text x="82.2969%" y="1119.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.0469%" y="1093" width="0.0123%" height="15" fill="rgb(253,30,9)" fg:x="6686" fg:w="1"/><text x="82.2969%" y="1103.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.0469%" y="1077" width="0.0123%" height="15" fill="rgb(217,2,26)" fg:x="6686" fg:w="1"/><text x="82.2969%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="82.0591%" y="1141" width="0.0245%" height="15" fill="rgb(220,28,10)" fg:x="6687" fg:w="2"/><text x="82.3091%" y="1151.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="82.0591%" y="1125" width="0.0245%" height="15" fill="rgb(228,167,49)" fg:x="6687" fg:w="2"/><text x="82.3091%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (2 samples, 0.02%)</title><rect x="82.0591%" y="1109" width="0.0245%" height="15" fill="rgb(238,212,3)" fg:x="6687" fg:w="2"/><text x="82.3091%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="82.0591%" y="1093" width="0.0245%" height="15" fill="rgb(229,134,44)" fg:x="6687" fg:w="2"/><text x="82.3091%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="82.0591%" y="1077" width="0.0245%" height="15" fill="rgb(208,71,4)" fg:x="6687" fg:w="2"/><text x="82.3091%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.0837%" y="1141" width="0.0123%" height="15" fill="rgb(221,205,45)" fg:x="6689" fg:w="1"/><text x="82.3337%" y="1151.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.0837%" y="1125" width="0.0123%" height="15" fill="rgb(215,132,38)" fg:x="6689" fg:w="1"/><text x="82.3337%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1 samples, 0.01%)</title><rect x="82.0837%" y="1109" width="0.0123%" height="15" fill="rgb(227,158,6)" fg:x="6689" fg:w="1"/><text x="82.3337%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="82.0837%" y="1093" width="0.0123%" height="15" fill="rgb(250,10,38)" fg:x="6689" fg:w="1"/><text x="82.3337%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="82.0837%" y="1077" width="0.0123%" height="15" fill="rgb(225,171,40)" fg:x="6689" fg:w="1"/><text x="82.3337%" y="1087.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::last_mut (2 samples, 0.02%)</title><rect x="82.0960%" y="1141" width="0.0245%" height="15" fill="rgb(238,17,43)" fg:x="6690" fg:w="2"/><text x="82.3460%" y="1151.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::get_encoder_mut (3 samples, 0.04%)</title><rect x="82.1205%" y="1141" width="0.0368%" height="15" fill="rgb(208,145,4)" fg:x="6692" fg:w="3"/><text x="82.3705%" y="1151.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (2 samples, 0.02%)</title><rect x="82.1328%" y="1125" width="0.0245%" height="15" fill="rgb(232,82,7)" fg:x="6693" fg:w="2"/><text x="82.3828%" y="1135.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (8 samples, 0.10%)</title><rect x="82.1573%" y="1141" width="0.0982%" height="15" fill="rgb(205,166,38)" fg:x="6695" fg:w="8"/><text x="82.4073%" y="1151.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (8 samples, 0.10%)</title><rect x="82.1573%" y="1125" width="0.0982%" height="15" fill="rgb(240,228,4)" fg:x="6695" fg:w="8"/><text x="82.4073%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (8 samples, 0.10%)</title><rect x="82.1573%" y="1109" width="0.0982%" height="15" fill="rgb(233,121,40)" fg:x="6695" fg:w="8"/><text x="82.4073%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (8 samples, 0.10%)</title><rect x="82.1573%" y="1093" width="0.0982%" height="15" fill="rgb(243,84,30)" fg:x="6695" fg:w="8"/><text x="82.4073%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (8 samples, 0.10%)</title><rect x="82.1573%" y="1077" width="0.0982%" height="15" fill="rgb(235,81,48)" fg:x="6695" fg:w="8"/><text x="82.4073%" y="1087.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.01%)</title><rect x="82.2555%" y="1125" width="0.0123%" height="15" fill="rgb(218,137,0)" fg:x="6703" fg:w="1"/><text x="82.5055%" y="1135.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="82.2800%" y="1093" width="0.0245%" height="15" fill="rgb(223,151,48)" fg:x="6705" fg:w="2"/><text x="82.5300%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="82.2800%" y="1077" width="0.0245%" height="15" fill="rgb(247,30,19)" fg:x="6705" fg:w="2"/><text x="82.5300%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="82.2800%" y="1061" width="0.0245%" height="15" fill="rgb(205,129,29)" fg:x="6705" fg:w="2"/><text x="82.5300%" y="1071.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (1 samples, 0.01%)</title><rect x="82.3046%" y="1093" width="0.0123%" height="15" fill="rgb(222,29,2)" fg:x="6707" fg:w="1"/><text x="82.5546%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.01%)</title><rect x="82.3291%" y="997" width="0.0123%" height="15" fill="rgb(232,145,33)" fg:x="6709" fg:w="1"/><text x="82.5791%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.01%)</title><rect x="82.3291%" y="981" width="0.0123%" height="15" fill="rgb(217,30,31)" fg:x="6709" fg:w="1"/><text x="82.5791%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="82.3291%" y="965" width="0.0123%" height="15" fill="rgb(243,22,52)" fg:x="6709" fg:w="1"/><text x="82.5791%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (3 samples, 0.04%)</title><rect x="82.3168%" y="1061" width="0.0368%" height="15" fill="rgb(254,228,14)" fg:x="6708" fg:w="3"/><text x="82.5668%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.04%)</title><rect x="82.3168%" y="1045" width="0.0368%" height="15" fill="rgb(231,45,50)" fg:x="6708" fg:w="3"/><text x="82.5668%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="82.3291%" y="1029" width="0.0245%" height="15" fill="rgb(248,125,3)" fg:x="6709" fg:w="2"/><text x="82.5791%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="82.3291%" y="1013" width="0.0245%" height="15" fill="rgb(213,76,9)" fg:x="6709" fg:w="2"/><text x="82.5791%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.01%)</title><rect x="82.3414%" y="997" width="0.0123%" height="15" fill="rgb(238,108,21)" fg:x="6710" fg:w="1"/><text x="82.5914%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.01%)</title><rect x="82.3414%" y="981" width="0.0123%" height="15" fill="rgb(229,214,19)" fg:x="6710" fg:w="1"/><text x="82.5914%" y="991.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="82.3414%" y="965" width="0.0123%" height="15" fill="rgb(252,201,5)" fg:x="6710" fg:w="1"/><text x="82.5914%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="82.3414%" y="949" width="0.0123%" height="15" fill="rgb(233,165,49)" fg:x="6710" fg:w="1"/><text x="82.5914%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="82.3414%" y="933" width="0.0123%" height="15" fill="rgb(208,165,19)" fg:x="6710" fg:w="1"/><text x="82.5914%" y="943.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="82.3537%" y="1061" width="0.0123%" height="15" fill="rgb(216,220,31)" fg:x="6711" fg:w="1"/><text x="82.6037%" y="1071.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="82.3537%" y="1045" width="0.0123%" height="15" fill="rgb(214,8,31)" fg:x="6711" fg:w="1"/><text x="82.6037%" y="1055.50"></text></g><g><title>&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u32 (1 samples, 0.01%)</title><rect x="82.3537%" y="1029" width="0.0123%" height="15" fill="rgb(220,32,32)" fg:x="6711" fg:w="1"/><text x="82.6037%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.3782%" y="1045" width="0.0123%" height="15" fill="rgb(237,172,34)" fg:x="6713" fg:w="1"/><text x="82.6282%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.3782%" y="1029" width="0.0123%" height="15" fill="rgb(240,209,5)" fg:x="6713" fg:w="1"/><text x="82.6282%" y="1039.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (10 samples, 0.12%)</title><rect x="82.2800%" y="1109" width="0.1227%" height="15" fill="rgb(221,219,1)" fg:x="6705" fg:w="10"/><text x="82.5300%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7 samples, 0.09%)</title><rect x="82.3168%" y="1093" width="0.0859%" height="15" fill="rgb(237,90,36)" fg:x="6708" fg:w="7"/><text x="82.5668%" y="1103.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (7 samples, 0.09%)</title><rect x="82.3168%" y="1077" width="0.0859%" height="15" fill="rgb(245,14,51)" fg:x="6708" fg:w="7"/><text x="82.5668%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="82.3659%" y="1061" width="0.0368%" height="15" fill="rgb(211,71,49)" fg:x="6712" fg:w="3"/><text x="82.6159%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="82.3905%" y="1045" width="0.0123%" height="15" fill="rgb(230,223,9)" fg:x="6714" fg:w="1"/><text x="82.6405%" y="1055.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="82.3905%" y="1029" width="0.0123%" height="15" fill="rgb(212,33,31)" fg:x="6714" fg:w="1"/><text x="82.6405%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="82.3905%" y="1013" width="0.0123%" height="15" fill="rgb(218,141,5)" fg:x="6714" fg:w="1"/><text x="82.6405%" y="1023.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="82.3905%" y="997" width="0.0123%" height="15" fill="rgb(239,194,8)" fg:x="6714" fg:w="1"/><text x="82.6405%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="82.3905%" y="981" width="0.0123%" height="15" fill="rgb(225,119,29)" fg:x="6714" fg:w="1"/><text x="82.6405%" y="991.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="82.3905%" y="965" width="0.0123%" height="15" fill="rgb(233,32,3)" fg:x="6714" fg:w="1"/><text x="82.6405%" y="975.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (924 samples, 11.34%)</title><rect x="71.0762%" y="1509" width="11.3388%" height="15" fill="rgb(248,126,40)" fg:x="5792" fg:w="924"/><text x="71.3262%" y="1519.50">winit::event_loop..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (924 samples, 11.34%)</title><rect x="71.0762%" y="1493" width="11.3388%" height="15" fill="rgb(213,102,53)" fg:x="5792" fg:w="924"/><text x="71.3262%" y="1503.50">winit::platform_i..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (924 samples, 11.34%)</title><rect x="71.0762%" y="1477" width="11.3388%" height="15" fill="rgb(212,69,15)" fg:x="5792" fg:w="924"/><text x="71.3262%" y="1487.50">winit::platform_i..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (924 samples, 11.34%)</title><rect x="71.0762%" y="1461" width="11.3388%" height="15" fill="rgb(253,39,34)" fg:x="5792" fg:w="924"/><text x="71.3262%" y="1471.50">winit::platform_i..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (924 samples, 11.34%)</title><rect x="71.0762%" y="1445" width="11.3388%" height="15" fill="rgb(205,189,54)" fg:x="5792" fg:w="924"/><text x="71.3262%" y="1455.50">winit::platform_i..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (924 samples, 11.34%)</title><rect x="71.0762%" y="1429" width="11.3388%" height="15" fill="rgb(234,229,45)" fg:x="5792" fg:w="924"/><text x="71.3262%" y="1439.50">bevy_winit::winit..</text></g><g><title>bevy_app::app::App::update (924 samples, 11.34%)</title><rect x="71.0762%" y="1413" width="11.3388%" height="15" fill="rgb(243,79,48)" fg:x="5792" fg:w="924"/><text x="71.3262%" y="1423.50">bevy_app::app::Ap..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (924 samples, 11.34%)</title><rect x="71.0762%" y="1397" width="11.3388%" height="15" fill="rgb(206,71,50)" fg:x="5792" fg:w="924"/><text x="71.3262%" y="1407.50">&lt;bevy_ecs::schedu..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (924 samples, 11.34%)</title><rect x="71.0762%" y="1381" width="11.3388%" height="15" fill="rgb(209,32,17)" fg:x="5792" fg:w="924"/><text x="71.3262%" y="1391.50">bevy_ecs::schedul..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (924 samples, 11.34%)</title><rect x="71.0762%" y="1365" width="11.3388%" height="15" fill="rgb(219,229,6)" fg:x="5792" fg:w="924"/><text x="71.3262%" y="1375.50">&lt;bevy_ecs::schedu..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (653 samples, 8.01%)</title><rect x="74.4018%" y="1349" width="8.0133%" height="15" fill="rgb(226,25,27)" fg:x="6063" fg:w="653"/><text x="74.6518%" y="1359.50">&lt;bevy_ecs::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (653 samples, 8.01%)</title><rect x="74.4018%" y="1333" width="8.0133%" height="15" fill="rgb(218,185,23)" fg:x="6063" fg:w="653"/><text x="74.6518%" y="1343.50">&lt;alloc::box..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (278 samples, 3.41%)</title><rect x="79.0036%" y="1317" width="3.4115%" height="15" fill="rgb(242,123,5)" fg:x="6438" fg:w="278"/><text x="79.2536%" y="1327.50">bev..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (224 samples, 2.75%)</title><rect x="79.6662%" y="1301" width="2.7488%" height="15" fill="rgb(215,53,19)" fg:x="6492" fg:w="224"/><text x="79.9162%" y="1311.50">be..</text></g><g><title>bevy_ecs::world::World::resource_scope (224 samples, 2.75%)</title><rect x="79.6662%" y="1285" width="2.7488%" height="15" fill="rgb(233,20,30)" fg:x="6492" fg:w="224"/><text x="79.9162%" y="1295.50">be..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (224 samples, 2.75%)</title><rect x="79.6662%" y="1269" width="2.7488%" height="15" fill="rgb(209,67,20)" fg:x="6492" fg:w="224"/><text x="79.9162%" y="1279.50">be..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (223 samples, 2.74%)</title><rect x="79.6785%" y="1253" width="2.7365%" height="15" fill="rgb(227,181,50)" fg:x="6493" fg:w="223"/><text x="79.9285%" y="1263.50">be..</text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (170 samples, 2.09%)</title><rect x="80.3289%" y="1237" width="2.0861%" height="15" fill="rgb(252,75,38)" fg:x="6546" fg:w="170"/><text x="80.5789%" y="1247.50">b..</text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (170 samples, 2.09%)</title><rect x="80.3289%" y="1221" width="2.0861%" height="15" fill="rgb(235,9,33)" fg:x="6546" fg:w="170"/><text x="80.5789%" y="1231.50">&lt;..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (170 samples, 2.09%)</title><rect x="80.3289%" y="1205" width="2.0861%" height="15" fill="rgb(208,87,30)" fg:x="6546" fg:w="170"/><text x="80.5789%" y="1215.50">b..</text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (170 samples, 2.09%)</title><rect x="80.3289%" y="1189" width="2.0861%" height="15" fill="rgb(215,199,39)" fg:x="6546" fg:w="170"/><text x="80.5789%" y="1199.50">w..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (170 samples, 2.09%)</title><rect x="80.3289%" y="1173" width="2.0861%" height="15" fill="rgb(246,208,12)" fg:x="6546" fg:w="170"/><text x="80.5789%" y="1183.50">&lt;..</text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (170 samples, 2.09%)</title><rect x="80.3289%" y="1157" width="2.0861%" height="15" fill="rgb(206,195,10)" fg:x="6546" fg:w="170"/><text x="80.5789%" y="1167.50">w..</text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_replace (13 samples, 0.16%)</title><rect x="82.2555%" y="1141" width="0.1595%" height="15" fill="rgb(244,1,30)" fg:x="6703" fg:w="13"/><text x="82.5055%" y="1151.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (12 samples, 0.15%)</title><rect x="82.2678%" y="1125" width="0.1473%" height="15" fill="rgb(230,83,5)" fg:x="6704" fg:w="12"/><text x="82.5178%" y="1135.50"></text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::change (1 samples, 0.01%)</title><rect x="82.4027%" y="1109" width="0.0123%" height="15" fill="rgb(239,62,17)" fg:x="6715" fg:w="1"/><text x="82.6527%" y="1119.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (2 samples, 0.02%)</title><rect x="82.4150%" y="1109" width="0.0245%" height="15" fill="rgb(252,193,41)" fg:x="6716" fg:w="2"/><text x="82.6650%" y="1119.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (2 samples, 0.02%)</title><rect x="82.4150%" y="1093" width="0.0245%" height="15" fill="rgb(216,142,19)" fg:x="6716" fg:w="2"/><text x="82.6650%" y="1103.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (1 samples, 0.01%)</title><rect x="82.4273%" y="1077" width="0.0123%" height="15" fill="rgb(240,81,38)" fg:x="6717" fg:w="1"/><text x="82.6773%" y="1087.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (1 samples, 0.01%)</title><rect x="82.4273%" y="1061" width="0.0123%" height="15" fill="rgb(240,109,40)" fg:x="6717" fg:w="1"/><text x="82.6773%" y="1071.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (1 samples, 0.01%)</title><rect x="82.4273%" y="1045" width="0.0123%" height="15" fill="rgb(230,123,10)" fg:x="6717" fg:w="1"/><text x="82.6773%" y="1055.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (1 samples, 0.01%)</title><rect x="82.4273%" y="1029" width="0.0123%" height="15" fill="rgb(253,42,32)" fg:x="6717" fg:w="1"/><text x="82.6773%" y="1039.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (3 samples, 0.04%)</title><rect x="82.4150%" y="1157" width="0.0368%" height="15" fill="rgb(218,154,8)" fg:x="6716" fg:w="3"/><text x="82.6650%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3 samples, 0.04%)</title><rect x="82.4150%" y="1141" width="0.0368%" height="15" fill="rgb(216,197,10)" fg:x="6716" fg:w="3"/><text x="82.6650%" y="1151.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.04%)</title><rect x="82.4150%" y="1125" width="0.0368%" height="15" fill="rgb(223,107,12)" fg:x="6716" fg:w="3"/><text x="82.6650%" y="1135.50"></text></g><g><title>bevy_egui::systems::begin_frame (1 samples, 0.01%)</title><rect x="82.4396%" y="1109" width="0.0123%" height="15" fill="rgb(241,174,42)" fg:x="6718" fg:w="1"/><text x="82.6896%" y="1119.50"></text></g><g><title>egui::context::CtxRef::begin_frame (1 samples, 0.01%)</title><rect x="82.4396%" y="1093" width="0.0123%" height="15" fill="rgb(231,78,20)" fg:x="6718" fg:w="1"/><text x="82.6896%" y="1103.50"></text></g><g><title>egui::context::Context::begin_frame_mut (1 samples, 0.01%)</title><rect x="82.4396%" y="1077" width="0.0123%" height="15" fill="rgb(230,208,49)" fg:x="6718" fg:w="1"/><text x="82.6896%" y="1087.50"></text></g><g><title>egui::memory::Areas::set_state (1 samples, 0.01%)</title><rect x="82.4396%" y="1061" width="0.0123%" height="15" fill="rgb(238,11,34)" fg:x="6718" fg:w="1"/><text x="82.6896%" y="1071.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::insert (1 samples, 0.01%)</title><rect x="82.4396%" y="1045" width="0.0123%" height="15" fill="rgb(210,130,26)" fg:x="6718" fg:w="1"/><text x="82.6896%" y="1055.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="82.4396%" y="1029" width="0.0123%" height="15" fill="rgb(242,131,11)" fg:x="6718" fg:w="1"/><text x="82.6896%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="82.4396%" y="1013" width="0.0123%" height="15" fill="rgb(237,38,28)" fg:x="6718" fg:w="1"/><text x="82.6896%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="82.4396%" y="997" width="0.0123%" height="15" fill="rgb(244,180,43)" fg:x="6718" fg:w="1"/><text x="82.6896%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="82.4396%" y="981" width="0.0123%" height="15" fill="rgb(214,171,19)" fg:x="6718" fg:w="1"/><text x="82.6896%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="82.4396%" y="965" width="0.0123%" height="15" fill="rgb(252,101,45)" fg:x="6718" fg:w="1"/><text x="82.6896%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="82.4396%" y="949" width="0.0123%" height="15" fill="rgb(211,96,33)" fg:x="6718" fg:w="1"/><text x="82.6896%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId,bevy_wgpu::wgpu_resources::WgpuBindGroupInfo,ahash::random_state::RandomState&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="82.4518%" y="1013" width="0.0245%" height="15" fill="rgb(207,80,25)" fg:x="6719" fg:w="2"/><text x="82.7018%" y="1023.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="82.4518%" y="997" width="0.0245%" height="15" fill="rgb(225,15,35)" fg:x="6719" fg:w="2"/><text x="82.7018%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (2 samples, 0.02%)</title><rect x="82.4518%" y="981" width="0.0245%" height="15" fill="rgb(214,93,43)" fg:x="6719" fg:w="2"/><text x="82.7018%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="82.4518%" y="965" width="0.0245%" height="15" fill="rgb(248,42,37)" fg:x="6719" fg:w="2"/><text x="82.7018%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="82.4518%" y="949" width="0.0245%" height="15" fill="rgb(217,135,32)" fg:x="6719" fg:w="2"/><text x="82.7018%" y="959.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (3 samples, 0.04%)</title><rect x="82.4764%" y="1013" width="0.0368%" height="15" fill="rgb(216,74,28)" fg:x="6721" fg:w="3"/><text x="82.7264%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (3 samples, 0.04%)</title><rect x="82.4764%" y="997" width="0.0368%" height="15" fill="rgb(247,108,16)" fg:x="6721" fg:w="3"/><text x="82.7264%" y="1007.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (3 samples, 0.04%)</title><rect x="82.4764%" y="981" width="0.0368%" height="15" fill="rgb(205,219,30)" fg:x="6721" fg:w="3"/><text x="82.7264%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.04%)</title><rect x="82.4764%" y="965" width="0.0368%" height="15" fill="rgb(241,122,9)" fg:x="6721" fg:w="3"/><text x="82.7264%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.04%)</title><rect x="82.4764%" y="949" width="0.0368%" height="15" fill="rgb(216,148,50)" fg:x="6721" fg:w="3"/><text x="82.7264%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.5132%" y="917" width="0.0123%" height="15" fill="rgb(226,154,2)" fg:x="6724" fg:w="1"/><text x="82.7632%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="82.5132%" y="933" width="0.0245%" height="15" fill="rgb(220,128,1)" fg:x="6724" fg:w="2"/><text x="82.7632%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="82.5255%" y="917" width="0.0123%" height="15" fill="rgb(245,185,29)" fg:x="6725" fg:w="1"/><text x="82.7755%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="82.5255%" y="901" width="0.0123%" height="15" fill="rgb(243,161,2)" fg:x="6725" fg:w="1"/><text x="82.7755%" y="911.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.01%)</title><rect x="82.5255%" y="885" width="0.0123%" height="15" fill="rgb(249,215,17)" fg:x="6725" fg:w="1"/><text x="82.7755%" y="895.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (8 samples, 0.10%)</title><rect x="82.4518%" y="1029" width="0.0982%" height="15" fill="rgb(237,67,11)" fg:x="6719" fg:w="8"/><text x="82.7018%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.04%)</title><rect x="82.5132%" y="1013" width="0.0368%" height="15" fill="rgb(239,17,24)" fg:x="6724" fg:w="3"/><text x="82.7632%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.04%)</title><rect x="82.5132%" y="997" width="0.0368%" height="15" fill="rgb(215,97,29)" fg:x="6724" fg:w="3"/><text x="82.7632%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.04%)</title><rect x="82.5132%" y="981" width="0.0368%" height="15" fill="rgb(253,228,42)" fg:x="6724" fg:w="3"/><text x="82.7632%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.04%)</title><rect x="82.5132%" y="965" width="0.0368%" height="15" fill="rgb(240,85,2)" fg:x="6724" fg:w="3"/><text x="82.7632%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="82.5132%" y="949" width="0.0368%" height="15" fill="rgb(214,155,4)" fg:x="6724" fg:w="3"/><text x="82.7632%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="82.5377%" y="933" width="0.0123%" height="15" fill="rgb(247,120,22)" fg:x="6726" fg:w="1"/><text x="82.7877%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="82.5377%" y="917" width="0.0123%" height="15" fill="rgb(211,208,6)" fg:x="6726" fg:w="1"/><text x="82.7877%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="82.5377%" y="901" width="0.0123%" height="15" fill="rgb(235,99,41)" fg:x="6726" fg:w="1"/><text x="82.7877%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="82.5377%" y="885" width="0.0123%" height="15" fill="rgb(223,28,8)" fg:x="6726" fg:w="1"/><text x="82.7877%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="82.5377%" y="869" width="0.0123%" height="15" fill="rgb(212,71,20)" fg:x="6726" fg:w="1"/><text x="82.7877%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="82.5377%" y="853" width="0.0123%" height="15" fill="rgb(206,85,3)" fg:x="6726" fg:w="1"/><text x="82.7877%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="82.5500%" y="1029" width="0.0123%" height="15" fill="rgb(244,180,11)" fg:x="6727" fg:w="1"/><text x="82.8000%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.5500%" y="1013" width="0.0123%" height="15" fill="rgb(223,16,21)" fg:x="6727" fg:w="1"/><text x="82.8000%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.5500%" y="997" width="0.0123%" height="15" fill="rgb(238,85,42)" fg:x="6727" fg:w="1"/><text x="82.8000%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.5500%" y="981" width="0.0123%" height="15" fill="rgb(205,85,8)" fg:x="6727" fg:w="1"/><text x="82.8000%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="82.5500%" y="965" width="0.0123%" height="15" fill="rgb(217,190,15)" fg:x="6727" fg:w="1"/><text x="82.8000%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="82.5500%" y="949" width="0.0123%" height="15" fill="rgb(243,192,23)" fg:x="6727" fg:w="1"/><text x="82.8000%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="82.5500%" y="933" width="0.0123%" height="15" fill="rgb(223,220,37)" fg:x="6727" fg:w="1"/><text x="82.8000%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="82.5500%" y="917" width="0.0123%" height="15" fill="rgb(208,41,17)" fg:x="6727" fg:w="1"/><text x="82.8000%" y="927.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="82.5500%" y="901" width="0.0123%" height="15" fill="rgb(224,188,7)" fg:x="6727" fg:w="1"/><text x="82.8000%" y="911.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group::{{closure}} (1 samples, 0.01%)</title><rect x="82.5500%" y="885" width="0.0123%" height="15" fill="rgb(236,16,50)" fg:x="6727" fg:w="1"/><text x="82.8000%" y="895.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (10 samples, 0.12%)</title><rect x="82.4518%" y="1157" width="0.1227%" height="15" fill="rgb(238,6,24)" fg:x="6719" fg:w="10"/><text x="82.7018%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (10 samples, 0.12%)</title><rect x="82.4518%" y="1141" width="0.1227%" height="15" fill="rgb(253,67,45)" fg:x="6719" fg:w="10"/><text x="82.7018%" y="1151.50"></text></g><g><title>core::ops::function::Fn::call (10 samples, 0.12%)</title><rect x="82.4518%" y="1125" width="0.1227%" height="15" fill="rgb(210,89,32)" fg:x="6719" fg:w="10"/><text x="82.7018%" y="1135.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (10 samples, 0.12%)</title><rect x="82.4518%" y="1109" width="0.1227%" height="15" fill="rgb(208,89,9)" fg:x="6719" fg:w="10"/><text x="82.7018%" y="1119.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (10 samples, 0.12%)</title><rect x="82.4518%" y="1093" width="0.1227%" height="15" fill="rgb(222,180,44)" fg:x="6719" fg:w="10"/><text x="82.7018%" y="1103.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (10 samples, 0.12%)</title><rect x="82.4518%" y="1077" width="0.1227%" height="15" fill="rgb(250,181,46)" fg:x="6719" fg:w="10"/><text x="82.7018%" y="1087.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (10 samples, 0.12%)</title><rect x="82.4518%" y="1061" width="0.1227%" height="15" fill="rgb(210,190,26)" fg:x="6719" fg:w="10"/><text x="82.7018%" y="1071.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (10 samples, 0.12%)</title><rect x="82.4518%" y="1045" width="0.1227%" height="15" fill="rgb(253,49,13)" fg:x="6719" fg:w="10"/><text x="82.7018%" y="1055.50"></text></g><g><title>wgpu::Device::create_bind_group (1 samples, 0.01%)</title><rect x="82.5623%" y="1029" width="0.0123%" height="15" fill="rgb(240,184,42)" fg:x="6728" fg:w="1"/><text x="82.8123%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (1 samples, 0.01%)</title><rect x="82.5623%" y="1013" width="0.0123%" height="15" fill="rgb(246,59,37)" fg:x="6728" fg:w="1"/><text x="82.8123%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;wgpu_core::binding_model::BindGroupEntry&gt;&gt; (1 samples, 0.01%)</title><rect x="82.5623%" y="997" width="0.0123%" height="15" fill="rgb(207,134,54)" fg:x="6728" fg:w="1"/><text x="82.8123%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.5623%" y="981" width="0.0123%" height="15" fill="rgb(250,122,24)" fg:x="6728" fg:w="1"/><text x="82.8123%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[wgpu_core::binding_model::BindGroupEntry]&gt; (1 samples, 0.01%)</title><rect x="82.5623%" y="965" width="0.0123%" height="15" fill="rgb(239,206,3)" fg:x="6728" fg:w="1"/><text x="82.8123%" y="975.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (2 samples, 0.02%)</title><rect x="82.5745%" y="1093" width="0.0245%" height="15" fill="rgb(253,220,32)" fg:x="6729" fg:w="2"/><text x="82.8245%" y="1103.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter_with_id (2 samples, 0.02%)</title><rect x="82.5745%" y="1077" width="0.0245%" height="15" fill="rgb(209,217,48)" fg:x="6729" fg:w="2"/><text x="82.8245%" y="1087.50"></text></g><g><title>bevy_app::event::internal_event_reader (1 samples, 0.01%)</title><rect x="82.5868%" y="1061" width="0.0123%" height="15" fill="rgb(242,91,39)" fg:x="6730" fg:w="1"/><text x="82.8368%" y="1071.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (3 samples, 0.04%)</title><rect x="82.5745%" y="1157" width="0.0368%" height="15" fill="rgb(228,4,13)" fg:x="6729" fg:w="3"/><text x="82.8245%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3 samples, 0.04%)</title><rect x="82.5745%" y="1141" width="0.0368%" height="15" fill="rgb(223,133,4)" fg:x="6729" fg:w="3"/><text x="82.8245%" y="1151.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.04%)</title><rect x="82.5745%" y="1125" width="0.0368%" height="15" fill="rgb(215,105,30)" fg:x="6729" fg:w="3"/><text x="82.8245%" y="1135.50"></text></g><g><title>bevy_egui::systems::process_input (3 samples, 0.04%)</title><rect x="82.5745%" y="1109" width="0.0368%" height="15" fill="rgb(230,9,4)" fg:x="6729" fg:w="3"/><text x="82.8245%" y="1119.50"></text></g><g><title>bevy_egui::systems::update_window_contexts (1 samples, 0.01%)</title><rect x="82.5991%" y="1093" width="0.0123%" height="15" fill="rgb(248,15,2)" fg:x="6731" fg:w="1"/><text x="82.8491%" y="1103.50"></text></g><g><title>bevy_window::window::Window::id (1 samples, 0.01%)</title><rect x="82.5991%" y="1077" width="0.0123%" height="15" fill="rgb(208,210,22)" fg:x="6731" fg:w="1"/><text x="82.8491%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="82.6236%" y="981" width="0.0123%" height="15" fill="rgb(208,112,41)" fg:x="6733" fg:w="1"/><text x="82.8736%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="82.6236%" y="965" width="0.0123%" height="15" fill="rgb(232,83,14)" fg:x="6733" fg:w="1"/><text x="82.8736%" y="975.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.6236%" y="949" width="0.0123%" height="15" fill="rgb(229,65,11)" fg:x="6733" fg:w="1"/><text x="82.8736%" y="959.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (2 samples, 0.02%)</title><rect x="82.6236%" y="1013" width="0.0245%" height="15" fill="rgb(228,126,24)" fg:x="6733" fg:w="2"/><text x="82.8736%" y="1023.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}} (2 samples, 0.02%)</title><rect x="82.6236%" y="997" width="0.0245%" height="15" fill="rgb(218,66,33)" fg:x="6733" fg:w="2"/><text x="82.8736%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="82.6359%" y="981" width="0.0123%" height="15" fill="rgb(251,49,52)" fg:x="6734" fg:w="1"/><text x="82.8859%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="82.6359%" y="965" width="0.0123%" height="15" fill="rgb(219,46,37)" fg:x="6734" fg:w="1"/><text x="82.8859%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="82.6359%" y="949" width="0.0123%" height="15" fill="rgb(213,53,49)" fg:x="6734" fg:w="1"/><text x="82.8859%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold::enumerate::{{closure}} (1 samples, 0.01%)</title><rect x="82.6359%" y="933" width="0.0123%" height="15" fill="rgb(214,134,1)" fg:x="6734" fg:w="1"/><text x="82.8859%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.01%)</title><rect x="82.6359%" y="917" width="0.0123%" height="15" fill="rgb(208,139,43)" fg:x="6734" fg:w="1"/><text x="82.8859%" y="927.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="82.6359%" y="901" width="0.0123%" height="15" fill="rgb(231,105,35)" fg:x="6734" fg:w="1"/><text x="82.8859%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="82.6482%" y="1013" width="0.0123%" height="15" fill="rgb(247,189,9)" fg:x="6735" fg:w="1"/><text x="82.8982%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.6482%" y="997" width="0.0123%" height="15" fill="rgb(252,48,51)" fg:x="6735" fg:w="1"/><text x="82.8982%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.6482%" y="981" width="0.0123%" height="15" fill="rgb(209,121,1)" fg:x="6735" fg:w="1"/><text x="82.8982%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="82.6482%" y="965" width="0.0123%" height="15" fill="rgb(231,40,26)" fg:x="6735" fg:w="1"/><text x="82.8982%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.6482%" y="949" width="0.0123%" height="15" fill="rgb(251,8,13)" fg:x="6735" fg:w="1"/><text x="82.8982%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="82.6482%" y="933" width="0.0123%" height="15" fill="rgb(231,110,2)" fg:x="6735" fg:w="1"/><text x="82.8982%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="82.6482%" y="917" width="0.0123%" height="15" fill="rgb(216,153,22)" fg:x="6735" fg:w="1"/><text x="82.8982%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="82.6482%" y="901" width="0.0123%" height="15" fill="rgb(249,116,49)" fg:x="6735" fg:w="1"/><text x="82.8982%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="82.6604%" y="1013" width="0.0123%" height="15" fill="rgb(230,89,2)" fg:x="6736" fg:w="1"/><text x="82.9104%" y="1023.50"></text></g><g><title>&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="82.6604%" y="997" width="0.0123%" height="15" fill="rgb(231,125,23)" fg:x="6736" fg:w="1"/><text x="82.9104%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="82.6604%" y="981" width="0.0123%" height="15" fill="rgb(212,217,18)" fg:x="6736" fg:w="1"/><text x="82.9104%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="82.6604%" y="965" width="0.0123%" height="15" fill="rgb(210,21,33)" fg:x="6736" fg:w="1"/><text x="82.9104%" y="975.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="82.6604%" y="949" width="0.0123%" height="15" fill="rgb(241,97,9)" fg:x="6736" fg:w="1"/><text x="82.9104%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="82.6973%" y="949" width="0.0123%" height="15" fill="rgb(221,35,31)" fg:x="6739" fg:w="1"/><text x="82.9473%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="82.7095%" y="949" width="0.0123%" height="15" fill="rgb(251,23,23)" fg:x="6740" fg:w="1"/><text x="82.9595%" y="959.50"></text></g><g><title>&lt;f32 as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="82.7095%" y="933" width="0.0123%" height="15" fill="rgb(227,165,2)" fg:x="6740" fg:w="1"/><text x="82.9595%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="82.7095%" y="917" width="0.0123%" height="15" fill="rgb(242,24,2)" fg:x="6740" fg:w="1"/><text x="82.9595%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="82.7095%" y="901" width="0.0123%" height="15" fill="rgb(242,138,51)" fg:x="6740" fg:w="1"/><text x="82.9595%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="82.7095%" y="885" width="0.0123%" height="15" fill="rgb(220,219,5)" fg:x="6740" fg:w="1"/><text x="82.9595%" y="895.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal (1 samples, 0.01%)</title><rect x="82.7218%" y="901" width="0.0123%" height="15" fill="rgb(247,53,29)" fg:x="6741" fg:w="1"/><text x="82.9718%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (3 samples, 0.04%)</title><rect x="82.7218%" y="949" width="0.0368%" height="15" fill="rgb(233,43,39)" fg:x="6741" fg:w="3"/><text x="82.9718%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (3 samples, 0.04%)</title><rect x="82.7218%" y="933" width="0.0368%" height="15" fill="rgb(230,128,54)" fg:x="6741" fg:w="3"/><text x="82.9718%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (3 samples, 0.04%)</title><rect x="82.7218%" y="917" width="0.0368%" height="15" fill="rgb(218,20,12)" fg:x="6741" fg:w="3"/><text x="82.9718%" y="927.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="82.7341%" y="901" width="0.0245%" height="15" fill="rgb(206,51,14)" fg:x="6742" fg:w="2"/><text x="82.9841%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (1 samples, 0.01%)</title><rect x="82.7463%" y="885" width="0.0123%" height="15" fill="rgb(223,16,35)" fg:x="6743" fg:w="1"/><text x="82.9963%" y="895.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal (1 samples, 0.01%)</title><rect x="82.7463%" y="869" width="0.0123%" height="15" fill="rgb(226,165,37)" fg:x="6743" fg:w="1"/><text x="82.9963%" y="879.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal (2 samples, 0.02%)</title><rect x="82.7586%" y="949" width="0.0245%" height="15" fill="rgb(240,26,21)" fg:x="6744" fg:w="2"/><text x="83.0086%" y="959.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (31 samples, 0.38%)</title><rect x="82.4150%" y="1365" width="0.3804%" height="15" fill="rgb(240,72,46)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1375.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (31 samples, 0.38%)</title><rect x="82.4150%" y="1349" width="0.3804%" height="15" fill="rgb(211,33,41)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (31 samples, 0.38%)</title><rect x="82.4150%" y="1333" width="0.3804%" height="15" fill="rgb(224,157,46)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1343.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (31 samples, 0.38%)</title><rect x="82.4150%" y="1317" width="0.3804%" height="15" fill="rgb(223,59,19)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1327.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (31 samples, 0.38%)</title><rect x="82.4150%" y="1301" width="0.3804%" height="15" fill="rgb(239,187,1)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1311.50"></text></g><g><title>async_executor::Executor::try_tick (31 samples, 0.38%)</title><rect x="82.4150%" y="1285" width="0.3804%" height="15" fill="rgb(226,95,9)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1295.50"></text></g><g><title>async_task::runnable::Runnable::run (31 samples, 0.38%)</title><rect x="82.4150%" y="1269" width="0.3804%" height="15" fill="rgb(234,61,54)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1279.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (31 samples, 0.38%)</title><rect x="82.4150%" y="1253" width="0.3804%" height="15" fill="rgb(205,209,47)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.38%)</title><rect x="82.4150%" y="1237" width="0.3804%" height="15" fill="rgb(228,7,43)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1247.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (31 samples, 0.38%)</title><rect x="82.4150%" y="1221" width="0.3804%" height="15" fill="rgb(240,217,52)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (31 samples, 0.38%)</title><rect x="82.4150%" y="1205" width="0.3804%" height="15" fill="rgb(211,178,21)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1215.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (31 samples, 0.38%)</title><rect x="82.4150%" y="1189" width="0.3804%" height="15" fill="rgb(205,25,34)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1199.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (31 samples, 0.38%)</title><rect x="82.4150%" y="1173" width="0.3804%" height="15" fill="rgb(209,57,11)" fg:x="6716" fg:w="31"/><text x="82.6650%" y="1183.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (15 samples, 0.18%)</title><rect x="82.6114%" y="1157" width="0.1841%" height="15" fill="rgb(221,99,2)" fg:x="6732" fg:w="15"/><text x="82.8614%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (15 samples, 0.18%)</title><rect x="82.6114%" y="1141" width="0.1841%" height="15" fill="rgb(232,79,22)" fg:x="6732" fg:w="15"/><text x="82.8614%" y="1151.50"></text></g><g><title>core::ops::function::Fn::call (15 samples, 0.18%)</title><rect x="82.6114%" y="1125" width="0.1841%" height="15" fill="rgb(221,145,32)" fg:x="6732" fg:w="15"/><text x="82.8614%" y="1135.50"></text></g><g><title>bevy_ui::flex::flex_node_system (15 samples, 0.18%)</title><rect x="82.6114%" y="1109" width="0.1841%" height="15" fill="rgb(236,133,36)" fg:x="6732" fg:w="15"/><text x="82.8614%" y="1119.50"></text></g><g><title>bevy_ui::flex::FlexSurface::compute_window_layouts (15 samples, 0.18%)</title><rect x="82.6114%" y="1093" width="0.1841%" height="15" fill="rgb(208,224,44)" fg:x="6732" fg:w="15"/><text x="82.8614%" y="1103.50"></text></g><g><title>stretch::node::Stretch::compute_layout (15 samples, 0.18%)</title><rect x="82.6114%" y="1077" width="0.1841%" height="15" fill="rgb(235,143,15)" fg:x="6732" fg:w="15"/><text x="82.8614%" y="1087.50"></text></g><g><title>stretch::forest::Forest::compute_layout (15 samples, 0.18%)</title><rect x="82.6114%" y="1061" width="0.1841%" height="15" fill="rgb(249,83,27)" fg:x="6732" fg:w="15"/><text x="82.8614%" y="1071.50"></text></g><g><title>stretch::forest::Forest::compute_layout (15 samples, 0.18%)</title><rect x="82.6114%" y="1045" width="0.1841%" height="15" fill="rgb(238,226,19)" fg:x="6732" fg:w="15"/><text x="82.8614%" y="1055.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal (15 samples, 0.18%)</title><rect x="82.6114%" y="1029" width="0.1841%" height="15" fill="rgb(226,206,27)" fg:x="6732" fg:w="15"/><text x="82.8614%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (10 samples, 0.12%)</title><rect x="82.6727%" y="1013" width="0.1227%" height="15" fill="rgb(251,182,9)" fg:x="6737" fg:w="10"/><text x="82.9227%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (10 samples, 0.12%)</title><rect x="82.6727%" y="997" width="0.1227%" height="15" fill="rgb(212,140,41)" fg:x="6737" fg:w="10"/><text x="82.9227%" y="1007.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (10 samples, 0.12%)</title><rect x="82.6727%" y="981" width="0.1227%" height="15" fill="rgb(220,106,18)" fg:x="6737" fg:w="10"/><text x="82.9227%" y="991.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}} (10 samples, 0.12%)</title><rect x="82.6727%" y="965" width="0.1227%" height="15" fill="rgb(252,46,41)" fg:x="6737" fg:w="10"/><text x="82.9227%" y="975.50"></text></g><g><title>stretch::geometry::Rect&lt;T&gt;::main (1 samples, 0.01%)</title><rect x="82.7832%" y="949" width="0.0123%" height="15" fill="rgb(209,222,15)" fg:x="6746" fg:w="1"/><text x="83.0332%" y="959.50"></text></g><g><title>egui::animation_manager::AnimationManager::animate_bool (1 samples, 0.01%)</title><rect x="82.7954%" y="1189" width="0.0123%" height="15" fill="rgb(233,83,50)" fg:x="6747" fg:w="1"/><text x="83.0454%" y="1199.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (2 samples, 0.02%)</title><rect x="82.7954%" y="1365" width="0.0245%" height="15" fill="rgb(205,212,0)" fg:x="6747" fg:w="2"/><text x="83.0454%" y="1375.50"></text></g><g><title>bevy_ecs::system::system::System::run (2 samples, 0.02%)</title><rect x="82.7954%" y="1349" width="0.0245%" height="15" fill="rgb(235,117,51)" fg:x="6747" fg:w="2"/><text x="83.0454%" y="1359.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.02%)</title><rect x="82.7954%" y="1333" width="0.0245%" height="15" fill="rgb(233,133,48)" fg:x="6747" fg:w="2"/><text x="83.0454%" y="1343.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="82.7954%" y="1317" width="0.0245%" height="15" fill="rgb(219,3,2)" fg:x="6747" fg:w="2"/><text x="83.0454%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="82.7954%" y="1301" width="0.0245%" height="15" fill="rgb(225,80,52)" fg:x="6747" fg:w="2"/><text x="83.0454%" y="1311.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="82.7954%" y="1285" width="0.0245%" height="15" fill="rgb(235,195,42)" fg:x="6747" fg:w="2"/><text x="83.0454%" y="1295.50"></text></g><g><title>bevy_console::console_system (2 samples, 0.02%)</title><rect x="82.7954%" y="1269" width="0.0245%" height="15" fill="rgb(240,207,46)" fg:x="6747" fg:w="2"/><text x="83.0454%" y="1279.50"></text></g><g><title>egui::containers::window::Window::show (2 samples, 0.02%)</title><rect x="82.7954%" y="1253" width="0.0245%" height="15" fill="rgb(236,112,50)" fg:x="6747" fg:w="2"/><text x="83.0454%" y="1263.50"></text></g><g><title>egui::containers::window::Window::show_impl (2 samples, 0.02%)</title><rect x="82.7954%" y="1237" width="0.0245%" height="15" fill="rgb(249,151,27)" fg:x="6747" fg:w="2"/><text x="83.0454%" y="1247.50"></text></g><g><title>egui::containers::area::Area::show_open_close_animation (2 samples, 0.02%)</title><rect x="82.7954%" y="1221" width="0.0245%" height="15" fill="rgb(253,223,52)" fg:x="6747" fg:w="2"/><text x="83.0454%" y="1231.50"></text></g><g><title>egui::context::Context::animate_bool (2 samples, 0.02%)</title><rect x="82.7954%" y="1205" width="0.0245%" height="15" fill="rgb(215,55,33)" fg:x="6747" fg:w="2"/><text x="83.0454%" y="1215.50"></text></g><g><title>epaint::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="82.8077%" y="1189" width="0.0123%" height="15" fill="rgb(207,24,17)" fg:x="6748" fg:w="1"/><text x="83.0577%" y="1199.50"></text></g><g><title>atomic_refcell::AtomicRefCell&lt;T&gt;::borrow_mut (1 samples, 0.01%)</title><rect x="82.8077%" y="1173" width="0.0123%" height="15" fill="rgb(218,169,32)" fg:x="6748" fg:w="1"/><text x="83.0577%" y="1183.50"></text></g><g><title>atomic_refcell::AtomicBorrowRefMut::try_new (1 samples, 0.01%)</title><rect x="82.8077%" y="1157" width="0.0123%" height="15" fill="rgb(209,210,6)" fg:x="6748" fg:w="1"/><text x="83.0577%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="82.8077%" y="1141" width="0.0123%" height="15" fill="rgb(225,208,8)" fg:x="6748" fg:w="1"/><text x="83.0577%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="82.8077%" y="1125" width="0.0123%" height="15" fill="rgb(238,14,32)" fg:x="6748" fg:w="1"/><text x="83.0577%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::device::life::LifetimeTracker&lt;gfx_backend_vulkan::Backend&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="82.8200%" y="933" width="0.0123%" height="15" fill="rgb(211,137,3)" fg:x="6749" fg:w="1"/><text x="83.0700%" y="943.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="82.8200%" y="917" width="0.0123%" height="15" fill="rgb(207,171,19)" fg:x="6749" fg:w="1"/><text x="83.0700%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="82.8200%" y="901" width="0.0123%" height="15" fill="rgb(250,80,8)" fg:x="6749" fg:w="1"/><text x="83.0700%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="82.8200%" y="885" width="0.0123%" height="15" fill="rgb(209,103,53)" fg:x="6749" fg:w="1"/><text x="83.0700%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="82.8200%" y="869" width="0.0123%" height="15" fill="rgb(233,198,10)" fg:x="6749" fg:w="1"/><text x="83.0700%" y="879.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="82.8322%" y="933" width="0.0123%" height="15" fill="rgb(236,125,25)" fg:x="6750" fg:w="1"/><text x="83.0822%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="82.8322%" y="917" width="0.0123%" height="15" fill="rgb(254,182,48)" fg:x="6750" fg:w="1"/><text x="83.0822%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="82.8322%" y="901" width="0.0123%" height="15" fill="rgb(216,108,44)" fg:x="6750" fg:w="1"/><text x="83.0822%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="82.8322%" y="885" width="0.0123%" height="15" fill="rgb(222,72,39)" fg:x="6750" fg:w="1"/><text x="83.0822%" y="895.50"></text></g><g><title>wgpu::BufferSlice::map_async (3 samples, 0.04%)</title><rect x="82.8200%" y="981" width="0.0368%" height="15" fill="rgb(252,70,39)" fg:x="6749" fg:w="3"/><text x="83.0700%" y="991.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (3 samples, 0.04%)</title><rect x="82.8200%" y="965" width="0.0368%" height="15" fill="rgb(243,99,34)" fg:x="6749" fg:w="3"/><text x="83.0700%" y="975.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (3 samples, 0.04%)</title><rect x="82.8200%" y="949" width="0.0368%" height="15" fill="rgb(252,109,12)" fg:x="6749" fg:w="3"/><text x="83.0700%" y="959.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="82.8445%" y="933" width="0.0123%" height="15" fill="rgb(211,186,10)" fg:x="6751" fg:w="1"/><text x="83.0945%" y="943.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (9 samples, 0.11%)</title><rect x="82.8568%" y="917" width="0.1104%" height="15" fill="rgb(246,90,8)" fg:x="6752" fg:w="9"/><text x="83.1068%" y="927.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::maintain (9 samples, 0.11%)</title><rect x="82.8568%" y="901" width="0.1104%" height="15" fill="rgb(226,91,24)" fg:x="6752" fg:w="9"/><text x="83.1068%" y="911.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::recycle (9 samples, 0.11%)</title><rect x="82.8568%" y="885" width="0.1104%" height="15" fill="rgb(216,28,44)" fg:x="6752" fg:w="9"/><text x="83.1068%" y="895.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::reset (9 samples, 0.11%)</title><rect x="82.8568%" y="869" width="0.1104%" height="15" fill="rgb(229,36,0)" fg:x="6752" fg:w="9"/><text x="83.1068%" y="879.50"></text></g><g><title>ash::device::DeviceV1_0::reset_command_buffer (9 samples, 0.11%)</title><rect x="82.8568%" y="853" width="0.1104%" height="15" fill="rgb(245,97,18)" fg:x="6752" fg:w="9"/><text x="83.1068%" y="863.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::reset_command_buffer (9 samples, 0.11%)</title><rect x="82.8568%" y="837" width="0.1104%" height="15" fill="rgb(241,97,54)" fg:x="6752" fg:w="9"/><text x="83.1068%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (9 samples, 0.11%)</title><rect x="82.8568%" y="821" width="0.1104%" height="15" fill="rgb(234,125,17)" fg:x="6752" fg:w="9"/><text x="83.1068%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="82.9181%" y="805" width="0.0491%" height="15" fill="rgb(228,172,39)" fg:x="6757" fg:w="4"/><text x="83.1681%" y="815.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life (1 samples, 0.01%)</title><rect x="82.9672%" y="917" width="0.0123%" height="15" fill="rgb(227,169,1)" fg:x="6761" fg:w="1"/><text x="83.2172%" y="927.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life_internal (1 samples, 0.01%)</title><rect x="82.9672%" y="901" width="0.0123%" height="15" fill="rgb(206,13,35)" fg:x="6761" fg:w="1"/><text x="83.2172%" y="911.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="82.9672%" y="885" width="0.0123%" height="15" fill="rgb(211,117,30)" fg:x="6761" fg:w="1"/><text x="83.2172%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="82.9672%" y="869" width="0.0123%" height="15" fill="rgb(230,198,4)" fg:x="6761" fg:w="1"/><text x="83.2172%" y="879.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.01%)</title><rect x="82.9672%" y="853" width="0.0123%" height="15" fill="rgb(213,87,54)" fg:x="6761" fg:w="1"/><text x="83.2172%" y="863.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="82.9672%" y="837" width="0.0123%" height="15" fill="rgb(248,43,22)" fg:x="6761" fg:w="1"/><text x="83.2172%" y="847.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="82.9672%" y="821" width="0.0123%" height="15" fill="rgb(213,175,48)" fg:x="6761" fg:w="1"/><text x="83.2172%" y="831.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="82.9672%" y="805" width="0.0123%" height="15" fill="rgb(252,55,9)" fg:x="6761" fg:w="1"/><text x="83.2172%" y="815.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="82.9672%" y="789" width="0.0123%" height="15" fill="rgb(231,72,33)" fg:x="6761" fg:w="1"/><text x="83.2172%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="82.9672%" y="773" width="0.0123%" height="15" fill="rgb(213,2,54)" fg:x="6761" fg:w="1"/><text x="83.2172%" y="783.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (3 samples, 0.04%)</title><rect x="82.9795%" y="901" width="0.0368%" height="15" fill="rgb(208,88,25)" fg:x="6762" fg:w="3"/><text x="83.2295%" y="911.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (3 samples, 0.04%)</title><rect x="82.9795%" y="885" width="0.0368%" height="15" fill="rgb(215,117,13)" fg:x="6762" fg:w="3"/><text x="83.2295%" y="895.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::cleanup (3 samples, 0.04%)</title><rect x="82.9795%" y="869" width="0.0368%" height="15" fill="rgb(243,147,21)" fg:x="6762" fg:w="3"/><text x="83.2295%" y="879.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (2 samples, 0.02%)</title><rect x="82.9918%" y="853" width="0.0245%" height="15" fill="rgb(208,215,36)" fg:x="6763" fg:w="2"/><text x="83.2418%" y="863.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (1 samples, 0.01%)</title><rect x="83.0040%" y="837" width="0.0123%" height="15" fill="rgb(238,187,24)" fg:x="6764" fg:w="1"/><text x="83.2540%" y="847.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="83.0040%" y="821" width="0.0123%" height="15" fill="rgb(214,173,11)" fg:x="6764" fg:w="1"/><text x="83.2540%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;gfx_backend_vulkan::native::DescriptorSetLayout&gt;&gt; (1 samples, 0.01%)</title><rect x="83.0163%" y="885" width="0.0123%" height="15" fill="rgb(222,71,20)" fg:x="6765" fg:w="1"/><text x="83.2663%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.0163%" y="869" width="0.0123%" height="15" fill="rgb(242,125,4)" fg:x="6765" fg:w="1"/><text x="83.2663%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;gfx_backend_vulkan::native::DescriptorSetLayout,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="83.0163%" y="853" width="0.0123%" height="15" fill="rgb(217,101,52)" fg:x="6765" fg:w="1"/><text x="83.2663%" y="863.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.0163%" y="837" width="0.0123%" height="15" fill="rgb(223,2,50)" fg:x="6765" fg:w="1"/><text x="83.2663%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="83.0163%" y="821" width="0.0123%" height="15" fill="rgb(225,197,9)" fg:x="6765" fg:w="1"/><text x="83.2663%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="83.0163%" y="805" width="0.0123%" height="15" fill="rgb(234,76,27)" fg:x="6765" fg:w="1"/><text x="83.2663%" y="815.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="83.0163%" y="789" width="0.0123%" height="15" fill="rgb(213,161,26)" fg:x="6765" fg:w="1"/><text x="83.2663%" y="799.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="83.0163%" y="773" width="0.0123%" height="15" fill="rgb(210,228,2)" fg:x="6765" fg:w="1"/><text x="83.2663%" y="783.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.0163%" y="757" width="0.0123%" height="15" fill="rgb(235,4,16)" fg:x="6765" fg:w="1"/><text x="83.2663%" y="767.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::destroy_buffer (3 samples, 0.04%)</title><rect x="83.0286%" y="885" width="0.0368%" height="15" fill="rgb(235,83,42)" fg:x="6766" fg:w="3"/><text x="83.2786%" y="895.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_buffer (3 samples, 0.04%)</title><rect x="83.0286%" y="869" width="0.0368%" height="15" fill="rgb(207,116,39)" fg:x="6766" fg:w="3"/><text x="83.2786%" y="879.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::destroy_buffer (3 samples, 0.04%)</title><rect x="83.0286%" y="853" width="0.0368%" height="15" fill="rgb(253,206,9)" fg:x="6766" fg:w="3"/><text x="83.2786%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="83.0286%" y="837" width="0.0368%" height="15" fill="rgb(234,32,47)" fg:x="6766" fg:w="3"/><text x="83.2786%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="83.0286%" y="821" width="0.0368%" height="15" fill="rgb(247,40,39)" fg:x="6766" fg:w="3"/><text x="83.2786%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="83.0531%" y="805" width="0.0123%" height="15" fill="rgb(236,199,13)" fg:x="6768" fg:w="1"/><text x="83.3031%" y="815.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="83.0531%" y="789" width="0.0123%" height="15" fill="rgb(240,127,44)" fg:x="6768" fg:w="1"/><text x="83.3031%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.01%)</title><rect x="83.0777%" y="725" width="0.0123%" height="15" fill="rgb(248,220,47)" fg:x="6770" fg:w="1"/><text x="83.3277%" y="735.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (1 samples, 0.01%)</title><rect x="83.0777%" y="709" width="0.0123%" height="15" fill="rgb(240,78,9)" fg:x="6770" fg:w="1"/><text x="83.3277%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.01%)</title><rect x="83.0777%" y="693" width="0.0123%" height="15" fill="rgb(245,119,5)" fg:x="6770" fg:w="1"/><text x="83.3277%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="83.0777%" y="677" width="0.0123%" height="15" fill="rgb(238,175,31)" fg:x="6770" fg:w="1"/><text x="83.3277%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="83.0777%" y="661" width="0.0123%" height="15" fill="rgb(232,140,42)" fg:x="6770" fg:w="1"/><text x="83.3277%" y="671.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="83.0777%" y="645" width="0.0123%" height="15" fill="rgb(218,179,7)" fg:x="6770" fg:w="1"/><text x="83.3277%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="83.0777%" y="629" width="0.0123%" height="15" fill="rgb(232,79,27)" fg:x="6770" fg:w="1"/><text x="83.3277%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="83.0777%" y="613" width="0.0123%" height="15" fill="rgb(247,11,19)" fg:x="6770" fg:w="1"/><text x="83.3277%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="83.0777%" y="597" width="0.0123%" height="15" fill="rgb(216,171,54)" fg:x="6770" fg:w="1"/><text x="83.3277%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="83.0777%" y="581" width="0.0123%" height="15" fill="rgb(233,158,36)" fg:x="6770" fg:w="1"/><text x="83.3277%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2 samples, 0.02%)</title><rect x="83.0777%" y="837" width="0.0245%" height="15" fill="rgb(215,48,47)" fg:x="6770" fg:w="2"/><text x="83.3277%" y="847.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="83.0777%" y="821" width="0.0245%" height="15" fill="rgb(230,223,15)" fg:x="6770" fg:w="2"/><text x="83.3277%" y="831.50"></text></g><g><title>tracing::span::Span::do_exit (2 samples, 0.02%)</title><rect x="83.0777%" y="805" width="0.0245%" height="15" fill="rgb(234,49,19)" fg:x="6770" fg:w="2"/><text x="83.3277%" y="815.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (2 samples, 0.02%)</title><rect x="83.0777%" y="789" width="0.0245%" height="15" fill="rgb(232,89,25)" fg:x="6770" fg:w="2"/><text x="83.3277%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.02%)</title><rect x="83.0777%" y="773" width="0.0245%" height="15" fill="rgb(237,206,28)" fg:x="6770" fg:w="2"/><text x="83.3277%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.02%)</title><rect x="83.0777%" y="757" width="0.0245%" height="15" fill="rgb(249,68,37)" fg:x="6770" fg:w="2"/><text x="83.3277%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.02%)</title><rect x="83.0777%" y="741" width="0.0245%" height="15" fill="rgb(226,99,43)" fg:x="6770" fg:w="2"/><text x="83.3277%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="83.0899%" y="725" width="0.0123%" height="15" fill="rgb(216,46,28)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="735.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="83.0899%" y="709" width="0.0123%" height="15" fill="rgb(216,33,9)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="83.0899%" y="693" width="0.0123%" height="15" fill="rgb(216,129,4)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="703.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="83.0899%" y="677" width="0.0123%" height="15" fill="rgb(216,106,3)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="687.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::{{closure}} (1 samples, 0.01%)</title><rect x="83.0899%" y="661" width="0.0123%" height="15" fill="rgb(217,79,45)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="671.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="83.0899%" y="645" width="0.0123%" height="15" fill="rgb(239,98,13)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="83.0899%" y="629" width="0.0123%" height="15" fill="rgb(221,115,4)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="83.0899%" y="613" width="0.0123%" height="15" fill="rgb(215,85,0)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="83.0899%" y="597" width="0.0123%" height="15" fill="rgb(230,62,15)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close::{{closure}} (1 samples, 0.01%)</title><rect x="83.0899%" y="581" width="0.0123%" height="15" fill="rgb(247,162,2)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="591.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::start_close (1 samples, 0.01%)</title><rect x="83.0899%" y="565" width="0.0123%" height="15" fill="rgb(212,112,32)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="83.0899%" y="549" width="0.0123%" height="15" fill="rgb(216,137,9)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="559.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="83.0899%" y="533" width="0.0123%" height="15" fill="rgb(250,149,33)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="543.50"></text></g><g><title>tracing_subscriber::registry::sharded::CLOSE_COUNT::__getit (1 samples, 0.01%)</title><rect x="83.0899%" y="517" width="0.0123%" height="15" fill="rgb(246,124,31)" fg:x="6771" fg:w="1"/><text x="83.3399%" y="527.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::dealloc (4 samples, 0.05%)</title><rect x="83.0654%" y="853" width="0.0491%" height="15" fill="rgb(216,210,22)" fg:x="6769" fg:w="4"/><text x="83.3154%" y="863.50"></text></g><g><title>tracing_core::field::FieldSet::iter (1 samples, 0.01%)</title><rect x="83.1022%" y="837" width="0.0123%" height="15" fill="rgb(228,128,36)" fg:x="6772" fg:w="1"/><text x="83.3522%" y="847.50"></text></g><g><title>tracing::span::Span::enter (1 samples, 0.01%)</title><rect x="83.1145%" y="853" width="0.0123%" height="15" fill="rgb(231,41,0)" fg:x="6773" fg:w="1"/><text x="83.3645%" y="863.50"></text></g><g><title>tracing::span::Span::do_enter (1 samples, 0.01%)</title><rect x="83.1145%" y="837" width="0.0123%" height="15" fill="rgb(232,61,26)" fg:x="6773" fg:w="1"/><text x="83.3645%" y="847.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (1 samples, 0.01%)</title><rect x="83.1145%" y="821" width="0.0123%" height="15" fill="rgb(217,60,9)" fg:x="6773" fg:w="1"/><text x="83.3645%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="83.1145%" y="805" width="0.0123%" height="15" fill="rgb(233,41,35)" fg:x="6773" fg:w="1"/><text x="83.3645%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="83.1145%" y="789" width="0.0123%" height="15" fill="rgb(253,139,43)" fg:x="6773" fg:w="1"/><text x="83.3645%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="83.1145%" y="773" width="0.0123%" height="15" fill="rgb(245,100,51)" fg:x="6773" fg:w="1"/><text x="83.3645%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (1 samples, 0.01%)</title><rect x="83.1145%" y="757" width="0.0123%" height="15" fill="rgb(250,208,18)" fg:x="6773" fg:w="1"/><text x="83.3645%" y="767.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="83.1145%" y="741" width="0.0123%" height="15" fill="rgb(245,33,2)" fg:x="6773" fg:w="1"/><text x="83.3645%" y="751.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.01%)</title><rect x="83.1145%" y="725" width="0.0123%" height="15" fill="rgb(244,171,31)" fg:x="6773" fg:w="1"/><text x="83.3645%" y="735.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.01%)</title><rect x="83.1145%" y="709" width="0.0123%" height="15" fill="rgb(229,1,43)" fg:x="6773" fg:w="1"/><text x="83.3645%" y="719.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="83.1145%" y="693" width="0.0123%" height="15" fill="rgb(223,153,28)" fg:x="6773" fg:w="1"/><text x="83.3645%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (3 samples, 0.04%)</title><rect x="83.1268%" y="693" width="0.0368%" height="15" fill="rgb(241,4,46)" fg:x="6774" fg:w="3"/><text x="83.3768%" y="703.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (3 samples, 0.04%)</title><rect x="83.1268%" y="677" width="0.0368%" height="15" fill="rgb(230,81,11)" fg:x="6774" fg:w="3"/><text x="83.3768%" y="687.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (3 samples, 0.04%)</title><rect x="83.1268%" y="661" width="0.0368%" height="15" fill="rgb(253,204,39)" fg:x="6774" fg:w="3"/><text x="83.3768%" y="671.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (3 samples, 0.04%)</title><rect x="83.1268%" y="645" width="0.0368%" height="15" fill="rgb(250,96,8)" fg:x="6774" fg:w="3"/><text x="83.3768%" y="655.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::write (3 samples, 0.04%)</title><rect x="83.1268%" y="629" width="0.0368%" height="15" fill="rgb(219,89,54)" fg:x="6774" fg:w="3"/><text x="83.3768%" y="639.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (3 samples, 0.04%)</title><rect x="83.1268%" y="613" width="0.0368%" height="15" fill="rgb(235,136,39)" fg:x="6774" fg:w="3"/><text x="83.3768%" y="623.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (3 samples, 0.04%)</title><rect x="83.1268%" y="597" width="0.0368%" height="15" fill="rgb(230,155,37)" fg:x="6774" fg:w="3"/><text x="83.3768%" y="607.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (16 samples, 0.20%)</title><rect x="82.9795%" y="917" width="0.1963%" height="15" fill="rgb(235,199,50)" fg:x="6762" fg:w="16"/><text x="83.2295%" y="927.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (13 samples, 0.16%)</title><rect x="83.0163%" y="901" width="0.1595%" height="15" fill="rgb(227,81,32)" fg:x="6765" fg:w="13"/><text x="83.2663%" y="911.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (9 samples, 0.11%)</title><rect x="83.0654%" y="885" width="0.1104%" height="15" fill="rgb(225,6,28)" fg:x="6769" fg:w="9"/><text x="83.3154%" y="895.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (9 samples, 0.11%)</title><rect x="83.0654%" y="869" width="0.1104%" height="15" fill="rgb(207,211,17)" fg:x="6769" fg:w="9"/><text x="83.3154%" y="879.50"></text></g><g><title>tracing::span::Span::new (4 samples, 0.05%)</title><rect x="83.1268%" y="853" width="0.0491%" height="15" fill="rgb(228,31,49)" fg:x="6774" fg:w="4"/><text x="83.3768%" y="863.50"></text></g><g><title>tracing_core::dispatcher::get_default (4 samples, 0.05%)</title><rect x="83.1268%" y="837" width="0.0491%" height="15" fill="rgb(230,185,3)" fg:x="6774" fg:w="4"/><text x="83.3768%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="83.1268%" y="821" width="0.0491%" height="15" fill="rgb(206,167,15)" fg:x="6774" fg:w="4"/><text x="83.3768%" y="831.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (4 samples, 0.05%)</title><rect x="83.1268%" y="805" width="0.0491%" height="15" fill="rgb(234,2,36)" fg:x="6774" fg:w="4"/><text x="83.3768%" y="815.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (4 samples, 0.05%)</title><rect x="83.1268%" y="789" width="0.0491%" height="15" fill="rgb(239,160,29)" fg:x="6774" fg:w="4"/><text x="83.3768%" y="799.50"></text></g><g><title>tracing::span::Span::new_with (4 samples, 0.05%)</title><rect x="83.1268%" y="773" width="0.0491%" height="15" fill="rgb(236,117,2)" fg:x="6774" fg:w="4"/><text x="83.3768%" y="783.50"></text></g><g><title>tracing::span::Span::make_with (4 samples, 0.05%)</title><rect x="83.1268%" y="757" width="0.0491%" height="15" fill="rgb(215,117,37)" fg:x="6774" fg:w="4"/><text x="83.3768%" y="767.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (4 samples, 0.05%)</title><rect x="83.1268%" y="741" width="0.0491%" height="15" fill="rgb(244,48,36)" fg:x="6774" fg:w="4"/><text x="83.3768%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (4 samples, 0.05%)</title><rect x="83.1268%" y="725" width="0.0491%" height="15" fill="rgb(223,101,37)" fg:x="6774" fg:w="4"/><text x="83.3768%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (4 samples, 0.05%)</title><rect x="83.1268%" y="709" width="0.0491%" height="15" fill="rgb(205,200,1)" fg:x="6774" fg:w="4"/><text x="83.3768%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="83.1636%" y="693" width="0.0123%" height="15" fill="rgb(209,193,20)" fg:x="6777" fg:w="1"/><text x="83.4136%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="83.1636%" y="677" width="0.0123%" height="15" fill="rgb(214,63,13)" fg:x="6777" fg:w="1"/><text x="83.4136%" y="687.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (1 samples, 0.01%)</title><rect x="83.1636%" y="661" width="0.0123%" height="15" fill="rgb(253,113,46)" fg:x="6777" fg:w="1"/><text x="83.4136%" y="671.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="83.1636%" y="645" width="0.0123%" height="15" fill="rgb(237,103,34)" fg:x="6777" fg:w="1"/><text x="83.4136%" y="655.50"></text></g><g><title>thread_local::thread_id::get (1 samples, 0.01%)</title><rect x="83.1636%" y="629" width="0.0123%" height="15" fill="rgb(223,38,25)" fg:x="6777" fg:w="1"/><text x="83.4136%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="83.1636%" y="613" width="0.0123%" height="15" fill="rgb(251,32,32)" fg:x="6777" fg:w="1"/><text x="83.4136%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="83.1636%" y="597" width="0.0123%" height="15" fill="rgb(228,65,22)" fg:x="6777" fg:w="1"/><text x="83.4136%" y="607.50"></text></g><g><title>thread_local::thread_id::THREAD_HOLDER::__getit (1 samples, 0.01%)</title><rect x="83.1636%" y="581" width="0.0123%" height="15" fill="rgb(205,11,46)" fg:x="6777" fg:w="1"/><text x="83.4136%" y="591.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="83.1636%" y="565" width="0.0123%" height="15" fill="rgb(220,35,2)" fg:x="6777" fg:w="1"/><text x="83.4136%" y="575.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="83.1636%" y="549" width="0.0123%" height="15" fill="rgb(217,151,17)" fg:x="6777" fg:w="1"/><text x="83.4136%" y="559.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="83.1636%" y="533" width="0.0123%" height="15" fill="rgb(243,227,35)" fg:x="6777" fg:w="1"/><text x="83.4136%" y="543.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::handle_mapping (1 samples, 0.01%)</title><rect x="83.1758%" y="917" width="0.0123%" height="15" fill="rgb(214,0,34)" fg:x="6778" fg:w="1"/><text x="83.4258%" y="927.50"></text></g><g><title>wgpu_core::device::map_buffer (1 samples, 0.01%)</title><rect x="83.1758%" y="901" width="0.0123%" height="15" fill="rgb(209,42,37)" fg:x="6778" fg:w="1"/><text x="83.4258%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="83.1758%" y="885" width="0.0123%" height="15" fill="rgb(251,176,30)" fg:x="6778" fg:w="1"/><text x="83.4258%" y="895.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_mapped (1 samples, 0.01%)</title><rect x="83.1881%" y="917" width="0.0123%" height="15" fill="rgb(223,64,40)" fg:x="6779" fg:w="1"/><text x="83.4381%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="83.1881%" y="901" width="0.0123%" height="15" fill="rgb(227,180,23)" fg:x="6779" fg:w="1"/><text x="83.4381%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="83.1881%" y="885" width="0.0123%" height="15" fill="rgb(220,137,31)" fg:x="6779" fg:w="1"/><text x="83.4381%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="83.1881%" y="869" width="0.0123%" height="15" fill="rgb(245,124,25)" fg:x="6779" fg:w="1"/><text x="83.4381%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="83.1881%" y="853" width="0.0123%" height="15" fill="rgb(217,157,5)" fg:x="6779" fg:w="1"/><text x="83.4381%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="83.1881%" y="837" width="0.0123%" height="15" fill="rgb(225,59,2)" fg:x="6779" fg:w="1"/><text x="83.4381%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="83.1881%" y="821" width="0.0123%" height="15" fill="rgb(220,182,9)" fg:x="6779" fg:w="1"/><text x="83.4381%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="83.1881%" y="805" width="0.0123%" height="15" fill="rgb(249,54,24)" fg:x="6779" fg:w="1"/><text x="83.4381%" y="815.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="83.1881%" y="789" width="0.0123%" height="15" fill="rgb(216,89,17)" fg:x="6779" fg:w="1"/><text x="83.4381%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="83.2004%" y="901" width="0.0123%" height="15" fill="rgb(245,20,45)" fg:x="6780" fg:w="1"/><text x="83.4504%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.15%)</title><rect x="83.2863%" y="773" width="0.1473%" height="15" fill="rgb(230,83,14)" fg:x="6787" fg:w="12"/><text x="83.5363%" y="783.50"></text></g><g><title>ioctl@plt (1 samples, 0.01%)</title><rect x="83.4213%" y="757" width="0.0123%" height="15" fill="rgb(246,109,11)" fg:x="6798" fg:w="1"/><text x="83.6713%" y="767.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="83.4336%" y="773" width="0.0123%" height="15" fill="rgb(235,85,23)" fg:x="6799" fg:w="1"/><text x="83.6836%" y="783.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::destroy_fence (20 samples, 0.25%)</title><rect x="83.2127%" y="901" width="0.2454%" height="15" fill="rgb(215,101,36)" fg:x="6781" fg:w="20"/><text x="83.4627%" y="911.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_fence (20 samples, 0.25%)</title><rect x="83.2127%" y="885" width="0.2454%" height="15" fill="rgb(228,140,31)" fg:x="6781" fg:w="20"/><text x="83.4627%" y="895.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::destroy_fence (20 samples, 0.25%)</title><rect x="83.2127%" y="869" width="0.2454%" height="15" fill="rgb(234,162,37)" fg:x="6781" fg:w="20"/><text x="83.4627%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (20 samples, 0.25%)</title><rect x="83.2127%" y="853" width="0.2454%" height="15" fill="rgb(221,0,24)" fg:x="6781" fg:w="20"/><text x="83.4627%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.22%)</title><rect x="83.2372%" y="837" width="0.2209%" height="15" fill="rgb(230,161,41)" fg:x="6783" fg:w="18"/><text x="83.4872%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.22%)</title><rect x="83.2372%" y="821" width="0.2209%" height="15" fill="rgb(224,46,24)" fg:x="6783" fg:w="18"/><text x="83.4872%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.20%)</title><rect x="83.2617%" y="805" width="0.1963%" height="15" fill="rgb(205,59,32)" fg:x="6785" fg:w="16"/><text x="83.5117%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.20%)</title><rect x="83.2617%" y="789" width="0.1963%" height="15" fill="rgb(239,31,20)" fg:x="6785" fg:w="16"/><text x="83.5117%" y="799.50"></text></g><g><title>time@plt (1 samples, 0.01%)</title><rect x="83.4458%" y="773" width="0.0123%" height="15" fill="rgb(233,149,44)" fg:x="6800" fg:w="1"/><text x="83.6958%" y="783.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::wait_idle (2 samples, 0.02%)</title><rect x="83.4581%" y="901" width="0.0245%" height="15" fill="rgb(243,47,26)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="911.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences (2 samples, 0.02%)</title><rect x="83.4581%" y="885" width="0.0245%" height="15" fill="rgb(233,107,5)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="895.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (2 samples, 0.02%)</title><rect x="83.4581%" y="869" width="0.0245%" height="15" fill="rgb(248,140,33)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="879.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (2 samples, 0.02%)</title><rect x="83.4581%" y="853" width="0.0245%" height="15" fill="rgb(228,178,19)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="863.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (2 samples, 0.02%)</title><rect x="83.4581%" y="837" width="0.0245%" height="15" fill="rgb(224,39,49)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="847.50"></text></g><g><title>inplace_it::fixed_array::indirect (2 samples, 0.02%)</title><rect x="83.4581%" y="821" width="0.0245%" height="15" fill="rgb(246,56,47)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="831.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (2 samples, 0.02%)</title><rect x="83.4581%" y="805" width="0.0245%" height="15" fill="rgb(220,73,27)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="815.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (2 samples, 0.02%)</title><rect x="83.4581%" y="789" width="0.0245%" height="15" fill="rgb(239,112,21)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="799.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences::{{closure}} (2 samples, 0.02%)</title><rect x="83.4581%" y="773" width="0.0245%" height="15" fill="rgb(253,14,51)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="783.50"></text></g><g><title>ash::device::DeviceV1_0::wait_for_fences (2 samples, 0.02%)</title><rect x="83.4581%" y="757" width="0.0245%" height="15" fill="rgb(215,58,12)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="767.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::wait_for_fences (2 samples, 0.02%)</title><rect x="83.4581%" y="741" width="0.0245%" height="15" fill="rgb(207,181,19)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="83.4581%" y="725" width="0.0245%" height="15" fill="rgb(211,214,34)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="83.4581%" y="709" width="0.0245%" height="15" fill="rgb(243,124,39)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="83.4581%" y="693" width="0.0245%" height="15" fill="rgb(248,135,21)" fg:x="6801" fg:w="2"/><text x="83.7081%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (55 samples, 0.67%)</title><rect x="82.8200%" y="997" width="0.6749%" height="15" fill="rgb(245,218,3)" fg:x="6749" fg:w="55"/><text x="83.0700%" y="1007.50"></text></g><g><title>wgpu::Device::poll (52 samples, 0.64%)</title><rect x="82.8568%" y="981" width="0.6381%" height="15" fill="rgb(225,144,22)" fg:x="6752" fg:w="52"/><text x="83.1068%" y="991.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (52 samples, 0.64%)</title><rect x="82.8568%" y="965" width="0.6381%" height="15" fill="rgb(250,90,15)" fg:x="6752" fg:w="52"/><text x="83.1068%" y="975.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (52 samples, 0.64%)</title><rect x="82.8568%" y="949" width="0.6381%" height="15" fill="rgb(224,64,29)" fg:x="6752" fg:w="52"/><text x="83.1068%" y="959.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (52 samples, 0.64%)</title><rect x="82.8568%" y="933" width="0.6381%" height="15" fill="rgb(217,50,47)" fg:x="6752" fg:w="52"/><text x="83.1068%" y="943.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (24 samples, 0.29%)</title><rect x="83.2004%" y="917" width="0.2945%" height="15" fill="rgb(231,159,47)" fg:x="6780" fg:w="24"/><text x="83.4504%" y="927.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::extend (1 samples, 0.01%)</title><rect x="83.4826%" y="901" width="0.0123%" height="15" fill="rgb(213,89,29)" fg:x="6803" fg:w="1"/><text x="83.7326%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="83.4826%" y="885" width="0.0123%" height="15" fill="rgb(243,90,23)" fg:x="6803" fg:w="1"/><text x="83.7326%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="83.4826%" y="869" width="0.0123%" height="15" fill="rgb(213,21,6)" fg:x="6803" fg:w="1"/><text x="83.7326%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="83.4826%" y="853" width="0.0123%" height="15" fill="rgb(237,139,17)" fg:x="6803" fg:w="1"/><text x="83.7326%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="83.4826%" y="837" width="0.0123%" height="15" fill="rgb(250,147,17)" fg:x="6803" fg:w="1"/><text x="83.7326%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="83.4826%" y="821" width="0.0123%" height="15" fill="rgb(212,208,42)" fg:x="6803" fg:w="1"/><text x="83.7326%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.01%)</title><rect x="83.4826%" y="805" width="0.0123%" height="15" fill="rgb(215,229,40)" fg:x="6803" fg:w="1"/><text x="83.7326%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::device::Device&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.5072%" y="933" width="0.0123%" height="15" fill="rgb(206,204,1)" fg:x="6805" fg:w="1"/><text x="83.7572%" y="943.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.5072%" y="917" width="0.0123%" height="15" fill="rgb(230,62,32)" fg:x="6805" fg:w="1"/><text x="83.7572%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1 samples, 0.01%)</title><rect x="83.5072%" y="901" width="0.0123%" height="15" fill="rgb(223,22,42)" fg:x="6805" fg:w="1"/><text x="83.7572%" y="911.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (1 samples, 0.01%)</title><rect x="83.5072%" y="885" width="0.0123%" height="15" fill="rgb(244,6,23)" fg:x="6805" fg:w="1"/><text x="83.7572%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::wake_parked_threads (1 samples, 0.01%)</title><rect x="83.5072%" y="869" width="0.0123%" height="15" fill="rgb(240,221,42)" fg:x="6805" fg:w="1"/><text x="83.7572%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_filter (1 samples, 0.01%)</title><rect x="83.5072%" y="853" width="0.0123%" height="15" fill="rgb(222,74,7)" fg:x="6805" fg:w="1"/><text x="83.7572%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="83.5072%" y="837" width="0.0123%" height="15" fill="rgb(227,191,38)" fg:x="6805" fg:w="1"/><text x="83.7572%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="83.5072%" y="821" width="0.0123%" height="15" fill="rgb(227,89,34)" fg:x="6805" fg:w="1"/><text x="83.7572%" y="831.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (1 samples, 0.01%)</title><rect x="83.5195%" y="869" width="0.0123%" height="15" fill="rgb(215,153,25)" fg:x="6806" fg:w="1"/><text x="83.7695%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.01%)</title><rect x="83.5317%" y="853" width="0.0123%" height="15" fill="rgb(215,153,46)" fg:x="6807" fg:w="1"/><text x="83.7817%" y="863.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.01%)</title><rect x="83.5317%" y="837" width="0.0123%" height="15" fill="rgb(242,38,52)" fg:x="6807" fg:w="1"/><text x="83.7817%" y="847.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.01%)</title><rect x="83.5317%" y="821" width="0.0123%" height="15" fill="rgb(218,112,4)" fg:x="6807" fg:w="1"/><text x="83.7817%" y="831.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.01%)</title><rect x="83.5317%" y="805" width="0.0123%" height="15" fill="rgb(231,210,31)" fg:x="6807" fg:w="1"/><text x="83.7817%" y="815.50"></text></g><g><title>parking_lot_core::thread_parker::imp::ThreadParker::futex_wait (1 samples, 0.01%)</title><rect x="83.5317%" y="789" width="0.0123%" height="15" fill="rgb(245,223,36)" fg:x="6807" fg:w="1"/><text x="83.7817%" y="799.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (60 samples, 0.74%)</title><rect x="82.8200%" y="1061" width="0.7363%" height="15" fill="rgb(246,41,2)" fg:x="6749" fg:w="60"/><text x="83.0700%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (60 samples, 0.74%)</title><rect x="82.8200%" y="1045" width="0.7363%" height="15" fill="rgb(227,51,31)" fg:x="6749" fg:w="60"/><text x="83.0700%" y="1055.50"></text></g><g><title>core::ops::function::Fn::call (60 samples, 0.74%)</title><rect x="82.8200%" y="1029" width="0.7363%" height="15" fill="rgb(222,95,26)" fg:x="6749" fg:w="60"/><text x="83.0700%" y="1039.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (60 samples, 0.74%)</title><rect x="82.8200%" y="1013" width="0.7363%" height="15" fill="rgb(224,190,1)" fg:x="6749" fg:w="60"/><text x="83.0700%" y="1023.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (5 samples, 0.06%)</title><rect x="83.4949%" y="997" width="0.0614%" height="15" fill="rgb(209,90,42)" fg:x="6804" fg:w="5"/><text x="83.7449%" y="1007.50"></text></g><g><title>wgpu::Buffer::unmap (5 samples, 0.06%)</title><rect x="83.4949%" y="981" width="0.0614%" height="15" fill="rgb(232,225,50)" fg:x="6804" fg:w="5"/><text x="83.7449%" y="991.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (5 samples, 0.06%)</title><rect x="83.4949%" y="965" width="0.0614%" height="15" fill="rgb(239,89,47)" fg:x="6804" fg:w="5"/><text x="83.7449%" y="975.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (5 samples, 0.06%)</title><rect x="83.4949%" y="949" width="0.0614%" height="15" fill="rgb(230,212,50)" fg:x="6804" fg:w="5"/><text x="83.7449%" y="959.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (3 samples, 0.04%)</title><rect x="83.5195%" y="933" width="0.0368%" height="15" fill="rgb(252,1,27)" fg:x="6806" fg:w="3"/><text x="83.7695%" y="943.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (3 samples, 0.04%)</title><rect x="83.5195%" y="917" width="0.0368%" height="15" fill="rgb(237,179,41)" fg:x="6806" fg:w="3"/><text x="83.7695%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (3 samples, 0.04%)</title><rect x="83.5195%" y="901" width="0.0368%" height="15" fill="rgb(214,151,37)" fg:x="6806" fg:w="3"/><text x="83.7695%" y="911.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (3 samples, 0.04%)</title><rect x="83.5195%" y="885" width="0.0368%" height="15" fill="rgb(211,74,11)" fg:x="6806" fg:w="3"/><text x="83.7695%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::wait_for_readers (2 samples, 0.02%)</title><rect x="83.5317%" y="869" width="0.0245%" height="15" fill="rgb(242,21,21)" fg:x="6807" fg:w="2"/><text x="83.7817%" y="879.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="83.5440%" y="853" width="0.0123%" height="15" fill="rgb(226,106,43)" fg:x="6808" fg:w="1"/><text x="83.7940%" y="863.50"></text></g><g><title>parking_lot_core::thread_parker::imp::thread_yield (1 samples, 0.01%)</title><rect x="83.5440%" y="837" width="0.0123%" height="15" fill="rgb(229,162,39)" fg:x="6808" fg:w="1"/><text x="83.7940%" y="847.50"></text></g><g><title>std::thread::yield_now (1 samples, 0.01%)</title><rect x="83.5440%" y="821" width="0.0123%" height="15" fill="rgb(228,159,25)" fg:x="6808" fg:w="1"/><text x="83.7940%" y="831.50"></text></g><g><title>std::sys::unix::thread::Thread::yield_now (1 samples, 0.01%)</title><rect x="83.5440%" y="805" width="0.0123%" height="15" fill="rgb(237,32,23)" fg:x="6808" fg:w="1"/><text x="83.7940%" y="815.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.01%)</title><rect x="83.5440%" y="789" width="0.0123%" height="15" fill="rgb(212,35,32)" fg:x="6808" fg:w="1"/><text x="83.7940%" y="799.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="83.5685%" y="997" width="0.0123%" height="15" fill="rgb(215,199,1)" fg:x="6810" fg:w="1"/><text x="83.8185%" y="1007.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (1 samples, 0.01%)</title><rect x="83.5685%" y="981" width="0.0123%" height="15" fill="rgb(215,67,13)" fg:x="6810" fg:w="1"/><text x="83.8185%" y="991.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="83.5685%" y="965" width="0.0123%" height="15" fill="rgb(216,20,47)" fg:x="6810" fg:w="1"/><text x="83.8185%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="83.5808%" y="981" width="0.0123%" height="15" fill="rgb(249,183,48)" fg:x="6811" fg:w="1"/><text x="83.8308%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="83.5808%" y="965" width="0.0123%" height="15" fill="rgb(208,86,37)" fg:x="6811" fg:w="1"/><text x="83.8308%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="83.5808%" y="949" width="0.0123%" height="15" fill="rgb(251,192,7)" fg:x="6811" fg:w="1"/><text x="83.8308%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="83.5808%" y="933" width="0.0123%" height="15" fill="rgb(234,196,3)" fg:x="6811" fg:w="1"/><text x="83.8308%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="83.5808%" y="917" width="0.0123%" height="15" fill="rgb(229,150,39)" fg:x="6811" fg:w="1"/><text x="83.8308%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="83.5808%" y="901" width="0.0123%" height="15" fill="rgb(226,19,29)" fg:x="6811" fg:w="1"/><text x="83.8308%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="83.5808%" y="885" width="0.0123%" height="15" fill="rgb(226,222,2)" fg:x="6811" fg:w="1"/><text x="83.8308%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="83.5808%" y="869" width="0.0123%" height="15" fill="rgb(235,85,29)" fg:x="6811" fg:w="1"/><text x="83.8308%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="83.5808%" y="853" width="0.0123%" height="15" fill="rgb(237,194,43)" fg:x="6811" fg:w="1"/><text x="83.8308%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="83.5808%" y="837" width="0.0123%" height="15" fill="rgb(211,4,42)" fg:x="6811" fg:w="1"/><text x="83.8308%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="83.5808%" y="821" width="0.0123%" height="15" fill="rgb(221,80,37)" fg:x="6811" fg:w="1"/><text x="83.8308%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::device::life::LifetimeTracker&lt;gfx_backend_vulkan::Backend&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.5931%" y="933" width="0.0123%" height="15" fill="rgb(222,47,31)" fg:x="6812" fg:w="1"/><text x="83.8431%" y="943.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.5931%" y="917" width="0.0123%" height="15" fill="rgb(249,82,52)" fg:x="6812" fg:w="1"/><text x="83.8431%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="83.5931%" y="901" width="0.0123%" height="15" fill="rgb(218,203,2)" fg:x="6812" fg:w="1"/><text x="83.8431%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="83.5931%" y="885" width="0.0123%" height="15" fill="rgb(210,175,14)" fg:x="6812" fg:w="1"/><text x="83.8431%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="83.5931%" y="869" width="0.0123%" height="15" fill="rgb(216,210,12)" fg:x="6812" fg:w="1"/><text x="83.8431%" y="879.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (3 samples, 0.04%)</title><rect x="83.5808%" y="997" width="0.0368%" height="15" fill="rgb(229,120,18)" fg:x="6811" fg:w="3"/><text x="83.8308%" y="1007.50"></text></g><g><title>wgpu::BufferSlice::map_async (2 samples, 0.02%)</title><rect x="83.5931%" y="981" width="0.0245%" height="15" fill="rgb(231,174,12)" fg:x="6812" fg:w="2"/><text x="83.8431%" y="991.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (2 samples, 0.02%)</title><rect x="83.5931%" y="965" width="0.0245%" height="15" fill="rgb(214,101,53)" fg:x="6812" fg:w="2"/><text x="83.8431%" y="975.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (2 samples, 0.02%)</title><rect x="83.5931%" y="949" width="0.0245%" height="15" fill="rgb(246,89,43)" fg:x="6812" fg:w="2"/><text x="83.8431%" y="959.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (1 samples, 0.01%)</title><rect x="83.6054%" y="933" width="0.0123%" height="15" fill="rgb(222,9,51)" fg:x="6813" fg:w="1"/><text x="83.8554%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.6054%" y="917" width="0.0123%" height="15" fill="rgb(252,221,9)" fg:x="6813" fg:w="1"/><text x="83.8554%" y="927.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.6054%" y="901" width="0.0123%" height="15" fill="rgb(248,28,15)" fg:x="6813" fg:w="1"/><text x="83.8554%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="83.6054%" y="885" width="0.0123%" height="15" fill="rgb(213,54,52)" fg:x="6813" fg:w="1"/><text x="83.8554%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="83.6054%" y="869" width="0.0123%" height="15" fill="rgb(240,3,45)" fg:x="6813" fg:w="1"/><text x="83.8554%" y="879.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="83.6176%" y="965" width="0.0123%" height="15" fill="rgb(239,138,24)" fg:x="6814" fg:w="1"/><text x="83.8676%" y="975.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="83.6176%" y="949" width="0.0123%" height="15" fill="rgb(233,45,54)" fg:x="6814" fg:w="1"/><text x="83.8676%" y="959.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="83.6176%" y="933" width="0.0123%" height="15" fill="rgb(220,131,2)" fg:x="6814" fg:w="1"/><text x="83.8676%" y="943.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (1 samples, 0.01%)</title><rect x="83.6176%" y="917" width="0.0123%" height="15" fill="rgb(240,154,36)" fg:x="6814" fg:w="1"/><text x="83.8676%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="83.6176%" y="901" width="0.0123%" height="15" fill="rgb(251,221,1)" fg:x="6814" fg:w="1"/><text x="83.8676%" y="911.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="83.6176%" y="885" width="0.0123%" height="15" fill="rgb(225,217,1)" fg:x="6814" fg:w="1"/><text x="83.8676%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="83.6176%" y="869" width="0.0123%" height="15" fill="rgb(241,105,49)" fg:x="6814" fg:w="1"/><text x="83.8676%" y="879.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="83.6176%" y="853" width="0.0123%" height="15" fill="rgb(215,44,32)" fg:x="6814" fg:w="1"/><text x="83.8676%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="83.6176%" y="837" width="0.0123%" height="15" fill="rgb(213,222,14)" fg:x="6814" fg:w="1"/><text x="83.8676%" y="847.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (4 samples, 0.05%)</title><rect x="83.6176%" y="981" width="0.0491%" height="15" fill="rgb(207,99,52)" fg:x="6814" fg:w="4"/><text x="83.8676%" y="991.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (3 samples, 0.04%)</title><rect x="83.6299%" y="965" width="0.0368%" height="15" fill="rgb(214,208,52)" fg:x="6815" fg:w="3"/><text x="83.8799%" y="975.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding (2 samples, 0.02%)</title><rect x="83.6422%" y="949" width="0.0245%" height="15" fill="rgb(244,169,0)" fg:x="6816" fg:w="2"/><text x="83.8922%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="83.6422%" y="933" width="0.0245%" height="15" fill="rgb(216,193,37)" fg:x="6816" fg:w="2"/><text x="83.8922%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="83.6422%" y="917" width="0.0245%" height="15" fill="rgb(212,158,10)" fg:x="6816" fg:w="2"/><text x="83.8922%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="83.6422%" y="901" width="0.0245%" height="15" fill="rgb(213,110,20)" fg:x="6816" fg:w="2"/><text x="83.8922%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="83.6422%" y="885" width="0.0245%" height="15" fill="rgb(226,5,42)" fg:x="6816" fg:w="2"/><text x="83.8922%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="83.6422%" y="869" width="0.0245%" height="15" fill="rgb(211,93,8)" fg:x="6816" fg:w="2"/><text x="83.8922%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="83.6422%" y="853" width="0.0245%" height="15" fill="rgb(240,208,12)" fg:x="6816" fg:w="2"/><text x="83.8922%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="83.6422%" y="837" width="0.0245%" height="15" fill="rgb(233,127,50)" fg:x="6816" fg:w="2"/><text x="83.8922%" y="847.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (5 samples, 0.06%)</title><rect x="83.6176%" y="997" width="0.0614%" height="15" fill="rgb(227,199,53)" fg:x="6814" fg:w="5"/><text x="83.8676%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BufferViewMut&gt; (1 samples, 0.01%)</title><rect x="83.6667%" y="981" width="0.0123%" height="15" fill="rgb(235,199,10)" fg:x="6818" fg:w="1"/><text x="83.9167%" y="991.50"></text></g><g><title>&lt;wgpu::BufferViewMut as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.6667%" y="965" width="0.0123%" height="15" fill="rgb(228,148,35)" fg:x="6818" fg:w="1"/><text x="83.9167%" y="975.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="83.6667%" y="949" width="0.0123%" height="15" fill="rgb(217,87,19)" fg:x="6818" fg:w="1"/><text x="83.9167%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="83.6667%" y="933" width="0.0123%" height="15" fill="rgb(239,9,32)" fg:x="6818" fg:w="1"/><text x="83.9167%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.6667%" y="917" width="0.0123%" height="15" fill="rgb(229,101,29)" fg:x="6818" fg:w="1"/><text x="83.9167%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.6667%" y="901" width="0.0123%" height="15" fill="rgb(208,143,26)" fg:x="6818" fg:w="1"/><text x="83.9167%" y="911.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (2 samples, 0.02%)</title><rect x="83.6790%" y="997" width="0.0245%" height="15" fill="rgb(214,10,2)" fg:x="6819" fg:w="2"/><text x="83.9290%" y="1007.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (2 samples, 0.02%)</title><rect x="83.6790%" y="981" width="0.0245%" height="15" fill="rgb(254,203,30)" fg:x="6819" fg:w="2"/><text x="83.9290%" y="991.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (2 samples, 0.02%)</title><rect x="83.6790%" y="965" width="0.0245%" height="15" fill="rgb(242,45,3)" fg:x="6819" fg:w="2"/><text x="83.9290%" y="975.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="83.6913%" y="949" width="0.0123%" height="15" fill="rgb(209,146,51)" fg:x="6820" fg:w="1"/><text x="83.9413%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;bevy_render::render_graph::command::Command&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.7035%" y="949" width="0.0123%" height="15" fill="rgb(222,80,5)" fg:x="6821" fg:w="1"/><text x="83.9535%" y="959.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.7035%" y="933" width="0.0123%" height="15" fill="rgb(252,80,35)" fg:x="6821" fg:w="1"/><text x="83.9535%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="83.7035%" y="917" width="0.0123%" height="15" fill="rgb(246,125,28)" fg:x="6821" fg:w="1"/><text x="83.9535%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="83.7035%" y="901" width="0.0123%" height="15" fill="rgb(224,143,51)" fg:x="6821" fg:w="1"/><text x="83.9535%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="83.7035%" y="885" width="0.0123%" height="15" fill="rgb(205,24,17)" fg:x="6821" fg:w="1"/><text x="83.9535%" y="895.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::copy_staging_buffer_to_final_buffers (3 samples, 0.04%)</title><rect x="83.7035%" y="997" width="0.0368%" height="15" fill="rgb(253,128,30)" fg:x="6821" fg:w="3"/><text x="83.9535%" y="1007.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (3 samples, 0.04%)</title><rect x="83.7035%" y="981" width="0.0368%" height="15" fill="rgb(214,153,25)" fg:x="6821" fg:w="3"/><text x="83.9535%" y="991.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::push (3 samples, 0.04%)</title><rect x="83.7035%" y="965" width="0.0368%" height="15" fill="rgb(214,4,28)" fg:x="6821" fg:w="3"/><text x="83.9535%" y="975.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (2 samples, 0.02%)</title><rect x="83.7158%" y="949" width="0.0245%" height="15" fill="rgb(235,179,52)" fg:x="6822" fg:w="2"/><text x="83.9658%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (2 samples, 0.02%)</title><rect x="83.7158%" y="933" width="0.0245%" height="15" fill="rgb(233,27,42)" fg:x="6822" fg:w="2"/><text x="83.9658%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (2 samples, 0.02%)</title><rect x="83.7158%" y="917" width="0.0245%" height="15" fill="rgb(238,35,25)" fg:x="6822" fg:w="2"/><text x="83.9658%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="83.7158%" y="901" width="0.0245%" height="15" fill="rgb(227,44,31)" fg:x="6822" fg:w="2"/><text x="83.9658%" y="911.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (17 samples, 0.21%)</title><rect x="83.5563%" y="1061" width="0.2086%" height="15" fill="rgb(232,201,13)" fg:x="6809" fg:w="17"/><text x="83.8063%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (17 samples, 0.21%)</title><rect x="83.5563%" y="1045" width="0.2086%" height="15" fill="rgb(224,172,52)" fg:x="6809" fg:w="17"/><text x="83.8063%" y="1055.50"></text></g><g><title>core::ops::function::Fn::call (17 samples, 0.21%)</title><rect x="83.5563%" y="1029" width="0.2086%" height="15" fill="rgb(214,27,26)" fg:x="6809" fg:w="17"/><text x="83.8063%" y="1039.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (17 samples, 0.21%)</title><rect x="83.5563%" y="1013" width="0.2086%" height="15" fill="rgb(210,185,52)" fg:x="6809" fg:w="17"/><text x="83.8063%" y="1023.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (2 samples, 0.02%)</title><rect x="83.7403%" y="997" width="0.0245%" height="15" fill="rgb(249,59,32)" fg:x="6824" fg:w="2"/><text x="83.9903%" y="1007.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_or_assign_index (1 samples, 0.01%)</title><rect x="83.7526%" y="981" width="0.0123%" height="15" fill="rgb(242,209,18)" fg:x="6825" fg:w="1"/><text x="84.0026%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="83.7526%" y="965" width="0.0123%" height="15" fill="rgb(229,0,18)" fg:x="6825" fg:w="1"/><text x="84.0026%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="83.7526%" y="949" width="0.0123%" height="15" fill="rgb(217,138,29)" fg:x="6825" fg:w="1"/><text x="84.0026%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="83.7526%" y="933" width="0.0123%" height="15" fill="rgb(215,72,42)" fg:x="6825" fg:w="1"/><text x="84.0026%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="83.7526%" y="917" width="0.0123%" height="15" fill="rgb(254,115,11)" fg:x="6825" fg:w="1"/><text x="84.0026%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="83.7526%" y="901" width="0.0123%" height="15" fill="rgb(205,133,39)" fg:x="6825" fg:w="1"/><text x="84.0026%" y="911.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="83.7526%" y="885" width="0.0123%" height="15" fill="rgb(211,36,27)" fg:x="6825" fg:w="1"/><text x="84.0026%" y="895.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="83.7526%" y="869" width="0.0123%" height="15" fill="rgb(221,48,10)" fg:x="6825" fg:w="1"/><text x="84.0026%" y="879.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="83.7772%" y="997" width="0.0245%" height="15" fill="rgb(230,172,50)" fg:x="6827" fg:w="2"/><text x="84.0272%" y="1007.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="83.7894%" y="981" width="0.0123%" height="15" fill="rgb(249,72,18)" fg:x="6828" fg:w="1"/><text x="84.0394%" y="991.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="83.8017%" y="997" width="0.0245%" height="15" fill="rgb(237,58,48)" fg:x="6829" fg:w="2"/><text x="84.0517%" y="1007.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (1 samples, 0.01%)</title><rect x="83.8140%" y="981" width="0.0123%" height="15" fill="rgb(242,123,3)" fg:x="6830" fg:w="1"/><text x="84.0640%" y="991.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="83.8140%" y="965" width="0.0123%" height="15" fill="rgb(232,111,32)" fg:x="6830" fg:w="1"/><text x="84.0640%" y="975.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::is_changed (1 samples, 0.01%)</title><rect x="83.8140%" y="949" width="0.0123%" height="15" fill="rgb(229,108,3)" fg:x="6830" fg:w="1"/><text x="84.0640%" y="959.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="83.8140%" y="933" width="0.0123%" height="15" fill="rgb(222,158,10)" fg:x="6830" fg:w="1"/><text x="84.0640%" y="943.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.01%)</title><rect x="83.8262%" y="981" width="0.0123%" height="15" fill="rgb(205,34,49)" fg:x="6831" fg:w="1"/><text x="84.0762%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::native_gpu_future::GpuFuture&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.8262%" y="965" width="0.0123%" height="15" fill="rgb(232,21,14)" fg:x="6831" fg:w="1"/><text x="84.0762%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;wgpu::backend::native_gpu_future::WakerOrResult&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.8262%" y="949" width="0.0123%" height="15" fill="rgb(229,127,44)" fg:x="6831" fg:w="1"/><text x="84.0762%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.8262%" y="933" width="0.0123%" height="15" fill="rgb(232,171,4)" fg:x="6831" fg:w="1"/><text x="84.0762%" y="943.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="83.8262%" y="917" width="0.0123%" height="15" fill="rgb(250,92,16)" fg:x="6831" fg:w="1"/><text x="84.0762%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="83.8385%" y="981" width="0.0123%" height="15" fill="rgb(230,103,38)" fg:x="6832" fg:w="1"/><text x="84.0885%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="83.8385%" y="965" width="0.0123%" height="15" fill="rgb(253,167,9)" fg:x="6832" fg:w="1"/><text x="84.0885%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="83.8385%" y="949" width="0.0123%" height="15" fill="rgb(222,118,11)" fg:x="6832" fg:w="1"/><text x="84.0885%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="83.8385%" y="933" width="0.0123%" height="15" fill="rgb(240,202,0)" fg:x="6832" fg:w="1"/><text x="84.0885%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="83.8385%" y="917" width="0.0123%" height="15" fill="rgb(236,124,4)" fg:x="6832" fg:w="1"/><text x="84.0885%" y="927.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="83.8385%" y="901" width="0.0123%" height="15" fill="rgb(244,128,18)" fg:x="6832" fg:w="1"/><text x="84.0885%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="83.8385%" y="885" width="0.0123%" height="15" fill="rgb(231,206,5)" fg:x="6832" fg:w="1"/><text x="84.0885%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="83.8385%" y="869" width="0.0123%" height="15" fill="rgb(237,111,8)" fg:x="6832" fg:w="1"/><text x="84.0885%" y="879.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="83.8385%" y="853" width="0.0123%" height="15" fill="rgb(225,127,3)" fg:x="6832" fg:w="1"/><text x="84.0885%" y="863.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (1 samples, 0.01%)</title><rect x="83.8631%" y="933" width="0.0123%" height="15" fill="rgb(222,85,48)" fg:x="6834" fg:w="1"/><text x="84.1131%" y="943.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="83.8631%" y="917" width="0.0123%" height="15" fill="rgb(221,108,37)" fg:x="6834" fg:w="1"/><text x="84.1131%" y="927.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life (1 samples, 0.01%)</title><rect x="83.8753%" y="933" width="0.0123%" height="15" fill="rgb(226,169,36)" fg:x="6835" fg:w="1"/><text x="84.1253%" y="943.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life_internal (1 samples, 0.01%)</title><rect x="83.8753%" y="917" width="0.0123%" height="15" fill="rgb(237,76,12)" fg:x="6835" fg:w="1"/><text x="84.1253%" y="927.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="83.8753%" y="901" width="0.0123%" height="15" fill="rgb(210,227,32)" fg:x="6835" fg:w="1"/><text x="84.1253%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="83.8753%" y="885" width="0.0123%" height="15" fill="rgb(214,117,20)" fg:x="6835" fg:w="1"/><text x="84.1253%" y="895.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.01%)</title><rect x="83.8753%" y="869" width="0.0123%" height="15" fill="rgb(234,119,41)" fg:x="6835" fg:w="1"/><text x="84.1253%" y="879.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="83.8753%" y="853" width="0.0123%" height="15" fill="rgb(230,130,47)" fg:x="6835" fg:w="1"/><text x="84.1253%" y="863.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="83.8753%" y="837" width="0.0123%" height="15" fill="rgb(215,21,41)" fg:x="6835" fg:w="1"/><text x="84.1253%" y="847.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="83.8753%" y="821" width="0.0123%" height="15" fill="rgb(226,26,53)" fg:x="6835" fg:w="1"/><text x="84.1253%" y="831.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="83.8753%" y="805" width="0.0123%" height="15" fill="rgb(221,92,23)" fg:x="6835" fg:w="1"/><text x="84.1253%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="83.8753%" y="789" width="0.0123%" height="15" fill="rgb(213,156,21)" fg:x="6835" fg:w="1"/><text x="84.1253%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (4 samples, 0.05%)</title><rect x="83.8508%" y="965" width="0.0491%" height="15" fill="rgb(254,166,29)" fg:x="6833" fg:w="4"/><text x="84.1008%" y="975.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (3 samples, 0.04%)</title><rect x="83.8631%" y="949" width="0.0368%" height="15" fill="rgb(213,71,1)" fg:x="6834" fg:w="3"/><text x="84.1131%" y="959.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (1 samples, 0.01%)</title><rect x="83.8876%" y="933" width="0.0123%" height="15" fill="rgb(245,8,13)" fg:x="6836" fg:w="1"/><text x="84.1376%" y="943.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.01%)</title><rect x="83.8876%" y="917" width="0.0123%" height="15" fill="rgb(213,32,32)" fg:x="6836" fg:w="1"/><text x="84.1376%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.01%)</title><rect x="83.8876%" y="901" width="0.0123%" height="15" fill="rgb(251,86,50)" fg:x="6836" fg:w="1"/><text x="84.1376%" y="911.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (1 samples, 0.01%)</title><rect x="83.8876%" y="885" width="0.0123%" height="15" fill="rgb(252,92,41)" fg:x="6836" fg:w="1"/><text x="84.1376%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (1 samples, 0.01%)</title><rect x="83.8876%" y="869" width="0.0123%" height="15" fill="rgb(234,70,35)" fg:x="6836" fg:w="1"/><text x="84.1376%" y="879.50"></text></g><g><title>wgpu::BufferSlice::map_async (5 samples, 0.06%)</title><rect x="83.8508%" y="981" width="0.0614%" height="15" fill="rgb(210,157,19)" fg:x="6833" fg:w="5"/><text x="84.1008%" y="991.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="83.8999%" y="965" width="0.0123%" height="15" fill="rgb(206,20,45)" fg:x="6837" fg:w="1"/><text x="84.1499%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="83.8999%" y="949" width="0.0123%" height="15" fill="rgb(207,34,7)" fg:x="6837" fg:w="1"/><text x="84.1499%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.8999%" y="933" width="0.0123%" height="15" fill="rgb(253,151,14)" fg:x="6837" fg:w="1"/><text x="84.1499%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.8999%" y="917" width="0.0123%" height="15" fill="rgb(252,1,18)" fg:x="6837" fg:w="1"/><text x="84.1499%" y="927.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::cleanup (1 samples, 0.01%)</title><rect x="83.9121%" y="869" width="0.0123%" height="15" fill="rgb(214,77,52)" fg:x="6838" fg:w="1"/><text x="84.1621%" y="879.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (2 samples, 0.02%)</title><rect x="83.9121%" y="933" width="0.0245%" height="15" fill="rgb(254,106,35)" fg:x="6838" fg:w="2"/><text x="84.1621%" y="943.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (2 samples, 0.02%)</title><rect x="83.9121%" y="917" width="0.0245%" height="15" fill="rgb(212,67,40)" fg:x="6838" fg:w="2"/><text x="84.1621%" y="927.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (2 samples, 0.02%)</title><rect x="83.9121%" y="901" width="0.0245%" height="15" fill="rgb(228,76,23)" fg:x="6838" fg:w="2"/><text x="84.1621%" y="911.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (2 samples, 0.02%)</title><rect x="83.9121%" y="885" width="0.0245%" height="15" fill="rgb(250,198,5)" fg:x="6838" fg:w="2"/><text x="84.1621%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::values_mut (1 samples, 0.01%)</title><rect x="83.9244%" y="869" width="0.0123%" height="15" fill="rgb(209,20,25)" fg:x="6839" fg:w="1"/><text x="84.1744%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::iter_mut (1 samples, 0.01%)</title><rect x="83.9244%" y="853" width="0.0123%" height="15" fill="rgb(236,32,4)" fg:x="6839" fg:w="1"/><text x="84.1744%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="83.9244%" y="837" width="0.0123%" height="15" fill="rgb(215,31,6)" fg:x="6839" fg:w="1"/><text x="84.1744%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="83.9244%" y="821" width="0.0123%" height="15" fill="rgb(207,186,49)" fg:x="6839" fg:w="1"/><text x="84.1744%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="83.9244%" y="805" width="0.0123%" height="15" fill="rgb(211,212,49)" fg:x="6839" fg:w="1"/><text x="84.1744%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="83.9244%" y="789" width="0.0123%" height="15" fill="rgb(229,51,41)" fg:x="6839" fg:w="1"/><text x="84.1744%" y="799.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (10 samples, 0.12%)</title><rect x="83.8262%" y="997" width="0.1227%" height="15" fill="rgb(205,225,36)" fg:x="6831" fg:w="10"/><text x="84.0762%" y="1007.50"></text></g><g><title>wgpu::Device::poll (3 samples, 0.04%)</title><rect x="83.9121%" y="981" width="0.0368%" height="15" fill="rgb(209,213,45)" fg:x="6838" fg:w="3"/><text x="84.1621%" y="991.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (3 samples, 0.04%)</title><rect x="83.9121%" y="965" width="0.0368%" height="15" fill="rgb(219,35,49)" fg:x="6838" fg:w="3"/><text x="84.1621%" y="975.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (3 samples, 0.04%)</title><rect x="83.9121%" y="949" width="0.0368%" height="15" fill="rgb(215,205,22)" fg:x="6838" fg:w="3"/><text x="84.1621%" y="959.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.01%)</title><rect x="83.9367%" y="933" width="0.0123%" height="15" fill="rgb(248,204,34)" fg:x="6840" fg:w="1"/><text x="84.1867%" y="943.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="83.9367%" y="917" width="0.0123%" height="15" fill="rgb(219,223,31)" fg:x="6840" fg:w="1"/><text x="84.1867%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="83.9367%" y="901" width="0.0123%" height="15" fill="rgb(236,14,8)" fg:x="6840" fg:w="1"/><text x="84.1867%" y="911.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (1 samples, 0.01%)</title><rect x="83.9367%" y="885" width="0.0123%" height="15" fill="rgb(243,129,23)" fg:x="6840" fg:w="1"/><text x="84.1867%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (1 samples, 0.01%)</title><rect x="83.9367%" y="869" width="0.0123%" height="15" fill="rgb(205,204,5)" fg:x="6840" fg:w="1"/><text x="84.1867%" y="879.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="83.9367%" y="853" width="0.0123%" height="15" fill="rgb(244,115,32)" fg:x="6840" fg:w="1"/><text x="84.1867%" y="863.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="83.9367%" y="837" width="0.0123%" height="15" fill="rgb(229,123,14)" fg:x="6840" fg:w="1"/><text x="84.1867%" y="847.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="83.9367%" y="821" width="0.0123%" height="15" fill="rgb(250,85,1)" fg:x="6840" fg:w="1"/><text x="84.1867%" y="831.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="83.9367%" y="805" width="0.0123%" height="15" fill="rgb(209,141,54)" fg:x="6840" fg:w="1"/><text x="84.1867%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="83.9367%" y="789" width="0.0123%" height="15" fill="rgb(244,107,39)" fg:x="6840" fg:w="1"/><text x="84.1867%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::device::Device&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="83.9490%" y="933" width="0.0123%" height="15" fill="rgb(230,68,26)" fg:x="6841" fg:w="1"/><text x="84.1990%" y="943.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="83.9490%" y="917" width="0.0123%" height="15" fill="rgb(220,178,33)" fg:x="6841" fg:w="1"/><text x="84.1990%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1 samples, 0.01%)</title><rect x="83.9490%" y="901" width="0.0123%" height="15" fill="rgb(220,77,53)" fg:x="6841" fg:w="1"/><text x="84.1990%" y="911.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (1 samples, 0.01%)</title><rect x="83.9490%" y="885" width="0.0123%" height="15" fill="rgb(224,108,19)" fg:x="6841" fg:w="1"/><text x="84.1990%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::wake_parked_threads (1 samples, 0.01%)</title><rect x="83.9490%" y="869" width="0.0123%" height="15" fill="rgb(223,203,27)" fg:x="6841" fg:w="1"/><text x="84.1990%" y="879.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_filter (1 samples, 0.01%)</title><rect x="83.9490%" y="853" width="0.0123%" height="15" fill="rgb(211,32,46)" fg:x="6841" fg:w="1"/><text x="84.1990%" y="863.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (2 samples, 0.02%)</title><rect x="83.9490%" y="997" width="0.0245%" height="15" fill="rgb(240,101,27)" fg:x="6841" fg:w="2"/><text x="84.1990%" y="1007.50"></text></g><g><title>wgpu::Buffer::unmap (2 samples, 0.02%)</title><rect x="83.9490%" y="981" width="0.0245%" height="15" fill="rgb(217,210,11)" fg:x="6841" fg:w="2"/><text x="84.1990%" y="991.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (2 samples, 0.02%)</title><rect x="83.9490%" y="965" width="0.0245%" height="15" fill="rgb(236,130,21)" fg:x="6841" fg:w="2"/><text x="84.1990%" y="975.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (2 samples, 0.02%)</title><rect x="83.9490%" y="949" width="0.0245%" height="15" fill="rgb(250,136,8)" fg:x="6841" fg:w="2"/><text x="84.1990%" y="959.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (1 samples, 0.01%)</title><rect x="83.9612%" y="933" width="0.0123%" height="15" fill="rgb(243,223,36)" fg:x="6842" fg:w="1"/><text x="84.2112%" y="943.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.01%)</title><rect x="83.9612%" y="917" width="0.0123%" height="15" fill="rgb(246,184,8)" fg:x="6842" fg:w="1"/><text x="84.2112%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.01%)</title><rect x="83.9612%" y="901" width="0.0123%" height="15" fill="rgb(222,158,36)" fg:x="6842" fg:w="1"/><text x="84.2112%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.9612%" y="885" width="0.0123%" height="15" fill="rgb(210,220,19)" fg:x="6842" fg:w="1"/><text x="84.2112%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="83.9612%" y="869" width="0.0123%" height="15" fill="rgb(246,44,38)" fg:x="6842" fg:w="1"/><text x="84.2112%" y="879.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="83.9735%" y="997" width="0.0123%" height="15" fill="rgb(246,186,14)" fg:x="6843" fg:w="1"/><text x="84.2235%" y="1007.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="83.9735%" y="981" width="0.0123%" height="15" fill="rgb(233,193,20)" fg:x="6843" fg:w="1"/><text x="84.2235%" y="991.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.01%)</title><rect x="83.9735%" y="965" width="0.0123%" height="15" fill="rgb(215,60,5)" fg:x="6843" fg:w="1"/><text x="84.2235%" y="975.50"></text></g><g><title>&lt;ahash::random_state::DefaultRandomSource as ahash::random_state::RandomSource&gt;::gen_hasher_seed (1 samples, 0.01%)</title><rect x="83.9735%" y="949" width="0.0123%" height="15" fill="rgb(207,128,10)" fg:x="6843" fg:w="1"/><text x="84.2235%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="83.9735%" y="933" width="0.0123%" height="15" fill="rgb(238,84,54)" fg:x="6843" fg:w="1"/><text x="84.2235%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="83.9735%" y="917" width="0.0123%" height="15" fill="rgb(213,130,11)" fg:x="6843" fg:w="1"/><text x="84.2235%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8 samples, 0.10%)</title><rect x="83.9858%" y="901" width="0.0982%" height="15" fill="rgb(235,62,9)" fg:x="6844" fg:w="8"/><text x="84.2358%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (8 samples, 0.10%)</title><rect x="83.9858%" y="885" width="0.0982%" height="15" fill="rgb(222,64,24)" fg:x="6844" fg:w="8"/><text x="84.2358%" y="895.50"></text></g><g><title>alloc::alloc::realloc (8 samples, 0.10%)</title><rect x="83.9858%" y="869" width="0.0982%" height="15" fill="rgb(238,193,42)" fg:x="6844" fg:w="8"/><text x="84.2358%" y="879.50"></text></g><g><title>__rdl_realloc (8 samples, 0.10%)</title><rect x="83.9858%" y="853" width="0.0982%" height="15" fill="rgb(243,204,46)" fg:x="6844" fg:w="8"/><text x="84.2358%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (8 samples, 0.10%)</title><rect x="83.9858%" y="837" width="0.0982%" height="15" fill="rgb(243,196,11)" fg:x="6844" fg:w="8"/><text x="84.2358%" y="847.50"></text></g><g><title>__GI___libc_realloc (8 samples, 0.10%)</title><rect x="83.9858%" y="821" width="0.0982%" height="15" fill="rgb(232,77,22)" fg:x="6844" fg:w="8"/><text x="84.2358%" y="831.50"></text></g><g><title>_int_realloc (8 samples, 0.10%)</title><rect x="83.9858%" y="805" width="0.0982%" height="15" fill="rgb(215,80,25)" fg:x="6844" fg:w="8"/><text x="84.2358%" y="815.50"></text></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="84.0103%" y="789" width="0.0736%" height="15" fill="rgb(210,173,7)" fg:x="6846" fg:w="6"/><text x="84.2603%" y="799.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="84.0717%" y="773" width="0.0123%" height="15" fill="rgb(207,101,10)" fg:x="6851" fg:w="1"/><text x="84.3217%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (9 samples, 0.11%)</title><rect x="83.9858%" y="981" width="0.1104%" height="15" fill="rgb(246,57,48)" fg:x="6844" fg:w="9"/><text x="84.2358%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (9 samples, 0.11%)</title><rect x="83.9858%" y="965" width="0.1104%" height="15" fill="rgb(236,184,40)" fg:x="6844" fg:w="9"/><text x="84.2358%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (9 samples, 0.11%)</title><rect x="83.9858%" y="949" width="0.1104%" height="15" fill="rgb(210,205,13)" fg:x="6844" fg:w="9"/><text x="84.2358%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (9 samples, 0.11%)</title><rect x="83.9858%" y="933" width="0.1104%" height="15" fill="rgb(231,129,42)" fg:x="6844" fg:w="9"/><text x="84.2358%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (9 samples, 0.11%)</title><rect x="83.9858%" y="917" width="0.1104%" height="15" fill="rgb(220,229,54)" fg:x="6844" fg:w="9"/><text x="84.2358%" y="927.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="84.0839%" y="901" width="0.0123%" height="15" fill="rgb(230,192,26)" fg:x="6852" fg:w="1"/><text x="84.3339%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.12%)</title><rect x="83.9858%" y="997" width="0.1227%" height="15" fill="rgb(253,18,30)" fg:x="6844" fg:w="10"/><text x="84.2358%" y="1007.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="84.0962%" y="981" width="0.0123%" height="15" fill="rgb(216,62,53)" fg:x="6853" fg:w="1"/><text x="84.3462%" y="991.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="84.1085%" y="997" width="0.0123%" height="15" fill="rgb(230,79,29)" fg:x="6854" fg:w="1"/><text x="84.3585%" y="1007.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter_with_id (1 samples, 0.01%)</title><rect x="84.1085%" y="981" width="0.0123%" height="15" fill="rgb(242,26,26)" fg:x="6854" fg:w="1"/><text x="84.3585%" y="991.50"></text></g><g><title>bevy_app::event::internal_event_reader (1 samples, 0.01%)</title><rect x="84.1085%" y="965" width="0.0123%" height="15" fill="rgb(227,125,21)" fg:x="6854" fg:w="1"/><text x="84.3585%" y="975.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="84.1085%" y="949" width="0.0123%" height="15" fill="rgb(229,93,26)" fg:x="6854" fg:w="1"/><text x="84.3585%" y="959.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="84.1085%" y="933" width="0.0123%" height="15" fill="rgb(227,228,8)" fg:x="6854" fg:w="1"/><text x="84.3585%" y="943.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="84.1085%" y="917" width="0.0123%" height="15" fill="rgb(233,56,0)" fg:x="6854" fg:w="1"/><text x="84.3585%" y="927.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (14 samples, 0.17%)</title><rect x="84.1453%" y="885" width="0.1718%" height="15" fill="rgb(225,185,17)" fg:x="6857" fg:w="14"/><text x="84.3953%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.20%)</title><rect x="84.1453%" y="917" width="0.1963%" height="15" fill="rgb(238,202,30)" fg:x="6857" fg:w="16"/><text x="84.3953%" y="927.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (16 samples, 0.20%)</title><rect x="84.1453%" y="901" width="0.1963%" height="15" fill="rgb(236,60,13)" fg:x="6857" fg:w="16"/><text x="84.3953%" y="911.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="84.3171%" y="885" width="0.0245%" height="15" fill="rgb(244,92,0)" fg:x="6871" fg:w="2"/><text x="84.5671%" y="895.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (19 samples, 0.23%)</title><rect x="84.1208%" y="997" width="0.2332%" height="15" fill="rgb(225,57,15)" fg:x="6855" fg:w="19"/><text x="84.3708%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.21%)</title><rect x="84.1453%" y="981" width="0.2086%" height="15" fill="rgb(228,5,28)" fg:x="6857" fg:w="17"/><text x="84.3953%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (17 samples, 0.21%)</title><rect x="84.1453%" y="965" width="0.2086%" height="15" fill="rgb(252,34,51)" fg:x="6857" fg:w="17"/><text x="84.3953%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (17 samples, 0.21%)</title><rect x="84.1453%" y="949" width="0.2086%" height="15" fill="rgb(235,58,7)" fg:x="6857" fg:w="17"/><text x="84.3953%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.21%)</title><rect x="84.1453%" y="933" width="0.2086%" height="15" fill="rgb(250,132,20)" fg:x="6857" fg:w="17"/><text x="84.3953%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="84.3416%" y="917" width="0.0123%" height="15" fill="rgb(217,164,0)" fg:x="6873" fg:w="1"/><text x="84.5916%" y="927.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="84.3539%" y="997" width="0.0123%" height="15" fill="rgb(208,220,35)" fg:x="6874" fg:w="1"/><text x="84.6039%" y="1007.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="84.3539%" y="981" width="0.0123%" height="15" fill="rgb(227,42,51)" fg:x="6874" fg:w="1"/><text x="84.6039%" y="991.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="84.3539%" y="965" width="0.0123%" height="15" fill="rgb(225,146,38)" fg:x="6874" fg:w="1"/><text x="84.6039%" y="975.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="84.3539%" y="949" width="0.0123%" height="15" fill="rgb(252,108,37)" fg:x="6874" fg:w="1"/><text x="84.6039%" y="959.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="84.3539%" y="933" width="0.0123%" height="15" fill="rgb(244,101,24)" fg:x="6874" fg:w="1"/><text x="84.6039%" y="943.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::resize_buffer_arrays (1 samples, 0.01%)</title><rect x="84.3662%" y="997" width="0.0123%" height="15" fill="rgb(213,161,50)" fg:x="6875" fg:w="1"/><text x="84.6162%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="84.3662%" y="981" width="0.0123%" height="15" fill="rgb(248,159,19)" fg:x="6875" fg:w="1"/><text x="84.6162%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="84.3662%" y="965" width="0.0123%" height="15" fill="rgb(233,179,15)" fg:x="6875" fg:w="1"/><text x="84.6162%" y="975.50"></text></g><g><title>&lt;&amp;mut core::option::Option&lt;T&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="84.3662%" y="949" width="0.0123%" height="15" fill="rgb(248,178,3)" fg:x="6875" fg:w="1"/><text x="84.6162%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::iter_mut (1 samples, 0.01%)</title><rect x="84.3662%" y="933" width="0.0123%" height="15" fill="rgb(245,190,41)" fg:x="6875" fg:w="1"/><text x="84.6162%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="84.3662%" y="917" width="0.0123%" height="15" fill="rgb(218,151,19)" fg:x="6875" fg:w="1"/><text x="84.6162%" y="927.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::resize_staging_buffer (1 samples, 0.01%)</title><rect x="84.3785%" y="997" width="0.0123%" height="15" fill="rgb(245,25,44)" fg:x="6876" fg:w="1"/><text x="84.6285%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="84.3907%" y="981" width="0.0736%" height="15" fill="rgb(235,172,47)" fg:x="6877" fg:w="6"/><text x="84.6407%" y="991.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.07%)</title><rect x="84.3907%" y="965" width="0.0736%" height="15" fill="rgb(246,33,12)" fg:x="6877" fg:w="6"/><text x="84.6407%" y="975.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlas as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::get_render_resource (3 samples, 0.04%)</title><rect x="84.4275%" y="949" width="0.0368%" height="15" fill="rgb(214,124,7)" fg:x="6880" fg:w="3"/><text x="84.6775%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;(bevy_asset::handle::HandleUntyped,u64),bevy_render::renderer::render_resource::render_resource::RenderResourceId,ahash::random_state::RandomState&gt;&gt;&gt; (4 samples, 0.05%)</title><rect x="84.4644%" y="949" width="0.0491%" height="15" fill="rgb(246,186,18)" fg:x="6883" fg:w="4"/><text x="84.7144%" y="959.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.05%)</title><rect x="84.4644%" y="933" width="0.0491%" height="15" fill="rgb(231,94,1)" fg:x="6883" fg:w="4"/><text x="84.7144%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (4 samples, 0.05%)</title><rect x="84.4644%" y="917" width="0.0491%" height="15" fill="rgb(208,33,48)" fg:x="6883" fg:w="4"/><text x="84.7144%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.05%)</title><rect x="84.4644%" y="901" width="0.0491%" height="15" fill="rgb(208,195,44)" fg:x="6883" fg:w="4"/><text x="84.7144%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.05%)</title><rect x="84.4644%" y="885" width="0.0491%" height="15" fill="rgb(226,13,52)" fg:x="6883" fg:w="4"/><text x="84.7144%" y="895.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.02%)</title><rect x="84.5134%" y="949" width="0.0245%" height="15" fill="rgb(217,219,45)" fg:x="6887" fg:w="2"/><text x="84.7634%" y="959.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.02%)</title><rect x="84.5134%" y="933" width="0.0245%" height="15" fill="rgb(223,45,25)" fg:x="6887" fg:w="2"/><text x="84.7634%" y="943.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (2 samples, 0.02%)</title><rect x="84.5134%" y="917" width="0.0245%" height="15" fill="rgb(241,163,0)" fg:x="6887" fg:w="2"/><text x="84.7634%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="84.5134%" y="901" width="0.0245%" height="15" fill="rgb(216,68,47)" fg:x="6887" fg:w="2"/><text x="84.7634%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="84.5134%" y="885" width="0.0245%" height="15" fill="rgb(236,119,45)" fg:x="6887" fg:w="2"/><text x="84.7634%" y="895.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="84.5380%" y="869" width="0.0123%" height="15" fill="rgb(209,188,24)" fg:x="6889" fg:w="1"/><text x="84.7880%" y="879.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="84.5380%" y="853" width="0.0123%" height="15" fill="rgb(221,118,7)" fg:x="6889" fg:w="1"/><text x="84.7880%" y="863.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (8 samples, 0.10%)</title><rect x="84.4644%" y="965" width="0.0982%" height="15" fill="rgb(213,148,43)" fg:x="6883" fg:w="8"/><text x="84.7144%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="84.5380%" y="949" width="0.0245%" height="15" fill="rgb(231,21,43)" fg:x="6889" fg:w="2"/><text x="84.7880%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="84.5380%" y="933" width="0.0245%" height="15" fill="rgb(232,213,43)" fg:x="6889" fg:w="2"/><text x="84.7880%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="84.5380%" y="917" width="0.0245%" height="15" fill="rgb(239,145,50)" fg:x="6889" fg:w="2"/><text x="84.7880%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="84.5380%" y="901" width="0.0245%" height="15" fill="rgb(222,131,18)" fg:x="6889" fg:w="2"/><text x="84.7880%" y="911.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.02%)</title><rect x="84.5380%" y="885" width="0.0245%" height="15" fill="rgb(243,181,13)" fg:x="6889" fg:w="2"/><text x="84.7880%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.01%)</title><rect x="84.5503%" y="869" width="0.0123%" height="15" fill="rgb(212,74,41)" fg:x="6890" fg:w="1"/><text x="84.8003%" y="879.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="84.5503%" y="853" width="0.0123%" height="15" fill="rgb(237,143,34)" fg:x="6890" fg:w="1"/><text x="84.8003%" y="863.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="84.5503%" y="837" width="0.0123%" height="15" fill="rgb(228,139,0)" fg:x="6890" fg:w="1"/><text x="84.8003%" y="847.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="84.5503%" y="821" width="0.0123%" height="15" fill="rgb(227,214,11)" fg:x="6890" fg:w="1"/><text x="84.8003%" y="831.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (9 samples, 0.11%)</title><rect x="84.4644%" y="981" width="0.1104%" height="15" fill="rgb(228,118,39)" fg:x="6883" fg:w="9"/><text x="84.7144%" y="991.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::clone_weak_untyped (1 samples, 0.01%)</title><rect x="84.5625%" y="965" width="0.0123%" height="15" fill="rgb(207,117,22)" fg:x="6891" fg:w="1"/><text x="84.8125%" y="975.50"></text></g><g><title>&lt;glam::vec2::Vec2 as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::resource_type (1 samples, 0.01%)</title><rect x="84.5748%" y="981" width="0.0123%" height="15" fill="rgb(225,91,8)" fg:x="6892" fg:w="1"/><text x="84.8248%" y="991.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.04%)</title><rect x="84.5871%" y="773" width="0.0368%" height="15" fill="rgb(230,219,48)" fg:x="6893" fg:w="3"/><text x="84.8371%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.01%)</title><rect x="84.6239%" y="773" width="0.0123%" height="15" fill="rgb(244,0,23)" fg:x="6896" fg:w="1"/><text x="84.8739%" y="783.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="84.6852%" y="645" width="0.0245%" height="15" fill="rgb(206,212,23)" fg:x="6901" fg:w="2"/><text x="84.9352%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.12%)</title><rect x="84.6484%" y="757" width="0.1227%" height="15" fill="rgb(254,62,10)" fg:x="6898" fg:w="10"/><text x="84.8984%" y="767.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.12%)</title><rect x="84.6484%" y="741" width="0.1227%" height="15" fill="rgb(236,58,8)" fg:x="6898" fg:w="10"/><text x="84.8984%" y="751.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.12%)</title><rect x="84.6484%" y="725" width="0.1227%" height="15" fill="rgb(232,212,17)" fg:x="6898" fg:w="10"/><text x="84.8984%" y="735.50"></text></g><g><title>__rdl_realloc (10 samples, 0.12%)</title><rect x="84.6484%" y="709" width="0.1227%" height="15" fill="rgb(206,132,9)" fg:x="6898" fg:w="10"/><text x="84.8984%" y="719.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (10 samples, 0.12%)</title><rect x="84.6484%" y="693" width="0.1227%" height="15" fill="rgb(234,97,28)" fg:x="6898" fg:w="10"/><text x="84.8984%" y="703.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.12%)</title><rect x="84.6484%" y="677" width="0.1227%" height="15" fill="rgb(254,144,9)" fg:x="6898" fg:w="10"/><text x="84.8984%" y="687.50"></text></g><g><title>_int_realloc (8 samples, 0.10%)</title><rect x="84.6730%" y="661" width="0.0982%" height="15" fill="rgb(244,204,43)" fg:x="6900" fg:w="8"/><text x="84.9230%" y="671.50"></text></g><g><title>_int_malloc (5 samples, 0.06%)</title><rect x="84.7098%" y="645" width="0.0614%" height="15" fill="rgb(248,177,16)" fg:x="6903" fg:w="5"/><text x="84.9598%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (12 samples, 0.15%)</title><rect x="84.6362%" y="773" width="0.1473%" height="15" fill="rgb(219,110,15)" fg:x="6897" fg:w="12"/><text x="84.8862%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="84.7711%" y="757" width="0.0123%" height="15" fill="rgb(212,203,25)" fg:x="6908" fg:w="1"/><text x="85.0211%" y="767.50"></text></g><g><title>alloc::fmt::format (17 samples, 0.21%)</title><rect x="84.5871%" y="981" width="0.2086%" height="15" fill="rgb(205,50,1)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="991.50"></text></g><g><title>core::fmt::Write::write_fmt (17 samples, 0.21%)</title><rect x="84.5871%" y="965" width="0.2086%" height="15" fill="rgb(222,152,41)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="975.50"></text></g><g><title>core::fmt::write (17 samples, 0.21%)</title><rect x="84.5871%" y="949" width="0.2086%" height="15" fill="rgb(236,83,3)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="959.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (17 samples, 0.21%)</title><rect x="84.5871%" y="933" width="0.2086%" height="15" fill="rgb(214,30,54)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="943.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (17 samples, 0.21%)</title><rect x="84.5871%" y="917" width="0.2086%" height="15" fill="rgb(250,117,31)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="927.50"></text></g><g><title>alloc::string::String::push_str (17 samples, 0.21%)</title><rect x="84.5871%" y="901" width="0.2086%" height="15" fill="rgb(228,77,14)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.21%)</title><rect x="84.5871%" y="885" width="0.2086%" height="15" fill="rgb(241,3,28)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.21%)</title><rect x="84.5871%" y="869" width="0.2086%" height="15" fill="rgb(221,175,52)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.21%)</title><rect x="84.5871%" y="853" width="0.2086%" height="15" fill="rgb(237,91,6)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.21%)</title><rect x="84.5871%" y="837" width="0.2086%" height="15" fill="rgb(246,46,42)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.21%)</title><rect x="84.5871%" y="821" width="0.2086%" height="15" fill="rgb(235,199,0)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (17 samples, 0.21%)</title><rect x="84.5871%" y="805" width="0.2086%" height="15" fill="rgb(224,44,40)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (17 samples, 0.21%)</title><rect x="84.5871%" y="789" width="0.2086%" height="15" fill="rgb(209,24,35)" fg:x="6893" fg:w="17"/><text x="84.8371%" y="799.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="84.7834%" y="773" width="0.0123%" height="15" fill="rgb(244,46,22)" fg:x="6909" fg:w="1"/><text x="85.0334%" y="783.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="84.7834%" y="757" width="0.0123%" height="15" fill="rgb(235,99,8)" fg:x="6909" fg:w="1"/><text x="85.0334%" y="767.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.01%)</title><rect x="84.7834%" y="741" width="0.0123%" height="15" fill="rgb(218,127,36)" fg:x="6909" fg:w="1"/><text x="85.0334%" y="751.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (35 samples, 0.43%)</title><rect x="84.3907%" y="997" width="0.4295%" height="15" fill="rgb(238,47,46)" fg:x="6877" fg:w="35"/><text x="84.6407%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (2 samples, 0.02%)</title><rect x="84.7957%" y="981" width="0.0245%" height="15" fill="rgb(233,65,17)" fg:x="6910" fg:w="2"/><text x="85.0457%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="84.7957%" y="965" width="0.0245%" height="15" fill="rgb(239,22,33)" fg:x="6910" fg:w="2"/><text x="85.0457%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (2 samples, 0.02%)</title><rect x="84.7957%" y="949" width="0.0245%" height="15" fill="rgb(243,66,43)" fg:x="6910" fg:w="2"/><text x="85.0457%" y="959.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="84.7957%" y="933" width="0.0245%" height="15" fill="rgb(235,210,28)" fg:x="6910" fg:w="2"/><text x="85.0457%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="84.7957%" y="917" width="0.0245%" height="15" fill="rgb(205,191,50)" fg:x="6910" fg:w="2"/><text x="85.0457%" y="927.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="84.7957%" y="901" width="0.0245%" height="15" fill="rgb(251,217,19)" fg:x="6910" fg:w="2"/><text x="85.0457%" y="911.50"></text></g><g><title>__rdl_dealloc (2 samples, 0.02%)</title><rect x="84.7957%" y="885" width="0.0245%" height="15" fill="rgb(205,174,37)" fg:x="6910" fg:w="2"/><text x="85.0457%" y="895.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (2 samples, 0.02%)</title><rect x="84.7957%" y="869" width="0.0245%" height="15" fill="rgb(212,158,42)" fg:x="6910" fg:w="2"/><text x="85.0457%" y="879.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="84.7957%" y="853" width="0.0245%" height="15" fill="rgb(212,208,51)" fg:x="6910" fg:w="2"/><text x="85.0457%" y="863.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="84.7957%" y="837" width="0.0245%" height="15" fill="rgb(225,198,20)" fg:x="6910" fg:w="2"/><text x="85.0457%" y="847.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (2 samples, 0.02%)</title><rect x="84.8202%" y="981" width="0.0245%" height="15" fill="rgb(247,41,44)" fg:x="6912" fg:w="2"/><text x="85.0702%" y="991.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (2 samples, 0.02%)</title><rect x="84.8202%" y="965" width="0.0245%" height="15" fill="rgb(228,33,41)" fg:x="6912" fg:w="2"/><text x="85.0702%" y="975.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::into_mut (1 samples, 0.01%)</title><rect x="84.8325%" y="949" width="0.0123%" height="15" fill="rgb(215,47,52)" fg:x="6913" fg:w="1"/><text x="85.0825%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="84.8325%" y="933" width="0.0123%" height="15" fill="rgb(248,106,37)" fg:x="6913" fg:w="1"/><text x="85.0825%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="84.8325%" y="917" width="0.0123%" height="15" fill="rgb(238,91,29)" fg:x="6913" fg:w="1"/><text x="85.0825%" y="927.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (1 samples, 0.01%)</title><rect x="84.8570%" y="965" width="0.0123%" height="15" fill="rgb(226,111,40)" fg:x="6915" fg:w="1"/><text x="85.1070%" y="975.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="84.8693%" y="901" width="0.0123%" height="15" fill="rgb(229,159,36)" fg:x="6916" fg:w="1"/><text x="85.1193%" y="911.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="84.8693%" y="885" width="0.0123%" height="15" fill="rgb(221,109,4)" fg:x="6916" fg:w="1"/><text x="85.1193%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="84.8693%" y="869" width="0.0123%" height="15" fill="rgb(236,56,25)" fg:x="6916" fg:w="1"/><text x="85.1193%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="84.8693%" y="853" width="0.0123%" height="15" fill="rgb(244,113,23)" fg:x="6916" fg:w="1"/><text x="85.1193%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="84.8693%" y="837" width="0.0123%" height="15" fill="rgb(249,132,2)" fg:x="6916" fg:w="1"/><text x="85.1193%" y="847.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="84.8693%" y="821" width="0.0123%" height="15" fill="rgb(205,185,21)" fg:x="6916" fg:w="1"/><text x="85.1193%" y="831.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="84.8693%" y="917" width="0.0245%" height="15" fill="rgb(245,130,2)" fg:x="6916" fg:w="2"/><text x="85.1193%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="84.8816%" y="901" width="0.0123%" height="15" fill="rgb(246,71,26)" fg:x="6917" fg:w="1"/><text x="85.1316%" y="911.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="84.8816%" y="885" width="0.0123%" height="15" fill="rgb(234,194,6)" fg:x="6917" fg:w="1"/><text x="85.1316%" y="895.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="84.8816%" y="869" width="0.0123%" height="15" fill="rgb(206,24,32)" fg:x="6917" fg:w="1"/><text x="85.1316%" y="879.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="84.8816%" y="853" width="0.0123%" height="15" fill="rgb(233,7,54)" fg:x="6917" fg:w="1"/><text x="85.1316%" y="863.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="84.8816%" y="837" width="0.0123%" height="15" fill="rgb(252,46,1)" fg:x="6917" fg:w="1"/><text x="85.1316%" y="847.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="84.8816%" y="821" width="0.0123%" height="15" fill="rgb(216,113,53)" fg:x="6917" fg:w="1"/><text x="85.1316%" y="831.50"></text></g><g><title>hashbrown::map::make_insert_hash (3 samples, 0.04%)</title><rect x="84.8693%" y="949" width="0.0368%" height="15" fill="rgb(215,40,24)" fg:x="6916" fg:w="3"/><text x="85.1193%" y="959.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (3 samples, 0.04%)</title><rect x="84.8693%" y="933" width="0.0368%" height="15" fill="rgb(233,222,8)" fg:x="6916" fg:w="3"/><text x="85.1193%" y="943.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="84.8939%" y="917" width="0.0123%" height="15" fill="rgb(248,73,28)" fg:x="6918" fg:w="1"/><text x="85.1439%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="84.9061%" y="933" width="0.0123%" height="15" fill="rgb(247,126,28)" fg:x="6919" fg:w="1"/><text x="85.1561%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="84.9061%" y="917" width="0.0123%" height="15" fill="rgb(242,173,54)" fg:x="6919" fg:w="1"/><text x="85.1561%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="84.9061%" y="901" width="0.0123%" height="15" fill="rgb(244,186,22)" fg:x="6919" fg:w="1"/><text x="85.1561%" y="911.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="84.9061%" y="885" width="0.0123%" height="15" fill="rgb(231,187,4)" fg:x="6919" fg:w="1"/><text x="85.1561%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="84.9184%" y="933" width="0.0123%" height="15" fill="rgb(252,66,47)" fg:x="6920" fg:w="1"/><text x="85.1684%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="84.9184%" y="917" width="0.0123%" height="15" fill="rgb(240,228,28)" fg:x="6920" fg:w="1"/><text x="85.1684%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="84.9184%" y="901" width="0.0123%" height="15" fill="rgb(237,63,43)" fg:x="6920" fg:w="1"/><text x="85.1684%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="84.9184%" y="885" width="0.0123%" height="15" fill="rgb(214,1,44)" fg:x="6920" fg:w="1"/><text x="85.1684%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="84.9184%" y="869" width="0.0123%" height="15" fill="rgb(212,2,46)" fg:x="6920" fg:w="1"/><text x="85.1684%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="84.9184%" y="853" width="0.0123%" height="15" fill="rgb(213,142,5)" fg:x="6920" fg:w="1"/><text x="85.1684%" y="863.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (14 samples, 0.17%)</title><rect x="84.8693%" y="965" width="0.1718%" height="15" fill="rgb(229,135,1)" fg:x="6916" fg:w="14"/><text x="85.1193%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.13%)</title><rect x="84.9061%" y="949" width="0.1350%" height="15" fill="rgb(252,98,38)" fg:x="6919" fg:w="11"/><text x="85.1561%" y="959.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (9 samples, 0.11%)</title><rect x="84.9307%" y="933" width="0.1104%" height="15" fill="rgb(206,89,40)" fg:x="6921" fg:w="9"/><text x="85.1807%" y="943.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (9 samples, 0.11%)</title><rect x="84.9307%" y="917" width="0.1104%" height="15" fill="rgb(219,73,36)" fg:x="6921" fg:w="9"/><text x="85.1807%" y="927.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (9 samples, 0.11%)</title><rect x="84.9307%" y="901" width="0.1104%" height="15" fill="rgb(207,168,32)" fg:x="6921" fg:w="9"/><text x="85.1807%" y="911.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (19 samples, 0.23%)</title><rect x="84.8202%" y="997" width="0.2332%" height="15" fill="rgb(215,113,21)" fg:x="6912" fg:w="19"/><text x="85.0702%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (17 samples, 0.21%)</title><rect x="84.8448%" y="981" width="0.2086%" height="15" fill="rgb(217,144,43)" fg:x="6914" fg:w="17"/><text x="85.0948%" y="991.50"></text></g><g><title>std::collections::hash::map::map_entry (1 samples, 0.01%)</title><rect x="85.0411%" y="965" width="0.0123%" height="15" fill="rgb(249,48,50)" fg:x="6930" fg:w="1"/><text x="85.2911%" y="975.50"></text></g><g><title>core::mem::take (1 samples, 0.01%)</title><rect x="85.0534%" y="997" width="0.0123%" height="15" fill="rgb(242,1,26)" fg:x="6931" fg:w="1"/><text x="85.3034%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="85.0534%" y="981" width="0.0123%" height="15" fill="rgb(231,167,42)" fg:x="6931" fg:w="1"/><text x="85.3034%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="85.0534%" y="965" width="0.0123%" height="15" fill="rgb(242,177,45)" fg:x="6931" fg:w="1"/><text x="85.3034%" y="975.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (184 samples, 2.26%)</title><rect x="82.8200%" y="1333" width="2.2579%" height="15" fill="rgb(232,121,42)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1343.50">b..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (184 samples, 2.26%)</title><rect x="82.8200%" y="1317" width="2.2579%" height="15" fill="rgb(205,8,42)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1327.50">&lt;..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (184 samples, 2.26%)</title><rect x="82.8200%" y="1301" width="2.2579%" height="15" fill="rgb(238,199,24)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1311.50">b..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (184 samples, 2.26%)</title><rect x="82.8200%" y="1285" width="2.2579%" height="15" fill="rgb(228,112,2)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1295.50">&lt;..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (184 samples, 2.26%)</title><rect x="82.8200%" y="1269" width="2.2579%" height="15" fill="rgb(215,115,33)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1279.50">&lt;..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (184 samples, 2.26%)</title><rect x="82.8200%" y="1253" width="2.2579%" height="15" fill="rgb(230,209,34)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1263.50">b..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (184 samples, 2.26%)</title><rect x="82.8200%" y="1237" width="2.2579%" height="15" fill="rgb(246,76,12)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1247.50">s..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (184 samples, 2.26%)</title><rect x="82.8200%" y="1221" width="2.2579%" height="15" fill="rgb(240,110,9)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1231.50">s..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (184 samples, 2.26%)</title><rect x="82.8200%" y="1205" width="2.2579%" height="15" fill="rgb(224,94,46)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1215.50">b..</text></g><g><title>async_executor::Executor::try_tick (184 samples, 2.26%)</title><rect x="82.8200%" y="1189" width="2.2579%" height="15" fill="rgb(247,150,22)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1199.50">a..</text></g><g><title>async_task::runnable::Runnable::run (184 samples, 2.26%)</title><rect x="82.8200%" y="1173" width="2.2579%" height="15" fill="rgb(249,85,13)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1183.50">a..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (184 samples, 2.26%)</title><rect x="82.8200%" y="1157" width="2.2579%" height="15" fill="rgb(208,77,41)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1167.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (184 samples, 2.26%)</title><rect x="82.8200%" y="1141" width="2.2579%" height="15" fill="rgb(240,42,44)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1151.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (184 samples, 2.26%)</title><rect x="82.8200%" y="1125" width="2.2579%" height="15" fill="rgb(222,10,51)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1135.50">a..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (184 samples, 2.26%)</title><rect x="82.8200%" y="1109" width="2.2579%" height="15" fill="rgb(208,146,53)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1119.50">&lt;..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (184 samples, 2.26%)</title><rect x="82.8200%" y="1093" width="2.2579%" height="15" fill="rgb(236,162,23)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1103.50">b..</text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (184 samples, 2.26%)</title><rect x="82.8200%" y="1077" width="2.2579%" height="15" fill="rgb(218,66,21)" fg:x="6749" fg:w="184"/><text x="83.0700%" y="1087.50">&lt;..</text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (107 samples, 1.31%)</title><rect x="83.7649%" y="1061" width="1.3130%" height="15" fill="rgb(233,6,47)" fg:x="6826" fg:w="107"/><text x="84.0149%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (107 samples, 1.31%)</title><rect x="83.7649%" y="1045" width="1.3130%" height="15" fill="rgb(236,59,51)" fg:x="6826" fg:w="107"/><text x="84.0149%" y="1055.50"></text></g><g><title>core::ops::function::Fn::call (107 samples, 1.31%)</title><rect x="83.7649%" y="1029" width="1.3130%" height="15" fill="rgb(242,12,46)" fg:x="6826" fg:w="107"/><text x="84.0149%" y="1039.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (107 samples, 1.31%)</title><rect x="83.7649%" y="1013" width="1.3130%" height="15" fill="rgb(243,142,19)" fg:x="6826" fg:w="107"/><text x="84.0149%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bevy_asset::handle::HandleId&gt;&gt; (1 samples, 0.01%)</title><rect x="85.0657%" y="997" width="0.0123%" height="15" fill="rgb(217,28,17)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="1007.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="85.0657%" y="981" width="0.0123%" height="15" fill="rgb(228,2,27)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bevy_asset::handle::HandleId,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="85.0657%" y="965" width="0.0123%" height="15" fill="rgb(214,221,4)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="975.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="85.0657%" y="949" width="0.0123%" height="15" fill="rgb(224,69,26)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_asset::handle::HandleId&gt;&gt; (1 samples, 0.01%)</title><rect x="85.0657%" y="933" width="0.0123%" height="15" fill="rgb(219,70,4)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="943.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="85.0657%" y="917" width="0.0123%" height="15" fill="rgb(218,157,39)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="85.0657%" y="901" width="0.0123%" height="15" fill="rgb(238,36,28)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="85.0657%" y="885" width="0.0123%" height="15" fill="rgb(232,29,0)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="895.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="85.0657%" y="869" width="0.0123%" height="15" fill="rgb(243,138,46)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="879.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="85.0657%" y="853" width="0.0123%" height="15" fill="rgb(232,186,41)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="863.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="85.0657%" y="837" width="0.0123%" height="15" fill="rgb(252,166,17)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="847.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="85.0657%" y="821" width="0.0123%" height="15" fill="rgb(228,179,12)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="831.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="85.0657%" y="805" width="0.0123%" height="15" fill="rgb(254,205,53)" fg:x="6932" fg:w="1"/><text x="85.3157%" y="815.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="85.0779%" y="949" width="0.0123%" height="15" fill="rgb(224,163,47)" fg:x="6933" fg:w="1"/><text x="85.3279%" y="959.50"></text></g><g><title>xcb_sync_await_fence (1 samples, 0.01%)</title><rect x="85.0779%" y="933" width="0.0123%" height="15" fill="rgb(208,43,47)" fg:x="6933" fg:w="1"/><text x="85.3279%" y="943.50"></text></g><g><title>xcb_send_request (1 samples, 0.01%)</title><rect x="85.0779%" y="917" width="0.0123%" height="15" fill="rgb(224,198,38)" fg:x="6933" fg:w="1"/><text x="85.3279%" y="927.50"></text></g><g><title>xcb_send_request_with_fds64 (1 samples, 0.01%)</title><rect x="85.0779%" y="901" width="0.0123%" height="15" fill="rgb(234,12,40)" fg:x="6933" fg:w="1"/><text x="85.3279%" y="911.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="85.0779%" y="885" width="0.0123%" height="15" fill="rgb(237,212,39)" fg:x="6933" fg:w="1"/><text x="85.3279%" y="895.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="85.0779%" y="869" width="0.0123%" height="15" fill="rgb(253,2,33)" fg:x="6933" fg:w="1"/><text x="85.3279%" y="879.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="85.0779%" y="853" width="0.0123%" height="15" fill="rgb(251,29,16)" fg:x="6933" fg:w="1"/><text x="85.3279%" y="863.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="85.0779%" y="837" width="0.0123%" height="15" fill="rgb(214,38,29)" fg:x="6933" fg:w="1"/><text x="85.3279%" y="847.50"></text></g><g><title>_XSend (1 samples, 0.01%)</title><rect x="85.0779%" y="821" width="0.0123%" height="15" fill="rgb(226,226,29)" fg:x="6933" fg:w="1"/><text x="85.3279%" y="831.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (4 samples, 0.05%)</title><rect x="85.0779%" y="965" width="0.0491%" height="15" fill="rgb(236,79,42)" fg:x="6933" fg:w="4"/><text x="85.3279%" y="975.50"></text></g><g><title>xcb_wait_for_special_event (3 samples, 0.04%)</title><rect x="85.0902%" y="949" width="0.0368%" height="15" fill="rgb(222,12,36)" fg:x="6934" fg:w="3"/><text x="85.3402%" y="959.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.04%)</title><rect x="85.0902%" y="933" width="0.0368%" height="15" fill="rgb(232,123,44)" fg:x="6934" fg:w="3"/><text x="85.3402%" y="943.50"></text></g><g><title>[libxcb.so.1.1.0] (3 samples, 0.04%)</title><rect x="85.0902%" y="917" width="0.0368%" height="15" fill="rgb(234,93,50)" fg:x="6934" fg:w="3"/><text x="85.3402%" y="927.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="85.0902%" y="901" width="0.0368%" height="15" fill="rgb(210,86,49)" fg:x="6934" fg:w="3"/><text x="85.3402%" y="911.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (7 samples, 0.09%)</title><rect x="85.0779%" y="1317" width="0.0859%" height="15" fill="rgb(224,91,54)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1327.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (7 samples, 0.09%)</title><rect x="85.0779%" y="1301" width="0.0859%" height="15" fill="rgb(239,169,9)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (7 samples, 0.09%)</title><rect x="85.0779%" y="1285" width="0.0859%" height="15" fill="rgb(238,29,17)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (7 samples, 0.09%)</title><rect x="85.0779%" y="1269" width="0.0859%" height="15" fill="rgb(227,160,22)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (7 samples, 0.09%)</title><rect x="85.0779%" y="1253" width="0.0859%" height="15" fill="rgb(231,129,52)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1263.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (7 samples, 0.09%)</title><rect x="85.0779%" y="1237" width="0.0859%" height="15" fill="rgb(241,184,9)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1247.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (7 samples, 0.09%)</title><rect x="85.0779%" y="1221" width="0.0859%" height="15" fill="rgb(217,43,48)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (7 samples, 0.09%)</title><rect x="85.0779%" y="1205" width="0.0859%" height="15" fill="rgb(213,49,1)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (7 samples, 0.09%)</title><rect x="85.0779%" y="1189" width="0.0859%" height="15" fill="rgb(223,79,39)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (7 samples, 0.09%)</title><rect x="85.0779%" y="1173" width="0.0859%" height="15" fill="rgb(228,227,46)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1183.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (7 samples, 0.09%)</title><rect x="85.0779%" y="1157" width="0.0859%" height="15" fill="rgb(245,89,41)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1167.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (7 samples, 0.09%)</title><rect x="85.0779%" y="1141" width="0.0859%" height="15" fill="rgb(253,83,21)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1151.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (7 samples, 0.09%)</title><rect x="85.0779%" y="1125" width="0.0859%" height="15" fill="rgb(229,116,51)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1135.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (7 samples, 0.09%)</title><rect x="85.0779%" y="1109" width="0.0859%" height="15" fill="rgb(246,67,26)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1119.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (7 samples, 0.09%)</title><rect x="85.0779%" y="1093" width="0.0859%" height="15" fill="rgb(250,117,20)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1103.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (7 samples, 0.09%)</title><rect x="85.0779%" y="1077" width="0.0859%" height="15" fill="rgb(207,88,17)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1087.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (7 samples, 0.09%)</title><rect x="85.0779%" y="1061" width="0.0859%" height="15" fill="rgb(212,98,36)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.09%)</title><rect x="85.0779%" y="1045" width="0.0859%" height="15" fill="rgb(221,72,6)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.09%)</title><rect x="85.0779%" y="1029" width="0.0859%" height="15" fill="rgb(235,129,19)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.09%)</title><rect x="85.0779%" y="1013" width="0.0859%" height="15" fill="rgb(237,200,6)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.09%)</title><rect x="85.0779%" y="997" width="0.0859%" height="15" fill="rgb(239,69,54)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.09%)</title><rect x="85.0779%" y="981" width="0.0859%" height="15" fill="rgb(214,68,45)" fg:x="6933" fg:w="7"/><text x="85.3279%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="85.1270%" y="965" width="0.0368%" height="15" fill="rgb(254,160,8)" fg:x="6937" fg:w="3"/><text x="85.3770%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.1393%" y="949" width="0.0245%" height="15" fill="rgb(215,226,31)" fg:x="6938" fg:w="2"/><text x="85.3893%" y="959.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (1 samples, 0.01%)</title><rect x="85.1638%" y="1189" width="0.0123%" height="15" fill="rgb(253,6,35)" fg:x="6940" fg:w="1"/><text x="85.4138%" y="1199.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (1 samples, 0.01%)</title><rect x="85.1638%" y="1173" width="0.0123%" height="15" fill="rgb(219,96,42)" fg:x="6940" fg:w="1"/><text x="85.4138%" y="1183.50"></text></g><g><title>bevy_glsl_to_spirv::compile (1 samples, 0.01%)</title><rect x="85.1638%" y="1157" width="0.0123%" height="15" fill="rgb(207,170,13)" fg:x="6940" fg:w="1"/><text x="85.4138%" y="1167.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (1 samples, 0.01%)</title><rect x="85.1638%" y="1141" width="0.0123%" height="15" fill="rgb(239,101,5)" fg:x="6940" fg:w="1"/><text x="85.4138%" y="1151.50"></text></g><g><title>ShFinalize (1 samples, 0.01%)</title><rect x="85.1638%" y="1125" width="0.0123%" height="15" fill="rgb(228,183,34)" fg:x="6940" fg:w="1"/><text x="85.4138%" y="1135.50"></text></g><g><title>glslang::TSymbolTableLevel::~TSymbolTableLevel (1 samples, 0.01%)</title><rect x="85.1638%" y="1109" width="0.0123%" height="15" fill="rgb(205,28,31)" fg:x="6940" fg:w="1"/><text x="85.4138%" y="1119.50"></text></g><g><title>glslang::TFunction::~TFunction (1 samples, 0.01%)</title><rect x="85.1638%" y="1093" width="0.0123%" height="15" fill="rgb(214,118,50)" fg:x="6940" fg:w="1"/><text x="85.4138%" y="1103.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (2 samples, 0.02%)</title><rect x="85.1638%" y="1205" width="0.0245%" height="15" fill="rgb(213,108,51)" fg:x="6940" fg:w="2"/><text x="85.4138%" y="1215.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::add (1 samples, 0.01%)</title><rect x="85.1761%" y="1189" width="0.0123%" height="15" fill="rgb(238,56,37)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="85.1761%" y="1173" width="0.0123%" height="15" fill="rgb(214,136,28)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="85.1761%" y="1157" width="0.0123%" height="15" fill="rgb(221,201,54)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="85.1761%" y="1141" width="0.0123%" height="15" fill="rgb(228,216,39)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="85.1761%" y="1125" width="0.0123%" height="15" fill="rgb(207,229,49)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="85.1761%" y="1109" width="0.0123%" height="15" fill="rgb(224,23,43)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="85.1761%" y="1093" width="0.0123%" height="15" fill="rgb(247,97,18)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="85.1761%" y="1077" width="0.0123%" height="15" fill="rgb(232,53,32)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="85.1761%" y="1061" width="0.0123%" height="15" fill="rgb(247,38,23)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="85.1761%" y="1045" width="0.0123%" height="15" fill="rgb(228,101,52)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1055.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="85.1761%" y="1029" width="0.0123%" height="15" fill="rgb(231,45,36)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="85.1761%" y="1013" width="0.0123%" height="15" fill="rgb(221,183,50)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="85.1761%" y="997" width="0.0123%" height="15" fill="rgb(251,132,12)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="85.1761%" y="981" width="0.0123%" height="15" fill="rgb(252,50,16)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="991.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="85.1761%" y="965" width="0.0123%" height="15" fill="rgb(224,60,15)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="975.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="85.1761%" y="949" width="0.0123%" height="15" fill="rgb(254,2,34)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="959.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.1761%" y="933" width="0.0123%" height="15" fill="rgb(232,154,8)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="943.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.1761%" y="917" width="0.0123%" height="15" fill="rgb(235,190,52)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="927.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="85.1761%" y="901" width="0.0123%" height="15" fill="rgb(213,218,38)" fg:x="6941" fg:w="1"/><text x="85.4261%" y="911.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (3 samples, 0.04%)</title><rect x="85.1638%" y="1269" width="0.0368%" height="15" fill="rgb(237,50,37)" fg:x="6940" fg:w="3"/><text x="85.4138%" y="1279.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::prepare (3 samples, 0.04%)</title><rect x="85.1638%" y="1253" width="0.0368%" height="15" fill="rgb(235,51,35)" fg:x="6940" fg:w="3"/><text x="85.4138%" y="1263.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::init_pipeline (3 samples, 0.04%)</title><rect x="85.1638%" y="1237" width="0.0368%" height="15" fill="rgb(244,40,52)" fg:x="6940" fg:w="3"/><text x="85.4138%" y="1247.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (3 samples, 0.04%)</title><rect x="85.1638%" y="1221" width="0.0368%" height="15" fill="rgb(217,225,45)" fg:x="6940" fg:w="3"/><text x="85.4138%" y="1231.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="85.1884%" y="1205" width="0.0123%" height="15" fill="rgb(247,191,36)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1215.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (1 samples, 0.01%)</title><rect x="85.1884%" y="1189" width="0.0123%" height="15" fill="rgb(251,144,31)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1199.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (1 samples, 0.01%)</title><rect x="85.1884%" y="1173" width="0.0123%" height="15" fill="rgb(227,155,41)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1183.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (1 samples, 0.01%)</title><rect x="85.1884%" y="1157" width="0.0123%" height="15" fill="rgb(236,121,36)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1167.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (1 samples, 0.01%)</title><rect x="85.1884%" y="1141" width="0.0123%" height="15" fill="rgb(221,128,28)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1151.50"></text></g><g><title>bevy_glsl_to_spirv::compile (1 samples, 0.01%)</title><rect x="85.1884%" y="1125" width="0.0123%" height="15" fill="rgb(249,67,50)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1135.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (1 samples, 0.01%)</title><rect x="85.1884%" y="1109" width="0.0123%" height="15" fill="rgb(241,126,38)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1119.50"></text></g><g><title>ShFinalize (1 samples, 0.01%)</title><rect x="85.1884%" y="1093" width="0.0123%" height="15" fill="rgb(239,33,14)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1103.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="85.1884%" y="1077" width="0.0123%" height="15" fill="rgb(207,221,54)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1087.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="85.1884%" y="1061" width="0.0123%" height="15" fill="rgb(242,138,43)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1071.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="85.1884%" y="1045" width="0.0123%" height="15" fill="rgb(231,118,19)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1055.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="85.1884%" y="1029" width="0.0123%" height="15" fill="rgb(214,128,54)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1039.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="85.1884%" y="1013" width="0.0123%" height="15" fill="rgb(236,136,6)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1023.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="85.1884%" y="997" width="0.0123%" height="15" fill="rgb(247,30,38)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="1007.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="85.1884%" y="981" width="0.0123%" height="15" fill="rgb(249,189,40)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="991.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="85.1884%" y="965" width="0.0123%" height="15" fill="rgb(247,179,7)" fg:x="6942" fg:w="1"/><text x="85.4384%" y="975.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (1 samples, 0.01%)</title><rect x="85.2006%" y="1221" width="0.0123%" height="15" fill="rgb(239,46,52)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1231.50"></text></g><g><title>wgpu_render_pass_set_bind_group (1 samples, 0.01%)</title><rect x="85.2006%" y="1205" width="0.0123%" height="15" fill="rgb(225,28,52)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="85.2006%" y="1189" width="0.0123%" height="15" fill="rgb(217,208,44)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="85.2006%" y="1173" width="0.0123%" height="15" fill="rgb(224,11,34)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="85.2006%" y="1157" width="0.0123%" height="15" fill="rgb(205,134,17)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="85.2006%" y="1141" width="0.0123%" height="15" fill="rgb(237,125,9)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="85.2006%" y="1125" width="0.0123%" height="15" fill="rgb(208,139,47)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1135.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="85.2006%" y="1109" width="0.0123%" height="15" fill="rgb(242,5,5)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1119.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="85.2006%" y="1093" width="0.0123%" height="15" fill="rgb(218,78,2)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1103.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="85.2006%" y="1077" width="0.0123%" height="15" fill="rgb(217,75,16)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1087.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="85.2006%" y="1061" width="0.0123%" height="15" fill="rgb(212,56,17)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1071.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="85.2006%" y="1045" width="0.0123%" height="15" fill="rgb(228,61,29)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1055.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="85.2006%" y="1029" width="0.0123%" height="15" fill="rgb(247,202,38)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1039.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="85.2006%" y="1013" width="0.0123%" height="15" fill="rgb(211,216,43)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1023.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="85.2006%" y="997" width="0.0123%" height="15" fill="rgb(220,7,49)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="1007.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="85.2006%" y="981" width="0.0123%" height="15" fill="rgb(219,158,7)" fg:x="6943" fg:w="1"/><text x="85.4506%" y="991.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="85.2129%" y="1205" width="0.0123%" height="15" fill="rgb(206,127,9)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="85.2129%" y="1189" width="0.0123%" height="15" fill="rgb(206,103,43)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="85.2129%" y="1173" width="0.0123%" height="15" fill="rgb(240,108,41)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="85.2129%" y="1157" width="0.0123%" height="15" fill="rgb(252,212,6)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="85.2129%" y="1141" width="0.0123%" height="15" fill="rgb(248,105,31)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="85.2129%" y="1125" width="0.0123%" height="15" fill="rgb(241,123,4)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="85.2129%" y="1109" width="0.0123%" height="15" fill="rgb(223,74,37)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="85.2129%" y="1093" width="0.0123%" height="15" fill="rgb(251,219,28)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1103.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="85.2129%" y="1077" width="0.0123%" height="15" fill="rgb(218,36,31)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1087.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_render_pass::{{closure}} (1 samples, 0.01%)</title><rect x="85.2129%" y="1061" width="0.0123%" height="15" fill="rgb(229,40,15)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1071.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_wgpu_color_attachment_descriptor (1 samples, 0.01%)</title><rect x="85.2129%" y="1045" width="0.0123%" height="15" fill="rgb(208,138,37)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1055.50"></text></g><g><title>&lt;T as bevy_wgpu::wgpu_type_converter::WgpuInto&lt;U&gt;&gt;::wgpu_into (1 samples, 0.01%)</title><rect x="85.2129%" y="1029" width="0.0123%" height="15" fill="rgb(208,40,52)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1039.50"></text></g><g><title>&lt;wgpu::Operations&lt;U&gt; as bevy_wgpu::wgpu_type_converter::WgpuFrom&lt;&amp;bevy_render::pass::ops::Operations&lt;T&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="85.2129%" y="1013" width="0.0123%" height="15" fill="rgb(246,181,48)" fg:x="6944" fg:w="1"/><text x="85.4629%" y="1023.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (3 samples, 0.04%)</title><rect x="85.2006%" y="1237" width="0.0368%" height="15" fill="rgb(253,178,36)" fg:x="6943" fg:w="3"/><text x="85.4506%" y="1247.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_render_pass (2 samples, 0.02%)</title><rect x="85.2129%" y="1221" width="0.0245%" height="15" fill="rgb(210,170,6)" fg:x="6944" fg:w="2"/><text x="85.4629%" y="1231.50"></text></g><g><title>wgpu::CommandEncoder::begin_render_pass (1 samples, 0.01%)</title><rect x="85.2252%" y="1205" width="0.0123%" height="15" fill="rgb(243,62,22)" fg:x="6945" fg:w="1"/><text x="85.4752%" y="1215.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_begin_render_pass (1 samples, 0.01%)</title><rect x="85.2252%" y="1189" width="0.0123%" height="15" fill="rgb(213,145,26)" fg:x="6945" fg:w="1"/><text x="85.4752%" y="1199.50"></text></g><g><title>wgpu_core::command::render::RenderPass::new (1 samples, 0.01%)</title><rect x="85.2252%" y="1173" width="0.0123%" height="15" fill="rgb(237,177,23)" fg:x="6945" fg:w="1"/><text x="85.4752%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::track::TrackerSet&gt;&gt; (1 samples, 0.01%)</title><rect x="85.2743%" y="1141" width="0.0123%" height="15" fill="rgb(252,5,24)" fg:x="6949" fg:w="1"/><text x="85.5243%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="85.2743%" y="1125" width="0.0123%" height="15" fill="rgb(230,108,54)" fg:x="6949" fg:w="1"/><text x="85.5243%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="85.2743%" y="1109" width="0.0123%" height="15" fill="rgb(252,192,41)" fg:x="6949" fg:w="1"/><text x="85.5243%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="85.2743%" y="1093" width="0.0123%" height="15" fill="rgb(218,125,20)" fg:x="6949" fg:w="1"/><text x="85.5243%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="85.2743%" y="1077" width="0.0123%" height="15" fill="rgb(230,223,15)" fg:x="6949" fg:w="1"/><text x="85.5243%" y="1087.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_buffer (3 samples, 0.04%)</title><rect x="85.2865%" y="1125" width="0.0368%" height="15" fill="rgb(239,99,47)" fg:x="6950" fg:w="3"/><text x="85.5365%" y="1135.50"></text></g><g><title>ash::device::DeviceV1_0::create_buffer (3 samples, 0.04%)</title><rect x="85.2865%" y="1109" width="0.0368%" height="15" fill="rgb(222,214,23)" fg:x="6950" fg:w="3"/><text x="85.5365%" y="1119.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (3 samples, 0.04%)</title><rect x="85.2865%" y="1093" width="0.0368%" height="15" fill="rgb(250,98,43)" fg:x="6950" fg:w="3"/><text x="85.5365%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="85.2865%" y="1077" width="0.0368%" height="15" fill="rgb(226,140,11)" fg:x="6950" fg:w="3"/><text x="85.5365%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.2988%" y="1061" width="0.0245%" height="15" fill="rgb(239,2,22)" fg:x="6951" fg:w="2"/><text x="85.5488%" y="1071.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.3111%" y="1045" width="0.0123%" height="15" fill="rgb(209,106,26)" fg:x="6952" fg:w="1"/><text x="85.5611%" y="1055.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::get_buffer_requirements (1 samples, 0.01%)</title><rect x="85.3234%" y="1125" width="0.0123%" height="15" fill="rgb(209,135,11)" fg:x="6953" fg:w="1"/><text x="85.5734%" y="1135.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_backend_vulkan::Device&gt;::filter_memory_requirements (1 samples, 0.01%)</title><rect x="85.3234%" y="1109" width="0.0123%" height="15" fill="rgb(241,58,6)" fg:x="6953" fg:w="1"/><text x="85.5734%" y="1119.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::set_buffer_name (5 samples, 0.06%)</title><rect x="85.3356%" y="1125" width="0.0614%" height="15" fill="rgb(214,78,1)" fg:x="6954" fg:w="5"/><text x="85.5856%" y="1135.50"></text></g><g><title>gfx_backend_vulkan::RawDevice::set_object_name (5 samples, 0.06%)</title><rect x="85.3356%" y="1109" width="0.0614%" height="15" fill="rgb(229,135,33)" fg:x="6954" fg:w="5"/><text x="85.5856%" y="1119.50"></text></g><g><title>ash::extensions::ext::debug_utils::DebugUtils::debug_utils_set_object_name (3 samples, 0.04%)</title><rect x="85.3602%" y="1093" width="0.0368%" height="15" fill="rgb(245,87,50)" fg:x="6956" fg:w="3"/><text x="85.6102%" y="1103.50"></text></g><g><title>ash::vk::extensions::ExtDebugUtilsFn::set_debug_utils_object_name_ext (3 samples, 0.04%)</title><rect x="85.3602%" y="1077" width="0.0368%" height="15" fill="rgb(222,222,8)" fg:x="6956" fg:w="3"/><text x="85.6102%" y="1087.50"></text></g><g><title>[libvulkan.so.1.2.194] (3 samples, 0.04%)</title><rect x="85.3602%" y="1061" width="0.0368%" height="15" fill="rgb(214,97,50)" fg:x="6956" fg:w="3"/><text x="85.6102%" y="1071.50"></text></g><g><title>[libvulkan.so.1.2.194] (3 samples, 0.04%)</title><rect x="85.3602%" y="1045" width="0.0368%" height="15" fill="rgb(244,161,51)" fg:x="6956" fg:w="3"/><text x="85.6102%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.3724%" y="1029" width="0.0245%" height="15" fill="rgb(225,17,4)" fg:x="6957" fg:w="2"/><text x="85.6224%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.3724%" y="1013" width="0.0245%" height="15" fill="rgb(238,10,13)" fg:x="6957" fg:w="2"/><text x="85.6224%" y="1023.50"></text></g><g><title>strlen@plt (1 samples, 0.01%)</title><rect x="85.3847%" y="997" width="0.0123%" height="15" fill="rgb(239,169,14)" fg:x="6958" fg:w="1"/><text x="85.6347%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="85.3970%" y="981" width="0.0123%" height="15" fill="rgb(213,105,25)" fg:x="6959" fg:w="1"/><text x="85.6470%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="85.3970%" y="965" width="0.0123%" height="15" fill="rgb(233,4,17)" fg:x="6959" fg:w="1"/><text x="85.6470%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="85.3970%" y="949" width="0.0123%" height="15" fill="rgb(212,5,35)" fg:x="6959" fg:w="1"/><text x="85.6470%" y="959.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="85.3970%" y="933" width="0.0123%" height="15" fill="rgb(216,3,14)" fg:x="6959" fg:w="1"/><text x="85.6470%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="85.3970%" y="917" width="0.0123%" height="15" fill="rgb(240,105,33)" fg:x="6959" fg:w="1"/><text x="85.6470%" y="927.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="85.3970%" y="901" width="0.0123%" height="15" fill="rgb(216,73,0)" fg:x="6959" fg:w="1"/><text x="85.6470%" y="911.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="85.3970%" y="885" width="0.0123%" height="15" fill="rgb(217,153,48)" fg:x="6959" fg:w="1"/><text x="85.6470%" y="895.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="85.3970%" y="869" width="0.0123%" height="15" fill="rgb(218,180,8)" fg:x="6959" fg:w="1"/><text x="85.6470%" y="879.50"></text></g><g><title>tracing::span::Span::enter (2 samples, 0.02%)</title><rect x="85.3970%" y="1093" width="0.0245%" height="15" fill="rgb(252,168,2)" fg:x="6959" fg:w="2"/><text x="85.6470%" y="1103.50"></text></g><g><title>tracing::span::Span::do_enter (2 samples, 0.02%)</title><rect x="85.3970%" y="1077" width="0.0245%" height="15" fill="rgb(224,116,33)" fg:x="6959" fg:w="2"/><text x="85.6470%" y="1087.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (2 samples, 0.02%)</title><rect x="85.3970%" y="1061" width="0.0245%" height="15" fill="rgb(229,205,17)" fg:x="6959" fg:w="2"/><text x="85.6470%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enter (2 samples, 0.02%)</title><rect x="85.3970%" y="1045" width="0.0245%" height="15" fill="rgb(234,1,41)" fg:x="6959" fg:w="2"/><text x="85.6470%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (2 samples, 0.02%)</title><rect x="85.3970%" y="1029" width="0.0245%" height="15" fill="rgb(244,185,8)" fg:x="6959" fg:w="2"/><text x="85.6470%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (2 samples, 0.02%)</title><rect x="85.3970%" y="1013" width="0.0245%" height="15" fill="rgb(248,51,21)" fg:x="6959" fg:w="2"/><text x="85.6470%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_enter (2 samples, 0.02%)</title><rect x="85.3970%" y="997" width="0.0245%" height="15" fill="rgb(248,157,31)" fg:x="6959" fg:w="2"/><text x="85.6470%" y="1007.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="85.4093%" y="981" width="0.0123%" height="15" fill="rgb(210,34,47)" fg:x="6960" fg:w="1"/><text x="85.6593%" y="991.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.01%)</title><rect x="85.4093%" y="965" width="0.0123%" height="15" fill="rgb(227,139,53)" fg:x="6960" fg:w="1"/><text x="85.6593%" y="975.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (3 samples, 0.04%)</title><rect x="85.3970%" y="1125" width="0.0368%" height="15" fill="rgb(232,211,37)" fg:x="6959" fg:w="3"/><text x="85.6470%" y="1135.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (3 samples, 0.04%)</title><rect x="85.3970%" y="1109" width="0.0368%" height="15" fill="rgb(236,133,10)" fg:x="6959" fg:w="3"/><text x="85.6470%" y="1119.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="85.4215%" y="1093" width="0.0123%" height="15" fill="rgb(243,202,25)" fg:x="6961" fg:w="1"/><text x="85.6715%" y="1103.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="85.4215%" y="1077" width="0.0123%" height="15" fill="rgb(224,59,9)" fg:x="6961" fg:w="1"/><text x="85.6715%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="85.4215%" y="1061" width="0.0123%" height="15" fill="rgb(206,146,16)" fg:x="6961" fg:w="1"/><text x="85.6715%" y="1071.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="85.4215%" y="1045" width="0.0123%" height="15" fill="rgb(220,47,2)" fg:x="6961" fg:w="1"/><text x="85.6715%" y="1055.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (1 samples, 0.01%)</title><rect x="85.4215%" y="1029" width="0.0123%" height="15" fill="rgb(225,124,51)" fg:x="6961" fg:w="1"/><text x="85.6715%" y="1039.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::is (1 samples, 0.01%)</title><rect x="85.4215%" y="1013" width="0.0123%" height="15" fill="rgb(241,220,50)" fg:x="6961" fg:w="1"/><text x="85.6715%" y="1023.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::is (1 samples, 0.01%)</title><rect x="85.4215%" y="997" width="0.0123%" height="15" fill="rgb(232,168,5)" fg:x="6961" fg:w="1"/><text x="85.6715%" y="1007.50"></text></g><g><title>&lt;dyn tracing_core::subscriber::Subscriber&gt;::downcast_ref (1 samples, 0.01%)</title><rect x="85.4215%" y="981" width="0.0123%" height="15" fill="rgb(243,90,22)" fg:x="6961" fg:w="1"/><text x="85.6715%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::downcast_raw (1 samples, 0.01%)</title><rect x="85.4215%" y="965" width="0.0123%" height="15" fill="rgb(223,153,32)" fg:x="6961" fg:w="1"/><text x="85.6715%" y="975.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.4338%" y="1045" width="0.0245%" height="15" fill="rgb(243,124,20)" fg:x="6962" fg:w="2"/><text x="85.6838%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="85.4461%" y="1029" width="0.0123%" height="15" fill="rgb(246,168,39)" fg:x="6963" fg:w="1"/><text x="85.6961%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="85.4461%" y="1013" width="0.0123%" height="15" fill="rgb(222,165,54)" fg:x="6963" fg:w="1"/><text x="85.6961%" y="1023.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (19 samples, 0.23%)</title><rect x="85.2865%" y="1141" width="0.2332%" height="15" fill="rgb(251,142,27)" fg:x="6950" fg:w="19"/><text x="85.5365%" y="1151.50"></text></g><g><title>wgpu_core::device::alloc::MemoryBlock&lt;B&gt;::bind_buffer (7 samples, 0.09%)</title><rect x="85.4338%" y="1125" width="0.0859%" height="15" fill="rgb(207,168,50)" fg:x="6962" fg:w="7"/><text x="85.6838%" y="1135.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::bind_buffer_memory (7 samples, 0.09%)</title><rect x="85.4338%" y="1109" width="0.0859%" height="15" fill="rgb(250,139,25)" fg:x="6962" fg:w="7"/><text x="85.6838%" y="1119.50"></text></g><g><title>ash::device::DeviceV1_0::bind_buffer_memory (7 samples, 0.09%)</title><rect x="85.4338%" y="1093" width="0.0859%" height="15" fill="rgb(214,194,48)" fg:x="6962" fg:w="7"/><text x="85.6838%" y="1103.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (7 samples, 0.09%)</title><rect x="85.4338%" y="1077" width="0.0859%" height="15" fill="rgb(227,138,47)" fg:x="6962" fg:w="7"/><text x="85.6838%" y="1087.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (7 samples, 0.09%)</title><rect x="85.4338%" y="1061" width="0.0859%" height="15" fill="rgb(250,162,5)" fg:x="6962" fg:w="7"/><text x="85.6838%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="85.4583%" y="1045" width="0.0614%" height="15" fill="rgb(229,74,25)" fg:x="6964" fg:w="5"/><text x="85.7083%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="85.4583%" y="1029" width="0.0614%" height="15" fill="rgb(221,124,34)" fg:x="6964" fg:w="5"/><text x="85.7083%" y="1039.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register_identity (2 samples, 0.02%)</title><rect x="85.5197%" y="1141" width="0.0245%" height="15" fill="rgb(225,94,25)" fg:x="6969" fg:w="2"/><text x="85.7697%" y="1151.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register (2 samples, 0.02%)</title><rect x="85.5197%" y="1125" width="0.0245%" height="15" fill="rgb(210,100,12)" fg:x="6969" fg:w="2"/><text x="85.7697%" y="1135.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (2 samples, 0.02%)</title><rect x="85.5197%" y="1109" width="0.0245%" height="15" fill="rgb(206,62,48)" fg:x="6969" fg:w="2"/><text x="85.7697%" y="1119.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (2 samples, 0.02%)</title><rect x="85.5197%" y="1093" width="0.0245%" height="15" fill="rgb(222,181,9)" fg:x="6969" fg:w="2"/><text x="85.7697%" y="1103.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="85.5320%" y="1077" width="0.0123%" height="15" fill="rgb(248,42,38)" fg:x="6970" fg:w="1"/><text x="85.7820%" y="1087.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="85.5320%" y="1061" width="0.0123%" height="15" fill="rgb(213,40,6)" fg:x="6970" fg:w="1"/><text x="85.7820%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="85.5320%" y="1045" width="0.0123%" height="15" fill="rgb(211,108,15)" fg:x="6970" fg:w="1"/><text x="85.7820%" y="1055.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (30 samples, 0.37%)</title><rect x="85.2006%" y="1253" width="0.3681%" height="15" fill="rgb(249,62,9)" fg:x="6943" fg:w="30"/><text x="85.4506%" y="1263.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (27 samples, 0.33%)</title><rect x="85.2375%" y="1237" width="0.3313%" height="15" fill="rgb(233,26,54)" fg:x="6946" fg:w="27"/><text x="85.4875%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (27 samples, 0.33%)</title><rect x="85.2375%" y="1221" width="0.3313%" height="15" fill="rgb(210,175,26)" fg:x="6946" fg:w="27"/><text x="85.4875%" y="1231.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (27 samples, 0.33%)</title><rect x="85.2375%" y="1205" width="0.3313%" height="15" fill="rgb(210,43,33)" fg:x="6946" fg:w="27"/><text x="85.4875%" y="1215.50"></text></g><g><title>wgpu::Device::create_buffer (27 samples, 0.33%)</title><rect x="85.2375%" y="1189" width="0.3313%" height="15" fill="rgb(224,46,17)" fg:x="6946" fg:w="27"/><text x="85.4875%" y="1199.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (27 samples, 0.33%)</title><rect x="85.2375%" y="1173" width="0.3313%" height="15" fill="rgb(254,24,38)" fg:x="6946" fg:w="27"/><text x="85.4875%" y="1183.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (27 samples, 0.33%)</title><rect x="85.2375%" y="1157" width="0.3313%" height="15" fill="rgb(248,32,0)" fg:x="6946" fg:w="27"/><text x="85.4875%" y="1167.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::init (2 samples, 0.02%)</title><rect x="85.5442%" y="1141" width="0.0245%" height="15" fill="rgb(224,37,41)" fg:x="6971" fg:w="2"/><text x="85.7942%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="85.5442%" y="1125" width="0.0245%" height="15" fill="rgb(252,70,22)" fg:x="6971" fg:w="2"/><text x="85.7942%" y="1135.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="85.5442%" y="1109" width="0.0245%" height="15" fill="rgb(241,123,50)" fg:x="6971" fg:w="2"/><text x="85.7942%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="85.5442%" y="1093" width="0.0245%" height="15" fill="rgb(246,138,33)" fg:x="6971" fg:w="2"/><text x="85.7942%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="85.5442%" y="1077" width="0.0245%" height="15" fill="rgb(218,39,32)" fg:x="6971" fg:w="2"/><text x="85.7942%" y="1087.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="85.5442%" y="1061" width="0.0245%" height="15" fill="rgb(241,229,10)" fg:x="6971" fg:w="2"/><text x="85.7942%" y="1071.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="85.5442%" y="1045" width="0.0245%" height="15" fill="rgb(212,160,10)" fg:x="6971" fg:w="2"/><text x="85.7942%" y="1055.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="85.5442%" y="1029" width="0.0245%" height="15" fill="rgb(227,48,51)" fg:x="6971" fg:w="2"/><text x="85.7942%" y="1039.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="85.5442%" y="1013" width="0.0245%" height="15" fill="rgb(238,159,21)" fg:x="6971" fg:w="2"/><text x="85.7942%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="85.5442%" y="997" width="0.0245%" height="15" fill="rgb(216,1,10)" fg:x="6971" fg:w="2"/><text x="85.7942%" y="1007.50"></text></g><g><title>&lt;T as bevy_wgpu::wgpu_type_converter::WgpuInto&lt;U&gt;&gt;::wgpu_into (2 samples, 0.02%)</title><rect x="85.5688%" y="1029" width="0.0245%" height="15" fill="rgb(209,228,25)" fg:x="6973" fg:w="2"/><text x="85.8188%" y="1039.50"></text></g><g><title>&lt;wgpu::Operations&lt;U&gt; as bevy_wgpu::wgpu_type_converter::WgpuFrom&lt;&amp;bevy_render::pass::ops::Operations&lt;T&gt;&gt;&gt;::from (2 samples, 0.02%)</title><rect x="85.5688%" y="1013" width="0.0245%" height="15" fill="rgb(234,160,10)" fg:x="6973" fg:w="2"/><text x="85.8188%" y="1023.50"></text></g><g><title>&lt;T as bevy_wgpu::wgpu_type_converter::WgpuInto&lt;U&gt;&gt;::wgpu_into (2 samples, 0.02%)</title><rect x="85.5688%" y="997" width="0.0245%" height="15" fill="rgb(212,66,25)" fg:x="6973" fg:w="2"/><text x="85.8188%" y="1007.50"></text></g><g><title>&lt;wgpu::LoadOp&lt;wgpu_types::Color&gt; as bevy_wgpu::wgpu_type_converter::WgpuFrom&lt;&amp;bevy_render::pass::ops::LoadOp&lt;bevy_render::color::Color&gt;&gt;&gt;::from (2 samples, 0.02%)</title><rect x="85.5688%" y="981" width="0.0245%" height="15" fill="rgb(254,121,18)" fg:x="6973" fg:w="2"/><text x="85.8188%" y="991.50"></text></g><g><title>&lt;T as bevy_wgpu::wgpu_type_converter::WgpuInto&lt;U&gt;&gt;::wgpu_into (2 samples, 0.02%)</title><rect x="85.5688%" y="965" width="0.0245%" height="15" fill="rgb(219,127,1)" fg:x="6973" fg:w="2"/><text x="85.8188%" y="975.50"></text></g><g><title>&lt;wgpu_types::Color as bevy_wgpu::wgpu_type_converter::WgpuFrom&lt;bevy_render::color::Color&gt;&gt;::from (2 samples, 0.02%)</title><rect x="85.5688%" y="949" width="0.0245%" height="15" fill="rgb(219,224,42)" fg:x="6973" fg:w="2"/><text x="85.8188%" y="959.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_f32 (2 samples, 0.02%)</title><rect x="85.5688%" y="933" width="0.0245%" height="15" fill="rgb(253,130,22)" fg:x="6973" fg:w="2"/><text x="85.8188%" y="943.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (3 samples, 0.04%)</title><rect x="85.5688%" y="1253" width="0.0368%" height="15" fill="rgb(253,39,28)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1263.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (3 samples, 0.04%)</title><rect x="85.5688%" y="1237" width="0.0368%" height="15" fill="rgb(231,126,37)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1247.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_render_pass (3 samples, 0.04%)</title><rect x="85.5688%" y="1221" width="0.0368%" height="15" fill="rgb(251,145,14)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (3 samples, 0.04%)</title><rect x="85.5688%" y="1205" width="0.0368%" height="15" fill="rgb(229,164,30)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="85.5688%" y="1189" width="0.0368%" height="15" fill="rgb(233,227,54)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="85.5688%" y="1173" width="0.0368%" height="15" fill="rgb(240,94,22)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (3 samples, 0.04%)</title><rect x="85.5688%" y="1157" width="0.0368%" height="15" fill="rgb(217,56,16)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="85.5688%" y="1141" width="0.0368%" height="15" fill="rgb(229,133,38)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (3 samples, 0.04%)</title><rect x="85.5688%" y="1125" width="0.0368%" height="15" fill="rgb(225,139,35)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (3 samples, 0.04%)</title><rect x="85.5688%" y="1109" width="0.0368%" height="15" fill="rgb(223,100,16)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (3 samples, 0.04%)</title><rect x="85.5688%" y="1093" width="0.0368%" height="15" fill="rgb(207,43,50)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1103.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (3 samples, 0.04%)</title><rect x="85.5688%" y="1077" width="0.0368%" height="15" fill="rgb(237,221,9)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1087.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_render_pass::{{closure}} (3 samples, 0.04%)</title><rect x="85.5688%" y="1061" width="0.0368%" height="15" fill="rgb(236,134,24)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1071.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_wgpu_color_attachment_descriptor (3 samples, 0.04%)</title><rect x="85.5688%" y="1045" width="0.0368%" height="15" fill="rgb(222,173,4)" fg:x="6973" fg:w="3"/><text x="85.8188%" y="1055.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::get_texture_view (1 samples, 0.01%)</title><rect x="85.5933%" y="1029" width="0.0123%" height="15" fill="rgb(234,144,52)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="85.5933%" y="1013" width="0.0123%" height="15" fill="rgb(223,41,7)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="85.5933%" y="997" width="0.0123%" height="15" fill="rgb(226,143,9)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="85.5933%" y="981" width="0.0123%" height="15" fill="rgb(234,43,37)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="85.5933%" y="965" width="0.0123%" height="15" fill="rgb(224,188,11)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="85.5933%" y="949" width="0.0123%" height="15" fill="rgb(233,113,28)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="85.5933%" y="933" width="0.0123%" height="15" fill="rgb(215,16,1)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="85.5933%" y="917" width="0.0123%" height="15" fill="rgb(238,74,38)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="85.5933%" y="901" width="0.0123%" height="15" fill="rgb(221,66,35)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="911.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="85.5933%" y="885" width="0.0123%" height="15" fill="rgb(251,225,2)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="85.5933%" y="869" width="0.0123%" height="15" fill="rgb(240,169,18)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="85.5933%" y="853" width="0.0123%" height="15" fill="rgb(243,130,50)" fg:x="6975" fg:w="1"/><text x="85.8433%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="85.6056%" y="965" width="0.0123%" height="15" fill="rgb(228,75,13)" fg:x="6976" fg:w="1"/><text x="85.8556%" y="975.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (2 samples, 0.02%)</title><rect x="85.6056%" y="1141" width="0.0245%" height="15" fill="rgb(252,95,35)" fg:x="6976" fg:w="2"/><text x="85.8556%" y="1151.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::create_swapchain_khr (2 samples, 0.02%)</title><rect x="85.6056%" y="1125" width="0.0245%" height="15" fill="rgb(222,180,54)" fg:x="6976" fg:w="2"/><text x="85.8556%" y="1135.50"></text></g><g><title>[libvulkan.so.1.2.194] (2 samples, 0.02%)</title><rect x="85.6056%" y="1109" width="0.0245%" height="15" fill="rgb(250,110,34)" fg:x="6976" fg:w="2"/><text x="85.8556%" y="1119.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.6056%" y="1093" width="0.0245%" height="15" fill="rgb(208,100,21)" fg:x="6976" fg:w="2"/><text x="85.8556%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.6056%" y="1077" width="0.0245%" height="15" fill="rgb(209,123,47)" fg:x="6976" fg:w="2"/><text x="85.8556%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.6056%" y="1061" width="0.0245%" height="15" fill="rgb(237,147,9)" fg:x="6976" fg:w="2"/><text x="85.8556%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.6056%" y="1045" width="0.0245%" height="15" fill="rgb(228,206,23)" fg:x="6976" fg:w="2"/><text x="85.8556%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.6056%" y="1029" width="0.0245%" height="15" fill="rgb(217,174,46)" fg:x="6976" fg:w="2"/><text x="85.8556%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.6056%" y="1013" width="0.0245%" height="15" fill="rgb(231,126,21)" fg:x="6976" fg:w="2"/><text x="85.8556%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.6056%" y="997" width="0.0245%" height="15" fill="rgb(245,26,1)" fg:x="6976" fg:w="2"/><text x="85.8556%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="85.6056%" y="981" width="0.0245%" height="15" fill="rgb(224,138,39)" fg:x="6976" fg:w="2"/><text x="85.8556%" y="991.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="85.6179%" y="965" width="0.0123%" height="15" fill="rgb(208,97,3)" fg:x="6977" fg:w="1"/><text x="85.8679%" y="975.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::configure_swapchain (3 samples, 0.04%)</title><rect x="85.6056%" y="1173" width="0.0368%" height="15" fill="rgb(222,77,29)" fg:x="6976" fg:w="3"/><text x="85.8556%" y="1183.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_backend_vulkan::Device&gt;::create_swapchain (3 samples, 0.04%)</title><rect x="85.6056%" y="1157" width="0.0368%" height="15" fill="rgb(243,188,36)" fg:x="6976" fg:w="3"/><text x="85.8556%" y="1167.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::new (1 samples, 0.01%)</title><rect x="85.6301%" y="1141" width="0.0123%" height="15" fill="rgb(218,214,3)" fg:x="6978" fg:w="1"/><text x="85.8801%" y="1151.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::load (1 samples, 0.01%)</title><rect x="85.6301%" y="1125" width="0.0123%" height="15" fill="rgb(211,183,45)" fg:x="6978" fg:w="1"/><text x="85.8801%" y="1135.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::new::{{closure}} (1 samples, 0.01%)</title><rect x="85.6301%" y="1109" width="0.0123%" height="15" fill="rgb(230,218,25)" fg:x="6978" fg:w="1"/><text x="85.8801%" y="1119.50"></text></g><g><title>ash::instance::InstanceV1_0::get_device_proc_addr (1 samples, 0.01%)</title><rect x="85.6301%" y="1093" width="0.0123%" height="15" fill="rgb(233,86,6)" fg:x="6978" fg:w="1"/><text x="85.8801%" y="1103.50"></text></g><g><title>ash::vk::features::InstanceFnV1_0::get_device_proc_addr (1 samples, 0.01%)</title><rect x="85.6301%" y="1077" width="0.0123%" height="15" fill="rgb(220,59,24)" fg:x="6978" fg:w="1"/><text x="85.8801%" y="1087.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="85.6301%" y="1061" width="0.0123%" height="15" fill="rgb(227,60,1)" fg:x="6978" fg:w="1"/><text x="85.8801%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="85.6301%" y="1045" width="0.0123%" height="15" fill="rgb(216,212,54)" fg:x="6978" fg:w="1"/><text x="85.8801%" y="1055.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (6 samples, 0.07%)</title><rect x="85.6056%" y="1253" width="0.0736%" height="15" fill="rgb(227,81,54)" fg:x="6976" fg:w="6"/><text x="85.8556%" y="1263.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (6 samples, 0.07%)</title><rect x="85.6056%" y="1237" width="0.0736%" height="15" fill="rgb(206,204,43)" fg:x="6976" fg:w="6"/><text x="85.8556%" y="1247.50"></text></g><g><title>wgpu::Device::create_swap_chain (6 samples, 0.07%)</title><rect x="85.6056%" y="1221" width="0.0736%" height="15" fill="rgb(219,29,26)" fg:x="6976" fg:w="6"/><text x="85.8556%" y="1231.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (6 samples, 0.07%)</title><rect x="85.6056%" y="1205" width="0.0736%" height="15" fill="rgb(252,40,36)" fg:x="6976" fg:w="6"/><text x="85.8556%" y="1215.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (6 samples, 0.07%)</title><rect x="85.6056%" y="1189" width="0.0736%" height="15" fill="rgb(224,205,39)" fg:x="6976" fg:w="6"/><text x="85.8556%" y="1199.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::Surface&lt;gfx_backend_vulkan::Backend&gt;&gt;::supports_queue_family (3 samples, 0.04%)</title><rect x="85.6424%" y="1173" width="0.0368%" height="15" fill="rgb(222,13,21)" fg:x="6979" fg:w="3"/><text x="85.8924%" y="1183.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_support (3 samples, 0.04%)</title><rect x="85.6424%" y="1157" width="0.0368%" height="15" fill="rgb(243,139,6)" fg:x="6979" fg:w="3"/><text x="85.8924%" y="1167.50"></text></g><g><title>ash::vk::extensions::KhrSurfaceFn::get_physical_device_surface_support_khr (3 samples, 0.04%)</title><rect x="85.6424%" y="1141" width="0.0368%" height="15" fill="rgb(237,101,11)" fg:x="6979" fg:w="3"/><text x="85.8924%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="85.6424%" y="1125" width="0.0368%" height="15" fill="rgb(254,49,28)" fg:x="6979" fg:w="3"/><text x="85.8924%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="85.6424%" y="1109" width="0.0368%" height="15" fill="rgb(223,41,21)" fg:x="6979" fg:w="3"/><text x="85.8924%" y="1119.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (3 samples, 0.04%)</title><rect x="85.6424%" y="1093" width="0.0368%" height="15" fill="rgb(225,103,29)" fg:x="6979" fg:w="3"/><text x="85.8924%" y="1103.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (3 samples, 0.04%)</title><rect x="85.6424%" y="1077" width="0.0368%" height="15" fill="rgb(244,82,43)" fg:x="6979" fg:w="3"/><text x="85.8924%" y="1087.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (3 samples, 0.04%)</title><rect x="85.6424%" y="1061" width="0.0368%" height="15" fill="rgb(217,39,3)" fg:x="6979" fg:w="3"/><text x="85.8924%" y="1071.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (3 samples, 0.04%)</title><rect x="85.6424%" y="1045" width="0.0368%" height="15" fill="rgb(239,128,25)" fg:x="6979" fg:w="3"/><text x="85.8924%" y="1055.50"></text></g><g><title>XGetVisualInfo (3 samples, 0.04%)</title><rect x="85.6424%" y="1029" width="0.0368%" height="15" fill="rgb(210,192,37)" fg:x="6979" fg:w="3"/><text x="85.8924%" y="1039.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="85.6670%" y="1013" width="0.0123%" height="15" fill="rgb(219,98,18)" fg:x="6981" fg:w="1"/><text x="85.9170%" y="1023.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (10 samples, 0.12%)</title><rect x="85.6915%" y="1141" width="0.1227%" height="15" fill="rgb(224,228,38)" fg:x="6983" fg:w="10"/><text x="85.9415%" y="1151.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (10 samples, 0.12%)</title><rect x="85.6915%" y="1125" width="0.1227%" height="15" fill="rgb(241,129,43)" fg:x="6983" fg:w="10"/><text x="85.9415%" y="1135.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (10 samples, 0.12%)</title><rect x="85.6915%" y="1109" width="0.1227%" height="15" fill="rgb(223,8,51)" fg:x="6983" fg:w="10"/><text x="85.9415%" y="1119.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (10 samples, 0.12%)</title><rect x="85.6915%" y="1093" width="0.1227%" height="15" fill="rgb(233,76,24)" fg:x="6983" fg:w="10"/><text x="85.9415%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (10 samples, 0.12%)</title><rect x="85.6915%" y="1077" width="0.1227%" height="15" fill="rgb(219,115,10)" fg:x="6983" fg:w="10"/><text x="85.9415%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="85.7774%" y="1061" width="0.0368%" height="15" fill="rgb(222,137,12)" fg:x="6990" fg:w="3"/><text x="86.0274%" y="1071.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (1 samples, 0.01%)</title><rect x="85.8142%" y="1141" width="0.0123%" height="15" fill="rgb(216,192,16)" fg:x="6993" fg:w="1"/><text x="86.0642%" y="1151.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="85.8142%" y="1125" width="0.0123%" height="15" fill="rgb(247,6,27)" fg:x="6993" fg:w="1"/><text x="86.0642%" y="1135.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="85.8142%" y="1109" width="0.0123%" height="15" fill="rgb(254,39,44)" fg:x="6993" fg:w="1"/><text x="86.0642%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="85.8142%" y="1093" width="0.0123%" height="15" fill="rgb(251,116,35)" fg:x="6993" fg:w="1"/><text x="86.0642%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="85.8142%" y="1077" width="0.0123%" height="15" fill="rgb(208,61,44)" fg:x="6993" fg:w="1"/><text x="86.0642%" y="1087.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::get_or_create (13 samples, 0.16%)</title><rect x="85.6792%" y="1221" width="0.1595%" height="15" fill="rgb(250,34,5)" fg:x="6982" fg:w="13"/><text x="85.9292%" y="1231.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (13 samples, 0.16%)</title><rect x="85.6792%" y="1205" width="0.1595%" height="15" fill="rgb(241,40,15)" fg:x="6982" fg:w="13"/><text x="85.9292%" y="1215.50"></text></g><g><title>wgpu::Device::create_command_encoder (13 samples, 0.16%)</title><rect x="85.6792%" y="1189" width="0.1595%" height="15" fill="rgb(229,182,2)" fg:x="6982" fg:w="13"/><text x="85.9292%" y="1199.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (13 samples, 0.16%)</title><rect x="85.6792%" y="1173" width="0.1595%" height="15" fill="rgb(244,148,52)" fg:x="6982" fg:w="13"/><text x="85.9292%" y="1183.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (13 samples, 0.16%)</title><rect x="85.6792%" y="1157" width="0.1595%" height="15" fill="rgb(225,211,4)" fg:x="6982" fg:w="13"/><text x="85.9292%" y="1167.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register_identity (1 samples, 0.01%)</title><rect x="85.8265%" y="1141" width="0.0123%" height="15" fill="rgb(208,222,47)" fg:x="6994" fg:w="1"/><text x="86.0765%" y="1151.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::process (1 samples, 0.01%)</title><rect x="85.8265%" y="1125" width="0.0123%" height="15" fill="rgb(233,162,0)" fg:x="6994" fg:w="1"/><text x="86.0765%" y="1135.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="85.8265%" y="1109" width="0.0123%" height="15" fill="rgb(241,54,13)" fg:x="6994" fg:w="1"/><text x="86.0765%" y="1119.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="85.8265%" y="1093" width="0.0123%" height="15" fill="rgb(213,89,18)" fg:x="6994" fg:w="1"/><text x="86.0765%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="85.8265%" y="1077" width="0.0123%" height="15" fill="rgb(215,170,37)" fg:x="6994" fg:w="1"/><text x="86.0765%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="85.8265%" y="1061" width="0.0123%" height="15" fill="rgb(216,133,15)" fg:x="6994" fg:w="1"/><text x="86.0765%" y="1071.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (10 samples, 0.12%)</title><rect x="85.8388%" y="1157" width="0.1227%" height="15" fill="rgb(230,42,19)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="1167.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (10 samples, 0.12%)</title><rect x="85.8388%" y="1141" width="0.1227%" height="15" fill="rgb(221,103,41)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="1151.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (10 samples, 0.12%)</title><rect x="85.8388%" y="1125" width="0.1227%" height="15" fill="rgb(220,142,31)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="1135.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (10 samples, 0.12%)</title><rect x="85.8388%" y="1109" width="0.1227%" height="15" fill="rgb(239,218,4)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="1119.50"></text></g><g><title>inplace_it::fixed_array::indirect (10 samples, 0.12%)</title><rect x="85.8388%" y="1093" width="0.1227%" height="15" fill="rgb(232,16,4)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="1103.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (10 samples, 0.12%)</title><rect x="85.8388%" y="1077" width="0.1227%" height="15" fill="rgb(226,213,25)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="1087.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (10 samples, 0.12%)</title><rect x="85.8388%" y="1061" width="0.1227%" height="15" fill="rgb(235,135,19)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="1071.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer::{{closure}} (10 samples, 0.12%)</title><rect x="85.8388%" y="1045" width="0.1227%" height="15" fill="rgb(240,107,29)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="1055.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_copy_buffer (10 samples, 0.12%)</title><rect x="85.8388%" y="1029" width="0.1227%" height="15" fill="rgb(206,164,44)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="1039.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_copy_buffer (10 samples, 0.12%)</title><rect x="85.8388%" y="1013" width="0.1227%" height="15" fill="rgb(210,23,48)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (10 samples, 0.12%)</title><rect x="85.8388%" y="997" width="0.1227%" height="15" fill="rgb(212,138,25)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (10 samples, 0.12%)</title><rect x="85.8388%" y="981" width="0.1227%" height="15" fill="rgb(224,152,3)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (10 samples, 0.12%)</title><rect x="85.8388%" y="965" width="0.1227%" height="15" fill="rgb(214,38,23)" fg:x="6995" fg:w="10"/><text x="86.0888%" y="975.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.15%)</title><rect x="85.9983%" y="1141" width="0.1473%" height="15" fill="rgb(215,161,10)" fg:x="7008" fg:w="12"/><text x="86.2483%" y="1151.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="86.1455%" y="1141" width="0.0123%" height="15" fill="rgb(240,185,7)" fg:x="7020" fg:w="1"/><text x="86.3955%" y="1151.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="86.1455%" y="1125" width="0.0123%" height="15" fill="rgb(244,104,25)" fg:x="7020" fg:w="1"/><text x="86.3955%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[ash::vk::definitions::BufferMemoryBarrier: 4]&gt;&gt; (1 samples, 0.01%)</title><rect x="86.1578%" y="1141" width="0.0123%" height="15" fill="rgb(242,140,44)" fg:x="7021" fg:w="1"/><text x="86.4078%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="86.1578%" y="1125" width="0.0123%" height="15" fill="rgb(245,30,19)" fg:x="7021" fg:w="1"/><text x="86.4078%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[ash::vk::definitions::ImageMemoryBarrier: 4]&gt;&gt; (1 samples, 0.01%)</title><rect x="86.1701%" y="1141" width="0.0123%" height="15" fill="rgb(219,208,35)" fg:x="7022" fg:w="1"/><text x="86.4201%" y="1151.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="86.1701%" y="1125" width="0.0123%" height="15" fill="rgb(235,200,7)" fg:x="7022" fg:w="1"/><text x="86.4201%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.2805%" y="1125" width="0.0123%" height="15" fill="rgb(220,193,10)" fg:x="7031" fg:w="1"/><text x="86.5305%" y="1135.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (55 samples, 0.67%)</title><rect x="85.6792%" y="1253" width="0.6749%" height="15" fill="rgb(212,216,39)" fg:x="6982" fg:w="55"/><text x="85.9292%" y="1263.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (55 samples, 0.67%)</title><rect x="85.6792%" y="1237" width="0.6749%" height="15" fill="rgb(212,134,19)" fg:x="6982" fg:w="55"/><text x="85.9292%" y="1247.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (42 samples, 0.52%)</title><rect x="85.8388%" y="1221" width="0.5154%" height="15" fill="rgb(230,57,24)" fg:x="6995" fg:w="42"/><text x="86.0888%" y="1231.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (42 samples, 0.52%)</title><rect x="85.8388%" y="1205" width="0.5154%" height="15" fill="rgb(238,209,37)" fg:x="6995" fg:w="42"/><text x="86.0888%" y="1215.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (42 samples, 0.52%)</title><rect x="85.8388%" y="1189" width="0.5154%" height="15" fill="rgb(247,11,45)" fg:x="6995" fg:w="42"/><text x="86.0888%" y="1199.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (42 samples, 0.52%)</title><rect x="85.8388%" y="1173" width="0.5154%" height="15" fill="rgb(222,126,6)" fg:x="6995" fg:w="42"/><text x="86.0888%" y="1183.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (32 samples, 0.39%)</title><rect x="85.9615%" y="1157" width="0.3927%" height="15" fill="rgb(245,77,24)" fg:x="7005" fg:w="32"/><text x="86.2115%" y="1167.50"></text></g><g><title>gfx_backend_vulkan::command::destructure_barriers (14 samples, 0.17%)</title><rect x="86.1824%" y="1141" width="0.1718%" height="15" fill="rgb(227,14,24)" fg:x="7023" fg:w="14"/><text x="86.4324%" y="1151.50"></text></g><g><title>__memmove_avx_unaligned_erms (5 samples, 0.06%)</title><rect x="86.2928%" y="1125" width="0.0614%" height="15" fill="rgb(211,112,42)" fg:x="7032" fg:w="5"/><text x="86.5428%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.4032%" y="1205" width="0.0123%" height="15" fill="rgb(230,103,42)" fg:x="7041" fg:w="1"/><text x="86.6532%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.4032%" y="1189" width="0.0123%" height="15" fill="rgb(228,125,42)" fg:x="7041" fg:w="1"/><text x="86.6532%" y="1199.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.4032%" y="1173" width="0.0123%" height="15" fill="rgb(243,33,6)" fg:x="7041" fg:w="1"/><text x="86.6532%" y="1183.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.4032%" y="1157" width="0.0123%" height="15" fill="rgb(231,2,40)" fg:x="7041" fg:w="1"/><text x="86.6532%" y="1167.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.4032%" y="1141" width="0.0123%" height="15" fill="rgb(224,200,53)" fg:x="7041" fg:w="1"/><text x="86.6532%" y="1151.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="86.4032%" y="1125" width="0.0123%" height="15" fill="rgb(215,116,36)" fg:x="7041" fg:w="1"/><text x="86.6532%" y="1135.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (1 samples, 0.01%)</title><rect x="86.4155%" y="1189" width="0.0123%" height="15" fill="rgb(240,23,51)" fg:x="7042" fg:w="1"/><text x="86.6655%" y="1199.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (1 samples, 0.01%)</title><rect x="86.4155%" y="1173" width="0.0123%" height="15" fill="rgb(221,72,5)" fg:x="7042" fg:w="1"/><text x="86.6655%" y="1183.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="86.4155%" y="1157" width="0.0123%" height="15" fill="rgb(245,142,9)" fg:x="7042" fg:w="1"/><text x="86.6655%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="86.4155%" y="1141" width="0.0123%" height="15" fill="rgb(207,34,16)" fg:x="7042" fg:w="1"/><text x="86.6655%" y="1151.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="86.4155%" y="1125" width="0.0123%" height="15" fill="rgb(252,101,12)" fg:x="7042" fg:w="1"/><text x="86.6655%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.4278%" y="1093" width="0.0123%" height="15" fill="rgb(239,89,37)" fg:x="7043" fg:w="1"/><text x="86.6778%" y="1103.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.4278%" y="1077" width="0.0123%" height="15" fill="rgb(252,227,37)" fg:x="7043" fg:w="1"/><text x="86.6778%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="86.4278%" y="1125" width="0.0368%" height="15" fill="rgb(212,164,17)" fg:x="7043" fg:w="3"/><text x="86.6778%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (3 samples, 0.04%)</title><rect x="86.4278%" y="1109" width="0.0368%" height="15" fill="rgb(240,86,13)" fg:x="7043" fg:w="3"/><text x="86.6778%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="86.4401%" y="1093" width="0.0245%" height="15" fill="rgb(233,183,32)" fg:x="7044" fg:w="2"/><text x="86.6901%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="86.4401%" y="1077" width="0.0245%" height="15" fill="rgb(205,201,38)" fg:x="7044" fg:w="2"/><text x="86.6901%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="86.4401%" y="1061" width="0.0245%" height="15" fill="rgb(210,122,38)" fg:x="7044" fg:w="2"/><text x="86.6901%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="86.4401%" y="1045" width="0.0245%" height="15" fill="rgb(241,174,26)" fg:x="7044" fg:w="2"/><text x="86.6901%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="86.4401%" y="1029" width="0.0245%" height="15" fill="rgb(219,89,7)" fg:x="7044" fg:w="2"/><text x="86.6901%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="86.4523%" y="1013" width="0.0123%" height="15" fill="rgb(246,9,24)" fg:x="7045" fg:w="1"/><text x="86.7023%" y="1023.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="86.4523%" y="997" width="0.0123%" height="15" fill="rgb(205,132,21)" fg:x="7045" fg:w="1"/><text x="86.7023%" y="1007.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="86.4523%" y="981" width="0.0123%" height="15" fill="rgb(210,11,17)" fg:x="7045" fg:w="1"/><text x="86.7023%" y="991.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="86.4523%" y="965" width="0.0123%" height="15" fill="rgb(226,138,14)" fg:x="7045" fg:w="1"/><text x="86.7023%" y="975.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="86.4523%" y="949" width="0.0123%" height="15" fill="rgb(224,108,44)" fg:x="7045" fg:w="1"/><text x="86.7023%" y="959.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="86.4523%" y="933" width="0.0123%" height="15" fill="rgb(247,114,36)" fg:x="7045" fg:w="1"/><text x="86.7023%" y="943.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="86.4523%" y="917" width="0.0123%" height="15" fill="rgb(231,183,14)" fg:x="7045" fg:w="1"/><text x="86.7023%" y="927.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="86.4523%" y="901" width="0.0123%" height="15" fill="rgb(218,168,4)" fg:x="7045" fg:w="1"/><text x="86.7023%" y="911.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (5 samples, 0.06%)</title><rect x="86.4155%" y="1205" width="0.0614%" height="15" fill="rgb(210,8,3)" fg:x="7042" fg:w="5"/><text x="86.6655%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (4 samples, 0.05%)</title><rect x="86.4278%" y="1189" width="0.0491%" height="15" fill="rgb(216,165,0)" fg:x="7043" fg:w="4"/><text x="86.6778%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="86.4278%" y="1173" width="0.0491%" height="15" fill="rgb(245,120,5)" fg:x="7043" fg:w="4"/><text x="86.6778%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="86.4278%" y="1157" width="0.0491%" height="15" fill="rgb(249,121,32)" fg:x="7043" fg:w="4"/><text x="86.6778%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (4 samples, 0.05%)</title><rect x="86.4278%" y="1141" width="0.0491%" height="15" fill="rgb(211,55,33)" fg:x="7043" fg:w="4"/><text x="86.6778%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="86.4646%" y="1125" width="0.0123%" height="15" fill="rgb(254,46,35)" fg:x="7046" fg:w="1"/><text x="86.7146%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="86.4646%" y="1109" width="0.0123%" height="15" fill="rgb(213,213,19)" fg:x="7046" fg:w="1"/><text x="86.7146%" y="1119.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="86.4646%" y="1093" width="0.0123%" height="15" fill="rgb(207,152,44)" fg:x="7046" fg:w="1"/><text x="86.7146%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="86.4646%" y="1077" width="0.0123%" height="15" fill="rgb(227,195,36)" fg:x="7046" fg:w="1"/><text x="86.7146%" y="1087.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="86.4646%" y="1061" width="0.0123%" height="15" fill="rgb(210,137,36)" fg:x="7046" fg:w="1"/><text x="86.7146%" y="1071.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="86.4646%" y="1045" width="0.0123%" height="15" fill="rgb(253,47,47)" fg:x="7046" fg:w="1"/><text x="86.7146%" y="1055.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="86.4646%" y="1029" width="0.0123%" height="15" fill="rgb(230,147,18)" fg:x="7046" fg:w="1"/><text x="86.7146%" y="1039.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="86.4646%" y="1013" width="0.0123%" height="15" fill="rgb(247,33,49)" fg:x="7046" fg:w="1"/><text x="86.7146%" y="1023.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="86.4646%" y="997" width="0.0123%" height="15" fill="rgb(239,26,29)" fg:x="7046" fg:w="1"/><text x="86.7146%" y="1007.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="86.4646%" y="981" width="0.0123%" height="15" fill="rgb(245,145,52)" fg:x="7046" fg:w="1"/><text x="86.7146%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="86.4769%" y="1141" width="0.0368%" height="15" fill="rgb(224,139,32)" fg:x="7047" fg:w="3"/><text x="86.7269%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="86.4769%" y="1125" width="0.0368%" height="15" fill="rgb(238,202,19)" fg:x="7047" fg:w="3"/><text x="86.7269%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="86.5014%" y="1109" width="0.0123%" height="15" fill="rgb(249,211,53)" fg:x="7049" fg:w="1"/><text x="86.7514%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="86.5014%" y="1093" width="0.0123%" height="15" fill="rgb(237,229,33)" fg:x="7049" fg:w="1"/><text x="86.7514%" y="1103.50"></text></g><g><title>memcpy@plt (1 samples, 0.01%)</title><rect x="86.5014%" y="1077" width="0.0123%" height="15" fill="rgb(208,97,40)" fg:x="7049" fg:w="1"/><text x="86.7514%" y="1087.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::finish (4 samples, 0.05%)</title><rect x="86.4769%" y="1205" width="0.0491%" height="15" fill="rgb(254,36,16)" fg:x="7047" fg:w="4"/><text x="86.7269%" y="1215.50"></text></g><g><title>ash::device::DeviceV1_0::end_command_buffer (4 samples, 0.05%)</title><rect x="86.4769%" y="1189" width="0.0491%" height="15" fill="rgb(221,7,12)" fg:x="7047" fg:w="4"/><text x="86.7269%" y="1199.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::end_command_buffer (4 samples, 0.05%)</title><rect x="86.4769%" y="1173" width="0.0491%" height="15" fill="rgb(205,11,12)" fg:x="7047" fg:w="4"/><text x="86.7269%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="86.4769%" y="1157" width="0.0491%" height="15" fill="rgb(227,72,28)" fg:x="7047" fg:w="4"/><text x="86.7269%" y="1167.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="86.5137%" y="1141" width="0.0123%" height="15" fill="rgb(228,7,34)" fg:x="7050" fg:w="1"/><text x="86.7637%" y="1151.50"></text></g><g><title>&lt;smallvec::Drain&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.5260%" y="1205" width="0.0123%" height="15" fill="rgb(230,52,42)" fg:x="7051" fg:w="1"/><text x="86.7760%" y="1215.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="86.5260%" y="1189" width="0.0123%" height="15" fill="rgb(219,177,53)" fg:x="7051" fg:w="1"/><text x="86.7760%" y="1199.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.01%)</title><rect x="86.5260%" y="1173" width="0.0123%" height="15" fill="rgb(243,196,34)" fg:x="7051" fg:w="1"/><text x="86.7760%" y="1183.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.01%)</title><rect x="86.5260%" y="1157" width="0.0123%" height="15" fill="rgb(213,66,49)" fg:x="7051" fg:w="1"/><text x="86.7760%" y="1167.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::Index&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index (1 samples, 0.01%)</title><rect x="86.5382%" y="1205" width="0.0123%" height="15" fill="rgb(233,11,50)" fg:x="7052" fg:w="1"/><text x="86.7882%" y="1215.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.01%)</title><rect x="86.5382%" y="1189" width="0.0123%" height="15" fill="rgb(235,190,6)" fg:x="7052" fg:w="1"/><text x="86.7882%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="86.5505%" y="1205" width="0.0123%" height="15" fill="rgb(212,64,44)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="86.5505%" y="1189" width="0.0123%" height="15" fill="rgb(206,95,44)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1199.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="86.5505%" y="1173" width="0.0123%" height="15" fill="rgb(227,136,25)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="86.5505%" y="1157" width="0.0123%" height="15" fill="rgb(206,178,17)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1167.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="86.5505%" y="1141" width="0.0123%" height="15" fill="rgb(208,168,35)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1151.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="86.5505%" y="1125" width="0.0123%" height="15" fill="rgb(213,210,40)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1135.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="86.5505%" y="1109" width="0.0123%" height="15" fill="rgb(236,60,6)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1119.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="86.5505%" y="1093" width="0.0123%" height="15" fill="rgb(220,186,36)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1103.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="86.5505%" y="1077" width="0.0123%" height="15" fill="rgb(225,120,49)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1087.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="86.5505%" y="1061" width="0.0123%" height="15" fill="rgb(250,115,20)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1071.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="86.5505%" y="1045" width="0.0123%" height="15" fill="rgb(207,214,23)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1055.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="86.5505%" y="1029" width="0.0123%" height="15" fill="rgb(240,9,18)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1039.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="86.5505%" y="1013" width="0.0123%" height="15" fill="rgb(232,170,48)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1023.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="86.5505%" y="997" width="0.0123%" height="15" fill="rgb(236,149,23)" fg:x="7053" fg:w="1"/><text x="86.8005%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="86.5628%" y="1205" width="0.0123%" height="15" fill="rgb(210,125,42)" fg:x="7054" fg:w="1"/><text x="86.8128%" y="1215.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="86.5628%" y="1189" width="0.0123%" height="15" fill="rgb(207,201,52)" fg:x="7054" fg:w="1"/><text x="86.8128%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1 samples, 0.01%)</title><rect x="86.5628%" y="1173" width="0.0123%" height="15" fill="rgb(250,187,37)" fg:x="7054" fg:w="1"/><text x="86.8128%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="86.5628%" y="1157" width="0.0123%" height="15" fill="rgb(214,186,2)" fg:x="7054" fg:w="1"/><text x="86.8128%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="86.5628%" y="1141" width="0.0123%" height="15" fill="rgb(207,189,15)" fg:x="7054" fg:w="1"/><text x="86.8128%" y="1151.50"></text></g><g><title>_IO_no_init (2 samples, 0.02%)</title><rect x="86.8696%" y="997" width="0.0245%" height="15" fill="rgb(221,99,21)" fg:x="7079" fg:w="2"/><text x="87.1196%" y="1007.50"></text></g><g><title>_IO_old_init (1 samples, 0.01%)</title><rect x="86.8818%" y="981" width="0.0123%" height="15" fill="rgb(212,67,18)" fg:x="7080" fg:w="1"/><text x="87.1318%" y="991.50"></text></g><g><title>__GI___snprintf (4 samples, 0.05%)</title><rect x="86.8573%" y="1029" width="0.0491%" height="15" fill="rgb(226,24,24)" fg:x="7078" fg:w="4"/><text x="87.1073%" y="1039.50"></text></g><g><title>__vsnprintf_internal (3 samples, 0.04%)</title><rect x="86.8696%" y="1013" width="0.0368%" height="15" fill="rgb(252,123,31)" fg:x="7079" fg:w="3"/><text x="87.1196%" y="1023.50"></text></g><g><title>_IO_str_init_static_internal (1 samples, 0.01%)</title><rect x="86.8941%" y="997" width="0.0123%" height="15" fill="rgb(251,227,47)" fg:x="7081" fg:w="1"/><text x="87.1441%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="86.8573%" y="1045" width="0.0614%" height="15" fill="rgb(233,84,53)" fg:x="7078" fg:w="5"/><text x="87.1073%" y="1055.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="86.9064%" y="1029" width="0.0123%" height="15" fill="rgb(228,57,19)" fg:x="7082" fg:w="1"/><text x="87.1564%" y="1039.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="86.9186%" y="1045" width="0.0368%" height="15" fill="rgb(251,81,5)" fg:x="7083" fg:w="3"/><text x="87.1686%" y="1055.50"></text></g><g><title>__libc_open64 (3 samples, 0.04%)</title><rect x="86.9555%" y="1045" width="0.0368%" height="15" fill="rgb(236,211,27)" fg:x="7086" fg:w="3"/><text x="87.2055%" y="1055.50"></text></g><g><title>__pthread_disable_asynccancel (2 samples, 0.02%)</title><rect x="86.9677%" y="1029" width="0.0245%" height="15" fill="rgb(218,21,6)" fg:x="7087" fg:w="2"/><text x="87.2177%" y="1039.50"></text></g><g><title>fcntl_compat (2 samples, 0.02%)</title><rect x="86.9923%" y="1045" width="0.0245%" height="15" fill="rgb(239,104,19)" fg:x="7089" fg:w="2"/><text x="87.2423%" y="1055.50"></text></g><g><title>__GI___fcntl (2 samples, 0.02%)</title><rect x="86.9923%" y="1029" width="0.0245%" height="15" fill="rgb(234,179,27)" fg:x="7089" fg:w="2"/><text x="87.2423%" y="1039.50"></text></g><g><title>__fcntl64_nocancel_adjusted (1 samples, 0.01%)</title><rect x="87.0045%" y="1013" width="0.0123%" height="15" fill="rgb(221,154,39)" fg:x="7090" fg:w="1"/><text x="87.2545%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (29 samples, 0.36%)</title><rect x="86.6732%" y="1077" width="0.3559%" height="15" fill="rgb(228,190,1)" fg:x="7063" fg:w="29"/><text x="86.9232%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (22 samples, 0.27%)</title><rect x="86.7591%" y="1061" width="0.2700%" height="15" fill="rgb(244,122,33)" fg:x="7070" fg:w="22"/><text x="87.0091%" y="1071.50"></text></g><g><title>time@plt (1 samples, 0.01%)</title><rect x="87.0168%" y="1045" width="0.0123%" height="15" fill="rgb(227,56,37)" fg:x="7091" fg:w="1"/><text x="87.2668%" y="1055.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="87.0291%" y="1077" width="0.0123%" height="15" fill="rgb(207,158,16)" fg:x="7092" fg:w="1"/><text x="87.2791%" y="1087.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="87.0414%" y="1077" width="0.0123%" height="15" fill="rgb(251,222,30)" fg:x="7093" fg:w="1"/><text x="87.2914%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (39 samples, 0.48%)</title><rect x="86.5873%" y="1125" width="0.4786%" height="15" fill="rgb(240,22,49)" fg:x="7056" fg:w="39"/><text x="86.8373%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (38 samples, 0.47%)</title><rect x="86.5996%" y="1109" width="0.4663%" height="15" fill="rgb(224,207,37)" fg:x="7057" fg:w="38"/><text x="86.8496%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (36 samples, 0.44%)</title><rect x="86.6241%" y="1093" width="0.4418%" height="15" fill="rgb(249,188,40)" fg:x="7059" fg:w="36"/><text x="86.8741%" y="1103.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="87.0536%" y="1077" width="0.0123%" height="15" fill="rgb(254,141,11)" fg:x="7094" fg:w="1"/><text x="87.3036%" y="1087.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_fence (41 samples, 0.50%)</title><rect x="86.5750%" y="1205" width="0.5031%" height="15" fill="rgb(231,177,6)" fg:x="7055" fg:w="41"/><text x="86.8250%" y="1215.50"></text></g><g><title>ash::device::DeviceV1_0::create_fence (41 samples, 0.50%)</title><rect x="86.5750%" y="1189" width="0.5031%" height="15" fill="rgb(241,6,16)" fg:x="7055" fg:w="41"/><text x="86.8250%" y="1199.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_fence (41 samples, 0.50%)</title><rect x="86.5750%" y="1173" width="0.5031%" height="15" fill="rgb(230,50,14)" fg:x="7055" fg:w="41"/><text x="86.8250%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (41 samples, 0.50%)</title><rect x="86.5750%" y="1157" width="0.5031%" height="15" fill="rgb(254,36,3)" fg:x="7055" fg:w="41"/><text x="86.8250%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (41 samples, 0.50%)</title><rect x="86.5750%" y="1141" width="0.5031%" height="15" fill="rgb(226,149,37)" fg:x="7055" fg:w="41"/><text x="86.8250%" y="1151.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="87.0659%" y="1125" width="0.0123%" height="15" fill="rgb(253,49,27)" fg:x="7095" fg:w="1"/><text x="87.3159%" y="1135.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="87.0659%" y="1109" width="0.0123%" height="15" fill="rgb(249,182,52)" fg:x="7095" fg:w="1"/><text x="87.3159%" y="1119.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (8 samples, 0.10%)</title><rect x="87.0782%" y="1205" width="0.0982%" height="15" fill="rgb(223,42,15)" fg:x="7096" fg:w="8"/><text x="87.3282%" y="1215.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (8 samples, 0.10%)</title><rect x="87.0782%" y="1189" width="0.0982%" height="15" fill="rgb(232,31,42)" fg:x="7096" fg:w="8"/><text x="87.3282%" y="1199.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (8 samples, 0.10%)</title><rect x="87.0782%" y="1173" width="0.0982%" height="15" fill="rgb(233,56,46)" fg:x="7096" fg:w="8"/><text x="87.3282%" y="1183.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (8 samples, 0.10%)</title><rect x="87.0782%" y="1157" width="0.0982%" height="15" fill="rgb(241,143,21)" fg:x="7096" fg:w="8"/><text x="87.3282%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.10%)</title><rect x="87.0782%" y="1141" width="0.0982%" height="15" fill="rgb(251,222,15)" fg:x="7096" fg:w="8"/><text x="87.3282%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="87.1150%" y="1125" width="0.0614%" height="15" fill="rgb(242,101,40)" fg:x="7099" fg:w="5"/><text x="87.3650%" y="1135.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (1 samples, 0.01%)</title><rect x="87.1763%" y="1189" width="0.0123%" height="15" fill="rgb(247,60,44)" fg:x="7104" fg:w="1"/><text x="87.4263%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (1 samples, 0.01%)</title><rect x="87.1763%" y="1173" width="0.0123%" height="15" fill="rgb(254,48,47)" fg:x="7104" fg:w="1"/><text x="87.4263%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (1 samples, 0.01%)</title><rect x="87.1763%" y="1157" width="0.0123%" height="15" fill="rgb(253,30,33)" fg:x="7104" fg:w="1"/><text x="87.4263%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="87.1763%" y="1141" width="0.0123%" height="15" fill="rgb(253,214,47)" fg:x="7104" fg:w="1"/><text x="87.4263%" y="1151.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="87.1763%" y="1125" width="0.0123%" height="15" fill="rgb(241,108,29)" fg:x="7104" fg:w="1"/><text x="87.4263%" y="1135.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="87.1763%" y="1109" width="0.0123%" height="15" fill="rgb(240,36,2)" fg:x="7104" fg:w="1"/><text x="87.4263%" y="1119.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="87.1763%" y="1093" width="0.0123%" height="15" fill="rgb(243,198,24)" fg:x="7104" fg:w="1"/><text x="87.4263%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (6 samples, 0.07%)</title><rect x="87.1886%" y="1173" width="0.0736%" height="15" fill="rgb(225,98,27)" fg:x="7105" fg:w="6"/><text x="87.4386%" y="1183.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (6 samples, 0.07%)</title><rect x="87.1886%" y="1157" width="0.0736%" height="15" fill="rgb(208,86,30)" fg:x="7105" fg:w="6"/><text x="87.4386%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.07%)</title><rect x="87.1886%" y="1141" width="0.0736%" height="15" fill="rgb(242,157,11)" fg:x="7105" fg:w="6"/><text x="87.4386%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="87.2500%" y="1125" width="0.0123%" height="15" fill="rgb(244,84,16)" fg:x="7110" fg:w="1"/><text x="87.5000%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="87.2500%" y="1109" width="0.0123%" height="15" fill="rgb(247,20,46)" fg:x="7110" fg:w="1"/><text x="87.5000%" y="1119.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="87.2500%" y="1093" width="0.0123%" height="15" fill="rgb(240,157,20)" fg:x="7110" fg:w="1"/><text x="87.5000%" y="1103.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="87.2500%" y="1077" width="0.0123%" height="15" fill="rgb(212,151,38)" fg:x="7110" fg:w="1"/><text x="87.5000%" y="1087.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="87.2500%" y="1061" width="0.0123%" height="15" fill="rgb(233,197,14)" fg:x="7110" fg:w="1"/><text x="87.5000%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="87.2500%" y="1045" width="0.0123%" height="15" fill="rgb(226,148,28)" fg:x="7110" fg:w="1"/><text x="87.5000%" y="1055.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (9 samples, 0.11%)</title><rect x="87.1763%" y="1205" width="0.1104%" height="15" fill="rgb(244,141,30)" fg:x="7104" fg:w="9"/><text x="87.4263%" y="1215.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (8 samples, 0.10%)</title><rect x="87.1886%" y="1189" width="0.0982%" height="15" fill="rgb(215,73,38)" fg:x="7105" fg:w="8"/><text x="87.4386%" y="1199.50"></text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::merge (2 samples, 0.02%)</title><rect x="87.2622%" y="1173" width="0.0245%" height="15" fill="rgb(230,148,29)" fg:x="7111" fg:w="2"/><text x="87.5122%" y="1183.50"></text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::merge (1 samples, 0.01%)</title><rect x="87.2745%" y="1157" width="0.0123%" height="15" fill="rgb(250,41,52)" fg:x="7112" fg:w="1"/><text x="87.5245%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::pipeline::RenderPipeline&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.2868%" y="1173" width="0.0123%" height="15" fill="rgb(215,48,1)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::pipeline::RenderPipeline&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.2868%" y="1157" width="0.0123%" height="15" fill="rgb(205,223,38)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::pipeline::RenderPipeline&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.2868%" y="1141" width="0.0123%" height="15" fill="rgb(213,51,8)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::pipeline::RenderPipeline&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="87.2868%" y="1125" width="0.0123%" height="15" fill="rgb(248,53,11)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.2868%" y="1109" width="0.0123%" height="15" fill="rgb(218,140,4)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="87.2868%" y="1093" width="0.0123%" height="15" fill="rgb(248,161,31)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="87.2868%" y="1077" width="0.0123%" height="15" fill="rgb(239,88,32)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="87.2868%" y="1061" width="0.0123%" height="15" fill="rgb(234,14,28)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Sampler&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;)&gt; (1 samples, 0.01%)</title><rect x="87.2868%" y="1045" width="0.0123%" height="15" fill="rgb(235,173,11)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Sampler&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.2868%" y="1029" width="0.0123%" height="15" fill="rgb(222,70,2)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="87.2868%" y="1013" width="0.0123%" height="15" fill="rgb(228,196,41)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1023.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.2868%" y="997" width="0.0123%" height="15" fill="rgb(249,19,9)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="1007.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="87.2868%" y="981" width="0.0123%" height="15" fill="rgb(221,16,43)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="87.2868%" y="965" width="0.0123%" height="15" fill="rgb(225,207,6)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="87.2868%" y="949" width="0.0123%" height="15" fill="rgb(249,32,32)" fg:x="7113" fg:w="1"/><text x="87.5368%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Sampler&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.2991%" y="1173" width="0.0123%" height="15" fill="rgb(232,163,43)" fg:x="7114" fg:w="1"/><text x="87.5491%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Sampler&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.2991%" y="1157" width="0.0123%" height="15" fill="rgb(236,158,54)" fg:x="7114" fg:w="1"/><text x="87.5491%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Sampler&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.2991%" y="1141" width="0.0123%" height="15" fill="rgb(205,126,44)" fg:x="7114" fg:w="1"/><text x="87.5491%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Sampler&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="87.2991%" y="1125" width="0.0123%" height="15" fill="rgb(210,162,12)" fg:x="7114" fg:w="1"/><text x="87.5491%" y="1135.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.2991%" y="1109" width="0.0123%" height="15" fill="rgb(218,156,48)" fg:x="7114" fg:w="1"/><text x="87.5491%" y="1119.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.2991%" y="1093" width="0.0123%" height="15" fill="rgb(248,210,3)" fg:x="7114" fg:w="1"/><text x="87.5491%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.3113%" y="1173" width="0.0123%" height="15" fill="rgb(212,43,27)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.3113%" y="1157" width="0.0123%" height="15" fill="rgb(241,52,6)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.3113%" y="1141" width="0.0123%" height="15" fill="rgb(222,178,35)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="87.3113%" y="1125" width="0.0123%" height="15" fill="rgb(205,121,46)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.3113%" y="1109" width="0.0123%" height="15" fill="rgb(249,67,1)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="87.3113%" y="1093" width="0.0123%" height="15" fill="rgb(238,168,42)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="87.3113%" y="1077" width="0.0123%" height="15" fill="rgb(205,36,48)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="87.3113%" y="1061" width="0.0123%" height="15" fill="rgb(240,85,12)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Sampler&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;)&gt; (1 samples, 0.01%)</title><rect x="87.3113%" y="1045" width="0.0123%" height="15" fill="rgb(245,27,39)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::Sampler&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.3113%" y="1029" width="0.0123%" height="15" fill="rgb(218,129,34)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="87.3113%" y="1013" width="0.0123%" height="15" fill="rgb(221,157,12)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1023.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.3113%" y="997" width="0.0123%" height="15" fill="rgb(213,206,20)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="1007.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="87.3113%" y="981" width="0.0123%" height="15" fill="rgb(227,115,30)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="87.3113%" y="965" width="0.0123%" height="15" fill="rgb(221,40,47)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="87.3113%" y="949" width="0.0123%" height="15" fill="rgb(239,96,49)" fg:x="7115" fg:w="1"/><text x="87.5613%" y="959.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::after_submit (5 samples, 0.06%)</title><rect x="87.2868%" y="1205" width="0.0614%" height="15" fill="rgb(223,24,38)" fg:x="7113" fg:w="5"/><text x="87.5368%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (5 samples, 0.06%)</title><rect x="87.2868%" y="1189" width="0.0614%" height="15" fill="rgb(242,35,45)" fg:x="7113" fg:w="5"/><text x="87.5368%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="87.3236%" y="1173" width="0.0245%" height="15" fill="rgb(236,20,9)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="87.3236%" y="1157" width="0.0245%" height="15" fill="rgb(239,124,8)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="87.3236%" y="1141" width="0.0245%" height="15" fill="rgb(228,92,29)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;)&gt;&gt; (2 samples, 0.02%)</title><rect x="87.3236%" y="1125" width="0.0245%" height="15" fill="rgb(251,53,39)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1135.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="87.3236%" y="1109" width="0.0245%" height="15" fill="rgb(224,44,10)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (2 samples, 0.02%)</title><rect x="87.3236%" y="1093" width="0.0245%" height="15" fill="rgb(254,10,15)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.02%)</title><rect x="87.3236%" y="1077" width="0.0245%" height="15" fill="rgb(245,173,6)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.02%)</title><rect x="87.3236%" y="1061" width="0.0245%" height="15" fill="rgb(228,74,0)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;)&gt; (2 samples, 0.02%)</title><rect x="87.3236%" y="1045" width="0.0245%" height="15" fill="rgb(206,138,29)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="87.3236%" y="1029" width="0.0245%" height="15" fill="rgb(253,27,43)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (2 samples, 0.02%)</title><rect x="87.3236%" y="1013" width="0.0245%" height="15" fill="rgb(231,73,0)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1023.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="87.3236%" y="997" width="0.0245%" height="15" fill="rgb(218,9,23)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="1007.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (2 samples, 0.02%)</title><rect x="87.3236%" y="981" width="0.0245%" height="15" fill="rgb(251,55,29)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="87.3236%" y="965" width="0.0245%" height="15" fill="rgb(223,180,22)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="87.3236%" y="949" width="0.0245%" height="15" fill="rgb(223,29,21)" fg:x="7116" fg:w="2"/><text x="87.5736%" y="959.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::extend (1 samples, 0.01%)</title><rect x="87.3481%" y="1205" width="0.0123%" height="15" fill="rgb(251,103,37)" fg:x="7118" fg:w="1"/><text x="87.5981%" y="1215.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate_for_thread_id (1 samples, 0.01%)</title><rect x="87.3481%" y="1189" width="0.0123%" height="15" fill="rgb(214,11,21)" fg:x="7118" fg:w="1"/><text x="87.5981%" y="1199.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::allocate (1 samples, 0.01%)</title><rect x="87.3481%" y="1173" width="0.0123%" height="15" fill="rgb(205,137,13)" fg:x="7118" fg:w="1"/><text x="87.5981%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="87.3481%" y="1157" width="0.0123%" height="15" fill="rgb(225,58,47)" fg:x="7118" fg:w="1"/><text x="87.5981%" y="1167.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="87.3604%" y="1157" width="0.0123%" height="15" fill="rgb(222,197,14)" fg:x="7119" fg:w="1"/><text x="87.6104%" y="1167.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::double_ended::DoubleEndedIterator for core::ops::range::Range&lt;A&gt;&gt;::next_back (1 samples, 0.01%)</title><rect x="87.3604%" y="1141" width="0.0123%" height="15" fill="rgb(215,210,33)" fg:x="7119" fg:w="1"/><text x="87.6104%" y="1151.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next_back (1 samples, 0.01%)</title><rect x="87.3604%" y="1125" width="0.0123%" height="15" fill="rgb(242,13,9)" fg:x="7119" fg:w="1"/><text x="87.6104%" y="1135.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for usize&gt;::lt (1 samples, 0.01%)</title><rect x="87.3604%" y="1109" width="0.0123%" height="15" fill="rgb(218,31,39)" fg:x="7119" fg:w="1"/><text x="87.6104%" y="1119.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="87.3727%" y="1157" width="0.0123%" height="15" fill="rgb(211,214,23)" fg:x="7120" fg:w="1"/><text x="87.6227%" y="1167.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (9 samples, 0.11%)</title><rect x="87.3604%" y="1189" width="0.1104%" height="15" fill="rgb(237,92,14)" fg:x="7119" fg:w="9"/><text x="87.6104%" y="1199.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::maintain (9 samples, 0.11%)</title><rect x="87.3604%" y="1173" width="0.1104%" height="15" fill="rgb(220,78,5)" fg:x="7119" fg:w="9"/><text x="87.6104%" y="1183.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::recycle (7 samples, 0.09%)</title><rect x="87.3850%" y="1157" width="0.0859%" height="15" fill="rgb(237,23,21)" fg:x="7121" fg:w="7"/><text x="87.6350%" y="1167.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::reset (7 samples, 0.09%)</title><rect x="87.3850%" y="1141" width="0.0859%" height="15" fill="rgb(251,207,51)" fg:x="7121" fg:w="7"/><text x="87.6350%" y="1151.50"></text></g><g><title>ash::device::DeviceV1_0::reset_command_buffer (7 samples, 0.09%)</title><rect x="87.3850%" y="1125" width="0.0859%" height="15" fill="rgb(249,206,18)" fg:x="7121" fg:w="7"/><text x="87.6350%" y="1135.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::reset_command_buffer (7 samples, 0.09%)</title><rect x="87.3850%" y="1109" width="0.0859%" height="15" fill="rgb(236,20,19)" fg:x="7121" fg:w="7"/><text x="87.6350%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.09%)</title><rect x="87.3850%" y="1093" width="0.0859%" height="15" fill="rgb(214,227,29)" fg:x="7121" fg:w="7"/><text x="87.6350%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="87.3972%" y="1077" width="0.0736%" height="15" fill="rgb(209,183,4)" fg:x="7122" fg:w="6"/><text x="87.6472%" y="1087.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.4586%" y="1061" width="0.0123%" height="15" fill="rgb(233,111,23)" fg:x="7127" fg:w="1"/><text x="87.7086%" y="1071.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.4586%" y="1045" width="0.0123%" height="15" fill="rgb(238,121,27)" fg:x="7127" fg:w="1"/><text x="87.7086%" y="1055.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="87.4709%" y="1173" width="0.0123%" height="15" fill="rgb(236,120,41)" fg:x="7128" fg:w="1"/><text x="87.7209%" y="1183.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (1 samples, 0.01%)</title><rect x="87.4709%" y="1157" width="0.0123%" height="15" fill="rgb(241,143,10)" fg:x="7128" fg:w="1"/><text x="87.7209%" y="1167.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::cleanup (1 samples, 0.01%)</title><rect x="87.4709%" y="1141" width="0.0123%" height="15" fill="rgb(224,86,31)" fg:x="7128" fg:w="1"/><text x="87.7209%" y="1151.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (1 samples, 0.01%)</title><rect x="87.4709%" y="1125" width="0.0123%" height="15" fill="rgb(236,212,27)" fg:x="7128" fg:w="1"/><text x="87.7209%" y="1135.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::buffer_read (1 samples, 0.01%)</title><rect x="87.4709%" y="1109" width="0.0123%" height="15" fill="rgb(219,43,51)" fg:x="7128" fg:w="1"/><text x="87.7209%" y="1119.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="87.4709%" y="1093" width="0.0123%" height="15" fill="rgb(232,216,8)" fg:x="7128" fg:w="1"/><text x="87.7209%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;(gfx_backend_vulkan::native::Image,wgpu_core::device::alloc::MemoryBlock&lt;gfx_backend_vulkan::Backend&gt;)&gt;&gt; (2 samples, 0.02%)</title><rect x="87.4831%" y="1157" width="0.0245%" height="15" fill="rgb(206,222,39)" fg:x="7129" fg:w="2"/><text x="87.7331%" y="1167.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="87.4831%" y="1141" width="0.0245%" height="15" fill="rgb(209,149,48)" fg:x="7129" fg:w="2"/><text x="87.7331%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(gfx_backend_vulkan::native::Image,wgpu_core::device::alloc::MemoryBlock&lt;gfx_backend_vulkan::Backend&gt;),alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="87.4954%" y="1125" width="0.0123%" height="15" fill="rgb(229,155,21)" fg:x="7130" fg:w="1"/><text x="87.7454%" y="1135.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.4954%" y="1109" width="0.0123%" height="15" fill="rgb(246,152,26)" fg:x="7130" fg:w="1"/><text x="87.7454%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.01%)</title><rect x="87.5077%" y="1109" width="0.0123%" height="15" fill="rgb(206,70,42)" fg:x="7131" fg:w="1"/><text x="87.7577%" y="1119.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.5077%" y="1093" width="0.0123%" height="15" fill="rgb(236,9,11)" fg:x="7131" fg:w="1"/><text x="87.7577%" y="1103.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="87.5199%" y="1109" width="0.0123%" height="15" fill="rgb(238,145,47)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="1119.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="87.5199%" y="1093" width="0.0123%" height="15" fill="rgb(252,189,7)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="87.5199%" y="1077" width="0.0123%" height="15" fill="rgb(254,168,51)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="1087.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="87.5199%" y="1061" width="0.0123%" height="15" fill="rgb(227,105,46)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="1071.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (1 samples, 0.01%)</title><rect x="87.5199%" y="1045" width="0.0123%" height="15" fill="rgb(227,74,30)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="1055.50"></text></g><g><title>tracing::span::Span::new_with (1 samples, 0.01%)</title><rect x="87.5199%" y="1029" width="0.0123%" height="15" fill="rgb(206,212,44)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="1039.50"></text></g><g><title>tracing::span::Span::make_with (1 samples, 0.01%)</title><rect x="87.5199%" y="1013" width="0.0123%" height="15" fill="rgb(252,69,11)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="1023.50"></text></g><g><title>tracing::span::Inner::new (1 samples, 0.01%)</title><rect x="87.5199%" y="997" width="0.0123%" height="15" fill="rgb(239,116,0)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="1007.50"></text></g><g><title>&lt;tracing_core::dispatcher::Dispatch as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="87.5199%" y="981" width="0.0123%" height="15" fill="rgb(246,189,23)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="87.5199%" y="965" width="0.0123%" height="15" fill="rgb(229,50,41)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="87.5199%" y="949" width="0.0123%" height="15" fill="rgb(214,66,37)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="87.5199%" y="933" width="0.0123%" height="15" fill="rgb(226,28,6)" fg:x="7132" fg:w="1"/><text x="87.7699%" y="943.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (3 samples, 0.04%)</title><rect x="87.5077%" y="1125" width="0.0368%" height="15" fill="rgb(239,154,0)" fg:x="7131" fg:w="3"/><text x="87.7577%" y="1135.50"></text></g><g><title>tracing_core::field::FieldSet::value_set (1 samples, 0.01%)</title><rect x="87.5322%" y="1109" width="0.0123%" height="15" fill="rgb(233,97,11)" fg:x="7133" fg:w="1"/><text x="87.7822%" y="1119.50"></text></g><g><title>tracing::span::Span::enter (1 samples, 0.01%)</title><rect x="87.5445%" y="1125" width="0.0123%" height="15" fill="rgb(236,215,16)" fg:x="7134" fg:w="1"/><text x="87.7945%" y="1135.50"></text></g><g><title>tracing::span::Span::do_enter (1 samples, 0.01%)</title><rect x="87.5445%" y="1109" width="0.0123%" height="15" fill="rgb(246,188,29)" fg:x="7134" fg:w="1"/><text x="87.7945%" y="1119.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (1 samples, 0.01%)</title><rect x="87.5445%" y="1093" width="0.0123%" height="15" fill="rgb(207,7,29)" fg:x="7134" fg:w="1"/><text x="87.7945%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="87.5445%" y="1077" width="0.0123%" height="15" fill="rgb(238,112,43)" fg:x="7134" fg:w="1"/><text x="87.7945%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="87.5445%" y="1061" width="0.0123%" height="15" fill="rgb(230,110,32)" fg:x="7134" fg:w="1"/><text x="87.7945%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="87.5445%" y="1045" width="0.0123%" height="15" fill="rgb(218,197,32)" fg:x="7134" fg:w="1"/><text x="87.7945%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="87.5445%" y="1029" width="0.0123%" height="15" fill="rgb(252,61,9)" fg:x="7134" fg:w="1"/><text x="87.7945%" y="1039.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_default (1 samples, 0.01%)</title><rect x="87.5445%" y="1013" width="0.0123%" height="15" fill="rgb(244,140,14)" fg:x="7134" fg:w="1"/><text x="87.7945%" y="1023.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or (1 samples, 0.01%)</title><rect x="87.5445%" y="997" width="0.0123%" height="15" fill="rgb(216,14,47)" fg:x="7134" fg:w="1"/><text x="87.7945%" y="1007.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_or_try (1 samples, 0.01%)</title><rect x="87.5445%" y="981" width="0.0123%" height="15" fill="rgb(224,130,52)" fg:x="7134" fg:w="1"/><text x="87.7945%" y="991.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (1 samples, 0.01%)</title><rect x="87.5445%" y="965" width="0.0123%" height="15" fill="rgb(210,229,51)" fg:x="7134" fg:w="1"/><text x="87.7945%" y="975.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (8 samples, 0.10%)</title><rect x="87.4709%" y="1189" width="0.0982%" height="15" fill="rgb(242,13,9)" fg:x="7128" fg:w="8"/><text x="87.7209%" y="1199.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (7 samples, 0.09%)</title><rect x="87.4831%" y="1173" width="0.0859%" height="15" fill="rgb(252,71,50)" fg:x="7129" fg:w="7"/><text x="87.7331%" y="1183.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (5 samples, 0.06%)</title><rect x="87.5077%" y="1157" width="0.0614%" height="15" fill="rgb(218,225,6)" fg:x="7131" fg:w="5"/><text x="87.7577%" y="1167.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (5 samples, 0.06%)</title><rect x="87.5077%" y="1141" width="0.0614%" height="15" fill="rgb(219,27,35)" fg:x="7131" fg:w="5"/><text x="87.7577%" y="1151.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="87.5568%" y="1125" width="0.0123%" height="15" fill="rgb(226,30,1)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="1135.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="87.5568%" y="1109" width="0.0123%" height="15" fill="rgb(227,164,34)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="87.5568%" y="1093" width="0.0123%" height="15" fill="rgb(206,103,4)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="1103.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="87.5568%" y="1077" width="0.0123%" height="15" fill="rgb(214,166,19)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="1087.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (1 samples, 0.01%)</title><rect x="87.5568%" y="1061" width="0.0123%" height="15" fill="rgb(240,56,20)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="1071.50"></text></g><g><title>tracing::span::Span::new_with (1 samples, 0.01%)</title><rect x="87.5568%" y="1045" width="0.0123%" height="15" fill="rgb(224,25,3)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="1055.50"></text></g><g><title>tracing::span::Span::make_with (1 samples, 0.01%)</title><rect x="87.5568%" y="1029" width="0.0123%" height="15" fill="rgb(216,206,54)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="1039.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="87.5568%" y="1013" width="0.0123%" height="15" fill="rgb(225,142,10)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="87.5568%" y="997" width="0.0123%" height="15" fill="rgb(246,9,18)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="87.5568%" y="981" width="0.0123%" height="15" fill="rgb(247,140,18)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="87.5568%" y="965" width="0.0123%" height="15" fill="rgb(239,184,22)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="975.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="87.5568%" y="949" width="0.0123%" height="15" fill="rgb(227,94,44)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (1 samples, 0.01%)</title><rect x="87.5568%" y="933" width="0.0123%" height="15" fill="rgb(219,43,3)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="943.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="87.5568%" y="917" width="0.0123%" height="15" fill="rgb(210,76,31)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="927.50"></text></g><g><title>thread_local::thread_id::get (1 samples, 0.01%)</title><rect x="87.5568%" y="901" width="0.0123%" height="15" fill="rgb(225,85,12)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="87.5568%" y="885" width="0.0123%" height="15" fill="rgb(214,191,28)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="87.5568%" y="869" width="0.0123%" height="15" fill="rgb(214,43,14)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="879.50"></text></g><g><title>thread_local::thread_id::THREAD_HOLDER::__getit (1 samples, 0.01%)</title><rect x="87.5568%" y="853" width="0.0123%" height="15" fill="rgb(253,117,5)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="863.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="87.5568%" y="837" width="0.0123%" height="15" fill="rgb(208,124,26)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="847.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="87.5568%" y="821" width="0.0123%" height="15" fill="rgb(228,208,39)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="87.5568%" y="805" width="0.0123%" height="15" fill="rgb(206,180,39)" fg:x="7135" fg:w="1"/><text x="87.8068%" y="815.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (3 samples, 0.04%)</title><rect x="87.5690%" y="1173" width="0.0368%" height="15" fill="rgb(205,111,37)" fg:x="7136" fg:w="3"/><text x="87.8190%" y="1183.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions::{{closure}} (3 samples, 0.04%)</title><rect x="87.5690%" y="1157" width="0.0368%" height="15" fill="rgb(208,121,24)" fg:x="7136" fg:w="3"/><text x="87.8190%" y="1167.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::get_fence_status (3 samples, 0.04%)</title><rect x="87.5690%" y="1141" width="0.0368%" height="15" fill="rgb(218,215,32)" fg:x="7136" fg:w="3"/><text x="87.8190%" y="1151.50"></text></g><g><title>ash::device::DeviceV1_0::get_fence_status (3 samples, 0.04%)</title><rect x="87.5690%" y="1125" width="0.0368%" height="15" fill="rgb(244,168,53)" fg:x="7136" fg:w="3"/><text x="87.8190%" y="1135.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::get_fence_status (3 samples, 0.04%)</title><rect x="87.5690%" y="1109" width="0.0368%" height="15" fill="rgb(214,9,36)" fg:x="7136" fg:w="3"/><text x="87.8190%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="87.5690%" y="1093" width="0.0368%" height="15" fill="rgb(231,4,34)" fg:x="7136" fg:w="3"/><text x="87.8190%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="87.5936%" y="1077" width="0.0123%" height="15" fill="rgb(210,83,51)" fg:x="7138" fg:w="1"/><text x="87.8436%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (10 samples, 0.12%)</title><rect x="87.6427%" y="1061" width="0.1227%" height="15" fill="rgb(224,112,1)" fg:x="7142" fg:w="10"/><text x="87.8927%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (9 samples, 0.11%)</title><rect x="87.6549%" y="1045" width="0.1104%" height="15" fill="rgb(216,33,41)" fg:x="7143" fg:w="9"/><text x="87.9049%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="87.7531%" y="1029" width="0.0123%" height="15" fill="rgb(215,179,42)" fg:x="7151" fg:w="1"/><text x="88.0031%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="87.7531%" y="1013" width="0.0123%" height="15" fill="rgb(205,81,48)" fg:x="7151" fg:w="1"/><text x="88.0031%" y="1023.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.7531%" y="997" width="0.0123%" height="15" fill="rgb(246,17,30)" fg:x="7151" fg:w="1"/><text x="88.0031%" y="1007.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::destroy_fence (14 samples, 0.17%)</title><rect x="87.6058%" y="1173" width="0.1718%" height="15" fill="rgb(226,19,16)" fg:x="7139" fg:w="14"/><text x="87.8558%" y="1183.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_fence (14 samples, 0.17%)</title><rect x="87.6058%" y="1157" width="0.1718%" height="15" fill="rgb(207,3,14)" fg:x="7139" fg:w="14"/><text x="87.8558%" y="1167.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::destroy_fence (14 samples, 0.17%)</title><rect x="87.6058%" y="1141" width="0.1718%" height="15" fill="rgb(226,77,12)" fg:x="7139" fg:w="14"/><text x="87.8558%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.17%)</title><rect x="87.6058%" y="1125" width="0.1718%" height="15" fill="rgb(226,76,25)" fg:x="7139" fg:w="14"/><text x="87.8558%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.16%)</title><rect x="87.6181%" y="1109" width="0.1595%" height="15" fill="rgb(217,216,25)" fg:x="7140" fg:w="13"/><text x="87.8681%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.16%)</title><rect x="87.6181%" y="1093" width="0.1595%" height="15" fill="rgb(247,127,42)" fg:x="7140" fg:w="13"/><text x="87.8681%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.16%)</title><rect x="87.6181%" y="1077" width="0.1595%" height="15" fill="rgb(226,10,34)" fg:x="7140" fg:w="13"/><text x="87.8681%" y="1087.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.7654%" y="1061" width="0.0123%" height="15" fill="rgb(249,78,0)" fg:x="7152" fg:w="1"/><text x="88.0154%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="87.7776%" y="1141" width="0.0123%" height="15" fill="rgb(226,218,38)" fg:x="7153" fg:w="1"/><text x="88.0276%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="87.7776%" y="1125" width="0.0123%" height="15" fill="rgb(240,92,1)" fg:x="7153" fg:w="1"/><text x="88.0276%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="87.7776%" y="1109" width="0.0123%" height="15" fill="rgb(237,224,33)" fg:x="7153" fg:w="1"/><text x="88.0276%" y="1119.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="87.7776%" y="1093" width="0.0123%" height="15" fill="rgb(211,46,1)" fg:x="7153" fg:w="1"/><text x="88.0276%" y="1103.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (36 samples, 0.44%)</title><rect x="87.3604%" y="1205" width="0.4418%" height="15" fill="rgb(239,190,4)" fg:x="7119" fg:w="36"/><text x="87.6104%" y="1215.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (19 samples, 0.23%)</title><rect x="87.5690%" y="1189" width="0.2332%" height="15" fill="rgb(221,50,22)" fg:x="7136" fg:w="19"/><text x="87.8190%" y="1199.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::extend (2 samples, 0.02%)</title><rect x="87.7776%" y="1173" width="0.0245%" height="15" fill="rgb(207,176,8)" fg:x="7153" fg:w="2"/><text x="88.0276%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (2 samples, 0.02%)</title><rect x="87.7776%" y="1157" width="0.0245%" height="15" fill="rgb(244,114,50)" fg:x="7153" fg:w="2"/><text x="88.0276%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="87.7899%" y="1141" width="0.0123%" height="15" fill="rgb(226,206,19)" fg:x="7154" fg:w="1"/><text x="88.0399%" y="1151.50"></text></g><g><title>copyless::vec::VecAllocation&lt;T&gt;::init (1 samples, 0.01%)</title><rect x="87.8022%" y="1189" width="0.0123%" height="15" fill="rgb(208,199,16)" fg:x="7155" fg:w="1"/><text x="88.0522%" y="1199.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="87.8022%" y="1173" width="0.0123%" height="15" fill="rgb(208,38,14)" fg:x="7155" fg:w="1"/><text x="88.0522%" y="1183.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="87.8022%" y="1157" width="0.0123%" height="15" fill="rgb(221,211,49)" fg:x="7155" fg:w="1"/><text x="88.0522%" y="1167.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::track_submission (2 samples, 0.02%)</title><rect x="87.8022%" y="1205" width="0.0245%" height="15" fill="rgb(227,214,34)" fg:x="7155" fg:w="2"/><text x="88.0522%" y="1215.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::extend (1 samples, 0.01%)</title><rect x="87.8145%" y="1189" width="0.0123%" height="15" fill="rgb(234,5,54)" fg:x="7156" fg:w="1"/><text x="88.0645%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="87.8145%" y="1173" width="0.0123%" height="15" fill="rgb(236,215,22)" fg:x="7156" fg:w="1"/><text x="88.0645%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="87.8145%" y="1157" width="0.0123%" height="15" fill="rgb(244,0,11)" fg:x="7156" fg:w="1"/><text x="88.0645%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="87.8145%" y="1141" width="0.0123%" height="15" fill="rgb(212,140,16)" fg:x="7156" fg:w="1"/><text x="88.0645%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="87.8145%" y="1125" width="0.0123%" height="15" fill="rgb(238,101,37)" fg:x="7156" fg:w="1"/><text x="88.0645%" y="1135.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (2 samples, 0.02%)</title><rect x="87.8267%" y="1205" width="0.0245%" height="15" fill="rgb(247,46,3)" fg:x="7157" fg:w="2"/><text x="88.0767%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="87.8513%" y="1189" width="0.0123%" height="15" fill="rgb(208,106,19)" fg:x="7159" fg:w="1"/><text x="88.1013%" y="1199.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;B&gt;::finish::{{closure}} (1 samples, 0.01%)</title><rect x="87.8513%" y="1173" width="0.0123%" height="15" fill="rgb(240,227,15)" fg:x="7159" fg:w="1"/><text x="88.1013%" y="1183.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::finish (1 samples, 0.01%)</title><rect x="87.8513%" y="1157" width="0.0123%" height="15" fill="rgb(226,173,6)" fg:x="7159" fg:w="1"/><text x="88.1013%" y="1167.50"></text></g><g><title>ash::device::DeviceV1_0::end_command_buffer (1 samples, 0.01%)</title><rect x="87.8513%" y="1141" width="0.0123%" height="15" fill="rgb(213,191,1)" fg:x="7159" fg:w="1"/><text x="88.1013%" y="1151.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::end_command_buffer (1 samples, 0.01%)</title><rect x="87.8513%" y="1125" width="0.0123%" height="15" fill="rgb(246,51,36)" fg:x="7159" fg:w="1"/><text x="88.1013%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="87.8513%" y="1109" width="0.0123%" height="15" fill="rgb(238,40,32)" fg:x="7159" fg:w="1"/><text x="88.1013%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="87.8513%" y="1093" width="0.0123%" height="15" fill="rgb(208,126,27)" fg:x="7159" fg:w="1"/><text x="88.1013%" y="1103.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;B&gt;::finish (2 samples, 0.02%)</title><rect x="87.8513%" y="1205" width="0.0245%" height="15" fill="rgb(227,117,38)" fg:x="7159" fg:w="2"/><text x="88.1013%" y="1215.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (1 samples, 0.01%)</title><rect x="87.8635%" y="1189" width="0.0123%" height="15" fill="rgb(232,16,1)" fg:x="7160" fg:w="1"/><text x="88.1135%" y="1199.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="87.8635%" y="1173" width="0.0123%" height="15" fill="rgb(212,111,31)" fg:x="7160" fg:w="1"/><text x="88.1135%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="87.8635%" y="1157" width="0.0123%" height="15" fill="rgb(253,227,2)" fg:x="7160" fg:w="1"/><text x="88.1135%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="87.8635%" y="1141" width="0.0123%" height="15" fill="rgb(216,122,17)" fg:x="7160" fg:w="1"/><text x="88.1135%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(wgpu_core::id::Id&lt;wgpu_core::resource::Texture&lt;gfx_backend_empty::Backend&gt;&gt;,())&gt;,hashbrown::raw::RawTable&lt;(wgpu_core::id::Id&lt;wgpu_core::resource::Texture&lt;gfx_backend_empty::Backend&gt;&gt;,())&gt;::clear::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="87.8635%" y="1125" width="0.0123%" height="15" fill="rgb(227,37,2)" fg:x="7160" fg:w="1"/><text x="88.1135%" y="1135.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.8635%" y="1109" width="0.0123%" height="15" fill="rgb(244,113,40)" fg:x="7160" fg:w="1"/><text x="88.1135%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="87.8635%" y="1093" width="0.0123%" height="15" fill="rgb(217,193,34)" fg:x="7160" fg:w="1"/><text x="88.1135%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (1 samples, 0.01%)</title><rect x="87.8635%" y="1077" width="0.0123%" height="15" fill="rgb(212,223,15)" fg:x="7160" fg:w="1"/><text x="88.1135%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (1 samples, 0.01%)</title><rect x="87.8635%" y="1061" width="0.0123%" height="15" fill="rgb(238,143,18)" fg:x="7160" fg:w="1"/><text x="88.1135%" y="1071.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.01%)</title><rect x="87.8758%" y="1205" width="0.0123%" height="15" fill="rgb(231,18,49)" fg:x="7161" fg:w="1"/><text x="88.1258%" y="1215.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="87.8758%" y="1189" width="0.0123%" height="15" fill="rgb(249,122,4)" fg:x="7161" fg:w="1"/><text x="88.1258%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="87.8758%" y="1173" width="0.0123%" height="15" fill="rgb(245,138,54)" fg:x="7161" fg:w="1"/><text x="88.1258%" y="1183.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="87.8758%" y="1157" width="0.0123%" height="15" fill="rgb(218,130,18)" fg:x="7161" fg:w="1"/><text x="88.1258%" y="1167.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="87.8758%" y="1141" width="0.0123%" height="15" fill="rgb(235,94,13)" fg:x="7161" fg:w="1"/><text x="88.1258%" y="1151.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="87.8758%" y="1125" width="0.0123%" height="15" fill="rgb(247,143,5)" fg:x="7161" fg:w="1"/><text x="88.1258%" y="1135.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (1 samples, 0.01%)</title><rect x="87.8881%" y="1205" width="0.0123%" height="15" fill="rgb(212,59,54)" fg:x="7162" fg:w="1"/><text x="88.1381%" y="1215.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.01%)</title><rect x="87.8881%" y="1189" width="0.0123%" height="15" fill="rgb(206,121,24)" fg:x="7162" fg:w="1"/><text x="88.1381%" y="1199.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.01%)</title><rect x="87.8881%" y="1173" width="0.0123%" height="15" fill="rgb(235,38,8)" fg:x="7162" fg:w="1"/><text x="88.1381%" y="1183.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="87.8881%" y="1157" width="0.0123%" height="15" fill="rgb(227,102,26)" fg:x="7162" fg:w="1"/><text x="88.1381%" y="1167.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="87.8881%" y="1141" width="0.0123%" height="15" fill="rgb(240,183,46)" fg:x="7162" fg:w="1"/><text x="88.1381%" y="1151.50"></text></g><g><title>bevy_app::app::App::update (448 samples, 5.50%)</title><rect x="82.4150%" y="1429" width="5.4976%" height="15" fill="rgb(208,177,23)" fg:x="6716" fg:w="448"/><text x="82.6650%" y="1439.50">bevy_ap..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (448 samples, 5.50%)</title><rect x="82.4150%" y="1413" width="5.4976%" height="15" fill="rgb(216,152,5)" fg:x="6716" fg:w="448"/><text x="82.6650%" y="1423.50">&lt;bevy_e..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (448 samples, 5.50%)</title><rect x="82.4150%" y="1397" width="5.4976%" height="15" fill="rgb(238,199,2)" fg:x="6716" fg:w="448"/><text x="82.6650%" y="1407.50">bevy_ec..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (448 samples, 5.50%)</title><rect x="82.4150%" y="1381" width="5.4976%" height="15" fill="rgb(235,142,28)" fg:x="6716" fg:w="448"/><text x="82.6650%" y="1391.50">&lt;bevy_e..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (415 samples, 5.09%)</title><rect x="82.8200%" y="1365" width="5.0926%" height="15" fill="rgb(225,97,25)" fg:x="6749" fg:w="415"/><text x="83.0700%" y="1375.50">&lt;bevy_..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (415 samples, 5.09%)</title><rect x="82.8200%" y="1349" width="5.0926%" height="15" fill="rgb(208,75,46)" fg:x="6749" fg:w="415"/><text x="83.0700%" y="1359.50">&lt;alloc..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (231 samples, 2.83%)</title><rect x="85.0779%" y="1333" width="2.8347%" height="15" fill="rgb(240,136,15)" fg:x="6933" fg:w="231"/><text x="85.3279%" y="1343.50">be..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (224 samples, 2.75%)</title><rect x="85.1638%" y="1317" width="2.7488%" height="15" fill="rgb(235,36,27)" fg:x="6940" fg:w="224"/><text x="85.4138%" y="1327.50">be..</text></g><g><title>bevy_ecs::world::World::resource_scope (224 samples, 2.75%)</title><rect x="85.1638%" y="1301" width="2.7488%" height="15" fill="rgb(231,132,23)" fg:x="6940" fg:w="224"/><text x="85.4138%" y="1311.50">be..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (224 samples, 2.75%)</title><rect x="85.1638%" y="1285" width="2.7488%" height="15" fill="rgb(205,208,20)" fg:x="6940" fg:w="224"/><text x="85.4138%" y="1295.50">be..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (221 samples, 2.71%)</title><rect x="85.2006%" y="1269" width="2.7120%" height="15" fill="rgb(215,26,40)" fg:x="6943" fg:w="221"/><text x="85.4506%" y="1279.50">be..</text></g><g><title>wgpu::Queue::submit (127 samples, 1.56%)</title><rect x="86.3542%" y="1253" width="1.5585%" height="15" fill="rgb(238,183,34)" fg:x="7037" fg:w="127"/><text x="86.6042%" y="1263.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (127 samples, 1.56%)</title><rect x="86.3542%" y="1237" width="1.5585%" height="15" fill="rgb(207,96,10)" fg:x="7037" fg:w="127"/><text x="86.6042%" y="1247.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (127 samples, 1.56%)</title><rect x="86.3542%" y="1221" width="1.5585%" height="15" fill="rgb(218,88,6)" fg:x="7037" fg:w="127"/><text x="86.6042%" y="1231.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="87.9004%" y="1205" width="0.0123%" height="15" fill="rgb(217,22,49)" fg:x="7163" fg:w="1"/><text x="88.1504%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="87.9004%" y="1189" width="0.0123%" height="15" fill="rgb(240,195,14)" fg:x="7163" fg:w="1"/><text x="88.1504%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="87.9004%" y="1173" width="0.0123%" height="15" fill="rgb(229,48,27)" fg:x="7163" fg:w="1"/><text x="88.1504%" y="1183.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (449 samples, 5.51%)</title><rect x="82.4150%" y="1509" width="5.5099%" height="15" fill="rgb(220,194,45)" fg:x="6716" fg:w="449"/><text x="82.6650%" y="1519.50">winit::..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (449 samples, 5.51%)</title><rect x="82.4150%" y="1493" width="5.5099%" height="15" fill="rgb(252,60,20)" fg:x="6716" fg:w="449"/><text x="82.6650%" y="1503.50">winit::..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (449 samples, 5.51%)</title><rect x="82.4150%" y="1477" width="5.5099%" height="15" fill="rgb(244,169,33)" fg:x="6716" fg:w="449"/><text x="82.6650%" y="1487.50">winit::..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (449 samples, 5.51%)</title><rect x="82.4150%" y="1461" width="5.5099%" height="15" fill="rgb(234,141,34)" fg:x="6716" fg:w="449"/><text x="82.6650%" y="1471.50">winit::..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (449 samples, 5.51%)</title><rect x="82.4150%" y="1445" width="5.5099%" height="15" fill="rgb(241,141,9)" fg:x="6716" fg:w="449"/><text x="82.6650%" y="1455.50">bevy_wi..</text></g><g><title>bevy_winit::handle_create_window_events (1 samples, 0.01%)</title><rect x="87.9126%" y="1429" width="0.0123%" height="15" fill="rgb(246,27,36)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1439.50"></text></g><g><title>bevy_winit::winit_windows::WinitWindows::create_window (1 samples, 0.01%)</title><rect x="87.9126%" y="1413" width="0.0123%" height="15" fill="rgb(216,188,42)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1423.50"></text></g><g><title>winit::window::WindowBuilder::build (1 samples, 0.01%)</title><rect x="87.9126%" y="1397" width="0.0123%" height="15" fill="rgb(234,205,22)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1407.50"></text></g><g><title>winit::platform_impl::platform::Window::new (1 samples, 0.01%)</title><rect x="87.9126%" y="1381" width="0.0123%" height="15" fill="rgb(210,202,32)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1391.50"></text></g><g><title>winit::platform_impl::platform::x11::Window::new (1 samples, 0.01%)</title><rect x="87.9126%" y="1365" width="0.0123%" height="15" fill="rgb(217,0,48)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1375.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="87.9126%" y="1349" width="0.0123%" height="15" fill="rgb(207,115,37)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1359.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="87.9126%" y="1333" width="0.0123%" height="15" fill="rgb(237,221,44)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1343.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="87.9126%" y="1317" width="0.0123%" height="15" fill="rgb(249,78,2)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="87.9126%" y="1301" width="0.0123%" height="15" fill="rgb(211,169,23)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="87.9126%" y="1285" width="0.0123%" height="15" fill="rgb(207,116,29)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="87.9126%" y="1269" width="0.0123%" height="15" fill="rgb(240,84,33)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="87.9126%" y="1253" width="0.0123%" height="15" fill="rgb(229,224,31)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1263.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="87.9126%" y="1237" width="0.0123%" height="15" fill="rgb(227,90,31)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="87.9126%" y="1221" width="0.0123%" height="15" fill="rgb(249,22,41)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1231.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="87.9126%" y="1205" width="0.0123%" height="15" fill="rgb(239,65,11)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1215.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="87.9126%" y="1189" width="0.0123%" height="15" fill="rgb(205,5,23)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1199.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="87.9126%" y="1173" width="0.0123%" height="15" fill="rgb(254,78,52)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1183.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="87.9126%" y="1157" width="0.0123%" height="15" fill="rgb(214,156,33)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1167.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="87.9126%" y="1141" width="0.0123%" height="15" fill="rgb(208,20,30)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1151.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="87.9126%" y="1125" width="0.0123%" height="15" fill="rgb(223,133,18)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1135.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="87.9126%" y="1109" width="0.0123%" height="15" fill="rgb(222,91,41)" fg:x="7164" fg:w="1"/><text x="88.1626%" y="1119.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (1 samples, 0.01%)</title><rect x="87.9249%" y="1125" width="0.0123%" height="15" fill="rgb(247,137,48)" fg:x="7165" fg:w="1"/><text x="88.1749%" y="1135.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (1 samples, 0.01%)</title><rect x="87.9249%" y="1109" width="0.0123%" height="15" fill="rgb(239,156,11)" fg:x="7165" fg:w="1"/><text x="88.1749%" y="1119.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="87.9249%" y="1093" width="0.0123%" height="15" fill="rgb(244,56,26)" fg:x="7165" fg:w="1"/><text x="88.1749%" y="1103.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="87.9249%" y="1173" width="0.0245%" height="15" fill="rgb(205,131,49)" fg:x="7165" fg:w="2"/><text x="88.1749%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="87.9249%" y="1157" width="0.0245%" height="15" fill="rgb(224,0,2)" fg:x="7165" fg:w="2"/><text x="88.1749%" y="1167.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="87.9249%" y="1141" width="0.0245%" height="15" fill="rgb(247,59,36)" fg:x="7165" fg:w="2"/><text x="88.1749%" y="1151.50"></text></g><g><title>bevy_egui::systems::begin_frame (1 samples, 0.01%)</title><rect x="87.9372%" y="1125" width="0.0123%" height="15" fill="rgb(215,4,47)" fg:x="7166" fg:w="1"/><text x="88.1872%" y="1135.50"></text></g><g><title>egui::context::CtxRef::begin_frame (1 samples, 0.01%)</title><rect x="87.9372%" y="1109" width="0.0123%" height="15" fill="rgb(242,72,42)" fg:x="7166" fg:w="1"/><text x="88.1872%" y="1119.50"></text></g><g><title>&lt;egui::context::Context as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="87.9372%" y="1093" width="0.0123%" height="15" fill="rgb(232,145,44)" fg:x="7166" fg:w="1"/><text x="88.1872%" y="1103.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="87.9372%" y="1077" width="0.0123%" height="15" fill="rgb(205,108,43)" fg:x="7166" fg:w="1"/><text x="88.1872%" y="1087.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (2 samples, 0.02%)</title><rect x="87.9494%" y="1077" width="0.0245%" height="15" fill="rgb(215,190,17)" fg:x="7167" fg:w="2"/><text x="88.1994%" y="1087.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (2 samples, 0.02%)</title><rect x="87.9494%" y="1061" width="0.0245%" height="15" fill="rgb(223,90,34)" fg:x="7167" fg:w="2"/><text x="88.1994%" y="1071.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (2 samples, 0.02%)</title><rect x="87.9494%" y="1045" width="0.0245%" height="15" fill="rgb(216,25,0)" fg:x="7167" fg:w="2"/><text x="88.1994%" y="1055.50"></text></g><g><title>bevy_glsl_to_spirv::compile (2 samples, 0.02%)</title><rect x="87.9494%" y="1029" width="0.0245%" height="15" fill="rgb(223,51,28)" fg:x="7167" fg:w="2"/><text x="88.1994%" y="1039.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (2 samples, 0.02%)</title><rect x="87.9494%" y="1013" width="0.0245%" height="15" fill="rgb(227,131,7)" fg:x="7167" fg:w="2"/><text x="88.1994%" y="1023.50"></text></g><g><title>ShFinalize (2 samples, 0.02%)</title><rect x="87.9494%" y="997" width="0.0245%" height="15" fill="rgb(216,72,36)" fg:x="7167" fg:w="2"/><text x="88.1994%" y="1007.50"></text></g><g><title>glslang::TSymbolTableLevel::~TSymbolTableLevel (2 samples, 0.02%)</title><rect x="87.9494%" y="981" width="0.0245%" height="15" fill="rgb(243,158,40)" fg:x="7167" fg:w="2"/><text x="88.1994%" y="991.50"></text></g><g><title>glslang::TFunction::~TFunction (2 samples, 0.02%)</title><rect x="87.9494%" y="965" width="0.0245%" height="15" fill="rgb(218,60,54)" fg:x="7167" fg:w="2"/><text x="88.1994%" y="975.50"></text></g><g><title>glslang::TFunction::~TFunction (4 samples, 0.05%)</title><rect x="87.9740%" y="933" width="0.0491%" height="15" fill="rgb(230,15,46)" fg:x="7169" fg:w="4"/><text x="88.2240%" y="943.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (9 samples, 0.11%)</title><rect x="87.9249%" y="1381" width="0.1104%" height="15" fill="rgb(250,22,26)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1391.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (9 samples, 0.11%)</title><rect x="87.9249%" y="1365" width="0.1104%" height="15" fill="rgb(239,194,40)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (9 samples, 0.11%)</title><rect x="87.9249%" y="1349" width="0.1104%" height="15" fill="rgb(219,62,9)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1359.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.11%)</title><rect x="87.9249%" y="1333" width="0.1104%" height="15" fill="rgb(228,45,21)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1343.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (9 samples, 0.11%)</title><rect x="87.9249%" y="1317" width="0.1104%" height="15" fill="rgb(242,56,44)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1327.50"></text></g><g><title>async_executor::Executor::try_tick (9 samples, 0.11%)</title><rect x="87.9249%" y="1301" width="0.1104%" height="15" fill="rgb(239,170,14)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1311.50"></text></g><g><title>async_task::runnable::Runnable::run (9 samples, 0.11%)</title><rect x="87.9249%" y="1285" width="0.1104%" height="15" fill="rgb(236,150,13)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1295.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (9 samples, 0.11%)</title><rect x="87.9249%" y="1269" width="0.1104%" height="15" fill="rgb(228,15,30)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1279.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.11%)</title><rect x="87.9249%" y="1253" width="0.1104%" height="15" fill="rgb(217,43,28)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1263.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (9 samples, 0.11%)</title><rect x="87.9249%" y="1237" width="0.1104%" height="15" fill="rgb(246,223,1)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.11%)</title><rect x="87.9249%" y="1221" width="0.1104%" height="15" fill="rgb(247,103,7)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1231.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (9 samples, 0.11%)</title><rect x="87.9249%" y="1205" width="0.1104%" height="15" fill="rgb(205,105,39)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1215.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (9 samples, 0.11%)</title><rect x="87.9249%" y="1189" width="0.1104%" height="15" fill="rgb(216,134,18)" fg:x="7165" fg:w="9"/><text x="88.1749%" y="1199.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (7 samples, 0.09%)</title><rect x="87.9494%" y="1173" width="0.0859%" height="15" fill="rgb(226,139,50)" fg:x="7167" fg:w="7"/><text x="88.1994%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7 samples, 0.09%)</title><rect x="87.9494%" y="1157" width="0.0859%" height="15" fill="rgb(251,152,38)" fg:x="7167" fg:w="7"/><text x="88.1994%" y="1167.50"></text></g><g><title>core::ops::function::Fn::call (7 samples, 0.09%)</title><rect x="87.9494%" y="1141" width="0.0859%" height="15" fill="rgb(222,63,15)" fg:x="7167" fg:w="7"/><text x="88.1994%" y="1151.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (7 samples, 0.09%)</title><rect x="87.9494%" y="1125" width="0.0859%" height="15" fill="rgb(212,198,28)" fg:x="7167" fg:w="7"/><text x="88.1994%" y="1135.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (7 samples, 0.09%)</title><rect x="87.9494%" y="1109" width="0.0859%" height="15" fill="rgb(216,93,38)" fg:x="7167" fg:w="7"/><text x="88.1994%" y="1119.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (7 samples, 0.09%)</title><rect x="87.9494%" y="1093" width="0.0859%" height="15" fill="rgb(247,202,44)" fg:x="7167" fg:w="7"/><text x="88.1994%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.06%)</title><rect x="87.9740%" y="1077" width="0.0614%" height="15" fill="rgb(237,204,46)" fg:x="7169" fg:w="5"/><text x="88.2240%" y="1087.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (5 samples, 0.06%)</title><rect x="87.9740%" y="1061" width="0.0614%" height="15" fill="rgb(224,98,48)" fg:x="7169" fg:w="5"/><text x="88.2240%" y="1071.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (5 samples, 0.06%)</title><rect x="87.9740%" y="1045" width="0.0614%" height="15" fill="rgb(247,105,21)" fg:x="7169" fg:w="5"/><text x="88.2240%" y="1055.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (5 samples, 0.06%)</title><rect x="87.9740%" y="1029" width="0.0614%" height="15" fill="rgb(212,137,52)" fg:x="7169" fg:w="5"/><text x="88.2240%" y="1039.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (5 samples, 0.06%)</title><rect x="87.9740%" y="1013" width="0.0614%" height="15" fill="rgb(223,76,33)" fg:x="7169" fg:w="5"/><text x="88.2240%" y="1023.50"></text></g><g><title>bevy_glsl_to_spirv::compile (5 samples, 0.06%)</title><rect x="87.9740%" y="997" width="0.0614%" height="15" fill="rgb(209,156,27)" fg:x="7169" fg:w="5"/><text x="88.2240%" y="1007.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (5 samples, 0.06%)</title><rect x="87.9740%" y="981" width="0.0614%" height="15" fill="rgb(249,81,54)" fg:x="7169" fg:w="5"/><text x="88.2240%" y="991.50"></text></g><g><title>ShFinalize (5 samples, 0.06%)</title><rect x="87.9740%" y="965" width="0.0614%" height="15" fill="rgb(241,46,29)" fg:x="7169" fg:w="5"/><text x="88.2240%" y="975.50"></text></g><g><title>glslang::TSymbolTableLevel::~TSymbolTableLevel (5 samples, 0.06%)</title><rect x="87.9740%" y="949" width="0.0614%" height="15" fill="rgb(213,193,39)" fg:x="7169" fg:w="5"/><text x="88.2240%" y="959.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="88.0231%" y="933" width="0.0123%" height="15" fill="rgb(214,85,16)" fg:x="7173" fg:w="1"/><text x="88.2731%" y="943.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="88.0231%" y="917" width="0.0123%" height="15" fill="rgb(216,184,17)" fg:x="7173" fg:w="1"/><text x="88.2731%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.01%)</title><rect x="88.0353%" y="853" width="0.0123%" height="15" fill="rgb(254,219,29)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="863.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.0353%" y="837" width="0.0123%" height="15" fill="rgb(209,148,34)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="847.50"></text></g><g><title>tracing::span::Span::do_exit (1 samples, 0.01%)</title><rect x="88.0353%" y="821" width="0.0123%" height="15" fill="rgb(253,215,11)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="831.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (1 samples, 0.01%)</title><rect x="88.0353%" y="805" width="0.0123%" height="15" fill="rgb(232,126,20)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="88.0353%" y="789" width="0.0123%" height="15" fill="rgb(248,118,51)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="88.0353%" y="773" width="0.0123%" height="15" fill="rgb(226,121,21)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="88.0353%" y="757" width="0.0123%" height="15" fill="rgb(216,128,16)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="88.0353%" y="741" width="0.0123%" height="15" fill="rgb(205,17,9)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="751.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="88.0353%" y="725" width="0.0123%" height="15" fill="rgb(206,197,21)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="88.0353%" y="709" width="0.0123%" height="15" fill="rgb(212,202,9)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="719.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="88.0353%" y="693" width="0.0123%" height="15" fill="rgb(241,131,50)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::{{closure}} (1 samples, 0.01%)</title><rect x="88.0353%" y="677" width="0.0123%" height="15" fill="rgb(228,115,51)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="687.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="88.0353%" y="661" width="0.0123%" height="15" fill="rgb(237,209,8)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="671.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="88.0353%" y="645" width="0.0123%" height="15" fill="rgb(241,121,28)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="88.0353%" y="629" width="0.0123%" height="15" fill="rgb(238,194,51)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="88.0353%" y="613" width="0.0123%" height="15" fill="rgb(208,41,39)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.01%)</title><rect x="88.0353%" y="597" width="0.0123%" height="15" fill="rgb(223,95,44)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.01%)</title><rect x="88.0353%" y="581" width="0.0123%" height="15" fill="rgb(253,98,40)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.0353%" y="565" width="0.0123%" height="15" fill="rgb(210,5,12)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="88.0353%" y="549" width="0.0123%" height="15" fill="rgb(233,201,23)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="559.50"></text></g><g><title>tracing_subscriber::registry::sharded::CLOSE_COUNT::__getit (1 samples, 0.01%)</title><rect x="88.0353%" y="533" width="0.0123%" height="15" fill="rgb(251,68,15)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="543.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="88.0353%" y="517" width="0.0123%" height="15" fill="rgb(243,10,46)" fg:x="7174" fg:w="1"/><text x="88.2853%" y="527.50"></text></g><g><title>tracing::span::Span::enter (1 samples, 0.01%)</title><rect x="88.0476%" y="853" width="0.0123%" height="15" fill="rgb(253,130,44)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="863.50"></text></g><g><title>tracing::span::Span::do_enter (1 samples, 0.01%)</title><rect x="88.0476%" y="837" width="0.0123%" height="15" fill="rgb(244,5,26)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="847.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::enter (1 samples, 0.01%)</title><rect x="88.0476%" y="821" width="0.0123%" height="15" fill="rgb(220,126,20)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="88.0476%" y="805" width="0.0123%" height="15" fill="rgb(212,188,29)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="88.0476%" y="789" width="0.0123%" height="15" fill="rgb(227,194,48)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::enter (1 samples, 0.01%)</title><rect x="88.0476%" y="773" width="0.0123%" height="15" fill="rgb(245,64,28)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::clone_span (1 samples, 0.01%)</title><rect x="88.0476%" y="757" width="0.0123%" height="15" fill="rgb(205,44,7)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="767.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (1 samples, 0.01%)</title><rect x="88.0476%" y="741" width="0.0123%" height="15" fill="rgb(213,193,11)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="751.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="88.0476%" y="725" width="0.0123%" height="15" fill="rgb(238,157,6)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="735.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="88.0476%" y="709" width="0.0123%" height="15" fill="rgb(222,73,7)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="719.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="88.0476%" y="693" width="0.0123%" height="15" fill="rgb(224,78,15)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="703.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="88.0476%" y="677" width="0.0123%" height="15" fill="rgb(218,149,46)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="687.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (1 samples, 0.01%)</title><rect x="88.0476%" y="661" width="0.0123%" height="15" fill="rgb(218,175,44)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="671.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="88.0476%" y="645" width="0.0123%" height="15" fill="rgb(215,183,45)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="655.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="88.0476%" y="629" width="0.0123%" height="15" fill="rgb(226,116,37)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="88.0476%" y="613" width="0.0123%" height="15" fill="rgb(252,224,12)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="88.0476%" y="597" width="0.0123%" height="15" fill="rgb(232,212,21)" fg:x="7175" fg:w="1"/><text x="88.2976%" y="607.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::dealloc (3 samples, 0.04%)</title><rect x="88.0353%" y="869" width="0.0368%" height="15" fill="rgb(226,191,16)" fg:x="7174" fg:w="3"/><text x="88.2853%" y="879.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="88.0599%" y="853" width="0.0123%" height="15" fill="rgb(231,156,11)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="863.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="88.0599%" y="837" width="0.0123%" height="15" fill="rgb(225,134,49)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="88.0599%" y="821" width="0.0123%" height="15" fill="rgb(254,55,32)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="831.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="88.0599%" y="805" width="0.0123%" height="15" fill="rgb(242,195,29)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="815.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (1 samples, 0.01%)</title><rect x="88.0599%" y="789" width="0.0123%" height="15" fill="rgb(210,155,20)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="799.50"></text></g><g><title>tracing::span::Span::new_with (1 samples, 0.01%)</title><rect x="88.0599%" y="773" width="0.0123%" height="15" fill="rgb(243,170,23)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="783.50"></text></g><g><title>tracing::span::Span::make_with (1 samples, 0.01%)</title><rect x="88.0599%" y="757" width="0.0123%" height="15" fill="rgb(242,197,51)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="767.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="88.0599%" y="741" width="0.0123%" height="15" fill="rgb(248,48,13)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="88.0599%" y="725" width="0.0123%" height="15" fill="rgb(221,185,15)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="88.0599%" y="709" width="0.0123%" height="15" fill="rgb(244,49,7)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="88.0599%" y="693" width="0.0123%" height="15" fill="rgb(213,182,52)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="703.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.01%)</title><rect x="88.0599%" y="677" width="0.0123%" height="15" fill="rgb(209,15,45)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="687.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="88.0599%" y="661" width="0.0123%" height="15" fill="rgb(233,23,44)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="671.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="88.0599%" y="645" width="0.0123%" height="15" fill="rgb(220,182,30)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="655.50"></text></g><g><title>tracing_core::span::Attributes::record (1 samples, 0.01%)</title><rect x="88.0599%" y="629" width="0.0123%" height="15" fill="rgb(219,116,33)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="639.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="88.0599%" y="613" width="0.0123%" height="15" fill="rgb(231,15,21)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="623.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="88.0599%" y="597" width="0.0123%" height="15" fill="rgb(238,119,25)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="607.50"></text></g><g><title>&lt;&amp;mut T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="88.0599%" y="581" width="0.0123%" height="15" fill="rgb(232,30,39)" fg:x="7176" fg:w="1"/><text x="88.3099%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="88.0722%" y="549" width="0.0123%" height="15" fill="rgb(241,26,30)" fg:x="7177" fg:w="1"/><text x="88.3222%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="88.0722%" y="533" width="0.0123%" height="15" fill="rgb(234,154,4)" fg:x="7177" fg:w="1"/><text x="88.3222%" y="543.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="88.0722%" y="517" width="0.0123%" height="15" fill="rgb(229,199,39)" fg:x="7177" fg:w="1"/><text x="88.3222%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="88.0722%" y="501" width="0.0123%" height="15" fill="rgb(236,213,10)" fg:x="7177" fg:w="1"/><text x="88.3222%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="88.0722%" y="485" width="0.0123%" height="15" fill="rgb(247,28,19)" fg:x="7177" fg:w="1"/><text x="88.3222%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="88.0722%" y="469" width="0.0123%" height="15" fill="rgb(239,199,24)" fg:x="7177" fg:w="1"/><text x="88.3222%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="88.0722%" y="453" width="0.0123%" height="15" fill="rgb(246,122,13)" fg:x="7177" fg:w="1"/><text x="88.3222%" y="463.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="88.0722%" y="437" width="0.0123%" height="15" fill="rgb(210,203,29)" fg:x="7177" fg:w="1"/><text x="88.3222%" y="447.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="88.0844%" y="485" width="0.0123%" height="15" fill="rgb(218,4,50)" fg:x="7178" fg:w="1"/><text x="88.3344%" y="495.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (8 samples, 0.10%)</title><rect x="88.0353%" y="901" width="0.0982%" height="15" fill="rgb(236,142,48)" fg:x="7174" fg:w="8"/><text x="88.2853%" y="911.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (8 samples, 0.10%)</title><rect x="88.0353%" y="885" width="0.0982%" height="15" fill="rgb(245,173,2)" fg:x="7174" fg:w="8"/><text x="88.2853%" y="895.50"></text></g><g><title>tracing::span::Span::new (5 samples, 0.06%)</title><rect x="88.0722%" y="869" width="0.0614%" height="15" fill="rgb(244,196,18)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="879.50"></text></g><g><title>tracing_core::dispatcher::get_default (5 samples, 0.06%)</title><rect x="88.0722%" y="853" width="0.0614%" height="15" fill="rgb(221,27,33)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.06%)</title><rect x="88.0722%" y="837" width="0.0614%" height="15" fill="rgb(210,206,16)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="847.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (5 samples, 0.06%)</title><rect x="88.0722%" y="821" width="0.0614%" height="15" fill="rgb(238,161,34)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="831.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (5 samples, 0.06%)</title><rect x="88.0722%" y="805" width="0.0614%" height="15" fill="rgb(243,118,39)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="815.50"></text></g><g><title>tracing::span::Span::new_with (5 samples, 0.06%)</title><rect x="88.0722%" y="789" width="0.0614%" height="15" fill="rgb(234,126,9)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="799.50"></text></g><g><title>tracing::span::Span::make_with (5 samples, 0.06%)</title><rect x="88.0722%" y="773" width="0.0614%" height="15" fill="rgb(234,167,42)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="783.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (5 samples, 0.06%)</title><rect x="88.0722%" y="757" width="0.0614%" height="15" fill="rgb(238,54,48)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (5 samples, 0.06%)</title><rect x="88.0722%" y="741" width="0.0614%" height="15" fill="rgb(226,105,2)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (5 samples, 0.06%)</title><rect x="88.0722%" y="725" width="0.0614%" height="15" fill="rgb(223,95,23)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (5 samples, 0.06%)</title><rect x="88.0722%" y="709" width="0.0614%" height="15" fill="rgb(249,212,19)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="719.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (5 samples, 0.06%)</title><rect x="88.0722%" y="693" width="0.0614%" height="15" fill="rgb(234,158,54)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="703.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (5 samples, 0.06%)</title><rect x="88.0722%" y="677" width="0.0614%" height="15" fill="rgb(247,114,32)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="687.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (5 samples, 0.06%)</title><rect x="88.0722%" y="661" width="0.0614%" height="15" fill="rgb(250,68,44)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="671.50"></text></g><g><title>tracing_core::span::Attributes::record (5 samples, 0.06%)</title><rect x="88.0722%" y="645" width="0.0614%" height="15" fill="rgb(242,3,15)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="655.50"></text></g><g><title>tracing_core::field::ValueSet::record (5 samples, 0.06%)</title><rect x="88.0722%" y="629" width="0.0614%" height="15" fill="rgb(223,110,32)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="639.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (5 samples, 0.06%)</title><rect x="88.0722%" y="613" width="0.0614%" height="15" fill="rgb(216,26,54)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (5 samples, 0.06%)</title><rect x="88.0722%" y="597" width="0.0614%" height="15" fill="rgb(209,145,42)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (5 samples, 0.06%)</title><rect x="88.0722%" y="581" width="0.0614%" height="15" fill="rgb(240,111,53)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="591.50"></text></g><g><title>core::fmt::write (5 samples, 0.06%)</title><rect x="88.0722%" y="565" width="0.0614%" height="15" fill="rgb(209,101,4)" fg:x="7177" fg:w="5"/><text x="88.3222%" y="575.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (4 samples, 0.05%)</title><rect x="88.0844%" y="549" width="0.0491%" height="15" fill="rgb(231,74,29)" fg:x="7178" fg:w="4"/><text x="88.3344%" y="559.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (4 samples, 0.05%)</title><rect x="88.0844%" y="533" width="0.0491%" height="15" fill="rgb(223,12,12)" fg:x="7178" fg:w="4"/><text x="88.3344%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.05%)</title><rect x="88.0844%" y="517" width="0.0491%" height="15" fill="rgb(207,162,2)" fg:x="7178" fg:w="4"/><text x="88.3344%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (4 samples, 0.05%)</title><rect x="88.0844%" y="501" width="0.0491%" height="15" fill="rgb(230,152,0)" fg:x="7178" fg:w="4"/><text x="88.3344%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (3 samples, 0.04%)</title><rect x="88.0967%" y="485" width="0.0368%" height="15" fill="rgb(254,156,19)" fg:x="7179" fg:w="3"/><text x="88.3467%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="88.0967%" y="469" width="0.0368%" height="15" fill="rgb(250,28,0)" fg:x="7179" fg:w="3"/><text x="88.3467%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="88.0967%" y="453" width="0.0368%" height="15" fill="rgb(253,27,5)" fg:x="7179" fg:w="3"/><text x="88.3467%" y="463.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.04%)</title><rect x="88.0967%" y="437" width="0.0368%" height="15" fill="rgb(244,154,7)" fg:x="7179" fg:w="3"/><text x="88.3467%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.04%)</title><rect x="88.0967%" y="421" width="0.0368%" height="15" fill="rgb(242,108,21)" fg:x="7179" fg:w="3"/><text x="88.3467%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="88.0967%" y="405" width="0.0368%" height="15" fill="rgb(254,200,38)" fg:x="7179" fg:w="3"/><text x="88.3467%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.04%)</title><rect x="88.0967%" y="389" width="0.0368%" height="15" fill="rgb(250,145,41)" fg:x="7179" fg:w="3"/><text x="88.3467%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="88.0967%" y="373" width="0.0368%" height="15" fill="rgb(235,136,31)" fg:x="7179" fg:w="3"/><text x="88.3467%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="88.0967%" y="357" width="0.0368%" height="15" fill="rgb(215,13,18)" fg:x="7179" fg:w="3"/><text x="88.3467%" y="367.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::DescriptorPool as gfx_hal::pso::descriptor::DescriptorPool&lt;gfx_backend_vulkan::Backend&gt;&gt;::free::{{closure}} (3 samples, 0.04%)</title><rect x="88.1335%" y="725" width="0.0368%" height="15" fill="rgb(238,199,12)" fg:x="7182" fg:w="3"/><text x="88.3835%" y="735.50"></text></g><g><title>ash::device::DeviceV1_0::free_descriptor_sets (1 samples, 0.01%)</title><rect x="88.1581%" y="709" width="0.0123%" height="15" fill="rgb(242,179,49)" fg:x="7184" fg:w="1"/><text x="88.4081%" y="719.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::free_descriptor_sets (1 samples, 0.01%)</title><rect x="88.1581%" y="693" width="0.0123%" height="15" fill="rgb(214,10,44)" fg:x="7184" fg:w="1"/><text x="88.4081%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="88.1581%" y="677" width="0.0123%" height="15" fill="rgb(229,181,11)" fg:x="7184" fg:w="1"/><text x="88.4081%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="88.1581%" y="661" width="0.0123%" height="15" fill="rgb(244,155,10)" fg:x="7184" fg:w="1"/><text x="88.4081%" y="671.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (12 samples, 0.15%)</title><rect x="88.0353%" y="933" width="0.1473%" height="15" fill="rgb(254,13,48)" fg:x="7174" fg:w="12"/><text x="88.2853%" y="943.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (12 samples, 0.15%)</title><rect x="88.0353%" y="917" width="0.1473%" height="15" fill="rgb(210,164,6)" fg:x="7174" fg:w="12"/><text x="88.2853%" y="927.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::free (4 samples, 0.05%)</title><rect x="88.1335%" y="901" width="0.0491%" height="15" fill="rgb(216,187,40)" fg:x="7182" fg:w="4"/><text x="88.3835%" y="911.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::free (4 samples, 0.05%)</title><rect x="88.1335%" y="885" width="0.0491%" height="15" fill="rgb(208,143,21)" fg:x="7182" fg:w="4"/><text x="88.3835%" y="895.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::free (4 samples, 0.05%)</title><rect x="88.1335%" y="869" width="0.0491%" height="15" fill="rgb(211,73,41)" fg:x="7182" fg:w="4"/><text x="88.3835%" y="879.50"></text></g><g><title>&lt;wgpu_core::device::descriptor::DescriptorDevice&lt;B&gt; as gpu_descriptor_types::device::DescriptorDevice&lt;&lt;B as gfx_hal::Backend&gt;::DescriptorSetLayout,&lt;B as gfx_hal::Backend&gt;::DescriptorPool,&lt;B as gfx_hal::Backend&gt;::DescriptorSet&gt;&gt;::dealloc_descriptor_sets (4 samples, 0.05%)</title><rect x="88.1335%" y="853" width="0.0491%" height="15" fill="rgb(244,69,21)" fg:x="7182" fg:w="4"/><text x="88.3835%" y="863.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::DescriptorPool as gfx_hal::pso::descriptor::DescriptorPool&lt;gfx_backend_vulkan::Backend&gt;&gt;::free (4 samples, 0.05%)</title><rect x="88.1335%" y="837" width="0.0491%" height="15" fill="rgb(230,152,32)" fg:x="7182" fg:w="4"/><text x="88.3835%" y="847.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (4 samples, 0.05%)</title><rect x="88.1335%" y="821" width="0.0491%" height="15" fill="rgb(208,110,18)" fg:x="7182" fg:w="4"/><text x="88.3835%" y="831.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (4 samples, 0.05%)</title><rect x="88.1335%" y="805" width="0.0491%" height="15" fill="rgb(214,201,49)" fg:x="7182" fg:w="4"/><text x="88.3835%" y="815.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (4 samples, 0.05%)</title><rect x="88.1335%" y="789" width="0.0491%" height="15" fill="rgb(253,153,27)" fg:x="7182" fg:w="4"/><text x="88.3835%" y="799.50"></text></g><g><title>inplace_it::fixed_array::indirect (4 samples, 0.05%)</title><rect x="88.1335%" y="773" width="0.0491%" height="15" fill="rgb(238,61,11)" fg:x="7182" fg:w="4"/><text x="88.3835%" y="783.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (4 samples, 0.05%)</title><rect x="88.1335%" y="757" width="0.0491%" height="15" fill="rgb(227,84,2)" fg:x="7182" fg:w="4"/><text x="88.3835%" y="767.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (4 samples, 0.05%)</title><rect x="88.1335%" y="741" width="0.0491%" height="15" fill="rgb(233,52,8)" fg:x="7182" fg:w="4"/><text x="88.3835%" y="751.50"></text></g><g><title>inplace_it::guards::uninitialized_slice_memory_guard::UninitializedSliceMemoryGuard&lt;T&gt;::init_with_dyn_iter (1 samples, 0.01%)</title><rect x="88.1703%" y="725" width="0.0123%" height="15" fill="rgb(209,136,13)" fg:x="7185" fg:w="1"/><text x="88.4203%" y="735.50"></text></g><g><title>inplace_it::guards::slice_memory_guard::SliceMemoryGuard&lt;T&gt;::new_from_iter (1 samples, 0.01%)</title><rect x="88.1703%" y="709" width="0.0123%" height="15" fill="rgb(229,86,25)" fg:x="7185" fg:w="1"/><text x="88.4203%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.1703%" y="693" width="0.0123%" height="15" fill="rgb(235,47,16)" fg:x="7185" fg:w="1"/><text x="88.4203%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::inspect::Inspect&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.1703%" y="677" width="0.0123%" height="15" fill="rgb(231,186,4)" fg:x="7185" fg:w="1"/><text x="88.4203%" y="687.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.1703%" y="661" width="0.0123%" height="15" fill="rgb(209,213,23)" fg:x="7185" fg:w="1"/><text x="88.4203%" y="671.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.1703%" y="645" width="0.0123%" height="15" fill="rgb(212,142,47)" fg:x="7185" fg:w="1"/><text x="88.4203%" y="655.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.1703%" y="629" width="0.0123%" height="15" fill="rgb(251,86,24)" fg:x="7185" fg:w="1"/><text x="88.4203%" y="639.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (2 samples, 0.02%)</title><rect x="88.1826%" y="917" width="0.0245%" height="15" fill="rgb(206,217,17)" fg:x="7186" fg:w="2"/><text x="88.4326%" y="927.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected::{{closure}} (2 samples, 0.02%)</title><rect x="88.1826%" y="901" width="0.0245%" height="15" fill="rgb(248,92,38)" fg:x="7186" fg:w="2"/><text x="88.4326%" y="911.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (15 samples, 0.18%)</title><rect x="88.0353%" y="1077" width="0.1841%" height="15" fill="rgb(214,25,29)" fg:x="7174" fg:w="15"/><text x="88.2853%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (15 samples, 0.18%)</title><rect x="88.0353%" y="1061" width="0.1841%" height="15" fill="rgb(245,117,13)" fg:x="7174" fg:w="15"/><text x="88.2853%" y="1071.50"></text></g><g><title>core::ops::function::Fn::call (15 samples, 0.18%)</title><rect x="88.0353%" y="1045" width="0.1841%" height="15" fill="rgb(205,169,9)" fg:x="7174" fg:w="15"/><text x="88.2853%" y="1055.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (15 samples, 0.18%)</title><rect x="88.0353%" y="1029" width="0.1841%" height="15" fill="rgb(223,134,38)" fg:x="7174" fg:w="15"/><text x="88.2853%" y="1039.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (15 samples, 0.18%)</title><rect x="88.0353%" y="1013" width="0.1841%" height="15" fill="rgb(249,129,49)" fg:x="7174" fg:w="15"/><text x="88.2853%" y="1023.50"></text></g><g><title>wgpu::Device::poll (15 samples, 0.18%)</title><rect x="88.0353%" y="997" width="0.1841%" height="15" fill="rgb(229,157,45)" fg:x="7174" fg:w="15"/><text x="88.2853%" y="1007.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (15 samples, 0.18%)</title><rect x="88.0353%" y="981" width="0.1841%" height="15" fill="rgb(232,159,11)" fg:x="7174" fg:w="15"/><text x="88.2853%" y="991.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (15 samples, 0.18%)</title><rect x="88.0353%" y="965" width="0.1841%" height="15" fill="rgb(230,134,26)" fg:x="7174" fg:w="15"/><text x="88.2853%" y="975.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (15 samples, 0.18%)</title><rect x="88.0353%" y="949" width="0.1841%" height="15" fill="rgb(234,149,40)" fg:x="7174" fg:w="15"/><text x="88.2853%" y="959.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (3 samples, 0.04%)</title><rect x="88.1826%" y="933" width="0.0368%" height="15" fill="rgb(221,122,15)" fg:x="7186" fg:w="3"/><text x="88.4326%" y="943.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::add_trackers (1 samples, 0.01%)</title><rect x="88.2071%" y="917" width="0.0123%" height="15" fill="rgb(228,127,0)" fg:x="7188" fg:w="1"/><text x="88.4571%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="88.2071%" y="901" width="0.0123%" height="15" fill="rgb(248,37,7)" fg:x="7188" fg:w="1"/><text x="88.4571%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="88.2071%" y="885" width="0.0123%" height="15" fill="rgb(215,140,49)" fg:x="7188" fg:w="1"/><text x="88.4571%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="88.2071%" y="869" width="0.0123%" height="15" fill="rgb(236,65,39)" fg:x="7188" fg:w="1"/><text x="88.4571%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.2071%" y="853" width="0.0123%" height="15" fill="rgb(253,102,38)" fg:x="7188" fg:w="1"/><text x="88.4571%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="88.2071%" y="837" width="0.0123%" height="15" fill="rgb(244,100,34)" fg:x="7188" fg:w="1"/><text x="88.4571%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="88.2071%" y="821" width="0.0123%" height="15" fill="rgb(210,179,47)" fg:x="7188" fg:w="1"/><text x="88.4571%" y="831.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="88.2194%" y="1013" width="0.0123%" height="15" fill="rgb(231,41,37)" fg:x="7189" fg:w="1"/><text x="88.4694%" y="1023.50"></text></g><g><title>wgpu::Device::poll (1 samples, 0.01%)</title><rect x="88.2194%" y="997" width="0.0123%" height="15" fill="rgb(226,209,17)" fg:x="7189" fg:w="1"/><text x="88.4694%" y="1007.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (1 samples, 0.01%)</title><rect x="88.2194%" y="981" width="0.0123%" height="15" fill="rgb(231,154,20)" fg:x="7189" fg:w="1"/><text x="88.4694%" y="991.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (1 samples, 0.01%)</title><rect x="88.2194%" y="965" width="0.0123%" height="15" fill="rgb(216,134,24)" fg:x="7189" fg:w="1"/><text x="88.4694%" y="975.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="88.2194%" y="949" width="0.0123%" height="15" fill="rgb(224,71,42)" fg:x="7189" fg:w="1"/><text x="88.4694%" y="959.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::handle_mapping (1 samples, 0.01%)</title><rect x="88.2194%" y="933" width="0.0123%" height="15" fill="rgb(250,65,23)" fg:x="7189" fg:w="1"/><text x="88.4694%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="88.2194%" y="917" width="0.0123%" height="15" fill="rgb(209,160,35)" fg:x="7189" fg:w="1"/><text x="88.4694%" y="927.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.2194%" y="901" width="0.0123%" height="15" fill="rgb(215,8,11)" fg:x="7189" fg:w="1"/><text x="88.4694%" y="911.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="88.2194%" y="885" width="0.0123%" height="15" fill="rgb(227,27,12)" fg:x="7189" fg:w="1"/><text x="88.4694%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="88.2194%" y="869" width="0.0123%" height="15" fill="rgb(226,111,41)" fg:x="7189" fg:w="1"/><text x="88.4694%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="88.2194%" y="853" width="0.0123%" height="15" fill="rgb(212,195,15)" fg:x="7189" fg:w="1"/><text x="88.4694%" y="863.50"></text></g><g><title>&lt;f32 as bevy_render::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (5 samples, 0.06%)</title><rect x="88.2562%" y="933" width="0.0614%" height="15" fill="rgb(216,191,17)" fg:x="7192" fg:w="5"/><text x="88.5062%" y="943.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (5 samples, 0.06%)</title><rect x="88.2562%" y="917" width="0.0614%" height="15" fill="rgb(215,57,44)" fg:x="7192" fg:w="5"/><text x="88.5062%" y="927.50"></text></g><g><title>[libm-2.33.so] (5 samples, 0.06%)</title><rect x="88.2562%" y="901" width="0.0614%" height="15" fill="rgb(209,38,4)" fg:x="7192" fg:w="5"/><text x="88.5062%" y="911.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (8 samples, 0.10%)</title><rect x="88.2317%" y="965" width="0.0982%" height="15" fill="rgb(238,49,31)" fg:x="7190" fg:w="8"/><text x="88.4817%" y="975.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (8 samples, 0.10%)</title><rect x="88.2317%" y="949" width="0.0982%" height="15" fill="rgb(219,48,39)" fg:x="7190" fg:w="8"/><text x="88.4817%" y="959.50"></text></g><g><title>[libm-2.33.so] (1 samples, 0.01%)</title><rect x="88.3176%" y="933" width="0.0123%" height="15" fill="rgb(252,223,43)" fg:x="7197" fg:w="1"/><text x="88.5676%" y="943.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (1 samples, 0.01%)</title><rect x="88.3299%" y="933" width="0.0123%" height="15" fill="rgb(247,205,46)" fg:x="7198" fg:w="1"/><text x="88.5799%" y="943.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding as core::cmp::PartialEq&gt;::ne (1 samples, 0.01%)</title><rect x="88.3299%" y="917" width="0.0123%" height="15" fill="rgb(231,16,40)" fg:x="7198" fg:w="1"/><text x="88.5799%" y="927.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::cmp::PartialEq&gt;::ne (1 samples, 0.01%)</title><rect x="88.3299%" y="901" width="0.0123%" height="15" fill="rgb(231,115,5)" fg:x="7198" fg:w="1"/><text x="88.5799%" y="911.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::ne (1 samples, 0.01%)</title><rect x="88.3299%" y="885" width="0.0123%" height="15" fill="rgb(206,127,43)" fg:x="7198" fg:w="1"/><text x="88.5799%" y="895.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::ne (1 samples, 0.01%)</title><rect x="88.3299%" y="869" width="0.0123%" height="15" fill="rgb(218,101,9)" fg:x="7198" fg:w="1"/><text x="88.5799%" y="879.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_ne (1 samples, 0.01%)</title><rect x="88.3299%" y="853" width="0.0123%" height="15" fill="rgb(235,138,50)" fg:x="7198" fg:w="1"/><text x="88.5799%" y="863.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.01%)</title><rect x="88.3299%" y="837" width="0.0123%" height="15" fill="rgb(214,197,52)" fg:x="7198" fg:w="1"/><text x="88.5799%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="88.3421%" y="885" width="0.0123%" height="15" fill="rgb(230,80,19)" fg:x="7199" fg:w="1"/><text x="88.5921%" y="895.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="88.3421%" y="869" width="0.0123%" height="15" fill="rgb(224,77,16)" fg:x="7199" fg:w="1"/><text x="88.5921%" y="879.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="88.3421%" y="853" width="0.0123%" height="15" fill="rgb(246,4,13)" fg:x="7199" fg:w="1"/><text x="88.5921%" y="863.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="88.3544%" y="853" width="0.0123%" height="15" fill="rgb(220,177,26)" fg:x="7200" fg:w="1"/><text x="88.6044%" y="863.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="88.3544%" y="837" width="0.0123%" height="15" fill="rgb(215,114,45)" fg:x="7200" fg:w="1"/><text x="88.6044%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="88.3544%" y="821" width="0.0123%" height="15" fill="rgb(215,71,54)" fg:x="7200" fg:w="1"/><text x="88.6044%" y="831.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="88.3544%" y="805" width="0.0123%" height="15" fill="rgb(211,155,22)" fg:x="7200" fg:w="1"/><text x="88.6044%" y="815.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="88.3544%" y="789" width="0.0123%" height="15" fill="rgb(245,206,18)" fg:x="7200" fg:w="1"/><text x="88.6044%" y="799.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::try_set_dirty (10 samples, 0.12%)</title><rect x="88.3299%" y="949" width="0.1227%" height="15" fill="rgb(248,216,48)" fg:x="7198" fg:w="10"/><text x="88.5799%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.11%)</title><rect x="88.3421%" y="933" width="0.1104%" height="15" fill="rgb(244,84,45)" fg:x="7199" fg:w="9"/><text x="88.5921%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.11%)</title><rect x="88.3421%" y="917" width="0.1104%" height="15" fill="rgb(245,13,45)" fg:x="7199" fg:w="9"/><text x="88.5921%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.11%)</title><rect x="88.3421%" y="901" width="0.1104%" height="15" fill="rgb(247,163,2)" fg:x="7199" fg:w="9"/><text x="88.5921%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.10%)</title><rect x="88.3544%" y="885" width="0.0982%" height="15" fill="rgb(211,175,10)" fg:x="7200" fg:w="8"/><text x="88.6044%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.10%)</title><rect x="88.3544%" y="869" width="0.0982%" height="15" fill="rgb(215,186,31)" fg:x="7200" fg:w="8"/><text x="88.6044%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (7 samples, 0.09%)</title><rect x="88.3667%" y="853" width="0.0859%" height="15" fill="rgb(207,42,11)" fg:x="7201" fg:w="7"/><text x="88.6167%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (7 samples, 0.09%)</title><rect x="88.3667%" y="837" width="0.0859%" height="15" fill="rgb(224,197,20)" fg:x="7201" fg:w="7"/><text x="88.6167%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (7 samples, 0.09%)</title><rect x="88.3667%" y="821" width="0.0859%" height="15" fill="rgb(244,119,36)" fg:x="7201" fg:w="7"/><text x="88.6167%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.07%)</title><rect x="88.3789%" y="805" width="0.0736%" height="15" fill="rgb(250,60,27)" fg:x="7202" fg:w="6"/><text x="88.6289%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.07%)</title><rect x="88.3789%" y="789" width="0.0736%" height="15" fill="rgb(252,202,1)" fg:x="7202" fg:w="6"/><text x="88.6289%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.07%)</title><rect x="88.3789%" y="773" width="0.0736%" height="15" fill="rgb(206,53,25)" fg:x="7202" fg:w="6"/><text x="88.6289%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (20 samples, 0.25%)</title><rect x="88.2194%" y="1077" width="0.2454%" height="15" fill="rgb(210,88,4)" fg:x="7189" fg:w="20"/><text x="88.4694%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (20 samples, 0.25%)</title><rect x="88.2194%" y="1061" width="0.2454%" height="15" fill="rgb(211,144,28)" fg:x="7189" fg:w="20"/><text x="88.4694%" y="1071.50"></text></g><g><title>core::ops::function::Fn::call (20 samples, 0.25%)</title><rect x="88.2194%" y="1045" width="0.2454%" height="15" fill="rgb(247,81,32)" fg:x="7189" fg:w="20"/><text x="88.4694%" y="1055.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (20 samples, 0.25%)</title><rect x="88.2194%" y="1029" width="0.2454%" height="15" fill="rgb(225,192,11)" fg:x="7189" fg:w="20"/><text x="88.4694%" y="1039.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (19 samples, 0.23%)</title><rect x="88.2317%" y="1013" width="0.2332%" height="15" fill="rgb(232,212,27)" fg:x="7190" fg:w="19"/><text x="88.4817%" y="1023.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (19 samples, 0.23%)</title><rect x="88.2317%" y="997" width="0.2332%" height="15" fill="rgb(239,3,29)" fg:x="7190" fg:w="19"/><text x="88.4817%" y="1007.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (19 samples, 0.23%)</title><rect x="88.2317%" y="981" width="0.2332%" height="15" fill="rgb(252,225,29)" fg:x="7190" fg:w="19"/><text x="88.4817%" y="991.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (11 samples, 0.13%)</title><rect x="88.3299%" y="965" width="0.1350%" height="15" fill="rgb(205,151,9)" fg:x="7198" fg:w="11"/><text x="88.5799%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="88.4526%" y="949" width="0.0123%" height="15" fill="rgb(216,171,47)" fg:x="7208" fg:w="1"/><text x="88.7026%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="88.4526%" y="933" width="0.0123%" height="15" fill="rgb(206,181,1)" fg:x="7208" fg:w="1"/><text x="88.7026%" y="943.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="88.4526%" y="917" width="0.0123%" height="15" fill="rgb(232,218,10)" fg:x="7208" fg:w="1"/><text x="88.7026%" y="927.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="88.4648%" y="933" width="0.0123%" height="15" fill="rgb(244,222,51)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="943.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (1 samples, 0.01%)</title><rect x="88.4648%" y="917" width="0.0123%" height="15" fill="rgb(252,215,16)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="927.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (1 samples, 0.01%)</title><rect x="88.4648%" y="901" width="0.0123%" height="15" fill="rgb(212,130,13)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="911.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (1 samples, 0.01%)</title><rect x="88.4648%" y="885" width="0.0123%" height="15" fill="rgb(227,103,37)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="895.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="88.4648%" y="869" width="0.0123%" height="15" fill="rgb(249,48,15)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="879.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="88.4648%" y="853" width="0.0123%" height="15" fill="rgb(225,96,9)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="88.4648%" y="837" width="0.0123%" height="15" fill="rgb(213,81,41)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="847.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="88.4648%" y="821" width="0.0123%" height="15" fill="rgb(230,15,12)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="831.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (1 samples, 0.01%)</title><rect x="88.4648%" y="805" width="0.0123%" height="15" fill="rgb(218,106,37)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="815.50"></text></g><g><title>tracing::span::Span::new_with (1 samples, 0.01%)</title><rect x="88.4648%" y="789" width="0.0123%" height="15" fill="rgb(223,172,47)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="799.50"></text></g><g><title>tracing::span::Span::make_with (1 samples, 0.01%)</title><rect x="88.4648%" y="773" width="0.0123%" height="15" fill="rgb(246,180,49)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="783.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="88.4648%" y="757" width="0.0123%" height="15" fill="rgb(231,63,37)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="88.4648%" y="741" width="0.0123%" height="15" fill="rgb(235,70,40)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="88.4648%" y="725" width="0.0123%" height="15" fill="rgb(250,54,26)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="88.4648%" y="709" width="0.0123%" height="15" fill="rgb(214,190,1)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="719.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.01%)</title><rect x="88.4648%" y="693" width="0.0123%" height="15" fill="rgb(212,40,35)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="703.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="88.4648%" y="677" width="0.0123%" height="15" fill="rgb(239,183,47)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="687.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="88.4648%" y="661" width="0.0123%" height="15" fill="rgb(211,171,49)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="671.50"></text></g><g><title>tracing_core::span::Attributes::record (1 samples, 0.01%)</title><rect x="88.4648%" y="645" width="0.0123%" height="15" fill="rgb(249,186,27)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="655.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="88.4648%" y="629" width="0.0123%" height="15" fill="rgb(223,23,48)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="639.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="88.4648%" y="613" width="0.0123%" height="15" fill="rgb(209,203,21)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="88.4648%" y="597" width="0.0123%" height="15" fill="rgb(229,33,27)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="607.50"></text></g><g><title>tracing_core::field::Field::name (1 samples, 0.01%)</title><rect x="88.4648%" y="581" width="0.0123%" height="15" fill="rgb(207,8,53)" fg:x="7209" fg:w="1"/><text x="88.7148%" y="591.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (37 samples, 0.45%)</title><rect x="88.0353%" y="1349" width="0.4540%" height="15" fill="rgb(221,42,0)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1359.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (37 samples, 0.45%)</title><rect x="88.0353%" y="1333" width="0.4540%" height="15" fill="rgb(223,115,3)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1343.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (37 samples, 0.45%)</title><rect x="88.0353%" y="1317" width="0.4540%" height="15" fill="rgb(239,35,26)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1327.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (37 samples, 0.45%)</title><rect x="88.0353%" y="1301" width="0.4540%" height="15" fill="rgb(233,22,9)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1311.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (37 samples, 0.45%)</title><rect x="88.0353%" y="1285" width="0.4540%" height="15" fill="rgb(236,221,48)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1295.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (37 samples, 0.45%)</title><rect x="88.0353%" y="1269" width="0.4540%" height="15" fill="rgb(235,52,30)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (37 samples, 0.45%)</title><rect x="88.0353%" y="1253" width="0.4540%" height="15" fill="rgb(238,133,51)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (37 samples, 0.45%)</title><rect x="88.0353%" y="1237" width="0.4540%" height="15" fill="rgb(213,122,23)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1247.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (37 samples, 0.45%)</title><rect x="88.0353%" y="1221" width="0.4540%" height="15" fill="rgb(225,8,15)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1231.50"></text></g><g><title>async_executor::Executor::try_tick (37 samples, 0.45%)</title><rect x="88.0353%" y="1205" width="0.4540%" height="15" fill="rgb(219,126,35)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1215.50"></text></g><g><title>async_task::runnable::Runnable::run (37 samples, 0.45%)</title><rect x="88.0353%" y="1189" width="0.4540%" height="15" fill="rgb(246,113,21)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (37 samples, 0.45%)</title><rect x="88.0353%" y="1173" width="0.4540%" height="15" fill="rgb(241,193,32)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.45%)</title><rect x="88.0353%" y="1157" width="0.4540%" height="15" fill="rgb(218,99,18)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1167.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (37 samples, 0.45%)</title><rect x="88.0353%" y="1141" width="0.4540%" height="15" fill="rgb(225,114,4)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1151.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.45%)</title><rect x="88.0353%" y="1125" width="0.4540%" height="15" fill="rgb(235,0,15)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1135.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (37 samples, 0.45%)</title><rect x="88.0353%" y="1109" width="0.4540%" height="15" fill="rgb(247,45,27)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (37 samples, 0.45%)</title><rect x="88.0353%" y="1093" width="0.4540%" height="15" fill="rgb(249,88,53)" fg:x="7174" fg:w="37"/><text x="88.2853%" y="1103.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="88.4648%" y="1077" width="0.0245%" height="15" fill="rgb(207,58,45)" fg:x="7209" fg:w="2"/><text x="88.7148%" y="1087.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="88.4648%" y="1061" width="0.0245%" height="15" fill="rgb(216,7,11)" fg:x="7209" fg:w="2"/><text x="88.7148%" y="1071.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="88.4648%" y="1045" width="0.0245%" height="15" fill="rgb(230,40,33)" fg:x="7209" fg:w="2"/><text x="88.7148%" y="1055.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (2 samples, 0.02%)</title><rect x="88.4648%" y="1029" width="0.0245%" height="15" fill="rgb(232,24,46)" fg:x="7209" fg:w="2"/><text x="88.7148%" y="1039.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (2 samples, 0.02%)</title><rect x="88.4648%" y="1013" width="0.0245%" height="15" fill="rgb(219,222,45)" fg:x="7209" fg:w="2"/><text x="88.7148%" y="1023.50"></text></g><g><title>wgpu::Device::poll (2 samples, 0.02%)</title><rect x="88.4648%" y="997" width="0.0245%" height="15" fill="rgb(229,85,44)" fg:x="7209" fg:w="2"/><text x="88.7148%" y="1007.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (2 samples, 0.02%)</title><rect x="88.4648%" y="981" width="0.0245%" height="15" fill="rgb(243,71,36)" fg:x="7209" fg:w="2"/><text x="88.7148%" y="991.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (2 samples, 0.02%)</title><rect x="88.4648%" y="965" width="0.0245%" height="15" fill="rgb(230,203,45)" fg:x="7209" fg:w="2"/><text x="88.7148%" y="975.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (2 samples, 0.02%)</title><rect x="88.4648%" y="949" width="0.0245%" height="15" fill="rgb(224,77,49)" fg:x="7209" fg:w="2"/><text x="88.7148%" y="959.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (1 samples, 0.01%)</title><rect x="88.4771%" y="933" width="0.0123%" height="15" fill="rgb(210,186,47)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="943.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::wait_idle (1 samples, 0.01%)</title><rect x="88.4771%" y="917" width="0.0123%" height="15" fill="rgb(232,146,10)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="927.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences (1 samples, 0.01%)</title><rect x="88.4771%" y="901" width="0.0123%" height="15" fill="rgb(236,185,51)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="911.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="88.4771%" y="885" width="0.0123%" height="15" fill="rgb(223,206,43)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="895.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (1 samples, 0.01%)</title><rect x="88.4771%" y="869" width="0.0123%" height="15" fill="rgb(227,212,9)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="879.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (1 samples, 0.01%)</title><rect x="88.4771%" y="853" width="0.0123%" height="15" fill="rgb(205,82,3)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="863.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="88.4771%" y="837" width="0.0123%" height="15" fill="rgb(214,2,27)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="847.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (1 samples, 0.01%)</title><rect x="88.4771%" y="821" width="0.0123%" height="15" fill="rgb(241,37,22)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="831.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (1 samples, 0.01%)</title><rect x="88.4771%" y="805" width="0.0123%" height="15" fill="rgb(219,182,1)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="815.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences::{{closure}} (1 samples, 0.01%)</title><rect x="88.4771%" y="789" width="0.0123%" height="15" fill="rgb(208,224,23)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="799.50"></text></g><g><title>ash::device::DeviceV1_0::wait_for_fences (1 samples, 0.01%)</title><rect x="88.4771%" y="773" width="0.0123%" height="15" fill="rgb(219,121,32)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="783.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::wait_for_fences (1 samples, 0.01%)</title><rect x="88.4771%" y="757" width="0.0123%" height="15" fill="rgb(253,13,40)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="88.4771%" y="741" width="0.0123%" height="15" fill="rgb(233,6,28)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="88.4771%" y="725" width="0.0123%" height="15" fill="rgb(233,73,8)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="88.4771%" y="709" width="0.0123%" height="15" fill="rgb(223,48,27)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="88.4771%" y="693" width="0.0123%" height="15" fill="rgb(231,98,37)" fg:x="7210" fg:w="1"/><text x="88.7271%" y="703.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (3 samples, 0.04%)</title><rect x="88.5876%" y="949" width="0.0368%" height="15" fill="rgb(249,43,32)" fg:x="7219" fg:w="3"/><text x="88.8376%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="88.6735%" y="917" width="0.0123%" height="15" fill="rgb(246,184,20)" fg:x="7226" fg:w="1"/><text x="88.9235%" y="927.50"></text></g><g><title>__GI___sched_yield (1 samples, 0.01%)</title><rect x="88.6857%" y="917" width="0.0123%" height="15" fill="rgb(251,216,0)" fg:x="7227" fg:w="1"/><text x="88.9357%" y="927.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (10 samples, 0.12%)</title><rect x="88.5876%" y="965" width="0.1227%" height="15" fill="rgb(238,41,42)" fg:x="7219" fg:w="10"/><text x="88.8376%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.09%)</title><rect x="88.6244%" y="949" width="0.0859%" height="15" fill="rgb(227,224,50)" fg:x="7222" fg:w="7"/><text x="88.8744%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="88.6735%" y="933" width="0.0368%" height="15" fill="rgb(237,189,18)" fg:x="7226" fg:w="3"/><text x="88.9235%" y="943.50"></text></g><g><title>sched_yield@plt (1 samples, 0.01%)</title><rect x="88.6980%" y="917" width="0.0123%" height="15" fill="rgb(238,108,6)" fg:x="7228" fg:w="1"/><text x="88.9480%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (10 samples, 0.12%)</title><rect x="89.3238%" y="885" width="0.1227%" height="15" fill="rgb(214,197,53)" fg:x="7279" fg:w="10"/><text x="89.5738%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.10%)</title><rect x="89.3484%" y="869" width="0.0982%" height="15" fill="rgb(206,183,15)" fg:x="7281" fg:w="8"/><text x="89.5984%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="89.3852%" y="853" width="0.0614%" height="15" fill="rgb(208,130,32)" fg:x="7284" fg:w="5"/><text x="89.6352%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="89.3852%" y="837" width="0.0614%" height="15" fill="rgb(226,128,52)" fg:x="7284" fg:w="5"/><text x="89.6352%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="89.4097%" y="821" width="0.0368%" height="15" fill="rgb(231,183,21)" fg:x="7286" fg:w="3"/><text x="89.6597%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="89.4097%" y="805" width="0.0368%" height="15" fill="rgb(216,8,35)" fg:x="7286" fg:w="3"/><text x="89.6597%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.4343%" y="789" width="0.0123%" height="15" fill="rgb(224,221,8)" fg:x="7288" fg:w="1"/><text x="89.6843%" y="799.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="89.4343%" y="773" width="0.0123%" height="15" fill="rgb(210,111,33)" fg:x="7288" fg:w="1"/><text x="89.6843%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (24 samples, 0.29%)</title><rect x="89.1766%" y="901" width="0.2945%" height="15" fill="rgb(232,211,38)" fg:x="7267" fg:w="24"/><text x="89.4266%" y="911.50"></text></g><g><title>__calloc (2 samples, 0.02%)</title><rect x="89.4466%" y="885" width="0.0245%" height="15" fill="rgb(216,190,27)" fg:x="7289" fg:w="2"/><text x="89.6966%" y="895.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="89.4588%" y="869" width="0.0123%" height="15" fill="rgb(237,215,27)" fg:x="7290" fg:w="1"/><text x="89.7088%" y="879.50"></text></g><g><title>__GI___pthread_mutex_lock (3 samples, 0.04%)</title><rect x="89.4711%" y="901" width="0.0368%" height="15" fill="rgb(251,121,39)" fg:x="7291" fg:w="3"/><text x="89.7211%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (41 samples, 0.50%)</title><rect x="89.0171%" y="933" width="0.5031%" height="15" fill="rgb(244,21,14)" fg:x="7254" fg:w="41"/><text x="89.2671%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (34 samples, 0.42%)</title><rect x="89.1030%" y="917" width="0.4172%" height="15" fill="rgb(221,192,22)" fg:x="7261" fg:w="34"/><text x="89.3530%" y="927.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="89.5079%" y="901" width="0.0123%" height="15" fill="rgb(251,190,28)" fg:x="7294" fg:w="1"/><text x="89.7579%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (56 samples, 0.69%)</title><rect x="88.8575%" y="949" width="0.6872%" height="15" fill="rgb(217,4,51)" fg:x="7241" fg:w="56"/><text x="89.1075%" y="959.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="89.5202%" y="933" width="0.0245%" height="15" fill="rgb(215,183,49)" fg:x="7295" fg:w="2"/><text x="89.7702%" y="943.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="89.5447%" y="949" width="0.0123%" height="15" fill="rgb(249,28,49)" fg:x="7297" fg:w="1"/><text x="89.7947%" y="959.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="89.5570%" y="949" width="0.0123%" height="15" fill="rgb(214,42,20)" fg:x="7298" fg:w="1"/><text x="89.8070%" y="959.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (89 samples, 1.09%)</title><rect x="88.4894%" y="1333" width="1.0922%" height="15" fill="rgb(222,77,27)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1343.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (89 samples, 1.09%)</title><rect x="88.4894%" y="1317" width="1.0922%" height="15" fill="rgb(252,198,32)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (89 samples, 1.09%)</title><rect x="88.4894%" y="1301" width="1.0922%" height="15" fill="rgb(207,140,50)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (89 samples, 1.09%)</title><rect x="88.4894%" y="1285" width="1.0922%" height="15" fill="rgb(251,170,16)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (89 samples, 1.09%)</title><rect x="88.4894%" y="1269" width="1.0922%" height="15" fill="rgb(249,111,45)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1279.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (89 samples, 1.09%)</title><rect x="88.4894%" y="1253" width="1.0922%" height="15" fill="rgb(241,99,35)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1263.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (89 samples, 1.09%)</title><rect x="88.4894%" y="1237" width="1.0922%" height="15" fill="rgb(216,188,17)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (89 samples, 1.09%)</title><rect x="88.4894%" y="1221" width="1.0922%" height="15" fill="rgb(254,209,53)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (89 samples, 1.09%)</title><rect x="88.4894%" y="1205" width="1.0922%" height="15" fill="rgb(231,105,41)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (89 samples, 1.09%)</title><rect x="88.4894%" y="1189" width="1.0922%" height="15" fill="rgb(242,93,23)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1199.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (89 samples, 1.09%)</title><rect x="88.4894%" y="1173" width="1.0922%" height="15" fill="rgb(218,159,11)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1183.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (89 samples, 1.09%)</title><rect x="88.4894%" y="1157" width="1.0922%" height="15" fill="rgb(209,90,32)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1167.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (89 samples, 1.09%)</title><rect x="88.4894%" y="1141" width="1.0922%" height="15" fill="rgb(253,118,46)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1151.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (89 samples, 1.09%)</title><rect x="88.4894%" y="1125" width="1.0922%" height="15" fill="rgb(219,121,2)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1135.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (89 samples, 1.09%)</title><rect x="88.4894%" y="1109" width="1.0922%" height="15" fill="rgb(207,57,47)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1119.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (89 samples, 1.09%)</title><rect x="88.4894%" y="1093" width="1.0922%" height="15" fill="rgb(235,113,43)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1103.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (89 samples, 1.09%)</title><rect x="88.4894%" y="1077" width="1.0922%" height="15" fill="rgb(238,30,50)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (89 samples, 1.09%)</title><rect x="88.4894%" y="1061" width="1.0922%" height="15" fill="rgb(237,47,29)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (89 samples, 1.09%)</title><rect x="88.4894%" y="1045" width="1.0922%" height="15" fill="rgb(245,102,24)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (89 samples, 1.09%)</title><rect x="88.4894%" y="1029" width="1.0922%" height="15" fill="rgb(245,152,9)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (89 samples, 1.09%)</title><rect x="88.4894%" y="1013" width="1.0922%" height="15" fill="rgb(223,213,17)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (89 samples, 1.09%)</title><rect x="88.4894%" y="997" width="1.0922%" height="15" fill="rgb(241,164,4)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (89 samples, 1.09%)</title><rect x="88.4894%" y="981" width="1.0922%" height="15" fill="rgb(205,209,31)" fg:x="7211" fg:w="89"/><text x="88.7394%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (71 samples, 0.87%)</title><rect x="88.7103%" y="965" width="0.8713%" height="15" fill="rgb(248,173,2)" fg:x="7229" fg:w="71"/><text x="88.9603%" y="975.50"></text></g><g><title>memset@plt (1 samples, 0.01%)</title><rect x="89.5693%" y="949" width="0.0123%" height="15" fill="rgb(207,67,32)" fg:x="7299" fg:w="1"/><text x="89.8193%" y="959.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::process (1 samples, 0.01%)</title><rect x="89.5815%" y="1157" width="0.0123%" height="15" fill="rgb(239,109,13)" fg:x="7300" fg:w="1"/><text x="89.8315%" y="1167.50"></text></g><g><title>wgpu_core::hub::IdentityManager::alloc (1 samples, 0.01%)</title><rect x="89.5815%" y="1141" width="0.0123%" height="15" fill="rgb(233,123,24)" fg:x="7300" fg:w="1"/><text x="89.8315%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="89.5815%" y="1125" width="0.0123%" height="15" fill="rgb(232,120,19)" fg:x="7300" fg:w="1"/><text x="89.8315%" y="1135.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (2 samples, 0.02%)</title><rect x="89.5815%" y="1253" width="0.0245%" height="15" fill="rgb(225,17,50)" fg:x="7300" fg:w="2"/><text x="89.8315%" y="1263.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (2 samples, 0.02%)</title><rect x="89.5815%" y="1237" width="0.0245%" height="15" fill="rgb(239,216,13)" fg:x="7300" fg:w="2"/><text x="89.8315%" y="1247.50"></text></g><g><title>wgpu::Device::create_command_encoder (2 samples, 0.02%)</title><rect x="89.5815%" y="1221" width="0.0245%" height="15" fill="rgb(232,213,26)" fg:x="7300" fg:w="2"/><text x="89.8315%" y="1231.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (2 samples, 0.02%)</title><rect x="89.5815%" y="1205" width="0.0245%" height="15" fill="rgb(244,59,39)" fg:x="7300" fg:w="2"/><text x="89.8315%" y="1215.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (2 samples, 0.02%)</title><rect x="89.5815%" y="1189" width="0.0245%" height="15" fill="rgb(234,61,35)" fg:x="7300" fg:w="2"/><text x="89.8315%" y="1199.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register_identity (2 samples, 0.02%)</title><rect x="89.5815%" y="1173" width="0.0245%" height="15" fill="rgb(245,94,24)" fg:x="7300" fg:w="2"/><text x="89.8315%" y="1183.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="89.5938%" y="1157" width="0.0123%" height="15" fill="rgb(238,190,44)" fg:x="7301" fg:w="1"/><text x="89.8438%" y="1167.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="89.6061%" y="1141" width="0.0123%" height="15" fill="rgb(205,145,25)" fg:x="7302" fg:w="1"/><text x="89.8561%" y="1151.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="89.6061%" y="1125" width="0.0123%" height="15" fill="rgb(229,158,41)" fg:x="7302" fg:w="1"/><text x="89.8561%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.6061%" y="1109" width="0.0123%" height="15" fill="rgb(224,121,5)" fg:x="7302" fg:w="1"/><text x="89.8561%" y="1119.50"></text></g><g><title>wgpu::Buffer::unmap (3 samples, 0.04%)</title><rect x="89.6061%" y="1205" width="0.0368%" height="15" fill="rgb(238,168,35)" fg:x="7302" fg:w="3"/><text x="89.8561%" y="1215.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (3 samples, 0.04%)</title><rect x="89.6061%" y="1189" width="0.0368%" height="15" fill="rgb(231,11,42)" fg:x="7302" fg:w="3"/><text x="89.8561%" y="1199.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (3 samples, 0.04%)</title><rect x="89.6061%" y="1173" width="0.0368%" height="15" fill="rgb(241,105,19)" fg:x="7302" fg:w="3"/><text x="89.8561%" y="1183.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (3 samples, 0.04%)</title><rect x="89.6061%" y="1157" width="0.0368%" height="15" fill="rgb(253,210,20)" fg:x="7302" fg:w="3"/><text x="89.8561%" y="1167.50"></text></g><g><title>gfx_backend_vulkan::command::destructure_barriers (2 samples, 0.02%)</title><rect x="89.6184%" y="1141" width="0.0245%" height="15" fill="rgb(215,72,52)" fg:x="7303" fg:w="2"/><text x="89.8684%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.01%)</title><rect x="89.6429%" y="1109" width="0.0123%" height="15" fill="rgb(223,225,30)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="1119.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.6429%" y="1093" width="0.0123%" height="15" fill="rgb(220,138,44)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="1103.50"></text></g><g><title>tracing::span::Span::do_exit (1 samples, 0.01%)</title><rect x="89.6429%" y="1077" width="0.0123%" height="15" fill="rgb(206,128,12)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="1087.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (1 samples, 0.01%)</title><rect x="89.6429%" y="1061" width="0.0123%" height="15" fill="rgb(245,194,0)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="89.6429%" y="1045" width="0.0123%" height="15" fill="rgb(235,175,41)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="89.6429%" y="1029" width="0.0123%" height="15" fill="rgb(216,15,48)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="89.6429%" y="1013" width="0.0123%" height="15" fill="rgb(223,179,5)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="89.6429%" y="997" width="0.0123%" height="15" fill="rgb(220,80,15)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="1007.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="89.6429%" y="981" width="0.0123%" height="15" fill="rgb(228,20,30)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="89.6429%" y="965" width="0.0123%" height="15" fill="rgb(229,194,27)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="975.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="89.6429%" y="949" width="0.0123%" height="15" fill="rgb(238,202,32)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::{{closure}} (1 samples, 0.01%)</title><rect x="89.6429%" y="933" width="0.0123%" height="15" fill="rgb(207,82,27)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="943.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="89.6429%" y="917" width="0.0123%" height="15" fill="rgb(246,122,46)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="927.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="89.6429%" y="901" width="0.0123%" height="15" fill="rgb(220,101,26)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="911.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="89.6429%" y="885" width="0.0123%" height="15" fill="rgb(251,63,9)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="89.6429%" y="869" width="0.0123%" height="15" fill="rgb(235,186,5)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="89.6429%" y="853" width="0.0123%" height="15" fill="rgb(241,139,37)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="863.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (1 samples, 0.01%)</title><rect x="89.6429%" y="837" width="0.0123%" height="15" fill="rgb(252,177,51)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="847.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="89.6429%" y="821" width="0.0123%" height="15" fill="rgb(214,131,22)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="831.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="89.6429%" y="805" width="0.0123%" height="15" fill="rgb(246,53,19)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="815.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="89.6429%" y="789" width="0.0123%" height="15" fill="rgb(231,158,27)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="799.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="89.6429%" y="773" width="0.0123%" height="15" fill="rgb(226,166,46)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="783.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (1 samples, 0.01%)</title><rect x="89.6429%" y="757" width="0.0123%" height="15" fill="rgb(218,178,26)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="767.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="89.6429%" y="741" width="0.0123%" height="15" fill="rgb(206,25,39)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="751.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="89.6429%" y="725" width="0.0123%" height="15" fill="rgb(232,218,41)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="89.6429%" y="709" width="0.0123%" height="15" fill="rgb(212,151,15)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="89.6429%" y="693" width="0.0123%" height="15" fill="rgb(213,49,22)" fg:x="7305" fg:w="1"/><text x="89.8929%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="89.6552%" y="1029" width="0.0123%" height="15" fill="rgb(247,116,21)" fg:x="7306" fg:w="1"/><text x="89.9052%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="89.6552%" y="1013" width="0.0123%" height="15" fill="rgb(248,98,14)" fg:x="7306" fg:w="1"/><text x="89.9052%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (2 samples, 0.02%)</title><rect x="89.6552%" y="1109" width="0.0245%" height="15" fill="rgb(247,72,6)" fg:x="7306" fg:w="2"/><text x="89.9052%" y="1119.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="89.6552%" y="1093" width="0.0245%" height="15" fill="rgb(213,9,22)" fg:x="7306" fg:w="2"/><text x="89.9052%" y="1103.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (2 samples, 0.02%)</title><rect x="89.6552%" y="1077" width="0.0245%" height="15" fill="rgb(213,122,30)" fg:x="7306" fg:w="2"/><text x="89.9052%" y="1087.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="89.6552%" y="1061" width="0.0245%" height="15" fill="rgb(244,11,30)" fg:x="7306" fg:w="2"/><text x="89.9052%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="89.6552%" y="1045" width="0.0245%" height="15" fill="rgb(236,102,26)" fg:x="7306" fg:w="2"/><text x="89.9052%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.01%)</title><rect x="89.6674%" y="1029" width="0.0123%" height="15" fill="rgb(231,166,37)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.01%)</title><rect x="89.6674%" y="1013" width="0.0123%" height="15" fill="rgb(220,224,29)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.6674%" y="997" width="0.0123%" height="15" fill="rgb(227,30,40)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="1007.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="89.6674%" y="981" width="0.0123%" height="15" fill="rgb(235,8,36)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.01%)</title><rect x="89.6674%" y="965" width="0.0123%" height="15" fill="rgb(232,175,19)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="975.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (1 samples, 0.01%)</title><rect x="89.6674%" y="949" width="0.0123%" height="15" fill="rgb(217,114,10)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="89.6674%" y="933" width="0.0123%" height="15" fill="rgb(214,112,41)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="943.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="89.6674%" y="917" width="0.0123%" height="15" fill="rgb(226,69,34)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="927.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (1 samples, 0.01%)</title><rect x="89.6674%" y="901" width="0.0123%" height="15" fill="rgb(219,23,46)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="911.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (1 samples, 0.01%)</title><rect x="89.6674%" y="885" width="0.0123%" height="15" fill="rgb(233,3,8)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="895.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="89.6674%" y="869" width="0.0123%" height="15" fill="rgb(251,34,42)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="879.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::{{closure}} (1 samples, 0.01%)</title><rect x="89.6674%" y="853" width="0.0123%" height="15" fill="rgb(215,84,9)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="863.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (1 samples, 0.01%)</title><rect x="89.6674%" y="837" width="0.0123%" height="15" fill="rgb(231,75,52)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="847.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (1 samples, 0.01%)</title><rect x="89.6674%" y="821" width="0.0123%" height="15" fill="rgb(247,201,31)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="831.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (1 samples, 0.01%)</title><rect x="89.6674%" y="805" width="0.0123%" height="15" fill="rgb(215,171,37)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="815.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="89.6674%" y="789" width="0.0123%" height="15" fill="rgb(208,208,44)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="799.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::{{closure}} (1 samples, 0.01%)</title><rect x="89.6674%" y="773" width="0.0123%" height="15" fill="rgb(247,146,54)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="783.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}} (1 samples, 0.01%)</title><rect x="89.6674%" y="757" width="0.0123%" height="15" fill="rgb(209,0,40)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="89.6674%" y="741" width="0.0123%" height="15" fill="rgb(221,59,4)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="751.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="89.6674%" y="725" width="0.0123%" height="15" fill="rgb(227,153,47)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (1 samples, 0.01%)</title><rect x="89.6674%" y="709" width="0.0123%" height="15" fill="rgb(253,225,10)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="719.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::clear (1 samples, 0.01%)</title><rect x="89.6674%" y="693" width="0.0123%" height="15" fill="rgb(237,201,24)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (1 samples, 0.01%)</title><rect x="89.6674%" y="677" width="0.0123%" height="15" fill="rgb(238,23,27)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="89.6674%" y="661" width="0.0123%" height="15" fill="rgb(236,54,50)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="89.6674%" y="645" width="0.0123%" height="15" fill="rgb(216,106,0)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="89.6674%" y="629" width="0.0123%" height="15" fill="rgb(234,179,35)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="89.6674%" y="613" width="0.0123%" height="15" fill="rgb(210,35,8)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="623.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="89.6674%" y="597" width="0.0123%" height="15" fill="rgb(238,144,16)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt; (1 samples, 0.01%)</title><rect x="89.6674%" y="581" width="0.0123%" height="15" fill="rgb(244,54,7)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (1 samples, 0.01%)</title><rect x="89.6674%" y="565" width="0.0123%" height="15" fill="rgb(233,225,40)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="575.50"></text></g><g><title>alloc::alloc::box_free (1 samples, 0.01%)</title><rect x="89.6674%" y="549" width="0.0123%" height="15" fill="rgb(249,227,23)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="89.6674%" y="533" width="0.0123%" height="15" fill="rgb(215,42,44)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="89.6674%" y="517" width="0.0123%" height="15" fill="rgb(220,145,40)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="527.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="89.6674%" y="501" width="0.0123%" height="15" fill="rgb(228,218,40)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="89.6674%" y="485" width="0.0123%" height="15" fill="rgb(217,52,54)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="495.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="89.6674%" y="469" width="0.0123%" height="15" fill="rgb(223,90,22)" fg:x="7307" fg:w="1"/><text x="89.9174%" y="479.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (4 samples, 0.05%)</title><rect x="89.6797%" y="1109" width="0.0491%" height="15" fill="rgb(232,114,35)" fg:x="7308" fg:w="4"/><text x="89.9297%" y="1119.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="89.7533%" y="789" width="0.0123%" height="15" fill="rgb(227,223,50)" fg:x="7314" fg:w="1"/><text x="90.0033%" y="799.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="89.7656%" y="789" width="0.0123%" height="15" fill="rgb(249,175,7)" fg:x="7315" fg:w="1"/><text x="90.0156%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (6 samples, 0.07%)</title><rect x="89.7411%" y="821" width="0.0736%" height="15" fill="rgb(249,173,15)" fg:x="7313" fg:w="6"/><text x="89.9911%" y="831.50"></text></g><g><title>core::fmt::write (6 samples, 0.07%)</title><rect x="89.7411%" y="805" width="0.0736%" height="15" fill="rgb(240,131,6)" fg:x="7313" fg:w="6"/><text x="89.9911%" y="815.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="89.7779%" y="789" width="0.0368%" height="15" fill="rgb(246,117,16)" fg:x="7316" fg:w="3"/><text x="90.0279%" y="799.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (3 samples, 0.04%)</title><rect x="89.7779%" y="773" width="0.0368%" height="15" fill="rgb(209,32,16)" fg:x="7316" fg:w="3"/><text x="90.0279%" y="783.50"></text></g><g><title>alloc::string::String::push_str (3 samples, 0.04%)</title><rect x="89.7779%" y="757" width="0.0368%" height="15" fill="rgb(207,45,44)" fg:x="7316" fg:w="3"/><text x="90.0279%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (3 samples, 0.04%)</title><rect x="89.7779%" y="741" width="0.0368%" height="15" fill="rgb(210,66,3)" fg:x="7316" fg:w="3"/><text x="90.0279%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (3 samples, 0.04%)</title><rect x="89.7779%" y="725" width="0.0368%" height="15" fill="rgb(246,133,30)" fg:x="7316" fg:w="3"/><text x="90.0279%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.04%)</title><rect x="89.7779%" y="709" width="0.0368%" height="15" fill="rgb(224,37,17)" fg:x="7316" fg:w="3"/><text x="90.0279%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.04%)</title><rect x="89.7779%" y="693" width="0.0368%" height="15" fill="rgb(237,218,18)" fg:x="7316" fg:w="3"/><text x="90.0279%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.04%)</title><rect x="89.7779%" y="677" width="0.0368%" height="15" fill="rgb(240,57,8)" fg:x="7316" fg:w="3"/><text x="90.0279%" y="687.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (8 samples, 0.10%)</title><rect x="89.7288%" y="933" width="0.0982%" height="15" fill="rgb(231,51,38)" fg:x="7312" fg:w="8"/><text x="89.9788%" y="943.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (8 samples, 0.10%)</title><rect x="89.7288%" y="917" width="0.0982%" height="15" fill="rgb(230,89,50)" fg:x="7312" fg:w="8"/><text x="89.9788%" y="927.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (8 samples, 0.10%)</title><rect x="89.7288%" y="901" width="0.0982%" height="15" fill="rgb(234,103,34)" fg:x="7312" fg:w="8"/><text x="89.9788%" y="911.50"></text></g><g><title>tracing_core::span::Attributes::record (8 samples, 0.10%)</title><rect x="89.7288%" y="885" width="0.0982%" height="15" fill="rgb(220,45,48)" fg:x="7312" fg:w="8"/><text x="89.9788%" y="895.50"></text></g><g><title>tracing_core::field::ValueSet::record (8 samples, 0.10%)</title><rect x="89.7288%" y="869" width="0.0982%" height="15" fill="rgb(250,210,3)" fg:x="7312" fg:w="8"/><text x="89.9788%" y="879.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (8 samples, 0.10%)</title><rect x="89.7288%" y="853" width="0.0982%" height="15" fill="rgb(210,118,12)" fg:x="7312" fg:w="8"/><text x="89.9788%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (8 samples, 0.10%)</title><rect x="89.7288%" y="837" width="0.0982%" height="15" fill="rgb(238,154,21)" fg:x="7312" fg:w="8"/><text x="89.9788%" y="847.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="89.8147%" y="821" width="0.0123%" height="15" fill="rgb(227,220,4)" fg:x="7319" fg:w="1"/><text x="90.0647%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="89.8147%" y="805" width="0.0123%" height="15" fill="rgb(207,179,27)" fg:x="7319" fg:w="1"/><text x="90.0647%" y="815.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="89.8147%" y="789" width="0.0123%" height="15" fill="rgb(240,111,30)" fg:x="7319" fg:w="1"/><text x="90.0647%" y="799.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="89.8147%" y="773" width="0.0123%" height="15" fill="rgb(251,29,1)" fg:x="7319" fg:w="1"/><text x="90.0647%" y="783.50"></text></g><g><title>alloc::string::String::new (1 samples, 0.01%)</title><rect x="89.8270%" y="933" width="0.0123%" height="15" fill="rgb(224,141,39)" fg:x="7320" fg:w="1"/><text x="90.0770%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="89.8270%" y="917" width="0.0123%" height="15" fill="rgb(207,98,26)" fg:x="7320" fg:w="1"/><text x="90.0770%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::extensions::ExtensionsMut&gt; (1 samples, 0.01%)</title><rect x="89.8392%" y="933" width="0.0123%" height="15" fill="rgb(221,37,6)" fg:x="7321" fg:w="1"/><text x="90.0892%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockWriteGuard&lt;tracing_subscriber::registry::extensions::ExtensionsInner&gt;&gt; (1 samples, 0.01%)</title><rect x="89.8392%" y="917" width="0.0123%" height="15" fill="rgb(217,32,44)" fg:x="7321" fg:w="1"/><text x="90.0892%" y="927.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockWriteGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="89.8392%" y="901" width="0.0123%" height="15" fill="rgb(253,149,2)" fg:x="7321" fg:w="1"/><text x="90.0892%" y="911.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::write_unlock (1 samples, 0.01%)</title><rect x="89.8392%" y="885" width="0.0123%" height="15" fill="rgb(220,165,39)" fg:x="7321" fg:w="1"/><text x="90.0892%" y="895.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write_unlock (1 samples, 0.01%)</title><rect x="89.8392%" y="869" width="0.0123%" height="15" fill="rgb(235,33,48)" fg:x="7321" fg:w="1"/><text x="90.0892%" y="879.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (1 samples, 0.01%)</title><rect x="89.8392%" y="853" width="0.0123%" height="15" fill="rgb(221,89,6)" fg:x="7321" fg:w="1"/><text x="90.0892%" y="863.50"></text></g><g><title>__GI___pthread_rwlock_unlock (1 samples, 0.01%)</title><rect x="89.8392%" y="837" width="0.0123%" height="15" fill="rgb(215,214,6)" fg:x="7321" fg:w="1"/><text x="90.0892%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (11 samples, 0.13%)</title><rect x="89.7288%" y="949" width="0.1350%" height="15" fill="rgb(241,1,30)" fg:x="7312" fg:w="11"/><text x="89.9788%" y="959.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (1 samples, 0.01%)</title><rect x="89.8515%" y="933" width="0.0123%" height="15" fill="rgb(211,140,32)" fg:x="7322" fg:w="1"/><text x="90.1015%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (1 samples, 0.01%)</title><rect x="89.8515%" y="917" width="0.0123%" height="15" fill="rgb(232,48,21)" fg:x="7322" fg:w="1"/><text x="90.1015%" y="927.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="89.8515%" y="901" width="0.0123%" height="15" fill="rgb(252,217,9)" fg:x="7322" fg:w="1"/><text x="90.1015%" y="911.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::write (1 samples, 0.01%)</title><rect x="89.8515%" y="885" width="0.0123%" height="15" fill="rgb(206,123,34)" fg:x="7322" fg:w="1"/><text x="90.1015%" y="895.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (1 samples, 0.01%)</title><rect x="89.8515%" y="869" width="0.0123%" height="15" fill="rgb(245,161,38)" fg:x="7322" fg:w="1"/><text x="90.1015%" y="879.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (1 samples, 0.01%)</title><rect x="89.8515%" y="853" width="0.0123%" height="15" fill="rgb(233,205,7)" fg:x="7322" fg:w="1"/><text x="90.1015%" y="863.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get_inner (1 samples, 0.01%)</title><rect x="89.8638%" y="885" width="0.0123%" height="15" fill="rgb(217,119,18)" fg:x="7323" fg:w="1"/><text x="90.1138%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="89.8638%" y="869" width="0.0123%" height="15" fill="rgb(252,126,3)" fg:x="7323" fg:w="1"/><text x="90.1138%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="89.8638%" y="853" width="0.0123%" height="15" fill="rgb(252,188,15)" fg:x="7323" fg:w="1"/><text x="90.1138%" y="863.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (25 samples, 0.31%)</title><rect x="89.5815%" y="1269" width="0.3068%" height="15" fill="rgb(228,1,48)" fg:x="7300" fg:w="25"/><text x="89.8315%" y="1279.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (23 samples, 0.28%)</title><rect x="89.6061%" y="1253" width="0.2822%" height="15" fill="rgb(205,187,8)" fg:x="7302" fg:w="23"/><text x="89.8561%" y="1263.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (23 samples, 0.28%)</title><rect x="89.6061%" y="1237" width="0.2822%" height="15" fill="rgb(205,105,50)" fg:x="7302" fg:w="23"/><text x="89.8561%" y="1247.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (23 samples, 0.28%)</title><rect x="89.6061%" y="1221" width="0.2822%" height="15" fill="rgb(211,31,46)" fg:x="7302" fg:w="23"/><text x="89.8561%" y="1231.50"></text></g><g><title>wgpu::Device::create_buffer (20 samples, 0.25%)</title><rect x="89.6429%" y="1205" width="0.2454%" height="15" fill="rgb(213,126,5)" fg:x="7305" fg:w="20"/><text x="89.8929%" y="1215.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (20 samples, 0.25%)</title><rect x="89.6429%" y="1189" width="0.2454%" height="15" fill="rgb(231,87,9)" fg:x="7305" fg:w="20"/><text x="89.8929%" y="1199.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (20 samples, 0.25%)</title><rect x="89.6429%" y="1173" width="0.2454%" height="15" fill="rgb(219,224,20)" fg:x="7305" fg:w="20"/><text x="89.8929%" y="1183.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (20 samples, 0.25%)</title><rect x="89.6429%" y="1157" width="0.2454%" height="15" fill="rgb(230,84,21)" fg:x="7305" fg:w="20"/><text x="89.8929%" y="1167.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (20 samples, 0.25%)</title><rect x="89.6429%" y="1141" width="0.2454%" height="15" fill="rgb(224,169,42)" fg:x="7305" fg:w="20"/><text x="89.8929%" y="1151.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (20 samples, 0.25%)</title><rect x="89.6429%" y="1125" width="0.2454%" height="15" fill="rgb(227,182,13)" fg:x="7305" fg:w="20"/><text x="89.8929%" y="1135.50"></text></g><g><title>tracing::span::Span::new (13 samples, 0.16%)</title><rect x="89.7288%" y="1109" width="0.1595%" height="15" fill="rgb(249,57,41)" fg:x="7312" fg:w="13"/><text x="89.9788%" y="1119.50"></text></g><g><title>tracing_core::dispatcher::get_default (13 samples, 0.16%)</title><rect x="89.7288%" y="1093" width="0.1595%" height="15" fill="rgb(214,93,52)" fg:x="7312" fg:w="13"/><text x="89.9788%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.16%)</title><rect x="89.7288%" y="1077" width="0.1595%" height="15" fill="rgb(229,161,34)" fg:x="7312" fg:w="13"/><text x="89.9788%" y="1087.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (13 samples, 0.16%)</title><rect x="89.7288%" y="1061" width="0.1595%" height="15" fill="rgb(227,193,17)" fg:x="7312" fg:w="13"/><text x="89.9788%" y="1071.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (13 samples, 0.16%)</title><rect x="89.7288%" y="1045" width="0.1595%" height="15" fill="rgb(242,164,46)" fg:x="7312" fg:w="13"/><text x="89.9788%" y="1055.50"></text></g><g><title>tracing::span::Span::new_with (13 samples, 0.16%)</title><rect x="89.7288%" y="1029" width="0.1595%" height="15" fill="rgb(242,142,47)" fg:x="7312" fg:w="13"/><text x="89.9788%" y="1039.50"></text></g><g><title>tracing::span::Span::make_with (13 samples, 0.16%)</title><rect x="89.7288%" y="1013" width="0.1595%" height="15" fill="rgb(208,23,18)" fg:x="7312" fg:w="13"/><text x="89.9788%" y="1023.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (13 samples, 0.16%)</title><rect x="89.7288%" y="997" width="0.1595%" height="15" fill="rgb(219,54,38)" fg:x="7312" fg:w="13"/><text x="89.9788%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (13 samples, 0.16%)</title><rect x="89.7288%" y="981" width="0.1595%" height="15" fill="rgb(206,97,35)" fg:x="7312" fg:w="13"/><text x="89.9788%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (13 samples, 0.16%)</title><rect x="89.7288%" y="965" width="0.1595%" height="15" fill="rgb(208,76,8)" fg:x="7312" fg:w="13"/><text x="89.9788%" y="975.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="89.8638%" y="949" width="0.0245%" height="15" fill="rgb(220,92,28)" fg:x="7323" fg:w="2"/><text x="90.1138%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="89.8638%" y="933" width="0.0245%" height="15" fill="rgb(209,158,39)" fg:x="7323" fg:w="2"/><text x="90.1138%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (2 samples, 0.02%)</title><rect x="89.8638%" y="917" width="0.0245%" height="15" fill="rgb(238,175,9)" fg:x="7323" fg:w="2"/><text x="90.1138%" y="927.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="89.8638%" y="901" width="0.0245%" height="15" fill="rgb(240,116,17)" fg:x="7323" fg:w="2"/><text x="90.1138%" y="911.50"></text></g><g><title>thread_local::thread_id::get (1 samples, 0.01%)</title><rect x="89.8761%" y="885" width="0.0123%" height="15" fill="rgb(208,7,2)" fg:x="7324" fg:w="1"/><text x="90.1261%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="89.8761%" y="869" width="0.0123%" height="15" fill="rgb(252,52,4)" fg:x="7324" fg:w="1"/><text x="90.1261%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="89.8761%" y="853" width="0.0123%" height="15" fill="rgb(222,68,34)" fg:x="7324" fg:w="1"/><text x="90.1261%" y="863.50"></text></g><g><title>thread_local::thread_id::get::{{closure}} (1 samples, 0.01%)</title><rect x="89.8761%" y="837" width="0.0123%" height="15" fill="rgb(242,154,35)" fg:x="7324" fg:w="1"/><text x="90.1261%" y="847.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (2 samples, 0.02%)</title><rect x="89.8883%" y="1269" width="0.0245%" height="15" fill="rgb(210,125,54)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1279.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (2 samples, 0.02%)</title><rect x="89.8883%" y="1253" width="0.0245%" height="15" fill="rgb(247,121,18)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1263.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (2 samples, 0.02%)</title><rect x="89.8883%" y="1237" width="0.0245%" height="15" fill="rgb(223,48,51)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1247.50"></text></g><g><title>wgpu::Device::create_command_encoder (2 samples, 0.02%)</title><rect x="89.8883%" y="1221" width="0.0245%" height="15" fill="rgb(211,156,48)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1231.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (2 samples, 0.02%)</title><rect x="89.8883%" y="1205" width="0.0245%" height="15" fill="rgb(236,56,31)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1215.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (2 samples, 0.02%)</title><rect x="89.8883%" y="1189" width="0.0245%" height="15" fill="rgb(247,157,52)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1199.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (2 samples, 0.02%)</title><rect x="89.8883%" y="1173" width="0.0245%" height="15" fill="rgb(244,121,39)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1183.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (2 samples, 0.02%)</title><rect x="89.8883%" y="1157" width="0.0245%" height="15" fill="rgb(239,4,40)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1167.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (2 samples, 0.02%)</title><rect x="89.8883%" y="1141" width="0.0245%" height="15" fill="rgb(213,204,45)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1151.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (2 samples, 0.02%)</title><rect x="89.8883%" y="1125" width="0.0245%" height="15" fill="rgb(242,107,0)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="89.8883%" y="1109" width="0.0245%" height="15" fill="rgb(215,152,25)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="89.8883%" y="1093" width="0.0245%" height="15" fill="rgb(233,151,6)" fg:x="7325" fg:w="2"/><text x="90.1383%" y="1103.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="89.9129%" y="1269" width="0.0123%" height="15" fill="rgb(206,126,44)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1279.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (1 samples, 0.01%)</title><rect x="89.9129%" y="1253" width="0.0123%" height="15" fill="rgb(209,145,15)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1263.50"></text></g><g><title>wgpu::Device::create_swap_chain (1 samples, 0.01%)</title><rect x="89.9129%" y="1237" width="0.0123%" height="15" fill="rgb(235,214,8)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1247.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (1 samples, 0.01%)</title><rect x="89.9129%" y="1221" width="0.0123%" height="15" fill="rgb(216,140,51)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1231.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (1 samples, 0.01%)</title><rect x="89.9129%" y="1205" width="0.0123%" height="15" fill="rgb(213,83,34)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1215.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::configure_swapchain (1 samples, 0.01%)</title><rect x="89.9129%" y="1189" width="0.0123%" height="15" fill="rgb(218,186,44)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1199.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_backend_vulkan::Device&gt;::create_swapchain (1 samples, 0.01%)</title><rect x="89.9129%" y="1173" width="0.0123%" height="15" fill="rgb(225,147,10)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1183.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (1 samples, 0.01%)</title><rect x="89.9129%" y="1157" width="0.0123%" height="15" fill="rgb(209,214,20)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1167.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::create_swapchain_khr (1 samples, 0.01%)</title><rect x="89.9129%" y="1141" width="0.0123%" height="15" fill="rgb(252,61,32)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1151.50"></text></g><g><title>[libvulkan.so.1.2.194] (1 samples, 0.01%)</title><rect x="89.9129%" y="1125" width="0.0123%" height="15" fill="rgb(237,204,10)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1135.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.9129%" y="1109" width="0.0123%" height="15" fill="rgb(246,118,16)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.9129%" y="1093" width="0.0123%" height="15" fill="rgb(214,50,9)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.9129%" y="1077" width="0.0123%" height="15" fill="rgb(212,41,1)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.9129%" y="1061" width="0.0123%" height="15" fill="rgb(228,172,32)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.9129%" y="1045" width="0.0123%" height="15" fill="rgb(231,85,38)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.9129%" y="1029" width="0.0123%" height="15" fill="rgb(223,120,31)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.9129%" y="1013" width="0.0123%" height="15" fill="rgb(254,174,9)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.9129%" y="997" width="0.0123%" height="15" fill="rgb(243,197,0)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.9129%" y="981" width="0.0123%" height="15" fill="rgb(226,186,17)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="89.9129%" y="965" width="0.0123%" height="15" fill="rgb(229,38,38)" fg:x="7327" fg:w="1"/><text x="90.1629%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="89.9251%" y="1141" width="0.0245%" height="15" fill="rgb(238,82,14)" fg:x="7328" fg:w="2"/><text x="90.1751%" y="1151.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="89.9251%" y="1125" width="0.0245%" height="15" fill="rgb(230,154,54)" fg:x="7328" fg:w="2"/><text x="90.1751%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="89.9251%" y="1109" width="0.0245%" height="15" fill="rgb(243,84,17)" fg:x="7328" fg:w="2"/><text x="90.1751%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="89.9251%" y="1093" width="0.0245%" height="15" fill="rgb(226,41,37)" fg:x="7328" fg:w="2"/><text x="90.1751%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="89.9251%" y="1077" width="0.0245%" height="15" fill="rgb(219,20,18)" fg:x="7328" fg:w="2"/><text x="90.1751%" y="1087.50"></text></g><g><title>std::thread::current (1 samples, 0.01%)</title><rect x="89.9497%" y="1141" width="0.0123%" height="15" fill="rgb(243,173,39)" fg:x="7330" fg:w="1"/><text x="90.1997%" y="1151.50"></text></g><g><title>std::sys_common::thread_info::current_thread (1 samples, 0.01%)</title><rect x="89.9497%" y="1125" width="0.0123%" height="15" fill="rgb(245,79,20)" fg:x="7330" fg:w="1"/><text x="90.1997%" y="1135.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with (1 samples, 0.01%)</title><rect x="89.9497%" y="1109" width="0.0123%" height="15" fill="rgb(229,101,45)" fg:x="7330" fg:w="1"/><text x="90.1997%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="89.9497%" y="1093" width="0.0123%" height="15" fill="rgb(215,123,52)" fg:x="7330" fg:w="1"/><text x="90.1997%" y="1103.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with::{{closure}} (1 samples, 0.01%)</title><rect x="89.9497%" y="1077" width="0.0123%" height="15" fill="rgb(215,11,33)" fg:x="7330" fg:w="1"/><text x="90.1997%" y="1087.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate (4 samples, 0.05%)</title><rect x="89.9251%" y="1157" width="0.0491%" height="15" fill="rgb(245,105,20)" fg:x="7328" fg:w="4"/><text x="90.1751%" y="1167.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::allocate (1 samples, 0.01%)</title><rect x="89.9620%" y="1141" width="0.0123%" height="15" fill="rgb(231,132,30)" fg:x="7331" fg:w="1"/><text x="90.2120%" y="1151.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="89.9620%" y="1125" width="0.0123%" height="15" fill="rgb(224,62,21)" fg:x="7331" fg:w="1"/><text x="90.2120%" y="1135.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="89.9620%" y="1109" width="0.0123%" height="15" fill="rgb(209,221,38)" fg:x="7331" fg:w="1"/><text x="90.2120%" y="1119.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::get_or_create (5 samples, 0.06%)</title><rect x="89.9251%" y="1237" width="0.0614%" height="15" fill="rgb(229,200,30)" fg:x="7328" fg:w="5"/><text x="90.1751%" y="1247.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (5 samples, 0.06%)</title><rect x="89.9251%" y="1221" width="0.0614%" height="15" fill="rgb(237,142,41)" fg:x="7328" fg:w="5"/><text x="90.1751%" y="1231.50"></text></g><g><title>wgpu::Device::create_command_encoder (5 samples, 0.06%)</title><rect x="89.9251%" y="1205" width="0.0614%" height="15" fill="rgb(238,37,22)" fg:x="7328" fg:w="5"/><text x="90.1751%" y="1215.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (5 samples, 0.06%)</title><rect x="89.9251%" y="1189" width="0.0614%" height="15" fill="rgb(234,182,17)" fg:x="7328" fg:w="5"/><text x="90.1751%" y="1199.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (5 samples, 0.06%)</title><rect x="89.9251%" y="1173" width="0.0614%" height="15" fill="rgb(237,58,48)" fg:x="7328" fg:w="5"/><text x="90.1751%" y="1183.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register_identity (1 samples, 0.01%)</title><rect x="89.9742%" y="1157" width="0.0123%" height="15" fill="rgb(226,112,37)" fg:x="7332" fg:w="1"/><text x="90.2242%" y="1167.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register (1 samples, 0.01%)</title><rect x="89.9742%" y="1141" width="0.0123%" height="15" fill="rgb(230,201,20)" fg:x="7332" fg:w="1"/><text x="90.2242%" y="1151.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.01%)</title><rect x="89.9742%" y="1125" width="0.0123%" height="15" fill="rgb(252,95,39)" fg:x="7332" fg:w="1"/><text x="90.2242%" y="1135.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.01%)</title><rect x="89.9742%" y="1109" width="0.0123%" height="15" fill="rgb(240,150,33)" fg:x="7332" fg:w="1"/><text x="90.2242%" y="1119.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="89.9742%" y="1093" width="0.0123%" height="15" fill="rgb(208,202,37)" fg:x="7332" fg:w="1"/><text x="90.2242%" y="1103.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="89.9742%" y="1077" width="0.0123%" height="15" fill="rgb(251,37,12)" fg:x="7332" fg:w="1"/><text x="90.2242%" y="1087.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (35 samples, 0.43%)</title><rect x="89.9251%" y="1269" width="0.4295%" height="15" fill="rgb(247,150,26)" fg:x="7328" fg:w="35"/><text x="90.1751%" y="1279.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (35 samples, 0.43%)</title><rect x="89.9251%" y="1253" width="0.4295%" height="15" fill="rgb(232,28,8)" fg:x="7328" fg:w="35"/><text x="90.1751%" y="1263.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (30 samples, 0.37%)</title><rect x="89.9865%" y="1237" width="0.3681%" height="15" fill="rgb(226,121,34)" fg:x="7333" fg:w="30"/><text x="90.2365%" y="1247.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (30 samples, 0.37%)</title><rect x="89.9865%" y="1221" width="0.3681%" height="15" fill="rgb(237,23,13)" fg:x="7333" fg:w="30"/><text x="90.2365%" y="1231.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (30 samples, 0.37%)</title><rect x="89.9865%" y="1205" width="0.3681%" height="15" fill="rgb(214,42,29)" fg:x="7333" fg:w="30"/><text x="90.2365%" y="1215.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (30 samples, 0.37%)</title><rect x="89.9865%" y="1189" width="0.3681%" height="15" fill="rgb(246,204,29)" fg:x="7333" fg:w="30"/><text x="90.2365%" y="1199.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (30 samples, 0.37%)</title><rect x="89.9865%" y="1173" width="0.3681%" height="15" fill="rgb(242,28,40)" fg:x="7333" fg:w="30"/><text x="90.2365%" y="1183.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (30 samples, 0.37%)</title><rect x="89.9865%" y="1157" width="0.3681%" height="15" fill="rgb(243,64,49)" fg:x="7333" fg:w="30"/><text x="90.2365%" y="1167.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (30 samples, 0.37%)</title><rect x="89.9865%" y="1141" width="0.3681%" height="15" fill="rgb(226,93,13)" fg:x="7333" fg:w="30"/><text x="90.2365%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.37%)</title><rect x="89.9865%" y="1125" width="0.3681%" height="15" fill="rgb(241,113,26)" fg:x="7333" fg:w="30"/><text x="90.2365%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (22 samples, 0.27%)</title><rect x="90.0847%" y="1109" width="0.2700%" height="15" fill="rgb(209,209,0)" fg:x="7341" fg:w="22"/><text x="90.3347%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.17%)</title><rect x="90.1828%" y="1093" width="0.1718%" height="15" fill="rgb(251,183,50)" fg:x="7349" fg:w="14"/><text x="90.4328%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.06%)</title><rect x="90.2933%" y="1077" width="0.0614%" height="15" fill="rgb(248,24,43)" fg:x="7358" fg:w="5"/><text x="90.5433%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="90.3056%" y="1061" width="0.0491%" height="15" fill="rgb(218,102,9)" fg:x="7359" fg:w="4"/><text x="90.5556%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="90.3056%" y="1045" width="0.0491%" height="15" fill="rgb(249,209,39)" fg:x="7359" fg:w="4"/><text x="90.5556%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="90.3301%" y="1029" width="0.0245%" height="15" fill="rgb(210,37,6)" fg:x="7361" fg:w="2"/><text x="90.5801%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="90.3424%" y="1013" width="0.0123%" height="15" fill="rgb(212,99,4)" fg:x="7362" fg:w="1"/><text x="90.5924%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="90.4774%" y="1109" width="0.0368%" height="15" fill="rgb(253,59,46)" fg:x="7373" fg:w="3"/><text x="90.7274%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="90.4896%" y="1093" width="0.0245%" height="15" fill="rgb(229,96,9)" fg:x="7374" fg:w="2"/><text x="90.7396%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="90.4896%" y="1077" width="0.0245%" height="15" fill="rgb(207,103,49)" fg:x="7374" fg:w="2"/><text x="90.7396%" y="1087.50"></text></g><g><title>__memset_avx2_unaligned_erms (2 samples, 0.02%)</title><rect x="90.4896%" y="1061" width="0.0245%" height="15" fill="rgb(250,226,20)" fg:x="7374" fg:w="2"/><text x="90.7396%" y="1071.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (15 samples, 0.18%)</title><rect x="90.3546%" y="1221" width="0.1841%" height="15" fill="rgb(238,220,11)" fg:x="7363" fg:w="15"/><text x="90.6046%" y="1231.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (15 samples, 0.18%)</title><rect x="90.3546%" y="1205" width="0.1841%" height="15" fill="rgb(236,74,15)" fg:x="7363" fg:w="15"/><text x="90.6046%" y="1215.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (15 samples, 0.18%)</title><rect x="90.3546%" y="1189" width="0.1841%" height="15" fill="rgb(218,43,40)" fg:x="7363" fg:w="15"/><text x="90.6046%" y="1199.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (15 samples, 0.18%)</title><rect x="90.3546%" y="1173" width="0.1841%" height="15" fill="rgb(245,206,37)" fg:x="7363" fg:w="15"/><text x="90.6046%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.18%)</title><rect x="90.3546%" y="1157" width="0.1841%" height="15" fill="rgb(206,30,3)" fg:x="7363" fg:w="15"/><text x="90.6046%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.18%)</title><rect x="90.3546%" y="1141" width="0.1841%" height="15" fill="rgb(211,29,35)" fg:x="7363" fg:w="15"/><text x="90.6046%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (9 samples, 0.11%)</title><rect x="90.4283%" y="1125" width="0.1104%" height="15" fill="rgb(218,49,50)" fg:x="7369" fg:w="9"/><text x="90.6783%" y="1135.50"></text></g><g><title>__clock_gettime_2 (2 samples, 0.02%)</title><rect x="90.5142%" y="1109" width="0.0245%" height="15" fill="rgb(211,114,30)" fg:x="7376" fg:w="2"/><text x="90.7642%" y="1119.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (1 samples, 0.01%)</title><rect x="90.5387%" y="1205" width="0.0123%" height="15" fill="rgb(238,70,33)" fg:x="7378" fg:w="1"/><text x="90.7887%" y="1215.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="90.5387%" y="1189" width="0.0123%" height="15" fill="rgb(238,141,50)" fg:x="7378" fg:w="1"/><text x="90.7887%" y="1199.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::merge (2 samples, 0.02%)</title><rect x="90.5510%" y="1189" width="0.0245%" height="15" fill="rgb(205,69,6)" fg:x="7379" fg:w="2"/><text x="90.8010%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="90.5633%" y="1173" width="0.0123%" height="15" fill="rgb(229,65,0)" fg:x="7380" fg:w="1"/><text x="90.8133%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.5633%" y="1157" width="0.0123%" height="15" fill="rgb(211,3,37)" fg:x="7380" fg:w="1"/><text x="90.8133%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="90.5633%" y="1141" width="0.0123%" height="15" fill="rgb(223,196,42)" fg:x="7380" fg:w="1"/><text x="90.8133%" y="1151.50"></text></g><g><title>&lt;wgpu_core::track::range::Merge&lt;I,T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.5633%" y="1125" width="0.0123%" height="15" fill="rgb(227,191,15)" fg:x="7380" fg:w="1"/><text x="90.8133%" y="1135.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (5 samples, 0.06%)</title><rect x="90.5387%" y="1221" width="0.0614%" height="15" fill="rgb(229,210,53)" fg:x="7378" fg:w="5"/><text x="90.7887%" y="1231.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (4 samples, 0.05%)</title><rect x="90.5510%" y="1205" width="0.0491%" height="15" fill="rgb(250,203,10)" fg:x="7379" fg:w="4"/><text x="90.8010%" y="1215.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="90.5755%" y="1189" width="0.0245%" height="15" fill="rgb(247,8,37)" fg:x="7381" fg:w="2"/><text x="90.8255%" y="1199.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="90.5755%" y="1173" width="0.0245%" height="15" fill="rgb(240,52,9)" fg:x="7381" fg:w="2"/><text x="90.8255%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="90.5755%" y="1157" width="0.0245%" height="15" fill="rgb(243,100,52)" fg:x="7381" fg:w="2"/><text x="90.8255%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.01%)</title><rect x="90.6001%" y="1141" width="0.0123%" height="15" fill="rgb(224,149,30)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="1151.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.6001%" y="1125" width="0.0123%" height="15" fill="rgb(232,27,45)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="1135.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="90.6001%" y="1109" width="0.0123%" height="15" fill="rgb(242,161,36)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="1119.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="90.6001%" y="1093" width="0.0123%" height="15" fill="rgb(235,223,32)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="1103.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="90.6001%" y="1077" width="0.0123%" height="15" fill="rgb(242,78,19)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.01%)</title><rect x="90.6001%" y="1061" width="0.0123%" height="15" fill="rgb(233,157,47)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.01%)</title><rect x="90.6001%" y="1045" width="0.0123%" height="15" fill="rgb(251,213,5)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.6001%" y="1029" width="0.0123%" height="15" fill="rgb(215,223,5)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="90.6001%" y="1013" width="0.0123%" height="15" fill="rgb(230,14,7)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.01%)</title><rect x="90.6001%" y="997" width="0.0123%" height="15" fill="rgb(249,179,20)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="1007.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (1 samples, 0.01%)</title><rect x="90.6001%" y="981" width="0.0123%" height="15" fill="rgb(230,204,44)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="90.6001%" y="965" width="0.0123%" height="15" fill="rgb(233,229,46)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="975.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="90.6001%" y="949" width="0.0123%" height="15" fill="rgb(210,154,35)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="959.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (1 samples, 0.01%)</title><rect x="90.6001%" y="933" width="0.0123%" height="15" fill="rgb(220,178,16)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="943.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (1 samples, 0.01%)</title><rect x="90.6001%" y="917" width="0.0123%" height="15" fill="rgb(243,0,53)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="927.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="90.6001%" y="901" width="0.0123%" height="15" fill="rgb(223,221,47)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="911.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::{{closure}} (1 samples, 0.01%)</title><rect x="90.6001%" y="885" width="0.0123%" height="15" fill="rgb(233,82,15)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="895.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (1 samples, 0.01%)</title><rect x="90.6001%" y="869" width="0.0123%" height="15" fill="rgb(222,8,38)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="879.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (1 samples, 0.01%)</title><rect x="90.6001%" y="853" width="0.0123%" height="15" fill="rgb(241,28,48)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="863.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (1 samples, 0.01%)</title><rect x="90.6001%" y="837" width="0.0123%" height="15" fill="rgb(209,227,15)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="847.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="90.6001%" y="821" width="0.0123%" height="15" fill="rgb(234,189,48)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="831.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::{{closure}} (1 samples, 0.01%)</title><rect x="90.6001%" y="805" width="0.0123%" height="15" fill="rgb(212,27,44)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}} (1 samples, 0.01%)</title><rect x="90.6001%" y="789" width="0.0123%" height="15" fill="rgb(249,55,42)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="90.6001%" y="773" width="0.0123%" height="15" fill="rgb(215,211,28)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="783.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="90.6001%" y="757" width="0.0123%" height="15" fill="rgb(221,155,16)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (1 samples, 0.01%)</title><rect x="90.6001%" y="741" width="0.0123%" height="15" fill="rgb(247,106,30)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="751.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::clear (1 samples, 0.01%)</title><rect x="90.6001%" y="725" width="0.0123%" height="15" fill="rgb(230,76,31)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (1 samples, 0.01%)</title><rect x="90.6001%" y="709" width="0.0123%" height="15" fill="rgb(222,6,48)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="90.6001%" y="693" width="0.0123%" height="15" fill="rgb(228,82,3)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="90.6001%" y="677" width="0.0123%" height="15" fill="rgb(245,208,52)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="90.6001%" y="661" width="0.0123%" height="15" fill="rgb(218,65,17)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="90.6001%" y="645" width="0.0123%" height="15" fill="rgb(242,63,26)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="90.6001%" y="629" width="0.0123%" height="15" fill="rgb(224,119,39)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt; (1 samples, 0.01%)</title><rect x="90.6001%" y="613" width="0.0123%" height="15" fill="rgb(229,106,3)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (1 samples, 0.01%)</title><rect x="90.6001%" y="597" width="0.0123%" height="15" fill="rgb(248,6,33)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="90.6001%" y="581" width="0.0123%" height="15" fill="rgb(226,3,49)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="591.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.6001%" y="565" width="0.0123%" height="15" fill="rgb(228,142,14)" fg:x="7383" fg:w="1"/><text x="90.8501%" y="575.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (1 samples, 0.01%)</title><rect x="90.6123%" y="1141" width="0.0123%" height="15" fill="rgb(241,141,54)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.01%)</title><rect x="90.6123%" y="1125" width="0.0123%" height="15" fill="rgb(252,17,50)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="1135.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.6123%" y="1109" width="0.0123%" height="15" fill="rgb(221,120,48)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="1119.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="90.6123%" y="1093" width="0.0123%" height="15" fill="rgb(229,171,33)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="90.6123%" y="1077" width="0.0123%" height="15" fill="rgb(236,207,21)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="90.6123%" y="1061" width="0.0123%" height="15" fill="rgb(218,93,35)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="90.6123%" y="1045" width="0.0123%" height="15" fill="rgb(207,101,8)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="90.6123%" y="1029" width="0.0123%" height="15" fill="rgb(237,67,44)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="1039.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::get (1 samples, 0.01%)</title><rect x="90.6123%" y="1013" width="0.0123%" height="15" fill="rgb(236,218,7)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="1023.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="90.6123%" y="997" width="0.0123%" height="15" fill="rgb(252,207,10)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="1007.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="90.6123%" y="981" width="0.0123%" height="15" fill="rgb(221,175,6)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="991.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot (1 samples, 0.01%)</title><rect x="90.6123%" y="965" width="0.0123%" height="15" fill="rgb(230,105,53)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="975.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="90.6123%" y="949" width="0.0123%" height="15" fill="rgb(253,83,6)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="959.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::with_slot::{{closure}} (1 samples, 0.01%)</title><rect x="90.6123%" y="933" width="0.0123%" height="15" fill="rgb(206,198,44)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="943.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="90.6123%" y="917" width="0.0123%" height="15" fill="rgb(206,164,29)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="927.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::get (1 samples, 0.01%)</title><rect x="90.6123%" y="901" width="0.0123%" height="15" fill="rgb(215,2,50)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="90.6123%" y="885" width="0.0123%" height="15" fill="rgb(246,127,18)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="90.6123%" y="869" width="0.0123%" height="15" fill="rgb(232,6,21)" fg:x="7384" fg:w="1"/><text x="90.8623%" y="879.50"></text></g><g><title>core::fmt::Formatter::debug_struct (1 samples, 0.01%)</title><rect x="90.6246%" y="805" width="0.0123%" height="15" fill="rgb(224,154,1)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="815.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.01%)</title><rect x="90.6246%" y="789" width="0.0123%" height="15" fill="rgb(248,135,32)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="799.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="90.6246%" y="773" width="0.0123%" height="15" fill="rgb(253,129,38)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.6246%" y="757" width="0.0123%" height="15" fill="rgb(214,110,11)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.6246%" y="741" width="0.0123%" height="15" fill="rgb(246,150,22)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="751.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="90.6246%" y="725" width="0.0123%" height="15" fill="rgb(219,170,39)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.6246%" y="709" width="0.0123%" height="15" fill="rgb(221,143,52)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.6246%" y="693" width="0.0123%" height="15" fill="rgb(237,122,11)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.6246%" y="677" width="0.0123%" height="15" fill="rgb(217,114,13)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.6246%" y="661" width="0.0123%" height="15" fill="rgb(218,184,28)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.6246%" y="645" width="0.0123%" height="15" fill="rgb(237,33,22)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="90.6246%" y="629" width="0.0123%" height="15" fill="rgb(224,56,42)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.6246%" y="613" width="0.0123%" height="15" fill="rgb(216,138,53)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.6246%" y="597" width="0.0123%" height="15" fill="rgb(233,229,40)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="90.6246%" y="581" width="0.0123%" height="15" fill="rgb(252,105,0)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="90.6246%" y="565" width="0.0123%" height="15" fill="rgb(212,75,24)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="575.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="90.6246%" y="549" width="0.0123%" height="15" fill="rgb(235,168,50)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="559.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="90.6246%" y="533" width="0.0123%" height="15" fill="rgb(247,204,12)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="90.6246%" y="517" width="0.0123%" height="15" fill="rgb(250,203,27)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="90.6246%" y="501" width="0.0123%" height="15" fill="rgb(221,215,2)" fg:x="7385" fg:w="1"/><text x="90.8746%" y="511.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (3 samples, 0.04%)</title><rect x="90.6246%" y="965" width="0.0368%" height="15" fill="rgb(242,163,47)" fg:x="7385" fg:w="3"/><text x="90.8746%" y="975.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="90.6246%" y="949" width="0.0368%" height="15" fill="rgb(237,136,50)" fg:x="7385" fg:w="3"/><text x="90.8746%" y="959.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="90.6246%" y="933" width="0.0368%" height="15" fill="rgb(217,201,47)" fg:x="7385" fg:w="3"/><text x="90.8746%" y="943.50"></text></g><g><title>tracing_core::span::Attributes::record (3 samples, 0.04%)</title><rect x="90.6246%" y="917" width="0.0368%" height="15" fill="rgb(212,38,47)" fg:x="7385" fg:w="3"/><text x="90.8746%" y="927.50"></text></g><g><title>tracing_core::field::ValueSet::record (3 samples, 0.04%)</title><rect x="90.6246%" y="901" width="0.0368%" height="15" fill="rgb(254,113,41)" fg:x="7385" fg:w="3"/><text x="90.8746%" y="911.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (3 samples, 0.04%)</title><rect x="90.6246%" y="885" width="0.0368%" height="15" fill="rgb(236,7,22)" fg:x="7385" fg:w="3"/><text x="90.8746%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (3 samples, 0.04%)</title><rect x="90.6246%" y="869" width="0.0368%" height="15" fill="rgb(235,81,25)" fg:x="7385" fg:w="3"/><text x="90.8746%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.04%)</title><rect x="90.6246%" y="853" width="0.0368%" height="15" fill="rgb(216,41,31)" fg:x="7385" fg:w="3"/><text x="90.8746%" y="863.50"></text></g><g><title>core::fmt::write (3 samples, 0.04%)</title><rect x="90.6246%" y="837" width="0.0368%" height="15" fill="rgb(249,219,15)" fg:x="7385" fg:w="3"/><text x="90.8746%" y="847.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="90.6246%" y="821" width="0.0368%" height="15" fill="rgb(248,201,3)" fg:x="7385" fg:w="3"/><text x="90.8746%" y="831.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="90.6369%" y="805" width="0.0245%" height="15" fill="rgb(249,141,18)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="90.6369%" y="789" width="0.0245%" height="15" fill="rgb(222,32,39)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="799.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.02%)</title><rect x="90.6369%" y="773" width="0.0245%" height="15" fill="rgb(237,139,51)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.02%)</title><rect x="90.6369%" y="757" width="0.0245%" height="15" fill="rgb(218,210,4)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="90.6369%" y="741" width="0.0245%" height="15" fill="rgb(217,199,13)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="90.6369%" y="725" width="0.0245%" height="15" fill="rgb(222,118,25)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="735.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="90.6369%" y="709" width="0.0245%" height="15" fill="rgb(241,70,28)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="90.6369%" y="693" width="0.0245%" height="15" fill="rgb(205,51,41)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="90.6369%" y="677" width="0.0245%" height="15" fill="rgb(237,165,49)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="90.6369%" y="661" width="0.0245%" height="15" fill="rgb(213,10,51)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="90.6369%" y="645" width="0.0245%" height="15" fill="rgb(245,89,32)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="90.6369%" y="629" width="0.0245%" height="15" fill="rgb(249,81,54)" fg:x="7386" fg:w="2"/><text x="90.8869%" y="639.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (6 samples, 0.07%)</title><rect x="90.6001%" y="1205" width="0.0736%" height="15" fill="rgb(223,134,14)" fg:x="7383" fg:w="6"/><text x="90.8501%" y="1215.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (6 samples, 0.07%)</title><rect x="90.6001%" y="1189" width="0.0736%" height="15" fill="rgb(233,62,37)" fg:x="7383" fg:w="6"/><text x="90.8501%" y="1199.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (6 samples, 0.07%)</title><rect x="90.6001%" y="1173" width="0.0736%" height="15" fill="rgb(219,117,42)" fg:x="7383" fg:w="6"/><text x="90.8501%" y="1183.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (6 samples, 0.07%)</title><rect x="90.6001%" y="1157" width="0.0736%" height="15" fill="rgb(248,40,28)" fg:x="7383" fg:w="6"/><text x="90.8501%" y="1167.50"></text></g><g><title>tracing::span::Span::new (4 samples, 0.05%)</title><rect x="90.6246%" y="1141" width="0.0491%" height="15" fill="rgb(246,66,35)" fg:x="7385" fg:w="4"/><text x="90.8746%" y="1151.50"></text></g><g><title>tracing_core::dispatcher::get_default (4 samples, 0.05%)</title><rect x="90.6246%" y="1125" width="0.0491%" height="15" fill="rgb(250,229,22)" fg:x="7385" fg:w="4"/><text x="90.8746%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="90.6246%" y="1109" width="0.0491%" height="15" fill="rgb(213,89,18)" fg:x="7385" fg:w="4"/><text x="90.8746%" y="1119.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (4 samples, 0.05%)</title><rect x="90.6246%" y="1093" width="0.0491%" height="15" fill="rgb(213,122,9)" fg:x="7385" fg:w="4"/><text x="90.8746%" y="1103.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (4 samples, 0.05%)</title><rect x="90.6246%" y="1077" width="0.0491%" height="15" fill="rgb(220,213,48)" fg:x="7385" fg:w="4"/><text x="90.8746%" y="1087.50"></text></g><g><title>tracing::span::Span::new_with (4 samples, 0.05%)</title><rect x="90.6246%" y="1061" width="0.0491%" height="15" fill="rgb(244,109,54)" fg:x="7385" fg:w="4"/><text x="90.8746%" y="1071.50"></text></g><g><title>tracing::span::Span::make_with (4 samples, 0.05%)</title><rect x="90.6246%" y="1045" width="0.0491%" height="15" fill="rgb(254,104,49)" fg:x="7385" fg:w="4"/><text x="90.8746%" y="1055.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (4 samples, 0.05%)</title><rect x="90.6246%" y="1029" width="0.0491%" height="15" fill="rgb(219,28,32)" fg:x="7385" fg:w="4"/><text x="90.8746%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (4 samples, 0.05%)</title><rect x="90.6246%" y="1013" width="0.0491%" height="15" fill="rgb(249,153,33)" fg:x="7385" fg:w="4"/><text x="90.8746%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (4 samples, 0.05%)</title><rect x="90.6246%" y="997" width="0.0491%" height="15" fill="rgb(230,116,21)" fg:x="7385" fg:w="4"/><text x="90.8746%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (4 samples, 0.05%)</title><rect x="90.6246%" y="981" width="0.0491%" height="15" fill="rgb(247,110,3)" fg:x="7385" fg:w="4"/><text x="90.8746%" y="991.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::get_mut (1 samples, 0.01%)</title><rect x="90.6614%" y="965" width="0.0123%" height="15" fill="rgb(227,128,3)" fg:x="7388" fg:w="1"/><text x="90.9114%" y="975.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::get_mut (1 samples, 0.01%)</title><rect x="90.6614%" y="949" width="0.0123%" height="15" fill="rgb(208,21,1)" fg:x="7388" fg:w="1"/><text x="90.9114%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.01%)</title><rect x="90.6614%" y="933" width="0.0123%" height="15" fill="rgb(225,24,20)" fg:x="7388" fg:w="1"/><text x="90.9114%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="90.6614%" y="917" width="0.0123%" height="15" fill="rgb(250,159,24)" fg:x="7388" fg:w="1"/><text x="90.9114%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.01%)</title><rect x="90.6614%" y="901" width="0.0123%" height="15" fill="rgb(214,30,53)" fg:x="7388" fg:w="1"/><text x="90.9114%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="90.6614%" y="885" width="0.0123%" height="15" fill="rgb(243,198,11)" fg:x="7388" fg:w="1"/><text x="90.9114%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="90.6614%" y="869" width="0.0123%" height="15" fill="rgb(232,33,1)" fg:x="7388" fg:w="1"/><text x="90.9114%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.6614%" y="853" width="0.0123%" height="15" fill="rgb(242,60,11)" fg:x="7388" fg:w="1"/><text x="90.9114%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="90.6614%" y="837" width="0.0123%" height="15" fill="rgb(241,229,34)" fg:x="7388" fg:w="1"/><text x="90.9114%" y="847.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (227 samples, 2.79%)</title><rect x="87.9249%" y="1509" width="2.7856%" height="15" fill="rgb(230,92,51)" fg:x="7165" fg:w="227"/><text x="88.1749%" y="1519.50">wi..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (227 samples, 2.79%)</title><rect x="87.9249%" y="1493" width="2.7856%" height="15" fill="rgb(212,209,8)" fg:x="7165" fg:w="227"/><text x="88.1749%" y="1503.50">wi..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (227 samples, 2.79%)</title><rect x="87.9249%" y="1477" width="2.7856%" height="15" fill="rgb(241,55,35)" fg:x="7165" fg:w="227"/><text x="88.1749%" y="1487.50">wi..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (227 samples, 2.79%)</title><rect x="87.9249%" y="1461" width="2.7856%" height="15" fill="rgb(208,187,52)" fg:x="7165" fg:w="227"/><text x="88.1749%" y="1471.50">be..</text></g><g><title>bevy_app::app::App::update (227 samples, 2.79%)</title><rect x="87.9249%" y="1445" width="2.7856%" height="15" fill="rgb(251,110,17)" fg:x="7165" fg:w="227"/><text x="88.1749%" y="1455.50">be..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (227 samples, 2.79%)</title><rect x="87.9249%" y="1429" width="2.7856%" height="15" fill="rgb(246,225,54)" fg:x="7165" fg:w="227"/><text x="88.1749%" y="1439.50">&lt;b..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (227 samples, 2.79%)</title><rect x="87.9249%" y="1413" width="2.7856%" height="15" fill="rgb(220,109,6)" fg:x="7165" fg:w="227"/><text x="88.1749%" y="1423.50">be..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (227 samples, 2.79%)</title><rect x="87.9249%" y="1397" width="2.7856%" height="15" fill="rgb(228,56,50)" fg:x="7165" fg:w="227"/><text x="88.1749%" y="1407.50">&lt;b..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (218 samples, 2.68%)</title><rect x="88.0353%" y="1381" width="2.6752%" height="15" fill="rgb(230,34,30)" fg:x="7174" fg:w="218"/><text x="88.2853%" y="1391.50">&lt;b..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (218 samples, 2.68%)</title><rect x="88.0353%" y="1365" width="2.6752%" height="15" fill="rgb(205,28,42)" fg:x="7174" fg:w="218"/><text x="88.2853%" y="1375.50">&lt;a..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (181 samples, 2.22%)</title><rect x="88.4894%" y="1349" width="2.2211%" height="15" fill="rgb(215,68,0)" fg:x="7211" fg:w="181"/><text x="88.7394%" y="1359.50">b..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (92 samples, 1.13%)</title><rect x="89.5815%" y="1333" width="1.1290%" height="15" fill="rgb(206,91,47)" fg:x="7300" fg:w="92"/><text x="89.8315%" y="1343.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (92 samples, 1.13%)</title><rect x="89.5815%" y="1317" width="1.1290%" height="15" fill="rgb(241,159,43)" fg:x="7300" fg:w="92"/><text x="89.8315%" y="1327.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (92 samples, 1.13%)</title><rect x="89.5815%" y="1301" width="1.1290%" height="15" fill="rgb(232,191,38)" fg:x="7300" fg:w="92"/><text x="89.8315%" y="1311.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (92 samples, 1.13%)</title><rect x="89.5815%" y="1285" width="1.1290%" height="15" fill="rgb(212,180,41)" fg:x="7300" fg:w="92"/><text x="89.8315%" y="1295.50"></text></g><g><title>wgpu::Queue::submit (29 samples, 0.36%)</title><rect x="90.3546%" y="1269" width="0.3559%" height="15" fill="rgb(236,134,49)" fg:x="7363" fg:w="29"/><text x="90.6046%" y="1279.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (29 samples, 0.36%)</title><rect x="90.3546%" y="1253" width="0.3559%" height="15" fill="rgb(221,83,26)" fg:x="7363" fg:w="29"/><text x="90.6046%" y="1263.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (29 samples, 0.36%)</title><rect x="90.3546%" y="1237" width="0.3559%" height="15" fill="rgb(215,87,39)" fg:x="7363" fg:w="29"/><text x="90.6046%" y="1247.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (9 samples, 0.11%)</title><rect x="90.6001%" y="1221" width="0.1104%" height="15" fill="rgb(242,28,29)" fg:x="7383" fg:w="9"/><text x="90.8501%" y="1231.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (3 samples, 0.04%)</title><rect x="90.6737%" y="1205" width="0.0368%" height="15" fill="rgb(212,219,47)" fg:x="7389" fg:w="3"/><text x="90.9237%" y="1215.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::remove_abandoned (3 samples, 0.04%)</title><rect x="90.6737%" y="1189" width="0.0368%" height="15" fill="rgb(221,35,20)" fg:x="7389" fg:w="3"/><text x="90.9237%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.04%)</title><rect x="90.6737%" y="1173" width="0.0368%" height="15" fill="rgb(234,144,13)" fg:x="7389" fg:w="3"/><text x="90.9237%" y="1183.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.04%)</title><rect x="90.6737%" y="1157" width="0.0368%" height="15" fill="rgb(237,41,27)" fg:x="7389" fg:w="3"/><text x="90.9237%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.04%)</title><rect x="90.6737%" y="1141" width="0.0368%" height="15" fill="rgb(253,175,5)" fg:x="7389" fg:w="3"/><text x="90.9237%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="90.6982%" y="1125" width="0.0123%" height="15" fill="rgb(235,210,51)" fg:x="7391" fg:w="1"/><text x="90.9482%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="90.6982%" y="1109" width="0.0123%" height="15" fill="rgb(241,180,35)" fg:x="7391" fg:w="1"/><text x="90.9482%" y="1119.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="90.6982%" y="1093" width="0.0123%" height="15" fill="rgb(219,45,16)" fg:x="7391" fg:w="1"/><text x="90.9482%" y="1103.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="90.6982%" y="1077" width="0.0123%" height="15" fill="rgb(247,212,4)" fg:x="7391" fg:w="1"/><text x="90.9482%" y="1087.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (1 samples, 0.01%)</title><rect x="90.7105%" y="1125" width="0.0123%" height="15" fill="rgb(224,211,1)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="1135.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (1 samples, 0.01%)</title><rect x="90.7105%" y="1109" width="0.0123%" height="15" fill="rgb(210,193,36)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="1119.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (1 samples, 0.01%)</title><rect x="90.7105%" y="1093" width="0.0123%" height="15" fill="rgb(215,121,20)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="1103.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (1 samples, 0.01%)</title><rect x="90.7105%" y="1077" width="0.0123%" height="15" fill="rgb(238,146,2)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="1087.50"></text></g><g><title>wgpu::Device::create_bind_group (1 samples, 0.01%)</title><rect x="90.7105%" y="1061" width="0.0123%" height="15" fill="rgb(254,123,45)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="1071.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_bind_group (1 samples, 0.01%)</title><rect x="90.7105%" y="1045" width="0.0123%" height="15" fill="rgb(225,126,11)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="1055.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_bind_group (1 samples, 0.01%)</title><rect x="90.7105%" y="1029" width="0.0123%" height="15" fill="rgb(239,12,5)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="1039.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (1 samples, 0.01%)</title><rect x="90.7105%" y="1013" width="0.0123%" height="15" fill="rgb(241,207,14)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="1023.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.7105%" y="997" width="0.0123%" height="15" fill="rgb(227,134,33)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="1007.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="90.7105%" y="981" width="0.0123%" height="15" fill="rgb(221,40,52)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="90.7105%" y="965" width="0.0123%" height="15" fill="rgb(206,93,8)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="90.7105%" y="949" width="0.0123%" height="15" fill="rgb(242,160,22)" fg:x="7392" fg:w="1"/><text x="90.9605%" y="959.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (2 samples, 0.02%)</title><rect x="90.7228%" y="1093" width="0.0245%" height="15" fill="rgb(232,204,40)" fg:x="7393" fg:w="2"/><text x="90.9728%" y="1103.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (2 samples, 0.02%)</title><rect x="90.7228%" y="1077" width="0.0245%" height="15" fill="rgb(247,210,47)" fg:x="7393" fg:w="2"/><text x="90.9728%" y="1087.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (2 samples, 0.02%)</title><rect x="90.7228%" y="1061" width="0.0245%" height="15" fill="rgb(211,91,7)" fg:x="7393" fg:w="2"/><text x="90.9728%" y="1071.50"></text></g><g><title>bevy_glsl_to_spirv::compile (2 samples, 0.02%)</title><rect x="90.7228%" y="1045" width="0.0245%" height="15" fill="rgb(252,160,34)" fg:x="7393" fg:w="2"/><text x="90.9728%" y="1055.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (2 samples, 0.02%)</title><rect x="90.7228%" y="1029" width="0.0245%" height="15" fill="rgb(220,34,39)" fg:x="7393" fg:w="2"/><text x="90.9728%" y="1039.50"></text></g><g><title>ShFinalize (2 samples, 0.02%)</title><rect x="90.7228%" y="1013" width="0.0245%" height="15" fill="rgb(247,49,38)" fg:x="7393" fg:w="2"/><text x="90.9728%" y="1023.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="90.7228%" y="997" width="0.0245%" height="15" fill="rgb(228,175,44)" fg:x="7393" fg:w="2"/><text x="90.9728%" y="1007.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="90.7228%" y="981" width="0.0245%" height="15" fill="rgb(218,214,32)" fg:x="7393" fg:w="2"/><text x="90.9728%" y="991.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="90.7228%" y="965" width="0.0245%" height="15" fill="rgb(213,50,12)" fg:x="7393" fg:w="2"/><text x="90.9728%" y="975.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (2 samples, 0.02%)</title><rect x="90.7228%" y="949" width="0.0245%" height="15" fill="rgb(219,35,41)" fg:x="7393" fg:w="2"/><text x="90.9728%" y="959.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="90.7351%" y="933" width="0.0123%" height="15" fill="rgb(219,18,38)" fg:x="7394" fg:w="1"/><text x="90.9851%" y="943.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="90.7351%" y="917" width="0.0123%" height="15" fill="rgb(223,217,6)" fg:x="7394" fg:w="1"/><text x="90.9851%" y="927.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (4 samples, 0.05%)</title><rect x="90.7105%" y="1397" width="0.0491%" height="15" fill="rgb(208,193,35)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1407.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (4 samples, 0.05%)</title><rect x="90.7105%" y="1381" width="0.0491%" height="15" fill="rgb(254,212,54)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1391.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.05%)</title><rect x="90.7105%" y="1365" width="0.0491%" height="15" fill="rgb(205,10,2)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1375.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="90.7105%" y="1349" width="0.0491%" height="15" fill="rgb(230,133,29)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1359.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (4 samples, 0.05%)</title><rect x="90.7105%" y="1333" width="0.0491%" height="15" fill="rgb(226,14,15)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1343.50"></text></g><g><title>async_executor::Executor::try_tick (4 samples, 0.05%)</title><rect x="90.7105%" y="1317" width="0.0491%" height="15" fill="rgb(226,140,54)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1327.50"></text></g><g><title>async_task::runnable::Runnable::run (4 samples, 0.05%)</title><rect x="90.7105%" y="1301" width="0.0491%" height="15" fill="rgb(250,47,41)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1311.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4 samples, 0.05%)</title><rect x="90.7105%" y="1285" width="0.0491%" height="15" fill="rgb(227,218,41)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1295.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.05%)</title><rect x="90.7105%" y="1269" width="0.0491%" height="15" fill="rgb(254,183,7)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1279.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (4 samples, 0.05%)</title><rect x="90.7105%" y="1253" width="0.0491%" height="15" fill="rgb(206,84,53)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1263.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.05%)</title><rect x="90.7105%" y="1237" width="0.0491%" height="15" fill="rgb(213,177,2)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1247.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (4 samples, 0.05%)</title><rect x="90.7105%" y="1221" width="0.0491%" height="15" fill="rgb(234,28,29)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1231.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (4 samples, 0.05%)</title><rect x="90.7105%" y="1205" width="0.0491%" height="15" fill="rgb(248,211,38)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1215.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (4 samples, 0.05%)</title><rect x="90.7105%" y="1189" width="0.0491%" height="15" fill="rgb(246,30,0)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.05%)</title><rect x="90.7105%" y="1173" width="0.0491%" height="15" fill="rgb(244,115,24)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1183.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.05%)</title><rect x="90.7105%" y="1157" width="0.0491%" height="15" fill="rgb(226,193,14)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1167.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (4 samples, 0.05%)</title><rect x="90.7105%" y="1141" width="0.0491%" height="15" fill="rgb(211,196,48)" fg:x="7392" fg:w="4"/><text x="90.9605%" y="1151.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (3 samples, 0.04%)</title><rect x="90.7228%" y="1125" width="0.0368%" height="15" fill="rgb(235,32,20)" fg:x="7393" fg:w="3"/><text x="90.9728%" y="1135.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (3 samples, 0.04%)</title><rect x="90.7228%" y="1109" width="0.0368%" height="15" fill="rgb(251,151,49)" fg:x="7393" fg:w="3"/><text x="90.9728%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="90.7473%" y="1093" width="0.0123%" height="15" fill="rgb(254,141,38)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="1103.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (1 samples, 0.01%)</title><rect x="90.7473%" y="1077" width="0.0123%" height="15" fill="rgb(209,118,44)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="1087.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (1 samples, 0.01%)</title><rect x="90.7473%" y="1061" width="0.0123%" height="15" fill="rgb(205,81,4)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="1071.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (1 samples, 0.01%)</title><rect x="90.7473%" y="1045" width="0.0123%" height="15" fill="rgb(241,25,6)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="1055.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (1 samples, 0.01%)</title><rect x="90.7473%" y="1029" width="0.0123%" height="15" fill="rgb(212,179,29)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="1039.50"></text></g><g><title>bevy_glsl_to_spirv::compile (1 samples, 0.01%)</title><rect x="90.7473%" y="1013" width="0.0123%" height="15" fill="rgb(241,40,32)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="1023.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (1 samples, 0.01%)</title><rect x="90.7473%" y="997" width="0.0123%" height="15" fill="rgb(223,35,2)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="1007.50"></text></g><g><title>ShFinalize (1 samples, 0.01%)</title><rect x="90.7473%" y="981" width="0.0123%" height="15" fill="rgb(221,125,54)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="991.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="90.7473%" y="965" width="0.0123%" height="15" fill="rgb(230,5,49)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="975.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="90.7473%" y="949" width="0.0123%" height="15" fill="rgb(221,157,7)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="959.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="90.7473%" y="933" width="0.0123%" height="15" fill="rgb(242,163,10)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="943.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="90.7473%" y="917" width="0.0123%" height="15" fill="rgb(232,30,2)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="927.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="90.7473%" y="901" width="0.0123%" height="15" fill="rgb(245,102,40)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="911.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="90.7473%" y="885" width="0.0123%" height="15" fill="rgb(242,10,41)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="895.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="90.7473%" y="869" width="0.0123%" height="15" fill="rgb(236,184,36)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="879.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="90.7473%" y="853" width="0.0123%" height="15" fill="rgb(247,147,48)" fg:x="7395" fg:w="1"/><text x="90.9973%" y="863.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="90.7596%" y="533" width="0.0123%" height="15" fill="rgb(226,166,2)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="90.7596%" y="517" width="0.0123%" height="15" fill="rgb(251,196,7)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="90.7596%" y="501" width="0.0123%" height="15" fill="rgb(241,40,13)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="511.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.7596%" y="485" width="0.0123%" height="15" fill="rgb(254,4,12)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.7596%" y="469" width="0.0123%" height="15" fill="rgb(244,139,49)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.7596%" y="453" width="0.0123%" height="15" fill="rgb(227,28,42)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.7596%" y="437" width="0.0123%" height="15" fill="rgb(231,135,32)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="447.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="90.7596%" y="421" width="0.0123%" height="15" fill="rgb(244,182,3)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.7596%" y="405" width="0.0123%" height="15" fill="rgb(247,46,19)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.7596%" y="389" width="0.0123%" height="15" fill="rgb(251,179,10)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.7596%" y="373" width="0.0123%" height="15" fill="rgb(229,222,18)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="383.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="90.7596%" y="357" width="0.0123%" height="15" fill="rgb(251,107,20)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="367.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="90.7596%" y="341" width="0.0123%" height="15" fill="rgb(233,193,19)" fg:x="7396" fg:w="1"/><text x="91.0096%" y="351.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="90.7596%" y="549" width="0.0245%" height="15" fill="rgb(229,146,53)" fg:x="7396" fg:w="2"/><text x="91.0096%" y="559.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.01%)</title><rect x="90.7719%" y="533" width="0.0123%" height="15" fill="rgb(244,52,11)" fg:x="7397" fg:w="1"/><text x="91.0219%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="90.7719%" y="517" width="0.0123%" height="15" fill="rgb(245,211,46)" fg:x="7397" fg:w="1"/><text x="91.0219%" y="527.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.7719%" y="501" width="0.0123%" height="15" fill="rgb(213,8,31)" fg:x="7397" fg:w="1"/><text x="91.0219%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.7719%" y="485" width="0.0123%" height="15" fill="rgb(205,101,39)" fg:x="7397" fg:w="1"/><text x="91.0219%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.7719%" y="469" width="0.0123%" height="15" fill="rgb(212,157,1)" fg:x="7397" fg:w="1"/><text x="91.0219%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="90.7719%" y="453" width="0.0123%" height="15" fill="rgb(232,30,46)" fg:x="7397" fg:w="1"/><text x="91.0219%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.7719%" y="437" width="0.0123%" height="15" fill="rgb(216,201,6)" fg:x="7397" fg:w="1"/><text x="91.0219%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.7719%" y="421" width="0.0123%" height="15" fill="rgb(209,18,6)" fg:x="7397" fg:w="1"/><text x="91.0219%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.7719%" y="405" width="0.0123%" height="15" fill="rgb(219,138,3)" fg:x="7397" fg:w="1"/><text x="91.0219%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="90.7719%" y="389" width="0.0123%" height="15" fill="rgb(210,91,46)" fg:x="7397" fg:w="1"/><text x="91.0219%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="90.7719%" y="373" width="0.0123%" height="15" fill="rgb(241,80,44)" fg:x="7397" fg:w="1"/><text x="91.0219%" y="383.50"></text></g><g><title>core::fmt::Formatter::debug_struct (1 samples, 0.01%)</title><rect x="90.7841%" y="533" width="0.0123%" height="15" fill="rgb(236,205,36)" fg:x="7398" fg:w="1"/><text x="91.0341%" y="543.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.01%)</title><rect x="90.7841%" y="517" width="0.0123%" height="15" fill="rgb(205,59,37)" fg:x="7398" fg:w="1"/><text x="91.0341%" y="527.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="90.7841%" y="501" width="0.0123%" height="15" fill="rgb(239,166,39)" fg:x="7398" fg:w="1"/><text x="91.0341%" y="511.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.7841%" y="485" width="0.0123%" height="15" fill="rgb(239,146,40)" fg:x="7398" fg:w="1"/><text x="91.0341%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.7841%" y="469" width="0.0123%" height="15" fill="rgb(231,11,52)" fg:x="7398" fg:w="1"/><text x="91.0341%" y="479.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="90.7841%" y="453" width="0.0123%" height="15" fill="rgb(253,21,37)" fg:x="7398" fg:w="1"/><text x="91.0341%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.7841%" y="437" width="0.0123%" height="15" fill="rgb(224,87,39)" fg:x="7398" fg:w="1"/><text x="91.0341%" y="447.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.7841%" y="421" width="0.0123%" height="15" fill="rgb(249,15,46)" fg:x="7398" fg:w="1"/><text x="91.0341%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.7841%" y="405" width="0.0123%" height="15" fill="rgb(250,37,51)" fg:x="7398" fg:w="1"/><text x="91.0341%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="90.7841%" y="389" width="0.0123%" height="15" fill="rgb(205,185,43)" fg:x="7398" fg:w="1"/><text x="91.0341%" y="399.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="90.7841%" y="373" width="0.0123%" height="15" fill="rgb(206,65,41)" fg:x="7398" fg:w="1"/><text x="91.0341%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="90.7964%" y="501" width="0.0123%" height="15" fill="rgb(236,159,32)" fg:x="7399" fg:w="1"/><text x="91.0464%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8087%" y="469" width="0.0123%" height="15" fill="rgb(228,199,27)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="479.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::Memory as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8087%" y="453" width="0.0123%" height="15" fill="rgb(212,0,37)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="463.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="90.8087%" y="437" width="0.0123%" height="15" fill="rgb(248,50,11)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="447.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="90.8087%" y="421" width="0.0123%" height="15" fill="rgb(231,164,25)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="90.8087%" y="405" width="0.0123%" height="15" fill="rgb(238,38,39)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="90.8087%" y="389" width="0.0123%" height="15" fill="rgb(210,15,50)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="399.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.8087%" y="373" width="0.0123%" height="15" fill="rgb(251,126,36)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.8087%" y="357" width="0.0123%" height="15" fill="rgb(243,59,26)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="367.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="90.8087%" y="341" width="0.0123%" height="15" fill="rgb(215,24,30)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.8087%" y="325" width="0.0123%" height="15" fill="rgb(253,50,51)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.8087%" y="309" width="0.0123%" height="15" fill="rgb(252,2,16)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.8087%" y="293" width="0.0123%" height="15" fill="rgb(209,123,36)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.8087%" y="277" width="0.0123%" height="15" fill="rgb(245,60,15)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.8087%" y="261" width="0.0123%" height="15" fill="rgb(246,4,13)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="90.8087%" y="245" width="0.0123%" height="15" fill="rgb(210,223,46)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.8087%" y="229" width="0.0123%" height="15" fill="rgb(248,1,9)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="239.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.8087%" y="213" width="0.0123%" height="15" fill="rgb(254,2,34)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="223.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="90.8087%" y="197" width="0.0123%" height="15" fill="rgb(239,176,1)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="90.8087%" y="181" width="0.0123%" height="15" fill="rgb(250,25,32)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="191.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="90.8087%" y="165" width="0.0123%" height="15" fill="rgb(225,28,39)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="175.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="90.8087%" y="149" width="0.0123%" height="15" fill="rgb(230,166,37)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="90.8087%" y="133" width="0.0123%" height="15" fill="rgb(246,220,4)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="143.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="90.8087%" y="117" width="0.0123%" height="15" fill="rgb(219,119,33)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="127.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="90.8087%" y="101" width="0.0123%" height="15" fill="rgb(221,207,38)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="111.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="90.8087%" y="85" width="0.0123%" height="15" fill="rgb(214,153,5)" fg:x="7400" fg:w="1"/><text x="91.0587%" y="95.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="90.8087%" y="485" width="0.0368%" height="15" fill="rgb(223,50,16)" fg:x="7400" fg:w="3"/><text x="91.0587%" y="495.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="90.8210%" y="469" width="0.0245%" height="15" fill="rgb(209,207,12)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="479.50"></text></g><g><title>core::fmt::Formatter::debug_tuple (2 samples, 0.02%)</title><rect x="90.8210%" y="453" width="0.0245%" height="15" fill="rgb(207,3,46)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="463.50"></text></g><g><title>core::fmt::builders::debug_tuple_new (2 samples, 0.02%)</title><rect x="90.8210%" y="437" width="0.0245%" height="15" fill="rgb(232,45,53)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="447.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.02%)</title><rect x="90.8210%" y="421" width="0.0245%" height="15" fill="rgb(206,140,15)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="90.8210%" y="405" width="0.0245%" height="15" fill="rgb(245,66,17)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="90.8210%" y="389" width="0.0245%" height="15" fill="rgb(221,25,37)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="399.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="90.8210%" y="373" width="0.0245%" height="15" fill="rgb(215,99,47)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="90.8210%" y="357" width="0.0245%" height="15" fill="rgb(219,154,44)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="90.8210%" y="341" width="0.0245%" height="15" fill="rgb(210,197,36)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="90.8210%" y="325" width="0.0245%" height="15" fill="rgb(217,137,10)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="90.8210%" y="309" width="0.0245%" height="15" fill="rgb(240,216,26)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="90.8210%" y="293" width="0.0245%" height="15" fill="rgb(242,76,17)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="90.8210%" y="277" width="0.0245%" height="15" fill="rgb(243,142,51)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="90.8210%" y="261" width="0.0245%" height="15" fill="rgb(233,109,46)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="90.8210%" y="245" width="0.0245%" height="15" fill="rgb(252,45,32)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="90.8210%" y="229" width="0.0245%" height="15" fill="rgb(210,69,52)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="90.8210%" y="213" width="0.0245%" height="15" fill="rgb(242,30,2)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="223.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="90.8210%" y="197" width="0.0245%" height="15" fill="rgb(246,137,1)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="207.50"></text></g><g><title>__rdl_realloc (2 samples, 0.02%)</title><rect x="90.8210%" y="181" width="0.0245%" height="15" fill="rgb(221,205,25)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="90.8210%" y="165" width="0.0245%" height="15" fill="rgb(224,44,43)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="175.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="90.8210%" y="149" width="0.0245%" height="15" fill="rgb(209,81,13)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="159.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="90.8210%" y="133" width="0.0245%" height="15" fill="rgb(227,88,4)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="143.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="90.8210%" y="117" width="0.0245%" height="15" fill="rgb(228,118,49)" fg:x="7401" fg:w="2"/><text x="91.0710%" y="127.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (5 samples, 0.06%)</title><rect x="90.7964%" y="533" width="0.0614%" height="15" fill="rgb(225,215,27)" fg:x="7399" fg:w="5"/><text x="91.0464%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (5 samples, 0.06%)</title><rect x="90.7964%" y="517" width="0.0614%" height="15" fill="rgb(235,226,1)" fg:x="7399" fg:w="5"/><text x="91.0464%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (4 samples, 0.05%)</title><rect x="90.8087%" y="501" width="0.0491%" height="15" fill="rgb(205,107,17)" fg:x="7400" fg:w="4"/><text x="91.0587%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="90.8455%" y="485" width="0.0123%" height="15" fill="rgb(247,85,8)" fg:x="7403" fg:w="1"/><text x="91.0955%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.8455%" y="469" width="0.0123%" height="15" fill="rgb(230,220,20)" fg:x="7403" fg:w="1"/><text x="91.0955%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.8455%" y="453" width="0.0123%" height="15" fill="rgb(237,22,6)" fg:x="7403" fg:w="1"/><text x="91.0955%" y="463.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="90.8455%" y="437" width="0.0123%" height="15" fill="rgb(253,39,1)" fg:x="7403" fg:w="1"/><text x="91.0955%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.8455%" y="421" width="0.0123%" height="15" fill="rgb(251,206,50)" fg:x="7403" fg:w="1"/><text x="91.0955%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.8455%" y="405" width="0.0123%" height="15" fill="rgb(239,162,11)" fg:x="7403" fg:w="1"/><text x="91.0955%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.8455%" y="389" width="0.0123%" height="15" fill="rgb(234,164,6)" fg:x="7403" fg:w="1"/><text x="91.0955%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="90.8455%" y="373" width="0.0123%" height="15" fill="rgb(238,112,10)" fg:x="7403" fg:w="1"/><text x="91.0955%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="90.8455%" y="357" width="0.0123%" height="15" fill="rgb(232,78,29)" fg:x="7403" fg:w="1"/><text x="91.0955%" y="367.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::dealloc (9 samples, 0.11%)</title><rect x="90.7596%" y="885" width="0.1104%" height="15" fill="rgb(232,20,13)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="895.50"></text></g><g><title>tracing::span::Span::new (9 samples, 0.11%)</title><rect x="90.7596%" y="869" width="0.1104%" height="15" fill="rgb(222,175,9)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="879.50"></text></g><g><title>tracing_core::dispatcher::get_default (9 samples, 0.11%)</title><rect x="90.7596%" y="853" width="0.1104%" height="15" fill="rgb(233,61,14)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.11%)</title><rect x="90.7596%" y="837" width="0.1104%" height="15" fill="rgb(224,152,29)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="847.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (9 samples, 0.11%)</title><rect x="90.7596%" y="821" width="0.1104%" height="15" fill="rgb(232,26,6)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="831.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (9 samples, 0.11%)</title><rect x="90.7596%" y="805" width="0.1104%" height="15" fill="rgb(210,116,11)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="815.50"></text></g><g><title>tracing::span::Span::new_with (9 samples, 0.11%)</title><rect x="90.7596%" y="789" width="0.1104%" height="15" fill="rgb(238,213,15)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="799.50"></text></g><g><title>tracing::span::Span::make_with (9 samples, 0.11%)</title><rect x="90.7596%" y="773" width="0.1104%" height="15" fill="rgb(236,177,32)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="783.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (9 samples, 0.11%)</title><rect x="90.7596%" y="757" width="0.1104%" height="15" fill="rgb(230,36,43)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (9 samples, 0.11%)</title><rect x="90.7596%" y="741" width="0.1104%" height="15" fill="rgb(212,76,23)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (9 samples, 0.11%)</title><rect x="90.7596%" y="725" width="0.1104%" height="15" fill="rgb(225,168,24)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (9 samples, 0.11%)</title><rect x="90.7596%" y="709" width="0.1104%" height="15" fill="rgb(206,40,44)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="719.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (9 samples, 0.11%)</title><rect x="90.7596%" y="693" width="0.1104%" height="15" fill="rgb(251,213,6)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="703.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (9 samples, 0.11%)</title><rect x="90.7596%" y="677" width="0.1104%" height="15" fill="rgb(220,7,47)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="687.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (9 samples, 0.11%)</title><rect x="90.7596%" y="661" width="0.1104%" height="15" fill="rgb(254,130,53)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="671.50"></text></g><g><title>tracing_core::span::Attributes::record (9 samples, 0.11%)</title><rect x="90.7596%" y="645" width="0.1104%" height="15" fill="rgb(240,2,46)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="655.50"></text></g><g><title>tracing_core::field::ValueSet::record (9 samples, 0.11%)</title><rect x="90.7596%" y="629" width="0.1104%" height="15" fill="rgb(252,144,40)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="639.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (9 samples, 0.11%)</title><rect x="90.7596%" y="613" width="0.1104%" height="15" fill="rgb(226,23,10)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (9 samples, 0.11%)</title><rect x="90.7596%" y="597" width="0.1104%" height="15" fill="rgb(212,204,35)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (9 samples, 0.11%)</title><rect x="90.7596%" y="581" width="0.1104%" height="15" fill="rgb(218,201,15)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="591.50"></text></g><g><title>core::fmt::write (9 samples, 0.11%)</title><rect x="90.7596%" y="565" width="0.1104%" height="15" fill="rgb(224,197,5)" fg:x="7396" fg:w="9"/><text x="91.0096%" y="575.50"></text></g><g><title>&lt;gpu_alloc::linear::LinearBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (7 samples, 0.09%)</title><rect x="90.7841%" y="549" width="0.0859%" height="15" fill="rgb(224,185,18)" fg:x="7398" fg:w="7"/><text x="91.0341%" y="559.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.01%)</title><rect x="90.8578%" y="533" width="0.0123%" height="15" fill="rgb(251,71,45)" fg:x="7404" fg:w="1"/><text x="91.1078%" y="543.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="90.8578%" y="517" width="0.0123%" height="15" fill="rgb(216,74,24)" fg:x="7404" fg:w="1"/><text x="91.1078%" y="527.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish::{{closure}} (1 samples, 0.01%)</title><rect x="90.8578%" y="501" width="0.0123%" height="15" fill="rgb(250,36,51)" fg:x="7404" fg:w="1"/><text x="91.1078%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8700%" y="421" width="0.0123%" height="15" fill="rgb(209,224,28)" fg:x="7405" fg:w="1"/><text x="91.1200%" y="431.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::Memory as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8700%" y="405" width="0.0123%" height="15" fill="rgb(228,5,10)" fg:x="7405" fg:w="1"/><text x="91.1200%" y="415.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="90.8700%" y="389" width="0.0123%" height="15" fill="rgb(250,57,40)" fg:x="7405" fg:w="1"/><text x="91.1200%" y="399.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="90.8700%" y="373" width="0.0123%" height="15" fill="rgb(228,194,41)" fg:x="7405" fg:w="1"/><text x="91.1200%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="90.8700%" y="357" width="0.0123%" height="15" fill="rgb(206,68,23)" fg:x="7405" fg:w="1"/><text x="91.1200%" y="367.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8700%" y="341" width="0.0123%" height="15" fill="rgb(230,33,29)" fg:x="7405" fg:w="1"/><text x="91.1200%" y="351.50"></text></g><g><title>&lt;ash::vk::definitions::Pipeline as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8700%" y="325" width="0.0123%" height="15" fill="rgb(210,39,32)" fg:x="7405" fg:w="1"/><text x="91.1200%" y="335.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="90.8700%" y="437" width="0.0245%" height="15" fill="rgb(236,89,23)" fg:x="7405" fg:w="2"/><text x="91.1200%" y="447.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8823%" y="421" width="0.0123%" height="15" fill="rgb(218,52,52)" fg:x="7406" fg:w="1"/><text x="91.1323%" y="431.50"></text></g><g><title>core::fmt::builders::DebugTuple::field (1 samples, 0.01%)</title><rect x="90.8823%" y="405" width="0.0123%" height="15" fill="rgb(235,154,5)" fg:x="7406" fg:w="1"/><text x="91.1323%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="90.8823%" y="389" width="0.0123%" height="15" fill="rgb(223,168,9)" fg:x="7406" fg:w="1"/><text x="91.1323%" y="399.50"></text></g><g><title>core::fmt::builders::DebugTuple::field::{{closure}} (1 samples, 0.01%)</title><rect x="90.8823%" y="373" width="0.0123%" height="15" fill="rgb(220,8,33)" fg:x="7406" fg:w="1"/><text x="91.1323%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8823%" y="357" width="0.0123%" height="15" fill="rgb(216,176,3)" fg:x="7406" fg:w="1"/><text x="91.1323%" y="367.50"></text></g><g><title>&lt;core::ptr::non_null::NonNull&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8823%" y="341" width="0.0123%" height="15" fill="rgb(254,150,22)" fg:x="7406" fg:w="1"/><text x="91.1323%" y="351.50"></text></g><g><title>&lt;*mut T as core::fmt::Pointer&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8823%" y="325" width="0.0123%" height="15" fill="rgb(231,61,53)" fg:x="7406" fg:w="1"/><text x="91.1323%" y="335.50"></text></g><g><title>&lt;*const T as core::fmt::Pointer&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8823%" y="309" width="0.0123%" height="15" fill="rgb(249,177,41)" fg:x="7406" fg:w="1"/><text x="91.1323%" y="319.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::LowerHex for i64&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8823%" y="293" width="0.0123%" height="15" fill="rgb(221,122,7)" fg:x="7406" fg:w="1"/><text x="91.1323%" y="303.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="90.8823%" y="277" width="0.0123%" height="15" fill="rgb(215,115,7)" fg:x="7406" fg:w="1"/><text x="91.1323%" y="287.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (12 samples, 0.15%)</title><rect x="90.7596%" y="1093" width="0.1473%" height="15" fill="rgb(218,108,33)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (12 samples, 0.15%)</title><rect x="90.7596%" y="1077" width="0.1473%" height="15" fill="rgb(221,205,39)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="1087.50"></text></g><g><title>core::ops::function::Fn::call (12 samples, 0.15%)</title><rect x="90.7596%" y="1061" width="0.1473%" height="15" fill="rgb(220,171,18)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="1071.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (12 samples, 0.15%)</title><rect x="90.7596%" y="1045" width="0.1473%" height="15" fill="rgb(236,188,29)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="1055.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (12 samples, 0.15%)</title><rect x="90.7596%" y="1029" width="0.1473%" height="15" fill="rgb(239,29,5)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="1039.50"></text></g><g><title>wgpu::Device::poll (12 samples, 0.15%)</title><rect x="90.7596%" y="1013" width="0.1473%" height="15" fill="rgb(236,114,44)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="1023.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (12 samples, 0.15%)</title><rect x="90.7596%" y="997" width="0.1473%" height="15" fill="rgb(239,214,48)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="1007.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (12 samples, 0.15%)</title><rect x="90.7596%" y="981" width="0.1473%" height="15" fill="rgb(241,56,8)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="991.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (12 samples, 0.15%)</title><rect x="90.7596%" y="965" width="0.1473%" height="15" fill="rgb(228,201,0)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="975.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (12 samples, 0.15%)</title><rect x="90.7596%" y="949" width="0.1473%" height="15" fill="rgb(226,219,34)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="959.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (12 samples, 0.15%)</title><rect x="90.7596%" y="933" width="0.1473%" height="15" fill="rgb(209,204,54)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="943.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (12 samples, 0.15%)</title><rect x="90.7596%" y="917" width="0.1473%" height="15" fill="rgb(251,160,17)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="927.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (12 samples, 0.15%)</title><rect x="90.7596%" y="901" width="0.1473%" height="15" fill="rgb(235,15,25)" fg:x="7396" fg:w="12"/><text x="91.0096%" y="911.50"></text></g><g><title>tracing::span::Span::new (3 samples, 0.04%)</title><rect x="90.8700%" y="885" width="0.0368%" height="15" fill="rgb(216,209,28)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="895.50"></text></g><g><title>tracing_core::dispatcher::get_default (3 samples, 0.04%)</title><rect x="90.8700%" y="869" width="0.0368%" height="15" fill="rgb(248,123,21)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="90.8700%" y="853" width="0.0368%" height="15" fill="rgb(226,138,44)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="863.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (3 samples, 0.04%)</title><rect x="90.8700%" y="837" width="0.0368%" height="15" fill="rgb(211,104,54)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="847.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (3 samples, 0.04%)</title><rect x="90.8700%" y="821" width="0.0368%" height="15" fill="rgb(241,198,15)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="831.50"></text></g><g><title>tracing::span::Span::new_with (3 samples, 0.04%)</title><rect x="90.8700%" y="805" width="0.0368%" height="15" fill="rgb(227,155,54)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="815.50"></text></g><g><title>tracing::span::Span::make_with (3 samples, 0.04%)</title><rect x="90.8700%" y="789" width="0.0368%" height="15" fill="rgb(225,131,31)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="799.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (3 samples, 0.04%)</title><rect x="90.8700%" y="773" width="0.0368%" height="15" fill="rgb(242,40,17)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.04%)</title><rect x="90.8700%" y="757" width="0.0368%" height="15" fill="rgb(254,57,35)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.04%)</title><rect x="90.8700%" y="741" width="0.0368%" height="15" fill="rgb(240,64,32)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (3 samples, 0.04%)</title><rect x="90.8700%" y="725" width="0.0368%" height="15" fill="rgb(251,136,26)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="735.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (3 samples, 0.04%)</title><rect x="90.8700%" y="709" width="0.0368%" height="15" fill="rgb(208,60,54)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="719.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="90.8700%" y="693" width="0.0368%" height="15" fill="rgb(220,13,12)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="703.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="90.8700%" y="677" width="0.0368%" height="15" fill="rgb(213,149,1)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="687.50"></text></g><g><title>tracing_core::span::Attributes::record (3 samples, 0.04%)</title><rect x="90.8700%" y="661" width="0.0368%" height="15" fill="rgb(212,191,39)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="671.50"></text></g><g><title>tracing_core::field::ValueSet::record (3 samples, 0.04%)</title><rect x="90.8700%" y="645" width="0.0368%" height="15" fill="rgb(215,221,42)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="655.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (3 samples, 0.04%)</title><rect x="90.8700%" y="629" width="0.0368%" height="15" fill="rgb(244,79,23)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (3 samples, 0.04%)</title><rect x="90.8700%" y="613" width="0.0368%" height="15" fill="rgb(247,17,29)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="623.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.04%)</title><rect x="90.8700%" y="597" width="0.0368%" height="15" fill="rgb(251,221,21)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="607.50"></text></g><g><title>core::fmt::write (3 samples, 0.04%)</title><rect x="90.8700%" y="581" width="0.0368%" height="15" fill="rgb(207,202,34)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="591.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="90.8700%" y="565" width="0.0368%" height="15" fill="rgb(217,4,34)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="575.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (3 samples, 0.04%)</title><rect x="90.8700%" y="549" width="0.0368%" height="15" fill="rgb(253,17,16)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="559.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.04%)</title><rect x="90.8700%" y="533" width="0.0368%" height="15" fill="rgb(223,91,48)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="543.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (3 samples, 0.04%)</title><rect x="90.8700%" y="517" width="0.0368%" height="15" fill="rgb(244,191,22)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="527.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlockFlavor&lt;M&gt; as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="90.8700%" y="501" width="0.0368%" height="15" fill="rgb(211,107,14)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="511.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (3 samples, 0.04%)</title><rect x="90.8700%" y="485" width="0.0368%" height="15" fill="rgb(232,81,23)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="495.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.04%)</title><rect x="90.8700%" y="469" width="0.0368%" height="15" fill="rgb(237,126,14)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="479.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (3 samples, 0.04%)</title><rect x="90.8700%" y="453" width="0.0368%" height="15" fill="rgb(230,65,39)" fg:x="7405" fg:w="3"/><text x="91.1200%" y="463.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="90.8946%" y="437" width="0.0123%" height="15" fill="rgb(208,106,41)" fg:x="7407" fg:w="1"/><text x="91.1446%" y="447.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.8946%" y="421" width="0.0123%" height="15" fill="rgb(206,125,25)" fg:x="7407" fg:w="1"/><text x="91.1446%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="90.8946%" y="405" width="0.0123%" height="15" fill="rgb(250,24,29)" fg:x="7407" fg:w="1"/><text x="91.1446%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="90.8946%" y="389" width="0.0123%" height="15" fill="rgb(226,49,32)" fg:x="7407" fg:w="1"/><text x="91.1446%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.8946%" y="373" width="0.0123%" height="15" fill="rgb(217,110,16)" fg:x="7407" fg:w="1"/><text x="91.1446%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.8946%" y="357" width="0.0123%" height="15" fill="rgb(252,16,53)" fg:x="7407" fg:w="1"/><text x="91.1446%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.8946%" y="341" width="0.0123%" height="15" fill="rgb(238,163,11)" fg:x="7407" fg:w="1"/><text x="91.1446%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="90.8946%" y="325" width="0.0123%" height="15" fill="rgb(206,210,1)" fg:x="7407" fg:w="1"/><text x="91.1446%" y="335.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="90.8946%" y="309" width="0.0123%" height="15" fill="rgb(229,8,25)" fg:x="7407" fg:w="1"/><text x="91.1446%" y="319.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (13 samples, 0.16%)</title><rect x="90.7596%" y="1365" width="0.1595%" height="15" fill="rgb(247,155,23)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1375.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (13 samples, 0.16%)</title><rect x="90.7596%" y="1349" width="0.1595%" height="15" fill="rgb(207,26,7)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1359.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (13 samples, 0.16%)</title><rect x="90.7596%" y="1333" width="0.1595%" height="15" fill="rgb(215,179,12)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1343.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (13 samples, 0.16%)</title><rect x="90.7596%" y="1317" width="0.1595%" height="15" fill="rgb(238,208,11)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1327.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (13 samples, 0.16%)</title><rect x="90.7596%" y="1301" width="0.1595%" height="15" fill="rgb(238,102,42)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1311.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (13 samples, 0.16%)</title><rect x="90.7596%" y="1285" width="0.1595%" height="15" fill="rgb(239,35,9)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1295.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.16%)</title><rect x="90.7596%" y="1269" width="0.1595%" height="15" fill="rgb(244,182,30)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1279.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.16%)</title><rect x="90.7596%" y="1253" width="0.1595%" height="15" fill="rgb(232,181,23)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1263.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (13 samples, 0.16%)</title><rect x="90.7596%" y="1237" width="0.1595%" height="15" fill="rgb(242,154,29)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1247.50"></text></g><g><title>async_executor::Executor::try_tick (13 samples, 0.16%)</title><rect x="90.7596%" y="1221" width="0.1595%" height="15" fill="rgb(219,23,2)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1231.50"></text></g><g><title>async_task::runnable::Runnable::run (13 samples, 0.16%)</title><rect x="90.7596%" y="1205" width="0.1595%" height="15" fill="rgb(234,94,43)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1215.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (13 samples, 0.16%)</title><rect x="90.7596%" y="1189" width="0.1595%" height="15" fill="rgb(223,55,45)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1199.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.16%)</title><rect x="90.7596%" y="1173" width="0.1595%" height="15" fill="rgb(241,215,54)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1183.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (13 samples, 0.16%)</title><rect x="90.7596%" y="1157" width="0.1595%" height="15" fill="rgb(247,63,53)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.16%)</title><rect x="90.7596%" y="1141" width="0.1595%" height="15" fill="rgb(220,166,7)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1151.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (13 samples, 0.16%)</title><rect x="90.7596%" y="1125" width="0.1595%" height="15" fill="rgb(248,53,45)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1135.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (13 samples, 0.16%)</title><rect x="90.7596%" y="1109" width="0.1595%" height="15" fill="rgb(224,207,20)" fg:x="7396" fg:w="13"/><text x="91.0096%" y="1119.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="90.9069%" y="1093" width="0.0123%" height="15" fill="rgb(244,185,11)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="90.9069%" y="1077" width="0.0123%" height="15" fill="rgb(230,13,42)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="1087.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="90.9069%" y="1061" width="0.0123%" height="15" fill="rgb(243,191,18)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="1071.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (1 samples, 0.01%)</title><rect x="90.9069%" y="1045" width="0.0123%" height="15" fill="rgb(249,135,15)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="1055.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="90.9069%" y="1029" width="0.0123%" height="15" fill="rgb(229,26,35)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="1039.50"></text></g><g><title>wgpu::Device::poll (1 samples, 0.01%)</title><rect x="90.9069%" y="1013" width="0.0123%" height="15" fill="rgb(216,191,16)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="1023.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (1 samples, 0.01%)</title><rect x="90.9069%" y="997" width="0.0123%" height="15" fill="rgb(242,18,7)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="1007.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (1 samples, 0.01%)</title><rect x="90.9069%" y="981" width="0.0123%" height="15" fill="rgb(205,128,17)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="991.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="90.9069%" y="965" width="0.0123%" height="15" fill="rgb(229,199,44)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="975.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (1 samples, 0.01%)</title><rect x="90.9069%" y="949" width="0.0123%" height="15" fill="rgb(234,222,3)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (1 samples, 0.01%)</title><rect x="90.9069%" y="933" width="0.0123%" height="15" fill="rgb(220,170,20)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="90.9069%" y="917" width="0.0123%" height="15" fill="rgb(207,138,8)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="90.9069%" y="901" width="0.0123%" height="15" fill="rgb(244,130,36)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="90.9069%" y="885" width="0.0123%" height="15" fill="rgb(207,197,52)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="90.9069%" y="869" width="0.0123%" height="15" fill="rgb(206,9,21)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.9069%" y="853" width="0.0123%" height="15" fill="rgb(250,15,47)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="90.9069%" y="837" width="0.0123%" height="15" fill="rgb(235,202,14)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="90.9069%" y="821" width="0.0123%" height="15" fill="rgb(211,180,47)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="90.9069%" y="805" width="0.0123%" height="15" fill="rgb(209,61,11)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;)&gt; (1 samples, 0.01%)</title><rect x="90.9069%" y="789" width="0.0123%" height="15" fill="rgb(243,197,29)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="90.9069%" y="773" width="0.0123%" height="15" fill="rgb(216,185,16)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="90.9069%" y="757" width="0.0123%" height="15" fill="rgb(248,5,15)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="767.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="90.9069%" y="741" width="0.0123%" height="15" fill="rgb(240,39,41)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="751.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="90.9069%" y="725" width="0.0123%" height="15" fill="rgb(224,220,43)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="90.9069%" y="709" width="0.0123%" height="15" fill="rgb(215,21,24)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="90.9069%" y="693" width="0.0123%" height="15" fill="rgb(220,102,8)" fg:x="7408" fg:w="1"/><text x="91.1569%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (19 samples, 0.23%)</title><rect x="90.9191%" y="1349" width="0.2332%" height="15" fill="rgb(225,185,10)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1359.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (19 samples, 0.23%)</title><rect x="90.9191%" y="1333" width="0.2332%" height="15" fill="rgb(212,108,24)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1343.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (19 samples, 0.23%)</title><rect x="90.9191%" y="1317" width="0.2332%" height="15" fill="rgb(237,27,0)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (19 samples, 0.23%)</title><rect x="90.9191%" y="1301" width="0.2332%" height="15" fill="rgb(212,106,38)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (19 samples, 0.23%)</title><rect x="90.9191%" y="1285" width="0.2332%" height="15" fill="rgb(210,125,30)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1295.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (19 samples, 0.23%)</title><rect x="90.9191%" y="1269" width="0.2332%" height="15" fill="rgb(215,219,1)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1279.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (19 samples, 0.23%)</title><rect x="90.9191%" y="1253" width="0.2332%" height="15" fill="rgb(223,10,12)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (19 samples, 0.23%)</title><rect x="90.9191%" y="1237" width="0.2332%" height="15" fill="rgb(245,40,34)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (19 samples, 0.23%)</title><rect x="90.9191%" y="1221" width="0.2332%" height="15" fill="rgb(211,185,19)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (19 samples, 0.23%)</title><rect x="90.9191%" y="1205" width="0.2332%" height="15" fill="rgb(243,190,43)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1215.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (19 samples, 0.23%)</title><rect x="90.9191%" y="1189" width="0.2332%" height="15" fill="rgb(232,208,29)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1199.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (19 samples, 0.23%)</title><rect x="90.9191%" y="1173" width="0.2332%" height="15" fill="rgb(234,134,27)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1183.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (19 samples, 0.23%)</title><rect x="90.9191%" y="1157" width="0.2332%" height="15" fill="rgb(225,41,29)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1167.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (19 samples, 0.23%)</title><rect x="90.9191%" y="1141" width="0.2332%" height="15" fill="rgb(241,214,44)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1151.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (19 samples, 0.23%)</title><rect x="90.9191%" y="1125" width="0.2332%" height="15" fill="rgb(205,219,41)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1135.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (19 samples, 0.23%)</title><rect x="90.9191%" y="1109" width="0.2332%" height="15" fill="rgb(226,15,26)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1119.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (19 samples, 0.23%)</title><rect x="90.9191%" y="1093" width="0.2332%" height="15" fill="rgb(210,83,41)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.23%)</title><rect x="90.9191%" y="1077" width="0.2332%" height="15" fill="rgb(247,9,39)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.23%)</title><rect x="90.9191%" y="1061" width="0.2332%" height="15" fill="rgb(209,37,30)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.23%)</title><rect x="90.9191%" y="1045" width="0.2332%" height="15" fill="rgb(248,170,46)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.23%)</title><rect x="90.9191%" y="1029" width="0.2332%" height="15" fill="rgb(237,129,44)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.23%)</title><rect x="90.9191%" y="1013" width="0.2332%" height="15" fill="rgb(225,117,51)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.23%)</title><rect x="90.9191%" y="997" width="0.2332%" height="15" fill="rgb(212,165,2)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.23%)</title><rect x="90.9191%" y="981" width="0.2332%" height="15" fill="rgb(213,53,45)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.23%)</title><rect x="90.9191%" y="965" width="0.2332%" height="15" fill="rgb(220,148,3)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.23%)</title><rect x="90.9191%" y="949" width="0.2332%" height="15" fill="rgb(228,37,29)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.23%)</title><rect x="90.9191%" y="933" width="0.2332%" height="15" fill="rgb(209,76,29)" fg:x="7409" fg:w="19"/><text x="91.1691%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.16%)</title><rect x="90.9928%" y="917" width="0.1595%" height="15" fill="rgb(215,90,5)" fg:x="7415" fg:w="13"/><text x="91.2428%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="91.0787%" y="901" width="0.0736%" height="15" fill="rgb(227,207,32)" fg:x="7422" fg:w="6"/><text x="91.3287%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="91.1032%" y="885" width="0.0491%" height="15" fill="rgb(251,218,44)" fg:x="7424" fg:w="4"/><text x="91.3532%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="91.1277%" y="869" width="0.0245%" height="15" fill="rgb(211,44,16)" fg:x="7426" fg:w="2"/><text x="91.3777%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="91.1277%" y="853" width="0.0245%" height="15" fill="rgb(242,170,37)" fg:x="7426" fg:w="2"/><text x="91.3777%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.1400%" y="837" width="0.0123%" height="15" fill="rgb(205,181,22)" fg:x="7427" fg:w="1"/><text x="91.3900%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.1400%" y="821" width="0.0123%" height="15" fill="rgb(228,130,19)" fg:x="7427" fg:w="1"/><text x="91.3900%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.1400%" y="805" width="0.0123%" height="15" fill="rgb(228,9,15)" fg:x="7427" fg:w="1"/><text x="91.3900%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.1400%" y="789" width="0.0123%" height="15" fill="rgb(219,66,48)" fg:x="7427" fg:w="1"/><text x="91.3900%" y="799.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (1 samples, 0.01%)</title><rect x="91.1523%" y="1189" width="0.0123%" height="15" fill="rgb(234,203,10)" fg:x="7428" fg:w="1"/><text x="91.4023%" y="1199.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (1 samples, 0.01%)</title><rect x="91.1523%" y="1173" width="0.0123%" height="15" fill="rgb(219,209,1)" fg:x="7428" fg:w="1"/><text x="91.4023%" y="1183.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (1 samples, 0.01%)</title><rect x="91.1523%" y="1157" width="0.0123%" height="15" fill="rgb(206,167,9)" fg:x="7428" fg:w="1"/><text x="91.4023%" y="1167.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (1 samples, 0.01%)</title><rect x="91.1523%" y="1141" width="0.0123%" height="15" fill="rgb(210,11,39)" fg:x="7428" fg:w="1"/><text x="91.4023%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.1523%" y="1125" width="0.0123%" height="15" fill="rgb(251,90,47)" fg:x="7428" fg:w="1"/><text x="91.4023%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.1523%" y="1109" width="0.0123%" height="15" fill="rgb(237,7,4)" fg:x="7428" fg:w="1"/><text x="91.4023%" y="1119.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (2 samples, 0.02%)</title><rect x="91.1523%" y="1269" width="0.0245%" height="15" fill="rgb(232,205,47)" fg:x="7428" fg:w="2"/><text x="91.4023%" y="1279.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (2 samples, 0.02%)</title><rect x="91.1523%" y="1253" width="0.0245%" height="15" fill="rgb(215,86,48)" fg:x="7428" fg:w="2"/><text x="91.4023%" y="1263.50"></text></g><g><title>wgpu::Device::create_command_encoder (2 samples, 0.02%)</title><rect x="91.1523%" y="1237" width="0.0245%" height="15" fill="rgb(232,14,47)" fg:x="7428" fg:w="2"/><text x="91.4023%" y="1247.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (2 samples, 0.02%)</title><rect x="91.1523%" y="1221" width="0.0245%" height="15" fill="rgb(240,28,46)" fg:x="7428" fg:w="2"/><text x="91.4023%" y="1231.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (2 samples, 0.02%)</title><rect x="91.1523%" y="1205" width="0.0245%" height="15" fill="rgb(224,85,5)" fg:x="7428" fg:w="2"/><text x="91.4023%" y="1215.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate (1 samples, 0.01%)</title><rect x="91.1646%" y="1189" width="0.0123%" height="15" fill="rgb(219,34,25)" fg:x="7429" fg:w="1"/><text x="91.4146%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="91.1646%" y="1173" width="0.0123%" height="15" fill="rgb(247,137,45)" fg:x="7429" fg:w="1"/><text x="91.4146%" y="1183.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="91.1646%" y="1157" width="0.0123%" height="15" fill="rgb(237,121,47)" fg:x="7429" fg:w="1"/><text x="91.4146%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="91.1646%" y="1141" width="0.0123%" height="15" fill="rgb(247,148,27)" fg:x="7429" fg:w="1"/><text x="91.4146%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="91.1646%" y="1125" width="0.0123%" height="15" fill="rgb(220,44,0)" fg:x="7429" fg:w="1"/><text x="91.4146%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="91.1646%" y="1109" width="0.0123%" height="15" fill="rgb(236,61,29)" fg:x="7429" fg:w="1"/><text x="91.4146%" y="1119.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="91.1646%" y="1093" width="0.0123%" height="15" fill="rgb(244,180,35)" fg:x="7429" fg:w="1"/><text x="91.4146%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="91.1646%" y="1077" width="0.0123%" height="15" fill="rgb(242,14,54)" fg:x="7429" fg:w="1"/><text x="91.4146%" y="1087.50"></text></g><g><title>wgpu::Buffer::unmap (4 samples, 0.05%)</title><rect x="91.1768%" y="1221" width="0.0491%" height="15" fill="rgb(206,24,45)" fg:x="7430" fg:w="4"/><text x="91.4268%" y="1231.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (4 samples, 0.05%)</title><rect x="91.1768%" y="1205" width="0.0491%" height="15" fill="rgb(215,211,6)" fg:x="7430" fg:w="4"/><text x="91.4268%" y="1215.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (4 samples, 0.05%)</title><rect x="91.1768%" y="1189" width="0.0491%" height="15" fill="rgb(207,56,2)" fg:x="7430" fg:w="4"/><text x="91.4268%" y="1199.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (4 samples, 0.05%)</title><rect x="91.1768%" y="1173" width="0.0491%" height="15" fill="rgb(220,135,9)" fg:x="7430" fg:w="4"/><text x="91.4268%" y="1183.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (4 samples, 0.05%)</title><rect x="91.1768%" y="1157" width="0.0491%" height="15" fill="rgb(214,145,52)" fg:x="7430" fg:w="4"/><text x="91.4268%" y="1167.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (4 samples, 0.05%)</title><rect x="91.1768%" y="1141" width="0.0491%" height="15" fill="rgb(241,83,53)" fg:x="7430" fg:w="4"/><text x="91.4268%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="91.1768%" y="1125" width="0.0491%" height="15" fill="rgb(222,66,13)" fg:x="7430" fg:w="4"/><text x="91.4268%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="91.1768%" y="1109" width="0.0491%" height="15" fill="rgb(239,164,54)" fg:x="7430" fg:w="4"/><text x="91.4268%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="91.1891%" y="1093" width="0.0368%" height="15" fill="rgb(216,189,13)" fg:x="7431" fg:w="3"/><text x="91.4391%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="91.2014%" y="1077" width="0.0245%" height="15" fill="rgb(228,212,51)" fg:x="7432" fg:w="2"/><text x="91.4514%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;tracing_core::span::Id,tracing_subscriber::filter::env::directive::MatchSet&lt;tracing_subscriber::filter::env::field::SpanMatch&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="91.2259%" y="997" width="0.0123%" height="15" fill="rgb(207,190,21)" fg:x="7434" fg:w="1"/><text x="91.4759%" y="1007.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.2259%" y="981" width="0.0123%" height="15" fill="rgb(245,28,35)" fg:x="7434" fg:w="1"/><text x="91.4759%" y="991.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.01%)</title><rect x="91.2259%" y="965" width="0.0123%" height="15" fill="rgb(239,23,40)" fg:x="7434" fg:w="1"/><text x="91.4759%" y="975.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.01%)</title><rect x="91.2259%" y="949" width="0.0123%" height="15" fill="rgb(242,10,51)" fg:x="7434" fg:w="1"/><text x="91.4759%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="91.2259%" y="933" width="0.0123%" height="15" fill="rgb(207,186,5)" fg:x="7434" fg:w="1"/><text x="91.4759%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="91.2259%" y="917" width="0.0123%" height="15" fill="rgb(242,21,16)" fg:x="7434" fg:w="1"/><text x="91.4759%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (2 samples, 0.02%)</title><rect x="91.2259%" y="1125" width="0.0245%" height="15" fill="rgb(237,0,53)" fg:x="7434" fg:w="2"/><text x="91.4759%" y="1135.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="91.2259%" y="1109" width="0.0245%" height="15" fill="rgb(215,8,52)" fg:x="7434" fg:w="2"/><text x="91.4759%" y="1119.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (2 samples, 0.02%)</title><rect x="91.2259%" y="1093" width="0.0245%" height="15" fill="rgb(248,62,44)" fg:x="7434" fg:w="2"/><text x="91.4759%" y="1103.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="91.2259%" y="1077" width="0.0245%" height="15" fill="rgb(224,83,15)" fg:x="7434" fg:w="2"/><text x="91.4759%" y="1087.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="91.2259%" y="1061" width="0.0245%" height="15" fill="rgb(249,100,46)" fg:x="7434" fg:w="2"/><text x="91.4759%" y="1071.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="91.2259%" y="1045" width="0.0245%" height="15" fill="rgb(213,35,48)" fg:x="7434" fg:w="2"/><text x="91.4759%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close (2 samples, 0.02%)</title><rect x="91.2259%" y="1029" width="0.0245%" height="15" fill="rgb(251,2,13)" fg:x="7434" fg:w="2"/><text x="91.4759%" y="1039.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (2 samples, 0.02%)</title><rect x="91.2259%" y="1013" width="0.0245%" height="15" fill="rgb(212,132,21)" fg:x="7434" fg:w="2"/><text x="91.4759%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.01%)</title><rect x="91.2382%" y="997" width="0.0123%" height="15" fill="rgb(247,17,21)" fg:x="7435" fg:w="1"/><text x="91.4882%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="91.2382%" y="981" width="0.0123%" height="15" fill="rgb(220,177,38)" fg:x="7435" fg:w="1"/><text x="91.4882%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="91.2382%" y="965" width="0.0123%" height="15" fill="rgb(233,219,21)" fg:x="7435" fg:w="1"/><text x="91.4882%" y="975.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="91.2382%" y="949" width="0.0123%" height="15" fill="rgb(246,17,7)" fg:x="7435" fg:w="1"/><text x="91.4882%" y="959.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="91.2382%" y="933" width="0.0123%" height="15" fill="rgb(212,4,22)" fg:x="7435" fg:w="1"/><text x="91.4882%" y="943.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="91.2505%" y="933" width="0.0123%" height="15" fill="rgb(243,85,21)" fg:x="7436" fg:w="1"/><text x="91.5005%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2 samples, 0.02%)</title><rect x="91.2505%" y="1093" width="0.0245%" height="15" fill="rgb(232,218,2)" fg:x="7436" fg:w="2"/><text x="91.5005%" y="1103.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="91.2505%" y="1077" width="0.0245%" height="15" fill="rgb(253,168,47)" fg:x="7436" fg:w="2"/><text x="91.5005%" y="1087.50"></text></g><g><title>tracing::span::Span::do_exit (2 samples, 0.02%)</title><rect x="91.2505%" y="1061" width="0.0245%" height="15" fill="rgb(238,101,25)" fg:x="7436" fg:w="2"/><text x="91.5005%" y="1071.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (2 samples, 0.02%)</title><rect x="91.2505%" y="1045" width="0.0245%" height="15" fill="rgb(251,86,12)" fg:x="7436" fg:w="2"/><text x="91.5005%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.02%)</title><rect x="91.2505%" y="1029" width="0.0245%" height="15" fill="rgb(241,112,44)" fg:x="7436" fg:w="2"/><text x="91.5005%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.02%)</title><rect x="91.2505%" y="1013" width="0.0245%" height="15" fill="rgb(224,28,25)" fg:x="7436" fg:w="2"/><text x="91.5005%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.02%)</title><rect x="91.2505%" y="997" width="0.0245%" height="15" fill="rgb(209,201,1)" fg:x="7436" fg:w="2"/><text x="91.5005%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.02%)</title><rect x="91.2505%" y="981" width="0.0245%" height="15" fill="rgb(231,30,22)" fg:x="7436" fg:w="2"/><text x="91.5005%" y="991.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="91.2505%" y="965" width="0.0245%" height="15" fill="rgb(247,96,31)" fg:x="7436" fg:w="2"/><text x="91.5005%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="91.2505%" y="949" width="0.0245%" height="15" fill="rgb(251,100,12)" fg:x="7436" fg:w="2"/><text x="91.5005%" y="959.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="91.2627%" y="933" width="0.0123%" height="15" fill="rgb(224,174,7)" fg:x="7437" fg:w="1"/><text x="91.5127%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::{{closure}} (1 samples, 0.01%)</title><rect x="91.2627%" y="917" width="0.0123%" height="15" fill="rgb(231,168,19)" fg:x="7437" fg:w="1"/><text x="91.5127%" y="927.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="91.2627%" y="901" width="0.0123%" height="15" fill="rgb(226,85,5)" fg:x="7437" fg:w="1"/><text x="91.5127%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="91.2627%" y="885" width="0.0123%" height="15" fill="rgb(210,215,5)" fg:x="7437" fg:w="1"/><text x="91.5127%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="91.2627%" y="869" width="0.0123%" height="15" fill="rgb(233,70,8)" fg:x="7437" fg:w="1"/><text x="91.5127%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.01%)</title><rect x="91.2627%" y="853" width="0.0123%" height="15" fill="rgb(229,109,53)" fg:x="7437" fg:w="1"/><text x="91.5127%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.01%)</title><rect x="91.2627%" y="837" width="0.0123%" height="15" fill="rgb(213,125,35)" fg:x="7437" fg:w="1"/><text x="91.5127%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.2627%" y="821" width="0.0123%" height="15" fill="rgb(215,12,48)" fg:x="7437" fg:w="1"/><text x="91.5127%" y="831.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="91.2627%" y="805" width="0.0123%" height="15" fill="rgb(207,12,38)" fg:x="7437" fg:w="1"/><text x="91.5127%" y="815.50"></text></g><g><title>tracing_subscriber::registry::sharded::CLOSE_COUNT::__getit (1 samples, 0.01%)</title><rect x="91.2627%" y="789" width="0.0123%" height="15" fill="rgb(216,229,2)" fg:x="7437" fg:w="1"/><text x="91.5127%" y="799.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="91.2627%" y="773" width="0.0123%" height="15" fill="rgb(229,209,31)" fg:x="7437" fg:w="1"/><text x="91.5127%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (3 samples, 0.04%)</title><rect x="91.2750%" y="1093" width="0.0368%" height="15" fill="rgb(239,57,22)" fg:x="7438" fg:w="3"/><text x="91.5250%" y="1103.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (3 samples, 0.04%)</title><rect x="91.2750%" y="1077" width="0.0368%" height="15" fill="rgb(239,119,54)" fg:x="7438" fg:w="3"/><text x="91.5250%" y="1087.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (2 samples, 0.02%)</title><rect x="91.2873%" y="1061" width="0.0245%" height="15" fill="rgb(231,80,45)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="91.2873%" y="1045" width="0.0245%" height="15" fill="rgb(219,138,19)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (2 samples, 0.02%)</title><rect x="91.2873%" y="1029" width="0.0245%" height="15" fill="rgb(216,53,26)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (2 samples, 0.02%)</title><rect x="91.2873%" y="1013" width="0.0245%" height="15" fill="rgb(224,30,16)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (2 samples, 0.02%)</title><rect x="91.2873%" y="997" width="0.0245%" height="15" fill="rgb(224,151,24)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="91.2873%" y="981" width="0.0245%" height="15" fill="rgb(236,75,7)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="91.2873%" y="965" width="0.0245%" height="15" fill="rgb(248,106,42)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="975.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (2 samples, 0.02%)</title><rect x="91.2873%" y="949" width="0.0245%" height="15" fill="rgb(222,217,11)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="959.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (2 samples, 0.02%)</title><rect x="91.2873%" y="933" width="0.0245%" height="15" fill="rgb(234,143,31)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="91.2873%" y="917" width="0.0245%" height="15" fill="rgb(237,148,28)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="927.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::{{closure}} (2 samples, 0.02%)</title><rect x="91.2873%" y="901" width="0.0245%" height="15" fill="rgb(241,151,6)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="911.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (2 samples, 0.02%)</title><rect x="91.2873%" y="885" width="0.0245%" height="15" fill="rgb(226,55,18)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="895.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (2 samples, 0.02%)</title><rect x="91.2873%" y="869" width="0.0245%" height="15" fill="rgb(226,196,6)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="879.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="91.2873%" y="853" width="0.0245%" height="15" fill="rgb(251,228,11)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="863.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::{{closure}} (2 samples, 0.02%)</title><rect x="91.2873%" y="837" width="0.0245%" height="15" fill="rgb(219,197,15)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="847.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (2 samples, 0.02%)</title><rect x="91.2873%" y="821" width="0.0245%" height="15" fill="rgb(243,105,44)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="831.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (2 samples, 0.02%)</title><rect x="91.2873%" y="805" width="0.0245%" height="15" fill="rgb(205,183,40)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (2 samples, 0.02%)</title><rect x="91.2873%" y="789" width="0.0245%" height="15" fill="rgb(232,138,46)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="799.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (2 samples, 0.02%)</title><rect x="91.2873%" y="773" width="0.0245%" height="15" fill="rgb(234,161,14)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="783.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::{{closure}} (2 samples, 0.02%)</title><rect x="91.2873%" y="757" width="0.0245%" height="15" fill="rgb(238,211,18)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}} (2 samples, 0.02%)</title><rect x="91.2873%" y="741" width="0.0245%" height="15" fill="rgb(217,130,2)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="91.2873%" y="725" width="0.0245%" height="15" fill="rgb(251,17,29)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="735.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="91.2873%" y="709" width="0.0245%" height="15" fill="rgb(243,18,0)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (2 samples, 0.02%)</title><rect x="91.2873%" y="693" width="0.0245%" height="15" fill="rgb(227,220,45)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="703.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::clear (2 samples, 0.02%)</title><rect x="91.2873%" y="677" width="0.0245%" height="15" fill="rgb(212,34,2)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (2 samples, 0.02%)</title><rect x="91.2873%" y="661" width="0.0245%" height="15" fill="rgb(236,23,8)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (2 samples, 0.02%)</title><rect x="91.2873%" y="645" width="0.0245%" height="15" fill="rgb(210,113,39)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (2 samples, 0.02%)</title><rect x="91.2873%" y="629" width="0.0245%" height="15" fill="rgb(243,123,48)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (2 samples, 0.02%)</title><rect x="91.2873%" y="613" width="0.0245%" height="15" fill="rgb(223,175,36)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.02%)</title><rect x="91.2873%" y="597" width="0.0245%" height="15" fill="rgb(226,100,30)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.02%)</title><rect x="91.2873%" y="581" width="0.0245%" height="15" fill="rgb(221,225,39)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt; (2 samples, 0.02%)</title><rect x="91.2873%" y="565" width="0.0245%" height="15" fill="rgb(224,222,42)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;&gt; (2 samples, 0.02%)</title><rect x="91.2873%" y="549" width="0.0245%" height="15" fill="rgb(221,53,1)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="559.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="91.2873%" y="533" width="0.0245%" height="15" fill="rgb(216,187,48)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="543.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="91.2873%" y="517" width="0.0245%" height="15" fill="rgb(220,108,2)" fg:x="7439" fg:w="2"/><text x="91.5373%" y="527.50"></text></g><g><title>tracing::__macro_support::MacroCallsite::interest (1 samples, 0.01%)</title><rect x="91.3118%" y="1093" width="0.0123%" height="15" fill="rgb(216,13,42)" fg:x="7441" fg:w="1"/><text x="91.5618%" y="1103.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="91.3118%" y="1077" width="0.0123%" height="15" fill="rgb(205,14,29)" fg:x="7441" fg:w="1"/><text x="91.5618%" y="1087.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="91.3118%" y="1061" width="0.0123%" height="15" fill="rgb(217,168,30)" fg:x="7441" fg:w="1"/><text x="91.5618%" y="1071.50"></text></g><g><title>&lt;tracing_core::field::DebugValue&lt;T&gt; as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="91.3241%" y="821" width="0.0123%" height="15" fill="rgb(246,173,54)" fg:x="7442" fg:w="1"/><text x="91.5741%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (3 samples, 0.04%)</title><rect x="91.3241%" y="933" width="0.0368%" height="15" fill="rgb(227,177,11)" fg:x="7442" fg:w="3"/><text x="91.5741%" y="943.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (3 samples, 0.04%)</title><rect x="91.3241%" y="917" width="0.0368%" height="15" fill="rgb(223,215,51)" fg:x="7442" fg:w="3"/><text x="91.5741%" y="927.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="91.3241%" y="901" width="0.0368%" height="15" fill="rgb(253,4,17)" fg:x="7442" fg:w="3"/><text x="91.5741%" y="911.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="91.3241%" y="885" width="0.0368%" height="15" fill="rgb(206,150,43)" fg:x="7442" fg:w="3"/><text x="91.5741%" y="895.50"></text></g><g><title>tracing_core::span::Attributes::record (3 samples, 0.04%)</title><rect x="91.3241%" y="869" width="0.0368%" height="15" fill="rgb(241,100,52)" fg:x="7442" fg:w="3"/><text x="91.5741%" y="879.50"></text></g><g><title>tracing_core::field::ValueSet::record (3 samples, 0.04%)</title><rect x="91.3241%" y="853" width="0.0368%" height="15" fill="rgb(234,120,21)" fg:x="7442" fg:w="3"/><text x="91.5741%" y="863.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (3 samples, 0.04%)</title><rect x="91.3241%" y="837" width="0.0368%" height="15" fill="rgb(231,60,11)" fg:x="7442" fg:w="3"/><text x="91.5741%" y="847.50"></text></g><g><title>&lt;u64 as tracing_core::field::Value&gt;::record (2 samples, 0.02%)</title><rect x="91.3364%" y="821" width="0.0245%" height="15" fill="rgb(247,77,50)" fg:x="7443" fg:w="2"/><text x="91.5864%" y="831.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (10 samples, 0.12%)</title><rect x="91.2505%" y="1109" width="0.1227%" height="15" fill="rgb(251,199,54)" fg:x="7436" fg:w="10"/><text x="91.5005%" y="1119.50"></text></g><g><title>tracing::span::Span::new (4 samples, 0.05%)</title><rect x="91.3241%" y="1093" width="0.0491%" height="15" fill="rgb(212,120,38)" fg:x="7442" fg:w="4"/><text x="91.5741%" y="1103.50"></text></g><g><title>tracing_core::dispatcher::get_default (4 samples, 0.05%)</title><rect x="91.3241%" y="1077" width="0.0491%" height="15" fill="rgb(250,161,37)" fg:x="7442" fg:w="4"/><text x="91.5741%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="91.3241%" y="1061" width="0.0491%" height="15" fill="rgb(232,158,45)" fg:x="7442" fg:w="4"/><text x="91.5741%" y="1071.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (4 samples, 0.05%)</title><rect x="91.3241%" y="1045" width="0.0491%" height="15" fill="rgb(233,114,2)" fg:x="7442" fg:w="4"/><text x="91.5741%" y="1055.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (4 samples, 0.05%)</title><rect x="91.3241%" y="1029" width="0.0491%" height="15" fill="rgb(248,139,0)" fg:x="7442" fg:w="4"/><text x="91.5741%" y="1039.50"></text></g><g><title>tracing::span::Span::new_with (4 samples, 0.05%)</title><rect x="91.3241%" y="1013" width="0.0491%" height="15" fill="rgb(222,164,18)" fg:x="7442" fg:w="4"/><text x="91.5741%" y="1023.50"></text></g><g><title>tracing::span::Span::make_with (4 samples, 0.05%)</title><rect x="91.3241%" y="997" width="0.0491%" height="15" fill="rgb(221,140,42)" fg:x="7442" fg:w="4"/><text x="91.5741%" y="1007.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (4 samples, 0.05%)</title><rect x="91.3241%" y="981" width="0.0491%" height="15" fill="rgb(209,186,11)" fg:x="7442" fg:w="4"/><text x="91.5741%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (4 samples, 0.05%)</title><rect x="91.3241%" y="965" width="0.0491%" height="15" fill="rgb(254,212,38)" fg:x="7442" fg:w="4"/><text x="91.5741%" y="975.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (4 samples, 0.05%)</title><rect x="91.3241%" y="949" width="0.0491%" height="15" fill="rgb(219,156,31)" fg:x="7442" fg:w="4"/><text x="91.5741%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="91.3609%" y="933" width="0.0123%" height="15" fill="rgb(222,148,42)" fg:x="7445" fg:w="1"/><text x="91.6109%" y="943.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="91.3609%" y="917" width="0.0123%" height="15" fill="rgb(225,65,5)" fg:x="7445" fg:w="1"/><text x="91.6109%" y="927.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (1 samples, 0.01%)</title><rect x="91.3609%" y="901" width="0.0123%" height="15" fill="rgb(235,28,12)" fg:x="7445" fg:w="1"/><text x="91.6109%" y="911.50"></text></g><g><title>thread_local::ThreadLocal&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="91.3609%" y="885" width="0.0123%" height="15" fill="rgb(245,58,4)" fg:x="7445" fg:w="1"/><text x="91.6109%" y="895.50"></text></g><g><title>thread_local::thread_id::get (1 samples, 0.01%)</title><rect x="91.3609%" y="869" width="0.0123%" height="15" fill="rgb(235,118,5)" fg:x="7445" fg:w="1"/><text x="91.6109%" y="879.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="91.3609%" y="853" width="0.0123%" height="15" fill="rgb(253,196,3)" fg:x="7445" fg:w="1"/><text x="91.6109%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="91.3609%" y="837" width="0.0123%" height="15" fill="rgb(238,90,28)" fg:x="7445" fg:w="1"/><text x="91.6109%" y="847.50"></text></g><g><title>thread_local::thread_id::get::{{closure}} (1 samples, 0.01%)</title><rect x="91.3609%" y="821" width="0.0123%" height="15" fill="rgb(254,227,4)" fg:x="7445" fg:w="1"/><text x="91.6109%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.01%)</title><rect x="91.3732%" y="1093" width="0.0123%" height="15" fill="rgb(237,114,35)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="1103.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.3732%" y="1077" width="0.0123%" height="15" fill="rgb(221,147,29)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="1087.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="91.3732%" y="1061" width="0.0123%" height="15" fill="rgb(216,201,17)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="1071.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="91.3732%" y="1045" width="0.0123%" height="15" fill="rgb(251,46,50)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="1055.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="91.3732%" y="1029" width="0.0123%" height="15" fill="rgb(216,143,48)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.01%)</title><rect x="91.3732%" y="1013" width="0.0123%" height="15" fill="rgb(224,62,51)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.01%)</title><rect x="91.3732%" y="997" width="0.0123%" height="15" fill="rgb(232,152,20)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.3732%" y="981" width="0.0123%" height="15" fill="rgb(233,194,7)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="91.3732%" y="965" width="0.0123%" height="15" fill="rgb(207,33,22)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="975.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (1 samples, 0.01%)</title><rect x="91.3732%" y="949" width="0.0123%" height="15" fill="rgb(226,54,34)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="959.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (1 samples, 0.01%)</title><rect x="91.3732%" y="933" width="0.0123%" height="15" fill="rgb(227,161,47)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="91.3732%" y="917" width="0.0123%" height="15" fill="rgb(218,58,37)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="927.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="91.3732%" y="901" width="0.0123%" height="15" fill="rgb(208,173,18)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="911.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (1 samples, 0.01%)</title><rect x="91.3732%" y="885" width="0.0123%" height="15" fill="rgb(230,159,11)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="895.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (1 samples, 0.01%)</title><rect x="91.3732%" y="869" width="0.0123%" height="15" fill="rgb(238,90,51)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="879.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="91.3732%" y="853" width="0.0123%" height="15" fill="rgb(225,97,36)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="863.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::{{closure}} (1 samples, 0.01%)</title><rect x="91.3732%" y="837" width="0.0123%" height="15" fill="rgb(211,205,42)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="847.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (1 samples, 0.01%)</title><rect x="91.3732%" y="821" width="0.0123%" height="15" fill="rgb(219,152,7)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="831.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (1 samples, 0.01%)</title><rect x="91.3732%" y="805" width="0.0123%" height="15" fill="rgb(222,79,10)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (1 samples, 0.01%)</title><rect x="91.3732%" y="789" width="0.0123%" height="15" fill="rgb(242,13,11)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="799.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="91.3732%" y="773" width="0.0123%" height="15" fill="rgb(231,143,41)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="783.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::{{closure}} (1 samples, 0.01%)</title><rect x="91.3732%" y="757" width="0.0123%" height="15" fill="rgb(222,147,19)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="767.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}} (1 samples, 0.01%)</title><rect x="91.3732%" y="741" width="0.0123%" height="15" fill="rgb(235,5,39)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="91.3732%" y="725" width="0.0123%" height="15" fill="rgb(246,155,51)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="735.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="91.3732%" y="709" width="0.0123%" height="15" fill="rgb(218,157,4)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (1 samples, 0.01%)</title><rect x="91.3732%" y="693" width="0.0123%" height="15" fill="rgb(226,184,4)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="703.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::clear (1 samples, 0.01%)</title><rect x="91.3732%" y="677" width="0.0123%" height="15" fill="rgb(210,103,26)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (1 samples, 0.01%)</title><rect x="91.3732%" y="661" width="0.0123%" height="15" fill="rgb(228,23,31)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="91.3732%" y="645" width="0.0123%" height="15" fill="rgb(205,176,34)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="91.3732%" y="629" width="0.0123%" height="15" fill="rgb(246,213,37)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt;,hashbrown::raw::RawTable&lt;(core::any::TypeId,alloc::boxed::Box&lt;dyn core::any::Any+core::marker::Send+core::marker::Sync&gt;)&gt;::clear::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="91.3732%" y="613" width="0.0123%" height="15" fill="rgb(213,52,45)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="623.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.3732%" y="597" width="0.0123%" height="15" fill="rgb(249,9,52)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="91.3732%" y="581" width="0.0123%" height="15" fill="rgb(205,97,16)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (1 samples, 0.01%)</title><rect x="91.3732%" y="565" width="0.0123%" height="15" fill="rgb(214,11,46)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (1 samples, 0.01%)</title><rect x="91.3732%" y="549" width="0.0123%" height="15" fill="rgb(221,66,18)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (1 samples, 0.01%)</title><rect x="91.3732%" y="533" width="0.0123%" height="15" fill="rgb(213,49,1)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="543.50"></text></g><g><title>core::intrinsics::write_bytes (1 samples, 0.01%)</title><rect x="91.3732%" y="517" width="0.0123%" height="15" fill="rgb(232,75,51)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="527.50"></text></g><g><title>__memset_avx2_unaligned_erms (1 samples, 0.01%)</title><rect x="91.3732%" y="501" width="0.0123%" height="15" fill="rgb(208,218,40)" fg:x="7446" fg:w="1"/><text x="91.6232%" y="511.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (3 samples, 0.04%)</title><rect x="91.3854%" y="917" width="0.0368%" height="15" fill="rgb(206,144,50)" fg:x="7447" fg:w="3"/><text x="91.6354%" y="927.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="91.3854%" y="901" width="0.0368%" height="15" fill="rgb(216,9,51)" fg:x="7447" fg:w="3"/><text x="91.6354%" y="911.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="91.3854%" y="885" width="0.0368%" height="15" fill="rgb(226,6,53)" fg:x="7447" fg:w="3"/><text x="91.6354%" y="895.50"></text></g><g><title>tracing_core::span::Attributes::record (3 samples, 0.04%)</title><rect x="91.3854%" y="869" width="0.0368%" height="15" fill="rgb(216,9,50)" fg:x="7447" fg:w="3"/><text x="91.6354%" y="879.50"></text></g><g><title>tracing_core::field::ValueSet::record (3 samples, 0.04%)</title><rect x="91.3854%" y="853" width="0.0368%" height="15" fill="rgb(214,101,31)" fg:x="7447" fg:w="3"/><text x="91.6354%" y="863.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (3 samples, 0.04%)</title><rect x="91.3854%" y="837" width="0.0368%" height="15" fill="rgb(247,85,17)" fg:x="7447" fg:w="3"/><text x="91.6354%" y="847.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (3 samples, 0.04%)</title><rect x="91.3854%" y="821" width="0.0368%" height="15" fill="rgb(248,138,25)" fg:x="7447" fg:w="3"/><text x="91.6354%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (3 samples, 0.04%)</title><rect x="91.3854%" y="805" width="0.0368%" height="15" fill="rgb(225,146,20)" fg:x="7447" fg:w="3"/><text x="91.6354%" y="815.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.04%)</title><rect x="91.3854%" y="789" width="0.0368%" height="15" fill="rgb(224,184,17)" fg:x="7447" fg:w="3"/><text x="91.6354%" y="799.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (15 samples, 0.18%)</title><rect x="91.2505%" y="1125" width="0.1841%" height="15" fill="rgb(231,10,20)" fg:x="7436" fg:w="15"/><text x="91.5005%" y="1135.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::alloc (5 samples, 0.06%)</title><rect x="91.3732%" y="1109" width="0.0614%" height="15" fill="rgb(210,93,37)" fg:x="7446" fg:w="5"/><text x="91.6232%" y="1119.50"></text></g><g><title>tracing::span::Span::new (4 samples, 0.05%)</title><rect x="91.3854%" y="1093" width="0.0491%" height="15" fill="rgb(226,84,42)" fg:x="7447" fg:w="4"/><text x="91.6354%" y="1103.50"></text></g><g><title>tracing_core::dispatcher::get_default (4 samples, 0.05%)</title><rect x="91.3854%" y="1077" width="0.0491%" height="15" fill="rgb(253,192,7)" fg:x="7447" fg:w="4"/><text x="91.6354%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.05%)</title><rect x="91.3854%" y="1061" width="0.0491%" height="15" fill="rgb(214,107,27)" fg:x="7447" fg:w="4"/><text x="91.6354%" y="1071.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (4 samples, 0.05%)</title><rect x="91.3854%" y="1045" width="0.0491%" height="15" fill="rgb(238,146,21)" fg:x="7447" fg:w="4"/><text x="91.6354%" y="1055.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (4 samples, 0.05%)</title><rect x="91.3854%" y="1029" width="0.0491%" height="15" fill="rgb(209,136,30)" fg:x="7447" fg:w="4"/><text x="91.6354%" y="1039.50"></text></g><g><title>tracing::span::Span::new_with (4 samples, 0.05%)</title><rect x="91.3854%" y="1013" width="0.0491%" height="15" fill="rgb(226,60,22)" fg:x="7447" fg:w="4"/><text x="91.6354%" y="1023.50"></text></g><g><title>tracing::span::Span::make_with (4 samples, 0.05%)</title><rect x="91.3854%" y="997" width="0.0491%" height="15" fill="rgb(243,92,26)" fg:x="7447" fg:w="4"/><text x="91.6354%" y="1007.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (4 samples, 0.05%)</title><rect x="91.3854%" y="981" width="0.0491%" height="15" fill="rgb(211,85,33)" fg:x="7447" fg:w="4"/><text x="91.6354%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (4 samples, 0.05%)</title><rect x="91.3854%" y="965" width="0.0491%" height="15" fill="rgb(243,187,44)" fg:x="7447" fg:w="4"/><text x="91.6354%" y="975.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (4 samples, 0.05%)</title><rect x="91.3854%" y="949" width="0.0491%" height="15" fill="rgb(251,172,23)" fg:x="7447" fg:w="4"/><text x="91.6354%" y="959.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (4 samples, 0.05%)</title><rect x="91.3854%" y="933" width="0.0491%" height="15" fill="rgb(254,162,50)" fg:x="7447" fg:w="4"/><text x="91.6354%" y="943.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::insert (1 samples, 0.01%)</title><rect x="91.4223%" y="917" width="0.0123%" height="15" fill="rgb(239,14,53)" fg:x="7450" fg:w="1"/><text x="91.6723%" y="927.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsMut::replace (1 samples, 0.01%)</title><rect x="91.4223%" y="901" width="0.0123%" height="15" fill="rgb(242,208,8)" fg:x="7450" fg:w="1"/><text x="91.6723%" y="911.50"></text></g><g><title>tracing_subscriber::registry::extensions::ExtensionsInner::insert (1 samples, 0.01%)</title><rect x="91.4223%" y="885" width="0.0123%" height="15" fill="rgb(225,61,41)" fg:x="7450" fg:w="1"/><text x="91.6723%" y="895.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="91.4223%" y="869" width="0.0123%" height="15" fill="rgb(219,154,6)" fg:x="7450" fg:w="1"/><text x="91.6723%" y="879.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="91.4223%" y="853" width="0.0123%" height="15" fill="rgb(227,223,44)" fg:x="7450" fg:w="1"/><text x="91.6723%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="91.4223%" y="837" width="0.0123%" height="15" fill="rgb(220,188,6)" fg:x="7450" fg:w="1"/><text x="91.6723%" y="847.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="91.4223%" y="821" width="0.0123%" height="15" fill="rgb(216,65,22)" fg:x="7450" fg:w="1"/><text x="91.6723%" y="831.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="91.4223%" y="805" width="0.0123%" height="15" fill="rgb(236,66,46)" fg:x="7450" fg:w="1"/><text x="91.6723%" y="815.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="91.4223%" y="789" width="0.0123%" height="15" fill="rgb(211,150,52)" fg:x="7450" fg:w="1"/><text x="91.6723%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="91.4223%" y="773" width="0.0123%" height="15" fill="rgb(253,89,19)" fg:x="7450" fg:w="1"/><text x="91.6723%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="91.4223%" y="757" width="0.0123%" height="15" fill="rgb(245,4,1)" fg:x="7450" fg:w="1"/><text x="91.6723%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.4345%" y="805" width="0.0123%" height="15" fill="rgb(230,109,16)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="815.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.4345%" y="789" width="0.0123%" height="15" fill="rgb(213,7,47)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="799.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="91.4345%" y="773" width="0.0123%" height="15" fill="rgb(242,148,14)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="91.4345%" y="757" width="0.0123%" height="15" fill="rgb(238,51,34)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.4345%" y="741" width="0.0123%" height="15" fill="rgb(222,49,22)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="91.4345%" y="725" width="0.0123%" height="15" fill="rgb(237,102,50)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.4345%" y="709" width="0.0123%" height="15" fill="rgb(237,195,8)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.4345%" y="693" width="0.0123%" height="15" fill="rgb(245,60,18)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="91.4345%" y="677" width="0.0123%" height="15" fill="rgb(253,74,32)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="91.4345%" y="661" width="0.0123%" height="15" fill="rgb(240,91,39)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="91.4345%" y="645" width="0.0123%" height="15" fill="rgb(221,162,34)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="655.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="91.4345%" y="629" width="0.0123%" height="15" fill="rgb(223,32,2)" fg:x="7451" fg:w="1"/><text x="91.6845%" y="639.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="91.4468%" y="741" width="0.0123%" height="15" fill="rgb(245,220,46)" fg:x="7452" fg:w="1"/><text x="91.6968%" y="751.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="91.4468%" y="725" width="0.0123%" height="15" fill="rgb(216,38,33)" fg:x="7452" fg:w="1"/><text x="91.6968%" y="735.50"></text></g><g><title>core::fmt::Formatter::debug_upper_hex (1 samples, 0.01%)</title><rect x="91.4468%" y="709" width="0.0123%" height="15" fill="rgb(210,123,14)" fg:x="7452" fg:w="1"/><text x="91.6968%" y="719.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (26 samples, 0.32%)</title><rect x="91.1523%" y="1285" width="0.3191%" height="15" fill="rgb(214,38,47)" fg:x="7428" fg:w="26"/><text x="91.4023%" y="1295.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (24 samples, 0.29%)</title><rect x="91.1768%" y="1269" width="0.2945%" height="15" fill="rgb(244,180,16)" fg:x="7430" fg:w="24"/><text x="91.4268%" y="1279.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (24 samples, 0.29%)</title><rect x="91.1768%" y="1253" width="0.2945%" height="15" fill="rgb(252,21,32)" fg:x="7430" fg:w="24"/><text x="91.4268%" y="1263.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (24 samples, 0.29%)</title><rect x="91.1768%" y="1237" width="0.2945%" height="15" fill="rgb(245,218,31)" fg:x="7430" fg:w="24"/><text x="91.4268%" y="1247.50"></text></g><g><title>wgpu::Device::create_buffer (20 samples, 0.25%)</title><rect x="91.2259%" y="1221" width="0.2454%" height="15" fill="rgb(247,81,18)" fg:x="7434" fg:w="20"/><text x="91.4759%" y="1231.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (20 samples, 0.25%)</title><rect x="91.2259%" y="1205" width="0.2454%" height="15" fill="rgb(220,151,1)" fg:x="7434" fg:w="20"/><text x="91.4759%" y="1215.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (20 samples, 0.25%)</title><rect x="91.2259%" y="1189" width="0.2454%" height="15" fill="rgb(211,157,11)" fg:x="7434" fg:w="20"/><text x="91.4759%" y="1199.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (20 samples, 0.25%)</title><rect x="91.2259%" y="1173" width="0.2454%" height="15" fill="rgb(239,46,30)" fg:x="7434" fg:w="20"/><text x="91.4759%" y="1183.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (20 samples, 0.25%)</title><rect x="91.2259%" y="1157" width="0.2454%" height="15" fill="rgb(236,144,43)" fg:x="7434" fg:w="20"/><text x="91.4759%" y="1167.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (20 samples, 0.25%)</title><rect x="91.2259%" y="1141" width="0.2454%" height="15" fill="rgb(206,71,45)" fg:x="7434" fg:w="20"/><text x="91.4759%" y="1151.50"></text></g><g><title>tracing::span::Span::new (3 samples, 0.04%)</title><rect x="91.4345%" y="1125" width="0.0368%" height="15" fill="rgb(240,85,31)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="1135.50"></text></g><g><title>tracing_core::dispatcher::get_default (3 samples, 0.04%)</title><rect x="91.4345%" y="1109" width="0.0368%" height="15" fill="rgb(221,43,52)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.04%)</title><rect x="91.4345%" y="1093" width="0.0368%" height="15" fill="rgb(243,106,22)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="1103.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (3 samples, 0.04%)</title><rect x="91.4345%" y="1077" width="0.0368%" height="15" fill="rgb(209,138,38)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="1087.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (3 samples, 0.04%)</title><rect x="91.4345%" y="1061" width="0.0368%" height="15" fill="rgb(216,63,40)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="1071.50"></text></g><g><title>tracing::span::Span::new_with (3 samples, 0.04%)</title><rect x="91.4345%" y="1045" width="0.0368%" height="15" fill="rgb(206,115,21)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="1055.50"></text></g><g><title>tracing::span::Span::make_with (3 samples, 0.04%)</title><rect x="91.4345%" y="1029" width="0.0368%" height="15" fill="rgb(235,53,44)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="1039.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (3 samples, 0.04%)</title><rect x="91.4345%" y="1013" width="0.0368%" height="15" fill="rgb(244,160,14)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.04%)</title><rect x="91.4345%" y="997" width="0.0368%" height="15" fill="rgb(223,16,19)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.04%)</title><rect x="91.4345%" y="981" width="0.0368%" height="15" fill="rgb(242,63,42)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="991.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (3 samples, 0.04%)</title><rect x="91.4345%" y="965" width="0.0368%" height="15" fill="rgb(209,66,49)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="975.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (3 samples, 0.04%)</title><rect x="91.4345%" y="949" width="0.0368%" height="15" fill="rgb(207,126,46)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="959.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="91.4345%" y="933" width="0.0368%" height="15" fill="rgb(218,160,41)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="943.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.04%)</title><rect x="91.4345%" y="917" width="0.0368%" height="15" fill="rgb(234,125,46)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="927.50"></text></g><g><title>tracing_core::span::Attributes::record (3 samples, 0.04%)</title><rect x="91.4345%" y="901" width="0.0368%" height="15" fill="rgb(205,66,36)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="911.50"></text></g><g><title>tracing_core::field::ValueSet::record (3 samples, 0.04%)</title><rect x="91.4345%" y="885" width="0.0368%" height="15" fill="rgb(220,135,16)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="895.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (3 samples, 0.04%)</title><rect x="91.4345%" y="869" width="0.0368%" height="15" fill="rgb(214,217,54)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (3 samples, 0.04%)</title><rect x="91.4345%" y="853" width="0.0368%" height="15" fill="rgb(206,30,9)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.04%)</title><rect x="91.4345%" y="837" width="0.0368%" height="15" fill="rgb(207,196,5)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="847.50"></text></g><g><title>core::fmt::write (3 samples, 0.04%)</title><rect x="91.4345%" y="821" width="0.0368%" height="15" fill="rgb(227,116,12)" fg:x="7451" fg:w="3"/><text x="91.6845%" y="831.50"></text></g><g><title>&lt;gpu_alloc::Request as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="91.4468%" y="805" width="0.0245%" height="15" fill="rgb(235,227,13)" fg:x="7452" fg:w="2"/><text x="91.6968%" y="815.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="91.4468%" y="789" width="0.0245%" height="15" fill="rgb(238,212,29)" fg:x="7452" fg:w="2"/><text x="91.6968%" y="799.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="91.4468%" y="773" width="0.0245%" height="15" fill="rgb(230,152,17)" fg:x="7452" fg:w="2"/><text x="91.6968%" y="783.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.02%)</title><rect x="91.4468%" y="757" width="0.0245%" height="15" fill="rgb(220,197,1)" fg:x="7452" fg:w="2"/><text x="91.6968%" y="767.50"></text></g><g><title>&lt;gpu_alloc::usage::UsageFlags as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="91.4591%" y="741" width="0.0123%" height="15" fill="rgb(229,227,40)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="751.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="91.4591%" y="725" width="0.0123%" height="15" fill="rgb(227,179,16)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.4591%" y="709" width="0.0123%" height="15" fill="rgb(246,116,44)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.4591%" y="693" width="0.0123%" height="15" fill="rgb(205,191,4)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="703.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="91.4591%" y="677" width="0.0123%" height="15" fill="rgb(245,69,19)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="91.4591%" y="661" width="0.0123%" height="15" fill="rgb(230,29,26)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.4591%" y="645" width="0.0123%" height="15" fill="rgb(239,192,26)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="91.4591%" y="629" width="0.0123%" height="15" fill="rgb(219,92,16)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.4591%" y="613" width="0.0123%" height="15" fill="rgb(246,147,43)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.4591%" y="597" width="0.0123%" height="15" fill="rgb(222,147,11)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="91.4591%" y="581" width="0.0123%" height="15" fill="rgb(243,71,8)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="91.4591%" y="565" width="0.0123%" height="15" fill="rgb(250,36,12)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="91.4591%" y="549" width="0.0123%" height="15" fill="rgb(207,168,14)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="91.4591%" y="533" width="0.0123%" height="15" fill="rgb(254,210,51)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="91.4591%" y="517" width="0.0123%" height="15" fill="rgb(236,152,38)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="527.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="91.4591%" y="501" width="0.0123%" height="15" fill="rgb(240,164,36)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="511.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="91.4591%" y="485" width="0.0123%" height="15" fill="rgb(210,171,36)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="495.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="91.4591%" y="469" width="0.0123%" height="15" fill="rgb(254,156,34)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="479.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="91.4591%" y="453" width="0.0123%" height="15" fill="rgb(216,204,23)" fg:x="7453" fg:w="1"/><text x="91.7091%" y="463.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="91.4713%" y="1285" width="0.0123%" height="15" fill="rgb(230,75,38)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1295.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (1 samples, 0.01%)</title><rect x="91.4713%" y="1269" width="0.0123%" height="15" fill="rgb(248,197,25)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1279.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (1 samples, 0.01%)</title><rect x="91.4713%" y="1253" width="0.0123%" height="15" fill="rgb(234,121,26)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1263.50"></text></g><g><title>wgpu::Device::create_command_encoder (1 samples, 0.01%)</title><rect x="91.4713%" y="1237" width="0.0123%" height="15" fill="rgb(220,41,36)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1247.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (1 samples, 0.01%)</title><rect x="91.4713%" y="1221" width="0.0123%" height="15" fill="rgb(227,33,32)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1231.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (1 samples, 0.01%)</title><rect x="91.4713%" y="1205" width="0.0123%" height="15" fill="rgb(208,214,54)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1215.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate (1 samples, 0.01%)</title><rect x="91.4713%" y="1189" width="0.0123%" height="15" fill="rgb(205,37,38)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1199.50"></text></g><g><title>std::thread::current (1 samples, 0.01%)</title><rect x="91.4713%" y="1173" width="0.0123%" height="15" fill="rgb(252,2,0)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1183.50"></text></g><g><title>std::sys_common::thread_info::current_thread (1 samples, 0.01%)</title><rect x="91.4713%" y="1157" width="0.0123%" height="15" fill="rgb(212,171,10)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1167.50"></text></g><g><title>std::sys_common::thread_info::ThreadInfo::with (1 samples, 0.01%)</title><rect x="91.4713%" y="1141" width="0.0123%" height="15" fill="rgb(239,35,46)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="91.4713%" y="1125" width="0.0123%" height="15" fill="rgb(209,34,42)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1135.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (1 samples, 0.01%)</title><rect x="91.4713%" y="1109" width="0.0123%" height="15" fill="rgb(237,9,4)" fg:x="7454" fg:w="1"/><text x="91.7213%" y="1119.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (1 samples, 0.01%)</title><rect x="91.4836%" y="1285" width="0.0123%" height="15" fill="rgb(254,55,38)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1295.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="91.4836%" y="1269" width="0.0123%" height="15" fill="rgb(222,95,29)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1279.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="91.4836%" y="1253" width="0.0123%" height="15" fill="rgb(241,218,37)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1263.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="91.4836%" y="1237" width="0.0123%" height="15" fill="rgb(225,89,28)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1247.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="91.4836%" y="1221" width="0.0123%" height="15" fill="rgb(231,17,25)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1231.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="91.4836%" y="1205" width="0.0123%" height="15" fill="rgb(206,216,48)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1215.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (1 samples, 0.01%)</title><rect x="91.4836%" y="1189" width="0.0123%" height="15" fill="rgb(247,190,28)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1199.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="91.4836%" y="1173" width="0.0123%" height="15" fill="rgb(216,196,12)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1183.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="91.4836%" y="1157" width="0.0123%" height="15" fill="rgb(232,114,19)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.4836%" y="1141" width="0.0123%" height="15" fill="rgb(240,60,14)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.4836%" y="1125" width="0.0123%" height="15" fill="rgb(250,108,9)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.4836%" y="1109" width="0.0123%" height="15" fill="rgb(227,228,21)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.4836%" y="1093" width="0.0123%" height="15" fill="rgb(254,16,52)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.4836%" y="1077" width="0.0123%" height="15" fill="rgb(222,58,2)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.4836%" y="1061" width="0.0123%" height="15" fill="rgb(253,68,14)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.4836%" y="1045" width="0.0123%" height="15" fill="rgb(226,96,17)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.4836%" y="1029" width="0.0123%" height="15" fill="rgb(227,199,2)" fg:x="7455" fg:w="1"/><text x="91.7336%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.10%)</title><rect x="91.5818%" y="1061" width="0.0982%" height="15" fill="rgb(228,227,48)" fg:x="7463" fg:w="8"/><text x="91.8318%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="91.6309%" y="1045" width="0.0491%" height="15" fill="rgb(249,183,0)" fg:x="7467" fg:w="4"/><text x="91.8809%" y="1055.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="91.6677%" y="1029" width="0.0123%" height="15" fill="rgb(250,89,38)" fg:x="7470" fg:w="1"/><text x="91.9177%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.15%)</title><rect x="91.5450%" y="1077" width="0.1473%" height="15" fill="rgb(240,227,8)" fg:x="7460" fg:w="12"/><text x="91.7950%" y="1087.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="91.6800%" y="1061" width="0.0123%" height="15" fill="rgb(242,197,35)" fg:x="7471" fg:w="1"/><text x="91.9300%" y="1071.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (17 samples, 0.21%)</title><rect x="91.4959%" y="1237" width="0.2086%" height="15" fill="rgb(224,37,41)" fg:x="7456" fg:w="17"/><text x="91.7459%" y="1247.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (17 samples, 0.21%)</title><rect x="91.4959%" y="1221" width="0.2086%" height="15" fill="rgb(236,127,7)" fg:x="7456" fg:w="17"/><text x="91.7459%" y="1231.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (17 samples, 0.21%)</title><rect x="91.4959%" y="1205" width="0.2086%" height="15" fill="rgb(230,62,52)" fg:x="7456" fg:w="17"/><text x="91.7459%" y="1215.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (17 samples, 0.21%)</title><rect x="91.4959%" y="1189" width="0.2086%" height="15" fill="rgb(235,114,23)" fg:x="7456" fg:w="17"/><text x="91.7459%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.21%)</title><rect x="91.4959%" y="1173" width="0.2086%" height="15" fill="rgb(211,55,40)" fg:x="7456" fg:w="17"/><text x="91.7459%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.21%)</title><rect x="91.4959%" y="1157" width="0.2086%" height="15" fill="rgb(228,123,1)" fg:x="7456" fg:w="17"/><text x="91.7459%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.21%)</title><rect x="91.4959%" y="1141" width="0.2086%" height="15" fill="rgb(244,208,8)" fg:x="7456" fg:w="17"/><text x="91.7459%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.21%)</title><rect x="91.4959%" y="1125" width="0.2086%" height="15" fill="rgb(237,118,14)" fg:x="7456" fg:w="17"/><text x="91.7459%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.21%)</title><rect x="91.4959%" y="1109" width="0.2086%" height="15" fill="rgb(219,170,13)" fg:x="7456" fg:w="17"/><text x="91.7459%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.20%)</title><rect x="91.5082%" y="1093" width="0.1963%" height="15" fill="rgb(212,39,43)" fg:x="7457" fg:w="16"/><text x="91.7582%" y="1103.50"></text></g><g><title>__GI___getpagesize (1 samples, 0.01%)</title><rect x="91.6922%" y="1077" width="0.0123%" height="15" fill="rgb(244,191,2)" fg:x="7472" fg:w="1"/><text x="91.9422%" y="1087.50"></text></g><g><title>__strchrnul_avx2 (2 samples, 0.02%)</title><rect x="91.7413%" y="1013" width="0.0245%" height="15" fill="rgb(219,201,46)" fg:x="7476" fg:w="2"/><text x="91.9913%" y="1023.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_fence (6 samples, 0.07%)</title><rect x="91.7045%" y="1237" width="0.0736%" height="15" fill="rgb(218,82,7)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1247.50"></text></g><g><title>ash::device::DeviceV1_0::create_fence (6 samples, 0.07%)</title><rect x="91.7045%" y="1221" width="0.0736%" height="15" fill="rgb(208,192,8)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1231.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_fence (6 samples, 0.07%)</title><rect x="91.7045%" y="1205" width="0.0736%" height="15" fill="rgb(244,54,32)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="91.7045%" y="1189" width="0.0736%" height="15" fill="rgb(240,43,52)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="91.7045%" y="1173" width="0.0736%" height="15" fill="rgb(233,134,29)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="91.7045%" y="1157" width="0.0736%" height="15" fill="rgb(236,128,10)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="91.7045%" y="1141" width="0.0736%" height="15" fill="rgb(207,46,54)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="91.7045%" y="1125" width="0.0736%" height="15" fill="rgb(248,140,35)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="91.7045%" y="1109" width="0.0736%" height="15" fill="rgb(241,103,35)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="91.7045%" y="1093" width="0.0736%" height="15" fill="rgb(223,19,48)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.07%)</title><rect x="91.7045%" y="1077" width="0.0736%" height="15" fill="rgb(238,177,46)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1087.50"></text></g><g><title>__GI___snprintf (6 samples, 0.07%)</title><rect x="91.7045%" y="1061" width="0.0736%" height="15" fill="rgb(213,102,15)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1071.50"></text></g><g><title>__vsnprintf_internal (6 samples, 0.07%)</title><rect x="91.7045%" y="1045" width="0.0736%" height="15" fill="rgb(254,135,52)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1055.50"></text></g><g><title>__vfprintf_internal (6 samples, 0.07%)</title><rect x="91.7045%" y="1029" width="0.0736%" height="15" fill="rgb(240,59,6)" fg:x="7473" fg:w="6"/><text x="91.9545%" y="1039.50"></text></g><g><title>_itoa_word (1 samples, 0.01%)</title><rect x="91.7659%" y="1013" width="0.0123%" height="15" fill="rgb(207,226,5)" fg:x="7478" fg:w="1"/><text x="92.0159%" y="1023.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (4 samples, 0.05%)</title><rect x="91.7781%" y="1205" width="0.0491%" height="15" fill="rgb(208,167,17)" fg:x="7479" fg:w="4"/><text x="92.0281%" y="1215.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (4 samples, 0.05%)</title><rect x="91.7781%" y="1189" width="0.0491%" height="15" fill="rgb(254,94,10)" fg:x="7479" fg:w="4"/><text x="92.0281%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.05%)</title><rect x="91.7781%" y="1173" width="0.0491%" height="15" fill="rgb(229,33,11)" fg:x="7479" fg:w="4"/><text x="92.0281%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.04%)</title><rect x="91.7904%" y="1157" width="0.0368%" height="15" fill="rgb(249,145,48)" fg:x="7480" fg:w="3"/><text x="92.0404%" y="1167.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (8 samples, 0.10%)</title><rect x="91.7781%" y="1237" width="0.0982%" height="15" fill="rgb(253,68,54)" fg:x="7479" fg:w="8"/><text x="92.0281%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (8 samples, 0.10%)</title><rect x="91.7781%" y="1221" width="0.0982%" height="15" fill="rgb(223,27,42)" fg:x="7479" fg:w="8"/><text x="92.0281%" y="1231.50"></text></g><g><title>gfx_backend_vulkan::command::destructure_barriers (4 samples, 0.05%)</title><rect x="91.8272%" y="1205" width="0.0491%" height="15" fill="rgb(235,123,13)" fg:x="7483" fg:w="4"/><text x="92.0772%" y="1215.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="91.8640%" y="1189" width="0.0123%" height="15" fill="rgb(244,154,7)" fg:x="7486" fg:w="1"/><text x="92.1140%" y="1199.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="91.8763%" y="821" width="0.0123%" height="15" fill="rgb(214,30,25)" fg:x="7487" fg:w="1"/><text x="92.1263%" y="831.50"></text></g><g><title>core::fmt::Formatter::debug_struct (1 samples, 0.01%)</title><rect x="91.8886%" y="709" width="0.0123%" height="15" fill="rgb(252,189,13)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="719.50"></text></g><g><title>core::fmt::builders::debug_struct_new (1 samples, 0.01%)</title><rect x="91.8886%" y="693" width="0.0123%" height="15" fill="rgb(234,27,40)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="703.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="91.8886%" y="677" width="0.0123%" height="15" fill="rgb(252,199,25)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="687.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.8886%" y="661" width="0.0123%" height="15" fill="rgb(234,207,20)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.8886%" y="645" width="0.0123%" height="15" fill="rgb(244,220,10)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="655.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="91.8886%" y="629" width="0.0123%" height="15" fill="rgb(247,68,23)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="91.8886%" y="613" width="0.0123%" height="15" fill="rgb(254,61,4)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.8886%" y="597" width="0.0123%" height="15" fill="rgb(245,208,35)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="91.8886%" y="581" width="0.0123%" height="15" fill="rgb(235,90,11)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.8886%" y="565" width="0.0123%" height="15" fill="rgb(239,139,43)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.8886%" y="549" width="0.0123%" height="15" fill="rgb(209,187,9)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="91.8886%" y="533" width="0.0123%" height="15" fill="rgb(241,30,6)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="91.8886%" y="517" width="0.0123%" height="15" fill="rgb(216,104,1)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="527.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="91.8886%" y="501" width="0.0123%" height="15" fill="rgb(238,55,39)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="91.8886%" y="485" width="0.0123%" height="15" fill="rgb(226,151,41)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="91.8886%" y="469" width="0.0123%" height="15" fill="rgb(228,73,40)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="479.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="91.8886%" y="453" width="0.0123%" height="15" fill="rgb(215,81,0)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="463.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="91.8886%" y="437" width="0.0123%" height="15" fill="rgb(209,52,39)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="91.8886%" y="421" width="0.0123%" height="15" fill="rgb(221,127,5)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="431.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="91.8886%" y="405" width="0.0123%" height="15" fill="rgb(213,215,6)" fg:x="7488" fg:w="1"/><text x="92.1386%" y="415.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="91.8886%" y="757" width="0.0245%" height="15" fill="rgb(214,118,13)" fg:x="7488" fg:w="2"/><text x="92.1386%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="91.8886%" y="741" width="0.0245%" height="15" fill="rgb(207,205,41)" fg:x="7488" fg:w="2"/><text x="92.1386%" y="751.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::Memory as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="91.8886%" y="725" width="0.0245%" height="15" fill="rgb(218,208,45)" fg:x="7488" fg:w="2"/><text x="92.1386%" y="735.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="91.9008%" y="709" width="0.0123%" height="15" fill="rgb(244,81,54)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="719.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="91.9008%" y="693" width="0.0123%" height="15" fill="rgb(244,175,1)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="703.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="91.9008%" y="677" width="0.0123%" height="15" fill="rgb(232,128,28)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="687.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="91.9008%" y="661" width="0.0123%" height="15" fill="rgb(234,83,13)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.9008%" y="645" width="0.0123%" height="15" fill="rgb(233,222,35)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.9008%" y="629" width="0.0123%" height="15" fill="rgb(244,204,21)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="639.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="91.9008%" y="613" width="0.0123%" height="15" fill="rgb(225,121,40)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="91.9008%" y="597" width="0.0123%" height="15" fill="rgb(231,89,18)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.9008%" y="581" width="0.0123%" height="15" fill="rgb(205,41,50)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="91.9008%" y="565" width="0.0123%" height="15" fill="rgb(254,25,22)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="91.9008%" y="549" width="0.0123%" height="15" fill="rgb(208,44,21)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="559.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="91.9008%" y="533" width="0.0123%" height="15" fill="rgb(237,59,53)" fg:x="7489" fg:w="1"/><text x="92.1508%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.9131%" y="757" width="0.0123%" height="15" fill="rgb(233,24,36)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.9131%" y="741" width="0.0123%" height="15" fill="rgb(216,92,41)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="751.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="91.9131%" y="725" width="0.0123%" height="15" fill="rgb(225,158,49)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="91.9131%" y="709" width="0.0123%" height="15" fill="rgb(244,11,16)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.9131%" y="693" width="0.0123%" height="15" fill="rgb(208,215,38)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="91.9131%" y="677" width="0.0123%" height="15" fill="rgb(250,69,53)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.9131%" y="661" width="0.0123%" height="15" fill="rgb(240,187,52)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.9131%" y="645" width="0.0123%" height="15" fill="rgb(235,22,25)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="91.9131%" y="629" width="0.0123%" height="15" fill="rgb(213,173,22)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="91.9131%" y="613" width="0.0123%" height="15" fill="rgb(218,47,0)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="91.9131%" y="597" width="0.0123%" height="15" fill="rgb(254,157,11)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="91.9131%" y="581" width="0.0123%" height="15" fill="rgb(233,154,6)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="91.9131%" y="565" width="0.0123%" height="15" fill="rgb(233,207,47)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="575.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="91.9131%" y="549" width="0.0123%" height="15" fill="rgb(249,128,18)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="559.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="91.9131%" y="533" width="0.0123%" height="15" fill="rgb(211,27,42)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="91.9131%" y="517" width="0.0123%" height="15" fill="rgb(240,163,26)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="527.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="91.9131%" y="501" width="0.0123%" height="15" fill="rgb(232,118,46)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="511.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="91.9131%" y="485" width="0.0123%" height="15" fill="rgb(238,158,34)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="495.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="91.9131%" y="469" width="0.0123%" height="15" fill="rgb(254,99,45)" fg:x="7490" fg:w="1"/><text x="92.1631%" y="479.50"></text></g><g><title>&lt;gpu_alloc::buddy::BuddyBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (4 samples, 0.05%)</title><rect x="91.8886%" y="821" width="0.0491%" height="15" fill="rgb(247,205,20)" fg:x="7488" fg:w="4"/><text x="92.1386%" y="831.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (4 samples, 0.05%)</title><rect x="91.8886%" y="805" width="0.0491%" height="15" fill="rgb(240,20,41)" fg:x="7488" fg:w="4"/><text x="92.1386%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (4 samples, 0.05%)</title><rect x="91.8886%" y="789" width="0.0491%" height="15" fill="rgb(231,22,43)" fg:x="7488" fg:w="4"/><text x="92.1386%" y="799.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (4 samples, 0.05%)</title><rect x="91.8886%" y="773" width="0.0491%" height="15" fill="rgb(207,86,33)" fg:x="7488" fg:w="4"/><text x="92.1386%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="91.9254%" y="757" width="0.0123%" height="15" fill="rgb(231,148,5)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.9254%" y="741" width="0.0123%" height="15" fill="rgb(253,77,28)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.9254%" y="725" width="0.0123%" height="15" fill="rgb(253,227,9)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="735.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="91.9254%" y="709" width="0.0123%" height="15" fill="rgb(235,4,18)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="91.9254%" y="693" width="0.0123%" height="15" fill="rgb(205,206,45)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.9254%" y="677" width="0.0123%" height="15" fill="rgb(252,34,0)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="91.9254%" y="661" width="0.0123%" height="15" fill="rgb(213,56,7)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.9254%" y="645" width="0.0123%" height="15" fill="rgb(227,74,29)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="91.9254%" y="629" width="0.0123%" height="15" fill="rgb(221,32,48)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="91.9254%" y="613" width="0.0123%" height="15" fill="rgb(230,205,25)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="91.9254%" y="597" width="0.0123%" height="15" fill="rgb(215,110,9)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="91.9254%" y="581" width="0.0123%" height="15" fill="rgb(245,220,47)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="91.9254%" y="565" width="0.0123%" height="15" fill="rgb(224,117,5)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="91.9254%" y="549" width="0.0123%" height="15" fill="rgb(242,208,25)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="559.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="91.9254%" y="533" width="0.0123%" height="15" fill="rgb(226,12,37)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="543.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="91.9254%" y="517" width="0.0123%" height="15" fill="rgb(224,221,22)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="91.9254%" y="501" width="0.0123%" height="15" fill="rgb(239,38,44)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="511.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="91.9254%" y="485" width="0.0123%" height="15" fill="rgb(218,25,46)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="495.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="91.9254%" y="469" width="0.0123%" height="15" fill="rgb(206,137,51)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="479.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="91.9254%" y="453" width="0.0123%" height="15" fill="rgb(233,174,3)" fg:x="7491" fg:w="1"/><text x="92.1754%" y="463.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="91.9377%" y="757" width="0.0123%" height="15" fill="rgb(207,224,43)" fg:x="7492" fg:w="1"/><text x="92.1877%" y="767.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="91.9377%" y="741" width="0.0123%" height="15" fill="rgb(230,46,27)" fg:x="7492" fg:w="1"/><text x="92.1877%" y="751.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.01%)</title><rect x="91.9377%" y="725" width="0.0123%" height="15" fill="rgb(251,215,32)" fg:x="7492" fg:w="1"/><text x="92.1877%" y="735.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (7 samples, 0.09%)</title><rect x="91.8763%" y="869" width="0.0859%" height="15" fill="rgb(244,219,19)" fg:x="7487" fg:w="7"/><text x="92.1263%" y="879.50"></text></g><g><title>core::fmt::Write::write_fmt (7 samples, 0.09%)</title><rect x="91.8763%" y="853" width="0.0859%" height="15" fill="rgb(242,125,36)" fg:x="7487" fg:w="7"/><text x="92.1263%" y="863.50"></text></g><g><title>core::fmt::write (7 samples, 0.09%)</title><rect x="91.8763%" y="837" width="0.0859%" height="15" fill="rgb(251,211,12)" fg:x="7487" fg:w="7"/><text x="92.1263%" y="847.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="91.9377%" y="821" width="0.0245%" height="15" fill="rgb(209,179,33)" fg:x="7492" fg:w="2"/><text x="92.1877%" y="831.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="91.9377%" y="805" width="0.0245%" height="15" fill="rgb(205,161,48)" fg:x="7492" fg:w="2"/><text x="92.1877%" y="815.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="91.9377%" y="789" width="0.0245%" height="15" fill="rgb(241,139,8)" fg:x="7492" fg:w="2"/><text x="92.1877%" y="799.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.02%)</title><rect x="91.9377%" y="773" width="0.0245%" height="15" fill="rgb(246,159,53)" fg:x="7492" fg:w="2"/><text x="92.1877%" y="783.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="91.9499%" y="757" width="0.0123%" height="15" fill="rgb(212,62,27)" fg:x="7493" fg:w="1"/><text x="92.1999%" y="767.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.9499%" y="741" width="0.0123%" height="15" fill="rgb(216,168,18)" fg:x="7493" fg:w="1"/><text x="92.1999%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="91.9499%" y="725" width="0.0123%" height="15" fill="rgb(228,136,50)" fg:x="7493" fg:w="1"/><text x="92.1999%" y="735.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="91.9499%" y="709" width="0.0123%" height="15" fill="rgb(237,19,45)" fg:x="7493" fg:w="1"/><text x="92.1999%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="91.9499%" y="693" width="0.0123%" height="15" fill="rgb(249,150,28)" fg:x="7493" fg:w="1"/><text x="92.1999%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="91.9499%" y="677" width="0.0123%" height="15" fill="rgb(236,179,39)" fg:x="7493" fg:w="1"/><text x="92.1999%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="91.9499%" y="661" width="0.0123%" height="15" fill="rgb(250,113,27)" fg:x="7493" fg:w="1"/><text x="92.1999%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="91.9499%" y="645" width="0.0123%" height="15" fill="rgb(223,13,14)" fg:x="7493" fg:w="1"/><text x="92.1999%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="91.9499%" y="629" width="0.0123%" height="15" fill="rgb(226,68,24)" fg:x="7493" fg:w="1"/><text x="92.1999%" y="639.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (8 samples, 0.10%)</title><rect x="91.8763%" y="1157" width="0.0982%" height="15" fill="rgb(239,40,50)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="1167.50"></text></g><g><title>tracing::span::Span::new (8 samples, 0.10%)</title><rect x="91.8763%" y="1141" width="0.0982%" height="15" fill="rgb(209,187,0)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="1151.50"></text></g><g><title>tracing_core::dispatcher::get_default (8 samples, 0.10%)</title><rect x="91.8763%" y="1125" width="0.0982%" height="15" fill="rgb(240,61,8)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (8 samples, 0.10%)</title><rect x="91.8763%" y="1109" width="0.0982%" height="15" fill="rgb(236,137,5)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="1119.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (8 samples, 0.10%)</title><rect x="91.8763%" y="1093" width="0.0982%" height="15" fill="rgb(247,214,21)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="1103.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (8 samples, 0.10%)</title><rect x="91.8763%" y="1077" width="0.0982%" height="15" fill="rgb(244,115,25)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="1087.50"></text></g><g><title>tracing::span::Span::new_with (8 samples, 0.10%)</title><rect x="91.8763%" y="1061" width="0.0982%" height="15" fill="rgb(230,58,38)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="1071.50"></text></g><g><title>tracing::span::Span::make_with (8 samples, 0.10%)</title><rect x="91.8763%" y="1045" width="0.0982%" height="15" fill="rgb(206,122,6)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="1055.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (8 samples, 0.10%)</title><rect x="91.8763%" y="1029" width="0.0982%" height="15" fill="rgb(217,135,53)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (8 samples, 0.10%)</title><rect x="91.8763%" y="1013" width="0.0982%" height="15" fill="rgb(225,120,8)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (8 samples, 0.10%)</title><rect x="91.8763%" y="997" width="0.0982%" height="15" fill="rgb(226,3,30)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="1007.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (8 samples, 0.10%)</title><rect x="91.8763%" y="981" width="0.0982%" height="15" fill="rgb(214,159,38)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="991.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (8 samples, 0.10%)</title><rect x="91.8763%" y="965" width="0.0982%" height="15" fill="rgb(242,182,47)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="975.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (8 samples, 0.10%)</title><rect x="91.8763%" y="949" width="0.0982%" height="15" fill="rgb(245,202,26)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="959.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (8 samples, 0.10%)</title><rect x="91.8763%" y="933" width="0.0982%" height="15" fill="rgb(226,163,3)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="943.50"></text></g><g><title>tracing_core::span::Attributes::record (8 samples, 0.10%)</title><rect x="91.8763%" y="917" width="0.0982%" height="15" fill="rgb(219,4,4)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="927.50"></text></g><g><title>tracing_core::field::ValueSet::record (8 samples, 0.10%)</title><rect x="91.8763%" y="901" width="0.0982%" height="15" fill="rgb(223,85,4)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="911.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (8 samples, 0.10%)</title><rect x="91.8763%" y="885" width="0.0982%" height="15" fill="rgb(242,170,11)" fg:x="7487" fg:w="8"/><text x="92.1263%" y="895.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (1 samples, 0.01%)</title><rect x="91.9622%" y="869" width="0.0123%" height="15" fill="rgb(221,97,42)" fg:x="7494" fg:w="1"/><text x="92.2122%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="91.9622%" y="853" width="0.0123%" height="15" fill="rgb(231,206,45)" fg:x="7494" fg:w="1"/><text x="92.2122%" y="863.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="91.9622%" y="837" width="0.0123%" height="15" fill="rgb(216,23,48)" fg:x="7494" fg:w="1"/><text x="92.2122%" y="847.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="91.9622%" y="821" width="0.0123%" height="15" fill="rgb(225,49,9)" fg:x="7494" fg:w="1"/><text x="92.2122%" y="831.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="91.9622%" y="805" width="0.0123%" height="15" fill="rgb(247,24,47)" fg:x="7494" fg:w="1"/><text x="92.2122%" y="815.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="91.9622%" y="789" width="0.0123%" height="15" fill="rgb(253,145,10)" fg:x="7494" fg:w="1"/><text x="92.2122%" y="799.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="91.9622%" y="773" width="0.0123%" height="15" fill="rgb(206,62,10)" fg:x="7494" fg:w="1"/><text x="92.2122%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="91.9622%" y="757" width="0.0123%" height="15" fill="rgb(224,159,31)" fg:x="7494" fg:w="1"/><text x="92.2122%" y="767.50"></text></g><g><title>core::fmt::Formatter::debug_struct (2 samples, 0.02%)</title><rect x="91.9867%" y="661" width="0.0245%" height="15" fill="rgb(234,184,15)" fg:x="7496" fg:w="2"/><text x="92.2367%" y="671.50"></text></g><g><title>core::fmt::builders::debug_struct_new (2 samples, 0.02%)</title><rect x="91.9867%" y="645" width="0.0245%" height="15" fill="rgb(237,101,1)" fg:x="7496" fg:w="2"/><text x="92.2367%" y="655.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.02%)</title><rect x="91.9867%" y="629" width="0.0245%" height="15" fill="rgb(211,99,29)" fg:x="7496" fg:w="2"/><text x="92.2367%" y="639.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="91.9867%" y="613" width="0.0245%" height="15" fill="rgb(250,167,3)" fg:x="7496" fg:w="2"/><text x="92.2367%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="91.9867%" y="597" width="0.0245%" height="15" fill="rgb(225,58,6)" fg:x="7496" fg:w="2"/><text x="92.2367%" y="607.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="91.9867%" y="581" width="0.0245%" height="15" fill="rgb(251,161,21)" fg:x="7496" fg:w="2"/><text x="92.2367%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="91.9867%" y="565" width="0.0245%" height="15" fill="rgb(253,203,35)" fg:x="7496" fg:w="2"/><text x="92.2367%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="91.9867%" y="549" width="0.0245%" height="15" fill="rgb(214,220,52)" fg:x="7496" fg:w="2"/><text x="92.2367%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="91.9867%" y="533" width="0.0245%" height="15" fill="rgb(235,216,33)" fg:x="7496" fg:w="2"/><text x="92.2367%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="91.9867%" y="517" width="0.0245%" height="15" fill="rgb(231,79,26)" fg:x="7496" fg:w="2"/><text x="92.2367%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="91.9867%" y="501" width="0.0245%" height="15" fill="rgb(244,218,10)" fg:x="7496" fg:w="2"/><text x="92.2367%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="91.9867%" y="693" width="0.0368%" height="15" fill="rgb(238,15,9)" fg:x="7496" fg:w="3"/><text x="92.2367%" y="703.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::Memory as core::fmt::Debug&gt;::fmt (3 samples, 0.04%)</title><rect x="91.9867%" y="677" width="0.0368%" height="15" fill="rgb(235,112,15)" fg:x="7496" fg:w="3"/><text x="92.2367%" y="687.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.01%)</title><rect x="92.0113%" y="661" width="0.0123%" height="15" fill="rgb(239,126,18)" fg:x="7498" fg:w="1"/><text x="92.2613%" y="671.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="92.0113%" y="645" width="0.0123%" height="15" fill="rgb(253,171,19)" fg:x="7498" fg:w="1"/><text x="92.2613%" y="655.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (5 samples, 0.06%)</title><rect x="91.9745%" y="709" width="0.0614%" height="15" fill="rgb(237,218,25)" fg:x="7495" fg:w="5"/><text x="92.2245%" y="719.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for usize&gt;::fmt (1 samples, 0.01%)</title><rect x="92.0236%" y="693" width="0.0123%" height="15" fill="rgb(213,88,46)" fg:x="7499" fg:w="1"/><text x="92.2736%" y="703.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="92.0236%" y="677" width="0.0123%" height="15" fill="rgb(222,124,54)" fg:x="7499" fg:w="1"/><text x="92.2736%" y="687.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="92.0236%" y="661" width="0.0123%" height="15" fill="rgb(209,206,42)" fg:x="7499" fg:w="1"/><text x="92.2736%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="92.0358%" y="709" width="0.0123%" height="15" fill="rgb(219,25,49)" fg:x="7500" fg:w="1"/><text x="92.2858%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="92.0358%" y="693" width="0.0123%" height="15" fill="rgb(228,207,53)" fg:x="7500" fg:w="1"/><text x="92.2858%" y="703.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="92.0358%" y="677" width="0.0123%" height="15" fill="rgb(224,3,4)" fg:x="7500" fg:w="1"/><text x="92.2858%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="92.0358%" y="661" width="0.0123%" height="15" fill="rgb(254,206,26)" fg:x="7500" fg:w="1"/><text x="92.2858%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="92.0358%" y="645" width="0.0123%" height="15" fill="rgb(209,4,26)" fg:x="7500" fg:w="1"/><text x="92.2858%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="92.0358%" y="629" width="0.0123%" height="15" fill="rgb(243,193,32)" fg:x="7500" fg:w="1"/><text x="92.2858%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="92.0358%" y="613" width="0.0123%" height="15" fill="rgb(225,150,36)" fg:x="7500" fg:w="1"/><text x="92.2858%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="92.0358%" y="597" width="0.0123%" height="15" fill="rgb(225,131,26)" fg:x="7500" fg:w="1"/><text x="92.2858%" y="607.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlockFlavor&lt;M&gt; as core::fmt::Debug&gt;::fmt (8 samples, 0.10%)</title><rect x="91.9745%" y="773" width="0.0982%" height="15" fill="rgb(236,126,12)" fg:x="7495" fg:w="8"/><text x="92.2245%" y="783.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (8 samples, 0.10%)</title><rect x="91.9745%" y="757" width="0.0982%" height="15" fill="rgb(238,167,44)" fg:x="7495" fg:w="8"/><text x="92.2245%" y="767.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (8 samples, 0.10%)</title><rect x="91.9745%" y="741" width="0.0982%" height="15" fill="rgb(238,153,31)" fg:x="7495" fg:w="8"/><text x="92.2245%" y="751.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (8 samples, 0.10%)</title><rect x="91.9745%" y="725" width="0.0982%" height="15" fill="rgb(254,41,51)" fg:x="7495" fg:w="8"/><text x="92.2245%" y="735.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.02%)</title><rect x="92.0481%" y="709" width="0.0245%" height="15" fill="rgb(224,100,52)" fg:x="7501" fg:w="2"/><text x="92.2981%" y="719.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="92.0481%" y="693" width="0.0245%" height="15" fill="rgb(246,226,38)" fg:x="7501" fg:w="2"/><text x="92.2981%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="92.0481%" y="677" width="0.0245%" height="15" fill="rgb(252,21,43)" fg:x="7501" fg:w="2"/><text x="92.2981%" y="687.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="92.0481%" y="661" width="0.0245%" height="15" fill="rgb(250,44,8)" fg:x="7501" fg:w="2"/><text x="92.2981%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="92.0481%" y="645" width="0.0245%" height="15" fill="rgb(224,200,45)" fg:x="7501" fg:w="2"/><text x="92.2981%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="92.0481%" y="629" width="0.0245%" height="15" fill="rgb(208,75,52)" fg:x="7501" fg:w="2"/><text x="92.2981%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="92.0481%" y="613" width="0.0245%" height="15" fill="rgb(213,167,20)" fg:x="7501" fg:w="2"/><text x="92.2981%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="92.0604%" y="597" width="0.0123%" height="15" fill="rgb(236,163,42)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="92.0604%" y="581" width="0.0123%" height="15" fill="rgb(210,98,31)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="92.0604%" y="565" width="0.0123%" height="15" fill="rgb(246,166,15)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="92.0604%" y="549" width="0.0123%" height="15" fill="rgb(214,114,7)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="92.0604%" y="533" width="0.0123%" height="15" fill="rgb(217,202,34)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="543.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="92.0604%" y="517" width="0.0123%" height="15" fill="rgb(227,226,29)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="92.0604%" y="501" width="0.0123%" height="15" fill="rgb(254,65,44)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="511.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="92.0604%" y="485" width="0.0123%" height="15" fill="rgb(213,150,32)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="495.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="92.0604%" y="469" width="0.0123%" height="15" fill="rgb(208,86,46)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="479.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="92.0604%" y="453" width="0.0123%" height="15" fill="rgb(222,75,3)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="463.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="92.0604%" y="437" width="0.0123%" height="15" fill="rgb(225,213,9)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="447.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="92.0604%" y="421" width="0.0123%" height="15" fill="rgb(209,199,10)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="431.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="92.0604%" y="405" width="0.0123%" height="15" fill="rgb(213,18,17)" fg:x="7502" fg:w="1"/><text x="92.3104%" y="415.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (17 samples, 0.21%)</title><rect x="91.8763%" y="1221" width="0.2086%" height="15" fill="rgb(243,79,44)" fg:x="7487" fg:w="17"/><text x="92.1263%" y="1231.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (17 samples, 0.21%)</title><rect x="91.8763%" y="1205" width="0.2086%" height="15" fill="rgb(226,20,5)" fg:x="7487" fg:w="17"/><text x="92.1263%" y="1215.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (17 samples, 0.21%)</title><rect x="91.8763%" y="1189" width="0.2086%" height="15" fill="rgb(217,52,31)" fg:x="7487" fg:w="17"/><text x="92.1263%" y="1199.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (17 samples, 0.21%)</title><rect x="91.8763%" y="1173" width="0.2086%" height="15" fill="rgb(229,42,7)" fg:x="7487" fg:w="17"/><text x="92.1263%" y="1183.50"></text></g><g><title>tracing::span::Span::new (9 samples, 0.11%)</title><rect x="91.9745%" y="1157" width="0.1104%" height="15" fill="rgb(206,118,29)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="1167.50"></text></g><g><title>tracing_core::dispatcher::get_default (9 samples, 0.11%)</title><rect x="91.9745%" y="1141" width="0.1104%" height="15" fill="rgb(248,132,44)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (9 samples, 0.11%)</title><rect x="91.9745%" y="1125" width="0.1104%" height="15" fill="rgb(231,56,33)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="1135.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (9 samples, 0.11%)</title><rect x="91.9745%" y="1109" width="0.1104%" height="15" fill="rgb(208,31,11)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="1119.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (9 samples, 0.11%)</title><rect x="91.9745%" y="1093" width="0.1104%" height="15" fill="rgb(216,56,33)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="1103.50"></text></g><g><title>tracing::span::Span::new_with (9 samples, 0.11%)</title><rect x="91.9745%" y="1077" width="0.1104%" height="15" fill="rgb(213,100,0)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="1087.50"></text></g><g><title>tracing::span::Span::make_with (9 samples, 0.11%)</title><rect x="91.9745%" y="1061" width="0.1104%" height="15" fill="rgb(236,166,18)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="1071.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (9 samples, 0.11%)</title><rect x="91.9745%" y="1045" width="0.1104%" height="15" fill="rgb(251,132,12)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="1055.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (9 samples, 0.11%)</title><rect x="91.9745%" y="1029" width="0.1104%" height="15" fill="rgb(216,117,7)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="1039.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (9 samples, 0.11%)</title><rect x="91.9745%" y="1013" width="0.1104%" height="15" fill="rgb(243,184,8)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="1023.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (9 samples, 0.11%)</title><rect x="91.9745%" y="997" width="0.1104%" height="15" fill="rgb(212,91,32)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="1007.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (9 samples, 0.11%)</title><rect x="91.9745%" y="981" width="0.1104%" height="15" fill="rgb(224,147,15)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="991.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (9 samples, 0.11%)</title><rect x="91.9745%" y="965" width="0.1104%" height="15" fill="rgb(228,84,10)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="975.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (9 samples, 0.11%)</title><rect x="91.9745%" y="949" width="0.1104%" height="15" fill="rgb(221,161,22)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="959.50"></text></g><g><title>tracing_core::span::Attributes::record (9 samples, 0.11%)</title><rect x="91.9745%" y="933" width="0.1104%" height="15" fill="rgb(250,132,20)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="943.50"></text></g><g><title>tracing_core::field::ValueSet::record (9 samples, 0.11%)</title><rect x="91.9745%" y="917" width="0.1104%" height="15" fill="rgb(209,161,12)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="927.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (9 samples, 0.11%)</title><rect x="91.9745%" y="901" width="0.1104%" height="15" fill="rgb(232,142,42)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="911.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (9 samples, 0.11%)</title><rect x="91.9745%" y="885" width="0.1104%" height="15" fill="rgb(240,228,27)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="895.50"></text></g><g><title>core::fmt::Write::write_fmt (9 samples, 0.11%)</title><rect x="91.9745%" y="869" width="0.1104%" height="15" fill="rgb(243,0,31)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="879.50"></text></g><g><title>core::fmt::write (9 samples, 0.11%)</title><rect x="91.9745%" y="853" width="0.1104%" height="15" fill="rgb(237,100,15)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="863.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (9 samples, 0.11%)</title><rect x="91.9745%" y="837" width="0.1104%" height="15" fill="rgb(230,26,48)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="847.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (9 samples, 0.11%)</title><rect x="91.9745%" y="821" width="0.1104%" height="15" fill="rgb(215,7,13)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="831.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (9 samples, 0.11%)</title><rect x="91.9745%" y="805" width="0.1104%" height="15" fill="rgb(227,172,5)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="815.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (9 samples, 0.11%)</title><rect x="91.9745%" y="789" width="0.1104%" height="15" fill="rgb(248,206,14)" fg:x="7495" fg:w="9"/><text x="92.2245%" y="799.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="92.0726%" y="773" width="0.0123%" height="15" fill="rgb(231,62,54)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="783.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="92.0726%" y="757" width="0.0123%" height="15" fill="rgb(222,136,26)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="92.0726%" y="741" width="0.0123%" height="15" fill="rgb(211,115,42)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="751.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="92.0726%" y="725" width="0.0123%" height="15" fill="rgb(234,5,17)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="92.0726%" y="709" width="0.0123%" height="15" fill="rgb(233,67,14)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="92.0726%" y="693" width="0.0123%" height="15" fill="rgb(225,133,51)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="92.0726%" y="677" width="0.0123%" height="15" fill="rgb(206,107,40)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="92.0726%" y="661" width="0.0123%" height="15" fill="rgb(210,56,9)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="92.0726%" y="645" width="0.0123%" height="15" fill="rgb(222,204,4)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="92.0726%" y="629" width="0.0123%" height="15" fill="rgb(210,168,3)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="92.0726%" y="613" width="0.0123%" height="15" fill="rgb(246,183,26)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="623.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="92.0726%" y="597" width="0.0123%" height="15" fill="rgb(228,27,31)" fg:x="7503" fg:w="1"/><text x="92.3226%" y="607.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (18 samples, 0.22%)</title><rect x="91.8763%" y="1237" width="0.2209%" height="15" fill="rgb(206,8,2)" fg:x="7487" fg:w="18"/><text x="92.1263%" y="1247.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (1 samples, 0.01%)</title><rect x="92.0849%" y="1221" width="0.0123%" height="15" fill="rgb(251,229,16)" fg:x="7504" fg:w="1"/><text x="92.3349%" y="1231.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister_locked (1 samples, 0.01%)</title><rect x="92.0849%" y="1205" width="0.0123%" height="15" fill="rgb(208,84,44)" fg:x="7504" fg:w="1"/><text x="92.3349%" y="1215.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (1 samples, 0.01%)</title><rect x="92.0849%" y="1189" width="0.0123%" height="15" fill="rgb(221,228,13)" fg:x="7504" fg:w="1"/><text x="92.3349%" y="1199.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="92.0849%" y="1173" width="0.0123%" height="15" fill="rgb(248,42,47)" fg:x="7504" fg:w="1"/><text x="92.3349%" y="1183.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="92.0972%" y="1205" width="0.0245%" height="15" fill="rgb(222,124,41)" fg:x="7505" fg:w="2"/><text x="92.3472%" y="1215.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (116 samples, 1.42%)</title><rect x="90.7105%" y="1509" width="1.4235%" height="15" fill="rgb(244,191,35)" fg:x="7392" fg:w="116"/><text x="90.9605%" y="1519.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (116 samples, 1.42%)</title><rect x="90.7105%" y="1493" width="1.4235%" height="15" fill="rgb(222,223,54)" fg:x="7392" fg:w="116"/><text x="90.9605%" y="1503.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (116 samples, 1.42%)</title><rect x="90.7105%" y="1477" width="1.4235%" height="15" fill="rgb(248,178,42)" fg:x="7392" fg:w="116"/><text x="90.9605%" y="1487.50"></text></g><g><title>bevy_app::app::App::update (116 samples, 1.42%)</title><rect x="90.7105%" y="1461" width="1.4235%" height="15" fill="rgb(238,21,24)" fg:x="7392" fg:w="116"/><text x="90.9605%" y="1471.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (116 samples, 1.42%)</title><rect x="90.7105%" y="1445" width="1.4235%" height="15" fill="rgb(227,134,7)" fg:x="7392" fg:w="116"/><text x="90.9605%" y="1455.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (116 samples, 1.42%)</title><rect x="90.7105%" y="1429" width="1.4235%" height="15" fill="rgb(205,191,1)" fg:x="7392" fg:w="116"/><text x="90.9605%" y="1439.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (116 samples, 1.42%)</title><rect x="90.7105%" y="1413" width="1.4235%" height="15" fill="rgb(222,166,30)" fg:x="7392" fg:w="116"/><text x="90.9605%" y="1423.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (112 samples, 1.37%)</title><rect x="90.7596%" y="1397" width="1.3744%" height="15" fill="rgb(229,94,26)" fg:x="7396" fg:w="112"/><text x="91.0096%" y="1407.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (112 samples, 1.37%)</title><rect x="90.7596%" y="1381" width="1.3744%" height="15" fill="rgb(246,97,2)" fg:x="7396" fg:w="112"/><text x="91.0096%" y="1391.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (99 samples, 1.21%)</title><rect x="90.9191%" y="1365" width="1.2149%" height="15" fill="rgb(252,112,53)" fg:x="7409" fg:w="99"/><text x="91.1691%" y="1375.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (80 samples, 0.98%)</title><rect x="91.1523%" y="1349" width="0.9817%" height="15" fill="rgb(225,52,38)" fg:x="7428" fg:w="80"/><text x="91.4023%" y="1359.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (80 samples, 0.98%)</title><rect x="91.1523%" y="1333" width="0.9817%" height="15" fill="rgb(215,203,24)" fg:x="7428" fg:w="80"/><text x="91.4023%" y="1343.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (80 samples, 0.98%)</title><rect x="91.1523%" y="1317" width="0.9817%" height="15" fill="rgb(210,122,52)" fg:x="7428" fg:w="80"/><text x="91.4023%" y="1327.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (80 samples, 0.98%)</title><rect x="91.1523%" y="1301" width="0.9817%" height="15" fill="rgb(209,161,44)" fg:x="7428" fg:w="80"/><text x="91.4023%" y="1311.50"></text></g><g><title>wgpu::Queue::submit (52 samples, 0.64%)</title><rect x="91.4959%" y="1285" width="0.6381%" height="15" fill="rgb(221,97,16)" fg:x="7456" fg:w="52"/><text x="91.7459%" y="1295.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (52 samples, 0.64%)</title><rect x="91.4959%" y="1269" width="0.6381%" height="15" fill="rgb(209,87,13)" fg:x="7456" fg:w="52"/><text x="91.7459%" y="1279.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (52 samples, 0.64%)</title><rect x="91.4959%" y="1253" width="0.6381%" height="15" fill="rgb(242,1,21)" fg:x="7456" fg:w="52"/><text x="91.7459%" y="1263.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister (3 samples, 0.04%)</title><rect x="92.0972%" y="1237" width="0.0368%" height="15" fill="rgb(251,170,41)" fg:x="7505" fg:w="3"/><text x="92.3472%" y="1247.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (3 samples, 0.04%)</title><rect x="92.0972%" y="1221" width="0.0368%" height="15" fill="rgb(227,201,10)" fg:x="7505" fg:w="3"/><text x="92.3472%" y="1231.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="92.1217%" y="1205" width="0.0123%" height="15" fill="rgb(231,100,29)" fg:x="7507" fg:w="1"/><text x="92.3717%" y="1215.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="92.1217%" y="1189" width="0.0123%" height="15" fill="rgb(226,31,35)" fg:x="7507" fg:w="1"/><text x="92.3717%" y="1199.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="92.1217%" y="1173" width="0.0123%" height="15" fill="rgb(254,99,26)" fg:x="7507" fg:w="1"/><text x="92.3717%" y="1183.50"></text></g><g><title>x11_dl::xcursor::Xcursor::open (1 samples, 0.01%)</title><rect x="92.1340%" y="1493" width="0.0123%" height="15" fill="rgb(217,228,17)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1503.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open_multi (1 samples, 0.01%)</title><rect x="92.1340%" y="1477" width="0.0123%" height="15" fill="rgb(226,132,8)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1487.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open (1 samples, 0.01%)</title><rect x="92.1340%" y="1461" width="0.0123%" height="15" fill="rgb(220,202,47)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1471.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="92.1340%" y="1445" width="0.0123%" height="15" fill="rgb(245,194,10)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1455.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="92.1340%" y="1429" width="0.0123%" height="15" fill="rgb(225,44,52)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1439.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="92.1340%" y="1413" width="0.0123%" height="15" fill="rgb(235,10,4)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1423.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="92.1340%" y="1397" width="0.0123%" height="15" fill="rgb(244,32,23)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1407.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="92.1340%" y="1381" width="0.0123%" height="15" fill="rgb(210,115,0)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1391.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="92.1340%" y="1365" width="0.0123%" height="15" fill="rgb(246,72,16)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1375.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="92.1340%" y="1349" width="0.0123%" height="15" fill="rgb(223,32,10)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1359.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="92.1340%" y="1333" width="0.0123%" height="15" fill="rgb(223,97,52)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1343.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="92.1340%" y="1317" width="0.0123%" height="15" fill="rgb(238,69,38)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1327.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="92.1340%" y="1301" width="0.0123%" height="15" fill="rgb(226,61,1)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1311.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="92.1340%" y="1285" width="0.0123%" height="15" fill="rgb(244,56,14)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1295.50"></text></g><g><title>check_match (1 samples, 0.01%)</title><rect x="92.1340%" y="1269" width="0.0123%" height="15" fill="rgb(242,164,18)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1279.50"></text></g><g><title>strcmp (1 samples, 0.01%)</title><rect x="92.1340%" y="1253" width="0.0123%" height="15" fill="rgb(217,130,28)" fg:x="7508" fg:w="1"/><text x="92.3840%" y="1263.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open_multi (1 samples, 0.01%)</title><rect x="92.1463%" y="1477" width="0.0123%" height="15" fill="rgb(218,118,52)" fg:x="7509" fg:w="1"/><text x="92.3963%" y="1487.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open (1 samples, 0.01%)</title><rect x="92.1463%" y="1461" width="0.0123%" height="15" fill="rgb(251,112,38)" fg:x="7509" fg:w="1"/><text x="92.3963%" y="1471.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="92.1463%" y="1445" width="0.0123%" height="15" fill="rgb(239,14,50)" fg:x="7509" fg:w="1"/><text x="92.3963%" y="1455.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="92.1463%" y="1429" width="0.0123%" height="15" fill="rgb(228,141,54)" fg:x="7509" fg:w="1"/><text x="92.3963%" y="1439.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="92.1463%" y="1413" width="0.0123%" height="15" fill="rgb(236,128,15)" fg:x="7509" fg:w="1"/><text x="92.3963%" y="1423.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="92.1463%" y="1397" width="0.0123%" height="15" fill="rgb(206,140,54)" fg:x="7509" fg:w="1"/><text x="92.3963%" y="1407.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="92.1463%" y="1381" width="0.0123%" height="15" fill="rgb(240,0,44)" fg:x="7509" fg:w="1"/><text x="92.3963%" y="1391.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="92.1463%" y="1365" width="0.0123%" height="15" fill="rgb(243,207,23)" fg:x="7509" fg:w="1"/><text x="92.3963%" y="1375.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="92.1463%" y="1349" width="0.0123%" height="15" fill="rgb(247,202,1)" fg:x="7509" fg:w="1"/><text x="92.3963%" y="1359.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="92.1463%" y="1333" width="0.0123%" height="15" fill="rgb(239,83,27)" fg:x="7509" fg:w="1"/><text x="92.3963%" y="1343.50"></text></g><g><title>x11_dl::xlib::Xlib::open (3 samples, 0.04%)</title><rect x="92.1463%" y="1493" width="0.0368%" height="15" fill="rgb(219,205,7)" fg:x="7509" fg:w="3"/><text x="92.3963%" y="1503.50"></text></g><g><title>x11_dl::xlib::Xlib::init (2 samples, 0.02%)</title><rect x="92.1585%" y="1477" width="0.0245%" height="15" fill="rgb(249,184,22)" fg:x="7510" fg:w="2"/><text x="92.4085%" y="1487.50"></text></g><g><title>x11_dl::link::DynamicLibrary::symbol (2 samples, 0.02%)</title><rect x="92.1585%" y="1461" width="0.0245%" height="15" fill="rgb(230,150,14)" fg:x="7510" fg:w="2"/><text x="92.4085%" y="1471.50"></text></g><g><title>dlsym (2 samples, 0.02%)</title><rect x="92.1585%" y="1445" width="0.0245%" height="15" fill="rgb(240,118,34)" fg:x="7510" fg:w="2"/><text x="92.4085%" y="1455.50"></text></g><g><title>[libdl-2.33.so] (2 samples, 0.02%)</title><rect x="92.1585%" y="1429" width="0.0245%" height="15" fill="rgb(227,162,21)" fg:x="7510" fg:w="2"/><text x="92.4085%" y="1439.50"></text></g><g><title>__GI__dl_catch_error (2 samples, 0.02%)</title><rect x="92.1585%" y="1413" width="0.0245%" height="15" fill="rgb(219,14,9)" fg:x="7510" fg:w="2"/><text x="92.4085%" y="1423.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="92.1585%" y="1397" width="0.0245%" height="15" fill="rgb(223,226,16)" fg:x="7510" fg:w="2"/><text x="92.4085%" y="1407.50"></text></g><g><title>[libdl-2.33.so] (2 samples, 0.02%)</title><rect x="92.1585%" y="1381" width="0.0245%" height="15" fill="rgb(246,161,37)" fg:x="7510" fg:w="2"/><text x="92.4085%" y="1391.50"></text></g><g><title>do_sym (2 samples, 0.02%)</title><rect x="92.1585%" y="1365" width="0.0245%" height="15" fill="rgb(205,221,43)" fg:x="7510" fg:w="2"/><text x="92.4085%" y="1375.50"></text></g><g><title>winit::platform_impl::platform::x11::xdisplay::XConnection::new (5 samples, 0.06%)</title><rect x="92.1340%" y="1509" width="0.0614%" height="15" fill="rgb(228,216,26)" fg:x="7508" fg:w="5"/><text x="92.3840%" y="1519.50"></text></g><g><title>x11_dl::xrender::Xrender::open (1 samples, 0.01%)</title><rect x="92.1831%" y="1493" width="0.0123%" height="15" fill="rgb(251,33,17)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1503.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open_multi (1 samples, 0.01%)</title><rect x="92.1831%" y="1477" width="0.0123%" height="15" fill="rgb(246,126,36)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1487.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open (1 samples, 0.01%)</title><rect x="92.1831%" y="1461" width="0.0123%" height="15" fill="rgb(217,160,24)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1471.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="92.1831%" y="1445" width="0.0123%" height="15" fill="rgb(211,64,12)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1455.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="92.1831%" y="1429" width="0.0123%" height="15" fill="rgb(238,47,36)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1439.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="92.1831%" y="1413" width="0.0123%" height="15" fill="rgb(210,157,42)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1423.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="92.1831%" y="1397" width="0.0123%" height="15" fill="rgb(242,84,39)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1407.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="92.1831%" y="1381" width="0.0123%" height="15" fill="rgb(207,65,41)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1391.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="92.1831%" y="1365" width="0.0123%" height="15" fill="rgb(246,97,27)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1375.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="92.1831%" y="1349" width="0.0123%" height="15" fill="rgb(229,9,43)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1359.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="92.1831%" y="1333" width="0.0123%" height="15" fill="rgb(211,82,44)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1343.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.01%)</title><rect x="92.1831%" y="1317" width="0.0123%" height="15" fill="rgb(253,45,54)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1327.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="92.1831%" y="1301" width="0.0123%" height="15" fill="rgb(235,94,32)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1311.50"></text></g><g><title>openaux (1 samples, 0.01%)</title><rect x="92.1831%" y="1285" width="0.0123%" height="15" fill="rgb(252,143,1)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1295.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="92.1831%" y="1269" width="0.0123%" height="15" fill="rgb(239,164,4)" fg:x="7512" fg:w="1"/><text x="92.4331%" y="1279.50"></text></g><g><title>xcb_present_pixmap (1 samples, 0.01%)</title><rect x="92.1954%" y="1509" width="0.0123%" height="15" fill="rgb(222,25,39)" fg:x="7513" fg:w="1"/><text x="92.4454%" y="1519.50"></text></g><g><title>[engine] (3 samples, 0.04%)</title><rect x="92.6126%" y="1493" width="0.0368%" height="15" fill="rgb(234,175,9)" fg:x="7547" fg:w="3"/><text x="92.8626%" y="1503.50"></text></g><g><title>__memmove_avx_unaligned_erms (26 samples, 0.32%)</title><rect x="92.6494%" y="1493" width="0.3191%" height="15" fill="rgb(247,200,41)" fg:x="7550" fg:w="26"/><text x="92.8994%" y="1503.50"></text></g><g><title>glslang::GetThreadPoolAllocator (3 samples, 0.04%)</title><rect x="92.9685%" y="1493" width="0.0368%" height="15" fill="rgb(245,101,27)" fg:x="7576" fg:w="3"/><text x="93.2185%" y="1503.50"></text></g><g><title>__GI___pthread_getspecific (2 samples, 0.02%)</title><rect x="92.9807%" y="1477" width="0.0245%" height="15" fill="rgb(221,29,7)" fg:x="7577" fg:w="2"/><text x="93.2307%" y="1487.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="93.0421%" y="1477" width="0.0123%" height="15" fill="rgb(240,184,10)" fg:x="7582" fg:w="1"/><text x="93.2921%" y="1487.50"></text></g><g><title>glslang::TFunction::TFunction (6 samples, 0.07%)</title><rect x="93.0053%" y="1493" width="0.0736%" height="15" fill="rgb(251,85,15)" fg:x="7579" fg:w="6"/><text x="93.2553%" y="1503.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::reserve (2 samples, 0.02%)</title><rect x="93.0544%" y="1477" width="0.0245%" height="15" fill="rgb(252,84,16)" fg:x="7583" fg:w="2"/><text x="93.3044%" y="1487.50"></text></g><g><title>glslang::TFunction::addParameter (6 samples, 0.07%)</title><rect x="93.0789%" y="1493" width="0.0736%" height="15" fill="rgb(233,136,6)" fg:x="7585" fg:w="6"/><text x="93.3289%" y="1503.50"></text></g><g><title>glslang::TType::buildMangledName (5 samples, 0.06%)</title><rect x="93.0912%" y="1477" width="0.0614%" height="15" fill="rgb(226,169,30)" fg:x="7586" fg:w="5"/><text x="93.3412%" y="1487.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::reserve (1 samples, 0.01%)</title><rect x="93.1403%" y="1461" width="0.0123%" height="15" fill="rgb(241,83,18)" fg:x="7590" fg:w="1"/><text x="93.3903%" y="1471.50"></text></g><g><title>glslang::TParseContext::declareBlock (1 samples, 0.01%)</title><rect x="93.1525%" y="1493" width="0.0123%" height="15" fill="rgb(239,151,5)" fg:x="7591" fg:w="1"/><text x="93.4025%" y="1503.50"></text></g><g><title>glslang::TParseContext::declareVariable (1 samples, 0.01%)</title><rect x="93.1648%" y="1493" width="0.0123%" height="15" fill="rgb(238,56,13)" fg:x="7592" fg:w="1"/><text x="93.4148%" y="1503.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="93.1648%" y="1477" width="0.0123%" height="15" fill="rgb(224,100,0)" fg:x="7592" fg:w="1"/><text x="93.4148%" y="1487.50"></text></g><g><title>glslang::TParseContext::globalQualifierTypeCheck (1 samples, 0.01%)</title><rect x="93.1771%" y="1493" width="0.0123%" height="15" fill="rgb(231,168,26)" fg:x="7593" fg:w="1"/><text x="93.4271%" y="1503.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="93.2016%" y="1429" width="0.0123%" height="15" fill="rgb(238,110,3)" fg:x="7595" fg:w="1"/><text x="93.4516%" y="1439.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_create_node&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (1 samples, 0.01%)</title><rect x="93.2139%" y="1429" width="0.0123%" height="15" fill="rgb(216,190,1)" fg:x="7596" fg:w="1"/><text x="93.4639%" y="1439.50"></text></g><g><title>__memcmp_avx2_movbe (8 samples, 0.10%)</title><rect x="93.2998%" y="1413" width="0.0982%" height="15" fill="rgb(208,130,52)" fg:x="7603" fg:w="8"/><text x="93.5498%" y="1423.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (17 samples, 0.21%)</title><rect x="93.2016%" y="1445" width="0.2086%" height="15" fill="rgb(233,74,12)" fg:x="7595" fg:w="17"/><text x="93.4516%" y="1455.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_get_insert_unique_pos (15 samples, 0.18%)</title><rect x="93.2262%" y="1429" width="0.1841%" height="15" fill="rgb(248,12,15)" fg:x="7597" fg:w="15"/><text x="93.4762%" y="1439.50"></text></g><g><title>std::_Rb_tree_decrement (1 samples, 0.01%)</title><rect x="93.3980%" y="1413" width="0.0123%" height="15" fill="rgb(228,18,29)" fg:x="7611" fg:w="1"/><text x="93.6480%" y="1423.50"></text></g><g><title>local_Rb_tree_decrement (1 samples, 0.01%)</title><rect x="93.3980%" y="1397" width="0.0123%" height="15" fill="rgb(206,153,11)" fg:x="7611" fg:w="1"/><text x="93.6480%" y="1407.50"></text></g><g><title>std::_Rb_tree_decrement (1 samples, 0.01%)</title><rect x="93.3980%" y="1381" width="0.0123%" height="15" fill="rgb(216,50,30)" fg:x="7611" fg:w="1"/><text x="93.6480%" y="1391.50"></text></g><g><title>glslang::TSymbolTable::insert (31 samples, 0.38%)</title><rect x="93.1893%" y="1477" width="0.3804%" height="15" fill="rgb(217,20,39)" fg:x="7594" fg:w="31"/><text x="93.4393%" y="1487.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (31 samples, 0.38%)</title><rect x="93.1893%" y="1461" width="0.3804%" height="15" fill="rgb(232,130,46)" fg:x="7594" fg:w="31"/><text x="93.4393%" y="1471.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (13 samples, 0.16%)</title><rect x="93.4102%" y="1445" width="0.1595%" height="15" fill="rgb(233,141,43)" fg:x="7612" fg:w="13"/><text x="93.6602%" y="1455.50"></text></g><g><title>__memcmp_avx2_movbe (8 samples, 0.10%)</title><rect x="93.4716%" y="1429" width="0.0982%" height="15" fill="rgb(240,64,34)" fg:x="7617" fg:w="8"/><text x="93.7216%" y="1439.50"></text></g><g><title>glslang::TType::containsArray (1 samples, 0.01%)</title><rect x="93.5698%" y="1477" width="0.0123%" height="15" fill="rgb(230,28,31)" fg:x="7625" fg:w="1"/><text x="93.8198%" y="1487.50"></text></g><g><title>glslang::TParseContext::handleFunctionDeclarator (49 samples, 0.60%)</title><rect x="93.1893%" y="1493" width="0.6013%" height="15" fill="rgb(223,56,30)" fg:x="7594" fg:w="49"/><text x="93.4393%" y="1503.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (17 samples, 0.21%)</title><rect x="93.5820%" y="1477" width="0.2086%" height="15" fill="rgb(248,134,16)" fg:x="7626" fg:w="17"/><text x="93.8320%" y="1487.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.06%)</title><rect x="93.7293%" y="1461" width="0.0614%" height="15" fill="rgb(206,202,4)" fg:x="7638" fg:w="5"/><text x="93.9793%" y="1471.50"></text></g><g><title>glslang::TParseContext::mergeQualifiers (3 samples, 0.04%)</title><rect x="93.7906%" y="1493" width="0.0368%" height="15" fill="rgb(219,116,48)" fg:x="7643" fg:w="3"/><text x="94.0406%" y="1503.50"></text></g><g><title>glslang::TParseContext::mergeObjectLayoutQualifiers (1 samples, 0.01%)</title><rect x="93.8152%" y="1477" width="0.0123%" height="15" fill="rgb(224,122,46)" fg:x="7645" fg:w="1"/><text x="94.0652%" y="1487.50"></text></g><g><title>glslang::TParseContext::paramCheckFix (2 samples, 0.02%)</title><rect x="93.8275%" y="1493" width="0.0245%" height="15" fill="rgb(219,114,47)" fg:x="7646" fg:w="2"/><text x="94.0775%" y="1503.50"></text></g><g><title>glslang::TPoolAllocator::allocate (3 samples, 0.04%)</title><rect x="93.8520%" y="1493" width="0.0368%" height="15" fill="rgb(244,60,44)" fg:x="7648" fg:w="3"/><text x="94.1020%" y="1503.50"></text></g><g><title>operator new (3 samples, 0.04%)</title><rect x="93.8520%" y="1477" width="0.0368%" height="15" fill="rgb(243,226,25)" fg:x="7648" fg:w="3"/><text x="94.1020%" y="1487.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="93.8520%" y="1461" width="0.0368%" height="15" fill="rgb(243,101,52)" fg:x="7648" fg:w="3"/><text x="94.1020%" y="1471.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="93.8643%" y="1445" width="0.0245%" height="15" fill="rgb(207,69,25)" fg:x="7649" fg:w="2"/><text x="94.1143%" y="1455.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="93.8765%" y="1429" width="0.0123%" height="15" fill="rgb(222,204,53)" fg:x="7650" fg:w="1"/><text x="94.1265%" y="1439.50"></text></g><g><title>glslang::TType::TType (2 samples, 0.02%)</title><rect x="93.8888%" y="1493" width="0.0245%" height="15" fill="rgb(234,84,49)" fg:x="7651" fg:w="2"/><text x="94.1388%" y="1503.50"></text></g><g><title>_IO_no_init (1 samples, 0.01%)</title><rect x="94.1588%" y="1413" width="0.0123%" height="15" fill="rgb(233,77,41)" fg:x="7673" fg:w="1"/><text x="94.4088%" y="1423.50"></text></g><g><title>_IO_old_init (1 samples, 0.01%)</title><rect x="94.1588%" y="1397" width="0.0123%" height="15" fill="rgb(221,200,42)" fg:x="7673" fg:w="1"/><text x="94.4088%" y="1407.50"></text></g><g><title>_IO_str_init_static_internal (1 samples, 0.01%)</title><rect x="94.1711%" y="1413" width="0.0123%" height="15" fill="rgb(221,29,35)" fg:x="7674" fg:w="1"/><text x="94.4211%" y="1423.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="94.2570%" y="1397" width="0.0123%" height="15" fill="rgb(221,71,22)" fg:x="7681" fg:w="1"/><text x="94.5070%" y="1407.50"></text></g><g><title>__GI__IO_default_xsputn (1 samples, 0.01%)</title><rect x="94.2692%" y="1397" width="0.0123%" height="15" fill="rgb(216,162,23)" fg:x="7682" fg:w="1"/><text x="94.5192%" y="1407.50"></text></g><g><title>__strchrnul_avx2 (4 samples, 0.05%)</title><rect x="94.2815%" y="1397" width="0.0491%" height="15" fill="rgb(248,32,48)" fg:x="7683" fg:w="4"/><text x="94.5315%" y="1407.50"></text></g><g><title>__GI___snprintf (16 samples, 0.20%)</title><rect x="94.1588%" y="1445" width="0.1963%" height="15" fill="rgb(241,156,30)" fg:x="7673" fg:w="16"/><text x="94.4088%" y="1455.50"></text></g><g><title>__vsnprintf_internal (16 samples, 0.20%)</title><rect x="94.1588%" y="1429" width="0.1963%" height="15" fill="rgb(237,196,46)" fg:x="7673" fg:w="16"/><text x="94.4088%" y="1439.50"></text></g><g><title>__vfprintf_internal (14 samples, 0.17%)</title><rect x="94.1833%" y="1413" width="0.1718%" height="15" fill="rgb(216,2,6)" fg:x="7675" fg:w="14"/><text x="94.4333%" y="1423.50"></text></g><g><title>__strlen_avx2 (2 samples, 0.02%)</title><rect x="94.3306%" y="1397" width="0.0245%" height="15" fill="rgb(214,47,16)" fg:x="7687" fg:w="2"/><text x="94.5806%" y="1407.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="94.6497%" y="1413" width="0.0123%" height="15" fill="rgb(240,123,13)" fg:x="7713" fg:w="1"/><text x="94.8997%" y="1423.50"></text></g><g><title>glslang::GetThreadPoolAllocator (1 samples, 0.01%)</title><rect x="94.6619%" y="1413" width="0.0123%" height="15" fill="rgb(206,47,48)" fg:x="7714" fg:w="1"/><text x="94.9119%" y="1423.50"></text></g><g><title>__GI___pthread_getspecific (1 samples, 0.01%)</title><rect x="94.6619%" y="1397" width="0.0123%" height="15" fill="rgb(252,88,27)" fg:x="7714" fg:w="1"/><text x="94.9119%" y="1407.50"></text></g><g><title>glslang::TPpContext::MacroExpand (28 samples, 0.34%)</title><rect x="94.3551%" y="1445" width="0.3436%" height="15" fill="rgb(218,105,30)" fg:x="7689" fg:w="28"/><text x="94.6051%" y="1455.50"></text></g><g><title>glslang::TStringAtomMap::getAtom (28 samples, 0.34%)</title><rect x="94.3551%" y="1429" width="0.3436%" height="15" fill="rgb(227,52,46)" fg:x="7689" fg:w="28"/><text x="94.6051%" y="1439.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::_S_construct&lt;char const*&gt; (2 samples, 0.02%)</title><rect x="94.6742%" y="1413" width="0.0245%" height="15" fill="rgb(222,190,21)" fg:x="7715" fg:w="2"/><text x="94.9242%" y="1423.50"></text></g><g><title>glslang::TPpContext::readCPPline (1 samples, 0.01%)</title><rect x="94.6987%" y="1445" width="0.0123%" height="15" fill="rgb(205,86,20)" fg:x="7717" fg:w="1"/><text x="94.9487%" y="1455.50"></text></g><g><title>glslang::TPpContext::CPPdefine (1 samples, 0.01%)</title><rect x="94.6987%" y="1429" width="0.0123%" height="15" fill="rgb(233,45,1)" fg:x="7717" fg:w="1"/><text x="94.9487%" y="1439.50"></text></g><g><title>glslang::TStringAtomMap::addAtomFixed (1 samples, 0.01%)</title><rect x="94.6987%" y="1413" width="0.0123%" height="15" fill="rgb(208,39,6)" fg:x="7717" fg:w="1"/><text x="94.9487%" y="1423.50"></text></g><g><title>std::_Hashtable&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, int&gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, int&gt; &gt;, std::__detail::_Select1st, std::equal_to&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, std::hash&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits&lt;true, false, true&gt; &gt;::_M_emplace&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, int&gt; &gt; (1 samples, 0.01%)</title><rect x="94.6987%" y="1397" width="0.0123%" height="15" fill="rgb(211,178,22)" fg:x="7717" fg:w="1"/><text x="94.9487%" y="1407.50"></text></g><g><title>glslang::TPpContext::tStringInput::getch (12 samples, 0.15%)</title><rect x="94.9074%" y="1429" width="0.1473%" height="15" fill="rgb(227,112,23)" fg:x="7734" fg:w="12"/><text x="95.1574%" y="1439.50"></text></g><g><title>glslang::TInputScanner::get (10 samples, 0.12%)</title><rect x="94.9319%" y="1413" width="0.1227%" height="15" fill="rgb(214,41,4)" fg:x="7736" fg:w="10"/><text x="95.1819%" y="1423.50"></text></g><g><title>glslang::TPpContext::tStringInput::scan (30 samples, 0.37%)</title><rect x="94.7110%" y="1445" width="0.3681%" height="15" fill="rgb(219,144,46)" fg:x="7718" fg:w="30"/><text x="94.9610%" y="1455.50"></text></g><g><title>glslang::TPpContext::tStringInput::ungetch (2 samples, 0.02%)</title><rect x="95.0546%" y="1429" width="0.0245%" height="15" fill="rgb(253,176,50)" fg:x="7746" fg:w="2"/><text x="95.3046%" y="1439.50"></text></g><g><title>glslang::TInputScanner::unget (1 samples, 0.01%)</title><rect x="95.0669%" y="1413" width="0.0123%" height="15" fill="rgb(206,123,1)" fg:x="7747" fg:w="1"/><text x="95.3169%" y="1423.50"></text></g><g><title>glslang::TPpContext::tokenize (88 samples, 1.08%)</title><rect x="94.0238%" y="1461" width="1.0799%" height="15" fill="rgb(250,111,32)" fg:x="7662" fg:w="88"/><text x="94.2738%" y="1471.50"></text></g><g><title>glslang::TPpContext::tokenPaste (2 samples, 0.02%)</title><rect x="95.0792%" y="1445" width="0.0245%" height="15" fill="rgb(229,17,49)" fg:x="7748" fg:w="2"/><text x="95.3292%" y="1455.50"></text></g><g><title>glslang::GetThreadPoolAllocator (1 samples, 0.01%)</title><rect x="95.1037%" y="1445" width="0.0123%" height="15" fill="rgb(250,123,19)" fg:x="7750" fg:w="1"/><text x="95.3537%" y="1455.50"></text></g><g><title>__GI___pthread_getspecific (1 samples, 0.01%)</title><rect x="95.1037%" y="1429" width="0.0123%" height="15" fill="rgb(220,124,20)" fg:x="7750" fg:w="1"/><text x="95.3537%" y="1439.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (16 samples, 0.20%)</title><rect x="95.1160%" y="1445" width="0.1963%" height="15" fill="rgb(242,85,25)" fg:x="7751" fg:w="16"/><text x="95.3660%" y="1455.50"></text></g><g><title>__memcmp_avx2_movbe (12 samples, 0.15%)</title><rect x="95.1651%" y="1429" width="0.1473%" height="15" fill="rgb(245,217,7)" fg:x="7755" fg:w="12"/><text x="95.4151%" y="1439.50"></text></g><g><title>glslang::TScanContext::identifierOrType (19 samples, 0.23%)</title><rect x="95.1037%" y="1461" width="0.2332%" height="15" fill="rgb(242,50,25)" fg:x="7750" fg:w="19"/><text x="95.3537%" y="1471.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::_S_construct&lt;char const*&gt; (2 samples, 0.02%)</title><rect x="95.3123%" y="1445" width="0.0245%" height="15" fill="rgb(251,210,24)" fg:x="7767" fg:w="2"/><text x="95.5623%" y="1455.50"></text></g><g><title>glslang::TPoolAllocator::allocate (1 samples, 0.01%)</title><rect x="95.3246%" y="1429" width="0.0123%" height="15" fill="rgb(238,24,8)" fg:x="7768" fg:w="1"/><text x="95.5746%" y="1439.50"></text></g><g><title>operator new (1 samples, 0.01%)</title><rect x="95.3246%" y="1413" width="0.0123%" height="15" fill="rgb(211,96,19)" fg:x="7768" fg:w="1"/><text x="95.5746%" y="1423.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="95.3246%" y="1397" width="0.0123%" height="15" fill="rgb(222,186,12)" fg:x="7768" fg:w="1"/><text x="95.5746%" y="1407.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="95.3246%" y="1381" width="0.0123%" height="15" fill="rgb(212,70,49)" fg:x="7768" fg:w="1"/><text x="95.5746%" y="1391.50"></text></g><g><title>[unknown] (4,424 samples, 54.29%)</title><rect x="41.3057%" y="1525" width="54.2889%" height="15" fill="rgb(238,69,49)" fg:x="3366" fg:w="4424"/><text x="41.5557%" y="1535.50">[unknown]</text></g><g><title>yyparse (276 samples, 3.39%)</title><rect x="92.2076%" y="1509" width="3.3869%" height="15" fill="rgb(225,13,3)" fg:x="7514" fg:w="276"/><text x="92.4576%" y="1519.50">yyp..</text></g><g><title>yylex (137 samples, 1.68%)</title><rect x="93.9134%" y="1493" width="1.6812%" height="15" fill="rgb(229,188,14)" fg:x="7653" fg:w="137"/><text x="94.1634%" y="1503.50"></text></g><g><title>glslang::TScanContext::tokenize (136 samples, 1.67%)</title><rect x="93.9256%" y="1477" width="1.6689%" height="15" fill="rgb(218,58,16)" fg:x="7654" fg:w="136"/><text x="94.1756%" y="1487.50"></text></g><g><title>glslang::TScanContext::tokenizeIdentifier (21 samples, 0.26%)</title><rect x="95.3369%" y="1461" width="0.2577%" height="15" fill="rgb(206,213,49)" fg:x="7769" fg:w="21"/><text x="95.5869%" y="1471.50"></text></g><g><title>__strcmp_avx2 (3 samples, 0.04%)</title><rect x="95.5577%" y="1445" width="0.0368%" height="15" fill="rgb(225,152,48)" fg:x="7787" fg:w="3"/><text x="95.8077%" y="1455.50"></text></g><g><title>_XSend (1 samples, 0.01%)</title><rect x="95.5946%" y="1525" width="0.0123%" height="15" fill="rgb(216,103,42)" fg:x="7790" fg:w="1"/><text x="95.8446%" y="1535.50"></text></g><g><title>__GI___ctype_init (1 samples, 0.01%)</title><rect x="96.1100%" y="1493" width="0.0123%" height="15" fill="rgb(212,214,39)" fg:x="7832" fg:w="1"/><text x="96.3600%" y="1503.50"></text></g><g><title>gilrs::ff::time::Ticks::inc (1 samples, 0.01%)</title><rect x="96.1345%" y="1285" width="0.0123%" height="15" fill="rgb(249,52,41)" fg:x="7834" fg:w="1"/><text x="96.3845%" y="1295.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="96.1468%" y="1285" width="0.0123%" height="15" fill="rgb(212,173,53)" fg:x="7835" fg:w="1"/><text x="96.3968%" y="1295.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="96.1468%" y="1269" width="0.0123%" height="15" fill="rgb(232,222,21)" fg:x="7835" fg:w="1"/><text x="96.3968%" y="1279.50"></text></g><g><title>std::sync::mpsc::mpsc_queue::Queue&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="96.1468%" y="1253" width="0.0123%" height="15" fill="rgb(206,228,31)" fg:x="7835" fg:w="1"/><text x="96.3968%" y="1263.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="96.1468%" y="1237" width="0.0123%" height="15" fill="rgb(231,121,16)" fg:x="7835" fg:w="1"/><text x="96.3968%" y="1247.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="96.1468%" y="1221" width="0.0123%" height="15" fill="rgb(241,3,23)" fg:x="7835" fg:w="1"/><text x="96.3968%" y="1231.50"></text></g><g><title>__libc_disable_asynccancel (1 samples, 0.01%)</title><rect x="96.2940%" y="1221" width="0.0123%" height="15" fill="rgb(220,68,37)" fg:x="7847" fg:w="1"/><text x="96.5440%" y="1231.50"></text></g><g><title>std::thread::sleep (13 samples, 0.16%)</title><rect x="96.1590%" y="1285" width="0.1595%" height="15" fill="rgb(212,23,49)" fg:x="7836" fg:w="13"/><text x="96.4090%" y="1295.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (13 samples, 0.16%)</title><rect x="96.1590%" y="1269" width="0.1595%" height="15" fill="rgb(231,38,8)" fg:x="7836" fg:w="13"/><text x="96.4090%" y="1279.50"></text></g><g><title>__GI___nanosleep (11 samples, 0.13%)</title><rect x="96.1836%" y="1253" width="0.1350%" height="15" fill="rgb(222,137,29)" fg:x="7838" fg:w="11"/><text x="96.4336%" y="1263.50"></text></g><g><title>__clock_nanosleep_2 (9 samples, 0.11%)</title><rect x="96.2081%" y="1237" width="0.1104%" height="15" fill="rgb(239,8,6)" fg:x="7840" fg:w="9"/><text x="96.4581%" y="1247.50"></text></g><g><title>__libc_enable_asynccancel (1 samples, 0.01%)</title><rect x="96.3063%" y="1221" width="0.0123%" height="15" fill="rgb(224,142,47)" fg:x="7848" fg:w="1"/><text x="96.5563%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.23%)</title><rect x="96.1222%" y="1477" width="0.2332%" height="15" fill="rgb(226,67,29)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1487.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (19 samples, 0.23%)</title><rect x="96.1222%" y="1461" width="0.2332%" height="15" fill="rgb(212,144,29)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1471.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (19 samples, 0.23%)</title><rect x="96.1222%" y="1445" width="0.2332%" height="15" fill="rgb(252,2,51)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1455.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (19 samples, 0.23%)</title><rect x="96.1222%" y="1429" width="0.2332%" height="15" fill="rgb(246,103,52)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1439.50"></text></g><g><title>std::panic::catch_unwind (19 samples, 0.23%)</title><rect x="96.1222%" y="1413" width="0.2332%" height="15" fill="rgb(229,229,35)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1423.50"></text></g><g><title>std::panicking::try (19 samples, 0.23%)</title><rect x="96.1222%" y="1397" width="0.2332%" height="15" fill="rgb(209,83,15)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1407.50"></text></g><g><title>std::panicking::try::do_call (19 samples, 0.23%)</title><rect x="96.1222%" y="1381" width="0.2332%" height="15" fill="rgb(218,54,16)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1391.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (19 samples, 0.23%)</title><rect x="96.1222%" y="1365" width="0.2332%" height="15" fill="rgb(205,2,26)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1375.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (19 samples, 0.23%)</title><rect x="96.1222%" y="1349" width="0.2332%" height="15" fill="rgb(248,180,0)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1359.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (19 samples, 0.23%)</title><rect x="96.1222%" y="1333" width="0.2332%" height="15" fill="rgb(231,136,16)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1343.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (19 samples, 0.23%)</title><rect x="96.1222%" y="1317" width="0.2332%" height="15" fill="rgb(215,90,4)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1327.50"></text></g><g><title>gilrs::ff::server::run (19 samples, 0.23%)</title><rect x="96.1222%" y="1301" width="0.2332%" height="15" fill="rgb(251,131,3)" fg:x="7833" fg:w="19"/><text x="96.3722%" y="1311.50"></text></g><g><title>std::time::Instant::now (3 samples, 0.04%)</title><rect x="96.3186%" y="1285" width="0.0368%" height="15" fill="rgb(244,47,21)" fg:x="7849" fg:w="3"/><text x="96.5686%" y="1295.50"></text></g><g><title>std::sys::unix::time::inner::Instant::now (3 samples, 0.04%)</title><rect x="96.3186%" y="1269" width="0.0368%" height="15" fill="rgb(231,115,9)" fg:x="7849" fg:w="3"/><text x="96.5686%" y="1279.50"></text></g><g><title>std::sys::unix::time::inner::now (3 samples, 0.04%)</title><rect x="96.3186%" y="1253" width="0.0368%" height="15" fill="rgb(241,119,20)" fg:x="7849" fg:w="3"/><text x="96.5686%" y="1263.50"></text></g><g><title>__clock_gettime_2 (3 samples, 0.04%)</title><rect x="96.3186%" y="1237" width="0.0368%" height="15" fill="rgb(224,99,0)" fg:x="7849" fg:w="3"/><text x="96.5686%" y="1247.50"></text></g><g><title>__GI___clone (62 samples, 0.76%)</title><rect x="95.6068%" y="1525" width="0.7608%" height="15" fill="rgb(219,213,18)" fg:x="7791" fg:w="62"/><text x="95.8568%" y="1535.50"></text></g><g><title>start_thread (21 samples, 0.26%)</title><rect x="96.1100%" y="1509" width="0.2577%" height="15" fill="rgb(209,71,34)" fg:x="7832" fg:w="21"/><text x="96.3600%" y="1519.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (20 samples, 0.25%)</title><rect x="96.1222%" y="1493" width="0.2454%" height="15" fill="rgb(245,203,20)" fg:x="7833" fg:w="20"/><text x="96.3722%" y="1503.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.01%)</title><rect x="96.3554%" y="1477" width="0.0123%" height="15" fill="rgb(221,44,20)" fg:x="7852" fg:w="1"/><text x="96.6054%" y="1487.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.01%)</title><rect x="96.3554%" y="1461" width="0.0123%" height="15" fill="rgb(229,97,0)" fg:x="7852" fg:w="1"/><text x="96.6054%" y="1471.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stack (1 samples, 0.01%)</title><rect x="96.3554%" y="1445" width="0.0123%" height="15" fill="rgb(206,56,49)" fg:x="7852" fg:w="1"/><text x="96.6054%" y="1455.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::get_stackp (1 samples, 0.01%)</title><rect x="96.3554%" y="1429" width="0.0123%" height="15" fill="rgb(208,216,41)" fg:x="7852" fg:w="1"/><text x="96.6054%" y="1439.50"></text></g><g><title>std::sys::unix::os::page_size (1 samples, 0.01%)</title><rect x="96.3554%" y="1413" width="0.0123%" height="15" fill="rgb(231,31,6)" fg:x="7852" fg:w="1"/><text x="96.6054%" y="1423.50"></text></g><g><title>__GI___sysconf (1 samples, 0.01%)</title><rect x="96.3554%" y="1397" width="0.0123%" height="15" fill="rgb(239,88,23)" fg:x="7852" fg:w="1"/><text x="96.6054%" y="1407.50"></text></g><g><title>__GI___getpagesize (1 samples, 0.01%)</title><rect x="96.3554%" y="1381" width="0.0123%" height="15" fill="rgb(227,111,45)" fg:x="7852" fg:w="1"/><text x="96.6054%" y="1391.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="96.3677%" y="1525" width="0.0123%" height="15" fill="rgb(207,167,18)" fg:x="7853" fg:w="1"/><text x="96.6177%" y="1535.50"></text></g><g><title>__libc_csu_init (7 samples, 0.09%)</title><rect x="96.4413%" y="1493" width="0.0859%" height="15" fill="rgb(253,127,17)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1503.50"></text></g><g><title>_GLOBAL__sub_I_ShaderLang.cpp (7 samples, 0.09%)</title><rect x="96.4413%" y="1477" width="0.0859%" height="15" fill="rgb(211,229,9)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1487.50"></text></g><g><title>std::ios_base::Init::Init (7 samples, 0.09%)</title><rect x="96.4413%" y="1461" width="0.0859%" height="15" fill="rgb(249,25,14)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1471.50"></text></g><g><title>std::ios_base::Init::Init (7 samples, 0.09%)</title><rect x="96.4413%" y="1445" width="0.0859%" height="15" fill="rgb(237,177,4)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1455.50"></text></g><g><title>__gnu_cxx::stdio_sync_filebuf&lt;char, std::char_traits&lt;char&gt; &gt;::stdio_sync_filebuf (7 samples, 0.09%)</title><rect x="96.4413%" y="1429" width="0.0859%" height="15" fill="rgb(248,163,50)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1439.50"></text></g><g><title>std::basic_streambuf&lt;char, std::char_traits&lt;char&gt; &gt;::basic_streambuf (7 samples, 0.09%)</title><rect x="96.4413%" y="1413" width="0.0859%" height="15" fill="rgb(246,67,42)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1423.50"></text></g><g><title>std::locale::locale (7 samples, 0.09%)</title><rect x="96.4413%" y="1397" width="0.0859%" height="15" fill="rgb(228,136,45)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1407.50"></text></g><g><title>std::locale::_S_initialize (7 samples, 0.09%)</title><rect x="96.4413%" y="1381" width="0.0859%" height="15" fill="rgb(218,93,4)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1391.50"></text></g><g><title>std::locale::_S_initialize (7 samples, 0.09%)</title><rect x="96.4413%" y="1365" width="0.0859%" height="15" fill="rgb(209,82,29)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1375.50"></text></g><g><title>__pthread_once_slow (7 samples, 0.09%)</title><rect x="96.4413%" y="1349" width="0.0859%" height="15" fill="rgb(213,219,38)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1359.50"></text></g><g><title>std::locale::_S_initialize_once (7 samples, 0.09%)</title><rect x="96.4413%" y="1333" width="0.0859%" height="15" fill="rgb(233,212,17)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1343.50"></text></g><g><title>std::locale::_Impl::_Impl (7 samples, 0.09%)</title><rect x="96.4413%" y="1317" width="0.0859%" height="15" fill="rgb(225,65,3)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1327.50"></text></g><g><title>std::__timepunct&lt;char&gt;::__timepunct (7 samples, 0.09%)</title><rect x="96.4413%" y="1301" width="0.0859%" height="15" fill="rgb(226,25,1)" fg:x="7859" fg:w="7"/><text x="96.6913%" y="1311.50"></text></g><g><title>std::__timepunct&lt;char&gt;::_M_initialize_timepunct (1 samples, 0.01%)</title><rect x="96.5149%" y="1285" width="0.0123%" height="15" fill="rgb(229,83,27)" fg:x="7865" fg:w="1"/><text x="96.7649%" y="1295.50"></text></g><g><title>std::locale::facet::_S_get_c_locale (1 samples, 0.01%)</title><rect x="96.5149%" y="1269" width="0.0123%" height="15" fill="rgb(245,80,47)" fg:x="7865" fg:w="1"/><text x="96.7649%" y="1279.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="96.5272%" y="1045" width="0.0123%" height="15" fill="rgb(213,79,27)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="96.5272%" y="1029" width="0.0123%" height="15" fill="rgb(232,38,28)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="96.5272%" y="1013" width="0.0123%" height="15" fill="rgb(253,63,39)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="96.5272%" y="997" width="0.0123%" height="15" fill="rgb(222,204,17)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="96.5272%" y="981" width="0.0123%" height="15" fill="rgb(254,135,49)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="96.5272%" y="965" width="0.0123%" height="15" fill="rgb(226,203,24)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::filter_map::FilterMap&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="96.5272%" y="949" width="0.0123%" height="15" fill="rgb(225,2,17)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map (1 samples, 0.01%)</title><rect x="96.5272%" y="933" width="0.0123%" height="15" fill="rgb(234,135,43)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="96.5272%" y="917" width="0.0123%" height="15" fill="rgb(224,14,46)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find_map::check::{{closure}} (1 samples, 0.01%)</title><rect x="96.5272%" y="901" width="0.0123%" height="15" fill="rgb(206,42,0)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (1 samples, 0.01%)</title><rect x="96.5272%" y="885" width="0.0123%" height="15" fill="rgb(244,38,23)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="895.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs::{{closure}} (1 samples, 0.01%)</title><rect x="96.5272%" y="869" width="0.0123%" height="15" fill="rgb(230,25,21)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="879.50"></text></g><g><title>alsa::pcm::HwParams::test_channels (1 samples, 0.01%)</title><rect x="96.5272%" y="853" width="0.0123%" height="15" fill="rgb(252,217,28)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="863.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="96.5272%" y="837" width="0.0123%" height="15" fill="rgb(251,4,49)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="847.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="96.5272%" y="821" width="0.0123%" height="15" fill="rgb(217,126,31)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="831.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="96.5272%" y="805" width="0.0123%" height="15" fill="rgb(242,181,33)" fg:x="7866" fg:w="1"/><text x="96.7772%" y="815.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="96.5395%" y="837" width="0.0123%" height="15" fill="rgb(241,108,6)" fg:x="7867" fg:w="1"/><text x="96.7895%" y="847.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="96.5395%" y="821" width="0.0123%" height="15" fill="rgb(238,87,39)" fg:x="7867" fg:w="1"/><text x="96.7895%" y="831.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="96.5395%" y="805" width="0.0123%" height="15" fill="rgb(244,101,49)" fg:x="7867" fg:w="1"/><text x="96.7895%" y="815.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="96.5395%" y="789" width="0.0123%" height="15" fill="rgb(211,43,42)" fg:x="7867" fg:w="1"/><text x="96.7895%" y="799.50"></text></g><g><title>fgetc (1 samples, 0.01%)</title><rect x="96.5395%" y="773" width="0.0123%" height="15" fill="rgb(210,93,2)" fg:x="7867" fg:w="1"/><text x="96.7895%" y="783.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="96.5395%" y="901" width="0.0245%" height="15" fill="rgb(242,149,32)" fg:x="7867" fg:w="2"/><text x="96.7895%" y="911.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="96.5395%" y="885" width="0.0245%" height="15" fill="rgb(228,1,6)" fg:x="7867" fg:w="2"/><text x="96.7895%" y="895.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="96.5395%" y="869" width="0.0245%" height="15" fill="rgb(221,0,20)" fg:x="7867" fg:w="2"/><text x="96.7895%" y="879.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="96.5395%" y="853" width="0.0245%" height="15" fill="rgb(230,39,32)" fg:x="7867" fg:w="2"/><text x="96.7895%" y="863.50"></text></g><g><title>fgetc (1 samples, 0.01%)</title><rect x="96.5517%" y="837" width="0.0123%" height="15" fill="rgb(240,89,38)" fg:x="7868" fg:w="1"/><text x="96.8017%" y="847.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="96.5763%" y="789" width="0.0123%" height="15" fill="rgb(208,221,23)" fg:x="7870" fg:w="1"/><text x="96.8263%" y="799.50"></text></g><g><title>fgetc (1 samples, 0.01%)</title><rect x="96.5763%" y="773" width="0.0123%" height="15" fill="rgb(220,145,29)" fg:x="7870" fg:w="1"/><text x="96.8263%" y="783.50"></text></g><g><title>[libasound.so.2.0.0] (14 samples, 0.17%)</title><rect x="96.5640%" y="869" width="0.1718%" height="15" fill="rgb(219,146,23)" fg:x="7869" fg:w="14"/><text x="96.8140%" y="879.50"></text></g><g><title>[libasound.so.2.0.0] (14 samples, 0.17%)</title><rect x="96.5640%" y="853" width="0.1718%" height="15" fill="rgb(244,114,49)" fg:x="7869" fg:w="14"/><text x="96.8140%" y="863.50"></text></g><g><title>[libasound.so.2.0.0] (14 samples, 0.17%)</title><rect x="96.5640%" y="837" width="0.1718%" height="15" fill="rgb(221,17,10)" fg:x="7869" fg:w="14"/><text x="96.8140%" y="847.50"></text></g><g><title>[libasound.so.2.0.0] (14 samples, 0.17%)</title><rect x="96.5640%" y="821" width="0.1718%" height="15" fill="rgb(228,133,21)" fg:x="7869" fg:w="14"/><text x="96.8140%" y="831.50"></text></g><g><title>[libasound.so.2.0.0] (14 samples, 0.17%)</title><rect x="96.5640%" y="805" width="0.1718%" height="15" fill="rgb(218,81,30)" fg:x="7869" fg:w="14"/><text x="96.8140%" y="815.50"></text></g><g><title>fgetc (12 samples, 0.15%)</title><rect x="96.5885%" y="789" width="0.1473%" height="15" fill="rgb(240,29,36)" fg:x="7871" fg:w="12"/><text x="96.8385%" y="799.50"></text></g><g><title>__GI__IO_default_uflow (12 samples, 0.15%)</title><rect x="96.5885%" y="773" width="0.1473%" height="15" fill="rgb(246,0,36)" fg:x="7871" fg:w="12"/><text x="96.8385%" y="783.50"></text></g><g><title>__GI__IO_file_underflow (12 samples, 0.15%)</title><rect x="96.5885%" y="757" width="0.1473%" height="15" fill="rgb(217,79,8)" fg:x="7871" fg:w="12"/><text x="96.8385%" y="767.50"></text></g><g><title>__GI___read (12 samples, 0.15%)</title><rect x="96.5885%" y="741" width="0.1473%" height="15" fill="rgb(229,124,44)" fg:x="7871" fg:w="12"/><text x="96.8385%" y="751.50"></text></g><g><title>__libc_disable_asynccancel (1 samples, 0.01%)</title><rect x="96.7235%" y="725" width="0.0123%" height="15" fill="rgb(210,187,22)" fg:x="7882" fg:w="1"/><text x="96.9735%" y="735.50"></text></g><g><title>__access (6 samples, 0.07%)</title><rect x="96.7358%" y="869" width="0.0736%" height="15" fill="rgb(212,115,40)" fg:x="7883" fg:w="6"/><text x="96.9858%" y="879.50"></text></g><g><title>[libasound.so.2.0.0] (23 samples, 0.28%)</title><rect x="96.5395%" y="917" width="0.2822%" height="15" fill="rgb(210,2,54)" fg:x="7867" fg:w="23"/><text x="96.7895%" y="927.50"></text></g><g><title>snd_config_hook_load (21 samples, 0.26%)</title><rect x="96.5640%" y="901" width="0.2577%" height="15" fill="rgb(227,168,43)" fg:x="7869" fg:w="21"/><text x="96.8140%" y="911.50"></text></g><g><title>[libasound.so.2.0.0] (21 samples, 0.26%)</title><rect x="96.5640%" y="885" width="0.2577%" height="15" fill="rgb(249,92,8)" fg:x="7869" fg:w="21"/><text x="96.8140%" y="895.50"></text></g><g><title>__scandir64 (1 samples, 0.01%)</title><rect x="96.8094%" y="869" width="0.0123%" height="15" fill="rgb(239,111,35)" fg:x="7889" fg:w="1"/><text x="97.0594%" y="879.50"></text></g><g><title>opendir_tail (1 samples, 0.01%)</title><rect x="96.8094%" y="853" width="0.0123%" height="15" fill="rgb(230,126,13)" fg:x="7889" fg:w="1"/><text x="97.0594%" y="863.50"></text></g><g><title>__alloc_dir (1 samples, 0.01%)</title><rect x="96.8094%" y="837" width="0.0123%" height="15" fill="rgb(243,116,33)" fg:x="7889" fg:w="1"/><text x="97.0594%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="96.8094%" y="821" width="0.0123%" height="15" fill="rgb(246,103,21)" fg:x="7889" fg:w="1"/><text x="97.0594%" y="831.50"></text></g><g><title>[libasound.so.2.0.0] (24 samples, 0.29%)</title><rect x="96.5395%" y="933" width="0.2945%" height="15" fill="rgb(237,53,26)" fg:x="7867" fg:w="24"/><text x="96.7895%" y="943.50"></text></g><g><title>snd_config_delete (1 samples, 0.01%)</title><rect x="96.8217%" y="917" width="0.0123%" height="15" fill="rgb(213,121,15)" fg:x="7890" fg:w="1"/><text x="97.0717%" y="927.50"></text></g><g><title>snd_config_delete (1 samples, 0.01%)</title><rect x="96.8217%" y="901" width="0.0123%" height="15" fill="rgb(251,83,35)" fg:x="7890" fg:w="1"/><text x="97.0717%" y="911.50"></text></g><g><title>snd_config_delete (1 samples, 0.01%)</title><rect x="96.8217%" y="885" width="0.0123%" height="15" fill="rgb(222,79,8)" fg:x="7890" fg:w="1"/><text x="97.0717%" y="895.50"></text></g><g><title>snd_config_delete (1 samples, 0.01%)</title><rect x="96.8217%" y="869" width="0.0123%" height="15" fill="rgb(217,74,36)" fg:x="7890" fg:w="1"/><text x="97.0717%" y="879.50"></text></g><g><title>snd_config_delete (1 samples, 0.01%)</title><rect x="96.8217%" y="853" width="0.0123%" height="15" fill="rgb(221,14,30)" fg:x="7890" fg:w="1"/><text x="97.0717%" y="863.50"></text></g><g><title>snd_config_delete (1 samples, 0.01%)</title><rect x="96.8217%" y="837" width="0.0123%" height="15" fill="rgb(216,221,5)" fg:x="7890" fg:w="1"/><text x="97.0717%" y="847.50"></text></g><g><title>snd_config_delete (1 samples, 0.01%)</title><rect x="96.8217%" y="821" width="0.0123%" height="15" fill="rgb(236,118,16)" fg:x="7890" fg:w="1"/><text x="97.0717%" y="831.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="96.8217%" y="805" width="0.0123%" height="15" fill="rgb(243,91,43)" fg:x="7890" fg:w="1"/><text x="97.0717%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="96.8217%" y="789" width="0.0123%" height="15" fill="rgb(231,110,7)" fg:x="7890" fg:w="1"/><text x="97.0717%" y="799.50"></text></g><g><title>&lt;bevy_audio::AudioPlugin as bevy_app::plugin::Plugin&gt;::build (31 samples, 0.38%)</title><rect x="96.5272%" y="1237" width="0.3804%" height="15" fill="rgb(217,80,6)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1247.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::init_non_send_resource (31 samples, 0.38%)</title><rect x="96.5272%" y="1221" width="0.3804%" height="15" fill="rgb(251,116,7)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1231.50"></text></g><g><title>&lt;T as bevy_ecs::world::FromWorld&gt;::from_world (31 samples, 0.38%)</title><rect x="96.5272%" y="1205" width="0.3804%" height="15" fill="rgb(236,70,22)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1215.50"></text></g><g><title>&lt;bevy_audio::audio_output::AudioOutput&lt;P&gt; as core::default::Default&gt;::default (31 samples, 0.38%)</title><rect x="96.5272%" y="1189" width="0.3804%" height="15" fill="rgb(245,13,10)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1199.50"></text></g><g><title>rodio::stream::OutputStream::try_default (31 samples, 0.38%)</title><rect x="96.5272%" y="1173" width="0.3804%" height="15" fill="rgb(233,146,34)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1183.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (31 samples, 0.38%)</title><rect x="96.5272%" y="1157" width="0.3804%" height="15" fill="rgb(241,196,34)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1167.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (31 samples, 0.38%)</title><rect x="96.5272%" y="1141" width="0.3804%" height="15" fill="rgb(207,150,20)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1151.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (31 samples, 0.38%)</title><rect x="96.5272%" y="1125" width="0.3804%" height="15" fill="rgb(251,27,52)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1135.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (31 samples, 0.38%)</title><rect x="96.5272%" y="1109" width="0.3804%" height="15" fill="rgb(221,76,2)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1119.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (31 samples, 0.38%)</title><rect x="96.5272%" y="1093" width="0.3804%" height="15" fill="rgb(242,94,41)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1103.50"></text></g><g><title>cpal::host::alsa::Device::default_config (31 samples, 0.38%)</title><rect x="96.5272%" y="1077" width="0.3804%" height="15" fill="rgb(245,9,8)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1087.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (31 samples, 0.38%)</title><rect x="96.5272%" y="1061" width="0.3804%" height="15" fill="rgb(236,139,26)" fg:x="7866" fg:w="31"/><text x="96.7772%" y="1071.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (30 samples, 0.37%)</title><rect x="96.5395%" y="1045" width="0.3681%" height="15" fill="rgb(249,11,18)" fg:x="7867" fg:w="30"/><text x="96.7895%" y="1055.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (30 samples, 0.37%)</title><rect x="96.5395%" y="1029" width="0.3681%" height="15" fill="rgb(206,175,35)" fg:x="7867" fg:w="30"/><text x="96.7895%" y="1039.50"></text></g><g><title>alsa::pcm::PCM::new (30 samples, 0.37%)</title><rect x="96.5395%" y="1013" width="0.3681%" height="15" fill="rgb(231,3,46)" fg:x="7867" fg:w="30"/><text x="96.7895%" y="1023.50"></text></g><g><title>alsa::pcm::PCM::open (30 samples, 0.37%)</title><rect x="96.5395%" y="997" width="0.3681%" height="15" fill="rgb(243,27,8)" fg:x="7867" fg:w="30"/><text x="96.7895%" y="1007.50"></text></g><g><title>snd_pcm_open (30 samples, 0.37%)</title><rect x="96.5395%" y="981" width="0.3681%" height="15" fill="rgb(223,53,13)" fg:x="7867" fg:w="30"/><text x="96.7895%" y="991.50"></text></g><g><title>snd_config_update_ref (30 samples, 0.37%)</title><rect x="96.5395%" y="965" width="0.3681%" height="15" fill="rgb(248,68,15)" fg:x="7867" fg:w="30"/><text x="96.7895%" y="975.50"></text></g><g><title>snd_config_update_r (30 samples, 0.37%)</title><rect x="96.5395%" y="949" width="0.3681%" height="15" fill="rgb(216,61,26)" fg:x="7867" fg:w="30"/><text x="96.7895%" y="959.50"></text></g><g><title>__fstatat64 (6 samples, 0.07%)</title><rect x="96.8340%" y="933" width="0.0736%" height="15" fill="rgb(213,201,24)" fg:x="7891" fg:w="6"/><text x="97.0840%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="96.9076%" y="1173" width="0.0123%" height="15" fill="rgb(214,20,17)" fg:x="7897" fg:w="1"/><text x="97.1576%" y="1183.50"></text></g><g><title>gilrs::mapping::MappingDb::insert::{{closure}} (1 samples, 0.01%)</title><rect x="96.9076%" y="1157" width="0.0123%" height="15" fill="rgb(206,21,46)" fg:x="7897" fg:w="1"/><text x="97.1576%" y="1167.50"></text></g><g><title>uuid::parser::&lt;impl uuid::Uuid&gt;::parse_str (1 samples, 0.01%)</title><rect x="96.9076%" y="1141" width="0.0123%" height="15" fill="rgb(234,222,24)" fg:x="7897" fg:w="1"/><text x="97.1576%" y="1151.50"></text></g><g><title>gilrs::mapping::MappingDb::add_included_mappings (3 samples, 0.04%)</title><rect x="96.9076%" y="1205" width="0.0368%" height="15" fill="rgb(221,25,26)" fg:x="7897" fg:w="3"/><text x="97.1576%" y="1215.50"></text></g><g><title>gilrs::mapping::MappingDb::insert (3 samples, 0.04%)</title><rect x="96.9076%" y="1189" width="0.0368%" height="15" fill="rgb(241,148,26)" fg:x="7897" fg:w="3"/><text x="97.1576%" y="1199.50"></text></g><g><title>core::str::&lt;impl str&gt;::find (2 samples, 0.02%)</title><rect x="96.9199%" y="1173" width="0.0245%" height="15" fill="rgb(248,119,35)" fg:x="7898" fg:w="2"/><text x="97.1699%" y="1183.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (2 samples, 0.02%)</title><rect x="96.9199%" y="1157" width="0.0245%" height="15" fill="rgb(239,126,23)" fg:x="7898" fg:w="2"/><text x="97.1699%" y="1167.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (2 samples, 0.02%)</title><rect x="96.9199%" y="1141" width="0.0245%" height="15" fill="rgb(247,120,25)" fg:x="7898" fg:w="2"/><text x="97.1699%" y="1151.50"></text></g><g><title>[libudev.so.1.7.2] (3 samples, 0.04%)</title><rect x="97.2635%" y="981" width="0.0368%" height="15" fill="rgb(220,93,32)" fg:x="7926" fg:w="3"/><text x="97.5135%" y="991.50"></text></g><g><title>[libudev.so.1.7.2] (8 samples, 0.10%)</title><rect x="97.2144%" y="997" width="0.0982%" height="15" fill="rgb(236,46,26)" fg:x="7922" fg:w="8"/><text x="97.4644%" y="1007.50"></text></g><g><title>__strncmp_avx2 (1 samples, 0.01%)</title><rect x="97.3003%" y="981" width="0.0123%" height="15" fill="rgb(229,20,45)" fg:x="7929" fg:w="1"/><text x="97.5503%" y="991.50"></text></g><g><title>[libudev.so.1.7.2] (18 samples, 0.22%)</title><rect x="97.1162%" y="1013" width="0.2209%" height="15" fill="rgb(225,168,41)" fg:x="7914" fg:w="18"/><text x="97.3662%" y="1023.50"></text></g><g><title>__strlen_avx2 (2 samples, 0.02%)</title><rect x="97.3126%" y="997" width="0.0245%" height="15" fill="rgb(253,123,20)" fg:x="7930" fg:w="2"/><text x="97.5626%" y="1007.50"></text></g><g><title>[libudev.so.1.7.2] (22 samples, 0.27%)</title><rect x="97.0794%" y="1029" width="0.2700%" height="15" fill="rgb(244,17,29)" fg:x="7911" fg:w="22"/><text x="97.3294%" y="1039.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="97.3371%" y="1013" width="0.0123%" height="15" fill="rgb(242,196,24)" fg:x="7932" fg:w="1"/><text x="97.5871%" y="1023.50"></text></g><g><title>__GI__IO_file_fopen (1 samples, 0.01%)</title><rect x="97.3494%" y="1013" width="0.0123%" height="15" fill="rgb(210,113,45)" fg:x="7933" fg:w="1"/><text x="97.5994%" y="1023.50"></text></g><g><title>__GI__IO_file_open (1 samples, 0.01%)</title><rect x="97.3494%" y="997" width="0.0123%" height="15" fill="rgb(205,129,3)" fg:x="7933" fg:w="1"/><text x="97.5994%" y="1007.50"></text></g><g><title>__GI___open64 (1 samples, 0.01%)</title><rect x="97.3494%" y="981" width="0.0123%" height="15" fill="rgb(232,74,10)" fg:x="7933" fg:w="1"/><text x="97.5994%" y="991.50"></text></g><g><title>__libc_enable_asynccancel (1 samples, 0.01%)</title><rect x="97.3494%" y="965" width="0.0123%" height="15" fill="rgb(251,63,43)" fg:x="7933" fg:w="1"/><text x="97.5994%" y="975.50"></text></g><g><title>__fopen_internal (3 samples, 0.04%)</title><rect x="97.3494%" y="1029" width="0.0368%" height="15" fill="rgb(228,215,15)" fg:x="7933" fg:w="3"/><text x="97.5994%" y="1039.50"></text></g><g><title>__GI__IO_un_link.part.0 (2 samples, 0.02%)</title><rect x="97.3616%" y="1013" width="0.0245%" height="15" fill="rgb(233,179,38)" fg:x="7934" fg:w="2"/><text x="97.6116%" y="1023.50"></text></g><g><title>[libudev.so.1.7.2] (30 samples, 0.37%)</title><rect x="97.0303%" y="1045" width="0.3681%" height="15" fill="rgb(227,187,9)" fg:x="7907" fg:w="30"/><text x="97.2803%" y="1055.50"></text></g><g><title>__strncmp_avx2 (1 samples, 0.01%)</title><rect x="97.3862%" y="1029" width="0.0123%" height="15" fill="rgb(231,89,27)" fg:x="7936" fg:w="1"/><text x="97.6362%" y="1039.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="97.3985%" y="1045" width="0.0123%" height="15" fill="rgb(225,117,1)" fg:x="7937" fg:w="1"/><text x="97.6485%" y="1055.50"></text></g><g><title>__GI___libc_malloc (8 samples, 0.10%)</title><rect x="97.4107%" y="1045" width="0.0982%" height="15" fill="rgb(239,120,49)" fg:x="7938" fg:w="8"/><text x="97.6607%" y="1055.50"></text></g><g><title>_int_malloc (6 samples, 0.07%)</title><rect x="97.4353%" y="1029" width="0.0736%" height="15" fill="rgb(236,137,37)" fg:x="7940" fg:w="6"/><text x="97.6853%" y="1039.50"></text></g><g><title>malloc_consolidate (6 samples, 0.07%)</title><rect x="97.4353%" y="1013" width="0.0736%" height="15" fill="rgb(239,73,42)" fg:x="7940" fg:w="6"/><text x="97.6853%" y="1023.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="97.5089%" y="1045" width="0.0123%" height="15" fill="rgb(207,169,6)" fg:x="7946" fg:w="1"/><text x="97.7589%" y="1055.50"></text></g><g><title>__GI___strdup (1 samples, 0.01%)</title><rect x="97.5212%" y="1045" width="0.0123%" height="15" fill="rgb(228,171,10)" fg:x="7947" fg:w="1"/><text x="97.7712%" y="1055.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="97.5212%" y="1029" width="0.0123%" height="15" fill="rgb(217,228,47)" fg:x="7947" fg:w="1"/><text x="97.7712%" y="1039.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="97.5334%" y="1045" width="0.0123%" height="15" fill="rgb(227,116,17)" fg:x="7948" fg:w="1"/><text x="97.7834%" y="1055.50"></text></g><g><title>__libc_close (2 samples, 0.02%)</title><rect x="97.5457%" y="1045" width="0.0245%" height="15" fill="rgb(245,128,36)" fg:x="7949" fg:w="2"/><text x="97.7957%" y="1055.50"></text></g><g><title>__libc_read (2 samples, 0.02%)</title><rect x="97.5703%" y="1045" width="0.0245%" height="15" fill="rgb(221,139,3)" fg:x="7951" fg:w="2"/><text x="97.8203%" y="1055.50"></text></g><g><title>__malloc_usable_size (1 samples, 0.01%)</title><rect x="97.5948%" y="1045" width="0.0123%" height="15" fill="rgb(207,59,54)" fg:x="7953" fg:w="1"/><text x="97.8448%" y="1055.50"></text></g><g><title>__stpcpy_avx2 (2 samples, 0.02%)</title><rect x="97.6071%" y="1045" width="0.0245%" height="15" fill="rgb(231,129,12)" fg:x="7954" fg:w="2"/><text x="97.8571%" y="1055.50"></text></g><g><title>[libudev.so.1.7.2] (56 samples, 0.69%)</title><rect x="96.9567%" y="1061" width="0.6872%" height="15" fill="rgb(235,49,17)" fg:x="7901" fg:w="56"/><text x="97.2067%" y="1071.50"></text></g><g><title>__strchrnul_avx2 (1 samples, 0.01%)</title><rect x="97.6316%" y="1045" width="0.0123%" height="15" fill="rgb(229,175,11)" fg:x="7956" fg:w="1"/><text x="97.8816%" y="1055.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="97.6439%" y="1061" width="0.0245%" height="15" fill="rgb(206,187,30)" fg:x="7957" fg:w="2"/><text x="97.8939%" y="1071.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="97.6439%" y="1045" width="0.0245%" height="15" fill="rgb(214,39,19)" fg:x="7957" fg:w="2"/><text x="97.8939%" y="1055.50"></text></g><g><title>__libc_disable_asynccancel (1 samples, 0.01%)</title><rect x="97.6684%" y="1045" width="0.0123%" height="15" fill="rgb(243,92,46)" fg:x="7959" fg:w="1"/><text x="97.9184%" y="1055.50"></text></g><g><title>__GI___openat (2 samples, 0.02%)</title><rect x="97.6684%" y="1061" width="0.0245%" height="15" fill="rgb(240,125,36)" fg:x="7959" fg:w="2"/><text x="97.9184%" y="1071.50"></text></g><g><title>__libc_enable_asynccancel (1 samples, 0.01%)</title><rect x="97.6807%" y="1045" width="0.0123%" height="15" fill="rgb(217,193,45)" fg:x="7960" fg:w="1"/><text x="97.9307%" y="1055.50"></text></g><g><title>__GI___strdup (3 samples, 0.04%)</title><rect x="97.6930%" y="1061" width="0.0368%" height="15" fill="rgb(230,127,16)" fg:x="7961" fg:w="3"/><text x="97.9430%" y="1071.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.04%)</title><rect x="97.6930%" y="1045" width="0.0368%" height="15" fill="rgb(208,161,0)" fg:x="7961" fg:w="3"/><text x="97.9430%" y="1055.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="97.7298%" y="1045" width="0.0123%" height="15" fill="rgb(251,69,39)" fg:x="7964" fg:w="1"/><text x="97.9798%" y="1055.50"></text></g><g><title>__GI___strndup (2 samples, 0.02%)</title><rect x="97.7298%" y="1061" width="0.0245%" height="15" fill="rgb(229,86,22)" fg:x="7964" fg:w="2"/><text x="97.9798%" y="1071.50"></text></g><g><title>__strnlen_avx2 (1 samples, 0.01%)</title><rect x="97.7421%" y="1045" width="0.0123%" height="15" fill="rgb(223,67,43)" fg:x="7965" fg:w="1"/><text x="97.9921%" y="1055.50"></text></g><g><title>__errno_location (1 samples, 0.01%)</title><rect x="97.7543%" y="1061" width="0.0123%" height="15" fill="rgb(254,80,31)" fg:x="7966" fg:w="1"/><text x="98.0043%" y="1071.50"></text></g><g><title>__fstatat64 (1 samples, 0.01%)</title><rect x="97.7666%" y="1061" width="0.0123%" height="15" fill="rgb(225,149,52)" fg:x="7967" fg:w="1"/><text x="98.0166%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="97.7789%" y="1061" width="0.0245%" height="15" fill="rgb(214,169,18)" fg:x="7968" fg:w="2"/><text x="98.0289%" y="1071.50"></text></g><g><title>__strchr_avx2 (2 samples, 0.02%)</title><rect x="97.8034%" y="1061" width="0.0245%" height="15" fill="rgb(236,224,43)" fg:x="7970" fg:w="2"/><text x="98.0534%" y="1071.50"></text></g><g><title>[libudev.so.1.7.2] (72 samples, 0.88%)</title><rect x="96.9567%" y="1077" width="0.8835%" height="15" fill="rgb(251,125,34)" fg:x="7901" fg:w="72"/><text x="97.2067%" y="1087.50"></text></g><g><title>__strtoul (1 samples, 0.01%)</title><rect x="97.8280%" y="1061" width="0.0123%" height="15" fill="rgb(224,39,44)" fg:x="7972" fg:w="1"/><text x="98.0780%" y="1071.50"></text></g><g><title>__GI__IO_fread (1 samples, 0.01%)</title><rect x="97.8402%" y="1077" width="0.0123%" height="15" fill="rgb(206,111,46)" fg:x="7973" fg:w="1"/><text x="98.0902%" y="1087.50"></text></g><g><title>_IO_file_xsgetn (1 samples, 0.01%)</title><rect x="97.8402%" y="1061" width="0.0123%" height="15" fill="rgb(227,147,50)" fg:x="7973" fg:w="1"/><text x="98.0902%" y="1071.50"></text></g><g><title>__GI__IO_file_underflow (1 samples, 0.01%)</title><rect x="97.8402%" y="1045" width="0.0123%" height="15" fill="rgb(239,144,36)" fg:x="7973" fg:w="1"/><text x="98.0902%" y="1055.50"></text></g><g><title>__GI___read (1 samples, 0.01%)</title><rect x="97.8402%" y="1029" width="0.0123%" height="15" fill="rgb(216,17,19)" fg:x="7973" fg:w="1"/><text x="98.0902%" y="1039.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="97.8525%" y="1077" width="0.0123%" height="15" fill="rgb(211,192,29)" fg:x="7974" fg:w="1"/><text x="98.1025%" y="1087.50"></text></g><g><title>_IO_new_file_init_internal (1 samples, 0.01%)</title><rect x="97.8648%" y="1061" width="0.0123%" height="15" fill="rgb(238,195,20)" fg:x="7975" fg:w="1"/><text x="98.1148%" y="1071.50"></text></g><g><title>__GI__IO_link_in (1 samples, 0.01%)</title><rect x="97.8648%" y="1045" width="0.0123%" height="15" fill="rgb(213,210,42)" fg:x="7975" fg:w="1"/><text x="98.1148%" y="1055.50"></text></g><g><title>__pthread_cleanup_push_defer (1 samples, 0.01%)</title><rect x="97.8648%" y="1029" width="0.0123%" height="15" fill="rgb(244,4,49)" fg:x="7975" fg:w="1"/><text x="98.1148%" y="1039.50"></text></g><g><title>__fopen_internal (2 samples, 0.02%)</title><rect x="97.8648%" y="1077" width="0.0245%" height="15" fill="rgb(254,106,42)" fg:x="7975" fg:w="2"/><text x="98.1148%" y="1087.50"></text></g><g><title>__GI__IO_un_link.part.0 (1 samples, 0.01%)</title><rect x="97.8770%" y="1061" width="0.0123%" height="15" fill="rgb(222,182,12)" fg:x="7976" fg:w="1"/><text x="98.1270%" y="1071.50"></text></g><g><title>__malloc_usable_size (1 samples, 0.01%)</title><rect x="97.8893%" y="1077" width="0.0123%" height="15" fill="rgb(228,160,15)" fg:x="7977" fg:w="1"/><text x="98.1393%" y="1087.50"></text></g><g><title>[libudev.so.1.7.2] (79 samples, 0.97%)</title><rect x="96.9444%" y="1093" width="0.9694%" height="15" fill="rgb(243,149,43)" fg:x="7900" fg:w="79"/><text x="97.1944%" y="1103.50"></text></g><g><title>__stpcpy_avx2 (1 samples, 0.01%)</title><rect x="97.9016%" y="1077" width="0.0123%" height="15" fill="rgb(245,150,32)" fg:x="7978" fg:w="1"/><text x="98.1516%" y="1087.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="97.9139%" y="1093" width="0.0123%" height="15" fill="rgb(205,43,19)" fg:x="7979" fg:w="1"/><text x="98.1639%" y="1103.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="97.9139%" y="1077" width="0.0123%" height="15" fill="rgb(249,189,35)" fg:x="7979" fg:w="1"/><text x="98.1639%" y="1087.50"></text></g><g><title>__asprintf_chk (1 samples, 0.01%)</title><rect x="97.9261%" y="1093" width="0.0123%" height="15" fill="rgb(223,9,0)" fg:x="7980" fg:w="1"/><text x="98.1761%" y="1103.50"></text></g><g><title>__vasprintf_internal (1 samples, 0.01%)</title><rect x="97.9261%" y="1077" width="0.0123%" height="15" fill="rgb(213,142,45)" fg:x="7980" fg:w="1"/><text x="98.1761%" y="1087.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="97.9261%" y="1061" width="0.0123%" height="15" fill="rgb(208,148,2)" fg:x="7980" fg:w="1"/><text x="98.1761%" y="1071.50"></text></g><g><title>[libudev.so.1.7.2] (82 samples, 1.01%)</title><rect x="96.9444%" y="1109" width="1.0063%" height="15" fill="rgb(207,191,42)" fg:x="7900" fg:w="82"/><text x="97.1944%" y="1119.50"></text></g><g><title>__strchr_avx2 (1 samples, 0.01%)</title><rect x="97.9384%" y="1093" width="0.0123%" height="15" fill="rgb(215,218,38)" fg:x="7981" fg:w="1"/><text x="98.1884%" y="1103.50"></text></g><g><title>&lt;bevy_gilrs::GilrsPlugin as bevy_app::plugin::Plugin&gt;::build (88 samples, 1.08%)</title><rect x="96.9076%" y="1237" width="1.0799%" height="15" fill="rgb(223,195,24)" fg:x="7897" fg:w="88"/><text x="97.1576%" y="1247.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (88 samples, 1.08%)</title><rect x="96.9076%" y="1221" width="1.0799%" height="15" fill="rgb(254,60,30)" fg:x="7897" fg:w="88"/><text x="97.1576%" y="1231.50"></text></g><g><title>gilrs_core::Gilrs::new (85 samples, 1.04%)</title><rect x="96.9444%" y="1205" width="1.0431%" height="15" fill="rgb(223,2,9)" fg:x="7900" fg:w="85"/><text x="97.1944%" y="1215.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (85 samples, 1.04%)</title><rect x="96.9444%" y="1189" width="1.0431%" height="15" fill="rgb(253,134,46)" fg:x="7900" fg:w="85"/><text x="97.1944%" y="1199.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (85 samples, 1.04%)</title><rect x="96.9444%" y="1173" width="1.0431%" height="15" fill="rgb(206,209,20)" fg:x="7900" fg:w="85"/><text x="97.1944%" y="1183.50"></text></g><g><title>udev_enumerate_scan_devices (85 samples, 1.04%)</title><rect x="96.9444%" y="1157" width="1.0431%" height="15" fill="rgb(253,104,42)" fg:x="7900" fg:w="85"/><text x="97.1944%" y="1167.50"></text></g><g><title>[libudev.so.1.7.2] (85 samples, 1.04%)</title><rect x="96.9444%" y="1141" width="1.0431%" height="15" fill="rgb(223,47,23)" fg:x="7900" fg:w="85"/><text x="97.1944%" y="1151.50"></text></g><g><title>[libudev.so.1.7.2] (85 samples, 1.04%)</title><rect x="96.9444%" y="1125" width="1.0431%" height="15" fill="rgb(247,148,44)" fg:x="7900" fg:w="85"/><text x="97.1944%" y="1135.50"></text></g><g><title>___sprintf_chk (3 samples, 0.04%)</title><rect x="97.9507%" y="1109" width="0.0368%" height="15" fill="rgb(221,224,16)" fg:x="7982" fg:w="3"/><text x="98.2007%" y="1119.50"></text></g><g><title>__vsprintf_internal (1 samples, 0.01%)</title><rect x="97.9752%" y="1093" width="0.0123%" height="15" fill="rgb(252,103,29)" fg:x="7984" fg:w="1"/><text x="98.2252%" y="1103.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="97.9752%" y="1077" width="0.0123%" height="15" fill="rgb(244,185,34)" fg:x="7984" fg:w="1"/><text x="98.2252%" y="1087.50"></text></g><g><title>__GI__IO_default_xsputn (1 samples, 0.01%)</title><rect x="97.9752%" y="1061" width="0.0123%" height="15" fill="rgb(218,18,50)" fg:x="7984" fg:w="1"/><text x="98.2252%" y="1071.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="97.9752%" y="1045" width="0.0123%" height="15" fill="rgb(234,105,8)" fg:x="7984" fg:w="1"/><text x="98.2252%" y="1055.50"></text></g><g><title>&lt;bevy_input::InputPlugin as bevy_app::plugin::Plugin&gt;::build (1 samples, 0.01%)</title><rect x="97.9875%" y="1237" width="0.0123%" height="15" fill="rgb(249,51,19)" fg:x="7985" fg:w="1"/><text x="98.2375%" y="1247.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_event (1 samples, 0.01%)</title><rect x="97.9875%" y="1221" width="0.0123%" height="15" fill="rgb(233,132,7)" fg:x="7985" fg:w="1"/><text x="98.2375%" y="1231.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::insert_resource (1 samples, 0.01%)</title><rect x="97.9875%" y="1205" width="0.0123%" height="15" fill="rgb(229,181,43)" fg:x="7985" fg:w="1"/><text x="98.2375%" y="1215.50"></text></g><g><title>&lt;engine::engine::ui::UIPlugin as bevy_app::plugin::Plugin&gt;::build (1 samples, 0.01%)</title><rect x="97.9998%" y="1237" width="0.0123%" height="15" fill="rgb(223,20,7)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1247.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_startup_system (1 samples, 0.01%)</title><rect x="97.9998%" y="1221" width="0.0123%" height="15" fill="rgb(245,13,34)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1231.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_startup_system_to_stage (1 samples, 0.01%)</title><rect x="97.9998%" y="1205" width="0.0123%" height="15" fill="rgb(242,0,53)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1215.50"></text></g><g><title>bevy_ecs::schedule::Schedule::stage (1 samples, 0.01%)</title><rect x="97.9998%" y="1189" width="0.0123%" height="15" fill="rgb(233,115,19)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1199.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_startup_system_to_stage::{{closure}} (1 samples, 0.01%)</title><rect x="97.9998%" y="1173" width="0.0123%" height="15" fill="rgb(216,170,26)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1183.50"></text></g><g><title>bevy_ecs::schedule::Schedule::add_system_to_stage (1 samples, 0.01%)</title><rect x="97.9998%" y="1157" width="0.0123%" height="15" fill="rgb(233,13,0)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1167.50"></text></g><g><title>bevy_ecs::schedule::stage::SystemStage::add_system (1 samples, 0.01%)</title><rect x="97.9998%" y="1141" width="0.0123%" height="15" fill="rgb(228,79,21)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1151.50"></text></g><g><title>bevy_ecs::schedule::stage::SystemStage::add_system_inner (1 samples, 0.01%)</title><rect x="97.9998%" y="1125" width="0.0123%" height="15" fill="rgb(244,17,41)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="97.9998%" y="1109" width="0.0123%" height="15" fill="rgb(253,152,11)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="97.9998%" y="1093" width="0.0123%" height="15" fill="rgb(254,94,47)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="97.9998%" y="1077" width="0.0123%" height="15" fill="rgb(239,66,43)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="97.9998%" y="1061" width="0.0123%" height="15" fill="rgb(251,25,22)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="97.9998%" y="1045" width="0.0123%" height="15" fill="rgb(227,65,46)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="97.9998%" y="1029" width="0.0123%" height="15" fill="rgb(240,180,32)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1039.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="97.9998%" y="1013" width="0.0123%" height="15" fill="rgb(242,11,35)" fg:x="7986" fg:w="1"/><text x="98.2498%" y="1023.50"></text></g><g><title>engine::engine::world::TileEntityMap::new (3 samples, 0.04%)</title><rect x="98.0120%" y="1221" width="0.0368%" height="15" fill="rgb(221,41,49)" fg:x="7987" fg:w="3"/><text x="98.2620%" y="1231.50"></text></g><g><title>alloc::vec::from_elem (3 samples, 0.04%)</title><rect x="98.0120%" y="1205" width="0.0368%" height="15" fill="rgb(253,80,52)" fg:x="7987" fg:w="3"/><text x="98.2620%" y="1215.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (3 samples, 0.04%)</title><rect x="98.0120%" y="1189" width="0.0368%" height="15" fill="rgb(232,152,28)" fg:x="7987" fg:w="3"/><text x="98.2620%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (3 samples, 0.04%)</title><rect x="98.0120%" y="1173" width="0.0368%" height="15" fill="rgb(219,110,12)" fg:x="7987" fg:w="3"/><text x="98.2620%" y="1183.50"></text></g><g><title>core::ptr::write (3 samples, 0.04%)</title><rect x="98.0120%" y="1157" width="0.0368%" height="15" fill="rgb(218,98,43)" fg:x="7987" fg:w="3"/><text x="98.2620%" y="1167.50"></text></g><g><title>__memset_avx2_erms (3 samples, 0.04%)</title><rect x="98.0120%" y="1141" width="0.0368%" height="15" fill="rgb(253,96,49)" fg:x="7987" fg:w="3"/><text x="98.2620%" y="1151.50"></text></g><g><title>__libc_start_main (132 samples, 1.62%)</title><rect x="96.4413%" y="1509" width="1.6198%" height="15" fill="rgb(238,132,17)" fg:x="7859" fg:w="132"/><text x="96.6913%" y="1519.50"></text></g><g><title>main (125 samples, 1.53%)</title><rect x="96.5272%" y="1493" width="1.5339%" height="15" fill="rgb(208,82,25)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1503.50"></text></g><g><title>std::rt::lang_start_internal (125 samples, 1.53%)</title><rect x="96.5272%" y="1477" width="1.5339%" height="15" fill="rgb(237,77,13)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1487.50"></text></g><g><title>std::panic::catch_unwind (125 samples, 1.53%)</title><rect x="96.5272%" y="1461" width="1.5339%" height="15" fill="rgb(230,6,11)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1471.50"></text></g><g><title>std::panicking::try (125 samples, 1.53%)</title><rect x="96.5272%" y="1445" width="1.5339%" height="15" fill="rgb(207,29,48)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1455.50"></text></g><g><title>std::panicking::try::do_call (125 samples, 1.53%)</title><rect x="96.5272%" y="1429" width="1.5339%" height="15" fill="rgb(247,105,22)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1439.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (125 samples, 1.53%)</title><rect x="96.5272%" y="1413" width="1.5339%" height="15" fill="rgb(223,114,44)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1423.50"></text></g><g><title>std::panic::catch_unwind (125 samples, 1.53%)</title><rect x="96.5272%" y="1397" width="1.5339%" height="15" fill="rgb(242,3,46)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1407.50"></text></g><g><title>std::panicking::try (125 samples, 1.53%)</title><rect x="96.5272%" y="1381" width="1.5339%" height="15" fill="rgb(243,197,8)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1391.50"></text></g><g><title>std::panicking::try::do_call (125 samples, 1.53%)</title><rect x="96.5272%" y="1365" width="1.5339%" height="15" fill="rgb(238,171,27)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1375.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (125 samples, 1.53%)</title><rect x="96.5272%" y="1349" width="1.5339%" height="15" fill="rgb(254,144,27)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1359.50"></text></g><g><title>std::rt::lang_start::{{closure}} (125 samples, 1.53%)</title><rect x="96.5272%" y="1333" width="1.5339%" height="15" fill="rgb(216,203,36)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1343.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (125 samples, 1.53%)</title><rect x="96.5272%" y="1317" width="1.5339%" height="15" fill="rgb(247,27,26)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1327.50"></text></g><g><title>core::ops::function::FnOnce::call_once (125 samples, 1.53%)</title><rect x="96.5272%" y="1301" width="1.5339%" height="15" fill="rgb(234,180,24)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1311.50"></text></g><g><title>engine::main (125 samples, 1.53%)</title><rect x="96.5272%" y="1285" width="1.5339%" height="15" fill="rgb(221,50,43)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1295.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_plugins (125 samples, 1.53%)</title><rect x="96.5272%" y="1269" width="1.5339%" height="15" fill="rgb(236,50,6)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1279.50"></text></g><g><title>bevy_app::plugin_group::PluginGroupBuilder::finish (125 samples, 1.53%)</title><rect x="96.5272%" y="1253" width="1.5339%" height="15" fill="rgb(245,172,32)" fg:x="7866" fg:w="125"/><text x="96.7772%" y="1263.50"></text></g><g><title>&lt;engine::engine::world::WorldPlugin as bevy_app::plugin::Plugin&gt;::build (4 samples, 0.05%)</title><rect x="98.0120%" y="1237" width="0.0491%" height="15" fill="rgb(207,54,46)" fg:x="7987" fg:w="4"/><text x="98.2620%" y="1247.50"></text></g><g><title>engine::engine::world::TileWeightMap::new (1 samples, 0.01%)</title><rect x="98.0488%" y="1221" width="0.0123%" height="15" fill="rgb(218,67,44)" fg:x="7990" fg:w="1"/><text x="98.2988%" y="1231.50"></text></g><g><title>alloc::vec::from_elem (1 samples, 0.01%)</title><rect x="98.0488%" y="1205" width="0.0123%" height="15" fill="rgb(208,152,22)" fg:x="7990" fg:w="1"/><text x="98.2988%" y="1215.50"></text></g><g><title>&lt;T as alloc::vec::spec_from_elem::SpecFromElem&gt;::from_elem (1 samples, 0.01%)</title><rect x="98.0488%" y="1189" width="0.0123%" height="15" fill="rgb(243,177,0)" fg:x="7990" fg:w="1"/><text x="98.2988%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_with (1 samples, 0.01%)</title><rect x="98.0488%" y="1173" width="0.0123%" height="15" fill="rgb(212,75,12)" fg:x="7990" fg:w="1"/><text x="98.2988%" y="1183.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="98.0488%" y="1157" width="0.0123%" height="15" fill="rgb(212,129,29)" fg:x="7990" fg:w="1"/><text x="98.2988%" y="1167.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.01%)</title><rect x="98.0611%" y="1477" width="0.0123%" height="15" fill="rgb(241,229,35)" fg:x="7991" fg:w="1"/><text x="98.3111%" y="1487.50"></text></g><g><title>_start (141 samples, 1.73%)</title><rect x="96.3799%" y="1525" width="1.7303%" height="15" fill="rgb(232,49,32)" fg:x="7854" fg:w="141"/><text x="96.6299%" y="1535.50"></text></g><g><title>_dl_start (4 samples, 0.05%)</title><rect x="98.0611%" y="1509" width="0.0491%" height="15" fill="rgb(243,119,48)" fg:x="7991" fg:w="4"/><text x="98.3111%" y="1519.50"></text></g><g><title>_dl_sysdep_start (4 samples, 0.05%)</title><rect x="98.0611%" y="1493" width="0.0491%" height="15" fill="rgb(212,205,30)" fg:x="7991" fg:w="4"/><text x="98.3111%" y="1503.50"></text></g><g><title>dl_main (3 samples, 0.04%)</title><rect x="98.0734%" y="1477" width="0.0368%" height="15" fill="rgb(218,175,42)" fg:x="7992" fg:w="3"/><text x="98.3234%" y="1487.50"></text></g><g><title>_dl_relocate_object (3 samples, 0.04%)</title><rect x="98.0734%" y="1461" width="0.0368%" height="15" fill="rgb(230,156,27)" fg:x="7992" fg:w="3"/><text x="98.3234%" y="1471.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="98.0979%" y="1445" width="0.0123%" height="15" fill="rgb(254,32,43)" fg:x="7994" fg:w="1"/><text x="98.3479%" y="1455.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="98.0979%" y="1429" width="0.0123%" height="15" fill="rgb(246,89,34)" fg:x="7994" fg:w="1"/><text x="98.3479%" y="1439.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="98.1102%" y="1525" width="0.0123%" height="15" fill="rgb(247,162,17)" fg:x="7995" fg:w="1"/><text x="98.3602%" y="1535.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="98.1102%" y="1509" width="0.0123%" height="15" fill="rgb(219,71,37)" fg:x="7995" fg:w="1"/><text x="98.3602%" y="1519.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="98.1102%" y="1493" width="0.0123%" height="15" fill="rgb(210,184,7)" fg:x="7995" fg:w="1"/><text x="98.3602%" y="1503.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="98.1102%" y="1477" width="0.0123%" height="15" fill="rgb(245,16,32)" fg:x="7995" fg:w="1"/><text x="98.3602%" y="1487.50"></text></g><g><title>anon.0b5d83916cc0e85ce998536da9a8ebde.2.llvm.2775228863088890688 (1 samples, 0.01%)</title><rect x="98.1225%" y="1525" width="0.0123%" height="15" fill="rgb(209,62,7)" fg:x="7996" fg:w="1"/><text x="98.3725%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="98.1225%" y="1509" width="0.0123%" height="15" fill="rgb(215,16,15)" fg:x="7996" fg:w="1"/><text x="98.3725%" y="1519.50"></text></g><g><title>anon.0b5d83916cc0e85ce998536da9a8ebde.24.llvm.2775228863088890688 (1 samples, 0.01%)</title><rect x="98.1347%" y="1525" width="0.0123%" height="15" fill="rgb(223,60,14)" fg:x="7997" fg:w="1"/><text x="98.3847%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="98.1347%" y="1509" width="0.0123%" height="15" fill="rgb(244,134,12)" fg:x="7997" fg:w="1"/><text x="98.3847%" y="1519.50"></text></g><g><title>anon.0eed5fcd65c45f0897e04c467a8ee0d1.2.llvm.9228667193898343737 (1 samples, 0.01%)</title><rect x="98.1470%" y="1525" width="0.0123%" height="15" fill="rgb(224,3,41)" fg:x="7998" fg:w="1"/><text x="98.3970%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="98.1470%" y="1509" width="0.0123%" height="15" fill="rgb(213,84,2)" fg:x="7998" fg:w="1"/><text x="98.3970%" y="1519.50"></text></g><g><title>anon.14ca5560fa6c9a647c8e5c9ffec407d4.19.llvm.6691030129387728962 (1 samples, 0.01%)</title><rect x="98.1593%" y="1525" width="0.0123%" height="15" fill="rgb(213,216,27)" fg:x="7999" fg:w="1"/><text x="98.4093%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="98.1593%" y="1509" width="0.0123%" height="15" fill="rgb(218,76,35)" fg:x="7999" fg:w="1"/><text x="98.4093%" y="1519.50"></text></g><g><title>anon.2acc878fdca41e6aa9f4696937adf173.15.llvm.12761567053362075759 (1 samples, 0.01%)</title><rect x="98.1716%" y="1525" width="0.0123%" height="15" fill="rgb(253,89,24)" fg:x="8000" fg:w="1"/><text x="98.4216%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="98.1716%" y="1509" width="0.0123%" height="15" fill="rgb(217,188,40)" fg:x="8000" fg:w="1"/><text x="98.4216%" y="1519.50"></text></g><g><title>anon.600295c5f42b30294c17e6cfc51bb2c3.4.llvm.13202089553523798946 (1 samples, 0.01%)</title><rect x="98.1838%" y="1525" width="0.0123%" height="15" fill="rgb(237,79,38)" fg:x="8001" fg:w="1"/><text x="98.4338%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="98.1838%" y="1509" width="0.0123%" height="15" fill="rgb(215,116,13)" fg:x="8001" fg:w="1"/><text x="98.4338%" y="1519.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="98.1961%" y="1509" width="0.0123%" height="15" fill="rgb(249,66,35)" fg:x="8002" fg:w="1"/><text x="98.4461%" y="1519.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (2 samples, 0.02%)</title><rect x="98.2084%" y="1509" width="0.0245%" height="15" fill="rgb(253,86,18)" fg:x="8003" fg:w="2"/><text x="98.4584%" y="1519.50"></text></g><g><title>anon.6419a184043e9b5297960ce717f829bb.3.llvm.12900232928484407139 (4 samples, 0.05%)</title><rect x="98.1961%" y="1525" width="0.0491%" height="15" fill="rgb(209,175,36)" fg:x="8002" fg:w="4"/><text x="98.4461%" y="1535.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate_for_thread_id (1 samples, 0.01%)</title><rect x="98.2329%" y="1509" width="0.0123%" height="15" fill="rgb(253,149,3)" fg:x="8005" fg:w="1"/><text x="98.4829%" y="1519.50"></text></g><g><title>anon.a7f3d502e5a529481d0daceacca7bcaf.0.llvm.15637199450353494929 (1 samples, 0.01%)</title><rect x="98.2452%" y="1525" width="0.0123%" height="15" fill="rgb(242,124,49)" fg:x="8006" fg:w="1"/><text x="98.4952%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="98.2452%" y="1509" width="0.0123%" height="15" fill="rgb(219,171,24)" fg:x="8006" fg:w="1"/><text x="98.4952%" y="1519.50"></text></g><g><title>anon.b27c9db7cc623dd443509daccec77658.0.llvm.17216066109799768958 (1 samples, 0.01%)</title><rect x="98.2575%" y="1525" width="0.0123%" height="15" fill="rgb(216,121,30)" fg:x="8007" fg:w="1"/><text x="98.5075%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="98.2575%" y="1509" width="0.0123%" height="15" fill="rgb(234,165,21)" fg:x="8007" fg:w="1"/><text x="98.5075%" y="1519.50"></text></g><g><title>anon.bfffc35c39476c6b393c4610191bfcff.20.llvm.4608958838107932846 (1 samples, 0.01%)</title><rect x="98.2697%" y="1525" width="0.0123%" height="15" fill="rgb(234,103,40)" fg:x="8008" fg:w="1"/><text x="98.5197%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="98.2697%" y="1509" width="0.0123%" height="15" fill="rgb(250,137,24)" fg:x="8008" fg:w="1"/><text x="98.5197%" y="1519.50"></text></g><g><title>anon.bfffc35c39476c6b393c4610191bfcff.6.llvm.4608958838107932846 (1 samples, 0.01%)</title><rect x="98.2820%" y="1525" width="0.0123%" height="15" fill="rgb(253,22,21)" fg:x="8009" fg:w="1"/><text x="98.5320%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="98.2820%" y="1509" width="0.0123%" height="15" fill="rgb(243,22,5)" fg:x="8009" fg:w="1"/><text x="98.5320%" y="1519.50"></text></g><g><title>anon.d9684106e280a91af693478d17068aa5.0.llvm.11500526528198800983 (2 samples, 0.02%)</title><rect x="98.2943%" y="1525" width="0.0245%" height="15" fill="rgb(212,56,7)" fg:x="8010" fg:w="2"/><text x="98.5443%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (2 samples, 0.02%)</title><rect x="98.2943%" y="1509" width="0.0245%" height="15" fill="rgb(223,190,49)" fg:x="8010" fg:w="2"/><text x="98.5443%" y="1519.50"></text></g><g><title>anon.f4a594cf53883fccc3a6e43e099661ae.204.llvm.5441236133072438757 (1 samples, 0.01%)</title><rect x="98.3188%" y="1525" width="0.0123%" height="15" fill="rgb(221,110,35)" fg:x="8012" fg:w="1"/><text x="98.5688%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="98.3188%" y="1509" width="0.0123%" height="15" fill="rgb(212,113,34)" fg:x="8012" fg:w="1"/><text x="98.5688%" y="1519.50"></text></g><g><title>anon.f78afb54bced8c0cf35b8b1e562b6adf.10.llvm.1522852779084976034 (3 samples, 0.04%)</title><rect x="98.3311%" y="1525" width="0.0368%" height="15" fill="rgb(216,125,47)" fg:x="8013" fg:w="3"/><text x="98.5811%" y="1535.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (3 samples, 0.04%)</title><rect x="98.3311%" y="1509" width="0.0368%" height="15" fill="rgb(251,112,19)" fg:x="8013" fg:w="3"/><text x="98.5811%" y="1519.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (5 samples, 0.06%)</title><rect x="98.3679%" y="1525" width="0.0614%" height="15" fill="rgb(254,200,41)" fg:x="8016" fg:w="5"/><text x="98.6179%" y="1535.50"></text></g><g><title>bevy_ecs::schedule::graph_utils::build_dependency_graph::CALLSITE::META (1 samples, 0.01%)</title><rect x="98.4293%" y="1525" width="0.0123%" height="15" fill="rgb(225,17,42)" fg:x="8021" fg:w="1"/><text x="98.6793%" y="1535.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (1 samples, 0.01%)</title><rect x="98.4293%" y="1509" width="0.0123%" height="15" fill="rgb(208,105,35)" fg:x="8021" fg:w="1"/><text x="98.6793%" y="1519.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_or_insert_with (1 samples, 0.01%)</title><rect x="98.4415%" y="1525" width="0.0123%" height="15" fill="rgb(210,125,51)" fg:x="8022" fg:w="1"/><text x="98.6915%" y="1535.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldBorrow&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="98.4538%" y="1525" width="0.0123%" height="15" fill="rgb(227,213,18)" fg:x="8023" fg:w="1"/><text x="98.7038%" y="1535.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldBorrowMut&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="98.4661%" y="1525" width="0.0123%" height="15" fill="rgb(221,174,32)" fg:x="8024" fg:w="1"/><text x="98.7161%" y="1535.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="98.4783%" y="1525" width="0.0123%" height="15" fill="rgb(234,23,1)" fg:x="8025" fg:w="1"/><text x="98.7283%" y="1535.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.01%)</title><rect x="98.4783%" y="1509" width="0.0123%" height="15" fill="rgb(209,65,17)" fg:x="8025" fg:w="1"/><text x="98.7283%" y="1519.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="98.4783%" y="1493" width="0.0123%" height="15" fill="rgb(206,224,31)" fg:x="8025" fg:w="1"/><text x="98.7283%" y="1503.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;stretch::algo::FlexLine&gt;&gt; (2 samples, 0.02%)</title><rect x="98.4906%" y="1525" width="0.0245%" height="15" fill="rgb(230,20,38)" fg:x="8026" fg:w="2"/><text x="98.7406%" y="1535.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (1 samples, 0.01%)</title><rect x="98.5152%" y="1525" width="0.0123%" height="15" fill="rgb(211,9,41)" fg:x="8028" fg:w="1"/><text x="98.7652%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="98.5274%" y="1525" width="0.0123%" height="15" fill="rgb(233,214,4)" fg:x="8029" fg:w="1"/><text x="98.7774%" y="1535.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="98.5274%" y="1509" width="0.0123%" height="15" fill="rgb(225,60,54)" fg:x="8029" fg:w="1"/><text x="98.7774%" y="1519.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="98.5274%" y="1493" width="0.0123%" height="15" fill="rgb(206,228,35)" fg:x="8029" fg:w="1"/><text x="98.7774%" y="1503.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="98.5274%" y="1477" width="0.0123%" height="15" fill="rgb(212,178,50)" fg:x="8029" fg:w="1"/><text x="98.7774%" y="1487.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="98.5274%" y="1461" width="0.0123%" height="15" fill="rgb(206,192,33)" fg:x="8029" fg:w="1"/><text x="98.7774%" y="1471.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="98.5274%" y="1445" width="0.0123%" height="15" fill="rgb(238,210,1)" fg:x="8029" fg:w="1"/><text x="98.7774%" y="1455.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (3 samples, 0.04%)</title><rect x="98.5397%" y="1525" width="0.0368%" height="15" fill="rgb(205,65,52)" fg:x="8030" fg:w="3"/><text x="98.7897%" y="1535.50"></text></g><g><title>wgpu_core::command::render::RenderPass::new (2 samples, 0.02%)</title><rect x="98.5765%" y="1525" width="0.0245%" height="15" fill="rgb(237,204,51)" fg:x="8033" fg:w="2"/><text x="98.8265%" y="1535.50"></text></g><g><title>engine (5,290 samples, 64.92%)</title><rect x="33.7097%" y="1541" width="64.9159%" height="15" fill="rgb(213,119,51)" fg:x="2747" fg:w="5290"/><text x="33.9597%" y="1551.50">engine</text></g><g><title>xcb_sync_await_fence (2 samples, 0.02%)</title><rect x="98.6011%" y="1525" width="0.0245%" height="15" fill="rgb(244,156,37)" fg:x="8035" fg:w="2"/><text x="98.8511%" y="1535.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.02%)</title><rect x="98.7238%" y="1509" width="0.0245%" height="15" fill="rgb(249,96,18)" fg:x="8045" fg:w="2"/><text x="98.9738%" y="1519.50"></text></g><g><title>[libpulsecommon-15.0.so] (2 samples, 0.02%)</title><rect x="98.7483%" y="1509" width="0.0245%" height="15" fill="rgb(231,65,11)" fg:x="8047" fg:w="2"/><text x="98.9983%" y="1519.50"></text></g><g><title>pa_detect_fork (2 samples, 0.02%)</title><rect x="98.7729%" y="1509" width="0.0245%" height="15" fill="rgb(240,187,2)" fg:x="8049" fg:w="2"/><text x="99.0229%" y="1519.50"></text></g><g><title>pa_srbchannel_read (1 samples, 0.01%)</title><rect x="98.7974%" y="1509" width="0.0123%" height="15" fill="rgb(242,121,39)" fg:x="8051" fg:w="1"/><text x="99.0474%" y="1519.50"></text></g><g><title>[[heap]] (8 samples, 0.10%)</title><rect x="98.7238%" y="1525" width="0.0982%" height="15" fill="rgb(233,205,18)" fg:x="8045" fg:w="8"/><text x="98.9738%" y="1535.50"></text></g><g><title>pa_stream_writable_size (1 samples, 0.01%)</title><rect x="98.8097%" y="1509" width="0.0123%" height="15" fill="rgb(219,67,33)" fg:x="8052" fg:w="1"/><text x="99.0597%" y="1519.50"></text></g><g><title>[[vdso]] (2 samples, 0.02%)</title><rect x="98.8219%" y="1525" width="0.0245%" height="15" fill="rgb(227,84,12)" fg:x="8053" fg:w="2"/><text x="99.0719%" y="1535.50"></text></g><g><title>[libpulsecommon-15.0.so] (2 samples, 0.02%)</title><rect x="98.8465%" y="1509" width="0.0245%" height="15" fill="rgb(227,42,52)" fg:x="8055" fg:w="2"/><text x="99.0965%" y="1519.50"></text></g><g><title>pa_fdsem_before_poll (1 samples, 0.01%)</title><rect x="98.8710%" y="1509" width="0.0123%" height="15" fill="rgb(231,27,28)" fg:x="8057" fg:w="1"/><text x="99.1210%" y="1519.50"></text></g><g><title>pa_mainloop_dispatch (1 samples, 0.01%)</title><rect x="98.8833%" y="1509" width="0.0123%" height="15" fill="rgb(238,42,2)" fg:x="8058" fg:w="1"/><text x="99.1333%" y="1519.50"></text></g><g><title>pa_memexport_put (1 samples, 0.01%)</title><rect x="98.8956%" y="1509" width="0.0123%" height="15" fill="rgb(215,15,9)" fg:x="8059" fg:w="1"/><text x="99.1456%" y="1519.50"></text></g><g><title>pa_mutex_lock (5 samples, 0.06%)</title><rect x="98.9078%" y="1509" width="0.0614%" height="15" fill="rgb(205,195,15)" fg:x="8060" fg:w="5"/><text x="99.1578%" y="1519.50"></text></g><g><title>pa_pstream_unref (1 samples, 0.01%)</title><rect x="98.9692%" y="1509" width="0.0123%" height="15" fill="rgb(233,143,2)" fg:x="8065" fg:w="1"/><text x="99.2192%" y="1519.50"></text></g><g><title>pa_stream_get_state (1 samples, 0.01%)</title><rect x="98.9815%" y="1509" width="0.0123%" height="15" fill="rgb(207,108,8)" fg:x="8066" fg:w="1"/><text x="99.2315%" y="1519.50"></text></g><g><title>[anon] (13 samples, 0.16%)</title><rect x="98.8465%" y="1525" width="0.1595%" height="15" fill="rgb(214,53,21)" fg:x="8055" fg:w="13"/><text x="99.0965%" y="1535.50"></text></g><g><title>pa_threaded_mainloop_signal (1 samples, 0.01%)</title><rect x="98.9937%" y="1509" width="0.0123%" height="15" fill="rgb(238,212,36)" fg:x="8067" fg:w="1"/><text x="99.2437%" y="1519.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="99.0060%" y="1525" width="0.0123%" height="15" fill="rgb(218,151,47)" fg:x="8068" fg:w="1"/><text x="99.2560%" y="1535.50"></text></g><g><title>pa_once_begin (1 samples, 0.01%)</title><rect x="99.0060%" y="1509" width="0.0123%" height="15" fill="rgb(245,160,3)" fg:x="8068" fg:w="1"/><text x="99.2560%" y="1519.50"></text></g><g><title>[libpulse.so.0.24.0] (3 samples, 0.04%)</title><rect x="99.0183%" y="1509" width="0.0368%" height="15" fill="rgb(238,106,19)" fg:x="8069" fg:w="3"/><text x="99.2683%" y="1519.50"></text></g><g><title>[libpulsecommon-15.0.so] (2 samples, 0.02%)</title><rect x="99.0551%" y="1509" width="0.0245%" height="15" fill="rgb(207,206,9)" fg:x="8072" fg:w="2"/><text x="99.3051%" y="1519.50"></text></g><g><title>pa_operation_unref (1 samples, 0.01%)</title><rect x="99.0796%" y="1509" width="0.0123%" height="15" fill="rgb(254,40,10)" fg:x="8074" fg:w="1"/><text x="99.3296%" y="1519.50"></text></g><g><title>pa_read (1 samples, 0.01%)</title><rect x="99.0919%" y="1509" width="0.0123%" height="15" fill="rgb(245,81,8)" fg:x="8075" fg:w="1"/><text x="99.3419%" y="1519.50"></text></g><g><title>[unknown] (8 samples, 0.10%)</title><rect x="99.0183%" y="1525" width="0.0982%" height="15" fill="rgb(214,119,17)" fg:x="8069" fg:w="8"/><text x="99.2683%" y="1535.50"></text></g><g><title>pa_xmalloc0 (1 samples, 0.01%)</title><rect x="99.1042%" y="1509" width="0.0123%" height="15" fill="rgb(245,100,39)" fg:x="8076" fg:w="1"/><text x="99.3542%" y="1519.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (3 samples, 0.04%)</title><rect x="99.2269%" y="1301" width="0.0368%" height="15" fill="rgb(243,105,16)" fg:x="8086" fg:w="3"/><text x="99.4769%" y="1311.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.02%)</title><rect x="99.2392%" y="1285" width="0.0245%" height="15" fill="rgb(214,53,2)" fg:x="8087" fg:w="2"/><text x="99.4892%" y="1295.50"></text></g><g><title>pulse_check_connection (2 samples, 0.02%)</title><rect x="99.2392%" y="1269" width="0.0245%" height="15" fill="rgb(251,54,50)" fg:x="8087" fg:w="2"/><text x="99.4892%" y="1279.50"></text></g><g><title>pa_hashmap_get (2 samples, 0.02%)</title><rect x="99.2637%" y="1301" width="0.0245%" height="15" fill="rgb(244,121,37)" fg:x="8089" fg:w="2"/><text x="99.5137%" y="1311.50"></text></g><g><title>pa_idxset_trivial_hash_func (1 samples, 0.01%)</title><rect x="99.2760%" y="1285" width="0.0123%" height="15" fill="rgb(236,158,39)" fg:x="8090" fg:w="1"/><text x="99.5260%" y="1295.50"></text></g><g><title>[libpulse.so.0.24.0] (6 samples, 0.07%)</title><rect x="99.2269%" y="1317" width="0.0736%" height="15" fill="rgb(226,25,37)" fg:x="8086" fg:w="6"/><text x="99.4769%" y="1327.50"></text></g><g><title>pa_tagstruct_eof (1 samples, 0.01%)</title><rect x="99.2883%" y="1301" width="0.0123%" height="15" fill="rgb(222,71,46)" fg:x="8091" fg:w="1"/><text x="99.5383%" y="1311.50"></text></g><g><title>[libpulse.so.0.24.0] (8 samples, 0.10%)</title><rect x="99.2146%" y="1349" width="0.0982%" height="15" fill="rgb(209,27,29)" fg:x="8085" fg:w="8"/><text x="99.4646%" y="1359.50"></text></g><g><title>pa_pdispatch_run (8 samples, 0.10%)</title><rect x="99.2146%" y="1333" width="0.0982%" height="15" fill="rgb(210,196,17)" fg:x="8085" fg:w="8"/><text x="99.4646%" y="1343.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="99.3005%" y="1317" width="0.0123%" height="15" fill="rgb(236,76,23)" fg:x="8092" fg:w="1"/><text x="99.5505%" y="1327.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.01%)</title><rect x="99.3005%" y="1301" width="0.0123%" height="15" fill="rgb(214,33,32)" fg:x="8092" fg:w="1"/><text x="99.5505%" y="1311.50"></text></g><g><title>pa_smoother_put (1 samples, 0.01%)</title><rect x="99.3005%" y="1285" width="0.0123%" height="15" fill="rgb(243,16,26)" fg:x="8092" fg:w="1"/><text x="99.5505%" y="1295.50"></text></g><g><title>pa_mutex_lock (1 samples, 0.01%)</title><rect x="99.3373%" y="1333" width="0.0123%" height="15" fill="rgb(241,30,48)" fg:x="8095" fg:w="1"/><text x="99.5873%" y="1343.50"></text></g><g><title>__pthread_mutex_lock_full (1 samples, 0.01%)</title><rect x="99.3373%" y="1317" width="0.0123%" height="15" fill="rgb(241,106,1)" fg:x="8095" fg:w="1"/><text x="99.5873%" y="1327.50"></text></g><g><title>pa_memexport_process_release (4 samples, 0.05%)</title><rect x="99.3128%" y="1349" width="0.0491%" height="15" fill="rgb(230,62,29)" fg:x="8093" fg:w="4"/><text x="99.5628%" y="1359.50"></text></g><g><title>pa_mutex_unlock (1 samples, 0.01%)</title><rect x="99.3496%" y="1333" width="0.0123%" height="15" fill="rgb(207,166,53)" fg:x="8096" fg:w="1"/><text x="99.5996%" y="1343.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="99.3496%" y="1317" width="0.0123%" height="15" fill="rgb(244,54,13)" fg:x="8096" fg:w="1"/><text x="99.5996%" y="1327.50"></text></g><g><title>pa_packet_new (1 samples, 0.01%)</title><rect x="99.3619%" y="1349" width="0.0123%" height="15" fill="rgb(205,144,19)" fg:x="8097" fg:w="1"/><text x="99.6119%" y="1359.50"></text></g><g><title>pa_packet_unref (1 samples, 0.01%)</title><rect x="99.3742%" y="1349" width="0.0123%" height="15" fill="rgb(225,165,45)" fg:x="8098" fg:w="1"/><text x="99.6242%" y="1359.50"></text></g><g><title>pa_flist_push (1 samples, 0.01%)</title><rect x="99.3742%" y="1333" width="0.0123%" height="15" fill="rgb(220,140,6)" fg:x="8098" fg:w="1"/><text x="99.6242%" y="1343.50"></text></g><g><title>[libpulsecommon-15.0.so] (20 samples, 0.25%)</title><rect x="99.2024%" y="1381" width="0.2454%" height="15" fill="rgb(234,69,14)" fg:x="8084" fg:w="20"/><text x="99.4524%" y="1391.50"></text></g><g><title>[libpulsecommon-15.0.so] (20 samples, 0.25%)</title><rect x="99.2024%" y="1365" width="0.2454%" height="15" fill="rgb(243,24,33)" fg:x="8084" fg:w="20"/><text x="99.4524%" y="1375.50"></text></g><g><title>pa_srbchannel_read (5 samples, 0.06%)</title><rect x="99.3864%" y="1349" width="0.0614%" height="15" fill="rgb(253,100,43)" fg:x="8099" fg:w="5"/><text x="99.6364%" y="1359.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.05%)</title><rect x="99.3987%" y="1333" width="0.0491%" height="15" fill="rgb(221,168,15)" fg:x="8100" fg:w="4"/><text x="99.6487%" y="1343.50"></text></g><g><title>pa_idxset_get_by_data (1 samples, 0.01%)</title><rect x="99.4478%" y="1381" width="0.0123%" height="15" fill="rgb(237,15,11)" fg:x="8104" fg:w="1"/><text x="99.6978%" y="1391.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="99.4478%" y="1365" width="0.0123%" height="15" fill="rgb(229,207,40)" fg:x="8104" fg:w="1"/><text x="99.6978%" y="1375.50"></text></g><g><title>pa_memblock_get_pool (1 samples, 0.01%)</title><rect x="99.4601%" y="1381" width="0.0123%" height="15" fill="rgb(246,125,48)" fg:x="8105" fg:w="1"/><text x="99.7101%" y="1391.50"></text></g><g><title>pa_mempool_ref (1 samples, 0.01%)</title><rect x="99.4601%" y="1365" width="0.0123%" height="15" fill="rgb(231,65,10)" fg:x="8105" fg:w="1"/><text x="99.7101%" y="1375.50"></text></g><g><title>pa_memblock_release (1 samples, 0.01%)</title><rect x="99.4723%" y="1365" width="0.0123%" height="15" fill="rgb(222,152,40)" fg:x="8106" fg:w="1"/><text x="99.7223%" y="1375.50"></text></g><g><title>pa_memexport_put (2 samples, 0.02%)</title><rect x="99.4723%" y="1381" width="0.0245%" height="15" fill="rgb(214,12,30)" fg:x="8106" fg:w="2"/><text x="99.7223%" y="1391.50"></text></g><g><title>pa_mutex_unlock (1 samples, 0.01%)</title><rect x="99.4846%" y="1365" width="0.0123%" height="15" fill="rgb(239,80,41)" fg:x="8107" fg:w="1"/><text x="99.7346%" y="1375.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="99.4846%" y="1349" width="0.0123%" height="15" fill="rgb(206,175,27)" fg:x="8107" fg:w="1"/><text x="99.7346%" y="1359.50"></text></g><g><title>pa_queue_pop (1 samples, 0.01%)</title><rect x="99.4969%" y="1381" width="0.0123%" height="15" fill="rgb(222,43,39)" fg:x="8108" fg:w="1"/><text x="99.7469%" y="1391.50"></text></g><g><title>pa_flist_push (1 samples, 0.01%)</title><rect x="99.4969%" y="1365" width="0.0123%" height="15" fill="rgb(243,47,50)" fg:x="8108" fg:w="1"/><text x="99.7469%" y="1375.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="99.4969%" y="1349" width="0.0123%" height="15" fill="rgb(243,61,21)" fg:x="8108" fg:w="1"/><text x="99.7469%" y="1359.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="99.5337%" y="1365" width="0.0123%" height="15" fill="rgb(208,172,5)" fg:x="8111" fg:w="1"/><text x="99.7837%" y="1375.50"></text></g><g><title>[libpulsecommon-15.0.so] (31 samples, 0.38%)</title><rect x="99.2024%" y="1397" width="0.3804%" height="15" fill="rgb(219,24,25)" fg:x="8084" fg:w="31"/><text x="99.4524%" y="1407.50"></text></g><g><title>pa_srbchannel_write (6 samples, 0.07%)</title><rect x="99.5091%" y="1381" width="0.0736%" height="15" fill="rgb(235,42,41)" fg:x="8109" fg:w="6"/><text x="99.7591%" y="1391.50"></text></g><g><title>pa_fdsem_post (3 samples, 0.04%)</title><rect x="99.5460%" y="1365" width="0.0368%" height="15" fill="rgb(226,190,24)" fg:x="8112" fg:w="3"/><text x="99.7960%" y="1375.50"></text></g><g><title>pa_write (3 samples, 0.04%)</title><rect x="99.5460%" y="1349" width="0.0368%" height="15" fill="rgb(216,55,27)" fg:x="8112" fg:w="3"/><text x="99.7960%" y="1359.50"></text></g><g><title>__libc_write (2 samples, 0.02%)</title><rect x="99.5582%" y="1333" width="0.0245%" height="15" fill="rgb(231,77,14)" fg:x="8113" fg:w="2"/><text x="99.8082%" y="1343.50"></text></g><g><title>pa_fdsem_after_poll (6 samples, 0.07%)</title><rect x="99.5828%" y="1397" width="0.0736%" height="15" fill="rgb(208,108,34)" fg:x="8115" fg:w="6"/><text x="99.8328%" y="1407.50"></text></g><g><title>[libpulsecommon-15.0.so] (2 samples, 0.02%)</title><rect x="99.6319%" y="1381" width="0.0245%" height="15" fill="rgb(228,183,52)" fg:x="8119" fg:w="2"/><text x="99.8819%" y="1391.50"></text></g><g><title>pa_read (1 samples, 0.01%)</title><rect x="99.6441%" y="1365" width="0.0123%" height="15" fill="rgb(224,152,1)" fg:x="8120" fg:w="1"/><text x="99.8941%" y="1375.50"></text></g><g><title>__libc_read (1 samples, 0.01%)</title><rect x="99.6441%" y="1349" width="0.0123%" height="15" fill="rgb(246,115,8)" fg:x="8120" fg:w="1"/><text x="99.8941%" y="1359.50"></text></g><g><title>[libpulsecommon-15.0.so] (39 samples, 0.48%)</title><rect x="99.1901%" y="1413" width="0.4786%" height="15" fill="rgb(211,76,13)" fg:x="8083" fg:w="39"/><text x="99.4401%" y="1423.50"></text></g><g><title>pa_fdsem_before_poll (1 samples, 0.01%)</title><rect x="99.6564%" y="1397" width="0.0123%" height="15" fill="rgb(233,214,49)" fg:x="8121" fg:w="1"/><text x="99.9064%" y="1407.50"></text></g><g><title>pa_mainloop_dispatch (45 samples, 0.55%)</title><rect x="99.1410%" y="1429" width="0.5522%" height="15" fill="rgb(223,44,51)" fg:x="8079" fg:w="45"/><text x="99.3910%" y="1439.50"></text></g><g><title>pa_rtclock_now (2 samples, 0.02%)</title><rect x="99.6687%" y="1413" width="0.0245%" height="15" fill="rgb(225,111,51)" fg:x="8122" fg:w="2"/><text x="99.9187%" y="1423.50"></text></g><g><title>pa_rtclock_get (2 samples, 0.02%)</title><rect x="99.6687%" y="1397" width="0.0245%" height="15" fill="rgb(231,185,26)" fg:x="8122" fg:w="2"/><text x="99.9187%" y="1407.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="99.6809%" y="1381" width="0.0123%" height="15" fill="rgb(233,111,30)" fg:x="8123" fg:w="1"/><text x="99.9309%" y="1391.50"></text></g><g><title>__GI___poll (11 samples, 0.13%)</title><rect x="99.7423%" y="1397" width="0.1350%" height="15" fill="rgb(250,1,47)" fg:x="8128" fg:w="11"/><text x="99.9923%" y="1407.50"></text></g><g><title>__libc_disable_asynccancel (2 samples, 0.02%)</title><rect x="99.8527%" y="1381" width="0.0245%" height="15" fill="rgb(254,210,3)" fg:x="8137" fg:w="2"/><text x="100.1027%" y="1391.50"></text></g><g><title>pa_mutex_lock (4 samples, 0.05%)</title><rect x="99.8773%" y="1397" width="0.0491%" height="15" fill="rgb(234,14,22)" fg:x="8139" fg:w="4"/><text x="100.1273%" y="1407.50"></text></g><g><title>__GI___pthread_mutex_lock (4 samples, 0.05%)</title><rect x="99.8773%" y="1381" width="0.0491%" height="15" fill="rgb(221,117,4)" fg:x="8139" fg:w="4"/><text x="100.1273%" y="1391.50"></text></g><g><title>pa_mainloop_poll (21 samples, 0.26%)</title><rect x="99.6932%" y="1429" width="0.2577%" height="15" fill="rgb(251,147,27)" fg:x="8124" fg:w="21"/><text x="99.9432%" y="1439.50"></text></g><g><title>[libpulse.so.0.24.0] (20 samples, 0.25%)</title><rect x="99.7055%" y="1413" width="0.2454%" height="15" fill="rgb(226,52,11)" fg:x="8125" fg:w="20"/><text x="99.9555%" y="1423.50"></text></g><g><title>pa_mutex_unlock (2 samples, 0.02%)</title><rect x="99.9264%" y="1397" width="0.0245%" height="15" fill="rgb(229,222,5)" fg:x="8143" fg:w="2"/><text x="100.1764%" y="1407.50"></text></g><g><title>__pthread_mutex_unlock_full (2 samples, 0.02%)</title><rect x="99.9264%" y="1381" width="0.0245%" height="15" fill="rgb(232,76,2)" fg:x="8143" fg:w="2"/><text x="100.1764%" y="1391.50"></text></g><g><title>__errno_location (1 samples, 0.01%)</title><rect x="99.9509%" y="1397" width="0.0123%" height="15" fill="rgb(242,108,2)" fg:x="8145" fg:w="1"/><text x="100.2009%" y="1407.50"></text></g><g><title>__GI___clone (71 samples, 0.87%)</title><rect x="99.1165%" y="1525" width="0.8713%" height="15" fill="rgb(213,165,6)" fg:x="8077" fg:w="71"/><text x="99.3665%" y="1535.50"></text></g><g><title>start_thread (71 samples, 0.87%)</title><rect x="99.1165%" y="1509" width="0.8713%" height="15" fill="rgb(222,24,42)" fg:x="8077" fg:w="71"/><text x="99.3665%" y="1519.50"></text></g><g><title>[libpulsecommon-15.0.so] (71 samples, 0.87%)</title><rect x="99.1165%" y="1493" width="0.8713%" height="15" fill="rgb(242,170,24)" fg:x="8077" fg:w="71"/><text x="99.3665%" y="1503.50"></text></g><g><title>[libpulse.so.0.24.0] (71 samples, 0.87%)</title><rect x="99.1165%" y="1477" width="0.8713%" height="15" fill="rgb(209,110,40)" fg:x="8077" fg:w="71"/><text x="99.3665%" y="1487.50"></text></g><g><title>pa_mainloop_run (71 samples, 0.87%)</title><rect x="99.1165%" y="1461" width="0.8713%" height="15" fill="rgb(233,146,36)" fg:x="8077" fg:w="71"/><text x="99.3665%" y="1471.50"></text></g><g><title>pa_mainloop_iterate (71 samples, 0.87%)</title><rect x="99.1165%" y="1445" width="0.8713%" height="15" fill="rgb(229,33,32)" fg:x="8077" fg:w="71"/><text x="99.3665%" y="1455.50"></text></g><g><title>pa_mainloop_prepare (3 samples, 0.04%)</title><rect x="99.9509%" y="1429" width="0.0368%" height="15" fill="rgb(225,55,34)" fg:x="8145" fg:w="3"/><text x="100.2009%" y="1439.50"></text></g><g><title>pa_read (3 samples, 0.04%)</title><rect x="99.9509%" y="1413" width="0.0368%" height="15" fill="rgb(217,32,50)" fg:x="8145" fg:w="3"/><text x="100.2009%" y="1423.50"></text></g><g><title>__libc_read (2 samples, 0.02%)</title><rect x="99.9632%" y="1397" width="0.0245%" height="15" fill="rgb(206,110,53)" fg:x="8146" fg:w="2"/><text x="100.2132%" y="1407.50"></text></g><g><title>all (8,149 samples, 100%)</title><rect x="0.0000%" y="1557" width="100.0000%" height="15" fill="rgb(247,25,10)" fg:x="0" fg:w="8149"/><text x="0.2500%" y="1567.50"></text></g><g><title>threaded-ml (112 samples, 1.37%)</title><rect x="98.6256%" y="1541" width="1.3744%" height="15" fill="rgb(226,67,48)" fg:x="8037" fg:w="112"/><text x="98.8756%" y="1551.50"></text></g><g><title>pa_rtclock_get (1 samples, 0.01%)</title><rect x="99.9877%" y="1525" width="0.0123%" height="15" fill="rgb(239,73,28)" fg:x="8148" fg:w="1"/><text x="100.2377%" y="1535.50"></text></g></svg></svg>