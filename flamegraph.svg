<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1414" onload="init(evt)" viewBox="0 0 1200 1414" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1414" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1397.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1397.00"> </text><svg id="frames" x="10" width="1180" total_samples="101831"><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (17 samples, 0.02%)</title><rect x="1.5162%" y="1333" width="0.0167%" height="15" fill="rgb(227,0,7)" fg:x="1544" fg:w="17"/><text x="1.7662%" y="1343.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="1.5555%" y="1317" width="0.0177%" height="15" fill="rgb(217,0,24)" fg:x="1584" fg:w="18"/><text x="1.8055%" y="1327.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="1.5732%" y="1317" width="0.0304%" height="15" fill="rgb(221,193,54)" fg:x="1602" fg:w="31"/><text x="1.8232%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (190 samples, 0.19%)</title><rect x="1.6331%" y="1317" width="0.1866%" height="15" fill="rgb(248,212,6)" fg:x="1663" fg:w="190"/><text x="1.8831%" y="1327.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (140 samples, 0.14%)</title><rect x="1.6822%" y="1301" width="0.1375%" height="15" fill="rgb(208,68,35)" fg:x="1713" fg:w="140"/><text x="1.9322%" y="1311.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="1.8236%" y="1317" width="0.0108%" height="15" fill="rgb(232,128,0)" fg:x="1857" fg:w="11"/><text x="2.0736%" y="1327.50"></text></g><g><title>_int_free (19 samples, 0.02%)</title><rect x="1.8982%" y="1317" width="0.0187%" height="15" fill="rgb(207,160,47)" fg:x="1933" fg:w="19"/><text x="2.1482%" y="1327.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (27 samples, 0.03%)</title><rect x="1.9464%" y="1317" width="0.0265%" height="15" fill="rgb(228,23,34)" fg:x="1982" fg:w="27"/><text x="2.1964%" y="1327.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (12 samples, 0.01%)</title><rect x="1.9915%" y="1317" width="0.0118%" height="15" fill="rgb(218,30,26)" fg:x="2028" fg:w="12"/><text x="2.2415%" y="1327.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update (42 samples, 0.04%)</title><rect x="2.0043%" y="1317" width="0.0412%" height="15" fill="rgb(220,122,19)" fg:x="2041" fg:w="42"/><text x="2.2543%" y="1327.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (11 samples, 0.01%)</title><rect x="2.1104%" y="1317" width="0.0108%" height="15" fill="rgb(250,228,42)" fg:x="2149" fg:w="11"/><text x="2.3604%" y="1327.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="2.1457%" y="1317" width="0.0128%" height="15" fill="rgb(240,193,28)" fg:x="2185" fg:w="13"/><text x="2.3957%" y="1327.50"></text></g><g><title>[[heap]] (823 samples, 0.81%)</title><rect x="1.5359%" y="1333" width="0.8082%" height="15" fill="rgb(216,20,37)" fg:x="1564" fg:w="823"/><text x="1.7859%" y="1343.50"></text></g><g><title>[[stack]] (16 samples, 0.02%)</title><rect x="2.3441%" y="1333" width="0.0157%" height="15" fill="rgb(206,188,39)" fg:x="2387" fg:w="16"/><text x="2.5941%" y="1343.50"></text></g><g><title>[[vdso]] (11 samples, 0.01%)</title><rect x="2.3598%" y="1333" width="0.0108%" height="15" fill="rgb(217,207,13)" fg:x="2403" fg:w="11"/><text x="2.6098%" y="1343.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.03%)</title><rect x="2.3834%" y="1317" width="0.0295%" height="15" fill="rgb(231,73,38)" fg:x="2427" fg:w="30"/><text x="2.6334%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (67 samples, 0.07%)</title><rect x="2.4236%" y="1317" width="0.0658%" height="15" fill="rgb(225,20,46)" fg:x="2468" fg:w="67"/><text x="2.6736%" y="1327.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (35 samples, 0.03%)</title><rect x="2.4550%" y="1301" width="0.0344%" height="15" fill="rgb(210,31,41)" fg:x="2500" fg:w="35"/><text x="2.7050%" y="1311.50"></text></g><g><title>async_task::runnable::Runnable::run (27 samples, 0.03%)</title><rect x="2.4629%" y="1285" width="0.0265%" height="15" fill="rgb(221,200,47)" fg:x="2508" fg:w="27"/><text x="2.7129%" y="1295.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (24 samples, 0.02%)</title><rect x="2.5326%" y="1285" width="0.0236%" height="15" fill="rgb(226,26,5)" fg:x="2579" fg:w="24"/><text x="2.7826%" y="1295.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (11 samples, 0.01%)</title><rect x="2.5454%" y="1269" width="0.0108%" height="15" fill="rgb(249,33,26)" fg:x="2592" fg:w="11"/><text x="2.7954%" y="1279.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (11 samples, 0.01%)</title><rect x="2.5454%" y="1253" width="0.0108%" height="15" fill="rgb(235,183,28)" fg:x="2592" fg:w="11"/><text x="2.7954%" y="1263.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (11 samples, 0.01%)</title><rect x="2.5454%" y="1237" width="0.0108%" height="15" fill="rgb(221,5,38)" fg:x="2592" fg:w="11"/><text x="2.7954%" y="1247.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (59 samples, 0.06%)</title><rect x="2.4992%" y="1317" width="0.0579%" height="15" fill="rgb(247,18,42)" fg:x="2545" fg:w="59"/><text x="2.7492%" y="1327.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (27 samples, 0.03%)</title><rect x="2.5307%" y="1301" width="0.0265%" height="15" fill="rgb(241,131,45)" fg:x="2577" fg:w="27"/><text x="2.7807%" y="1311.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="2.5739%" y="1301" width="0.0226%" height="15" fill="rgb(249,31,29)" fg:x="2621" fg:w="23"/><text x="2.8239%" y="1311.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (23 samples, 0.02%)</title><rect x="2.5739%" y="1285" width="0.0226%" height="15" fill="rgb(225,111,53)" fg:x="2621" fg:w="23"/><text x="2.8239%" y="1295.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="2.5739%" y="1269" width="0.0226%" height="15" fill="rgb(238,160,17)" fg:x="2621" fg:w="23"/><text x="2.8239%" y="1279.50"></text></g><g><title>[engine] (27 samples, 0.03%)</title><rect x="2.5739%" y="1317" width="0.0265%" height="15" fill="rgb(214,148,48)" fg:x="2621" fg:w="27"/><text x="2.8239%" y="1327.50"></text></g><g><title>__GI___libc_free (14 samples, 0.01%)</title><rect x="2.6043%" y="1317" width="0.0137%" height="15" fill="rgb(232,36,49)" fg:x="2652" fg:w="14"/><text x="2.8543%" y="1327.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.02%)</title><rect x="2.6181%" y="1317" width="0.0216%" height="15" fill="rgb(209,103,24)" fg:x="2666" fg:w="22"/><text x="2.8681%" y="1327.50"></text></g><g><title>__futex_abstimed_wait_common64 (18 samples, 0.02%)</title><rect x="2.6613%" y="1317" width="0.0177%" height="15" fill="rgb(229,88,8)" fg:x="2710" fg:w="18"/><text x="2.9113%" y="1327.50"></text></g><g><title>_int_free (15 samples, 0.01%)</title><rect x="2.6976%" y="1317" width="0.0147%" height="15" fill="rgb(213,181,19)" fg:x="2747" fg:w="15"/><text x="2.9476%" y="1327.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.03%)</title><rect x="2.7222%" y="1317" width="0.0295%" height="15" fill="rgb(254,191,54)" fg:x="2772" fg:w="30"/><text x="2.9722%" y="1327.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (15 samples, 0.01%)</title><rect x="2.7614%" y="1317" width="0.0147%" height="15" fill="rgb(241,83,37)" fg:x="2812" fg:w="15"/><text x="3.0114%" y="1327.50"></text></g><g><title>async_executor::Ticker::sleep (34 samples, 0.03%)</title><rect x="2.7781%" y="1317" width="0.0334%" height="15" fill="rgb(233,36,39)" fg:x="2829" fg:w="34"/><text x="3.0281%" y="1327.50"></text></g><g><title>async_executor::Ticker::wake (19 samples, 0.02%)</title><rect x="2.8115%" y="1317" width="0.0187%" height="15" fill="rgb(226,3,54)" fg:x="2863" fg:w="19"/><text x="3.0615%" y="1327.50"></text></g><g><title>async_executor::steal (40 samples, 0.04%)</title><rect x="2.8302%" y="1317" width="0.0393%" height="15" fill="rgb(245,192,40)" fg:x="2882" fg:w="40"/><text x="3.0802%" y="1327.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (16 samples, 0.02%)</title><rect x="2.8695%" y="1317" width="0.0157%" height="15" fill="rgb(238,167,29)" fg:x="2922" fg:w="16"/><text x="3.1195%" y="1327.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (51 samples, 0.05%)</title><rect x="2.8852%" y="1317" width="0.0501%" height="15" fill="rgb(232,182,51)" fg:x="2938" fg:w="51"/><text x="3.1352%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="2.9942%" y="1301" width="0.0108%" height="15" fill="rgb(231,60,39)" fg:x="3049" fg:w="11"/><text x="3.2442%" y="1311.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="2.9942%" y="1285" width="0.0108%" height="15" fill="rgb(208,69,12)" fg:x="3049" fg:w="11"/><text x="3.2442%" y="1295.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (53 samples, 0.05%)</title><rect x="2.9578%" y="1317" width="0.0520%" height="15" fill="rgb(235,93,37)" fg:x="3012" fg:w="53"/><text x="3.2078%" y="1327.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (29 samples, 0.03%)</title><rect x="3.0197%" y="1317" width="0.0285%" height="15" fill="rgb(213,116,39)" fg:x="3075" fg:w="29"/><text x="3.2697%" y="1327.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (27 samples, 0.03%)</title><rect x="3.0492%" y="1317" width="0.0265%" height="15" fill="rgb(222,207,29)" fg:x="3105" fg:w="27"/><text x="3.2992%" y="1327.50"></text></g><g><title>parking::Unparker::unpark (37 samples, 0.04%)</title><rect x="3.1621%" y="1317" width="0.0363%" height="15" fill="rgb(206,96,30)" fg:x="3220" fg:w="37"/><text x="3.4121%" y="1327.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::new (12 samples, 0.01%)</title><rect x="3.2092%" y="1317" width="0.0118%" height="15" fill="rgb(218,138,4)" fg:x="3268" fg:w="12"/><text x="3.4592%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28 samples, 0.03%)</title><rect x="3.2210%" y="1317" width="0.0275%" height="15" fill="rgb(250,191,14)" fg:x="3280" fg:w="28"/><text x="3.4710%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.02%)</title><rect x="3.2318%" y="1301" width="0.0167%" height="15" fill="rgb(239,60,40)" fg:x="3291" fg:w="17"/><text x="3.4818%" y="1311.50"></text></g><g><title>[anon] (907 samples, 0.89%)</title><rect x="2.3706%" y="1333" width="0.8907%" height="15" fill="rgb(206,27,48)" fg:x="2414" fg:w="907"/><text x="2.6206%" y="1343.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="3.2613%" y="1317" width="0.0128%" height="15" fill="rgb(225,35,8)" fg:x="3321" fg:w="13"/><text x="3.5113%" y="1327.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (41 samples, 0.04%)</title><rect x="3.2878%" y="1317" width="0.0403%" height="15" fill="rgb(250,213,24)" fg:x="3348" fg:w="41"/><text x="3.5378%" y="1327.50"></text></g><g><title>__futex_abstimed_wait_common64 (11 samples, 0.01%)</title><rect x="3.3418%" y="1317" width="0.0108%" height="15" fill="rgb(247,123,22)" fg:x="3403" fg:w="11"/><text x="3.5918%" y="1327.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (39 samples, 0.04%)</title><rect x="3.3870%" y="1317" width="0.0383%" height="15" fill="rgb(231,138,38)" fg:x="3449" fg:w="39"/><text x="3.6370%" y="1327.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (24 samples, 0.02%)</title><rect x="3.4253%" y="1317" width="0.0236%" height="15" fill="rgb(231,145,46)" fg:x="3488" fg:w="24"/><text x="3.6753%" y="1327.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (22 samples, 0.02%)</title><rect x="3.4272%" y="1301" width="0.0216%" height="15" fill="rgb(251,118,11)" fg:x="3490" fg:w="22"/><text x="3.6772%" y="1311.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.02%)</title><rect x="3.4272%" y="1285" width="0.0216%" height="15" fill="rgb(217,147,25)" fg:x="3490" fg:w="22"/><text x="3.6772%" y="1295.50"></text></g><g><title>parking::Inner::park (18 samples, 0.02%)</title><rect x="3.4646%" y="1317" width="0.0177%" height="15" fill="rgb(247,81,37)" fg:x="3528" fg:w="18"/><text x="3.7146%" y="1327.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (17 samples, 0.02%)</title><rect x="3.4881%" y="1301" width="0.0167%" height="15" fill="rgb(209,12,38)" fg:x="3552" fg:w="17"/><text x="3.7381%" y="1311.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17 samples, 0.02%)</title><rect x="3.4881%" y="1285" width="0.0167%" height="15" fill="rgb(227,1,9)" fg:x="3552" fg:w="17"/><text x="3.7381%" y="1295.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (31 samples, 0.03%)</title><rect x="3.4881%" y="1317" width="0.0304%" height="15" fill="rgb(248,47,43)" fg:x="3552" fg:w="31"/><text x="3.7381%" y="1327.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (14 samples, 0.01%)</title><rect x="3.5048%" y="1301" width="0.0137%" height="15" fill="rgb(221,10,30)" fg:x="3569" fg:w="14"/><text x="3.7548%" y="1311.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (12 samples, 0.01%)</title><rect x="3.5196%" y="1317" width="0.0118%" height="15" fill="rgb(210,229,1)" fg:x="3584" fg:w="12"/><text x="3.7696%" y="1327.50"></text></g><g><title>[engine] (279 samples, 0.27%)</title><rect x="3.2613%" y="1333" width="0.2740%" height="15" fill="rgb(222,148,37)" fg:x="3321" fg:w="279"/><text x="3.5113%" y="1343.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (21 samples, 0.02%)</title><rect x="3.5461%" y="1317" width="0.0206%" height="15" fill="rgb(234,67,33)" fg:x="3611" fg:w="21"/><text x="3.7961%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="3.5775%" y="1317" width="0.0422%" height="15" fill="rgb(247,98,35)" fg:x="3643" fg:w="43"/><text x="3.8275%" y="1327.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="3.6266%" y="1317" width="0.0147%" height="15" fill="rgb(247,138,52)" fg:x="3693" fg:w="15"/><text x="3.8766%" y="1327.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="3.6492%" y="1317" width="0.0334%" height="15" fill="rgb(213,79,30)" fg:x="3716" fg:w="34"/><text x="3.8992%" y="1327.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (211 samples, 0.21%)</title><rect x="3.6924%" y="1317" width="0.2072%" height="15" fill="rgb(246,177,23)" fg:x="3760" fg:w="211"/><text x="3.9424%" y="1327.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (12 samples, 0.01%)</title><rect x="3.9300%" y="1317" width="0.0118%" height="15" fill="rgb(230,62,27)" fg:x="4002" fg:w="12"/><text x="4.1800%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.04%)</title><rect x="3.9418%" y="1317" width="0.0354%" height="15" fill="rgb(216,154,8)" fg:x="4014" fg:w="36"/><text x="4.1918%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="4.0017%" y="1317" width="0.0118%" height="15" fill="rgb(244,35,45)" fg:x="4075" fg:w="12"/><text x="4.2517%" y="1327.50"></text></g><g><title>__GI___libc_malloc (15 samples, 0.01%)</title><rect x="4.0233%" y="1317" width="0.0147%" height="15" fill="rgb(251,115,12)" fg:x="4097" fg:w="15"/><text x="4.2733%" y="1327.50"></text></g><g><title>_int_free (27 samples, 0.03%)</title><rect x="4.0636%" y="1317" width="0.0265%" height="15" fill="rgb(240,54,50)" fg:x="4138" fg:w="27"/><text x="4.3136%" y="1327.50"></text></g><g><title>_int_malloc (23 samples, 0.02%)</title><rect x="4.0901%" y="1317" width="0.0226%" height="15" fill="rgb(233,84,52)" fg:x="4165" fg:w="23"/><text x="4.3401%" y="1327.50"></text></g><g><title>_int_realloc (33 samples, 0.03%)</title><rect x="4.1127%" y="1317" width="0.0324%" height="15" fill="rgb(207,117,47)" fg:x="4188" fg:w="33"/><text x="4.3627%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.03%)</title><rect x="4.1569%" y="1317" width="0.0295%" height="15" fill="rgb(249,43,39)" fg:x="4233" fg:w="30"/><text x="4.4069%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="4.1706%" y="1301" width="0.0157%" height="15" fill="rgb(209,38,44)" fg:x="4247" fg:w="16"/><text x="4.4206%" y="1311.50"></text></g><g><title>alloc::raw_vec::finish_grow (49 samples, 0.05%)</title><rect x="4.1863%" y="1317" width="0.0481%" height="15" fill="rgb(236,212,23)" fg:x="4263" fg:w="49"/><text x="4.4363%" y="1327.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update (12 samples, 0.01%)</title><rect x="4.2718%" y="1317" width="0.0118%" height="15" fill="rgb(242,79,21)" fg:x="4350" fg:w="12"/><text x="4.5218%" y="1327.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (91 samples, 0.09%)</title><rect x="4.2855%" y="1317" width="0.0894%" height="15" fill="rgb(211,96,35)" fg:x="4364" fg:w="91"/><text x="4.5355%" y="1327.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (40 samples, 0.04%)</title><rect x="4.3356%" y="1301" width="0.0393%" height="15" fill="rgb(253,215,40)" fg:x="4415" fg:w="40"/><text x="4.5856%" y="1311.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (20 samples, 0.02%)</title><rect x="4.3553%" y="1285" width="0.0196%" height="15" fill="rgb(211,81,21)" fg:x="4435" fg:w="20"/><text x="4.6053%" y="1295.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (20 samples, 0.02%)</title><rect x="4.3553%" y="1269" width="0.0196%" height="15" fill="rgb(208,190,38)" fg:x="4435" fg:w="20"/><text x="4.6053%" y="1279.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (11 samples, 0.01%)</title><rect x="4.3837%" y="1317" width="0.0108%" height="15" fill="rgb(235,213,38)" fg:x="4464" fg:w="11"/><text x="4.6337%" y="1327.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (15 samples, 0.01%)</title><rect x="4.4377%" y="1317" width="0.0147%" height="15" fill="rgb(237,122,38)" fg:x="4519" fg:w="15"/><text x="4.6877%" y="1327.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (13 samples, 0.01%)</title><rect x="4.4947%" y="1317" width="0.0128%" height="15" fill="rgb(244,218,35)" fg:x="4577" fg:w="13"/><text x="4.7447%" y="1327.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (13 samples, 0.01%)</title><rect x="4.5261%" y="1317" width="0.0128%" height="15" fill="rgb(240,68,47)" fg:x="4609" fg:w="13"/><text x="4.7761%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (18 samples, 0.02%)</title><rect x="4.5389%" y="1317" width="0.0177%" height="15" fill="rgb(210,16,53)" fg:x="4622" fg:w="18"/><text x="4.7889%" y="1327.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (41 samples, 0.04%)</title><rect x="4.5625%" y="1317" width="0.0403%" height="15" fill="rgb(235,124,12)" fg:x="4646" fg:w="41"/><text x="4.8125%" y="1327.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (11 samples, 0.01%)</title><rect x="4.6027%" y="1317" width="0.0108%" height="15" fill="rgb(224,169,11)" fg:x="4687" fg:w="11"/><text x="4.8527%" y="1327.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::neighbors_except_entities (12 samples, 0.01%)</title><rect x="4.6204%" y="1317" width="0.0118%" height="15" fill="rgb(250,166,2)" fg:x="4705" fg:w="12"/><text x="4.8704%" y="1327.50"></text></g><g><title>event_listener::List::notify (14 samples, 0.01%)</title><rect x="4.6371%" y="1317" width="0.0137%" height="15" fill="rgb(242,216,29)" fg:x="4722" fg:w="14"/><text x="4.8871%" y="1327.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (19 samples, 0.02%)</title><rect x="4.6508%" y="1317" width="0.0187%" height="15" fill="rgb(230,116,27)" fg:x="4736" fg:w="19"/><text x="4.9008%" y="1327.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (11 samples, 0.01%)</title><rect x="4.6862%" y="1317" width="0.0108%" height="15" fill="rgb(228,99,48)" fg:x="4772" fg:w="11"/><text x="4.9362%" y="1327.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (41 samples, 0.04%)</title><rect x="4.6970%" y="1317" width="0.0403%" height="15" fill="rgb(253,11,6)" fg:x="4783" fg:w="41"/><text x="4.9470%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (24 samples, 0.02%)</title><rect x="4.7137%" y="1301" width="0.0236%" height="15" fill="rgb(247,143,39)" fg:x="4800" fg:w="24"/><text x="4.9637%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (24 samples, 0.02%)</title><rect x="4.7137%" y="1285" width="0.0236%" height="15" fill="rgb(236,97,10)" fg:x="4800" fg:w="24"/><text x="4.9637%" y="1295.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (17 samples, 0.02%)</title><rect x="4.7667%" y="1317" width="0.0167%" height="15" fill="rgb(233,208,19)" fg:x="4854" fg:w="17"/><text x="5.0167%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 0.01%)</title><rect x="4.7716%" y="1301" width="0.0118%" height="15" fill="rgb(216,164,2)" fg:x="4859" fg:w="12"/><text x="5.0216%" y="1311.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.01%)</title><rect x="4.7716%" y="1285" width="0.0118%" height="15" fill="rgb(220,129,5)" fg:x="4859" fg:w="12"/><text x="5.0216%" y="1295.50"></text></g><g><title>hashbrown::map::make_hash (12 samples, 0.01%)</title><rect x="4.7716%" y="1269" width="0.0118%" height="15" fill="rgb(242,17,10)" fg:x="4859" fg:w="12"/><text x="5.0216%" y="1279.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (12 samples, 0.01%)</title><rect x="4.7716%" y="1253" width="0.0118%" height="15" fill="rgb(242,107,0)" fg:x="4859" fg:w="12"/><text x="5.0216%" y="1263.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (12 samples, 0.01%)</title><rect x="4.7716%" y="1237" width="0.0118%" height="15" fill="rgb(251,28,31)" fg:x="4859" fg:w="12"/><text x="5.0216%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (15 samples, 0.01%)</title><rect x="4.7844%" y="1317" width="0.0147%" height="15" fill="rgb(233,223,10)" fg:x="4872" fg:w="15"/><text x="5.0344%" y="1327.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (18 samples, 0.02%)</title><rect x="4.8178%" y="1317" width="0.0177%" height="15" fill="rgb(215,21,27)" fg:x="4906" fg:w="18"/><text x="5.0678%" y="1327.50"></text></g><g><title>[unknown] (1,328 samples, 1.30%)</title><rect x="3.5451%" y="1333" width="1.3041%" height="15" fill="rgb(232,23,21)" fg:x="3610" fg:w="1328"/><text x="3.7951%" y="1343.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (12 samples, 0.01%)</title><rect x="5.0054%" y="965" width="0.0118%" height="15" fill="rgb(244,5,23)" fg:x="5097" fg:w="12"/><text x="5.2554%" y="975.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="5.0054%" y="949" width="0.0118%" height="15" fill="rgb(226,81,46)" fg:x="5097" fg:w="12"/><text x="5.2554%" y="959.50"></text></g><g><title>core::ptr::read (12 samples, 0.01%)</title><rect x="5.0054%" y="933" width="0.0118%" height="15" fill="rgb(247,70,30)" fg:x="5097" fg:w="12"/><text x="5.2554%" y="943.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (19 samples, 0.02%)</title><rect x="5.0171%" y="965" width="0.0187%" height="15" fill="rgb(212,68,19)" fg:x="5109" fg:w="19"/><text x="5.2671%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (38 samples, 0.04%)</title><rect x="5.0358%" y="965" width="0.0373%" height="15" fill="rgb(240,187,13)" fg:x="5128" fg:w="38"/><text x="5.2858%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (35 samples, 0.03%)</title><rect x="5.0387%" y="949" width="0.0344%" height="15" fill="rgb(223,113,26)" fg:x="5131" fg:w="35"/><text x="5.2887%" y="959.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="5.0387%" y="933" width="0.0344%" height="15" fill="rgb(206,192,2)" fg:x="5131" fg:w="35"/><text x="5.2887%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (35 samples, 0.03%)</title><rect x="5.0387%" y="917" width="0.0344%" height="15" fill="rgb(241,108,4)" fg:x="5131" fg:w="35"/><text x="5.2887%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (34 samples, 0.03%)</title><rect x="5.0397%" y="901" width="0.0334%" height="15" fill="rgb(247,173,49)" fg:x="5132" fg:w="34"/><text x="5.2897%" y="911.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (33 samples, 0.03%)</title><rect x="5.0407%" y="885" width="0.0324%" height="15" fill="rgb(224,114,35)" fg:x="5133" fg:w="33"/><text x="5.2907%" y="895.50"></text></g><g><title>core::task::wake::Waker::will_wake (49 samples, 0.05%)</title><rect x="5.0731%" y="965" width="0.0481%" height="15" fill="rgb(245,159,27)" fg:x="5166" fg:w="49"/><text x="5.3231%" y="975.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (49 samples, 0.05%)</title><rect x="5.0731%" y="949" width="0.0481%" height="15" fill="rgb(245,172,44)" fg:x="5166" fg:w="49"/><text x="5.3231%" y="959.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (28 samples, 0.03%)</title><rect x="5.0937%" y="933" width="0.0275%" height="15" fill="rgb(236,23,11)" fg:x="5187" fg:w="28"/><text x="5.3437%" y="943.50"></text></g><g><title>&lt;core::task::wake::RawWakerVTable as core::cmp::PartialEq&gt;::eq (28 samples, 0.03%)</title><rect x="5.0937%" y="917" width="0.0275%" height="15" fill="rgb(205,117,38)" fg:x="5187" fg:w="28"/><text x="5.3437%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (272 samples, 0.27%)</title><rect x="4.9621%" y="981" width="0.2671%" height="15" fill="rgb(237,72,25)" fg:x="5053" fg:w="272"/><text x="5.2121%" y="991.50"></text></g><g><title>event_listener::Inner::lock (110 samples, 0.11%)</title><rect x="5.1212%" y="965" width="0.1080%" height="15" fill="rgb(244,70,9)" fg:x="5215" fg:w="110"/><text x="5.3712%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (110 samples, 0.11%)</title><rect x="5.1212%" y="949" width="0.1080%" height="15" fill="rgb(217,125,39)" fg:x="5215" fg:w="110"/><text x="5.3712%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (109 samples, 0.11%)</title><rect x="5.1222%" y="933" width="0.1070%" height="15" fill="rgb(235,36,10)" fg:x="5216" fg:w="109"/><text x="5.3722%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (68 samples, 0.07%)</title><rect x="5.1625%" y="917" width="0.0668%" height="15" fill="rgb(251,123,47)" fg:x="5257" fg:w="68"/><text x="5.4125%" y="927.50"></text></g><g><title>__GI___pthread_mutex_lock (68 samples, 0.07%)</title><rect x="5.1625%" y="901" width="0.0668%" height="15" fill="rgb(221,13,13)" fg:x="5257" fg:w="68"/><text x="5.4125%" y="911.50"></text></g><g><title>[engine] (26 samples, 0.03%)</title><rect x="5.2293%" y="981" width="0.0255%" height="15" fill="rgb(238,131,9)" fg:x="5325" fg:w="26"/><text x="5.4793%" y="991.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (26 samples, 0.03%)</title><rect x="5.2293%" y="965" width="0.0255%" height="15" fill="rgb(211,50,8)" fg:x="5325" fg:w="26"/><text x="5.4793%" y="975.50"></text></g><g><title>concurrent_queue::full_fence (16 samples, 0.02%)</title><rect x="5.3383%" y="933" width="0.0157%" height="15" fill="rgb(245,182,24)" fg:x="5436" fg:w="16"/><text x="5.5883%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (15 samples, 0.01%)</title><rect x="5.3392%" y="917" width="0.0147%" height="15" fill="rgb(242,14,37)" fg:x="5437" fg:w="15"/><text x="5.5892%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (15 samples, 0.01%)</title><rect x="5.3392%" y="901" width="0.0147%" height="15" fill="rgb(246,228,12)" fg:x="5437" fg:w="15"/><text x="5.5892%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="5.3392%" y="885" width="0.0147%" height="15" fill="rgb(213,55,15)" fg:x="5437" fg:w="15"/><text x="5.5892%" y="895.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (472 samples, 0.46%)</title><rect x="4.9327%" y="997" width="0.4635%" height="15" fill="rgb(209,9,3)" fg:x="5023" fg:w="472"/><text x="5.1827%" y="1007.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (144 samples, 0.14%)</title><rect x="5.2548%" y="981" width="0.1414%" height="15" fill="rgb(230,59,30)" fg:x="5351" fg:w="144"/><text x="5.5048%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (134 samples, 0.13%)</title><rect x="5.2646%" y="965" width="0.1316%" height="15" fill="rgb(209,121,21)" fg:x="5361" fg:w="134"/><text x="5.5146%" y="975.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (70 samples, 0.07%)</title><rect x="5.3275%" y="949" width="0.0687%" height="15" fill="rgb(220,109,13)" fg:x="5425" fg:w="70"/><text x="5.5775%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (41 samples, 0.04%)</title><rect x="5.3559%" y="933" width="0.0403%" height="15" fill="rgb(232,18,1)" fg:x="5454" fg:w="41"/><text x="5.6059%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (41 samples, 0.04%)</title><rect x="5.3559%" y="917" width="0.0403%" height="15" fill="rgb(215,41,42)" fg:x="5454" fg:w="41"/><text x="5.6059%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="5.4178%" y="949" width="0.0128%" height="15" fill="rgb(224,123,36)" fg:x="5517" fg:w="13"/><text x="5.6678%" y="959.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (17 samples, 0.02%)</title><rect x="5.5003%" y="869" width="0.0167%" height="15" fill="rgb(240,125,3)" fg:x="5601" fg:w="17"/><text x="5.7503%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (20 samples, 0.02%)</title><rect x="5.6181%" y="741" width="0.0196%" height="15" fill="rgb(205,98,50)" fg:x="5721" fg:w="20"/><text x="5.8681%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (13 samples, 0.01%)</title><rect x="5.6250%" y="725" width="0.0128%" height="15" fill="rgb(205,185,37)" fg:x="5728" fg:w="13"/><text x="5.8750%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (13 samples, 0.01%)</title><rect x="5.6250%" y="709" width="0.0128%" height="15" fill="rgb(238,207,15)" fg:x="5728" fg:w="13"/><text x="5.8750%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (58 samples, 0.06%)</title><rect x="5.5818%" y="789" width="0.0570%" height="15" fill="rgb(213,199,42)" fg:x="5684" fg:w="58"/><text x="5.8318%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (47 samples, 0.05%)</title><rect x="5.5926%" y="773" width="0.0462%" height="15" fill="rgb(235,201,11)" fg:x="5695" fg:w="47"/><text x="5.8426%" y="783.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (21 samples, 0.02%)</title><rect x="5.6181%" y="757" width="0.0206%" height="15" fill="rgb(207,46,11)" fg:x="5721" fg:w="21"/><text x="5.8681%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (94 samples, 0.09%)</title><rect x="5.5651%" y="853" width="0.0923%" height="15" fill="rgb(241,35,35)" fg:x="5667" fg:w="94"/><text x="5.8151%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (94 samples, 0.09%)</title><rect x="5.5651%" y="837" width="0.0923%" height="15" fill="rgb(243,32,47)" fg:x="5667" fg:w="94"/><text x="5.8151%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (94 samples, 0.09%)</title><rect x="5.5651%" y="821" width="0.0923%" height="15" fill="rgb(247,202,23)" fg:x="5667" fg:w="94"/><text x="5.8151%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (88 samples, 0.09%)</title><rect x="5.5710%" y="805" width="0.0864%" height="15" fill="rgb(219,102,11)" fg:x="5673" fg:w="88"/><text x="5.8210%" y="815.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (19 samples, 0.02%)</title><rect x="5.6388%" y="789" width="0.0187%" height="15" fill="rgb(243,110,44)" fg:x="5742" fg:w="19"/><text x="5.8888%" y="799.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (172 samples, 0.17%)</title><rect x="5.8194%" y="821" width="0.1689%" height="15" fill="rgb(222,74,54)" fg:x="5926" fg:w="172"/><text x="6.0694%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (138 samples, 0.14%)</title><rect x="5.8528%" y="805" width="0.1355%" height="15" fill="rgb(216,99,12)" fg:x="5960" fg:w="138"/><text x="6.1028%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (138 samples, 0.14%)</title><rect x="5.8528%" y="789" width="0.1355%" height="15" fill="rgb(226,22,26)" fg:x="5960" fg:w="138"/><text x="6.1028%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (327 samples, 0.32%)</title><rect x="5.6849%" y="837" width="0.3211%" height="15" fill="rgb(217,163,10)" fg:x="5789" fg:w="327"/><text x="5.9349%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::len (18 samples, 0.02%)</title><rect x="5.9884%" y="821" width="0.0177%" height="15" fill="rgb(213,25,53)" fg:x="6098" fg:w="18"/><text x="6.2384%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (14 samples, 0.01%)</title><rect x="5.9923%" y="805" width="0.0137%" height="15" fill="rgb(252,105,26)" fg:x="6102" fg:w="14"/><text x="6.2423%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="5.9923%" y="789" width="0.0137%" height="15" fill="rgb(220,39,43)" fg:x="6102" fg:w="14"/><text x="6.2423%" y="799.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (17 samples, 0.02%)</title><rect x="6.0198%" y="821" width="0.0167%" height="15" fill="rgb(229,68,48)" fg:x="6130" fg:w="17"/><text x="6.2698%" y="831.50"></text></g><g><title>__rdl_dealloc (19 samples, 0.02%)</title><rect x="6.0502%" y="805" width="0.0187%" height="15" fill="rgb(252,8,32)" fg:x="6161" fg:w="19"/><text x="6.3002%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (19 samples, 0.02%)</title><rect x="6.0502%" y="789" width="0.0187%" height="15" fill="rgb(223,20,43)" fg:x="6161" fg:w="19"/><text x="6.3002%" y="799.50"></text></g><g><title>__GI___libc_free (19 samples, 0.02%)</title><rect x="6.0502%" y="773" width="0.0187%" height="15" fill="rgb(229,81,49)" fg:x="6161" fg:w="19"/><text x="6.3002%" y="783.50"></text></g><g><title>concurrent_queue::full_fence (30 samples, 0.03%)</title><rect x="6.0689%" y="805" width="0.0295%" height="15" fill="rgb(236,28,36)" fg:x="6180" fg:w="30"/><text x="6.3189%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (28 samples, 0.03%)</title><rect x="6.0708%" y="789" width="0.0275%" height="15" fill="rgb(249,185,26)" fg:x="6182" fg:w="28"/><text x="6.3208%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (28 samples, 0.03%)</title><rect x="6.0708%" y="773" width="0.0275%" height="15" fill="rgb(249,174,33)" fg:x="6182" fg:w="28"/><text x="6.3208%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (28 samples, 0.03%)</title><rect x="6.0708%" y="757" width="0.0275%" height="15" fill="rgb(233,201,37)" fg:x="6182" fg:w="28"/><text x="6.3208%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (33 samples, 0.03%)</title><rect x="6.1258%" y="805" width="0.0324%" height="15" fill="rgb(221,78,26)" fg:x="6238" fg:w="33"/><text x="6.3758%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (33 samples, 0.03%)</title><rect x="6.1258%" y="789" width="0.0324%" height="15" fill="rgb(250,127,30)" fg:x="6238" fg:w="33"/><text x="6.3758%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (31 samples, 0.03%)</title><rect x="6.1582%" y="805" width="0.0304%" height="15" fill="rgb(230,49,44)" fg:x="6271" fg:w="31"/><text x="6.4082%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_or (31 samples, 0.03%)</title><rect x="6.1582%" y="789" width="0.0304%" height="15" fill="rgb(229,67,23)" fg:x="6271" fg:w="31"/><text x="6.4082%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (201 samples, 0.20%)</title><rect x="6.0060%" y="837" width="0.1974%" height="15" fill="rgb(249,83,47)" fg:x="6116" fg:w="201"/><text x="6.2560%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (170 samples, 0.17%)</title><rect x="6.0365%" y="821" width="0.1669%" height="15" fill="rgb(215,43,3)" fg:x="6147" fg:w="170"/><text x="6.2865%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.01%)</title><rect x="6.1887%" y="805" width="0.0147%" height="15" fill="rgb(238,154,13)" fg:x="6302" fg:w="15"/><text x="6.4387%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="6.1887%" y="789" width="0.0147%" height="15" fill="rgb(219,56,2)" fg:x="6302" fg:w="15"/><text x="6.4387%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (36 samples, 0.04%)</title><rect x="6.2152%" y="805" width="0.0354%" height="15" fill="rgb(233,0,4)" fg:x="6329" fg:w="36"/><text x="6.4652%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (36 samples, 0.04%)</title><rect x="6.2152%" y="789" width="0.0354%" height="15" fill="rgb(235,30,7)" fg:x="6329" fg:w="36"/><text x="6.4652%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="6.2506%" y="805" width="0.0108%" height="15" fill="rgb(250,79,13)" fg:x="6365" fg:w="11"/><text x="6.5006%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="6.2506%" y="789" width="0.0108%" height="15" fill="rgb(211,146,34)" fg:x="6365" fg:w="11"/><text x="6.5006%" y="799.50"></text></g><g><title>async_executor::steal (616 samples, 0.60%)</title><rect x="5.6574%" y="853" width="0.6049%" height="15" fill="rgb(228,22,38)" fg:x="5761" fg:w="616"/><text x="5.9074%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (60 samples, 0.06%)</title><rect x="6.2034%" y="837" width="0.0589%" height="15" fill="rgb(235,168,5)" fg:x="6317" fg:w="60"/><text x="6.4534%" y="847.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (58 samples, 0.06%)</title><rect x="6.2054%" y="821" width="0.0570%" height="15" fill="rgb(221,155,16)" fg:x="6319" fg:w="58"/><text x="6.4554%" y="831.50"></text></g><g><title>concurrent_queue::full_fence (142 samples, 0.14%)</title><rect x="6.4096%" y="821" width="0.1394%" height="15" fill="rgb(215,215,53)" fg:x="6527" fg:w="142"/><text x="6.6596%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (138 samples, 0.14%)</title><rect x="6.4136%" y="805" width="0.1355%" height="15" fill="rgb(223,4,10)" fg:x="6531" fg:w="138"/><text x="6.6636%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (138 samples, 0.14%)</title><rect x="6.4136%" y="789" width="0.1355%" height="15" fill="rgb(234,103,6)" fg:x="6531" fg:w="138"/><text x="6.6636%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (138 samples, 0.14%)</title><rect x="6.4136%" y="773" width="0.1355%" height="15" fill="rgb(227,97,0)" fg:x="6531" fg:w="138"/><text x="6.6636%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (32 samples, 0.03%)</title><rect x="6.5491%" y="821" width="0.0314%" height="15" fill="rgb(234,150,53)" fg:x="6669" fg:w="32"/><text x="6.7991%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (32 samples, 0.03%)</title><rect x="6.5491%" y="805" width="0.0314%" height="15" fill="rgb(228,201,54)" fg:x="6669" fg:w="32"/><text x="6.7991%" y="815.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (337 samples, 0.33%)</title><rect x="6.3291%" y="837" width="0.3309%" height="15" fill="rgb(222,22,37)" fg:x="6445" fg:w="337"/><text x="6.5791%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (81 samples, 0.08%)</title><rect x="6.5805%" y="821" width="0.0795%" height="15" fill="rgb(237,53,32)" fg:x="6701" fg:w="81"/><text x="6.8305%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (78 samples, 0.08%)</title><rect x="6.5835%" y="805" width="0.0766%" height="15" fill="rgb(233,25,53)" fg:x="6704" fg:w="78"/><text x="6.8335%" y="815.50"></text></g><g><title>concurrent_queue::full_fence (65 samples, 0.06%)</title><rect x="6.6885%" y="821" width="0.0638%" height="15" fill="rgb(210,40,34)" fg:x="6811" fg:w="65"/><text x="6.9385%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (64 samples, 0.06%)</title><rect x="6.6895%" y="805" width="0.0628%" height="15" fill="rgb(241,220,44)" fg:x="6812" fg:w="64"/><text x="6.9395%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (64 samples, 0.06%)</title><rect x="6.6895%" y="789" width="0.0628%" height="15" fill="rgb(235,28,35)" fg:x="6812" fg:w="64"/><text x="6.9395%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (64 samples, 0.06%)</title><rect x="6.6895%" y="773" width="0.0628%" height="15" fill="rgb(210,56,17)" fg:x="6812" fg:w="64"/><text x="6.9395%" y="783.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (34 samples, 0.03%)</title><rect x="6.7573%" y="821" width="0.0334%" height="15" fill="rgb(224,130,29)" fg:x="6881" fg:w="34"/><text x="7.0073%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (34 samples, 0.03%)</title><rect x="6.7573%" y="805" width="0.0334%" height="15" fill="rgb(235,212,8)" fg:x="6881" fg:w="34"/><text x="7.0073%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (34 samples, 0.03%)</title><rect x="6.7573%" y="789" width="0.0334%" height="15" fill="rgb(223,33,50)" fg:x="6881" fg:w="34"/><text x="7.0073%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (22 samples, 0.02%)</title><rect x="6.8044%" y="821" width="0.0216%" height="15" fill="rgb(219,149,13)" fg:x="6929" fg:w="22"/><text x="7.0544%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 0.02%)</title><rect x="6.8044%" y="805" width="0.0216%" height="15" fill="rgb(250,156,29)" fg:x="6929" fg:w="22"/><text x="7.0544%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (26 samples, 0.03%)</title><rect x="6.8260%" y="821" width="0.0255%" height="15" fill="rgb(216,193,19)" fg:x="6951" fg:w="26"/><text x="7.0760%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_or (26 samples, 0.03%)</title><rect x="6.8260%" y="805" width="0.0255%" height="15" fill="rgb(216,135,14)" fg:x="6951" fg:w="26"/><text x="7.0760%" y="815.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (661 samples, 0.65%)</title><rect x="6.2623%" y="853" width="0.6491%" height="15" fill="rgb(241,47,5)" fg:x="6377" fg:w="661"/><text x="6.5123%" y="863.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (256 samples, 0.25%)</title><rect x="6.6601%" y="837" width="0.2514%" height="15" fill="rgb(233,42,35)" fg:x="6782" fg:w="256"/><text x="6.9101%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (61 samples, 0.06%)</title><rect x="6.8515%" y="821" width="0.0599%" height="15" fill="rgb(231,13,6)" fg:x="6977" fg:w="61"/><text x="7.1015%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (61 samples, 0.06%)</title><rect x="6.8515%" y="805" width="0.0599%" height="15" fill="rgb(207,181,40)" fg:x="6977" fg:w="61"/><text x="7.1015%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (47 samples, 0.05%)</title><rect x="6.9291%" y="789" width="0.0462%" height="15" fill="rgb(254,173,49)" fg:x="7056" fg:w="47"/><text x="7.1791%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (47 samples, 0.05%)</title><rect x="6.9291%" y="773" width="0.0462%" height="15" fill="rgb(221,1,38)" fg:x="7056" fg:w="47"/><text x="7.1791%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (129 samples, 0.13%)</title><rect x="6.9115%" y="853" width="0.1267%" height="15" fill="rgb(206,124,46)" fg:x="7038" fg:w="129"/><text x="7.1615%" y="863.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (129 samples, 0.13%)</title><rect x="6.9115%" y="837" width="0.1267%" height="15" fill="rgb(249,21,11)" fg:x="7038" fg:w="129"/><text x="7.1615%" y="847.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (125 samples, 0.12%)</title><rect x="6.9154%" y="821" width="0.1228%" height="15" fill="rgb(222,201,40)" fg:x="7042" fg:w="125"/><text x="7.1654%" y="831.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (113 samples, 0.11%)</title><rect x="6.9272%" y="805" width="0.1110%" height="15" fill="rgb(235,61,29)" fg:x="7054" fg:w="113"/><text x="7.1772%" y="815.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (64 samples, 0.06%)</title><rect x="6.9753%" y="789" width="0.0628%" height="15" fill="rgb(219,207,3)" fg:x="7103" fg:w="64"/><text x="7.2253%" y="799.50"></text></g><g><title>__GI___pthread_rwlock_unlock (64 samples, 0.06%)</title><rect x="6.9753%" y="773" width="0.0628%" height="15" fill="rgb(222,56,46)" fg:x="7103" fg:w="64"/><text x="7.2253%" y="783.50"></text></g><g><title>fastrand::RNG::__getit (16 samples, 0.02%)</title><rect x="7.0480%" y="805" width="0.0157%" height="15" fill="rgb(239,76,54)" fg:x="7177" fg:w="16"/><text x="7.2980%" y="815.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="7.0489%" y="789" width="0.0147%" height="15" fill="rgb(231,124,27)" fg:x="7178" fg:w="15"/><text x="7.2989%" y="799.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (15 samples, 0.01%)</title><rect x="7.0489%" y="773" width="0.0147%" height="15" fill="rgb(249,195,6)" fg:x="7178" fg:w="15"/><text x="7.2989%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (15 samples, 0.01%)</title><rect x="7.0489%" y="757" width="0.0147%" height="15" fill="rgb(237,174,47)" fg:x="7178" fg:w="15"/><text x="7.2989%" y="767.50"></text></g><g><title>fastrand::usize (34 samples, 0.03%)</title><rect x="7.0411%" y="853" width="0.0334%" height="15" fill="rgb(206,201,31)" fg:x="7170" fg:w="34"/><text x="7.2911%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.03%)</title><rect x="7.0421%" y="837" width="0.0324%" height="15" fill="rgb(231,57,52)" fg:x="7171" fg:w="33"/><text x="7.2921%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29 samples, 0.03%)</title><rect x="7.0460%" y="821" width="0.0285%" height="15" fill="rgb(248,177,22)" fg:x="7175" fg:w="29"/><text x="7.2960%" y="831.50"></text></g><g><title>fastrand::usize::{{closure}} (11 samples, 0.01%)</title><rect x="7.0637%" y="805" width="0.0108%" height="15" fill="rgb(215,211,37)" fg:x="7193" fg:w="11"/><text x="7.3137%" y="815.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (99 samples, 0.10%)</title><rect x="7.0931%" y="805" width="0.0972%" height="15" fill="rgb(241,128,51)" fg:x="7223" fg:w="99"/><text x="7.3431%" y="815.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1,737 samples, 1.71%)</title><rect x="5.5170%" y="869" width="1.7058%" height="15" fill="rgb(227,165,31)" fg:x="5618" fg:w="1737"/><text x="5.7670%" y="879.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (151 samples, 0.15%)</title><rect x="7.0745%" y="853" width="0.1483%" height="15" fill="rgb(228,167,24)" fg:x="7204" fg:w="151"/><text x="7.3245%" y="863.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (149 samples, 0.15%)</title><rect x="7.0764%" y="837" width="0.1463%" height="15" fill="rgb(228,143,12)" fg:x="7206" fg:w="149"/><text x="7.3264%" y="847.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (142 samples, 0.14%)</title><rect x="7.0833%" y="821" width="0.1394%" height="15" fill="rgb(249,149,8)" fg:x="7213" fg:w="142"/><text x="7.3333%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (33 samples, 0.03%)</title><rect x="7.1903%" y="805" width="0.0324%" height="15" fill="rgb(243,35,44)" fg:x="7322" fg:w="33"/><text x="7.4403%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (33 samples, 0.03%)</title><rect x="7.1903%" y="789" width="0.0324%" height="15" fill="rgb(246,89,9)" fg:x="7322" fg:w="33"/><text x="7.4403%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (12 samples, 0.01%)</title><rect x="7.2267%" y="853" width="0.0118%" height="15" fill="rgb(233,213,13)" fg:x="7359" fg:w="12"/><text x="7.4767%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="7.2267%" y="837" width="0.0118%" height="15" fill="rgb(233,141,41)" fg:x="7359" fg:w="12"/><text x="7.4767%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (11 samples, 0.01%)</title><rect x="7.2277%" y="821" width="0.0108%" height="15" fill="rgb(239,167,4)" fg:x="7360" fg:w="11"/><text x="7.4777%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (73 samples, 0.07%)</title><rect x="7.2385%" y="853" width="0.0717%" height="15" fill="rgb(209,217,16)" fg:x="7371" fg:w="73"/><text x="7.4885%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (73 samples, 0.07%)</title><rect x="7.2385%" y="837" width="0.0717%" height="15" fill="rgb(219,88,35)" fg:x="7371" fg:w="73"/><text x="7.4885%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (18 samples, 0.02%)</title><rect x="7.3111%" y="821" width="0.0177%" height="15" fill="rgb(220,193,23)" fg:x="7445" fg:w="18"/><text x="7.5611%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="7.3111%" y="805" width="0.0177%" height="15" fill="rgb(230,90,52)" fg:x="7445" fg:w="18"/><text x="7.5611%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (18 samples, 0.02%)</title><rect x="7.3111%" y="789" width="0.0177%" height="15" fill="rgb(252,106,19)" fg:x="7445" fg:w="18"/><text x="7.5611%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (18 samples, 0.02%)</title><rect x="7.3111%" y="773" width="0.0177%" height="15" fill="rgb(206,74,20)" fg:x="7445" fg:w="18"/><text x="7.5611%" y="783.50"></text></g><g><title>core::mem::drop (11 samples, 0.01%)</title><rect x="7.3484%" y="773" width="0.0108%" height="15" fill="rgb(230,138,44)" fg:x="7483" fg:w="11"/><text x="7.5984%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (11 samples, 0.01%)</title><rect x="7.3484%" y="757" width="0.0108%" height="15" fill="rgb(235,182,43)" fg:x="7483" fg:w="11"/><text x="7.5984%" y="767.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="7.3484%" y="741" width="0.0108%" height="15" fill="rgb(242,16,51)" fg:x="7483" fg:w="11"/><text x="7.5984%" y="751.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (11 samples, 0.01%)</title><rect x="7.3484%" y="725" width="0.0108%" height="15" fill="rgb(248,9,4)" fg:x="7483" fg:w="11"/><text x="7.5984%" y="735.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="7.3484%" y="709" width="0.0108%" height="15" fill="rgb(210,31,22)" fg:x="7483" fg:w="11"/><text x="7.5984%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (28 samples, 0.03%)</title><rect x="7.3593%" y="773" width="0.0275%" height="15" fill="rgb(239,54,39)" fg:x="7494" fg:w="28"/><text x="7.6093%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (28 samples, 0.03%)</title><rect x="7.3593%" y="757" width="0.0275%" height="15" fill="rgb(230,99,41)" fg:x="7494" fg:w="28"/><text x="7.6093%" y="767.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (79 samples, 0.08%)</title><rect x="7.3867%" y="773" width="0.0776%" height="15" fill="rgb(253,106,12)" fg:x="7522" fg:w="79"/><text x="7.6367%" y="783.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (79 samples, 0.08%)</title><rect x="7.3867%" y="757" width="0.0776%" height="15" fill="rgb(213,46,41)" fg:x="7522" fg:w="79"/><text x="7.6367%" y="767.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (79 samples, 0.08%)</title><rect x="7.3867%" y="741" width="0.0776%" height="15" fill="rgb(215,133,35)" fg:x="7522" fg:w="79"/><text x="7.6367%" y="751.50"></text></g><g><title>__pthread_cond_signal (79 samples, 0.08%)</title><rect x="7.3867%" y="725" width="0.0776%" height="15" fill="rgb(213,28,5)" fg:x="7522" fg:w="79"/><text x="7.6367%" y="735.50"></text></g><g><title>core::task::wake::Waker::wake (194 samples, 0.19%)</title><rect x="7.3102%" y="853" width="0.1905%" height="15" fill="rgb(215,77,49)" fg:x="7444" fg:w="194"/><text x="7.5602%" y="863.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (194 samples, 0.19%)</title><rect x="7.3102%" y="837" width="0.1905%" height="15" fill="rgb(248,100,22)" fg:x="7444" fg:w="194"/><text x="7.5602%" y="847.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (175 samples, 0.17%)</title><rect x="7.3288%" y="821" width="0.1719%" height="15" fill="rgb(208,67,9)" fg:x="7463" fg:w="175"/><text x="7.5788%" y="831.50"></text></g><g><title>parking::Unparker::unpark (175 samples, 0.17%)</title><rect x="7.3288%" y="805" width="0.1719%" height="15" fill="rgb(219,133,21)" fg:x="7463" fg:w="175"/><text x="7.5788%" y="815.50"></text></g><g><title>parking::Inner::unpark (157 samples, 0.15%)</title><rect x="7.3465%" y="789" width="0.1542%" height="15" fill="rgb(246,46,29)" fg:x="7481" fg:w="157"/><text x="7.5965%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.04%)</title><rect x="7.4643%" y="773" width="0.0363%" height="15" fill="rgb(246,185,52)" fg:x="7601" fg:w="37"/><text x="7.7143%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (37 samples, 0.04%)</title><rect x="7.4643%" y="757" width="0.0363%" height="15" fill="rgb(252,136,11)" fg:x="7601" fg:w="37"/><text x="7.7143%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (33 samples, 0.03%)</title><rect x="7.4683%" y="741" width="0.0324%" height="15" fill="rgb(219,138,53)" fg:x="7605" fg:w="33"/><text x="7.7183%" y="751.50"></text></g><g><title>__GI___pthread_mutex_lock (33 samples, 0.03%)</title><rect x="7.4683%" y="725" width="0.0324%" height="15" fill="rgb(211,51,23)" fg:x="7605" fg:w="33"/><text x="7.7183%" y="735.50"></text></g><g><title>async_executor::State::notify (299 samples, 0.29%)</title><rect x="7.2228%" y="869" width="0.2936%" height="15" fill="rgb(247,221,28)" fg:x="7355" fg:w="299"/><text x="7.4728%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.02%)</title><rect x="7.5007%" y="853" width="0.0157%" height="15" fill="rgb(251,222,45)" fg:x="7638" fg:w="16"/><text x="7.7507%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="7.5046%" y="837" width="0.0118%" height="15" fill="rgb(217,162,53)" fg:x="7642" fg:w="12"/><text x="7.7546%" y="847.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="7.5213%" y="837" width="0.0177%" height="15" fill="rgb(229,93,14)" fg:x="7659" fg:w="18"/><text x="7.7713%" y="847.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (18 samples, 0.02%)</title><rect x="7.5213%" y="821" width="0.0177%" height="15" fill="rgb(209,67,49)" fg:x="7659" fg:w="18"/><text x="7.7713%" y="831.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="7.5213%" y="805" width="0.0177%" height="15" fill="rgb(213,87,29)" fg:x="7659" fg:w="18"/><text x="7.7713%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="7.5213%" y="789" width="0.0177%" height="15" fill="rgb(205,151,52)" fg:x="7659" fg:w="18"/><text x="7.7713%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.02%)</title><rect x="7.5223%" y="773" width="0.0167%" height="15" fill="rgb(253,215,39)" fg:x="7660" fg:w="17"/><text x="7.7723%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.02%)</title><rect x="7.5223%" y="757" width="0.0167%" height="15" fill="rgb(221,220,41)" fg:x="7660" fg:w="17"/><text x="7.7723%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (14 samples, 0.01%)</title><rect x="7.5390%" y="837" width="0.0137%" height="15" fill="rgb(218,133,21)" fg:x="7677" fg:w="14"/><text x="7.7890%" y="847.50"></text></g><g><title>async_executor::Sleepers::insert (38 samples, 0.04%)</title><rect x="7.5203%" y="853" width="0.0373%" height="15" fill="rgb(221,193,43)" fg:x="7658" fg:w="38"/><text x="7.7703%" y="863.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (15 samples, 0.01%)</title><rect x="7.5841%" y="837" width="0.0147%" height="15" fill="rgb(240,128,52)" fg:x="7723" fg:w="15"/><text x="7.8341%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (15 samples, 0.01%)</title><rect x="7.5841%" y="821" width="0.0147%" height="15" fill="rgb(253,114,12)" fg:x="7723" fg:w="15"/><text x="7.8341%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (15 samples, 0.01%)</title><rect x="7.5841%" y="805" width="0.0147%" height="15" fill="rgb(215,223,47)" fg:x="7723" fg:w="15"/><text x="7.8341%" y="815.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="7.6067%" y="837" width="0.0187%" height="15" fill="rgb(248,225,23)" fg:x="7746" fg:w="19"/><text x="7.8567%" y="847.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (19 samples, 0.02%)</title><rect x="7.6067%" y="821" width="0.0187%" height="15" fill="rgb(250,108,0)" fg:x="7746" fg:w="19"/><text x="7.8567%" y="831.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="7.6077%" y="805" width="0.0177%" height="15" fill="rgb(228,208,7)" fg:x="7747" fg:w="18"/><text x="7.8577%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (18 samples, 0.02%)</title><rect x="7.6077%" y="789" width="0.0177%" height="15" fill="rgb(244,45,10)" fg:x="7747" fg:w="18"/><text x="7.8577%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (18 samples, 0.02%)</title><rect x="7.6077%" y="773" width="0.0177%" height="15" fill="rgb(207,125,25)" fg:x="7747" fg:w="18"/><text x="7.8577%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (18 samples, 0.02%)</title><rect x="7.6077%" y="757" width="0.0177%" height="15" fill="rgb(210,195,18)" fg:x="7747" fg:w="18"/><text x="7.8577%" y="767.50"></text></g><g><title>async_executor::Sleepers::update (83 samples, 0.08%)</title><rect x="7.5586%" y="853" width="0.0815%" height="15" fill="rgb(249,80,12)" fg:x="7697" fg:w="83"/><text x="7.8086%" y="863.50"></text></g><g><title>core::task::wake::Waker::will_wake (13 samples, 0.01%)</title><rect x="7.6273%" y="837" width="0.0128%" height="15" fill="rgb(221,65,9)" fg:x="7767" fg:w="13"/><text x="7.8773%" y="847.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="7.6273%" y="821" width="0.0128%" height="15" fill="rgb(235,49,36)" fg:x="7767" fg:w="13"/><text x="7.8773%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (60 samples, 0.06%)</title><rect x="7.6401%" y="853" width="0.0589%" height="15" fill="rgb(225,32,20)" fg:x="7780" fg:w="60"/><text x="7.8901%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (60 samples, 0.06%)</title><rect x="7.6401%" y="837" width="0.0589%" height="15" fill="rgb(215,141,46)" fg:x="7780" fg:w="60"/><text x="7.8901%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (52 samples, 0.05%)</title><rect x="7.6480%" y="821" width="0.0511%" height="15" fill="rgb(250,160,47)" fg:x="7788" fg:w="52"/><text x="7.8980%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (48 samples, 0.05%)</title><rect x="7.6519%" y="805" width="0.0471%" height="15" fill="rgb(216,222,40)" fg:x="7792" fg:w="48"/><text x="7.9019%" y="815.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (44 samples, 0.04%)</title><rect x="7.6558%" y="789" width="0.0432%" height="15" fill="rgb(234,217,39)" fg:x="7796" fg:w="44"/><text x="7.9058%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (26 samples, 0.03%)</title><rect x="7.6990%" y="853" width="0.0255%" height="15" fill="rgb(207,178,40)" fg:x="7840" fg:w="26"/><text x="7.9490%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_swap (26 samples, 0.03%)</title><rect x="7.6990%" y="837" width="0.0255%" height="15" fill="rgb(221,136,13)" fg:x="7840" fg:w="26"/><text x="7.9490%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (26 samples, 0.03%)</title><rect x="7.7246%" y="853" width="0.0255%" height="15" fill="rgb(249,199,10)" fg:x="7866" fg:w="26"/><text x="7.9746%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_store (26 samples, 0.03%)</title><rect x="7.7246%" y="837" width="0.0255%" height="15" fill="rgb(249,222,13)" fg:x="7866" fg:w="26"/><text x="7.9746%" y="847.50"></text></g><g><title>async_executor::Ticker::sleep (336 samples, 0.33%)</title><rect x="7.5164%" y="869" width="0.3300%" height="15" fill="rgb(244,185,38)" fg:x="7654" fg:w="336"/><text x="7.7664%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (98 samples, 0.10%)</title><rect x="7.7501%" y="853" width="0.0962%" height="15" fill="rgb(236,202,9)" fg:x="7892" fg:w="98"/><text x="8.0001%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (89 samples, 0.09%)</title><rect x="7.7589%" y="837" width="0.0874%" height="15" fill="rgb(250,229,37)" fg:x="7901" fg:w="89"/><text x="8.0089%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (85 samples, 0.08%)</title><rect x="7.7629%" y="821" width="0.0835%" height="15" fill="rgb(206,174,23)" fg:x="7905" fg:w="85"/><text x="8.0129%" y="831.50"></text></g><g><title>__GI___pthread_mutex_lock (85 samples, 0.08%)</title><rect x="7.7629%" y="805" width="0.0835%" height="15" fill="rgb(211,33,43)" fg:x="7905" fg:w="85"/><text x="8.0129%" y="815.50"></text></g><g><title>async_executor::Sleepers::remove (33 samples, 0.03%)</title><rect x="7.8562%" y="853" width="0.0324%" height="15" fill="rgb(245,58,50)" fg:x="8000" fg:w="33"/><text x="8.1062%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (19 samples, 0.02%)</title><rect x="7.8886%" y="853" width="0.0187%" height="15" fill="rgb(244,68,36)" fg:x="8033" fg:w="19"/><text x="8.1386%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="7.8886%" y="837" width="0.0187%" height="15" fill="rgb(232,229,15)" fg:x="8033" fg:w="19"/><text x="8.1386%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (17 samples, 0.02%)</title><rect x="7.8905%" y="821" width="0.0167%" height="15" fill="rgb(254,30,23)" fg:x="8035" fg:w="17"/><text x="8.1405%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (17 samples, 0.02%)</title><rect x="7.8905%" y="805" width="0.0167%" height="15" fill="rgb(235,160,14)" fg:x="8035" fg:w="17"/><text x="8.1405%" y="815.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (16 samples, 0.02%)</title><rect x="7.8915%" y="789" width="0.0157%" height="15" fill="rgb(212,155,44)" fg:x="8036" fg:w="16"/><text x="8.1415%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (24 samples, 0.02%)</title><rect x="7.9072%" y="853" width="0.0236%" height="15" fill="rgb(226,2,50)" fg:x="8052" fg:w="24"/><text x="8.1572%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_swap (24 samples, 0.02%)</title><rect x="7.9072%" y="837" width="0.0236%" height="15" fill="rgb(234,177,6)" fg:x="8052" fg:w="24"/><text x="8.1572%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (68 samples, 0.07%)</title><rect x="7.9308%" y="853" width="0.0668%" height="15" fill="rgb(217,24,9)" fg:x="8076" fg:w="68"/><text x="8.1808%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_swap (68 samples, 0.07%)</title><rect x="7.9308%" y="837" width="0.0668%" height="15" fill="rgb(220,13,46)" fg:x="8076" fg:w="68"/><text x="8.1808%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,622 samples, 2.57%)</title><rect x="5.4512%" y="933" width="2.5749%" height="15" fill="rgb(239,221,27)" fg:x="5551" fg:w="2622"/><text x="5.7012%" y="943.50">&lt;c..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (2,614 samples, 2.57%)</title><rect x="5.4590%" y="917" width="2.5670%" height="15" fill="rgb(222,198,25)" fg:x="5559" fg:w="2614"/><text x="5.7090%" y="927.50">as..</text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (2,599 samples, 2.55%)</title><rect x="5.4738%" y="901" width="2.5523%" height="15" fill="rgb(211,99,13)" fg:x="5574" fg:w="2599"/><text x="5.7238%" y="911.50">&lt;f..</text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (2,590 samples, 2.54%)</title><rect x="5.4826%" y="885" width="2.5434%" height="15" fill="rgb(232,111,31)" fg:x="5583" fg:w="2590"/><text x="5.7326%" y="895.50">as..</text></g><g><title>async_executor::Ticker::wake (183 samples, 0.18%)</title><rect x="7.8463%" y="869" width="0.1797%" height="15" fill="rgb(245,82,37)" fg:x="7990" fg:w="183"/><text x="8.0963%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (29 samples, 0.03%)</title><rect x="7.9976%" y="853" width="0.0285%" height="15" fill="rgb(227,149,46)" fg:x="8144" fg:w="29"/><text x="8.2476%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (28 samples, 0.03%)</title><rect x="7.9985%" y="837" width="0.0275%" height="15" fill="rgb(218,36,50)" fg:x="8145" fg:w="28"/><text x="8.2485%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (27 samples, 0.03%)</title><rect x="7.9995%" y="821" width="0.0265%" height="15" fill="rgb(226,80,48)" fg:x="8146" fg:w="27"/><text x="8.2495%" y="831.50"></text></g><g><title>__GI___pthread_mutex_lock (27 samples, 0.03%)</title><rect x="7.9995%" y="805" width="0.0265%" height="15" fill="rgb(238,224,15)" fg:x="8146" fg:w="27"/><text x="8.2495%" y="815.50"></text></g><g><title>async_executor::steal (17 samples, 0.02%)</title><rect x="8.0260%" y="933" width="0.0167%" height="15" fill="rgb(241,136,10)" fg:x="8173" fg:w="17"/><text x="8.2760%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,716 samples, 2.67%)</title><rect x="5.4168%" y="965" width="2.6672%" height="15" fill="rgb(208,32,45)" fg:x="5516" fg:w="2716"/><text x="5.6668%" y="975.50">&lt;c..</text></g><g><title>async_executor::Runner::runnable::{{closure}} (2,702 samples, 2.65%)</title><rect x="5.4306%" y="949" width="2.6534%" height="15" fill="rgb(207,135,9)" fg:x="5530" fg:w="2702"/><text x="5.6806%" y="959.50">as..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (42 samples, 0.04%)</title><rect x="8.0427%" y="933" width="0.0412%" height="15" fill="rgb(206,86,44)" fg:x="8190" fg:w="42"/><text x="8.2927%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_add (42 samples, 0.04%)</title><rect x="8.0427%" y="917" width="0.0412%" height="15" fill="rgb(245,177,15)" fg:x="8190" fg:w="42"/><text x="8.2927%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (28 samples, 0.03%)</title><rect x="8.3442%" y="853" width="0.0275%" height="15" fill="rgb(206,64,50)" fg:x="8497" fg:w="28"/><text x="8.5942%" y="863.50"></text></g><g><title>concurrent_queue::full_fence (15 samples, 0.01%)</title><rect x="8.3992%" y="805" width="0.0147%" height="15" fill="rgb(234,36,40)" fg:x="8553" fg:w="15"/><text x="8.6492%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (14 samples, 0.01%)</title><rect x="8.4002%" y="789" width="0.0137%" height="15" fill="rgb(213,64,8)" fg:x="8554" fg:w="14"/><text x="8.6502%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (14 samples, 0.01%)</title><rect x="8.4002%" y="773" width="0.0137%" height="15" fill="rgb(210,75,36)" fg:x="8554" fg:w="14"/><text x="8.6502%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="8.4002%" y="757" width="0.0137%" height="15" fill="rgb(229,88,21)" fg:x="8554" fg:w="14"/><text x="8.6502%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (75 samples, 0.07%)</title><rect x="8.3796%" y="837" width="0.0737%" height="15" fill="rgb(252,204,47)" fg:x="8533" fg:w="75"/><text x="8.6296%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (68 samples, 0.07%)</title><rect x="8.3864%" y="821" width="0.0668%" height="15" fill="rgb(208,77,27)" fg:x="8540" fg:w="68"/><text x="8.6364%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (13 samples, 0.01%)</title><rect x="8.4405%" y="805" width="0.0128%" height="15" fill="rgb(221,76,26)" fg:x="8595" fg:w="13"/><text x="8.6905%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="8.4405%" y="789" width="0.0128%" height="15" fill="rgb(225,139,18)" fg:x="8595" fg:w="13"/><text x="8.6905%" y="799.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (90 samples, 0.09%)</title><rect x="8.3717%" y="853" width="0.0884%" height="15" fill="rgb(230,137,11)" fg:x="8525" fg:w="90"/><text x="8.6217%" y="863.50"></text></g><g><title>event_listener::Event::listen (25 samples, 0.02%)</title><rect x="8.4621%" y="853" width="0.0246%" height="15" fill="rgb(212,28,1)" fg:x="8617" fg:w="25"/><text x="8.7121%" y="863.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (172 samples, 0.17%)</title><rect x="8.3344%" y="869" width="0.1689%" height="15" fill="rgb(248,164,17)" fg:x="8487" fg:w="172"/><text x="8.5844%" y="879.50"></text></g><g><title>event_listener::Event::notify (17 samples, 0.02%)</title><rect x="8.4866%" y="853" width="0.0167%" height="15" fill="rgb(222,171,42)" fg:x="8642" fg:w="17"/><text x="8.7366%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (13 samples, 0.01%)</title><rect x="8.5544%" y="773" width="0.0128%" height="15" fill="rgb(243,84,45)" fg:x="8711" fg:w="13"/><text x="8.8044%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (13 samples, 0.01%)</title><rect x="8.5544%" y="757" width="0.0128%" height="15" fill="rgb(252,49,23)" fg:x="8711" fg:w="13"/><text x="8.8044%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (13 samples, 0.01%)</title><rect x="8.5544%" y="741" width="0.0128%" height="15" fill="rgb(215,19,7)" fg:x="8711" fg:w="13"/><text x="8.8044%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (28 samples, 0.03%)</title><rect x="8.5485%" y="805" width="0.0275%" height="15" fill="rgb(238,81,41)" fg:x="8705" fg:w="28"/><text x="8.7985%" y="815.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::push (22 samples, 0.02%)</title><rect x="8.5544%" y="789" width="0.0216%" height="15" fill="rgb(210,199,37)" fg:x="8711" fg:w="22"/><text x="8.8044%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (22 samples, 0.02%)</title><rect x="8.5770%" y="789" width="0.0216%" height="15" fill="rgb(244,192,49)" fg:x="8734" fg:w="22"/><text x="8.8270%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (22 samples, 0.02%)</title><rect x="8.5770%" y="773" width="0.0216%" height="15" fill="rgb(226,211,11)" fg:x="8734" fg:w="22"/><text x="8.8270%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="8.5770%" y="757" width="0.0216%" height="15" fill="rgb(236,162,54)" fg:x="8734" fg:w="22"/><text x="8.8270%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (20 samples, 0.02%)</title><rect x="8.5789%" y="741" width="0.0196%" height="15" fill="rgb(220,229,9)" fg:x="8736" fg:w="20"/><text x="8.8289%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="8.5799%" y="725" width="0.0187%" height="15" fill="rgb(250,87,22)" fg:x="8737" fg:w="19"/><text x="8.8299%" y="735.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (17 samples, 0.02%)</title><rect x="8.5819%" y="709" width="0.0167%" height="15" fill="rgb(239,43,17)" fg:x="8739" fg:w="17"/><text x="8.8319%" y="719.50"></text></g><g><title>event_listener::Inner::lock (23 samples, 0.02%)</title><rect x="8.6035%" y="789" width="0.0226%" height="15" fill="rgb(231,177,25)" fg:x="8761" fg:w="23"/><text x="8.8535%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="8.6035%" y="773" width="0.0226%" height="15" fill="rgb(219,179,1)" fg:x="8761" fg:w="23"/><text x="8.8535%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (23 samples, 0.02%)</title><rect x="8.6035%" y="757" width="0.0226%" height="15" fill="rgb(238,219,53)" fg:x="8761" fg:w="23"/><text x="8.8535%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (23 samples, 0.02%)</title><rect x="8.6035%" y="741" width="0.0226%" height="15" fill="rgb(232,167,36)" fg:x="8761" fg:w="23"/><text x="8.8535%" y="751.50"></text></g><g><title>__GI___pthread_mutex_lock (23 samples, 0.02%)</title><rect x="8.6035%" y="725" width="0.0226%" height="15" fill="rgb(244,19,51)" fg:x="8761" fg:w="23"/><text x="8.8535%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (14 samples, 0.01%)</title><rect x="8.6624%" y="677" width="0.0137%" height="15" fill="rgb(224,6,22)" fg:x="8821" fg:w="14"/><text x="8.9124%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.01%)</title><rect x="8.6624%" y="661" width="0.0137%" height="15" fill="rgb(224,145,5)" fg:x="8821" fg:w="14"/><text x="8.9124%" y="671.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (31 samples, 0.03%)</title><rect x="8.6526%" y="725" width="0.0304%" height="15" fill="rgb(234,130,49)" fg:x="8811" fg:w="31"/><text x="8.9026%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (31 samples, 0.03%)</title><rect x="8.6526%" y="709" width="0.0304%" height="15" fill="rgb(254,6,2)" fg:x="8811" fg:w="31"/><text x="8.9026%" y="719.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (26 samples, 0.03%)</title><rect x="8.6575%" y="693" width="0.0255%" height="15" fill="rgb(208,96,46)" fg:x="8816" fg:w="26"/><text x="8.9075%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (14 samples, 0.01%)</title><rect x="8.6830%" y="725" width="0.0137%" height="15" fill="rgb(239,3,39)" fg:x="8842" fg:w="14"/><text x="8.9330%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (14 samples, 0.01%)</title><rect x="8.6830%" y="709" width="0.0137%" height="15" fill="rgb(233,210,1)" fg:x="8842" fg:w="14"/><text x="8.9330%" y="719.50"></text></g><g><title>event_listener::List::notify (82 samples, 0.08%)</title><rect x="8.6261%" y="789" width="0.0805%" height="15" fill="rgb(244,137,37)" fg:x="8784" fg:w="82"/><text x="8.8761%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (74 samples, 0.07%)</title><rect x="8.6339%" y="773" width="0.0727%" height="15" fill="rgb(240,136,2)" fg:x="8792" fg:w="74"/><text x="8.8839%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (74 samples, 0.07%)</title><rect x="8.6339%" y="757" width="0.0727%" height="15" fill="rgb(239,18,37)" fg:x="8792" fg:w="74"/><text x="8.8839%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (56 samples, 0.05%)</title><rect x="8.6516%" y="741" width="0.0550%" height="15" fill="rgb(218,185,22)" fg:x="8810" fg:w="56"/><text x="8.9016%" y="751.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (175 samples, 0.17%)</title><rect x="8.5455%" y="821" width="0.1719%" height="15" fill="rgb(225,218,4)" fg:x="8702" fg:w="175"/><text x="8.7955%" y="831.50"></text></g><g><title>event_listener::Event::notify (144 samples, 0.14%)</title><rect x="8.5760%" y="805" width="0.1414%" height="15" fill="rgb(230,182,32)" fg:x="8733" fg:w="144"/><text x="8.8260%" y="815.50"></text></g><g><title>event_listener::full_fence (11 samples, 0.01%)</title><rect x="8.7066%" y="789" width="0.0108%" height="15" fill="rgb(242,56,43)" fg:x="8866" fg:w="11"/><text x="8.9566%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (11 samples, 0.01%)</title><rect x="8.7066%" y="773" width="0.0108%" height="15" fill="rgb(233,99,24)" fg:x="8866" fg:w="11"/><text x="8.9566%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.01%)</title><rect x="8.7066%" y="757" width="0.0108%" height="15" fill="rgb(234,209,42)" fg:x="8866" fg:w="11"/><text x="8.9566%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="8.7066%" y="741" width="0.0108%" height="15" fill="rgb(227,7,12)" fg:x="8866" fg:w="11"/><text x="8.9566%" y="751.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (184 samples, 0.18%)</title><rect x="8.5387%" y="837" width="0.1807%" height="15" fill="rgb(245,203,43)" fg:x="8695" fg:w="184"/><text x="8.7887%" y="847.50"></text></g><g><title>&lt;fixedbitset::Ones as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="8.7252%" y="837" width="0.0147%" height="15" fill="rgb(238,205,33)" fg:x="8885" fg:w="15"/><text x="8.9752%" y="847.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (14 samples, 0.01%)</title><rect x="8.7400%" y="837" width="0.0137%" height="15" fill="rgb(231,56,7)" fg:x="8900" fg:w="14"/><text x="8.9900%" y="847.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (14 samples, 0.01%)</title><rect x="8.7400%" y="821" width="0.0137%" height="15" fill="rgb(244,186,29)" fg:x="8900" fg:w="14"/><text x="8.9900%" y="831.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (80 samples, 0.08%)</title><rect x="8.7537%" y="837" width="0.0786%" height="15" fill="rgb(234,111,31)" fg:x="8914" fg:w="80"/><text x="9.0037%" y="847.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (80 samples, 0.08%)</title><rect x="8.7537%" y="821" width="0.0786%" height="15" fill="rgb(241,149,10)" fg:x="8914" fg:w="80"/><text x="9.0037%" y="831.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (67 samples, 0.07%)</title><rect x="8.7665%" y="805" width="0.0658%" height="15" fill="rgb(249,206,44)" fg:x="8927" fg:w="67"/><text x="9.0165%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (61 samples, 0.06%)</title><rect x="8.7724%" y="789" width="0.0599%" height="15" fill="rgb(251,153,30)" fg:x="8933" fg:w="61"/><text x="9.0224%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (61 samples, 0.06%)</title><rect x="8.7724%" y="773" width="0.0599%" height="15" fill="rgb(239,152,38)" fg:x="8933" fg:w="61"/><text x="9.0224%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (39 samples, 0.04%)</title><rect x="8.7940%" y="757" width="0.0383%" height="15" fill="rgb(249,139,47)" fg:x="8955" fg:w="39"/><text x="9.0440%" y="767.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint::{{closure}} (39 samples, 0.04%)</title><rect x="8.7940%" y="741" width="0.0383%" height="15" fill="rgb(244,64,35)" fg:x="8955" fg:w="39"/><text x="9.0440%" y="751.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (349 samples, 0.34%)</title><rect x="8.5033%" y="869" width="0.3427%" height="15" fill="rgb(216,46,15)" fg:x="8659" fg:w="349"/><text x="8.7533%" y="879.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (346 samples, 0.34%)</title><rect x="8.5063%" y="853" width="0.3398%" height="15" fill="rgb(250,74,19)" fg:x="8662" fg:w="346"/><text x="8.7563%" y="863.50"></text></g><g><title>concurrent_queue::full_fence (21 samples, 0.02%)</title><rect x="8.8637%" y="821" width="0.0206%" height="15" fill="rgb(249,42,33)" fg:x="9026" fg:w="21"/><text x="9.1137%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (19 samples, 0.02%)</title><rect x="8.8657%" y="805" width="0.0187%" height="15" fill="rgb(242,149,17)" fg:x="9028" fg:w="19"/><text x="9.1157%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (19 samples, 0.02%)</title><rect x="8.8657%" y="789" width="0.0187%" height="15" fill="rgb(244,29,21)" fg:x="9028" fg:w="19"/><text x="9.1157%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="8.8657%" y="773" width="0.0187%" height="15" fill="rgb(220,130,37)" fg:x="9028" fg:w="19"/><text x="9.1157%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (57 samples, 0.06%)</title><rect x="8.8509%" y="853" width="0.0560%" height="15" fill="rgb(211,67,2)" fg:x="9013" fg:w="57"/><text x="9.1009%" y="863.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (55 samples, 0.05%)</title><rect x="8.8529%" y="837" width="0.0540%" height="15" fill="rgb(235,68,52)" fg:x="9015" fg:w="55"/><text x="9.1029%" y="847.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (74 samples, 0.07%)</title><rect x="8.8460%" y="869" width="0.0727%" height="15" fill="rgb(246,142,3)" fg:x="9008" fg:w="74"/><text x="9.0960%" y="879.50"></text></g><g><title>event_listener::Event::notify (12 samples, 0.01%)</title><rect x="8.9069%" y="853" width="0.0118%" height="15" fill="rgb(241,25,7)" fg:x="9070" fg:w="12"/><text x="9.1569%" y="863.50"></text></g><g><title>event_listener::full_fence (11 samples, 0.01%)</title><rect x="8.9079%" y="837" width="0.0108%" height="15" fill="rgb(242,119,39)" fg:x="9071" fg:w="11"/><text x="9.1579%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.01%)</title><rect x="8.9305%" y="821" width="0.0118%" height="15" fill="rgb(241,98,45)" fg:x="9094" fg:w="12"/><text x="9.1805%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="8.9315%" y="805" width="0.0108%" height="15" fill="rgb(254,28,30)" fg:x="9095" fg:w="11"/><text x="9.1815%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (16 samples, 0.02%)</title><rect x="8.9275%" y="853" width="0.0157%" height="15" fill="rgb(241,142,54)" fg:x="9091" fg:w="16"/><text x="9.1775%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.01%)</title><rect x="8.9305%" y="837" width="0.0128%" height="15" fill="rgb(222,85,15)" fg:x="9094" fg:w="13"/><text x="9.1805%" y="847.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (32 samples, 0.03%)</title><rect x="8.9187%" y="869" width="0.0314%" height="15" fill="rgb(210,85,47)" fg:x="9082" fg:w="32"/><text x="9.1687%" y="879.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::clear (43 samples, 0.04%)</title><rect x="8.9599%" y="853" width="0.0422%" height="15" fill="rgb(224,206,25)" fg:x="9124" fg:w="43"/><text x="9.2099%" y="863.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (43 samples, 0.04%)</title><rect x="8.9599%" y="837" width="0.0422%" height="15" fill="rgb(243,201,19)" fg:x="9124" fg:w="43"/><text x="9.2099%" y="847.50"></text></g><g><title>__memset_avx2_unaligned_erms (42 samples, 0.04%)</title><rect x="8.9609%" y="821" width="0.0412%" height="15" fill="rgb(236,59,4)" fg:x="9125" fg:w="42"/><text x="9.2109%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (15 samples, 0.01%)</title><rect x="9.0405%" y="805" width="0.0147%" height="15" fill="rgb(254,179,45)" fg:x="9206" fg:w="15"/><text x="9.2905%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="9.0405%" y="821" width="0.0167%" height="15" fill="rgb(226,14,10)" fg:x="9206" fg:w="17"/><text x="9.2905%" y="831.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (57 samples, 0.06%)</title><rect x="9.0022%" y="853" width="0.0560%" height="15" fill="rgb(244,27,41)" fg:x="9167" fg:w="57"/><text x="9.2522%" y="863.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (54 samples, 0.05%)</title><rect x="9.0051%" y="837" width="0.0530%" height="15" fill="rgb(235,35,32)" fg:x="9170" fg:w="54"/><text x="9.2551%" y="847.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (116 samples, 0.11%)</title><rect x="8.9501%" y="869" width="0.1139%" height="15" fill="rgb(218,68,31)" fg:x="9114" fg:w="116"/><text x="9.2001%" y="879.50"></text></g><g><title>event_listener::Inner::lock (19 samples, 0.02%)</title><rect x="9.0837%" y="805" width="0.0187%" height="15" fill="rgb(207,120,37)" fg:x="9250" fg:w="19"/><text x="9.3337%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="9.0847%" y="789" width="0.0177%" height="15" fill="rgb(227,98,0)" fg:x="9251" fg:w="18"/><text x="9.3347%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (18 samples, 0.02%)</title><rect x="9.0847%" y="773" width="0.0177%" height="15" fill="rgb(207,7,3)" fg:x="9251" fg:w="18"/><text x="9.3347%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (18 samples, 0.02%)</title><rect x="9.0847%" y="757" width="0.0177%" height="15" fill="rgb(206,98,19)" fg:x="9251" fg:w="18"/><text x="9.3347%" y="767.50"></text></g><g><title>__GI___pthread_mutex_lock (18 samples, 0.02%)</title><rect x="9.0847%" y="741" width="0.0177%" height="15" fill="rgb(217,5,26)" fg:x="9251" fg:w="18"/><text x="9.3347%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (32 samples, 0.03%)</title><rect x="9.0729%" y="821" width="0.0314%" height="15" fill="rgb(235,190,38)" fg:x="9239" fg:w="32"/><text x="9.3229%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;usize&gt;&gt; (36 samples, 0.04%)</title><rect x="9.0709%" y="869" width="0.0354%" height="15" fill="rgb(247,86,24)" fg:x="9237" fg:w="36"/><text x="9.3209%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (36 samples, 0.04%)</title><rect x="9.0709%" y="853" width="0.0354%" height="15" fill="rgb(205,101,16)" fg:x="9237" fg:w="36"/><text x="9.3209%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (34 samples, 0.03%)</title><rect x="9.0729%" y="837" width="0.0334%" height="15" fill="rgb(246,168,33)" fg:x="9239" fg:w="34"/><text x="9.3229%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (27 samples, 0.03%)</title><rect x="9.1220%" y="853" width="0.0265%" height="15" fill="rgb(231,114,1)" fg:x="9289" fg:w="27"/><text x="9.3720%" y="863.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (27 samples, 0.03%)</title><rect x="9.1220%" y="837" width="0.0265%" height="15" fill="rgb(207,184,53)" fg:x="9289" fg:w="27"/><text x="9.3720%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (27 samples, 0.03%)</title><rect x="9.1220%" y="821" width="0.0265%" height="15" fill="rgb(224,95,51)" fg:x="9289" fg:w="27"/><text x="9.3720%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.03%)</title><rect x="9.1230%" y="805" width="0.0255%" height="15" fill="rgb(212,188,45)" fg:x="9290" fg:w="26"/><text x="9.3730%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (20 samples, 0.02%)</title><rect x="9.1289%" y="789" width="0.0196%" height="15" fill="rgb(223,154,38)" fg:x="9296" fg:w="20"/><text x="9.3789%" y="799.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones::{{closure}} (19 samples, 0.02%)</title><rect x="9.1298%" y="773" width="0.0187%" height="15" fill="rgb(251,22,52)" fg:x="9297" fg:w="19"/><text x="9.3798%" y="783.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (879 samples, 0.86%)</title><rect x="8.2873%" y="885" width="0.8632%" height="15" fill="rgb(229,209,22)" fg:x="8439" fg:w="879"/><text x="8.5373%" y="895.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones (43 samples, 0.04%)</title><rect x="9.1082%" y="869" width="0.0422%" height="15" fill="rgb(234,138,34)" fg:x="9275" fg:w="43"/><text x="9.3582%" y="879.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (13 samples, 0.01%)</title><rect x="9.2320%" y="837" width="0.0128%" height="15" fill="rgb(212,95,11)" fg:x="9401" fg:w="13"/><text x="9.4820%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (13 samples, 0.01%)</title><rect x="9.2320%" y="821" width="0.0128%" height="15" fill="rgb(240,179,47)" fg:x="9401" fg:w="13"/><text x="9.4820%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.01%)</title><rect x="9.2320%" y="805" width="0.0128%" height="15" fill="rgb(240,163,11)" fg:x="9401" fg:w="13"/><text x="9.4820%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.01%)</title><rect x="9.2320%" y="789" width="0.0128%" height="15" fill="rgb(236,37,12)" fg:x="9401" fg:w="13"/><text x="9.4820%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (22 samples, 0.02%)</title><rect x="9.2467%" y="837" width="0.0216%" height="15" fill="rgb(232,164,16)" fg:x="9416" fg:w="22"/><text x="9.4967%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (21 samples, 0.02%)</title><rect x="9.2477%" y="821" width="0.0206%" height="15" fill="rgb(244,205,15)" fg:x="9417" fg:w="21"/><text x="9.4977%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="9.2477%" y="805" width="0.0206%" height="15" fill="rgb(223,117,47)" fg:x="9417" fg:w="21"/><text x="9.4977%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (19 samples, 0.02%)</title><rect x="9.2496%" y="789" width="0.0187%" height="15" fill="rgb(244,107,35)" fg:x="9419" fg:w="19"/><text x="9.4996%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (19 samples, 0.02%)</title><rect x="9.2496%" y="773" width="0.0187%" height="15" fill="rgb(205,140,8)" fg:x="9419" fg:w="19"/><text x="9.4996%" y="783.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (17 samples, 0.02%)</title><rect x="9.2516%" y="757" width="0.0167%" height="15" fill="rgb(228,84,46)" fg:x="9421" fg:w="17"/><text x="9.5016%" y="767.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (61 samples, 0.06%)</title><rect x="9.2290%" y="853" width="0.0599%" height="15" fill="rgb(254,188,9)" fg:x="9398" fg:w="61"/><text x="9.4790%" y="863.50"></text></g><g><title>event_listener::Inner::lock (18 samples, 0.02%)</title><rect x="9.2712%" y="837" width="0.0177%" height="15" fill="rgb(206,112,54)" fg:x="9441" fg:w="18"/><text x="9.5212%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="9.2712%" y="821" width="0.0177%" height="15" fill="rgb(216,84,49)" fg:x="9441" fg:w="18"/><text x="9.5212%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="9.2722%" y="805" width="0.0167%" height="15" fill="rgb(214,194,35)" fg:x="9442" fg:w="17"/><text x="9.5222%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="9.2722%" y="789" width="0.0167%" height="15" fill="rgb(249,28,3)" fg:x="9442" fg:w="17"/><text x="9.5222%" y="799.50"></text></g><g><title>__GI___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="9.2722%" y="773" width="0.0167%" height="15" fill="rgb(222,56,52)" fg:x="9442" fg:w="17"/><text x="9.5222%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (110 samples, 0.11%)</title><rect x="9.3675%" y="805" width="0.1080%" height="15" fill="rgb(245,217,50)" fg:x="9539" fg:w="110"/><text x="9.6175%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (110 samples, 0.11%)</title><rect x="9.3675%" y="789" width="0.1080%" height="15" fill="rgb(213,201,24)" fg:x="9539" fg:w="110"/><text x="9.6175%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (110 samples, 0.11%)</title><rect x="9.3675%" y="773" width="0.1080%" height="15" fill="rgb(248,116,28)" fg:x="9539" fg:w="110"/><text x="9.6175%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (200 samples, 0.20%)</title><rect x="9.3066%" y="837" width="0.1964%" height="15" fill="rgb(219,72,43)" fg:x="9477" fg:w="200"/><text x="9.5566%" y="847.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (144 samples, 0.14%)</title><rect x="9.3616%" y="821" width="0.1414%" height="15" fill="rgb(209,138,14)" fg:x="9533" fg:w="144"/><text x="9.6116%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (28 samples, 0.03%)</title><rect x="9.4755%" y="805" width="0.0275%" height="15" fill="rgb(222,18,33)" fg:x="9649" fg:w="28"/><text x="9.7255%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_and (28 samples, 0.03%)</title><rect x="9.4755%" y="789" width="0.0275%" height="15" fill="rgb(213,199,7)" fg:x="9649" fg:w="28"/><text x="9.7255%" y="799.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (243 samples, 0.24%)</title><rect x="9.2928%" y="853" width="0.2386%" height="15" fill="rgb(250,110,10)" fg:x="9463" fg:w="243"/><text x="9.5428%" y="863.50"></text></g><g><title>event_listener::Event::notify (29 samples, 0.03%)</title><rect x="9.5030%" y="837" width="0.0285%" height="15" fill="rgb(248,123,6)" fg:x="9677" fg:w="29"/><text x="9.7530%" y="847.50"></text></g><g><title>event_listener::full_fence (27 samples, 0.03%)</title><rect x="9.5050%" y="821" width="0.0265%" height="15" fill="rgb(206,91,31)" fg:x="9679" fg:w="27"/><text x="9.7550%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (26 samples, 0.03%)</title><rect x="9.5059%" y="805" width="0.0255%" height="15" fill="rgb(211,154,13)" fg:x="9680" fg:w="26"/><text x="9.7559%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (26 samples, 0.03%)</title><rect x="9.5059%" y="789" width="0.0255%" height="15" fill="rgb(225,148,7)" fg:x="9680" fg:w="26"/><text x="9.7559%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (26 samples, 0.03%)</title><rect x="9.5059%" y="773" width="0.0255%" height="15" fill="rgb(220,160,43)" fg:x="9680" fg:w="26"/><text x="9.7559%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (67 samples, 0.07%)</title><rect x="9.5325%" y="837" width="0.0658%" height="15" fill="rgb(213,52,39)" fg:x="9707" fg:w="67"/><text x="9.7825%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (65 samples, 0.06%)</title><rect x="9.5344%" y="821" width="0.0638%" height="15" fill="rgb(243,137,7)" fg:x="9709" fg:w="65"/><text x="9.7844%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_add (65 samples, 0.06%)</title><rect x="9.5344%" y="805" width="0.0638%" height="15" fill="rgb(230,79,13)" fg:x="9709" fg:w="65"/><text x="9.7844%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (39 samples, 0.04%)</title><rect x="9.5983%" y="837" width="0.0383%" height="15" fill="rgb(247,105,23)" fg:x="9774" fg:w="39"/><text x="9.8483%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (37 samples, 0.04%)</title><rect x="9.6002%" y="821" width="0.0363%" height="15" fill="rgb(223,179,41)" fg:x="9776" fg:w="37"/><text x="9.8502%" y="831.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="9.6002%" y="805" width="0.0363%" height="15" fill="rgb(218,9,34)" fg:x="9776" fg:w="37"/><text x="9.8502%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (37 samples, 0.04%)</title><rect x="9.6002%" y="789" width="0.0363%" height="15" fill="rgb(222,106,8)" fg:x="9776" fg:w="37"/><text x="9.8502%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (37 samples, 0.04%)</title><rect x="9.6002%" y="773" width="0.0363%" height="15" fill="rgb(211,220,0)" fg:x="9776" fg:w="37"/><text x="9.8502%" y="783.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (37 samples, 0.04%)</title><rect x="9.6002%" y="757" width="0.0363%" height="15" fill="rgb(229,52,16)" fg:x="9776" fg:w="37"/><text x="9.8502%" y="767.50"></text></g><g><title>event_listener::Inner::lock (55 samples, 0.05%)</title><rect x="9.6366%" y="837" width="0.0540%" height="15" fill="rgb(212,155,18)" fg:x="9813" fg:w="55"/><text x="9.8866%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (55 samples, 0.05%)</title><rect x="9.6366%" y="821" width="0.0540%" height="15" fill="rgb(242,21,14)" fg:x="9813" fg:w="55"/><text x="9.8866%" y="831.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (53 samples, 0.05%)</title><rect x="9.6385%" y="805" width="0.0520%" height="15" fill="rgb(222,19,48)" fg:x="9815" fg:w="53"/><text x="9.8885%" y="815.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (50 samples, 0.05%)</title><rect x="9.6415%" y="789" width="0.0491%" height="15" fill="rgb(232,45,27)" fg:x="9818" fg:w="50"/><text x="9.8915%" y="799.50"></text></g><g><title>__GI___pthread_mutex_lock (50 samples, 0.05%)</title><rect x="9.6415%" y="773" width="0.0491%" height="15" fill="rgb(249,103,42)" fg:x="9818" fg:w="50"/><text x="9.8915%" y="783.50"></text></g><g><title>event_listener::List::insert (12 samples, 0.01%)</title><rect x="9.6906%" y="837" width="0.0118%" height="15" fill="rgb(246,81,33)" fg:x="9868" fg:w="12"/><text x="9.9406%" y="847.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (523 samples, 0.51%)</title><rect x="9.2025%" y="869" width="0.5136%" height="15" fill="rgb(252,33,42)" fg:x="9371" fg:w="523"/><text x="9.4525%" y="879.50"></text></g><g><title>event_listener::Event::listen (187 samples, 0.18%)</title><rect x="9.5325%" y="853" width="0.1836%" height="15" fill="rgb(209,212,41)" fg:x="9707" fg:w="187"/><text x="9.7825%" y="863.50"></text></g><g><title>event_listener::full_fence (14 samples, 0.01%)</title><rect x="9.7023%" y="837" width="0.0137%" height="15" fill="rgb(207,154,6)" fg:x="9880" fg:w="14"/><text x="9.9523%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (12 samples, 0.01%)</title><rect x="9.7043%" y="821" width="0.0118%" height="15" fill="rgb(223,64,47)" fg:x="9882" fg:w="12"/><text x="9.9543%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (12 samples, 0.01%)</title><rect x="9.7043%" y="805" width="0.0118%" height="15" fill="rgb(211,161,38)" fg:x="9882" fg:w="12"/><text x="9.9543%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (12 samples, 0.01%)</title><rect x="9.7043%" y="789" width="0.0118%" height="15" fill="rgb(219,138,40)" fg:x="9882" fg:w="12"/><text x="9.9543%" y="799.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="9.8064%" y="805" width="0.0177%" height="15" fill="rgb(241,228,46)" fg:x="9986" fg:w="18"/><text x="10.0564%" y="815.50"></text></g><g><title>alloc::alloc::exchange_malloc (11 samples, 0.01%)</title><rect x="9.8133%" y="789" width="0.0108%" height="15" fill="rgb(223,209,38)" fg:x="9993" fg:w="11"/><text x="10.0633%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="9.8133%" y="773" width="0.0108%" height="15" fill="rgb(236,164,45)" fg:x="9993" fg:w="11"/><text x="10.0633%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="9.8133%" y="757" width="0.0108%" height="15" fill="rgb(231,15,5)" fg:x="9993" fg:w="11"/><text x="10.0633%" y="767.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="9.8133%" y="741" width="0.0108%" height="15" fill="rgb(252,35,15)" fg:x="9993" fg:w="11"/><text x="10.0633%" y="751.50"></text></g><g><title>__rdl_alloc (11 samples, 0.01%)</title><rect x="9.8133%" y="725" width="0.0108%" height="15" fill="rgb(248,181,18)" fg:x="9993" fg:w="11"/><text x="10.0633%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (11 samples, 0.01%)</title><rect x="9.8133%" y="709" width="0.0108%" height="15" fill="rgb(233,39,42)" fg:x="9993" fg:w="11"/><text x="10.0633%" y="719.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.01%)</title><rect x="9.8133%" y="693" width="0.0108%" height="15" fill="rgb(238,110,33)" fg:x="9993" fg:w="11"/><text x="10.0633%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (102 samples, 0.10%)</title><rect x="9.8408%" y="805" width="0.1002%" height="15" fill="rgb(233,195,10)" fg:x="10021" fg:w="102"/><text x="10.0908%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (102 samples, 0.10%)</title><rect x="9.8408%" y="789" width="0.1002%" height="15" fill="rgb(254,105,3)" fg:x="10021" fg:w="102"/><text x="10.0908%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (66 samples, 0.06%)</title><rect x="9.9410%" y="805" width="0.0648%" height="15" fill="rgb(221,225,9)" fg:x="10123" fg:w="66"/><text x="10.1910%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_or (66 samples, 0.06%)</title><rect x="9.9410%" y="789" width="0.0648%" height="15" fill="rgb(224,227,45)" fg:x="10123" fg:w="66"/><text x="10.1910%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (322 samples, 0.32%)</title><rect x="9.7348%" y="837" width="0.3162%" height="15" fill="rgb(229,198,43)" fg:x="9913" fg:w="322"/><text x="9.9848%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (261 samples, 0.26%)</title><rect x="9.7947%" y="821" width="0.2563%" height="15" fill="rgb(206,209,35)" fg:x="9974" fg:w="261"/><text x="10.0447%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (46 samples, 0.05%)</title><rect x="10.0058%" y="805" width="0.0452%" height="15" fill="rgb(245,195,53)" fg:x="10189" fg:w="46"/><text x="10.2558%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (46 samples, 0.05%)</title><rect x="10.0058%" y="789" width="0.0452%" height="15" fill="rgb(240,92,26)" fg:x="10189" fg:w="46"/><text x="10.2558%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (35 samples, 0.03%)</title><rect x="10.0510%" y="821" width="0.0344%" height="15" fill="rgb(207,40,23)" fg:x="10235" fg:w="35"/><text x="10.3010%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (35 samples, 0.03%)</title><rect x="10.0510%" y="805" width="0.0344%" height="15" fill="rgb(223,111,35)" fg:x="10235" fg:w="35"/><text x="10.3010%" y="815.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.03%)</title><rect x="10.0510%" y="789" width="0.0344%" height="15" fill="rgb(229,147,28)" fg:x="10235" fg:w="35"/><text x="10.3010%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (33 samples, 0.03%)</title><rect x="10.0529%" y="773" width="0.0324%" height="15" fill="rgb(211,29,28)" fg:x="10237" fg:w="33"/><text x="10.3029%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (32 samples, 0.03%)</title><rect x="10.0539%" y="757" width="0.0314%" height="15" fill="rgb(228,72,33)" fg:x="10238" fg:w="32"/><text x="10.3039%" y="767.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (30 samples, 0.03%)</title><rect x="10.0559%" y="741" width="0.0295%" height="15" fill="rgb(205,214,31)" fg:x="10240" fg:w="30"/><text x="10.3059%" y="751.50"></text></g><g><title>event_listener::Inner::lock (59 samples, 0.06%)</title><rect x="10.1030%" y="821" width="0.0579%" height="15" fill="rgb(224,111,15)" fg:x="10288" fg:w="59"/><text x="10.3530%" y="831.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (59 samples, 0.06%)</title><rect x="10.1030%" y="805" width="0.0579%" height="15" fill="rgb(253,21,26)" fg:x="10288" fg:w="59"/><text x="10.3530%" y="815.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (54 samples, 0.05%)</title><rect x="10.1079%" y="789" width="0.0530%" height="15" fill="rgb(245,139,43)" fg:x="10293" fg:w="54"/><text x="10.3579%" y="799.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="10.1079%" y="773" width="0.0530%" height="15" fill="rgb(252,170,7)" fg:x="10293" fg:w="54"/><text x="10.3579%" y="783.50"></text></g><g><title>__GI___pthread_mutex_lock (54 samples, 0.05%)</title><rect x="10.1079%" y="757" width="0.0530%" height="15" fill="rgb(231,118,14)" fg:x="10293" fg:w="54"/><text x="10.3579%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (15 samples, 0.01%)</title><rect x="10.1737%" y="757" width="0.0147%" height="15" fill="rgb(238,83,0)" fg:x="10360" fg:w="15"/><text x="10.4237%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (15 samples, 0.01%)</title><rect x="10.1737%" y="741" width="0.0147%" height="15" fill="rgb(221,39,39)" fg:x="10360" fg:w="15"/><text x="10.4237%" y="751.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (12 samples, 0.01%)</title><rect x="10.2012%" y="677" width="0.0118%" height="15" fill="rgb(222,119,46)" fg:x="10388" fg:w="12"/><text x="10.4512%" y="687.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (12 samples, 0.01%)</title><rect x="10.2012%" y="661" width="0.0118%" height="15" fill="rgb(222,165,49)" fg:x="10388" fg:w="12"/><text x="10.4512%" y="671.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (12 samples, 0.01%)</title><rect x="10.2012%" y="645" width="0.0118%" height="15" fill="rgb(219,113,52)" fg:x="10388" fg:w="12"/><text x="10.4512%" y="655.50"></text></g><g><title>__pthread_cond_signal (12 samples, 0.01%)</title><rect x="10.2012%" y="629" width="0.0118%" height="15" fill="rgb(214,7,15)" fg:x="10388" fg:w="12"/><text x="10.4512%" y="639.50"></text></g><g><title>core::task::wake::Waker::wake (33 samples, 0.03%)</title><rect x="10.1884%" y="757" width="0.0324%" height="15" fill="rgb(235,32,4)" fg:x="10375" fg:w="33"/><text x="10.4384%" y="767.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (33 samples, 0.03%)</title><rect x="10.1884%" y="741" width="0.0324%" height="15" fill="rgb(238,90,54)" fg:x="10375" fg:w="33"/><text x="10.4384%" y="751.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (30 samples, 0.03%)</title><rect x="10.1914%" y="725" width="0.0295%" height="15" fill="rgb(213,208,19)" fg:x="10378" fg:w="30"/><text x="10.4414%" y="735.50"></text></g><g><title>parking::Unparker::unpark (30 samples, 0.03%)</title><rect x="10.1914%" y="709" width="0.0295%" height="15" fill="rgb(233,156,4)" fg:x="10378" fg:w="30"/><text x="10.4414%" y="719.50"></text></g><g><title>parking::Inner::unpark (29 samples, 0.03%)</title><rect x="10.1924%" y="693" width="0.0285%" height="15" fill="rgb(207,194,5)" fg:x="10379" fg:w="29"/><text x="10.4424%" y="703.50"></text></g><g><title>async_executor::State::notify (62 samples, 0.06%)</title><rect x="10.1678%" y="773" width="0.0609%" height="15" fill="rgb(206,111,30)" fg:x="10354" fg:w="62"/><text x="10.4178%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (14 samples, 0.01%)</title><rect x="10.2287%" y="773" width="0.0137%" height="15" fill="rgb(243,70,54)" fg:x="10416" fg:w="14"/><text x="10.4787%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="10.2297%" y="757" width="0.0128%" height="15" fill="rgb(242,28,8)" fg:x="10417" fg:w="13"/><text x="10.4797%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="10.2297%" y="741" width="0.0128%" height="15" fill="rgb(219,106,18)" fg:x="10417" fg:w="13"/><text x="10.4797%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (35 samples, 0.03%)</title><rect x="10.2650%" y="709" width="0.0344%" height="15" fill="rgb(244,222,10)" fg:x="10453" fg:w="35"/><text x="10.5150%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (35 samples, 0.03%)</title><rect x="10.2650%" y="693" width="0.0344%" height="15" fill="rgb(236,179,52)" fg:x="10453" fg:w="35"/><text x="10.5150%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (19 samples, 0.02%)</title><rect x="10.3004%" y="709" width="0.0187%" height="15" fill="rgb(213,23,39)" fg:x="10489" fg:w="19"/><text x="10.5504%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_or (19 samples, 0.02%)</title><rect x="10.3004%" y="693" width="0.0187%" height="15" fill="rgb(238,48,10)" fg:x="10489" fg:w="19"/><text x="10.5504%" y="703.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (77 samples, 0.08%)</title><rect x="10.2464%" y="757" width="0.0756%" height="15" fill="rgb(251,196,23)" fg:x="10434" fg:w="77"/><text x="10.4964%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (77 samples, 0.08%)</title><rect x="10.2464%" y="741" width="0.0756%" height="15" fill="rgb(250,152,24)" fg:x="10434" fg:w="77"/><text x="10.4964%" y="751.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (71 samples, 0.07%)</title><rect x="10.2523%" y="725" width="0.0697%" height="15" fill="rgb(209,150,17)" fg:x="10440" fg:w="71"/><text x="10.5023%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (30 samples, 0.03%)</title><rect x="10.3220%" y="757" width="0.0295%" height="15" fill="rgb(234,202,34)" fg:x="10511" fg:w="30"/><text x="10.5720%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.03%)</title><rect x="10.3220%" y="741" width="0.0295%" height="15" fill="rgb(253,148,53)" fg:x="10511" fg:w="30"/><text x="10.5720%" y="751.50"></text></g><g><title>event_listener::List::notify (213 samples, 0.21%)</title><rect x="10.1610%" y="821" width="0.2092%" height="15" fill="rgb(218,129,16)" fg:x="10347" fg:w="213"/><text x="10.4110%" y="831.50"></text></g><g><title>core::task::wake::Waker::wake (208 samples, 0.20%)</title><rect x="10.1659%" y="805" width="0.2043%" height="15" fill="rgb(216,85,19)" fg:x="10352" fg:w="208"/><text x="10.4159%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (206 samples, 0.20%)</title><rect x="10.1678%" y="789" width="0.2023%" height="15" fill="rgb(235,228,7)" fg:x="10354" fg:w="206"/><text x="10.4178%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (130 samples, 0.13%)</title><rect x="10.2425%" y="773" width="0.1277%" height="15" fill="rgb(245,175,0)" fg:x="10430" fg:w="130"/><text x="10.4925%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.02%)</title><rect x="10.3515%" y="757" width="0.0187%" height="15" fill="rgb(208,168,36)" fg:x="10541" fg:w="19"/><text x="10.6015%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.02%)</title><rect x="10.3515%" y="741" width="0.0187%" height="15" fill="rgb(246,171,24)" fg:x="10541" fg:w="19"/><text x="10.6015%" y="751.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (726 samples, 0.71%)</title><rect x="9.7269%" y="853" width="0.7129%" height="15" fill="rgb(215,142,24)" fg:x="9905" fg:w="726"/><text x="9.9769%" y="863.50"></text></g><g><title>event_listener::Event::notify (396 samples, 0.39%)</title><rect x="10.0510%" y="837" width="0.3889%" height="15" fill="rgb(250,187,7)" fg:x="10235" fg:w="396"/><text x="10.3010%" y="847.50"></text></g><g><title>event_listener::full_fence (71 samples, 0.07%)</title><rect x="10.3701%" y="821" width="0.0697%" height="15" fill="rgb(228,66,33)" fg:x="10560" fg:w="71"/><text x="10.6201%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (65 samples, 0.06%)</title><rect x="10.3760%" y="805" width="0.0638%" height="15" fill="rgb(234,215,21)" fg:x="10566" fg:w="65"/><text x="10.6260%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (65 samples, 0.06%)</title><rect x="10.3760%" y="789" width="0.0638%" height="15" fill="rgb(222,191,20)" fg:x="10566" fg:w="65"/><text x="10.6260%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (65 samples, 0.06%)</title><rect x="10.3760%" y="773" width="0.0638%" height="15" fill="rgb(245,79,54)" fg:x="10566" fg:w="65"/><text x="10.6260%" y="783.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (775 samples, 0.76%)</title><rect x="9.7161%" y="869" width="0.7611%" height="15" fill="rgb(240,10,37)" fg:x="9894" fg:w="775"/><text x="9.9661%" y="879.50"></text></g><g><title>event_listener::Event::notify (36 samples, 0.04%)</title><rect x="10.4418%" y="853" width="0.0354%" height="15" fill="rgb(214,192,32)" fg:x="10633" fg:w="36"/><text x="10.6918%" y="863.50"></text></g><g><title>event_listener::full_fence (33 samples, 0.03%)</title><rect x="10.4448%" y="837" width="0.0324%" height="15" fill="rgb(209,36,54)" fg:x="10636" fg:w="33"/><text x="10.6948%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (33 samples, 0.03%)</title><rect x="10.4448%" y="821" width="0.0324%" height="15" fill="rgb(220,10,11)" fg:x="10636" fg:w="33"/><text x="10.6948%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (33 samples, 0.03%)</title><rect x="10.4448%" y="805" width="0.0324%" height="15" fill="rgb(221,106,17)" fg:x="10636" fg:w="33"/><text x="10.6948%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (33 samples, 0.03%)</title><rect x="10.4448%" y="789" width="0.0324%" height="15" fill="rgb(251,142,44)" fg:x="10636" fg:w="33"/><text x="10.6948%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="10.5194%" y="741" width="0.0108%" height="15" fill="rgb(238,13,15)" fg:x="10712" fg:w="11"/><text x="10.7694%" y="751.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (11 samples, 0.01%)</title><rect x="10.5194%" y="725" width="0.0108%" height="15" fill="rgb(208,107,27)" fg:x="10712" fg:w="11"/><text x="10.7694%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.01%)</title><rect x="10.5194%" y="709" width="0.0108%" height="15" fill="rgb(205,136,37)" fg:x="10712" fg:w="11"/><text x="10.7694%" y="719.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (21 samples, 0.02%)</title><rect x="10.5174%" y="773" width="0.0206%" height="15" fill="rgb(250,205,27)" fg:x="10710" fg:w="21"/><text x="10.7674%" y="783.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (19 samples, 0.02%)</title><rect x="10.5194%" y="757" width="0.0187%" height="15" fill="rgb(210,80,43)" fg:x="10712" fg:w="19"/><text x="10.7694%" y="767.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (68 samples, 0.07%)</title><rect x="10.5125%" y="789" width="0.0668%" height="15" fill="rgb(247,160,36)" fg:x="10705" fg:w="68"/><text x="10.7625%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (42 samples, 0.04%)</title><rect x="10.5380%" y="773" width="0.0412%" height="15" fill="rgb(234,13,49)" fg:x="10731" fg:w="42"/><text x="10.7880%" y="783.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (42 samples, 0.04%)</title><rect x="10.5380%" y="757" width="0.0412%" height="15" fill="rgb(234,122,0)" fg:x="10731" fg:w="42"/><text x="10.7880%" y="767.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (42 samples, 0.04%)</title><rect x="10.5380%" y="741" width="0.0412%" height="15" fill="rgb(207,146,38)" fg:x="10731" fg:w="42"/><text x="10.7880%" y="751.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (42 samples, 0.04%)</title><rect x="10.5380%" y="725" width="0.0412%" height="15" fill="rgb(207,177,25)" fg:x="10731" fg:w="42"/><text x="10.7880%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (79 samples, 0.08%)</title><rect x="10.5056%" y="821" width="0.0776%" height="15" fill="rgb(211,178,42)" fg:x="10698" fg:w="79"/><text x="10.7556%" y="831.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (79 samples, 0.08%)</title><rect x="10.5056%" y="805" width="0.0776%" height="15" fill="rgb(230,69,54)" fg:x="10698" fg:w="79"/><text x="10.7556%" y="815.50"></text></g><g><title>&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (82 samples, 0.08%)</title><rect x="10.5056%" y="837" width="0.0805%" height="15" fill="rgb(214,135,41)" fg:x="10698" fg:w="82"/><text x="10.7556%" y="847.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update_system (89 samples, 0.09%)</title><rect x="10.5871%" y="805" width="0.0874%" height="15" fill="rgb(237,67,25)" fg:x="10781" fg:w="89"/><text x="10.8371%" y="815.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update (83 samples, 0.08%)</title><rect x="10.5930%" y="789" width="0.0815%" height="15" fill="rgb(222,189,50)" fg:x="10787" fg:w="83"/><text x="10.8430%" y="799.50"></text></g><g><title>bevy_asset::asset_server::free_unused_assets_system (15 samples, 0.01%)</title><rect x="10.6745%" y="805" width="0.0147%" height="15" fill="rgb(245,148,34)" fg:x="10870" fg:w="15"/><text x="10.9245%" y="815.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::free_unused_assets (15 samples, 0.01%)</title><rect x="10.6745%" y="789" width="0.0147%" height="15" fill="rgb(222,29,6)" fg:x="10870" fg:w="15"/><text x="10.9245%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.01%)</title><rect x="10.7079%" y="709" width="0.0137%" height="15" fill="rgb(221,189,43)" fg:x="10904" fg:w="14"/><text x="10.9579%" y="719.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (14 samples, 0.01%)</title><rect x="10.7079%" y="693" width="0.0137%" height="15" fill="rgb(207,36,27)" fg:x="10904" fg:w="14"/><text x="10.9579%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (14 samples, 0.01%)</title><rect x="10.7079%" y="677" width="0.0137%" height="15" fill="rgb(217,90,24)" fg:x="10904" fg:w="14"/><text x="10.9579%" y="687.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (20 samples, 0.02%)</title><rect x="10.7040%" y="773" width="0.0196%" height="15" fill="rgb(224,66,35)" fg:x="10900" fg:w="20"/><text x="10.9540%" y="783.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (16 samples, 0.02%)</title><rect x="10.7079%" y="757" width="0.0157%" height="15" fill="rgb(221,13,50)" fg:x="10904" fg:w="16"/><text x="10.9579%" y="767.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (16 samples, 0.02%)</title><rect x="10.7079%" y="741" width="0.0157%" height="15" fill="rgb(236,68,49)" fg:x="10904" fg:w="16"/><text x="10.9579%" y="751.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (16 samples, 0.02%)</title><rect x="10.7079%" y="725" width="0.0157%" height="15" fill="rgb(229,146,28)" fg:x="10904" fg:w="16"/><text x="10.9579%" y="735.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="10.6991%" y="789" width="0.0255%" height="15" fill="rgb(225,31,38)" fg:x="10895" fg:w="26"/><text x="10.9491%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; (14 samples, 0.01%)</title><rect x="10.9554%" y="709" width="0.0137%" height="15" fill="rgb(250,208,3)" fg:x="11156" fg:w="14"/><text x="11.2054%" y="719.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="10.9554%" y="693" width="0.0137%" height="15" fill="rgb(246,54,23)" fg:x="11156" fg:w="14"/><text x="11.2054%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::draw::RenderCommand]&gt; (520 samples, 0.51%)</title><rect x="10.7364%" y="741" width="0.5106%" height="15" fill="rgb(243,76,11)" fg:x="10933" fg:w="520"/><text x="10.9864%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::draw::RenderCommand&gt; (511 samples, 0.50%)</title><rect x="10.7453%" y="725" width="0.5018%" height="15" fill="rgb(245,21,50)" fg:x="10942" fg:w="511"/><text x="10.9953%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (283 samples, 0.28%)</title><rect x="10.9692%" y="709" width="0.2779%" height="15" fill="rgb(228,9,43)" fg:x="11170" fg:w="283"/><text x="11.2192%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (278 samples, 0.27%)</title><rect x="10.9741%" y="693" width="0.2730%" height="15" fill="rgb(208,100,47)" fg:x="11175" fg:w="278"/><text x="11.2241%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (278 samples, 0.27%)</title><rect x="10.9741%" y="677" width="0.2730%" height="15" fill="rgb(232,26,8)" fg:x="11175" fg:w="278"/><text x="11.2241%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (275 samples, 0.27%)</title><rect x="10.9770%" y="661" width="0.2701%" height="15" fill="rgb(216,166,38)" fg:x="11178" fg:w="275"/><text x="11.2270%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (275 samples, 0.27%)</title><rect x="10.9770%" y="645" width="0.2701%" height="15" fill="rgb(251,202,51)" fg:x="11178" fg:w="275"/><text x="11.2270%" y="655.50"></text></g><g><title>bevy_render::draw::clear_draw_system (562 samples, 0.55%)</title><rect x="10.6971%" y="805" width="0.5519%" height="15" fill="rgb(254,216,34)" fg:x="10893" fg:w="562"/><text x="10.9471%" y="815.50"></text></g><g><title>bevy_render::draw::Draw::clear_render_commands (532 samples, 0.52%)</title><rect x="10.7266%" y="789" width="0.5224%" height="15" fill="rgb(251,32,27)" fg:x="10923" fg:w="532"/><text x="10.9766%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (530 samples, 0.52%)</title><rect x="10.7286%" y="773" width="0.5205%" height="15" fill="rgb(208,127,28)" fg:x="10925" fg:w="530"/><text x="10.9786%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (530 samples, 0.52%)</title><rect x="10.7286%" y="757" width="0.5205%" height="15" fill="rgb(224,137,22)" fg:x="10925" fg:w="530"/><text x="10.9786%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (26 samples, 0.03%)</title><rect x="11.2638%" y="789" width="0.0255%" height="15" fill="rgb(254,70,32)" fg:x="11470" fg:w="26"/><text x="11.5138%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (20 samples, 0.02%)</title><rect x="11.3021%" y="709" width="0.0196%" height="15" fill="rgb(229,75,37)" fg:x="11509" fg:w="20"/><text x="11.5521%" y="719.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (20 samples, 0.02%)</title><rect x="11.3021%" y="693" width="0.0196%" height="15" fill="rgb(252,64,23)" fg:x="11509" fg:w="20"/><text x="11.5521%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (20 samples, 0.02%)</title><rect x="11.3021%" y="677" width="0.0196%" height="15" fill="rgb(232,162,48)" fg:x="11509" fg:w="20"/><text x="11.5521%" y="687.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (23 samples, 0.02%)</title><rect x="11.3021%" y="725" width="0.0226%" height="15" fill="rgb(246,160,12)" fg:x="11509" fg:w="23"/><text x="11.5521%" y="735.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="11.2893%" y="789" width="0.0363%" height="15" fill="rgb(247,166,0)" fg:x="11496" fg:w="37"/><text x="11.5393%" y="799.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (34 samples, 0.03%)</title><rect x="11.2922%" y="773" width="0.0334%" height="15" fill="rgb(249,219,21)" fg:x="11499" fg:w="34"/><text x="11.5422%" y="783.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (24 samples, 0.02%)</title><rect x="11.3021%" y="757" width="0.0236%" height="15" fill="rgb(205,209,3)" fg:x="11509" fg:w="24"/><text x="11.5521%" y="767.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (24 samples, 0.02%)</title><rect x="11.3021%" y="741" width="0.0236%" height="15" fill="rgb(243,44,1)" fg:x="11509" fg:w="24"/><text x="11.5521%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;,hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;::clear::{{closure}}&gt;&gt; (21 samples, 0.02%)</title><rect x="11.3433%" y="725" width="0.0206%" height="15" fill="rgb(206,159,16)" fg:x="11551" fg:w="21"/><text x="11.5933%" y="735.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="11.3433%" y="709" width="0.0206%" height="15" fill="rgb(244,77,30)" fg:x="11551" fg:w="21"/><text x="11.5933%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (21 samples, 0.02%)</title><rect x="11.3433%" y="693" width="0.0206%" height="15" fill="rgb(218,69,12)" fg:x="11551" fg:w="21"/><text x="11.5933%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (21 samples, 0.02%)</title><rect x="11.3433%" y="677" width="0.0206%" height="15" fill="rgb(212,87,7)" fg:x="11551" fg:w="21"/><text x="11.5933%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (21 samples, 0.02%)</title><rect x="11.3433%" y="661" width="0.0206%" height="15" fill="rgb(245,114,25)" fg:x="11551" fg:w="21"/><text x="11.5933%" y="671.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (370 samples, 0.36%)</title><rect x="11.2490%" y="805" width="0.3633%" height="15" fill="rgb(210,61,42)" fg:x="11455" fg:w="370"/><text x="11.4990%" y="815.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (278 samples, 0.27%)</title><rect x="11.3394%" y="789" width="0.2730%" height="15" fill="rgb(211,52,33)" fg:x="11547" fg:w="278"/><text x="11.5894%" y="799.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (278 samples, 0.27%)</title><rect x="11.3394%" y="773" width="0.2730%" height="15" fill="rgb(234,58,33)" fg:x="11547" fg:w="278"/><text x="11.5894%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (278 samples, 0.27%)</title><rect x="11.3394%" y="757" width="0.2730%" height="15" fill="rgb(220,115,36)" fg:x="11547" fg:w="278"/><text x="11.5894%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (276 samples, 0.27%)</title><rect x="11.3413%" y="741" width="0.2710%" height="15" fill="rgb(243,153,54)" fg:x="11549" fg:w="276"/><text x="11.5913%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (253 samples, 0.25%)</title><rect x="11.3639%" y="725" width="0.2485%" height="15" fill="rgb(251,47,18)" fg:x="11572" fg:w="253"/><text x="11.6139%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (15 samples, 0.01%)</title><rect x="11.6124%" y="805" width="0.0147%" height="15" fill="rgb(242,102,42)" fg:x="11825" fg:w="15"/><text x="11.8624%" y="815.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (12 samples, 0.01%)</title><rect x="11.6448%" y="757" width="0.0118%" height="15" fill="rgb(234,31,38)" fg:x="11858" fg:w="12"/><text x="11.8948%" y="767.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (11 samples, 0.01%)</title><rect x="11.6458%" y="741" width="0.0108%" height="15" fill="rgb(221,117,51)" fg:x="11859" fg:w="11"/><text x="11.8958%" y="751.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (37 samples, 0.04%)</title><rect x="11.6576%" y="725" width="0.0363%" height="15" fill="rgb(212,20,18)" fg:x="11871" fg:w="37"/><text x="11.9076%" y="735.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (44 samples, 0.04%)</title><rect x="11.6566%" y="741" width="0.0432%" height="15" fill="rgb(245,133,36)" fg:x="11870" fg:w="44"/><text x="11.9066%" y="751.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (44 samples, 0.04%)</title><rect x="11.7057%" y="725" width="0.0432%" height="15" fill="rgb(212,6,19)" fg:x="11920" fg:w="44"/><text x="11.9557%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.02%)</title><rect x="11.7538%" y="677" width="0.0206%" height="15" fill="rgb(218,1,36)" fg:x="11969" fg:w="21"/><text x="12.0038%" y="687.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (21 samples, 0.02%)</title><rect x="11.7538%" y="661" width="0.0206%" height="15" fill="rgb(246,84,54)" fg:x="11969" fg:w="21"/><text x="12.0038%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (21 samples, 0.02%)</title><rect x="11.7538%" y="645" width="0.0206%" height="15" fill="rgb(242,110,6)" fg:x="11969" fg:w="21"/><text x="12.0038%" y="655.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (25 samples, 0.02%)</title><rect x="11.7538%" y="693" width="0.0246%" height="15" fill="rgb(214,47,5)" fg:x="11969" fg:w="25"/><text x="12.0038%" y="703.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (82 samples, 0.08%)</title><rect x="11.6998%" y="741" width="0.0805%" height="15" fill="rgb(218,159,25)" fg:x="11914" fg:w="82"/><text x="11.9498%" y="751.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (27 samples, 0.03%)</title><rect x="11.7538%" y="725" width="0.0265%" height="15" fill="rgb(215,211,28)" fg:x="11969" fg:w="27"/><text x="12.0038%" y="735.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (27 samples, 0.03%)</title><rect x="11.7538%" y="709" width="0.0265%" height="15" fill="rgb(238,59,32)" fg:x="11969" fg:w="27"/><text x="12.0038%" y="719.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (127 samples, 0.12%)</title><rect x="11.6566%" y="757" width="0.1247%" height="15" fill="rgb(226,82,3)" fg:x="11870" fg:w="127"/><text x="11.9066%" y="767.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (142 samples, 0.14%)</title><rect x="11.6448%" y="789" width="0.1394%" height="15" fill="rgb(240,164,32)" fg:x="11858" fg:w="142"/><text x="11.8948%" y="799.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (142 samples, 0.14%)</title><rect x="11.6448%" y="773" width="0.1394%" height="15" fill="rgb(232,46,7)" fg:x="11858" fg:w="142"/><text x="11.8948%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (1,317 samples, 1.29%)</title><rect x="10.5056%" y="853" width="1.2933%" height="15" fill="rgb(229,129,53)" fg:x="10698" fg:w="1317"/><text x="10.7556%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,235 samples, 1.21%)</title><rect x="10.5862%" y="837" width="1.2128%" height="15" fill="rgb(234,188,29)" fg:x="10780" fg:w="1235"/><text x="10.8362%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (1,234 samples, 1.21%)</title><rect x="10.5871%" y="821" width="1.2118%" height="15" fill="rgb(246,141,4)" fg:x="10781" fg:w="1234"/><text x="10.8371%" y="831.50"></text></g><g><title>engine::engine::render::animate_sprite_system (175 samples, 0.17%)</title><rect x="11.6271%" y="805" width="0.1719%" height="15" fill="rgb(229,23,39)" fg:x="11840" fg:w="175"/><text x="11.8771%" y="815.50"></text></g><g><title>&lt;bevy_app::event::EventWriterState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_app::event::Events&lt;T&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,),T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (15 samples, 0.01%)</title><rect x="11.8009%" y="821" width="0.0147%" height="15" fill="rgb(206,12,3)" fg:x="12017" fg:w="15"/><text x="12.0509%" y="831.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (15 samples, 0.01%)</title><rect x="11.8009%" y="805" width="0.0147%" height="15" fill="rgb(252,226,20)" fg:x="12017" fg:w="15"/><text x="12.0509%" y="815.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (14 samples, 0.01%)</title><rect x="11.8019%" y="789" width="0.0137%" height="15" fill="rgb(216,123,35)" fg:x="12018" fg:w="14"/><text x="12.0519%" y="799.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (12 samples, 0.01%)</title><rect x="11.8039%" y="773" width="0.0118%" height="15" fill="rgb(212,68,40)" fg:x="12020" fg:w="12"/><text x="12.0539%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (34 samples, 0.03%)</title><rect x="11.8157%" y="821" width="0.0334%" height="15" fill="rgb(254,125,32)" fg:x="12032" fg:w="34"/><text x="12.0657%" y="831.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (34 samples, 0.03%)</title><rect x="11.8157%" y="805" width="0.0334%" height="15" fill="rgb(253,97,22)" fg:x="12032" fg:w="34"/><text x="12.0657%" y="815.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (32 samples, 0.03%)</title><rect x="11.8176%" y="789" width="0.0314%" height="15" fill="rgb(241,101,14)" fg:x="12034" fg:w="32"/><text x="12.0676%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (21 samples, 0.02%)</title><rect x="11.8284%" y="773" width="0.0206%" height="15" fill="rgb(238,103,29)" fg:x="12045" fg:w="21"/><text x="12.0784%" y="783.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (21 samples, 0.02%)</title><rect x="11.8284%" y="757" width="0.0206%" height="15" fill="rgb(233,195,47)" fg:x="12045" fg:w="21"/><text x="12.0784%" y="767.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (21 samples, 0.02%)</title><rect x="11.8284%" y="741" width="0.0206%" height="15" fill="rgb(246,218,30)" fg:x="12045" fg:w="21"/><text x="12.0784%" y="751.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::is_empty (21 samples, 0.02%)</title><rect x="11.8284%" y="725" width="0.0206%" height="15" fill="rgb(219,145,47)" fg:x="12045" fg:w="21"/><text x="12.0784%" y="735.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (60 samples, 0.06%)</title><rect x="11.7990%" y="837" width="0.0589%" height="15" fill="rgb(243,12,26)" fg:x="12015" fg:w="60"/><text x="12.0490%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="11.8746%" y="757" width="0.0314%" height="15" fill="rgb(214,87,16)" fg:x="12092" fg:w="32"/><text x="12.1246%" y="767.50"></text></g><g><title>bevy_app::event::EventWriter&lt;T&gt;::send_batch (52 samples, 0.05%)</title><rect x="11.8608%" y="789" width="0.0511%" height="15" fill="rgb(208,99,42)" fg:x="12078" fg:w="52"/><text x="12.1108%" y="799.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::extend (47 samples, 0.05%)</title><rect x="11.8657%" y="773" width="0.0462%" height="15" fill="rgb(253,99,2)" fg:x="12083" fg:w="47"/><text x="12.1157%" y="783.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::asset_event_system (82 samples, 0.08%)</title><rect x="11.8598%" y="805" width="0.0805%" height="15" fill="rgb(220,168,23)" fg:x="12077" fg:w="82"/><text x="12.1098%" y="815.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::drain (29 samples, 0.03%)</title><rect x="11.9119%" y="789" width="0.0285%" height="15" fill="rgb(242,38,24)" fg:x="12130" fg:w="29"/><text x="12.1619%" y="799.50"></text></g><g><title>&lt;T as downcast_rs::Downcast&gt;::as_any (25 samples, 0.02%)</title><rect x="11.9905%" y="757" width="0.0246%" height="15" fill="rgb(225,182,9)" fg:x="12210" fg:w="25"/><text x="12.2405%" y="767.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (12 samples, 0.01%)</title><rect x="12.0150%" y="741" width="0.0118%" height="15" fill="rgb(243,178,37)" fg:x="12235" fg:w="12"/><text x="12.2650%" y="751.50"></text></g><g><title>&lt;T as core::any::Any&gt;::type_id (12 samples, 0.01%)</title><rect x="12.0150%" y="725" width="0.0118%" height="15" fill="rgb(232,139,19)" fg:x="12235" fg:w="12"/><text x="12.2650%" y="735.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (38 samples, 0.04%)</title><rect x="11.9905%" y="773" width="0.0373%" height="15" fill="rgb(225,201,24)" fg:x="12210" fg:w="38"/><text x="12.2405%" y="783.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (13 samples, 0.01%)</title><rect x="12.0150%" y="757" width="0.0128%" height="15" fill="rgb(221,47,46)" fg:x="12235" fg:w="13"/><text x="12.2650%" y="767.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (13 samples, 0.01%)</title><rect x="12.0857%" y="757" width="0.0128%" height="15" fill="rgb(249,23,13)" fg:x="12307" fg:w="13"/><text x="12.3357%" y="767.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (13 samples, 0.01%)</title><rect x="12.0857%" y="741" width="0.0128%" height="15" fill="rgb(219,9,5)" fg:x="12307" fg:w="13"/><text x="12.3357%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (30 samples, 0.03%)</title><rect x="12.1063%" y="725" width="0.0295%" height="15" fill="rgb(254,171,16)" fg:x="12328" fg:w="30"/><text x="12.3563%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (30 samples, 0.03%)</title><rect x="12.1063%" y="709" width="0.0295%" height="15" fill="rgb(230,171,20)" fg:x="12328" fg:w="30"/><text x="12.3563%" y="719.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (111 samples, 0.11%)</title><rect x="12.0356%" y="773" width="0.1090%" height="15" fill="rgb(210,71,41)" fg:x="12256" fg:w="111"/><text x="12.2856%" y="783.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (47 samples, 0.05%)</title><rect x="12.0985%" y="757" width="0.0462%" height="15" fill="rgb(206,173,20)" fg:x="12320" fg:w="47"/><text x="12.3485%" y="767.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (45 samples, 0.04%)</title><rect x="12.1004%" y="741" width="0.0442%" height="15" fill="rgb(233,88,34)" fg:x="12322" fg:w="45"/><text x="12.3504%" y="751.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (22 samples, 0.02%)</title><rect x="12.1446%" y="773" width="0.0216%" height="15" fill="rgb(223,209,46)" fg:x="12367" fg:w="22"/><text x="12.3946%" y="783.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (22 samples, 0.02%)</title><rect x="12.1446%" y="757" width="0.0216%" height="15" fill="rgb(250,43,18)" fg:x="12367" fg:w="22"/><text x="12.3946%" y="767.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (20 samples, 0.02%)</title><rect x="12.1466%" y="741" width="0.0196%" height="15" fill="rgb(208,13,10)" fg:x="12369" fg:w="20"/><text x="12.3966%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="12.1554%" y="725" width="0.0108%" height="15" fill="rgb(212,200,36)" fg:x="12378" fg:w="11"/><text x="12.4054%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="12.1554%" y="709" width="0.0108%" height="15" fill="rgb(225,90,30)" fg:x="12378" fg:w="11"/><text x="12.4054%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (13 samples, 0.01%)</title><rect x="12.1672%" y="661" width="0.0128%" height="15" fill="rgb(236,182,39)" fg:x="12390" fg:w="13"/><text x="12.4172%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="12.1672%" y="645" width="0.0128%" height="15" fill="rgb(212,144,35)" fg:x="12390" fg:w="13"/><text x="12.4172%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (13 samples, 0.01%)</title><rect x="12.1672%" y="629" width="0.0128%" height="15" fill="rgb(228,63,44)" fg:x="12390" fg:w="13"/><text x="12.4172%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.01%)</title><rect x="12.1662%" y="725" width="0.0147%" height="15" fill="rgb(228,109,6)" fg:x="12389" fg:w="15"/><text x="12.4162%" y="735.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="12.1672%" y="709" width="0.0137%" height="15" fill="rgb(238,117,24)" fg:x="12390" fg:w="14"/><text x="12.4172%" y="719.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (14 samples, 0.01%)</title><rect x="12.1672%" y="693" width="0.0137%" height="15" fill="rgb(242,26,26)" fg:x="12390" fg:w="14"/><text x="12.4172%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (14 samples, 0.01%)</title><rect x="12.1672%" y="677" width="0.0137%" height="15" fill="rgb(221,92,48)" fg:x="12390" fg:w="14"/><text x="12.4172%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.01%)</title><rect x="12.1849%" y="693" width="0.0137%" height="15" fill="rgb(209,209,32)" fg:x="12408" fg:w="14"/><text x="12.4349%" y="703.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="12.1849%" y="677" width="0.0137%" height="15" fill="rgb(221,70,22)" fg:x="12408" fg:w="14"/><text x="12.4349%" y="687.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (14 samples, 0.01%)</title><rect x="12.1849%" y="661" width="0.0137%" height="15" fill="rgb(248,145,5)" fg:x="12408" fg:w="14"/><text x="12.4349%" y="671.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (14 samples, 0.01%)</title><rect x="12.1849%" y="645" width="0.0137%" height="15" fill="rgb(226,116,26)" fg:x="12408" fg:w="14"/><text x="12.4349%" y="655.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (265 samples, 0.26%)</title><rect x="11.9404%" y="805" width="0.2602%" height="15" fill="rgb(244,5,17)" fg:x="12159" fg:w="265"/><text x="12.1904%" y="815.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (262 samples, 0.26%)</title><rect x="11.9433%" y="789" width="0.2573%" height="15" fill="rgb(252,159,33)" fg:x="12162" fg:w="262"/><text x="12.1933%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (35 samples, 0.03%)</title><rect x="12.1662%" y="773" width="0.0344%" height="15" fill="rgb(206,71,0)" fg:x="12389" fg:w="35"/><text x="12.4162%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (35 samples, 0.03%)</title><rect x="12.1662%" y="757" width="0.0344%" height="15" fill="rgb(233,118,54)" fg:x="12389" fg:w="35"/><text x="12.4162%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (35 samples, 0.03%)</title><rect x="12.1662%" y="741" width="0.0344%" height="15" fill="rgb(234,83,48)" fg:x="12389" fg:w="35"/><text x="12.4162%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (20 samples, 0.02%)</title><rect x="12.1810%" y="725" width="0.0196%" height="15" fill="rgb(228,3,54)" fg:x="12404" fg:w="20"/><text x="12.4310%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.02%)</title><rect x="12.1810%" y="709" width="0.0196%" height="15" fill="rgb(226,155,13)" fg:x="12404" fg:w="20"/><text x="12.4310%" y="719.50"></text></g><g><title>&lt;egui::context::Context as core::clone::Clone&gt;::clone (21 samples, 0.02%)</title><rect x="12.2144%" y="773" width="0.0206%" height="15" fill="rgb(241,28,37)" fg:x="12438" fg:w="21"/><text x="12.4644%" y="783.50"></text></g><g><title>&lt;egui::input_state::InputState as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="12.2232%" y="757" width="0.0118%" height="15" fill="rgb(233,93,10)" fg:x="12447" fg:w="12"/><text x="12.4732%" y="767.50"></text></g><g><title>egui::memory::Areas::set_state (17 samples, 0.02%)</title><rect x="12.2536%" y="757" width="0.0167%" height="15" fill="rgb(225,113,19)" fg:x="12478" fg:w="17"/><text x="12.5036%" y="767.50"></text></g><g><title>egui::context::CtxRef::begin_frame (59 samples, 0.06%)</title><rect x="12.2144%" y="789" width="0.0579%" height="15" fill="rgb(241,2,18)" fg:x="12438" fg:w="59"/><text x="12.4644%" y="799.50"></text></g><g><title>egui::context::Context::begin_frame_mut (37 samples, 0.04%)</title><rect x="12.2360%" y="773" width="0.0363%" height="15" fill="rgb(228,207,21)" fg:x="12460" fg:w="37"/><text x="12.4860%" y="783.50"></text></g><g><title>bevy_egui::systems::begin_frame (64 samples, 0.06%)</title><rect x="12.2124%" y="805" width="0.0628%" height="15" fill="rgb(213,211,35)" fg:x="12436" fg:w="64"/><text x="12.4624%" y="815.50"></text></g><g><title>bevy_render::camera::active_cameras::active_cameras_system (16 samples, 0.02%)</title><rect x="12.2919%" y="805" width="0.0157%" height="15" fill="rgb(209,83,10)" fg:x="12517" fg:w="16"/><text x="12.5419%" y="815.50"></text></g><g><title>bevy_render::shader::shader_defs::asset_shader_defs_system (14 samples, 0.01%)</title><rect x="12.3076%" y="805" width="0.0137%" height="15" fill="rgb(209,164,1)" fg:x="12533" fg:w="14"/><text x="12.5576%" y="815.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (541 samples, 0.53%)</title><rect x="11.7990%" y="853" width="0.5313%" height="15" fill="rgb(213,184,43)" fg:x="12015" fg:w="541"/><text x="12.0490%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (479 samples, 0.47%)</title><rect x="11.8598%" y="837" width="0.4704%" height="15" fill="rgb(231,61,34)" fg:x="12077" fg:w="479"/><text x="12.1098%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (479 samples, 0.47%)</title><rect x="11.8598%" y="821" width="0.4704%" height="15" fill="rgb(235,75,3)" fg:x="12077" fg:w="479"/><text x="12.1098%" y="831.50"></text></g><g><title>&lt;(P0,P1,P2) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (12 samples, 0.01%)</title><rect x="12.3302%" y="837" width="0.0118%" height="15" fill="rgb(220,106,47)" fg:x="12556" fg:w="12"/><text x="12.5802%" y="847.50"></text></g><g><title>bevy_diagnostic::frame_time_diagnostics_plugin::FrameTimeDiagnosticsPlugin::diagnostic_system (13 samples, 0.01%)</title><rect x="12.3469%" y="805" width="0.0128%" height="15" fill="rgb(210,196,33)" fg:x="12573" fg:w="13"/><text x="12.5969%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (13 samples, 0.01%)</title><rect x="12.3793%" y="789" width="0.0128%" height="15" fill="rgb(229,154,42)" fg:x="12606" fg:w="13"/><text x="12.6293%" y="799.50"></text></g><g><title>alloc::slice::merge_sort (13 samples, 0.01%)</title><rect x="12.3793%" y="773" width="0.0128%" height="15" fill="rgb(228,114,26)" fg:x="12606" fg:w="13"/><text x="12.6293%" y="783.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (54 samples, 0.05%)</title><rect x="12.3597%" y="805" width="0.0530%" height="15" fill="rgb(208,144,1)" fg:x="12586" fg:w="54"/><text x="12.6097%" y="815.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (13 samples, 0.01%)</title><rect x="12.4451%" y="757" width="0.0128%" height="15" fill="rgb(239,112,37)" fg:x="12673" fg:w="13"/><text x="12.6951%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="12.4451%" y="741" width="0.0128%" height="15" fill="rgb(210,96,50)" fg:x="12673" fg:w="13"/><text x="12.6951%" y="751.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (13 samples, 0.01%)</title><rect x="12.4451%" y="725" width="0.0128%" height="15" fill="rgb(222,178,2)" fg:x="12673" fg:w="13"/><text x="12.6951%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (12 samples, 0.01%)</title><rect x="12.4579%" y="757" width="0.0118%" height="15" fill="rgb(226,74,18)" fg:x="12686" fg:w="12"/><text x="12.7079%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (11 samples, 0.01%)</title><rect x="12.4697%" y="757" width="0.0108%" height="15" fill="rgb(225,67,54)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="12.4697%" y="741" width="0.0108%" height="15" fill="rgb(251,92,32)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (11 samples, 0.01%)</title><rect x="12.4697%" y="725" width="0.0108%" height="15" fill="rgb(228,149,22)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="12.4697%" y="709" width="0.0108%" height="15" fill="rgb(243,54,13)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (11 samples, 0.01%)</title><rect x="12.4697%" y="693" width="0.0108%" height="15" fill="rgb(243,180,28)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="12.4697%" y="677" width="0.0108%" height="15" fill="rgb(208,167,24)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="12.4697%" y="661" width="0.0108%" height="15" fill="rgb(245,73,45)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="12.4697%" y="645" width="0.0108%" height="15" fill="rgb(237,203,48)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="655.50"></text></g><g><title>__rdl_dealloc (11 samples, 0.01%)</title><rect x="12.4697%" y="629" width="0.0108%" height="15" fill="rgb(211,197,16)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (11 samples, 0.01%)</title><rect x="12.4697%" y="613" width="0.0108%" height="15" fill="rgb(243,99,51)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="623.50"></text></g><g><title>__GI___libc_free (11 samples, 0.01%)</title><rect x="12.4697%" y="597" width="0.0108%" height="15" fill="rgb(215,123,29)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="607.50"></text></g><g><title>_int_free (11 samples, 0.01%)</title><rect x="12.4697%" y="581" width="0.0108%" height="15" fill="rgb(239,186,37)" fg:x="12698" fg:w="11"/><text x="12.7197%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (29 samples, 0.03%)</title><rect x="12.4874%" y="709" width="0.0285%" height="15" fill="rgb(252,136,39)" fg:x="12716" fg:w="29"/><text x="12.7374%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (29 samples, 0.03%)</title><rect x="12.4874%" y="693" width="0.0285%" height="15" fill="rgb(223,213,32)" fg:x="12716" fg:w="29"/><text x="12.7374%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.03%)</title><rect x="12.4874%" y="677" width="0.0285%" height="15" fill="rgb(233,115,5)" fg:x="12716" fg:w="29"/><text x="12.7374%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (29 samples, 0.03%)</title><rect x="12.4874%" y="661" width="0.0285%" height="15" fill="rgb(207,226,44)" fg:x="12716" fg:w="29"/><text x="12.7374%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.03%)</title><rect x="12.4883%" y="645" width="0.0275%" height="15" fill="rgb(208,126,0)" fg:x="12717" fg:w="28"/><text x="12.7383%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (25 samples, 0.02%)</title><rect x="12.4913%" y="629" width="0.0246%" height="15" fill="rgb(244,66,21)" fg:x="12720" fg:w="25"/><text x="12.7413%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (25 samples, 0.02%)</title><rect x="12.4913%" y="613" width="0.0246%" height="15" fill="rgb(222,97,12)" fg:x="12720" fg:w="25"/><text x="12.7413%" y="623.50"></text></g><g><title>alloc::alloc::realloc (25 samples, 0.02%)</title><rect x="12.4913%" y="597" width="0.0246%" height="15" fill="rgb(219,213,19)" fg:x="12720" fg:w="25"/><text x="12.7413%" y="607.50"></text></g><g><title>__rdl_realloc (25 samples, 0.02%)</title><rect x="12.4913%" y="581" width="0.0246%" height="15" fill="rgb(252,169,30)" fg:x="12720" fg:w="25"/><text x="12.7413%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (25 samples, 0.02%)</title><rect x="12.4913%" y="565" width="0.0246%" height="15" fill="rgb(206,32,51)" fg:x="12720" fg:w="25"/><text x="12.7413%" y="575.50"></text></g><g><title>__GI___libc_realloc (25 samples, 0.02%)</title><rect x="12.4913%" y="549" width="0.0246%" height="15" fill="rgb(250,172,42)" fg:x="12720" fg:w="25"/><text x="12.7413%" y="559.50"></text></g><g><title>_int_realloc (16 samples, 0.02%)</title><rect x="12.5001%" y="533" width="0.0157%" height="15" fill="rgb(209,34,43)" fg:x="12729" fg:w="16"/><text x="12.7501%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (31 samples, 0.03%)</title><rect x="12.4874%" y="725" width="0.0304%" height="15" fill="rgb(223,11,35)" fg:x="12716" fg:w="31"/><text x="12.7374%" y="735.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::neighbors_with_weights (59 samples, 0.06%)</title><rect x="12.4815%" y="741" width="0.0579%" height="15" fill="rgb(251,219,26)" fg:x="12710" fg:w="59"/><text x="12.7315%" y="751.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::get_path::{{closure}} (69 samples, 0.07%)</title><rect x="12.4805%" y="757" width="0.0678%" height="15" fill="rgb(231,119,3)" fg:x="12709" fg:w="69"/><text x="12.7305%" y="767.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (20 samples, 0.02%)</title><rect x="12.5482%" y="757" width="0.0196%" height="15" fill="rgb(216,97,11)" fg:x="12778" fg:w="20"/><text x="12.7982%" y="767.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (17 samples, 0.02%)</title><rect x="12.5512%" y="741" width="0.0167%" height="15" fill="rgb(223,59,9)" fg:x="12781" fg:w="17"/><text x="12.8012%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (15 samples, 0.01%)</title><rect x="12.5532%" y="725" width="0.0147%" height="15" fill="rgb(233,93,31)" fg:x="12783" fg:w="15"/><text x="12.8032%" y="735.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="12.5738%" y="709" width="0.0167%" height="15" fill="rgb(239,81,33)" fg:x="12804" fg:w="17"/><text x="12.8238%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (17 samples, 0.02%)</title><rect x="12.5738%" y="693" width="0.0167%" height="15" fill="rgb(213,120,34)" fg:x="12804" fg:w="17"/><text x="12.8238%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (17 samples, 0.02%)</title><rect x="12.5738%" y="677" width="0.0167%" height="15" fill="rgb(243,49,53)" fg:x="12804" fg:w="17"/><text x="12.8238%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (23 samples, 0.02%)</title><rect x="12.5718%" y="725" width="0.0226%" height="15" fill="rgb(247,216,33)" fg:x="12802" fg:w="23"/><text x="12.8218%" y="735.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (34 samples, 0.03%)</title><rect x="12.5708%" y="757" width="0.0334%" height="15" fill="rgb(226,26,14)" fg:x="12801" fg:w="34"/><text x="12.8208%" y="767.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (34 samples, 0.03%)</title><rect x="12.5708%" y="741" width="0.0334%" height="15" fill="rgb(215,49,53)" fg:x="12801" fg:w="34"/><text x="12.8208%" y="751.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::plan_path (182 samples, 0.18%)</title><rect x="12.4304%" y="805" width="0.1787%" height="15" fill="rgb(245,162,40)" fg:x="12658" fg:w="182"/><text x="12.6804%" y="815.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::get_path (179 samples, 0.18%)</title><rect x="12.4333%" y="789" width="0.1758%" height="15" fill="rgb(229,68,17)" fg:x="12661" fg:w="179"/><text x="12.6833%" y="799.50"></text></g><g><title>pathfinding::directed::astar::astar (178 samples, 0.17%)</title><rect x="12.4343%" y="773" width="0.1748%" height="15" fill="rgb(213,182,10)" fg:x="12662" fg:w="178"/><text x="12.6843%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (288 samples, 0.28%)</title><rect x="12.3302%" y="853" width="0.2828%" height="15" fill="rgb(245,125,30)" fg:x="12556" fg:w="288"/><text x="12.5802%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (276 samples, 0.27%)</title><rect x="12.3420%" y="837" width="0.2710%" height="15" fill="rgb(232,202,2)" fg:x="12568" fg:w="276"/><text x="12.5920%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (276 samples, 0.27%)</title><rect x="12.3420%" y="821" width="0.2710%" height="15" fill="rgb(237,140,51)" fg:x="12568" fg:w="276"/><text x="12.5920%" y="831.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (15 samples, 0.01%)</title><rect x="12.6160%" y="821" width="0.0147%" height="15" fill="rgb(236,157,25)" fg:x="12847" fg:w="15"/><text x="12.8660%" y="831.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (15 samples, 0.01%)</title><rect x="12.6160%" y="805" width="0.0147%" height="15" fill="rgb(219,209,0)" fg:x="12847" fg:w="15"/><text x="12.8660%" y="815.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (15 samples, 0.01%)</title><rect x="12.6160%" y="789" width="0.0147%" height="15" fill="rgb(240,116,54)" fg:x="12847" fg:w="15"/><text x="12.8660%" y="799.50"></text></g><g><title>&lt;(P0,P1,P2,P3) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (24 samples, 0.02%)</title><rect x="12.6131%" y="837" width="0.0236%" height="15" fill="rgb(216,10,36)" fg:x="12844" fg:w="24"/><text x="12.8631%" y="847.50"></text></g><g><title>bevy_render::camera::camera::camera_system (14 samples, 0.01%)</title><rect x="12.6435%" y="805" width="0.0137%" height="15" fill="rgb(222,72,44)" fg:x="12875" fg:w="14"/><text x="12.8935%" y="815.50"></text></g><g><title>futures_lite::future::block_on (31 samples, 0.03%)</title><rect x="12.6680%" y="773" width="0.0304%" height="15" fill="rgb(232,159,9)" fg:x="12900" fg:w="31"/><text x="12.9180%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (27 samples, 0.03%)</title><rect x="12.6720%" y="757" width="0.0265%" height="15" fill="rgb(210,39,32)" fg:x="12904" fg:w="27"/><text x="12.9220%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (27 samples, 0.03%)</title><rect x="12.6720%" y="741" width="0.0265%" height="15" fill="rgb(216,194,45)" fg:x="12904" fg:w="27"/><text x="12.9220%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (26 samples, 0.03%)</title><rect x="12.6730%" y="725" width="0.0255%" height="15" fill="rgb(218,18,35)" fg:x="12905" fg:w="26"/><text x="12.9230%" y="735.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker (12 samples, 0.01%)</title><rect x="12.6867%" y="709" width="0.0118%" height="15" fill="rgb(207,83,51)" fg:x="12919" fg:w="12"/><text x="12.9367%" y="719.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (14 samples, 0.01%)</title><rect x="12.7456%" y="613" width="0.0137%" height="15" fill="rgb(225,63,43)" fg:x="12979" fg:w="14"/><text x="12.9956%" y="623.50"></text></g><g><title>parking_lot_core::parking_lot::park (17 samples, 0.02%)</title><rect x="12.7446%" y="645" width="0.0167%" height="15" fill="rgb(207,57,36)" fg:x="12978" fg:w="17"/><text x="12.9946%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (17 samples, 0.02%)</title><rect x="12.7446%" y="629" width="0.0167%" height="15" fill="rgb(216,99,33)" fg:x="12978" fg:w="17"/><text x="12.9946%" y="639.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (16 samples, 0.02%)</title><rect x="12.7633%" y="629" width="0.0157%" height="15" fill="rgb(225,42,16)" fg:x="12997" fg:w="16"/><text x="13.0133%" y="639.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (14 samples, 0.01%)</title><rect x="12.7653%" y="613" width="0.0137%" height="15" fill="rgb(220,201,45)" fg:x="12999" fg:w="14"/><text x="13.0153%" y="623.50"></text></g><g><title>core::hint::spin_loop (14 samples, 0.01%)</title><rect x="12.7653%" y="597" width="0.0137%" height="15" fill="rgb(225,33,4)" fg:x="12999" fg:w="14"/><text x="13.0153%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (14 samples, 0.01%)</title><rect x="12.7653%" y="581" width="0.0137%" height="15" fill="rgb(224,33,50)" fg:x="12999" fg:w="14"/><text x="13.0153%" y="591.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life (43 samples, 0.04%)</title><rect x="12.7407%" y="725" width="0.0422%" height="15" fill="rgb(246,198,51)" fg:x="12974" fg:w="43"/><text x="12.9907%" y="735.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life_internal (43 samples, 0.04%)</title><rect x="12.7407%" y="709" width="0.0422%" height="15" fill="rgb(205,22,4)" fg:x="12974" fg:w="43"/><text x="12.9907%" y="719.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (43 samples, 0.04%)</title><rect x="12.7407%" y="693" width="0.0422%" height="15" fill="rgb(206,3,8)" fg:x="12974" fg:w="43"/><text x="12.9907%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (43 samples, 0.04%)</title><rect x="12.7407%" y="677" width="0.0422%" height="15" fill="rgb(251,23,15)" fg:x="12974" fg:w="43"/><text x="12.9907%" y="687.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (42 samples, 0.04%)</title><rect x="12.7417%" y="661" width="0.0412%" height="15" fill="rgb(252,88,28)" fg:x="12975" fg:w="42"/><text x="12.9917%" y="671.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (22 samples, 0.02%)</title><rect x="12.7613%" y="645" width="0.0216%" height="15" fill="rgb(212,127,14)" fg:x="12995" fg:w="22"/><text x="13.0113%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (91 samples, 0.09%)</title><rect x="12.7103%" y="757" width="0.0894%" height="15" fill="rgb(247,145,37)" fg:x="12943" fg:w="91"/><text x="12.9603%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (81 samples, 0.08%)</title><rect x="12.7201%" y="741" width="0.0795%" height="15" fill="rgb(209,117,53)" fg:x="12953" fg:w="81"/><text x="12.9701%" y="751.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (11 samples, 0.01%)</title><rect x="12.7888%" y="725" width="0.0108%" height="15" fill="rgb(212,90,42)" fg:x="13023" fg:w="11"/><text x="13.0388%" y="735.50"></text></g><g><title>wgpu::BufferSlice::map_async (97 samples, 0.10%)</title><rect x="12.7083%" y="773" width="0.0953%" height="15" fill="rgb(218,164,37)" fg:x="12941" fg:w="97"/><text x="12.9583%" y="783.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::cleanup (13 samples, 0.01%)</title><rect x="12.8291%" y="661" width="0.0128%" height="15" fill="rgb(246,65,34)" fg:x="13064" fg:w="13"/><text x="13.0791%" y="671.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (17 samples, 0.02%)</title><rect x="12.8291%" y="693" width="0.0167%" height="15" fill="rgb(231,100,33)" fg:x="13064" fg:w="17"/><text x="13.0791%" y="703.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (17 samples, 0.02%)</title><rect x="12.8291%" y="677" width="0.0167%" height="15" fill="rgb(228,126,14)" fg:x="13064" fg:w="17"/><text x="13.0791%" y="687.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (29 samples, 0.03%)</title><rect x="12.8271%" y="709" width="0.0285%" height="15" fill="rgb(215,173,21)" fg:x="13062" fg:w="29"/><text x="13.0771%" y="719.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::handle_mapping (17 samples, 0.02%)</title><rect x="12.8556%" y="709" width="0.0167%" height="15" fill="rgb(210,6,40)" fg:x="13091" fg:w="17"/><text x="13.1056%" y="719.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (83 samples, 0.08%)</title><rect x="12.8144%" y="725" width="0.0815%" height="15" fill="rgb(212,48,18)" fg:x="13049" fg:w="83"/><text x="13.0644%" y="735.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (12 samples, 0.01%)</title><rect x="12.8841%" y="709" width="0.0118%" height="15" fill="rgb(230,214,11)" fg:x="13120" fg:w="12"/><text x="13.1341%" y="719.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (11 samples, 0.01%)</title><rect x="12.9067%" y="629" width="0.0108%" height="15" fill="rgb(254,105,39)" fg:x="13143" fg:w="11"/><text x="13.1567%" y="639.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (19 samples, 0.02%)</title><rect x="12.9008%" y="661" width="0.0187%" height="15" fill="rgb(245,158,5)" fg:x="13137" fg:w="19"/><text x="13.1508%" y="671.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (13 samples, 0.01%)</title><rect x="12.9067%" y="645" width="0.0128%" height="15" fill="rgb(249,208,11)" fg:x="13143" fg:w="13"/><text x="13.1567%" y="655.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (21 samples, 0.02%)</title><rect x="12.8998%" y="677" width="0.0206%" height="15" fill="rgb(210,39,28)" fg:x="13136" fg:w="21"/><text x="13.1498%" y="687.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (22 samples, 0.02%)</title><rect x="12.8998%" y="725" width="0.0216%" height="15" fill="rgb(211,56,53)" fg:x="13136" fg:w="22"/><text x="13.1498%" y="735.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (22 samples, 0.02%)</title><rect x="12.8998%" y="709" width="0.0216%" height="15" fill="rgb(226,201,30)" fg:x="13136" fg:w="22"/><text x="13.1498%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (22 samples, 0.02%)</title><rect x="12.8998%" y="693" width="0.0216%" height="15" fill="rgb(239,101,34)" fg:x="13136" fg:w="22"/><text x="13.1498%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (265 samples, 0.26%)</title><rect x="12.6631%" y="789" width="0.2602%" height="15" fill="rgb(226,209,5)" fg:x="12895" fg:w="265"/><text x="12.9131%" y="799.50"></text></g><g><title>wgpu::Device::poll (122 samples, 0.12%)</title><rect x="12.8036%" y="773" width="0.1198%" height="15" fill="rgb(250,105,47)" fg:x="13038" fg:w="122"/><text x="13.0536%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (122 samples, 0.12%)</title><rect x="12.8036%" y="757" width="0.1198%" height="15" fill="rgb(230,72,3)" fg:x="13038" fg:w="122"/><text x="13.0536%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (116 samples, 0.11%)</title><rect x="12.8095%" y="741" width="0.1139%" height="15" fill="rgb(232,218,39)" fg:x="13044" fg:w="116"/><text x="13.0595%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (12 samples, 0.01%)</title><rect x="12.9244%" y="757" width="0.0118%" height="15" fill="rgb(248,166,6)" fg:x="13161" fg:w="12"/><text x="13.1744%" y="767.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (16 samples, 0.02%)</title><rect x="12.9234%" y="789" width="0.0157%" height="15" fill="rgb(247,89,20)" fg:x="13160" fg:w="16"/><text x="13.1734%" y="799.50"></text></g><g><title>wgpu::Buffer::unmap (15 samples, 0.01%)</title><rect x="12.9244%" y="773" width="0.0147%" height="15" fill="rgb(248,130,54)" fg:x="13161" fg:w="15"/><text x="13.1744%" y="783.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (36 samples, 0.04%)</title><rect x="12.9391%" y="789" width="0.0354%" height="15" fill="rgb(234,196,4)" fg:x="13176" fg:w="36"/><text x="13.1891%" y="799.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (14 samples, 0.01%)</title><rect x="12.9607%" y="773" width="0.0137%" height="15" fill="rgb(250,143,31)" fg:x="13198" fg:w="14"/><text x="13.2107%" y="783.50"></text></g><g><title>bevy_render::camera::active_cameras::ActiveCameras::get_mut (17 samples, 0.02%)</title><rect x="12.9862%" y="789" width="0.0167%" height="15" fill="rgb(211,110,34)" fg:x="13224" fg:w="17"/><text x="13.2362%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (17 samples, 0.02%)</title><rect x="12.9862%" y="773" width="0.0167%" height="15" fill="rgb(215,124,48)" fg:x="13224" fg:w="17"/><text x="13.2362%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (17 samples, 0.02%)</title><rect x="12.9862%" y="757" width="0.0167%" height="15" fill="rgb(216,46,13)" fg:x="13224" fg:w="17"/><text x="13.2362%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (17 samples, 0.02%)</title><rect x="12.9862%" y="741" width="0.0167%" height="15" fill="rgb(205,184,25)" fg:x="13224" fg:w="17"/><text x="13.2362%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (11 samples, 0.01%)</title><rect x="12.9921%" y="725" width="0.0108%" height="15" fill="rgb(228,1,10)" fg:x="13230" fg:w="11"/><text x="13.2421%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.01%)</title><rect x="12.9921%" y="709" width="0.0108%" height="15" fill="rgb(213,116,27)" fg:x="13230" fg:w="11"/><text x="13.2421%" y="719.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get (16 samples, 0.02%)</title><rect x="13.0127%" y="789" width="0.0157%" height="15" fill="rgb(241,95,50)" fg:x="13251" fg:w="16"/><text x="13.2627%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (16 samples, 0.02%)</title><rect x="13.0127%" y="773" width="0.0157%" height="15" fill="rgb(238,48,32)" fg:x="13251" fg:w="16"/><text x="13.2627%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (16 samples, 0.02%)</title><rect x="13.0127%" y="757" width="0.0157%" height="15" fill="rgb(235,113,49)" fg:x="13251" fg:w="16"/><text x="13.2627%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (16 samples, 0.02%)</title><rect x="13.0127%" y="741" width="0.0157%" height="15" fill="rgb(205,127,43)" fg:x="13251" fg:w="16"/><text x="13.2627%" y="751.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (380 samples, 0.37%)</title><rect x="12.6572%" y="805" width="0.3732%" height="15" fill="rgb(250,162,2)" fg:x="12889" fg:w="380"/><text x="12.9072%" y="815.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="13.0432%" y="789" width="0.0108%" height="15" fill="rgb(220,13,41)" fg:x="13282" fg:w="11"/><text x="13.2932%" y="799.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (27 samples, 0.03%)</title><rect x="13.0540%" y="789" width="0.0265%" height="15" fill="rgb(249,221,25)" fg:x="13293" fg:w="27"/><text x="13.3040%" y="799.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (27 samples, 0.03%)</title><rect x="13.0540%" y="773" width="0.0265%" height="15" fill="rgb(215,208,19)" fg:x="13293" fg:w="27"/><text x="13.3040%" y="783.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (48 samples, 0.05%)</title><rect x="13.0383%" y="805" width="0.0471%" height="15" fill="rgb(236,175,2)" fg:x="13277" fg:w="48"/><text x="13.2883%" y="815.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (38 samples, 0.04%)</title><rect x="13.1139%" y="789" width="0.0373%" height="15" fill="rgb(241,52,2)" fg:x="13354" fg:w="38"/><text x="13.3639%" y="799.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (38 samples, 0.04%)</title><rect x="13.1139%" y="773" width="0.0373%" height="15" fill="rgb(248,140,14)" fg:x="13354" fg:w="38"/><text x="13.3639%" y="783.50"></text></g><g><title>engine::engine::actor::ai::eating::eating_ai (59 samples, 0.06%)</title><rect x="13.0942%" y="805" width="0.0579%" height="15" fill="rgb(253,22,42)" fg:x="13334" fg:w="59"/><text x="13.3442%" y="815.50"></text></g><g><title>core::ptr::read (14 samples, 0.01%)</title><rect x="13.2543%" y="741" width="0.0137%" height="15" fill="rgb(234,61,47)" fg:x="13497" fg:w="14"/><text x="13.5043%" y="751.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="13.2484%" y="757" width="0.0226%" height="15" fill="rgb(208,226,15)" fg:x="13491" fg:w="23"/><text x="13.4984%" y="767.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (15 samples, 0.01%)</title><rect x="13.2779%" y="709" width="0.0147%" height="15" fill="rgb(217,221,4)" fg:x="13521" fg:w="15"/><text x="13.5279%" y="719.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="13.3113%" y="677" width="0.0196%" height="15" fill="rgb(212,174,34)" fg:x="13555" fg:w="20"/><text x="13.5613%" y="687.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (32 samples, 0.03%)</title><rect x="13.3073%" y="693" width="0.0314%" height="15" fill="rgb(253,83,4)" fg:x="13551" fg:w="32"/><text x="13.5573%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30 samples, 0.03%)</title><rect x="13.3388%" y="677" width="0.0295%" height="15" fill="rgb(250,195,49)" fg:x="13583" fg:w="30"/><text x="13.5888%" y="687.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (34 samples, 0.03%)</title><rect x="13.3388%" y="693" width="0.0334%" height="15" fill="rgb(241,192,25)" fg:x="13583" fg:w="34"/><text x="13.5888%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (64 samples, 0.06%)</title><rect x="13.3790%" y="693" width="0.0628%" height="15" fill="rgb(208,124,10)" fg:x="13624" fg:w="64"/><text x="13.6290%" y="703.50"></text></g><g><title>core::cmp::PartialOrd::le (64 samples, 0.06%)</title><rect x="13.3790%" y="677" width="0.0628%" height="15" fill="rgb(222,33,0)" fg:x="13624" fg:w="64"/><text x="13.6290%" y="687.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (44 samples, 0.04%)</title><rect x="13.3987%" y="661" width="0.0432%" height="15" fill="rgb(234,209,28)" fg:x="13644" fg:w="44"/><text x="13.6487%" y="671.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (32 samples, 0.03%)</title><rect x="13.4105%" y="645" width="0.0314%" height="15" fill="rgb(224,11,23)" fg:x="13656" fg:w="32"/><text x="13.6605%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (13 samples, 0.01%)</title><rect x="13.4291%" y="629" width="0.0128%" height="15" fill="rgb(232,99,1)" fg:x="13675" fg:w="13"/><text x="13.6791%" y="639.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (160 samples, 0.16%)</title><rect x="13.2926%" y="709" width="0.1571%" height="15" fill="rgb(237,95,45)" fg:x="13536" fg:w="160"/><text x="13.5426%" y="719.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (187 samples, 0.18%)</title><rect x="13.2710%" y="757" width="0.1836%" height="15" fill="rgb(208,109,11)" fg:x="13514" fg:w="187"/><text x="13.5210%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (184 samples, 0.18%)</title><rect x="13.2740%" y="741" width="0.1807%" height="15" fill="rgb(216,190,48)" fg:x="13517" fg:w="184"/><text x="13.5240%" y="751.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (181 samples, 0.18%)</title><rect x="13.2769%" y="725" width="0.1777%" height="15" fill="rgb(251,171,36)" fg:x="13520" fg:w="181"/><text x="13.5269%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (25 samples, 0.02%)</title><rect x="13.4576%" y="725" width="0.0246%" height="15" fill="rgb(230,62,22)" fg:x="13704" fg:w="25"/><text x="13.7076%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (37 samples, 0.04%)</title><rect x="13.4546%" y="741" width="0.0363%" height="15" fill="rgb(225,114,35)" fg:x="13701" fg:w="37"/><text x="13.7046%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.01%)</title><rect x="13.4910%" y="741" width="0.0108%" height="15" fill="rgb(215,118,42)" fg:x="13738" fg:w="11"/><text x="13.7410%" y="751.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (55 samples, 0.05%)</title><rect x="13.4546%" y="757" width="0.0540%" height="15" fill="rgb(243,119,21)" fg:x="13701" fg:w="55"/><text x="13.7046%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (103 samples, 0.10%)</title><rect x="13.5106%" y="661" width="0.1011%" height="15" fill="rgb(252,177,53)" fg:x="13758" fg:w="103"/><text x="13.7606%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (103 samples, 0.10%)</title><rect x="13.5106%" y="645" width="0.1011%" height="15" fill="rgb(237,209,29)" fg:x="13758" fg:w="103"/><text x="13.7606%" y="655.50"></text></g><g><title>__rdl_dealloc (103 samples, 0.10%)</title><rect x="13.5106%" y="629" width="0.1011%" height="15" fill="rgb(212,65,23)" fg:x="13758" fg:w="103"/><text x="13.7606%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (103 samples, 0.10%)</title><rect x="13.5106%" y="613" width="0.1011%" height="15" fill="rgb(230,222,46)" fg:x="13758" fg:w="103"/><text x="13.7606%" y="623.50"></text></g><g><title>__GI___libc_free (102 samples, 0.10%)</title><rect x="13.5116%" y="597" width="0.1002%" height="15" fill="rgb(215,135,32)" fg:x="13759" fg:w="102"/><text x="13.7616%" y="607.50"></text></g><g><title>_int_free (96 samples, 0.09%)</title><rect x="13.5175%" y="581" width="0.0943%" height="15" fill="rgb(246,101,22)" fg:x="13765" fg:w="96"/><text x="13.7675%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (104 samples, 0.10%)</title><rect x="13.5106%" y="757" width="0.1021%" height="15" fill="rgb(206,107,13)" fg:x="13758" fg:w="104"/><text x="13.7606%" y="767.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (104 samples, 0.10%)</title><rect x="13.5106%" y="741" width="0.1021%" height="15" fill="rgb(250,100,44)" fg:x="13758" fg:w="104"/><text x="13.7606%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (104 samples, 0.10%)</title><rect x="13.5106%" y="725" width="0.1021%" height="15" fill="rgb(231,147,38)" fg:x="13758" fg:w="104"/><text x="13.7606%" y="735.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (104 samples, 0.10%)</title><rect x="13.5106%" y="709" width="0.1021%" height="15" fill="rgb(229,8,40)" fg:x="13758" fg:w="104"/><text x="13.7606%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (104 samples, 0.10%)</title><rect x="13.5106%" y="693" width="0.1021%" height="15" fill="rgb(221,135,30)" fg:x="13758" fg:w="104"/><text x="13.7606%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (104 samples, 0.10%)</title><rect x="13.5106%" y="677" width="0.1021%" height="15" fill="rgb(249,193,18)" fg:x="13758" fg:w="104"/><text x="13.7606%" y="687.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="13.7119%" y="725" width="0.0167%" height="15" fill="rgb(209,133,39)" fg:x="13963" fg:w="17"/><text x="13.9619%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="13.8740%" y="517" width="0.0118%" height="15" fill="rgb(232,100,14)" fg:x="14128" fg:w="12"/><text x="14.1240%" y="527.50"></text></g><g><title>_int_free (21 samples, 0.02%)</title><rect x="13.8858%" y="517" width="0.0206%" height="15" fill="rgb(224,185,1)" fg:x="14140" fg:w="21"/><text x="14.1358%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (184 samples, 0.18%)</title><rect x="13.7856%" y="629" width="0.1807%" height="15" fill="rgb(223,139,8)" fg:x="14038" fg:w="184"/><text x="14.0356%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (184 samples, 0.18%)</title><rect x="13.7856%" y="613" width="0.1807%" height="15" fill="rgb(232,213,38)" fg:x="14038" fg:w="184"/><text x="14.0356%" y="623.50"></text></g><g><title>alloc::alloc::realloc (184 samples, 0.18%)</title><rect x="13.7856%" y="597" width="0.1807%" height="15" fill="rgb(207,94,22)" fg:x="14038" fg:w="184"/><text x="14.0356%" y="607.50"></text></g><g><title>__rdl_realloc (184 samples, 0.18%)</title><rect x="13.7856%" y="581" width="0.1807%" height="15" fill="rgb(219,183,54)" fg:x="14038" fg:w="184"/><text x="14.0356%" y="591.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (184 samples, 0.18%)</title><rect x="13.7856%" y="565" width="0.1807%" height="15" fill="rgb(216,185,54)" fg:x="14038" fg:w="184"/><text x="14.0356%" y="575.50"></text></g><g><title>__GI___libc_realloc (183 samples, 0.18%)</title><rect x="13.7866%" y="549" width="0.1797%" height="15" fill="rgb(254,217,39)" fg:x="14039" fg:w="183"/><text x="14.0366%" y="559.50"></text></g><g><title>_int_realloc (107 samples, 0.11%)</title><rect x="13.8612%" y="533" width="0.1051%" height="15" fill="rgb(240,178,23)" fg:x="14115" fg:w="107"/><text x="14.1112%" y="543.50"></text></g><g><title>_int_malloc (61 samples, 0.06%)</title><rect x="13.9064%" y="517" width="0.0599%" height="15" fill="rgb(218,11,47)" fg:x="14161" fg:w="61"/><text x="14.1564%" y="527.50"></text></g><g><title>__GI___libc_malloc (20 samples, 0.02%)</title><rect x="13.9663%" y="629" width="0.0196%" height="15" fill="rgb(218,51,51)" fg:x="14222" fg:w="20"/><text x="14.2163%" y="639.50"></text></g><g><title>alloc::raw_vec::finish_grow (226 samples, 0.22%)</title><rect x="13.7679%" y="645" width="0.2219%" height="15" fill="rgb(238,126,27)" fg:x="14020" fg:w="226"/><text x="14.0179%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (254 samples, 0.25%)</title><rect x="13.7542%" y="661" width="0.2494%" height="15" fill="rgb(249,202,22)" fg:x="14006" fg:w="254"/><text x="14.0042%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (260 samples, 0.26%)</title><rect x="13.7512%" y="693" width="0.2553%" height="15" fill="rgb(254,195,49)" fg:x="14003" fg:w="260"/><text x="14.0012%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (257 samples, 0.25%)</title><rect x="13.7542%" y="677" width="0.2524%" height="15" fill="rgb(208,123,14)" fg:x="14006" fg:w="257"/><text x="14.0042%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (264 samples, 0.26%)</title><rect x="13.7512%" y="709" width="0.2593%" height="15" fill="rgb(224,200,8)" fg:x="14003" fg:w="264"/><text x="14.0012%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (308 samples, 0.30%)</title><rect x="13.7286%" y="725" width="0.3025%" height="15" fill="rgb(217,61,36)" fg:x="13980" fg:w="308"/><text x="13.9786%" y="735.50"></text></g><g><title>core::ptr::write (21 samples, 0.02%)</title><rect x="14.0105%" y="709" width="0.0206%" height="15" fill="rgb(206,35,45)" fg:x="14267" fg:w="21"/><text x="14.2605%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="14.0370%" y="645" width="0.0530%" height="15" fill="rgb(217,65,33)" fg:x="14294" fg:w="54"/><text x="14.2870%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (54 samples, 0.05%)</title><rect x="14.0370%" y="629" width="0.0530%" height="15" fill="rgb(222,158,48)" fg:x="14294" fg:w="54"/><text x="14.2870%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (54 samples, 0.05%)</title><rect x="14.0370%" y="613" width="0.0530%" height="15" fill="rgb(254,2,54)" fg:x="14294" fg:w="54"/><text x="14.2870%" y="623.50"></text></g><g><title>__rdl_dealloc (54 samples, 0.05%)</title><rect x="14.0370%" y="597" width="0.0530%" height="15" fill="rgb(250,143,38)" fg:x="14294" fg:w="54"/><text x="14.2870%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (54 samples, 0.05%)</title><rect x="14.0370%" y="581" width="0.0530%" height="15" fill="rgb(248,25,0)" fg:x="14294" fg:w="54"/><text x="14.2870%" y="591.50"></text></g><g><title>__GI___libc_free (54 samples, 0.05%)</title><rect x="14.0370%" y="565" width="0.0530%" height="15" fill="rgb(206,152,27)" fg:x="14294" fg:w="54"/><text x="14.2870%" y="575.50"></text></g><g><title>_int_free (34 samples, 0.03%)</title><rect x="14.0566%" y="549" width="0.0334%" height="15" fill="rgb(240,77,30)" fg:x="14314" fg:w="34"/><text x="14.3066%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (55 samples, 0.05%)</title><rect x="14.0370%" y="725" width="0.0540%" height="15" fill="rgb(231,5,3)" fg:x="14294" fg:w="55"/><text x="14.2870%" y="735.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="14.0370%" y="709" width="0.0540%" height="15" fill="rgb(207,226,32)" fg:x="14294" fg:w="55"/><text x="14.2870%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (55 samples, 0.05%)</title><rect x="14.0370%" y="693" width="0.0540%" height="15" fill="rgb(222,207,47)" fg:x="14294" fg:w="55"/><text x="14.2870%" y="703.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.05%)</title><rect x="14.0370%" y="677" width="0.0540%" height="15" fill="rgb(229,115,45)" fg:x="14294" fg:w="55"/><text x="14.2870%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (55 samples, 0.05%)</title><rect x="14.0370%" y="661" width="0.0540%" height="15" fill="rgb(224,191,6)" fg:x="14294" fg:w="55"/><text x="14.2870%" y="671.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.02%)</title><rect x="14.1254%" y="613" width="0.0177%" height="15" fill="rgb(230,227,24)" fg:x="14384" fg:w="18"/><text x="14.3754%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (25 samples, 0.02%)</title><rect x="14.1214%" y="629" width="0.0246%" height="15" fill="rgb(228,80,19)" fg:x="14380" fg:w="25"/><text x="14.3714%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (43 samples, 0.04%)</title><rect x="14.1126%" y="693" width="0.0422%" height="15" fill="rgb(247,229,0)" fg:x="14371" fg:w="43"/><text x="14.3626%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (43 samples, 0.04%)</title><rect x="14.1126%" y="677" width="0.0422%" height="15" fill="rgb(237,194,15)" fg:x="14371" fg:w="43"/><text x="14.3626%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (43 samples, 0.04%)</title><rect x="14.1126%" y="661" width="0.0422%" height="15" fill="rgb(219,203,20)" fg:x="14371" fg:w="43"/><text x="14.3626%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (43 samples, 0.04%)</title><rect x="14.1126%" y="645" width="0.0422%" height="15" fill="rgb(234,128,8)" fg:x="14371" fg:w="43"/><text x="14.3626%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (71 samples, 0.07%)</title><rect x="14.1038%" y="709" width="0.0697%" height="15" fill="rgb(248,202,8)" fg:x="14362" fg:w="71"/><text x="14.3538%" y="719.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="14.1548%" y="693" width="0.0187%" height="15" fill="rgb(206,104,37)" fg:x="14414" fg:w="19"/><text x="14.4048%" y="703.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (88 samples, 0.09%)</title><rect x="14.0949%" y="725" width="0.0864%" height="15" fill="rgb(223,8,27)" fg:x="14353" fg:w="88"/><text x="14.3449%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.03%)</title><rect x="14.2029%" y="629" width="0.0275%" height="15" fill="rgb(216,217,28)" fg:x="14463" fg:w="28"/><text x="14.4529%" y="639.50"></text></g><g><title>__GI___libc_malloc (24 samples, 0.02%)</title><rect x="14.2069%" y="613" width="0.0236%" height="15" fill="rgb(249,199,1)" fg:x="14467" fg:w="24"/><text x="14.4569%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (51 samples, 0.05%)</title><rect x="14.1941%" y="645" width="0.0501%" height="15" fill="rgb(240,85,17)" fg:x="14454" fg:w="51"/><text x="14.4441%" y="655.50"></text></g><g><title>core::cmp::max (11 samples, 0.01%)</title><rect x="14.2334%" y="629" width="0.0108%" height="15" fill="rgb(206,108,45)" fg:x="14494" fg:w="11"/><text x="14.4834%" y="639.50"></text></g><g><title>core::cmp::Ord::max (11 samples, 0.01%)</title><rect x="14.2334%" y="613" width="0.0108%" height="15" fill="rgb(245,210,41)" fg:x="14494" fg:w="11"/><text x="14.4834%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (57 samples, 0.06%)</title><rect x="14.1902%" y="693" width="0.0560%" height="15" fill="rgb(206,13,37)" fg:x="14450" fg:w="57"/><text x="14.4402%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (57 samples, 0.06%)</title><rect x="14.1902%" y="677" width="0.0560%" height="15" fill="rgb(250,61,18)" fg:x="14450" fg:w="57"/><text x="14.4402%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (53 samples, 0.05%)</title><rect x="14.1941%" y="661" width="0.0520%" height="15" fill="rgb(235,172,48)" fg:x="14454" fg:w="53"/><text x="14.4441%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (67 samples, 0.07%)</title><rect x="14.1872%" y="709" width="0.0658%" height="15" fill="rgb(249,201,17)" fg:x="14447" fg:w="67"/><text x="14.4372%" y="719.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (84 samples, 0.08%)</title><rect x="14.1813%" y="725" width="0.0825%" height="15" fill="rgb(219,208,6)" fg:x="14441" fg:w="84"/><text x="14.4313%" y="735.50"></text></g><g><title>engine::engine::world::TileEntityMap::get (47 samples, 0.05%)</title><rect x="14.2638%" y="725" width="0.0462%" height="15" fill="rgb(248,31,23)" fg:x="14525" fg:w="47"/><text x="14.5138%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (12 samples, 0.01%)</title><rect x="14.2982%" y="709" width="0.0118%" height="15" fill="rgb(245,15,42)" fg:x="14560" fg:w="12"/><text x="14.5482%" y="719.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::neighbors_except_entities (800 samples, 0.79%)</title><rect x="13.6137%" y="741" width="0.7856%" height="15" fill="rgb(222,217,39)" fg:x="13863" fg:w="800"/><text x="13.8637%" y="751.50"></text></g><g><title>engine::engine::world::TileWeightMap::get (91 samples, 0.09%)</title><rect x="14.3100%" y="725" width="0.0894%" height="15" fill="rgb(210,219,27)" fg:x="14572" fg:w="91"/><text x="14.5600%" y="735.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::get_path_around_entities::{{closure}} (842 samples, 0.83%)</title><rect x="13.6128%" y="757" width="0.8269%" height="15" fill="rgb(252,166,36)" fg:x="13862" fg:w="842"/><text x="13.8628%" y="767.50"></text></g><g><title>engine::engine::world::Position::diagonal_distance (41 samples, 0.04%)</title><rect x="14.3993%" y="741" width="0.0403%" height="15" fill="rgb(245,132,34)" fg:x="14663" fg:w="41"/><text x="14.6493%" y="751.50"></text></g><g><title>pathfinding::utils::absdiff (18 samples, 0.02%)</title><rect x="14.4219%" y="725" width="0.0177%" height="15" fill="rgb(236,54,3)" fg:x="14686" fg:w="18"/><text x="14.6719%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (17 samples, 0.02%)</title><rect x="14.4229%" y="709" width="0.0167%" height="15" fill="rgb(241,173,43)" fg:x="14687" fg:w="17"/><text x="14.6729%" y="719.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u32 (19 samples, 0.02%)</title><rect x="14.4416%" y="693" width="0.0187%" height="15" fill="rgb(215,190,9)" fg:x="14706" fg:w="19"/><text x="14.6916%" y="703.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (15 samples, 0.01%)</title><rect x="14.4455%" y="677" width="0.0147%" height="15" fill="rgb(242,101,16)" fg:x="14710" fg:w="15"/><text x="14.6955%" y="687.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (24 samples, 0.02%)</title><rect x="14.4416%" y="741" width="0.0236%" height="15" fill="rgb(223,190,21)" fg:x="14706" fg:w="24"/><text x="14.6916%" y="751.50"></text></g><g><title>&lt;engine::engine::world::Position as core::hash::Hash&gt;::hash (24 samples, 0.02%)</title><rect x="14.4416%" y="725" width="0.0236%" height="15" fill="rgb(215,228,25)" fg:x="14706" fg:w="24"/><text x="14.6916%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (24 samples, 0.02%)</title><rect x="14.4416%" y="709" width="0.0236%" height="15" fill="rgb(225,36,22)" fg:x="14706" fg:w="24"/><text x="14.6916%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="14.5879%" y="677" width="0.0196%" height="15" fill="rgb(251,106,46)" fg:x="14855" fg:w="20"/><text x="14.8379%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.05%)</title><rect x="14.5712%" y="693" width="0.0520%" height="15" fill="rgb(208,90,1)" fg:x="14838" fg:w="53"/><text x="14.8212%" y="703.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (14 samples, 0.01%)</title><rect x="14.6095%" y="677" width="0.0137%" height="15" fill="rgb(243,10,4)" fg:x="14877" fg:w="14"/><text x="14.8595%" y="687.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (14 samples, 0.01%)</title><rect x="14.6095%" y="661" width="0.0137%" height="15" fill="rgb(212,137,27)" fg:x="14877" fg:w="14"/><text x="14.8595%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (14 samples, 0.01%)</title><rect x="14.6095%" y="645" width="0.0137%" height="15" fill="rgb(231,220,49)" fg:x="14877" fg:w="14"/><text x="14.8595%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.06%)</title><rect x="14.5712%" y="709" width="0.0570%" height="15" fill="rgb(237,96,20)" fg:x="14838" fg:w="58"/><text x="14.8212%" y="719.50"></text></g><g><title>hashbrown::raw::inner::h2 (14 samples, 0.01%)</title><rect x="14.6419%" y="661" width="0.0137%" height="15" fill="rgb(239,229,30)" fg:x="14910" fg:w="14"/><text x="14.8919%" y="671.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (20 samples, 0.02%)</title><rect x="14.6557%" y="661" width="0.0196%" height="15" fill="rgb(219,65,33)" fg:x="14924" fg:w="20"/><text x="14.9057%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (20 samples, 0.02%)</title><rect x="14.6557%" y="645" width="0.0196%" height="15" fill="rgb(243,134,7)" fg:x="14924" fg:w="20"/><text x="14.9057%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.02%)</title><rect x="14.6557%" y="629" width="0.0196%" height="15" fill="rgb(216,177,54)" fg:x="14924" fg:w="20"/><text x="14.9057%" y="639.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (62 samples, 0.06%)</title><rect x="14.6282%" y="709" width="0.0609%" height="15" fill="rgb(211,160,20)" fg:x="14896" fg:w="62"/><text x="14.8782%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (62 samples, 0.06%)</title><rect x="14.6282%" y="693" width="0.0609%" height="15" fill="rgb(239,85,39)" fg:x="14896" fg:w="62"/><text x="14.8782%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (62 samples, 0.06%)</title><rect x="14.6282%" y="677" width="0.0609%" height="15" fill="rgb(232,125,22)" fg:x="14896" fg:w="62"/><text x="14.8782%" y="687.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (14 samples, 0.01%)</title><rect x="14.6753%" y="661" width="0.0137%" height="15" fill="rgb(244,57,34)" fg:x="14944" fg:w="14"/><text x="14.9253%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (14 samples, 0.01%)</title><rect x="14.6753%" y="645" width="0.0137%" height="15" fill="rgb(214,203,32)" fg:x="14944" fg:w="14"/><text x="14.9253%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (14 samples, 0.01%)</title><rect x="14.6753%" y="629" width="0.0137%" height="15" fill="rgb(207,58,43)" fg:x="14944" fg:w="14"/><text x="14.9253%" y="639.50"></text></g><g><title>core::core_arch::simd::i8x16::new (14 samples, 0.01%)</title><rect x="14.6753%" y="613" width="0.0137%" height="15" fill="rgb(215,193,15)" fg:x="14944" fg:w="14"/><text x="14.9253%" y="623.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (264 samples, 0.26%)</title><rect x="14.4966%" y="725" width="0.2593%" height="15" fill="rgb(232,15,44)" fg:x="14762" fg:w="264"/><text x="14.7466%" y="735.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (68 samples, 0.07%)</title><rect x="14.6890%" y="709" width="0.0668%" height="15" fill="rgb(212,3,48)" fg:x="14958" fg:w="68"/><text x="14.9390%" y="719.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (61 samples, 0.06%)</title><rect x="14.6959%" y="693" width="0.0599%" height="15" fill="rgb(218,128,7)" fg:x="14965" fg:w="61"/><text x="14.9459%" y="703.50"></text></g><g><title>&lt;engine::engine::world::Position as core::cmp::PartialEq&gt;::eq (51 samples, 0.05%)</title><rect x="14.7057%" y="677" width="0.0501%" height="15" fill="rgb(226,216,39)" fg:x="14975" fg:w="51"/><text x="14.9557%" y="687.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (323 samples, 0.32%)</title><rect x="14.4396%" y="757" width="0.3172%" height="15" fill="rgb(243,47,51)" fg:x="14704" fg:w="323"/><text x="14.6896%" y="767.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (297 samples, 0.29%)</title><rect x="14.4651%" y="741" width="0.2917%" height="15" fill="rgb(241,183,40)" fg:x="14730" fg:w="297"/><text x="14.7151%" y="751.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (15 samples, 0.01%)</title><rect x="14.8138%" y="629" width="0.0147%" height="15" fill="rgb(231,217,32)" fg:x="15085" fg:w="15"/><text x="15.0638%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (15 samples, 0.01%)</title><rect x="14.8138%" y="613" width="0.0147%" height="15" fill="rgb(229,61,38)" fg:x="15085" fg:w="15"/><text x="15.0638%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="14.8138%" y="597" width="0.0147%" height="15" fill="rgb(225,210,5)" fg:x="15085" fg:w="15"/><text x="15.0638%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (37 samples, 0.04%)</title><rect x="14.7980%" y="645" width="0.0363%" height="15" fill="rgb(231,79,45)" fg:x="15069" fg:w="37"/><text x="15.0480%" y="655.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (41 samples, 0.04%)</title><rect x="14.7980%" y="661" width="0.0403%" height="15" fill="rgb(224,100,7)" fg:x="15069" fg:w="41"/><text x="15.0480%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (63 samples, 0.06%)</title><rect x="14.7853%" y="709" width="0.0619%" height="15" fill="rgb(241,198,18)" fg:x="15056" fg:w="63"/><text x="15.0353%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (63 samples, 0.06%)</title><rect x="14.7853%" y="693" width="0.0619%" height="15" fill="rgb(252,97,53)" fg:x="15056" fg:w="63"/><text x="15.0353%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (62 samples, 0.06%)</title><rect x="14.7863%" y="677" width="0.0609%" height="15" fill="rgb(220,88,7)" fg:x="15057" fg:w="62"/><text x="15.0363%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (23 samples, 0.02%)</title><rect x="14.8471%" y="709" width="0.0226%" height="15" fill="rgb(213,176,14)" fg:x="15119" fg:w="23"/><text x="15.0971%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (98 samples, 0.10%)</title><rect x="14.7755%" y="725" width="0.0962%" height="15" fill="rgb(246,73,7)" fg:x="15046" fg:w="98"/><text x="15.0255%" y="735.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (121 samples, 0.12%)</title><rect x="14.7617%" y="757" width="0.1188%" height="15" fill="rgb(245,64,36)" fg:x="15032" fg:w="121"/><text x="15.0117%" y="767.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (112 samples, 0.11%)</title><rect x="14.7706%" y="741" width="0.1100%" height="15" fill="rgb(245,80,10)" fg:x="15041" fg:w="112"/><text x="15.0206%" y="751.50"></text></g><g><title>indexmap::map::core::raw::OccupiedEntry&lt;K,V&gt;::get (17 samples, 0.02%)</title><rect x="14.8805%" y="757" width="0.0167%" height="15" fill="rgb(232,107,50)" fg:x="15153" fg:w="17"/><text x="15.1305%" y="767.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::local_avoidance (1,782 samples, 1.75%)</title><rect x="13.1522%" y="805" width="1.7500%" height="15" fill="rgb(253,3,0)" fg:x="13393" fg:w="1782"/><text x="13.4022%" y="815.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::get_path_around_entities (1,779 samples, 1.75%)</title><rect x="13.1551%" y="789" width="1.7470%" height="15" fill="rgb(212,99,53)" fg:x="13396" fg:w="1779"/><text x="13.4051%" y="799.50"></text></g><g><title>pathfinding::directed::astar::astar (1,778 samples, 1.75%)</title><rect x="13.1561%" y="773" width="1.7460%" height="15" fill="rgb(249,111,54)" fg:x="13397" fg:w="1778"/><text x="13.4061%" y="783.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="14.9051%" y="789" width="0.0108%" height="15" fill="rgb(249,55,30)" fg:x="15178" fg:w="11"/><text x="15.1551%" y="799.50"></text></g><g><title>engine::engine::actor::unfreeze (18 samples, 0.02%)</title><rect x="14.9041%" y="805" width="0.0177%" height="15" fill="rgb(237,47,42)" fg:x="15177" fg:w="18"/><text x="15.1541%" y="815.50"></text></g><g><title>engine::engine::render::camera_movement::camera_movement (17 samples, 0.02%)</title><rect x="14.9218%" y="805" width="0.0167%" height="15" fill="rgb(211,20,18)" fg:x="15195" fg:w="17"/><text x="15.1718%" y="815.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (2,379 samples, 2.34%)</title><rect x="12.6131%" y="853" width="2.3362%" height="15" fill="rgb(231,203,46)" fg:x="12844" fg:w="2379"/><text x="12.8631%" y="863.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,353 samples, 2.31%)</title><rect x="12.6386%" y="837" width="2.3107%" height="15" fill="rgb(237,142,3)" fg:x="12870" fg:w="2353"/><text x="12.8886%" y="847.50">c..</text></g><g><title>core::ops::function::Fn::call (2,352 samples, 2.31%)</title><rect x="12.6396%" y="821" width="2.3097%" height="15" fill="rgb(241,107,1)" fg:x="12871" fg:w="2352"/><text x="12.8896%" y="831.50">c..</text></g><g><title>engine::engine::world::time::advance_time (11 samples, 0.01%)</title><rect x="14.9385%" y="805" width="0.0108%" height="15" fill="rgb(229,83,13)" fg:x="15212" fg:w="11"/><text x="15.1885%" y="815.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (18 samples, 0.02%)</title><rect x="14.9601%" y="821" width="0.0177%" height="15" fill="rgb(241,91,40)" fg:x="15234" fg:w="18"/><text x="15.2101%" y="831.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (15 samples, 0.01%)</title><rect x="14.9630%" y="805" width="0.0147%" height="15" fill="rgb(225,3,45)" fg:x="15237" fg:w="15"/><text x="15.2130%" y="815.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (30 samples, 0.03%)</title><rect x="14.9493%" y="837" width="0.0295%" height="15" fill="rgb(244,223,14)" fg:x="15223" fg:w="30"/><text x="15.1993%" y="847.50"></text></g><g><title>bevy_render::mesh::mesh::mesh_resource_provider_system (13 samples, 0.01%)</title><rect x="15.0219%" y="789" width="0.0128%" height="15" fill="rgb(224,124,37)" fg:x="15297" fg:w="13"/><text x="15.2719%" y="799.50"></text></g><g><title>bevy_render::mesh::mesh::mesh_resource_provider_system (29 samples, 0.03%)</title><rect x="15.0092%" y="805" width="0.0285%" height="15" fill="rgb(251,171,30)" fg:x="15284" fg:w="29"/><text x="15.2592%" y="815.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (21 samples, 0.02%)</title><rect x="15.1624%" y="773" width="0.0206%" height="15" fill="rgb(236,46,54)" fg:x="15440" fg:w="21"/><text x="15.4124%" y="783.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (19 samples, 0.02%)</title><rect x="15.1643%" y="757" width="0.0187%" height="15" fill="rgb(245,213,5)" fg:x="15442" fg:w="19"/><text x="15.4143%" y="767.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="15.1555%" y="789" width="0.0304%" height="15" fill="rgb(230,144,27)" fg:x="15433" fg:w="31"/><text x="15.4055%" y="799.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (11 samples, 0.01%)</title><rect x="15.1909%" y="773" width="0.0108%" height="15" fill="rgb(220,86,6)" fg:x="15469" fg:w="11"/><text x="15.4409%" y="783.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (11 samples, 0.01%)</title><rect x="15.1909%" y="757" width="0.0108%" height="15" fill="rgb(240,20,13)" fg:x="15469" fg:w="11"/><text x="15.4409%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (16 samples, 0.02%)</title><rect x="15.2066%" y="645" width="0.0157%" height="15" fill="rgb(217,89,34)" fg:x="15485" fg:w="16"/><text x="15.4566%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (16 samples, 0.02%)</title><rect x="15.2066%" y="629" width="0.0157%" height="15" fill="rgb(229,13,5)" fg:x="15485" fg:w="16"/><text x="15.4566%" y="639.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (16 samples, 0.02%)</title><rect x="15.2066%" y="613" width="0.0157%" height="15" fill="rgb(244,67,35)" fg:x="15485" fg:w="16"/><text x="15.4566%" y="623.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (12 samples, 0.01%)</title><rect x="15.2105%" y="597" width="0.0118%" height="15" fill="rgb(221,40,2)" fg:x="15489" fg:w="12"/><text x="15.4605%" y="607.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="15.2066%" y="693" width="0.0177%" height="15" fill="rgb(237,157,21)" fg:x="15485" fg:w="18"/><text x="15.4566%" y="703.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (18 samples, 0.02%)</title><rect x="15.2066%" y="677" width="0.0177%" height="15" fill="rgb(222,94,11)" fg:x="15485" fg:w="18"/><text x="15.4566%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (18 samples, 0.02%)</title><rect x="15.2066%" y="661" width="0.0177%" height="15" fill="rgb(249,113,6)" fg:x="15485" fg:w="18"/><text x="15.4566%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (25 samples, 0.02%)</title><rect x="15.2017%" y="725" width="0.0246%" height="15" fill="rgb(238,137,36)" fg:x="15480" fg:w="25"/><text x="15.4517%" y="735.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="15.2066%" y="709" width="0.0196%" height="15" fill="rgb(210,102,26)" fg:x="15485" fg:w="20"/><text x="15.4566%" y="719.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (54 samples, 0.05%)</title><rect x="15.1909%" y="789" width="0.0530%" height="15" fill="rgb(218,30,30)" fg:x="15469" fg:w="54"/><text x="15.4409%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (43 samples, 0.04%)</title><rect x="15.2017%" y="773" width="0.0422%" height="15" fill="rgb(214,67,26)" fg:x="15480" fg:w="43"/><text x="15.4517%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (43 samples, 0.04%)</title><rect x="15.2017%" y="757" width="0.0422%" height="15" fill="rgb(251,9,53)" fg:x="15480" fg:w="43"/><text x="15.4517%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (43 samples, 0.04%)</title><rect x="15.2017%" y="741" width="0.0422%" height="15" fill="rgb(228,204,25)" fg:x="15480" fg:w="43"/><text x="15.4517%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.02%)</title><rect x="15.2262%" y="725" width="0.0177%" height="15" fill="rgb(207,153,8)" fg:x="15505" fg:w="18"/><text x="15.4762%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.02%)</title><rect x="15.2272%" y="709" width="0.0167%" height="15" fill="rgb(242,9,16)" fg:x="15506" fg:w="17"/><text x="15.4772%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="15.2871%" y="757" width="0.0118%" height="15" fill="rgb(217,211,10)" fg:x="15567" fg:w="12"/><text x="15.5371%" y="767.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="15.2871%" y="741" width="0.0118%" height="15" fill="rgb(219,228,52)" fg:x="15567" fg:w="12"/><text x="15.5371%" y="751.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="15.2871%" y="725" width="0.0118%" height="15" fill="rgb(231,92,29)" fg:x="15567" fg:w="12"/><text x="15.5371%" y="735.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="15.2871%" y="709" width="0.0118%" height="15" fill="rgb(232,8,23)" fg:x="15567" fg:w="12"/><text x="15.5371%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="15.2871%" y="693" width="0.0118%" height="15" fill="rgb(216,211,34)" fg:x="15567" fg:w="12"/><text x="15.5371%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="15.2871%" y="677" width="0.0118%" height="15" fill="rgb(236,151,0)" fg:x="15567" fg:w="12"/><text x="15.5371%" y="687.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (36 samples, 0.04%)</title><rect x="15.3008%" y="741" width="0.0354%" height="15" fill="rgb(209,168,3)" fg:x="15581" fg:w="36"/><text x="15.5508%" y="751.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (36 samples, 0.04%)</title><rect x="15.3008%" y="725" width="0.0354%" height="15" fill="rgb(208,129,28)" fg:x="15581" fg:w="36"/><text x="15.5508%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.01%)</title><rect x="15.3362%" y="693" width="0.0128%" height="15" fill="rgb(229,78,22)" fg:x="15617" fg:w="13"/><text x="15.5862%" y="703.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (11 samples, 0.01%)</title><rect x="15.3529%" y="645" width="0.0108%" height="15" fill="rgb(228,187,13)" fg:x="15634" fg:w="11"/><text x="15.6029%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (16 samples, 0.02%)</title><rect x="15.3529%" y="661" width="0.0157%" height="15" fill="rgb(240,119,24)" fg:x="15634" fg:w="16"/><text x="15.6029%" y="671.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (76 samples, 0.07%)</title><rect x="15.3008%" y="757" width="0.0746%" height="15" fill="rgb(209,194,42)" fg:x="15581" fg:w="76"/><text x="15.5508%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (40 samples, 0.04%)</title><rect x="15.3362%" y="741" width="0.0393%" height="15" fill="rgb(247,200,46)" fg:x="15617" fg:w="40"/><text x="15.5862%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (40 samples, 0.04%)</title><rect x="15.3362%" y="725" width="0.0393%" height="15" fill="rgb(218,76,16)" fg:x="15617" fg:w="40"/><text x="15.5862%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (40 samples, 0.04%)</title><rect x="15.3362%" y="709" width="0.0393%" height="15" fill="rgb(225,21,48)" fg:x="15617" fg:w="40"/><text x="15.5862%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (27 samples, 0.03%)</title><rect x="15.3490%" y="693" width="0.0265%" height="15" fill="rgb(239,223,50)" fg:x="15630" fg:w="27"/><text x="15.5990%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (27 samples, 0.03%)</title><rect x="15.3490%" y="677" width="0.0265%" height="15" fill="rgb(244,45,21)" fg:x="15630" fg:w="27"/><text x="15.5990%" y="687.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (57 samples, 0.06%)</title><rect x="15.3755%" y="741" width="0.0560%" height="15" fill="rgb(232,33,43)" fg:x="15657" fg:w="57"/><text x="15.6255%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (53 samples, 0.05%)</title><rect x="15.3794%" y="725" width="0.0520%" height="15" fill="rgb(209,8,3)" fg:x="15661" fg:w="53"/><text x="15.6294%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (53 samples, 0.05%)</title><rect x="15.3794%" y="709" width="0.0520%" height="15" fill="rgb(214,25,53)" fg:x="15661" fg:w="53"/><text x="15.6294%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (53 samples, 0.05%)</title><rect x="15.3794%" y="693" width="0.0520%" height="15" fill="rgb(254,186,54)" fg:x="15661" fg:w="53"/><text x="15.6294%" y="703.50"></text></g><g><title>bevy_render::draw::Draw::set_bind_group (59 samples, 0.06%)</title><rect x="15.3755%" y="757" width="0.0579%" height="15" fill="rgb(208,174,49)" fg:x="15657" fg:w="59"/><text x="15.6255%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (11 samples, 0.01%)</title><rect x="15.5090%" y="597" width="0.0108%" height="15" fill="rgb(233,191,51)" fg:x="15793" fg:w="11"/><text x="15.7590%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="15.5090%" y="581" width="0.0108%" height="15" fill="rgb(222,134,10)" fg:x="15793" fg:w="11"/><text x="15.7590%" y="591.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (74 samples, 0.07%)</title><rect x="15.4491%" y="661" width="0.0727%" height="15" fill="rgb(230,226,20)" fg:x="15732" fg:w="74"/><text x="15.6991%" y="671.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="15.5090%" y="645" width="0.0128%" height="15" fill="rgb(251,111,25)" fg:x="15793" fg:w="13"/><text x="15.7590%" y="655.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (13 samples, 0.01%)</title><rect x="15.5090%" y="629" width="0.0128%" height="15" fill="rgb(224,40,46)" fg:x="15793" fg:w="13"/><text x="15.7590%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (13 samples, 0.01%)</title><rect x="15.5090%" y="613" width="0.0128%" height="15" fill="rgb(236,108,47)" fg:x="15793" fg:w="13"/><text x="15.7590%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (89 samples, 0.09%)</title><rect x="15.4403%" y="693" width="0.0874%" height="15" fill="rgb(234,93,0)" fg:x="15723" fg:w="89"/><text x="15.6903%" y="703.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (80 samples, 0.08%)</title><rect x="15.4491%" y="677" width="0.0786%" height="15" fill="rgb(224,213,32)" fg:x="15732" fg:w="80"/><text x="15.6991%" y="687.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (87 samples, 0.09%)</title><rect x="15.5463%" y="629" width="0.0854%" height="15" fill="rgb(251,11,48)" fg:x="15831" fg:w="87"/><text x="15.7963%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (95 samples, 0.09%)</title><rect x="15.5463%" y="661" width="0.0933%" height="15" fill="rgb(236,173,5)" fg:x="15831" fg:w="95"/><text x="15.7963%" y="671.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (95 samples, 0.09%)</title><rect x="15.5463%" y="645" width="0.0933%" height="15" fill="rgb(230,95,12)" fg:x="15831" fg:w="95"/><text x="15.7963%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (15 samples, 0.01%)</title><rect x="15.6436%" y="613" width="0.0147%" height="15" fill="rgb(232,209,1)" fg:x="15930" fg:w="15"/><text x="15.8936%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (15 samples, 0.01%)</title><rect x="15.6436%" y="597" width="0.0147%" height="15" fill="rgb(232,6,1)" fg:x="15930" fg:w="15"/><text x="15.8936%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="15.6436%" y="581" width="0.0147%" height="15" fill="rgb(210,224,50)" fg:x="15930" fg:w="15"/><text x="15.8936%" y="591.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_mut_untyped (229 samples, 0.22%)</title><rect x="15.4344%" y="757" width="0.2249%" height="15" fill="rgb(228,127,35)" fg:x="15717" fg:w="229"/><text x="15.6844%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (229 samples, 0.22%)</title><rect x="15.4344%" y="741" width="0.2249%" height="15" fill="rgb(245,102,45)" fg:x="15717" fg:w="229"/><text x="15.6844%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (229 samples, 0.22%)</title><rect x="15.4344%" y="725" width="0.2249%" height="15" fill="rgb(214,1,49)" fg:x="15717" fg:w="229"/><text x="15.6844%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (223 samples, 0.22%)</title><rect x="15.4403%" y="709" width="0.2190%" height="15" fill="rgb(226,163,40)" fg:x="15723" fg:w="223"/><text x="15.6903%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (134 samples, 0.13%)</title><rect x="15.5277%" y="693" width="0.1316%" height="15" fill="rgb(239,212,28)" fg:x="15812" fg:w="134"/><text x="15.7777%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (130 samples, 0.13%)</title><rect x="15.5316%" y="677" width="0.1277%" height="15" fill="rgb(220,20,13)" fg:x="15816" fg:w="130"/><text x="15.7816%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (17 samples, 0.02%)</title><rect x="15.6426%" y="661" width="0.0167%" height="15" fill="rgb(210,164,35)" fg:x="15929" fg:w="17"/><text x="15.8926%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (17 samples, 0.02%)</title><rect x="15.6426%" y="645" width="0.0167%" height="15" fill="rgb(248,109,41)" fg:x="15929" fg:w="17"/><text x="15.8926%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (17 samples, 0.02%)</title><rect x="15.6426%" y="629" width="0.0167%" height="15" fill="rgb(238,23,50)" fg:x="15929" fg:w="17"/><text x="15.8926%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (52 samples, 0.05%)</title><rect x="15.6691%" y="645" width="0.0511%" height="15" fill="rgb(211,48,49)" fg:x="15956" fg:w="52"/><text x="15.9191%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (52 samples, 0.05%)</title><rect x="15.6691%" y="629" width="0.0511%" height="15" fill="rgb(223,36,21)" fg:x="15956" fg:w="52"/><text x="15.9191%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (64 samples, 0.06%)</title><rect x="15.6593%" y="661" width="0.0628%" height="15" fill="rgb(207,123,46)" fg:x="15946" fg:w="64"/><text x="15.9093%" y="671.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::iter_assets (76 samples, 0.07%)</title><rect x="15.6593%" y="757" width="0.0746%" height="15" fill="rgb(240,218,32)" fg:x="15946" fg:w="76"/><text x="15.9093%" y="767.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (76 samples, 0.07%)</title><rect x="15.6593%" y="741" width="0.0746%" height="15" fill="rgb(252,5,43)" fg:x="15946" fg:w="76"/><text x="15.9093%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (76 samples, 0.07%)</title><rect x="15.6593%" y="725" width="0.0746%" height="15" fill="rgb(252,84,19)" fg:x="15946" fg:w="76"/><text x="15.9093%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (76 samples, 0.07%)</title><rect x="15.6593%" y="709" width="0.0746%" height="15" fill="rgb(243,152,39)" fg:x="15946" fg:w="76"/><text x="15.9093%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (76 samples, 0.07%)</title><rect x="15.6593%" y="693" width="0.0746%" height="15" fill="rgb(234,160,15)" fg:x="15946" fg:w="76"/><text x="15.9093%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (76 samples, 0.07%)</title><rect x="15.6593%" y="677" width="0.0746%" height="15" fill="rgb(237,34,20)" fg:x="15946" fg:w="76"/><text x="15.9093%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId,bevy_wgpu::wgpu_resources::WgpuBindGroupInfo,ahash::random_state::RandomState&gt;&gt;&gt; (24 samples, 0.02%)</title><rect x="15.7486%" y="709" width="0.0236%" height="15" fill="rgb(229,97,13)" fg:x="16037" fg:w="24"/><text x="15.9986%" y="719.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (24 samples, 0.02%)</title><rect x="15.7486%" y="693" width="0.0236%" height="15" fill="rgb(234,71,50)" fg:x="16037" fg:w="24"/><text x="15.9986%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (24 samples, 0.02%)</title><rect x="15.7486%" y="677" width="0.0236%" height="15" fill="rgb(253,155,4)" fg:x="16037" fg:w="24"/><text x="15.9986%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (23 samples, 0.02%)</title><rect x="15.7496%" y="661" width="0.0226%" height="15" fill="rgb(222,185,37)" fg:x="16038" fg:w="23"/><text x="15.9996%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (23 samples, 0.02%)</title><rect x="15.7496%" y="645" width="0.0226%" height="15" fill="rgb(251,177,13)" fg:x="16038" fg:w="23"/><text x="15.9996%" y="655.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (22 samples, 0.02%)</title><rect x="15.7722%" y="709" width="0.0216%" height="15" fill="rgb(250,179,40)" fg:x="16061" fg:w="22"/><text x="16.0222%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (22 samples, 0.02%)</title><rect x="15.7722%" y="693" width="0.0216%" height="15" fill="rgb(242,44,2)" fg:x="16061" fg:w="22"/><text x="16.0222%" y="703.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (22 samples, 0.02%)</title><rect x="15.7722%" y="677" width="0.0216%" height="15" fill="rgb(216,177,13)" fg:x="16061" fg:w="22"/><text x="16.0222%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (22 samples, 0.02%)</title><rect x="15.7722%" y="661" width="0.0216%" height="15" fill="rgb(216,106,43)" fg:x="16061" fg:w="22"/><text x="16.0222%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (22 samples, 0.02%)</title><rect x="15.7722%" y="645" width="0.0216%" height="15" fill="rgb(216,183,2)" fg:x="16061" fg:w="22"/><text x="16.0222%" y="655.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (71 samples, 0.07%)</title><rect x="15.7428%" y="741" width="0.0697%" height="15" fill="rgb(249,75,3)" fg:x="16031" fg:w="71"/><text x="15.9928%" y="751.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (69 samples, 0.07%)</title><rect x="15.7447%" y="725" width="0.0678%" height="15" fill="rgb(219,67,39)" fg:x="16033" fg:w="69"/><text x="15.9947%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (19 samples, 0.02%)</title><rect x="15.7938%" y="709" width="0.0187%" height="15" fill="rgb(253,228,2)" fg:x="16083" fg:w="19"/><text x="16.0438%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (19 samples, 0.02%)</title><rect x="15.7938%" y="693" width="0.0187%" height="15" fill="rgb(235,138,27)" fg:x="16083" fg:w="19"/><text x="16.0438%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (19 samples, 0.02%)</title><rect x="15.7938%" y="677" width="0.0187%" height="15" fill="rgb(236,97,51)" fg:x="16083" fg:w="19"/><text x="16.0438%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.01%)</title><rect x="15.7977%" y="661" width="0.0147%" height="15" fill="rgb(240,80,30)" fg:x="16087" fg:w="15"/><text x="16.0477%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.01%)</title><rect x="15.7987%" y="645" width="0.0137%" height="15" fill="rgb(230,178,19)" fg:x="16088" fg:w="14"/><text x="16.0487%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (39 samples, 0.04%)</title><rect x="15.8802%" y="597" width="0.0383%" height="15" fill="rgb(210,190,27)" fg:x="16171" fg:w="39"/><text x="16.1302%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (39 samples, 0.04%)</title><rect x="15.8802%" y="581" width="0.0383%" height="15" fill="rgb(222,107,31)" fg:x="16171" fg:w="39"/><text x="16.1302%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.04%)</title><rect x="15.8802%" y="565" width="0.0383%" height="15" fill="rgb(216,127,34)" fg:x="16171" fg:w="39"/><text x="16.1302%" y="575.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get_bind_group (109 samples, 0.11%)</title><rect x="15.8125%" y="741" width="0.1070%" height="15" fill="rgb(234,116,52)" fg:x="16102" fg:w="109"/><text x="16.0625%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (109 samples, 0.11%)</title><rect x="15.8125%" y="725" width="0.1070%" height="15" fill="rgb(222,124,15)" fg:x="16102" fg:w="109"/><text x="16.0625%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (109 samples, 0.11%)</title><rect x="15.8125%" y="709" width="0.1070%" height="15" fill="rgb(231,179,28)" fg:x="16102" fg:w="109"/><text x="16.0625%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (109 samples, 0.11%)</title><rect x="15.8125%" y="693" width="0.1070%" height="15" fill="rgb(226,93,45)" fg:x="16102" fg:w="109"/><text x="16.0625%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (108 samples, 0.11%)</title><rect x="15.8135%" y="677" width="0.1061%" height="15" fill="rgb(215,8,51)" fg:x="16103" fg:w="108"/><text x="16.0635%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (107 samples, 0.11%)</title><rect x="15.8144%" y="661" width="0.1051%" height="15" fill="rgb(223,106,5)" fg:x="16104" fg:w="107"/><text x="16.0644%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (41 samples, 0.04%)</title><rect x="15.8793%" y="645" width="0.0403%" height="15" fill="rgb(250,191,5)" fg:x="16170" fg:w="41"/><text x="16.1293%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (41 samples, 0.04%)</title><rect x="15.8793%" y="629" width="0.0403%" height="15" fill="rgb(242,132,44)" fg:x="16170" fg:w="41"/><text x="16.1293%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (41 samples, 0.04%)</title><rect x="15.8793%" y="613" width="0.0403%" height="15" fill="rgb(251,152,29)" fg:x="16170" fg:w="41"/><text x="16.1293%" y="623.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (14 samples, 0.01%)</title><rect x="15.9333%" y="661" width="0.0137%" height="15" fill="rgb(218,179,5)" fg:x="16225" fg:w="14"/><text x="16.1833%" y="671.50"></text></g><g><title>&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="15.9470%" y="661" width="0.0128%" height="15" fill="rgb(227,67,19)" fg:x="16239" fg:w="13"/><text x="16.1970%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (11 samples, 0.01%)</title><rect x="15.9490%" y="645" width="0.0108%" height="15" fill="rgb(233,119,31)" fg:x="16241" fg:w="11"/><text x="16.1990%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (11 samples, 0.01%)</title><rect x="15.9490%" y="629" width="0.0108%" height="15" fill="rgb(241,120,22)" fg:x="16241" fg:w="11"/><text x="16.1990%" y="639.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (11 samples, 0.01%)</title><rect x="15.9490%" y="613" width="0.0108%" height="15" fill="rgb(224,102,30)" fg:x="16241" fg:w="11"/><text x="16.1990%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (80 samples, 0.08%)</title><rect x="15.9333%" y="677" width="0.0786%" height="15" fill="rgb(210,164,37)" fg:x="16225" fg:w="80"/><text x="16.1833%" y="687.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (53 samples, 0.05%)</title><rect x="15.9598%" y="661" width="0.0520%" height="15" fill="rgb(226,191,16)" fg:x="16252" fg:w="53"/><text x="16.2098%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="16.1248%" y="629" width="0.0147%" height="15" fill="rgb(214,40,45)" fg:x="16420" fg:w="15"/><text x="16.3748%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="16.1248%" y="645" width="0.0226%" height="15" fill="rgb(244,29,26)" fg:x="16420" fg:w="23"/><text x="16.3748%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (184 samples, 0.18%)</title><rect x="16.1552%" y="597" width="0.1807%" height="15" fill="rgb(216,16,5)" fg:x="16451" fg:w="184"/><text x="16.4052%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (184 samples, 0.18%)</title><rect x="16.1552%" y="581" width="0.1807%" height="15" fill="rgb(249,76,35)" fg:x="16451" fg:w="184"/><text x="16.4052%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (184 samples, 0.18%)</title><rect x="16.1552%" y="565" width="0.1807%" height="15" fill="rgb(207,11,44)" fg:x="16451" fg:w="184"/><text x="16.4052%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (417 samples, 0.41%)</title><rect x="15.9333%" y="725" width="0.4095%" height="15" fill="rgb(228,190,49)" fg:x="16225" fg:w="417"/><text x="16.1833%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (417 samples, 0.41%)</title><rect x="15.9333%" y="709" width="0.4095%" height="15" fill="rgb(214,173,12)" fg:x="16225" fg:w="417"/><text x="16.1833%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (417 samples, 0.41%)</title><rect x="15.9333%" y="693" width="0.4095%" height="15" fill="rgb(218,26,35)" fg:x="16225" fg:w="417"/><text x="16.1833%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (337 samples, 0.33%)</title><rect x="16.0118%" y="677" width="0.3309%" height="15" fill="rgb(220,200,19)" fg:x="16305" fg:w="337"/><text x="16.2618%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (328 samples, 0.32%)</title><rect x="16.0207%" y="661" width="0.3221%" height="15" fill="rgb(239,95,49)" fg:x="16314" fg:w="328"/><text x="16.2707%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (198 samples, 0.19%)</title><rect x="16.1483%" y="645" width="0.1944%" height="15" fill="rgb(235,85,53)" fg:x="16444" fg:w="198"/><text x="16.3983%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (198 samples, 0.19%)</title><rect x="16.1483%" y="629" width="0.1944%" height="15" fill="rgb(233,133,31)" fg:x="16444" fg:w="198"/><text x="16.3983%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (198 samples, 0.19%)</title><rect x="16.1483%" y="613" width="0.1944%" height="15" fill="rgb(218,25,20)" fg:x="16444" fg:w="198"/><text x="16.3983%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (64 samples, 0.06%)</title><rect x="16.3496%" y="581" width="0.0628%" height="15" fill="rgb(252,210,38)" fg:x="16649" fg:w="64"/><text x="16.5996%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (64 samples, 0.06%)</title><rect x="16.3496%" y="565" width="0.0628%" height="15" fill="rgb(242,134,21)" fg:x="16649" fg:w="64"/><text x="16.5996%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (64 samples, 0.06%)</title><rect x="16.3496%" y="549" width="0.0628%" height="15" fill="rgb(213,28,48)" fg:x="16649" fg:w="64"/><text x="16.5996%" y="559.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (693 samples, 0.68%)</title><rect x="15.7339%" y="757" width="0.6805%" height="15" fill="rgb(250,196,2)" fg:x="16022" fg:w="693"/><text x="15.9839%" y="767.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group_status (504 samples, 0.49%)</title><rect x="15.9195%" y="741" width="0.4949%" height="15" fill="rgb(227,5,17)" fg:x="16211" fg:w="504"/><text x="16.1695%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (73 samples, 0.07%)</title><rect x="16.3428%" y="725" width="0.0717%" height="15" fill="rgb(221,226,24)" fg:x="16642" fg:w="73"/><text x="16.5928%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (73 samples, 0.07%)</title><rect x="16.3428%" y="709" width="0.0717%" height="15" fill="rgb(211,5,48)" fg:x="16642" fg:w="73"/><text x="16.5928%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (73 samples, 0.07%)</title><rect x="16.3428%" y="693" width="0.0717%" height="15" fill="rgb(219,150,6)" fg:x="16642" fg:w="73"/><text x="16.5928%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (73 samples, 0.07%)</title><rect x="16.3428%" y="677" width="0.0717%" height="15" fill="rgb(251,46,16)" fg:x="16642" fg:w="73"/><text x="16.5928%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (70 samples, 0.07%)</title><rect x="16.3457%" y="661" width="0.0687%" height="15" fill="rgb(220,204,40)" fg:x="16645" fg:w="70"/><text x="16.5957%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (70 samples, 0.07%)</title><rect x="16.3457%" y="645" width="0.0687%" height="15" fill="rgb(211,85,2)" fg:x="16645" fg:w="70"/><text x="16.5957%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (70 samples, 0.07%)</title><rect x="16.3457%" y="629" width="0.0687%" height="15" fill="rgb(229,17,7)" fg:x="16645" fg:w="70"/><text x="16.5957%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (70 samples, 0.07%)</title><rect x="16.3457%" y="613" width="0.0687%" height="15" fill="rgb(239,72,28)" fg:x="16645" fg:w="70"/><text x="16.5957%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (70 samples, 0.07%)</title><rect x="16.3457%" y="597" width="0.0687%" height="15" fill="rgb(230,47,54)" fg:x="16645" fg:w="70"/><text x="16.5957%" y="607.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (1,193 samples, 1.17%)</title><rect x="15.2449%" y="789" width="1.1715%" height="15" fill="rgb(214,50,8)" fg:x="15524" fg:w="1193"/><text x="15.4949%" y="799.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (1,191 samples, 1.17%)</title><rect x="15.2468%" y="773" width="1.1696%" height="15" fill="rgb(216,198,43)" fg:x="15526" fg:w="1191"/><text x="15.4968%" y="783.50"></text></g><g><title>bevy_render::draw::Draw::set_pipeline (36 samples, 0.04%)</title><rect x="16.4253%" y="773" width="0.0354%" height="15" fill="rgb(234,20,35)" fg:x="16726" fg:w="36"/><text x="16.6753%" y="783.50"></text></g><g><title>bevy_render::draw::Draw::render_command (34 samples, 0.03%)</title><rect x="16.4272%" y="757" width="0.0334%" height="15" fill="rgb(254,45,19)" fg:x="16728" fg:w="34"/><text x="16.6772%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="16.4419%" y="741" width="0.0187%" height="15" fill="rgb(219,14,44)" fg:x="16743" fg:w="19"/><text x="16.6919%" y="751.50"></text></g><g><title>core::ptr::write (16 samples, 0.02%)</title><rect x="16.4449%" y="725" width="0.0157%" height="15" fill="rgb(217,220,26)" fg:x="16746" fg:w="16"/><text x="16.6949%" y="735.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::ShaderSpecialization as core::cmp::PartialEq&gt;::eq (15 samples, 0.01%)</title><rect x="16.4645%" y="661" width="0.0147%" height="15" fill="rgb(213,158,28)" fg:x="16766" fg:w="15"/><text x="16.7145%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (15 samples, 0.01%)</title><rect x="16.4645%" y="645" width="0.0147%" height="15" fill="rgb(252,51,52)" fg:x="16766" fg:w="15"/><text x="16.7145%" y="655.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (65 samples, 0.06%)</title><rect x="16.4999%" y="485" width="0.0638%" height="15" fill="rgb(246,89,16)" fg:x="16802" fg:w="65"/><text x="16.7499%" y="495.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (95 samples, 0.09%)</title><rect x="16.4999%" y="501" width="0.0933%" height="15" fill="rgb(216,158,49)" fg:x="16802" fg:w="95"/><text x="16.7499%" y="511.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (27 samples, 0.03%)</title><rect x="16.5667%" y="485" width="0.0265%" height="15" fill="rgb(236,107,19)" fg:x="16870" fg:w="27"/><text x="16.8167%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (27 samples, 0.03%)</title><rect x="16.5667%" y="469" width="0.0265%" height="15" fill="rgb(228,185,30)" fg:x="16870" fg:w="27"/><text x="16.8167%" y="479.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (27 samples, 0.03%)</title><rect x="16.5667%" y="453" width="0.0265%" height="15" fill="rgb(246,134,8)" fg:x="16870" fg:w="27"/><text x="16.8167%" y="463.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (27 samples, 0.03%)</title><rect x="16.5667%" y="437" width="0.0265%" height="15" fill="rgb(214,143,50)" fg:x="16870" fg:w="27"/><text x="16.8167%" y="447.50"></text></g><g><title>__memcmp_avx2_movbe (16 samples, 0.02%)</title><rect x="16.5775%" y="421" width="0.0157%" height="15" fill="rgb(228,75,8)" fg:x="16881" fg:w="16"/><text x="16.8275%" y="431.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout as core::cmp::PartialEq&gt;::eq (122 samples, 0.12%)</title><rect x="16.4793%" y="661" width="0.1198%" height="15" fill="rgb(207,175,4)" fg:x="16781" fg:w="122"/><text x="16.7293%" y="671.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (116 samples, 0.11%)</title><rect x="16.4852%" y="645" width="0.1139%" height="15" fill="rgb(205,108,24)" fg:x="16787" fg:w="116"/><text x="16.7352%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (114 samples, 0.11%)</title><rect x="16.4871%" y="629" width="0.1120%" height="15" fill="rgb(244,120,49)" fg:x="16789" fg:w="114"/><text x="16.7371%" y="639.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (114 samples, 0.11%)</title><rect x="16.4871%" y="613" width="0.1120%" height="15" fill="rgb(223,47,38)" fg:x="16789" fg:w="114"/><text x="16.7371%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (114 samples, 0.11%)</title><rect x="16.4871%" y="597" width="0.1120%" height="15" fill="rgb(229,179,11)" fg:x="16789" fg:w="114"/><text x="16.7371%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (114 samples, 0.11%)</title><rect x="16.4871%" y="581" width="0.1120%" height="15" fill="rgb(231,122,1)" fg:x="16789" fg:w="114"/><text x="16.7371%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (108 samples, 0.11%)</title><rect x="16.4930%" y="565" width="0.1061%" height="15" fill="rgb(245,119,9)" fg:x="16795" fg:w="108"/><text x="16.7430%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (108 samples, 0.11%)</title><rect x="16.4930%" y="549" width="0.1061%" height="15" fill="rgb(241,163,25)" fg:x="16795" fg:w="108"/><text x="16.7430%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (108 samples, 0.11%)</title><rect x="16.4930%" y="533" width="0.1061%" height="15" fill="rgb(217,214,3)" fg:x="16795" fg:w="108"/><text x="16.7430%" y="543.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute as core::cmp::PartialEq&gt;::eq (108 samples, 0.11%)</title><rect x="16.4930%" y="517" width="0.1061%" height="15" fill="rgb(240,86,28)" fg:x="16795" fg:w="108"/><text x="16.7430%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.03%)</title><rect x="16.6305%" y="517" width="0.0265%" height="15" fill="rgb(215,47,9)" fg:x="16935" fg:w="27"/><text x="16.8805%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (18 samples, 0.02%)</title><rect x="16.6393%" y="501" width="0.0177%" height="15" fill="rgb(252,25,45)" fg:x="16944" fg:w="18"/><text x="16.8893%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (17 samples, 0.02%)</title><rect x="16.6403%" y="485" width="0.0167%" height="15" fill="rgb(251,164,9)" fg:x="16945" fg:w="17"/><text x="16.8903%" y="495.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (175 samples, 0.17%)</title><rect x="16.6786%" y="405" width="0.1719%" height="15" fill="rgb(233,194,0)" fg:x="16984" fg:w="175"/><text x="16.9286%" y="415.50"></text></g><g><title>__memcmp_avx2_movbe (136 samples, 0.13%)</title><rect x="16.7169%" y="389" width="0.1336%" height="15" fill="rgb(249,111,24)" fg:x="17023" fg:w="136"/><text x="16.9669%" y="399.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (189 samples, 0.19%)</title><rect x="16.6688%" y="485" width="0.1856%" height="15" fill="rgb(250,223,3)" fg:x="16974" fg:w="189"/><text x="16.9188%" y="495.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (189 samples, 0.19%)</title><rect x="16.6688%" y="469" width="0.1856%" height="15" fill="rgb(236,178,37)" fg:x="16974" fg:w="189"/><text x="16.9188%" y="479.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (179 samples, 0.18%)</title><rect x="16.6786%" y="453" width="0.1758%" height="15" fill="rgb(241,158,50)" fg:x="16984" fg:w="179"/><text x="16.9286%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (179 samples, 0.18%)</title><rect x="16.6786%" y="437" width="0.1758%" height="15" fill="rgb(213,121,41)" fg:x="16984" fg:w="179"/><text x="16.9286%" y="447.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (179 samples, 0.18%)</title><rect x="16.6786%" y="421" width="0.1758%" height="15" fill="rgb(240,92,3)" fg:x="16984" fg:w="179"/><text x="16.9286%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (80 samples, 0.08%)</title><rect x="16.8564%" y="437" width="0.0786%" height="15" fill="rgb(205,123,3)" fg:x="17165" fg:w="80"/><text x="17.1064%" y="447.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (80 samples, 0.08%)</title><rect x="16.8564%" y="421" width="0.0786%" height="15" fill="rgb(205,97,47)" fg:x="17165" fg:w="80"/><text x="17.1064%" y="431.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (80 samples, 0.08%)</title><rect x="16.8564%" y="405" width="0.0786%" height="15" fill="rgb(247,152,14)" fg:x="17165" fg:w="80"/><text x="17.1064%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (322 samples, 0.32%)</title><rect x="16.6197%" y="645" width="0.3162%" height="15" fill="rgb(248,195,53)" fg:x="16924" fg:w="322"/><text x="16.8697%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (322 samples, 0.32%)</title><rect x="16.6197%" y="629" width="0.3162%" height="15" fill="rgb(226,201,16)" fg:x="16924" fg:w="322"/><text x="16.8697%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (314 samples, 0.31%)</title><rect x="16.6275%" y="613" width="0.3084%" height="15" fill="rgb(205,98,0)" fg:x="16932" fg:w="314"/><text x="16.8775%" y="623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (314 samples, 0.31%)</title><rect x="16.6275%" y="597" width="0.3084%" height="15" fill="rgb(214,191,48)" fg:x="16932" fg:w="314"/><text x="16.8775%" y="607.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (314 samples, 0.31%)</title><rect x="16.6275%" y="581" width="0.3084%" height="15" fill="rgb(237,112,39)" fg:x="16932" fg:w="314"/><text x="16.8775%" y="591.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (314 samples, 0.31%)</title><rect x="16.6275%" y="565" width="0.3084%" height="15" fill="rgb(247,203,27)" fg:x="16932" fg:w="314"/><text x="16.8775%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (311 samples, 0.31%)</title><rect x="16.6305%" y="549" width="0.3054%" height="15" fill="rgb(235,124,28)" fg:x="16935" fg:w="311"/><text x="16.8805%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (311 samples, 0.31%)</title><rect x="16.6305%" y="533" width="0.3054%" height="15" fill="rgb(208,207,46)" fg:x="16935" fg:w="311"/><text x="16.8805%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (284 samples, 0.28%)</title><rect x="16.6570%" y="517" width="0.2789%" height="15" fill="rgb(234,176,4)" fg:x="16962" fg:w="284"/><text x="16.9070%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (284 samples, 0.28%)</title><rect x="16.6570%" y="501" width="0.2789%" height="15" fill="rgb(230,133,28)" fg:x="16962" fg:w="284"/><text x="16.9070%" y="511.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (83 samples, 0.08%)</title><rect x="16.8544%" y="485" width="0.0815%" height="15" fill="rgb(211,137,40)" fg:x="17163" fg:w="83"/><text x="17.1044%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (83 samples, 0.08%)</title><rect x="16.8544%" y="469" width="0.0815%" height="15" fill="rgb(254,35,13)" fg:x="17163" fg:w="83"/><text x="17.1044%" y="479.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (83 samples, 0.08%)</title><rect x="16.8544%" y="453" width="0.0815%" height="15" fill="rgb(225,49,51)" fg:x="17163" fg:w="83"/><text x="17.1044%" y="463.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (485 samples, 0.48%)</title><rect x="16.4616%" y="725" width="0.4763%" height="15" fill="rgb(251,10,15)" fg:x="16763" fg:w="485"/><text x="16.7116%" y="735.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}}::{{closure}} (485 samples, 0.48%)</title><rect x="16.4616%" y="709" width="0.4763%" height="15" fill="rgb(228,207,15)" fg:x="16763" fg:w="485"/><text x="16.7116%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (485 samples, 0.48%)</title><rect x="16.4616%" y="693" width="0.4763%" height="15" fill="rgb(241,99,19)" fg:x="16763" fg:w="485"/><text x="16.7116%" y="703.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (485 samples, 0.48%)</title><rect x="16.4616%" y="677" width="0.4763%" height="15" fill="rgb(207,104,49)" fg:x="16763" fg:w="485"/><text x="16.7116%" y="687.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (345 samples, 0.34%)</title><rect x="16.5991%" y="661" width="0.3388%" height="15" fill="rgb(234,99,18)" fg:x="16903" fg:w="345"/><text x="16.8491%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (486 samples, 0.48%)</title><rect x="16.4616%" y="757" width="0.4773%" height="15" fill="rgb(213,191,49)" fg:x="16763" fg:w="486"/><text x="16.7116%" y="767.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}} (486 samples, 0.48%)</title><rect x="16.4616%" y="741" width="0.4773%" height="15" fill="rgb(210,226,19)" fg:x="16763" fg:w="486"/><text x="16.7116%" y="751.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (26 samples, 0.03%)</title><rect x="16.9487%" y="677" width="0.0255%" height="15" fill="rgb(229,97,18)" fg:x="17259" fg:w="26"/><text x="17.1987%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (35 samples, 0.03%)</title><rect x="16.9418%" y="709" width="0.0344%" height="15" fill="rgb(211,167,15)" fg:x="17252" fg:w="35"/><text x="17.1918%" y="719.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (28 samples, 0.03%)</title><rect x="16.9487%" y="693" width="0.0275%" height="15" fill="rgb(210,169,34)" fg:x="17259" fg:w="28"/><text x="17.1987%" y="703.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (591 samples, 0.58%)</title><rect x="16.4164%" y="789" width="0.5804%" height="15" fill="rgb(241,121,31)" fg:x="16717" fg:w="591"/><text x="16.6664%" y="799.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (546 samples, 0.54%)</title><rect x="16.4606%" y="773" width="0.5362%" height="15" fill="rgb(232,40,11)" fg:x="16762" fg:w="546"/><text x="16.7106%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (56 samples, 0.05%)</title><rect x="16.9418%" y="757" width="0.0550%" height="15" fill="rgb(205,86,26)" fg:x="17252" fg:w="56"/><text x="17.1918%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (56 samples, 0.05%)</title><rect x="16.9418%" y="741" width="0.0550%" height="15" fill="rgb(231,126,28)" fg:x="17252" fg:w="56"/><text x="17.1918%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (56 samples, 0.05%)</title><rect x="16.9418%" y="725" width="0.0550%" height="15" fill="rgb(219,221,18)" fg:x="17252" fg:w="56"/><text x="17.1918%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.02%)</title><rect x="16.9762%" y="709" width="0.0206%" height="15" fill="rgb(211,40,0)" fg:x="17287" fg:w="21"/><text x="17.2262%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.02%)</title><rect x="16.9762%" y="693" width="0.0206%" height="15" fill="rgb(239,85,43)" fg:x="17287" fg:w="21"/><text x="17.2262%" y="703.50"></text></g><g><title>bevy_render::draw::Draw::set_index_buffer (31 samples, 0.03%)</title><rect x="17.0017%" y="773" width="0.0304%" height="15" fill="rgb(231,55,21)" fg:x="17313" fg:w="31"/><text x="17.2517%" y="783.50"></text></g><g><title>bevy_render::draw::Draw::render_command (31 samples, 0.03%)</title><rect x="17.0017%" y="757" width="0.0304%" height="15" fill="rgb(225,184,43)" fg:x="17313" fg:w="31"/><text x="17.2517%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (31 samples, 0.03%)</title><rect x="17.0017%" y="741" width="0.0304%" height="15" fill="rgb(251,158,41)" fg:x="17313" fg:w="31"/><text x="17.2517%" y="751.50"></text></g><g><title>core::ptr::write (31 samples, 0.03%)</title><rect x="17.0017%" y="725" width="0.0304%" height="15" fill="rgb(234,159,37)" fg:x="17313" fg:w="31"/><text x="17.2517%" y="735.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (71 samples, 0.07%)</title><rect x="16.9968%" y="789" width="0.0697%" height="15" fill="rgb(216,204,22)" fg:x="17308" fg:w="71"/><text x="17.2468%" y="799.50"></text></g><g><title>bevy_render::draw::Draw::set_vertex_buffer (35 samples, 0.03%)</title><rect x="17.0321%" y="773" width="0.0344%" height="15" fill="rgb(214,17,3)" fg:x="17344" fg:w="35"/><text x="17.2821%" y="783.50"></text></g><g><title>bevy_render::draw::Draw::render_command (35 samples, 0.03%)</title><rect x="17.0321%" y="757" width="0.0344%" height="15" fill="rgb(212,111,17)" fg:x="17344" fg:w="35"/><text x="17.2821%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (34 samples, 0.03%)</title><rect x="17.0331%" y="741" width="0.0334%" height="15" fill="rgb(221,157,24)" fg:x="17345" fg:w="34"/><text x="17.2831%" y="751.50"></text></g><g><title>core::ptr::write (34 samples, 0.03%)</title><rect x="17.0331%" y="725" width="0.0334%" height="15" fill="rgb(252,16,13)" fg:x="17345" fg:w="34"/><text x="17.2831%" y="735.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (2,070 samples, 2.03%)</title><rect x="15.0377%" y="805" width="2.0328%" height="15" fill="rgb(221,62,2)" fg:x="15313" fg:w="2070"/><text x="15.2877%" y="815.50">b..</text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (44 samples, 0.04%)</title><rect x="17.1156%" y="741" width="0.0432%" height="15" fill="rgb(247,87,22)" fg:x="17429" fg:w="44"/><text x="17.3656%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (23 samples, 0.02%)</title><rect x="17.1588%" y="693" width="0.0226%" height="15" fill="rgb(215,73,9)" fg:x="17473" fg:w="23"/><text x="17.4088%" y="703.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (23 samples, 0.02%)</title><rect x="17.1588%" y="677" width="0.0226%" height="15" fill="rgb(207,175,33)" fg:x="17473" fg:w="23"/><text x="17.4088%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (23 samples, 0.02%)</title><rect x="17.1588%" y="661" width="0.0226%" height="15" fill="rgb(243,129,54)" fg:x="17473" fg:w="23"/><text x="17.4088%" y="671.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (25 samples, 0.02%)</title><rect x="17.1588%" y="709" width="0.0246%" height="15" fill="rgb(227,119,45)" fg:x="17473" fg:w="25"/><text x="17.4088%" y="719.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (71 samples, 0.07%)</title><rect x="17.1146%" y="757" width="0.0697%" height="15" fill="rgb(205,109,36)" fg:x="17428" fg:w="71"/><text x="17.3646%" y="767.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (26 samples, 0.03%)</title><rect x="17.1588%" y="741" width="0.0255%" height="15" fill="rgb(205,6,39)" fg:x="17473" fg:w="26"/><text x="17.4088%" y="751.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (26 samples, 0.03%)</title><rect x="17.1588%" y="725" width="0.0255%" height="15" fill="rgb(221,32,16)" fg:x="17473" fg:w="26"/><text x="17.4088%" y="735.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_table (78 samples, 0.08%)</title><rect x="17.1107%" y="773" width="0.0766%" height="15" fill="rgb(228,144,50)" fg:x="17424" fg:w="78"/><text x="17.3607%" y="783.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (34 samples, 0.03%)</title><rect x="17.1942%" y="773" width="0.0334%" height="15" fill="rgb(229,201,53)" fg:x="17509" fg:w="34"/><text x="17.4442%" y="783.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (34 samples, 0.03%)</title><rect x="17.1942%" y="757" width="0.0334%" height="15" fill="rgb(249,153,27)" fg:x="17509" fg:w="34"/><text x="17.4442%" y="767.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (30 samples, 0.03%)</title><rect x="17.1981%" y="741" width="0.0295%" height="15" fill="rgb(227,106,25)" fg:x="17513" fg:w="30"/><text x="17.4481%" y="751.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (30 samples, 0.03%)</title><rect x="17.1981%" y="725" width="0.0295%" height="15" fill="rgb(230,65,29)" fg:x="17513" fg:w="30"/><text x="17.4481%" y="735.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::is_changed (27 samples, 0.03%)</title><rect x="17.2010%" y="709" width="0.0265%" height="15" fill="rgb(221,57,46)" fg:x="17516" fg:w="27"/><text x="17.4510%" y="719.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (23 samples, 0.02%)</title><rect x="17.2050%" y="693" width="0.0226%" height="15" fill="rgb(229,161,17)" fg:x="17520" fg:w="23"/><text x="17.4550%" y="703.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (154 samples, 0.15%)</title><rect x="17.0911%" y="789" width="0.1512%" height="15" fill="rgb(222,213,11)" fg:x="17404" fg:w="154"/><text x="17.3411%" y="799.50"></text></g><g><title>parking::Parker::new (11 samples, 0.01%)</title><rect x="17.2600%" y="693" width="0.0108%" height="15" fill="rgb(235,35,13)" fg:x="17576" fg:w="11"/><text x="17.5100%" y="703.50"></text></g><g><title>futures_lite::future::block_on (27 samples, 0.03%)</title><rect x="17.2472%" y="773" width="0.0265%" height="15" fill="rgb(233,158,34)" fg:x="17563" fg:w="27"/><text x="17.4972%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (24 samples, 0.02%)</title><rect x="17.2501%" y="757" width="0.0236%" height="15" fill="rgb(215,151,48)" fg:x="17566" fg:w="24"/><text x="17.5001%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (24 samples, 0.02%)</title><rect x="17.2501%" y="741" width="0.0236%" height="15" fill="rgb(229,84,14)" fg:x="17566" fg:w="24"/><text x="17.5001%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (22 samples, 0.02%)</title><rect x="17.2521%" y="725" width="0.0216%" height="15" fill="rgb(229,68,14)" fg:x="17568" fg:w="22"/><text x="17.5021%" y="735.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker (14 samples, 0.01%)</title><rect x="17.2600%" y="709" width="0.0137%" height="15" fill="rgb(243,106,26)" fg:x="17576" fg:w="14"/><text x="17.5100%" y="719.50"></text></g><g><title>wgpu::backend::native_gpu_future::new_gpu_future (12 samples, 0.01%)</title><rect x="17.2826%" y="741" width="0.0118%" height="15" fill="rgb(206,45,38)" fg:x="17599" fg:w="12"/><text x="17.5326%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (50 samples, 0.05%)</title><rect x="17.2796%" y="757" width="0.0491%" height="15" fill="rgb(226,6,15)" fg:x="17596" fg:w="50"/><text x="17.5296%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (35 samples, 0.03%)</title><rect x="17.2943%" y="741" width="0.0344%" height="15" fill="rgb(232,22,54)" fg:x="17611" fg:w="35"/><text x="17.5443%" y="751.50"></text></g><g><title>wgpu::BufferSlice::map_async (52 samples, 0.05%)</title><rect x="17.2796%" y="773" width="0.0511%" height="15" fill="rgb(229,222,32)" fg:x="17596" fg:w="52"/><text x="17.5296%" y="783.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (32 samples, 0.03%)</title><rect x="17.3395%" y="709" width="0.0314%" height="15" fill="rgb(228,62,29)" fg:x="17657" fg:w="32"/><text x="17.5895%" y="719.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::maintain (32 samples, 0.03%)</title><rect x="17.3395%" y="693" width="0.0314%" height="15" fill="rgb(251,103,34)" fg:x="17657" fg:w="32"/><text x="17.5895%" y="703.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::recycle (29 samples, 0.03%)</title><rect x="17.3425%" y="677" width="0.0285%" height="15" fill="rgb(233,12,30)" fg:x="17660" fg:w="29"/><text x="17.5925%" y="687.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::reset (29 samples, 0.03%)</title><rect x="17.3425%" y="661" width="0.0285%" height="15" fill="rgb(238,52,0)" fg:x="17660" fg:w="29"/><text x="17.5925%" y="671.50"></text></g><g><title>ash::device::DeviceV1_0::reset_command_buffer (29 samples, 0.03%)</title><rect x="17.3425%" y="645" width="0.0285%" height="15" fill="rgb(223,98,5)" fg:x="17660" fg:w="29"/><text x="17.5925%" y="655.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::reset_command_buffer (29 samples, 0.03%)</title><rect x="17.3425%" y="629" width="0.0285%" height="15" fill="rgb(228,75,37)" fg:x="17660" fg:w="29"/><text x="17.5925%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (29 samples, 0.03%)</title><rect x="17.3425%" y="613" width="0.0285%" height="15" fill="rgb(205,115,49)" fg:x="17660" fg:w="29"/><text x="17.5925%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.02%)</title><rect x="17.3533%" y="597" width="0.0177%" height="15" fill="rgb(250,154,43)" fg:x="17671" fg:w="18"/><text x="17.6033%" y="607.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (12 samples, 0.01%)</title><rect x="17.3749%" y="677" width="0.0118%" height="15" fill="rgb(226,43,29)" fg:x="17693" fg:w="12"/><text x="17.6249%" y="687.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (13 samples, 0.01%)</title><rect x="17.3749%" y="693" width="0.0128%" height="15" fill="rgb(249,228,39)" fg:x="17693" fg:w="13"/><text x="17.6249%" y="703.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::destroy_buffer (11 samples, 0.01%)</title><rect x="17.3945%" y="677" width="0.0108%" height="15" fill="rgb(216,79,43)" fg:x="17713" fg:w="11"/><text x="17.6445%" y="687.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_buffer (11 samples, 0.01%)</title><rect x="17.3945%" y="661" width="0.0108%" height="15" fill="rgb(228,95,12)" fg:x="17713" fg:w="11"/><text x="17.6445%" y="671.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::destroy_buffer (11 samples, 0.01%)</title><rect x="17.3945%" y="645" width="0.0108%" height="15" fill="rgb(249,221,15)" fg:x="17713" fg:w="11"/><text x="17.6445%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (11 samples, 0.01%)</title><rect x="17.3945%" y="629" width="0.0108%" height="15" fill="rgb(233,34,13)" fg:x="17713" fg:w="11"/><text x="17.6445%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (15 samples, 0.01%)</title><rect x="17.4200%" y="629" width="0.0147%" height="15" fill="rgb(214,103,39)" fg:x="17739" fg:w="15"/><text x="17.6700%" y="639.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="17.4200%" y="613" width="0.0147%" height="15" fill="rgb(251,126,39)" fg:x="17739" fg:w="15"/><text x="17.6700%" y="623.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (15 samples, 0.01%)</title><rect x="17.4200%" y="597" width="0.0147%" height="15" fill="rgb(214,216,36)" fg:x="17739" fg:w="15"/><text x="17.6700%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (15 samples, 0.01%)</title><rect x="17.4200%" y="581" width="0.0147%" height="15" fill="rgb(220,221,8)" fg:x="17739" fg:w="15"/><text x="17.6700%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (15 samples, 0.01%)</title><rect x="17.4200%" y="565" width="0.0147%" height="15" fill="rgb(240,216,3)" fg:x="17739" fg:w="15"/><text x="17.6700%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (33 samples, 0.03%)</title><rect x="17.4407%" y="357" width="0.0324%" height="15" fill="rgb(232,218,17)" fg:x="17760" fg:w="33"/><text x="17.6907%" y="367.50"></text></g><g><title>core::fmt::Write::write_fmt (32 samples, 0.03%)</title><rect x="17.4416%" y="341" width="0.0314%" height="15" fill="rgb(229,163,45)" fg:x="17761" fg:w="32"/><text x="17.6916%" y="351.50"></text></g><g><title>core::fmt::write (32 samples, 0.03%)</title><rect x="17.4416%" y="325" width="0.0314%" height="15" fill="rgb(231,110,42)" fg:x="17761" fg:w="32"/><text x="17.6916%" y="335.50"></text></g><g><title>&lt;gpu_alloc::linear::LinearBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (17 samples, 0.02%)</title><rect x="17.4564%" y="309" width="0.0167%" height="15" fill="rgb(208,170,48)" fg:x="17776" fg:w="17"/><text x="17.7064%" y="319.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (16 samples, 0.02%)</title><rect x="17.4574%" y="293" width="0.0157%" height="15" fill="rgb(239,116,25)" fg:x="17777" fg:w="16"/><text x="17.7074%" y="303.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (16 samples, 0.02%)</title><rect x="17.4574%" y="277" width="0.0157%" height="15" fill="rgb(219,200,50)" fg:x="17777" fg:w="16"/><text x="17.7074%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (15 samples, 0.01%)</title><rect x="17.4583%" y="261" width="0.0147%" height="15" fill="rgb(245,200,0)" fg:x="17778" fg:w="15"/><text x="17.7083%" y="271.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (43 samples, 0.04%)</title><rect x="17.4367%" y="453" width="0.0422%" height="15" fill="rgb(245,119,33)" fg:x="17756" fg:w="43"/><text x="17.6867%" y="463.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (43 samples, 0.04%)</title><rect x="17.4367%" y="437" width="0.0422%" height="15" fill="rgb(231,125,12)" fg:x="17756" fg:w="43"/><text x="17.6867%" y="447.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (43 samples, 0.04%)</title><rect x="17.4367%" y="421" width="0.0422%" height="15" fill="rgb(216,96,41)" fg:x="17756" fg:w="43"/><text x="17.6867%" y="431.50"></text></g><g><title>tracing_core::span::Attributes::record (43 samples, 0.04%)</title><rect x="17.4367%" y="405" width="0.0422%" height="15" fill="rgb(248,43,45)" fg:x="17756" fg:w="43"/><text x="17.6867%" y="415.50"></text></g><g><title>tracing_core::field::ValueSet::record (43 samples, 0.04%)</title><rect x="17.4367%" y="389" width="0.0422%" height="15" fill="rgb(217,222,7)" fg:x="17756" fg:w="43"/><text x="17.6867%" y="399.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (43 samples, 0.04%)</title><rect x="17.4367%" y="373" width="0.0422%" height="15" fill="rgb(233,28,6)" fg:x="17756" fg:w="43"/><text x="17.6867%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (44 samples, 0.04%)</title><rect x="17.4367%" y="469" width="0.0432%" height="15" fill="rgb(231,218,15)" fg:x="17756" fg:w="44"/><text x="17.6867%" y="479.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::dealloc (72 samples, 0.07%)</title><rect x="17.4151%" y="645" width="0.0707%" height="15" fill="rgb(226,171,48)" fg:x="17734" fg:w="72"/><text x="17.6651%" y="655.50"></text></g><g><title>tracing::span::Span::new (50 samples, 0.05%)</title><rect x="17.4367%" y="629" width="0.0491%" height="15" fill="rgb(235,201,9)" fg:x="17756" fg:w="50"/><text x="17.6867%" y="639.50"></text></g><g><title>tracing_core::dispatcher::get_default (50 samples, 0.05%)</title><rect x="17.4367%" y="613" width="0.0491%" height="15" fill="rgb(217,80,15)" fg:x="17756" fg:w="50"/><text x="17.6867%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (50 samples, 0.05%)</title><rect x="17.4367%" y="597" width="0.0491%" height="15" fill="rgb(219,152,8)" fg:x="17756" fg:w="50"/><text x="17.6867%" y="607.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (50 samples, 0.05%)</title><rect x="17.4367%" y="581" width="0.0491%" height="15" fill="rgb(243,107,38)" fg:x="17756" fg:w="50"/><text x="17.6867%" y="591.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (50 samples, 0.05%)</title><rect x="17.4367%" y="565" width="0.0491%" height="15" fill="rgb(231,17,5)" fg:x="17756" fg:w="50"/><text x="17.6867%" y="575.50"></text></g><g><title>tracing::span::Span::new_with (50 samples, 0.05%)</title><rect x="17.4367%" y="549" width="0.0491%" height="15" fill="rgb(209,25,54)" fg:x="17756" fg:w="50"/><text x="17.6867%" y="559.50"></text></g><g><title>tracing::span::Span::make_with (50 samples, 0.05%)</title><rect x="17.4367%" y="533" width="0.0491%" height="15" fill="rgb(219,0,2)" fg:x="17756" fg:w="50"/><text x="17.6867%" y="543.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (50 samples, 0.05%)</title><rect x="17.4367%" y="517" width="0.0491%" height="15" fill="rgb(246,9,5)" fg:x="17756" fg:w="50"/><text x="17.6867%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (50 samples, 0.05%)</title><rect x="17.4367%" y="501" width="0.0491%" height="15" fill="rgb(226,159,4)" fg:x="17756" fg:w="50"/><text x="17.6867%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (50 samples, 0.05%)</title><rect x="17.4367%" y="485" width="0.0491%" height="15" fill="rgb(219,175,34)" fg:x="17756" fg:w="50"/><text x="17.6867%" y="495.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (18 samples, 0.02%)</title><rect x="17.5084%" y="197" width="0.0177%" height="15" fill="rgb(236,10,46)" fg:x="17829" fg:w="18"/><text x="17.7584%" y="207.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlockFlavor&lt;M&gt; as core::fmt::Debug&gt;::fmt (22 samples, 0.02%)</title><rect x="17.5055%" y="261" width="0.0216%" height="15" fill="rgb(240,211,16)" fg:x="17826" fg:w="22"/><text x="17.7555%" y="271.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (19 samples, 0.02%)</title><rect x="17.5084%" y="245" width="0.0187%" height="15" fill="rgb(205,3,43)" fg:x="17829" fg:w="19"/><text x="17.7584%" y="255.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (19 samples, 0.02%)</title><rect x="17.5084%" y="229" width="0.0187%" height="15" fill="rgb(245,7,22)" fg:x="17829" fg:w="19"/><text x="17.7584%" y="239.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (19 samples, 0.02%)</title><rect x="17.5084%" y="213" width="0.0187%" height="15" fill="rgb(239,132,32)" fg:x="17829" fg:w="19"/><text x="17.7584%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="17.5330%" y="149" width="0.0108%" height="15" fill="rgb(228,202,34)" fg:x="17854" fg:w="11"/><text x="17.7830%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="17.5330%" y="133" width="0.0108%" height="15" fill="rgb(254,200,22)" fg:x="17854" fg:w="11"/><text x="17.7830%" y="143.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (57 samples, 0.06%)</title><rect x="17.4937%" y="325" width="0.0560%" height="15" fill="rgb(219,10,39)" fg:x="17814" fg:w="57"/><text x="17.7437%" y="335.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (54 samples, 0.05%)</title><rect x="17.4966%" y="309" width="0.0530%" height="15" fill="rgb(226,210,39)" fg:x="17817" fg:w="54"/><text x="17.7466%" y="319.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (53 samples, 0.05%)</title><rect x="17.4976%" y="293" width="0.0520%" height="15" fill="rgb(208,219,16)" fg:x="17818" fg:w="53"/><text x="17.7476%" y="303.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (53 samples, 0.05%)</title><rect x="17.4976%" y="277" width="0.0520%" height="15" fill="rgb(216,158,51)" fg:x="17818" fg:w="53"/><text x="17.7476%" y="287.50"></text></g><g><title>core::fmt::Formatter::write_str (17 samples, 0.02%)</title><rect x="17.5330%" y="261" width="0.0167%" height="15" fill="rgb(233,14,44)" fg:x="17854" fg:w="17"/><text x="17.7830%" y="271.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (17 samples, 0.02%)</title><rect x="17.5330%" y="245" width="0.0167%" height="15" fill="rgb(237,97,39)" fg:x="17854" fg:w="17"/><text x="17.7830%" y="255.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (17 samples, 0.02%)</title><rect x="17.5330%" y="229" width="0.0167%" height="15" fill="rgb(218,198,43)" fg:x="17854" fg:w="17"/><text x="17.7830%" y="239.50"></text></g><g><title>alloc::string::String::push_str (17 samples, 0.02%)</title><rect x="17.5330%" y="213" width="0.0167%" height="15" fill="rgb(231,104,20)" fg:x="17854" fg:w="17"/><text x="17.7830%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (17 samples, 0.02%)</title><rect x="17.5330%" y="197" width="0.0167%" height="15" fill="rgb(254,36,13)" fg:x="17854" fg:w="17"/><text x="17.7830%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (17 samples, 0.02%)</title><rect x="17.5330%" y="181" width="0.0167%" height="15" fill="rgb(248,14,50)" fg:x="17854" fg:w="17"/><text x="17.7830%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (17 samples, 0.02%)</title><rect x="17.5330%" y="165" width="0.0167%" height="15" fill="rgb(217,107,29)" fg:x="17854" fg:w="17"/><text x="17.7830%" y="175.50"></text></g><g><title>core::fmt::Write::write_fmt (62 samples, 0.06%)</title><rect x="17.4898%" y="357" width="0.0609%" height="15" fill="rgb(251,169,33)" fg:x="17810" fg:w="62"/><text x="17.7398%" y="367.50"></text></g><g><title>core::fmt::write (62 samples, 0.06%)</title><rect x="17.4898%" y="341" width="0.0609%" height="15" fill="rgb(217,108,32)" fg:x="17810" fg:w="62"/><text x="17.7398%" y="351.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (67 samples, 0.07%)</title><rect x="17.4888%" y="469" width="0.0658%" height="15" fill="rgb(219,66,42)" fg:x="17809" fg:w="67"/><text x="17.7388%" y="479.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (67 samples, 0.07%)</title><rect x="17.4888%" y="453" width="0.0658%" height="15" fill="rgb(206,180,7)" fg:x="17809" fg:w="67"/><text x="17.7388%" y="463.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (67 samples, 0.07%)</title><rect x="17.4888%" y="437" width="0.0658%" height="15" fill="rgb(208,226,31)" fg:x="17809" fg:w="67"/><text x="17.7388%" y="447.50"></text></g><g><title>tracing_core::span::Attributes::record (67 samples, 0.07%)</title><rect x="17.4888%" y="421" width="0.0658%" height="15" fill="rgb(218,26,49)" fg:x="17809" fg:w="67"/><text x="17.7388%" y="431.50"></text></g><g><title>tracing_core::field::ValueSet::record (67 samples, 0.07%)</title><rect x="17.4888%" y="405" width="0.0658%" height="15" fill="rgb(233,197,48)" fg:x="17809" fg:w="67"/><text x="17.7388%" y="415.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (67 samples, 0.07%)</title><rect x="17.4888%" y="389" width="0.0658%" height="15" fill="rgb(252,181,51)" fg:x="17809" fg:w="67"/><text x="17.7388%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (66 samples, 0.06%)</title><rect x="17.4898%" y="373" width="0.0648%" height="15" fill="rgb(253,90,19)" fg:x="17810" fg:w="66"/><text x="17.7398%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (76 samples, 0.07%)</title><rect x="17.4888%" y="485" width="0.0746%" height="15" fill="rgb(215,171,30)" fg:x="17809" fg:w="76"/><text x="17.7388%" y="495.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (94 samples, 0.09%)</title><rect x="17.4888%" y="581" width="0.0923%" height="15" fill="rgb(214,222,9)" fg:x="17809" fg:w="94"/><text x="17.7388%" y="591.50"></text></g><g><title>tracing::span::Span::new_with (94 samples, 0.09%)</title><rect x="17.4888%" y="565" width="0.0923%" height="15" fill="rgb(223,3,22)" fg:x="17809" fg:w="94"/><text x="17.7388%" y="575.50"></text></g><g><title>tracing::span::Span::make_with (94 samples, 0.09%)</title><rect x="17.4888%" y="549" width="0.0923%" height="15" fill="rgb(225,196,46)" fg:x="17809" fg:w="94"/><text x="17.7388%" y="559.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (94 samples, 0.09%)</title><rect x="17.4888%" y="533" width="0.0923%" height="15" fill="rgb(209,110,37)" fg:x="17809" fg:w="94"/><text x="17.7388%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (94 samples, 0.09%)</title><rect x="17.4888%" y="517" width="0.0923%" height="15" fill="rgb(249,89,12)" fg:x="17809" fg:w="94"/><text x="17.7388%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (94 samples, 0.09%)</title><rect x="17.4888%" y="501" width="0.0923%" height="15" fill="rgb(226,27,33)" fg:x="17809" fg:w="94"/><text x="17.7388%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (18 samples, 0.02%)</title><rect x="17.5634%" y="485" width="0.0177%" height="15" fill="rgb(213,82,22)" fg:x="17885" fg:w="18"/><text x="17.8134%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (14 samples, 0.01%)</title><rect x="17.5673%" y="469" width="0.0137%" height="15" fill="rgb(248,140,0)" fg:x="17889" fg:w="14"/><text x="17.8173%" y="479.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create_with (11 samples, 0.01%)</title><rect x="17.5703%" y="453" width="0.0108%" height="15" fill="rgb(228,106,3)" fg:x="17892" fg:w="11"/><text x="17.8203%" y="463.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create (11 samples, 0.01%)</title><rect x="17.5703%" y="437" width="0.0108%" height="15" fill="rgb(209,23,37)" fg:x="17892" fg:w="11"/><text x="17.8203%" y="447.50"></text></g><g><title>tracing::span::Span::new (100 samples, 0.10%)</title><rect x="17.4888%" y="645" width="0.0982%" height="15" fill="rgb(241,93,50)" fg:x="17809" fg:w="100"/><text x="17.7388%" y="655.50"></text></g><g><title>tracing_core::dispatcher::get_default (100 samples, 0.10%)</title><rect x="17.4888%" y="629" width="0.0982%" height="15" fill="rgb(253,46,43)" fg:x="17809" fg:w="100"/><text x="17.7388%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (100 samples, 0.10%)</title><rect x="17.4888%" y="613" width="0.0982%" height="15" fill="rgb(226,206,43)" fg:x="17809" fg:w="100"/><text x="17.7388%" y="623.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (100 samples, 0.10%)</title><rect x="17.4888%" y="597" width="0.0982%" height="15" fill="rgb(217,54,7)" fg:x="17809" fg:w="100"/><text x="17.7388%" y="607.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (218 samples, 0.21%)</title><rect x="17.3739%" y="709" width="0.2141%" height="15" fill="rgb(223,5,52)" fg:x="17692" fg:w="218"/><text x="17.6239%" y="719.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (204 samples, 0.20%)</title><rect x="17.3876%" y="693" width="0.2003%" height="15" fill="rgb(206,52,46)" fg:x="17706" fg:w="204"/><text x="17.6376%" y="703.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (186 samples, 0.18%)</title><rect x="17.4053%" y="677" width="0.1827%" height="15" fill="rgb(253,136,11)" fg:x="17724" fg:w="186"/><text x="17.6553%" y="687.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (186 samples, 0.18%)</title><rect x="17.4053%" y="661" width="0.1827%" height="15" fill="rgb(208,106,33)" fg:x="17724" fg:w="186"/><text x="17.6553%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (49 samples, 0.05%)</title><rect x="17.6430%" y="565" width="0.0481%" height="15" fill="rgb(206,54,4)" fg:x="17966" fg:w="49"/><text x="17.8930%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (62 samples, 0.06%)</title><rect x="17.6312%" y="581" width="0.0609%" height="15" fill="rgb(213,3,15)" fg:x="17954" fg:w="62"/><text x="17.8812%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (81 samples, 0.08%)</title><rect x="17.6164%" y="597" width="0.0795%" height="15" fill="rgb(252,211,39)" fg:x="17939" fg:w="81"/><text x="17.8664%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (93 samples, 0.09%)</title><rect x="17.6115%" y="613" width="0.0913%" height="15" fill="rgb(223,6,36)" fg:x="17934" fg:w="93"/><text x="17.8615%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (96 samples, 0.09%)</title><rect x="17.6096%" y="629" width="0.0943%" height="15" fill="rgb(252,169,45)" fg:x="17932" fg:w="96"/><text x="17.8596%" y="639.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::destroy_fence (101 samples, 0.10%)</title><rect x="17.6076%" y="693" width="0.0992%" height="15" fill="rgb(212,48,26)" fg:x="17930" fg:w="101"/><text x="17.8576%" y="703.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_fence (101 samples, 0.10%)</title><rect x="17.6076%" y="677" width="0.0992%" height="15" fill="rgb(251,102,48)" fg:x="17930" fg:w="101"/><text x="17.8576%" y="687.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::destroy_fence (100 samples, 0.10%)</title><rect x="17.6086%" y="661" width="0.0982%" height="15" fill="rgb(243,208,16)" fg:x="17931" fg:w="100"/><text x="17.8586%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (100 samples, 0.10%)</title><rect x="17.6086%" y="645" width="0.0982%" height="15" fill="rgb(219,96,24)" fg:x="17931" fg:w="100"/><text x="17.8586%" y="655.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::wait_idle (24 samples, 0.02%)</title><rect x="17.7068%" y="693" width="0.0236%" height="15" fill="rgb(219,33,29)" fg:x="18031" fg:w="24"/><text x="17.9568%" y="703.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences (24 samples, 0.02%)</title><rect x="17.7068%" y="677" width="0.0236%" height="15" fill="rgb(223,176,5)" fg:x="18031" fg:w="24"/><text x="17.9568%" y="687.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (24 samples, 0.02%)</title><rect x="17.7068%" y="661" width="0.0236%" height="15" fill="rgb(228,140,14)" fg:x="18031" fg:w="24"/><text x="17.9568%" y="671.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (24 samples, 0.02%)</title><rect x="17.7068%" y="645" width="0.0236%" height="15" fill="rgb(217,179,31)" fg:x="18031" fg:w="24"/><text x="17.9568%" y="655.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (22 samples, 0.02%)</title><rect x="17.7088%" y="629" width="0.0216%" height="15" fill="rgb(230,9,30)" fg:x="18033" fg:w="22"/><text x="17.9588%" y="639.50"></text></g><g><title>inplace_it::fixed_array::indirect (21 samples, 0.02%)</title><rect x="17.7097%" y="613" width="0.0206%" height="15" fill="rgb(230,136,20)" fg:x="18034" fg:w="21"/><text x="17.9597%" y="623.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (21 samples, 0.02%)</title><rect x="17.7097%" y="597" width="0.0206%" height="15" fill="rgb(215,210,22)" fg:x="18034" fg:w="21"/><text x="17.9597%" y="607.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (21 samples, 0.02%)</title><rect x="17.7097%" y="581" width="0.0206%" height="15" fill="rgb(218,43,5)" fg:x="18034" fg:w="21"/><text x="17.9597%" y="591.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences::{{closure}} (21 samples, 0.02%)</title><rect x="17.7097%" y="565" width="0.0206%" height="15" fill="rgb(216,11,5)" fg:x="18034" fg:w="21"/><text x="17.9597%" y="575.50"></text></g><g><title>ash::device::DeviceV1_0::wait_for_fences (21 samples, 0.02%)</title><rect x="17.7097%" y="549" width="0.0206%" height="15" fill="rgb(209,82,29)" fg:x="18034" fg:w="21"/><text x="17.9597%" y="559.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::wait_for_fences (21 samples, 0.02%)</title><rect x="17.7097%" y="533" width="0.0206%" height="15" fill="rgb(244,115,12)" fg:x="18034" fg:w="21"/><text x="17.9597%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (21 samples, 0.02%)</title><rect x="17.7097%" y="517" width="0.0206%" height="15" fill="rgb(222,82,18)" fg:x="18034" fg:w="21"/><text x="17.9597%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.02%)</title><rect x="17.7137%" y="501" width="0.0167%" height="15" fill="rgb(249,227,8)" fg:x="18038" fg:w="17"/><text x="17.9637%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.02%)</title><rect x="17.7146%" y="485" width="0.0157%" height="15" fill="rgb(253,141,45)" fg:x="18039" fg:w="16"/><text x="17.9646%" y="495.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (139 samples, 0.14%)</title><rect x="17.6007%" y="709" width="0.1365%" height="15" fill="rgb(234,184,4)" fg:x="17923" fg:w="139"/><text x="17.8507%" y="719.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (416 samples, 0.41%)</title><rect x="17.3356%" y="725" width="0.4085%" height="15" fill="rgb(218,194,23)" fg:x="17653" fg:w="416"/><text x="17.5856%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (519 samples, 0.51%)</title><rect x="17.2423%" y="789" width="0.5097%" height="15" fill="rgb(235,66,41)" fg:x="17558" fg:w="519"/><text x="17.4923%" y="799.50"></text></g><g><title>wgpu::Device::poll (429 samples, 0.42%)</title><rect x="17.3307%" y="773" width="0.4213%" height="15" fill="rgb(245,217,1)" fg:x="17648" fg:w="429"/><text x="17.5807%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (428 samples, 0.42%)</title><rect x="17.3317%" y="757" width="0.4203%" height="15" fill="rgb(229,91,1)" fg:x="17649" fg:w="428"/><text x="17.5817%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (428 samples, 0.42%)</title><rect x="17.3317%" y="741" width="0.4203%" height="15" fill="rgb(207,101,30)" fg:x="17649" fg:w="428"/><text x="17.5817%" y="751.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (28 samples, 0.03%)</title><rect x="17.7520%" y="789" width="0.0275%" height="15" fill="rgb(223,82,49)" fg:x="18077" fg:w="28"/><text x="18.0020%" y="799.50"></text></g><g><title>wgpu::Buffer::unmap (24 samples, 0.02%)</title><rect x="17.7559%" y="773" width="0.0236%" height="15" fill="rgb(218,167,17)" fg:x="18081" fg:w="24"/><text x="18.0059%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (24 samples, 0.02%)</title><rect x="17.7559%" y="757" width="0.0236%" height="15" fill="rgb(208,103,14)" fg:x="18081" fg:w="24"/><text x="18.0059%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (24 samples, 0.02%)</title><rect x="17.7559%" y="741" width="0.0236%" height="15" fill="rgb(238,20,8)" fg:x="18081" fg:w="24"/><text x="18.0059%" y="751.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (14 samples, 0.01%)</title><rect x="17.7657%" y="725" width="0.0137%" height="15" fill="rgb(218,80,54)" fg:x="18091" fg:w="14"/><text x="18.0157%" y="735.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (14 samples, 0.01%)</title><rect x="17.7657%" y="709" width="0.0137%" height="15" fill="rgb(240,144,17)" fg:x="18091" fg:w="14"/><text x="18.0157%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (14 samples, 0.01%)</title><rect x="17.7657%" y="693" width="0.0137%" height="15" fill="rgb(245,27,50)" fg:x="18091" fg:w="14"/><text x="18.0157%" y="703.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (14 samples, 0.01%)</title><rect x="17.7657%" y="677" width="0.0137%" height="15" fill="rgb(251,51,7)" fg:x="18091" fg:w="14"/><text x="18.0157%" y="687.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (15 samples, 0.01%)</title><rect x="17.8030%" y="709" width="0.0147%" height="15" fill="rgb(245,217,29)" fg:x="18129" fg:w="15"/><text x="18.0530%" y="719.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (12 samples, 0.01%)</title><rect x="17.8187%" y="677" width="0.0118%" height="15" fill="rgb(221,176,29)" fg:x="18145" fg:w="12"/><text x="18.0687%" y="687.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (31 samples, 0.03%)</title><rect x="17.8011%" y="725" width="0.0304%" height="15" fill="rgb(212,180,24)" fg:x="18127" fg:w="31"/><text x="18.0511%" y="735.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (14 samples, 0.01%)</title><rect x="17.8178%" y="709" width="0.0137%" height="15" fill="rgb(254,24,2)" fg:x="18144" fg:w="14"/><text x="18.0678%" y="719.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (14 samples, 0.01%)</title><rect x="17.8178%" y="693" width="0.0137%" height="15" fill="rgb(230,100,2)" fg:x="18144" fg:w="14"/><text x="18.0678%" y="703.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_table (33 samples, 0.03%)</title><rect x="17.8001%" y="741" width="0.0324%" height="15" fill="rgb(219,142,25)" fg:x="18126" fg:w="33"/><text x="18.0501%" y="751.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (11 samples, 0.01%)</title><rect x="17.8345%" y="741" width="0.0108%" height="15" fill="rgb(240,73,43)" fg:x="18161" fg:w="11"/><text x="18.0845%" y="751.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (11 samples, 0.01%)</title><rect x="17.8345%" y="725" width="0.0108%" height="15" fill="rgb(214,114,15)" fg:x="18161" fg:w="11"/><text x="18.0845%" y="735.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (58 samples, 0.06%)</title><rect x="17.7893%" y="757" width="0.0570%" height="15" fill="rgb(207,130,4)" fg:x="18115" fg:w="58"/><text x="18.0393%" y="767.50"></text></g><g><title>&lt;f32 as bevy_render::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (76 samples, 0.07%)</title><rect x="17.8904%" y="709" width="0.0746%" height="15" fill="rgb(221,25,40)" fg:x="18218" fg:w="76"/><text x="18.1404%" y="719.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (70 samples, 0.07%)</title><rect x="17.8963%" y="693" width="0.0687%" height="15" fill="rgb(241,184,7)" fg:x="18224" fg:w="70"/><text x="18.1463%" y="703.50"></text></g><g><title>[libm-2.33.so] (70 samples, 0.07%)</title><rect x="17.8963%" y="677" width="0.0687%" height="15" fill="rgb(235,159,4)" fg:x="18224" fg:w="70"/><text x="18.1463%" y="687.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (120 samples, 0.12%)</title><rect x="17.8767%" y="725" width="0.1178%" height="15" fill="rgb(214,87,48)" fg:x="18204" fg:w="120"/><text x="18.1267%" y="735.50"></text></g><g><title>[libm-2.33.so] (30 samples, 0.03%)</title><rect x="17.9651%" y="709" width="0.0295%" height="15" fill="rgb(246,198,24)" fg:x="18294" fg:w="30"/><text x="18.2151%" y="719.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (128 samples, 0.13%)</title><rect x="17.8708%" y="741" width="0.1257%" height="15" fill="rgb(209,66,40)" fg:x="18198" fg:w="128"/><text x="18.1208%" y="751.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (20 samples, 0.02%)</title><rect x="18.0318%" y="645" width="0.0196%" height="15" fill="rgb(233,147,39)" fg:x="18362" fg:w="20"/><text x="18.2818%" y="655.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (20 samples, 0.02%)</title><rect x="18.0318%" y="629" width="0.0196%" height="15" fill="rgb(231,145,52)" fg:x="18362" fg:w="20"/><text x="18.2818%" y="639.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding (59 samples, 0.06%)</title><rect x="18.0043%" y="741" width="0.0579%" height="15" fill="rgb(206,20,26)" fg:x="18334" fg:w="59"/><text x="18.2543%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (54 samples, 0.05%)</title><rect x="18.0093%" y="725" width="0.0530%" height="15" fill="rgb(238,220,4)" fg:x="18339" fg:w="54"/><text x="18.2593%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (54 samples, 0.05%)</title><rect x="18.0093%" y="709" width="0.0530%" height="15" fill="rgb(252,195,42)" fg:x="18339" fg:w="54"/><text x="18.2593%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (54 samples, 0.05%)</title><rect x="18.0093%" y="693" width="0.0530%" height="15" fill="rgb(209,10,6)" fg:x="18339" fg:w="54"/><text x="18.2593%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (46 samples, 0.05%)</title><rect x="18.0171%" y="677" width="0.0452%" height="15" fill="rgb(229,3,52)" fg:x="18347" fg:w="46"/><text x="18.2671%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (46 samples, 0.05%)</title><rect x="18.0171%" y="661" width="0.0452%" height="15" fill="rgb(253,49,37)" fg:x="18347" fg:w="46"/><text x="18.2671%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (11 samples, 0.01%)</title><rect x="18.0515%" y="645" width="0.0108%" height="15" fill="rgb(240,103,49)" fg:x="18382" fg:w="11"/><text x="18.3015%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (11 samples, 0.01%)</title><rect x="18.0515%" y="629" width="0.0108%" height="15" fill="rgb(250,182,30)" fg:x="18382" fg:w="11"/><text x="18.3015%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (11 samples, 0.01%)</title><rect x="18.0515%" y="613" width="0.0108%" height="15" fill="rgb(248,8,30)" fg:x="18382" fg:w="11"/><text x="18.3015%" y="623.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (16 samples, 0.02%)</title><rect x="18.0652%" y="725" width="0.0157%" height="15" fill="rgb(237,120,30)" fg:x="18396" fg:w="16"/><text x="18.3152%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (16 samples, 0.02%)</title><rect x="18.0652%" y="709" width="0.0157%" height="15" fill="rgb(221,146,34)" fg:x="18396" fg:w="16"/><text x="18.3152%" y="719.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (16 samples, 0.02%)</title><rect x="18.0652%" y="693" width="0.0157%" height="15" fill="rgb(242,55,13)" fg:x="18396" fg:w="16"/><text x="18.3152%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (16 samples, 0.02%)</title><rect x="18.0652%" y="677" width="0.0157%" height="15" fill="rgb(242,112,31)" fg:x="18396" fg:w="16"/><text x="18.3152%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (16 samples, 0.02%)</title><rect x="18.0652%" y="661" width="0.0157%" height="15" fill="rgb(249,192,27)" fg:x="18396" fg:w="16"/><text x="18.3152%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (16 samples, 0.02%)</title><rect x="18.0652%" y="645" width="0.0157%" height="15" fill="rgb(208,204,44)" fg:x="18396" fg:w="16"/><text x="18.3152%" y="655.50"></text></g><g><title>alloc::slice::hack::to_vec (16 samples, 0.02%)</title><rect x="18.0652%" y="629" width="0.0157%" height="15" fill="rgb(208,93,54)" fg:x="18396" fg:w="16"/><text x="18.3152%" y="639.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (16 samples, 0.02%)</title><rect x="18.0652%" y="613" width="0.0157%" height="15" fill="rgb(242,1,31)" fg:x="18396" fg:w="16"/><text x="18.3152%" y="623.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (41 samples, 0.04%)</title><rect x="18.0967%" y="645" width="0.0403%" height="15" fill="rgb(241,83,25)" fg:x="18428" fg:w="41"/><text x="18.3467%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (41 samples, 0.04%)</title><rect x="18.0967%" y="629" width="0.0403%" height="15" fill="rgb(205,169,50)" fg:x="18428" fg:w="41"/><text x="18.3467%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (64 samples, 0.06%)</title><rect x="18.0898%" y="661" width="0.0628%" height="15" fill="rgb(239,186,37)" fg:x="18421" fg:w="64"/><text x="18.3398%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (16 samples, 0.02%)</title><rect x="18.1369%" y="645" width="0.0157%" height="15" fill="rgb(205,221,10)" fg:x="18469" fg:w="16"/><text x="18.3869%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (194 samples, 0.19%)</title><rect x="18.1664%" y="565" width="0.1905%" height="15" fill="rgb(218,196,15)" fg:x="18499" fg:w="194"/><text x="18.4164%" y="575.50"></text></g><g><title>__memcmp_avx2_movbe (91 samples, 0.09%)</title><rect x="18.2675%" y="549" width="0.0894%" height="15" fill="rgb(218,196,35)" fg:x="18602" fg:w="91"/><text x="18.5175%" y="559.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (206 samples, 0.20%)</title><rect x="18.1566%" y="629" width="0.2023%" height="15" fill="rgb(233,63,24)" fg:x="18489" fg:w="206"/><text x="18.4066%" y="639.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (196 samples, 0.19%)</title><rect x="18.1664%" y="613" width="0.1925%" height="15" fill="rgb(225,8,4)" fg:x="18499" fg:w="196"/><text x="18.4164%" y="623.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (196 samples, 0.19%)</title><rect x="18.1664%" y="597" width="0.1925%" height="15" fill="rgb(234,105,35)" fg:x="18499" fg:w="196"/><text x="18.4164%" y="607.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (196 samples, 0.19%)</title><rect x="18.1664%" y="581" width="0.1925%" height="15" fill="rgb(236,21,32)" fg:x="18499" fg:w="196"/><text x="18.4164%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (84 samples, 0.08%)</title><rect x="18.3628%" y="581" width="0.0825%" height="15" fill="rgb(228,109,6)" fg:x="18699" fg:w="84"/><text x="18.6128%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (84 samples, 0.08%)</title><rect x="18.3628%" y="565" width="0.0825%" height="15" fill="rgb(229,215,31)" fg:x="18699" fg:w="84"/><text x="18.6128%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (84 samples, 0.08%)</title><rect x="18.3628%" y="549" width="0.0825%" height="15" fill="rgb(221,52,54)" fg:x="18699" fg:w="84"/><text x="18.6128%" y="559.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::try_set_dirty (372 samples, 0.37%)</title><rect x="18.0819%" y="725" width="0.3653%" height="15" fill="rgb(252,129,43)" fg:x="18413" fg:w="372"/><text x="18.3319%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (364 samples, 0.36%)</title><rect x="18.0898%" y="709" width="0.3575%" height="15" fill="rgb(248,183,27)" fg:x="18421" fg:w="364"/><text x="18.3398%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (364 samples, 0.36%)</title><rect x="18.0898%" y="693" width="0.3575%" height="15" fill="rgb(250,0,22)" fg:x="18421" fg:w="364"/><text x="18.3398%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (364 samples, 0.36%)</title><rect x="18.0898%" y="677" width="0.3575%" height="15" fill="rgb(213,166,10)" fg:x="18421" fg:w="364"/><text x="18.3398%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (300 samples, 0.29%)</title><rect x="18.1526%" y="661" width="0.2946%" height="15" fill="rgb(207,163,36)" fg:x="18485" fg:w="300"/><text x="18.4026%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (299 samples, 0.29%)</title><rect x="18.1536%" y="645" width="0.2936%" height="15" fill="rgb(208,122,22)" fg:x="18486" fg:w="299"/><text x="18.4036%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (89 samples, 0.09%)</title><rect x="18.3598%" y="629" width="0.0874%" height="15" fill="rgb(207,104,49)" fg:x="18696" fg:w="89"/><text x="18.6098%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (89 samples, 0.09%)</title><rect x="18.3598%" y="613" width="0.0874%" height="15" fill="rgb(248,211,50)" fg:x="18696" fg:w="89"/><text x="18.6098%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (89 samples, 0.09%)</title><rect x="18.3598%" y="597" width="0.0874%" height="15" fill="rgb(217,13,45)" fg:x="18696" fg:w="89"/><text x="18.6098%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (15 samples, 0.01%)</title><rect x="18.4561%" y="693" width="0.0147%" height="15" fill="rgb(211,216,49)" fg:x="18794" fg:w="15"/><text x="18.7061%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="18.4561%" y="677" width="0.0147%" height="15" fill="rgb(221,58,53)" fg:x="18794" fg:w="15"/><text x="18.7061%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (15 samples, 0.01%)</title><rect x="18.4561%" y="661" width="0.0147%" height="15" fill="rgb(220,112,41)" fg:x="18794" fg:w="15"/><text x="18.7061%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="18.4561%" y="645" width="0.0147%" height="15" fill="rgb(236,38,28)" fg:x="18794" fg:w="15"/><text x="18.7061%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (15 samples, 0.01%)</title><rect x="18.4561%" y="629" width="0.0147%" height="15" fill="rgb(227,195,22)" fg:x="18794" fg:w="15"/><text x="18.7061%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.01%)</title><rect x="18.4561%" y="613" width="0.0147%" height="15" fill="rgb(214,55,33)" fg:x="18794" fg:w="15"/><text x="18.7061%" y="623.50"></text></g><g><title>__rdl_dealloc (15 samples, 0.01%)</title><rect x="18.4561%" y="597" width="0.0147%" height="15" fill="rgb(248,80,13)" fg:x="18794" fg:w="15"/><text x="18.7061%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (14 samples, 0.01%)</title><rect x="18.4571%" y="581" width="0.0137%" height="15" fill="rgb(238,52,6)" fg:x="18795" fg:w="14"/><text x="18.7071%" y="591.50"></text></g><g><title>__GI___libc_free (14 samples, 0.01%)</title><rect x="18.4571%" y="565" width="0.0137%" height="15" fill="rgb(224,198,47)" fg:x="18795" fg:w="14"/><text x="18.7071%" y="575.50"></text></g><g><title>hashbrown::map::make_insert_hash (20 samples, 0.02%)</title><rect x="18.4708%" y="693" width="0.0196%" height="15" fill="rgb(233,171,20)" fg:x="18809" fg:w="20"/><text x="18.7208%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="18.4767%" y="677" width="0.0137%" height="15" fill="rgb(241,30,25)" fg:x="18815" fg:w="14"/><text x="18.7267%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (13 samples, 0.01%)</title><rect x="18.4777%" y="661" width="0.0128%" height="15" fill="rgb(207,171,38)" fg:x="18816" fg:w="13"/><text x="18.7277%" y="671.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (12 samples, 0.01%)</title><rect x="18.4983%" y="581" width="0.0118%" height="15" fill="rgb(234,70,1)" fg:x="18837" fg:w="12"/><text x="18.7483%" y="591.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.01%)</title><rect x="18.4973%" y="661" width="0.0137%" height="15" fill="rgb(232,178,18)" fg:x="18836" fg:w="14"/><text x="18.7473%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (14 samples, 0.01%)</title><rect x="18.4973%" y="645" width="0.0137%" height="15" fill="rgb(241,78,40)" fg:x="18836" fg:w="14"/><text x="18.7473%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (13 samples, 0.01%)</title><rect x="18.4983%" y="629" width="0.0128%" height="15" fill="rgb(222,35,25)" fg:x="18837" fg:w="13"/><text x="18.7483%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.01%)</title><rect x="18.4983%" y="613" width="0.0128%" height="15" fill="rgb(207,92,16)" fg:x="18837" fg:w="13"/><text x="18.7483%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (13 samples, 0.01%)</title><rect x="18.4983%" y="597" width="0.0128%" height="15" fill="rgb(216,59,51)" fg:x="18837" fg:w="13"/><text x="18.7483%" y="607.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (461 samples, 0.45%)</title><rect x="18.0633%" y="741" width="0.4527%" height="15" fill="rgb(213,80,28)" fg:x="18394" fg:w="461"/><text x="18.3133%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (70 samples, 0.07%)</title><rect x="18.4472%" y="725" width="0.0687%" height="15" fill="rgb(220,93,7)" fg:x="18785" fg:w="70"/><text x="18.6972%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (66 samples, 0.06%)</title><rect x="18.4512%" y="709" width="0.0648%" height="15" fill="rgb(225,24,44)" fg:x="18789" fg:w="66"/><text x="18.7012%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (26 samples, 0.03%)</title><rect x="18.4904%" y="693" width="0.0255%" height="15" fill="rgb(243,74,40)" fg:x="18829" fg:w="26"/><text x="18.7404%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (26 samples, 0.03%)</title><rect x="18.4904%" y="677" width="0.0255%" height="15" fill="rgb(228,39,7)" fg:x="18829" fg:w="26"/><text x="18.7404%" y="687.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (770 samples, 0.76%)</title><rect x="17.7814%" y="773" width="0.7562%" height="15" fill="rgb(227,79,8)" fg:x="18107" fg:w="770"/><text x="18.0314%" y="783.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (700 samples, 0.69%)</title><rect x="17.8502%" y="757" width="0.6874%" height="15" fill="rgb(236,58,11)" fg:x="18177" fg:w="700"/><text x="18.1002%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (20 samples, 0.02%)</title><rect x="18.5179%" y="741" width="0.0196%" height="15" fill="rgb(249,63,35)" fg:x="18857" fg:w="20"/><text x="18.7679%" y="751.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (780 samples, 0.77%)</title><rect x="17.7795%" y="789" width="0.7660%" height="15" fill="rgb(252,114,16)" fg:x="18105" fg:w="780"/><text x="18.0295%" y="799.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (34 samples, 0.03%)</title><rect x="18.5494%" y="789" width="0.0334%" height="15" fill="rgb(254,151,24)" fg:x="18889" fg:w="34"/><text x="18.7994%" y="799.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (32 samples, 0.03%)</title><rect x="18.5513%" y="773" width="0.0314%" height="15" fill="rgb(253,54,39)" fg:x="18891" fg:w="32"/><text x="18.8013%" y="783.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (32 samples, 0.03%)</title><rect x="18.5513%" y="757" width="0.0314%" height="15" fill="rgb(243,25,45)" fg:x="18891" fg:w="32"/><text x="18.8013%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="18.5719%" y="741" width="0.0108%" height="15" fill="rgb(234,134,9)" fg:x="18912" fg:w="11"/><text x="18.8219%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;bevy_render::render_graph::command::Command&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="18.5975%" y="741" width="0.0304%" height="15" fill="rgb(227,166,31)" fg:x="18938" fg:w="31"/><text x="18.8475%" y="751.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="18.5975%" y="725" width="0.0304%" height="15" fill="rgb(245,143,41)" fg:x="18938" fg:w="31"/><text x="18.8475%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (31 samples, 0.03%)</title><rect x="18.5975%" y="709" width="0.0304%" height="15" fill="rgb(238,181,32)" fg:x="18938" fg:w="31"/><text x="18.8475%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (31 samples, 0.03%)</title><rect x="18.5975%" y="693" width="0.0304%" height="15" fill="rgb(224,113,18)" fg:x="18938" fg:w="31"/><text x="18.8475%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (31 samples, 0.03%)</title><rect x="18.5975%" y="677" width="0.0304%" height="15" fill="rgb(240,229,28)" fg:x="18938" fg:w="31"/><text x="18.8475%" y="687.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::copy_staging_buffer_to_final_buffers (62 samples, 0.06%)</title><rect x="18.5867%" y="789" width="0.0609%" height="15" fill="rgb(250,185,3)" fg:x="18927" fg:w="62"/><text x="18.8367%" y="799.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (57 samples, 0.06%)</title><rect x="18.5916%" y="773" width="0.0560%" height="15" fill="rgb(212,59,25)" fg:x="18932" fg:w="57"/><text x="18.8416%" y="783.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::push (57 samples, 0.06%)</title><rect x="18.5916%" y="757" width="0.0560%" height="15" fill="rgb(221,87,20)" fg:x="18932" fg:w="57"/><text x="18.8416%" y="767.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (20 samples, 0.02%)</title><rect x="18.6279%" y="741" width="0.0196%" height="15" fill="rgb(213,74,28)" fg:x="18969" fg:w="20"/><text x="18.8779%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (20 samples, 0.02%)</title><rect x="18.6279%" y="725" width="0.0196%" height="15" fill="rgb(224,132,34)" fg:x="18969" fg:w="20"/><text x="18.8779%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (20 samples, 0.02%)</title><rect x="18.6279%" y="709" width="0.0196%" height="15" fill="rgb(222,101,24)" fg:x="18969" fg:w="20"/><text x="18.8779%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20 samples, 0.02%)</title><rect x="18.6279%" y="693" width="0.0196%" height="15" fill="rgb(254,142,4)" fg:x="18969" fg:w="20"/><text x="18.8779%" y="703.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (38 samples, 0.04%)</title><rect x="18.6741%" y="677" width="0.0373%" height="15" fill="rgb(230,229,49)" fg:x="19016" fg:w="38"/><text x="18.9241%" y="687.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (38 samples, 0.04%)</title><rect x="18.6741%" y="661" width="0.0373%" height="15" fill="rgb(238,70,47)" fg:x="19016" fg:w="38"/><text x="18.9241%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (12 samples, 0.01%)</title><rect x="18.7114%" y="629" width="0.0118%" height="15" fill="rgb(231,160,17)" fg:x="19054" fg:w="12"/><text x="18.9614%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.01%)</title><rect x="18.7114%" y="613" width="0.0118%" height="15" fill="rgb(218,68,53)" fg:x="19054" fg:w="12"/><text x="18.9614%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="18.7114%" y="597" width="0.0118%" height="15" fill="rgb(236,111,10)" fg:x="19054" fg:w="12"/><text x="18.9614%" y="607.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (79 samples, 0.08%)</title><rect x="18.6476%" y="789" width="0.0776%" height="15" fill="rgb(224,34,41)" fg:x="18989" fg:w="79"/><text x="18.8976%" y="799.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_or_assign_index (72 samples, 0.07%)</title><rect x="18.6544%" y="773" width="0.0707%" height="15" fill="rgb(241,118,19)" fg:x="18996" fg:w="72"/><text x="18.9044%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (69 samples, 0.07%)</title><rect x="18.6574%" y="757" width="0.0678%" height="15" fill="rgb(238,129,25)" fg:x="18999" fg:w="69"/><text x="18.9074%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (69 samples, 0.07%)</title><rect x="18.6574%" y="741" width="0.0678%" height="15" fill="rgb(238,22,31)" fg:x="18999" fg:w="69"/><text x="18.9074%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (69 samples, 0.07%)</title><rect x="18.6574%" y="725" width="0.0678%" height="15" fill="rgb(222,174,48)" fg:x="18999" fg:w="69"/><text x="18.9074%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (62 samples, 0.06%)</title><rect x="18.6643%" y="709" width="0.0609%" height="15" fill="rgb(206,152,40)" fg:x="19006" fg:w="62"/><text x="18.9143%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (60 samples, 0.06%)</title><rect x="18.6662%" y="693" width="0.0589%" height="15" fill="rgb(218,99,54)" fg:x="19008" fg:w="60"/><text x="18.9162%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (14 samples, 0.01%)</title><rect x="18.7114%" y="677" width="0.0137%" height="15" fill="rgb(220,174,26)" fg:x="19054" fg:w="14"/><text x="18.9614%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (14 samples, 0.01%)</title><rect x="18.7114%" y="661" width="0.0137%" height="15" fill="rgb(245,116,9)" fg:x="19054" fg:w="14"/><text x="18.9614%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (14 samples, 0.01%)</title><rect x="18.7114%" y="645" width="0.0137%" height="15" fill="rgb(209,72,35)" fg:x="19054" fg:w="14"/><text x="18.9614%" y="655.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (1,701 samples, 1.67%)</title><rect x="17.0704%" y="805" width="1.6704%" height="15" fill="rgb(226,126,21)" fg:x="17383" fg:w="1701"/><text x="17.3204%" y="815.50"></text></g><g><title>bevy_sprite::color_material::material_texture_detection_system (14 samples, 0.01%)</title><rect x="18.7438%" y="805" width="0.0137%" height="15" fill="rgb(227,192,1)" fg:x="19087" fg:w="14"/><text x="18.9938%" y="815.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (3,897 samples, 3.83%)</title><rect x="14.9493%" y="853" width="3.8269%" height="15" fill="rgb(237,180,29)" fg:x="15223" fg:w="3897"/><text x="15.1993%" y="863.50">&lt;Fun..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3,865 samples, 3.80%)</title><rect x="14.9807%" y="837" width="3.7955%" height="15" fill="rgb(230,197,35)" fg:x="15255" fg:w="3865"/><text x="15.2307%" y="847.50">core..</text></g><g><title>core::ops::function::Fn::call (3,864 samples, 3.79%)</title><rect x="14.9817%" y="821" width="3.7945%" height="15" fill="rgb(246,193,31)" fg:x="15256" fg:w="3864"/><text x="15.2317%" y="831.50">core..</text></g><g><title>engine::engine::world::item::spawn_hamburger_every_second (12 samples, 0.01%)</title><rect x="18.7644%" y="805" width="0.0118%" height="15" fill="rgb(241,36,4)" fg:x="19108" fg:w="12"/><text x="19.0144%" y="815.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (21 samples, 0.02%)</title><rect x="18.7772%" y="837" width="0.0206%" height="15" fill="rgb(241,130,17)" fg:x="19121" fg:w="21"/><text x="19.0272%" y="847.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter_with_id (11 samples, 0.01%)</title><rect x="18.8155%" y="773" width="0.0108%" height="15" fill="rgb(206,137,32)" fg:x="19160" fg:w="11"/><text x="19.0655%" y="783.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (13 samples, 0.01%)</title><rect x="18.8155%" y="789" width="0.0128%" height="15" fill="rgb(237,228,51)" fg:x="19160" fg:w="13"/><text x="19.0655%" y="799.50"></text></g><g><title>bevy_egui::systems::update_window_contexts (11 samples, 0.01%)</title><rect x="18.8283%" y="789" width="0.0108%" height="15" fill="rgb(243,6,42)" fg:x="19173" fg:w="11"/><text x="19.0783%" y="799.50"></text></g><g><title>bevy_egui::systems::process_input (36 samples, 0.04%)</title><rect x="18.8047%" y="805" width="0.0354%" height="15" fill="rgb(251,74,28)" fg:x="19149" fg:w="36"/><text x="19.0547%" y="815.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (74 samples, 0.07%)</title><rect x="18.7762%" y="853" width="0.0727%" height="15" fill="rgb(218,20,49)" fg:x="19120" fg:w="74"/><text x="19.0262%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (51 samples, 0.05%)</title><rect x="18.7988%" y="837" width="0.0501%" height="15" fill="rgb(238,28,14)" fg:x="19143" fg:w="51"/><text x="19.0488%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (45 samples, 0.04%)</title><rect x="18.8047%" y="821" width="0.0442%" height="15" fill="rgb(229,40,46)" fg:x="19149" fg:w="45"/><text x="19.0547%" y="831.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6),()&gt;&gt;::run (18 samples, 0.02%)</title><rect x="18.8489%" y="853" width="0.0177%" height="15" fill="rgb(244,195,20)" fg:x="19194" fg:w="18"/><text x="19.0989%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (14 samples, 0.01%)</title><rect x="18.8528%" y="837" width="0.0137%" height="15" fill="rgb(253,56,35)" fg:x="19198" fg:w="14"/><text x="19.1028%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (14 samples, 0.01%)</title><rect x="18.8528%" y="821" width="0.0137%" height="15" fill="rgb(210,149,44)" fg:x="19198" fg:w="14"/><text x="19.1028%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="18.9137%" y="789" width="0.0118%" height="15" fill="rgb(240,135,12)" fg:x="19260" fg:w="12"/><text x="19.1637%" y="799.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (14 samples, 0.01%)</title><rect x="18.9323%" y="757" width="0.0137%" height="15" fill="rgb(251,24,50)" fg:x="19279" fg:w="14"/><text x="19.1823%" y="767.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (14 samples, 0.01%)</title><rect x="18.9323%" y="741" width="0.0137%" height="15" fill="rgb(243,200,47)" fg:x="19279" fg:w="14"/><text x="19.1823%" y="751.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (14 samples, 0.01%)</title><rect x="18.9323%" y="725" width="0.0137%" height="15" fill="rgb(224,166,26)" fg:x="19279" fg:w="14"/><text x="19.1823%" y="735.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (14 samples, 0.01%)</title><rect x="18.9323%" y="709" width="0.0137%" height="15" fill="rgb(233,0,47)" fg:x="19279" fg:w="14"/><text x="19.1823%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="18.9343%" y="693" width="0.0118%" height="15" fill="rgb(253,80,5)" fg:x="19281" fg:w="12"/><text x="19.1843%" y="703.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (12 samples, 0.01%)</title><rect x="18.9343%" y="677" width="0.0118%" height="15" fill="rgb(214,133,25)" fg:x="19281" fg:w="12"/><text x="19.1843%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.01%)</title><rect x="18.9343%" y="661" width="0.0118%" height="15" fill="rgb(209,27,14)" fg:x="19281" fg:w="12"/><text x="19.1843%" y="671.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::set_table (19 samples, 0.02%)</title><rect x="18.9323%" y="773" width="0.0187%" height="15" fill="rgb(219,102,51)" fg:x="19279" fg:w="19"/><text x="19.1823%" y="783.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (22 samples, 0.02%)</title><rect x="18.9510%" y="773" width="0.0216%" height="15" fill="rgb(237,18,16)" fg:x="19298" fg:w="22"/><text x="19.2010%" y="783.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (22 samples, 0.02%)</title><rect x="18.9510%" y="757" width="0.0216%" height="15" fill="rgb(241,85,17)" fg:x="19298" fg:w="22"/><text x="19.2010%" y="767.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::is_changed (22 samples, 0.02%)</title><rect x="18.9510%" y="741" width="0.0216%" height="15" fill="rgb(236,90,42)" fg:x="19298" fg:w="22"/><text x="19.2010%" y="751.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (18 samples, 0.02%)</title><rect x="18.9549%" y="725" width="0.0177%" height="15" fill="rgb(249,57,21)" fg:x="19302" fg:w="18"/><text x="19.2049%" y="735.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (53 samples, 0.05%)</title><rect x="18.9255%" y="789" width="0.0520%" height="15" fill="rgb(243,12,36)" fg:x="19272" fg:w="53"/><text x="19.1755%" y="799.50"></text></g><g><title>parking::Parker::new (19 samples, 0.02%)</title><rect x="19.0011%" y="693" width="0.0187%" height="15" fill="rgb(253,128,47)" fg:x="19349" fg:w="19"/><text x="19.2511%" y="703.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker (22 samples, 0.02%)</title><rect x="19.0011%" y="709" width="0.0216%" height="15" fill="rgb(207,33,20)" fg:x="19349" fg:w="22"/><text x="19.2511%" y="719.50"></text></g><g><title>futures_lite::future::block_on (43 samples, 0.04%)</title><rect x="18.9814%" y="773" width="0.0422%" height="15" fill="rgb(233,215,35)" fg:x="19329" fg:w="43"/><text x="19.2314%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (40 samples, 0.04%)</title><rect x="18.9844%" y="757" width="0.0393%" height="15" fill="rgb(249,188,52)" fg:x="19332" fg:w="40"/><text x="19.2344%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (40 samples, 0.04%)</title><rect x="18.9844%" y="741" width="0.0393%" height="15" fill="rgb(225,12,32)" fg:x="19332" fg:w="40"/><text x="19.2344%" y="751.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (37 samples, 0.04%)</title><rect x="18.9873%" y="725" width="0.0363%" height="15" fill="rgb(247,98,14)" fg:x="19335" fg:w="37"/><text x="19.2373%" y="735.50"></text></g><g><title>wgpu::backend::native_gpu_future::new_gpu_future (11 samples, 0.01%)</title><rect x="19.0345%" y="741" width="0.0108%" height="15" fill="rgb(247,219,48)" fg:x="19383" fg:w="11"/><text x="19.2845%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (60 samples, 0.06%)</title><rect x="19.0315%" y="757" width="0.0589%" height="15" fill="rgb(253,60,48)" fg:x="19380" fg:w="60"/><text x="19.2815%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (46 samples, 0.05%)</title><rect x="19.0453%" y="741" width="0.0452%" height="15" fill="rgb(245,15,52)" fg:x="19394" fg:w="46"/><text x="19.2953%" y="751.50"></text></g><g><title>wgpu::BufferSlice::map_async (66 samples, 0.06%)</title><rect x="19.0315%" y="773" width="0.0648%" height="15" fill="rgb(220,133,28)" fg:x="19380" fg:w="66"/><text x="19.2815%" y="783.50"></text></g><g><title>alloc::collections::vec_deque::VecDeque&lt;T,A&gt;::pop_front (11 samples, 0.01%)</title><rect x="19.1278%" y="645" width="0.0108%" height="15" fill="rgb(217,180,4)" fg:x="19478" fg:w="11"/><text x="19.3778%" y="655.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::cleanup (13 samples, 0.01%)</title><rect x="19.1278%" y="661" width="0.0128%" height="15" fill="rgb(251,24,1)" fg:x="19478" fg:w="13"/><text x="19.3778%" y="671.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (18 samples, 0.02%)</title><rect x="19.1258%" y="693" width="0.0177%" height="15" fill="rgb(212,185,49)" fg:x="19476" fg:w="18"/><text x="19.3758%" y="703.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (18 samples, 0.02%)</title><rect x="19.1258%" y="677" width="0.0177%" height="15" fill="rgb(215,175,22)" fg:x="19476" fg:w="18"/><text x="19.3758%" y="687.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (25 samples, 0.02%)</title><rect x="19.1238%" y="709" width="0.0246%" height="15" fill="rgb(250,205,14)" fg:x="19474" fg:w="25"/><text x="19.3738%" y="719.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::handle_mapping (21 samples, 0.02%)</title><rect x="19.1484%" y="709" width="0.0206%" height="15" fill="rgb(225,211,22)" fg:x="19499" fg:w="21"/><text x="19.3984%" y="719.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (77 samples, 0.08%)</title><rect x="19.1062%" y="725" width="0.0756%" height="15" fill="rgb(251,179,42)" fg:x="19456" fg:w="77"/><text x="19.3562%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (216 samples, 0.21%)</title><rect x="18.9805%" y="789" width="0.2121%" height="15" fill="rgb(208,216,51)" fg:x="19328" fg:w="216"/><text x="19.2305%" y="799.50"></text></g><g><title>wgpu::Device::poll (98 samples, 0.10%)</title><rect x="19.0963%" y="773" width="0.0962%" height="15" fill="rgb(235,36,11)" fg:x="19446" fg:w="98"/><text x="19.3463%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (98 samples, 0.10%)</title><rect x="19.0963%" y="757" width="0.0962%" height="15" fill="rgb(213,189,28)" fg:x="19446" fg:w="98"/><text x="19.3463%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (95 samples, 0.09%)</title><rect x="19.0993%" y="741" width="0.0933%" height="15" fill="rgb(227,203,42)" fg:x="19449" fg:w="95"/><text x="19.3493%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (26 samples, 0.03%)</title><rect x="19.1975%" y="757" width="0.0255%" height="15" fill="rgb(244,72,36)" fg:x="19549" fg:w="26"/><text x="19.4475%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (24 samples, 0.02%)</title><rect x="19.1995%" y="741" width="0.0236%" height="15" fill="rgb(213,53,17)" fg:x="19551" fg:w="24"/><text x="19.4495%" y="751.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (11 samples, 0.01%)</title><rect x="19.2122%" y="725" width="0.0108%" height="15" fill="rgb(207,167,3)" fg:x="19564" fg:w="11"/><text x="19.4622%" y="735.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (11 samples, 0.01%)</title><rect x="19.2122%" y="709" width="0.0108%" height="15" fill="rgb(216,98,30)" fg:x="19564" fg:w="11"/><text x="19.4622%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (11 samples, 0.01%)</title><rect x="19.2122%" y="693" width="0.0108%" height="15" fill="rgb(236,123,15)" fg:x="19564" fg:w="11"/><text x="19.4622%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (33 samples, 0.03%)</title><rect x="19.1926%" y="789" width="0.0324%" height="15" fill="rgb(248,81,50)" fg:x="19544" fg:w="33"/><text x="19.4426%" y="799.50"></text></g><g><title>wgpu::Buffer::unmap (29 samples, 0.03%)</title><rect x="19.1965%" y="773" width="0.0285%" height="15" fill="rgb(214,120,4)" fg:x="19548" fg:w="29"/><text x="19.4465%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (11 samples, 0.01%)</title><rect x="19.2574%" y="469" width="0.0108%" height="15" fill="rgb(208,179,34)" fg:x="19610" fg:w="11"/><text x="19.5074%" y="479.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (24 samples, 0.02%)</title><rect x="19.2456%" y="661" width="0.0236%" height="15" fill="rgb(227,140,7)" fg:x="19598" fg:w="24"/><text x="19.4956%" y="671.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (24 samples, 0.02%)</title><rect x="19.2456%" y="645" width="0.0236%" height="15" fill="rgb(214,22,6)" fg:x="19598" fg:w="24"/><text x="19.4956%" y="655.50"></text></g><g><title>tracing::span::Span::new (12 samples, 0.01%)</title><rect x="19.2574%" y="629" width="0.0118%" height="15" fill="rgb(207,137,27)" fg:x="19610" fg:w="12"/><text x="19.5074%" y="639.50"></text></g><g><title>tracing_core::dispatcher::get_default (12 samples, 0.01%)</title><rect x="19.2574%" y="613" width="0.0118%" height="15" fill="rgb(210,8,46)" fg:x="19610" fg:w="12"/><text x="19.5074%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.01%)</title><rect x="19.2574%" y="597" width="0.0118%" height="15" fill="rgb(240,16,54)" fg:x="19610" fg:w="12"/><text x="19.5074%" y="607.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (12 samples, 0.01%)</title><rect x="19.2574%" y="581" width="0.0118%" height="15" fill="rgb(211,209,29)" fg:x="19610" fg:w="12"/><text x="19.5074%" y="591.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (12 samples, 0.01%)</title><rect x="19.2574%" y="565" width="0.0118%" height="15" fill="rgb(226,228,24)" fg:x="19610" fg:w="12"/><text x="19.5074%" y="575.50"></text></g><g><title>tracing::span::Span::new_with (12 samples, 0.01%)</title><rect x="19.2574%" y="549" width="0.0118%" height="15" fill="rgb(222,84,9)" fg:x="19610" fg:w="12"/><text x="19.5074%" y="559.50"></text></g><g><title>tracing::span::Span::make_with (12 samples, 0.01%)</title><rect x="19.2574%" y="533" width="0.0118%" height="15" fill="rgb(234,203,30)" fg:x="19610" fg:w="12"/><text x="19.5074%" y="543.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (12 samples, 0.01%)</title><rect x="19.2574%" y="517" width="0.0118%" height="15" fill="rgb(238,109,14)" fg:x="19610" fg:w="12"/><text x="19.5074%" y="527.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (12 samples, 0.01%)</title><rect x="19.2574%" y="501" width="0.0118%" height="15" fill="rgb(233,206,34)" fg:x="19610" fg:w="12"/><text x="19.5074%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (12 samples, 0.01%)</title><rect x="19.2574%" y="485" width="0.0118%" height="15" fill="rgb(220,167,47)" fg:x="19610" fg:w="12"/><text x="19.5074%" y="495.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (41 samples, 0.04%)</title><rect x="19.2397%" y="677" width="0.0403%" height="15" fill="rgb(238,105,10)" fg:x="19592" fg:w="41"/><text x="19.4897%" y="687.50"></text></g><g><title>wgpu_core::device::alloc::MemoryBlock&lt;B&gt;::bind_buffer (11 samples, 0.01%)</title><rect x="19.2692%" y="661" width="0.0108%" height="15" fill="rgb(213,227,17)" fg:x="19622" fg:w="11"/><text x="19.5192%" y="671.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::bind_buffer_memory (11 samples, 0.01%)</title><rect x="19.2692%" y="645" width="0.0108%" height="15" fill="rgb(217,132,38)" fg:x="19622" fg:w="11"/><text x="19.5192%" y="655.50"></text></g><g><title>ash::device::DeviceV1_0::bind_buffer_memory (11 samples, 0.01%)</title><rect x="19.2692%" y="629" width="0.0108%" height="15" fill="rgb(242,146,4)" fg:x="19622" fg:w="11"/><text x="19.5192%" y="639.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (11 samples, 0.01%)</title><rect x="19.2692%" y="613" width="0.0108%" height="15" fill="rgb(212,61,9)" fg:x="19622" fg:w="11"/><text x="19.5192%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (11 samples, 0.01%)</title><rect x="19.2692%" y="597" width="0.0108%" height="15" fill="rgb(247,126,22)" fg:x="19622" fg:w="11"/><text x="19.5192%" y="607.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer (52 samples, 0.05%)</title><rect x="19.2319%" y="741" width="0.0511%" height="15" fill="rgb(220,196,2)" fg:x="19584" fg:w="52"/><text x="19.4819%" y="751.50"></text></g><g><title>wgpu::Device::create_buffer (45 samples, 0.04%)</title><rect x="19.2387%" y="725" width="0.0442%" height="15" fill="rgb(208,46,4)" fg:x="19591" fg:w="45"/><text x="19.4887%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (45 samples, 0.04%)</title><rect x="19.2387%" y="709" width="0.0442%" height="15" fill="rgb(252,104,46)" fg:x="19591" fg:w="45"/><text x="19.4887%" y="719.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (44 samples, 0.04%)</title><rect x="19.2397%" y="693" width="0.0432%" height="15" fill="rgb(237,152,48)" fg:x="19592" fg:w="44"/><text x="19.4897%" y="703.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system::{{closure}} (62 samples, 0.06%)</title><rect x="19.2270%" y="773" width="0.0609%" height="15" fill="rgb(221,59,37)" fg:x="19579" fg:w="62"/><text x="19.4770%" y="783.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (59 samples, 0.06%)</title><rect x="19.2299%" y="757" width="0.0579%" height="15" fill="rgb(209,202,51)" fg:x="19582" fg:w="59"/><text x="19.4799%" y="767.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (79 samples, 0.08%)</title><rect x="19.2250%" y="789" width="0.0776%" height="15" fill="rgb(228,81,30)" fg:x="19577" fg:w="79"/><text x="19.4750%" y="799.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (11 samples, 0.01%)</title><rect x="19.2918%" y="773" width="0.0108%" height="15" fill="rgb(227,42,39)" fg:x="19645" fg:w="11"/><text x="19.5418%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="19.3222%" y="581" width="0.0137%" height="15" fill="rgb(221,26,2)" fg:x="19676" fg:w="14"/><text x="19.5722%" y="591.50"></text></g><g><title>malloc_consolidate (15 samples, 0.01%)</title><rect x="19.3605%" y="565" width="0.0147%" height="15" fill="rgb(254,61,31)" fg:x="19715" fg:w="15"/><text x="19.6105%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (70 samples, 0.07%)</title><rect x="19.3144%" y="693" width="0.0687%" height="15" fill="rgb(222,173,38)" fg:x="19668" fg:w="70"/><text x="19.5644%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (70 samples, 0.07%)</title><rect x="19.3144%" y="677" width="0.0687%" height="15" fill="rgb(218,50,12)" fg:x="19668" fg:w="70"/><text x="19.5644%" y="687.50"></text></g><g><title>alloc::alloc::realloc (70 samples, 0.07%)</title><rect x="19.3144%" y="661" width="0.0687%" height="15" fill="rgb(223,88,40)" fg:x="19668" fg:w="70"/><text x="19.5644%" y="671.50"></text></g><g><title>__rdl_realloc (70 samples, 0.07%)</title><rect x="19.3144%" y="645" width="0.0687%" height="15" fill="rgb(237,54,19)" fg:x="19668" fg:w="70"/><text x="19.5644%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (70 samples, 0.07%)</title><rect x="19.3144%" y="629" width="0.0687%" height="15" fill="rgb(251,129,25)" fg:x="19668" fg:w="70"/><text x="19.5644%" y="639.50"></text></g><g><title>__GI___libc_realloc (70 samples, 0.07%)</title><rect x="19.3144%" y="613" width="0.0687%" height="15" fill="rgb(238,97,19)" fg:x="19668" fg:w="70"/><text x="19.5644%" y="623.50"></text></g><g><title>_int_realloc (66 samples, 0.06%)</title><rect x="19.3183%" y="597" width="0.0648%" height="15" fill="rgb(240,169,18)" fg:x="19672" fg:w="66"/><text x="19.5683%" y="607.50"></text></g><g><title>_int_malloc (40 samples, 0.04%)</title><rect x="19.3438%" y="581" width="0.0393%" height="15" fill="rgb(230,187,49)" fg:x="19698" fg:w="40"/><text x="19.5938%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (74 samples, 0.07%)</title><rect x="19.3134%" y="725" width="0.0727%" height="15" fill="rgb(209,44,26)" fg:x="19667" fg:w="74"/><text x="19.5634%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (74 samples, 0.07%)</title><rect x="19.3134%" y="709" width="0.0727%" height="15" fill="rgb(244,0,6)" fg:x="19667" fg:w="74"/><text x="19.5634%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (75 samples, 0.07%)</title><rect x="19.3134%" y="773" width="0.0737%" height="15" fill="rgb(248,18,21)" fg:x="19667" fg:w="75"/><text x="19.5634%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (75 samples, 0.07%)</title><rect x="19.3134%" y="757" width="0.0737%" height="15" fill="rgb(245,180,19)" fg:x="19667" fg:w="75"/><text x="19.5634%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (75 samples, 0.07%)</title><rect x="19.3134%" y="741" width="0.0737%" height="15" fill="rgb(252,118,36)" fg:x="19667" fg:w="75"/><text x="19.5634%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (101 samples, 0.10%)</title><rect x="19.3065%" y="789" width="0.0992%" height="15" fill="rgb(210,224,19)" fg:x="19660" fg:w="101"/><text x="19.5565%" y="799.50"></text></g><g><title>core::ptr::write (19 samples, 0.02%)</title><rect x="19.3870%" y="773" width="0.0187%" height="15" fill="rgb(218,30,24)" fg:x="19742" fg:w="19"/><text x="19.6370%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (11 samples, 0.01%)</title><rect x="19.5098%" y="645" width="0.0108%" height="15" fill="rgb(219,75,50)" fg:x="19867" fg:w="11"/><text x="19.7598%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (11 samples, 0.01%)</title><rect x="19.5098%" y="629" width="0.0108%" height="15" fill="rgb(234,72,50)" fg:x="19867" fg:w="11"/><text x="19.7598%" y="639.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (17 samples, 0.02%)</title><rect x="19.5098%" y="693" width="0.0167%" height="15" fill="rgb(219,100,48)" fg:x="19867" fg:w="17"/><text x="19.7598%" y="703.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (17 samples, 0.02%)</title><rect x="19.5098%" y="677" width="0.0167%" height="15" fill="rgb(253,5,41)" fg:x="19867" fg:w="17"/><text x="19.7598%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (17 samples, 0.02%)</title><rect x="19.5098%" y="661" width="0.0167%" height="15" fill="rgb(247,181,11)" fg:x="19867" fg:w="17"/><text x="19.7598%" y="671.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (22 samples, 0.02%)</title><rect x="19.5098%" y="709" width="0.0216%" height="15" fill="rgb(222,223,25)" fg:x="19867" fg:w="22"/><text x="19.7598%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (57 samples, 0.06%)</title><rect x="19.5019%" y="725" width="0.0560%" height="15" fill="rgb(214,198,28)" fg:x="19859" fg:w="57"/><text x="19.7519%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (27 samples, 0.03%)</title><rect x="19.5314%" y="709" width="0.0265%" height="15" fill="rgb(230,46,43)" fg:x="19889" fg:w="27"/><text x="19.7814%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="19.5854%" y="661" width="0.0196%" height="15" fill="rgb(233,65,53)" fg:x="19944" fg:w="20"/><text x="19.8354%" y="671.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (11 samples, 0.01%)</title><rect x="19.5942%" y="645" width="0.0108%" height="15" fill="rgb(221,121,27)" fg:x="19953" fg:w="11"/><text x="19.8442%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="19.5785%" y="693" width="0.0275%" height="15" fill="rgb(247,70,47)" fg:x="19937" fg:w="28"/><text x="19.8285%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="19.5785%" y="677" width="0.0275%" height="15" fill="rgb(228,85,35)" fg:x="19937" fg:w="28"/><text x="19.8285%" y="687.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (603 samples, 0.59%)</title><rect x="19.6060%" y="677" width="0.5922%" height="15" fill="rgb(209,50,18)" fg:x="19965" fg:w="603"/><text x="19.8560%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (644 samples, 0.63%)</title><rect x="19.6060%" y="693" width="0.6324%" height="15" fill="rgb(250,19,35)" fg:x="19965" fg:w="644"/><text x="19.8560%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (41 samples, 0.04%)</title><rect x="20.1982%" y="677" width="0.0403%" height="15" fill="rgb(253,107,29)" fg:x="20568" fg:w="41"/><text x="20.4482%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (16 samples, 0.02%)</title><rect x="20.2384%" y="693" width="0.0157%" height="15" fill="rgb(252,179,29)" fg:x="20609" fg:w="16"/><text x="20.4884%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (16 samples, 0.02%)</title><rect x="20.2384%" y="677" width="0.0157%" height="15" fill="rgb(238,194,6)" fg:x="20609" fg:w="16"/><text x="20.4884%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (16 samples, 0.02%)</title><rect x="20.2384%" y="661" width="0.0157%" height="15" fill="rgb(238,164,29)" fg:x="20609" fg:w="16"/><text x="20.4884%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (16 samples, 0.02%)</title><rect x="20.2384%" y="645" width="0.0157%" height="15" fill="rgb(224,25,9)" fg:x="20609" fg:w="16"/><text x="20.4884%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (19 samples, 0.02%)</title><rect x="20.2561%" y="645" width="0.0187%" height="15" fill="rgb(244,153,23)" fg:x="20627" fg:w="19"/><text x="20.5061%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (19 samples, 0.02%)</title><rect x="20.2561%" y="629" width="0.0187%" height="15" fill="rgb(212,203,14)" fg:x="20627" fg:w="19"/><text x="20.5061%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (19 samples, 0.02%)</title><rect x="20.2561%" y="613" width="0.0187%" height="15" fill="rgb(220,164,20)" fg:x="20627" fg:w="19"/><text x="20.5061%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (742 samples, 0.73%)</title><rect x="19.5579%" y="709" width="0.7287%" height="15" fill="rgb(222,203,48)" fg:x="19916" fg:w="742"/><text x="19.8079%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (33 samples, 0.03%)</title><rect x="20.2541%" y="693" width="0.0324%" height="15" fill="rgb(215,159,22)" fg:x="20625" fg:w="33"/><text x="20.5041%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (33 samples, 0.03%)</title><rect x="20.2541%" y="677" width="0.0324%" height="15" fill="rgb(216,183,47)" fg:x="20625" fg:w="33"/><text x="20.5041%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (33 samples, 0.03%)</title><rect x="20.2541%" y="661" width="0.0324%" height="15" fill="rgb(229,195,25)" fg:x="20625" fg:w="33"/><text x="20.5041%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (807 samples, 0.79%)</title><rect x="19.5019%" y="757" width="0.7925%" height="15" fill="rgb(224,132,51)" fg:x="19859" fg:w="807"/><text x="19.7519%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (807 samples, 0.79%)</title><rect x="19.5019%" y="741" width="0.7925%" height="15" fill="rgb(240,63,7)" fg:x="19859" fg:w="807"/><text x="19.7519%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (750 samples, 0.74%)</title><rect x="19.5579%" y="725" width="0.7365%" height="15" fill="rgb(249,182,41)" fg:x="19916" fg:w="750"/><text x="19.8079%" y="735.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (899 samples, 0.88%)</title><rect x="19.4135%" y="789" width="0.8828%" height="15" fill="rgb(243,47,26)" fg:x="19769" fg:w="899"/><text x="19.6635%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (809 samples, 0.79%)</title><rect x="19.5019%" y="773" width="0.7945%" height="15" fill="rgb(233,48,2)" fg:x="19859" fg:w="809"/><text x="19.7519%" y="783.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::resize_buffer_arrays (18 samples, 0.02%)</title><rect x="20.3150%" y="789" width="0.0177%" height="15" fill="rgb(244,165,34)" fg:x="20687" fg:w="18"/><text x="20.5650%" y="799.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (36 samples, 0.04%)</title><rect x="20.3337%" y="789" width="0.0354%" height="15" fill="rgb(207,89,7)" fg:x="20706" fg:w="36"/><text x="20.5837%" y="799.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlas as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::get_render_resource (16 samples, 0.02%)</title><rect x="20.4888%" y="741" width="0.0157%" height="15" fill="rgb(244,117,36)" fg:x="20864" fg:w="16"/><text x="20.7388%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 0.09%)</title><rect x="20.4172%" y="773" width="0.0913%" height="15" fill="rgb(226,144,34)" fg:x="20791" fg:w="93"/><text x="20.6672%" y="783.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (93 samples, 0.09%)</title><rect x="20.4172%" y="757" width="0.0913%" height="15" fill="rgb(213,23,19)" fg:x="20791" fg:w="93"/><text x="20.6672%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;(bevy_asset::handle::HandleUntyped,u64),bevy_render::renderer::render_resource::render_resource::RenderResourceId,ahash::random_state::RandomState&gt;&gt;&gt; (95 samples, 0.09%)</title><rect x="20.5370%" y="741" width="0.0933%" height="15" fill="rgb(217,75,12)" fg:x="20913" fg:w="95"/><text x="20.7870%" y="751.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.09%)</title><rect x="20.5370%" y="725" width="0.0933%" height="15" fill="rgb(224,159,17)" fg:x="20913" fg:w="95"/><text x="20.7870%" y="735.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (95 samples, 0.09%)</title><rect x="20.5370%" y="709" width="0.0933%" height="15" fill="rgb(217,118,1)" fg:x="20913" fg:w="95"/><text x="20.7870%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (88 samples, 0.09%)</title><rect x="20.5438%" y="693" width="0.0864%" height="15" fill="rgb(232,180,48)" fg:x="20920" fg:w="88"/><text x="20.7938%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (88 samples, 0.09%)</title><rect x="20.5438%" y="677" width="0.0864%" height="15" fill="rgb(230,27,33)" fg:x="20920" fg:w="88"/><text x="20.7938%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (84 samples, 0.08%)</title><rect x="20.6322%" y="693" width="0.0825%" height="15" fill="rgb(205,31,21)" fg:x="21010" fg:w="84"/><text x="20.8822%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (84 samples, 0.08%)</title><rect x="20.6322%" y="677" width="0.0825%" height="15" fill="rgb(253,59,4)" fg:x="21010" fg:w="84"/><text x="20.8822%" y="687.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (88 samples, 0.09%)</title><rect x="20.6303%" y="741" width="0.0864%" height="15" fill="rgb(224,201,9)" fg:x="21008" fg:w="88"/><text x="20.8803%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (88 samples, 0.09%)</title><rect x="20.6303%" y="725" width="0.0864%" height="15" fill="rgb(229,206,30)" fg:x="21008" fg:w="88"/><text x="20.8803%" y="735.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (86 samples, 0.08%)</title><rect x="20.6322%" y="709" width="0.0845%" height="15" fill="rgb(212,67,47)" fg:x="21010" fg:w="86"/><text x="20.8822%" y="719.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="20.7383%" y="645" width="0.0128%" height="15" fill="rgb(211,96,50)" fg:x="21118" fg:w="13"/><text x="20.9883%" y="655.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (16 samples, 0.02%)</title><rect x="20.7383%" y="661" width="0.0157%" height="15" fill="rgb(252,114,18)" fg:x="21118" fg:w="16"/><text x="20.9883%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (41 samples, 0.04%)</title><rect x="20.7216%" y="693" width="0.0403%" height="15" fill="rgb(223,58,37)" fg:x="21101" fg:w="41"/><text x="20.9716%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (24 samples, 0.02%)</title><rect x="20.7383%" y="677" width="0.0236%" height="15" fill="rgb(237,70,4)" fg:x="21118" fg:w="24"/><text x="20.9883%" y="687.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (13 samples, 0.01%)</title><rect x="20.7619%" y="677" width="0.0128%" height="15" fill="rgb(244,85,46)" fg:x="21142" fg:w="13"/><text x="21.0119%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (11 samples, 0.01%)</title><rect x="20.8041%" y="613" width="0.0108%" height="15" fill="rgb(223,39,52)" fg:x="21185" fg:w="11"/><text x="21.0541%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (11 samples, 0.01%)</title><rect x="20.8041%" y="597" width="0.0108%" height="15" fill="rgb(218,200,14)" fg:x="21185" fg:w="11"/><text x="21.0541%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="20.8041%" y="581" width="0.0108%" height="15" fill="rgb(208,171,16)" fg:x="21185" fg:w="11"/><text x="21.0541%" y="591.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (311 samples, 0.31%)</title><rect x="20.5154%" y="757" width="0.3054%" height="15" fill="rgb(234,200,18)" fg:x="20891" fg:w="311"/><text x="20.7654%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (106 samples, 0.10%)</title><rect x="20.7167%" y="741" width="0.1041%" height="15" fill="rgb(228,45,11)" fg:x="21096" fg:w="106"/><text x="20.9667%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (106 samples, 0.10%)</title><rect x="20.7167%" y="725" width="0.1041%" height="15" fill="rgb(237,182,11)" fg:x="21096" fg:w="106"/><text x="20.9667%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (101 samples, 0.10%)</title><rect x="20.7216%" y="709" width="0.0992%" height="15" fill="rgb(241,175,49)" fg:x="21101" fg:w="101"/><text x="20.9716%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (60 samples, 0.06%)</title><rect x="20.7619%" y="693" width="0.0589%" height="15" fill="rgb(247,38,35)" fg:x="21142" fg:w="60"/><text x="21.0119%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (47 samples, 0.05%)</title><rect x="20.7746%" y="677" width="0.0462%" height="15" fill="rgb(228,39,49)" fg:x="21155" fg:w="47"/><text x="21.0246%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (22 samples, 0.02%)</title><rect x="20.7992%" y="661" width="0.0216%" height="15" fill="rgb(226,101,26)" fg:x="21180" fg:w="22"/><text x="21.0492%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (22 samples, 0.02%)</title><rect x="20.7992%" y="645" width="0.0216%" height="15" fill="rgb(206,141,19)" fg:x="21180" fg:w="22"/><text x="21.0492%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (22 samples, 0.02%)</title><rect x="20.7992%" y="629" width="0.0216%" height="15" fill="rgb(211,200,13)" fg:x="21180" fg:w="22"/><text x="21.0492%" y="639.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (414 samples, 0.41%)</title><rect x="20.5085%" y="773" width="0.4066%" height="15" fill="rgb(241,121,6)" fg:x="20884" fg:w="414"/><text x="20.7585%" y="783.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::clone_weak_untyped (94 samples, 0.09%)</title><rect x="20.8227%" y="757" width="0.0923%" height="15" fill="rgb(234,221,29)" fg:x="21204" fg:w="94"/><text x="21.0727%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="20.9337%" y="677" width="0.0147%" height="15" fill="rgb(229,136,5)" fg:x="21317" fg:w="15"/><text x="21.1837%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (26 samples, 0.03%)</title><rect x="20.9337%" y="741" width="0.0255%" height="15" fill="rgb(238,36,11)" fg:x="21317" fg:w="26"/><text x="21.1837%" y="751.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (26 samples, 0.03%)</title><rect x="20.9337%" y="725" width="0.0255%" height="15" fill="rgb(251,55,41)" fg:x="21317" fg:w="26"/><text x="21.1837%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (26 samples, 0.03%)</title><rect x="20.9337%" y="709" width="0.0255%" height="15" fill="rgb(242,34,40)" fg:x="21317" fg:w="26"/><text x="21.1837%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (26 samples, 0.03%)</title><rect x="20.9337%" y="693" width="0.0255%" height="15" fill="rgb(215,42,17)" fg:x="21317" fg:w="26"/><text x="21.1837%" y="703.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (33 samples, 0.03%)</title><rect x="20.9337%" y="757" width="0.0324%" height="15" fill="rgb(207,44,46)" fg:x="21317" fg:w="33"/><text x="21.1837%" y="767.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (20 samples, 0.02%)</title><rect x="21.0466%" y="725" width="0.0196%" height="15" fill="rgb(211,206,28)" fg:x="21432" fg:w="20"/><text x="21.2966%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (17 samples, 0.02%)</title><rect x="21.0741%" y="645" width="0.0167%" height="15" fill="rgb(237,167,16)" fg:x="21460" fg:w="17"/><text x="21.3241%" y="655.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (106 samples, 0.10%)</title><rect x="21.1301%" y="565" width="0.1041%" height="15" fill="rgb(233,66,6)" fg:x="21517" fg:w="106"/><text x="21.3801%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (15 samples, 0.01%)</title><rect x="21.2381%" y="565" width="0.0147%" height="15" fill="rgb(246,123,29)" fg:x="21627" fg:w="15"/><text x="21.4881%" y="575.50"></text></g><g><title>_int_free (48 samples, 0.05%)</title><rect x="21.5504%" y="437" width="0.0471%" height="15" fill="rgb(209,62,40)" fg:x="21945" fg:w="48"/><text x="21.8004%" y="447.50"></text></g><g><title>_int_malloc (164 samples, 0.16%)</title><rect x="21.5975%" y="437" width="0.1611%" height="15" fill="rgb(218,4,25)" fg:x="21993" fg:w="164"/><text x="21.8475%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (497 samples, 0.49%)</title><rect x="21.2725%" y="549" width="0.4881%" height="15" fill="rgb(253,91,49)" fg:x="21662" fg:w="497"/><text x="21.5225%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (497 samples, 0.49%)</title><rect x="21.2725%" y="533" width="0.4881%" height="15" fill="rgb(228,155,29)" fg:x="21662" fg:w="497"/><text x="21.5225%" y="543.50"></text></g><g><title>alloc::alloc::realloc (495 samples, 0.49%)</title><rect x="21.2745%" y="517" width="0.4861%" height="15" fill="rgb(243,57,37)" fg:x="21664" fg:w="495"/><text x="21.5245%" y="527.50"></text></g><g><title>__rdl_realloc (495 samples, 0.49%)</title><rect x="21.2745%" y="501" width="0.4861%" height="15" fill="rgb(244,167,17)" fg:x="21664" fg:w="495"/><text x="21.5245%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (495 samples, 0.49%)</title><rect x="21.2745%" y="485" width="0.4861%" height="15" fill="rgb(207,181,38)" fg:x="21664" fg:w="495"/><text x="21.5245%" y="495.50"></text></g><g><title>__GI___libc_realloc (490 samples, 0.48%)</title><rect x="21.2794%" y="469" width="0.4812%" height="15" fill="rgb(211,8,23)" fg:x="21669" fg:w="490"/><text x="21.5294%" y="479.50"></text></g><g><title>_int_realloc (269 samples, 0.26%)</title><rect x="21.4964%" y="453" width="0.2642%" height="15" fill="rgb(235,11,44)" fg:x="21890" fg:w="269"/><text x="21.7464%" y="463.50"></text></g><g><title>__GI___libc_malloc (96 samples, 0.09%)</title><rect x="21.7606%" y="549" width="0.0943%" height="15" fill="rgb(248,18,52)" fg:x="22159" fg:w="96"/><text x="22.0106%" y="559.50"></text></g><g><title>_int_malloc (30 samples, 0.03%)</title><rect x="21.8254%" y="533" width="0.0295%" height="15" fill="rgb(208,4,7)" fg:x="22225" fg:w="30"/><text x="22.0754%" y="543.50"></text></g><g><title>alloc::raw_vec::finish_grow (623 samples, 0.61%)</title><rect x="21.2529%" y="565" width="0.6118%" height="15" fill="rgb(240,17,39)" fg:x="21642" fg:w="623"/><text x="21.5029%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (770 samples, 0.76%)</title><rect x="21.1203%" y="581" width="0.7562%" height="15" fill="rgb(207,170,3)" fg:x="21507" fg:w="770"/><text x="21.3703%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (788 samples, 0.77%)</title><rect x="21.1046%" y="629" width="0.7738%" height="15" fill="rgb(236,100,52)" fg:x="21491" fg:w="788"/><text x="21.3546%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (787 samples, 0.77%)</title><rect x="21.1056%" y="613" width="0.7728%" height="15" fill="rgb(246,78,51)" fg:x="21492" fg:w="787"/><text x="21.3556%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (773 samples, 0.76%)</title><rect x="21.1193%" y="597" width="0.7591%" height="15" fill="rgb(211,17,15)" fg:x="21506" fg:w="773"/><text x="21.3693%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (71 samples, 0.07%)</title><rect x="21.8784%" y="629" width="0.0697%" height="15" fill="rgb(209,59,46)" fg:x="22279" fg:w="71"/><text x="22.1284%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (71 samples, 0.07%)</title><rect x="21.8784%" y="613" width="0.0697%" height="15" fill="rgb(210,92,25)" fg:x="22279" fg:w="71"/><text x="22.1284%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (904 samples, 0.89%)</title><rect x="21.0663%" y="725" width="0.8877%" height="15" fill="rgb(238,174,52)" fg:x="21452" fg:w="904"/><text x="21.3163%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (896 samples, 0.88%)</title><rect x="21.0741%" y="709" width="0.8799%" height="15" fill="rgb(230,73,7)" fg:x="21460" fg:w="896"/><text x="21.3241%" y="719.50"></text></g><g><title>alloc::string::String::push_str (896 samples, 0.88%)</title><rect x="21.0741%" y="693" width="0.8799%" height="15" fill="rgb(243,124,40)" fg:x="21460" fg:w="896"/><text x="21.3241%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (896 samples, 0.88%)</title><rect x="21.0741%" y="677" width="0.8799%" height="15" fill="rgb(244,170,11)" fg:x="21460" fg:w="896"/><text x="21.3241%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (896 samples, 0.88%)</title><rect x="21.0741%" y="661" width="0.8799%" height="15" fill="rgb(207,114,54)" fg:x="21460" fg:w="896"/><text x="21.3241%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (879 samples, 0.86%)</title><rect x="21.0908%" y="645" width="0.8632%" height="15" fill="rgb(205,42,20)" fg:x="21477" fg:w="879"/><text x="21.3408%" y="655.50"></text></g><g><title>core::fmt::Formatter::pad (16 samples, 0.02%)</title><rect x="21.9668%" y="725" width="0.0157%" height="15" fill="rgb(230,30,28)" fg:x="22369" fg:w="16"/><text x="22.2168%" y="735.50"></text></g><g><title>alloc::fmt::format (1,086 samples, 1.07%)</title><rect x="20.9190%" y="773" width="1.0665%" height="15" fill="rgb(205,73,54)" fg:x="21302" fg:w="1086"/><text x="21.1690%" y="783.50"></text></g><g><title>core::fmt::Write::write_fmt (1,038 samples, 1.02%)</title><rect x="20.9661%" y="757" width="1.0193%" height="15" fill="rgb(254,227,23)" fg:x="21350" fg:w="1038"/><text x="21.2161%" y="767.50"></text></g><g><title>core::fmt::write (985 samples, 0.97%)</title><rect x="21.0182%" y="741" width="0.9673%" height="15" fill="rgb(228,202,34)" fg:x="21403" fg:w="985"/><text x="21.2682%" y="751.50"></text></g><g><title>core::fmt::Arguments::new_v1 (15 samples, 0.01%)</title><rect x="21.9904%" y="773" width="0.0147%" height="15" fill="rgb(222,225,37)" fg:x="22393" fg:w="15"/><text x="22.2404%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (151 samples, 0.15%)</title><rect x="22.0051%" y="709" width="0.1483%" height="15" fill="rgb(221,14,54)" fg:x="22408" fg:w="151"/><text x="22.2551%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (151 samples, 0.15%)</title><rect x="22.0051%" y="693" width="0.1483%" height="15" fill="rgb(254,102,2)" fg:x="22408" fg:w="151"/><text x="22.2551%" y="703.50"></text></g><g><title>__rdl_dealloc (151 samples, 0.15%)</title><rect x="22.0051%" y="677" width="0.1483%" height="15" fill="rgb(232,104,17)" fg:x="22408" fg:w="151"/><text x="22.2551%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (147 samples, 0.14%)</title><rect x="22.0090%" y="661" width="0.1444%" height="15" fill="rgb(250,220,14)" fg:x="22412" fg:w="147"/><text x="22.2590%" y="671.50"></text></g><g><title>__GI___libc_free (147 samples, 0.14%)</title><rect x="22.0090%" y="645" width="0.1444%" height="15" fill="rgb(241,158,9)" fg:x="22412" fg:w="147"/><text x="22.2590%" y="655.50"></text></g><g><title>_int_free (125 samples, 0.12%)</title><rect x="22.0306%" y="629" width="0.1228%" height="15" fill="rgb(246,9,43)" fg:x="22434" fg:w="125"/><text x="22.2806%" y="639.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (1,820 samples, 1.79%)</title><rect x="20.3690%" y="789" width="1.7873%" height="15" fill="rgb(206,73,33)" fg:x="20742" fg:w="1820"/><text x="20.6190%" y="799.50">b..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (154 samples, 0.15%)</title><rect x="22.0051%" y="773" width="0.1512%" height="15" fill="rgb(222,79,8)" fg:x="22408" fg:w="154"/><text x="22.2551%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (154 samples, 0.15%)</title><rect x="22.0051%" y="757" width="0.1512%" height="15" fill="rgb(234,8,54)" fg:x="22408" fg:w="154"/><text x="22.2551%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (154 samples, 0.15%)</title><rect x="22.0051%" y="741" width="0.1512%" height="15" fill="rgb(209,134,38)" fg:x="22408" fg:w="154"/><text x="22.2551%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (154 samples, 0.15%)</title><rect x="22.0051%" y="725" width="0.1512%" height="15" fill="rgb(230,127,29)" fg:x="22408" fg:w="154"/><text x="22.2551%" y="735.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (21 samples, 0.02%)</title><rect x="22.1563%" y="773" width="0.0206%" height="15" fill="rgb(242,44,41)" fg:x="22562" fg:w="21"/><text x="22.4063%" y="783.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (16 samples, 0.02%)</title><rect x="22.1612%" y="757" width="0.0157%" height="15" fill="rgb(222,56,43)" fg:x="22567" fg:w="16"/><text x="22.4112%" y="767.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (58 samples, 0.06%)</title><rect x="22.2437%" y="757" width="0.0570%" height="15" fill="rgb(238,39,47)" fg:x="22651" fg:w="58"/><text x="22.4937%" y="767.50"></text></g><g><title>ahash::operations::folded_multiply (20 samples, 0.02%)</title><rect x="22.3193%" y="709" width="0.0196%" height="15" fill="rgb(226,79,43)" fg:x="22728" fg:w="20"/><text x="22.5693%" y="719.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (18 samples, 0.02%)</title><rect x="22.3213%" y="693" width="0.0177%" height="15" fill="rgb(242,105,53)" fg:x="22730" fg:w="18"/><text x="22.5713%" y="703.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (24 samples, 0.02%)</title><rect x="22.3193%" y="725" width="0.0236%" height="15" fill="rgb(251,132,46)" fg:x="22728" fg:w="24"/><text x="22.5693%" y="735.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u64 (38 samples, 0.04%)</title><rect x="22.3498%" y="613" width="0.0373%" height="15" fill="rgb(231,77,14)" fg:x="22759" fg:w="38"/><text x="22.5998%" y="623.50"></text></g><g><title>ahash::operations::folded_multiply (14 samples, 0.01%)</title><rect x="22.4087%" y="597" width="0.0137%" height="15" fill="rgb(240,135,9)" fg:x="22819" fg:w="14"/><text x="22.6587%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (76 samples, 0.07%)</title><rect x="22.3498%" y="645" width="0.0746%" height="15" fill="rgb(248,109,14)" fg:x="22759" fg:w="76"/><text x="22.5998%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (76 samples, 0.07%)</title><rect x="22.3498%" y="629" width="0.0746%" height="15" fill="rgb(227,146,52)" fg:x="22759" fg:w="76"/><text x="22.5998%" y="639.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (38 samples, 0.04%)</title><rect x="22.3871%" y="613" width="0.0373%" height="15" fill="rgb(232,54,3)" fg:x="22797" fg:w="38"/><text x="22.6371%" y="623.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (80 samples, 0.08%)</title><rect x="22.3498%" y="693" width="0.0786%" height="15" fill="rgb(229,201,43)" fg:x="22759" fg:w="80"/><text x="22.5998%" y="703.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (80 samples, 0.08%)</title><rect x="22.3498%" y="677" width="0.0786%" height="15" fill="rgb(252,161,33)" fg:x="22759" fg:w="80"/><text x="22.5998%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (80 samples, 0.08%)</title><rect x="22.3498%" y="661" width="0.0786%" height="15" fill="rgb(226,146,40)" fg:x="22759" fg:w="80"/><text x="22.5998%" y="671.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (86 samples, 0.08%)</title><rect x="22.3458%" y="709" width="0.0845%" height="15" fill="rgb(219,47,25)" fg:x="22755" fg:w="86"/><text x="22.5958%" y="719.50"></text></g><g><title>hashbrown::map::make_insert_hash (136 samples, 0.13%)</title><rect x="22.3193%" y="741" width="0.1336%" height="15" fill="rgb(250,135,13)" fg:x="22728" fg:w="136"/><text x="22.5693%" y="751.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (109 samples, 0.11%)</title><rect x="22.3458%" y="725" width="0.1070%" height="15" fill="rgb(219,229,18)" fg:x="22755" fg:w="109"/><text x="22.5958%" y="735.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (23 samples, 0.02%)</title><rect x="22.4303%" y="709" width="0.0226%" height="15" fill="rgb(217,152,27)" fg:x="22841" fg:w="23"/><text x="22.6803%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="22.4637%" y="709" width="0.0108%" height="15" fill="rgb(225,71,47)" fg:x="22875" fg:w="11"/><text x="22.7137%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="22.4637%" y="725" width="0.0167%" height="15" fill="rgb(220,139,14)" fg:x="22875" fg:w="17"/><text x="22.7137%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (33 samples, 0.03%)</title><rect x="22.4814%" y="677" width="0.0324%" height="15" fill="rgb(247,54,32)" fg:x="22893" fg:w="33"/><text x="22.7314%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (33 samples, 0.03%)</title><rect x="22.4814%" y="661" width="0.0324%" height="15" fill="rgb(252,131,39)" fg:x="22893" fg:w="33"/><text x="22.7314%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.03%)</title><rect x="22.4814%" y="645" width="0.0324%" height="15" fill="rgb(210,108,39)" fg:x="22893" fg:w="33"/><text x="22.7314%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (44 samples, 0.04%)</title><rect x="22.4804%" y="725" width="0.0432%" height="15" fill="rgb(205,23,29)" fg:x="22892" fg:w="44"/><text x="22.7304%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (44 samples, 0.04%)</title><rect x="22.4804%" y="709" width="0.0432%" height="15" fill="rgb(246,139,46)" fg:x="22892" fg:w="44"/><text x="22.7304%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (44 samples, 0.04%)</title><rect x="22.4804%" y="693" width="0.0432%" height="15" fill="rgb(250,81,26)" fg:x="22892" fg:w="44"/><text x="22.7304%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (801 samples, 0.79%)</title><rect x="22.4529%" y="741" width="0.7866%" height="15" fill="rgb(214,104,7)" fg:x="22864" fg:w="801"/><text x="22.7029%" y="751.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (729 samples, 0.72%)</title><rect x="22.5236%" y="725" width="0.7159%" height="15" fill="rgb(233,189,8)" fg:x="22936" fg:w="729"/><text x="22.7736%" y="735.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (729 samples, 0.72%)</title><rect x="22.5236%" y="709" width="0.7159%" height="15" fill="rgb(228,141,17)" fg:x="22936" fg:w="729"/><text x="22.7736%" y="719.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (729 samples, 0.72%)</title><rect x="22.5236%" y="693" width="0.7159%" height="15" fill="rgb(247,157,1)" fg:x="22936" fg:w="729"/><text x="22.7736%" y="703.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (26 samples, 0.03%)</title><rect x="23.2140%" y="677" width="0.0255%" height="15" fill="rgb(249,225,5)" fg:x="23639" fg:w="26"/><text x="23.4640%" y="687.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (26 samples, 0.03%)</title><rect x="23.2140%" y="661" width="0.0255%" height="15" fill="rgb(242,55,13)" fg:x="23639" fg:w="26"/><text x="23.4640%" y="671.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (26 samples, 0.03%)</title><rect x="23.2140%" y="645" width="0.0255%" height="15" fill="rgb(230,49,50)" fg:x="23639" fg:w="26"/><text x="23.4640%" y="655.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (974 samples, 0.96%)</title><rect x="22.3007%" y="757" width="0.9565%" height="15" fill="rgb(241,111,38)" fg:x="22709" fg:w="974"/><text x="22.5507%" y="767.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (18 samples, 0.02%)</title><rect x="23.2395%" y="741" width="0.0177%" height="15" fill="rgb(252,155,4)" fg:x="23665" fg:w="18"/><text x="23.4895%" y="751.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (1,126 samples, 1.11%)</title><rect x="22.1563%" y="789" width="1.1058%" height="15" fill="rgb(212,69,32)" fg:x="22562" fg:w="1126"/><text x="22.4063%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1,105 samples, 1.09%)</title><rect x="22.1769%" y="773" width="1.0851%" height="15" fill="rgb(243,107,47)" fg:x="22583" fg:w="1105"/><text x="22.4269%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;bevy_asset::handle::HandleId&gt;&gt; (16 samples, 0.02%)</title><rect x="23.2719%" y="789" width="0.0157%" height="15" fill="rgb(247,130,12)" fg:x="23698" fg:w="16"/><text x="23.5219%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="23.2719%" y="773" width="0.0157%" height="15" fill="rgb(233,74,16)" fg:x="23698" fg:w="16"/><text x="23.5219%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;bevy_asset::handle::HandleId,alloc::alloc::Global&gt;&gt; (16 samples, 0.02%)</title><rect x="23.2719%" y="757" width="0.0157%" height="15" fill="rgb(208,58,18)" fg:x="23698" fg:w="16"/><text x="23.5219%" y="767.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="23.2719%" y="741" width="0.0157%" height="15" fill="rgb(242,225,1)" fg:x="23698" fg:w="16"/><text x="23.5219%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_asset::handle::HandleId&gt;&gt; (16 samples, 0.02%)</title><rect x="23.2719%" y="725" width="0.0157%" height="15" fill="rgb(249,39,40)" fg:x="23698" fg:w="16"/><text x="23.5219%" y="735.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="23.2719%" y="709" width="0.0157%" height="15" fill="rgb(207,72,44)" fg:x="23698" fg:w="16"/><text x="23.5219%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.02%)</title><rect x="23.2719%" y="693" width="0.0157%" height="15" fill="rgb(215,193,12)" fg:x="23698" fg:w="16"/><text x="23.5219%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (16 samples, 0.02%)</title><rect x="23.2719%" y="677" width="0.0157%" height="15" fill="rgb(248,41,39)" fg:x="23698" fg:w="16"/><text x="23.5219%" y="687.50"></text></g><g><title>__rdl_dealloc (16 samples, 0.02%)</title><rect x="23.2719%" y="661" width="0.0157%" height="15" fill="rgb(253,85,4)" fg:x="23698" fg:w="16"/><text x="23.5219%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (16 samples, 0.02%)</title><rect x="23.2719%" y="645" width="0.0157%" height="15" fill="rgb(243,70,31)" fg:x="23698" fg:w="16"/><text x="23.5219%" y="655.50"></text></g><g><title>__GI___libc_free (16 samples, 0.02%)</title><rect x="23.2719%" y="629" width="0.0157%" height="15" fill="rgb(253,195,26)" fg:x="23698" fg:w="16"/><text x="23.5219%" y="639.50"></text></g><g><title>_int_free (14 samples, 0.01%)</title><rect x="23.2739%" y="613" width="0.0137%" height="15" fill="rgb(243,42,11)" fg:x="23700" fg:w="14"/><text x="23.5239%" y="623.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (4,497 samples, 4.42%)</title><rect x="18.8754%" y="805" width="4.4161%" height="15" fill="rgb(239,66,17)" fg:x="19221" fg:w="4497"/><text x="19.1254%" y="815.50">bevy_..</text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (4,508 samples, 4.43%)</title><rect x="18.8666%" y="853" width="4.4269%" height="15" fill="rgb(217,132,21)" fg:x="19212" fg:w="4508"/><text x="19.1166%" y="863.50">&lt;Func..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4,499 samples, 4.42%)</title><rect x="18.8754%" y="837" width="4.4181%" height="15" fill="rgb(252,202,21)" fg:x="19221" fg:w="4499"/><text x="19.1254%" y="847.50">core:..</text></g><g><title>core::ops::function::Fn::call (4,499 samples, 4.42%)</title><rect x="18.8754%" y="821" width="4.4181%" height="15" fill="rgb(233,98,36)" fg:x="19221" fg:w="4499"/><text x="19.1254%" y="831.50">core:..</text></g><g><title>bevy_ecs_tilemap::tiled::process_loaded_tile_maps (23 samples, 0.02%)</title><rect x="23.3004%" y="805" width="0.0226%" height="15" fill="rgb(216,153,54)" fg:x="23727" fg:w="23"/><text x="23.5504%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (31 samples, 0.03%)</title><rect x="23.3563%" y="677" width="0.0304%" height="15" fill="rgb(250,99,7)" fg:x="23784" fg:w="31"/><text x="23.6063%" y="687.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}} (25 samples, 0.02%)</title><rect x="23.3622%" y="661" width="0.0246%" height="15" fill="rgb(207,56,50)" fg:x="23790" fg:w="25"/><text x="23.6122%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (32 samples, 0.03%)</title><rect x="23.3563%" y="709" width="0.0314%" height="15" fill="rgb(244,61,34)" fg:x="23784" fg:w="32"/><text x="23.6063%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (32 samples, 0.03%)</title><rect x="23.3563%" y="693" width="0.0314%" height="15" fill="rgb(241,50,38)" fg:x="23784" fg:w="32"/><text x="23.6063%" y="703.50"></text></g><g><title>bevy_ui::flex::FlexSurface::compute_window_layouts (64 samples, 0.06%)</title><rect x="23.3298%" y="789" width="0.0628%" height="15" fill="rgb(212,166,30)" fg:x="23757" fg:w="64"/><text x="23.5798%" y="799.50"></text></g><g><title>stretch::node::Stretch::compute_layout (64 samples, 0.06%)</title><rect x="23.3298%" y="773" width="0.0628%" height="15" fill="rgb(249,127,32)" fg:x="23757" fg:w="64"/><text x="23.5798%" y="783.50"></text></g><g><title>stretch::forest::Forest::compute_layout (64 samples, 0.06%)</title><rect x="23.3298%" y="757" width="0.0628%" height="15" fill="rgb(209,103,0)" fg:x="23757" fg:w="64"/><text x="23.5798%" y="767.50"></text></g><g><title>stretch::forest::Forest::compute_layout (60 samples, 0.06%)</title><rect x="23.3338%" y="741" width="0.0589%" height="15" fill="rgb(238,209,51)" fg:x="23761" fg:w="60"/><text x="23.5838%" y="751.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal (59 samples, 0.06%)</title><rect x="23.3347%" y="725" width="0.0579%" height="15" fill="rgb(237,56,23)" fg:x="23762" fg:w="59"/><text x="23.5847%" y="735.50"></text></g><g><title>bevy_ui::flex::FlexSurface::set_window_children (12 samples, 0.01%)</title><rect x="23.3927%" y="789" width="0.0118%" height="15" fill="rgb(215,153,46)" fg:x="23821" fg:w="12"/><text x="23.6427%" y="799.50"></text></g><g><title>bevy_ui::flex::FlexSurface::update_window (12 samples, 0.01%)</title><rect x="23.4045%" y="789" width="0.0118%" height="15" fill="rgb(224,49,31)" fg:x="23833" fg:w="12"/><text x="23.6545%" y="799.50"></text></g><g><title>bevy_ui::flex::flex_node_system (107 samples, 0.11%)</title><rect x="23.3230%" y="805" width="0.1051%" height="15" fill="rgb(250,18,42)" fg:x="23750" fg:w="107"/><text x="23.5730%" y="815.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (145 samples, 0.14%)</title><rect x="23.2935%" y="853" width="0.1424%" height="15" fill="rgb(215,176,39)" fg:x="23720" fg:w="145"/><text x="23.5435%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (138 samples, 0.14%)</title><rect x="23.3004%" y="837" width="0.1355%" height="15" fill="rgb(223,77,29)" fg:x="23727" fg:w="138"/><text x="23.5504%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (138 samples, 0.14%)</title><rect x="23.3004%" y="821" width="0.1355%" height="15" fill="rgb(234,94,52)" fg:x="23727" fg:w="138"/><text x="23.5504%" y="831.50"></text></g><g><title>bevy_ecs::world::World::increment_change_tick (64 samples, 0.06%)</title><rect x="23.4359%" y="853" width="0.0628%" height="15" fill="rgb(220,154,50)" fg:x="23865" fg:w="64"/><text x="23.6859%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (64 samples, 0.06%)</title><rect x="23.4359%" y="837" width="0.0628%" height="15" fill="rgb(212,11,10)" fg:x="23865" fg:w="64"/><text x="23.6859%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_add (64 samples, 0.06%)</title><rect x="23.4359%" y="821" width="0.0628%" height="15" fill="rgb(205,166,19)" fg:x="23865" fg:w="64"/><text x="23.6859%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (33 samples, 0.03%)</title><rect x="23.4987%" y="853" width="0.0324%" height="15" fill="rgb(244,198,16)" fg:x="23929" fg:w="33"/><text x="23.7487%" y="863.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (13,294 samples, 13.05%)</title><rect x="10.4772%" y="869" width="13.0550%" height="15" fill="rgb(219,69,12)" fg:x="10669" fg:w="13294"/><text x="10.7272%" y="879.50">&lt;bevy_ecs::system::i..</text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="23.5341%" y="853" width="0.0412%" height="15" fill="rgb(245,30,7)" fg:x="23965" fg:w="42"/><text x="23.7841%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (41 samples, 0.04%)</title><rect x="23.5351%" y="837" width="0.0403%" height="15" fill="rgb(218,221,48)" fg:x="23966" fg:w="41"/><text x="23.7851%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (41 samples, 0.04%)</title><rect x="23.5351%" y="821" width="0.0403%" height="15" fill="rgb(216,66,15)" fg:x="23966" fg:w="41"/><text x="23.7851%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;()&gt;&gt;&gt; (41 samples, 0.04%)</title><rect x="23.5753%" y="853" width="0.0403%" height="15" fill="rgb(226,122,50)" fg:x="24007" fg:w="41"/><text x="23.8253%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="23.5753%" y="837" width="0.0403%" height="15" fill="rgb(239,156,16)" fg:x="24007" fg:w="41"/><text x="23.8253%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (41 samples, 0.04%)</title><rect x="23.5753%" y="821" width="0.0403%" height="15" fill="rgb(224,27,38)" fg:x="24007" fg:w="41"/><text x="23.8253%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (41 samples, 0.04%)</title><rect x="23.5753%" y="805" width="0.0403%" height="15" fill="rgb(224,39,27)" fg:x="24007" fg:w="41"/><text x="23.8253%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (87 samples, 0.09%)</title><rect x="23.5321%" y="869" width="0.0854%" height="15" fill="rgb(215,92,29)" fg:x="23963" fg:w="87"/><text x="23.7821%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (65 samples, 0.06%)</title><rect x="23.6284%" y="805" width="0.0638%" height="15" fill="rgb(207,159,16)" fg:x="24061" fg:w="65"/><text x="23.8784%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (63 samples, 0.06%)</title><rect x="23.6303%" y="789" width="0.0619%" height="15" fill="rgb(238,163,47)" fg:x="24063" fg:w="63"/><text x="23.8803%" y="799.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.06%)</title><rect x="23.6303%" y="773" width="0.0619%" height="15" fill="rgb(219,91,49)" fg:x="24063" fg:w="63"/><text x="23.8803%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (63 samples, 0.06%)</title><rect x="23.6303%" y="757" width="0.0619%" height="15" fill="rgb(227,167,31)" fg:x="24063" fg:w="63"/><text x="23.8803%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (55 samples, 0.05%)</title><rect x="23.6382%" y="741" width="0.0540%" height="15" fill="rgb(234,80,54)" fg:x="24071" fg:w="55"/><text x="23.8882%" y="751.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (53 samples, 0.05%)</title><rect x="23.6401%" y="725" width="0.0520%" height="15" fill="rgb(212,114,2)" fg:x="24073" fg:w="53"/><text x="23.8901%" y="735.50"></text></g><g><title>event_listener::Inner::lock (106 samples, 0.10%)</title><rect x="23.6942%" y="805" width="0.1041%" height="15" fill="rgb(234,50,24)" fg:x="24128" fg:w="106"/><text x="23.9442%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (106 samples, 0.10%)</title><rect x="23.6942%" y="789" width="0.1041%" height="15" fill="rgb(221,68,8)" fg:x="24128" fg:w="106"/><text x="23.9442%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (106 samples, 0.10%)</title><rect x="23.6942%" y="773" width="0.1041%" height="15" fill="rgb(254,180,31)" fg:x="24128" fg:w="106"/><text x="23.9442%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (93 samples, 0.09%)</title><rect x="23.7069%" y="757" width="0.0913%" height="15" fill="rgb(247,130,50)" fg:x="24141" fg:w="93"/><text x="23.9569%" y="767.50"></text></g><g><title>__GI___pthread_mutex_lock (93 samples, 0.09%)</title><rect x="23.7069%" y="741" width="0.0913%" height="15" fill="rgb(211,109,4)" fg:x="24141" fg:w="93"/><text x="23.9569%" y="751.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (208 samples, 0.20%)</title><rect x="23.6195%" y="821" width="0.2043%" height="15" fill="rgb(238,50,21)" fg:x="24052" fg:w="208"/><text x="23.8695%" y="831.50"></text></g><g><title>event_listener::List::remove (16 samples, 0.02%)</title><rect x="23.8081%" y="805" width="0.0157%" height="15" fill="rgb(225,57,45)" fg:x="24244" fg:w="16"/><text x="24.0581%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (246 samples, 0.24%)</title><rect x="23.6176%" y="869" width="0.2416%" height="15" fill="rgb(209,196,50)" fg:x="24050" fg:w="246"/><text x="23.8676%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (246 samples, 0.24%)</title><rect x="23.6176%" y="853" width="0.2416%" height="15" fill="rgb(242,140,13)" fg:x="24050" fg:w="246"/><text x="23.8676%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (245 samples, 0.24%)</title><rect x="23.6185%" y="837" width="0.2406%" height="15" fill="rgb(217,111,7)" fg:x="24051" fg:w="245"/><text x="23.8685%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (36 samples, 0.04%)</title><rect x="23.8238%" y="821" width="0.0354%" height="15" fill="rgb(253,193,51)" fg:x="24260" fg:w="36"/><text x="24.0738%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.04%)</title><rect x="23.8238%" y="805" width="0.0354%" height="15" fill="rgb(252,70,29)" fg:x="24260" fg:w="36"/><text x="24.0738%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (35 samples, 0.03%)</title><rect x="23.8248%" y="789" width="0.0344%" height="15" fill="rgb(232,127,12)" fg:x="24261" fg:w="35"/><text x="24.0748%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (35 samples, 0.03%)</title><rect x="23.8248%" y="773" width="0.0344%" height="15" fill="rgb(211,180,21)" fg:x="24261" fg:w="35"/><text x="24.0748%" y="783.50"></text></g><g><title>&lt;async_channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (64 samples, 0.06%)</title><rect x="23.8591%" y="853" width="0.0628%" height="15" fill="rgb(229,72,13)" fg:x="24296" fg:w="64"/><text x="24.1091%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (64 samples, 0.06%)</title><rect x="23.8591%" y="837" width="0.0628%" height="15" fill="rgb(240,211,49)" fg:x="24296" fg:w="64"/><text x="24.1091%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (64 samples, 0.06%)</title><rect x="23.8591%" y="821" width="0.0628%" height="15" fill="rgb(219,149,40)" fg:x="24296" fg:w="64"/><text x="24.1091%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Sender&lt;usize&gt;&gt; (105 samples, 0.10%)</title><rect x="23.8591%" y="869" width="0.1031%" height="15" fill="rgb(210,127,46)" fg:x="24296" fg:w="105"/><text x="24.1091%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;usize&gt;&gt;&gt; (41 samples, 0.04%)</title><rect x="23.9220%" y="853" width="0.0403%" height="15" fill="rgb(220,106,7)" fg:x="24360" fg:w="41"/><text x="24.1720%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="23.9220%" y="837" width="0.0403%" height="15" fill="rgb(249,31,22)" fg:x="24360" fg:w="41"/><text x="24.1720%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (41 samples, 0.04%)</title><rect x="23.9220%" y="821" width="0.0403%" height="15" fill="rgb(253,1,49)" fg:x="24360" fg:w="41"/><text x="24.1720%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (41 samples, 0.04%)</title><rect x="23.9220%" y="805" width="0.0403%" height="15" fill="rgb(227,144,33)" fg:x="24360" fg:w="41"/><text x="24.1720%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (15,963 samples, 15.68%)</title><rect x="8.2873%" y="901" width="15.6760%" height="15" fill="rgb(249,163,44)" fg:x="8439" fg:w="15963"/><text x="8.5373%" y="911.50">&lt;core::future::from_gene..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (15,078 samples, 14.81%)</title><rect x="9.1563%" y="885" width="14.8069%" height="15" fill="rgb(234,15,39)" fg:x="9324" fg:w="15078"/><text x="9.4063%" y="895.50">bevy_ecs::schedule::exe..</text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="23.9632%" y="885" width="0.0226%" height="15" fill="rgb(207,66,16)" fg:x="24402" fg:w="23"/><text x="24.2132%" y="895.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (23 samples, 0.02%)</title><rect x="23.9632%" y="869" width="0.0226%" height="15" fill="rgb(233,112,24)" fg:x="24402" fg:w="23"/><text x="24.2132%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="23.9750%" y="853" width="0.0108%" height="15" fill="rgb(230,90,22)" fg:x="24414" fg:w="11"/><text x="24.2250%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="23.9750%" y="837" width="0.0108%" height="15" fill="rgb(229,61,13)" fg:x="24414" fg:w="11"/><text x="24.2250%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (29 samples, 0.03%)</title><rect x="23.9632%" y="901" width="0.0285%" height="15" fill="rgb(225,57,24)" fg:x="24402" fg:w="29"/><text x="24.2132%" y="911.50"></text></g><g><title>core::mem::drop (89 samples, 0.09%)</title><rect x="23.9947%" y="853" width="0.0874%" height="15" fill="rgb(208,169,48)" fg:x="24434" fg:w="89"/><text x="24.2447%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (89 samples, 0.09%)</title><rect x="23.9947%" y="837" width="0.0874%" height="15" fill="rgb(244,218,51)" fg:x="24434" fg:w="89"/><text x="24.2447%" y="847.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (89 samples, 0.09%)</title><rect x="23.9947%" y="821" width="0.0874%" height="15" fill="rgb(214,148,10)" fg:x="24434" fg:w="89"/><text x="24.2447%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (89 samples, 0.09%)</title><rect x="23.9947%" y="805" width="0.0874%" height="15" fill="rgb(225,174,27)" fg:x="24434" fg:w="89"/><text x="24.2447%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (86 samples, 0.08%)</title><rect x="23.9976%" y="789" width="0.0845%" height="15" fill="rgb(230,96,26)" fg:x="24437" fg:w="86"/><text x="24.2476%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (86 samples, 0.08%)</title><rect x="23.9976%" y="773" width="0.0845%" height="15" fill="rgb(232,10,30)" fg:x="24437" fg:w="86"/><text x="24.2476%" y="783.50"></text></g><g><title>slab::Slab&lt;T&gt;::contains (14 samples, 0.01%)</title><rect x="24.0909%" y="853" width="0.0137%" height="15" fill="rgb(222,8,50)" fg:x="24532" fg:w="14"/><text x="24.3409%" y="863.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (236 samples, 0.23%)</title><rect x="23.9917%" y="885" width="0.2318%" height="15" fill="rgb(213,81,27)" fg:x="24431" fg:w="236"/><text x="24.2417%" y="895.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (234 samples, 0.23%)</title><rect x="23.9937%" y="869" width="0.2298%" height="15" fill="rgb(245,50,10)" fg:x="24433" fg:w="234"/><text x="24.2437%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (117 samples, 0.11%)</title><rect x="24.1086%" y="853" width="0.1149%" height="15" fill="rgb(216,100,18)" fg:x="24550" fg:w="117"/><text x="24.3586%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (109 samples, 0.11%)</title><rect x="24.1164%" y="837" width="0.1070%" height="15" fill="rgb(236,147,54)" fg:x="24558" fg:w="109"/><text x="24.3664%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (92 samples, 0.09%)</title><rect x="24.1331%" y="821" width="0.0903%" height="15" fill="rgb(205,143,26)" fg:x="24575" fg:w="92"/><text x="24.3831%" y="831.50"></text></g><g><title>__GI___pthread_mutex_lock (92 samples, 0.09%)</title><rect x="24.1331%" y="805" width="0.0903%" height="15" fill="rgb(236,26,9)" fg:x="24575" fg:w="92"/><text x="24.3831%" y="815.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (45 samples, 0.04%)</title><rect x="24.2264%" y="885" width="0.0442%" height="15" fill="rgb(221,165,53)" fg:x="24670" fg:w="45"/><text x="24.4764%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (318 samples, 0.31%)</title><rect x="23.9917%" y="901" width="0.3123%" height="15" fill="rgb(214,110,17)" fg:x="24431" fg:w="318"/><text x="24.2417%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt; (34 samples, 0.03%)</title><rect x="24.2706%" y="885" width="0.0334%" height="15" fill="rgb(237,197,12)" fg:x="24715" fg:w="34"/><text x="24.5206%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (34 samples, 0.03%)</title><rect x="24.2706%" y="869" width="0.0334%" height="15" fill="rgb(205,84,17)" fg:x="24715" fg:w="34"/><text x="24.5206%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="24.2706%" y="853" width="0.0334%" height="15" fill="rgb(237,18,45)" fg:x="24715" fg:w="34"/><text x="24.5206%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (34 samples, 0.03%)</title><rect x="24.2706%" y="837" width="0.0334%" height="15" fill="rgb(221,87,14)" fg:x="24715" fg:w="34"/><text x="24.5206%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_sub (34 samples, 0.03%)</title><rect x="24.2706%" y="821" width="0.0334%" height="15" fill="rgb(238,186,15)" fg:x="24715" fg:w="34"/><text x="24.5206%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16,395 samples, 16.10%)</title><rect x="8.2048%" y="933" width="16.1002%" height="15" fill="rgb(208,115,11)" fg:x="8355" fg:w="16395"/><text x="8.4548%" y="943.50">&lt;core::future::from_gener..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (16,386 samples, 16.09%)</title><rect x="8.2136%" y="917" width="16.0914%" height="15" fill="rgb(254,175,0)" fg:x="8364" fg:w="16386"/><text x="8.4636%" y="927.50">async_executor::Executor:..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (16 samples, 0.02%)</title><rect x="24.3079%" y="917" width="0.0157%" height="15" fill="rgb(227,24,42)" fg:x="24753" fg:w="16"/><text x="24.5579%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_and (16 samples, 0.02%)</title><rect x="24.3079%" y="901" width="0.0157%" height="15" fill="rgb(223,211,37)" fg:x="24753" fg:w="16"/><text x="24.5579%" y="911.50"></text></g><g><title>async_task::header::Header::take (30 samples, 0.03%)</title><rect x="24.3050%" y="933" width="0.0295%" height="15" fill="rgb(235,49,27)" fg:x="24750" fg:w="30"/><text x="24.5550%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (11 samples, 0.01%)</title><rect x="24.3236%" y="917" width="0.0108%" height="15" fill="rgb(254,97,51)" fg:x="24769" fg:w="11"/><text x="24.5736%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_or (11 samples, 0.01%)</title><rect x="24.3236%" y="901" width="0.0108%" height="15" fill="rgb(249,51,40)" fg:x="24769" fg:w="11"/><text x="24.5736%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (36 samples, 0.04%)</title><rect x="24.3374%" y="933" width="0.0354%" height="15" fill="rgb(210,128,45)" fg:x="24783" fg:w="36"/><text x="24.5874%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (36 samples, 0.04%)</title><rect x="24.3374%" y="917" width="0.0354%" height="15" fill="rgb(224,137,50)" fg:x="24783" fg:w="36"/><text x="24.5874%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (36 samples, 0.04%)</title><rect x="24.3374%" y="901" width="0.0354%" height="15" fill="rgb(242,15,9)" fg:x="24783" fg:w="36"/><text x="24.5874%" y="911.50"></text></g><g><title>async_executor::State::notify (12 samples, 0.01%)</title><rect x="24.3737%" y="869" width="0.0118%" height="15" fill="rgb(233,187,41)" fg:x="24820" fg:w="12"/><text x="24.6237%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (11 samples, 0.01%)</title><rect x="24.3747%" y="853" width="0.0108%" height="15" fill="rgb(227,2,29)" fg:x="24821" fg:w="11"/><text x="24.6247%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="24.3747%" y="837" width="0.0108%" height="15" fill="rgb(222,70,3)" fg:x="24821" fg:w="11"/><text x="24.6247%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (23 samples, 0.02%)</title><rect x="24.3855%" y="869" width="0.0226%" height="15" fill="rgb(213,11,42)" fg:x="24832" fg:w="23"/><text x="24.6355%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.02%)</title><rect x="24.3865%" y="853" width="0.0216%" height="15" fill="rgb(225,150,9)" fg:x="24833" fg:w="22"/><text x="24.6365%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.02%)</title><rect x="24.3865%" y="837" width="0.0216%" height="15" fill="rgb(230,162,45)" fg:x="24833" fg:w="22"/><text x="24.6365%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (37 samples, 0.04%)</title><rect x="24.4366%" y="805" width="0.0363%" height="15" fill="rgb(222,14,52)" fg:x="24884" fg:w="37"/><text x="24.6866%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (37 samples, 0.04%)</title><rect x="24.4366%" y="789" width="0.0363%" height="15" fill="rgb(254,198,14)" fg:x="24884" fg:w="37"/><text x="24.6866%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (29 samples, 0.03%)</title><rect x="24.4729%" y="805" width="0.0285%" height="15" fill="rgb(220,217,30)" fg:x="24921" fg:w="29"/><text x="24.7229%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_or (29 samples, 0.03%)</title><rect x="24.4729%" y="789" width="0.0285%" height="15" fill="rgb(215,146,41)" fg:x="24921" fg:w="29"/><text x="24.7229%" y="799.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (109 samples, 0.11%)</title><rect x="24.4140%" y="853" width="0.1070%" height="15" fill="rgb(217,27,36)" fg:x="24861" fg:w="109"/><text x="24.6640%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (109 samples, 0.11%)</title><rect x="24.4140%" y="837" width="0.1070%" height="15" fill="rgb(219,218,39)" fg:x="24861" fg:w="109"/><text x="24.6640%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (98 samples, 0.10%)</title><rect x="24.4248%" y="821" width="0.0962%" height="15" fill="rgb(219,4,42)" fg:x="24872" fg:w="98"/><text x="24.6748%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (20 samples, 0.02%)</title><rect x="24.5014%" y="805" width="0.0196%" height="15" fill="rgb(249,119,36)" fg:x="24950" fg:w="20"/><text x="24.7514%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (20 samples, 0.02%)</title><rect x="24.5014%" y="789" width="0.0196%" height="15" fill="rgb(209,23,33)" fg:x="24950" fg:w="20"/><text x="24.7514%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (36 samples, 0.04%)</title><rect x="24.5210%" y="853" width="0.0354%" height="15" fill="rgb(211,10,0)" fg:x="24970" fg:w="36"/><text x="24.7710%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (36 samples, 0.04%)</title><rect x="24.5210%" y="837" width="0.0354%" height="15" fill="rgb(208,99,37)" fg:x="24970" fg:w="36"/><text x="24.7710%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (217 samples, 0.21%)</title><rect x="24.3737%" y="885" width="0.2131%" height="15" fill="rgb(213,132,31)" fg:x="24820" fg:w="217"/><text x="24.6237%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (182 samples, 0.18%)</title><rect x="24.4081%" y="869" width="0.1787%" height="15" fill="rgb(243,129,40)" fg:x="24855" fg:w="182"/><text x="24.6581%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (31 samples, 0.03%)</title><rect x="24.5564%" y="853" width="0.0304%" height="15" fill="rgb(210,66,33)" fg:x="25006" fg:w="31"/><text x="24.8064%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (31 samples, 0.03%)</title><rect x="24.5564%" y="837" width="0.0304%" height="15" fill="rgb(209,189,4)" fg:x="25006" fg:w="31"/><text x="24.8064%" y="847.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (14 samples, 0.01%)</title><rect x="24.5947%" y="821" width="0.0137%" height="15" fill="rgb(214,107,37)" fg:x="25045" fg:w="14"/><text x="24.8447%" y="831.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (14 samples, 0.01%)</title><rect x="24.5947%" y="805" width="0.0137%" height="15" fill="rgb(245,88,54)" fg:x="25045" fg:w="14"/><text x="24.8447%" y="815.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (14 samples, 0.01%)</title><rect x="24.5947%" y="789" width="0.0137%" height="15" fill="rgb(205,146,20)" fg:x="25045" fg:w="14"/><text x="24.8447%" y="799.50"></text></g><g><title>__pthread_cond_signal (14 samples, 0.01%)</title><rect x="24.5947%" y="773" width="0.0137%" height="15" fill="rgb(220,161,25)" fg:x="25045" fg:w="14"/><text x="24.8447%" y="783.50"></text></g><g><title>async_task::utils::abort_on_panic (241 samples, 0.24%)</title><rect x="24.3727%" y="933" width="0.2367%" height="15" fill="rgb(215,152,15)" fg:x="24819" fg:w="241"/><text x="24.6227%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (241 samples, 0.24%)</title><rect x="24.3727%" y="917" width="0.2367%" height="15" fill="rgb(233,192,44)" fg:x="24819" fg:w="241"/><text x="24.6227%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (241 samples, 0.24%)</title><rect x="24.3727%" y="901" width="0.2367%" height="15" fill="rgb(240,170,46)" fg:x="24819" fg:w="241"/><text x="24.6227%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (23 samples, 0.02%)</title><rect x="24.5868%" y="885" width="0.0226%" height="15" fill="rgb(207,104,33)" fg:x="25037" fg:w="23"/><text x="24.8368%" y="895.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (22 samples, 0.02%)</title><rect x="24.5878%" y="869" width="0.0216%" height="15" fill="rgb(219,21,39)" fg:x="25038" fg:w="22"/><text x="24.8378%" y="879.50"></text></g><g><title>parking::Unparker::unpark (22 samples, 0.02%)</title><rect x="24.5878%" y="853" width="0.0216%" height="15" fill="rgb(214,133,29)" fg:x="25038" fg:w="22"/><text x="24.8378%" y="863.50"></text></g><g><title>parking::Inner::unpark (19 samples, 0.02%)</title><rect x="24.5907%" y="837" width="0.0187%" height="15" fill="rgb(226,93,6)" fg:x="25041" fg:w="19"/><text x="24.8407%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (158 samples, 0.16%)</title><rect x="24.6094%" y="933" width="0.1552%" height="15" fill="rgb(252,222,34)" fg:x="25060" fg:w="158"/><text x="24.8594%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (158 samples, 0.16%)</title><rect x="24.6094%" y="917" width="0.1552%" height="15" fill="rgb(252,92,48)" fg:x="25060" fg:w="158"/><text x="24.8594%" y="927.50"></text></g><g><title>async_task::runnable::Runnable::run (16,996 samples, 16.69%)</title><rect x="8.0840%" y="965" width="16.6904%" height="15" fill="rgb(245,223,24)" fg:x="8232" fg:w="16996"/><text x="8.3340%" y="975.50">async_task::runnable::Runn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (16,921 samples, 16.62%)</title><rect x="8.1576%" y="949" width="16.6167%" height="15" fill="rgb(205,176,3)" fg:x="8307" fg:w="16921"/><text x="8.4076%" y="959.50">async_task::raw::RawTask&lt;F..</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (20,229 samples, 19.87%)</title><rect x="4.9248%" y="1013" width="19.8653%" height="15" fill="rgb(235,151,15)" fg:x="5015" fg:w="20229"/><text x="5.1748%" y="1023.50">&lt;futures_lite::future::Or&lt;F1,F2..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19,749 samples, 19.39%)</title><rect x="5.3962%" y="997" width="19.3939%" height="15" fill="rgb(237,209,11)" fg:x="5495" fg:w="19749"/><text x="5.6462%" y="1007.50">&lt;core::future::from_generator:..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (19,744 samples, 19.39%)</title><rect x="5.4011%" y="981" width="19.3890%" height="15" fill="rgb(243,227,24)" fg:x="5500" fg:w="19744"/><text x="5.6511%" y="991.50">async_executor::Executor::run:..</text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::Range&lt;A&gt;&gt;::next (16 samples, 0.02%)</title><rect x="24.7744%" y="965" width="0.0157%" height="15" fill="rgb(239,193,16)" fg:x="25228" fg:w="16"/><text x="25.0244%" y="975.50"></text></g><g><title>&lt;core::ops::range::Range&lt;T&gt; as core::iter::range::RangeIteratorImpl&gt;::spec_next (16 samples, 0.02%)</title><rect x="24.7744%" y="949" width="0.0157%" height="15" fill="rgb(231,27,9)" fg:x="25228" fg:w="16"/><text x="25.0244%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20,294 samples, 19.93%)</title><rect x="4.8620%" y="1045" width="19.9291%" height="15" fill="rgb(219,169,10)" fg:x="4951" fg:w="20294"/><text x="5.1120%" y="1055.50">&lt;core::future::from_generator::..</text></g><g><title>async_executor::Executor::run::{{closure}} (20,285 samples, 19.92%)</title><rect x="4.8708%" y="1029" width="19.9203%" height="15" fill="rgb(244,229,43)" fg:x="4960" fg:w="20285"/><text x="5.1208%" y="1039.50">async_executor::Executor::run::..</text></g><g><title>[engine] (32 samples, 0.03%)</title><rect x="24.7911%" y="1045" width="0.0314%" height="15" fill="rgb(254,38,20)" fg:x="25245" fg:w="32"/><text x="25.0411%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.03%)</title><rect x="24.7911%" y="1029" width="0.0314%" height="15" fill="rgb(250,47,30)" fg:x="25245" fg:w="32"/><text x="25.0411%" y="1039.50"></text></g><g><title>__GI___pthread_mutex_unlock (14 samples, 0.01%)</title><rect x="24.9197%" y="1013" width="0.0137%" height="15" fill="rgb(224,124,36)" fg:x="25376" fg:w="14"/><text x="25.1697%" y="1023.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (65 samples, 0.06%)</title><rect x="24.9335%" y="1013" width="0.0638%" height="15" fill="rgb(246,68,51)" fg:x="25390" fg:w="65"/><text x="25.1835%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (64 samples, 0.06%)</title><rect x="24.9993%" y="1013" width="0.0628%" height="15" fill="rgb(253,43,49)" fg:x="25457" fg:w="64"/><text x="25.2493%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (64 samples, 0.06%)</title><rect x="24.9993%" y="997" width="0.0628%" height="15" fill="rgb(219,54,36)" fg:x="25457" fg:w="64"/><text x="25.2493%" y="1007.50"></text></g><g><title>std::sync::mutex::guard_poison (43 samples, 0.04%)</title><rect x="25.0621%" y="997" width="0.0422%" height="15" fill="rgb(227,133,34)" fg:x="25521" fg:w="43"/><text x="25.3121%" y="1007.50"></text></g><g><title>std::sync::poison::Flag::get (16 samples, 0.02%)</title><rect x="25.1043%" y="997" width="0.0157%" height="15" fill="rgb(247,227,15)" fg:x="25564" fg:w="16"/><text x="25.3543%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (16 samples, 0.02%)</title><rect x="25.1043%" y="981" width="0.0157%" height="15" fill="rgb(229,96,14)" fg:x="25564" fg:w="16"/><text x="25.3543%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (16 samples, 0.02%)</title><rect x="25.1043%" y="965" width="0.0157%" height="15" fill="rgb(220,79,17)" fg:x="25564" fg:w="16"/><text x="25.3543%" y="975.50"></text></g><g><title>__condvar_confirm_wakeup (15 samples, 0.01%)</title><rect x="25.2222%" y="949" width="0.0147%" height="15" fill="rgb(205,131,53)" fg:x="25684" fg:w="15"/><text x="25.4722%" y="959.50"></text></g><g><title>__condvar_dec_grefs (144 samples, 0.14%)</title><rect x="25.2369%" y="949" width="0.1414%" height="15" fill="rgb(209,50,29)" fg:x="25699" fg:w="144"/><text x="25.4869%" y="959.50"></text></g><g><title>__pthread_disable_asynccancel (54 samples, 0.05%)</title><rect x="25.6405%" y="933" width="0.0530%" height="15" fill="rgb(245,86,46)" fg:x="26110" fg:w="54"/><text x="25.8905%" y="943.50"></text></g><g><title>__futex_abstimed_wait_common64 (346 samples, 0.34%)</title><rect x="25.3783%" y="949" width="0.3398%" height="15" fill="rgb(235,66,46)" fg:x="25843" fg:w="346"/><text x="25.6283%" y="959.50"></text></g><g><title>__pthread_enable_asynccancel (25 samples, 0.02%)</title><rect x="25.6936%" y="933" width="0.0246%" height="15" fill="rgb(232,148,31)" fg:x="26164" fg:w="25"/><text x="25.9436%" y="943.50"></text></g><g><title>__pthread_cleanup_pop (14 samples, 0.01%)</title><rect x="25.7181%" y="949" width="0.0137%" height="15" fill="rgb(217,149,8)" fg:x="26189" fg:w="14"/><text x="25.9681%" y="959.50"></text></g><g><title>__pthread_cleanup_push (12 samples, 0.01%)</title><rect x="25.7318%" y="949" width="0.0118%" height="15" fill="rgb(209,183,11)" fg:x="26203" fg:w="12"/><text x="25.9818%" y="959.50"></text></g><g><title>__pthread_mutex_cond_lock (20 samples, 0.02%)</title><rect x="25.7436%" y="949" width="0.0196%" height="15" fill="rgb(208,55,20)" fg:x="26215" fg:w="20"/><text x="25.9936%" y="959.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (676 samples, 0.66%)</title><rect x="25.1201%" y="981" width="0.6638%" height="15" fill="rgb(218,39,14)" fg:x="25580" fg:w="676"/><text x="25.3701%" y="991.50"></text></g><g><title>__pthread_cond_wait (676 samples, 0.66%)</title><rect x="25.1201%" y="965" width="0.6638%" height="15" fill="rgb(216,169,33)" fg:x="25580" fg:w="676"/><text x="25.3701%" y="975.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (21 samples, 0.02%)</title><rect x="25.7633%" y="949" width="0.0206%" height="15" fill="rgb(233,80,24)" fg:x="26235" fg:w="21"/><text x="26.0133%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait (744 samples, 0.73%)</title><rect x="25.0621%" y="1013" width="0.7306%" height="15" fill="rgb(213,179,31)" fg:x="25521" fg:w="744"/><text x="25.3121%" y="1023.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (685 samples, 0.67%)</title><rect x="25.1201%" y="997" width="0.6727%" height="15" fill="rgb(209,19,5)" fg:x="25580" fg:w="685"/><text x="25.3701%" y="1007.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (21,350 samples, 20.97%)</title><rect x="4.8492%" y="1061" width="20.9661%" height="15" fill="rgb(219,18,35)" fg:x="4938" fg:w="21350"/><text x="5.0992%" y="1071.50">futures_lite::future::block_on::{..</text></g><g><title>parking::Parker::park (1,011 samples, 0.99%)</title><rect x="24.8225%" y="1045" width="0.9928%" height="15" fill="rgb(209,169,16)" fg:x="25277" fg:w="1011"/><text x="25.0725%" y="1055.50"></text></g><g><title>parking::Inner::park (966 samples, 0.95%)</title><rect x="24.8667%" y="1029" width="0.9486%" height="15" fill="rgb(245,90,51)" fg:x="25322" fg:w="966"/><text x="25.1167%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (23 samples, 0.02%)</title><rect x="25.7927%" y="1013" width="0.0226%" height="15" fill="rgb(220,99,45)" fg:x="26265" fg:w="23"/><text x="26.0427%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (22 samples, 0.02%)</title><rect x="25.7937%" y="997" width="0.0216%" height="15" fill="rgb(249,89,25)" fg:x="26266" fg:w="22"/><text x="26.0437%" y="1007.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (22 samples, 0.02%)</title><rect x="25.7937%" y="981" width="0.0216%" height="15" fill="rgb(239,193,0)" fg:x="26266" fg:w="22"/><text x="26.0437%" y="991.50"></text></g><g><title>__GI___pthread_mutex_lock (22 samples, 0.02%)</title><rect x="25.7937%" y="965" width="0.0216%" height="15" fill="rgb(231,126,1)" fg:x="26266" fg:w="22"/><text x="26.0437%" y="975.50"></text></g><g><title>__GI___clone (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1333" width="20.9671%" height="15" fill="rgb(243,166,3)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1343.50">__GI___clone</text></g><g><title>start_thread (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1317" width="20.9671%" height="15" fill="rgb(223,22,34)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1327.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1301" width="20.9671%" height="15" fill="rgb(251,52,51)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1311.50">std::sys::unix::thread::Thread::n..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1285" width="20.9671%" height="15" fill="rgb(221,165,28)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1295.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1269" width="20.9671%" height="15" fill="rgb(218,121,47)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1279.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1253" width="20.9671%" height="15" fill="rgb(209,120,9)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1263.50">core::ops::function::FnOnce::call..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1237" width="20.9671%" height="15" fill="rgb(236,68,12)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1247.50">std::thread::Builder::spawn_unche..</text></g><g><title>std::panic::catch_unwind (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1221" width="20.9671%" height="15" fill="rgb(225,194,26)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1231.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1205" width="20.9671%" height="15" fill="rgb(231,84,39)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1215.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1189" width="20.9671%" height="15" fill="rgb(210,11,45)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1199.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1173" width="20.9671%" height="15" fill="rgb(224,54,52)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1183.50">&lt;core::panic::unwind_safe::Assert..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1157" width="20.9671%" height="15" fill="rgb(238,102,14)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1167.50">std::thread::Builder::spawn_unche..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1141" width="20.9671%" height="15" fill="rgb(243,160,52)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1151.50">std::sys_common::backtrace::__rus..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1125" width="20.9671%" height="15" fill="rgb(216,114,19)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1135.50">bevy_tasks::task_pool::TaskPool::..</text></g><g><title>futures_lite::future::block_on (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1109" width="20.9671%" height="15" fill="rgb(244,166,37)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1119.50">futures_lite::future::block_on</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1093" width="20.9671%" height="15" fill="rgb(246,29,44)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1103.50">std::thread::local::LocalKey&lt;T&gt;::..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (21,351 samples, 20.97%)</title><rect x="4.8492%" y="1077" width="20.9671%" height="15" fill="rgb(215,56,53)" fg:x="4938" fg:w="21351"/><text x="5.0992%" y="1087.50">std::thread::local::LocalKey&lt;T&gt;::..</text></g><g><title>anon.f27e27a6b09994c1e4b71a68640de21b.58.llvm.3379738672995646130 (11 samples, 0.01%)</title><rect x="25.8281%" y="1333" width="0.0108%" height="15" fill="rgb(217,60,2)" fg:x="26301" fg:w="11"/><text x="26.0781%" y="1343.50"></text></g><g><title>core::fmt::write (11 samples, 0.01%)</title><rect x="25.8281%" y="1317" width="0.0108%" height="15" fill="rgb(207,26,24)" fg:x="26301" fg:w="11"/><text x="26.0781%" y="1327.50"></text></g><g><title>Compute_Task_Po (26,324 samples, 25.85%)</title><rect x="0.0010%" y="1349" width="25.8507%" height="15" fill="rgb(252,210,15)" fg:x="1" fg:w="26324"/><text x="0.2510%" y="1359.50">Compute_Task_Po</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (13 samples, 0.01%)</title><rect x="25.8644%" y="901" width="0.0128%" height="15" fill="rgb(253,209,26)" fg:x="26338" fg:w="13"/><text x="26.1144%" y="911.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked::{{closure}} (13 samples, 0.01%)</title><rect x="25.8644%" y="885" width="0.0128%" height="15" fill="rgb(238,170,14)" fg:x="26338" fg:w="13"/><text x="26.1144%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="25.8605%" y="1045" width="0.0177%" height="15" fill="rgb(216,178,15)" fg:x="26334" fg:w="18"/><text x="26.1105%" y="1055.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (18 samples, 0.02%)</title><rect x="25.8605%" y="1029" width="0.0177%" height="15" fill="rgb(250,197,2)" fg:x="26334" fg:w="18"/><text x="26.1105%" y="1039.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="25.8605%" y="1013" width="0.0177%" height="15" fill="rgb(212,70,42)" fg:x="26334" fg:w="18"/><text x="26.1105%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.02%)</title><rect x="25.8605%" y="997" width="0.0177%" height="15" fill="rgb(227,213,9)" fg:x="26334" fg:w="18"/><text x="26.1105%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (18 samples, 0.02%)</title><rect x="25.8605%" y="981" width="0.0177%" height="15" fill="rgb(245,99,25)" fg:x="26334" fg:w="18"/><text x="26.1105%" y="991.50"></text></g><g><title>async_task::runnable::Runnable::run (14 samples, 0.01%)</title><rect x="25.8644%" y="965" width="0.0137%" height="15" fill="rgb(250,82,29)" fg:x="26338" fg:w="14"/><text x="26.1144%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (14 samples, 0.01%)</title><rect x="25.8644%" y="949" width="0.0137%" height="15" fill="rgb(241,226,54)" fg:x="26338" fg:w="14"/><text x="26.1144%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.01%)</title><rect x="25.8644%" y="933" width="0.0137%" height="15" fill="rgb(221,99,41)" fg:x="26338" fg:w="14"/><text x="26.1144%" y="943.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (14 samples, 0.01%)</title><rect x="25.8644%" y="917" width="0.0137%" height="15" fill="rgb(213,90,21)" fg:x="26338" fg:w="14"/><text x="26.1144%" y="927.50"></text></g><g><title>std::panic::catch_unwind (39 samples, 0.04%)</title><rect x="25.8605%" y="1221" width="0.0383%" height="15" fill="rgb(205,208,24)" fg:x="26334" fg:w="39"/><text x="26.1105%" y="1231.50"></text></g><g><title>std::panicking::try (39 samples, 0.04%)</title><rect x="25.8605%" y="1205" width="0.0383%" height="15" fill="rgb(246,31,12)" fg:x="26334" fg:w="39"/><text x="26.1105%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (39 samples, 0.04%)</title><rect x="25.8605%" y="1189" width="0.0383%" height="15" fill="rgb(213,154,6)" fg:x="26334" fg:w="39"/><text x="26.1105%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (39 samples, 0.04%)</title><rect x="25.8605%" y="1173" width="0.0383%" height="15" fill="rgb(222,163,29)" fg:x="26334" fg:w="39"/><text x="26.1105%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (39 samples, 0.04%)</title><rect x="25.8605%" y="1157" width="0.0383%" height="15" fill="rgb(227,201,8)" fg:x="26334" fg:w="39"/><text x="26.1105%" y="1167.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (39 samples, 0.04%)</title><rect x="25.8605%" y="1141" width="0.0383%" height="15" fill="rgb(233,9,32)" fg:x="26334" fg:w="39"/><text x="26.1105%" y="1151.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (39 samples, 0.04%)</title><rect x="25.8605%" y="1125" width="0.0383%" height="15" fill="rgb(217,54,24)" fg:x="26334" fg:w="39"/><text x="26.1105%" y="1135.50"></text></g><g><title>futures_lite::future::block_on (39 samples, 0.04%)</title><rect x="25.8605%" y="1109" width="0.0383%" height="15" fill="rgb(235,192,0)" fg:x="26334" fg:w="39"/><text x="26.1105%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (39 samples, 0.04%)</title><rect x="25.8605%" y="1093" width="0.0383%" height="15" fill="rgb(235,45,9)" fg:x="26334" fg:w="39"/><text x="26.1105%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (39 samples, 0.04%)</title><rect x="25.8605%" y="1077" width="0.0383%" height="15" fill="rgb(246,42,40)" fg:x="26334" fg:w="39"/><text x="26.1105%" y="1087.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (39 samples, 0.04%)</title><rect x="25.8605%" y="1061" width="0.0383%" height="15" fill="rgb(248,111,24)" fg:x="26334" fg:w="39"/><text x="26.1105%" y="1071.50"></text></g><g><title>parking::Parker::park (21 samples, 0.02%)</title><rect x="25.8782%" y="1045" width="0.0206%" height="15" fill="rgb(249,65,22)" fg:x="26352" fg:w="21"/><text x="26.1282%" y="1055.50"></text></g><g><title>parking::Inner::park (21 samples, 0.02%)</title><rect x="25.8782%" y="1029" width="0.0206%" height="15" fill="rgb(238,111,51)" fg:x="26352" fg:w="21"/><text x="26.1282%" y="1039.50"></text></g><g><title>std::sync::condvar::Condvar::wait (21 samples, 0.02%)</title><rect x="25.8782%" y="1013" width="0.0206%" height="15" fill="rgb(250,118,22)" fg:x="26352" fg:w="21"/><text x="26.1282%" y="1023.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (21 samples, 0.02%)</title><rect x="25.8782%" y="997" width="0.0206%" height="15" fill="rgb(234,84,26)" fg:x="26352" fg:w="21"/><text x="26.1282%" y="1007.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (21 samples, 0.02%)</title><rect x="25.8782%" y="981" width="0.0206%" height="15" fill="rgb(243,172,12)" fg:x="26352" fg:w="21"/><text x="26.1282%" y="991.50"></text></g><g><title>__pthread_cond_wait (21 samples, 0.02%)</title><rect x="25.8782%" y="965" width="0.0206%" height="15" fill="rgb(236,150,49)" fg:x="26352" fg:w="21"/><text x="26.1282%" y="975.50"></text></g><g><title>__futex_abstimed_wait_common64 (21 samples, 0.02%)</title><rect x="25.8782%" y="949" width="0.0206%" height="15" fill="rgb(225,197,26)" fg:x="26352" fg:w="21"/><text x="26.1282%" y="959.50"></text></g><g><title>IO_Task_Pool_(0 (49 samples, 0.05%)</title><rect x="25.8517%" y="1349" width="0.0481%" height="15" fill="rgb(214,17,42)" fg:x="26325" fg:w="49"/><text x="26.1017%" y="1359.50"></text></g><g><title>__GI___clone (40 samples, 0.04%)</title><rect x="25.8605%" y="1333" width="0.0393%" height="15" fill="rgb(224,165,40)" fg:x="26334" fg:w="40"/><text x="26.1105%" y="1343.50"></text></g><g><title>start_thread (40 samples, 0.04%)</title><rect x="25.8605%" y="1317" width="0.0393%" height="15" fill="rgb(246,100,4)" fg:x="26334" fg:w="40"/><text x="26.1105%" y="1327.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (40 samples, 0.04%)</title><rect x="25.8605%" y="1301" width="0.0393%" height="15" fill="rgb(222,103,0)" fg:x="26334" fg:w="40"/><text x="26.1105%" y="1311.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (40 samples, 0.04%)</title><rect x="25.8605%" y="1285" width="0.0393%" height="15" fill="rgb(227,189,26)" fg:x="26334" fg:w="40"/><text x="26.1105%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (40 samples, 0.04%)</title><rect x="25.8605%" y="1269" width="0.0393%" height="15" fill="rgb(214,202,17)" fg:x="26334" fg:w="40"/><text x="26.1105%" y="1279.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (40 samples, 0.04%)</title><rect x="25.8605%" y="1253" width="0.0393%" height="15" fill="rgb(229,111,3)" fg:x="26334" fg:w="40"/><text x="26.1105%" y="1263.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (40 samples, 0.04%)</title><rect x="25.8605%" y="1237" width="0.0393%" height="15" fill="rgb(229,172,15)" fg:x="26334" fg:w="40"/><text x="26.1105%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.03%)</title><rect x="25.9224%" y="901" width="0.0324%" height="15" fill="rgb(230,224,35)" fg:x="26397" fg:w="33"/><text x="26.1724%" y="911.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked::{{closure}} (33 samples, 0.03%)</title><rect x="25.9224%" y="885" width="0.0324%" height="15" fill="rgb(251,141,6)" fg:x="26397" fg:w="33"/><text x="26.1724%" y="895.50"></text></g><g><title>tracing_core::event::Event::dispatch (23 samples, 0.02%)</title><rect x="25.9322%" y="869" width="0.0226%" height="15" fill="rgb(225,208,6)" fg:x="26407" fg:w="23"/><text x="26.1822%" y="879.50"></text></g><g><title>tracing_core::dispatcher::get_default (23 samples, 0.02%)</title><rect x="25.9322%" y="853" width="0.0226%" height="15" fill="rgb(246,181,16)" fg:x="26407" fg:w="23"/><text x="26.1822%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (23 samples, 0.02%)</title><rect x="25.9322%" y="837" width="0.0226%" height="15" fill="rgb(227,129,36)" fg:x="26407" fg:w="23"/><text x="26.1822%" y="847.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (23 samples, 0.02%)</title><rect x="25.9322%" y="821" width="0.0226%" height="15" fill="rgb(248,117,24)" fg:x="26407" fg:w="23"/><text x="26.1822%" y="831.50"></text></g><g><title>tracing_core::event::Event::dispatch::{{closure}} (22 samples, 0.02%)</title><rect x="25.9332%" y="805" width="0.0216%" height="15" fill="rgb(214,185,35)" fg:x="26408" fg:w="22"/><text x="26.1832%" y="815.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::event (22 samples, 0.02%)</title><rect x="25.9332%" y="789" width="0.0216%" height="15" fill="rgb(236,150,34)" fg:x="26408" fg:w="22"/><text x="26.1832%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::event (22 samples, 0.02%)</title><rect x="25.9332%" y="773" width="0.0216%" height="15" fill="rgb(243,228,27)" fg:x="26408" fg:w="22"/><text x="26.1832%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (22 samples, 0.02%)</title><rect x="25.9332%" y="757" width="0.0216%" height="15" fill="rgb(245,77,44)" fg:x="26408" fg:w="22"/><text x="26.1832%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (22 samples, 0.02%)</title><rect x="25.9332%" y="741" width="0.0216%" height="15" fill="rgb(235,214,42)" fg:x="26408" fg:w="22"/><text x="26.1832%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.02%)</title><rect x="25.9332%" y="725" width="0.0216%" height="15" fill="rgb(221,74,3)" fg:x="26408" fg:w="22"/><text x="26.1832%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (22 samples, 0.02%)</title><rect x="25.9332%" y="709" width="0.0216%" height="15" fill="rgb(206,121,29)" fg:x="26408" fg:w="22"/><text x="26.1832%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::{{closure}} (22 samples, 0.02%)</title><rect x="25.9332%" y="693" width="0.0216%" height="15" fill="rgb(249,131,53)" fg:x="26408" fg:w="22"/><text x="26.1832%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (21 samples, 0.02%)</title><rect x="25.9341%" y="677" width="0.0206%" height="15" fill="rgb(236,170,29)" fg:x="26409" fg:w="21"/><text x="26.1841%" y="687.50"></text></g><g><title>tracing_subscriber::fmt::format::Format&lt;F,T&gt;::format_timestamp (14 samples, 0.01%)</title><rect x="25.9410%" y="661" width="0.0137%" height="15" fill="rgb(247,96,15)" fg:x="26416" fg:w="14"/><text x="26.1910%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (11 samples, 0.01%)</title><rect x="25.9440%" y="645" width="0.0108%" height="15" fill="rgb(211,210,7)" fg:x="26419" fg:w="11"/><text x="26.1940%" y="655.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (38 samples, 0.04%)</title><rect x="25.9184%" y="1045" width="0.0373%" height="15" fill="rgb(240,88,50)" fg:x="26393" fg:w="38"/><text x="26.1684%" y="1055.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (38 samples, 0.04%)</title><rect x="25.9184%" y="1029" width="0.0373%" height="15" fill="rgb(209,229,26)" fg:x="26393" fg:w="38"/><text x="26.1684%" y="1039.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (38 samples, 0.04%)</title><rect x="25.9184%" y="1013" width="0.0373%" height="15" fill="rgb(210,68,23)" fg:x="26393" fg:w="38"/><text x="26.1684%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (37 samples, 0.04%)</title><rect x="25.9194%" y="997" width="0.0363%" height="15" fill="rgb(229,180,13)" fg:x="26394" fg:w="37"/><text x="26.1694%" y="1007.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (37 samples, 0.04%)</title><rect x="25.9194%" y="981" width="0.0363%" height="15" fill="rgb(236,53,44)" fg:x="26394" fg:w="37"/><text x="26.1694%" y="991.50"></text></g><g><title>async_task::runnable::Runnable::run (35 samples, 0.03%)</title><rect x="25.9214%" y="965" width="0.0344%" height="15" fill="rgb(244,214,29)" fg:x="26396" fg:w="35"/><text x="26.1714%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (34 samples, 0.03%)</title><rect x="25.9224%" y="949" width="0.0334%" height="15" fill="rgb(220,75,29)" fg:x="26397" fg:w="34"/><text x="26.1724%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.03%)</title><rect x="25.9224%" y="933" width="0.0334%" height="15" fill="rgb(214,183,37)" fg:x="26397" fg:w="34"/><text x="26.1724%" y="943.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (34 samples, 0.03%)</title><rect x="25.9224%" y="917" width="0.0334%" height="15" fill="rgb(239,117,29)" fg:x="26397" fg:w="34"/><text x="26.1724%" y="927.50"></text></g><g><title>std::panic::catch_unwind (57 samples, 0.06%)</title><rect x="25.9184%" y="1221" width="0.0560%" height="15" fill="rgb(237,171,35)" fg:x="26393" fg:w="57"/><text x="26.1684%" y="1231.50"></text></g><g><title>std::panicking::try (57 samples, 0.06%)</title><rect x="25.9184%" y="1205" width="0.0560%" height="15" fill="rgb(229,178,53)" fg:x="26393" fg:w="57"/><text x="26.1684%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (57 samples, 0.06%)</title><rect x="25.9184%" y="1189" width="0.0560%" height="15" fill="rgb(210,102,19)" fg:x="26393" fg:w="57"/><text x="26.1684%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (57 samples, 0.06%)</title><rect x="25.9184%" y="1173" width="0.0560%" height="15" fill="rgb(235,127,22)" fg:x="26393" fg:w="57"/><text x="26.1684%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (57 samples, 0.06%)</title><rect x="25.9184%" y="1157" width="0.0560%" height="15" fill="rgb(244,31,31)" fg:x="26393" fg:w="57"/><text x="26.1684%" y="1167.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (57 samples, 0.06%)</title><rect x="25.9184%" y="1141" width="0.0560%" height="15" fill="rgb(231,43,21)" fg:x="26393" fg:w="57"/><text x="26.1684%" y="1151.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (57 samples, 0.06%)</title><rect x="25.9184%" y="1125" width="0.0560%" height="15" fill="rgb(217,131,35)" fg:x="26393" fg:w="57"/><text x="26.1684%" y="1135.50"></text></g><g><title>futures_lite::future::block_on (57 samples, 0.06%)</title><rect x="25.9184%" y="1109" width="0.0560%" height="15" fill="rgb(221,149,4)" fg:x="26393" fg:w="57"/><text x="26.1684%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (57 samples, 0.06%)</title><rect x="25.9184%" y="1093" width="0.0560%" height="15" fill="rgb(232,170,28)" fg:x="26393" fg:w="57"/><text x="26.1684%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (57 samples, 0.06%)</title><rect x="25.9184%" y="1077" width="0.0560%" height="15" fill="rgb(238,56,10)" fg:x="26393" fg:w="57"/><text x="26.1684%" y="1087.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (57 samples, 0.06%)</title><rect x="25.9184%" y="1061" width="0.0560%" height="15" fill="rgb(235,196,14)" fg:x="26393" fg:w="57"/><text x="26.1684%" y="1071.50"></text></g><g><title>parking::Parker::park (19 samples, 0.02%)</title><rect x="25.9558%" y="1045" width="0.0187%" height="15" fill="rgb(216,45,48)" fg:x="26431" fg:w="19"/><text x="26.2058%" y="1055.50"></text></g><g><title>parking::Inner::park (19 samples, 0.02%)</title><rect x="25.9558%" y="1029" width="0.0187%" height="15" fill="rgb(238,213,17)" fg:x="26431" fg:w="19"/><text x="26.2058%" y="1039.50"></text></g><g><title>std::sync::condvar::Condvar::wait (18 samples, 0.02%)</title><rect x="25.9567%" y="1013" width="0.0177%" height="15" fill="rgb(212,13,2)" fg:x="26432" fg:w="18"/><text x="26.2067%" y="1023.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (18 samples, 0.02%)</title><rect x="25.9567%" y="997" width="0.0177%" height="15" fill="rgb(240,114,20)" fg:x="26432" fg:w="18"/><text x="26.2067%" y="1007.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (18 samples, 0.02%)</title><rect x="25.9567%" y="981" width="0.0177%" height="15" fill="rgb(228,41,40)" fg:x="26432" fg:w="18"/><text x="26.2067%" y="991.50"></text></g><g><title>__pthread_cond_wait (18 samples, 0.02%)</title><rect x="25.9567%" y="965" width="0.0177%" height="15" fill="rgb(244,132,35)" fg:x="26432" fg:w="18"/><text x="26.2067%" y="975.50"></text></g><g><title>__futex_abstimed_wait_common64 (17 samples, 0.02%)</title><rect x="25.9577%" y="949" width="0.0167%" height="15" fill="rgb(253,189,4)" fg:x="26433" fg:w="17"/><text x="26.2077%" y="959.50"></text></g><g><title>IO_Task_Pool_(1 (77 samples, 0.08%)</title><rect x="25.8998%" y="1349" width="0.0756%" height="15" fill="rgb(224,37,19)" fg:x="26374" fg:w="77"/><text x="26.1498%" y="1359.50"></text></g><g><title>__GI___clone (58 samples, 0.06%)</title><rect x="25.9184%" y="1333" width="0.0570%" height="15" fill="rgb(235,223,18)" fg:x="26393" fg:w="58"/><text x="26.1684%" y="1343.50"></text></g><g><title>start_thread (58 samples, 0.06%)</title><rect x="25.9184%" y="1317" width="0.0570%" height="15" fill="rgb(235,163,25)" fg:x="26393" fg:w="58"/><text x="26.1684%" y="1327.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (58 samples, 0.06%)</title><rect x="25.9184%" y="1301" width="0.0570%" height="15" fill="rgb(217,145,28)" fg:x="26393" fg:w="58"/><text x="26.1684%" y="1311.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (58 samples, 0.06%)</title><rect x="25.9184%" y="1285" width="0.0570%" height="15" fill="rgb(223,223,32)" fg:x="26393" fg:w="58"/><text x="26.1684%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (58 samples, 0.06%)</title><rect x="25.9184%" y="1269" width="0.0570%" height="15" fill="rgb(227,189,39)" fg:x="26393" fg:w="58"/><text x="26.1684%" y="1279.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (58 samples, 0.06%)</title><rect x="25.9184%" y="1253" width="0.0570%" height="15" fill="rgb(248,10,22)" fg:x="26393" fg:w="58"/><text x="26.1684%" y="1263.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (58 samples, 0.06%)</title><rect x="25.9184%" y="1237" width="0.0570%" height="15" fill="rgb(248,46,39)" fg:x="26393" fg:w="58"/><text x="26.1684%" y="1247.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (14 samples, 0.01%)</title><rect x="26.0147%" y="1301" width="0.0137%" height="15" fill="rgb(248,113,48)" fg:x="26491" fg:w="14"/><text x="26.2647%" y="1311.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (14 samples, 0.01%)</title><rect x="26.0147%" y="1285" width="0.0137%" height="15" fill="rgb(245,16,25)" fg:x="26491" fg:w="14"/><text x="26.2647%" y="1295.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (14 samples, 0.01%)</title><rect x="26.0147%" y="1269" width="0.0137%" height="15" fill="rgb(249,152,16)" fg:x="26491" fg:w="14"/><text x="26.2647%" y="1279.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (19 samples, 0.02%)</title><rect x="26.0147%" y="1317" width="0.0187%" height="15" fill="rgb(250,16,1)" fg:x="26491" fg:w="19"/><text x="26.2647%" y="1327.50"></text></g><g><title>[[heap]] (47 samples, 0.05%)</title><rect x="26.0049%" y="1333" width="0.0462%" height="15" fill="rgb(249,138,3)" fg:x="26481" fg:w="47"/><text x="26.2549%" y="1343.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="26.0540%" y="1317" width="0.0108%" height="15" fill="rgb(227,71,41)" fg:x="26531" fg:w="11"/><text x="26.3040%" y="1327.50"></text></g><g><title>[anon] (33 samples, 0.03%)</title><rect x="26.0540%" y="1333" width="0.0324%" height="15" fill="rgb(209,184,23)" fg:x="26531" fg:w="33"/><text x="26.3040%" y="1343.50"></text></g><g><title>[engine] (21 samples, 0.02%)</title><rect x="26.0864%" y="1333" width="0.0206%" height="15" fill="rgb(223,215,31)" fg:x="26564" fg:w="21"/><text x="26.3364%" y="1343.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="26.0864%" y="1317" width="0.0206%" height="15" fill="rgb(210,146,28)" fg:x="26564" fg:w="21"/><text x="26.3364%" y="1327.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.04%)</title><rect x="26.1139%" y="1317" width="0.0383%" height="15" fill="rgb(209,183,41)" fg:x="26592" fg:w="39"/><text x="26.3639%" y="1327.50"></text></g><g><title>[unknown] (63 samples, 0.06%)</title><rect x="26.1139%" y="1333" width="0.0619%" height="15" fill="rgb(209,224,45)" fg:x="26592" fg:w="63"/><text x="26.3639%" y="1343.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (13 samples, 0.01%)</title><rect x="26.1934%" y="1029" width="0.0128%" height="15" fill="rgb(224,209,51)" fg:x="26673" fg:w="13"/><text x="26.4434%" y="1039.50"></text></g><g><title>[libasound.so.2.0.0] (17 samples, 0.02%)</title><rect x="26.1914%" y="1045" width="0.0167%" height="15" fill="rgb(223,17,39)" fg:x="26671" fg:w="17"/><text x="26.4414%" y="1055.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (26 samples, 0.03%)</title><rect x="26.1875%" y="1077" width="0.0255%" height="15" fill="rgb(234,204,37)" fg:x="26667" fg:w="26"/><text x="26.4375%" y="1087.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (26 samples, 0.03%)</title><rect x="26.1875%" y="1061" width="0.0255%" height="15" fill="rgb(236,120,5)" fg:x="26667" fg:w="26"/><text x="26.4375%" y="1071.50"></text></g><g><title>pa_stream_get_latency (15 samples, 0.01%)</title><rect x="26.2386%" y="997" width="0.0147%" height="15" fill="rgb(248,97,27)" fg:x="26719" fg:w="15"/><text x="26.4886%" y="1007.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (18 samples, 0.02%)</title><rect x="26.2366%" y="1013" width="0.0177%" height="15" fill="rgb(240,66,17)" fg:x="26717" fg:w="18"/><text x="26.4866%" y="1023.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (36 samples, 0.04%)</title><rect x="26.2229%" y="1061" width="0.0354%" height="15" fill="rgb(210,79,3)" fg:x="26703" fg:w="36"/><text x="26.4729%" y="1071.50"></text></g><g><title>snd_pcm_status (36 samples, 0.04%)</title><rect x="26.2229%" y="1045" width="0.0354%" height="15" fill="rgb(214,176,27)" fg:x="26703" fg:w="36"/><text x="26.4729%" y="1055.50"></text></g><g><title>[libasound.so.2.0.0] (34 samples, 0.03%)</title><rect x="26.2248%" y="1029" width="0.0334%" height="15" fill="rgb(235,185,3)" fg:x="26705" fg:w="34"/><text x="26.4748%" y="1039.50"></text></g><g><title>alsa::pcm::PCM::status (39 samples, 0.04%)</title><rect x="26.2229%" y="1077" width="0.0383%" height="15" fill="rgb(227,24,12)" fg:x="26703" fg:w="39"/><text x="26.4729%" y="1087.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (109 samples, 0.11%)</title><rect x="26.1816%" y="1093" width="0.1070%" height="15" fill="rgb(252,169,48)" fg:x="26661" fg:w="109"/><text x="26.4316%" y="1103.50"></text></g><g><title>alsa::poll::poll (28 samples, 0.03%)</title><rect x="26.2612%" y="1077" width="0.0275%" height="15" fill="rgb(212,65,1)" fg:x="26742" fg:w="28"/><text x="26.5112%" y="1087.50"></text></g><g><title>__GI___poll (25 samples, 0.02%)</title><rect x="26.2641%" y="1061" width="0.0246%" height="15" fill="rgb(242,39,24)" fg:x="26745" fg:w="25"/><text x="26.5141%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="26.3132%" y="965" width="0.0118%" height="15" fill="rgb(249,32,23)" fg:x="26795" fg:w="12"/><text x="26.5632%" y="975.50"></text></g><g><title>pa_stream_write (42 samples, 0.04%)</title><rect x="26.3073%" y="997" width="0.0412%" height="15" fill="rgb(251,195,23)" fg:x="26789" fg:w="42"/><text x="26.5573%" y="1007.50"></text></g><g><title>pa_stream_write_ext_free (42 samples, 0.04%)</title><rect x="26.3073%" y="981" width="0.0412%" height="15" fill="rgb(236,174,8)" fg:x="26789" fg:w="42"/><text x="26.5573%" y="991.50"></text></g><g><title>pa_pstream_send_memblock (12 samples, 0.01%)</title><rect x="26.3368%" y="965" width="0.0118%" height="15" fill="rgb(220,197,8)" fg:x="26819" fg:w="12"/><text x="26.5868%" y="975.50"></text></g><g><title>[libasound.so.2.0.0] (60 samples, 0.06%)</title><rect x="26.2916%" y="1029" width="0.0589%" height="15" fill="rgb(240,108,37)" fg:x="26773" fg:w="60"/><text x="26.5416%" y="1039.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (53 samples, 0.05%)</title><rect x="26.2985%" y="1013" width="0.0520%" height="15" fill="rgb(232,176,24)" fg:x="26780" fg:w="53"/><text x="26.5485%" y="1023.50"></text></g><g><title>[libasound.so.2.0.0] (65 samples, 0.06%)</title><rect x="26.2887%" y="1061" width="0.0638%" height="15" fill="rgb(243,35,29)" fg:x="26770" fg:w="65"/><text x="26.5387%" y="1071.50"></text></g><g><title>[libasound.so.2.0.0] (63 samples, 0.06%)</title><rect x="26.2906%" y="1045" width="0.0619%" height="15" fill="rgb(210,37,18)" fg:x="26772" fg:w="63"/><text x="26.5406%" y="1055.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (69 samples, 0.07%)</title><rect x="26.2887%" y="1077" width="0.0678%" height="15" fill="rgb(224,184,40)" fg:x="26770" fg:w="69"/><text x="26.5387%" y="1087.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (44 samples, 0.04%)</title><rect x="26.3937%" y="1013" width="0.0432%" height="15" fill="rgb(236,39,29)" fg:x="26877" fg:w="44"/><text x="26.6437%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (14 samples, 0.01%)</title><rect x="26.4232%" y="997" width="0.0137%" height="15" fill="rgb(232,48,39)" fg:x="26907" fg:w="14"/><text x="26.6732%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (14 samples, 0.01%)</title><rect x="26.4232%" y="981" width="0.0137%" height="15" fill="rgb(236,34,42)" fg:x="26907" fg:w="14"/><text x="26.6732%" y="991.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (69 samples, 0.07%)</title><rect x="26.3721%" y="1029" width="0.0678%" height="15" fill="rgb(243,106,37)" fg:x="26855" fg:w="69"/><text x="26.6221%" y="1039.50"></text></g><g><title>cpal::host::alsa::process_output (165 samples, 0.16%)</title><rect x="26.2887%" y="1093" width="0.1620%" height="15" fill="rgb(218,96,6)" fg:x="26770" fg:w="165"/><text x="26.5387%" y="1103.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (89 samples, 0.09%)</title><rect x="26.3633%" y="1077" width="0.0874%" height="15" fill="rgb(235,130,12)" fg:x="26846" fg:w="89"/><text x="26.6133%" y="1087.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (89 samples, 0.09%)</title><rect x="26.3633%" y="1061" width="0.0874%" height="15" fill="rgb(231,95,0)" fg:x="26846" fg:w="89"/><text x="26.6133%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (89 samples, 0.09%)</title><rect x="26.3633%" y="1045" width="0.0874%" height="15" fill="rgb(228,12,23)" fg:x="26846" fg:w="89"/><text x="26.6133%" y="1055.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (11 samples, 0.01%)</title><rect x="26.4399%" y="1029" width="0.0108%" height="15" fill="rgb(216,12,1)" fg:x="26924" fg:w="11"/><text x="26.6899%" y="1039.50"></text></g><g><title>__GI___clone (281 samples, 0.28%)</title><rect x="26.1757%" y="1333" width="0.2759%" height="15" fill="rgb(219,59,3)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1343.50"></text></g><g><title>start_thread (281 samples, 0.28%)</title><rect x="26.1757%" y="1317" width="0.2759%" height="15" fill="rgb(215,208,46)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1327.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (281 samples, 0.28%)</title><rect x="26.1757%" y="1301" width="0.2759%" height="15" fill="rgb(254,224,29)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1311.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (281 samples, 0.28%)</title><rect x="26.1757%" y="1285" width="0.2759%" height="15" fill="rgb(232,14,29)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (281 samples, 0.28%)</title><rect x="26.1757%" y="1269" width="0.2759%" height="15" fill="rgb(208,45,52)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1279.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (281 samples, 0.28%)</title><rect x="26.1757%" y="1253" width="0.2759%" height="15" fill="rgb(234,191,28)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1263.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (281 samples, 0.28%)</title><rect x="26.1757%" y="1237" width="0.2759%" height="15" fill="rgb(244,67,43)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1247.50"></text></g><g><title>std::panic::catch_unwind (281 samples, 0.28%)</title><rect x="26.1757%" y="1221" width="0.2759%" height="15" fill="rgb(236,189,24)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1231.50"></text></g><g><title>std::panicking::try (281 samples, 0.28%)</title><rect x="26.1757%" y="1205" width="0.2759%" height="15" fill="rgb(239,214,33)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (281 samples, 0.28%)</title><rect x="26.1757%" y="1189" width="0.2759%" height="15" fill="rgb(226,176,41)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (281 samples, 0.28%)</title><rect x="26.1757%" y="1173" width="0.2759%" height="15" fill="rgb(248,47,8)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (281 samples, 0.28%)</title><rect x="26.1757%" y="1157" width="0.2759%" height="15" fill="rgb(218,81,44)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1167.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (281 samples, 0.28%)</title><rect x="26.1757%" y="1141" width="0.2759%" height="15" fill="rgb(213,98,6)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1151.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (281 samples, 0.28%)</title><rect x="26.1757%" y="1125" width="0.2759%" height="15" fill="rgb(222,85,22)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1135.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (281 samples, 0.28%)</title><rect x="26.1757%" y="1109" width="0.2759%" height="15" fill="rgb(239,46,39)" fg:x="26655" fg:w="281"/><text x="26.4257%" y="1119.50"></text></g><g><title>cpal_alsa_out (493 samples, 0.48%)</title><rect x="25.9754%" y="1349" width="0.4841%" height="15" fill="rgb(237,12,29)" fg:x="26451" fg:w="493"/><text x="26.2254%" y="1359.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="27.4916%" y="1317" width="0.0167%" height="15" fill="rgb(214,77,8)" fg:x="27995" fg:w="17"/><text x="27.7416%" y="1327.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="27.5123%" y="1317" width="0.0196%" height="15" fill="rgb(217,168,37)" fg:x="28016" fg:w="20"/><text x="27.7623%" y="1327.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="27.5319%" y="1317" width="0.0187%" height="15" fill="rgb(221,217,23)" fg:x="28036" fg:w="19"/><text x="27.7819%" y="1327.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (12 samples, 0.01%)</title><rect x="27.5604%" y="1317" width="0.0118%" height="15" fill="rgb(243,229,36)" fg:x="28065" fg:w="12"/><text x="27.8104%" y="1327.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (11 samples, 0.01%)</title><rect x="27.5967%" y="1317" width="0.0108%" height="15" fill="rgb(251,163,40)" fg:x="28102" fg:w="11"/><text x="27.8467%" y="1327.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (65 samples, 0.06%)</title><rect x="27.6762%" y="1301" width="0.0638%" height="15" fill="rgb(237,222,12)" fg:x="28183" fg:w="65"/><text x="27.9262%" y="1311.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (115 samples, 0.11%)</title><rect x="27.6340%" y="1317" width="0.1129%" height="15" fill="rgb(248,132,6)" fg:x="28140" fg:w="115"/><text x="27.8840%" y="1327.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (18 samples, 0.02%)</title><rect x="27.7470%" y="1317" width="0.0177%" height="15" fill="rgb(227,167,50)" fg:x="28255" fg:w="18"/><text x="27.9970%" y="1327.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="27.7941%" y="1317" width="0.0177%" height="15" fill="rgb(242,84,37)" fg:x="28303" fg:w="18"/><text x="28.0441%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (18 samples, 0.02%)</title><rect x="27.7941%" y="1301" width="0.0177%" height="15" fill="rgb(212,4,50)" fg:x="28303" fg:w="18"/><text x="28.0441%" y="1311.50"></text></g><g><title>XSync (11 samples, 0.01%)</title><rect x="27.8579%" y="1317" width="0.0108%" height="15" fill="rgb(230,228,32)" fg:x="28368" fg:w="11"/><text x="28.1079%" y="1327.50"></text></g><g><title>[engine] (23 samples, 0.02%)</title><rect x="27.8687%" y="1317" width="0.0226%" height="15" fill="rgb(248,217,23)" fg:x="28379" fg:w="23"/><text x="28.1187%" y="1327.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (20 samples, 0.02%)</title><rect x="27.8913%" y="1317" width="0.0196%" height="15" fill="rgb(238,197,32)" fg:x="28402" fg:w="20"/><text x="28.1413%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (331 samples, 0.33%)</title><rect x="27.9218%" y="1317" width="0.3250%" height="15" fill="rgb(236,106,1)" fg:x="28433" fg:w="331"/><text x="28.1718%" y="1327.50"></text></g><g><title>__GI___libc_free (34 samples, 0.03%)</title><rect x="28.2694%" y="1317" width="0.0334%" height="15" fill="rgb(219,228,13)" fg:x="28787" fg:w="34"/><text x="28.5194%" y="1327.50"></text></g><g><title>__GI___libc_malloc (44 samples, 0.04%)</title><rect x="28.3028%" y="1317" width="0.0432%" height="15" fill="rgb(238,30,35)" fg:x="28821" fg:w="44"/><text x="28.5528%" y="1327.50"></text></g><g><title>__GI___libc_realloc (21 samples, 0.02%)</title><rect x="28.3460%" y="1317" width="0.0206%" height="15" fill="rgb(236,70,23)" fg:x="28865" fg:w="21"/><text x="28.5960%" y="1327.50"></text></g><g><title>_int_free (92 samples, 0.09%)</title><rect x="28.4020%" y="1317" width="0.0903%" height="15" fill="rgb(249,104,48)" fg:x="28922" fg:w="92"/><text x="28.6520%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (36 samples, 0.04%)</title><rect x="28.5011%" y="1317" width="0.0354%" height="15" fill="rgb(254,117,50)" fg:x="29023" fg:w="36"/><text x="28.7511%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.03%)</title><rect x="28.5051%" y="1301" width="0.0314%" height="15" fill="rgb(223,152,4)" fg:x="29027" fg:w="32"/><text x="28.7551%" y="1311.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (22 samples, 0.02%)</title><rect x="28.5149%" y="1285" width="0.0216%" height="15" fill="rgb(245,6,2)" fg:x="29037" fg:w="22"/><text x="28.7649%" y="1295.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (22 samples, 0.02%)</title><rect x="28.5149%" y="1269" width="0.0216%" height="15" fill="rgb(249,150,24)" fg:x="29037" fg:w="22"/><text x="28.7649%" y="1279.50"></text></g><g><title>alloc::raw_vec::finish_grow (54 samples, 0.05%)</title><rect x="28.5365%" y="1317" width="0.0530%" height="15" fill="rgb(228,185,42)" fg:x="29059" fg:w="54"/><text x="28.7865%" y="1327.50"></text></g><g><title>alloc::slice::merge_sort (11 samples, 0.01%)</title><rect x="28.5905%" y="1317" width="0.0108%" height="15" fill="rgb(226,39,33)" fg:x="29114" fg:w="11"/><text x="28.8405%" y="1327.50"></text></g><g><title>async_executor::Executor::spawn (19 samples, 0.02%)</title><rect x="28.6288%" y="1317" width="0.0187%" height="15" fill="rgb(221,166,19)" fg:x="29153" fg:w="19"/><text x="28.8788%" y="1327.50"></text></g><g><title>async_executor::Executor::try_tick (57 samples, 0.06%)</title><rect x="28.6475%" y="1317" width="0.0560%" height="15" fill="rgb(209,109,2)" fg:x="29172" fg:w="57"/><text x="28.8975%" y="1327.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (87 samples, 0.09%)</title><rect x="28.7034%" y="1317" width="0.0854%" height="15" fill="rgb(252,216,26)" fg:x="29229" fg:w="87"/><text x="28.9534%" y="1327.50"></text></g><g><title>async_executor::State::notify (13 samples, 0.01%)</title><rect x="28.7889%" y="1317" width="0.0128%" height="15" fill="rgb(227,173,36)" fg:x="29316" fg:w="13"/><text x="29.0389%" y="1327.50"></text></g><g><title>async_task::header::Header::register (25 samples, 0.02%)</title><rect x="28.8016%" y="1317" width="0.0246%" height="15" fill="rgb(209,90,7)" fg:x="29329" fg:w="25"/><text x="29.0516%" y="1327.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update (19 samples, 0.02%)</title><rect x="28.8557%" y="1317" width="0.0187%" height="15" fill="rgb(250,194,11)" fg:x="29384" fg:w="19"/><text x="29.1057%" y="1327.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (14 samples, 0.01%)</title><rect x="28.8841%" y="1317" width="0.0137%" height="15" fill="rgb(220,72,50)" fg:x="29413" fg:w="14"/><text x="29.1341%" y="1327.50"></text></g><g><title>bevy_render::render_graph::node::Node::prepare (19 samples, 0.02%)</title><rect x="28.9548%" y="1317" width="0.0187%" height="15" fill="rgb(222,106,48)" fg:x="29485" fg:w="19"/><text x="29.2048%" y="1327.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (14 samples, 0.01%)</title><rect x="28.9794%" y="1317" width="0.0137%" height="15" fill="rgb(216,220,45)" fg:x="29510" fg:w="14"/><text x="29.2294%" y="1327.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (12 samples, 0.01%)</title><rect x="29.0088%" y="1317" width="0.0118%" height="15" fill="rgb(234,112,18)" fg:x="29540" fg:w="12"/><text x="29.2588%" y="1327.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (37 samples, 0.04%)</title><rect x="29.0206%" y="1317" width="0.0363%" height="15" fill="rgb(206,179,9)" fg:x="29552" fg:w="37"/><text x="29.2706%" y="1327.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (12 samples, 0.01%)</title><rect x="29.1237%" y="1317" width="0.0118%" height="15" fill="rgb(215,115,40)" fg:x="29657" fg:w="12"/><text x="29.3737%" y="1327.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (15 samples, 0.01%)</title><rect x="29.1719%" y="1317" width="0.0147%" height="15" fill="rgb(222,69,34)" fg:x="29706" fg:w="15"/><text x="29.4219%" y="1327.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (20 samples, 0.02%)</title><rect x="29.2239%" y="1317" width="0.0196%" height="15" fill="rgb(209,161,10)" fg:x="29759" fg:w="20"/><text x="29.4739%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (24 samples, 0.02%)</title><rect x="29.2661%" y="1317" width="0.0236%" height="15" fill="rgb(217,6,38)" fg:x="29802" fg:w="24"/><text x="29.5161%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (16 samples, 0.02%)</title><rect x="29.2897%" y="1317" width="0.0157%" height="15" fill="rgb(229,229,48)" fg:x="29826" fg:w="16"/><text x="29.5397%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (20 samples, 0.02%)</title><rect x="29.3054%" y="1317" width="0.0196%" height="15" fill="rgb(225,21,28)" fg:x="29842" fg:w="20"/><text x="29.5554%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (11 samples, 0.01%)</title><rect x="29.3349%" y="1317" width="0.0108%" height="15" fill="rgb(206,33,13)" fg:x="29872" fg:w="11"/><text x="29.5849%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (14 samples, 0.01%)</title><rect x="29.3457%" y="1317" width="0.0137%" height="15" fill="rgb(242,178,17)" fg:x="29883" fg:w="14"/><text x="29.5957%" y="1327.50"></text></g><g><title>pathfinding::directed::astar::astar (11 samples, 0.01%)</title><rect x="29.4056%" y="1317" width="0.0108%" height="15" fill="rgb(220,162,5)" fg:x="29944" fg:w="11"/><text x="29.6556%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (36 samples, 0.04%)</title><rect x="29.4449%" y="1317" width="0.0354%" height="15" fill="rgb(210,33,43)" fg:x="29984" fg:w="36"/><text x="29.6949%" y="1327.50"></text></g><g><title>unlink_chunk.constprop.0 (12 samples, 0.01%)</title><rect x="29.4959%" y="1317" width="0.0118%" height="15" fill="rgb(216,116,54)" fg:x="30036" fg:w="12"/><text x="29.7459%" y="1327.50"></text></g><g><title>wgpu_core::command::bind::BindGroupEntry::provide (16 samples, 0.02%)</title><rect x="29.5362%" y="1317" width="0.0157%" height="15" fill="rgb(249,92,24)" fg:x="30077" fg:w="16"/><text x="29.7862%" y="1327.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (27 samples, 0.03%)</title><rect x="29.5686%" y="1317" width="0.0265%" height="15" fill="rgb(231,189,14)" fg:x="30110" fg:w="27"/><text x="29.8186%" y="1327.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start (11 samples, 0.01%)</title><rect x="29.5951%" y="1317" width="0.0108%" height="15" fill="rgb(230,8,41)" fg:x="30137" fg:w="11"/><text x="29.8451%" y="1327.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (15 samples, 0.01%)</title><rect x="29.6531%" y="1317" width="0.0147%" height="15" fill="rgb(249,7,27)" fg:x="30196" fg:w="15"/><text x="29.9031%" y="1327.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (11 samples, 0.01%)</title><rect x="29.6963%" y="1301" width="0.0108%" height="15" fill="rgb(232,86,5)" fg:x="30240" fg:w="11"/><text x="29.9463%" y="1311.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (11 samples, 0.01%)</title><rect x="29.6963%" y="1285" width="0.0108%" height="15" fill="rgb(224,175,18)" fg:x="30240" fg:w="11"/><text x="29.9463%" y="1295.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (13 samples, 0.01%)</title><rect x="29.6953%" y="1317" width="0.0128%" height="15" fill="rgb(220,129,12)" fg:x="30239" fg:w="13"/><text x="29.9453%" y="1327.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (167 samples, 0.16%)</title><rect x="29.7080%" y="1317" width="0.1640%" height="15" fill="rgb(210,19,36)" fg:x="30252" fg:w="167"/><text x="29.9580%" y="1327.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (12 samples, 0.01%)</title><rect x="29.8603%" y="1301" width="0.0118%" height="15" fill="rgb(219,96,14)" fg:x="30407" fg:w="12"/><text x="30.1103%" y="1311.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (12 samples, 0.01%)</title><rect x="29.8603%" y="1285" width="0.0118%" height="15" fill="rgb(249,106,1)" fg:x="30407" fg:w="12"/><text x="30.1103%" y="1295.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.01%)</title><rect x="29.8603%" y="1269" width="0.0118%" height="15" fill="rgb(249,155,20)" fg:x="30407" fg:w="12"/><text x="30.1103%" y="1279.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="29.8603%" y="1253" width="0.0118%" height="15" fill="rgb(244,168,9)" fg:x="30407" fg:w="12"/><text x="30.1103%" y="1263.50"></text></g><g><title>[[heap]] (2,497 samples, 2.45%)</title><rect x="27.4523%" y="1333" width="2.4521%" height="15" fill="rgb(216,23,50)" fg:x="27955" fg:w="2497"/><text x="27.7023%" y="1343.50">[[..</text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (27 samples, 0.03%)</title><rect x="29.9113%" y="1317" width="0.0265%" height="15" fill="rgb(224,219,20)" fg:x="30459" fg:w="27"/><text x="30.1613%" y="1327.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="29.9398%" y="1317" width="0.0147%" height="15" fill="rgb(222,156,15)" fg:x="30488" fg:w="15"/><text x="30.1898%" y="1327.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="29.9644%" y="1317" width="0.0147%" height="15" fill="rgb(231,97,17)" fg:x="30513" fg:w="15"/><text x="30.2144%" y="1327.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (15 samples, 0.01%)</title><rect x="30.0203%" y="1317" width="0.0147%" height="15" fill="rgb(218,70,48)" fg:x="30570" fg:w="15"/><text x="30.2703%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (81 samples, 0.08%)</title><rect x="30.1627%" y="1317" width="0.0795%" height="15" fill="rgb(212,196,52)" fg:x="30715" fg:w="81"/><text x="30.4127%" y="1327.50"></text></g><g><title>__GI___libc_free (60 samples, 0.06%)</title><rect x="30.2550%" y="1317" width="0.0589%" height="15" fill="rgb(243,203,18)" fg:x="30809" fg:w="60"/><text x="30.5050%" y="1327.50"></text></g><g><title>__GI___libc_realloc (80 samples, 0.08%)</title><rect x="30.3169%" y="1317" width="0.0786%" height="15" fill="rgb(252,125,41)" fg:x="30872" fg:w="80"/><text x="30.5669%" y="1327.50"></text></g><g><title>_int_free (14 samples, 0.01%)</title><rect x="30.4063%" y="1317" width="0.0137%" height="15" fill="rgb(223,180,33)" fg:x="30963" fg:w="14"/><text x="30.6563%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (54 samples, 0.05%)</title><rect x="30.4239%" y="1317" width="0.0530%" height="15" fill="rgb(254,159,46)" fg:x="30981" fg:w="54"/><text x="30.6739%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.03%)</title><rect x="30.4455%" y="1301" width="0.0314%" height="15" fill="rgb(254,38,10)" fg:x="31003" fg:w="32"/><text x="30.6955%" y="1311.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (31 samples, 0.03%)</title><rect x="30.4465%" y="1285" width="0.0304%" height="15" fill="rgb(208,217,32)" fg:x="31004" fg:w="31"/><text x="30.6965%" y="1295.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (31 samples, 0.03%)</title><rect x="30.4465%" y="1269" width="0.0304%" height="15" fill="rgb(221,120,13)" fg:x="31004" fg:w="31"/><text x="30.6965%" y="1279.50"></text></g><g><title>alloc::raw_vec::finish_grow (67 samples, 0.07%)</title><rect x="30.4770%" y="1317" width="0.0658%" height="15" fill="rgb(246,54,52)" fg:x="31035" fg:w="67"/><text x="30.7270%" y="1327.50"></text></g><g><title>async_executor::Executor::spawn (15 samples, 0.01%)</title><rect x="30.5516%" y="1317" width="0.0147%" height="15" fill="rgb(242,34,25)" fg:x="31111" fg:w="15"/><text x="30.8016%" y="1327.50"></text></g><g><title>async_executor::Executor::try_tick (51 samples, 0.05%)</title><rect x="30.5663%" y="1317" width="0.0501%" height="15" fill="rgb(247,209,9)" fg:x="31126" fg:w="51"/><text x="30.8163%" y="1327.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (54 samples, 0.05%)</title><rect x="30.6213%" y="1317" width="0.0530%" height="15" fill="rgb(228,71,26)" fg:x="31182" fg:w="54"/><text x="30.8713%" y="1327.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (39 samples, 0.04%)</title><rect x="30.7401%" y="1269" width="0.0383%" height="15" fill="rgb(222,145,49)" fg:x="31303" fg:w="39"/><text x="30.9901%" y="1279.50"></text></g><g><title>async_task::header::Header::register (150 samples, 0.15%)</title><rect x="30.6763%" y="1317" width="0.1473%" height="15" fill="rgb(218,121,17)" fg:x="31238" fg:w="150"/><text x="30.9263%" y="1327.50"></text></g><g><title>async_task::utils::abort_on_panic (85 samples, 0.08%)</title><rect x="30.7401%" y="1301" width="0.0835%" height="15" fill="rgb(244,50,7)" fg:x="31303" fg:w="85"/><text x="30.9901%" y="1311.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (85 samples, 0.08%)</title><rect x="30.7401%" y="1285" width="0.0835%" height="15" fill="rgb(246,229,37)" fg:x="31303" fg:w="85"/><text x="30.9901%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (46 samples, 0.05%)</title><rect x="30.7784%" y="1269" width="0.0452%" height="15" fill="rgb(225,18,5)" fg:x="31342" fg:w="46"/><text x="31.0284%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (46 samples, 0.05%)</title><rect x="30.7784%" y="1253" width="0.0452%" height="15" fill="rgb(213,204,8)" fg:x="31342" fg:w="46"/><text x="31.0284%" y="1263.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (46 samples, 0.05%)</title><rect x="30.7784%" y="1237" width="0.0452%" height="15" fill="rgb(238,103,6)" fg:x="31342" fg:w="46"/><text x="31.0284%" y="1247.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (61 samples, 0.06%)</title><rect x="30.8246%" y="1317" width="0.0599%" height="15" fill="rgb(222,25,35)" fg:x="31389" fg:w="61"/><text x="31.0746%" y="1327.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (11 samples, 0.01%)</title><rect x="30.8865%" y="1285" width="0.0108%" height="15" fill="rgb(213,203,35)" fg:x="31452" fg:w="11"/><text x="31.1365%" y="1295.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="30.8845%" y="1317" width="0.0137%" height="15" fill="rgb(221,79,53)" fg:x="31450" fg:w="14"/><text x="31.1345%" y="1327.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (12 samples, 0.01%)</title><rect x="30.8865%" y="1301" width="0.0118%" height="15" fill="rgb(243,200,35)" fg:x="31452" fg:w="12"/><text x="31.1365%" y="1311.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (41 samples, 0.04%)</title><rect x="30.9827%" y="1317" width="0.0403%" height="15" fill="rgb(248,60,25)" fg:x="31550" fg:w="41"/><text x="31.2327%" y="1327.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (24 samples, 0.02%)</title><rect x="31.0495%" y="1317" width="0.0236%" height="15" fill="rgb(227,53,46)" fg:x="31618" fg:w="24"/><text x="31.2995%" y="1327.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (15 samples, 0.01%)</title><rect x="31.0583%" y="1301" width="0.0147%" height="15" fill="rgb(216,120,32)" fg:x="31627" fg:w="15"/><text x="31.3083%" y="1311.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (15 samples, 0.01%)</title><rect x="31.0583%" y="1285" width="0.0147%" height="15" fill="rgb(220,134,1)" fg:x="31627" fg:w="15"/><text x="31.3083%" y="1295.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (12 samples, 0.01%)</title><rect x="31.0789%" y="1317" width="0.0118%" height="15" fill="rgb(237,168,5)" fg:x="31648" fg:w="12"/><text x="31.3289%" y="1327.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (67 samples, 0.07%)</title><rect x="31.1222%" y="1317" width="0.0658%" height="15" fill="rgb(231,100,33)" fg:x="31692" fg:w="67"/><text x="31.3722%" y="1327.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (31 samples, 0.03%)</title><rect x="31.1879%" y="1317" width="0.0304%" height="15" fill="rgb(236,177,47)" fg:x="31759" fg:w="31"/><text x="31.4379%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (19 samples, 0.02%)</title><rect x="31.2459%" y="1317" width="0.0187%" height="15" fill="rgb(235,7,49)" fg:x="31818" fg:w="19"/><text x="31.4959%" y="1327.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11 samples, 0.01%)</title><rect x="31.2665%" y="1317" width="0.0108%" height="15" fill="rgb(232,119,22)" fg:x="31839" fg:w="11"/><text x="31.5165%" y="1327.50"></text></g><g><title>inplace_it::fixed_array::indirect (17 samples, 0.02%)</title><rect x="31.2803%" y="1317" width="0.0167%" height="15" fill="rgb(254,73,53)" fg:x="31853" fg:w="17"/><text x="31.5303%" y="1327.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (14 samples, 0.01%)</title><rect x="31.2832%" y="1301" width="0.0137%" height="15" fill="rgb(251,35,20)" fg:x="31856" fg:w="14"/><text x="31.5332%" y="1311.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (116 samples, 0.11%)</title><rect x="31.3274%" y="1317" width="0.1139%" height="15" fill="rgb(241,119,20)" fg:x="31901" fg:w="116"/><text x="31.5774%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (84 samples, 0.08%)</title><rect x="31.3588%" y="1301" width="0.0825%" height="15" fill="rgb(207,102,14)" fg:x="31933" fg:w="84"/><text x="31.6088%" y="1311.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (43 samples, 0.04%)</title><rect x="31.3991%" y="1285" width="0.0422%" height="15" fill="rgb(248,201,50)" fg:x="31974" fg:w="43"/><text x="31.6491%" y="1295.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (43 samples, 0.04%)</title><rect x="31.3991%" y="1269" width="0.0422%" height="15" fill="rgb(222,185,44)" fg:x="31974" fg:w="43"/><text x="31.6491%" y="1279.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (43 samples, 0.04%)</title><rect x="31.3991%" y="1253" width="0.0422%" height="15" fill="rgb(218,107,18)" fg:x="31974" fg:w="43"/><text x="31.6491%" y="1263.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (43 samples, 0.04%)</title><rect x="31.3991%" y="1237" width="0.0422%" height="15" fill="rgb(237,177,39)" fg:x="31974" fg:w="43"/><text x="31.6491%" y="1247.50"></text></g><g><title>[[stack]] (1,649 samples, 1.62%)</title><rect x="29.9044%" y="1333" width="1.6193%" height="15" fill="rgb(246,69,6)" fg:x="30452" fg:w="1649"/><text x="30.1544%" y="1343.50"></text></g><g><title>[[vdso]] (60 samples, 0.06%)</title><rect x="31.5238%" y="1333" width="0.0589%" height="15" fill="rgb(234,208,37)" fg:x="32101" fg:w="60"/><text x="31.7738%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (40 samples, 0.04%)</title><rect x="31.5984%" y="1317" width="0.0393%" height="15" fill="rgb(225,4,6)" fg:x="32177" fg:w="40"/><text x="31.8484%" y="1327.50"></text></g><g><title>[anon] (171 samples, 0.17%)</title><rect x="31.5827%" y="1333" width="0.1679%" height="15" fill="rgb(233,45,0)" fg:x="32161" fg:w="171"/><text x="31.8327%" y="1343.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynHash&gt;::dyn_hash (12 samples, 0.01%)</title><rect x="31.7605%" y="1317" width="0.0118%" height="15" fill="rgb(226,136,5)" fg:x="32342" fg:w="12"/><text x="32.0105%" y="1327.50"></text></g><g><title>async_task::header::Header::register (24 samples, 0.02%)</title><rect x="31.8420%" y="1317" width="0.0236%" height="15" fill="rgb(211,91,47)" fg:x="32425" fg:w="24"/><text x="32.0920%" y="1327.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (26 samples, 0.03%)</title><rect x="31.8685%" y="1317" width="0.0255%" height="15" fill="rgb(242,88,51)" fg:x="32452" fg:w="26"/><text x="32.1185%" y="1327.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare::{{closure}} (24 samples, 0.02%)</title><rect x="31.9088%" y="1301" width="0.0236%" height="15" fill="rgb(230,91,28)" fg:x="32493" fg:w="24"/><text x="32.1588%" y="1311.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (28 samples, 0.03%)</title><rect x="31.9058%" y="1317" width="0.0275%" height="15" fill="rgb(254,186,29)" fg:x="32490" fg:w="28"/><text x="32.1558%" y="1327.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (14 samples, 0.01%)</title><rect x="31.9421%" y="1317" width="0.0137%" height="15" fill="rgb(238,6,4)" fg:x="32527" fg:w="14"/><text x="32.1921%" y="1327.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (215 samples, 0.21%)</title><rect x="31.9598%" y="1317" width="0.2111%" height="15" fill="rgb(221,151,16)" fg:x="32545" fg:w="215"/><text x="32.2098%" y="1327.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (11 samples, 0.01%)</title><rect x="32.1709%" y="1317" width="0.0108%" height="15" fill="rgb(251,143,52)" fg:x="32760" fg:w="11"/><text x="32.4209%" y="1327.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (15 samples, 0.01%)</title><rect x="32.2534%" y="1317" width="0.0147%" height="15" fill="rgb(206,90,15)" fg:x="32844" fg:w="15"/><text x="32.5034%" y="1327.50"></text></g><g><title>[engine] (532 samples, 0.52%)</title><rect x="31.7506%" y="1333" width="0.5224%" height="15" fill="rgb(218,35,8)" fg:x="32332" fg:w="532"/><text x="32.0006%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="32.2790%" y="1253" width="0.0118%" height="15" fill="rgb(239,215,6)" fg:x="32870" fg:w="12"/><text x="32.5290%" y="1263.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (19 samples, 0.02%)</title><rect x="32.2731%" y="1333" width="0.0187%" height="15" fill="rgb(245,116,39)" fg:x="32864" fg:w="19"/><text x="32.5231%" y="1343.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (15 samples, 0.01%)</title><rect x="32.2770%" y="1317" width="0.0147%" height="15" fill="rgb(242,65,28)" fg:x="32868" fg:w="15"/><text x="32.5270%" y="1327.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (15 samples, 0.01%)</title><rect x="32.2770%" y="1301" width="0.0147%" height="15" fill="rgb(252,132,53)" fg:x="32868" fg:w="15"/><text x="32.5270%" y="1311.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.01%)</title><rect x="32.2770%" y="1285" width="0.0147%" height="15" fill="rgb(224,159,50)" fg:x="32868" fg:w="15"/><text x="32.5270%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.01%)</title><rect x="32.2770%" y="1269" width="0.0147%" height="15" fill="rgb(224,93,4)" fg:x="32868" fg:w="15"/><text x="32.5270%" y="1279.50"></text></g><g><title>[libc-2.33.so] (14 samples, 0.01%)</title><rect x="32.2927%" y="1333" width="0.0137%" height="15" fill="rgb(208,81,34)" fg:x="32884" fg:w="14"/><text x="32.5427%" y="1343.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (43 samples, 0.04%)</title><rect x="32.3065%" y="1333" width="0.0422%" height="15" fill="rgb(233,92,54)" fg:x="32898" fg:w="43"/><text x="32.5565%" y="1343.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (12 samples, 0.01%)</title><rect x="32.3575%" y="1317" width="0.0118%" height="15" fill="rgb(237,21,14)" fg:x="32950" fg:w="12"/><text x="32.6075%" y="1327.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (15 samples, 0.01%)</title><rect x="32.3693%" y="1317" width="0.0147%" height="15" fill="rgb(249,128,51)" fg:x="32962" fg:w="15"/><text x="32.6193%" y="1327.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (17 samples, 0.02%)</title><rect x="32.3860%" y="1317" width="0.0167%" height="15" fill="rgb(223,129,24)" fg:x="32979" fg:w="17"/><text x="32.6360%" y="1327.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynEq&gt;::dyn_eq (25 samples, 0.02%)</title><rect x="32.4125%" y="1317" width="0.0246%" height="15" fill="rgb(231,168,25)" fg:x="33006" fg:w="25"/><text x="32.6625%" y="1327.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="32.4577%" y="1317" width="0.0128%" height="15" fill="rgb(224,39,20)" fg:x="33052" fg:w="13"/><text x="32.7077%" y="1327.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="32.4705%" y="1317" width="0.0147%" height="15" fill="rgb(225,152,53)" fg:x="33065" fg:w="15"/><text x="32.7205%" y="1327.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="32.4950%" y="1317" width="0.0196%" height="15" fill="rgb(252,17,24)" fg:x="33090" fg:w="20"/><text x="32.7450%" y="1327.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (11 samples, 0.01%)</title><rect x="32.5549%" y="981" width="0.0108%" height="15" fill="rgb(250,114,30)" fg:x="33151" fg:w="11"/><text x="32.8049%" y="991.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (20 samples, 0.02%)</title><rect x="32.5549%" y="997" width="0.0196%" height="15" fill="rgb(229,5,4)" fg:x="33151" fg:w="20"/><text x="32.8049%" y="1007.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (25 samples, 0.02%)</title><rect x="32.5549%" y="1157" width="0.0246%" height="15" fill="rgb(225,176,49)" fg:x="33151" fg:w="25"/><text x="32.8049%" y="1167.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (25 samples, 0.02%)</title><rect x="32.5549%" y="1141" width="0.0246%" height="15" fill="rgb(224,221,49)" fg:x="33151" fg:w="25"/><text x="32.8049%" y="1151.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (25 samples, 0.02%)</title><rect x="32.5549%" y="1125" width="0.0246%" height="15" fill="rgb(253,169,27)" fg:x="33151" fg:w="25"/><text x="32.8049%" y="1135.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (25 samples, 0.02%)</title><rect x="32.5549%" y="1109" width="0.0246%" height="15" fill="rgb(211,206,16)" fg:x="33151" fg:w="25"/><text x="32.8049%" y="1119.50"></text></g><g><title>wgpu::Device::create_buffer (25 samples, 0.02%)</title><rect x="32.5549%" y="1093" width="0.0246%" height="15" fill="rgb(244,87,35)" fg:x="33151" fg:w="25"/><text x="32.8049%" y="1103.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (25 samples, 0.02%)</title><rect x="32.5549%" y="1077" width="0.0246%" height="15" fill="rgb(246,28,10)" fg:x="33151" fg:w="25"/><text x="32.8049%" y="1087.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (25 samples, 0.02%)</title><rect x="32.5549%" y="1061" width="0.0246%" height="15" fill="rgb(229,12,44)" fg:x="33151" fg:w="25"/><text x="32.8049%" y="1071.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (25 samples, 0.02%)</title><rect x="32.5549%" y="1045" width="0.0246%" height="15" fill="rgb(210,145,37)" fg:x="33151" fg:w="25"/><text x="32.8049%" y="1055.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (25 samples, 0.02%)</title><rect x="32.5549%" y="1029" width="0.0246%" height="15" fill="rgb(227,112,52)" fg:x="33151" fg:w="25"/><text x="32.8049%" y="1039.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (25 samples, 0.02%)</title><rect x="32.5549%" y="1013" width="0.0246%" height="15" fill="rgb(238,155,34)" fg:x="33151" fg:w="25"/><text x="32.8049%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (61 samples, 0.06%)</title><rect x="32.5274%" y="1317" width="0.0599%" height="15" fill="rgb(239,226,36)" fg:x="33123" fg:w="61"/><text x="32.7774%" y="1327.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (54 samples, 0.05%)</title><rect x="32.5343%" y="1301" width="0.0530%" height="15" fill="rgb(230,16,23)" fg:x="33130" fg:w="54"/><text x="32.7843%" y="1311.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (40 samples, 0.04%)</title><rect x="32.5480%" y="1285" width="0.0393%" height="15" fill="rgb(236,171,36)" fg:x="33144" fg:w="40"/><text x="32.7980%" y="1295.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (40 samples, 0.04%)</title><rect x="32.5480%" y="1269" width="0.0393%" height="15" fill="rgb(221,22,14)" fg:x="33144" fg:w="40"/><text x="32.7980%" y="1279.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (40 samples, 0.04%)</title><rect x="32.5480%" y="1253" width="0.0393%" height="15" fill="rgb(242,43,11)" fg:x="33144" fg:w="40"/><text x="32.7980%" y="1263.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (33 samples, 0.03%)</title><rect x="32.5549%" y="1237" width="0.0324%" height="15" fill="rgb(232,69,23)" fg:x="33151" fg:w="33"/><text x="32.8049%" y="1247.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (33 samples, 0.03%)</title><rect x="32.5549%" y="1221" width="0.0324%" height="15" fill="rgb(216,180,54)" fg:x="33151" fg:w="33"/><text x="32.8049%" y="1231.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (33 samples, 0.03%)</title><rect x="32.5549%" y="1205" width="0.0324%" height="15" fill="rgb(216,5,24)" fg:x="33151" fg:w="33"/><text x="32.8049%" y="1215.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (33 samples, 0.03%)</title><rect x="32.5549%" y="1189" width="0.0324%" height="15" fill="rgb(225,89,9)" fg:x="33151" fg:w="33"/><text x="32.8049%" y="1199.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (33 samples, 0.03%)</title><rect x="32.5549%" y="1173" width="0.0324%" height="15" fill="rgb(243,75,33)" fg:x="33151" fg:w="33"/><text x="32.8049%" y="1183.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (17 samples, 0.02%)</title><rect x="32.6541%" y="1029" width="0.0167%" height="15" fill="rgb(247,141,45)" fg:x="33252" fg:w="17"/><text x="32.9041%" y="1039.50"></text></g><g><title>glslang::TSymbolTable::copyTable (13 samples, 0.01%)</title><rect x="32.6708%" y="1029" width="0.0128%" height="15" fill="rgb(232,177,36)" fg:x="33269" fg:w="13"/><text x="32.9208%" y="1039.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (13 samples, 0.01%)</title><rect x="32.6708%" y="1013" width="0.0128%" height="15" fill="rgb(219,125,36)" fg:x="33269" fg:w="13"/><text x="32.9208%" y="1023.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (42 samples, 0.04%)</title><rect x="32.6541%" y="1141" width="0.0412%" height="15" fill="rgb(227,94,9)" fg:x="33252" fg:w="42"/><text x="32.9041%" y="1151.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (42 samples, 0.04%)</title><rect x="32.6541%" y="1125" width="0.0412%" height="15" fill="rgb(240,34,52)" fg:x="33252" fg:w="42"/><text x="32.9041%" y="1135.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (42 samples, 0.04%)</title><rect x="32.6541%" y="1109" width="0.0412%" height="15" fill="rgb(216,45,12)" fg:x="33252" fg:w="42"/><text x="32.9041%" y="1119.50"></text></g><g><title>bevy_glsl_to_spirv::compile (42 samples, 0.04%)</title><rect x="32.6541%" y="1093" width="0.0412%" height="15" fill="rgb(246,21,19)" fg:x="33252" fg:w="42"/><text x="32.9041%" y="1103.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (42 samples, 0.04%)</title><rect x="32.6541%" y="1077" width="0.0412%" height="15" fill="rgb(213,98,42)" fg:x="33252" fg:w="42"/><text x="32.9041%" y="1087.50"></text></g><g><title>glslang_shader_preprocess (42 samples, 0.04%)</title><rect x="32.6541%" y="1061" width="0.0412%" height="15" fill="rgb(250,136,47)" fg:x="33252" fg:w="42"/><text x="32.9041%" y="1071.50"></text></g><g><title>glslang::TShader::preprocess (42 samples, 0.04%)</title><rect x="32.6541%" y="1045" width="0.0412%" height="15" fill="rgb(251,124,27)" fg:x="33252" fg:w="42"/><text x="32.9041%" y="1055.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (19 samples, 0.02%)</title><rect x="32.7062%" y="981" width="0.0187%" height="15" fill="rgb(229,180,14)" fg:x="33305" fg:w="19"/><text x="32.9562%" y="991.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (34 samples, 0.03%)</title><rect x="32.6963%" y="997" width="0.0334%" height="15" fill="rgb(245,216,25)" fg:x="33295" fg:w="34"/><text x="32.9463%" y="1007.50"></text></g><g><title>glslang::TFunction::clone (11 samples, 0.01%)</title><rect x="32.7327%" y="965" width="0.0108%" height="15" fill="rgb(251,43,5)" fg:x="33332" fg:w="11"/><text x="32.9827%" y="975.50"></text></g><g><title>glslang::TFunction::TFunction (11 samples, 0.01%)</title><rect x="32.7327%" y="949" width="0.0108%" height="15" fill="rgb(250,128,24)" fg:x="33332" fg:w="11"/><text x="32.9827%" y="959.50"></text></g><g><title>glslang::TSymbolTable::copyTable (19 samples, 0.02%)</title><rect x="32.7297%" y="997" width="0.0187%" height="15" fill="rgb(217,117,27)" fg:x="33329" fg:w="19"/><text x="32.9797%" y="1007.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (19 samples, 0.02%)</title><rect x="32.7297%" y="981" width="0.0187%" height="15" fill="rgb(245,147,4)" fg:x="33329" fg:w="19"/><text x="32.9797%" y="991.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (109 samples, 0.11%)</title><rect x="32.6541%" y="1205" width="0.1070%" height="15" fill="rgb(242,201,35)" fg:x="33252" fg:w="109"/><text x="32.9041%" y="1215.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::prepare (109 samples, 0.11%)</title><rect x="32.6541%" y="1189" width="0.1070%" height="15" fill="rgb(218,181,1)" fg:x="33252" fg:w="109"/><text x="32.9041%" y="1199.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::init_pipeline (109 samples, 0.11%)</title><rect x="32.6541%" y="1173" width="0.1070%" height="15" fill="rgb(222,6,29)" fg:x="33252" fg:w="109"/><text x="32.9041%" y="1183.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (109 samples, 0.11%)</title><rect x="32.6541%" y="1157" width="0.1070%" height="15" fill="rgb(208,186,3)" fg:x="33252" fg:w="109"/><text x="32.9041%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (67 samples, 0.07%)</title><rect x="32.6953%" y="1141" width="0.0658%" height="15" fill="rgb(216,36,26)" fg:x="33294" fg:w="67"/><text x="32.9453%" y="1151.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (67 samples, 0.07%)</title><rect x="32.6953%" y="1125" width="0.0658%" height="15" fill="rgb(248,201,23)" fg:x="33294" fg:w="67"/><text x="32.9453%" y="1135.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (67 samples, 0.07%)</title><rect x="32.6953%" y="1109" width="0.0658%" height="15" fill="rgb(251,170,31)" fg:x="33294" fg:w="67"/><text x="32.9453%" y="1119.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (67 samples, 0.07%)</title><rect x="32.6953%" y="1093" width="0.0658%" height="15" fill="rgb(207,110,25)" fg:x="33294" fg:w="67"/><text x="32.9453%" y="1103.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (67 samples, 0.07%)</title><rect x="32.6953%" y="1077" width="0.0658%" height="15" fill="rgb(250,54,15)" fg:x="33294" fg:w="67"/><text x="32.9453%" y="1087.50"></text></g><g><title>bevy_glsl_to_spirv::compile (67 samples, 0.07%)</title><rect x="32.6953%" y="1061" width="0.0658%" height="15" fill="rgb(227,68,33)" fg:x="33294" fg:w="67"/><text x="32.9453%" y="1071.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (67 samples, 0.07%)</title><rect x="32.6953%" y="1045" width="0.0658%" height="15" fill="rgb(238,34,41)" fg:x="33294" fg:w="67"/><text x="32.9453%" y="1055.50"></text></g><g><title>glslang_shader_preprocess (66 samples, 0.06%)</title><rect x="32.6963%" y="1029" width="0.0648%" height="15" fill="rgb(220,11,15)" fg:x="33295" fg:w="66"/><text x="32.9463%" y="1039.50"></text></g><g><title>glslang::TShader::preprocess (66 samples, 0.06%)</title><rect x="32.6963%" y="1013" width="0.0648%" height="15" fill="rgb(246,111,35)" fg:x="33295" fg:w="66"/><text x="32.9463%" y="1023.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (21 samples, 0.02%)</title><rect x="32.7611%" y="1189" width="0.0206%" height="15" fill="rgb(209,88,53)" fg:x="33361" fg:w="21"/><text x="33.0111%" y="1199.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (21 samples, 0.02%)</title><rect x="32.7611%" y="1173" width="0.0206%" height="15" fill="rgb(231,185,47)" fg:x="33361" fg:w="21"/><text x="33.0111%" y="1183.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (21 samples, 0.02%)</title><rect x="32.7611%" y="1157" width="0.0206%" height="15" fill="rgb(233,154,1)" fg:x="33361" fg:w="21"/><text x="33.0111%" y="1167.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (21 samples, 0.02%)</title><rect x="32.7611%" y="1141" width="0.0206%" height="15" fill="rgb(225,15,46)" fg:x="33361" fg:w="21"/><text x="33.0111%" y="1151.50"></text></g><g><title>wgpu::Device::create_buffer (21 samples, 0.02%)</title><rect x="32.7611%" y="1125" width="0.0206%" height="15" fill="rgb(211,135,41)" fg:x="33361" fg:w="21"/><text x="33.0111%" y="1135.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (21 samples, 0.02%)</title><rect x="32.7611%" y="1109" width="0.0206%" height="15" fill="rgb(208,54,0)" fg:x="33361" fg:w="21"/><text x="33.0111%" y="1119.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (21 samples, 0.02%)</title><rect x="32.7611%" y="1093" width="0.0206%" height="15" fill="rgb(244,136,14)" fg:x="33361" fg:w="21"/><text x="33.0111%" y="1103.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (21 samples, 0.02%)</title><rect x="32.7611%" y="1077" width="0.0206%" height="15" fill="rgb(241,56,14)" fg:x="33361" fg:w="21"/><text x="33.0111%" y="1087.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (21 samples, 0.02%)</title><rect x="32.7611%" y="1061" width="0.0206%" height="15" fill="rgb(205,80,24)" fg:x="33361" fg:w="21"/><text x="33.0111%" y="1071.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (21 samples, 0.02%)</title><rect x="32.7611%" y="1045" width="0.0206%" height="15" fill="rgb(220,57,4)" fg:x="33361" fg:w="21"/><text x="33.0111%" y="1055.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (21 samples, 0.02%)</title><rect x="32.7611%" y="1029" width="0.0206%" height="15" fill="rgb(226,193,50)" fg:x="33361" fg:w="21"/><text x="33.0111%" y="1039.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::alloc (12 samples, 0.01%)</title><rect x="32.7700%" y="1013" width="0.0118%" height="15" fill="rgb(231,168,22)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="1023.50"></text></g><g><title>tracing::span::Span::new (12 samples, 0.01%)</title><rect x="32.7700%" y="997" width="0.0118%" height="15" fill="rgb(254,215,14)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="1007.50"></text></g><g><title>tracing_core::dispatcher::get_default (12 samples, 0.01%)</title><rect x="32.7700%" y="981" width="0.0118%" height="15" fill="rgb(211,115,16)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.01%)</title><rect x="32.7700%" y="965" width="0.0118%" height="15" fill="rgb(236,210,16)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="975.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (12 samples, 0.01%)</title><rect x="32.7700%" y="949" width="0.0118%" height="15" fill="rgb(221,94,12)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="959.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (12 samples, 0.01%)</title><rect x="32.7700%" y="933" width="0.0118%" height="15" fill="rgb(235,218,49)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="943.50"></text></g><g><title>tracing::span::Span::new_with (12 samples, 0.01%)</title><rect x="32.7700%" y="917" width="0.0118%" height="15" fill="rgb(217,114,14)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="927.50"></text></g><g><title>tracing::span::Span::make_with (12 samples, 0.01%)</title><rect x="32.7700%" y="901" width="0.0118%" height="15" fill="rgb(216,145,22)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="911.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (12 samples, 0.01%)</title><rect x="32.7700%" y="885" width="0.0118%" height="15" fill="rgb(217,112,39)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (12 samples, 0.01%)</title><rect x="32.7700%" y="869" width="0.0118%" height="15" fill="rgb(225,85,32)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (12 samples, 0.01%)</title><rect x="32.7700%" y="853" width="0.0118%" height="15" fill="rgb(245,209,47)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (12 samples, 0.01%)</title><rect x="32.7700%" y="837" width="0.0118%" height="15" fill="rgb(218,220,15)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="847.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (12 samples, 0.01%)</title><rect x="32.7700%" y="821" width="0.0118%" height="15" fill="rgb(222,202,31)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="831.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (12 samples, 0.01%)</title><rect x="32.7700%" y="805" width="0.0118%" height="15" fill="rgb(243,203,4)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="815.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (12 samples, 0.01%)</title><rect x="32.7700%" y="789" width="0.0118%" height="15" fill="rgb(237,92,17)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="799.50"></text></g><g><title>tracing_core::span::Attributes::record (12 samples, 0.01%)</title><rect x="32.7700%" y="773" width="0.0118%" height="15" fill="rgb(231,119,7)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="783.50"></text></g><g><title>tracing_core::field::ValueSet::record (12 samples, 0.01%)</title><rect x="32.7700%" y="757" width="0.0118%" height="15" fill="rgb(237,82,41)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="767.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (12 samples, 0.01%)</title><rect x="32.7700%" y="741" width="0.0118%" height="15" fill="rgb(226,81,48)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (12 samples, 0.01%)</title><rect x="32.7700%" y="725" width="0.0118%" height="15" fill="rgb(234,70,51)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="735.50"></text></g><g><title>core::fmt::Write::write_fmt (12 samples, 0.01%)</title><rect x="32.7700%" y="709" width="0.0118%" height="15" fill="rgb(251,86,4)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="719.50"></text></g><g><title>core::fmt::write (12 samples, 0.01%)</title><rect x="32.7700%" y="693" width="0.0118%" height="15" fill="rgb(244,144,28)" fg:x="33370" fg:w="12"/><text x="33.0200%" y="703.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::end_render_pass (14 samples, 0.01%)</title><rect x="32.8878%" y="1061" width="0.0137%" height="15" fill="rgb(232,161,39)" fg:x="33490" fg:w="14"/><text x="33.1378%" y="1071.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_end_render_pass (14 samples, 0.01%)</title><rect x="32.8878%" y="1045" width="0.0137%" height="15" fill="rgb(247,34,51)" fg:x="33490" fg:w="14"/><text x="33.1378%" y="1055.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_end_render_pass (14 samples, 0.01%)</title><rect x="32.8878%" y="1029" width="0.0137%" height="15" fill="rgb(225,132,2)" fg:x="33490" fg:w="14"/><text x="33.1378%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.01%)</title><rect x="32.8878%" y="1013" width="0.0137%" height="15" fill="rgb(209,159,44)" fg:x="33490" fg:w="14"/><text x="33.1378%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (20 samples, 0.02%)</title><rect x="32.9153%" y="1029" width="0.0196%" height="15" fill="rgb(251,214,1)" fg:x="33518" fg:w="20"/><text x="33.1653%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (17 samples, 0.02%)</title><rect x="32.9183%" y="1013" width="0.0167%" height="15" fill="rgb(247,84,47)" fg:x="33521" fg:w="17"/><text x="33.1683%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (17 samples, 0.02%)</title><rect x="32.9183%" y="997" width="0.0167%" height="15" fill="rgb(240,111,43)" fg:x="33521" fg:w="17"/><text x="33.1683%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (22 samples, 0.02%)</title><rect x="32.9153%" y="1061" width="0.0216%" height="15" fill="rgb(215,214,35)" fg:x="33518" fg:w="22"/><text x="33.1653%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (22 samples, 0.02%)</title><rect x="32.9153%" y="1045" width="0.0216%" height="15" fill="rgb(248,207,23)" fg:x="33518" fg:w="22"/><text x="33.1653%" y="1055.50"></text></g><g><title>wgpu_core::binding_model::BindGroup&lt;B&gt;::validate_dynamic_bindings (33 samples, 0.03%)</title><rect x="32.9703%" y="1061" width="0.0324%" height="15" fill="rgb(214,186,4)" fg:x="33574" fg:w="33"/><text x="33.2203%" y="1071.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::position (18 samples, 0.02%)</title><rect x="33.0263%" y="1029" width="0.0177%" height="15" fill="rgb(220,133,22)" fg:x="33631" fg:w="18"/><text x="33.2763%" y="1039.50"></text></g><g><title>wgpu_core::command::bind::Binder::compatible_count::{{closure}} (11 samples, 0.01%)</title><rect x="33.0332%" y="1013" width="0.0108%" height="15" fill="rgb(239,134,19)" fg:x="33638" fg:w="11"/><text x="33.2832%" y="1023.50"></text></g><g><title>wgpu_core::command::bind::BindGroupEntry::is_valid (11 samples, 0.01%)</title><rect x="33.0332%" y="997" width="0.0108%" height="15" fill="rgb(250,140,9)" fg:x="33638" fg:w="11"/><text x="33.2832%" y="1007.50"></text></g><g><title>wgpu_core::command::bind::Binder::compatible_count (22 samples, 0.02%)</title><rect x="33.0263%" y="1045" width="0.0216%" height="15" fill="rgb(225,59,14)" fg:x="33631" fg:w="22"/><text x="33.2763%" y="1055.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (38 samples, 0.04%)</title><rect x="33.0135%" y="1061" width="0.0373%" height="15" fill="rgb(214,152,51)" fg:x="33618" fg:w="38"/><text x="33.2635%" y="1071.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (349 samples, 0.34%)</title><rect x="32.7818%" y="1189" width="0.3427%" height="15" fill="rgb(251,227,43)" fg:x="33382" fg:w="349"/><text x="33.0318%" y="1199.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (349 samples, 0.34%)</title><rect x="32.7818%" y="1173" width="0.3427%" height="15" fill="rgb(241,96,17)" fg:x="33382" fg:w="349"/><text x="33.0318%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (349 samples, 0.34%)</title><rect x="32.7818%" y="1157" width="0.3427%" height="15" fill="rgb(234,198,43)" fg:x="33382" fg:w="349"/><text x="33.0318%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (349 samples, 0.34%)</title><rect x="32.7818%" y="1141" width="0.3427%" height="15" fill="rgb(220,108,29)" fg:x="33382" fg:w="349"/><text x="33.0318%" y="1151.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (349 samples, 0.34%)</title><rect x="32.7818%" y="1125" width="0.3427%" height="15" fill="rgb(226,163,33)" fg:x="33382" fg:w="349"/><text x="33.0318%" y="1135.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (349 samples, 0.34%)</title><rect x="32.7818%" y="1109" width="0.3427%" height="15" fill="rgb(205,194,45)" fg:x="33382" fg:w="349"/><text x="33.0318%" y="1119.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (349 samples, 0.34%)</title><rect x="32.7818%" y="1093" width="0.3427%" height="15" fill="rgb(206,143,44)" fg:x="33382" fg:w="349"/><text x="33.0318%" y="1103.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (349 samples, 0.34%)</title><rect x="32.7818%" y="1077" width="0.3427%" height="15" fill="rgb(236,136,36)" fg:x="33382" fg:w="349"/><text x="33.0318%" y="1087.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (43 samples, 0.04%)</title><rect x="33.0823%" y="1061" width="0.0422%" height="15" fill="rgb(249,172,42)" fg:x="33688" fg:w="43"/><text x="33.3323%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (550 samples, 0.54%)</title><rect x="32.5873%" y="1317" width="0.5401%" height="15" fill="rgb(216,139,23)" fg:x="33184" fg:w="550"/><text x="32.8373%" y="1327.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (497 samples, 0.49%)</title><rect x="32.6394%" y="1301" width="0.4881%" height="15" fill="rgb(207,166,20)" fg:x="33237" fg:w="497"/><text x="32.8894%" y="1311.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (497 samples, 0.49%)</title><rect x="32.6394%" y="1285" width="0.4881%" height="15" fill="rgb(210,209,22)" fg:x="33237" fg:w="497"/><text x="32.8894%" y="1295.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (491 samples, 0.48%)</title><rect x="32.6453%" y="1269" width="0.4822%" height="15" fill="rgb(232,118,20)" fg:x="33243" fg:w="491"/><text x="32.8953%" y="1279.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (482 samples, 0.47%)</title><rect x="32.6541%" y="1253" width="0.4733%" height="15" fill="rgb(238,113,42)" fg:x="33252" fg:w="482"/><text x="32.9041%" y="1263.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (482 samples, 0.47%)</title><rect x="32.6541%" y="1237" width="0.4733%" height="15" fill="rgb(231,42,5)" fg:x="33252" fg:w="482"/><text x="32.9041%" y="1247.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (482 samples, 0.47%)</title><rect x="32.6541%" y="1221" width="0.4733%" height="15" fill="rgb(243,166,24)" fg:x="33252" fg:w="482"/><text x="32.9041%" y="1231.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (373 samples, 0.37%)</title><rect x="32.7611%" y="1205" width="0.3663%" height="15" fill="rgb(237,226,12)" fg:x="33361" fg:w="373"/><text x="33.0111%" y="1215.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (33 samples, 0.03%)</title><rect x="33.1382%" y="1061" width="0.0324%" height="15" fill="rgb(229,133,24)" fg:x="33745" fg:w="33"/><text x="33.3882%" y="1071.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="33.1736%" y="1029" width="0.0108%" height="15" fill="rgb(238,33,43)" fg:x="33781" fg:w="11"/><text x="33.4236%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="33.1736%" y="1013" width="0.0108%" height="15" fill="rgb(227,59,38)" fg:x="33781" fg:w="11"/><text x="33.4236%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="33.1736%" y="997" width="0.0108%" height="15" fill="rgb(230,97,0)" fg:x="33781" fg:w="11"/><text x="33.4236%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="33.1991%" y="981" width="0.0108%" height="15" fill="rgb(250,173,50)" fg:x="33807" fg:w="11"/><text x="33.4491%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (36 samples, 0.04%)</title><rect x="33.1913%" y="997" width="0.0354%" height="15" fill="rgb(240,15,50)" fg:x="33799" fg:w="36"/><text x="33.4413%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (17 samples, 0.02%)</title><rect x="33.2099%" y="981" width="0.0167%" height="15" fill="rgb(221,93,22)" fg:x="33818" fg:w="17"/><text x="33.4599%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (17 samples, 0.02%)</title><rect x="33.2099%" y="965" width="0.0167%" height="15" fill="rgb(245,180,53)" fg:x="33818" fg:w="17"/><text x="33.4599%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (17 samples, 0.02%)</title><rect x="33.2099%" y="949" width="0.0167%" height="15" fill="rgb(231,88,51)" fg:x="33818" fg:w="17"/><text x="33.4599%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (46 samples, 0.05%)</title><rect x="33.1903%" y="1029" width="0.0452%" height="15" fill="rgb(240,58,21)" fg:x="33798" fg:w="46"/><text x="33.4403%" y="1039.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (46 samples, 0.05%)</title><rect x="33.1903%" y="1013" width="0.0452%" height="15" fill="rgb(237,21,10)" fg:x="33798" fg:w="46"/><text x="33.4403%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (114 samples, 0.11%)</title><rect x="33.1274%" y="1317" width="0.1120%" height="15" fill="rgb(218,43,11)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1327.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (114 samples, 0.11%)</title><rect x="33.1274%" y="1301" width="0.1120%" height="15" fill="rgb(218,221,29)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1311.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (114 samples, 0.11%)</title><rect x="33.1274%" y="1285" width="0.1120%" height="15" fill="rgb(214,118,42)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1295.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (114 samples, 0.11%)</title><rect x="33.1274%" y="1269" width="0.1120%" height="15" fill="rgb(251,200,26)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1279.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (114 samples, 0.11%)</title><rect x="33.1274%" y="1253" width="0.1120%" height="15" fill="rgb(237,101,39)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1263.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (114 samples, 0.11%)</title><rect x="33.1274%" y="1237" width="0.1120%" height="15" fill="rgb(251,117,11)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1247.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (114 samples, 0.11%)</title><rect x="33.1274%" y="1221" width="0.1120%" height="15" fill="rgb(216,223,23)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1231.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (114 samples, 0.11%)</title><rect x="33.1274%" y="1205" width="0.1120%" height="15" fill="rgb(251,54,12)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1215.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (114 samples, 0.11%)</title><rect x="33.1274%" y="1189" width="0.1120%" height="15" fill="rgb(254,176,54)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (114 samples, 0.11%)</title><rect x="33.1274%" y="1173" width="0.1120%" height="15" fill="rgb(210,32,8)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (114 samples, 0.11%)</title><rect x="33.1274%" y="1157" width="0.1120%" height="15" fill="rgb(235,52,38)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1167.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (114 samples, 0.11%)</title><rect x="33.1274%" y="1141" width="0.1120%" height="15" fill="rgb(231,4,44)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1151.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (114 samples, 0.11%)</title><rect x="33.1274%" y="1125" width="0.1120%" height="15" fill="rgb(249,2,32)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1135.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (114 samples, 0.11%)</title><rect x="33.1274%" y="1109" width="0.1120%" height="15" fill="rgb(224,65,26)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1119.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (114 samples, 0.11%)</title><rect x="33.1274%" y="1093" width="0.1120%" height="15" fill="rgb(250,73,40)" fg:x="33734" fg:w="114"/><text x="33.3774%" y="1103.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (103 samples, 0.10%)</title><rect x="33.1382%" y="1077" width="0.1011%" height="15" fill="rgb(253,177,16)" fg:x="33745" fg:w="103"/><text x="33.3882%" y="1087.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (70 samples, 0.07%)</title><rect x="33.1706%" y="1061" width="0.0687%" height="15" fill="rgb(217,32,34)" fg:x="33778" fg:w="70"/><text x="33.4206%" y="1071.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (70 samples, 0.07%)</title><rect x="33.1706%" y="1045" width="0.0687%" height="15" fill="rgb(212,7,10)" fg:x="33778" fg:w="70"/><text x="33.4206%" y="1055.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (18 samples, 0.02%)</title><rect x="33.3376%" y="1301" width="0.0177%" height="15" fill="rgb(245,89,8)" fg:x="33948" fg:w="18"/><text x="33.5876%" y="1311.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (17 samples, 0.02%)</title><rect x="33.3386%" y="1285" width="0.0167%" height="15" fill="rgb(237,16,53)" fg:x="33949" fg:w="17"/><text x="33.5886%" y="1295.50"></text></g><g><title>core::ops::function::Fn::call (17 samples, 0.02%)</title><rect x="33.3386%" y="1269" width="0.0167%" height="15" fill="rgb(250,204,30)" fg:x="33949" fg:w="17"/><text x="33.5886%" y="1279.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (16 samples, 0.02%)</title><rect x="33.3396%" y="1253" width="0.0157%" height="15" fill="rgb(208,77,27)" fg:x="33950" fg:w="16"/><text x="33.5896%" y="1263.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (16 samples, 0.02%)</title><rect x="33.3396%" y="1237" width="0.0157%" height="15" fill="rgb(250,204,28)" fg:x="33950" fg:w="16"/><text x="33.5896%" y="1247.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (16 samples, 0.02%)</title><rect x="33.3396%" y="1221" width="0.0157%" height="15" fill="rgb(244,63,21)" fg:x="33950" fg:w="16"/><text x="33.5896%" y="1231.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (120 samples, 0.12%)</title><rect x="33.2394%" y="1317" width="0.1178%" height="15" fill="rgb(236,85,44)" fg:x="33848" fg:w="120"/><text x="33.4894%" y="1327.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (14 samples, 0.01%)</title><rect x="33.3592%" y="1189" width="0.0137%" height="15" fill="rgb(215,98,4)" fg:x="33970" fg:w="14"/><text x="33.6092%" y="1199.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (13 samples, 0.01%)</title><rect x="33.3602%" y="1173" width="0.0128%" height="15" fill="rgb(235,38,11)" fg:x="33971" fg:w="13"/><text x="33.6102%" y="1183.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (34 samples, 0.03%)</title><rect x="33.3592%" y="1317" width="0.0334%" height="15" fill="rgb(254,186,25)" fg:x="33970" fg:w="34"/><text x="33.6092%" y="1327.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (34 samples, 0.03%)</title><rect x="33.3592%" y="1301" width="0.0334%" height="15" fill="rgb(225,55,31)" fg:x="33970" fg:w="34"/><text x="33.6092%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (34 samples, 0.03%)</title><rect x="33.3592%" y="1285" width="0.0334%" height="15" fill="rgb(211,15,21)" fg:x="33970" fg:w="34"/><text x="33.6092%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (34 samples, 0.03%)</title><rect x="33.3592%" y="1269" width="0.0334%" height="15" fill="rgb(215,187,41)" fg:x="33970" fg:w="34"/><text x="33.6092%" y="1279.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="33.3592%" y="1253" width="0.0334%" height="15" fill="rgb(248,69,32)" fg:x="33970" fg:w="34"/><text x="33.6092%" y="1263.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (34 samples, 0.03%)</title><rect x="33.3592%" y="1237" width="0.0334%" height="15" fill="rgb(252,102,52)" fg:x="33970" fg:w="34"/><text x="33.6092%" y="1247.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (34 samples, 0.03%)</title><rect x="33.3592%" y="1221" width="0.0334%" height="15" fill="rgb(253,140,32)" fg:x="33970" fg:w="34"/><text x="33.6092%" y="1231.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (34 samples, 0.03%)</title><rect x="33.3592%" y="1205" width="0.0334%" height="15" fill="rgb(216,56,42)" fg:x="33970" fg:w="34"/><text x="33.6092%" y="1215.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (17 samples, 0.02%)</title><rect x="33.3759%" y="1189" width="0.0167%" height="15" fill="rgb(216,184,14)" fg:x="33987" fg:w="17"/><text x="33.6259%" y="1199.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (17 samples, 0.02%)</title><rect x="33.3759%" y="1173" width="0.0167%" height="15" fill="rgb(237,187,27)" fg:x="33987" fg:w="17"/><text x="33.6259%" y="1183.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (12 samples, 0.01%)</title><rect x="33.4063%" y="1189" width="0.0118%" height="15" fill="rgb(219,65,3)" fg:x="34018" fg:w="12"/><text x="33.6563%" y="1199.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (20 samples, 0.02%)</title><rect x="33.4063%" y="1317" width="0.0196%" height="15" fill="rgb(245,83,25)" fg:x="34018" fg:w="20"/><text x="33.6563%" y="1327.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (20 samples, 0.02%)</title><rect x="33.4063%" y="1301" width="0.0196%" height="15" fill="rgb(214,205,45)" fg:x="34018" fg:w="20"/><text x="33.6563%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (20 samples, 0.02%)</title><rect x="33.4063%" y="1285" width="0.0196%" height="15" fill="rgb(241,20,18)" fg:x="34018" fg:w="20"/><text x="33.6563%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (20 samples, 0.02%)</title><rect x="33.4063%" y="1269" width="0.0196%" height="15" fill="rgb(232,163,23)" fg:x="34018" fg:w="20"/><text x="33.6563%" y="1279.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (20 samples, 0.02%)</title><rect x="33.4063%" y="1253" width="0.0196%" height="15" fill="rgb(214,5,46)" fg:x="34018" fg:w="20"/><text x="33.6563%" y="1263.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (20 samples, 0.02%)</title><rect x="33.4063%" y="1237" width="0.0196%" height="15" fill="rgb(229,78,17)" fg:x="34018" fg:w="20"/><text x="33.6563%" y="1247.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (20 samples, 0.02%)</title><rect x="33.4063%" y="1221" width="0.0196%" height="15" fill="rgb(248,89,10)" fg:x="34018" fg:w="20"/><text x="33.6563%" y="1231.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (20 samples, 0.02%)</title><rect x="33.4063%" y="1205" width="0.0196%" height="15" fill="rgb(248,54,15)" fg:x="34018" fg:w="20"/><text x="33.6563%" y="1215.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (11 samples, 0.01%)</title><rect x="33.4446%" y="1189" width="0.0108%" height="15" fill="rgb(223,116,6)" fg:x="34057" fg:w="11"/><text x="33.6946%" y="1199.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::merge (12 samples, 0.01%)</title><rect x="33.4554%" y="1173" width="0.0118%" height="15" fill="rgb(205,125,38)" fg:x="34068" fg:w="12"/><text x="33.7054%" y="1183.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (34 samples, 0.03%)</title><rect x="33.4446%" y="1205" width="0.0334%" height="15" fill="rgb(251,78,38)" fg:x="34057" fg:w="34"/><text x="33.6946%" y="1215.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (23 samples, 0.02%)</title><rect x="33.4554%" y="1189" width="0.0226%" height="15" fill="rgb(253,78,28)" fg:x="34068" fg:w="23"/><text x="33.7054%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11 samples, 0.01%)</title><rect x="33.4672%" y="1173" width="0.0108%" height="15" fill="rgb(209,120,3)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1183.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11 samples, 0.01%)</title><rect x="33.4672%" y="1157" width="0.0108%" height="15" fill="rgb(238,229,9)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (11 samples, 0.01%)</title><rect x="33.4672%" y="1141" width="0.0108%" height="15" fill="rgb(253,159,18)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="33.4672%" y="1125" width="0.0108%" height="15" fill="rgb(244,42,34)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.01%)</title><rect x="33.4672%" y="1109" width="0.0108%" height="15" fill="rgb(224,8,7)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (11 samples, 0.01%)</title><rect x="33.4672%" y="1093" width="0.0108%" height="15" fill="rgb(210,201,45)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (11 samples, 0.01%)</title><rect x="33.4672%" y="1077" width="0.0108%" height="15" fill="rgb(252,185,21)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (11 samples, 0.01%)</title><rect x="33.4672%" y="1061" width="0.0108%" height="15" fill="rgb(223,131,1)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (11 samples, 0.01%)</title><rect x="33.4672%" y="1045" width="0.0108%" height="15" fill="rgb(245,141,16)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1055.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (11 samples, 0.01%)</title><rect x="33.4672%" y="1029" width="0.0108%" height="15" fill="rgb(229,55,45)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="33.4672%" y="1013" width="0.0108%" height="15" fill="rgb(208,92,15)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="33.4672%" y="997" width="0.0108%" height="15" fill="rgb(234,185,47)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="33.4672%" y="981" width="0.0108%" height="15" fill="rgb(253,104,50)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="991.50"></text></g><g><title>__rdl_alloc (11 samples, 0.01%)</title><rect x="33.4672%" y="965" width="0.0108%" height="15" fill="rgb(205,70,7)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="975.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (11 samples, 0.01%)</title><rect x="33.4672%" y="949" width="0.0108%" height="15" fill="rgb(240,178,43)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="959.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.01%)</title><rect x="33.4672%" y="933" width="0.0108%" height="15" fill="rgb(214,112,2)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="943.50"></text></g><g><title>_int_malloc (11 samples, 0.01%)</title><rect x="33.4672%" y="917" width="0.0108%" height="15" fill="rgb(206,46,17)" fg:x="34080" fg:w="11"/><text x="33.7172%" y="927.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::finish (24 samples, 0.02%)</title><rect x="33.4780%" y="1205" width="0.0236%" height="15" fill="rgb(225,220,16)" fg:x="34091" fg:w="24"/><text x="33.7280%" y="1215.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (24 samples, 0.02%)</title><rect x="33.4780%" y="1189" width="0.0236%" height="15" fill="rgb(238,65,40)" fg:x="34091" fg:w="24"/><text x="33.7280%" y="1199.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (24 samples, 0.02%)</title><rect x="33.4780%" y="1173" width="0.0236%" height="15" fill="rgb(230,151,21)" fg:x="34091" fg:w="24"/><text x="33.7280%" y="1183.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (24 samples, 0.02%)</title><rect x="33.4780%" y="1157" width="0.0236%" height="15" fill="rgb(218,58,49)" fg:x="34091" fg:w="24"/><text x="33.7280%" y="1167.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (24 samples, 0.02%)</title><rect x="33.4780%" y="1141" width="0.0236%" height="15" fill="rgb(219,179,14)" fg:x="34091" fg:w="24"/><text x="33.7280%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (24 samples, 0.02%)</title><rect x="33.4780%" y="1125" width="0.0236%" height="15" fill="rgb(223,72,1)" fg:x="34091" fg:w="24"/><text x="33.7280%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (24 samples, 0.02%)</title><rect x="33.4780%" y="1109" width="0.0236%" height="15" fill="rgb(238,126,10)" fg:x="34091" fg:w="24"/><text x="33.7280%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (24 samples, 0.02%)</title><rect x="33.4780%" y="1093" width="0.0236%" height="15" fill="rgb(224,206,38)" fg:x="34091" fg:w="24"/><text x="33.7280%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (24 samples, 0.02%)</title><rect x="33.4780%" y="1077" width="0.0236%" height="15" fill="rgb(212,201,54)" fg:x="34091" fg:w="24"/><text x="33.7280%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (22 samples, 0.02%)</title><rect x="33.4800%" y="1061" width="0.0216%" height="15" fill="rgb(218,154,48)" fg:x="34093" fg:w="22"/><text x="33.7300%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (22 samples, 0.02%)</title><rect x="33.4800%" y="1045" width="0.0216%" height="15" fill="rgb(232,93,24)" fg:x="34093" fg:w="22"/><text x="33.7300%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (19 samples, 0.02%)</title><rect x="33.4829%" y="1029" width="0.0187%" height="15" fill="rgb(245,30,21)" fg:x="34096" fg:w="19"/><text x="33.7329%" y="1039.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (19 samples, 0.02%)</title><rect x="33.4829%" y="1013" width="0.0187%" height="15" fill="rgb(242,148,29)" fg:x="34096" fg:w="19"/><text x="33.7329%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="33.4829%" y="997" width="0.0187%" height="15" fill="rgb(244,153,54)" fg:x="34096" fg:w="19"/><text x="33.7329%" y="1007.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="33.4829%" y="981" width="0.0187%" height="15" fill="rgb(252,87,22)" fg:x="34096" fg:w="19"/><text x="33.7329%" y="991.50"></text></g><g><title>alloc::alloc::alloc (19 samples, 0.02%)</title><rect x="33.4829%" y="965" width="0.0187%" height="15" fill="rgb(210,51,29)" fg:x="34096" fg:w="19"/><text x="33.7329%" y="975.50"></text></g><g><title>__rdl_alloc (19 samples, 0.02%)</title><rect x="33.4829%" y="949" width="0.0187%" height="15" fill="rgb(242,136,47)" fg:x="34096" fg:w="19"/><text x="33.7329%" y="959.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (19 samples, 0.02%)</title><rect x="33.4829%" y="933" width="0.0187%" height="15" fill="rgb(238,68,4)" fg:x="34096" fg:w="19"/><text x="33.7329%" y="943.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.02%)</title><rect x="33.4839%" y="917" width="0.0177%" height="15" fill="rgb(242,161,30)" fg:x="34097" fg:w="18"/><text x="33.7339%" y="927.50"></text></g><g><title>_int_malloc (16 samples, 0.02%)</title><rect x="33.4859%" y="901" width="0.0157%" height="15" fill="rgb(218,58,44)" fg:x="34099" fg:w="16"/><text x="33.7359%" y="911.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (87 samples, 0.09%)</title><rect x="33.4338%" y="1317" width="0.0854%" height="15" fill="rgb(252,125,32)" fg:x="34046" fg:w="87"/><text x="33.6838%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (76 samples, 0.07%)</title><rect x="33.4446%" y="1301" width="0.0746%" height="15" fill="rgb(219,178,0)" fg:x="34057" fg:w="76"/><text x="33.6946%" y="1311.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (76 samples, 0.07%)</title><rect x="33.4446%" y="1285" width="0.0746%" height="15" fill="rgb(213,152,7)" fg:x="34057" fg:w="76"/><text x="33.6946%" y="1295.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (76 samples, 0.07%)</title><rect x="33.4446%" y="1269" width="0.0746%" height="15" fill="rgb(249,109,34)" fg:x="34057" fg:w="76"/><text x="33.6946%" y="1279.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (76 samples, 0.07%)</title><rect x="33.4446%" y="1253" width="0.0746%" height="15" fill="rgb(232,96,21)" fg:x="34057" fg:w="76"/><text x="33.6946%" y="1263.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (76 samples, 0.07%)</title><rect x="33.4446%" y="1237" width="0.0746%" height="15" fill="rgb(228,27,39)" fg:x="34057" fg:w="76"/><text x="33.6946%" y="1247.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (76 samples, 0.07%)</title><rect x="33.4446%" y="1221" width="0.0746%" height="15" fill="rgb(211,182,52)" fg:x="34057" fg:w="76"/><text x="33.6946%" y="1231.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (18 samples, 0.02%)</title><rect x="33.5016%" y="1205" width="0.0177%" height="15" fill="rgb(234,178,38)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1215.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (18 samples, 0.02%)</title><rect x="33.5016%" y="1189" width="0.0177%" height="15" fill="rgb(221,111,3)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (18 samples, 0.02%)</title><rect x="33.5016%" y="1173" width="0.0177%" height="15" fill="rgb(228,175,21)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1183.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (18 samples, 0.02%)</title><rect x="33.5016%" y="1157" width="0.0177%" height="15" fill="rgb(228,174,43)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1167.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (18 samples, 0.02%)</title><rect x="33.5016%" y="1141" width="0.0177%" height="15" fill="rgb(211,191,0)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="33.5016%" y="1125" width="0.0177%" height="15" fill="rgb(253,117,3)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (18 samples, 0.02%)</title><rect x="33.5016%" y="1109" width="0.0177%" height="15" fill="rgb(241,127,19)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (18 samples, 0.02%)</title><rect x="33.5016%" y="1093" width="0.0177%" height="15" fill="rgb(218,103,12)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (18 samples, 0.02%)</title><rect x="33.5016%" y="1077" width="0.0177%" height="15" fill="rgb(236,214,43)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (18 samples, 0.02%)</title><rect x="33.5016%" y="1061" width="0.0177%" height="15" fill="rgb(244,144,19)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (18 samples, 0.02%)</title><rect x="33.5016%" y="1045" width="0.0177%" height="15" fill="rgb(246,188,10)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1055.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (18 samples, 0.02%)</title><rect x="33.5016%" y="1029" width="0.0177%" height="15" fill="rgb(212,193,33)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (18 samples, 0.02%)</title><rect x="33.5016%" y="1013" width="0.0177%" height="15" fill="rgb(241,51,29)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1023.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (18 samples, 0.02%)</title><rect x="33.5016%" y="997" width="0.0177%" height="15" fill="rgb(211,58,19)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="33.5016%" y="981" width="0.0177%" height="15" fill="rgb(229,111,26)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="991.50"></text></g><g><title>__rdl_alloc (18 samples, 0.02%)</title><rect x="33.5016%" y="965" width="0.0177%" height="15" fill="rgb(213,115,40)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="975.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (18 samples, 0.02%)</title><rect x="33.5016%" y="949" width="0.0177%" height="15" fill="rgb(209,56,44)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="959.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.02%)</title><rect x="33.5016%" y="933" width="0.0177%" height="15" fill="rgb(230,108,32)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="943.50"></text></g><g><title>_int_malloc (18 samples, 0.02%)</title><rect x="33.5016%" y="917" width="0.0177%" height="15" fill="rgb(216,165,31)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="927.50"></text></g><g><title>malloc_consolidate (18 samples, 0.02%)</title><rect x="33.5016%" y="901" width="0.0177%" height="15" fill="rgb(218,122,21)" fg:x="34115" fg:w="18"/><text x="33.7516%" y="911.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (17 samples, 0.02%)</title><rect x="33.5212%" y="1317" width="0.0167%" height="15" fill="rgb(223,224,47)" fg:x="34135" fg:w="17"/><text x="33.7712%" y="1327.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_bind_group (18 samples, 0.02%)</title><rect x="33.5458%" y="1317" width="0.0177%" height="15" fill="rgb(238,102,44)" fg:x="34160" fg:w="18"/><text x="33.7958%" y="1327.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (11 samples, 0.01%)</title><rect x="33.5831%" y="1029" width="0.0108%" height="15" fill="rgb(236,46,40)" fg:x="34198" fg:w="11"/><text x="33.8331%" y="1039.50"></text></g><g><title>glslang::TBuiltIns::relateTabledBuiltins (11 samples, 0.01%)</title><rect x="33.5831%" y="1013" width="0.0108%" height="15" fill="rgb(247,202,50)" fg:x="34198" fg:w="11"/><text x="33.8331%" y="1023.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (11 samples, 0.01%)</title><rect x="33.5831%" y="997" width="0.0108%" height="15" fill="rgb(209,99,20)" fg:x="34198" fg:w="11"/><text x="33.8331%" y="1007.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (12 samples, 0.01%)</title><rect x="33.5831%" y="1141" width="0.0118%" height="15" fill="rgb(252,27,34)" fg:x="34198" fg:w="12"/><text x="33.8331%" y="1151.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (12 samples, 0.01%)</title><rect x="33.5831%" y="1125" width="0.0118%" height="15" fill="rgb(215,206,23)" fg:x="34198" fg:w="12"/><text x="33.8331%" y="1135.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (12 samples, 0.01%)</title><rect x="33.5831%" y="1109" width="0.0118%" height="15" fill="rgb(212,135,36)" fg:x="34198" fg:w="12"/><text x="33.8331%" y="1119.50"></text></g><g><title>bevy_glsl_to_spirv::compile (12 samples, 0.01%)</title><rect x="33.5831%" y="1093" width="0.0118%" height="15" fill="rgb(240,189,1)" fg:x="34198" fg:w="12"/><text x="33.8331%" y="1103.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (12 samples, 0.01%)</title><rect x="33.5831%" y="1077" width="0.0118%" height="15" fill="rgb(242,56,20)" fg:x="34198" fg:w="12"/><text x="33.8331%" y="1087.50"></text></g><g><title>glslang_shader_preprocess (12 samples, 0.01%)</title><rect x="33.5831%" y="1061" width="0.0118%" height="15" fill="rgb(247,132,33)" fg:x="34198" fg:w="12"/><text x="33.8331%" y="1071.50"></text></g><g><title>glslang::TShader::preprocess (12 samples, 0.01%)</title><rect x="33.5831%" y="1045" width="0.0118%" height="15" fill="rgb(208,149,11)" fg:x="34198" fg:w="12"/><text x="33.8331%" y="1055.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (24 samples, 0.02%)</title><rect x="33.5831%" y="1301" width="0.0236%" height="15" fill="rgb(211,33,11)" fg:x="34198" fg:w="24"/><text x="33.8331%" y="1311.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (24 samples, 0.02%)</title><rect x="33.5831%" y="1285" width="0.0236%" height="15" fill="rgb(221,29,38)" fg:x="34198" fg:w="24"/><text x="33.8331%" y="1295.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (24 samples, 0.02%)</title><rect x="33.5831%" y="1269" width="0.0236%" height="15" fill="rgb(206,182,49)" fg:x="34198" fg:w="24"/><text x="33.8331%" y="1279.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (24 samples, 0.02%)</title><rect x="33.5831%" y="1253" width="0.0236%" height="15" fill="rgb(216,140,1)" fg:x="34198" fg:w="24"/><text x="33.8331%" y="1263.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (24 samples, 0.02%)</title><rect x="33.5831%" y="1237" width="0.0236%" height="15" fill="rgb(232,57,40)" fg:x="34198" fg:w="24"/><text x="33.8331%" y="1247.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (24 samples, 0.02%)</title><rect x="33.5831%" y="1221" width="0.0236%" height="15" fill="rgb(224,186,18)" fg:x="34198" fg:w="24"/><text x="33.8331%" y="1231.50"></text></g><g><title>core::ops::function::Fn::call (24 samples, 0.02%)</title><rect x="33.5831%" y="1205" width="0.0236%" height="15" fill="rgb(215,121,11)" fg:x="34198" fg:w="24"/><text x="33.8331%" y="1215.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (24 samples, 0.02%)</title><rect x="33.5831%" y="1189" width="0.0236%" height="15" fill="rgb(245,147,10)" fg:x="34198" fg:w="24"/><text x="33.8331%" y="1199.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (24 samples, 0.02%)</title><rect x="33.5831%" y="1173" width="0.0236%" height="15" fill="rgb(238,153,13)" fg:x="34198" fg:w="24"/><text x="33.8331%" y="1183.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (24 samples, 0.02%)</title><rect x="33.5831%" y="1157" width="0.0236%" height="15" fill="rgb(233,108,0)" fg:x="34198" fg:w="24"/><text x="33.8331%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="33.5949%" y="1141" width="0.0118%" height="15" fill="rgb(212,157,17)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="1151.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (12 samples, 0.01%)</title><rect x="33.5949%" y="1125" width="0.0118%" height="15" fill="rgb(225,213,38)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="1135.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (12 samples, 0.01%)</title><rect x="33.5949%" y="1109" width="0.0118%" height="15" fill="rgb(248,16,11)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="1119.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (12 samples, 0.01%)</title><rect x="33.5949%" y="1093" width="0.0118%" height="15" fill="rgb(241,33,4)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="1103.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (12 samples, 0.01%)</title><rect x="33.5949%" y="1077" width="0.0118%" height="15" fill="rgb(222,26,43)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="1087.50"></text></g><g><title>bevy_glsl_to_spirv::compile (12 samples, 0.01%)</title><rect x="33.5949%" y="1061" width="0.0118%" height="15" fill="rgb(243,29,36)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="1071.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (12 samples, 0.01%)</title><rect x="33.5949%" y="1045" width="0.0118%" height="15" fill="rgb(241,9,27)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="1055.50"></text></g><g><title>glslang_shader_preprocess (12 samples, 0.01%)</title><rect x="33.5949%" y="1029" width="0.0118%" height="15" fill="rgb(205,117,26)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="1039.50"></text></g><g><title>glslang::TShader::preprocess (12 samples, 0.01%)</title><rect x="33.5949%" y="1013" width="0.0118%" height="15" fill="rgb(209,80,39)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="1023.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (12 samples, 0.01%)</title><rect x="33.5949%" y="997" width="0.0118%" height="15" fill="rgb(239,155,6)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="1007.50"></text></g><g><title>glslang::TBuiltIns::relateTabledBuiltins (12 samples, 0.01%)</title><rect x="33.5949%" y="981" width="0.0118%" height="15" fill="rgb(212,104,12)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="991.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (12 samples, 0.01%)</title><rect x="33.5949%" y="965" width="0.0118%" height="15" fill="rgb(234,204,3)" fg:x="34210" fg:w="12"/><text x="33.8449%" y="975.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (15 samples, 0.01%)</title><rect x="33.6067%" y="1173" width="0.0147%" height="15" fill="rgb(251,218,7)" fg:x="34222" fg:w="15"/><text x="33.8567%" y="1183.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (15 samples, 0.01%)</title><rect x="33.6067%" y="1157" width="0.0147%" height="15" fill="rgb(221,81,32)" fg:x="34222" fg:w="15"/><text x="33.8567%" y="1167.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (15 samples, 0.01%)</title><rect x="33.6067%" y="1141" width="0.0147%" height="15" fill="rgb(214,152,26)" fg:x="34222" fg:w="15"/><text x="33.8567%" y="1151.50"></text></g><g><title>bevy_glsl_to_spirv::compile (15 samples, 0.01%)</title><rect x="33.6067%" y="1125" width="0.0147%" height="15" fill="rgb(223,22,3)" fg:x="34222" fg:w="15"/><text x="33.8567%" y="1135.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (15 samples, 0.01%)</title><rect x="33.6067%" y="1109" width="0.0147%" height="15" fill="rgb(207,174,7)" fg:x="34222" fg:w="15"/><text x="33.8567%" y="1119.50"></text></g><g><title>glslang_shader_preprocess (15 samples, 0.01%)</title><rect x="33.6067%" y="1093" width="0.0147%" height="15" fill="rgb(224,19,52)" fg:x="34222" fg:w="15"/><text x="33.8567%" y="1103.50"></text></g><g><title>glslang::TShader::preprocess (15 samples, 0.01%)</title><rect x="33.6067%" y="1077" width="0.0147%" height="15" fill="rgb(228,24,14)" fg:x="34222" fg:w="15"/><text x="33.8567%" y="1087.50"></text></g><g><title>glslang::TSymbolTable::copyTable (15 samples, 0.01%)</title><rect x="33.6067%" y="1061" width="0.0147%" height="15" fill="rgb(230,153,43)" fg:x="34222" fg:w="15"/><text x="33.8567%" y="1071.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (15 samples, 0.01%)</title><rect x="33.6067%" y="1045" width="0.0147%" height="15" fill="rgb(231,106,12)" fg:x="34222" fg:w="15"/><text x="33.8567%" y="1055.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (27 samples, 0.03%)</title><rect x="33.6067%" y="1301" width="0.0265%" height="15" fill="rgb(215,92,2)" fg:x="34222" fg:w="27"/><text x="33.8567%" y="1311.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (27 samples, 0.03%)</title><rect x="33.6067%" y="1285" width="0.0265%" height="15" fill="rgb(249,143,25)" fg:x="34222" fg:w="27"/><text x="33.8567%" y="1295.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (27 samples, 0.03%)</title><rect x="33.6067%" y="1269" width="0.0265%" height="15" fill="rgb(252,7,35)" fg:x="34222" fg:w="27"/><text x="33.8567%" y="1279.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (27 samples, 0.03%)</title><rect x="33.6067%" y="1253" width="0.0265%" height="15" fill="rgb(216,69,40)" fg:x="34222" fg:w="27"/><text x="33.8567%" y="1263.50"></text></g><g><title>core::ops::function::Fn::call (27 samples, 0.03%)</title><rect x="33.6067%" y="1237" width="0.0265%" height="15" fill="rgb(240,36,33)" fg:x="34222" fg:w="27"/><text x="33.8567%" y="1247.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (27 samples, 0.03%)</title><rect x="33.6067%" y="1221" width="0.0265%" height="15" fill="rgb(231,128,14)" fg:x="34222" fg:w="27"/><text x="33.8567%" y="1231.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (27 samples, 0.03%)</title><rect x="33.6067%" y="1205" width="0.0265%" height="15" fill="rgb(245,143,14)" fg:x="34222" fg:w="27"/><text x="33.8567%" y="1215.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (27 samples, 0.03%)</title><rect x="33.6067%" y="1189" width="0.0265%" height="15" fill="rgb(222,130,28)" fg:x="34222" fg:w="27"/><text x="33.8567%" y="1199.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="33.6214%" y="1173" width="0.0118%" height="15" fill="rgb(212,10,48)" fg:x="34237" fg:w="12"/><text x="33.8714%" y="1183.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (12 samples, 0.01%)</title><rect x="33.6214%" y="1157" width="0.0118%" height="15" fill="rgb(254,118,45)" fg:x="34237" fg:w="12"/><text x="33.8714%" y="1167.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (12 samples, 0.01%)</title><rect x="33.6214%" y="1141" width="0.0118%" height="15" fill="rgb(228,6,45)" fg:x="34237" fg:w="12"/><text x="33.8714%" y="1151.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (12 samples, 0.01%)</title><rect x="33.6214%" y="1125" width="0.0118%" height="15" fill="rgb(241,18,35)" fg:x="34237" fg:w="12"/><text x="33.8714%" y="1135.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (12 samples, 0.01%)</title><rect x="33.6214%" y="1109" width="0.0118%" height="15" fill="rgb(227,214,53)" fg:x="34237" fg:w="12"/><text x="33.8714%" y="1119.50"></text></g><g><title>bevy_glsl_to_spirv::compile (12 samples, 0.01%)</title><rect x="33.6214%" y="1093" width="0.0118%" height="15" fill="rgb(224,107,51)" fg:x="34237" fg:w="12"/><text x="33.8714%" y="1103.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (12 samples, 0.01%)</title><rect x="33.6214%" y="1077" width="0.0118%" height="15" fill="rgb(248,60,28)" fg:x="34237" fg:w="12"/><text x="33.8714%" y="1087.50"></text></g><g><title>glslang_shader_preprocess (12 samples, 0.01%)</title><rect x="33.6214%" y="1061" width="0.0118%" height="15" fill="rgb(249,101,23)" fg:x="34237" fg:w="12"/><text x="33.8714%" y="1071.50"></text></g><g><title>glslang::TShader::preprocess (12 samples, 0.01%)</title><rect x="33.6214%" y="1045" width="0.0118%" height="15" fill="rgb(228,51,19)" fg:x="34237" fg:w="12"/><text x="33.8714%" y="1055.50"></text></g><g><title>glslang::TSymbolTable::copyTable (12 samples, 0.01%)</title><rect x="33.6214%" y="1029" width="0.0118%" height="15" fill="rgb(213,20,6)" fg:x="34237" fg:w="12"/><text x="33.8714%" y="1039.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (12 samples, 0.01%)</title><rect x="33.6214%" y="1013" width="0.0118%" height="15" fill="rgb(212,124,10)" fg:x="34237" fg:w="12"/><text x="33.8714%" y="1023.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (69 samples, 0.07%)</title><rect x="33.5713%" y="1317" width="0.0678%" height="15" fill="rgb(248,3,40)" fg:x="34186" fg:w="69"/><text x="33.8213%" y="1327.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (17 samples, 0.02%)</title><rect x="33.6705%" y="1317" width="0.0167%" height="15" fill="rgb(223,178,23)" fg:x="34287" fg:w="17"/><text x="33.9205%" y="1327.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (25 samples, 0.02%)</title><rect x="33.7451%" y="1269" width="0.0246%" height="15" fill="rgb(240,132,45)" fg:x="34363" fg:w="25"/><text x="33.9951%" y="1279.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (25 samples, 0.02%)</title><rect x="33.7451%" y="1253" width="0.0246%" height="15" fill="rgb(245,164,36)" fg:x="34363" fg:w="25"/><text x="33.9951%" y="1263.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (25 samples, 0.02%)</title><rect x="33.7451%" y="1237" width="0.0246%" height="15" fill="rgb(231,188,53)" fg:x="34363" fg:w="25"/><text x="33.9951%" y="1247.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (25 samples, 0.02%)</title><rect x="33.7451%" y="1221" width="0.0246%" height="15" fill="rgb(237,198,39)" fg:x="34363" fg:w="25"/><text x="33.9951%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (25 samples, 0.02%)</title><rect x="33.7451%" y="1205" width="0.0246%" height="15" fill="rgb(223,120,35)" fg:x="34363" fg:w="25"/><text x="33.9951%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (25 samples, 0.02%)</title><rect x="33.7451%" y="1189" width="0.0246%" height="15" fill="rgb(253,107,49)" fg:x="34363" fg:w="25"/><text x="33.9951%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.02%)</title><rect x="33.7530%" y="1173" width="0.0167%" height="15" fill="rgb(216,44,31)" fg:x="34371" fg:w="17"/><text x="34.0030%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.01%)</title><rect x="33.7559%" y="1157" width="0.0137%" height="15" fill="rgb(253,87,21)" fg:x="34374" fg:w="14"/><text x="34.0059%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.01%)</title><rect x="33.7559%" y="1141" width="0.0137%" height="15" fill="rgb(226,18,2)" fg:x="34374" fg:w="14"/><text x="34.0059%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.01%)</title><rect x="33.7569%" y="1125" width="0.0128%" height="15" fill="rgb(216,8,46)" fg:x="34375" fg:w="13"/><text x="34.0069%" y="1135.50"></text></g><g><title>wgpu_core::conv::map_texture_format (12 samples, 0.01%)</title><rect x="33.8276%" y="1253" width="0.0118%" height="15" fill="rgb(226,140,39)" fg:x="34447" fg:w="12"/><text x="34.0776%" y="1263.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (123 samples, 0.12%)</title><rect x="33.7432%" y="1317" width="0.1208%" height="15" fill="rgb(221,194,54)" fg:x="34361" fg:w="123"/><text x="33.9932%" y="1327.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (121 samples, 0.12%)</title><rect x="33.7451%" y="1301" width="0.1188%" height="15" fill="rgb(213,92,11)" fg:x="34363" fg:w="121"/><text x="33.9951%" y="1311.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (121 samples, 0.12%)</title><rect x="33.7451%" y="1285" width="0.1188%" height="15" fill="rgb(229,162,46)" fg:x="34363" fg:w="121"/><text x="33.9951%" y="1295.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start (96 samples, 0.09%)</title><rect x="33.7697%" y="1269" width="0.0943%" height="15" fill="rgb(214,111,36)" fg:x="34388" fg:w="96"/><text x="34.0197%" y="1279.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (16 samples, 0.02%)</title><rect x="33.8482%" y="1253" width="0.0157%" height="15" fill="rgb(207,6,21)" fg:x="34468" fg:w="16"/><text x="34.0982%" y="1263.50"></text></g><g><title>[engine] (13 samples, 0.01%)</title><rect x="33.8836%" y="1317" width="0.0128%" height="15" fill="rgb(213,127,38)" fg:x="34504" fg:w="13"/><text x="34.1336%" y="1327.50"></text></g><g><title>[libX11.so.6.4.0] (26 samples, 0.03%)</title><rect x="33.9297%" y="1285" width="0.0255%" height="15" fill="rgb(238,118,32)" fg:x="34551" fg:w="26"/><text x="34.1797%" y="1295.50"></text></g><g><title>fgetc (26 samples, 0.03%)</title><rect x="33.9297%" y="1269" width="0.0255%" height="15" fill="rgb(240,139,39)" fg:x="34551" fg:w="26"/><text x="34.1797%" y="1279.50"></text></g><g><title>[libX11.so.6.4.0] (33 samples, 0.03%)</title><rect x="33.9288%" y="1301" width="0.0324%" height="15" fill="rgb(235,10,37)" fg:x="34550" fg:w="33"/><text x="34.1788%" y="1311.50"></text></g><g><title>[libX11.so.6.4.0] (62 samples, 0.06%)</title><rect x="33.9032%" y="1317" width="0.0609%" height="15" fill="rgb(249,171,38)" fg:x="34524" fg:w="62"/><text x="34.1532%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (349 samples, 0.34%)</title><rect x="33.9710%" y="1317" width="0.3427%" height="15" fill="rgb(242,144,32)" fg:x="34593" fg:w="349"/><text x="34.2210%" y="1327.50"></text></g><g><title>[libxcb.so.1.1.0] (11 samples, 0.01%)</title><rect x="34.3186%" y="1317" width="0.0108%" height="15" fill="rgb(217,117,21)" fg:x="34947" fg:w="11"/><text x="34.5686%" y="1327.50"></text></g><g><title>__GI___libc_free (102 samples, 0.10%)</title><rect x="34.3402%" y="1317" width="0.1002%" height="15" fill="rgb(249,87,1)" fg:x="34969" fg:w="102"/><text x="34.5902%" y="1327.50"></text></g><g><title>__GI___libc_malloc (66 samples, 0.06%)</title><rect x="34.4404%" y="1317" width="0.0648%" height="15" fill="rgb(248,196,48)" fg:x="35071" fg:w="66"/><text x="34.6904%" y="1327.50"></text></g><g><title>__GI___libc_realloc (35 samples, 0.03%)</title><rect x="34.5052%" y="1317" width="0.0344%" height="15" fill="rgb(251,206,33)" fg:x="35137" fg:w="35"/><text x="34.7552%" y="1327.50"></text></g><g><title>__memmove_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="34.5553%" y="1317" width="0.0137%" height="15" fill="rgb(232,141,28)" fg:x="35188" fg:w="14"/><text x="34.8053%" y="1327.50"></text></g><g><title>_int_free (163 samples, 0.16%)</title><rect x="34.5798%" y="1317" width="0.1601%" height="15" fill="rgb(209,167,14)" fg:x="35213" fg:w="163"/><text x="34.8298%" y="1327.50"></text></g><g><title>_int_malloc (93 samples, 0.09%)</title><rect x="34.7399%" y="1317" width="0.0913%" height="15" fill="rgb(225,11,50)" fg:x="35376" fg:w="93"/><text x="34.9899%" y="1327.50"></text></g><g><title>_int_realloc (126 samples, 0.12%)</title><rect x="34.8312%" y="1317" width="0.1237%" height="15" fill="rgb(209,50,20)" fg:x="35469" fg:w="126"/><text x="35.0812%" y="1327.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (30 samples, 0.03%)</title><rect x="34.9589%" y="1317" width="0.0295%" height="15" fill="rgb(212,17,46)" fg:x="35599" fg:w="30"/><text x="35.2089%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (172 samples, 0.17%)</title><rect x="34.9903%" y="1317" width="0.1689%" height="15" fill="rgb(216,101,39)" fg:x="35631" fg:w="172"/><text x="35.2403%" y="1327.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (112 samples, 0.11%)</title><rect x="35.0492%" y="1301" width="0.1100%" height="15" fill="rgb(212,228,48)" fg:x="35691" fg:w="112"/><text x="35.2992%" y="1311.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (54 samples, 0.05%)</title><rect x="35.1062%" y="1285" width="0.0530%" height="15" fill="rgb(250,6,50)" fg:x="35749" fg:w="54"/><text x="35.3562%" y="1295.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (54 samples, 0.05%)</title><rect x="35.1062%" y="1269" width="0.0530%" height="15" fill="rgb(250,160,48)" fg:x="35749" fg:w="54"/><text x="35.3562%" y="1279.50"></text></g><g><title>alloc::raw_vec::finish_grow (305 samples, 0.30%)</title><rect x="35.1592%" y="1317" width="0.2995%" height="15" fill="rgb(244,216,33)" fg:x="35803" fg:w="305"/><text x="35.4092%" y="1327.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (18 samples, 0.02%)</title><rect x="35.4411%" y="1301" width="0.0177%" height="15" fill="rgb(207,157,5)" fg:x="36090" fg:w="18"/><text x="35.6911%" y="1311.50"></text></g><g><title>alloc::alloc::Global::grow_impl (18 samples, 0.02%)</title><rect x="35.4411%" y="1285" width="0.0177%" height="15" fill="rgb(228,199,8)" fg:x="36090" fg:w="18"/><text x="35.6911%" y="1295.50"></text></g><g><title>alloc::alloc::realloc (18 samples, 0.02%)</title><rect x="35.4411%" y="1269" width="0.0177%" height="15" fill="rgb(227,80,20)" fg:x="36090" fg:w="18"/><text x="35.6911%" y="1279.50"></text></g><g><title>__rdl_realloc (18 samples, 0.02%)</title><rect x="35.4411%" y="1253" width="0.0177%" height="15" fill="rgb(222,9,33)" fg:x="36090" fg:w="18"/><text x="35.6911%" y="1263.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (18 samples, 0.02%)</title><rect x="35.4411%" y="1237" width="0.0177%" height="15" fill="rgb(239,44,28)" fg:x="36090" fg:w="18"/><text x="35.6911%" y="1247.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (45 samples, 0.04%)</title><rect x="35.4823%" y="1317" width="0.0442%" height="15" fill="rgb(249,187,43)" fg:x="36132" fg:w="45"/><text x="35.7323%" y="1327.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (21 samples, 0.02%)</title><rect x="35.5373%" y="997" width="0.0206%" height="15" fill="rgb(216,141,28)" fg:x="36188" fg:w="21"/><text x="35.7873%" y="1007.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (24 samples, 0.02%)</title><rect x="35.5363%" y="1013" width="0.0236%" height="15" fill="rgb(230,154,53)" fg:x="36187" fg:w="24"/><text x="35.7863%" y="1023.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (25 samples, 0.02%)</title><rect x="35.5363%" y="1125" width="0.0246%" height="15" fill="rgb(227,82,4)" fg:x="36187" fg:w="25"/><text x="35.7863%" y="1135.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (25 samples, 0.02%)</title><rect x="35.5363%" y="1109" width="0.0246%" height="15" fill="rgb(220,107,16)" fg:x="36187" fg:w="25"/><text x="35.7863%" y="1119.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (25 samples, 0.02%)</title><rect x="35.5363%" y="1093" width="0.0246%" height="15" fill="rgb(207,187,2)" fg:x="36187" fg:w="25"/><text x="35.7863%" y="1103.50"></text></g><g><title>bevy_glsl_to_spirv::compile (25 samples, 0.02%)</title><rect x="35.5363%" y="1077" width="0.0246%" height="15" fill="rgb(210,162,52)" fg:x="36187" fg:w="25"/><text x="35.7863%" y="1087.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (25 samples, 0.02%)</title><rect x="35.5363%" y="1061" width="0.0246%" height="15" fill="rgb(217,216,49)" fg:x="36187" fg:w="25"/><text x="35.7863%" y="1071.50"></text></g><g><title>glslang_shader_preprocess (25 samples, 0.02%)</title><rect x="35.5363%" y="1045" width="0.0246%" height="15" fill="rgb(218,146,49)" fg:x="36187" fg:w="25"/><text x="35.7863%" y="1055.50"></text></g><g><title>glslang::TShader::preprocess (25 samples, 0.02%)</title><rect x="35.5363%" y="1029" width="0.0246%" height="15" fill="rgb(216,55,40)" fg:x="36187" fg:w="25"/><text x="35.7863%" y="1039.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (21 samples, 0.02%)</title><rect x="35.5609%" y="965" width="0.0206%" height="15" fill="rgb(208,196,21)" fg:x="36212" fg:w="21"/><text x="35.8109%" y="975.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (23 samples, 0.02%)</title><rect x="35.5609%" y="981" width="0.0226%" height="15" fill="rgb(242,117,42)" fg:x="36212" fg:w="23"/><text x="35.8109%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (49 samples, 0.05%)</title><rect x="35.5363%" y="1317" width="0.0481%" height="15" fill="rgb(210,11,23)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1327.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.05%)</title><rect x="35.5363%" y="1301" width="0.0481%" height="15" fill="rgb(217,110,2)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1311.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (49 samples, 0.05%)</title><rect x="35.5363%" y="1285" width="0.0481%" height="15" fill="rgb(229,77,54)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1295.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.05%)</title><rect x="35.5363%" y="1269" width="0.0481%" height="15" fill="rgb(218,53,16)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1279.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (49 samples, 0.05%)</title><rect x="35.5363%" y="1253" width="0.0481%" height="15" fill="rgb(215,38,13)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1263.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (49 samples, 0.05%)</title><rect x="35.5363%" y="1237" width="0.0481%" height="15" fill="rgb(235,42,18)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1247.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (49 samples, 0.05%)</title><rect x="35.5363%" y="1221" width="0.0481%" height="15" fill="rgb(219,66,54)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (49 samples, 0.05%)</title><rect x="35.5363%" y="1205" width="0.0481%" height="15" fill="rgb(222,205,4)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1215.50"></text></g><g><title>core::ops::function::Fn::call (49 samples, 0.05%)</title><rect x="35.5363%" y="1189" width="0.0481%" height="15" fill="rgb(227,213,46)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1199.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (49 samples, 0.05%)</title><rect x="35.5363%" y="1173" width="0.0481%" height="15" fill="rgb(250,145,42)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1183.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (49 samples, 0.05%)</title><rect x="35.5363%" y="1157" width="0.0481%" height="15" fill="rgb(219,15,2)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1167.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (49 samples, 0.05%)</title><rect x="35.5363%" y="1141" width="0.0481%" height="15" fill="rgb(231,181,52)" fg:x="36187" fg:w="49"/><text x="35.7863%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (24 samples, 0.02%)</title><rect x="35.5609%" y="1125" width="0.0236%" height="15" fill="rgb(235,1,42)" fg:x="36212" fg:w="24"/><text x="35.8109%" y="1135.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (24 samples, 0.02%)</title><rect x="35.5609%" y="1109" width="0.0236%" height="15" fill="rgb(249,88,27)" fg:x="36212" fg:w="24"/><text x="35.8109%" y="1119.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (24 samples, 0.02%)</title><rect x="35.5609%" y="1093" width="0.0236%" height="15" fill="rgb(235,145,16)" fg:x="36212" fg:w="24"/><text x="35.8109%" y="1103.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (24 samples, 0.02%)</title><rect x="35.5609%" y="1077" width="0.0236%" height="15" fill="rgb(237,114,19)" fg:x="36212" fg:w="24"/><text x="35.8109%" y="1087.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (24 samples, 0.02%)</title><rect x="35.5609%" y="1061" width="0.0236%" height="15" fill="rgb(238,51,50)" fg:x="36212" fg:w="24"/><text x="35.8109%" y="1071.50"></text></g><g><title>bevy_glsl_to_spirv::compile (24 samples, 0.02%)</title><rect x="35.5609%" y="1045" width="0.0236%" height="15" fill="rgb(205,194,25)" fg:x="36212" fg:w="24"/><text x="35.8109%" y="1055.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (24 samples, 0.02%)</title><rect x="35.5609%" y="1029" width="0.0236%" height="15" fill="rgb(215,203,17)" fg:x="36212" fg:w="24"/><text x="35.8109%" y="1039.50"></text></g><g><title>glslang_shader_preprocess (24 samples, 0.02%)</title><rect x="35.5609%" y="1013" width="0.0236%" height="15" fill="rgb(233,112,49)" fg:x="36212" fg:w="24"/><text x="35.8109%" y="1023.50"></text></g><g><title>glslang::TShader::preprocess (24 samples, 0.02%)</title><rect x="35.5609%" y="997" width="0.0236%" height="15" fill="rgb(241,130,26)" fg:x="36212" fg:w="24"/><text x="35.8109%" y="1007.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (26 samples, 0.03%)</title><rect x="35.5943%" y="1317" width="0.0255%" height="15" fill="rgb(252,223,19)" fg:x="36246" fg:w="26"/><text x="35.8443%" y="1327.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (11 samples, 0.01%)</title><rect x="35.6090%" y="1301" width="0.0108%" height="15" fill="rgb(211,95,25)" fg:x="36261" fg:w="11"/><text x="35.8590%" y="1311.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (14 samples, 0.01%)</title><rect x="35.6198%" y="1317" width="0.0137%" height="15" fill="rgb(251,182,27)" fg:x="36272" fg:w="14"/><text x="35.8698%" y="1327.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (31 samples, 0.03%)</title><rect x="35.6542%" y="1317" width="0.0304%" height="15" fill="rgb(238,24,4)" fg:x="36307" fg:w="31"/><text x="35.9042%" y="1327.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (18 samples, 0.02%)</title><rect x="35.7092%" y="1285" width="0.0177%" height="15" fill="rgb(224,220,25)" fg:x="36363" fg:w="18"/><text x="35.9592%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (11 samples, 0.01%)</title><rect x="35.7553%" y="1061" width="0.0108%" height="15" fill="rgb(239,133,26)" fg:x="36410" fg:w="11"/><text x="36.0053%" y="1071.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::end_render_pass (21 samples, 0.02%)</title><rect x="35.7484%" y="1141" width="0.0206%" height="15" fill="rgb(211,94,48)" fg:x="36403" fg:w="21"/><text x="35.9984%" y="1151.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_end_render_pass (20 samples, 0.02%)</title><rect x="35.7494%" y="1125" width="0.0196%" height="15" fill="rgb(239,87,6)" fg:x="36404" fg:w="20"/><text x="35.9994%" y="1135.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_end_render_pass (20 samples, 0.02%)</title><rect x="35.7494%" y="1109" width="0.0196%" height="15" fill="rgb(227,62,0)" fg:x="36404" fg:w="20"/><text x="35.9994%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (20 samples, 0.02%)</title><rect x="35.7494%" y="1093" width="0.0196%" height="15" fill="rgb(211,226,4)" fg:x="36404" fg:w="20"/><text x="35.9994%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.02%)</title><rect x="35.7514%" y="1077" width="0.0177%" height="15" fill="rgb(253,38,52)" fg:x="36406" fg:w="18"/><text x="36.0014%" y="1087.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (11 samples, 0.01%)</title><rect x="35.8290%" y="1109" width="0.0108%" height="15" fill="rgb(229,126,40)" fg:x="36485" fg:w="11"/><text x="36.0790%" y="1119.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (17 samples, 0.02%)</title><rect x="35.8260%" y="1141" width="0.0167%" height="15" fill="rgb(229,165,44)" fg:x="36482" fg:w="17"/><text x="36.0760%" y="1151.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (14 samples, 0.01%)</title><rect x="35.8290%" y="1125" width="0.0137%" height="15" fill="rgb(247,95,47)" fg:x="36485" fg:w="14"/><text x="36.0790%" y="1135.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (135 samples, 0.13%)</title><rect x="35.7268%" y="1253" width="0.1326%" height="15" fill="rgb(216,140,30)" fg:x="36381" fg:w="135"/><text x="35.9768%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (135 samples, 0.13%)</title><rect x="35.7268%" y="1237" width="0.1326%" height="15" fill="rgb(246,214,8)" fg:x="36381" fg:w="135"/><text x="35.9768%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (135 samples, 0.13%)</title><rect x="35.7268%" y="1221" width="0.1326%" height="15" fill="rgb(227,224,15)" fg:x="36381" fg:w="135"/><text x="35.9768%" y="1231.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (135 samples, 0.13%)</title><rect x="35.7268%" y="1205" width="0.1326%" height="15" fill="rgb(233,175,4)" fg:x="36381" fg:w="135"/><text x="35.9768%" y="1215.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (135 samples, 0.13%)</title><rect x="35.7268%" y="1189" width="0.1326%" height="15" fill="rgb(221,66,45)" fg:x="36381" fg:w="135"/><text x="35.9768%" y="1199.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (135 samples, 0.13%)</title><rect x="35.7268%" y="1173" width="0.1326%" height="15" fill="rgb(221,178,18)" fg:x="36381" fg:w="135"/><text x="35.9768%" y="1183.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (135 samples, 0.13%)</title><rect x="35.7268%" y="1157" width="0.1326%" height="15" fill="rgb(213,81,29)" fg:x="36381" fg:w="135"/><text x="35.9768%" y="1167.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (17 samples, 0.02%)</title><rect x="35.8427%" y="1141" width="0.0167%" height="15" fill="rgb(220,89,49)" fg:x="36499" fg:w="17"/><text x="36.0927%" y="1151.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (17 samples, 0.02%)</title><rect x="35.8427%" y="1125" width="0.0167%" height="15" fill="rgb(227,60,33)" fg:x="36499" fg:w="17"/><text x="36.0927%" y="1135.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (136 samples, 0.13%)</title><rect x="35.7268%" y="1269" width="0.1336%" height="15" fill="rgb(205,113,12)" fg:x="36381" fg:w="136"/><text x="35.9768%" y="1279.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::bind_graphics_descriptor_sets (15 samples, 0.01%)</title><rect x="35.8604%" y="1141" width="0.0147%" height="15" fill="rgb(211,32,1)" fg:x="36517" fg:w="15"/><text x="36.1104%" y="1151.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets (15 samples, 0.01%)</title><rect x="35.8604%" y="1125" width="0.0147%" height="15" fill="rgb(246,2,12)" fg:x="36517" fg:w="15"/><text x="36.1104%" y="1135.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (15 samples, 0.01%)</title><rect x="35.8604%" y="1109" width="0.0147%" height="15" fill="rgb(243,37,27)" fg:x="36517" fg:w="15"/><text x="36.1104%" y="1119.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (25 samples, 0.02%)</title><rect x="35.9095%" y="1141" width="0.0246%" height="15" fill="rgb(248,211,31)" fg:x="36567" fg:w="25"/><text x="36.1595%" y="1151.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (25 samples, 0.02%)</title><rect x="35.9095%" y="1125" width="0.0246%" height="15" fill="rgb(242,146,47)" fg:x="36567" fg:w="25"/><text x="36.1595%" y="1135.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (25 samples, 0.02%)</title><rect x="35.9095%" y="1109" width="0.0246%" height="15" fill="rgb(206,70,20)" fg:x="36567" fg:w="25"/><text x="36.1595%" y="1119.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (25 samples, 0.02%)</title><rect x="35.9095%" y="1093" width="0.0246%" height="15" fill="rgb(215,10,51)" fg:x="36567" fg:w="25"/><text x="36.1595%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (25 samples, 0.02%)</title><rect x="35.9095%" y="1077" width="0.0246%" height="15" fill="rgb(243,178,53)" fg:x="36567" fg:w="25"/><text x="36.1595%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.02%)</title><rect x="35.9164%" y="1061" width="0.0177%" height="15" fill="rgb(233,221,20)" fg:x="36574" fg:w="18"/><text x="36.1664%" y="1071.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (13 samples, 0.01%)</title><rect x="35.9350%" y="1125" width="0.0128%" height="15" fill="rgb(218,95,35)" fg:x="36593" fg:w="13"/><text x="36.1850%" y="1135.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (25 samples, 0.02%)</title><rect x="35.9340%" y="1141" width="0.0246%" height="15" fill="rgb(229,13,5)" fg:x="36592" fg:w="25"/><text x="36.1840%" y="1151.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (11 samples, 0.01%)</title><rect x="35.9478%" y="1125" width="0.0108%" height="15" fill="rgb(252,164,30)" fg:x="36606" fg:w="11"/><text x="36.1978%" y="1135.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="35.9920%" y="1061" width="0.0206%" height="15" fill="rgb(232,68,36)" fg:x="36651" fg:w="21"/><text x="36.2420%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="35.9979%" y="1045" width="0.0147%" height="15" fill="rgb(219,59,54)" fg:x="36657" fg:w="15"/><text x="36.2479%" y="1055.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (25 samples, 0.02%)</title><rect x="35.9890%" y="1093" width="0.0246%" height="15" fill="rgb(250,92,33)" fg:x="36648" fg:w="25"/><text x="36.2390%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (25 samples, 0.02%)</title><rect x="35.9890%" y="1077" width="0.0246%" height="15" fill="rgb(229,162,54)" fg:x="36648" fg:w="25"/><text x="36.2390%" y="1087.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (28 samples, 0.03%)</title><rect x="35.9890%" y="1109" width="0.0275%" height="15" fill="rgb(244,114,52)" fg:x="36648" fg:w="28"/><text x="36.2390%" y="1119.50"></text></g><g><title>__memcmp_avx2_movbe (24 samples, 0.02%)</title><rect x="36.0175%" y="1061" width="0.0236%" height="15" fill="rgb(212,211,43)" fg:x="36677" fg:w="24"/><text x="36.2675%" y="1071.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (26 samples, 0.03%)</title><rect x="36.0165%" y="1077" width="0.0255%" height="15" fill="rgb(226,147,8)" fg:x="36676" fg:w="26"/><text x="36.2665%" y="1087.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (30 samples, 0.03%)</title><rect x="36.0165%" y="1109" width="0.0295%" height="15" fill="rgb(226,23,13)" fg:x="36676" fg:w="30"/><text x="36.2665%" y="1119.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (30 samples, 0.03%)</title><rect x="36.0165%" y="1093" width="0.0295%" height="15" fill="rgb(240,63,4)" fg:x="36676" fg:w="30"/><text x="36.2665%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::command::bind::BindGroupPair&gt;&gt; (72 samples, 0.07%)</title><rect x="36.0460%" y="1109" width="0.0707%" height="15" fill="rgb(221,1,32)" fg:x="36706" fg:w="72"/><text x="36.2960%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::BindGroupPair&gt; (72 samples, 0.07%)</title><rect x="36.0460%" y="1093" width="0.0707%" height="15" fill="rgb(242,117,10)" fg:x="36706" fg:w="72"/><text x="36.2960%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::binding_model::BindGroup&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt; (72 samples, 0.07%)</title><rect x="36.0460%" y="1077" width="0.0707%" height="15" fill="rgb(249,172,44)" fg:x="36706" fg:w="72"/><text x="36.2960%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (72 samples, 0.07%)</title><rect x="36.0460%" y="1061" width="0.0707%" height="15" fill="rgb(244,46,45)" fg:x="36706" fg:w="72"/><text x="36.2960%" y="1071.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (72 samples, 0.07%)</title><rect x="36.0460%" y="1045" width="0.0707%" height="15" fill="rgb(206,43,17)" fg:x="36706" fg:w="72"/><text x="36.2960%" y="1055.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (72 samples, 0.07%)</title><rect x="36.0460%" y="1029" width="0.0707%" height="15" fill="rgb(239,218,39)" fg:x="36706" fg:w="72"/><text x="36.2960%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (71 samples, 0.07%)</title><rect x="36.0470%" y="1013" width="0.0697%" height="15" fill="rgb(208,169,54)" fg:x="36707" fg:w="71"/><text x="36.2970%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_sub (71 samples, 0.07%)</title><rect x="36.0470%" y="997" width="0.0697%" height="15" fill="rgb(247,25,42)" fg:x="36707" fg:w="71"/><text x="36.2970%" y="1007.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (236 samples, 0.23%)</title><rect x="35.9596%" y="1141" width="0.2318%" height="15" fill="rgb(226,23,31)" fg:x="36618" fg:w="236"/><text x="36.2096%" y="1151.50"></text></g><g><title>wgpu_core::command::bind::BindGroupEntry::provide (236 samples, 0.23%)</title><rect x="35.9596%" y="1125" width="0.2318%" height="15" fill="rgb(247,16,28)" fg:x="36618" fg:w="236"/><text x="36.2096%" y="1135.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (76 samples, 0.07%)</title><rect x="36.1167%" y="1109" width="0.0746%" height="15" fill="rgb(231,147,38)" fg:x="36778" fg:w="76"/><text x="36.3667%" y="1119.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (76 samples, 0.07%)</title><rect x="36.1167%" y="1093" width="0.0746%" height="15" fill="rgb(253,81,48)" fg:x="36778" fg:w="76"/><text x="36.3667%" y="1103.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (76 samples, 0.07%)</title><rect x="36.1167%" y="1077" width="0.0746%" height="15" fill="rgb(249,222,43)" fg:x="36778" fg:w="76"/><text x="36.3667%" y="1087.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (73 samples, 0.07%)</title><rect x="36.1196%" y="1061" width="0.0717%" height="15" fill="rgb(221,3,27)" fg:x="36781" fg:w="73"/><text x="36.3696%" y="1071.50"></text></g><g><title>core::sync::atomic::atomic_add (73 samples, 0.07%)</title><rect x="36.1196%" y="1045" width="0.0717%" height="15" fill="rgb(228,180,5)" fg:x="36781" fg:w="73"/><text x="36.3696%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (76 samples, 0.07%)</title><rect x="36.2522%" y="1061" width="0.0746%" height="15" fill="rgb(227,131,42)" fg:x="36916" fg:w="76"/><text x="36.5022%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (77 samples, 0.08%)</title><rect x="36.2522%" y="1077" width="0.0756%" height="15" fill="rgb(212,3,39)" fg:x="36916" fg:w="77"/><text x="36.5022%" y="1087.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.09%)</title><rect x="36.2395%" y="1093" width="0.0903%" height="15" fill="rgb(226,45,5)" fg:x="36903" fg:w="92"/><text x="36.4895%" y="1103.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (94 samples, 0.09%)</title><rect x="36.2395%" y="1109" width="0.0923%" height="15" fill="rgb(215,167,45)" fg:x="36903" fg:w="94"/><text x="36.4895%" y="1119.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::zip (22 samples, 0.02%)</title><rect x="36.3318%" y="1109" width="0.0216%" height="15" fill="rgb(250,218,53)" fg:x="36997" fg:w="22"/><text x="36.5818%" y="1119.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.01%)</title><rect x="36.4093%" y="1013" width="0.0118%" height="15" fill="rgb(207,140,0)" fg:x="37076" fg:w="12"/><text x="36.6593%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.04%)</title><rect x="36.3897%" y="1045" width="0.0354%" height="15" fill="rgb(238,133,51)" fg:x="37056" fg:w="36"/><text x="36.6397%" y="1055.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="36.4044%" y="1029" width="0.0206%" height="15" fill="rgb(218,203,53)" fg:x="37071" fg:w="21"/><text x="36.6544%" y="1039.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (60 samples, 0.06%)</title><rect x="36.3750%" y="1061" width="0.0589%" height="15" fill="rgb(226,184,25)" fg:x="37041" fg:w="60"/><text x="36.6250%" y="1071.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (20 samples, 0.02%)</title><rect x="36.4476%" y="1013" width="0.0196%" height="15" fill="rgb(231,121,21)" fg:x="37115" fg:w="20"/><text x="36.6976%" y="1023.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (11 samples, 0.01%)</title><rect x="36.4565%" y="997" width="0.0108%" height="15" fill="rgb(251,14,34)" fg:x="37124" fg:w="11"/><text x="36.7065%" y="1007.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (11 samples, 0.01%)</title><rect x="36.4565%" y="981" width="0.0108%" height="15" fill="rgb(249,193,11)" fg:x="37124" fg:w="11"/><text x="36.7065%" y="991.50"></text></g><g><title>core::core_arch::simd::i8x16::new (11 samples, 0.01%)</title><rect x="36.4565%" y="965" width="0.0108%" height="15" fill="rgb(220,172,37)" fg:x="37124" fg:w="11"/><text x="36.7065%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (41 samples, 0.04%)</title><rect x="36.4339%" y="1061" width="0.0403%" height="15" fill="rgb(231,229,43)" fg:x="37101" fg:w="41"/><text x="36.6839%" y="1071.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (41 samples, 0.04%)</title><rect x="36.4339%" y="1045" width="0.0403%" height="15" fill="rgb(250,161,5)" fg:x="37101" fg:w="41"/><text x="36.6839%" y="1055.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (41 samples, 0.04%)</title><rect x="36.4339%" y="1029" width="0.0403%" height="15" fill="rgb(218,225,18)" fg:x="37101" fg:w="41"/><text x="36.6839%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (142 samples, 0.14%)</title><rect x="36.3573%" y="1109" width="0.1394%" height="15" fill="rgb(245,45,42)" fg:x="37023" fg:w="142"/><text x="36.6073%" y="1119.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (142 samples, 0.14%)</title><rect x="36.3573%" y="1093" width="0.1394%" height="15" fill="rgb(211,115,1)" fg:x="37023" fg:w="142"/><text x="36.6073%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (134 samples, 0.13%)</title><rect x="36.3652%" y="1077" width="0.1316%" height="15" fill="rgb(248,133,52)" fg:x="37031" fg:w="134"/><text x="36.6152%" y="1087.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (23 samples, 0.02%)</title><rect x="36.4742%" y="1061" width="0.0226%" height="15" fill="rgb(238,100,21)" fg:x="37142" fg:w="23"/><text x="36.7242%" y="1071.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq for u32&gt;::eq (23 samples, 0.02%)</title><rect x="36.4742%" y="1045" width="0.0226%" height="15" fill="rgb(247,144,11)" fg:x="37142" fg:w="23"/><text x="36.7242%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (31 samples, 0.03%)</title><rect x="36.4967%" y="1045" width="0.0304%" height="15" fill="rgb(206,164,16)" fg:x="37165" fg:w="31"/><text x="36.7467%" y="1055.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (31 samples, 0.03%)</title><rect x="36.4967%" y="1029" width="0.0304%" height="15" fill="rgb(222,34,3)" fg:x="37165" fg:w="31"/><text x="36.7467%" y="1039.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (29 samples, 0.03%)</title><rect x="36.5272%" y="1045" width="0.0285%" height="15" fill="rgb(248,82,4)" fg:x="37196" fg:w="29"/><text x="36.7772%" y="1055.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (29 samples, 0.03%)</title><rect x="36.5272%" y="1029" width="0.0285%" height="15" fill="rgb(228,81,46)" fg:x="37196" fg:w="29"/><text x="36.7772%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (67 samples, 0.07%)</title><rect x="36.4967%" y="1061" width="0.0658%" height="15" fill="rgb(227,67,47)" fg:x="37165" fg:w="67"/><text x="36.7467%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (85 samples, 0.08%)</title><rect x="36.4967%" y="1109" width="0.0835%" height="15" fill="rgb(215,93,53)" fg:x="37165" fg:w="85"/><text x="36.7467%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (85 samples, 0.08%)</title><rect x="36.4967%" y="1093" width="0.0835%" height="15" fill="rgb(248,194,39)" fg:x="37165" fg:w="85"/><text x="36.7467%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (85 samples, 0.08%)</title><rect x="36.4967%" y="1077" width="0.0835%" height="15" fill="rgb(215,5,19)" fg:x="37165" fg:w="85"/><text x="36.7467%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (14 samples, 0.01%)</title><rect x="36.5665%" y="1061" width="0.0137%" height="15" fill="rgb(226,215,51)" fg:x="37236" fg:w="14"/><text x="36.8165%" y="1071.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (760 samples, 0.75%)</title><rect x="35.8604%" y="1269" width="0.7463%" height="15" fill="rgb(225,56,26)" fg:x="36517" fg:w="760"/><text x="36.1104%" y="1279.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (760 samples, 0.75%)</title><rect x="35.8604%" y="1253" width="0.7463%" height="15" fill="rgb(222,75,29)" fg:x="36517" fg:w="760"/><text x="36.1104%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (760 samples, 0.75%)</title><rect x="35.8604%" y="1237" width="0.7463%" height="15" fill="rgb(236,139,6)" fg:x="36517" fg:w="760"/><text x="36.1104%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (760 samples, 0.75%)</title><rect x="35.8604%" y="1221" width="0.7463%" height="15" fill="rgb(223,137,36)" fg:x="36517" fg:w="760"/><text x="36.1104%" y="1231.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (760 samples, 0.75%)</title><rect x="35.8604%" y="1205" width="0.7463%" height="15" fill="rgb(226,99,2)" fg:x="36517" fg:w="760"/><text x="36.1104%" y="1215.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (760 samples, 0.75%)</title><rect x="35.8604%" y="1189" width="0.7463%" height="15" fill="rgb(206,133,23)" fg:x="36517" fg:w="760"/><text x="36.1104%" y="1199.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (760 samples, 0.75%)</title><rect x="35.8604%" y="1173" width="0.7463%" height="15" fill="rgb(243,173,15)" fg:x="36517" fg:w="760"/><text x="36.1104%" y="1183.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (760 samples, 0.75%)</title><rect x="35.8604%" y="1157" width="0.7463%" height="15" fill="rgb(228,69,28)" fg:x="36517" fg:w="760"/><text x="36.1104%" y="1167.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (412 samples, 0.40%)</title><rect x="36.2021%" y="1141" width="0.4046%" height="15" fill="rgb(212,51,22)" fg:x="36865" fg:w="412"/><text x="36.4521%" y="1151.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (412 samples, 0.40%)</title><rect x="36.2021%" y="1125" width="0.4046%" height="15" fill="rgb(227,113,0)" fg:x="36865" fg:w="412"/><text x="36.4521%" y="1135.50"></text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::merge (21 samples, 0.02%)</title><rect x="36.5861%" y="1109" width="0.0206%" height="15" fill="rgb(252,84,27)" fg:x="37256" fg:w="21"/><text x="36.8361%" y="1119.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (924 samples, 0.91%)</title><rect x="35.7003%" y="1317" width="0.9074%" height="15" fill="rgb(223,145,39)" fg:x="36354" fg:w="924"/><text x="35.9503%" y="1327.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (915 samples, 0.90%)</title><rect x="35.7092%" y="1301" width="0.8985%" height="15" fill="rgb(239,219,30)" fg:x="36363" fg:w="915"/><text x="35.9592%" y="1311.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (897 samples, 0.88%)</title><rect x="35.7268%" y="1285" width="0.8809%" height="15" fill="rgb(224,196,39)" fg:x="36381" fg:w="897"/><text x="35.9768%" y="1295.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (20 samples, 0.02%)</title><rect x="36.6146%" y="1317" width="0.0196%" height="15" fill="rgb(205,35,43)" fg:x="37285" fg:w="20"/><text x="36.8646%" y="1327.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (16 samples, 0.02%)</title><rect x="36.6676%" y="1317" width="0.0157%" height="15" fill="rgb(228,201,21)" fg:x="37339" fg:w="16"/><text x="36.9176%" y="1327.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (11 samples, 0.01%)</title><rect x="36.7079%" y="1317" width="0.0108%" height="15" fill="rgb(237,118,16)" fg:x="37380" fg:w="11"/><text x="36.9579%" y="1327.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (15 samples, 0.01%)</title><rect x="36.7285%" y="1317" width="0.0147%" height="15" fill="rgb(241,17,19)" fg:x="37401" fg:w="15"/><text x="36.9785%" y="1327.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::bind_graphics_descriptor_sets (26 samples, 0.03%)</title><rect x="36.7639%" y="1173" width="0.0255%" height="15" fill="rgb(214,10,25)" fg:x="37437" fg:w="26"/><text x="37.0139%" y="1183.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets (26 samples, 0.03%)</title><rect x="36.7639%" y="1157" width="0.0255%" height="15" fill="rgb(238,37,29)" fg:x="37437" fg:w="26"/><text x="37.0139%" y="1167.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (26 samples, 0.03%)</title><rect x="36.7639%" y="1141" width="0.0255%" height="15" fill="rgb(253,83,25)" fg:x="37437" fg:w="26"/><text x="37.0139%" y="1151.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets::{{closure}} (13 samples, 0.01%)</title><rect x="36.7766%" y="1125" width="0.0128%" height="15" fill="rgb(234,192,12)" fg:x="37450" fg:w="13"/><text x="37.0266%" y="1135.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (13 samples, 0.01%)</title><rect x="36.7766%" y="1109" width="0.0128%" height="15" fill="rgb(241,216,45)" fg:x="37450" fg:w="13"/><text x="37.0266%" y="1119.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (13 samples, 0.01%)</title><rect x="36.7766%" y="1093" width="0.0128%" height="15" fill="rgb(242,22,33)" fg:x="37450" fg:w="13"/><text x="37.0266%" y="1103.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (12 samples, 0.01%)</title><rect x="36.7776%" y="1077" width="0.0118%" height="15" fill="rgb(231,105,49)" fg:x="37451" fg:w="12"/><text x="37.0276%" y="1087.50"></text></g><g><title>inplace_it::fixed_array::indirect (12 samples, 0.01%)</title><rect x="36.7776%" y="1061" width="0.0118%" height="15" fill="rgb(218,204,15)" fg:x="37451" fg:w="12"/><text x="37.0276%" y="1071.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (12 samples, 0.01%)</title><rect x="36.7776%" y="1045" width="0.0118%" height="15" fill="rgb(235,138,41)" fg:x="37451" fg:w="12"/><text x="37.0276%" y="1055.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (12 samples, 0.01%)</title><rect x="36.7776%" y="1029" width="0.0118%" height="15" fill="rgb(246,0,9)" fg:x="37451" fg:w="12"/><text x="37.0276%" y="1039.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets::{{closure}}::{{closure}} (12 samples, 0.01%)</title><rect x="36.7776%" y="1013" width="0.0118%" height="15" fill="rgb(210,74,4)" fg:x="37451" fg:w="12"/><text x="37.0276%" y="1023.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_bind_descriptor_sets (12 samples, 0.01%)</title><rect x="36.7776%" y="997" width="0.0118%" height="15" fill="rgb(250,60,41)" fg:x="37451" fg:w="12"/><text x="37.0276%" y="1007.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_bind_descriptor_sets (12 samples, 0.01%)</title><rect x="36.7776%" y="981" width="0.0118%" height="15" fill="rgb(220,115,12)" fg:x="37451" fg:w="12"/><text x="37.0276%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="36.7776%" y="965" width="0.0118%" height="15" fill="rgb(237,100,13)" fg:x="37451" fg:w="12"/><text x="37.0276%" y="975.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (14 samples, 0.01%)</title><rect x="36.8002%" y="1157" width="0.0137%" height="15" fill="rgb(213,55,26)" fg:x="37474" fg:w="14"/><text x="37.0502%" y="1167.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (22 samples, 0.02%)</title><rect x="36.8002%" y="1173" width="0.0216%" height="15" fill="rgb(216,17,4)" fg:x="37474" fg:w="22"/><text x="37.0502%" y="1183.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (78 samples, 0.08%)</title><rect x="36.7639%" y="1301" width="0.0766%" height="15" fill="rgb(220,153,47)" fg:x="37437" fg:w="78"/><text x="37.0139%" y="1311.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (78 samples, 0.08%)</title><rect x="36.7639%" y="1285" width="0.0766%" height="15" fill="rgb(215,131,9)" fg:x="37437" fg:w="78"/><text x="37.0139%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (78 samples, 0.08%)</title><rect x="36.7639%" y="1269" width="0.0766%" height="15" fill="rgb(233,46,42)" fg:x="37437" fg:w="78"/><text x="37.0139%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (78 samples, 0.08%)</title><rect x="36.7639%" y="1253" width="0.0766%" height="15" fill="rgb(226,86,7)" fg:x="37437" fg:w="78"/><text x="37.0139%" y="1263.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (78 samples, 0.08%)</title><rect x="36.7639%" y="1237" width="0.0766%" height="15" fill="rgb(239,226,21)" fg:x="37437" fg:w="78"/><text x="37.0139%" y="1247.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (78 samples, 0.08%)</title><rect x="36.7639%" y="1221" width="0.0766%" height="15" fill="rgb(244,137,22)" fg:x="37437" fg:w="78"/><text x="37.0139%" y="1231.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (78 samples, 0.08%)</title><rect x="36.7639%" y="1205" width="0.0766%" height="15" fill="rgb(211,139,35)" fg:x="37437" fg:w="78"/><text x="37.0139%" y="1215.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (78 samples, 0.08%)</title><rect x="36.7639%" y="1189" width="0.0766%" height="15" fill="rgb(214,62,50)" fg:x="37437" fg:w="78"/><text x="37.0139%" y="1199.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::bind_graphics_descriptor_sets (44 samples, 0.04%)</title><rect x="36.8405%" y="1173" width="0.0432%" height="15" fill="rgb(212,113,44)" fg:x="37515" fg:w="44"/><text x="37.0905%" y="1183.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets (44 samples, 0.04%)</title><rect x="36.8405%" y="1157" width="0.0432%" height="15" fill="rgb(226,150,43)" fg:x="37515" fg:w="44"/><text x="37.0905%" y="1167.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (44 samples, 0.04%)</title><rect x="36.8405%" y="1141" width="0.0432%" height="15" fill="rgb(250,71,37)" fg:x="37515" fg:w="44"/><text x="37.0905%" y="1151.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets::{{closure}} (36 samples, 0.04%)</title><rect x="36.8483%" y="1125" width="0.0354%" height="15" fill="rgb(219,76,19)" fg:x="37523" fg:w="36"/><text x="37.0983%" y="1135.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (36 samples, 0.04%)</title><rect x="36.8483%" y="1109" width="0.0354%" height="15" fill="rgb(250,39,11)" fg:x="37523" fg:w="36"/><text x="37.0983%" y="1119.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (36 samples, 0.04%)</title><rect x="36.8483%" y="1093" width="0.0354%" height="15" fill="rgb(230,64,31)" fg:x="37523" fg:w="36"/><text x="37.0983%" y="1103.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (36 samples, 0.04%)</title><rect x="36.8483%" y="1077" width="0.0354%" height="15" fill="rgb(208,222,23)" fg:x="37523" fg:w="36"/><text x="37.0983%" y="1087.50"></text></g><g><title>inplace_it::fixed_array::indirect (36 samples, 0.04%)</title><rect x="36.8483%" y="1061" width="0.0354%" height="15" fill="rgb(227,125,18)" fg:x="37523" fg:w="36"/><text x="37.0983%" y="1071.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (36 samples, 0.04%)</title><rect x="36.8483%" y="1045" width="0.0354%" height="15" fill="rgb(234,210,9)" fg:x="37523" fg:w="36"/><text x="37.0983%" y="1055.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (36 samples, 0.04%)</title><rect x="36.8483%" y="1029" width="0.0354%" height="15" fill="rgb(217,127,24)" fg:x="37523" fg:w="36"/><text x="37.0983%" y="1039.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets::{{closure}}::{{closure}} (35 samples, 0.03%)</title><rect x="36.8493%" y="1013" width="0.0344%" height="15" fill="rgb(239,141,48)" fg:x="37524" fg:w="35"/><text x="37.0993%" y="1023.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_bind_descriptor_sets (35 samples, 0.03%)</title><rect x="36.8493%" y="997" width="0.0344%" height="15" fill="rgb(227,109,8)" fg:x="37524" fg:w="35"/><text x="37.0993%" y="1007.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_bind_descriptor_sets (35 samples, 0.03%)</title><rect x="36.8493%" y="981" width="0.0344%" height="15" fill="rgb(235,184,23)" fg:x="37524" fg:w="35"/><text x="37.0993%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (34 samples, 0.03%)</title><rect x="36.8503%" y="965" width="0.0334%" height="15" fill="rgb(227,226,48)" fg:x="37525" fg:w="34"/><text x="37.1003%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (21 samples, 0.02%)</title><rect x="36.8630%" y="949" width="0.0206%" height="15" fill="rgb(206,150,11)" fg:x="37538" fg:w="21"/><text x="37.1130%" y="959.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (11 samples, 0.01%)</title><rect x="36.8945%" y="1157" width="0.0108%" height="15" fill="rgb(254,2,33)" fg:x="37570" fg:w="11"/><text x="37.1445%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (11 samples, 0.01%)</title><rect x="36.8945%" y="1141" width="0.0108%" height="15" fill="rgb(243,160,20)" fg:x="37570" fg:w="11"/><text x="37.1445%" y="1151.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (11 samples, 0.01%)</title><rect x="36.8945%" y="1125" width="0.0108%" height="15" fill="rgb(218,208,30)" fg:x="37570" fg:w="11"/><text x="37.1445%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (11 samples, 0.01%)</title><rect x="36.8945%" y="1109" width="0.0108%" height="15" fill="rgb(224,120,49)" fg:x="37570" fg:w="11"/><text x="37.1445%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="36.8945%" y="1093" width="0.0108%" height="15" fill="rgb(246,12,2)" fg:x="37570" fg:w="11"/><text x="37.1445%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (11 samples, 0.01%)</title><rect x="36.8945%" y="1077" width="0.0108%" height="15" fill="rgb(236,117,3)" fg:x="37570" fg:w="11"/><text x="37.1445%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (11 samples, 0.01%)</title><rect x="36.8945%" y="1061" width="0.0108%" height="15" fill="rgb(216,128,52)" fg:x="37570" fg:w="11"/><text x="37.1445%" y="1071.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (26 samples, 0.03%)</title><rect x="36.8945%" y="1173" width="0.0255%" height="15" fill="rgb(246,145,19)" fg:x="37570" fg:w="26"/><text x="37.1445%" y="1183.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (15 samples, 0.01%)</title><rect x="36.9053%" y="1157" width="0.0147%" height="15" fill="rgb(222,11,46)" fg:x="37581" fg:w="15"/><text x="37.1553%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (15 samples, 0.01%)</title><rect x="36.9053%" y="1141" width="0.0147%" height="15" fill="rgb(245,82,36)" fg:x="37581" fg:w="15"/><text x="37.1553%" y="1151.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (15 samples, 0.01%)</title><rect x="36.9053%" y="1125" width="0.0147%" height="15" fill="rgb(250,73,51)" fg:x="37581" fg:w="15"/><text x="37.1553%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (15 samples, 0.01%)</title><rect x="36.9053%" y="1109" width="0.0147%" height="15" fill="rgb(221,189,23)" fg:x="37581" fg:w="15"/><text x="37.1553%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (15 samples, 0.01%)</title><rect x="36.9053%" y="1093" width="0.0147%" height="15" fill="rgb(210,33,7)" fg:x="37581" fg:w="15"/><text x="37.1553%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (15 samples, 0.01%)</title><rect x="36.9053%" y="1077" width="0.0147%" height="15" fill="rgb(210,107,22)" fg:x="37581" fg:w="15"/><text x="37.1553%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (15 samples, 0.01%)</title><rect x="36.9053%" y="1061" width="0.0147%" height="15" fill="rgb(222,116,37)" fg:x="37581" fg:w="15"/><text x="37.1553%" y="1071.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::finish (35 samples, 0.03%)</title><rect x="36.9210%" y="1173" width="0.0344%" height="15" fill="rgb(254,17,48)" fg:x="37597" fg:w="35"/><text x="37.1710%" y="1183.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (210 samples, 0.21%)</title><rect x="36.7639%" y="1317" width="0.2062%" height="15" fill="rgb(224,36,32)" fg:x="37437" fg:w="210"/><text x="37.0139%" y="1327.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (132 samples, 0.13%)</title><rect x="36.8405%" y="1301" width="0.1296%" height="15" fill="rgb(232,90,46)" fg:x="37515" fg:w="132"/><text x="37.0905%" y="1311.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (132 samples, 0.13%)</title><rect x="36.8405%" y="1285" width="0.1296%" height="15" fill="rgb(241,66,40)" fg:x="37515" fg:w="132"/><text x="37.0905%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (132 samples, 0.13%)</title><rect x="36.8405%" y="1269" width="0.1296%" height="15" fill="rgb(249,184,29)" fg:x="37515" fg:w="132"/><text x="37.0905%" y="1279.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (132 samples, 0.13%)</title><rect x="36.8405%" y="1253" width="0.1296%" height="15" fill="rgb(231,181,1)" fg:x="37515" fg:w="132"/><text x="37.0905%" y="1263.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (132 samples, 0.13%)</title><rect x="36.8405%" y="1237" width="0.1296%" height="15" fill="rgb(224,94,2)" fg:x="37515" fg:w="132"/><text x="37.0905%" y="1247.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (132 samples, 0.13%)</title><rect x="36.8405%" y="1221" width="0.1296%" height="15" fill="rgb(229,170,15)" fg:x="37515" fg:w="132"/><text x="37.0905%" y="1231.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (132 samples, 0.13%)</title><rect x="36.8405%" y="1205" width="0.1296%" height="15" fill="rgb(240,127,35)" fg:x="37515" fg:w="132"/><text x="37.0905%" y="1215.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (132 samples, 0.13%)</title><rect x="36.8405%" y="1189" width="0.1296%" height="15" fill="rgb(248,196,34)" fg:x="37515" fg:w="132"/><text x="37.0905%" y="1199.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (15 samples, 0.01%)</title><rect x="36.9553%" y="1173" width="0.0147%" height="15" fill="rgb(236,137,7)" fg:x="37632" fg:w="15"/><text x="37.2053%" y="1183.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (15 samples, 0.01%)</title><rect x="36.9553%" y="1157" width="0.0147%" height="15" fill="rgb(235,127,16)" fg:x="37632" fg:w="15"/><text x="37.2053%" y="1167.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::handle_window_created_events (12 samples, 0.01%)</title><rect x="36.9740%" y="1317" width="0.0118%" height="15" fill="rgb(250,192,54)" fg:x="37651" fg:w="12"/><text x="37.2240%" y="1327.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::end_render_pass (30 samples, 0.03%)</title><rect x="36.9936%" y="1109" width="0.0295%" height="15" fill="rgb(218,98,20)" fg:x="37671" fg:w="30"/><text x="37.2436%" y="1119.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_end_render_pass (30 samples, 0.03%)</title><rect x="36.9936%" y="1093" width="0.0295%" height="15" fill="rgb(230,176,47)" fg:x="37671" fg:w="30"/><text x="37.2436%" y="1103.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_end_render_pass (30 samples, 0.03%)</title><rect x="36.9936%" y="1077" width="0.0295%" height="15" fill="rgb(244,2,33)" fg:x="37671" fg:w="30"/><text x="37.2436%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.03%)</title><rect x="36.9936%" y="1061" width="0.0295%" height="15" fill="rgb(231,100,17)" fg:x="37671" fg:w="30"/><text x="37.2436%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.03%)</title><rect x="36.9936%" y="1045" width="0.0295%" height="15" fill="rgb(245,23,12)" fg:x="37671" fg:w="30"/><text x="37.2436%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.03%)</title><rect x="36.9936%" y="1029" width="0.0295%" height="15" fill="rgb(249,55,22)" fg:x="37671" fg:w="30"/><text x="37.2436%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="37.0113%" y="1013" width="0.0118%" height="15" fill="rgb(207,134,9)" fg:x="37689" fg:w="12"/><text x="37.2613%" y="1023.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (63 samples, 0.06%)</title><rect x="36.9858%" y="1317" width="0.0619%" height="15" fill="rgb(218,134,0)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1327.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (63 samples, 0.06%)</title><rect x="36.9858%" y="1301" width="0.0619%" height="15" fill="rgb(213,212,33)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1311.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (63 samples, 0.06%)</title><rect x="36.9858%" y="1285" width="0.0619%" height="15" fill="rgb(252,106,18)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1295.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (63 samples, 0.06%)</title><rect x="36.9858%" y="1269" width="0.0619%" height="15" fill="rgb(208,126,42)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1279.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (63 samples, 0.06%)</title><rect x="36.9858%" y="1253" width="0.0619%" height="15" fill="rgb(246,175,29)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1263.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (63 samples, 0.06%)</title><rect x="36.9858%" y="1237" width="0.0619%" height="15" fill="rgb(215,13,50)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (63 samples, 0.06%)</title><rect x="36.9858%" y="1221" width="0.0619%" height="15" fill="rgb(216,172,15)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (63 samples, 0.06%)</title><rect x="36.9858%" y="1205" width="0.0619%" height="15" fill="rgb(212,103,13)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (63 samples, 0.06%)</title><rect x="36.9858%" y="1189" width="0.0619%" height="15" fill="rgb(231,171,36)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1199.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (63 samples, 0.06%)</title><rect x="36.9858%" y="1173" width="0.0619%" height="15" fill="rgb(250,123,20)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1183.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (63 samples, 0.06%)</title><rect x="36.9858%" y="1157" width="0.0619%" height="15" fill="rgb(212,53,50)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1167.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (63 samples, 0.06%)</title><rect x="36.9858%" y="1141" width="0.0619%" height="15" fill="rgb(243,54,12)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1151.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (63 samples, 0.06%)</title><rect x="36.9858%" y="1125" width="0.0619%" height="15" fill="rgb(234,101,34)" fg:x="37663" fg:w="63"/><text x="37.2358%" y="1135.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.03%)</title><rect x="37.2126%" y="1013" width="0.0334%" height="15" fill="rgb(254,67,22)" fg:x="37894" fg:w="34"/><text x="37.4626%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (32 samples, 0.03%)</title><rect x="37.2146%" y="997" width="0.0314%" height="15" fill="rgb(250,35,47)" fg:x="37896" fg:w="32"/><text x="37.4646%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (32 samples, 0.03%)</title><rect x="37.2146%" y="981" width="0.0314%" height="15" fill="rgb(226,126,38)" fg:x="37896" fg:w="32"/><text x="37.4646%" y="991.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (131 samples, 0.13%)</title><rect x="37.1999%" y="1029" width="0.1286%" height="15" fill="rgb(216,138,53)" fg:x="37881" fg:w="131"/><text x="37.4499%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (84 samples, 0.08%)</title><rect x="37.2460%" y="1013" width="0.0825%" height="15" fill="rgb(246,199,43)" fg:x="37928" fg:w="84"/><text x="37.4960%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (84 samples, 0.08%)</title><rect x="37.2460%" y="997" width="0.0825%" height="15" fill="rgb(232,125,11)" fg:x="37928" fg:w="84"/><text x="37.4960%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="37.3285%" y="1013" width="0.0412%" height="15" fill="rgb(218,219,45)" fg:x="38012" fg:w="42"/><text x="37.5785%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (42 samples, 0.04%)</title><rect x="37.3285%" y="997" width="0.0412%" height="15" fill="rgb(216,102,54)" fg:x="38012" fg:w="42"/><text x="37.5785%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (42 samples, 0.04%)</title><rect x="37.3285%" y="981" width="0.0412%" height="15" fill="rgb(250,228,7)" fg:x="38012" fg:w="42"/><text x="37.5785%" y="991.50"></text></g><g><title>&lt;async_channel::Sender&lt;T&gt; as core::clone::Clone&gt;::clone (63 samples, 0.06%)</title><rect x="37.3285%" y="1029" width="0.0619%" height="15" fill="rgb(226,125,25)" fg:x="38012" fg:w="63"/><text x="37.5785%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (21 samples, 0.02%)</title><rect x="37.3698%" y="1013" width="0.0206%" height="15" fill="rgb(224,165,27)" fg:x="38054" fg:w="21"/><text x="37.6198%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_add (21 samples, 0.02%)</title><rect x="37.3698%" y="997" width="0.0206%" height="15" fill="rgb(233,86,3)" fg:x="38054" fg:w="21"/><text x="37.6198%" y="1007.50"></text></g><g><title>_int_free (16 samples, 0.02%)</title><rect x="37.4346%" y="805" width="0.0157%" height="15" fill="rgb(228,116,20)" fg:x="38120" fg:w="16"/><text x="37.6846%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (78 samples, 0.08%)</title><rect x="37.4071%" y="917" width="0.0766%" height="15" fill="rgb(209,192,17)" fg:x="38092" fg:w="78"/><text x="37.6571%" y="927.50"></text></g><g><title>alloc::alloc::Global::grow_impl (78 samples, 0.08%)</title><rect x="37.4071%" y="901" width="0.0766%" height="15" fill="rgb(224,88,34)" fg:x="38092" fg:w="78"/><text x="37.6571%" y="911.50"></text></g><g><title>alloc::alloc::realloc (78 samples, 0.08%)</title><rect x="37.4071%" y="885" width="0.0766%" height="15" fill="rgb(233,38,6)" fg:x="38092" fg:w="78"/><text x="37.6571%" y="895.50"></text></g><g><title>__rdl_realloc (78 samples, 0.08%)</title><rect x="37.4071%" y="869" width="0.0766%" height="15" fill="rgb(212,59,30)" fg:x="38092" fg:w="78"/><text x="37.6571%" y="879.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (78 samples, 0.08%)</title><rect x="37.4071%" y="853" width="0.0766%" height="15" fill="rgb(213,80,3)" fg:x="38092" fg:w="78"/><text x="37.6571%" y="863.50"></text></g><g><title>__GI___libc_realloc (77 samples, 0.08%)</title><rect x="37.4081%" y="837" width="0.0756%" height="15" fill="rgb(251,178,7)" fg:x="38093" fg:w="77"/><text x="37.6581%" y="847.50"></text></g><g><title>_int_realloc (65 samples, 0.06%)</title><rect x="37.4198%" y="821" width="0.0638%" height="15" fill="rgb(213,154,26)" fg:x="38105" fg:w="65"/><text x="37.6698%" y="831.50"></text></g><g><title>_int_malloc (34 samples, 0.03%)</title><rect x="37.4503%" y="805" width="0.0334%" height="15" fill="rgb(238,165,49)" fg:x="38136" fg:w="34"/><text x="37.7003%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (89 samples, 0.09%)</title><rect x="37.4061%" y="933" width="0.0874%" height="15" fill="rgb(248,91,46)" fg:x="38091" fg:w="89"/><text x="37.6561%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (97 samples, 0.10%)</title><rect x="37.4012%" y="949" width="0.0953%" height="15" fill="rgb(244,21,52)" fg:x="38086" fg:w="97"/><text x="37.6512%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (99 samples, 0.10%)</title><rect x="37.4002%" y="981" width="0.0972%" height="15" fill="rgb(247,122,20)" fg:x="38085" fg:w="99"/><text x="37.6502%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (98 samples, 0.10%)</title><rect x="37.4012%" y="965" width="0.0962%" height="15" fill="rgb(218,27,9)" fg:x="38086" fg:w="98"/><text x="37.6512%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (100 samples, 0.10%)</title><rect x="37.4002%" y="1013" width="0.0982%" height="15" fill="rgb(246,7,6)" fg:x="38085" fg:w="100"/><text x="37.6502%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (100 samples, 0.10%)</title><rect x="37.4002%" y="997" width="0.0982%" height="15" fill="rgb(227,135,54)" fg:x="38085" fg:w="100"/><text x="37.6502%" y="1007.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (42 samples, 0.04%)</title><rect x="37.5092%" y="997" width="0.0412%" height="15" fill="rgb(247,14,11)" fg:x="38196" fg:w="42"/><text x="37.7592%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (42 samples, 0.04%)</title><rect x="37.5092%" y="981" width="0.0412%" height="15" fill="rgb(206,149,34)" fg:x="38196" fg:w="42"/><text x="37.7592%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (42 samples, 0.04%)</title><rect x="37.5092%" y="965" width="0.0412%" height="15" fill="rgb(227,228,4)" fg:x="38196" fg:w="42"/><text x="37.7592%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (27 samples, 0.03%)</title><rect x="37.5505%" y="981" width="0.0265%" height="15" fill="rgb(238,218,28)" fg:x="38238" fg:w="27"/><text x="37.8005%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (26 samples, 0.03%)</title><rect x="37.5514%" y="965" width="0.0255%" height="15" fill="rgb(252,86,40)" fg:x="38239" fg:w="26"/><text x="37.8014%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (26 samples, 0.03%)</title><rect x="37.5514%" y="949" width="0.0255%" height="15" fill="rgb(251,225,11)" fg:x="38239" fg:w="26"/><text x="37.8014%" y="959.50"></text></g><g><title>async_executor::Executor::schedule (28 samples, 0.03%)</title><rect x="37.5505%" y="997" width="0.0275%" height="15" fill="rgb(206,46,49)" fg:x="38238" fg:w="28"/><text x="37.8005%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (29 samples, 0.03%)</title><rect x="37.5858%" y="933" width="0.0285%" height="15" fill="rgb(245,128,24)" fg:x="38274" fg:w="29"/><text x="37.8358%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.03%)</title><rect x="37.5858%" y="917" width="0.0285%" height="15" fill="rgb(219,177,34)" fg:x="38274" fg:w="29"/><text x="37.8358%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (16 samples, 0.02%)</title><rect x="37.6143%" y="933" width="0.0157%" height="15" fill="rgb(218,60,48)" fg:x="38303" fg:w="16"/><text x="37.8643%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (16 samples, 0.02%)</title><rect x="37.6143%" y="917" width="0.0157%" height="15" fill="rgb(221,11,5)" fg:x="38303" fg:w="16"/><text x="37.8643%" y="927.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (16 samples, 0.02%)</title><rect x="37.6143%" y="901" width="0.0157%" height="15" fill="rgb(220,148,13)" fg:x="38303" fg:w="16"/><text x="37.8643%" y="911.50"></text></g><g><title>parking::Unparker::unpark (16 samples, 0.02%)</title><rect x="37.6143%" y="885" width="0.0157%" height="15" fill="rgb(210,16,3)" fg:x="38303" fg:w="16"/><text x="37.8643%" y="895.50"></text></g><g><title>parking::Inner::unpark (11 samples, 0.01%)</title><rect x="37.6192%" y="869" width="0.0108%" height="15" fill="rgb(236,80,2)" fg:x="38308" fg:w="11"/><text x="37.8692%" y="879.50"></text></g><g><title>async_executor::State::notify (57 samples, 0.06%)</title><rect x="37.5829%" y="949" width="0.0560%" height="15" fill="rgb(239,129,19)" fg:x="38271" fg:w="57"/><text x="37.8329%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (46 samples, 0.05%)</title><rect x="37.6565%" y="917" width="0.0452%" height="15" fill="rgb(220,106,35)" fg:x="38346" fg:w="46"/><text x="37.9065%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (46 samples, 0.05%)</title><rect x="37.6565%" y="901" width="0.0452%" height="15" fill="rgb(252,139,45)" fg:x="38346" fg:w="46"/><text x="37.9065%" y="911.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (153 samples, 0.15%)</title><rect x="37.5829%" y="965" width="0.1502%" height="15" fill="rgb(229,8,36)" fg:x="38271" fg:w="153"/><text x="37.8329%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (96 samples, 0.09%)</title><rect x="37.6388%" y="949" width="0.0943%" height="15" fill="rgb(230,126,33)" fg:x="38328" fg:w="96"/><text x="37.8888%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (95 samples, 0.09%)</title><rect x="37.6398%" y="933" width="0.0933%" height="15" fill="rgb(239,140,21)" fg:x="38329" fg:w="95"/><text x="37.8898%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (29 samples, 0.03%)</title><rect x="37.7046%" y="917" width="0.0285%" height="15" fill="rgb(254,104,9)" fg:x="38395" fg:w="29"/><text x="37.9546%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_or (29 samples, 0.03%)</title><rect x="37.7046%" y="901" width="0.0285%" height="15" fill="rgb(239,52,14)" fg:x="38395" fg:w="29"/><text x="37.9546%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (68 samples, 0.07%)</title><rect x="37.7331%" y="965" width="0.0668%" height="15" fill="rgb(208,227,44)" fg:x="38424" fg:w="68"/><text x="37.9831%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (66 samples, 0.06%)</title><rect x="37.7351%" y="949" width="0.0648%" height="15" fill="rgb(246,18,19)" fg:x="38426" fg:w="66"/><text x="37.9851%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (66 samples, 0.06%)</title><rect x="37.7351%" y="933" width="0.0648%" height="15" fill="rgb(235,228,25)" fg:x="38426" fg:w="66"/><text x="37.9851%" y="943.50"></text></g><g><title>async_task::runnable::Runnable::schedule (246 samples, 0.24%)</title><rect x="37.5789%" y="997" width="0.2416%" height="15" fill="rgb(240,156,20)" fg:x="38267" fg:w="246"/><text x="37.8289%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (245 samples, 0.24%)</title><rect x="37.5799%" y="981" width="0.2406%" height="15" fill="rgb(224,8,20)" fg:x="38268" fg:w="245"/><text x="37.8299%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (21 samples, 0.02%)</title><rect x="37.7999%" y="965" width="0.0206%" height="15" fill="rgb(214,12,52)" fg:x="38492" fg:w="21"/><text x="38.0499%" y="975.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="37.7999%" y="949" width="0.0206%" height="15" fill="rgb(211,220,47)" fg:x="38492" fg:w="21"/><text x="38.0499%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (21 samples, 0.02%)</title><rect x="37.7999%" y="933" width="0.0206%" height="15" fill="rgb(250,173,5)" fg:x="38492" fg:w="21"/><text x="38.0499%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (20 samples, 0.02%)</title><rect x="37.8009%" y="917" width="0.0196%" height="15" fill="rgb(250,125,52)" fg:x="38493" fg:w="20"/><text x="38.0509%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (20 samples, 0.02%)</title><rect x="37.8009%" y="901" width="0.0196%" height="15" fill="rgb(209,133,18)" fg:x="38493" fg:w="20"/><text x="38.0509%" y="911.50"></text></g><g><title>async_task::runnable::Runnable::waker (114 samples, 0.11%)</title><rect x="37.8205%" y="997" width="0.1120%" height="15" fill="rgb(216,173,22)" fg:x="38513" fg:w="114"/><text x="38.0705%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (114 samples, 0.11%)</title><rect x="37.8205%" y="981" width="0.1120%" height="15" fill="rgb(205,3,22)" fg:x="38513" fg:w="114"/><text x="38.0705%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (111 samples, 0.11%)</title><rect x="37.8235%" y="965" width="0.1090%" height="15" fill="rgb(248,22,20)" fg:x="38516" fg:w="111"/><text x="38.0735%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_add (111 samples, 0.11%)</title><rect x="37.8235%" y="949" width="0.1090%" height="15" fill="rgb(233,6,29)" fg:x="38516" fg:w="111"/><text x="38.0735%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="37.9325%" y="981" width="0.0108%" height="15" fill="rgb(240,22,54)" fg:x="38627" fg:w="11"/><text x="38.1825%" y="991.50"></text></g><g><title>alloc::alloc::alloc (229 samples, 0.22%)</title><rect x="37.9492%" y="965" width="0.2249%" height="15" fill="rgb(231,133,32)" fg:x="38644" fg:w="229"/><text x="38.1992%" y="975.50"></text></g><g><title>__rdl_alloc (229 samples, 0.22%)</title><rect x="37.9492%" y="949" width="0.2249%" height="15" fill="rgb(248,193,4)" fg:x="38644" fg:w="229"/><text x="38.1992%" y="959.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (229 samples, 0.22%)</title><rect x="37.9492%" y="933" width="0.2249%" height="15" fill="rgb(211,178,46)" fg:x="38644" fg:w="229"/><text x="38.1992%" y="943.50"></text></g><g><title>__GI___libc_malloc (229 samples, 0.22%)</title><rect x="37.9492%" y="917" width="0.2249%" height="15" fill="rgb(224,5,42)" fg:x="38644" fg:w="229"/><text x="38.1992%" y="927.50"></text></g><g><title>_int_malloc (137 samples, 0.13%)</title><rect x="38.0395%" y="901" width="0.1345%" height="15" fill="rgb(239,176,25)" fg:x="38736" fg:w="137"/><text x="38.2895%" y="911.50"></text></g><g><title>unlink_chunk.constprop.0 (20 samples, 0.02%)</title><rect x="38.1544%" y="885" width="0.0196%" height="15" fill="rgb(245,187,50)" fg:x="38853" fg:w="20"/><text x="38.4044%" y="895.50"></text></g><g><title>async_task::runnable::spawn_unchecked (276 samples, 0.27%)</title><rect x="37.9325%" y="997" width="0.2710%" height="15" fill="rgb(248,24,15)" fg:x="38627" fg:w="276"/><text x="38.1825%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (265 samples, 0.26%)</title><rect x="37.9433%" y="981" width="0.2602%" height="15" fill="rgb(205,166,13)" fg:x="38638" fg:w="265"/><text x="38.1933%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (29 samples, 0.03%)</title><rect x="38.1750%" y="965" width="0.0285%" height="15" fill="rgb(208,114,23)" fg:x="38874" fg:w="29"/><text x="38.4250%" y="975.50"></text></g><g><title>core::ptr::write (29 samples, 0.03%)</title><rect x="38.1750%" y="949" width="0.0285%" height="15" fill="rgb(239,127,18)" fg:x="38874" fg:w="29"/><text x="38.4250%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (28 samples, 0.03%)</title><rect x="38.1760%" y="933" width="0.0275%" height="15" fill="rgb(219,154,28)" fg:x="38875" fg:w="28"/><text x="38.4260%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;slab::Slab&lt;core::task::wake::Waker&gt;&gt;&gt; (39 samples, 0.04%)</title><rect x="38.2035%" y="997" width="0.0383%" height="15" fill="rgb(225,157,23)" fg:x="38903" fg:w="39"/><text x="38.4535%" y="1007.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.04%)</title><rect x="38.2035%" y="981" width="0.0383%" height="15" fill="rgb(219,8,6)" fg:x="38903" fg:w="39"/><text x="38.4535%" y="991.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (38 samples, 0.04%)</title><rect x="38.2045%" y="965" width="0.0373%" height="15" fill="rgb(212,47,6)" fg:x="38904" fg:w="38"/><text x="38.4545%" y="975.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (37 samples, 0.04%)</title><rect x="38.2055%" y="949" width="0.0363%" height="15" fill="rgb(224,190,4)" fg:x="38905" fg:w="37"/><text x="38.4555%" y="959.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (34 samples, 0.03%)</title><rect x="38.2084%" y="933" width="0.0334%" height="15" fill="rgb(239,183,29)" fg:x="38908" fg:w="34"/><text x="38.4584%" y="943.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert (14 samples, 0.01%)</title><rect x="38.2418%" y="997" width="0.0137%" height="15" fill="rgb(213,57,7)" fg:x="38942" fg:w="14"/><text x="38.4918%" y="1007.50"></text></g><g><title>slab::Slab&lt;T&gt;::insert_at (12 samples, 0.01%)</title><rect x="38.2438%" y="981" width="0.0118%" height="15" fill="rgb(216,148,1)" fg:x="38944" fg:w="12"/><text x="38.4938%" y="991.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (916 samples, 0.90%)</title><rect x="37.3963%" y="1029" width="0.8995%" height="15" fill="rgb(236,182,29)" fg:x="38081" fg:w="916"/><text x="37.6463%" y="1039.50"></text></g><g><title>async_executor::Executor::spawn (812 samples, 0.80%)</title><rect x="37.4984%" y="1013" width="0.7974%" height="15" fill="rgb(244,120,48)" fg:x="38185" fg:w="812"/><text x="37.7484%" y="1023.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (41 samples, 0.04%)</title><rect x="38.2555%" y="997" width="0.0403%" height="15" fill="rgb(206,71,34)" fg:x="38956" fg:w="41"/><text x="38.5055%" y="1007.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (36 samples, 0.04%)</title><rect x="38.2605%" y="981" width="0.0354%" height="15" fill="rgb(242,32,6)" fg:x="38961" fg:w="36"/><text x="38.5105%" y="991.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (33 samples, 0.03%)</title><rect x="38.2634%" y="965" width="0.0324%" height="15" fill="rgb(241,35,3)" fg:x="38964" fg:w="33"/><text x="38.5134%" y="975.50"></text></g><g><title>__GI___pthread_mutex_lock (33 samples, 0.03%)</title><rect x="38.2634%" y="949" width="0.0324%" height="15" fill="rgb(222,62,19)" fg:x="38964" fg:w="33"/><text x="38.5134%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (12 samples, 0.01%)</title><rect x="38.2958%" y="1013" width="0.0118%" height="15" fill="rgb(223,110,41)" fg:x="38997" fg:w="12"/><text x="38.5458%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.01%)</title><rect x="38.2958%" y="997" width="0.0118%" height="15" fill="rgb(208,224,4)" fg:x="38997" fg:w="12"/><text x="38.5458%" y="1007.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (26 samples, 0.03%)</title><rect x="38.2958%" y="1029" width="0.0255%" height="15" fill="rgb(241,137,19)" fg:x="38997" fg:w="26"/><text x="38.5458%" y="1039.50"></text></g><g><title>__memset_avx2_unaligned_erms (14 samples, 0.01%)</title><rect x="38.3076%" y="1013" width="0.0137%" height="15" fill="rgb(244,24,17)" fg:x="39009" fg:w="14"/><text x="38.5576%" y="1023.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (1,185 samples, 1.16%)</title><rect x="37.1714%" y="1045" width="1.1637%" height="15" fill="rgb(245,178,49)" fg:x="37852" fg:w="1185"/><text x="37.4214%" y="1055.50"></text></g><g><title>fixedbitset::FixedBitSet::insert (14 samples, 0.01%)</title><rect x="38.3213%" y="1029" width="0.0137%" height="15" fill="rgb(219,160,38)" fg:x="39023" fg:w="14"/><text x="38.5713%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (17 samples, 0.02%)</title><rect x="38.3351%" y="1029" width="0.0167%" height="15" fill="rgb(228,137,14)" fg:x="39037" fg:w="17"/><text x="38.5851%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="38.3361%" y="1013" width="0.0157%" height="15" fill="rgb(237,134,11)" fg:x="39038" fg:w="16"/><text x="38.5861%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="38.3361%" y="997" width="0.0157%" height="15" fill="rgb(211,126,44)" fg:x="39038" fg:w="16"/><text x="38.5861%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="38.3361%" y="981" width="0.0157%" height="15" fill="rgb(226,171,33)" fg:x="39038" fg:w="16"/><text x="38.5861%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="38.3361%" y="965" width="0.0157%" height="15" fill="rgb(253,99,13)" fg:x="39038" fg:w="16"/><text x="38.5861%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.01%)</title><rect x="38.3370%" y="949" width="0.0147%" height="15" fill="rgb(244,48,7)" fg:x="39039" fg:w="15"/><text x="38.5870%" y="959.50"></text></g><g><title>core::task::wake::Waker::wake (13 samples, 0.01%)</title><rect x="38.3675%" y="949" width="0.0128%" height="15" fill="rgb(244,217,54)" fg:x="39070" fg:w="13"/><text x="38.6175%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (13 samples, 0.01%)</title><rect x="38.3675%" y="933" width="0.0128%" height="15" fill="rgb(224,15,18)" fg:x="39070" fg:w="13"/><text x="38.6175%" y="943.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (12 samples, 0.01%)</title><rect x="38.3685%" y="917" width="0.0118%" height="15" fill="rgb(244,99,12)" fg:x="39071" fg:w="12"/><text x="38.6185%" y="927.50"></text></g><g><title>parking::Unparker::unpark (12 samples, 0.01%)</title><rect x="38.3685%" y="901" width="0.0118%" height="15" fill="rgb(233,226,8)" fg:x="39071" fg:w="12"/><text x="38.6185%" y="911.50"></text></g><g><title>async_executor::State::notify (15 samples, 0.01%)</title><rect x="38.3675%" y="965" width="0.0147%" height="15" fill="rgb(229,211,3)" fg:x="39070" fg:w="15"/><text x="38.6175%" y="975.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (31 samples, 0.03%)</title><rect x="38.3675%" y="981" width="0.0304%" height="15" fill="rgb(216,140,21)" fg:x="39070" fg:w="31"/><text x="38.6175%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (16 samples, 0.02%)</title><rect x="38.3822%" y="965" width="0.0157%" height="15" fill="rgb(234,122,30)" fg:x="39085" fg:w="16"/><text x="38.6322%" y="975.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (15 samples, 0.01%)</title><rect x="38.3832%" y="949" width="0.0147%" height="15" fill="rgb(236,25,46)" fg:x="39086" fg:w="15"/><text x="38.6332%" y="959.50"></text></g><g><title>async_task::runnable::Runnable::schedule (36 samples, 0.04%)</title><rect x="38.3665%" y="1013" width="0.0354%" height="15" fill="rgb(217,52,54)" fg:x="39069" fg:w="36"/><text x="38.6165%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (36 samples, 0.04%)</title><rect x="38.3665%" y="997" width="0.0354%" height="15" fill="rgb(222,29,26)" fg:x="39069" fg:w="36"/><text x="38.6165%" y="1007.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="38.4087%" y="997" width="0.0108%" height="15" fill="rgb(216,177,29)" fg:x="39112" fg:w="11"/><text x="38.6587%" y="1007.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="38.4195%" y="981" width="0.0118%" height="15" fill="rgb(247,136,51)" fg:x="39123" fg:w="12"/><text x="38.6695%" y="991.50"></text></g><g><title>__rdl_alloc (12 samples, 0.01%)</title><rect x="38.4195%" y="965" width="0.0118%" height="15" fill="rgb(231,47,47)" fg:x="39123" fg:w="12"/><text x="38.6695%" y="975.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.01%)</title><rect x="38.4195%" y="949" width="0.0118%" height="15" fill="rgb(211,192,36)" fg:x="39123" fg:w="12"/><text x="38.6695%" y="959.50"></text></g><g><title>__GI___libc_malloc (12 samples, 0.01%)</title><rect x="38.4195%" y="933" width="0.0118%" height="15" fill="rgb(229,156,32)" fg:x="39123" fg:w="12"/><text x="38.6695%" y="943.50"></text></g><g><title>async_task::runnable::spawn_unchecked (28 samples, 0.03%)</title><rect x="38.4087%" y="1013" width="0.0275%" height="15" fill="rgb(248,213,20)" fg:x="39112" fg:w="28"/><text x="38.6587%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (17 samples, 0.02%)</title><rect x="38.4195%" y="997" width="0.0167%" height="15" fill="rgb(217,64,7)" fg:x="39123" fg:w="17"/><text x="38.6695%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (1,317 samples, 1.29%)</title><rect x="37.1714%" y="1061" width="1.2933%" height="15" fill="rgb(232,142,8)" fg:x="37852" fg:w="1317"/><text x="37.4214%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (132 samples, 0.13%)</title><rect x="38.3351%" y="1045" width="0.1296%" height="15" fill="rgb(224,92,44)" fg:x="39037" fg:w="132"/><text x="38.5851%" y="1055.50"></text></g><g><title>async_executor::Executor::spawn (115 samples, 0.11%)</title><rect x="38.3518%" y="1029" width="0.1129%" height="15" fill="rgb(214,169,17)" fg:x="39054" fg:w="115"/><text x="38.6018%" y="1039.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="38.4470%" y="1013" width="0.0177%" height="15" fill="rgb(210,59,37)" fg:x="39151" fg:w="18"/><text x="38.6970%" y="1023.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="38.4500%" y="997" width="0.0147%" height="15" fill="rgb(214,116,48)" fg:x="39154" fg:w="15"/><text x="38.7000%" y="1007.50"></text></g><g><title>async_executor::Executor::try_tick (33 samples, 0.03%)</title><rect x="38.5138%" y="1045" width="0.0324%" height="15" fill="rgb(244,191,6)" fg:x="39219" fg:w="33"/><text x="38.7638%" y="1055.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (65 samples, 0.06%)</title><rect x="38.5492%" y="1029" width="0.0638%" height="15" fill="rgb(241,50,52)" fg:x="39255" fg:w="65"/><text x="38.7992%" y="1039.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (65 samples, 0.06%)</title><rect x="38.5492%" y="1013" width="0.0638%" height="15" fill="rgb(236,75,39)" fg:x="39255" fg:w="65"/><text x="38.7992%" y="1023.50"></text></g><g><title>async_executor::State::notify (70 samples, 0.07%)</title><rect x="38.5462%" y="1045" width="0.0687%" height="15" fill="rgb(236,99,0)" fg:x="39252" fg:w="70"/><text x="38.7962%" y="1055.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="38.6916%" y="917" width="0.0118%" height="15" fill="rgb(207,202,15)" fg:x="39400" fg:w="12"/><text x="38.9416%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (11 samples, 0.01%)</title><rect x="38.6925%" y="901" width="0.0108%" height="15" fill="rgb(233,207,14)" fg:x="39401" fg:w="11"/><text x="38.9425%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="38.6925%" y="885" width="0.0108%" height="15" fill="rgb(226,27,51)" fg:x="39401" fg:w="11"/><text x="38.9425%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="38.6925%" y="869" width="0.0108%" height="15" fill="rgb(206,104,42)" fg:x="39401" fg:w="11"/><text x="38.9425%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (16 samples, 0.02%)</title><rect x="38.7073%" y="917" width="0.0157%" height="15" fill="rgb(212,225,4)" fg:x="39416" fg:w="16"/><text x="38.9573%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (14 samples, 0.01%)</title><rect x="38.7092%" y="901" width="0.0137%" height="15" fill="rgb(233,96,42)" fg:x="39418" fg:w="14"/><text x="38.9592%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="38.7092%" y="885" width="0.0137%" height="15" fill="rgb(229,21,32)" fg:x="39418" fg:w="14"/><text x="38.9592%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (12 samples, 0.01%)</title><rect x="38.7112%" y="869" width="0.0118%" height="15" fill="rgb(226,216,24)" fg:x="39420" fg:w="12"/><text x="38.9612%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (11 samples, 0.01%)</title><rect x="38.7122%" y="853" width="0.0108%" height="15" fill="rgb(221,163,17)" fg:x="39421" fg:w="11"/><text x="38.9622%" y="863.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (47 samples, 0.05%)</title><rect x="38.6876%" y="933" width="0.0462%" height="15" fill="rgb(216,216,42)" fg:x="39396" fg:w="47"/><text x="38.9376%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (36 samples, 0.04%)</title><rect x="38.7721%" y="885" width="0.0354%" height="15" fill="rgb(240,118,7)" fg:x="39482" fg:w="36"/><text x="39.0221%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (35 samples, 0.03%)</title><rect x="38.7731%" y="869" width="0.0344%" height="15" fill="rgb(221,67,37)" fg:x="39483" fg:w="35"/><text x="39.0231%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (35 samples, 0.03%)</title><rect x="38.7731%" y="853" width="0.0344%" height="15" fill="rgb(241,32,44)" fg:x="39483" fg:w="35"/><text x="39.0231%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="38.7731%" y="837" width="0.0344%" height="15" fill="rgb(235,204,43)" fg:x="39483" fg:w="35"/><text x="39.0231%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (11 samples, 0.01%)</title><rect x="38.8290%" y="885" width="0.0108%" height="15" fill="rgb(213,116,10)" fg:x="39540" fg:w="11"/><text x="39.0790%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (11 samples, 0.01%)</title><rect x="38.8290%" y="869" width="0.0108%" height="15" fill="rgb(239,15,48)" fg:x="39540" fg:w="11"/><text x="39.0790%" y="879.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (139 samples, 0.14%)</title><rect x="38.7416%" y="917" width="0.1365%" height="15" fill="rgb(207,123,36)" fg:x="39451" fg:w="139"/><text x="38.9916%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (121 samples, 0.12%)</title><rect x="38.7593%" y="901" width="0.1188%" height="15" fill="rgb(209,103,30)" fg:x="39469" fg:w="121"/><text x="39.0093%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (39 samples, 0.04%)</title><rect x="38.8398%" y="885" width="0.0383%" height="15" fill="rgb(238,100,19)" fg:x="39551" fg:w="39"/><text x="39.0898%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (39 samples, 0.04%)</title><rect x="38.8398%" y="869" width="0.0383%" height="15" fill="rgb(244,30,14)" fg:x="39551" fg:w="39"/><text x="39.0898%" y="879.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (164 samples, 0.16%)</title><rect x="38.7348%" y="933" width="0.1611%" height="15" fill="rgb(249,174,6)" fg:x="39444" fg:w="164"/><text x="38.9848%" y="943.50"></text></g><g><title>event_listener::Event::notify (18 samples, 0.02%)</title><rect x="38.8781%" y="917" width="0.0177%" height="15" fill="rgb(235,213,41)" fg:x="39590" fg:w="18"/><text x="39.1281%" y="927.50"></text></g><g><title>event_listener::full_fence (11 samples, 0.01%)</title><rect x="38.8850%" y="901" width="0.0108%" height="15" fill="rgb(213,118,6)" fg:x="39597" fg:w="11"/><text x="39.1350%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (11 samples, 0.01%)</title><rect x="38.8850%" y="885" width="0.0108%" height="15" fill="rgb(235,44,51)" fg:x="39597" fg:w="11"/><text x="39.1350%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (11 samples, 0.01%)</title><rect x="38.8850%" y="869" width="0.0108%" height="15" fill="rgb(217,9,53)" fg:x="39597" fg:w="11"/><text x="39.1350%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.01%)</title><rect x="38.8850%" y="853" width="0.0108%" height="15" fill="rgb(237,172,34)" fg:x="39597" fg:w="11"/><text x="39.1350%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="38.9037%" y="917" width="0.0137%" height="15" fill="rgb(206,206,11)" fg:x="39616" fg:w="14"/><text x="39.1537%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (14 samples, 0.01%)</title><rect x="38.9037%" y="901" width="0.0137%" height="15" fill="rgb(214,149,29)" fg:x="39616" fg:w="14"/><text x="39.1537%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (14 samples, 0.01%)</title><rect x="38.9037%" y="885" width="0.0137%" height="15" fill="rgb(208,123,3)" fg:x="39616" fg:w="14"/><text x="39.1537%" y="895.50"></text></g><g><title>event_listener::Inner::lock (13 samples, 0.01%)</title><rect x="38.9253%" y="917" width="0.0128%" height="15" fill="rgb(229,126,4)" fg:x="39638" fg:w="13"/><text x="39.1753%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (13 samples, 0.01%)</title><rect x="38.9253%" y="901" width="0.0128%" height="15" fill="rgb(222,92,36)" fg:x="39638" fg:w="13"/><text x="39.1753%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="38.9263%" y="885" width="0.0118%" height="15" fill="rgb(216,39,41)" fg:x="39639" fg:w="12"/><text x="39.1763%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (12 samples, 0.01%)</title><rect x="38.9263%" y="869" width="0.0118%" height="15" fill="rgb(253,127,28)" fg:x="39639" fg:w="12"/><text x="39.1763%" y="879.50"></text></g><g><title>__GI___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="38.9263%" y="853" width="0.0118%" height="15" fill="rgb(249,152,51)" fg:x="39639" fg:w="12"/><text x="39.1763%" y="863.50"></text></g><g><title>event_listener::Event::listen (52 samples, 0.05%)</title><rect x="38.8988%" y="933" width="0.0511%" height="15" fill="rgb(209,123,42)" fg:x="39611" fg:w="52"/><text x="39.1488%" y="943.50"></text></g><g><title>event_listener::Inner::lock (14 samples, 0.01%)</title><rect x="38.9547%" y="917" width="0.0137%" height="15" fill="rgb(241,118,22)" fg:x="39668" fg:w="14"/><text x="39.2047%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (14 samples, 0.01%)</title><rect x="38.9547%" y="901" width="0.0137%" height="15" fill="rgb(208,25,7)" fg:x="39668" fg:w="14"/><text x="39.2047%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (12 samples, 0.01%)</title><rect x="38.9567%" y="885" width="0.0118%" height="15" fill="rgb(243,144,39)" fg:x="39670" fg:w="12"/><text x="39.2067%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (11 samples, 0.01%)</title><rect x="38.9577%" y="869" width="0.0108%" height="15" fill="rgb(250,50,5)" fg:x="39671" fg:w="11"/><text x="39.2077%" y="879.50"></text></g><g><title>__GI___pthread_mutex_lock (11 samples, 0.01%)</title><rect x="38.9577%" y="853" width="0.0108%" height="15" fill="rgb(207,67,11)" fg:x="39671" fg:w="11"/><text x="39.2077%" y="863.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (304 samples, 0.30%)</title><rect x="38.6788%" y="949" width="0.2985%" height="15" fill="rgb(245,204,40)" fg:x="39387" fg:w="304"/><text x="38.9288%" y="959.50"></text></g><g><title>event_listener::Event::notify (28 samples, 0.03%)</title><rect x="38.9498%" y="933" width="0.0275%" height="15" fill="rgb(238,228,24)" fg:x="39663" fg:w="28"/><text x="39.1998%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (30 samples, 0.03%)</title><rect x="39.0372%" y="853" width="0.0295%" height="15" fill="rgb(217,116,22)" fg:x="39752" fg:w="30"/><text x="39.2872%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (30 samples, 0.03%)</title><rect x="39.0372%" y="837" width="0.0295%" height="15" fill="rgb(234,98,12)" fg:x="39752" fg:w="30"/><text x="39.2872%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (30 samples, 0.03%)</title><rect x="39.0372%" y="821" width="0.0295%" height="15" fill="rgb(242,170,50)" fg:x="39752" fg:w="30"/><text x="39.2872%" y="831.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (70 samples, 0.07%)</title><rect x="39.0274%" y="885" width="0.0687%" height="15" fill="rgb(235,7,5)" fg:x="39742" fg:w="70"/><text x="39.2774%" y="895.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::push (60 samples, 0.06%)</title><rect x="39.0372%" y="869" width="0.0589%" height="15" fill="rgb(241,114,28)" fg:x="39752" fg:w="60"/><text x="39.2872%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (30 samples, 0.03%)</title><rect x="39.0667%" y="853" width="0.0295%" height="15" fill="rgb(246,112,42)" fg:x="39782" fg:w="30"/><text x="39.3167%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_and (30 samples, 0.03%)</title><rect x="39.0667%" y="837" width="0.0295%" height="15" fill="rgb(248,228,14)" fg:x="39782" fg:w="30"/><text x="39.3167%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (44 samples, 0.04%)</title><rect x="39.0971%" y="869" width="0.0432%" height="15" fill="rgb(208,133,18)" fg:x="39813" fg:w="44"/><text x="39.3471%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (42 samples, 0.04%)</title><rect x="39.0991%" y="853" width="0.0412%" height="15" fill="rgb(207,35,49)" fg:x="39815" fg:w="42"/><text x="39.3491%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="39.0991%" y="837" width="0.0412%" height="15" fill="rgb(205,68,36)" fg:x="39815" fg:w="42"/><text x="39.3491%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (39 samples, 0.04%)</title><rect x="39.1020%" y="821" width="0.0383%" height="15" fill="rgb(245,62,40)" fg:x="39818" fg:w="39"/><text x="39.3520%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (39 samples, 0.04%)</title><rect x="39.1020%" y="805" width="0.0383%" height="15" fill="rgb(228,27,24)" fg:x="39818" fg:w="39"/><text x="39.3520%" y="815.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (39 samples, 0.04%)</title><rect x="39.1020%" y="789" width="0.0383%" height="15" fill="rgb(253,19,12)" fg:x="39818" fg:w="39"/><text x="39.3520%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (15 samples, 0.01%)</title><rect x="39.1403%" y="869" width="0.0147%" height="15" fill="rgb(232,28,20)" fg:x="39857" fg:w="15"/><text x="39.3903%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="39.1403%" y="853" width="0.0147%" height="15" fill="rgb(218,35,51)" fg:x="39857" fg:w="15"/><text x="39.3903%" y="863.50"></text></g><g><title>event_listener::Inner::lock (52 samples, 0.05%)</title><rect x="39.1580%" y="869" width="0.0511%" height="15" fill="rgb(212,90,40)" fg:x="39875" fg:w="52"/><text x="39.4080%" y="879.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (52 samples, 0.05%)</title><rect x="39.1580%" y="853" width="0.0511%" height="15" fill="rgb(220,172,12)" fg:x="39875" fg:w="52"/><text x="39.4080%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (52 samples, 0.05%)</title><rect x="39.1580%" y="837" width="0.0511%" height="15" fill="rgb(226,159,20)" fg:x="39875" fg:w="52"/><text x="39.4080%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (52 samples, 0.05%)</title><rect x="39.1580%" y="821" width="0.0511%" height="15" fill="rgb(234,205,16)" fg:x="39875" fg:w="52"/><text x="39.4080%" y="831.50"></text></g><g><title>__GI___pthread_mutex_lock (52 samples, 0.05%)</title><rect x="39.1580%" y="805" width="0.0511%" height="15" fill="rgb(207,9,39)" fg:x="39875" fg:w="52"/><text x="39.4080%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (29 samples, 0.03%)</title><rect x="39.2189%" y="805" width="0.0285%" height="15" fill="rgb(249,143,15)" fg:x="39937" fg:w="29"/><text x="39.4689%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (29 samples, 0.03%)</title><rect x="39.2189%" y="789" width="0.0285%" height="15" fill="rgb(253,133,29)" fg:x="39937" fg:w="29"/><text x="39.4689%" y="799.50"></text></g><g><title>async_executor::State::notify (39 samples, 0.04%)</title><rect x="39.2169%" y="821" width="0.0383%" height="15" fill="rgb(221,187,0)" fg:x="39935" fg:w="39"/><text x="39.4669%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (19 samples, 0.02%)</title><rect x="39.2552%" y="821" width="0.0187%" height="15" fill="rgb(205,204,26)" fg:x="39974" fg:w="19"/><text x="39.5052%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (19 samples, 0.02%)</title><rect x="39.2552%" y="805" width="0.0187%" height="15" fill="rgb(224,68,54)" fg:x="39974" fg:w="19"/><text x="39.5052%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_sub (19 samples, 0.02%)</title><rect x="39.2552%" y="789" width="0.0187%" height="15" fill="rgb(209,67,4)" fg:x="39974" fg:w="19"/><text x="39.5052%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (36 samples, 0.04%)</title><rect x="39.2906%" y="757" width="0.0354%" height="15" fill="rgb(228,229,18)" fg:x="40010" fg:w="36"/><text x="39.5406%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (36 samples, 0.04%)</title><rect x="39.2906%" y="741" width="0.0354%" height="15" fill="rgb(231,89,13)" fg:x="40010" fg:w="36"/><text x="39.5406%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (31 samples, 0.03%)</title><rect x="39.3259%" y="757" width="0.0304%" height="15" fill="rgb(210,182,18)" fg:x="40046" fg:w="31"/><text x="39.5759%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_or (31 samples, 0.03%)</title><rect x="39.3259%" y="741" width="0.0304%" height="15" fill="rgb(240,105,2)" fg:x="40046" fg:w="31"/><text x="39.5759%" y="751.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (88 samples, 0.09%)</title><rect x="39.2739%" y="805" width="0.0864%" height="15" fill="rgb(207,170,50)" fg:x="39993" fg:w="88"/><text x="39.5239%" y="815.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (86 samples, 0.08%)</title><rect x="39.2759%" y="789" width="0.0845%" height="15" fill="rgb(232,133,24)" fg:x="39995" fg:w="86"/><text x="39.5259%" y="799.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (84 samples, 0.08%)</title><rect x="39.2778%" y="773" width="0.0825%" height="15" fill="rgb(235,166,27)" fg:x="39997" fg:w="84"/><text x="39.5278%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (46 samples, 0.05%)</title><rect x="39.3603%" y="805" width="0.0452%" height="15" fill="rgb(209,19,13)" fg:x="40081" fg:w="46"/><text x="39.6103%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (46 samples, 0.05%)</title><rect x="39.3603%" y="789" width="0.0452%" height="15" fill="rgb(226,79,39)" fg:x="40081" fg:w="46"/><text x="39.6103%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (196 samples, 0.19%)</title><rect x="39.2169%" y="837" width="0.1925%" height="15" fill="rgb(222,163,10)" fg:x="39935" fg:w="196"/><text x="39.4669%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (138 samples, 0.14%)</title><rect x="39.2739%" y="821" width="0.1355%" height="15" fill="rgb(214,44,19)" fg:x="39993" fg:w="138"/><text x="39.5239%" y="831.50"></text></g><g><title>event_listener::List::notify (205 samples, 0.20%)</title><rect x="39.2091%" y="869" width="0.2013%" height="15" fill="rgb(210,217,13)" fg:x="39927" fg:w="205"/><text x="39.4591%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (200 samples, 0.20%)</title><rect x="39.2140%" y="853" width="0.1964%" height="15" fill="rgb(237,61,54)" fg:x="39932" fg:w="200"/><text x="39.4640%" y="863.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (436 samples, 0.43%)</title><rect x="39.0225%" y="901" width="0.4282%" height="15" fill="rgb(226,184,24)" fg:x="39737" fg:w="436"/><text x="39.2725%" y="911.50"></text></g><g><title>event_listener::Event::notify (361 samples, 0.35%)</title><rect x="39.0961%" y="885" width="0.3545%" height="15" fill="rgb(223,226,4)" fg:x="39812" fg:w="361"/><text x="39.3461%" y="895.50"></text></g><g><title>event_listener::full_fence (41 samples, 0.04%)</title><rect x="39.4104%" y="869" width="0.0403%" height="15" fill="rgb(210,26,41)" fg:x="40132" fg:w="41"/><text x="39.6604%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (39 samples, 0.04%)</title><rect x="39.4124%" y="853" width="0.0383%" height="15" fill="rgb(220,221,6)" fg:x="40134" fg:w="39"/><text x="39.6624%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (39 samples, 0.04%)</title><rect x="39.4124%" y="837" width="0.0383%" height="15" fill="rgb(225,89,49)" fg:x="40134" fg:w="39"/><text x="39.6624%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (39 samples, 0.04%)</title><rect x="39.4124%" y="821" width="0.0383%" height="15" fill="rgb(218,70,45)" fg:x="40134" fg:w="39"/><text x="39.6624%" y="831.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (445 samples, 0.44%)</title><rect x="39.0146%" y="917" width="0.4370%" height="15" fill="rgb(238,166,21)" fg:x="39729" fg:w="445"/><text x="39.2646%" y="927.50"></text></g><g><title>&lt;fixedbitset::Ones as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="39.4605%" y="917" width="0.0187%" height="15" fill="rgb(224,141,44)" fg:x="40183" fg:w="19"/><text x="39.7105%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (15 samples, 0.01%)</title><rect x="39.5076%" y="869" width="0.0147%" height="15" fill="rgb(230,12,49)" fg:x="40231" fg:w="15"/><text x="39.7576%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="39.5076%" y="885" width="0.0187%" height="15" fill="rgb(212,174,12)" fg:x="40231" fg:w="19"/><text x="39.7576%" y="895.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (51 samples, 0.05%)</title><rect x="39.4791%" y="917" width="0.0501%" height="15" fill="rgb(246,67,9)" fg:x="40202" fg:w="51"/><text x="39.7291%" y="927.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (51 samples, 0.05%)</title><rect x="39.4791%" y="901" width="0.0501%" height="15" fill="rgb(239,35,23)" fg:x="40202" fg:w="51"/><text x="39.7291%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (125 samples, 0.12%)</title><rect x="39.5459%" y="869" width="0.1228%" height="15" fill="rgb(211,167,0)" fg:x="40270" fg:w="125"/><text x="39.7959%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (125 samples, 0.12%)</title><rect x="39.5459%" y="853" width="0.1228%" height="15" fill="rgb(225,119,45)" fg:x="40270" fg:w="125"/><text x="39.7959%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (65 samples, 0.06%)</title><rect x="39.6048%" y="837" width="0.0638%" height="15" fill="rgb(210,162,6)" fg:x="40330" fg:w="65"/><text x="39.8548%" y="847.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint::{{closure}} (65 samples, 0.06%)</title><rect x="39.6048%" y="821" width="0.0638%" height="15" fill="rgb(208,118,35)" fg:x="40330" fg:w="65"/><text x="39.8548%" y="831.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (148 samples, 0.15%)</title><rect x="39.5292%" y="917" width="0.1453%" height="15" fill="rgb(239,4,53)" fg:x="40253" fg:w="148"/><text x="39.7792%" y="927.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (147 samples, 0.14%)</title><rect x="39.5302%" y="901" width="0.1444%" height="15" fill="rgb(213,130,21)" fg:x="40254" fg:w="147"/><text x="39.7802%" y="911.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (139 samples, 0.14%)</title><rect x="39.5381%" y="885" width="0.1365%" height="15" fill="rgb(235,148,0)" fg:x="40262" fg:w="139"/><text x="39.7881%" y="895.50"></text></g><g><title>fixedbitset::FixedBitSet::difference_with (13 samples, 0.01%)</title><rect x="39.6746%" y="917" width="0.0128%" height="15" fill="rgb(244,224,18)" fg:x="40401" fg:w="13"/><text x="39.9246%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (735 samples, 0.72%)</title><rect x="38.9773%" y="949" width="0.7218%" height="15" fill="rgb(211,214,4)" fg:x="39691" fg:w="735"/><text x="39.2273%" y="959.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (735 samples, 0.72%)</title><rect x="38.9773%" y="933" width="0.7218%" height="15" fill="rgb(206,119,25)" fg:x="39691" fg:w="735"/><text x="39.2273%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (36 samples, 0.04%)</title><rect x="39.7129%" y="901" width="0.0354%" height="15" fill="rgb(243,93,47)" fg:x="40440" fg:w="36"/><text x="39.9629%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (35 samples, 0.03%)</title><rect x="39.7138%" y="885" width="0.0344%" height="15" fill="rgb(224,194,6)" fg:x="40441" fg:w="35"/><text x="39.9638%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (35 samples, 0.03%)</title><rect x="39.7138%" y="869" width="0.0344%" height="15" fill="rgb(243,229,6)" fg:x="40441" fg:w="35"/><text x="39.9638%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (35 samples, 0.03%)</title><rect x="39.7138%" y="853" width="0.0344%" height="15" fill="rgb(207,23,50)" fg:x="40441" fg:w="35"/><text x="39.9638%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (16 samples, 0.02%)</title><rect x="39.7669%" y="901" width="0.0157%" height="15" fill="rgb(253,192,32)" fg:x="40495" fg:w="16"/><text x="40.0169%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_or (16 samples, 0.02%)</title><rect x="39.7669%" y="885" width="0.0157%" height="15" fill="rgb(213,21,6)" fg:x="40495" fg:w="16"/><text x="40.0169%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (87 samples, 0.09%)</title><rect x="39.7011%" y="933" width="0.0854%" height="15" fill="rgb(243,151,13)" fg:x="40428" fg:w="87"/><text x="39.9511%" y="943.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (84 samples, 0.08%)</title><rect x="39.7040%" y="917" width="0.0825%" height="15" fill="rgb(233,165,41)" fg:x="40431" fg:w="84"/><text x="39.9540%" y="927.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (99 samples, 0.10%)</title><rect x="39.6991%" y="949" width="0.0972%" height="15" fill="rgb(246,176,45)" fg:x="40426" fg:w="99"/><text x="39.9491%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;&amp;T&gt;&gt;::extend (13 samples, 0.01%)</title><rect x="39.8042%" y="933" width="0.0128%" height="15" fill="rgb(217,170,52)" fg:x="40533" fg:w="13"/><text x="40.0542%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="39.8061%" y="917" width="0.0108%" height="15" fill="rgb(214,203,54)" fg:x="40535" fg:w="11"/><text x="40.0561%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.01%)</title><rect x="39.8061%" y="901" width="0.0108%" height="15" fill="rgb(248,215,49)" fg:x="40535" fg:w="11"/><text x="40.0561%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="39.8061%" y="885" width="0.0108%" height="15" fill="rgb(208,46,10)" fg:x="40535" fg:w="11"/><text x="40.0561%" y="895.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (29 samples, 0.03%)</title><rect x="39.7963%" y="949" width="0.0285%" height="15" fill="rgb(254,5,31)" fg:x="40525" fg:w="29"/><text x="40.0463%" y="959.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::clear (31 samples, 0.03%)</title><rect x="39.8435%" y="933" width="0.0304%" height="15" fill="rgb(222,104,33)" fg:x="40573" fg:w="31"/><text x="40.0935%" y="943.50"></text></g><g><title>fixedbitset::FixedBitSet::clear (31 samples, 0.03%)</title><rect x="39.8435%" y="917" width="0.0304%" height="15" fill="rgb(248,49,16)" fg:x="40573" fg:w="31"/><text x="40.0935%" y="927.50"></text></g><g><title>__memset_avx2_unaligned_erms (25 samples, 0.02%)</title><rect x="39.8494%" y="901" width="0.0246%" height="15" fill="rgb(232,198,41)" fg:x="40579" fg:w="25"/><text x="40.0994%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (25 samples, 0.02%)</title><rect x="39.9191%" y="885" width="0.0246%" height="15" fill="rgb(214,125,3)" fg:x="40650" fg:w="25"/><text x="40.1691%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="39.9191%" y="901" width="0.0363%" height="15" fill="rgb(229,220,28)" fg:x="40650" fg:w="37"/><text x="40.1691%" y="911.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (12 samples, 0.01%)</title><rect x="39.9436%" y="885" width="0.0118%" height="15" fill="rgb(222,64,37)" fg:x="40675" fg:w="12"/><text x="40.1936%" y="895.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (87 samples, 0.09%)</title><rect x="39.8739%" y="933" width="0.0854%" height="15" fill="rgb(249,184,13)" fg:x="40604" fg:w="87"/><text x="40.1239%" y="943.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (77 samples, 0.08%)</title><rect x="39.8837%" y="917" width="0.0756%" height="15" fill="rgb(252,176,6)" fg:x="40614" fg:w="77"/><text x="40.1337%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (147 samples, 0.14%)</title><rect x="39.8248%" y="949" width="0.1444%" height="15" fill="rgb(228,153,7)" fg:x="40554" fg:w="147"/><text x="40.0748%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (22 samples, 0.02%)</title><rect x="39.9770%" y="885" width="0.0216%" height="15" fill="rgb(242,193,5)" fg:x="40709" fg:w="22"/><text x="40.2270%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (21 samples, 0.02%)</title><rect x="39.9780%" y="869" width="0.0206%" height="15" fill="rgb(232,140,9)" fg:x="40710" fg:w="21"/><text x="40.2280%" y="879.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (21 samples, 0.02%)</title><rect x="39.9780%" y="853" width="0.0206%" height="15" fill="rgb(213,222,16)" fg:x="40710" fg:w="21"/><text x="40.2280%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (21 samples, 0.02%)</title><rect x="39.9780%" y="837" width="0.0206%" height="15" fill="rgb(222,75,50)" fg:x="40710" fg:w="21"/><text x="40.2280%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (20 samples, 0.02%)</title><rect x="39.9790%" y="821" width="0.0196%" height="15" fill="rgb(205,180,2)" fg:x="40711" fg:w="20"/><text x="40.2290%" y="831.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (18 samples, 0.02%)</title><rect x="39.9809%" y="805" width="0.0177%" height="15" fill="rgb(216,34,7)" fg:x="40713" fg:w="18"/><text x="40.2309%" y="815.50"></text></g><g><title>event_listener::Inner::lock (23 samples, 0.02%)</title><rect x="40.0006%" y="885" width="0.0226%" height="15" fill="rgb(253,16,32)" fg:x="40733" fg:w="23"/><text x="40.2506%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="40.0016%" y="869" width="0.0216%" height="15" fill="rgb(208,97,28)" fg:x="40734" fg:w="22"/><text x="40.2516%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="40.0035%" y="853" width="0.0196%" height="15" fill="rgb(225,92,11)" fg:x="40736" fg:w="20"/><text x="40.2535%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="40.0035%" y="837" width="0.0196%" height="15" fill="rgb(243,38,12)" fg:x="40736" fg:w="20"/><text x="40.2535%" y="847.50"></text></g><g><title>__GI___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="40.0035%" y="821" width="0.0196%" height="15" fill="rgb(208,139,16)" fg:x="40736" fg:w="20"/><text x="40.2535%" y="831.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (54 samples, 0.05%)</title><rect x="39.9751%" y="901" width="0.0530%" height="15" fill="rgb(227,24,9)" fg:x="40707" fg:w="54"/><text x="40.2251%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;usize&gt;&gt; (60 samples, 0.06%)</title><rect x="39.9751%" y="949" width="0.0589%" height="15" fill="rgb(206,62,11)" fg:x="40707" fg:w="60"/><text x="40.2251%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (60 samples, 0.06%)</title><rect x="39.9751%" y="933" width="0.0589%" height="15" fill="rgb(228,134,27)" fg:x="40707" fg:w="60"/><text x="40.2251%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (60 samples, 0.06%)</title><rect x="39.9751%" y="917" width="0.0589%" height="15" fill="rgb(205,55,33)" fg:x="40707" fg:w="60"/><text x="40.2251%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (34 samples, 0.03%)</title><rect x="40.0438%" y="933" width="0.0334%" height="15" fill="rgb(243,75,43)" fg:x="40777" fg:w="34"/><text x="40.2938%" y="943.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (34 samples, 0.03%)</title><rect x="40.0438%" y="917" width="0.0334%" height="15" fill="rgb(223,27,42)" fg:x="40777" fg:w="34"/><text x="40.2938%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (34 samples, 0.03%)</title><rect x="40.0438%" y="901" width="0.0334%" height="15" fill="rgb(232,189,33)" fg:x="40777" fg:w="34"/><text x="40.2938%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (33 samples, 0.03%)</title><rect x="40.0448%" y="885" width="0.0324%" height="15" fill="rgb(210,9,39)" fg:x="40778" fg:w="33"/><text x="40.2948%" y="895.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (26 samples, 0.03%)</title><rect x="40.0517%" y="869" width="0.0255%" height="15" fill="rgb(242,85,26)" fg:x="40785" fg:w="26"/><text x="40.3017%" y="879.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones::{{closure}} (24 samples, 0.02%)</title><rect x="40.0536%" y="853" width="0.0236%" height="15" fill="rgb(248,44,4)" fg:x="40787" fg:w="24"/><text x="40.3036%" y="863.50"></text></g><g><title>core::num::&lt;impl u32&gt;::count_ones (14 samples, 0.01%)</title><rect x="40.0634%" y="837" width="0.0137%" height="15" fill="rgb(250,96,46)" fg:x="40797" fg:w="14"/><text x="40.3134%" y="847.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (1,443 samples, 1.42%)</title><rect x="38.6641%" y="965" width="1.4171%" height="15" fill="rgb(229,116,26)" fg:x="39372" fg:w="1443"/><text x="38.9141%" y="975.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones (47 samples, 0.05%)</title><rect x="40.0350%" y="949" width="0.0462%" height="15" fill="rgb(246,94,34)" fg:x="40768" fg:w="47"/><text x="40.2850%" y="959.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (14 samples, 0.01%)</title><rect x="40.1214%" y="917" width="0.0137%" height="15" fill="rgb(251,73,21)" fg:x="40856" fg:w="14"/><text x="40.3714%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (14 samples, 0.01%)</title><rect x="40.1214%" y="901" width="0.0137%" height="15" fill="rgb(254,121,25)" fg:x="40856" fg:w="14"/><text x="40.3714%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.01%)</title><rect x="40.1224%" y="885" width="0.0128%" height="15" fill="rgb(215,161,49)" fg:x="40857" fg:w="13"/><text x="40.3724%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.01%)</title><rect x="40.1224%" y="869" width="0.0128%" height="15" fill="rgb(221,43,13)" fg:x="40857" fg:w="13"/><text x="40.3724%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (27 samples, 0.03%)</title><rect x="40.1420%" y="917" width="0.0265%" height="15" fill="rgb(249,5,37)" fg:x="40877" fg:w="27"/><text x="40.3920%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (25 samples, 0.02%)</title><rect x="40.1440%" y="901" width="0.0246%" height="15" fill="rgb(226,25,44)" fg:x="40879" fg:w="25"/><text x="40.3940%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (25 samples, 0.02%)</title><rect x="40.1440%" y="885" width="0.0246%" height="15" fill="rgb(238,189,16)" fg:x="40879" fg:w="25"/><text x="40.3940%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (22 samples, 0.02%)</title><rect x="40.1469%" y="869" width="0.0216%" height="15" fill="rgb(251,186,8)" fg:x="40882" fg:w="22"/><text x="40.3969%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (22 samples, 0.02%)</title><rect x="40.1469%" y="853" width="0.0216%" height="15" fill="rgb(254,34,31)" fg:x="40882" fg:w="22"/><text x="40.3969%" y="863.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (21 samples, 0.02%)</title><rect x="40.1479%" y="837" width="0.0206%" height="15" fill="rgb(225,215,27)" fg:x="40883" fg:w="21"/><text x="40.3979%" y="847.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (78 samples, 0.08%)</title><rect x="40.1145%" y="933" width="0.0766%" height="15" fill="rgb(221,192,48)" fg:x="40849" fg:w="78"/><text x="40.3645%" y="943.50"></text></g><g><title>event_listener::Inner::lock (22 samples, 0.02%)</title><rect x="40.1695%" y="917" width="0.0216%" height="15" fill="rgb(219,137,20)" fg:x="40905" fg:w="22"/><text x="40.4195%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (22 samples, 0.02%)</title><rect x="40.1695%" y="901" width="0.0216%" height="15" fill="rgb(219,84,11)" fg:x="40905" fg:w="22"/><text x="40.4195%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (21 samples, 0.02%)</title><rect x="40.1705%" y="885" width="0.0206%" height="15" fill="rgb(224,10,23)" fg:x="40906" fg:w="21"/><text x="40.4205%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="40.1715%" y="869" width="0.0196%" height="15" fill="rgb(248,22,39)" fg:x="40907" fg:w="20"/><text x="40.4215%" y="879.50"></text></g><g><title>__GI___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="40.1715%" y="853" width="0.0196%" height="15" fill="rgb(212,154,20)" fg:x="40907" fg:w="20"/><text x="40.4215%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (58 samples, 0.06%)</title><rect x="40.2127%" y="885" width="0.0570%" height="15" fill="rgb(236,199,50)" fg:x="40949" fg:w="58"/><text x="40.4627%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (58 samples, 0.06%)</title><rect x="40.2127%" y="869" width="0.0570%" height="15" fill="rgb(211,9,17)" fg:x="40949" fg:w="58"/><text x="40.4627%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (58 samples, 0.06%)</title><rect x="40.2127%" y="853" width="0.0570%" height="15" fill="rgb(243,216,36)" fg:x="40949" fg:w="58"/><text x="40.4627%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (80 samples, 0.08%)</title><rect x="40.2009%" y="917" width="0.0786%" height="15" fill="rgb(250,2,10)" fg:x="40937" fg:w="80"/><text x="40.4509%" y="927.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (68 samples, 0.07%)</title><rect x="40.2127%" y="901" width="0.0668%" height="15" fill="rgb(226,50,48)" fg:x="40949" fg:w="68"/><text x="40.4627%" y="911.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (108 samples, 0.11%)</title><rect x="40.1911%" y="933" width="0.1061%" height="15" fill="rgb(243,81,16)" fg:x="40927" fg:w="108"/><text x="40.4411%" y="943.50"></text></g><g><title>event_listener::Event::notify (18 samples, 0.02%)</title><rect x="40.2795%" y="917" width="0.0177%" height="15" fill="rgb(250,14,2)" fg:x="41017" fg:w="18"/><text x="40.5295%" y="927.50"></text></g><g><title>event_listener::full_fence (18 samples, 0.02%)</title><rect x="40.2795%" y="901" width="0.0177%" height="15" fill="rgb(233,135,29)" fg:x="41017" fg:w="18"/><text x="40.5295%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (17 samples, 0.02%)</title><rect x="40.2805%" y="885" width="0.0167%" height="15" fill="rgb(224,64,43)" fg:x="41018" fg:w="17"/><text x="40.5305%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (17 samples, 0.02%)</title><rect x="40.2805%" y="869" width="0.0167%" height="15" fill="rgb(238,84,13)" fg:x="41018" fg:w="17"/><text x="40.5305%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.02%)</title><rect x="40.2805%" y="853" width="0.0167%" height="15" fill="rgb(253,48,26)" fg:x="41018" fg:w="17"/><text x="40.5305%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (74 samples, 0.07%)</title><rect x="40.3001%" y="917" width="0.0727%" height="15" fill="rgb(205,223,31)" fg:x="41038" fg:w="74"/><text x="40.5501%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (74 samples, 0.07%)</title><rect x="40.3001%" y="901" width="0.0727%" height="15" fill="rgb(221,41,32)" fg:x="41038" fg:w="74"/><text x="40.5501%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (74 samples, 0.07%)</title><rect x="40.3001%" y="885" width="0.0727%" height="15" fill="rgb(213,158,31)" fg:x="41038" fg:w="74"/><text x="40.5501%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (28 samples, 0.03%)</title><rect x="40.3728%" y="917" width="0.0275%" height="15" fill="rgb(245,126,43)" fg:x="41112" fg:w="28"/><text x="40.6228%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (28 samples, 0.03%)</title><rect x="40.3728%" y="901" width="0.0275%" height="15" fill="rgb(227,7,22)" fg:x="41112" fg:w="28"/><text x="40.6228%" y="911.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="40.3728%" y="885" width="0.0275%" height="15" fill="rgb(252,90,44)" fg:x="41112" fg:w="28"/><text x="40.6228%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (28 samples, 0.03%)</title><rect x="40.3728%" y="869" width="0.0275%" height="15" fill="rgb(253,91,0)" fg:x="41112" fg:w="28"/><text x="40.6228%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (27 samples, 0.03%)</title><rect x="40.3738%" y="853" width="0.0265%" height="15" fill="rgb(252,175,49)" fg:x="41113" fg:w="27"/><text x="40.6238%" y="863.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (27 samples, 0.03%)</title><rect x="40.3738%" y="837" width="0.0265%" height="15" fill="rgb(246,150,1)" fg:x="41113" fg:w="27"/><text x="40.6238%" y="847.50"></text></g><g><title>event_listener::Inner::lock (58 samples, 0.06%)</title><rect x="40.4003%" y="917" width="0.0570%" height="15" fill="rgb(241,192,25)" fg:x="41140" fg:w="58"/><text x="40.6503%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (58 samples, 0.06%)</title><rect x="40.4003%" y="901" width="0.0570%" height="15" fill="rgb(239,187,11)" fg:x="41140" fg:w="58"/><text x="40.6503%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (55 samples, 0.05%)</title><rect x="40.4032%" y="885" width="0.0540%" height="15" fill="rgb(218,202,51)" fg:x="41143" fg:w="55"/><text x="40.6532%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (54 samples, 0.05%)</title><rect x="40.4042%" y="869" width="0.0530%" height="15" fill="rgb(225,176,8)" fg:x="41144" fg:w="54"/><text x="40.6542%" y="879.50"></text></g><g><title>__GI___pthread_mutex_lock (54 samples, 0.05%)</title><rect x="40.4042%" y="853" width="0.0530%" height="15" fill="rgb(219,122,41)" fg:x="41144" fg:w="54"/><text x="40.6542%" y="863.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (387 samples, 0.38%)</title><rect x="40.1017%" y="949" width="0.3800%" height="15" fill="rgb(248,140,20)" fg:x="40836" fg:w="387"/><text x="40.3517%" y="959.50"></text></g><g><title>event_listener::Event::listen (187 samples, 0.18%)</title><rect x="40.2981%" y="933" width="0.1836%" height="15" fill="rgb(245,41,37)" fg:x="41036" fg:w="187"/><text x="40.5481%" y="943.50"></text></g><g><title>event_listener::full_fence (18 samples, 0.02%)</title><rect x="40.4641%" y="917" width="0.0177%" height="15" fill="rgb(235,82,39)" fg:x="41205" fg:w="18"/><text x="40.7141%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (18 samples, 0.02%)</title><rect x="40.4641%" y="901" width="0.0177%" height="15" fill="rgb(230,108,42)" fg:x="41205" fg:w="18"/><text x="40.7141%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (18 samples, 0.02%)</title><rect x="40.4641%" y="885" width="0.0177%" height="15" fill="rgb(215,150,50)" fg:x="41205" fg:w="18"/><text x="40.7141%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (18 samples, 0.02%)</title><rect x="40.4641%" y="869" width="0.0177%" height="15" fill="rgb(233,212,5)" fg:x="41205" fg:w="18"/><text x="40.7141%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (41 samples, 0.04%)</title><rect x="40.5112%" y="885" width="0.0403%" height="15" fill="rgb(245,80,22)" fg:x="41253" fg:w="41"/><text x="40.7612%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (41 samples, 0.04%)</title><rect x="40.5112%" y="869" width="0.0403%" height="15" fill="rgb(238,129,16)" fg:x="41253" fg:w="41"/><text x="40.7612%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (27 samples, 0.03%)</title><rect x="40.5525%" y="885" width="0.0265%" height="15" fill="rgb(240,19,0)" fg:x="41295" fg:w="27"/><text x="40.8025%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (27 samples, 0.03%)</title><rect x="40.5525%" y="869" width="0.0265%" height="15" fill="rgb(232,42,35)" fg:x="41295" fg:w="27"/><text x="40.8025%" y="879.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (101 samples, 0.10%)</title><rect x="40.4906%" y="917" width="0.0992%" height="15" fill="rgb(223,130,24)" fg:x="41232" fg:w="101"/><text x="40.7406%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (91 samples, 0.09%)</title><rect x="40.5004%" y="901" width="0.0894%" height="15" fill="rgb(237,16,22)" fg:x="41242" fg:w="91"/><text x="40.7504%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (11 samples, 0.01%)</title><rect x="40.5790%" y="885" width="0.0108%" height="15" fill="rgb(248,192,20)" fg:x="41322" fg:w="11"/><text x="40.8290%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (11 samples, 0.01%)</title><rect x="40.5790%" y="869" width="0.0108%" height="15" fill="rgb(233,167,2)" fg:x="41322" fg:w="11"/><text x="40.8290%" y="879.50"></text></g><g><title>event_listener::Inner::lock (18 samples, 0.02%)</title><rect x="40.6055%" y="901" width="0.0177%" height="15" fill="rgb(252,71,44)" fg:x="41349" fg:w="18"/><text x="40.8555%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (18 samples, 0.02%)</title><rect x="40.6055%" y="885" width="0.0177%" height="15" fill="rgb(238,37,47)" fg:x="41349" fg:w="18"/><text x="40.8555%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (17 samples, 0.02%)</title><rect x="40.6065%" y="869" width="0.0167%" height="15" fill="rgb(214,202,54)" fg:x="41350" fg:w="17"/><text x="40.8565%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (17 samples, 0.02%)</title><rect x="40.6065%" y="853" width="0.0167%" height="15" fill="rgb(254,165,40)" fg:x="41350" fg:w="17"/><text x="40.8565%" y="863.50"></text></g><g><title>__GI___pthread_mutex_lock (17 samples, 0.02%)</title><rect x="40.6065%" y="837" width="0.0167%" height="15" fill="rgb(246,173,38)" fg:x="41350" fg:w="17"/><text x="40.8565%" y="847.50"></text></g><g><title>core::task::wake::Waker::wake (21 samples, 0.02%)</title><rect x="40.6409%" y="837" width="0.0206%" height="15" fill="rgb(215,3,27)" fg:x="41385" fg:w="21"/><text x="40.8909%" y="847.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (21 samples, 0.02%)</title><rect x="40.6409%" y="821" width="0.0206%" height="15" fill="rgb(239,169,51)" fg:x="41385" fg:w="21"/><text x="40.8909%" y="831.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (20 samples, 0.02%)</title><rect x="40.6418%" y="805" width="0.0196%" height="15" fill="rgb(212,5,25)" fg:x="41386" fg:w="20"/><text x="40.8918%" y="815.50"></text></g><g><title>parking::Unparker::unpark (20 samples, 0.02%)</title><rect x="40.6418%" y="789" width="0.0196%" height="15" fill="rgb(243,45,17)" fg:x="41386" fg:w="20"/><text x="40.8918%" y="799.50"></text></g><g><title>parking::Inner::unpark (16 samples, 0.02%)</title><rect x="40.6458%" y="773" width="0.0157%" height="15" fill="rgb(242,97,9)" fg:x="41390" fg:w="16"/><text x="40.8958%" y="783.50"></text></g><g><title>async_executor::State::notify (47 samples, 0.05%)</title><rect x="40.6261%" y="853" width="0.0462%" height="15" fill="rgb(228,71,31)" fg:x="41370" fg:w="47"/><text x="40.8761%" y="863.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="40.6615%" y="837" width="0.0108%" height="15" fill="rgb(252,184,16)" fg:x="41406" fg:w="11"/><text x="40.9115%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="40.6615%" y="821" width="0.0108%" height="15" fill="rgb(236,169,46)" fg:x="41406" fg:w="11"/><text x="40.9115%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (12 samples, 0.01%)</title><rect x="40.6831%" y="789" width="0.0118%" height="15" fill="rgb(207,17,47)" fg:x="41428" fg:w="12"/><text x="40.9331%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.01%)</title><rect x="40.6831%" y="773" width="0.0118%" height="15" fill="rgb(206,201,28)" fg:x="41428" fg:w="12"/><text x="40.9331%" y="783.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (23 samples, 0.02%)</title><rect x="40.6772%" y="837" width="0.0226%" height="15" fill="rgb(224,184,23)" fg:x="41422" fg:w="23"/><text x="40.9272%" y="847.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (23 samples, 0.02%)</title><rect x="40.6772%" y="821" width="0.0226%" height="15" fill="rgb(208,139,48)" fg:x="41422" fg:w="23"/><text x="40.9272%" y="831.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (21 samples, 0.02%)</title><rect x="40.6792%" y="805" width="0.0206%" height="15" fill="rgb(208,130,10)" fg:x="41424" fg:w="21"/><text x="40.9292%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (11 samples, 0.01%)</title><rect x="40.6998%" y="837" width="0.0108%" height="15" fill="rgb(211,213,45)" fg:x="41445" fg:w="11"/><text x="40.9498%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (11 samples, 0.01%)</title><rect x="40.6998%" y="821" width="0.0108%" height="15" fill="rgb(235,100,30)" fg:x="41445" fg:w="11"/><text x="40.9498%" y="831.50"></text></g><g><title>event_listener::List::notify (90 samples, 0.09%)</title><rect x="40.6232%" y="901" width="0.0884%" height="15" fill="rgb(206,144,31)" fg:x="41367" fg:w="90"/><text x="40.8732%" y="911.50"></text></g><g><title>core::task::wake::Waker::wake (87 samples, 0.09%)</title><rect x="40.6261%" y="885" width="0.0854%" height="15" fill="rgb(224,200,26)" fg:x="41370" fg:w="87"/><text x="40.8761%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (87 samples, 0.09%)</title><rect x="40.6261%" y="869" width="0.0854%" height="15" fill="rgb(247,104,53)" fg:x="41370" fg:w="87"/><text x="40.8761%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (35 samples, 0.03%)</title><rect x="40.6772%" y="853" width="0.0344%" height="15" fill="rgb(220,14,17)" fg:x="41422" fg:w="35"/><text x="40.9272%" y="863.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (248 samples, 0.24%)</title><rect x="40.4867%" y="933" width="0.2435%" height="15" fill="rgb(230,140,40)" fg:x="41228" fg:w="248"/><text x="40.7367%" y="943.50"></text></g><g><title>event_listener::Event::notify (143 samples, 0.14%)</title><rect x="40.5898%" y="917" width="0.1404%" height="15" fill="rgb(229,2,41)" fg:x="41333" fg:w="143"/><text x="40.8398%" y="927.50"></text></g><g><title>event_listener::full_fence (19 samples, 0.02%)</title><rect x="40.7116%" y="901" width="0.0187%" height="15" fill="rgb(232,89,16)" fg:x="41457" fg:w="19"/><text x="40.9616%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (19 samples, 0.02%)</title><rect x="40.7116%" y="885" width="0.0187%" height="15" fill="rgb(247,59,52)" fg:x="41457" fg:w="19"/><text x="40.9616%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (19 samples, 0.02%)</title><rect x="40.7116%" y="869" width="0.0187%" height="15" fill="rgb(226,110,21)" fg:x="41457" fg:w="19"/><text x="40.9616%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (19 samples, 0.02%)</title><rect x="40.7116%" y="853" width="0.0187%" height="15" fill="rgb(224,176,43)" fg:x="41457" fg:w="19"/><text x="40.9616%" y="863.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (269 samples, 0.26%)</title><rect x="40.4818%" y="949" width="0.2642%" height="15" fill="rgb(221,73,6)" fg:x="41223" fg:w="269"/><text x="40.7318%" y="959.50"></text></g><g><title>event_listener::Event::notify (15 samples, 0.01%)</title><rect x="40.7312%" y="933" width="0.0147%" height="15" fill="rgb(232,78,19)" fg:x="41477" fg:w="15"/><text x="40.9812%" y="943.50"></text></g><g><title>event_listener::full_fence (15 samples, 0.01%)</title><rect x="40.7312%" y="917" width="0.0147%" height="15" fill="rgb(233,112,48)" fg:x="41477" fg:w="15"/><text x="40.9812%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (14 samples, 0.01%)</title><rect x="40.7322%" y="901" width="0.0137%" height="15" fill="rgb(243,131,47)" fg:x="41478" fg:w="14"/><text x="40.9822%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (14 samples, 0.01%)</title><rect x="40.7322%" y="885" width="0.0137%" height="15" fill="rgb(226,51,1)" fg:x="41478" fg:w="14"/><text x="40.9822%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.01%)</title><rect x="40.7322%" y="869" width="0.0137%" height="15" fill="rgb(247,58,7)" fg:x="41478" fg:w="14"/><text x="40.9822%" y="879.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (11 samples, 0.01%)</title><rect x="40.7626%" y="869" width="0.0108%" height="15" fill="rgb(209,7,32)" fg:x="41509" fg:w="11"/><text x="41.0126%" y="879.50"></text></g><g><title>&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (13 samples, 0.01%)</title><rect x="40.7617%" y="917" width="0.0128%" height="15" fill="rgb(209,39,41)" fg:x="41508" fg:w="13"/><text x="41.0117%" y="927.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (13 samples, 0.01%)</title><rect x="40.7617%" y="901" width="0.0128%" height="15" fill="rgb(226,182,46)" fg:x="41508" fg:w="13"/><text x="41.0117%" y="911.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (13 samples, 0.01%)</title><rect x="40.7617%" y="885" width="0.0128%" height="15" fill="rgb(230,219,10)" fg:x="41508" fg:w="13"/><text x="41.0117%" y="895.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update_system (15 samples, 0.01%)</title><rect x="40.7754%" y="885" width="0.0147%" height="15" fill="rgb(227,175,30)" fg:x="41522" fg:w="15"/><text x="41.0254%" y="895.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update (13 samples, 0.01%)</title><rect x="40.7774%" y="869" width="0.0128%" height="15" fill="rgb(217,2,50)" fg:x="41524" fg:w="13"/><text x="41.0274%" y="879.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (12 samples, 0.01%)</title><rect x="40.8137%" y="805" width="0.0118%" height="15" fill="rgb(229,160,0)" fg:x="41561" fg:w="12"/><text x="41.0637%" y="815.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (15 samples, 0.01%)</title><rect x="40.8117%" y="853" width="0.0147%" height="15" fill="rgb(207,78,37)" fg:x="41559" fg:w="15"/><text x="41.0617%" y="863.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (13 samples, 0.01%)</title><rect x="40.8137%" y="837" width="0.0128%" height="15" fill="rgb(225,57,0)" fg:x="41561" fg:w="13"/><text x="41.0637%" y="847.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (13 samples, 0.01%)</title><rect x="40.8137%" y="821" width="0.0128%" height="15" fill="rgb(232,154,2)" fg:x="41561" fg:w="13"/><text x="41.0637%" y="831.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="40.8078%" y="869" width="0.0196%" height="15" fill="rgb(241,212,25)" fg:x="41555" fg:w="20"/><text x="41.0578%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; (13 samples, 0.01%)</title><rect x="41.0327%" y="789" width="0.0128%" height="15" fill="rgb(226,69,20)" fg:x="41784" fg:w="13"/><text x="41.2827%" y="799.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="41.0327%" y="773" width="0.0128%" height="15" fill="rgb(247,184,54)" fg:x="41784" fg:w="13"/><text x="41.2827%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::draw::RenderCommand]&gt; (456 samples, 0.45%)</title><rect x="40.8383%" y="821" width="0.4478%" height="15" fill="rgb(210,145,0)" fg:x="41586" fg:w="456"/><text x="41.0883%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::draw::RenderCommand&gt; (450 samples, 0.44%)</title><rect x="40.8441%" y="805" width="0.4419%" height="15" fill="rgb(253,82,12)" fg:x="41592" fg:w="450"/><text x="41.0941%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (245 samples, 0.24%)</title><rect x="41.0455%" y="789" width="0.2406%" height="15" fill="rgb(245,42,11)" fg:x="41797" fg:w="245"/><text x="41.2955%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (238 samples, 0.23%)</title><rect x="41.0523%" y="773" width="0.2337%" height="15" fill="rgb(219,147,32)" fg:x="41804" fg:w="238"/><text x="41.3023%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (238 samples, 0.23%)</title><rect x="41.0523%" y="757" width="0.2337%" height="15" fill="rgb(246,12,7)" fg:x="41804" fg:w="238"/><text x="41.3023%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (236 samples, 0.23%)</title><rect x="41.0543%" y="741" width="0.2318%" height="15" fill="rgb(243,50,9)" fg:x="41806" fg:w="236"/><text x="41.3043%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (236 samples, 0.23%)</title><rect x="41.0543%" y="725" width="0.2318%" height="15" fill="rgb(219,149,6)" fg:x="41806" fg:w="236"/><text x="41.3043%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (465 samples, 0.46%)</title><rect x="40.8304%" y="853" width="0.4566%" height="15" fill="rgb(241,51,42)" fg:x="41578" fg:w="465"/><text x="41.0804%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (465 samples, 0.46%)</title><rect x="40.8304%" y="837" width="0.4566%" height="15" fill="rgb(226,128,27)" fg:x="41578" fg:w="465"/><text x="41.0804%" y="847.50"></text></g><g><title>bevy_render::draw::Draw::clear_render_commands (466 samples, 0.46%)</title><rect x="40.8304%" y="869" width="0.4576%" height="15" fill="rgb(244,144,4)" fg:x="41578" fg:w="466"/><text x="41.0804%" y="879.50"></text></g><g><title>bevy_render::draw::clear_draw_system (492 samples, 0.48%)</title><rect x="40.8058%" y="885" width="0.4832%" height="15" fill="rgb(221,4,13)" fg:x="41553" fg:w="492"/><text x="41.0558%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (29 samples, 0.03%)</title><rect x="41.2998%" y="869" width="0.0285%" height="15" fill="rgb(208,170,28)" fg:x="42056" fg:w="29"/><text x="41.5498%" y="879.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (21 samples, 0.02%)</title><rect x="41.3312%" y="805" width="0.0206%" height="15" fill="rgb(226,131,13)" fg:x="42088" fg:w="21"/><text x="41.5812%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (21 samples, 0.02%)</title><rect x="41.3312%" y="789" width="0.0206%" height="15" fill="rgb(215,72,41)" fg:x="42088" fg:w="21"/><text x="41.5812%" y="799.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (21 samples, 0.02%)</title><rect x="41.3312%" y="773" width="0.0206%" height="15" fill="rgb(243,108,20)" fg:x="42088" fg:w="21"/><text x="41.5812%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (21 samples, 0.02%)</title><rect x="41.3312%" y="757" width="0.0206%" height="15" fill="rgb(230,189,17)" fg:x="42088" fg:w="21"/><text x="41.5812%" y="767.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (24 samples, 0.02%)</title><rect x="41.3293%" y="853" width="0.0236%" height="15" fill="rgb(220,50,17)" fg:x="42086" fg:w="24"/><text x="41.5793%" y="863.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (22 samples, 0.02%)</title><rect x="41.3312%" y="837" width="0.0216%" height="15" fill="rgb(248,152,48)" fg:x="42088" fg:w="22"/><text x="41.5812%" y="847.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (22 samples, 0.02%)</title><rect x="41.3312%" y="821" width="0.0216%" height="15" fill="rgb(244,91,11)" fg:x="42088" fg:w="22"/><text x="41.5812%" y="831.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.03%)</title><rect x="41.3283%" y="869" width="0.0255%" height="15" fill="rgb(220,157,5)" fg:x="42085" fg:w="26"/><text x="41.5783%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (14 samples, 0.01%)</title><rect x="41.3852%" y="725" width="0.0137%" height="15" fill="rgb(253,137,8)" fg:x="42143" fg:w="14"/><text x="41.6352%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;,hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;::clear::{{closure}}&gt;&gt; (41 samples, 0.04%)</title><rect x="41.3666%" y="805" width="0.0403%" height="15" fill="rgb(217,137,51)" fg:x="42124" fg:w="41"/><text x="41.6166%" y="815.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="41.3666%" y="789" width="0.0403%" height="15" fill="rgb(218,209,53)" fg:x="42124" fg:w="41"/><text x="41.6166%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (41 samples, 0.04%)</title><rect x="41.3666%" y="773" width="0.0403%" height="15" fill="rgb(249,137,25)" fg:x="42124" fg:w="41"/><text x="41.6166%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (41 samples, 0.04%)</title><rect x="41.3666%" y="757" width="0.0403%" height="15" fill="rgb(239,155,26)" fg:x="42124" fg:w="41"/><text x="41.6166%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (41 samples, 0.04%)</title><rect x="41.3666%" y="741" width="0.0403%" height="15" fill="rgb(227,85,46)" fg:x="42124" fg:w="41"/><text x="41.6166%" y="751.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (371 samples, 0.36%)</title><rect x="41.2890%" y="885" width="0.3643%" height="15" fill="rgb(251,107,43)" fg:x="42045" fg:w="371"/><text x="41.5390%" y="895.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (294 samples, 0.29%)</title><rect x="41.3646%" y="869" width="0.2887%" height="15" fill="rgb(234,170,33)" fg:x="42122" fg:w="294"/><text x="41.6146%" y="879.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (294 samples, 0.29%)</title><rect x="41.3646%" y="853" width="0.2887%" height="15" fill="rgb(206,29,35)" fg:x="42122" fg:w="294"/><text x="41.6146%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (294 samples, 0.29%)</title><rect x="41.3646%" y="837" width="0.2887%" height="15" fill="rgb(227,138,25)" fg:x="42122" fg:w="294"/><text x="41.6146%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (292 samples, 0.29%)</title><rect x="41.3666%" y="821" width="0.2867%" height="15" fill="rgb(249,131,35)" fg:x="42124" fg:w="292"/><text x="41.6166%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (251 samples, 0.25%)</title><rect x="41.4068%" y="805" width="0.2465%" height="15" fill="rgb(239,6,40)" fg:x="42165" fg:w="251"/><text x="41.6568%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (12 samples, 0.01%)</title><rect x="41.6533%" y="885" width="0.0118%" height="15" fill="rgb(246,136,47)" fg:x="42416" fg:w="12"/><text x="41.9033%" y="895.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (20 samples, 0.02%)</title><rect x="41.6916%" y="805" width="0.0196%" height="15" fill="rgb(253,58,26)" fg:x="42455" fg:w="20"/><text x="41.9416%" y="815.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (37 samples, 0.04%)</title><rect x="41.6906%" y="821" width="0.0363%" height="15" fill="rgb(237,141,10)" fg:x="42454" fg:w="37"/><text x="41.9406%" y="831.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (47 samples, 0.05%)</title><rect x="41.6818%" y="837" width="0.0462%" height="15" fill="rgb(234,156,12)" fg:x="42445" fg:w="47"/><text x="41.9318%" y="847.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.05%)</title><rect x="41.6759%" y="869" width="0.0530%" height="15" fill="rgb(243,224,36)" fg:x="42439" fg:w="54"/><text x="41.9259%" y="879.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (54 samples, 0.05%)</title><rect x="41.6759%" y="853" width="0.0530%" height="15" fill="rgb(205,229,51)" fg:x="42439" fg:w="54"/><text x="41.9259%" y="863.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (995 samples, 0.98%)</title><rect x="40.7617%" y="933" width="0.9771%" height="15" fill="rgb(223,189,4)" fg:x="41508" fg:w="995"/><text x="41.0117%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (982 samples, 0.96%)</title><rect x="40.7744%" y="917" width="0.9643%" height="15" fill="rgb(249,167,54)" fg:x="41521" fg:w="982"/><text x="41.0244%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (981 samples, 0.96%)</title><rect x="40.7754%" y="901" width="0.9634%" height="15" fill="rgb(218,34,28)" fg:x="41522" fg:w="981"/><text x="41.0254%" y="911.50"></text></g><g><title>engine::engine::render::animate_sprite_system (75 samples, 0.07%)</title><rect x="41.6651%" y="885" width="0.0737%" height="15" fill="rgb(232,109,42)" fg:x="42428" fg:w="75"/><text x="41.9151%" y="895.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (15 samples, 0.01%)</title><rect x="41.7466%" y="901" width="0.0147%" height="15" fill="rgb(248,214,46)" fg:x="42511" fg:w="15"/><text x="41.9966%" y="911.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (14 samples, 0.01%)</title><rect x="41.7476%" y="885" width="0.0137%" height="15" fill="rgb(244,216,40)" fg:x="42512" fg:w="14"/><text x="41.9976%" y="895.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (14 samples, 0.01%)</title><rect x="41.7476%" y="869" width="0.0137%" height="15" fill="rgb(231,226,31)" fg:x="42512" fg:w="14"/><text x="41.9976%" y="879.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (24 samples, 0.02%)</title><rect x="41.7388%" y="917" width="0.0236%" height="15" fill="rgb(238,38,43)" fg:x="42503" fg:w="24"/><text x="41.9888%" y="927.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="41.7731%" y="837" width="0.0167%" height="15" fill="rgb(208,88,43)" fg:x="42538" fg:w="17"/><text x="42.0231%" y="847.50"></text></g><g><title>bevy_app::event::EventWriter&lt;T&gt;::send_batch (29 samples, 0.03%)</title><rect x="41.7623%" y="869" width="0.0285%" height="15" fill="rgb(205,136,37)" fg:x="42527" fg:w="29"/><text x="42.0123%" y="879.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::extend (23 samples, 0.02%)</title><rect x="41.7682%" y="853" width="0.0226%" height="15" fill="rgb(237,34,14)" fg:x="42533" fg:w="23"/><text x="42.0182%" y="863.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::asset_event_system (52 samples, 0.05%)</title><rect x="41.7623%" y="885" width="0.0511%" height="15" fill="rgb(236,193,44)" fg:x="42527" fg:w="52"/><text x="42.0123%" y="895.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::drain (23 samples, 0.02%)</title><rect x="41.7908%" y="869" width="0.0226%" height="15" fill="rgb(231,48,10)" fg:x="42556" fg:w="23"/><text x="42.0408%" y="879.50"></text></g><g><title>&lt;T as downcast_rs::Downcast&gt;::as_any (11 samples, 0.01%)</title><rect x="41.8213%" y="837" width="0.0108%" height="15" fill="rgb(213,141,34)" fg:x="42587" fg:w="11"/><text x="42.0713%" y="847.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (16 samples, 0.02%)</title><rect x="41.8213%" y="853" width="0.0157%" height="15" fill="rgb(249,130,34)" fg:x="42587" fg:w="16"/><text x="42.0713%" y="863.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (34 samples, 0.03%)</title><rect x="41.8134%" y="885" width="0.0334%" height="15" fill="rgb(219,42,41)" fg:x="42579" fg:w="34"/><text x="42.0634%" y="895.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (34 samples, 0.03%)</title><rect x="41.8134%" y="869" width="0.0334%" height="15" fill="rgb(224,100,54)" fg:x="42579" fg:w="34"/><text x="42.0634%" y="879.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (155 samples, 0.15%)</title><rect x="41.7388%" y="933" width="0.1522%" height="15" fill="rgb(229,200,27)" fg:x="42503" fg:w="155"/><text x="41.9888%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (131 samples, 0.13%)</title><rect x="41.7623%" y="917" width="0.1286%" height="15" fill="rgb(217,118,10)" fg:x="42527" fg:w="131"/><text x="42.0123%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (131 samples, 0.13%)</title><rect x="41.7623%" y="901" width="0.1286%" height="15" fill="rgb(206,22,3)" fg:x="42527" fg:w="131"/><text x="42.0123%" y="911.50"></text></g><g><title>bevy_ui::update::ui_z_system (12 samples, 0.01%)</title><rect x="41.9067%" y="885" width="0.0118%" height="15" fill="rgb(232,163,46)" fg:x="42674" fg:w="12"/><text x="42.1567%" y="895.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::plan_path (18 samples, 0.02%)</title><rect x="41.9332%" y="885" width="0.0177%" height="15" fill="rgb(206,95,13)" fg:x="42701" fg:w="18"/><text x="42.1832%" y="895.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (67 samples, 0.07%)</title><rect x="41.8910%" y="933" width="0.0658%" height="15" fill="rgb(253,154,18)" fg:x="42658" fg:w="67"/><text x="42.1410%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (64 samples, 0.06%)</title><rect x="41.8939%" y="917" width="0.0628%" height="15" fill="rgb(219,32,23)" fg:x="42661" fg:w="64"/><text x="42.1439%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (63 samples, 0.06%)</title><rect x="41.8949%" y="901" width="0.0619%" height="15" fill="rgb(230,191,45)" fg:x="42662" fg:w="63"/><text x="42.1449%" y="911.50"></text></g><g><title>bevy_render::camera::camera::camera_system (16 samples, 0.02%)</title><rect x="41.9695%" y="885" width="0.0157%" height="15" fill="rgb(229,64,36)" fg:x="42738" fg:w="16"/><text x="42.2195%" y="895.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::OptionFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (22 samples, 0.02%)</title><rect x="42.0314%" y="837" width="0.0216%" height="15" fill="rgb(205,129,25)" fg:x="42801" fg:w="22"/><text x="42.2814%" y="847.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadState&lt;T&gt; as bevy_ecs::query::fetch::FetchState&gt;::matches_table (22 samples, 0.02%)</title><rect x="42.0314%" y="821" width="0.0216%" height="15" fill="rgb(254,112,7)" fg:x="42801" fg:w="22"/><text x="42.2814%" y="831.50"></text></g><g><title>bevy_ecs::storage::table::Table::has_column (22 samples, 0.02%)</title><rect x="42.0314%" y="805" width="0.0216%" height="15" fill="rgb(226,53,48)" fg:x="42801" fg:w="22"/><text x="42.2814%" y="815.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::contains (22 samples, 0.02%)</title><rect x="42.0314%" y="789" width="0.0216%" height="15" fill="rgb(214,153,38)" fg:x="42801" fg:w="22"/><text x="42.2814%" y="799.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::contains (22 samples, 0.02%)</title><rect x="42.0314%" y="773" width="0.0216%" height="15" fill="rgb(243,101,7)" fg:x="42801" fg:w="22"/><text x="42.2814%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.02%)</title><rect x="42.0314%" y="757" width="0.0216%" height="15" fill="rgb(240,140,22)" fg:x="42801" fg:w="22"/><text x="42.2814%" y="767.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::contains::{{closure}} (21 samples, 0.02%)</title><rect x="42.0324%" y="741" width="0.0206%" height="15" fill="rgb(235,114,2)" fg:x="42802" fg:w="21"/><text x="42.2824%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (21 samples, 0.02%)</title><rect x="42.0324%" y="725" width="0.0206%" height="15" fill="rgb(242,59,12)" fg:x="42802" fg:w="21"/><text x="42.2824%" y="735.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_table (28 samples, 0.03%)</title><rect x="42.0314%" y="853" width="0.0275%" height="15" fill="rgb(252,134,9)" fg:x="42801" fg:w="28"/><text x="42.2814%" y="863.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.04%)</title><rect x="42.0265%" y="869" width="0.0412%" height="15" fill="rgb(236,4,44)" fg:x="42796" fg:w="42"/><text x="42.2765%" y="879.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::archetype_filter_fetch (33 samples, 0.03%)</title><rect x="42.0844%" y="837" width="0.0324%" height="15" fill="rgb(254,172,41)" fg:x="42855" fg:w="33"/><text x="42.3344%" y="847.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (33 samples, 0.03%)</title><rect x="42.0844%" y="821" width="0.0324%" height="15" fill="rgb(244,63,20)" fg:x="42855" fg:w="33"/><text x="42.3344%" y="831.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::is_changed (28 samples, 0.03%)</title><rect x="42.0893%" y="805" width="0.0275%" height="15" fill="rgb(250,73,31)" fg:x="42860" fg:w="28"/><text x="42.3393%" y="815.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (27 samples, 0.03%)</title><rect x="42.0903%" y="789" width="0.0265%" height="15" fill="rgb(241,38,36)" fg:x="42861" fg:w="27"/><text x="42.3403%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (13 samples, 0.01%)</title><rect x="42.1424%" y="773" width="0.0128%" height="15" fill="rgb(245,211,2)" fg:x="42914" fg:w="13"/><text x="42.3924%" y="783.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (13 samples, 0.01%)</title><rect x="42.1424%" y="757" width="0.0128%" height="15" fill="rgb(206,120,28)" fg:x="42914" fg:w="13"/><text x="42.3924%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="42.1424%" y="741" width="0.0128%" height="15" fill="rgb(211,59,34)" fg:x="42914" fg:w="13"/><text x="42.3924%" y="751.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (25 samples, 0.02%)</title><rect x="42.1424%" y="789" width="0.0246%" height="15" fill="rgb(233,168,5)" fg:x="42914" fg:w="25"/><text x="42.3924%" y="799.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (42 samples, 0.04%)</title><rect x="42.1286%" y="837" width="0.0412%" height="15" fill="rgb(234,33,13)" fg:x="42900" fg:w="42"/><text x="42.3786%" y="847.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (32 samples, 0.03%)</title><rect x="42.1384%" y="821" width="0.0314%" height="15" fill="rgb(231,150,26)" fg:x="42910" fg:w="32"/><text x="42.3884%" y="831.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (28 samples, 0.03%)</title><rect x="42.1424%" y="805" width="0.0275%" height="15" fill="rgb(217,191,4)" fg:x="42914" fg:w="28"/><text x="42.3924%" y="815.50"></text></g><g><title>bevy_ecs::entity::Entities::get (17 samples, 0.02%)</title><rect x="42.1699%" y="837" width="0.0167%" height="15" fill="rgb(246,198,38)" fg:x="42942" fg:w="17"/><text x="42.4199%" y="847.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (129 samples, 0.13%)</title><rect x="42.0677%" y="869" width="0.1267%" height="15" fill="rgb(245,64,37)" fg:x="42838" fg:w="129"/><text x="42.3177%" y="879.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (127 samples, 0.12%)</title><rect x="42.0697%" y="853" width="0.1247%" height="15" fill="rgb(250,30,36)" fg:x="42840" fg:w="127"/><text x="42.3197%" y="863.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (221 samples, 0.22%)</title><rect x="41.9902%" y="885" width="0.2170%" height="15" fill="rgb(217,86,53)" fg:x="42759" fg:w="221"/><text x="42.2402%" y="895.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (12 samples, 0.01%)</title><rect x="42.2386%" y="789" width="0.0118%" height="15" fill="rgb(228,157,16)" fg:x="43012" fg:w="12"/><text x="42.4886%" y="799.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="42.2396%" y="773" width="0.0108%" height="15" fill="rgb(217,59,31)" fg:x="43013" fg:w="11"/><text x="42.4896%" y="783.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (11 samples, 0.01%)</title><rect x="42.2396%" y="757" width="0.0108%" height="15" fill="rgb(237,138,41)" fg:x="43013" fg:w="11"/><text x="42.4896%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.01%)</title><rect x="42.2396%" y="741" width="0.0108%" height="15" fill="rgb(227,91,49)" fg:x="43013" fg:w="11"/><text x="42.4896%" y="751.50"></text></g><g><title>&lt;(F0,F1,F2) as bevy_ecs::query::fetch::Fetch&gt;::set_table (19 samples, 0.02%)</title><rect x="42.2327%" y="853" width="0.0187%" height="15" fill="rgb(247,21,44)" fg:x="43006" fg:w="19"/><text x="42.4827%" y="863.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (19 samples, 0.02%)</title><rect x="42.2327%" y="837" width="0.0187%" height="15" fill="rgb(219,210,51)" fg:x="43006" fg:w="19"/><text x="42.4827%" y="847.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (14 samples, 0.01%)</title><rect x="42.2376%" y="821" width="0.0137%" height="15" fill="rgb(209,140,6)" fg:x="43011" fg:w="14"/><text x="42.4876%" y="831.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (14 samples, 0.01%)</title><rect x="42.2376%" y="805" width="0.0137%" height="15" fill="rgb(221,188,24)" fg:x="43011" fg:w="14"/><text x="42.4876%" y="815.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="42.2298%" y="869" width="0.0226%" height="15" fill="rgb(232,154,20)" fg:x="43003" fg:w="23"/><text x="42.4798%" y="879.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (11 samples, 0.01%)</title><rect x="42.2661%" y="805" width="0.0108%" height="15" fill="rgb(244,137,50)" fg:x="43040" fg:w="11"/><text x="42.5161%" y="815.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (11 samples, 0.01%)</title><rect x="42.2789%" y="773" width="0.0108%" height="15" fill="rgb(225,185,43)" fg:x="43053" fg:w="11"/><text x="42.5289%" y="783.50"></text></g><g><title>&lt;(F0,F1,F2) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (28 samples, 0.03%)</title><rect x="42.2632%" y="837" width="0.0275%" height="15" fill="rgb(213,205,38)" fg:x="43037" fg:w="28"/><text x="42.5132%" y="847.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (28 samples, 0.03%)</title><rect x="42.2632%" y="821" width="0.0275%" height="15" fill="rgb(236,73,12)" fg:x="43037" fg:w="28"/><text x="42.5132%" y="831.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (14 samples, 0.01%)</title><rect x="42.2769%" y="805" width="0.0137%" height="15" fill="rgb(235,219,13)" fg:x="43051" fg:w="14"/><text x="42.5269%" y="815.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (14 samples, 0.01%)</title><rect x="42.2769%" y="789" width="0.0137%" height="15" fill="rgb(218,59,36)" fg:x="43051" fg:w="14"/><text x="42.5269%" y="799.50"></text></g><g><title>bevy_ecs::entity::Entities::get (23 samples, 0.02%)</title><rect x="42.3024%" y="837" width="0.0226%" height="15" fill="rgb(205,110,39)" fg:x="43077" fg:w="23"/><text x="42.5524%" y="847.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (81 samples, 0.08%)</title><rect x="42.2524%" y="869" width="0.0795%" height="15" fill="rgb(218,206,42)" fg:x="43026" fg:w="81"/><text x="42.5024%" y="879.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (80 samples, 0.08%)</title><rect x="42.2533%" y="853" width="0.0786%" height="15" fill="rgb(248,125,24)" fg:x="43027" fg:w="80"/><text x="42.5033%" y="863.50"></text></g><g><title>engine::engine::actor::ai::eating::eating_ai (122 samples, 0.12%)</title><rect x="42.2160%" y="885" width="0.1198%" height="15" fill="rgb(242,28,27)" fg:x="42989" fg:w="122"/><text x="42.4660%" y="895.50"></text></g><g><title>engine::engine::render::camera_movement::camera_movement (11 samples, 0.01%)</title><rect x="42.3427%" y="885" width="0.0108%" height="15" fill="rgb(216,228,15)" fg:x="43118" fg:w="11"/><text x="42.5927%" y="895.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (406 samples, 0.40%)</title><rect x="41.9568%" y="933" width="0.3987%" height="15" fill="rgb(235,116,46)" fg:x="42725" fg:w="406"/><text x="42.2068%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (397 samples, 0.39%)</title><rect x="41.9656%" y="917" width="0.3899%" height="15" fill="rgb(224,18,32)" fg:x="42734" fg:w="397"/><text x="42.2156%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (397 samples, 0.39%)</title><rect x="41.9656%" y="901" width="0.3899%" height="15" fill="rgb(252,5,12)" fg:x="42734" fg:w="397"/><text x="42.2156%" y="911.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (14 samples, 0.01%)</title><rect x="42.3555%" y="933" width="0.0137%" height="15" fill="rgb(251,36,5)" fg:x="43131" fg:w="14"/><text x="42.6055%" y="943.50"></text></g><g><title>bevy_ecs::world::World::increment_change_tick (13 samples, 0.01%)</title><rect x="42.3898%" y="933" width="0.0128%" height="15" fill="rgb(217,53,14)" fg:x="43166" fg:w="13"/><text x="42.6398%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (13 samples, 0.01%)</title><rect x="42.3898%" y="917" width="0.0128%" height="15" fill="rgb(215,86,45)" fg:x="43166" fg:w="13"/><text x="42.6398%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.01%)</title><rect x="42.3898%" y="901" width="0.0128%" height="15" fill="rgb(242,169,11)" fg:x="43166" fg:w="13"/><text x="42.6398%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (30 samples, 0.03%)</title><rect x="42.4026%" y="933" width="0.0295%" height="15" fill="rgb(211,213,45)" fg:x="43179" fg:w="30"/><text x="42.6526%" y="943.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1,719 samples, 1.69%)</title><rect x="40.7459%" y="949" width="1.6881%" height="15" fill="rgb(205,88,11)" fg:x="41492" fg:w="1719"/><text x="40.9959%" y="959.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="42.4340%" y="933" width="0.0147%" height="15" fill="rgb(252,69,26)" fg:x="43211" fg:w="15"/><text x="42.6840%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="42.4360%" y="917" width="0.0128%" height="15" fill="rgb(246,123,37)" fg:x="43213" fg:w="13"/><text x="42.6860%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="42.4360%" y="901" width="0.0128%" height="15" fill="rgb(212,205,5)" fg:x="43213" fg:w="13"/><text x="42.6860%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (26 samples, 0.03%)</title><rect x="42.4340%" y="949" width="0.0255%" height="15" fill="rgb(253,148,0)" fg:x="43211" fg:w="26"/><text x="42.6840%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;()&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="42.4488%" y="933" width="0.0108%" height="15" fill="rgb(239,22,4)" fg:x="43226" fg:w="11"/><text x="42.6988%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="42.4488%" y="917" width="0.0108%" height="15" fill="rgb(226,26,53)" fg:x="43226" fg:w="11"/><text x="42.6988%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.01%)</title><rect x="42.4488%" y="901" width="0.0108%" height="15" fill="rgb(225,229,45)" fg:x="43226" fg:w="11"/><text x="42.6988%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.01%)</title><rect x="42.4488%" y="885" width="0.0108%" height="15" fill="rgb(220,60,37)" fg:x="43226" fg:w="11"/><text x="42.6988%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (19 samples, 0.02%)</title><rect x="42.4625%" y="885" width="0.0187%" height="15" fill="rgb(217,180,35)" fg:x="43240" fg:w="19"/><text x="42.7125%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;event_listener::List&gt;&gt; (19 samples, 0.02%)</title><rect x="42.4625%" y="869" width="0.0187%" height="15" fill="rgb(229,7,53)" fg:x="43240" fg:w="19"/><text x="42.7125%" y="879.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (19 samples, 0.02%)</title><rect x="42.4625%" y="853" width="0.0187%" height="15" fill="rgb(254,137,3)" fg:x="43240" fg:w="19"/><text x="42.7125%" y="863.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (18 samples, 0.02%)</title><rect x="42.4635%" y="837" width="0.0177%" height="15" fill="rgb(215,140,41)" fg:x="43241" fg:w="18"/><text x="42.7135%" y="847.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (18 samples, 0.02%)</title><rect x="42.4635%" y="821" width="0.0177%" height="15" fill="rgb(250,80,15)" fg:x="43241" fg:w="18"/><text x="42.7135%" y="831.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (17 samples, 0.02%)</title><rect x="42.4645%" y="805" width="0.0167%" height="15" fill="rgb(252,191,6)" fg:x="43242" fg:w="17"/><text x="42.7145%" y="815.50"></text></g><g><title>event_listener::Inner::lock (21 samples, 0.02%)</title><rect x="42.4822%" y="885" width="0.0206%" height="15" fill="rgb(246,217,18)" fg:x="43260" fg:w="21"/><text x="42.7322%" y="895.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (20 samples, 0.02%)</title><rect x="42.4831%" y="869" width="0.0196%" height="15" fill="rgb(223,93,7)" fg:x="43261" fg:w="20"/><text x="42.7331%" y="879.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (20 samples, 0.02%)</title><rect x="42.4831%" y="853" width="0.0196%" height="15" fill="rgb(225,55,52)" fg:x="43261" fg:w="20"/><text x="42.7331%" y="863.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (20 samples, 0.02%)</title><rect x="42.4831%" y="837" width="0.0196%" height="15" fill="rgb(240,31,24)" fg:x="43261" fg:w="20"/><text x="42.7331%" y="847.50"></text></g><g><title>__GI___pthread_mutex_lock (20 samples, 0.02%)</title><rect x="42.4831%" y="821" width="0.0196%" height="15" fill="rgb(205,56,52)" fg:x="43261" fg:w="20"/><text x="42.7331%" y="831.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (51 samples, 0.05%)</title><rect x="42.4596%" y="901" width="0.0501%" height="15" fill="rgb(246,146,12)" fg:x="43237" fg:w="51"/><text x="42.7096%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (64 samples, 0.06%)</title><rect x="42.4596%" y="949" width="0.0628%" height="15" fill="rgb(239,84,36)" fg:x="43237" fg:w="64"/><text x="42.7096%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (64 samples, 0.06%)</title><rect x="42.4596%" y="933" width="0.0628%" height="15" fill="rgb(207,41,40)" fg:x="43237" fg:w="64"/><text x="42.7096%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (64 samples, 0.06%)</title><rect x="42.4596%" y="917" width="0.0628%" height="15" fill="rgb(241,179,25)" fg:x="43237" fg:w="64"/><text x="42.7096%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (13 samples, 0.01%)</title><rect x="42.5096%" y="901" width="0.0128%" height="15" fill="rgb(210,0,34)" fg:x="43288" fg:w="13"/><text x="42.7596%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="42.5096%" y="885" width="0.0128%" height="15" fill="rgb(225,217,29)" fg:x="43288" fg:w="13"/><text x="42.7596%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.01%)</title><rect x="42.5096%" y="869" width="0.0128%" height="15" fill="rgb(216,191,38)" fg:x="43288" fg:w="13"/><text x="42.7596%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.01%)</title><rect x="42.5096%" y="853" width="0.0128%" height="15" fill="rgb(232,140,52)" fg:x="43288" fg:w="13"/><text x="42.7596%" y="863.50"></text></g><g><title>&lt;async_channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="42.5244%" y="933" width="0.0167%" height="15" fill="rgb(223,158,51)" fg:x="43303" fg:w="17"/><text x="42.7744%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.02%)</title><rect x="42.5254%" y="917" width="0.0157%" height="15" fill="rgb(235,29,51)" fg:x="43304" fg:w="16"/><text x="42.7754%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.02%)</title><rect x="42.5254%" y="901" width="0.0157%" height="15" fill="rgb(215,181,18)" fg:x="43304" fg:w="16"/><text x="42.7754%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,965 samples, 3.89%)</title><rect x="38.6631%" y="981" width="3.8937%" height="15" fill="rgb(227,125,34)" fg:x="39371" fg:w="3965"/><text x="38.9131%" y="991.50">&lt;cor..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,517 samples, 2.47%)</title><rect x="40.0850%" y="965" width="2.4717%" height="15" fill="rgb(230,197,49)" fg:x="40819" fg:w="2517"/><text x="40.3350%" y="975.50">be..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Sender&lt;usize&gt;&gt; (33 samples, 0.03%)</title><rect x="42.5244%" y="949" width="0.0324%" height="15" fill="rgb(239,141,16)" fg:x="43303" fg:w="33"/><text x="42.7744%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;usize&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="42.5411%" y="933" width="0.0157%" height="15" fill="rgb(225,105,43)" fg:x="43320" fg:w="16"/><text x="42.7911%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="42.5411%" y="917" width="0.0157%" height="15" fill="rgb(214,131,14)" fg:x="43320" fg:w="16"/><text x="42.7911%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (16 samples, 0.02%)</title><rect x="42.5411%" y="901" width="0.0157%" height="15" fill="rgb(229,177,11)" fg:x="43320" fg:w="16"/><text x="42.7911%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (16 samples, 0.02%)</title><rect x="42.5411%" y="885" width="0.0157%" height="15" fill="rgb(231,180,14)" fg:x="43320" fg:w="16"/><text x="42.7911%" y="895.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.03%)</title><rect x="42.5568%" y="965" width="0.0275%" height="15" fill="rgb(232,88,2)" fg:x="43336" fg:w="28"/><text x="42.8068%" y="975.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (25 samples, 0.02%)</title><rect x="42.5597%" y="949" width="0.0246%" height="15" fill="rgb(205,220,8)" fg:x="43339" fg:w="25"/><text x="42.8097%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (16 samples, 0.02%)</title><rect x="42.5686%" y="933" width="0.0157%" height="15" fill="rgb(225,23,53)" fg:x="43348" fg:w="16"/><text x="42.8186%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (15 samples, 0.01%)</title><rect x="42.5696%" y="917" width="0.0147%" height="15" fill="rgb(213,62,29)" fg:x="43349" fg:w="15"/><text x="42.8196%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (36 samples, 0.04%)</title><rect x="42.5568%" y="981" width="0.0354%" height="15" fill="rgb(227,75,7)" fg:x="43336" fg:w="36"/><text x="42.8068%" y="991.50"></text></g><g><title>core::mem::drop (29 samples, 0.03%)</title><rect x="42.5961%" y="933" width="0.0285%" height="15" fill="rgb(207,105,14)" fg:x="43376" fg:w="29"/><text x="42.8461%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (29 samples, 0.03%)</title><rect x="42.5961%" y="917" width="0.0285%" height="15" fill="rgb(245,62,29)" fg:x="43376" fg:w="29"/><text x="42.8461%" y="927.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (29 samples, 0.03%)</title><rect x="42.5961%" y="901" width="0.0285%" height="15" fill="rgb(236,202,4)" fg:x="43376" fg:w="29"/><text x="42.8461%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (29 samples, 0.03%)</title><rect x="42.5961%" y="885" width="0.0285%" height="15" fill="rgb(250,67,1)" fg:x="43376" fg:w="29"/><text x="42.8461%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (29 samples, 0.03%)</title><rect x="42.5961%" y="869" width="0.0285%" height="15" fill="rgb(253,115,44)" fg:x="43376" fg:w="29"/><text x="42.8461%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (29 samples, 0.03%)</title><rect x="42.5961%" y="853" width="0.0285%" height="15" fill="rgb(251,139,18)" fg:x="43376" fg:w="29"/><text x="42.8461%" y="863.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.08%)</title><rect x="42.5921%" y="965" width="0.0766%" height="15" fill="rgb(218,22,32)" fg:x="43372" fg:w="78"/><text x="42.8421%" y="975.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (74 samples, 0.07%)</title><rect x="42.5961%" y="949" width="0.0727%" height="15" fill="rgb(243,53,5)" fg:x="43376" fg:w="74"/><text x="42.8461%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (37 samples, 0.04%)</title><rect x="42.6324%" y="933" width="0.0363%" height="15" fill="rgb(227,56,16)" fg:x="43413" fg:w="37"/><text x="42.8824%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (33 samples, 0.03%)</title><rect x="42.6363%" y="917" width="0.0324%" height="15" fill="rgb(245,53,0)" fg:x="43417" fg:w="33"/><text x="42.8863%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (28 samples, 0.03%)</title><rect x="42.6412%" y="901" width="0.0275%" height="15" fill="rgb(216,170,35)" fg:x="43422" fg:w="28"/><text x="42.8912%" y="911.50"></text></g><g><title>__GI___pthread_mutex_lock (28 samples, 0.03%)</title><rect x="42.6412%" y="885" width="0.0275%" height="15" fill="rgb(211,200,8)" fg:x="43422" fg:w="28"/><text x="42.8912%" y="895.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (11 samples, 0.01%)</title><rect x="42.6717%" y="965" width="0.0108%" height="15" fill="rgb(228,204,44)" fg:x="43453" fg:w="11"/><text x="42.9217%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (102 samples, 0.10%)</title><rect x="42.5921%" y="981" width="0.1002%" height="15" fill="rgb(214,121,17)" fg:x="43372" fg:w="102"/><text x="42.8421%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4,123 samples, 4.05%)</title><rect x="38.6454%" y="1013" width="4.0489%" height="15" fill="rgb(233,64,38)" fg:x="39353" fg:w="4123"/><text x="38.8954%" y="1023.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (4,119 samples, 4.04%)</title><rect x="38.6493%" y="997" width="4.0449%" height="15" fill="rgb(253,54,19)" fg:x="39357" fg:w="4119"/><text x="38.8993%" y="1007.50">asyn..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (12 samples, 0.01%)</title><rect x="42.6943%" y="997" width="0.0118%" height="15" fill="rgb(253,94,18)" fg:x="43476" fg:w="12"/><text x="42.9443%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_and (12 samples, 0.01%)</title><rect x="42.6943%" y="981" width="0.0118%" height="15" fill="rgb(227,57,52)" fg:x="43476" fg:w="12"/><text x="42.9443%" y="991.50"></text></g><g><title>async_task::header::Header::take (20 samples, 0.02%)</title><rect x="42.6943%" y="1013" width="0.0196%" height="15" fill="rgb(230,228,50)" fg:x="43476" fg:w="20"/><text x="42.9443%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (43 samples, 0.04%)</title><rect x="42.7178%" y="1013" width="0.0422%" height="15" fill="rgb(217,205,27)" fg:x="43500" fg:w="43"/><text x="42.9678%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (39 samples, 0.04%)</title><rect x="42.7218%" y="997" width="0.0383%" height="15" fill="rgb(252,71,50)" fg:x="43504" fg:w="39"/><text x="42.9718%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_sub (39 samples, 0.04%)</title><rect x="42.7218%" y="981" width="0.0383%" height="15" fill="rgb(209,86,4)" fg:x="43504" fg:w="39"/><text x="42.9718%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (12 samples, 0.01%)</title><rect x="42.7866%" y="885" width="0.0118%" height="15" fill="rgb(229,94,0)" fg:x="43570" fg:w="12"/><text x="43.0366%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (12 samples, 0.01%)</title><rect x="42.7866%" y="869" width="0.0118%" height="15" fill="rgb(252,223,21)" fg:x="43570" fg:w="12"/><text x="43.0366%" y="879.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (27 samples, 0.03%)</title><rect x="42.7728%" y="933" width="0.0265%" height="15" fill="rgb(230,210,4)" fg:x="43556" fg:w="27"/><text x="43.0228%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (27 samples, 0.03%)</title><rect x="42.7728%" y="917" width="0.0265%" height="15" fill="rgb(240,149,38)" fg:x="43556" fg:w="27"/><text x="43.0228%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (24 samples, 0.02%)</title><rect x="42.7758%" y="901" width="0.0236%" height="15" fill="rgb(254,105,20)" fg:x="43559" fg:w="24"/><text x="43.0258%" y="911.50"></text></g><g><title>async_task::utils::abort_on_panic (51 samples, 0.05%)</title><rect x="42.7601%" y="1013" width="0.0501%" height="15" fill="rgb(253,87,46)" fg:x="43543" fg:w="51"/><text x="43.0101%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (51 samples, 0.05%)</title><rect x="42.7601%" y="997" width="0.0501%" height="15" fill="rgb(253,116,33)" fg:x="43543" fg:w="51"/><text x="43.0101%" y="1007.50"></text></g><g><title>core::task::wake::Waker::wake (51 samples, 0.05%)</title><rect x="42.7601%" y="981" width="0.0501%" height="15" fill="rgb(229,198,5)" fg:x="43543" fg:w="51"/><text x="43.0101%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (51 samples, 0.05%)</title><rect x="42.7601%" y="965" width="0.0501%" height="15" fill="rgb(242,38,37)" fg:x="43543" fg:w="51"/><text x="43.0101%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (39 samples, 0.04%)</title><rect x="42.7718%" y="949" width="0.0383%" height="15" fill="rgb(242,69,53)" fg:x="43555" fg:w="39"/><text x="43.0218%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (121 samples, 0.12%)</title><rect x="42.8101%" y="1013" width="0.1188%" height="15" fill="rgb(249,80,16)" fg:x="43594" fg:w="121"/><text x="43.0601%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (121 samples, 0.12%)</title><rect x="42.8101%" y="997" width="0.1188%" height="15" fill="rgb(206,128,11)" fg:x="43594" fg:w="121"/><text x="43.0601%" y="1007.50"></text></g><g><title>async_task::runnable::Runnable::run (4,396 samples, 4.32%)</title><rect x="38.6150%" y="1045" width="4.3170%" height="15" fill="rgb(212,35,20)" fg:x="39322" fg:w="4396"/><text x="38.8650%" y="1055.50">async..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4,394 samples, 4.31%)</title><rect x="38.6169%" y="1029" width="4.3150%" height="15" fill="rgb(236,79,13)" fg:x="39324" fg:w="4394"/><text x="38.8669%" y="1039.50">async..</text></g><g><title>concurrent_queue::full_fence (632 samples, 0.62%)</title><rect x="43.0979%" y="1013" width="0.6206%" height="15" fill="rgb(233,123,3)" fg:x="43887" fg:w="632"/><text x="43.3479%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (611 samples, 0.60%)</title><rect x="43.1185%" y="997" width="0.6000%" height="15" fill="rgb(214,93,52)" fg:x="43908" fg:w="611"/><text x="43.3685%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (611 samples, 0.60%)</title><rect x="43.1185%" y="981" width="0.6000%" height="15" fill="rgb(251,37,40)" fg:x="43908" fg:w="611"/><text x="43.3685%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (611 samples, 0.60%)</title><rect x="43.1185%" y="965" width="0.6000%" height="15" fill="rgb(227,80,54)" fg:x="43908" fg:w="611"/><text x="43.3685%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (21 samples, 0.02%)</title><rect x="43.7313%" y="1013" width="0.0206%" height="15" fill="rgb(254,48,11)" fg:x="44532" fg:w="21"/><text x="43.9813%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="43.7313%" y="997" width="0.0206%" height="15" fill="rgb(235,193,26)" fg:x="44532" fg:w="21"/><text x="43.9813%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (63 samples, 0.06%)</title><rect x="43.7519%" y="1013" width="0.0619%" height="15" fill="rgb(229,99,21)" fg:x="44553" fg:w="63"/><text x="44.0019%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (63 samples, 0.06%)</title><rect x="43.7519%" y="997" width="0.0619%" height="15" fill="rgb(211,140,41)" fg:x="44553" fg:w="63"/><text x="44.0019%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (40 samples, 0.04%)</title><rect x="43.8138%" y="1013" width="0.0393%" height="15" fill="rgb(240,227,30)" fg:x="44616" fg:w="40"/><text x="44.0638%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_or (40 samples, 0.04%)</title><rect x="43.8138%" y="997" width="0.0393%" height="15" fill="rgb(215,224,45)" fg:x="44616" fg:w="40"/><text x="44.0638%" y="1007.50"></text></g><g><title>async_executor::Executor::try_tick (5,540 samples, 5.44%)</title><rect x="38.4677%" y="1061" width="5.4404%" height="15" fill="rgb(206,123,31)" fg:x="39172" fg:w="5540"/><text x="38.7177%" y="1071.50">async_e..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (994 samples, 0.98%)</title><rect x="42.9319%" y="1045" width="0.9761%" height="15" fill="rgb(210,138,16)" fg:x="43718" fg:w="994"/><text x="43.1819%" y="1055.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (927 samples, 0.91%)</title><rect x="42.9977%" y="1029" width="0.9103%" height="15" fill="rgb(228,57,28)" fg:x="43785" fg:w="927"/><text x="43.2477%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (56 samples, 0.05%)</title><rect x="43.8531%" y="1013" width="0.0550%" height="15" fill="rgb(242,170,10)" fg:x="44656" fg:w="56"/><text x="44.1031%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_load (56 samples, 0.05%)</title><rect x="43.8531%" y="997" width="0.0550%" height="15" fill="rgb(228,214,39)" fg:x="44656" fg:w="56"/><text x="44.1031%" y="1007.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (18 samples, 0.02%)</title><rect x="43.9130%" y="1013" width="0.0177%" height="15" fill="rgb(218,179,33)" fg:x="44717" fg:w="18"/><text x="44.1630%" y="1023.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (15 samples, 0.01%)</title><rect x="43.9159%" y="997" width="0.0147%" height="15" fill="rgb(235,193,39)" fg:x="44720" fg:w="15"/><text x="44.1659%" y="1007.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (14 samples, 0.01%)</title><rect x="43.9169%" y="981" width="0.0137%" height="15" fill="rgb(219,221,36)" fg:x="44721" fg:w="14"/><text x="44.1669%" y="991.50"></text></g><g><title>async_task::runnable::Runnable::schedule (27 samples, 0.03%)</title><rect x="43.9120%" y="1045" width="0.0265%" height="15" fill="rgb(248,218,19)" fg:x="44716" fg:w="27"/><text x="44.1620%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (27 samples, 0.03%)</title><rect x="43.9120%" y="1029" width="0.0265%" height="15" fill="rgb(205,50,9)" fg:x="44716" fg:w="27"/><text x="44.1620%" y="1039.50"></text></g><g><title>async_executor::LocalExecutor::spawn (51 samples, 0.05%)</title><rect x="43.9080%" y="1061" width="0.0501%" height="15" fill="rgb(238,81,28)" fg:x="44712" fg:w="51"/><text x="44.1580%" y="1071.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="43.9473%" y="1045" width="0.0108%" height="15" fill="rgb(235,110,19)" fg:x="44752" fg:w="11"/><text x="44.1973%" y="1055.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (11 samples, 0.01%)</title><rect x="43.9473%" y="1029" width="0.0108%" height="15" fill="rgb(214,7,14)" fg:x="44752" fg:w="11"/><text x="44.1973%" y="1039.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::get_unchecked (34 samples, 0.03%)</title><rect x="43.9601%" y="981" width="0.0334%" height="15" fill="rgb(211,77,3)" fg:x="44765" fg:w="34"/><text x="44.2101%" y="991.50"></text></g><g><title>async_executor::Executor::state (37 samples, 0.04%)</title><rect x="43.9601%" y="1029" width="0.0363%" height="15" fill="rgb(229,5,9)" fg:x="44765" fg:w="37"/><text x="44.2101%" y="1039.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (37 samples, 0.04%)</title><rect x="43.9601%" y="1013" width="0.0363%" height="15" fill="rgb(225,90,11)" fg:x="44765" fg:w="37"/><text x="44.2101%" y="1023.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (37 samples, 0.04%)</title><rect x="43.9601%" y="997" width="0.0363%" height="15" fill="rgb(242,56,8)" fg:x="44765" fg:w="37"/><text x="44.2101%" y="1007.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (25 samples, 0.02%)</title><rect x="43.9964%" y="1029" width="0.0246%" height="15" fill="rgb(249,212,39)" fg:x="44802" fg:w="25"/><text x="44.2464%" y="1039.50"></text></g><g><title>async_executor::State::notify (22 samples, 0.02%)</title><rect x="44.0210%" y="1029" width="0.0216%" height="15" fill="rgb(236,90,9)" fg:x="44827" fg:w="22"/><text x="44.2710%" y="1039.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (22 samples, 0.02%)</title><rect x="44.0210%" y="1013" width="0.0216%" height="15" fill="rgb(206,88,35)" fg:x="44827" fg:w="22"/><text x="44.2710%" y="1023.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (22 samples, 0.02%)</title><rect x="44.0210%" y="997" width="0.0216%" height="15" fill="rgb(205,126,30)" fg:x="44827" fg:w="22"/><text x="44.2710%" y="1007.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (15 samples, 0.01%)</title><rect x="44.1231%" y="837" width="0.0147%" height="15" fill="rgb(230,176,12)" fg:x="44931" fg:w="15"/><text x="44.3731%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (15 samples, 0.01%)</title><rect x="44.1231%" y="821" width="0.0147%" height="15" fill="rgb(243,19,9)" fg:x="44931" fg:w="15"/><text x="44.3731%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (15 samples, 0.01%)</title><rect x="44.1231%" y="805" width="0.0147%" height="15" fill="rgb(245,171,17)" fg:x="44931" fg:w="15"/><text x="44.3731%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (15 samples, 0.01%)</title><rect x="44.1231%" y="789" width="0.0147%" height="15" fill="rgb(227,52,21)" fg:x="44931" fg:w="15"/><text x="44.3731%" y="799.50"></text></g><g><title>async_task::utils::abort_on_panic (17 samples, 0.02%)</title><rect x="44.1221%" y="869" width="0.0167%" height="15" fill="rgb(238,69,14)" fg:x="44930" fg:w="17"/><text x="44.3721%" y="879.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (17 samples, 0.02%)</title><rect x="44.1221%" y="853" width="0.0167%" height="15" fill="rgb(241,156,39)" fg:x="44930" fg:w="17"/><text x="44.3721%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (45 samples, 0.04%)</title><rect x="44.1398%" y="869" width="0.0442%" height="15" fill="rgb(212,227,28)" fg:x="44948" fg:w="45"/><text x="44.3898%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (45 samples, 0.04%)</title><rect x="44.1398%" y="853" width="0.0442%" height="15" fill="rgb(209,118,27)" fg:x="44948" fg:w="45"/><text x="44.3898%" y="863.50"></text></g><g><title>async_task::header::Header::register (77 samples, 0.08%)</title><rect x="44.1123%" y="885" width="0.0756%" height="15" fill="rgb(226,102,5)" fg:x="44920" fg:w="77"/><text x="44.3623%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (49 samples, 0.05%)</title><rect x="44.1889%" y="885" width="0.0481%" height="15" fill="rgb(223,34,3)" fg:x="44998" fg:w="49"/><text x="44.4389%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (49 samples, 0.05%)</title><rect x="44.1889%" y="869" width="0.0481%" height="15" fill="rgb(221,81,38)" fg:x="44998" fg:w="49"/><text x="44.4389%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (27 samples, 0.03%)</title><rect x="44.2370%" y="885" width="0.0265%" height="15" fill="rgb(236,219,28)" fg:x="45047" fg:w="27"/><text x="44.4870%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (27 samples, 0.03%)</title><rect x="44.2370%" y="869" width="0.0265%" height="15" fill="rgb(213,200,14)" fg:x="45047" fg:w="27"/><text x="44.4870%" y="879.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (176 samples, 0.17%)</title><rect x="44.0946%" y="917" width="0.1728%" height="15" fill="rgb(240,33,19)" fg:x="44902" fg:w="176"/><text x="44.3446%" y="927.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (171 samples, 0.17%)</title><rect x="44.0995%" y="901" width="0.1679%" height="15" fill="rgb(233,113,27)" fg:x="44907" fg:w="171"/><text x="44.3495%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="44.2714%" y="917" width="0.0108%" height="15" fill="rgb(220,221,18)" fg:x="45082" fg:w="11"/><text x="44.5214%" y="927.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="44.2714%" y="901" width="0.0108%" height="15" fill="rgb(238,92,8)" fg:x="45082" fg:w="11"/><text x="44.5214%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;async_task::task::Task&lt;()&gt;,alloc::alloc::Global&gt;&gt; (11 samples, 0.01%)</title><rect x="44.2714%" y="885" width="0.0108%" height="15" fill="rgb(222,164,16)" fg:x="45082" fg:w="11"/><text x="44.5214%" y="895.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="44.2714%" y="869" width="0.0108%" height="15" fill="rgb(241,119,3)" fg:x="45082" fg:w="11"/><text x="44.5214%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="44.2714%" y="853" width="0.0108%" height="15" fill="rgb(241,44,8)" fg:x="45082" fg:w="11"/><text x="44.5214%" y="863.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="44.2714%" y="837" width="0.0108%" height="15" fill="rgb(230,36,40)" fg:x="45082" fg:w="11"/><text x="44.5214%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="44.2714%" y="821" width="0.0108%" height="15" fill="rgb(243,16,36)" fg:x="45082" fg:w="11"/><text x="44.5214%" y="831.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="44.2714%" y="805" width="0.0108%" height="15" fill="rgb(231,4,26)" fg:x="45082" fg:w="11"/><text x="44.5214%" y="815.50"></text></g><g><title>__rdl_dealloc (11 samples, 0.01%)</title><rect x="44.2714%" y="789" width="0.0108%" height="15" fill="rgb(240,9,31)" fg:x="45082" fg:w="11"/><text x="44.5214%" y="799.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (11 samples, 0.01%)</title><rect x="44.2714%" y="773" width="0.0108%" height="15" fill="rgb(207,173,15)" fg:x="45082" fg:w="11"/><text x="44.5214%" y="783.50"></text></g><g><title>__GI___libc_free (11 samples, 0.01%)</title><rect x="44.2714%" y="757" width="0.0108%" height="15" fill="rgb(224,192,53)" fg:x="45082" fg:w="11"/><text x="44.5214%" y="767.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_canceled (12 samples, 0.01%)</title><rect x="44.2842%" y="885" width="0.0118%" height="15" fill="rgb(223,67,28)" fg:x="45095" fg:w="12"/><text x="44.5342%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (12 samples, 0.01%)</title><rect x="44.2842%" y="869" width="0.0118%" height="15" fill="rgb(211,20,47)" fg:x="45095" fg:w="12"/><text x="44.5342%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (12 samples, 0.01%)</title><rect x="44.2842%" y="853" width="0.0118%" height="15" fill="rgb(240,228,2)" fg:x="45095" fg:w="12"/><text x="44.5342%" y="863.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (95 samples, 0.09%)</title><rect x="44.2822%" y="901" width="0.0933%" height="15" fill="rgb(248,151,12)" fg:x="45093" fg:w="95"/><text x="44.5322%" y="911.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_detached (81 samples, 0.08%)</title><rect x="44.2959%" y="885" width="0.0795%" height="15" fill="rgb(244,8,39)" fg:x="45107" fg:w="81"/><text x="44.5459%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (68 samples, 0.07%)</title><rect x="44.3087%" y="869" width="0.0668%" height="15" fill="rgb(222,26,8)" fg:x="45120" fg:w="68"/><text x="44.5587%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (68 samples, 0.07%)</title><rect x="44.3087%" y="853" width="0.0668%" height="15" fill="rgb(213,106,44)" fg:x="45120" fg:w="68"/><text x="44.5587%" y="863.50"></text></g><g><title>__GI___libc_free (155 samples, 0.15%)</title><rect x="44.3755%" y="901" width="0.1522%" height="15" fill="rgb(214,129,20)" fg:x="45188" fg:w="155"/><text x="44.6255%" y="911.50"></text></g><g><title>_int_free (146 samples, 0.14%)</title><rect x="44.3843%" y="885" width="0.1434%" height="15" fill="rgb(212,32,13)" fg:x="45197" fg:w="146"/><text x="44.6343%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (514 samples, 0.50%)</title><rect x="44.0720%" y="949" width="0.5048%" height="15" fill="rgb(208,168,33)" fg:x="44879" fg:w="514"/><text x="44.3220%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (510 samples, 0.50%)</title><rect x="44.0760%" y="933" width="0.5008%" height="15" fill="rgb(231,207,8)" fg:x="44883" fg:w="510"/><text x="44.3260%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (300 samples, 0.29%)</title><rect x="44.2822%" y="917" width="0.2946%" height="15" fill="rgb(235,219,23)" fg:x="45093" fg:w="300"/><text x="44.5322%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (50 samples, 0.05%)</title><rect x="44.5277%" y="901" width="0.0491%" height="15" fill="rgb(226,216,26)" fg:x="45343" fg:w="50"/><text x="44.7777%" y="911.50"></text></g><g><title>async_task::utils::abort_on_panic (48 samples, 0.05%)</title><rect x="44.5297%" y="885" width="0.0471%" height="15" fill="rgb(239,137,16)" fg:x="45345" fg:w="48"/><text x="44.7797%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy::{{closure}} (48 samples, 0.05%)</title><rect x="44.5297%" y="869" width="0.0471%" height="15" fill="rgb(207,12,36)" fg:x="45345" fg:w="48"/><text x="44.7797%" y="879.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (48 samples, 0.05%)</title><rect x="44.5297%" y="853" width="0.0471%" height="15" fill="rgb(210,214,24)" fg:x="45345" fg:w="48"/><text x="44.7797%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::schedule::{{closure}}&gt; (48 samples, 0.05%)</title><rect x="44.5297%" y="837" width="0.0471%" height="15" fill="rgb(206,56,30)" fg:x="45345" fg:w="48"/><text x="44.7797%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (48 samples, 0.05%)</title><rect x="44.5297%" y="821" width="0.0471%" height="15" fill="rgb(228,143,26)" fg:x="45345" fg:w="48"/><text x="44.7797%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (48 samples, 0.05%)</title><rect x="44.5297%" y="805" width="0.0471%" height="15" fill="rgb(216,218,46)" fg:x="45345" fg:w="48"/><text x="44.7797%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (46 samples, 0.05%)</title><rect x="44.5316%" y="789" width="0.0452%" height="15" fill="rgb(206,6,19)" fg:x="45347" fg:w="46"/><text x="44.7816%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (46 samples, 0.05%)</title><rect x="44.5316%" y="773" width="0.0452%" height="15" fill="rgb(239,177,51)" fg:x="45347" fg:w="46"/><text x="44.7816%" y="783.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (515 samples, 0.51%)</title><rect x="44.0720%" y="965" width="0.5057%" height="15" fill="rgb(216,55,25)" fg:x="44879" fg:w="515"/><text x="44.3220%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (533 samples, 0.52%)</title><rect x="44.0661%" y="997" width="0.5234%" height="15" fill="rgb(231,163,29)" fg:x="44873" fg:w="533"/><text x="44.3161%" y="1007.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (531 samples, 0.52%)</title><rect x="44.0681%" y="981" width="0.5215%" height="15" fill="rgb(232,149,50)" fg:x="44875" fg:w="531"/><text x="44.3181%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::LocalExecutor::spawn&lt;alloc::vec::Vec&lt;()&gt;,core::pin::Pin&lt;&amp;mut dyn core::future::future::Future+Output = alloc::vec::Vec&lt;()&gt;&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (12 samples, 0.01%)</title><rect x="44.5778%" y="965" width="0.0118%" height="15" fill="rgb(223,142,48)" fg:x="45394" fg:w="12"/><text x="44.8278%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (18 samples, 0.02%)</title><rect x="44.5945%" y="997" width="0.0177%" height="15" fill="rgb(245,83,23)" fg:x="45411" fg:w="18"/><text x="44.8445%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (17 samples, 0.02%)</title><rect x="44.5955%" y="981" width="0.0167%" height="15" fill="rgb(224,63,2)" fg:x="45412" fg:w="17"/><text x="44.8455%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (17 samples, 0.02%)</title><rect x="44.5955%" y="965" width="0.0167%" height="15" fill="rgb(218,65,53)" fg:x="45412" fg:w="17"/><text x="44.8455%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (51 samples, 0.05%)</title><rect x="44.6190%" y="997" width="0.0501%" height="15" fill="rgb(221,84,29)" fg:x="45436" fg:w="51"/><text x="44.8690%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (51 samples, 0.05%)</title><rect x="44.6190%" y="981" width="0.0501%" height="15" fill="rgb(234,0,32)" fg:x="45436" fg:w="51"/><text x="44.8690%" y="991.50"></text></g><g><title>async_task::runnable::Runnable::run (639 samples, 0.63%)</title><rect x="44.0426%" y="1029" width="0.6275%" height="15" fill="rgb(206,20,16)" fg:x="44849" fg:w="639"/><text x="44.2926%" y="1039.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (639 samples, 0.63%)</title><rect x="44.0426%" y="1013" width="0.6275%" height="15" fill="rgb(244,172,18)" fg:x="44849" fg:w="639"/><text x="44.2926%" y="1023.50"></text></g><g><title>concurrent_queue::full_fence (670 samples, 0.66%)</title><rect x="44.8302%" y="997" width="0.6580%" height="15" fill="rgb(254,133,1)" fg:x="45651" fg:w="670"/><text x="45.0802%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (639 samples, 0.63%)</title><rect x="44.8606%" y="981" width="0.6275%" height="15" fill="rgb(222,206,41)" fg:x="45682" fg:w="639"/><text x="45.1106%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (639 samples, 0.63%)</title><rect x="44.8606%" y="965" width="0.6275%" height="15" fill="rgb(212,3,42)" fg:x="45682" fg:w="639"/><text x="45.1106%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (639 samples, 0.63%)</title><rect x="44.8606%" y="949" width="0.6275%" height="15" fill="rgb(241,11,4)" fg:x="45682" fg:w="639"/><text x="45.1106%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (12 samples, 0.01%)</title><rect x="45.4911%" y="997" width="0.0118%" height="15" fill="rgb(205,19,26)" fg:x="46324" fg:w="12"/><text x="45.7411%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (23 samples, 0.02%)</title><rect x="45.5048%" y="997" width="0.0226%" height="15" fill="rgb(210,179,32)" fg:x="46338" fg:w="23"/><text x="45.7548%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.02%)</title><rect x="45.5048%" y="981" width="0.0226%" height="15" fill="rgb(227,116,49)" fg:x="46338" fg:w="23"/><text x="45.7548%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (25 samples, 0.02%)</title><rect x="45.5274%" y="997" width="0.0246%" height="15" fill="rgb(211,146,6)" fg:x="46361" fg:w="25"/><text x="45.7774%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (25 samples, 0.02%)</title><rect x="45.5274%" y="981" width="0.0246%" height="15" fill="rgb(219,44,39)" fg:x="46361" fg:w="25"/><text x="45.7774%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (32 samples, 0.03%)</title><rect x="45.5519%" y="997" width="0.0314%" height="15" fill="rgb(234,128,11)" fg:x="46386" fg:w="32"/><text x="45.8019%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_or (32 samples, 0.03%)</title><rect x="45.5519%" y="981" width="0.0314%" height="15" fill="rgb(220,183,53)" fg:x="46386" fg:w="32"/><text x="45.8019%" y="991.50"></text></g><g><title>async_executor::Executor::try_tick (1,696 samples, 1.67%)</title><rect x="43.9591%" y="1045" width="1.6655%" height="15" fill="rgb(213,219,32)" fg:x="44764" fg:w="1696"/><text x="44.2091%" y="1055.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (972 samples, 0.95%)</title><rect x="44.6701%" y="1029" width="0.9545%" height="15" fill="rgb(232,156,16)" fg:x="45488" fg:w="972"/><text x="44.9201%" y="1039.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (937 samples, 0.92%)</title><rect x="44.7045%" y="1013" width="0.9202%" height="15" fill="rgb(246,135,34)" fg:x="45523" fg:w="937"/><text x="44.9545%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (42 samples, 0.04%)</title><rect x="45.5834%" y="997" width="0.0412%" height="15" fill="rgb(241,99,0)" fg:x="46418" fg:w="42"/><text x="45.8334%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_load (42 samples, 0.04%)</title><rect x="45.5834%" y="981" width="0.0412%" height="15" fill="rgb(222,103,45)" fg:x="46418" fg:w="42"/><text x="45.8334%" y="991.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (1,725 samples, 1.69%)</title><rect x="43.9581%" y="1061" width="1.6940%" height="15" fill="rgb(212,57,4)" fg:x="44763" fg:w="1725"/><text x="44.2081%" y="1071.50"></text></g><g><title>async_executor::LocalExecutor::inner (28 samples, 0.03%)</title><rect x="45.6246%" y="1045" width="0.0275%" height="15" fill="rgb(215,68,47)" fg:x="46460" fg:w="28"/><text x="45.8746%" y="1055.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (28 samples, 0.03%)</title><rect x="45.6246%" y="1029" width="0.0275%" height="15" fill="rgb(230,84,2)" fg:x="46460" fg:w="28"/><text x="45.8746%" y="1039.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (28 samples, 0.03%)</title><rect x="45.6246%" y="1013" width="0.0275%" height="15" fill="rgb(220,102,14)" fg:x="46460" fg:w="28"/><text x="45.8746%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;alloc::vec::Vec&lt;()&gt;&gt;&gt; (17 samples, 0.02%)</title><rect x="45.6521%" y="1061" width="0.0167%" height="15" fill="rgb(240,10,32)" fg:x="46488" fg:w="17"/><text x="45.9021%" y="1071.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="45.6521%" y="1045" width="0.0167%" height="15" fill="rgb(215,47,27)" fg:x="46488" fg:w="17"/><text x="45.9021%" y="1055.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_detached (17 samples, 0.02%)</title><rect x="45.6521%" y="1029" width="0.0167%" height="15" fill="rgb(233,188,43)" fg:x="46488" fg:w="17"/><text x="45.9021%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="45.6688%" y="1029" width="0.0118%" height="15" fill="rgb(253,190,1)" fg:x="46505" fg:w="12"/><text x="45.9188%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_tasks::task_pool::Scope&lt;()&gt;&gt; (13 samples, 0.01%)</title><rect x="45.6688%" y="1061" width="0.0128%" height="15" fill="rgb(206,114,52)" fg:x="46505" fg:w="13"/><text x="45.9188%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="45.6688%" y="1045" width="0.0128%" height="15" fill="rgb(233,120,37)" fg:x="46505" fg:w="13"/><text x="45.9188%" y="1055.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (35 samples, 0.03%)</title><rect x="45.8161%" y="1013" width="0.0344%" height="15" fill="rgb(214,52,39)" fg:x="46655" fg:w="35"/><text x="46.0661%" y="1023.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (23 samples, 0.02%)</title><rect x="45.8534%" y="997" width="0.0226%" height="15" fill="rgb(223,80,29)" fg:x="46693" fg:w="23"/><text x="46.1034%" y="1007.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (21 samples, 0.02%)</title><rect x="45.8554%" y="981" width="0.0206%" height="15" fill="rgb(230,101,40)" fg:x="46695" fg:w="21"/><text x="46.1054%" y="991.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (21 samples, 0.02%)</title><rect x="45.8554%" y="965" width="0.0206%" height="15" fill="rgb(219,211,8)" fg:x="46695" fg:w="21"/><text x="46.1054%" y="975.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (669 samples, 0.66%)</title><rect x="46.1687%" y="885" width="0.6570%" height="15" fill="rgb(252,126,28)" fg:x="47014" fg:w="669"/><text x="46.4187%" y="895.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (644 samples, 0.63%)</title><rect x="46.1932%" y="869" width="0.6324%" height="15" fill="rgb(215,56,38)" fg:x="47039" fg:w="644"/><text x="46.4432%" y="879.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (614 samples, 0.60%)</title><rect x="46.2227%" y="853" width="0.6030%" height="15" fill="rgb(249,55,44)" fg:x="47069" fg:w="614"/><text x="46.4727%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (614 samples, 0.60%)</title><rect x="46.2227%" y="837" width="0.6030%" height="15" fill="rgb(220,221,32)" fg:x="47069" fg:w="614"/><text x="46.4727%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (613 samples, 0.60%)</title><rect x="46.2236%" y="821" width="0.6020%" height="15" fill="rgb(212,216,41)" fg:x="47070" fg:w="613"/><text x="46.4736%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_add (613 samples, 0.60%)</title><rect x="46.2236%" y="805" width="0.6020%" height="15" fill="rgb(228,213,43)" fg:x="47070" fg:w="613"/><text x="46.4736%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (21 samples, 0.02%)</title><rect x="46.8669%" y="821" width="0.0206%" height="15" fill="rgb(211,31,26)" fg:x="47725" fg:w="21"/><text x="47.1169%" y="831.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (21 samples, 0.02%)</title><rect x="46.8669%" y="805" width="0.0206%" height="15" fill="rgb(229,202,19)" fg:x="47725" fg:w="21"/><text x="47.1169%" y="815.50"></text></g><g><title>async_task::utils::abort_on_panic (1,346 samples, 1.32%)</title><rect x="46.1677%" y="917" width="1.3218%" height="15" fill="rgb(229,105,46)" fg:x="47013" fg:w="1346"/><text x="46.4177%" y="927.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (1,346 samples, 1.32%)</title><rect x="46.1677%" y="901" width="1.3218%" height="15" fill="rgb(235,108,1)" fg:x="47013" fg:w="1346"/><text x="46.4177%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (676 samples, 0.66%)</title><rect x="46.8256%" y="885" width="0.6638%" height="15" fill="rgb(245,111,35)" fg:x="47683" fg:w="676"/><text x="47.0756%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (634 samples, 0.62%)</title><rect x="46.8669%" y="869" width="0.6226%" height="15" fill="rgb(219,185,31)" fg:x="47725" fg:w="634"/><text x="47.1169%" y="879.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (634 samples, 0.62%)</title><rect x="46.8669%" y="853" width="0.6226%" height="15" fill="rgb(214,4,43)" fg:x="47725" fg:w="634"/><text x="47.1169%" y="863.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (634 samples, 0.62%)</title><rect x="46.8669%" y="837" width="0.6226%" height="15" fill="rgb(235,227,40)" fg:x="47725" fg:w="634"/><text x="47.1169%" y="847.50"></text></g><g><title>core::mem::drop (613 samples, 0.60%)</title><rect x="46.8875%" y="821" width="0.6020%" height="15" fill="rgb(230,88,30)" fg:x="47746" fg:w="613"/><text x="47.1375%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (613 samples, 0.60%)</title><rect x="46.8875%" y="805" width="0.6020%" height="15" fill="rgb(216,217,1)" fg:x="47746" fg:w="613"/><text x="47.1375%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (613 samples, 0.60%)</title><rect x="46.8875%" y="789" width="0.6020%" height="15" fill="rgb(248,139,50)" fg:x="47746" fg:w="613"/><text x="47.1375%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (609 samples, 0.60%)</title><rect x="46.8914%" y="773" width="0.5980%" height="15" fill="rgb(233,1,21)" fg:x="47750" fg:w="609"/><text x="47.1414%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_sub (609 samples, 0.60%)</title><rect x="46.8914%" y="757" width="0.5980%" height="15" fill="rgb(215,183,12)" fg:x="47750" fg:w="609"/><text x="47.1414%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (23 samples, 0.02%)</title><rect x="47.4895%" y="917" width="0.0226%" height="15" fill="rgb(229,104,42)" fg:x="48359" fg:w="23"/><text x="47.7395%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (23 samples, 0.02%)</title><rect x="47.4895%" y="901" width="0.0226%" height="15" fill="rgb(243,34,48)" fg:x="48359" fg:w="23"/><text x="47.7395%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1,383 samples, 1.36%)</title><rect x="47.5121%" y="917" width="1.3581%" height="15" fill="rgb(239,11,44)" fg:x="48382" fg:w="1383"/><text x="47.7621%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1,383 samples, 1.36%)</title><rect x="47.5121%" y="901" width="1.3581%" height="15" fill="rgb(231,98,35)" fg:x="48382" fg:w="1383"/><text x="47.7621%" y="911.50"></text></g><g><title>async_task::header::Header::register (2,890 samples, 2.84%)</title><rect x="46.0331%" y="933" width="2.8380%" height="15" fill="rgb(233,28,25)" fg:x="46876" fg:w="2890"/><text x="46.2831%" y="943.50">as..</text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (3,347 samples, 3.29%)</title><rect x="45.8966%" y="949" width="3.2868%" height="15" fill="rgb(234,123,11)" fg:x="46737" fg:w="3347"/><text x="46.1466%" y="959.50">asy..</text></g><g><title>core::sync::atomic::AtomicUsize::load (314 samples, 0.31%)</title><rect x="48.8751%" y="933" width="0.3084%" height="15" fill="rgb(220,69,3)" fg:x="49770" fg:w="314"/><text x="49.1251%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (314 samples, 0.31%)</title><rect x="48.8751%" y="917" width="0.3084%" height="15" fill="rgb(214,64,36)" fg:x="49770" fg:w="314"/><text x="49.1251%" y="927.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (3,370 samples, 3.31%)</title><rect x="45.8760%" y="981" width="3.3094%" height="15" fill="rgb(211,138,32)" fg:x="46716" fg:w="3370"/><text x="46.1260%" y="991.50">&lt;&amp;m..</text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (3,369 samples, 3.31%)</title><rect x="45.8770%" y="965" width="3.3084%" height="15" fill="rgb(213,118,47)" fg:x="46717" fg:w="3369"/><text x="46.1270%" y="975.50">&lt;as..</text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (3,371 samples, 3.31%)</title><rect x="45.8760%" y="997" width="3.3104%" height="15" fill="rgb(243,124,49)" fg:x="46716" fg:w="3371"/><text x="46.1260%" y="1007.50">&lt;fu..</text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (25 samples, 0.02%)</title><rect x="49.1864%" y="997" width="0.0246%" height="15" fill="rgb(221,30,28)" fg:x="50087" fg:w="25"/><text x="49.4364%" y="1007.50"></text></g><g><title>core::cell::BorrowRefMut::new (25 samples, 0.02%)</title><rect x="49.1864%" y="981" width="0.0246%" height="15" fill="rgb(246,37,13)" fg:x="50087" fg:w="25"/><text x="49.4364%" y="991.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (24 samples, 0.02%)</title><rect x="49.1874%" y="965" width="0.0236%" height="15" fill="rgb(249,66,14)" fg:x="50088" fg:w="24"/><text x="49.4374%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (24 samples, 0.02%)</title><rect x="49.1874%" y="949" width="0.0236%" height="15" fill="rgb(213,166,5)" fg:x="50088" fg:w="24"/><text x="49.4374%" y="959.50"></text></g><g><title>core::mem::replace (24 samples, 0.02%)</title><rect x="49.1874%" y="933" width="0.0236%" height="15" fill="rgb(221,66,24)" fg:x="50088" fg:w="24"/><text x="49.4374%" y="943.50"></text></g><g><title>core::ptr::write (24 samples, 0.02%)</title><rect x="49.1874%" y="917" width="0.0236%" height="15" fill="rgb(210,132,17)" fg:x="50088" fg:w="24"/><text x="49.4374%" y="927.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (19 samples, 0.02%)</title><rect x="49.2109%" y="997" width="0.0187%" height="15" fill="rgb(243,202,5)" fg:x="50112" fg:w="19"/><text x="49.4609%" y="1007.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (19 samples, 0.02%)</title><rect x="49.2109%" y="981" width="0.0187%" height="15" fill="rgb(233,70,48)" fg:x="50112" fg:w="19"/><text x="49.4609%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (37 samples, 0.04%)</title><rect x="49.2296%" y="997" width="0.0363%" height="15" fill="rgb(238,41,26)" fg:x="50131" fg:w="37"/><text x="49.4796%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (37 samples, 0.04%)</title><rect x="49.2296%" y="981" width="0.0363%" height="15" fill="rgb(241,19,31)" fg:x="50131" fg:w="37"/><text x="49.4796%" y="991.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (37 samples, 0.04%)</title><rect x="49.2296%" y="965" width="0.0363%" height="15" fill="rgb(214,76,10)" fg:x="50131" fg:w="37"/><text x="49.4796%" y="975.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (37 samples, 0.04%)</title><rect x="49.2296%" y="949" width="0.0363%" height="15" fill="rgb(254,202,22)" fg:x="50131" fg:w="37"/><text x="49.4796%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (37 samples, 0.04%)</title><rect x="49.2296%" y="933" width="0.0363%" height="15" fill="rgb(214,72,24)" fg:x="50131" fg:w="37"/><text x="49.4796%" y="943.50"></text></g><g><title>core::mem::replace (37 samples, 0.04%)</title><rect x="49.2296%" y="917" width="0.0363%" height="15" fill="rgb(221,92,46)" fg:x="50131" fg:w="37"/><text x="49.4796%" y="927.50"></text></g><g><title>core::ptr::write (37 samples, 0.04%)</title><rect x="49.2296%" y="901" width="0.0363%" height="15" fill="rgb(246,13,50)" fg:x="50131" fg:w="37"/><text x="49.4796%" y="911.50"></text></g><g><title>__futex_abstimed_wait_common64 (13 samples, 0.01%)</title><rect x="49.2974%" y="901" width="0.0128%" height="15" fill="rgb(240,165,38)" fg:x="50200" fg:w="13"/><text x="49.5474%" y="911.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (37 samples, 0.04%)</title><rect x="49.2787%" y="933" width="0.0363%" height="15" fill="rgb(241,24,51)" fg:x="50181" fg:w="37"/><text x="49.5287%" y="943.50"></text></g><g><title>__pthread_cond_wait (37 samples, 0.04%)</title><rect x="49.2787%" y="917" width="0.0363%" height="15" fill="rgb(227,51,44)" fg:x="50181" fg:w="37"/><text x="49.5287%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait (42 samples, 0.04%)</title><rect x="49.2748%" y="965" width="0.0412%" height="15" fill="rgb(231,121,3)" fg:x="50177" fg:w="42"/><text x="49.5248%" y="975.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (38 samples, 0.04%)</title><rect x="49.2787%" y="949" width="0.0373%" height="15" fill="rgb(245,3,41)" fg:x="50181" fg:w="38"/><text x="49.5287%" y="959.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (3,532 samples, 3.47%)</title><rect x="45.8505%" y="1013" width="3.4685%" height="15" fill="rgb(214,13,26)" fg:x="46690" fg:w="3532"/><text x="46.1005%" y="1023.50">fut..</text></g><g><title>parking::Parker::park (54 samples, 0.05%)</title><rect x="49.2659%" y="997" width="0.0530%" height="15" fill="rgb(252,75,11)" fg:x="50168" fg:w="54"/><text x="49.5159%" y="1007.50"></text></g><g><title>parking::Inner::park (54 samples, 0.05%)</title><rect x="49.2659%" y="981" width="0.0530%" height="15" fill="rgb(218,226,17)" fg:x="50168" fg:w="54"/><text x="49.5159%" y="991.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (12,509 samples, 12.28%)</title><rect x="37.0673%" y="1077" width="12.2841%" height="15" fill="rgb(248,89,38)" fg:x="37746" fg:w="12509"/><text x="37.3173%" y="1087.50">bevy_tasks::task_p..</text></g><g><title>futures_lite::future::block_on (3,736 samples, 3.67%)</title><rect x="45.6826%" y="1061" width="3.6688%" height="15" fill="rgb(237,73,46)" fg:x="46519" fg:w="3736"/><text x="45.9326%" y="1071.50">futu..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,672 samples, 3.61%)</title><rect x="45.7454%" y="1045" width="3.6060%" height="15" fill="rgb(242,78,33)" fg:x="46583" fg:w="3672"/><text x="45.9954%" y="1055.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,631 samples, 3.57%)</title><rect x="45.7857%" y="1029" width="3.5657%" height="15" fill="rgb(235,60,3)" fg:x="46624" fg:w="3631"/><text x="46.0357%" y="1039.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (33 samples, 0.03%)</title><rect x="49.3190%" y="1013" width="0.0324%" height="15" fill="rgb(216,172,19)" fg:x="50222" fg:w="33"/><text x="49.5690%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (12,516 samples, 12.29%)</title><rect x="37.0624%" y="1141" width="12.2910%" height="15" fill="rgb(227,6,42)" fg:x="37741" fg:w="12516"/><text x="37.3124%" y="1151.50">&lt;bevy_ecs::schedul..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (12,516 samples, 12.29%)</title><rect x="37.0624%" y="1125" width="12.2910%" height="15" fill="rgb(223,207,42)" fg:x="37741" fg:w="12516"/><text x="37.3124%" y="1135.50">bevy_tasks::task_p..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12,516 samples, 12.29%)</title><rect x="37.0624%" y="1109" width="12.2910%" height="15" fill="rgb(246,138,30)" fg:x="37741" fg:w="12516"/><text x="37.3124%" y="1119.50">std::thread::local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12,514 samples, 12.29%)</title><rect x="37.0644%" y="1093" width="12.2890%" height="15" fill="rgb(251,199,47)" fg:x="37743" fg:w="12514"/><text x="37.3144%" y="1103.50">std::thread::local..</text></g><g><title>bevy_ecs::storage::table::Column::set_unchecked (13 samples, 0.01%)</title><rect x="49.3661%" y="1045" width="0.0128%" height="15" fill="rgb(228,218,44)" fg:x="50270" fg:w="13"/><text x="49.6161%" y="1055.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::set_unchecked (13 samples, 0.01%)</title><rect x="49.3661%" y="1029" width="0.0128%" height="15" fill="rgb(220,68,6)" fg:x="50270" fg:w="13"/><text x="49.6161%" y="1039.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (13 samples, 0.01%)</title><rect x="49.3661%" y="1013" width="0.0128%" height="15" fill="rgb(240,60,26)" fg:x="50270" fg:w="13"/><text x="49.6161%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="49.3661%" y="997" width="0.0128%" height="15" fill="rgb(211,200,19)" fg:x="50270" fg:w="13"/><text x="49.6161%" y="1007.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (22 samples, 0.02%)</title><rect x="49.3789%" y="1045" width="0.0216%" height="15" fill="rgb(242,145,30)" fg:x="50283" fg:w="22"/><text x="49.6289%" y="1055.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (12 samples, 0.01%)</title><rect x="49.3887%" y="1029" width="0.0118%" height="15" fill="rgb(225,64,13)" fg:x="50293" fg:w="12"/><text x="49.6387%" y="1039.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (11 samples, 0.01%)</title><rect x="49.4005%" y="1045" width="0.0108%" height="15" fill="rgb(218,103,35)" fg:x="50305" fg:w="11"/><text x="49.6505%" y="1055.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (50 samples, 0.05%)</title><rect x="49.3641%" y="1061" width="0.0491%" height="15" fill="rgb(216,93,46)" fg:x="50268" fg:w="50"/><text x="49.6141%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (64 samples, 0.06%)</title><rect x="49.3533%" y="1109" width="0.0628%" height="15" fill="rgb(225,159,27)" fg:x="50257" fg:w="64"/><text x="49.6033%" y="1119.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (64 samples, 0.06%)</title><rect x="49.3533%" y="1093" width="0.0628%" height="15" fill="rgb(225,204,11)" fg:x="50257" fg:w="64"/><text x="49.6033%" y="1103.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (64 samples, 0.06%)</title><rect x="49.3533%" y="1077" width="0.0628%" height="15" fill="rgb(205,56,4)" fg:x="50257" fg:w="64"/><text x="49.6033%" y="1087.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (78 samples, 0.08%)</title><rect x="49.3533%" y="1141" width="0.0766%" height="15" fill="rgb(206,6,35)" fg:x="50257" fg:w="78"/><text x="49.6033%" y="1151.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (78 samples, 0.08%)</title><rect x="49.3533%" y="1125" width="0.0766%" height="15" fill="rgb(247,73,52)" fg:x="50257" fg:w="78"/><text x="49.6033%" y="1135.50"></text></g><g><title>egui::containers::window::Window::new (14 samples, 0.01%)</title><rect x="49.4427%" y="1029" width="0.0137%" height="15" fill="rgb(246,97,4)" fg:x="50348" fg:w="14"/><text x="49.6927%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (29 samples, 0.03%)</title><rect x="49.4299%" y="1141" width="0.0285%" height="15" fill="rgb(212,37,15)" fg:x="50335" fg:w="29"/><text x="49.6799%" y="1151.50"></text></g><g><title>bevy_ecs::system::system::System::run (29 samples, 0.03%)</title><rect x="49.4299%" y="1125" width="0.0285%" height="15" fill="rgb(208,130,40)" fg:x="50335" fg:w="29"/><text x="49.6799%" y="1135.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (29 samples, 0.03%)</title><rect x="49.4299%" y="1109" width="0.0285%" height="15" fill="rgb(236,55,29)" fg:x="50335" fg:w="29"/><text x="49.6799%" y="1119.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (29 samples, 0.03%)</title><rect x="49.4299%" y="1093" width="0.0285%" height="15" fill="rgb(209,156,45)" fg:x="50335" fg:w="29"/><text x="49.6799%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (29 samples, 0.03%)</title><rect x="49.4299%" y="1077" width="0.0285%" height="15" fill="rgb(249,107,4)" fg:x="50335" fg:w="29"/><text x="49.6799%" y="1087.50"></text></g><g><title>core::ops::function::Fn::call (28 samples, 0.03%)</title><rect x="49.4309%" y="1061" width="0.0275%" height="15" fill="rgb(227,7,13)" fg:x="50336" fg:w="28"/><text x="49.6809%" y="1071.50"></text></g><g><title>bevy_console::console_system (28 samples, 0.03%)</title><rect x="49.4309%" y="1045" width="0.0275%" height="15" fill="rgb(250,129,14)" fg:x="50336" fg:w="28"/><text x="49.6809%" y="1055.50"></text></g><g><title>bevy_gilrs::gilrs_system::gilrs_event_system (26 samples, 0.03%)</title><rect x="49.4643%" y="1109" width="0.0255%" height="15" fill="rgb(229,92,13)" fg:x="50370" fg:w="26"/><text x="49.7143%" y="1119.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event (16 samples, 0.02%)</title><rect x="49.4741%" y="1093" width="0.0157%" height="15" fill="rgb(245,98,39)" fg:x="50380" fg:w="16"/><text x="49.7241%" y="1103.50"></text></g><g><title>gilrs::gamepad::Gilrs::next_event_priv (13 samples, 0.01%)</title><rect x="49.4771%" y="1077" width="0.0128%" height="15" fill="rgb(234,135,48)" fg:x="50383" fg:w="13"/><text x="49.7271%" y="1087.50"></text></g><g><title>gilrs_core::Gilrs::next_event (13 samples, 0.01%)</title><rect x="49.4771%" y="1061" width="0.0128%" height="15" fill="rgb(230,98,28)" fg:x="50383" fg:w="13"/><text x="49.7271%" y="1071.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::next_event (13 samples, 0.01%)</title><rect x="49.4771%" y="1045" width="0.0128%" height="15" fill="rgb(223,121,0)" fg:x="50383" fg:w="13"/><text x="49.7271%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (23 samples, 0.02%)</title><rect x="49.4898%" y="1061" width="0.0226%" height="15" fill="rgb(234,173,33)" fg:x="50396" fg:w="23"/><text x="49.7398%" y="1071.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (32 samples, 0.03%)</title><rect x="49.4898%" y="1109" width="0.0314%" height="15" fill="rgb(245,47,8)" fg:x="50396" fg:w="32"/><text x="49.7398%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (32 samples, 0.03%)</title><rect x="49.4898%" y="1093" width="0.0314%" height="15" fill="rgb(205,17,20)" fg:x="50396" fg:w="32"/><text x="49.7398%" y="1103.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (32 samples, 0.03%)</title><rect x="49.4898%" y="1077" width="0.0314%" height="15" fill="rgb(232,151,16)" fg:x="50396" fg:w="32"/><text x="49.7398%" y="1087.50"></text></g><g><title>_XGetRequest (13 samples, 0.01%)</title><rect x="49.6362%" y="709" width="0.0128%" height="15" fill="rgb(208,30,32)" fg:x="50545" fg:w="13"/><text x="49.8862%" y="719.50"></text></g><g><title>XSync (39 samples, 0.04%)</title><rect x="49.6342%" y="725" width="0.0383%" height="15" fill="rgb(254,26,3)" fg:x="50543" fg:w="39"/><text x="49.8842%" y="735.50"></text></g><g><title>_XReply (24 samples, 0.02%)</title><rect x="49.6489%" y="709" width="0.0236%" height="15" fill="rgb(240,177,30)" fg:x="50558" fg:w="24"/><text x="49.8989%" y="719.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (51 samples, 0.05%)</title><rect x="49.6263%" y="741" width="0.0501%" height="15" fill="rgb(248,76,44)" fg:x="50535" fg:w="51"/><text x="49.8763%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.03%)</title><rect x="49.7589%" y="709" width="0.0295%" height="15" fill="rgb(241,186,54)" fg:x="50670" fg:w="30"/><text x="50.0089%" y="719.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (267 samples, 0.26%)</title><rect x="49.5272%" y="885" width="0.2622%" height="15" fill="rgb(249,171,29)" fg:x="50434" fg:w="267"/><text x="49.7772%" y="895.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (262 samples, 0.26%)</title><rect x="49.5321%" y="869" width="0.2573%" height="15" fill="rgb(237,151,44)" fg:x="50439" fg:w="262"/><text x="49.7821%" y="879.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (260 samples, 0.26%)</title><rect x="49.5340%" y="853" width="0.2553%" height="15" fill="rgb(228,174,30)" fg:x="50441" fg:w="260"/><text x="49.7840%" y="863.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (260 samples, 0.26%)</title><rect x="49.5340%" y="837" width="0.2553%" height="15" fill="rgb(252,14,37)" fg:x="50441" fg:w="260"/><text x="49.7840%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (253 samples, 0.25%)</title><rect x="49.5409%" y="821" width="0.2485%" height="15" fill="rgb(207,111,40)" fg:x="50448" fg:w="253"/><text x="49.7909%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (246 samples, 0.24%)</title><rect x="49.5478%" y="805" width="0.2416%" height="15" fill="rgb(248,171,54)" fg:x="50455" fg:w="246"/><text x="49.7978%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (223 samples, 0.22%)</title><rect x="49.5704%" y="789" width="0.2190%" height="15" fill="rgb(211,127,2)" fg:x="50478" fg:w="223"/><text x="49.8204%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (213 samples, 0.21%)</title><rect x="49.5802%" y="773" width="0.2092%" height="15" fill="rgb(236,87,47)" fg:x="50488" fg:w="213"/><text x="49.8302%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (184 samples, 0.18%)</title><rect x="49.6087%" y="757" width="0.1807%" height="15" fill="rgb(223,190,45)" fg:x="50517" fg:w="184"/><text x="49.8587%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (115 samples, 0.11%)</title><rect x="49.6764%" y="741" width="0.1129%" height="15" fill="rgb(215,5,16)" fg:x="50586" fg:w="115"/><text x="49.9264%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (63 samples, 0.06%)</title><rect x="49.7275%" y="725" width="0.0619%" height="15" fill="rgb(252,82,33)" fg:x="50638" fg:w="63"/><text x="49.9775%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (291 samples, 0.29%)</title><rect x="49.5213%" y="1093" width="0.2858%" height="15" fill="rgb(247,213,44)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (291 samples, 0.29%)</title><rect x="49.5213%" y="1077" width="0.2858%" height="15" fill="rgb(205,196,44)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (291 samples, 0.29%)</title><rect x="49.5213%" y="1061" width="0.2858%" height="15" fill="rgb(237,96,54)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (291 samples, 0.29%)</title><rect x="49.5213%" y="1045" width="0.2858%" height="15" fill="rgb(230,113,34)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (291 samples, 0.29%)</title><rect x="49.5213%" y="1029" width="0.2858%" height="15" fill="rgb(221,224,12)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="1039.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (291 samples, 0.29%)</title><rect x="49.5213%" y="1013" width="0.2858%" height="15" fill="rgb(219,112,44)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="1023.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (291 samples, 0.29%)</title><rect x="49.5213%" y="997" width="0.2858%" height="15" fill="rgb(210,31,13)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (291 samples, 0.29%)</title><rect x="49.5213%" y="981" width="0.2858%" height="15" fill="rgb(230,25,16)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (291 samples, 0.29%)</title><rect x="49.5213%" y="965" width="0.2858%" height="15" fill="rgb(246,108,53)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (291 samples, 0.29%)</title><rect x="49.5213%" y="949" width="0.2858%" height="15" fill="rgb(241,172,50)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="959.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (291 samples, 0.29%)</title><rect x="49.5213%" y="933" width="0.2858%" height="15" fill="rgb(235,141,10)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (291 samples, 0.29%)</title><rect x="49.5213%" y="917" width="0.2858%" height="15" fill="rgb(220,174,43)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="927.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (291 samples, 0.29%)</title><rect x="49.5213%" y="901" width="0.2858%" height="15" fill="rgb(215,181,40)" fg:x="50428" fg:w="291"/><text x="49.7713%" y="911.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::remove_stale_bind_groups (25 samples, 0.02%)</title><rect x="49.8070%" y="1093" width="0.0246%" height="15" fill="rgb(230,97,2)" fg:x="50719" fg:w="25"/><text x="50.0570%" y="1103.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::remove_stale_bind_groups (25 samples, 0.02%)</title><rect x="49.8070%" y="1077" width="0.0246%" height="15" fill="rgb(211,25,27)" fg:x="50719" fg:w="25"/><text x="50.0570%" y="1087.50"></text></g><g><title>bevy_wgpu::wgpu_resources::BindGroupCounter::remove_stale_bind_groups (25 samples, 0.02%)</title><rect x="49.8070%" y="1061" width="0.0246%" height="15" fill="rgb(230,87,26)" fg:x="50719" fg:w="25"/><text x="50.0570%" y="1071.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (25 samples, 0.02%)</title><rect x="49.8070%" y="1045" width="0.0246%" height="15" fill="rgb(227,160,17)" fg:x="50719" fg:w="25"/><text x="50.0570%" y="1055.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (25 samples, 0.02%)</title><rect x="49.8070%" y="1029" width="0.0246%" height="15" fill="rgb(244,85,34)" fg:x="50719" fg:w="25"/><text x="50.0570%" y="1039.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (25 samples, 0.02%)</title><rect x="49.8070%" y="1013" width="0.0246%" height="15" fill="rgb(207,70,0)" fg:x="50719" fg:w="25"/><text x="50.0570%" y="1023.50"></text></g><g><title>__rdl_dealloc (25 samples, 0.02%)</title><rect x="49.8070%" y="997" width="0.0246%" height="15" fill="rgb(223,129,7)" fg:x="50719" fg:w="25"/><text x="50.0570%" y="1007.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (25 samples, 0.02%)</title><rect x="49.8070%" y="981" width="0.0246%" height="15" fill="rgb(246,105,7)" fg:x="50719" fg:w="25"/><text x="50.0570%" y="991.50"></text></g><g><title>__GI___libc_free (25 samples, 0.02%)</title><rect x="49.8070%" y="965" width="0.0246%" height="15" fill="rgb(215,154,42)" fg:x="50719" fg:w="25"/><text x="50.0570%" y="975.50"></text></g><g><title>_int_free (19 samples, 0.02%)</title><rect x="49.8129%" y="949" width="0.0187%" height="15" fill="rgb(220,215,30)" fg:x="50725" fg:w="19"/><text x="50.0629%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (22 samples, 0.02%)</title><rect x="49.8620%" y="965" width="0.0216%" height="15" fill="rgb(228,81,51)" fg:x="50775" fg:w="22"/><text x="50.1120%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (22 samples, 0.02%)</title><rect x="49.8620%" y="949" width="0.0216%" height="15" fill="rgb(247,71,54)" fg:x="50775" fg:w="22"/><text x="50.1120%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (22 samples, 0.02%)</title><rect x="49.8620%" y="933" width="0.0216%" height="15" fill="rgb(234,176,34)" fg:x="50775" fg:w="22"/><text x="50.1120%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (13 samples, 0.01%)</title><rect x="49.8709%" y="917" width="0.0128%" height="15" fill="rgb(241,103,54)" fg:x="50784" fg:w="13"/><text x="50.1209%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (13 samples, 0.01%)</title><rect x="49.8709%" y="901" width="0.0128%" height="15" fill="rgb(228,22,34)" fg:x="50784" fg:w="13"/><text x="50.1209%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (13 samples, 0.01%)</title><rect x="49.8709%" y="885" width="0.0128%" height="15" fill="rgb(241,179,48)" fg:x="50784" fg:w="13"/><text x="50.1209%" y="895.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (13 samples, 0.01%)</title><rect x="49.8709%" y="869" width="0.0128%" height="15" fill="rgb(235,167,37)" fg:x="50784" fg:w="13"/><text x="50.1209%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="49.8709%" y="853" width="0.0128%" height="15" fill="rgb(213,109,30)" fg:x="50784" fg:w="13"/><text x="50.1209%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="49.8709%" y="837" width="0.0128%" height="15" fill="rgb(222,172,16)" fg:x="50784" fg:w="13"/><text x="50.1209%" y="847.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="49.8709%" y="821" width="0.0128%" height="15" fill="rgb(233,192,5)" fg:x="50784" fg:w="13"/><text x="50.1209%" y="831.50"></text></g><g><title>__rdl_alloc (13 samples, 0.01%)</title><rect x="49.8709%" y="805" width="0.0128%" height="15" fill="rgb(247,189,41)" fg:x="50784" fg:w="13"/><text x="50.1209%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (13 samples, 0.01%)</title><rect x="49.8709%" y="789" width="0.0128%" height="15" fill="rgb(218,134,47)" fg:x="50784" fg:w="13"/><text x="50.1209%" y="799.50"></text></g><g><title>__GI___libc_malloc (13 samples, 0.01%)</title><rect x="49.8709%" y="773" width="0.0128%" height="15" fill="rgb(216,29,3)" fg:x="50784" fg:w="13"/><text x="50.1209%" y="783.50"></text></g><g><title>bevy_render::render_graph::schedule::Stages::new (39 samples, 0.04%)</title><rect x="49.8493%" y="1029" width="0.0383%" height="15" fill="rgb(246,140,12)" fg:x="50762" fg:w="39"/><text x="50.0993%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (38 samples, 0.04%)</title><rect x="49.8502%" y="1013" width="0.0373%" height="15" fill="rgb(230,136,11)" fg:x="50763" fg:w="38"/><text x="50.1002%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (37 samples, 0.04%)</title><rect x="49.8512%" y="997" width="0.0363%" height="15" fill="rgb(247,22,47)" fg:x="50764" fg:w="37"/><text x="50.1012%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (28 samples, 0.03%)</title><rect x="49.8601%" y="981" width="0.0275%" height="15" fill="rgb(218,84,22)" fg:x="50773" fg:w="28"/><text x="50.1101%" y="991.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="49.8935%" y="997" width="0.0167%" height="15" fill="rgb(216,87,39)" fg:x="50807" fg:w="17"/><text x="50.1435%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.02%)</title><rect x="49.8935%" y="981" width="0.0167%" height="15" fill="rgb(221,178,8)" fg:x="50807" fg:w="17"/><text x="50.1435%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (17 samples, 0.02%)</title><rect x="49.8935%" y="965" width="0.0167%" height="15" fill="rgb(230,42,11)" fg:x="50807" fg:w="17"/><text x="50.1435%" y="975.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::iter_node_outputs::{{closure}} (17 samples, 0.02%)</title><rect x="49.8935%" y="949" width="0.0167%" height="15" fill="rgb(237,229,4)" fg:x="50807" fg:w="17"/><text x="50.1435%" y="959.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (17 samples, 0.02%)</title><rect x="49.8935%" y="933" width="0.0167%" height="15" fill="rgb(222,31,33)" fg:x="50807" fg:w="17"/><text x="50.1435%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (25 samples, 0.02%)</title><rect x="49.8935%" y="1013" width="0.0246%" height="15" fill="rgb(210,17,39)" fg:x="50807" fg:w="25"/><text x="50.1435%" y="1023.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (29 samples, 0.03%)</title><rect x="49.9259%" y="917" width="0.0285%" height="15" fill="rgb(244,93,20)" fg:x="50840" fg:w="29"/><text x="50.1759%" y="927.50"></text></g><g><title>alloc::alloc::Global::grow_impl (29 samples, 0.03%)</title><rect x="49.9259%" y="901" width="0.0285%" height="15" fill="rgb(210,40,47)" fg:x="50840" fg:w="29"/><text x="50.1759%" y="911.50"></text></g><g><title>alloc::alloc::realloc (29 samples, 0.03%)</title><rect x="49.9259%" y="885" width="0.0285%" height="15" fill="rgb(239,211,47)" fg:x="50840" fg:w="29"/><text x="50.1759%" y="895.50"></text></g><g><title>__rdl_realloc (29 samples, 0.03%)</title><rect x="49.9259%" y="869" width="0.0285%" height="15" fill="rgb(251,223,49)" fg:x="50840" fg:w="29"/><text x="50.1759%" y="879.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (29 samples, 0.03%)</title><rect x="49.9259%" y="853" width="0.0285%" height="15" fill="rgb(221,149,5)" fg:x="50840" fg:w="29"/><text x="50.1759%" y="863.50"></text></g><g><title>__GI___libc_realloc (29 samples, 0.03%)</title><rect x="49.9259%" y="837" width="0.0285%" height="15" fill="rgb(219,224,51)" fg:x="50840" fg:w="29"/><text x="50.1759%" y="847.50"></text></g><g><title>_int_realloc (26 samples, 0.03%)</title><rect x="49.9288%" y="821" width="0.0255%" height="15" fill="rgb(223,7,8)" fg:x="50843" fg:w="26"/><text x="50.1788%" y="831.50"></text></g><g><title>_int_malloc (14 samples, 0.01%)</title><rect x="49.9406%" y="805" width="0.0137%" height="15" fill="rgb(241,217,22)" fg:x="50855" fg:w="14"/><text x="50.1906%" y="815.50"></text></g><g><title>alloc::raw_vec::finish_grow (62 samples, 0.06%)</title><rect x="49.9239%" y="933" width="0.0609%" height="15" fill="rgb(248,209,0)" fg:x="50838" fg:w="62"/><text x="50.1739%" y="943.50"></text></g><g><title>__GI___libc_malloc (31 samples, 0.03%)</title><rect x="49.9543%" y="917" width="0.0304%" height="15" fill="rgb(217,205,4)" fg:x="50869" fg:w="31"/><text x="50.2043%" y="927.50"></text></g><g><title>_int_malloc (18 samples, 0.02%)</title><rect x="49.9671%" y="901" width="0.0177%" height="15" fill="rgb(228,124,39)" fg:x="50882" fg:w="18"/><text x="50.2171%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (64 samples, 0.06%)</title><rect x="49.9229%" y="997" width="0.0628%" height="15" fill="rgb(250,116,42)" fg:x="50837" fg:w="64"/><text x="50.1729%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (64 samples, 0.06%)</title><rect x="49.9229%" y="981" width="0.0628%" height="15" fill="rgb(223,202,9)" fg:x="50837" fg:w="64"/><text x="50.1729%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (64 samples, 0.06%)</title><rect x="49.9229%" y="965" width="0.0628%" height="15" fill="rgb(242,222,40)" fg:x="50837" fg:w="64"/><text x="50.1729%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (64 samples, 0.06%)</title><rect x="49.9229%" y="949" width="0.0628%" height="15" fill="rgb(229,99,46)" fg:x="50837" fg:w="64"/><text x="50.1729%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (70 samples, 0.07%)</title><rect x="49.9190%" y="1013" width="0.0687%" height="15" fill="rgb(225,56,46)" fg:x="50833" fg:w="70"/><text x="50.1690%" y="1023.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::iter_node_outputs (15 samples, 0.01%)</title><rect x="49.9877%" y="1013" width="0.0147%" height="15" fill="rgb(227,94,5)" fg:x="50903" fg:w="15"/><text x="50.2377%" y="1023.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::get_node_state (14 samples, 0.01%)</title><rect x="49.9887%" y="997" width="0.0137%" height="15" fill="rgb(205,112,38)" fg:x="50904" fg:w="14"/><text x="50.2387%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (11 samples, 0.01%)</title><rect x="49.9917%" y="981" width="0.0108%" height="15" fill="rgb(231,133,46)" fg:x="50907" fg:w="11"/><text x="50.2417%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (11 samples, 0.01%)</title><rect x="49.9917%" y="965" width="0.0108%" height="15" fill="rgb(217,16,9)" fg:x="50907" fg:w="11"/><text x="50.2417%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.01%)</title><rect x="49.9917%" y="949" width="0.0108%" height="15" fill="rgb(249,173,9)" fg:x="50907" fg:w="11"/><text x="50.2417%" y="959.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::any (18 samples, 0.02%)</title><rect x="50.0113%" y="997" width="0.0177%" height="15" fill="rgb(205,163,53)" fg:x="50927" fg:w="18"/><text x="50.2613%" y="1007.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node::{{closure}} (17 samples, 0.02%)</title><rect x="50.0123%" y="981" width="0.0167%" height="15" fill="rgb(217,54,41)" fg:x="50928" fg:w="17"/><text x="50.2623%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (11 samples, 0.01%)</title><rect x="50.0182%" y="965" width="0.0108%" height="15" fill="rgb(228,216,12)" fg:x="50934" fg:w="11"/><text x="50.2682%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (11 samples, 0.01%)</title><rect x="50.0182%" y="949" width="0.0108%" height="15" fill="rgb(244,228,15)" fg:x="50934" fg:w="11"/><text x="50.2682%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (11 samples, 0.01%)</title><rect x="50.0182%" y="933" width="0.0108%" height="15" fill="rgb(221,176,53)" fg:x="50934" fg:w="11"/><text x="50.2682%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.01%)</title><rect x="50.0182%" y="917" width="0.0108%" height="15" fill="rgb(205,94,34)" fg:x="50934" fg:w="11"/><text x="50.2682%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.01%)</title><rect x="50.0182%" y="901" width="0.0108%" height="15" fill="rgb(213,110,48)" fg:x="50934" fg:w="11"/><text x="50.2682%" y="911.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (22 samples, 0.02%)</title><rect x="50.0329%" y="997" width="0.0216%" height="15" fill="rgb(236,142,28)" fg:x="50949" fg:w="22"/><text x="50.2829%" y="1007.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (65 samples, 0.06%)</title><rect x="50.0025%" y="1013" width="0.0638%" height="15" fill="rgb(225,135,29)" fg:x="50918" fg:w="65"/><text x="50.2525%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (41 samples, 0.04%)</title><rect x="50.0751%" y="965" width="0.0403%" height="15" fill="rgb(252,45,31)" fg:x="50992" fg:w="41"/><text x="50.3251%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (41 samples, 0.04%)</title><rect x="50.0751%" y="949" width="0.0403%" height="15" fill="rgb(211,187,50)" fg:x="50992" fg:w="41"/><text x="50.3251%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (40 samples, 0.04%)</title><rect x="50.0761%" y="933" width="0.0393%" height="15" fill="rgb(229,109,7)" fg:x="50993" fg:w="40"/><text x="50.3261%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (29 samples, 0.03%)</title><rect x="50.0869%" y="917" width="0.0285%" height="15" fill="rgb(251,131,51)" fg:x="51004" fg:w="29"/><text x="50.3369%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (29 samples, 0.03%)</title><rect x="50.0869%" y="901" width="0.0285%" height="15" fill="rgb(251,180,35)" fg:x="51004" fg:w="29"/><text x="50.3369%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (28 samples, 0.03%)</title><rect x="50.0879%" y="885" width="0.0275%" height="15" fill="rgb(211,46,32)" fg:x="51005" fg:w="28"/><text x="50.3379%" y="895.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (27 samples, 0.03%)</title><rect x="50.0889%" y="869" width="0.0265%" height="15" fill="rgb(248,123,17)" fg:x="51006" fg:w="27"/><text x="50.3389%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.03%)</title><rect x="50.0889%" y="853" width="0.0265%" height="15" fill="rgb(227,141,18)" fg:x="51006" fg:w="27"/><text x="50.3389%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.03%)</title><rect x="50.0889%" y="837" width="0.0265%" height="15" fill="rgb(216,102,9)" fg:x="51006" fg:w="27"/><text x="50.3389%" y="847.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.03%)</title><rect x="50.0889%" y="821" width="0.0265%" height="15" fill="rgb(253,47,13)" fg:x="51006" fg:w="27"/><text x="50.3389%" y="831.50"></text></g><g><title>__rdl_alloc (27 samples, 0.03%)</title><rect x="50.0889%" y="805" width="0.0265%" height="15" fill="rgb(226,93,23)" fg:x="51006" fg:w="27"/><text x="50.3389%" y="815.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (27 samples, 0.03%)</title><rect x="50.0889%" y="789" width="0.0265%" height="15" fill="rgb(247,104,17)" fg:x="51006" fg:w="27"/><text x="50.3389%" y="799.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.03%)</title><rect x="50.0899%" y="773" width="0.0255%" height="15" fill="rgb(233,203,26)" fg:x="51007" fg:w="26"/><text x="50.3399%" y="783.50"></text></g><g><title>_int_malloc (21 samples, 0.02%)</title><rect x="50.0948%" y="757" width="0.0206%" height="15" fill="rgb(244,98,49)" fg:x="51012" fg:w="21"/><text x="50.3448%" y="767.50"></text></g><g><title>malloc_consolidate (16 samples, 0.02%)</title><rect x="50.0997%" y="741" width="0.0157%" height="15" fill="rgb(235,134,22)" fg:x="51017" fg:w="16"/><text x="50.3497%" y="751.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (239 samples, 0.23%)</title><rect x="49.8876%" y="1029" width="0.2347%" height="15" fill="rgb(221,70,32)" fg:x="50801" fg:w="239"/><text x="50.1376%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (56 samples, 0.05%)</title><rect x="50.0673%" y="1013" width="0.0550%" height="15" fill="rgb(238,15,50)" fg:x="50984" fg:w="56"/><text x="50.3173%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (56 samples, 0.05%)</title><rect x="50.0673%" y="997" width="0.0550%" height="15" fill="rgb(215,221,48)" fg:x="50984" fg:w="56"/><text x="50.3173%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (51 samples, 0.05%)</title><rect x="50.0722%" y="981" width="0.0501%" height="15" fill="rgb(236,73,3)" fg:x="50989" fg:w="51"/><text x="50.3222%" y="991.50"></text></g><g><title>&lt;bevy_render::render_graph::schedule::DependentNodeStager as bevy_render::render_graph::schedule::RenderGraphStager&gt;::get_stages (291 samples, 0.29%)</title><rect x="49.8394%" y="1045" width="0.2858%" height="15" fill="rgb(250,107,11)" fg:x="50752" fg:w="291"/><text x="50.0894%" y="1055.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::init_textures (17 samples, 0.02%)</title><rect x="50.1507%" y="1013" width="0.0167%" height="15" fill="rgb(242,39,14)" fg:x="51069" fg:w="17"/><text x="50.4007%" y="1023.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::process_asset_events (15 samples, 0.01%)</title><rect x="50.1674%" y="1013" width="0.0147%" height="15" fill="rgb(248,164,37)" fg:x="51086" fg:w="15"/><text x="50.4174%" y="1023.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (15 samples, 0.01%)</title><rect x="50.1831%" y="997" width="0.0147%" height="15" fill="rgb(217,60,12)" fg:x="51102" fg:w="15"/><text x="50.4331%" y="1007.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (15 samples, 0.01%)</title><rect x="50.1831%" y="981" width="0.0147%" height="15" fill="rgb(240,125,29)" fg:x="51102" fg:w="15"/><text x="50.4331%" y="991.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (15 samples, 0.01%)</title><rect x="50.1831%" y="965" width="0.0147%" height="15" fill="rgb(208,207,28)" fg:x="51102" fg:w="15"/><text x="50.4331%" y="975.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (15 samples, 0.01%)</title><rect x="50.1831%" y="949" width="0.0147%" height="15" fill="rgb(209,159,27)" fg:x="51102" fg:w="15"/><text x="50.4331%" y="959.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::iter::traits::collect::Extend&lt;(K,V)&gt;&gt;::extend (15 samples, 0.01%)</title><rect x="50.1831%" y="933" width="0.0147%" height="15" fill="rgb(251,176,53)" fg:x="51102" fg:w="15"/><text x="50.4331%" y="943.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::remove_unused_textures (22 samples, 0.02%)</title><rect x="50.1822%" y="1013" width="0.0216%" height="15" fill="rgb(211,85,7)" fg:x="51101" fg:w="22"/><text x="50.4322%" y="1023.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::prepare (87 samples, 0.09%)</title><rect x="50.1252%" y="1029" width="0.0854%" height="15" fill="rgb(216,64,54)" fg:x="51043" fg:w="87"/><text x="50.3752%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (14 samples, 0.01%)</title><rect x="50.3226%" y="869" width="0.0137%" height="15" fill="rgb(217,54,24)" fg:x="51244" fg:w="14"/><text x="50.5726%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (14 samples, 0.01%)</title><rect x="50.3226%" y="853" width="0.0137%" height="15" fill="rgb(208,206,53)" fg:x="51244" fg:w="14"/><text x="50.5726%" y="863.50"></text></g><g><title>core::ptr::write (14 samples, 0.01%)</title><rect x="50.3226%" y="837" width="0.0137%" height="15" fill="rgb(251,74,39)" fg:x="51244" fg:w="14"/><text x="50.5726%" y="847.50"></text></g><g><title>&lt;bevy_render::draw::RenderCommand as core::clone::Clone&gt;::clone (19 samples, 0.02%)</title><rect x="50.3363%" y="853" width="0.0187%" height="15" fill="rgb(226,47,5)" fg:x="51258" fg:w="19"/><text x="50.5863%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (74 samples, 0.07%)</title><rect x="50.2833%" y="981" width="0.0727%" height="15" fill="rgb(234,111,33)" fg:x="51204" fg:w="74"/><text x="50.5333%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (74 samples, 0.07%)</title><rect x="50.2833%" y="965" width="0.0727%" height="15" fill="rgb(251,14,10)" fg:x="51204" fg:w="74"/><text x="50.5333%" y="975.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (71 samples, 0.07%)</title><rect x="50.2863%" y="949" width="0.0697%" height="15" fill="rgb(232,43,0)" fg:x="51207" fg:w="71"/><text x="50.5363%" y="959.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (71 samples, 0.07%)</title><rect x="50.2863%" y="933" width="0.0697%" height="15" fill="rgb(222,68,43)" fg:x="51207" fg:w="71"/><text x="50.5363%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (68 samples, 0.07%)</title><rect x="50.2892%" y="917" width="0.0668%" height="15" fill="rgb(217,24,23)" fg:x="51210" fg:w="68"/><text x="50.5392%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (57 samples, 0.06%)</title><rect x="50.3000%" y="901" width="0.0560%" height="15" fill="rgb(229,209,14)" fg:x="51221" fg:w="57"/><text x="50.5500%" y="911.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (57 samples, 0.06%)</title><rect x="50.3000%" y="885" width="0.0560%" height="15" fill="rgb(250,149,48)" fg:x="51221" fg:w="57"/><text x="50.5500%" y="895.50"></text></g><g><title>core::ops::function::FnMut::call_mut (20 samples, 0.02%)</title><rect x="50.3363%" y="869" width="0.0196%" height="15" fill="rgb(210,120,37)" fg:x="51258" fg:w="20"/><text x="50.5863%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (18 samples, 0.02%)</title><rect x="50.3560%" y="981" width="0.0177%" height="15" fill="rgb(210,21,8)" fg:x="51278" fg:w="18"/><text x="50.6060%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="50.3609%" y="965" width="0.0128%" height="15" fill="rgb(243,145,7)" fg:x="51283" fg:w="13"/><text x="50.6109%" y="975.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::clone::Clone&gt;::clone (33 samples, 0.03%)</title><rect x="50.7733%" y="965" width="0.0324%" height="15" fill="rgb(238,178,32)" fg:x="51703" fg:w="33"/><text x="51.0233%" y="975.50"></text></g><g><title>&lt;bevy_render::draw::RenderCommand as core::clone::Clone&gt;::clone (742 samples, 0.73%)</title><rect x="50.3737%" y="981" width="0.7287%" height="15" fill="rgb(222,4,10)" fg:x="51296" fg:w="742"/><text x="50.6237%" y="991.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (291 samples, 0.29%)</title><rect x="50.8165%" y="965" width="0.2858%" height="15" fill="rgb(239,7,37)" fg:x="51747" fg:w="291"/><text x="51.0665%" y="975.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (280 samples, 0.27%)</title><rect x="50.8274%" y="949" width="0.2750%" height="15" fill="rgb(215,31,37)" fg:x="51758" fg:w="280"/><text x="51.0774%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (280 samples, 0.27%)</title><rect x="50.8274%" y="933" width="0.2750%" height="15" fill="rgb(224,83,33)" fg:x="51758" fg:w="280"/><text x="51.0774%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_add (280 samples, 0.27%)</title><rect x="50.8274%" y="917" width="0.2750%" height="15" fill="rgb(239,55,3)" fg:x="51758" fg:w="280"/><text x="51.0774%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="51.1023%" y="981" width="0.0118%" height="15" fill="rgb(247,92,11)" fg:x="52038" fg:w="12"/><text x="51.3523%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (525 samples, 0.52%)</title><rect x="51.1161%" y="981" width="0.5156%" height="15" fill="rgb(239,200,7)" fg:x="52052" fg:w="525"/><text x="51.3661%" y="991.50"></text></g><g><title>core::ptr::write (509 samples, 0.50%)</title><rect x="51.1318%" y="965" width="0.4998%" height="15" fill="rgb(227,115,8)" fg:x="52068" fg:w="509"/><text x="51.3818%" y="975.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="51.6670%" y="869" width="0.0108%" height="15" fill="rgb(215,189,27)" fg:x="52613" fg:w="11"/><text x="51.9170%" y="879.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (11 samples, 0.01%)</title><rect x="51.6670%" y="853" width="0.0108%" height="15" fill="rgb(251,216,39)" fg:x="52613" fg:w="11"/><text x="51.9170%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.01%)</title><rect x="51.6670%" y="837" width="0.0108%" height="15" fill="rgb(207,29,47)" fg:x="52613" fg:w="11"/><text x="51.9170%" y="847.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (18 samples, 0.02%)</title><rect x="51.6670%" y="885" width="0.0177%" height="15" fill="rgb(210,71,34)" fg:x="52613" fg:w="18"/><text x="51.9170%" y="895.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (38 samples, 0.04%)</title><rect x="51.6522%" y="933" width="0.0373%" height="15" fill="rgb(253,217,51)" fg:x="52598" fg:w="38"/><text x="51.9022%" y="943.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (24 samples, 0.02%)</title><rect x="51.6660%" y="917" width="0.0236%" height="15" fill="rgb(222,117,46)" fg:x="52612" fg:w="24"/><text x="51.9160%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (24 samples, 0.02%)</title><rect x="51.6660%" y="901" width="0.0236%" height="15" fill="rgb(226,132,6)" fg:x="52612" fg:w="24"/><text x="51.9160%" y="911.50"></text></g><g><title>bevy_ecs::entity::Entities::get (39 samples, 0.04%)</title><rect x="51.6896%" y="933" width="0.0383%" height="15" fill="rgb(254,145,51)" fg:x="52636" fg:w="39"/><text x="51.9396%" y="943.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (127 samples, 0.12%)</title><rect x="51.6375%" y="949" width="0.1247%" height="15" fill="rgb(231,199,27)" fg:x="52583" fg:w="127"/><text x="51.8875%" y="959.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (34 samples, 0.03%)</title><rect x="51.7288%" y="933" width="0.0334%" height="15" fill="rgb(245,158,14)" fg:x="52676" fg:w="34"/><text x="51.9788%" y="943.50"></text></g><g><title>fixedbitset::div_rem (14 samples, 0.01%)</title><rect x="51.7485%" y="917" width="0.0137%" height="15" fill="rgb(240,113,14)" fg:x="52696" fg:w="14"/><text x="51.9985%" y="927.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::validate_world_and_update_archetypes (12 samples, 0.01%)</title><rect x="51.7622%" y="949" width="0.0118%" height="15" fill="rgb(210,20,13)" fg:x="52710" fg:w="12"/><text x="52.0122%" y="959.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get (149 samples, 0.15%)</title><rect x="51.6316%" y="981" width="0.1463%" height="15" fill="rgb(241,144,13)" fg:x="52577" fg:w="149"/><text x="51.8816%" y="991.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked (149 samples, 0.15%)</title><rect x="51.6316%" y="965" width="0.1463%" height="15" fill="rgb(235,43,34)" fg:x="52577" fg:w="149"/><text x="51.8816%" y="975.50"></text></g><g><title>bevy_ecs::entity::Entities::get (18 samples, 0.02%)</title><rect x="51.7779%" y="949" width="0.0177%" height="15" fill="rgb(208,36,20)" fg:x="52726" fg:w="18"/><text x="52.0279%" y="959.50"></text></g><g><title>bevy_ecs::world::World::get_entity (20 samples, 0.02%)</title><rect x="51.7779%" y="965" width="0.0196%" height="15" fill="rgb(239,204,10)" fg:x="52726" fg:w="20"/><text x="52.0279%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="51.8212%" y="837" width="0.0285%" height="15" fill="rgb(217,84,43)" fg:x="52770" fg:w="29"/><text x="52.0712%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="51.8212%" y="821" width="0.0285%" height="15" fill="rgb(241,170,50)" fg:x="52770" fg:w="29"/><text x="52.0712%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="51.8339%" y="805" width="0.0157%" height="15" fill="rgb(226,205,29)" fg:x="52783" fg:w="16"/><text x="52.0839%" y="815.50"></text></g><g><title>bevy_ecs::component::Components::get_id (65 samples, 0.06%)</title><rect x="51.8005%" y="933" width="0.0638%" height="15" fill="rgb(233,113,1)" fg:x="52749" fg:w="65"/><text x="52.0505%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (65 samples, 0.06%)</title><rect x="51.8005%" y="917" width="0.0638%" height="15" fill="rgb(253,98,13)" fg:x="52749" fg:w="65"/><text x="52.0505%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (65 samples, 0.06%)</title><rect x="51.8005%" y="901" width="0.0638%" height="15" fill="rgb(211,115,12)" fg:x="52749" fg:w="65"/><text x="52.0505%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (65 samples, 0.06%)</title><rect x="51.8005%" y="885" width="0.0638%" height="15" fill="rgb(208,12,16)" fg:x="52749" fg:w="65"/><text x="52.0505%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (65 samples, 0.06%)</title><rect x="51.8005%" y="869" width="0.0638%" height="15" fill="rgb(237,193,54)" fg:x="52749" fg:w="65"/><text x="52.0505%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (57 samples, 0.06%)</title><rect x="51.8084%" y="853" width="0.0560%" height="15" fill="rgb(243,22,42)" fg:x="52757" fg:w="57"/><text x="52.0584%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (15 samples, 0.01%)</title><rect x="51.8496%" y="837" width="0.0147%" height="15" fill="rgb(233,151,36)" fg:x="52799" fg:w="15"/><text x="52.0996%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (15 samples, 0.01%)</title><rect x="51.8496%" y="821" width="0.0147%" height="15" fill="rgb(237,57,45)" fg:x="52799" fg:w="15"/><text x="52.0996%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (15 samples, 0.01%)</title><rect x="51.8496%" y="805" width="0.0147%" height="15" fill="rgb(221,88,17)" fg:x="52799" fg:w="15"/><text x="52.0996%" y="815.50"></text></g><g><title>bevy_ecs::component::ComponentInfo::storage_type (28 samples, 0.03%)</title><rect x="51.8968%" y="917" width="0.0275%" height="15" fill="rgb(230,79,15)" fg:x="52847" fg:w="28"/><text x="52.1468%" y="927.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component (85 samples, 0.08%)</title><rect x="51.8644%" y="933" width="0.0835%" height="15" fill="rgb(213,57,13)" fg:x="52814" fg:w="85"/><text x="52.1144%" y="943.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (14 samples, 0.01%)</title><rect x="51.9341%" y="917" width="0.0137%" height="15" fill="rgb(222,116,39)" fg:x="52885" fg:w="14"/><text x="52.1841%" y="927.50"></text></g><g><title>bevy_ecs::world::World::get (241 samples, 0.24%)</title><rect x="51.7779%" y="981" width="0.2367%" height="15" fill="rgb(245,107,2)" fg:x="52726" fg:w="241"/><text x="52.0279%" y="991.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityRef::get (221 samples, 0.22%)</title><rect x="51.7976%" y="965" width="0.2170%" height="15" fill="rgb(238,1,10)" fg:x="52746" fg:w="221"/><text x="52.0476%" y="975.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (220 samples, 0.22%)</title><rect x="51.7986%" y="949" width="0.2160%" height="15" fill="rgb(249,4,48)" fg:x="52747" fg:w="220"/><text x="52.0486%" y="959.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (68 samples, 0.07%)</title><rect x="51.9478%" y="933" width="0.0668%" height="15" fill="rgb(223,151,18)" fg:x="52899" fg:w="68"/><text x="52.1978%" y="943.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare::{{closure}}::{{closure}} (17 samples, 0.02%)</title><rect x="52.0411%" y="965" width="0.0167%" height="15" fill="rgb(227,65,43)" fg:x="52994" fg:w="17"/><text x="52.2911%" y="975.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (12 samples, 0.01%)</title><rect x="52.0460%" y="949" width="0.0118%" height="15" fill="rgb(218,40,45)" fg:x="52999" fg:w="12"/><text x="52.2960%" y="959.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (21 samples, 0.02%)</title><rect x="52.0578%" y="965" width="0.0206%" height="15" fill="rgb(252,121,31)" fg:x="53011" fg:w="21"/><text x="52.3078%" y="975.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (39 samples, 0.04%)</title><rect x="52.0411%" y="981" width="0.0383%" height="15" fill="rgb(219,158,43)" fg:x="52994" fg:w="39"/><text x="52.2911%" y="991.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (64 samples, 0.06%)</title><rect x="52.0863%" y="965" width="0.0628%" height="15" fill="rgb(231,162,42)" fg:x="53040" fg:w="64"/><text x="52.3363%" y="975.50"></text></g><g><title>ahash::operations::folded_multiply (11 samples, 0.01%)</title><rect x="52.1717%" y="917" width="0.0108%" height="15" fill="rgb(217,179,25)" fg:x="53127" fg:w="11"/><text x="52.4217%" y="927.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="52.1717%" y="933" width="0.0167%" height="15" fill="rgb(206,212,31)" fg:x="53127" fg:w="17"/><text x="52.4217%" y="943.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u64 (92 samples, 0.09%)</title><rect x="52.1933%" y="821" width="0.0903%" height="15" fill="rgb(235,144,12)" fg:x="53149" fg:w="92"/><text x="52.4433%" y="831.50"></text></g><g><title>ahash::operations::folded_multiply (11 samples, 0.01%)</title><rect x="52.3043%" y="805" width="0.0108%" height="15" fill="rgb(213,51,10)" fg:x="53262" fg:w="11"/><text x="52.5543%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (127 samples, 0.12%)</title><rect x="52.1933%" y="853" width="0.1247%" height="15" fill="rgb(231,145,14)" fg:x="53149" fg:w="127"/><text x="52.4433%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (127 samples, 0.12%)</title><rect x="52.1933%" y="837" width="0.1247%" height="15" fill="rgb(235,15,28)" fg:x="53149" fg:w="127"/><text x="52.4433%" y="847.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (35 samples, 0.03%)</title><rect x="52.2837%" y="821" width="0.0344%" height="15" fill="rgb(237,206,10)" fg:x="53241" fg:w="35"/><text x="52.5337%" y="831.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (140 samples, 0.14%)</title><rect x="52.1933%" y="917" width="0.1375%" height="15" fill="rgb(236,227,27)" fg:x="53149" fg:w="140"/><text x="52.4433%" y="927.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (140 samples, 0.14%)</title><rect x="52.1933%" y="901" width="0.1375%" height="15" fill="rgb(246,83,35)" fg:x="53149" fg:w="140"/><text x="52.4433%" y="911.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (140 samples, 0.14%)</title><rect x="52.1933%" y="885" width="0.1375%" height="15" fill="rgb(220,136,24)" fg:x="53149" fg:w="140"/><text x="52.4433%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (140 samples, 0.14%)</title><rect x="52.1933%" y="869" width="0.1375%" height="15" fill="rgb(217,3,25)" fg:x="53149" fg:w="140"/><text x="52.4433%" y="879.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (13 samples, 0.01%)</title><rect x="52.3181%" y="853" width="0.0128%" height="15" fill="rgb(239,24,14)" fg:x="53276" fg:w="13"/><text x="52.5681%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (13 samples, 0.01%)</title><rect x="52.3181%" y="837" width="0.0128%" height="15" fill="rgb(244,16,53)" fg:x="53276" fg:w="13"/><text x="52.5681%" y="847.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (13 samples, 0.01%)</title><rect x="52.3181%" y="821" width="0.0128%" height="15" fill="rgb(208,175,44)" fg:x="53276" fg:w="13"/><text x="52.5681%" y="831.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (13 samples, 0.01%)</title><rect x="52.3181%" y="805" width="0.0128%" height="15" fill="rgb(252,18,48)" fg:x="53276" fg:w="13"/><text x="52.5681%" y="815.50"></text></g><g><title>ahash::operations::folded_multiply (11 samples, 0.01%)</title><rect x="52.3200%" y="789" width="0.0108%" height="15" fill="rgb(234,199,32)" fg:x="53278" fg:w="11"/><text x="52.5700%" y="799.50"></text></g><g><title>hashbrown::map::make_insert_hash (177 samples, 0.17%)</title><rect x="52.1717%" y="949" width="0.1738%" height="15" fill="rgb(225,77,54)" fg:x="53127" fg:w="177"/><text x="52.4217%" y="959.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (155 samples, 0.15%)</title><rect x="52.1933%" y="933" width="0.1522%" height="15" fill="rgb(225,42,25)" fg:x="53149" fg:w="155"/><text x="52.4433%" y="943.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (15 samples, 0.01%)</title><rect x="52.3308%" y="917" width="0.0147%" height="15" fill="rgb(242,227,46)" fg:x="53289" fg:w="15"/><text x="52.5808%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="52.3544%" y="917" width="0.0118%" height="15" fill="rgb(246,197,35)" fg:x="53313" fg:w="12"/><text x="52.6044%" y="927.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="52.3544%" y="933" width="0.0196%" height="15" fill="rgb(215,159,26)" fg:x="53313" fg:w="20"/><text x="52.6044%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (20 samples, 0.02%)</title><rect x="52.3770%" y="885" width="0.0196%" height="15" fill="rgb(212,194,50)" fg:x="53336" fg:w="20"/><text x="52.6270%" y="895.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (20 samples, 0.02%)</title><rect x="52.3770%" y="869" width="0.0196%" height="15" fill="rgb(246,132,1)" fg:x="53336" fg:w="20"/><text x="52.6270%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (20 samples, 0.02%)</title><rect x="52.3770%" y="853" width="0.0196%" height="15" fill="rgb(217,71,7)" fg:x="53336" fg:w="20"/><text x="52.6270%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (24 samples, 0.02%)</title><rect x="52.3740%" y="933" width="0.0236%" height="15" fill="rgb(252,59,32)" fg:x="53333" fg:w="24"/><text x="52.6240%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (24 samples, 0.02%)</title><rect x="52.3740%" y="917" width="0.0236%" height="15" fill="rgb(253,204,25)" fg:x="53333" fg:w="24"/><text x="52.6240%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (24 samples, 0.02%)</title><rect x="52.3740%" y="901" width="0.0236%" height="15" fill="rgb(232,21,16)" fg:x="53333" fg:w="24"/><text x="52.6240%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (93 samples, 0.09%)</title><rect x="52.3456%" y="949" width="0.0913%" height="15" fill="rgb(248,90,29)" fg:x="53304" fg:w="93"/><text x="52.5956%" y="959.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (40 samples, 0.04%)</title><rect x="52.3976%" y="933" width="0.0393%" height="15" fill="rgb(249,223,7)" fg:x="53357" fg:w="40"/><text x="52.6476%" y="943.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (40 samples, 0.04%)</title><rect x="52.3976%" y="917" width="0.0393%" height="15" fill="rgb(231,119,42)" fg:x="53357" fg:w="40"/><text x="52.6476%" y="927.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (40 samples, 0.04%)</title><rect x="52.3976%" y="901" width="0.0393%" height="15" fill="rgb(215,41,35)" fg:x="53357" fg:w="40"/><text x="52.6476%" y="911.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (300 samples, 0.29%)</title><rect x="52.1491%" y="965" width="0.2946%" height="15" fill="rgb(220,44,45)" fg:x="53104" fg:w="300"/><text x="52.3991%" y="975.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare::{{closure}} (2,279 samples, 2.24%)</title><rect x="50.2106%" y="997" width="2.2380%" height="15" fill="rgb(253,197,36)" fg:x="51130" fg:w="2279"/><text x="50.4606%" y="1007.50">&lt;..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (376 samples, 0.37%)</title><rect x="52.0794%" y="981" width="0.3692%" height="15" fill="rgb(245,225,54)" fg:x="53033" fg:w="376"/><text x="52.3294%" y="991.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (2,356 samples, 2.31%)</title><rect x="50.2106%" y="1013" width="2.3136%" height="15" fill="rgb(239,94,37)" fg:x="51130" fg:w="2356"/><text x="50.4606%" y="1023.50">b..</text></g><g><title>bevy_ecs::world::World::resource_scope (61 samples, 0.06%)</title><rect x="52.4644%" y="997" width="0.0599%" height="15" fill="rgb(242,217,10)" fg:x="53425" fg:w="61"/><text x="52.7144%" y="1007.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (2,449 samples, 2.40%)</title><rect x="50.1252%" y="1045" width="2.4050%" height="15" fill="rgb(250,193,7)" fg:x="51043" fg:w="2449"/><text x="50.3752%" y="1055.50">be..</text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare (2,362 samples, 2.32%)</title><rect x="50.2106%" y="1029" width="2.3195%" height="15" fill="rgb(230,104,19)" fg:x="51130" fg:w="2362"/><text x="50.4606%" y="1039.50">&lt;..</text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (25 samples, 0.02%)</title><rect x="52.5488%" y="933" width="0.0246%" height="15" fill="rgb(230,181,4)" fg:x="53511" fg:w="25"/><text x="52.7988%" y="943.50"></text></g><g><title>alloc::alloc::Global::grow_impl (25 samples, 0.02%)</title><rect x="52.5488%" y="917" width="0.0246%" height="15" fill="rgb(216,219,49)" fg:x="53511" fg:w="25"/><text x="52.7988%" y="927.50"></text></g><g><title>alloc::alloc::realloc (25 samples, 0.02%)</title><rect x="52.5488%" y="901" width="0.0246%" height="15" fill="rgb(254,144,0)" fg:x="53511" fg:w="25"/><text x="52.7988%" y="911.50"></text></g><g><title>__rdl_realloc (25 samples, 0.02%)</title><rect x="52.5488%" y="885" width="0.0246%" height="15" fill="rgb(205,209,38)" fg:x="53511" fg:w="25"/><text x="52.7988%" y="895.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (25 samples, 0.02%)</title><rect x="52.5488%" y="869" width="0.0246%" height="15" fill="rgb(240,21,42)" fg:x="53511" fg:w="25"/><text x="52.7988%" y="879.50"></text></g><g><title>__GI___libc_realloc (25 samples, 0.02%)</title><rect x="52.5488%" y="853" width="0.0246%" height="15" fill="rgb(241,132,3)" fg:x="53511" fg:w="25"/><text x="52.7988%" y="863.50"></text></g><g><title>_int_realloc (20 samples, 0.02%)</title><rect x="52.5537%" y="837" width="0.0196%" height="15" fill="rgb(225,14,2)" fg:x="53516" fg:w="20"/><text x="52.8037%" y="847.50"></text></g><g><title>_int_malloc (13 samples, 0.01%)</title><rect x="52.5606%" y="821" width="0.0128%" height="15" fill="rgb(210,141,35)" fg:x="53523" fg:w="13"/><text x="52.8106%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (64 samples, 0.06%)</title><rect x="52.5469%" y="949" width="0.0628%" height="15" fill="rgb(251,14,44)" fg:x="53509" fg:w="64"/><text x="52.7969%" y="959.50"></text></g><g><title>__GI___libc_malloc (37 samples, 0.04%)</title><rect x="52.5734%" y="933" width="0.0363%" height="15" fill="rgb(247,48,18)" fg:x="53536" fg:w="37"/><text x="52.8234%" y="943.50"></text></g><g><title>_int_malloc (15 samples, 0.01%)</title><rect x="52.5950%" y="917" width="0.0147%" height="15" fill="rgb(225,0,40)" fg:x="53558" fg:w="15"/><text x="52.8450%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (65 samples, 0.06%)</title><rect x="52.5469%" y="965" width="0.0638%" height="15" fill="rgb(221,31,33)" fg:x="53509" fg:w="65"/><text x="52.7969%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (66 samples, 0.06%)</title><rect x="52.5469%" y="1013" width="0.0648%" height="15" fill="rgb(237,42,40)" fg:x="53509" fg:w="66"/><text x="52.7969%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (66 samples, 0.06%)</title><rect x="52.5469%" y="997" width="0.0648%" height="15" fill="rgb(233,51,29)" fg:x="53509" fg:w="66"/><text x="52.7969%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (66 samples, 0.06%)</title><rect x="52.5469%" y="981" width="0.0648%" height="15" fill="rgb(226,58,20)" fg:x="53509" fg:w="66"/><text x="52.7969%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (77 samples, 0.08%)</title><rect x="52.5410%" y="1029" width="0.0756%" height="15" fill="rgb(208,98,7)" fg:x="53503" fg:w="77"/><text x="52.7910%" y="1039.50"></text></g><g><title>bevy_render::render_graph::schedule::Stages::borrow (104 samples, 0.10%)</title><rect x="52.5302%" y="1045" width="0.1021%" height="15" fill="rgb(228,143,44)" fg:x="53492" fg:w="104"/><text x="52.7802%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (14 samples, 0.01%)</title><rect x="52.6186%" y="1029" width="0.0137%" height="15" fill="rgb(246,55,38)" fg:x="53582" fg:w="14"/><text x="52.8686%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (14 samples, 0.01%)</title><rect x="52.6186%" y="1013" width="0.0137%" height="15" fill="rgb(247,87,16)" fg:x="53582" fg:w="14"/><text x="52.8686%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (14 samples, 0.01%)</title><rect x="52.6186%" y="997" width="0.0137%" height="15" fill="rgb(234,129,42)" fg:x="53582" fg:w="14"/><text x="52.8686%" y="1007.50"></text></g><g><title>bevy_ecs::world::World::get_resource (15 samples, 0.01%)</title><rect x="52.6765%" y="1013" width="0.0147%" height="15" fill="rgb(220,82,16)" fg:x="53641" fg:w="15"/><text x="52.9265%" y="1023.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (36 samples, 0.04%)</title><rect x="52.6677%" y="1029" width="0.0354%" height="15" fill="rgb(211,88,4)" fg:x="53632" fg:w="36"/><text x="52.9177%" y="1039.50"></text></g><g><title>bevy_ecs::world::World::get_resource (16 samples, 0.02%)</title><rect x="52.7305%" y="1013" width="0.0157%" height="15" fill="rgb(248,151,21)" fg:x="53696" fg:w="16"/><text x="52.9805%" y="1023.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (34 samples, 0.03%)</title><rect x="52.7177%" y="1029" width="0.0334%" height="15" fill="rgb(238,163,6)" fg:x="53683" fg:w="34"/><text x="52.9677%" y="1039.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::texture_copy_node::TextureCopyNode as bevy_render::render_graph::node::Node&gt;::update (13 samples, 0.01%)</title><rect x="52.7639%" y="1029" width="0.0128%" height="15" fill="rgb(209,183,11)" fg:x="53730" fg:w="13"/><text x="53.0139%" y="1039.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (23 samples, 0.02%)</title><rect x="52.7767%" y="1029" width="0.0226%" height="15" fill="rgb(219,37,20)" fg:x="53743" fg:w="23"/><text x="53.0267%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (17 samples, 0.02%)</title><rect x="52.8051%" y="997" width="0.0167%" height="15" fill="rgb(210,158,4)" fg:x="53772" fg:w="17"/><text x="53.0551%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (17 samples, 0.02%)</title><rect x="52.8051%" y="981" width="0.0167%" height="15" fill="rgb(221,167,53)" fg:x="53772" fg:w="17"/><text x="53.0551%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (17 samples, 0.02%)</title><rect x="52.8051%" y="965" width="0.0167%" height="15" fill="rgb(237,151,45)" fg:x="53772" fg:w="17"/><text x="53.0551%" y="975.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="52.8051%" y="1029" width="0.0196%" height="15" fill="rgb(231,39,3)" fg:x="53772" fg:w="20"/><text x="53.0551%" y="1039.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_resources::WgpuResources as core::clone::Clone&gt;::clone (20 samples, 0.02%)</title><rect x="52.8051%" y="1013" width="0.0196%" height="15" fill="rgb(212,167,28)" fg:x="53772" fg:w="20"/><text x="53.0551%" y="1023.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::get_or_create (13 samples, 0.01%)</title><rect x="52.8857%" y="997" width="0.0128%" height="15" fill="rgb(232,178,8)" fg:x="53854" fg:w="13"/><text x="53.1357%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;,ahash::random_state::RandomState&gt;&gt;&gt; (31 samples, 0.03%)</title><rect x="52.9073%" y="981" width="0.0304%" height="15" fill="rgb(225,151,20)" fg:x="53876" fg:w="31"/><text x="53.1573%" y="991.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (31 samples, 0.03%)</title><rect x="52.9073%" y="965" width="0.0304%" height="15" fill="rgb(238,3,37)" fg:x="53876" fg:w="31"/><text x="53.1573%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (31 samples, 0.03%)</title><rect x="52.9073%" y="949" width="0.0304%" height="15" fill="rgb(251,147,42)" fg:x="53876" fg:w="31"/><text x="53.1573%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (31 samples, 0.03%)</title><rect x="52.9073%" y="933" width="0.0304%" height="15" fill="rgb(208,173,10)" fg:x="53876" fg:w="31"/><text x="53.1573%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (31 samples, 0.03%)</title><rect x="52.9073%" y="917" width="0.0304%" height="15" fill="rgb(246,225,4)" fg:x="53876" fg:w="31"/><text x="53.1573%" y="927.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (52 samples, 0.05%)</title><rect x="52.9377%" y="981" width="0.0511%" height="15" fill="rgb(248,102,6)" fg:x="53907" fg:w="52"/><text x="53.1877%" y="991.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (52 samples, 0.05%)</title><rect x="52.9377%" y="965" width="0.0511%" height="15" fill="rgb(232,6,21)" fg:x="53907" fg:w="52"/><text x="53.1877%" y="975.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (52 samples, 0.05%)</title><rect x="52.9377%" y="949" width="0.0511%" height="15" fill="rgb(221,179,22)" fg:x="53907" fg:w="52"/><text x="53.1877%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (49 samples, 0.05%)</title><rect x="52.9407%" y="933" width="0.0481%" height="15" fill="rgb(252,50,20)" fg:x="53910" fg:w="49"/><text x="53.1907%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (49 samples, 0.05%)</title><rect x="52.9407%" y="917" width="0.0481%" height="15" fill="rgb(222,56,38)" fg:x="53910" fg:w="49"/><text x="53.1907%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (12 samples, 0.01%)</title><rect x="52.9947%" y="853" width="0.0118%" height="15" fill="rgb(206,193,29)" fg:x="53965" fg:w="12"/><text x="53.2447%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (12 samples, 0.01%)</title><rect x="52.9947%" y="837" width="0.0118%" height="15" fill="rgb(239,192,45)" fg:x="53965" fg:w="12"/><text x="53.2447%" y="847.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (12 samples, 0.01%)</title><rect x="52.9947%" y="821" width="0.0118%" height="15" fill="rgb(254,18,36)" fg:x="53965" fg:w="12"/><text x="53.2447%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.02%)</title><rect x="52.9888%" y="933" width="0.0187%" height="15" fill="rgb(221,127,11)" fg:x="53959" fg:w="19"/><text x="53.2388%" y="943.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="52.9947%" y="917" width="0.0128%" height="15" fill="rgb(234,146,35)" fg:x="53965" fg:w="13"/><text x="53.2447%" y="927.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (13 samples, 0.01%)</title><rect x="52.9947%" y="901" width="0.0128%" height="15" fill="rgb(254,201,37)" fg:x="53965" fg:w="13"/><text x="53.2447%" y="911.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (13 samples, 0.01%)</title><rect x="52.9947%" y="885" width="0.0128%" height="15" fill="rgb(211,202,23)" fg:x="53965" fg:w="13"/><text x="53.2447%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (13 samples, 0.01%)</title><rect x="52.9947%" y="869" width="0.0128%" height="15" fill="rgb(237,91,2)" fg:x="53965" fg:w="13"/><text x="53.2447%" y="879.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (28 samples, 0.03%)</title><rect x="53.0339%" y="853" width="0.0275%" height="15" fill="rgb(226,228,36)" fg:x="54005" fg:w="28"/><text x="53.2839%" y="863.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (29 samples, 0.03%)</title><rect x="53.0339%" y="901" width="0.0285%" height="15" fill="rgb(213,63,50)" fg:x="54005" fg:w="29"/><text x="53.2839%" y="911.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (29 samples, 0.03%)</title><rect x="53.0339%" y="885" width="0.0285%" height="15" fill="rgb(235,194,19)" fg:x="54005" fg:w="29"/><text x="53.2839%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (29 samples, 0.03%)</title><rect x="53.0339%" y="869" width="0.0285%" height="15" fill="rgb(207,204,18)" fg:x="54005" fg:w="29"/><text x="53.2839%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (86 samples, 0.08%)</title><rect x="52.9888%" y="981" width="0.0845%" height="15" fill="rgb(248,8,7)" fg:x="53959" fg:w="86"/><text x="53.2388%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (86 samples, 0.08%)</title><rect x="52.9888%" y="965" width="0.0845%" height="15" fill="rgb(223,145,47)" fg:x="53959" fg:w="86"/><text x="53.2388%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (86 samples, 0.08%)</title><rect x="52.9888%" y="949" width="0.0845%" height="15" fill="rgb(228,84,11)" fg:x="53959" fg:w="86"/><text x="53.2388%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (67 samples, 0.07%)</title><rect x="53.0074%" y="933" width="0.0658%" height="15" fill="rgb(218,76,45)" fg:x="53978" fg:w="67"/><text x="53.2574%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (62 samples, 0.06%)</title><rect x="53.0123%" y="917" width="0.0609%" height="15" fill="rgb(223,80,15)" fg:x="53983" fg:w="62"/><text x="53.2623%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (11 samples, 0.01%)</title><rect x="53.0624%" y="901" width="0.0108%" height="15" fill="rgb(219,218,33)" fg:x="54034" fg:w="11"/><text x="53.3124%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (11 samples, 0.01%)</title><rect x="53.0624%" y="885" width="0.0108%" height="15" fill="rgb(208,51,11)" fg:x="54034" fg:w="11"/><text x="53.3124%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (11 samples, 0.01%)</title><rect x="53.0624%" y="869" width="0.0108%" height="15" fill="rgb(229,165,39)" fg:x="54034" fg:w="11"/><text x="53.3124%" y="879.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (229 samples, 0.22%)</title><rect x="52.8798%" y="1013" width="0.2249%" height="15" fill="rgb(241,100,24)" fg:x="53848" fg:w="229"/><text x="53.1298%" y="1023.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (210 samples, 0.21%)</title><rect x="52.8984%" y="997" width="0.2062%" height="15" fill="rgb(228,14,23)" fg:x="53867" fg:w="210"/><text x="53.1484%" y="1007.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (32 samples, 0.03%)</title><rect x="53.0732%" y="981" width="0.0314%" height="15" fill="rgb(247,116,52)" fg:x="54045" fg:w="32"/><text x="53.3232%" y="991.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (29 samples, 0.03%)</title><rect x="53.0762%" y="965" width="0.0285%" height="15" fill="rgb(216,149,33)" fg:x="54048" fg:w="29"/><text x="53.3262%" y="975.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (294 samples, 0.29%)</title><rect x="52.8385%" y="1029" width="0.2887%" height="15" fill="rgb(238,142,29)" fg:x="53806" fg:w="294"/><text x="53.0885%" y="1039.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (21 samples, 0.02%)</title><rect x="53.1066%" y="1013" width="0.0206%" height="15" fill="rgb(224,83,40)" fg:x="54079" fg:w="21"/><text x="53.3566%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (21 samples, 0.02%)</title><rect x="53.1066%" y="997" width="0.0206%" height="15" fill="rgb(234,165,11)" fg:x="54079" fg:w="21"/><text x="53.3566%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (21 samples, 0.02%)</title><rect x="53.1066%" y="981" width="0.0206%" height="15" fill="rgb(215,96,23)" fg:x="54079" fg:w="21"/><text x="53.3566%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (21 samples, 0.02%)</title><rect x="53.1066%" y="965" width="0.0206%" height="15" fill="rgb(233,179,26)" fg:x="54079" fg:w="21"/><text x="53.3566%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_finish (26 samples, 0.03%)</title><rect x="53.1459%" y="965" width="0.0255%" height="15" fill="rgb(225,129,33)" fg:x="54119" fg:w="26"/><text x="53.3959%" y="975.50"></text></g><g><title>wgpu_core::command::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_finish (21 samples, 0.02%)</title><rect x="53.1508%" y="949" width="0.0206%" height="15" fill="rgb(237,49,13)" fg:x="54124" fg:w="21"/><text x="53.4008%" y="959.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext::finish (34 samples, 0.03%)</title><rect x="53.1430%" y="1029" width="0.0334%" height="15" fill="rgb(211,3,31)" fg:x="54116" fg:w="34"/><text x="53.3930%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (34 samples, 0.03%)</title><rect x="53.1430%" y="1013" width="0.0334%" height="15" fill="rgb(216,152,19)" fg:x="54116" fg:w="34"/><text x="53.3930%" y="1023.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext::finish::{{closure}} (34 samples, 0.03%)</title><rect x="53.1430%" y="997" width="0.0334%" height="15" fill="rgb(251,121,35)" fg:x="54116" fg:w="34"/><text x="53.3930%" y="1007.50"></text></g><g><title>wgpu::CommandEncoder::finish (31 samples, 0.03%)</title><rect x="53.1459%" y="981" width="0.0304%" height="15" fill="rgb(210,217,47)" fg:x="54119" fg:w="31"/><text x="53.3959%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.01%)</title><rect x="53.1773%" y="901" width="0.0118%" height="15" fill="rgb(244,116,22)" fg:x="54151" fg:w="12"/><text x="53.4273%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (11 samples, 0.01%)</title><rect x="53.1783%" y="885" width="0.0108%" height="15" fill="rgb(228,17,21)" fg:x="54152" fg:w="11"/><text x="53.4283%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt;&gt;&gt; (14 samples, 0.01%)</title><rect x="53.1763%" y="1029" width="0.0137%" height="15" fill="rgb(240,149,34)" fg:x="54150" fg:w="14"/><text x="53.4263%" y="1039.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="53.1763%" y="1013" width="0.0137%" height="15" fill="rgb(208,125,47)" fg:x="54150" fg:w="14"/><text x="53.4263%" y="1023.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (13 samples, 0.01%)</title><rect x="53.1773%" y="997" width="0.0128%" height="15" fill="rgb(249,186,39)" fg:x="54151" fg:w="13"/><text x="53.4273%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="53.1773%" y="981" width="0.0128%" height="15" fill="rgb(240,220,33)" fg:x="54151" fg:w="13"/><text x="53.4273%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt;&gt; (13 samples, 0.01%)</title><rect x="53.1773%" y="965" width="0.0128%" height="15" fill="rgb(243,110,23)" fg:x="54151" fg:w="13"/><text x="53.4273%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt; (13 samples, 0.01%)</title><rect x="53.1773%" y="949" width="0.0128%" height="15" fill="rgb(219,163,46)" fg:x="54151" fg:w="13"/><text x="53.4273%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt; (13 samples, 0.01%)</title><rect x="53.1773%" y="933" width="0.0128%" height="15" fill="rgb(216,126,30)" fg:x="54151" fg:w="13"/><text x="53.4273%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots)&gt;&gt; (13 samples, 0.01%)</title><rect x="53.1773%" y="917" width="0.0128%" height="15" fill="rgb(208,139,11)" fg:x="54151" fg:w="13"/><text x="53.4273%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_resources::WgpuResources&gt; (24 samples, 0.02%)</title><rect x="53.2038%" y="1029" width="0.0236%" height="15" fill="rgb(213,118,36)" fg:x="54178" fg:w="24"/><text x="53.4538%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::channel::Sender&lt;core::option::Option&lt;wgpu::CommandBuffer&gt;&gt;&gt; (16 samples, 0.02%)</title><rect x="53.2372%" y="1029" width="0.0157%" height="15" fill="rgb(226,43,17)" fg:x="54212" fg:w="16"/><text x="53.4872%" y="1039.50"></text></g><g><title>&lt;crossbeam_channel::channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="53.2382%" y="1013" width="0.0147%" height="15" fill="rgb(254,217,4)" fg:x="54213" fg:w="15"/><text x="53.4882%" y="1023.50"></text></g><g><title>crossbeam_channel::counter::Sender&lt;C&gt;::release (14 samples, 0.01%)</title><rect x="53.2392%" y="997" width="0.0137%" height="15" fill="rgb(210,134,47)" fg:x="54214" fg:w="14"/><text x="53.4892%" y="1007.50"></text></g><g><title>crossbeam_channel::counter::new (36 samples, 0.04%)</title><rect x="53.2824%" y="1013" width="0.0354%" height="15" fill="rgb(237,24,49)" fg:x="54258" fg:w="36"/><text x="53.5324%" y="1023.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (36 samples, 0.04%)</title><rect x="53.2824%" y="997" width="0.0354%" height="15" fill="rgb(251,39,46)" fg:x="54258" fg:w="36"/><text x="53.5324%" y="1007.50"></text></g><g><title>alloc::alloc::exchange_malloc (35 samples, 0.03%)</title><rect x="53.2834%" y="981" width="0.0344%" height="15" fill="rgb(251,220,3)" fg:x="54259" fg:w="35"/><text x="53.5334%" y="991.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (35 samples, 0.03%)</title><rect x="53.2834%" y="965" width="0.0344%" height="15" fill="rgb(228,105,12)" fg:x="54259" fg:w="35"/><text x="53.5334%" y="975.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (35 samples, 0.03%)</title><rect x="53.2834%" y="949" width="0.0344%" height="15" fill="rgb(215,196,1)" fg:x="54259" fg:w="35"/><text x="53.5334%" y="959.50"></text></g><g><title>alloc::alloc::alloc (35 samples, 0.03%)</title><rect x="53.2834%" y="933" width="0.0344%" height="15" fill="rgb(214,33,39)" fg:x="54259" fg:w="35"/><text x="53.5334%" y="943.50"></text></g><g><title>__rdl_alloc (35 samples, 0.03%)</title><rect x="53.2834%" y="917" width="0.0344%" height="15" fill="rgb(220,19,52)" fg:x="54259" fg:w="35"/><text x="53.5334%" y="927.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (35 samples, 0.03%)</title><rect x="53.2834%" y="901" width="0.0344%" height="15" fill="rgb(221,78,38)" fg:x="54259" fg:w="35"/><text x="53.5334%" y="911.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (35 samples, 0.03%)</title><rect x="53.2834%" y="885" width="0.0344%" height="15" fill="rgb(253,30,16)" fg:x="54259" fg:w="35"/><text x="53.5334%" y="895.50"></text></g><g><title>__posix_memalign (35 samples, 0.03%)</title><rect x="53.2834%" y="869" width="0.0344%" height="15" fill="rgb(242,65,0)" fg:x="54259" fg:w="35"/><text x="53.5334%" y="879.50"></text></g><g><title>_mid_memalign (33 samples, 0.03%)</title><rect x="53.2853%" y="853" width="0.0324%" height="15" fill="rgb(235,201,12)" fg:x="54261" fg:w="33"/><text x="53.5353%" y="863.50"></text></g><g><title>_int_memalign (29 samples, 0.03%)</title><rect x="53.2893%" y="837" width="0.0285%" height="15" fill="rgb(233,161,9)" fg:x="54265" fg:w="29"/><text x="53.5393%" y="847.50"></text></g><g><title>_int_malloc (20 samples, 0.02%)</title><rect x="53.2981%" y="821" width="0.0196%" height="15" fill="rgb(241,207,41)" fg:x="54274" fg:w="20"/><text x="53.5481%" y="831.50"></text></g><g><title>crossbeam_channel::channel::bounded (39 samples, 0.04%)</title><rect x="53.2824%" y="1029" width="0.0383%" height="15" fill="rgb(212,69,46)" fg:x="54258" fg:w="39"/><text x="53.5324%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (28 samples, 0.03%)</title><rect x="53.3482%" y="981" width="0.0275%" height="15" fill="rgb(239,69,45)" fg:x="54325" fg:w="28"/><text x="53.5982%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (28 samples, 0.03%)</title><rect x="53.3482%" y="965" width="0.0275%" height="15" fill="rgb(242,117,48)" fg:x="54325" fg:w="28"/><text x="53.5982%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (27 samples, 0.03%)</title><rect x="53.3492%" y="949" width="0.0265%" height="15" fill="rgb(228,41,36)" fg:x="54326" fg:w="27"/><text x="53.5992%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (14 samples, 0.01%)</title><rect x="53.3619%" y="933" width="0.0137%" height="15" fill="rgb(212,3,32)" fg:x="54339" fg:w="14"/><text x="53.6119%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (14 samples, 0.01%)</title><rect x="53.3619%" y="917" width="0.0137%" height="15" fill="rgb(233,41,49)" fg:x="54339" fg:w="14"/><text x="53.6119%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (12 samples, 0.01%)</title><rect x="53.3639%" y="901" width="0.0118%" height="15" fill="rgb(252,170,49)" fg:x="54341" fg:w="12"/><text x="53.6139%" y="911.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (11 samples, 0.01%)</title><rect x="53.3649%" y="885" width="0.0108%" height="15" fill="rgb(229,53,26)" fg:x="54342" fg:w="11"/><text x="53.6149%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="53.3649%" y="869" width="0.0108%" height="15" fill="rgb(217,157,12)" fg:x="54342" fg:w="11"/><text x="53.6149%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="53.3649%" y="853" width="0.0108%" height="15" fill="rgb(227,17,9)" fg:x="54342" fg:w="11"/><text x="53.6149%" y="863.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="53.3649%" y="837" width="0.0108%" height="15" fill="rgb(218,84,12)" fg:x="54342" fg:w="11"/><text x="53.6149%" y="847.50"></text></g><g><title>__rdl_alloc (11 samples, 0.01%)</title><rect x="53.3649%" y="821" width="0.0108%" height="15" fill="rgb(212,79,24)" fg:x="54342" fg:w="11"/><text x="53.6149%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (11 samples, 0.01%)</title><rect x="53.3649%" y="805" width="0.0108%" height="15" fill="rgb(217,222,37)" fg:x="54342" fg:w="11"/><text x="53.6149%" y="815.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.01%)</title><rect x="53.3649%" y="789" width="0.0108%" height="15" fill="rgb(246,208,8)" fg:x="54342" fg:w="11"/><text x="53.6149%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (46 samples, 0.05%)</title><rect x="53.3364%" y="1029" width="0.0452%" height="15" fill="rgb(244,133,10)" fg:x="54313" fg:w="46"/><text x="53.5864%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (46 samples, 0.05%)</title><rect x="53.3364%" y="1013" width="0.0452%" height="15" fill="rgb(209,219,41)" fg:x="54313" fg:w="46"/><text x="53.5864%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (37 samples, 0.04%)</title><rect x="53.3452%" y="997" width="0.0363%" height="15" fill="rgb(253,175,45)" fg:x="54322" fg:w="37"/><text x="53.5952%" y="1007.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (780 samples, 0.77%)</title><rect x="52.6323%" y="1045" width="0.7660%" height="15" fill="rgb(235,100,37)" fg:x="53596" fg:w="780"/><text x="52.8823%" y="1055.50"></text></g><g><title>wgpu::Queue::submit (17 samples, 0.02%)</title><rect x="53.3816%" y="1029" width="0.0167%" height="15" fill="rgb(225,87,19)" fg:x="54359" fg:w="17"/><text x="53.6316%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (17 samples, 0.02%)</title><rect x="53.3816%" y="1013" width="0.0167%" height="15" fill="rgb(217,152,17)" fg:x="54359" fg:w="17"/><text x="53.6316%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="53.3983%" y="965" width="0.0128%" height="15" fill="rgb(235,72,13)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::OrderedJobBorrow]&gt; (13 samples, 0.01%)</title><rect x="53.3983%" y="949" width="0.0128%" height="15" fill="rgb(233,140,18)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::OrderedJobBorrow&gt; (13 samples, 0.01%)</title><rect x="53.3983%" y="933" width="0.0128%" height="15" fill="rgb(207,212,28)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;mut bevy_render::render_graph::node::NodeState&gt;&gt; (13 samples, 0.01%)</title><rect x="53.3983%" y="917" width="0.0128%" height="15" fill="rgb(220,130,25)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;mut bevy_render::render_graph::node::NodeState&gt;&gt; (13 samples, 0.01%)</title><rect x="53.3983%" y="901" width="0.0128%" height="15" fill="rgb(205,55,34)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="53.3983%" y="885" width="0.0128%" height="15" fill="rgb(237,54,35)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="53.3983%" y="869" width="0.0128%" height="15" fill="rgb(208,67,23)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="53.3983%" y="853" width="0.0128%" height="15" fill="rgb(206,207,50)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="863.50"></text></g><g><title>__rdl_dealloc (13 samples, 0.01%)</title><rect x="53.3983%" y="837" width="0.0128%" height="15" fill="rgb(213,211,42)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (13 samples, 0.01%)</title><rect x="53.3983%" y="821" width="0.0128%" height="15" fill="rgb(252,197,50)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="831.50"></text></g><g><title>__GI___libc_free (13 samples, 0.01%)</title><rect x="53.3983%" y="805" width="0.0128%" height="15" fill="rgb(251,211,41)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="815.50"></text></g><g><title>_int_free (13 samples, 0.01%)</title><rect x="53.3983%" y="789" width="0.0128%" height="15" fill="rgb(229,211,5)" fg:x="54376" fg:w="13"/><text x="53.6483%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="53.3983%" y="1029" width="0.0167%" height="15" fill="rgb(239,36,31)" fg:x="54376" fg:w="17"/><text x="53.6483%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::StageBorrow]&gt; (17 samples, 0.02%)</title><rect x="53.3983%" y="1013" width="0.0167%" height="15" fill="rgb(248,67,31)" fg:x="54376" fg:w="17"/><text x="53.6483%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::StageBorrow&gt; (17 samples, 0.02%)</title><rect x="53.3983%" y="997" width="0.0167%" height="15" fill="rgb(249,55,44)" fg:x="54376" fg:w="17"/><text x="53.6483%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::OrderedJobBorrow&gt;&gt; (17 samples, 0.02%)</title><rect x="53.3983%" y="981" width="0.0167%" height="15" fill="rgb(216,82,12)" fg:x="54376" fg:w="17"/><text x="53.6483%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::StageBorrow&gt;&gt; (19 samples, 0.02%)</title><rect x="53.3983%" y="1045" width="0.0187%" height="15" fill="rgb(242,174,1)" fg:x="54376" fg:w="19"/><text x="53.6483%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::Stage&gt;&gt; (13 samples, 0.01%)</title><rect x="53.4169%" y="1029" width="0.0128%" height="15" fill="rgb(208,120,29)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="53.4169%" y="1013" width="0.0128%" height="15" fill="rgb(221,105,43)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::Stage]&gt; (13 samples, 0.01%)</title><rect x="53.4169%" y="997" width="0.0128%" height="15" fill="rgb(234,124,22)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::Stage&gt; (13 samples, 0.01%)</title><rect x="53.4169%" y="981" width="0.0128%" height="15" fill="rgb(212,23,30)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::OrderedJob&gt;&gt; (13 samples, 0.01%)</title><rect x="53.4169%" y="965" width="0.0128%" height="15" fill="rgb(219,122,53)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="53.4169%" y="949" width="0.0128%" height="15" fill="rgb(248,84,24)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::OrderedJob]&gt; (13 samples, 0.01%)</title><rect x="53.4169%" y="933" width="0.0128%" height="15" fill="rgb(245,115,18)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::OrderedJob&gt; (13 samples, 0.01%)</title><rect x="53.4169%" y="917" width="0.0128%" height="15" fill="rgb(227,176,51)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::node::NodeId&gt;&gt; (13 samples, 0.01%)</title><rect x="53.4169%" y="901" width="0.0128%" height="15" fill="rgb(229,63,42)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_render::render_graph::node::NodeId&gt;&gt; (13 samples, 0.01%)</title><rect x="53.4169%" y="885" width="0.0128%" height="15" fill="rgb(247,202,24)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="53.4169%" y="869" width="0.0128%" height="15" fill="rgb(244,173,20)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="53.4169%" y="853" width="0.0128%" height="15" fill="rgb(242,81,47)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="53.4169%" y="837" width="0.0128%" height="15" fill="rgb(231,185,54)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="847.50"></text></g><g><title>__rdl_dealloc (13 samples, 0.01%)</title><rect x="53.4169%" y="821" width="0.0128%" height="15" fill="rgb(243,55,32)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (13 samples, 0.01%)</title><rect x="53.4169%" y="805" width="0.0128%" height="15" fill="rgb(208,167,19)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="815.50"></text></g><g><title>__GI___libc_free (13 samples, 0.01%)</title><rect x="53.4169%" y="789" width="0.0128%" height="15" fill="rgb(231,72,35)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="799.50"></text></g><g><title>_int_free (13 samples, 0.01%)</title><rect x="53.4169%" y="773" width="0.0128%" height="15" fill="rgb(250,173,51)" fg:x="54395" fg:w="13"/><text x="53.6669%" y="783.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (3,982 samples, 3.91%)</title><rect x="49.5213%" y="1109" width="3.9104%" height="15" fill="rgb(209,5,22)" fg:x="50428" fg:w="3982"/><text x="49.7713%" y="1119.50">bevy..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (3,658 samples, 3.59%)</title><rect x="49.8394%" y="1093" width="3.5922%" height="15" fill="rgb(250,174,19)" fg:x="50752" fg:w="3658"/><text x="50.0894%" y="1103.50">bevy..</text></g><g><title>bevy_ecs::world::World::resource_scope (3,658 samples, 3.59%)</title><rect x="49.8394%" y="1077" width="3.5922%" height="15" fill="rgb(217,3,49)" fg:x="50752" fg:w="3658"/><text x="50.0894%" y="1087.50">bevy..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (3,658 samples, 3.59%)</title><rect x="49.8394%" y="1061" width="3.5922%" height="15" fill="rgb(218,225,5)" fg:x="50752" fg:w="3658"/><text x="50.0894%" y="1071.50">bevy..</text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::Stages&gt; (15 samples, 0.01%)</title><rect x="53.4169%" y="1045" width="0.0147%" height="15" fill="rgb(236,89,11)" fg:x="54395" fg:w="15"/><text x="53.6669%" y="1055.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (16,694 samples, 16.39%)</title><rect x="37.0594%" y="1237" width="16.3938%" height="15" fill="rgb(206,33,28)" fg:x="37738" fg:w="16694"/><text x="37.3094%" y="1247.50">winit::platform_impl::pla..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (16,694 samples, 16.39%)</title><rect x="37.0594%" y="1221" width="16.3938%" height="15" fill="rgb(241,56,42)" fg:x="37738" fg:w="16694"/><text x="37.3094%" y="1231.50">bevy_winit::winit_runner_..</text></g><g><title>bevy_app::app::App::update (16,694 samples, 16.39%)</title><rect x="37.0594%" y="1205" width="16.3938%" height="15" fill="rgb(222,44,11)" fg:x="37738" fg:w="16694"/><text x="37.3094%" y="1215.50">bevy_app::app::App::update</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (16,694 samples, 16.39%)</title><rect x="37.0594%" y="1189" width="16.3938%" height="15" fill="rgb(234,111,20)" fg:x="37738" fg:w="16694"/><text x="37.3094%" y="1199.50">&lt;bevy_ecs::schedule::Sche..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (16,694 samples, 16.39%)</title><rect x="37.0594%" y="1173" width="16.3938%" height="15" fill="rgb(237,77,6)" fg:x="37738" fg:w="16694"/><text x="37.3094%" y="1183.50">bevy_ecs::schedule::Sched..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (16,691 samples, 16.39%)</title><rect x="37.0624%" y="1157" width="16.3909%" height="15" fill="rgb(235,111,23)" fg:x="37741" fg:w="16691"/><text x="37.3124%" y="1167.50">&lt;bevy_ecs::schedule::stag..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (4,068 samples, 3.99%)</title><rect x="49.4584%" y="1141" width="3.9949%" height="15" fill="rgb(251,135,29)" fg:x="50364" fg:w="4068"/><text x="49.7084%" y="1151.50">&lt;bev..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (4,068 samples, 3.99%)</title><rect x="49.4584%" y="1125" width="3.9949%" height="15" fill="rgb(217,57,1)" fg:x="50364" fg:w="4068"/><text x="49.7084%" y="1135.50">&lt;all..</text></g><g><title>bevy_winit::change_window (22 samples, 0.02%)</title><rect x="53.4317%" y="1109" width="0.0216%" height="15" fill="rgb(249,119,31)" fg:x="54410" fg:w="22"/><text x="53.6817%" y="1119.50"></text></g><g><title>bevy_winit::run (16,696 samples, 16.40%)</title><rect x="37.0594%" y="1317" width="16.3958%" height="15" fill="rgb(233,164,33)" fg:x="37738" fg:w="16696"/><text x="37.3094%" y="1327.50">bevy_winit::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (16,696 samples, 16.40%)</title><rect x="37.0594%" y="1301" width="16.3958%" height="15" fill="rgb(250,217,43)" fg:x="37738" fg:w="16696"/><text x="37.3094%" y="1311.50">winit::event_loop::EventL..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (16,696 samples, 16.40%)</title><rect x="37.0594%" y="1285" width="16.3958%" height="15" fill="rgb(232,154,50)" fg:x="37738" fg:w="16696"/><text x="37.3094%" y="1295.50">winit::platform_impl::pla..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (16,696 samples, 16.40%)</title><rect x="37.0594%" y="1269" width="16.3958%" height="15" fill="rgb(227,190,8)" fg:x="37738" fg:w="16696"/><text x="37.3094%" y="1279.50">winit::platform_impl::pla..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (16,696 samples, 16.40%)</title><rect x="37.0594%" y="1253" width="16.3958%" height="15" fill="rgb(209,217,32)" fg:x="37738" fg:w="16696"/><text x="37.3094%" y="1263.50">winit::platform_impl::pla..</text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (12 samples, 0.01%)</title><rect x="53.4592%" y="389" width="0.0118%" height="15" fill="rgb(243,203,50)" fg:x="54438" fg:w="12"/><text x="53.7092%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (12 samples, 0.01%)</title><rect x="53.4592%" y="373" width="0.0118%" height="15" fill="rgb(232,152,27)" fg:x="54438" fg:w="12"/><text x="53.7092%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (12 samples, 0.01%)</title><rect x="53.4592%" y="357" width="0.0118%" height="15" fill="rgb(240,34,29)" fg:x="54438" fg:w="12"/><text x="53.7092%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (12 samples, 0.01%)</title><rect x="53.4592%" y="341" width="0.0118%" height="15" fill="rgb(215,185,52)" fg:x="54438" fg:w="12"/><text x="53.7092%" y="351.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::fmt::Debug&gt;::fmt (12 samples, 0.01%)</title><rect x="53.4788%" y="309" width="0.0118%" height="15" fill="rgb(240,89,49)" fg:x="54458" fg:w="12"/><text x="53.7288%" y="319.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (20 samples, 0.02%)</title><rect x="53.4719%" y="325" width="0.0196%" height="15" fill="rgb(225,12,52)" fg:x="54451" fg:w="20"/><text x="53.7219%" y="335.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::dealloc (36 samples, 0.04%)</title><rect x="53.4592%" y="725" width="0.0354%" height="15" fill="rgb(239,128,45)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="735.50"></text></g><g><title>tracing::span::Span::new (36 samples, 0.04%)</title><rect x="53.4592%" y="709" width="0.0354%" height="15" fill="rgb(211,78,47)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="719.50"></text></g><g><title>tracing_core::dispatcher::get_default (36 samples, 0.04%)</title><rect x="53.4592%" y="693" width="0.0354%" height="15" fill="rgb(232,31,21)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (36 samples, 0.04%)</title><rect x="53.4592%" y="677" width="0.0354%" height="15" fill="rgb(222,168,14)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="687.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (36 samples, 0.04%)</title><rect x="53.4592%" y="661" width="0.0354%" height="15" fill="rgb(209,128,24)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="671.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (36 samples, 0.04%)</title><rect x="53.4592%" y="645" width="0.0354%" height="15" fill="rgb(249,35,13)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="655.50"></text></g><g><title>tracing::span::Span::new_with (36 samples, 0.04%)</title><rect x="53.4592%" y="629" width="0.0354%" height="15" fill="rgb(218,7,2)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="639.50"></text></g><g><title>tracing::span::Span::make_with (36 samples, 0.04%)</title><rect x="53.4592%" y="613" width="0.0354%" height="15" fill="rgb(238,107,27)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="623.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (36 samples, 0.04%)</title><rect x="53.4592%" y="597" width="0.0354%" height="15" fill="rgb(217,88,38)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (36 samples, 0.04%)</title><rect x="53.4592%" y="581" width="0.0354%" height="15" fill="rgb(230,207,0)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (36 samples, 0.04%)</title><rect x="53.4592%" y="565" width="0.0354%" height="15" fill="rgb(249,64,54)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (36 samples, 0.04%)</title><rect x="53.4592%" y="549" width="0.0354%" height="15" fill="rgb(231,7,11)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="559.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (36 samples, 0.04%)</title><rect x="53.4592%" y="533" width="0.0354%" height="15" fill="rgb(205,149,21)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="543.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (36 samples, 0.04%)</title><rect x="53.4592%" y="517" width="0.0354%" height="15" fill="rgb(215,126,34)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="527.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (36 samples, 0.04%)</title><rect x="53.4592%" y="501" width="0.0354%" height="15" fill="rgb(241,132,45)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="511.50"></text></g><g><title>tracing_core::span::Attributes::record (36 samples, 0.04%)</title><rect x="53.4592%" y="485" width="0.0354%" height="15" fill="rgb(252,69,32)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="495.50"></text></g><g><title>tracing_core::field::ValueSet::record (36 samples, 0.04%)</title><rect x="53.4592%" y="469" width="0.0354%" height="15" fill="rgb(232,204,19)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="479.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (36 samples, 0.04%)</title><rect x="53.4592%" y="453" width="0.0354%" height="15" fill="rgb(249,15,47)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (36 samples, 0.04%)</title><rect x="53.4592%" y="437" width="0.0354%" height="15" fill="rgb(209,227,23)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (36 samples, 0.04%)</title><rect x="53.4592%" y="421" width="0.0354%" height="15" fill="rgb(248,92,24)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="431.50"></text></g><g><title>core::fmt::write (36 samples, 0.04%)</title><rect x="53.4592%" y="405" width="0.0354%" height="15" fill="rgb(247,59,2)" fg:x="54438" fg:w="36"/><text x="53.7092%" y="415.50"></text></g><g><title>&lt;gpu_alloc::linear::LinearBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (24 samples, 0.02%)</title><rect x="53.4709%" y="389" width="0.0236%" height="15" fill="rgb(221,30,5)" fg:x="54450" fg:w="24"/><text x="53.7209%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (23 samples, 0.02%)</title><rect x="53.4719%" y="373" width="0.0226%" height="15" fill="rgb(208,108,53)" fg:x="54451" fg:w="23"/><text x="53.7219%" y="383.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (23 samples, 0.02%)</title><rect x="53.4719%" y="357" width="0.0226%" height="15" fill="rgb(211,183,26)" fg:x="54451" fg:w="23"/><text x="53.7219%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (23 samples, 0.02%)</title><rect x="53.4719%" y="341" width="0.0226%" height="15" fill="rgb(232,132,4)" fg:x="54451" fg:w="23"/><text x="53.7219%" y="351.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (46 samples, 0.05%)</title><rect x="53.4592%" y="933" width="0.0452%" height="15" fill="rgb(253,128,37)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="943.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (46 samples, 0.05%)</title><rect x="53.4592%" y="917" width="0.0452%" height="15" fill="rgb(221,58,24)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="927.50"></text></g><g><title>core::ops::function::Fn::call (46 samples, 0.05%)</title><rect x="53.4592%" y="901" width="0.0452%" height="15" fill="rgb(230,54,45)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="911.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (46 samples, 0.05%)</title><rect x="53.4592%" y="885" width="0.0452%" height="15" fill="rgb(254,21,18)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="895.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (46 samples, 0.05%)</title><rect x="53.4592%" y="869" width="0.0452%" height="15" fill="rgb(221,108,0)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="879.50"></text></g><g><title>wgpu::Device::poll (46 samples, 0.05%)</title><rect x="53.4592%" y="853" width="0.0452%" height="15" fill="rgb(206,95,1)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (46 samples, 0.05%)</title><rect x="53.4592%" y="837" width="0.0452%" height="15" fill="rgb(237,52,5)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="847.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (46 samples, 0.05%)</title><rect x="53.4592%" y="821" width="0.0452%" height="15" fill="rgb(218,150,34)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="831.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (46 samples, 0.05%)</title><rect x="53.4592%" y="805" width="0.0452%" height="15" fill="rgb(235,194,28)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="815.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (46 samples, 0.05%)</title><rect x="53.4592%" y="789" width="0.0452%" height="15" fill="rgb(245,92,18)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="799.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (46 samples, 0.05%)</title><rect x="53.4592%" y="773" width="0.0452%" height="15" fill="rgb(253,203,53)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="783.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (46 samples, 0.05%)</title><rect x="53.4592%" y="757" width="0.0452%" height="15" fill="rgb(249,185,47)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="767.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (46 samples, 0.05%)</title><rect x="53.4592%" y="741" width="0.0452%" height="15" fill="rgb(252,194,52)" fg:x="54438" fg:w="46"/><text x="53.7092%" y="751.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (49 samples, 0.05%)</title><rect x="53.4592%" y="1205" width="0.0481%" height="15" fill="rgb(210,53,36)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1215.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (49 samples, 0.05%)</title><rect x="53.4592%" y="1189" width="0.0481%" height="15" fill="rgb(237,37,25)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1199.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (49 samples, 0.05%)</title><rect x="53.4592%" y="1173" width="0.0481%" height="15" fill="rgb(242,116,27)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1183.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (49 samples, 0.05%)</title><rect x="53.4592%" y="1157" width="0.0481%" height="15" fill="rgb(213,185,26)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1167.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (49 samples, 0.05%)</title><rect x="53.4592%" y="1141" width="0.0481%" height="15" fill="rgb(225,204,8)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1151.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (49 samples, 0.05%)</title><rect x="53.4592%" y="1125" width="0.0481%" height="15" fill="rgb(254,111,37)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (49 samples, 0.05%)</title><rect x="53.4592%" y="1109" width="0.0481%" height="15" fill="rgb(242,35,9)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1119.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (49 samples, 0.05%)</title><rect x="53.4592%" y="1093" width="0.0481%" height="15" fill="rgb(232,138,49)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1103.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (49 samples, 0.05%)</title><rect x="53.4592%" y="1077" width="0.0481%" height="15" fill="rgb(247,56,4)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1087.50"></text></g><g><title>async_executor::Executor::try_tick (49 samples, 0.05%)</title><rect x="53.4592%" y="1061" width="0.0481%" height="15" fill="rgb(226,179,17)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1071.50"></text></g><g><title>async_task::runnable::Runnable::run (49 samples, 0.05%)</title><rect x="53.4592%" y="1045" width="0.0481%" height="15" fill="rgb(216,163,45)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1055.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (49 samples, 0.05%)</title><rect x="53.4592%" y="1029" width="0.0481%" height="15" fill="rgb(211,157,3)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.05%)</title><rect x="53.4592%" y="1013" width="0.0481%" height="15" fill="rgb(234,44,20)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1023.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (49 samples, 0.05%)</title><rect x="53.4592%" y="997" width="0.0481%" height="15" fill="rgb(254,138,23)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.05%)</title><rect x="53.4592%" y="981" width="0.0481%" height="15" fill="rgb(206,119,39)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="991.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (49 samples, 0.05%)</title><rect x="53.4592%" y="965" width="0.0481%" height="15" fill="rgb(231,105,52)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="975.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (49 samples, 0.05%)</title><rect x="53.4592%" y="949" width="0.0481%" height="15" fill="rgb(250,20,5)" fg:x="54438" fg:w="49"/><text x="53.7092%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (23 samples, 0.02%)</title><rect x="53.5613%" y="693" width="0.0226%" height="15" fill="rgb(215,198,30)" fg:x="54542" fg:w="23"/><text x="53.8113%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (11 samples, 0.01%)</title><rect x="53.5731%" y="677" width="0.0108%" height="15" fill="rgb(246,142,8)" fg:x="54554" fg:w="11"/><text x="53.8231%" y="687.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (82 samples, 0.08%)</title><rect x="53.5073%" y="1189" width="0.0805%" height="15" fill="rgb(243,26,38)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (82 samples, 0.08%)</title><rect x="53.5073%" y="1173" width="0.0805%" height="15" fill="rgb(205,133,28)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1183.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (82 samples, 0.08%)</title><rect x="53.5073%" y="1157" width="0.0805%" height="15" fill="rgb(212,34,0)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (82 samples, 0.08%)</title><rect x="53.5073%" y="1141" width="0.0805%" height="15" fill="rgb(251,226,22)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1151.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (82 samples, 0.08%)</title><rect x="53.5073%" y="1125" width="0.0805%" height="15" fill="rgb(252,119,9)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1135.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (82 samples, 0.08%)</title><rect x="53.5073%" y="1109" width="0.0805%" height="15" fill="rgb(213,150,50)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1119.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (82 samples, 0.08%)</title><rect x="53.5073%" y="1093" width="0.0805%" height="15" fill="rgb(212,24,39)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (82 samples, 0.08%)</title><rect x="53.5073%" y="1077" width="0.0805%" height="15" fill="rgb(213,46,39)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (82 samples, 0.08%)</title><rect x="53.5073%" y="1061" width="0.0805%" height="15" fill="rgb(239,106,12)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (82 samples, 0.08%)</title><rect x="53.5073%" y="1045" width="0.0805%" height="15" fill="rgb(249,229,21)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1055.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (82 samples, 0.08%)</title><rect x="53.5073%" y="1029" width="0.0805%" height="15" fill="rgb(212,158,3)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (82 samples, 0.08%)</title><rect x="53.5073%" y="1013" width="0.0805%" height="15" fill="rgb(253,26,48)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1023.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (82 samples, 0.08%)</title><rect x="53.5073%" y="997" width="0.0805%" height="15" fill="rgb(238,178,20)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="1007.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (82 samples, 0.08%)</title><rect x="53.5073%" y="981" width="0.0805%" height="15" fill="rgb(208,86,15)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="991.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (82 samples, 0.08%)</title><rect x="53.5073%" y="965" width="0.0805%" height="15" fill="rgb(239,42,53)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="975.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (82 samples, 0.08%)</title><rect x="53.5073%" y="949" width="0.0805%" height="15" fill="rgb(245,226,8)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="959.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="933" width="0.0805%" height="15" fill="rgb(216,176,32)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="917" width="0.0805%" height="15" fill="rgb(231,186,21)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="901" width="0.0805%" height="15" fill="rgb(205,95,49)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="885" width="0.0805%" height="15" fill="rgb(217,145,8)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="869" width="0.0805%" height="15" fill="rgb(239,144,48)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="853" width="0.0805%" height="15" fill="rgb(214,189,23)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="837" width="0.0805%" height="15" fill="rgb(229,157,17)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="821" width="0.0805%" height="15" fill="rgb(230,5,48)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="805" width="0.0805%" height="15" fill="rgb(224,156,48)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="789" width="0.0805%" height="15" fill="rgb(223,14,29)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="773" width="0.0805%" height="15" fill="rgb(229,96,36)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="757" width="0.0805%" height="15" fill="rgb(231,102,53)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (82 samples, 0.08%)</title><rect x="53.5073%" y="741" width="0.0805%" height="15" fill="rgb(210,77,38)" fg:x="54487" fg:w="82"/><text x="53.7573%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (57 samples, 0.06%)</title><rect x="53.5318%" y="725" width="0.0560%" height="15" fill="rgb(235,131,6)" fg:x="54512" fg:w="57"/><text x="53.7818%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (41 samples, 0.04%)</title><rect x="53.5475%" y="709" width="0.0403%" height="15" fill="rgb(252,55,38)" fg:x="54528" fg:w="41"/><text x="53.7975%" y="719.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (24 samples, 0.02%)</title><rect x="53.6045%" y="613" width="0.0236%" height="15" fill="rgb(246,38,14)" fg:x="54586" fg:w="24"/><text x="53.8545%" y="623.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (22 samples, 0.02%)</title><rect x="53.6065%" y="597" width="0.0216%" height="15" fill="rgb(242,27,5)" fg:x="54588" fg:w="22"/><text x="53.8565%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (22 samples, 0.02%)</title><rect x="53.6065%" y="581" width="0.0216%" height="15" fill="rgb(228,65,35)" fg:x="54588" fg:w="22"/><text x="53.8565%" y="591.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (22 samples, 0.02%)</title><rect x="53.6065%" y="565" width="0.0216%" height="15" fill="rgb(245,93,11)" fg:x="54588" fg:w="22"/><text x="53.8565%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (38 samples, 0.04%)</title><rect x="53.5947%" y="661" width="0.0373%" height="15" fill="rgb(213,1,31)" fg:x="54576" fg:w="38"/><text x="53.8447%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (38 samples, 0.04%)</title><rect x="53.5947%" y="645" width="0.0373%" height="15" fill="rgb(237,205,14)" fg:x="54576" fg:w="38"/><text x="53.8447%" y="655.50"></text></g><g><title>core::fmt::write (38 samples, 0.04%)</title><rect x="53.5947%" y="629" width="0.0373%" height="15" fill="rgb(232,118,45)" fg:x="54576" fg:w="38"/><text x="53.8447%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (20 samples, 0.02%)</title><rect x="53.6320%" y="629" width="0.0196%" height="15" fill="rgb(218,5,6)" fg:x="54614" fg:w="20"/><text x="53.8820%" y="639.50"></text></g><g><title>core::fmt::write (19 samples, 0.02%)</title><rect x="53.6330%" y="613" width="0.0187%" height="15" fill="rgb(251,87,51)" fg:x="54615" fg:w="19"/><text x="53.8830%" y="623.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (70 samples, 0.07%)</title><rect x="53.5947%" y="757" width="0.0687%" height="15" fill="rgb(207,225,20)" fg:x="54576" fg:w="70"/><text x="53.8447%" y="767.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (70 samples, 0.07%)</title><rect x="53.5947%" y="741" width="0.0687%" height="15" fill="rgb(222,78,54)" fg:x="54576" fg:w="70"/><text x="53.8447%" y="751.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (70 samples, 0.07%)</title><rect x="53.5947%" y="725" width="0.0687%" height="15" fill="rgb(232,85,16)" fg:x="54576" fg:w="70"/><text x="53.8447%" y="735.50"></text></g><g><title>tracing_core::span::Attributes::record (70 samples, 0.07%)</title><rect x="53.5947%" y="709" width="0.0687%" height="15" fill="rgb(244,25,33)" fg:x="54576" fg:w="70"/><text x="53.8447%" y="719.50"></text></g><g><title>tracing_core::field::ValueSet::record (70 samples, 0.07%)</title><rect x="53.5947%" y="693" width="0.0687%" height="15" fill="rgb(233,24,36)" fg:x="54576" fg:w="70"/><text x="53.8447%" y="703.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (70 samples, 0.07%)</title><rect x="53.5947%" y="677" width="0.0687%" height="15" fill="rgb(253,49,54)" fg:x="54576" fg:w="70"/><text x="53.8447%" y="687.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (32 samples, 0.03%)</title><rect x="53.6320%" y="661" width="0.0314%" height="15" fill="rgb(245,12,22)" fg:x="54614" fg:w="32"/><text x="53.8820%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (32 samples, 0.03%)</title><rect x="53.6320%" y="645" width="0.0314%" height="15" fill="rgb(253,141,28)" fg:x="54614" fg:w="32"/><text x="53.8820%" y="655.50"></text></g><g><title>tracing_subscriber::fmt::format::DefaultVisitor::maybe_pad (12 samples, 0.01%)</title><rect x="53.6516%" y="629" width="0.0118%" height="15" fill="rgb(225,207,27)" fg:x="54634" fg:w="12"/><text x="53.9016%" y="639.50"></text></g><g><title>core::fmt::Write::write_fmt (12 samples, 0.01%)</title><rect x="53.6516%" y="613" width="0.0118%" height="15" fill="rgb(220,84,2)" fg:x="54634" fg:w="12"/><text x="53.9016%" y="623.50"></text></g><g><title>core::fmt::write (12 samples, 0.01%)</title><rect x="53.6516%" y="597" width="0.0118%" height="15" fill="rgb(224,37,37)" fg:x="54634" fg:w="12"/><text x="53.9016%" y="607.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (74 samples, 0.07%)</title><rect x="53.5917%" y="949" width="0.0727%" height="15" fill="rgb(220,143,18)" fg:x="54573" fg:w="74"/><text x="53.8417%" y="959.50"></text></g><g><title>tracing::span::Span::new (71 samples, 0.07%)</title><rect x="53.5947%" y="933" width="0.0697%" height="15" fill="rgb(210,88,33)" fg:x="54576" fg:w="71"/><text x="53.8447%" y="943.50"></text></g><g><title>tracing_core::dispatcher::get_default (71 samples, 0.07%)</title><rect x="53.5947%" y="917" width="0.0697%" height="15" fill="rgb(219,87,51)" fg:x="54576" fg:w="71"/><text x="53.8447%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (71 samples, 0.07%)</title><rect x="53.5947%" y="901" width="0.0697%" height="15" fill="rgb(211,7,35)" fg:x="54576" fg:w="71"/><text x="53.8447%" y="911.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (71 samples, 0.07%)</title><rect x="53.5947%" y="885" width="0.0697%" height="15" fill="rgb(232,77,2)" fg:x="54576" fg:w="71"/><text x="53.8447%" y="895.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (71 samples, 0.07%)</title><rect x="53.5947%" y="869" width="0.0697%" height="15" fill="rgb(249,94,25)" fg:x="54576" fg:w="71"/><text x="53.8447%" y="879.50"></text></g><g><title>tracing::span::Span::new_with (71 samples, 0.07%)</title><rect x="53.5947%" y="853" width="0.0697%" height="15" fill="rgb(215,112,2)" fg:x="54576" fg:w="71"/><text x="53.8447%" y="863.50"></text></g><g><title>tracing::span::Span::make_with (71 samples, 0.07%)</title><rect x="53.5947%" y="837" width="0.0697%" height="15" fill="rgb(226,115,48)" fg:x="54576" fg:w="71"/><text x="53.8447%" y="847.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (71 samples, 0.07%)</title><rect x="53.5947%" y="821" width="0.0697%" height="15" fill="rgb(249,196,10)" fg:x="54576" fg:w="71"/><text x="53.8447%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (71 samples, 0.07%)</title><rect x="53.5947%" y="805" width="0.0697%" height="15" fill="rgb(237,109,14)" fg:x="54576" fg:w="71"/><text x="53.8447%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (71 samples, 0.07%)</title><rect x="53.5947%" y="789" width="0.0697%" height="15" fill="rgb(217,103,53)" fg:x="54576" fg:w="71"/><text x="53.8447%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (71 samples, 0.07%)</title><rect x="53.5947%" y="773" width="0.0697%" height="15" fill="rgb(244,137,9)" fg:x="54576" fg:w="71"/><text x="53.8447%" y="783.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (12 samples, 0.01%)</title><rect x="53.6752%" y="613" width="0.0118%" height="15" fill="rgb(227,201,3)" fg:x="54658" fg:w="12"/><text x="53.9252%" y="623.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (11 samples, 0.01%)</title><rect x="53.6762%" y="597" width="0.0108%" height="15" fill="rgb(243,94,6)" fg:x="54659" fg:w="11"/><text x="53.9262%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (11 samples, 0.01%)</title><rect x="53.6762%" y="581" width="0.0108%" height="15" fill="rgb(235,118,5)" fg:x="54659" fg:w="11"/><text x="53.9262%" y="591.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (11 samples, 0.01%)</title><rect x="53.6762%" y="565" width="0.0108%" height="15" fill="rgb(247,10,30)" fg:x="54659" fg:w="11"/><text x="53.9262%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (21 samples, 0.02%)</title><rect x="53.6693%" y="645" width="0.0206%" height="15" fill="rgb(205,26,28)" fg:x="54652" fg:w="21"/><text x="53.9193%" y="655.50"></text></g><g><title>core::fmt::write (21 samples, 0.02%)</title><rect x="53.6693%" y="629" width="0.0206%" height="15" fill="rgb(206,99,35)" fg:x="54652" fg:w="21"/><text x="53.9193%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (22 samples, 0.02%)</title><rect x="53.6693%" y="661" width="0.0216%" height="15" fill="rgb(238,130,40)" fg:x="54652" fg:w="22"/><text x="53.9193%" y="671.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (11 samples, 0.01%)</title><rect x="53.6958%" y="597" width="0.0108%" height="15" fill="rgb(224,126,31)" fg:x="54679" fg:w="11"/><text x="53.9458%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (11 samples, 0.01%)</title><rect x="53.6958%" y="581" width="0.0108%" height="15" fill="rgb(254,105,17)" fg:x="54679" fg:w="11"/><text x="53.9458%" y="591.50"></text></g><g><title>alloc::string::String::push_str (11 samples, 0.01%)</title><rect x="53.6958%" y="565" width="0.0108%" height="15" fill="rgb(216,87,36)" fg:x="54679" fg:w="11"/><text x="53.9458%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (11 samples, 0.01%)</title><rect x="53.6958%" y="549" width="0.0108%" height="15" fill="rgb(240,21,12)" fg:x="54679" fg:w="11"/><text x="53.9458%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (11 samples, 0.01%)</title><rect x="53.6958%" y="533" width="0.0108%" height="15" fill="rgb(245,192,34)" fg:x="54679" fg:w="11"/><text x="53.9458%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (11 samples, 0.01%)</title><rect x="53.6958%" y="517" width="0.0108%" height="15" fill="rgb(226,100,49)" fg:x="54679" fg:w="11"/><text x="53.9458%" y="527.50"></text></g><g><title>core::fmt::Write::write_fmt (20 samples, 0.02%)</title><rect x="53.6909%" y="629" width="0.0196%" height="15" fill="rgb(245,188,27)" fg:x="54674" fg:w="20"/><text x="53.9409%" y="639.50"></text></g><g><title>core::fmt::write (20 samples, 0.02%)</title><rect x="53.6909%" y="613" width="0.0196%" height="15" fill="rgb(212,170,8)" fg:x="54674" fg:w="20"/><text x="53.9409%" y="623.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (126 samples, 0.12%)</title><rect x="53.5917%" y="965" width="0.1237%" height="15" fill="rgb(217,113,29)" fg:x="54573" fg:w="126"/><text x="53.8417%" y="975.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::alloc (52 samples, 0.05%)</title><rect x="53.6644%" y="949" width="0.0511%" height="15" fill="rgb(237,30,3)" fg:x="54647" fg:w="52"/><text x="53.9144%" y="959.50"></text></g><g><title>tracing::span::Span::new (47 samples, 0.05%)</title><rect x="53.6693%" y="933" width="0.0462%" height="15" fill="rgb(227,19,28)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="943.50"></text></g><g><title>tracing_core::dispatcher::get_default (47 samples, 0.05%)</title><rect x="53.6693%" y="917" width="0.0462%" height="15" fill="rgb(239,172,45)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (47 samples, 0.05%)</title><rect x="53.6693%" y="901" width="0.0462%" height="15" fill="rgb(254,55,39)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="911.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (47 samples, 0.05%)</title><rect x="53.6693%" y="885" width="0.0462%" height="15" fill="rgb(249,208,12)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="895.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (47 samples, 0.05%)</title><rect x="53.6693%" y="869" width="0.0462%" height="15" fill="rgb(240,52,13)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="879.50"></text></g><g><title>tracing::span::Span::new_with (47 samples, 0.05%)</title><rect x="53.6693%" y="853" width="0.0462%" height="15" fill="rgb(252,149,13)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="863.50"></text></g><g><title>tracing::span::Span::make_with (47 samples, 0.05%)</title><rect x="53.6693%" y="837" width="0.0462%" height="15" fill="rgb(232,81,48)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="847.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (47 samples, 0.05%)</title><rect x="53.6693%" y="821" width="0.0462%" height="15" fill="rgb(222,144,2)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (47 samples, 0.05%)</title><rect x="53.6693%" y="805" width="0.0462%" height="15" fill="rgb(216,81,32)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (47 samples, 0.05%)</title><rect x="53.6693%" y="789" width="0.0462%" height="15" fill="rgb(244,78,51)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (47 samples, 0.05%)</title><rect x="53.6693%" y="773" width="0.0462%" height="15" fill="rgb(217,66,21)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="783.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (47 samples, 0.05%)</title><rect x="53.6693%" y="757" width="0.0462%" height="15" fill="rgb(247,101,42)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="767.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (47 samples, 0.05%)</title><rect x="53.6693%" y="741" width="0.0462%" height="15" fill="rgb(227,81,39)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="751.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (47 samples, 0.05%)</title><rect x="53.6693%" y="725" width="0.0462%" height="15" fill="rgb(220,223,44)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="735.50"></text></g><g><title>tracing_core::span::Attributes::record (47 samples, 0.05%)</title><rect x="53.6693%" y="709" width="0.0462%" height="15" fill="rgb(205,218,2)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="719.50"></text></g><g><title>tracing_core::field::ValueSet::record (47 samples, 0.05%)</title><rect x="53.6693%" y="693" width="0.0462%" height="15" fill="rgb(212,207,28)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="703.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (47 samples, 0.05%)</title><rect x="53.6693%" y="677" width="0.0462%" height="15" fill="rgb(224,12,41)" fg:x="54652" fg:w="47"/><text x="53.9193%" y="687.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (25 samples, 0.02%)</title><rect x="53.6909%" y="661" width="0.0246%" height="15" fill="rgb(216,118,12)" fg:x="54674" fg:w="25"/><text x="53.9409%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (25 samples, 0.02%)</title><rect x="53.6909%" y="645" width="0.0246%" height="15" fill="rgb(252,97,46)" fg:x="54674" fg:w="25"/><text x="53.9409%" y="655.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (137 samples, 0.13%)</title><rect x="53.5888%" y="1125" width="0.1345%" height="15" fill="rgb(244,206,19)" fg:x="54570" fg:w="137"/><text x="53.8388%" y="1135.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (134 samples, 0.13%)</title><rect x="53.5917%" y="1109" width="0.1316%" height="15" fill="rgb(231,84,31)" fg:x="54573" fg:w="134"/><text x="53.8417%" y="1119.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (134 samples, 0.13%)</title><rect x="53.5917%" y="1093" width="0.1316%" height="15" fill="rgb(244,133,0)" fg:x="54573" fg:w="134"/><text x="53.8417%" y="1103.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (134 samples, 0.13%)</title><rect x="53.5917%" y="1077" width="0.1316%" height="15" fill="rgb(223,15,50)" fg:x="54573" fg:w="134"/><text x="53.8417%" y="1087.50"></text></g><g><title>wgpu::Device::create_buffer (134 samples, 0.13%)</title><rect x="53.5917%" y="1061" width="0.1316%" height="15" fill="rgb(250,118,49)" fg:x="54573" fg:w="134"/><text x="53.8417%" y="1071.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (134 samples, 0.13%)</title><rect x="53.5917%" y="1045" width="0.1316%" height="15" fill="rgb(248,25,38)" fg:x="54573" fg:w="134"/><text x="53.8417%" y="1055.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (134 samples, 0.13%)</title><rect x="53.5917%" y="1029" width="0.1316%" height="15" fill="rgb(215,70,14)" fg:x="54573" fg:w="134"/><text x="53.8417%" y="1039.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (134 samples, 0.13%)</title><rect x="53.5917%" y="1013" width="0.1316%" height="15" fill="rgb(215,28,15)" fg:x="54573" fg:w="134"/><text x="53.8417%" y="1023.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (134 samples, 0.13%)</title><rect x="53.5917%" y="997" width="0.1316%" height="15" fill="rgb(243,6,28)" fg:x="54573" fg:w="134"/><text x="53.8417%" y="1007.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (134 samples, 0.13%)</title><rect x="53.5917%" y="981" width="0.1316%" height="15" fill="rgb(222,130,1)" fg:x="54573" fg:w="134"/><text x="53.8417%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.02%)</title><rect x="53.7489%" y="869" width="0.0157%" height="15" fill="rgb(236,166,44)" fg:x="54733" fg:w="16"/><text x="53.9989%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (11 samples, 0.01%)</title><rect x="53.7538%" y="853" width="0.0108%" height="15" fill="rgb(221,108,14)" fg:x="54738" fg:w="11"/><text x="54.0038%" y="863.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (50 samples, 0.05%)</title><rect x="53.7253%" y="1077" width="0.0491%" height="15" fill="rgb(252,3,45)" fg:x="54709" fg:w="50"/><text x="53.9753%" y="1087.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (50 samples, 0.05%)</title><rect x="53.7253%" y="1061" width="0.0491%" height="15" fill="rgb(237,68,30)" fg:x="54709" fg:w="50"/><text x="53.9753%" y="1071.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (50 samples, 0.05%)</title><rect x="53.7253%" y="1045" width="0.0491%" height="15" fill="rgb(211,79,22)" fg:x="54709" fg:w="50"/><text x="53.9753%" y="1055.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (50 samples, 0.05%)</title><rect x="53.7253%" y="1029" width="0.0491%" height="15" fill="rgb(252,185,21)" fg:x="54709" fg:w="50"/><text x="53.9753%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.05%)</title><rect x="53.7253%" y="1013" width="0.0491%" height="15" fill="rgb(225,189,26)" fg:x="54709" fg:w="50"/><text x="53.9753%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.05%)</title><rect x="53.7253%" y="997" width="0.0491%" height="15" fill="rgb(241,30,40)" fg:x="54709" fg:w="50"/><text x="53.9753%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.05%)</title><rect x="53.7253%" y="981" width="0.0491%" height="15" fill="rgb(235,215,44)" fg:x="54709" fg:w="50"/><text x="53.9753%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.05%)</title><rect x="53.7253%" y="965" width="0.0491%" height="15" fill="rgb(205,8,29)" fg:x="54709" fg:w="50"/><text x="53.9753%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.05%)</title><rect x="53.7253%" y="949" width="0.0491%" height="15" fill="rgb(241,137,42)" fg:x="54709" fg:w="50"/><text x="53.9753%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.05%)</title><rect x="53.7253%" y="933" width="0.0491%" height="15" fill="rgb(237,155,2)" fg:x="54709" fg:w="50"/><text x="53.9753%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (50 samples, 0.05%)</title><rect x="53.7253%" y="917" width="0.0491%" height="15" fill="rgb(245,29,42)" fg:x="54709" fg:w="50"/><text x="53.9753%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (49 samples, 0.05%)</title><rect x="53.7263%" y="901" width="0.0481%" height="15" fill="rgb(234,101,35)" fg:x="54710" fg:w="49"/><text x="53.9763%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (46 samples, 0.05%)</title><rect x="53.7292%" y="885" width="0.0452%" height="15" fill="rgb(228,64,37)" fg:x="54713" fg:w="46"/><text x="53.9792%" y="895.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (32 samples, 0.03%)</title><rect x="53.7744%" y="1077" width="0.0314%" height="15" fill="rgb(217,214,36)" fg:x="54759" fg:w="32"/><text x="54.0244%" y="1087.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (32 samples, 0.03%)</title><rect x="53.7744%" y="1061" width="0.0314%" height="15" fill="rgb(243,70,3)" fg:x="54759" fg:w="32"/><text x="54.0244%" y="1071.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (32 samples, 0.03%)</title><rect x="53.7744%" y="1045" width="0.0314%" height="15" fill="rgb(253,158,52)" fg:x="54759" fg:w="32"/><text x="54.0244%" y="1055.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (32 samples, 0.03%)</title><rect x="53.7744%" y="1029" width="0.0314%" height="15" fill="rgb(234,111,54)" fg:x="54759" fg:w="32"/><text x="54.0244%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.03%)</title><rect x="53.7744%" y="1013" width="0.0314%" height="15" fill="rgb(217,70,32)" fg:x="54759" fg:w="32"/><text x="54.0244%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.03%)</title><rect x="53.7744%" y="997" width="0.0314%" height="15" fill="rgb(234,18,33)" fg:x="54759" fg:w="32"/><text x="54.0244%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.03%)</title><rect x="53.7744%" y="981" width="0.0314%" height="15" fill="rgb(234,12,49)" fg:x="54759" fg:w="32"/><text x="54.0244%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.03%)</title><rect x="53.7744%" y="965" width="0.0314%" height="15" fill="rgb(236,10,21)" fg:x="54759" fg:w="32"/><text x="54.0244%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.03%)</title><rect x="53.7744%" y="949" width="0.0314%" height="15" fill="rgb(248,182,45)" fg:x="54759" fg:w="32"/><text x="54.0244%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.03%)</title><rect x="53.7744%" y="933" width="0.0314%" height="15" fill="rgb(217,95,36)" fg:x="54759" fg:w="32"/><text x="54.0244%" y="943.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (364 samples, 0.36%)</title><rect x="53.4552%" y="1317" width="0.3575%" height="15" fill="rgb(212,110,31)" fg:x="54434" fg:w="364"/><text x="53.7052%" y="1327.50"></text></g><g><title>bevy_app::app::App::update (360 samples, 0.35%)</title><rect x="53.4592%" y="1301" width="0.3535%" height="15" fill="rgb(206,32,53)" fg:x="54438" fg:w="360"/><text x="53.7092%" y="1311.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (360 samples, 0.35%)</title><rect x="53.4592%" y="1285" width="0.3535%" height="15" fill="rgb(246,141,37)" fg:x="54438" fg:w="360"/><text x="53.7092%" y="1295.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (360 samples, 0.35%)</title><rect x="53.4592%" y="1269" width="0.3535%" height="15" fill="rgb(219,16,7)" fg:x="54438" fg:w="360"/><text x="53.7092%" y="1279.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (360 samples, 0.35%)</title><rect x="53.4592%" y="1253" width="0.3535%" height="15" fill="rgb(230,205,45)" fg:x="54438" fg:w="360"/><text x="53.7092%" y="1263.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (360 samples, 0.35%)</title><rect x="53.4592%" y="1237" width="0.3535%" height="15" fill="rgb(231,43,49)" fg:x="54438" fg:w="360"/><text x="53.7092%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (360 samples, 0.35%)</title><rect x="53.4592%" y="1221" width="0.3535%" height="15" fill="rgb(212,106,34)" fg:x="54438" fg:w="360"/><text x="53.7092%" y="1231.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (311 samples, 0.31%)</title><rect x="53.5073%" y="1205" width="0.3054%" height="15" fill="rgb(206,83,17)" fg:x="54487" fg:w="311"/><text x="53.7573%" y="1215.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (229 samples, 0.22%)</title><rect x="53.5878%" y="1189" width="0.2249%" height="15" fill="rgb(244,154,49)" fg:x="54569" fg:w="229"/><text x="53.8378%" y="1199.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (229 samples, 0.22%)</title><rect x="53.5878%" y="1173" width="0.2249%" height="15" fill="rgb(244,149,49)" fg:x="54569" fg:w="229"/><text x="53.8378%" y="1183.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (229 samples, 0.22%)</title><rect x="53.5878%" y="1157" width="0.2249%" height="15" fill="rgb(227,134,18)" fg:x="54569" fg:w="229"/><text x="53.8378%" y="1167.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (228 samples, 0.22%)</title><rect x="53.5888%" y="1141" width="0.2239%" height="15" fill="rgb(237,116,36)" fg:x="54570" fg:w="228"/><text x="53.8388%" y="1151.50"></text></g><g><title>wgpu::Queue::submit (89 samples, 0.09%)</title><rect x="53.7253%" y="1125" width="0.0874%" height="15" fill="rgb(205,129,40)" fg:x="54709" fg:w="89"/><text x="53.9753%" y="1135.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (89 samples, 0.09%)</title><rect x="53.7253%" y="1109" width="0.0874%" height="15" fill="rgb(236,178,4)" fg:x="54709" fg:w="89"/><text x="53.9753%" y="1119.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (89 samples, 0.09%)</title><rect x="53.7253%" y="1093" width="0.0874%" height="15" fill="rgb(251,76,53)" fg:x="54709" fg:w="89"/><text x="53.9753%" y="1103.50"></text></g><g><title>mio_extras::channel::Receiver&lt;T&gt;::try_recv (17 samples, 0.02%)</title><rect x="53.8363%" y="1221" width="0.0167%" height="15" fill="rgb(242,92,40)" fg:x="54822" fg:w="17"/><text x="54.0863%" y="1231.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (17 samples, 0.02%)</title><rect x="53.8363%" y="1205" width="0.0167%" height="15" fill="rgb(209,45,30)" fg:x="54822" fg:w="17"/><text x="54.0863%" y="1215.50"></text></g><g><title>std::sync::mpsc::shared::Packet&lt;T&gt;::try_recv (11 samples, 0.01%)</title><rect x="53.8422%" y="1189" width="0.0108%" height="15" fill="rgb(218,157,36)" fg:x="54828" fg:w="11"/><text x="54.0922%" y="1199.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (12 samples, 0.01%)</title><rect x="53.9178%" y="1125" width="0.0118%" height="15" fill="rgb(222,186,16)" fg:x="54905" fg:w="12"/><text x="54.1678%" y="1135.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (12 samples, 0.01%)</title><rect x="53.9178%" y="1109" width="0.0118%" height="15" fill="rgb(254,72,35)" fg:x="54905" fg:w="12"/><text x="54.1678%" y="1119.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::update_archetypes (21 samples, 0.02%)</title><rect x="53.9462%" y="1109" width="0.0206%" height="15" fill="rgb(224,25,35)" fg:x="54934" fg:w="21"/><text x="54.1962%" y="1119.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (12 samples, 0.01%)</title><rect x="53.9669%" y="1077" width="0.0118%" height="15" fill="rgb(206,135,52)" fg:x="54955" fg:w="12"/><text x="54.2169%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.01%)</title><rect x="53.9669%" y="1061" width="0.0118%" height="15" fill="rgb(229,174,47)" fg:x="54955" fg:w="12"/><text x="54.2169%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 0.01%)</title><rect x="53.9669%" y="1045" width="0.0118%" height="15" fill="rgb(242,184,21)" fg:x="54955" fg:w="12"/><text x="54.2169%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.01%)</title><rect x="53.9669%" y="1029" width="0.0118%" height="15" fill="rgb(213,22,45)" fg:x="54955" fg:w="12"/><text x="54.2169%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (12 samples, 0.01%)</title><rect x="53.9669%" y="1013" width="0.0118%" height="15" fill="rgb(237,81,54)" fg:x="54955" fg:w="12"/><text x="54.2169%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (12 samples, 0.01%)</title><rect x="53.9669%" y="997" width="0.0118%" height="15" fill="rgb(248,177,18)" fg:x="54955" fg:w="12"/><text x="54.2169%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="53.9787%" y="1029" width="0.0108%" height="15" fill="rgb(254,31,16)" fg:x="54967" fg:w="11"/><text x="54.2287%" y="1039.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (11 samples, 0.01%)</title><rect x="53.9787%" y="1013" width="0.0108%" height="15" fill="rgb(235,20,31)" fg:x="54967" fg:w="11"/><text x="54.2287%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.01%)</title><rect x="53.9787%" y="997" width="0.0108%" height="15" fill="rgb(240,56,43)" fg:x="54967" fg:w="11"/><text x="54.2287%" y="1007.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (12 samples, 0.01%)</title><rect x="53.9787%" y="1045" width="0.0118%" height="15" fill="rgb(237,197,51)" fg:x="54967" fg:w="12"/><text x="54.2287%" y="1055.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (13 samples, 0.01%)</title><rect x="53.9787%" y="1061" width="0.0128%" height="15" fill="rgb(241,162,44)" fg:x="54967" fg:w="13"/><text x="54.2287%" y="1071.50"></text></g><g><title>bevy_ecs::world::World::contains_resource (28 samples, 0.03%)</title><rect x="53.9669%" y="1093" width="0.0275%" height="15" fill="rgb(224,23,20)" fg:x="54955" fg:w="28"/><text x="54.2169%" y="1103.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (16 samples, 0.02%)</title><rect x="53.9787%" y="1077" width="0.0157%" height="15" fill="rgb(250,109,34)" fg:x="54967" fg:w="16"/><text x="54.2287%" y="1087.50"></text></g><g><title>bevy_ecs::world::World::get_resource_or_insert_with (36 samples, 0.04%)</title><rect x="53.9669%" y="1109" width="0.0354%" height="15" fill="rgb(214,175,50)" fg:x="54955" fg:w="36"/><text x="54.2169%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (84 samples, 0.08%)</title><rect x="53.9295%" y="1125" width="0.0825%" height="15" fill="rgb(213,182,5)" fg:x="54917" fg:w="84"/><text x="54.1795%" y="1135.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run::should_run (55 samples, 0.05%)</title><rect x="54.0120%" y="1125" width="0.0540%" height="15" fill="rgb(209,199,19)" fg:x="55001" fg:w="55"/><text x="54.2620%" y="1135.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (54 samples, 0.05%)</title><rect x="54.0130%" y="1109" width="0.0530%" height="15" fill="rgb(236,224,42)" fg:x="55002" fg:w="54"/><text x="54.2630%" y="1119.50"></text></g><g><title>core::intrinsics::copy (11 samples, 0.01%)</title><rect x="54.1063%" y="997" width="0.0108%" height="15" fill="rgb(246,226,29)" fg:x="55097" fg:w="11"/><text x="54.3563%" y="1007.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="54.1063%" y="981" width="0.0108%" height="15" fill="rgb(227,223,11)" fg:x="55097" fg:w="11"/><text x="54.3563%" y="991.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (40 samples, 0.04%)</title><rect x="54.0985%" y="1029" width="0.0393%" height="15" fill="rgb(219,7,51)" fg:x="55089" fg:w="40"/><text x="54.3485%" y="1039.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (34 samples, 0.03%)</title><rect x="54.1043%" y="1013" width="0.0334%" height="15" fill="rgb(245,167,10)" fg:x="55095" fg:w="34"/><text x="54.3543%" y="1023.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (21 samples, 0.02%)</title><rect x="54.1171%" y="997" width="0.0206%" height="15" fill="rgb(237,224,16)" fg:x="55108" fg:w="21"/><text x="54.3671%" y="1007.50"></text></g><g><title>__memmove_avx_unaligned_erms (21 samples, 0.02%)</title><rect x="54.1171%" y="981" width="0.0206%" height="15" fill="rgb(226,132,13)" fg:x="55108" fg:w="21"/><text x="54.3671%" y="991.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_and_forget_missing_unchecked (58 samples, 0.06%)</title><rect x="54.0867%" y="1045" width="0.0570%" height="15" fill="rgb(214,140,3)" fg:x="55077" fg:w="58"/><text x="54.3367%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Remove&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (71 samples, 0.07%)</title><rect x="54.0749%" y="1093" width="0.0697%" height="15" fill="rgb(221,177,4)" fg:x="55065" fg:w="71"/><text x="54.3249%" y="1103.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove (69 samples, 0.07%)</title><rect x="54.0769%" y="1077" width="0.0678%" height="15" fill="rgb(238,139,3)" fg:x="55067" fg:w="69"/><text x="54.3269%" y="1087.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove_bundle (69 samples, 0.07%)</title><rect x="54.0769%" y="1061" width="0.0678%" height="15" fill="rgb(216,17,39)" fg:x="55067" fg:w="69"/><text x="54.3269%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (97 samples, 0.10%)</title><rect x="54.0661%" y="1125" width="0.0953%" height="15" fill="rgb(238,120,9)" fg:x="55056" fg:w="97"/><text x="54.3161%" y="1135.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (97 samples, 0.10%)</title><rect x="54.0661%" y="1109" width="0.0953%" height="15" fill="rgb(244,92,53)" fg:x="55056" fg:w="97"/><text x="54.3161%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (15 samples, 0.01%)</title><rect x="54.1613%" y="1125" width="0.0147%" height="15" fill="rgb(224,148,33)" fg:x="55153" fg:w="15"/><text x="54.4113%" y="1135.50"></text></g><g><title>bevy_ecs::system::system::System::run (15 samples, 0.01%)</title><rect x="54.1613%" y="1109" width="0.0147%" height="15" fill="rgb(243,6,36)" fg:x="55153" fg:w="15"/><text x="54.4113%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (15 samples, 0.01%)</title><rect x="54.1613%" y="1093" width="0.0147%" height="15" fill="rgb(230,102,11)" fg:x="55153" fg:w="15"/><text x="54.4113%" y="1103.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_non_send (18 samples, 0.02%)</title><rect x="54.1957%" y="1077" width="0.0177%" height="15" fill="rgb(234,148,36)" fg:x="55188" fg:w="18"/><text x="54.4457%" y="1087.50"></text></g><g><title>bevy_audio::audio_output::play_queued_audio_system (38 samples, 0.04%)</title><rect x="54.1898%" y="1093" width="0.0373%" height="15" fill="rgb(251,153,25)" fg:x="55182" fg:w="38"/><text x="54.4398%" y="1103.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (16 samples, 0.02%)</title><rect x="54.2271%" y="1093" width="0.0157%" height="15" fill="rgb(215,129,8)" fg:x="55220" fg:w="16"/><text x="54.4771%" y="1103.50"></text></g><g><title>bevy_gilrs::gilrs_system::gilrs_event_system (15 samples, 0.01%)</title><rect x="54.2428%" y="1093" width="0.0147%" height="15" fill="rgb(224,128,35)" fg:x="55236" fg:w="15"/><text x="54.4928%" y="1103.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (11 samples, 0.01%)</title><rect x="54.2575%" y="1093" width="0.0108%" height="15" fill="rgb(237,56,52)" fg:x="55251" fg:w="11"/><text x="54.5075%" y="1103.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (21 samples, 0.02%)</title><rect x="54.2733%" y="1077" width="0.0206%" height="15" fill="rgb(234,213,19)" fg:x="55267" fg:w="21"/><text x="54.5233%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (18 samples, 0.02%)</title><rect x="54.2762%" y="1061" width="0.0177%" height="15" fill="rgb(252,82,23)" fg:x="55270" fg:w="18"/><text x="54.5262%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (18 samples, 0.02%)</title><rect x="54.2762%" y="1045" width="0.0177%" height="15" fill="rgb(254,201,21)" fg:x="55270" fg:w="18"/><text x="54.5262%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (18 samples, 0.02%)</title><rect x="54.2762%" y="1029" width="0.0177%" height="15" fill="rgb(250,186,11)" fg:x="55270" fg:w="18"/><text x="54.5262%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (13 samples, 0.01%)</title><rect x="54.2811%" y="1013" width="0.0128%" height="15" fill="rgb(211,174,5)" fg:x="55275" fg:w="13"/><text x="54.5311%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (12 samples, 0.01%)</title><rect x="54.2821%" y="997" width="0.0118%" height="15" fill="rgb(214,121,10)" fg:x="55276" fg:w="12"/><text x="54.5321%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (12 samples, 0.01%)</title><rect x="54.2821%" y="981" width="0.0118%" height="15" fill="rgb(241,66,2)" fg:x="55276" fg:w="12"/><text x="54.5321%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (12 samples, 0.01%)</title><rect x="54.2821%" y="965" width="0.0118%" height="15" fill="rgb(220,167,19)" fg:x="55276" fg:w="12"/><text x="54.5321%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (12 samples, 0.01%)</title><rect x="54.2821%" y="949" width="0.0118%" height="15" fill="rgb(231,54,50)" fg:x="55276" fg:w="12"/><text x="54.5321%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (12 samples, 0.01%)</title><rect x="54.2821%" y="933" width="0.0118%" height="15" fill="rgb(239,217,53)" fg:x="55276" fg:w="12"/><text x="54.5321%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (74 samples, 0.07%)</title><rect x="54.3656%" y="981" width="0.0727%" height="15" fill="rgb(248,8,0)" fg:x="55361" fg:w="74"/><text x="54.6156%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_or (74 samples, 0.07%)</title><rect x="54.3656%" y="965" width="0.0727%" height="15" fill="rgb(229,118,37)" fg:x="55361" fg:w="74"/><text x="54.6156%" y="975.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (128 samples, 0.13%)</title><rect x="54.3449%" y="997" width="0.1257%" height="15" fill="rgb(253,223,43)" fg:x="55340" fg:w="128"/><text x="54.5949%" y="1007.50"></text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (26 samples, 0.03%)</title><rect x="54.4451%" y="981" width="0.0255%" height="15" fill="rgb(211,77,36)" fg:x="55442" fg:w="26"/><text x="54.6951%" y="991.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (21 samples, 0.02%)</title><rect x="54.4500%" y="965" width="0.0206%" height="15" fill="rgb(219,3,53)" fg:x="55447" fg:w="21"/><text x="54.7000%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_load (21 samples, 0.02%)</title><rect x="54.4500%" y="949" width="0.0206%" height="15" fill="rgb(244,45,42)" fg:x="55447" fg:w="21"/><text x="54.7000%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (15 samples, 0.01%)</title><rect x="54.4864%" y="981" width="0.0147%" height="15" fill="rgb(225,95,27)" fg:x="55484" fg:w="15"/><text x="54.7364%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_load (15 samples, 0.01%)</title><rect x="54.4864%" y="965" width="0.0147%" height="15" fill="rgb(207,74,8)" fg:x="55484" fg:w="15"/><text x="54.7364%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (75 samples, 0.07%)</title><rect x="54.5011%" y="981" width="0.0737%" height="15" fill="rgb(243,63,36)" fg:x="55499" fg:w="75"/><text x="54.7511%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (75 samples, 0.07%)</title><rect x="54.5011%" y="965" width="0.0737%" height="15" fill="rgb(211,180,12)" fg:x="55499" fg:w="75"/><text x="54.7511%" y="975.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (287 samples, 0.28%)</title><rect x="54.3037%" y="1029" width="0.2818%" height="15" fill="rgb(254,166,49)" fg:x="55298" fg:w="287"/><text x="54.5537%" y="1039.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (262 samples, 0.26%)</title><rect x="54.3282%" y="1013" width="0.2573%" height="15" fill="rgb(205,19,0)" fg:x="55323" fg:w="262"/><text x="54.5782%" y="1023.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (117 samples, 0.11%)</title><rect x="54.4706%" y="997" width="0.1149%" height="15" fill="rgb(224,172,32)" fg:x="55468" fg:w="117"/><text x="54.7206%" y="1007.50"></text></g><g><title>hashbrown::map::make_insert_hash (13 samples, 0.01%)</title><rect x="54.5865%" y="997" width="0.0128%" height="15" fill="rgb(254,136,30)" fg:x="55586" fg:w="13"/><text x="54.8365%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="54.6121%" y="965" width="0.0118%" height="15" fill="rgb(246,19,35)" fg:x="55612" fg:w="12"/><text x="54.8621%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="54.6121%" y="981" width="0.0128%" height="15" fill="rgb(219,24,36)" fg:x="55612" fg:w="13"/><text x="54.8621%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (56 samples, 0.05%)</title><rect x="54.5865%" y="1029" width="0.0550%" height="15" fill="rgb(251,55,1)" fg:x="55586" fg:w="56"/><text x="54.8365%" y="1039.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (56 samples, 0.05%)</title><rect x="54.5865%" y="1013" width="0.0550%" height="15" fill="rgb(218,117,39)" fg:x="55586" fg:w="56"/><text x="54.8365%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (43 samples, 0.04%)</title><rect x="54.5993%" y="997" width="0.0422%" height="15" fill="rgb(248,169,11)" fg:x="55599" fg:w="43"/><text x="54.8493%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (17 samples, 0.02%)</title><rect x="54.6248%" y="981" width="0.0167%" height="15" fill="rgb(244,40,44)" fg:x="55625" fg:w="17"/><text x="54.8748%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (17 samples, 0.02%)</title><rect x="54.6248%" y="965" width="0.0167%" height="15" fill="rgb(234,62,37)" fg:x="55625" fg:w="17"/><text x="54.8748%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (17 samples, 0.02%)</title><rect x="54.6248%" y="949" width="0.0167%" height="15" fill="rgb(207,117,42)" fg:x="55625" fg:w="17"/><text x="54.8748%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::retain (15 samples, 0.01%)</title><rect x="54.6415%" y="1029" width="0.0147%" height="15" fill="rgb(213,43,2)" fg:x="55642" fg:w="15"/><text x="54.8915%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::retain (15 samples, 0.01%)</title><rect x="54.6415%" y="1013" width="0.0147%" height="15" fill="rgb(244,202,51)" fg:x="55642" fg:w="15"/><text x="54.8915%" y="1023.50"></text></g><g><title>bevy_wgpu::wgpu_resources::BindGroupCounter::remove_stale_bind_groups (374 samples, 0.37%)</title><rect x="54.2939%" y="1045" width="0.3673%" height="15" fill="rgb(253,174,46)" fg:x="55288" fg:w="374"/><text x="54.5439%" y="1055.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::remove_stale_bind_groups (376 samples, 0.37%)</title><rect x="54.2939%" y="1077" width="0.3692%" height="15" fill="rgb(251,23,1)" fg:x="55288" fg:w="376"/><text x="54.5439%" y="1087.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::remove_stale_bind_groups (376 samples, 0.37%)</title><rect x="54.2939%" y="1061" width="0.3692%" height="15" fill="rgb(253,26,1)" fg:x="55288" fg:w="376"/><text x="54.5439%" y="1071.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource (11 samples, 0.01%)</title><rect x="54.6739%" y="1061" width="0.0108%" height="15" fill="rgb(216,89,31)" fg:x="55675" fg:w="11"/><text x="54.9239%" y="1071.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (11 samples, 0.01%)</title><rect x="54.6847%" y="1061" width="0.0108%" height="15" fill="rgb(209,109,5)" fg:x="55686" fg:w="11"/><text x="54.9347%" y="1071.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::handle_window_created_events (32 samples, 0.03%)</title><rect x="54.6670%" y="1077" width="0.0314%" height="15" fill="rgb(229,63,13)" fg:x="55668" fg:w="32"/><text x="54.9170%" y="1087.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (19 samples, 0.02%)</title><rect x="54.7122%" y="1029" width="0.0187%" height="15" fill="rgb(238,137,54)" fg:x="55714" fg:w="19"/><text x="54.9622%" y="1039.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (486 samples, 0.48%)</title><rect x="54.2713%" y="1093" width="0.4773%" height="15" fill="rgb(228,1,9)" fg:x="55265" fg:w="486"/><text x="54.5213%" y="1103.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (51 samples, 0.05%)</title><rect x="54.6985%" y="1077" width="0.0501%" height="15" fill="rgb(249,120,48)" fg:x="55700" fg:w="51"/><text x="54.9485%" y="1087.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (51 samples, 0.05%)</title><rect x="54.6985%" y="1061" width="0.0501%" height="15" fill="rgb(209,72,36)" fg:x="55700" fg:w="51"/><text x="54.9485%" y="1071.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (39 samples, 0.04%)</title><rect x="54.7103%" y="1045" width="0.0383%" height="15" fill="rgb(247,98,49)" fg:x="55712" fg:w="39"/><text x="54.9603%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::Stages&gt; (11 samples, 0.01%)</title><rect x="54.7378%" y="1029" width="0.0108%" height="15" fill="rgb(233,75,36)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::Stage&gt;&gt; (11 samples, 0.01%)</title><rect x="54.7378%" y="1013" width="0.0108%" height="15" fill="rgb(225,14,24)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="54.7378%" y="997" width="0.0108%" height="15" fill="rgb(237,193,20)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::Stage]&gt; (11 samples, 0.01%)</title><rect x="54.7378%" y="981" width="0.0108%" height="15" fill="rgb(239,122,19)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::Stage&gt; (11 samples, 0.01%)</title><rect x="54.7378%" y="965" width="0.0108%" height="15" fill="rgb(231,220,10)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::OrderedJob&gt;&gt; (11 samples, 0.01%)</title><rect x="54.7378%" y="949" width="0.0108%" height="15" fill="rgb(220,66,15)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="54.7378%" y="933" width="0.0108%" height="15" fill="rgb(215,171,52)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::OrderedJob]&gt; (11 samples, 0.01%)</title><rect x="54.7378%" y="917" width="0.0108%" height="15" fill="rgb(241,169,50)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::OrderedJob&gt; (11 samples, 0.01%)</title><rect x="54.7378%" y="901" width="0.0108%" height="15" fill="rgb(236,189,0)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::node::NodeId&gt;&gt; (11 samples, 0.01%)</title><rect x="54.7378%" y="885" width="0.0108%" height="15" fill="rgb(217,147,20)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_render::render_graph::node::NodeId&gt;&gt; (11 samples, 0.01%)</title><rect x="54.7378%" y="869" width="0.0108%" height="15" fill="rgb(206,188,39)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="879.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="54.7378%" y="853" width="0.0108%" height="15" fill="rgb(227,118,25)" fg:x="55740" fg:w="11"/><text x="54.9878%" y="863.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (600 samples, 0.59%)</title><rect x="54.1760%" y="1125" width="0.5892%" height="15" fill="rgb(248,171,40)" fg:x="55168" fg:w="600"/><text x="54.4260%" y="1135.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (586 samples, 0.58%)</title><rect x="54.1898%" y="1109" width="0.5755%" height="15" fill="rgb(251,90,54)" fg:x="55182" fg:w="586"/><text x="54.4398%" y="1119.50"></text></g><g><title>core::ops::function::FnMut::call_mut (17 samples, 0.02%)</title><rect x="54.7486%" y="1093" width="0.0167%" height="15" fill="rgb(234,11,46)" fg:x="55751" fg:w="17"/><text x="54.9986%" y="1103.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (24 samples, 0.02%)</title><rect x="54.7672%" y="1109" width="0.0236%" height="15" fill="rgb(229,134,13)" fg:x="55770" fg:w="24"/><text x="55.0172%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (29 samples, 0.03%)</title><rect x="54.7652%" y="1125" width="0.0285%" height="15" fill="rgb(223,129,3)" fg:x="55768" fg:w="29"/><text x="55.0152%" y="1135.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (954 samples, 0.94%)</title><rect x="53.8706%" y="1141" width="0.9368%" height="15" fill="rgb(221,124,13)" fg:x="54857" fg:w="954"/><text x="54.1206%" y="1151.50"></text></g><g><title>&lt;bevy_app::CoreStage as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="54.8281%" y="1029" width="0.0137%" height="15" fill="rgb(234,3,18)" fg:x="55832" fg:w="14"/><text x="55.0781%" y="1039.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynHash&gt;::dyn_hash (29 samples, 0.03%)</title><rect x="54.8252%" y="1045" width="0.0285%" height="15" fill="rgb(249,199,20)" fg:x="55829" fg:w="29"/><text x="55.0752%" y="1055.50"></text></g><g><title>hashbrown::map::make_hash (45 samples, 0.04%)</title><rect x="54.8134%" y="1093" width="0.0442%" height="15" fill="rgb(224,134,6)" fg:x="55817" fg:w="45"/><text x="55.0634%" y="1103.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (38 samples, 0.04%)</title><rect x="54.8202%" y="1077" width="0.0373%" height="15" fill="rgb(254,83,26)" fg:x="55824" fg:w="38"/><text x="55.0702%" y="1087.50"></text></g><g><title>&lt;dyn bevy_ecs::schedule::label::StageLabel as core::hash::Hash&gt;::hash (34 samples, 0.03%)</title><rect x="54.8242%" y="1061" width="0.0334%" height="15" fill="rgb(217,88,9)" fg:x="55828" fg:w="34"/><text x="55.0742%" y="1071.50"></text></g><g><title>&lt;dyn bevy_ecs::schedule::label::StageLabel as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="54.8723%" y="1029" width="0.0187%" height="15" fill="rgb(225,73,2)" fg:x="55877" fg:w="19"/><text x="55.1223%" y="1039.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynEq&gt;::dyn_eq (19 samples, 0.02%)</title><rect x="54.8723%" y="1013" width="0.0187%" height="15" fill="rgb(226,44,39)" fg:x="55877" fg:w="19"/><text x="55.1223%" y="1023.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (32 samples, 0.03%)</title><rect x="54.8605%" y="1061" width="0.0314%" height="15" fill="rgb(228,53,17)" fg:x="55865" fg:w="32"/><text x="55.1105%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::cmp::PartialEq&gt;::eq (20 samples, 0.02%)</title><rect x="54.8723%" y="1045" width="0.0196%" height="15" fill="rgb(212,27,27)" fg:x="55877" fg:w="20"/><text x="55.1223%" y="1055.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1,054 samples, 1.04%)</title><rect x="53.8657%" y="1157" width="1.0350%" height="15" fill="rgb(241,50,6)" fg:x="54852" fg:w="1054"/><text x="54.1157%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (91 samples, 0.09%)</title><rect x="54.8114%" y="1141" width="0.0894%" height="15" fill="rgb(225,28,51)" fg:x="55815" fg:w="91"/><text x="55.0614%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (91 samples, 0.09%)</title><rect x="54.8114%" y="1125" width="0.0894%" height="15" fill="rgb(215,33,16)" fg:x="55815" fg:w="91"/><text x="55.0614%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (89 samples, 0.09%)</title><rect x="54.8134%" y="1109" width="0.0874%" height="15" fill="rgb(243,40,39)" fg:x="55817" fg:w="89"/><text x="55.0634%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (44 samples, 0.04%)</title><rect x="54.8576%" y="1093" width="0.0432%" height="15" fill="rgb(225,11,42)" fg:x="55862" fg:w="44"/><text x="55.1076%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (43 samples, 0.04%)</title><rect x="54.8585%" y="1077" width="0.0422%" height="15" fill="rgb(241,220,38)" fg:x="55863" fg:w="43"/><text x="55.1085%" y="1087.50"></text></g><g><title>bevy_app::app::App::update (1,062 samples, 1.04%)</title><rect x="53.8588%" y="1189" width="1.0429%" height="15" fill="rgb(244,52,35)" fg:x="54845" fg:w="1062"/><text x="54.1088%" y="1199.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1,057 samples, 1.04%)</title><rect x="53.8638%" y="1173" width="1.0380%" height="15" fill="rgb(246,42,46)" fg:x="54850" fg:w="1057"/><text x="54.1138%" y="1183.50"></text></g><g><title>bevy_ecs::world::World::get_resource_mut (12 samples, 0.01%)</title><rect x="54.9027%" y="1189" width="0.0118%" height="15" fill="rgb(205,184,13)" fg:x="55908" fg:w="12"/><text x="55.1527%" y="1199.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut (12 samples, 0.01%)</title><rect x="54.9027%" y="1173" width="0.0118%" height="15" fill="rgb(209,48,36)" fg:x="55908" fg:w="12"/><text x="55.1527%" y="1183.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (28 samples, 0.03%)</title><rect x="54.9292%" y="1173" width="0.0275%" height="15" fill="rgb(244,34,51)" fg:x="55935" fg:w="28"/><text x="55.1792%" y="1183.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1,127 samples, 1.11%)</title><rect x="53.8588%" y="1221" width="1.1067%" height="15" fill="rgb(221,107,33)" fg:x="54845" fg:w="1127"/><text x="54.1088%" y="1231.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (1,127 samples, 1.11%)</title><rect x="53.8588%" y="1205" width="1.1067%" height="15" fill="rgb(224,203,12)" fg:x="54845" fg:w="1127"/><text x="54.1088%" y="1215.50"></text></g><g><title>bevy_winit::handle_create_window_events (52 samples, 0.05%)</title><rect x="54.9145%" y="1189" width="0.0511%" height="15" fill="rgb(230,215,18)" fg:x="55920" fg:w="52"/><text x="55.1645%" y="1199.50"></text></g><g><title>_XEventsQueued (12 samples, 0.01%)</title><rect x="54.9725%" y="1173" width="0.0118%" height="15" fill="rgb(206,185,35)" fg:x="55979" fg:w="12"/><text x="55.2225%" y="1183.50"></text></g><g><title>[libX11.so.6.4.0] (12 samples, 0.01%)</title><rect x="54.9725%" y="1157" width="0.0118%" height="15" fill="rgb(228,140,34)" fg:x="55979" fg:w="12"/><text x="55.2225%" y="1167.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (22 samples, 0.02%)</title><rect x="54.9656%" y="1205" width="0.0216%" height="15" fill="rgb(208,93,13)" fg:x="55972" fg:w="22"/><text x="55.2156%" y="1215.50"></text></g><g><title>XCheckIfEvent (22 samples, 0.02%)</title><rect x="54.9656%" y="1189" width="0.0216%" height="15" fill="rgb(221,193,39)" fg:x="55972" fg:w="22"/><text x="55.2156%" y="1199.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (35 samples, 0.03%)</title><rect x="54.9656%" y="1221" width="0.0344%" height="15" fill="rgb(241,132,34)" fg:x="55972" fg:w="35"/><text x="55.2156%" y="1231.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (13 samples, 0.01%)</title><rect x="54.9872%" y="1205" width="0.0128%" height="15" fill="rgb(221,141,10)" fg:x="55994" fg:w="13"/><text x="55.2372%" y="1215.50"></text></g><g><title>[libX11.so.6.4.0] (11 samples, 0.01%)</title><rect x="55.0098%" y="1189" width="0.0108%" height="15" fill="rgb(226,90,31)" fg:x="56017" fg:w="11"/><text x="55.2598%" y="1199.50"></text></g><g><title>[libxcb.so.1.1.0] (14 samples, 0.01%)</title><rect x="55.0206%" y="1141" width="0.0137%" height="15" fill="rgb(243,75,5)" fg:x="56028" fg:w="14"/><text x="55.2706%" y="1151.50"></text></g><g><title>[libX11.so.6.4.0] (17 samples, 0.02%)</title><rect x="55.0206%" y="1157" width="0.0167%" height="15" fill="rgb(227,156,21)" fg:x="56028" fg:w="17"/><text x="55.2706%" y="1167.50"></text></g><g><title>_XEventsQueued (30 samples, 0.03%)</title><rect x="55.0206%" y="1189" width="0.0295%" height="15" fill="rgb(250,195,8)" fg:x="56028" fg:w="30"/><text x="55.2706%" y="1199.50"></text></g><g><title>[libX11.so.6.4.0] (30 samples, 0.03%)</title><rect x="55.0206%" y="1173" width="0.0295%" height="15" fill="rgb(220,134,5)" fg:x="56028" fg:w="30"/><text x="55.2706%" y="1183.50"></text></g><g><title>_XEnq (13 samples, 0.01%)</title><rect x="55.0373%" y="1157" width="0.0128%" height="15" fill="rgb(246,106,34)" fg:x="56045" fg:w="13"/><text x="55.2873%" y="1167.50"></text></g><g><title>[libXi.so.6.1.0] (11 samples, 0.01%)</title><rect x="55.0392%" y="1141" width="0.0108%" height="15" fill="rgb(205,1,4)" fg:x="56047" fg:w="11"/><text x="55.2892%" y="1151.50"></text></g><g><title>bevy_winit::winit_runner_with (1,261 samples, 1.24%)</title><rect x="53.8127%" y="1317" width="1.2383%" height="15" fill="rgb(224,151,29)" fg:x="54798" fg:w="1261"/><text x="54.0627%" y="1327.50"></text></g><g><title>bevy_winit::run (1,261 samples, 1.24%)</title><rect x="53.8127%" y="1301" width="1.2383%" height="15" fill="rgb(251,196,0)" fg:x="54798" fg:w="1261"/><text x="54.0627%" y="1311.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (1,261 samples, 1.24%)</title><rect x="53.8127%" y="1285" width="1.2383%" height="15" fill="rgb(212,127,0)" fg:x="54798" fg:w="1261"/><text x="54.0627%" y="1295.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (1,261 samples, 1.24%)</title><rect x="53.8127%" y="1269" width="1.2383%" height="15" fill="rgb(236,71,53)" fg:x="54798" fg:w="1261"/><text x="54.0627%" y="1279.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (1,261 samples, 1.24%)</title><rect x="53.8127%" y="1253" width="1.2383%" height="15" fill="rgb(227,99,0)" fg:x="54798" fg:w="1261"/><text x="54.0627%" y="1263.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1,261 samples, 1.24%)</title><rect x="53.8127%" y="1237" width="1.2383%" height="15" fill="rgb(239,89,21)" fg:x="54798" fg:w="1261"/><text x="54.0627%" y="1247.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (52 samples, 0.05%)</title><rect x="55.0000%" y="1221" width="0.0511%" height="15" fill="rgb(243,122,19)" fg:x="56007" fg:w="52"/><text x="55.2500%" y="1231.50"></text></g><g><title>XPending (47 samples, 0.05%)</title><rect x="55.0049%" y="1205" width="0.0462%" height="15" fill="rgb(229,192,45)" fg:x="56012" fg:w="47"/><text x="55.2549%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (21 samples, 0.02%)</title><rect x="55.0923%" y="1317" width="0.0206%" height="15" fill="rgb(235,165,35)" fg:x="56101" fg:w="21"/><text x="55.3423%" y="1327.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (33 samples, 0.03%)</title><rect x="55.1345%" y="1317" width="0.0324%" height="15" fill="rgb(253,202,0)" fg:x="56144" fg:w="33"/><text x="55.3845%" y="1327.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (11 samples, 0.01%)</title><rect x="55.1767%" y="1317" width="0.0108%" height="15" fill="rgb(235,51,20)" fg:x="56187" fg:w="11"/><text x="55.4267%" y="1327.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (19 samples, 0.02%)</title><rect x="55.1875%" y="1317" width="0.0187%" height="15" fill="rgb(218,95,46)" fg:x="56198" fg:w="19"/><text x="55.4375%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (24 samples, 0.02%)</title><rect x="55.3063%" y="1301" width="0.0236%" height="15" fill="rgb(212,81,10)" fg:x="56319" fg:w="24"/><text x="55.5563%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (24 samples, 0.02%)</title><rect x="55.3063%" y="1285" width="0.0236%" height="15" fill="rgb(240,59,0)" fg:x="56319" fg:w="24"/><text x="55.5563%" y="1295.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (24 samples, 0.02%)</title><rect x="55.3063%" y="1269" width="0.0236%" height="15" fill="rgb(212,191,42)" fg:x="56319" fg:w="24"/><text x="55.5563%" y="1279.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::neighbors_except_entities (149 samples, 0.15%)</title><rect x="55.2268%" y="1317" width="0.1463%" height="15" fill="rgb(233,140,3)" fg:x="56238" fg:w="149"/><text x="55.4768%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (44 samples, 0.04%)</title><rect x="55.3299%" y="1301" width="0.0432%" height="15" fill="rgb(215,69,23)" fg:x="56343" fg:w="44"/><text x="55.5799%" y="1311.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="55.3299%" y="1285" width="0.0432%" height="15" fill="rgb(240,202,20)" fg:x="56343" fg:w="44"/><text x="55.5799%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (44 samples, 0.04%)</title><rect x="55.3299%" y="1269" width="0.0432%" height="15" fill="rgb(209,146,50)" fg:x="56343" fg:w="44"/><text x="55.5799%" y="1279.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="55.3299%" y="1253" width="0.0432%" height="15" fill="rgb(253,102,54)" fg:x="56343" fg:w="44"/><text x="55.5799%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (44 samples, 0.04%)</title><rect x="55.3299%" y="1237" width="0.0432%" height="15" fill="rgb(250,173,47)" fg:x="56343" fg:w="44"/><text x="55.5799%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (44 samples, 0.04%)</title><rect x="55.3299%" y="1221" width="0.0432%" height="15" fill="rgb(232,142,7)" fg:x="56343" fg:w="44"/><text x="55.5799%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (44 samples, 0.04%)</title><rect x="55.3299%" y="1205" width="0.0432%" height="15" fill="rgb(230,157,47)" fg:x="56343" fg:w="44"/><text x="55.5799%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (44 samples, 0.04%)</title><rect x="55.3299%" y="1189" width="0.0432%" height="15" fill="rgb(214,177,35)" fg:x="56343" fg:w="44"/><text x="55.5799%" y="1199.50"></text></g><g><title>__rdl_dealloc (44 samples, 0.04%)</title><rect x="55.3299%" y="1173" width="0.0432%" height="15" fill="rgb(234,119,46)" fg:x="56343" fg:w="44"/><text x="55.5799%" y="1183.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (44 samples, 0.04%)</title><rect x="55.3299%" y="1157" width="0.0432%" height="15" fill="rgb(241,180,50)" fg:x="56343" fg:w="44"/><text x="55.5799%" y="1167.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (17 samples, 0.02%)</title><rect x="55.3800%" y="1317" width="0.0167%" height="15" fill="rgb(221,54,25)" fg:x="56394" fg:w="17"/><text x="55.6300%" y="1327.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (24 samples, 0.02%)</title><rect x="55.3967%" y="1317" width="0.0236%" height="15" fill="rgb(209,157,44)" fg:x="56411" fg:w="24"/><text x="55.6467%" y="1327.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (27 samples, 0.03%)</title><rect x="55.4261%" y="1317" width="0.0265%" height="15" fill="rgb(246,115,41)" fg:x="56441" fg:w="27"/><text x="55.6761%" y="1327.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.02%)</title><rect x="55.4841%" y="1285" width="0.0196%" height="15" fill="rgb(229,86,1)" fg:x="56500" fg:w="20"/><text x="55.7341%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="55.4841%" y="1269" width="0.0196%" height="15" fill="rgb(240,108,53)" fg:x="56500" fg:w="20"/><text x="55.7341%" y="1279.50"></text></g><g><title>&lt;dyn bevy_ecs::schedule::label::StageLabel as core::hash::Hash&gt;::hash (20 samples, 0.02%)</title><rect x="55.4841%" y="1253" width="0.0196%" height="15" fill="rgb(227,134,2)" fg:x="56500" fg:w="20"/><text x="55.7341%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (27 samples, 0.03%)</title><rect x="55.4792%" y="1317" width="0.0265%" height="15" fill="rgb(213,129,25)" fg:x="56495" fg:w="27"/><text x="55.7292%" y="1327.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (22 samples, 0.02%)</title><rect x="55.4841%" y="1301" width="0.0216%" height="15" fill="rgb(226,35,21)" fg:x="56500" fg:w="22"/><text x="55.7341%" y="1311.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.01%)</title><rect x="55.5185%" y="1317" width="0.0108%" height="15" fill="rgb(208,129,26)" fg:x="56535" fg:w="11"/><text x="55.7685%" y="1327.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (18 samples, 0.02%)</title><rect x="55.5401%" y="1317" width="0.0177%" height="15" fill="rgb(224,83,6)" fg:x="56557" fg:w="18"/><text x="55.7901%" y="1327.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (58 samples, 0.06%)</title><rect x="55.5666%" y="1317" width="0.0570%" height="15" fill="rgb(227,52,39)" fg:x="56584" fg:w="58"/><text x="55.8166%" y="1327.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (126 samples, 0.12%)</title><rect x="55.6442%" y="1317" width="0.1237%" height="15" fill="rgb(241,30,17)" fg:x="56663" fg:w="126"/><text x="55.8942%" y="1327.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (19 samples, 0.02%)</title><rect x="55.7492%" y="1301" width="0.0187%" height="15" fill="rgb(246,186,42)" fg:x="56770" fg:w="19"/><text x="55.9992%" y="1311.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (566 samples, 0.56%)</title><rect x="55.7679%" y="1317" width="0.5558%" height="15" fill="rgb(221,169,15)" fg:x="56789" fg:w="566"/><text x="56.0179%" y="1327.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (266 samples, 0.26%)</title><rect x="56.0625%" y="1301" width="0.2612%" height="15" fill="rgb(235,108,21)" fg:x="57089" fg:w="266"/><text x="56.3125%" y="1311.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (266 samples, 0.26%)</title><rect x="56.0625%" y="1285" width="0.2612%" height="15" fill="rgb(219,148,30)" fg:x="57089" fg:w="266"/><text x="56.3125%" y="1295.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (14 samples, 0.01%)</title><rect x="56.3355%" y="1317" width="0.0137%" height="15" fill="rgb(220,109,5)" fg:x="57367" fg:w="14"/><text x="56.5855%" y="1327.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (13 samples, 0.01%)</title><rect x="56.3836%" y="1301" width="0.0128%" height="15" fill="rgb(213,203,48)" fg:x="57416" fg:w="13"/><text x="56.6336%" y="1311.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="56.3836%" y="1285" width="0.0128%" height="15" fill="rgb(244,71,33)" fg:x="57416" fg:w="13"/><text x="56.6336%" y="1295.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (13 samples, 0.01%)</title><rect x="56.3836%" y="1269" width="0.0128%" height="15" fill="rgb(209,23,2)" fg:x="57416" fg:w="13"/><text x="56.6336%" y="1279.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="56.3836%" y="1253" width="0.0128%" height="15" fill="rgb(219,97,7)" fg:x="57416" fg:w="13"/><text x="56.6336%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (13 samples, 0.01%)</title><rect x="56.3836%" y="1237" width="0.0128%" height="15" fill="rgb(216,161,23)" fg:x="57416" fg:w="13"/><text x="56.6336%" y="1247.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (13 samples, 0.01%)</title><rect x="56.3836%" y="1221" width="0.0128%" height="15" fill="rgb(207,45,42)" fg:x="57416" fg:w="13"/><text x="56.6336%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (13 samples, 0.01%)</title><rect x="56.3836%" y="1205" width="0.0128%" height="15" fill="rgb(241,61,4)" fg:x="57416" fg:w="13"/><text x="56.6336%" y="1215.50"></text></g><g><title>alloc::alloc::dealloc (13 samples, 0.01%)</title><rect x="56.3836%" y="1189" width="0.0128%" height="15" fill="rgb(236,170,1)" fg:x="57416" fg:w="13"/><text x="56.6336%" y="1199.50"></text></g><g><title>__rdl_dealloc (13 samples, 0.01%)</title><rect x="56.3836%" y="1173" width="0.0128%" height="15" fill="rgb(239,72,5)" fg:x="57416" fg:w="13"/><text x="56.6336%" y="1183.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (13 samples, 0.01%)</title><rect x="56.3836%" y="1157" width="0.0128%" height="15" fill="rgb(214,13,50)" fg:x="57416" fg:w="13"/><text x="56.6336%" y="1167.50"></text></g><g><title>pathfinding::directed::astar::astar (80 samples, 0.08%)</title><rect x="56.3571%" y="1317" width="0.0786%" height="15" fill="rgb(224,88,9)" fg:x="57389" fg:w="80"/><text x="56.6071%" y="1327.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (40 samples, 0.04%)</title><rect x="56.3964%" y="1301" width="0.0393%" height="15" fill="rgb(238,192,34)" fg:x="57429" fg:w="40"/><text x="56.6464%" y="1311.50"></text></g><g><title>snd_dlopen (18 samples, 0.02%)</title><rect x="56.4396%" y="1317" width="0.0177%" height="15" fill="rgb(217,203,50)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1327.50"></text></g><g><title>dlopen (18 samples, 0.02%)</title><rect x="56.4396%" y="1301" width="0.0177%" height="15" fill="rgb(241,123,32)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1311.50"></text></g><g><title>[libdl-2.33.so] (18 samples, 0.02%)</title><rect x="56.4396%" y="1285" width="0.0177%" height="15" fill="rgb(248,151,39)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1295.50"></text></g><g><title>__GI__dl_catch_error (18 samples, 0.02%)</title><rect x="56.4396%" y="1269" width="0.0177%" height="15" fill="rgb(208,89,6)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1279.50"></text></g><g><title>__GI__dl_catch_exception (18 samples, 0.02%)</title><rect x="56.4396%" y="1253" width="0.0177%" height="15" fill="rgb(254,43,26)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1263.50"></text></g><g><title>[libdl-2.33.so] (18 samples, 0.02%)</title><rect x="56.4396%" y="1237" width="0.0177%" height="15" fill="rgb(216,158,13)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1247.50"></text></g><g><title>_dl_open (18 samples, 0.02%)</title><rect x="56.4396%" y="1221" width="0.0177%" height="15" fill="rgb(212,47,37)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1231.50"></text></g><g><title>__GI__dl_catch_exception (18 samples, 0.02%)</title><rect x="56.4396%" y="1205" width="0.0177%" height="15" fill="rgb(254,16,10)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1215.50"></text></g><g><title>dl_open_worker (18 samples, 0.02%)</title><rect x="56.4396%" y="1189" width="0.0177%" height="15" fill="rgb(223,228,16)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1199.50"></text></g><g><title>_dl_map_object_deps (18 samples, 0.02%)</title><rect x="56.4396%" y="1173" width="0.0177%" height="15" fill="rgb(249,108,50)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1183.50"></text></g><g><title>__GI__dl_catch_exception (18 samples, 0.02%)</title><rect x="56.4396%" y="1157" width="0.0177%" height="15" fill="rgb(208,220,5)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1167.50"></text></g><g><title>openaux (18 samples, 0.02%)</title><rect x="56.4396%" y="1141" width="0.0177%" height="15" fill="rgb(217,89,48)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1151.50"></text></g><g><title>_dl_map_object (18 samples, 0.02%)</title><rect x="56.4396%" y="1125" width="0.0177%" height="15" fill="rgb(212,113,41)" fg:x="57473" fg:w="18"/><text x="56.6896%" y="1135.50"></text></g><g><title>_dl_map_object_from_fd (17 samples, 0.02%)</title><rect x="56.4406%" y="1109" width="0.0167%" height="15" fill="rgb(231,127,5)" fg:x="57474" fg:w="17"/><text x="56.6906%" y="1119.50"></text></g><g><title>memset (15 samples, 0.01%)</title><rect x="56.4425%" y="1093" width="0.0147%" height="15" fill="rgb(217,141,17)" fg:x="57476" fg:w="15"/><text x="56.6925%" y="1103.50"></text></g><g><title>glslang::TSymbolTableLevel::readOnly (11 samples, 0.01%)</title><rect x="56.5378%" y="933" width="0.0108%" height="15" fill="rgb(245,125,54)" fg:x="57573" fg:w="11"/><text x="56.7878%" y="943.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (17 samples, 0.02%)</title><rect x="56.5368%" y="1045" width="0.0167%" height="15" fill="rgb(248,125,3)" fg:x="57572" fg:w="17"/><text x="56.7868%" y="1055.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (17 samples, 0.02%)</title><rect x="56.5368%" y="1029" width="0.0167%" height="15" fill="rgb(236,119,51)" fg:x="57572" fg:w="17"/><text x="56.7868%" y="1039.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (17 samples, 0.02%)</title><rect x="56.5368%" y="1013" width="0.0167%" height="15" fill="rgb(239,99,8)" fg:x="57572" fg:w="17"/><text x="56.7868%" y="1023.50"></text></g><g><title>bevy_glsl_to_spirv::compile (17 samples, 0.02%)</title><rect x="56.5368%" y="997" width="0.0167%" height="15" fill="rgb(224,228,4)" fg:x="57572" fg:w="17"/><text x="56.7868%" y="1007.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (17 samples, 0.02%)</title><rect x="56.5368%" y="981" width="0.0167%" height="15" fill="rgb(220,131,45)" fg:x="57572" fg:w="17"/><text x="56.7868%" y="991.50"></text></g><g><title>glslang_shader_preprocess (17 samples, 0.02%)</title><rect x="56.5368%" y="965" width="0.0167%" height="15" fill="rgb(215,62,5)" fg:x="57572" fg:w="17"/><text x="56.7868%" y="975.50"></text></g><g><title>glslang::TShader::preprocess (17 samples, 0.02%)</title><rect x="56.5368%" y="949" width="0.0167%" height="15" fill="rgb(253,12,24)" fg:x="57572" fg:w="17"/><text x="56.7868%" y="959.50"></text></g><g><title>async_executor::Executor::try_tick (32 samples, 0.03%)</title><rect x="56.5368%" y="1269" width="0.0314%" height="15" fill="rgb(248,120,50)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1279.50"></text></g><g><title>async_task::runnable::Runnable::run (32 samples, 0.03%)</title><rect x="56.5368%" y="1253" width="0.0314%" height="15" fill="rgb(245,194,10)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1263.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (32 samples, 0.03%)</title><rect x="56.5368%" y="1237" width="0.0314%" height="15" fill="rgb(241,149,38)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.03%)</title><rect x="56.5368%" y="1221" width="0.0314%" height="15" fill="rgb(219,215,7)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1231.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (32 samples, 0.03%)</title><rect x="56.5368%" y="1205" width="0.0314%" height="15" fill="rgb(208,120,31)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (32 samples, 0.03%)</title><rect x="56.5368%" y="1189" width="0.0314%" height="15" fill="rgb(244,30,8)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1199.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (32 samples, 0.03%)</title><rect x="56.5368%" y="1173" width="0.0314%" height="15" fill="rgb(238,35,44)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1183.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (32 samples, 0.03%)</title><rect x="56.5368%" y="1157" width="0.0314%" height="15" fill="rgb(243,218,37)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1167.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (32 samples, 0.03%)</title><rect x="56.5368%" y="1141" width="0.0314%" height="15" fill="rgb(218,169,10)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (32 samples, 0.03%)</title><rect x="56.5368%" y="1125" width="0.0314%" height="15" fill="rgb(221,144,10)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1135.50"></text></g><g><title>core::ops::function::Fn::call (32 samples, 0.03%)</title><rect x="56.5368%" y="1109" width="0.0314%" height="15" fill="rgb(226,41,38)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1119.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (32 samples, 0.03%)</title><rect x="56.5368%" y="1093" width="0.0314%" height="15" fill="rgb(228,3,1)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1103.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (32 samples, 0.03%)</title><rect x="56.5368%" y="1077" width="0.0314%" height="15" fill="rgb(209,129,12)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1087.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (32 samples, 0.03%)</title><rect x="56.5368%" y="1061" width="0.0314%" height="15" fill="rgb(213,136,33)" fg:x="57572" fg:w="32"/><text x="56.7868%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.01%)</title><rect x="56.5535%" y="1045" width="0.0147%" height="15" fill="rgb(209,181,29)" fg:x="57589" fg:w="15"/><text x="56.8035%" y="1055.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (15 samples, 0.01%)</title><rect x="56.5535%" y="1029" width="0.0147%" height="15" fill="rgb(234,173,18)" fg:x="57589" fg:w="15"/><text x="56.8035%" y="1039.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (15 samples, 0.01%)</title><rect x="56.5535%" y="1013" width="0.0147%" height="15" fill="rgb(227,73,47)" fg:x="57589" fg:w="15"/><text x="56.8035%" y="1023.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (15 samples, 0.01%)</title><rect x="56.5535%" y="997" width="0.0147%" height="15" fill="rgb(234,9,34)" fg:x="57589" fg:w="15"/><text x="56.8035%" y="1007.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (15 samples, 0.01%)</title><rect x="56.5535%" y="981" width="0.0147%" height="15" fill="rgb(235,172,15)" fg:x="57589" fg:w="15"/><text x="56.8035%" y="991.50"></text></g><g><title>bevy_glsl_to_spirv::compile (15 samples, 0.01%)</title><rect x="56.5535%" y="965" width="0.0147%" height="15" fill="rgb(245,61,2)" fg:x="57589" fg:w="15"/><text x="56.8035%" y="975.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (15 samples, 0.01%)</title><rect x="56.5535%" y="949" width="0.0147%" height="15" fill="rgb(238,39,47)" fg:x="57589" fg:w="15"/><text x="56.8035%" y="959.50"></text></g><g><title>glslang_shader_preprocess (15 samples, 0.01%)</title><rect x="56.5535%" y="933" width="0.0147%" height="15" fill="rgb(234,37,24)" fg:x="57589" fg:w="15"/><text x="56.8035%" y="943.50"></text></g><g><title>glslang::TShader::preprocess (15 samples, 0.01%)</title><rect x="56.5535%" y="917" width="0.0147%" height="15" fill="rgb(248,223,24)" fg:x="57589" fg:w="15"/><text x="56.8035%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (101 samples, 0.10%)</title><rect x="56.4700%" y="1317" width="0.0992%" height="15" fill="rgb(223,12,15)" fg:x="57504" fg:w="101"/><text x="56.7200%" y="1327.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (92 samples, 0.09%)</title><rect x="56.4789%" y="1301" width="0.0903%" height="15" fill="rgb(249,6,3)" fg:x="57513" fg:w="92"/><text x="56.7289%" y="1311.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (85 samples, 0.08%)</title><rect x="56.4857%" y="1285" width="0.0835%" height="15" fill="rgb(237,105,33)" fg:x="57520" fg:w="85"/><text x="56.7357%" y="1295.50"></text></g><g><title>unlink_chunk.constprop.0 (21 samples, 0.02%)</title><rect x="56.5898%" y="1317" width="0.0206%" height="15" fill="rgb(252,208,35)" fg:x="57626" fg:w="21"/><text x="56.8398%" y="1327.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (41 samples, 0.04%)</title><rect x="56.6105%" y="1317" width="0.0403%" height="15" fill="rgb(215,181,35)" fg:x="57647" fg:w="41"/><text x="56.8605%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.01%)</title><rect x="56.9728%" y="1061" width="0.0147%" height="15" fill="rgb(246,212,3)" fg:x="58016" fg:w="15"/><text x="57.2228%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (91 samples, 0.09%)</title><rect x="56.9002%" y="1141" width="0.0894%" height="15" fill="rgb(247,156,24)" fg:x="57942" fg:w="91"/><text x="57.1502%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (70 samples, 0.07%)</title><rect x="56.9208%" y="1125" width="0.0687%" height="15" fill="rgb(248,9,31)" fg:x="57963" fg:w="70"/><text x="57.1708%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (53 samples, 0.05%)</title><rect x="56.9375%" y="1109" width="0.0520%" height="15" fill="rgb(234,26,45)" fg:x="57980" fg:w="53"/><text x="57.1875%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (36 samples, 0.04%)</title><rect x="56.9542%" y="1093" width="0.0354%" height="15" fill="rgb(249,11,32)" fg:x="57997" fg:w="36"/><text x="57.2042%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.02%)</title><rect x="56.9709%" y="1077" width="0.0187%" height="15" fill="rgb(249,162,33)" fg:x="58014" fg:w="19"/><text x="57.2209%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (253 samples, 0.25%)</title><rect x="56.7450%" y="1205" width="0.2485%" height="15" fill="rgb(232,4,32)" fg:x="57784" fg:w="253"/><text x="56.9950%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (207 samples, 0.20%)</title><rect x="56.7902%" y="1189" width="0.2033%" height="15" fill="rgb(212,5,45)" fg:x="57830" fg:w="207"/><text x="57.0402%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (161 samples, 0.16%)</title><rect x="56.8353%" y="1173" width="0.1581%" height="15" fill="rgb(227,95,13)" fg:x="57876" fg:w="161"/><text x="57.0853%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (111 samples, 0.11%)</title><rect x="56.8844%" y="1157" width="0.1090%" height="15" fill="rgb(223,205,10)" fg:x="57926" fg:w="111"/><text x="57.1344%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (312 samples, 0.31%)</title><rect x="56.6969%" y="1221" width="0.3064%" height="15" fill="rgb(222,178,8)" fg:x="57735" fg:w="312"/><text x="56.9469%" y="1231.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_begin_render_pass (328 samples, 0.32%)</title><rect x="56.6831%" y="1269" width="0.3221%" height="15" fill="rgb(216,13,22)" fg:x="57721" fg:w="328"/><text x="56.9331%" y="1279.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_begin_render_pass (328 samples, 0.32%)</title><rect x="56.6831%" y="1253" width="0.3221%" height="15" fill="rgb(240,167,12)" fg:x="57721" fg:w="328"/><text x="56.9331%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (328 samples, 0.32%)</title><rect x="56.6831%" y="1237" width="0.3221%" height="15" fill="rgb(235,68,35)" fg:x="57721" fg:w="328"/><text x="56.9331%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin_render_pass (340 samples, 0.33%)</title><rect x="56.6743%" y="1285" width="0.3339%" height="15" fill="rgb(253,40,27)" fg:x="57712" fg:w="340"/><text x="56.9243%" y="1295.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.02%)</title><rect x="57.0219%" y="1109" width="0.0157%" height="15" fill="rgb(214,19,28)" fg:x="58066" fg:w="16"/><text x="57.2719%" y="1119.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_viewports::{{closure}} (23 samples, 0.02%)</title><rect x="57.0170%" y="1173" width="0.0226%" height="15" fill="rgb(210,167,45)" fg:x="58061" fg:w="23"/><text x="57.2670%" y="1183.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_set_viewport (23 samples, 0.02%)</title><rect x="57.0170%" y="1157" width="0.0226%" height="15" fill="rgb(232,97,40)" fg:x="58061" fg:w="23"/><text x="57.2670%" y="1167.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_set_viewport (23 samples, 0.02%)</title><rect x="57.0170%" y="1141" width="0.0226%" height="15" fill="rgb(250,35,23)" fg:x="58061" fg:w="23"/><text x="57.2670%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (23 samples, 0.02%)</title><rect x="57.0170%" y="1125" width="0.0226%" height="15" fill="rgb(248,47,53)" fg:x="58061" fg:w="23"/><text x="57.2670%" y="1135.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_viewports (27 samples, 0.03%)</title><rect x="57.0151%" y="1285" width="0.0265%" height="15" fill="rgb(226,58,50)" fg:x="58059" fg:w="27"/><text x="57.2651%" y="1295.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (27 samples, 0.03%)</title><rect x="57.0151%" y="1269" width="0.0265%" height="15" fill="rgb(217,105,26)" fg:x="58059" fg:w="27"/><text x="57.2651%" y="1279.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (27 samples, 0.03%)</title><rect x="57.0151%" y="1253" width="0.0265%" height="15" fill="rgb(208,64,1)" fg:x="58059" fg:w="27"/><text x="57.2651%" y="1263.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (27 samples, 0.03%)</title><rect x="57.0151%" y="1237" width="0.0265%" height="15" fill="rgb(214,80,1)" fg:x="58059" fg:w="27"/><text x="57.2651%" y="1247.50"></text></g><g><title>inplace_it::fixed_array::indirect (25 samples, 0.02%)</title><rect x="57.0170%" y="1221" width="0.0246%" height="15" fill="rgb(206,175,26)" fg:x="58061" fg:w="25"/><text x="57.2670%" y="1231.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (25 samples, 0.02%)</title><rect x="57.0170%" y="1205" width="0.0246%" height="15" fill="rgb(235,156,37)" fg:x="58061" fg:w="25"/><text x="57.2670%" y="1215.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (25 samples, 0.02%)</title><rect x="57.0170%" y="1189" width="0.0246%" height="15" fill="rgb(213,100,9)" fg:x="58061" fg:w="25"/><text x="57.2670%" y="1199.50"></text></g><g><title>hashbrown::map::make_insert_hash (13 samples, 0.01%)</title><rect x="57.0514%" y="1253" width="0.0128%" height="15" fill="rgb(241,15,13)" fg:x="58096" fg:w="13"/><text x="57.3014%" y="1263.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (37 samples, 0.04%)</title><rect x="57.0475%" y="1285" width="0.0363%" height="15" fill="rgb(205,97,43)" fg:x="58092" fg:w="37"/><text x="57.2975%" y="1295.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (37 samples, 0.04%)</title><rect x="57.0475%" y="1269" width="0.0363%" height="15" fill="rgb(216,106,32)" fg:x="58092" fg:w="37"/><text x="57.2975%" y="1279.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.02%)</title><rect x="57.0642%" y="1253" width="0.0196%" height="15" fill="rgb(226,200,8)" fg:x="58109" fg:w="20"/><text x="57.3142%" y="1263.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (442 samples, 0.43%)</title><rect x="56.6635%" y="1317" width="0.4341%" height="15" fill="rgb(244,54,29)" fg:x="57701" fg:w="442"/><text x="56.9135%" y="1327.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start (431 samples, 0.42%)</title><rect x="56.6743%" y="1301" width="0.4233%" height="15" fill="rgb(252,169,12)" fg:x="57712" fg:w="431"/><text x="56.9243%" y="1311.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (19 samples, 0.02%)</title><rect x="57.0995%" y="1317" width="0.0187%" height="15" fill="rgb(231,199,11)" fg:x="58145" fg:w="19"/><text x="57.3495%" y="1327.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (11 samples, 0.01%)</title><rect x="57.1221%" y="1317" width="0.0108%" height="15" fill="rgb(233,191,18)" fg:x="58168" fg:w="11"/><text x="57.3721%" y="1327.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (11 samples, 0.01%)</title><rect x="57.1457%" y="1317" width="0.0108%" height="15" fill="rgb(215,83,47)" fg:x="58192" fg:w="11"/><text x="57.3957%" y="1327.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (11 samples, 0.01%)</title><rect x="57.1604%" y="1093" width="0.0108%" height="15" fill="rgb(251,67,19)" fg:x="58207" fg:w="11"/><text x="57.4104%" y="1103.50"></text></g><g><title>&lt;ash::entry::EntryCustom&lt;L&gt; as ash::entry::EntryV1_0&gt;::create_instance (13 samples, 0.01%)</title><rect x="57.1594%" y="1269" width="0.0128%" height="15" fill="rgb(240,7,20)" fg:x="58206" fg:w="13"/><text x="57.4094%" y="1279.50"></text></g><g><title>ash::vk::features::EntryFnV1_0::create_instance (13 samples, 0.01%)</title><rect x="57.1594%" y="1253" width="0.0128%" height="15" fill="rgb(210,150,26)" fg:x="58206" fg:w="13"/><text x="57.4094%" y="1263.50"></text></g><g><title>vkCreateInstance (13 samples, 0.01%)</title><rect x="57.1594%" y="1237" width="0.0128%" height="15" fill="rgb(228,75,42)" fg:x="58206" fg:w="13"/><text x="57.4094%" y="1247.50"></text></g><g><title>[libvulkan.so.1.2.194] (13 samples, 0.01%)</title><rect x="57.1594%" y="1221" width="0.0128%" height="15" fill="rgb(237,134,48)" fg:x="58206" fg:w="13"/><text x="57.4094%" y="1231.50"></text></g><g><title>[libvulkan.so.1.2.194] (13 samples, 0.01%)</title><rect x="57.1594%" y="1205" width="0.0128%" height="15" fill="rgb(205,80,50)" fg:x="58206" fg:w="13"/><text x="57.4094%" y="1215.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (13 samples, 0.01%)</title><rect x="57.1594%" y="1189" width="0.0128%" height="15" fill="rgb(217,74,48)" fg:x="58206" fg:w="13"/><text x="57.4094%" y="1199.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (13 samples, 0.01%)</title><rect x="57.1594%" y="1173" width="0.0128%" height="15" fill="rgb(205,82,50)" fg:x="58206" fg:w="13"/><text x="57.4094%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="57.1604%" y="1157" width="0.0118%" height="15" fill="rgb(228,1,33)" fg:x="58207" fg:w="12"/><text x="57.4104%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="57.1604%" y="1141" width="0.0118%" height="15" fill="rgb(214,50,23)" fg:x="58207" fg:w="12"/><text x="57.4104%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="57.1604%" y="1125" width="0.0118%" height="15" fill="rgb(210,62,9)" fg:x="58207" fg:w="12"/><text x="57.4104%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="57.1604%" y="1109" width="0.0118%" height="15" fill="rgb(210,104,37)" fg:x="58207" fg:w="12"/><text x="57.4104%" y="1119.50"></text></g><g><title>ash::entry::EntryV1_0::enumerate_instance_extension_properties (33 samples, 0.03%)</title><rect x="57.1722%" y="1269" width="0.0324%" height="15" fill="rgb(232,104,43)" fg:x="58219" fg:w="33"/><text x="57.4222%" y="1279.50"></text></g><g><title>ash::vk::features::EntryFnV1_0::enumerate_instance_extension_properties (33 samples, 0.03%)</title><rect x="57.1722%" y="1253" width="0.0324%" height="15" fill="rgb(244,52,6)" fg:x="58219" fg:w="33"/><text x="57.4222%" y="1263.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (33 samples, 0.03%)</title><rect x="57.1722%" y="1237" width="0.0324%" height="15" fill="rgb(211,174,52)" fg:x="58219" fg:w="33"/><text x="57.4222%" y="1247.50"></text></g><g><title>[libvulkan.so.1.2.194] (33 samples, 0.03%)</title><rect x="57.1722%" y="1221" width="0.0324%" height="15" fill="rgb(229,48,4)" fg:x="58219" fg:w="33"/><text x="57.4222%" y="1231.50"></text></g><g><title>[libvulkan.so.1.2.194] (33 samples, 0.03%)</title><rect x="57.1722%" y="1205" width="0.0324%" height="15" fill="rgb(205,155,16)" fg:x="58219" fg:w="33"/><text x="57.4222%" y="1215.50"></text></g><g><title>vk_icdNegotiateLoaderICDInterfaceVersion (17 samples, 0.02%)</title><rect x="57.1879%" y="1189" width="0.0167%" height="15" fill="rgb(211,141,53)" fg:x="58235" fg:w="17"/><text x="57.4379%" y="1199.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (17 samples, 0.02%)</title><rect x="57.1879%" y="1173" width="0.0167%" height="15" fill="rgb(240,148,11)" fg:x="58235" fg:w="17"/><text x="57.4379%" y="1183.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (17 samples, 0.02%)</title><rect x="57.1879%" y="1157" width="0.0167%" height="15" fill="rgb(214,45,23)" fg:x="58235" fg:w="17"/><text x="57.4379%" y="1167.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (17 samples, 0.02%)</title><rect x="57.1879%" y="1141" width="0.0167%" height="15" fill="rgb(248,74,26)" fg:x="58235" fg:w="17"/><text x="57.4379%" y="1151.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (47 samples, 0.05%)</title><rect x="57.1594%" y="1317" width="0.0462%" height="15" fill="rgb(218,121,16)" fg:x="58206" fg:w="47"/><text x="57.4094%" y="1327.50"></text></g><g><title>wgpu_core::instance::Instance::new (47 samples, 0.05%)</title><rect x="57.1594%" y="1301" width="0.0462%" height="15" fill="rgb(218,10,47)" fg:x="58206" fg:w="47"/><text x="57.4094%" y="1311.50"></text></g><g><title>&lt;gfx_backend_vulkan::Instance as gfx_hal::Instance&lt;gfx_backend_vulkan::Backend&gt;&gt;::create (47 samples, 0.05%)</title><rect x="57.1594%" y="1285" width="0.0462%" height="15" fill="rgb(227,99,14)" fg:x="58206" fg:w="47"/><text x="57.4094%" y="1295.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (28 samples, 0.03%)</title><rect x="57.2095%" y="1317" width="0.0275%" height="15" fill="rgb(229,83,46)" fg:x="58257" fg:w="28"/><text x="57.4595%" y="1327.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (20 samples, 0.02%)</title><rect x="57.2370%" y="1317" width="0.0196%" height="15" fill="rgb(228,25,1)" fg:x="58285" fg:w="20"/><text x="57.4870%" y="1327.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (21 samples, 0.02%)</title><rect x="57.2674%" y="1317" width="0.0206%" height="15" fill="rgb(252,190,15)" fg:x="58316" fg:w="21"/><text x="57.5174%" y="1327.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (11 samples, 0.01%)</title><rect x="57.2773%" y="1301" width="0.0108%" height="15" fill="rgb(213,103,51)" fg:x="58326" fg:w="11"/><text x="57.5273%" y="1311.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (11 samples, 0.01%)</title><rect x="57.2773%" y="1285" width="0.0108%" height="15" fill="rgb(220,38,44)" fg:x="58326" fg:w="11"/><text x="57.5273%" y="1295.50"></text></g><g><title>wgpu_render_pass_set_bind_group (19 samples, 0.02%)</title><rect x="57.3322%" y="1317" width="0.0187%" height="15" fill="rgb(210,45,26)" fg:x="58382" fg:w="19"/><text x="57.5822%" y="1327.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (11 samples, 0.01%)</title><rect x="57.3539%" y="1077" width="0.0108%" height="15" fill="rgb(205,95,48)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="1087.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (11 samples, 0.01%)</title><rect x="57.3539%" y="1061" width="0.0108%" height="15" fill="rgb(225,179,37)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (11 samples, 0.01%)</title><rect x="57.3539%" y="1045" width="0.0108%" height="15" fill="rgb(230,209,3)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="1055.50"></text></g><g><title>async_executor::Executor::spawn (11 samples, 0.01%)</title><rect x="57.3539%" y="1029" width="0.0108%" height="15" fill="rgb(248,12,46)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="1039.50"></text></g><g><title>async_task::runnable::Runnable::schedule (11 samples, 0.01%)</title><rect x="57.3539%" y="1013" width="0.0108%" height="15" fill="rgb(234,18,0)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (11 samples, 0.01%)</title><rect x="57.3539%" y="997" width="0.0108%" height="15" fill="rgb(238,197,14)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="1007.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (11 samples, 0.01%)</title><rect x="57.3539%" y="981" width="0.0108%" height="15" fill="rgb(251,162,48)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="991.50"></text></g><g><title>async_executor::State::notify (11 samples, 0.01%)</title><rect x="57.3539%" y="965" width="0.0108%" height="15" fill="rgb(237,73,42)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="975.50"></text></g><g><title>core::task::wake::Waker::wake (11 samples, 0.01%)</title><rect x="57.3539%" y="949" width="0.0108%" height="15" fill="rgb(211,108,8)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="959.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (11 samples, 0.01%)</title><rect x="57.3539%" y="933" width="0.0108%" height="15" fill="rgb(213,45,22)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="943.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (11 samples, 0.01%)</title><rect x="57.3539%" y="917" width="0.0108%" height="15" fill="rgb(252,154,5)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="927.50"></text></g><g><title>parking::Unparker::unpark (11 samples, 0.01%)</title><rect x="57.3539%" y="901" width="0.0108%" height="15" fill="rgb(221,79,52)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="911.50"></text></g><g><title>parking::Inner::unpark (11 samples, 0.01%)</title><rect x="57.3539%" y="885" width="0.0108%" height="15" fill="rgb(229,220,36)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="895.50"></text></g><g><title>std::sync::condvar::Condvar::notify_one (11 samples, 0.01%)</title><rect x="57.3539%" y="869" width="0.0108%" height="15" fill="rgb(211,17,16)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="879.50"></text></g><g><title>std::sys_common::condvar::Condvar::notify_one (11 samples, 0.01%)</title><rect x="57.3539%" y="853" width="0.0108%" height="15" fill="rgb(222,55,31)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="863.50"></text></g><g><title>std::sys::unix::condvar::Condvar::notify_one (11 samples, 0.01%)</title><rect x="57.3539%" y="837" width="0.0108%" height="15" fill="rgb(221,221,31)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="847.50"></text></g><g><title>__pthread_cond_signal (11 samples, 0.01%)</title><rect x="57.3539%" y="821" width="0.0108%" height="15" fill="rgb(227,168,26)" fg:x="58404" fg:w="11"/><text x="57.6039%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (18 samples, 0.02%)</title><rect x="57.4275%" y="821" width="0.0177%" height="15" fill="rgb(224,139,9)" fg:x="58479" fg:w="18"/><text x="57.6775%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (18 samples, 0.02%)</title><rect x="57.4275%" y="805" width="0.0177%" height="15" fill="rgb(254,172,0)" fg:x="58479" fg:w="18"/><text x="57.6775%" y="815.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (70 samples, 0.07%)</title><rect x="57.3794%" y="869" width="0.0687%" height="15" fill="rgb(235,203,1)" fg:x="58430" fg:w="70"/><text x="57.6294%" y="879.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (28 samples, 0.03%)</title><rect x="57.4206%" y="853" width="0.0275%" height="15" fill="rgb(216,205,24)" fg:x="58472" fg:w="28"/><text x="57.6706%" y="863.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (28 samples, 0.03%)</title><rect x="57.4206%" y="837" width="0.0275%" height="15" fill="rgb(233,24,6)" fg:x="58472" fg:w="28"/><text x="57.6706%" y="847.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (90 samples, 0.09%)</title><rect x="57.3647%" y="949" width="0.0884%" height="15" fill="rgb(244,110,9)" fg:x="58415" fg:w="90"/><text x="57.6147%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (90 samples, 0.09%)</title><rect x="57.3647%" y="933" width="0.0884%" height="15" fill="rgb(239,222,42)" fg:x="58415" fg:w="90"/><text x="57.6147%" y="943.50"></text></g><g><title>core::ops::function::Fn::call (90 samples, 0.09%)</title><rect x="57.3647%" y="917" width="0.0884%" height="15" fill="rgb(218,145,13)" fg:x="58415" fg:w="90"/><text x="57.6147%" y="927.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (85 samples, 0.08%)</title><rect x="57.3696%" y="901" width="0.0835%" height="15" fill="rgb(207,69,11)" fg:x="58420" fg:w="85"/><text x="57.6196%" y="911.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (85 samples, 0.08%)</title><rect x="57.3696%" y="885" width="0.0835%" height="15" fill="rgb(220,223,22)" fg:x="58420" fg:w="85"/><text x="57.6196%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (12 samples, 0.01%)</title><rect x="57.6043%" y="885" width="0.0118%" height="15" fill="rgb(245,102,5)" fg:x="58659" fg:w="12"/><text x="57.8543%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="57.6043%" y="869" width="0.0118%" height="15" fill="rgb(211,148,2)" fg:x="58659" fg:w="12"/><text x="57.8543%" y="879.50"></text></g><g><title>&lt;(F0,F1,F2) as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (18 samples, 0.02%)</title><rect x="57.6180%" y="869" width="0.0177%" height="15" fill="rgb(241,13,44)" fg:x="58673" fg:w="18"/><text x="57.8680%" y="879.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (11 samples, 0.01%)</title><rect x="57.6249%" y="853" width="0.0108%" height="15" fill="rgb(219,137,21)" fg:x="58680" fg:w="11"/><text x="57.8749%" y="863.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (43 samples, 0.04%)</title><rect x="57.6406%" y="837" width="0.0422%" height="15" fill="rgb(242,206,5)" fg:x="58696" fg:w="43"/><text x="57.8906%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="57.6848%" y="789" width="0.0108%" height="15" fill="rgb(217,114,22)" fg:x="58741" fg:w="11"/><text x="57.9348%" y="799.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (11 samples, 0.01%)</title><rect x="57.6848%" y="773" width="0.0108%" height="15" fill="rgb(253,206,42)" fg:x="58741" fg:w="11"/><text x="57.9348%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.01%)</title><rect x="57.6848%" y="757" width="0.0108%" height="15" fill="rgb(236,102,18)" fg:x="58741" fg:w="11"/><text x="57.9348%" y="767.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (14 samples, 0.01%)</title><rect x="57.6848%" y="805" width="0.0137%" height="15" fill="rgb(208,59,49)" fg:x="58741" fg:w="14"/><text x="57.9348%" y="815.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (18 samples, 0.02%)</title><rect x="57.6828%" y="837" width="0.0177%" height="15" fill="rgb(215,194,28)" fg:x="58739" fg:w="18"/><text x="57.9328%" y="847.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (16 samples, 0.02%)</title><rect x="57.6848%" y="821" width="0.0157%" height="15" fill="rgb(243,207,11)" fg:x="58741" fg:w="16"/><text x="57.9348%" y="831.50"></text></g><g><title>&lt;(F0,F1,F2) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (68 samples, 0.07%)</title><rect x="57.6357%" y="869" width="0.0668%" height="15" fill="rgb(254,179,35)" fg:x="58691" fg:w="68"/><text x="57.8857%" y="879.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (64 samples, 0.06%)</title><rect x="57.6396%" y="853" width="0.0628%" height="15" fill="rgb(235,97,3)" fg:x="58695" fg:w="64"/><text x="57.8896%" y="863.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (92 samples, 0.09%)</title><rect x="57.6161%" y="885" width="0.0903%" height="15" fill="rgb(215,155,33)" fg:x="58671" fg:w="92"/><text x="57.8661%" y="895.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key::{{closure}} (33 samples, 0.03%)</title><rect x="57.7152%" y="853" width="0.0324%" height="15" fill="rgb(223,128,12)" fg:x="58772" fg:w="33"/><text x="57.9652%" y="863.50"></text></g><g><title>core::cmp::PartialOrd::lt (33 samples, 0.03%)</title><rect x="57.7152%" y="837" width="0.0324%" height="15" fill="rgb(208,157,18)" fg:x="58772" fg:w="33"/><text x="57.9652%" y="847.50"></text></g><g><title>&lt;bevy_core::float_ord::FloatOrd as core::cmp::PartialOrd&gt;::partial_cmp (33 samples, 0.03%)</title><rect x="57.7152%" y="821" width="0.0324%" height="15" fill="rgb(249,70,54)" fg:x="58772" fg:w="33"/><text x="57.9652%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::partial_cmp (33 samples, 0.03%)</title><rect x="57.7152%" y="805" width="0.0324%" height="15" fill="rgb(244,118,24)" fg:x="58772" fg:w="33"/><text x="57.9652%" y="815.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key::{{closure}} (42 samples, 0.04%)</title><rect x="57.7722%" y="837" width="0.0412%" height="15" fill="rgb(211,54,0)" fg:x="58830" fg:w="42"/><text x="58.0222%" y="847.50"></text></g><g><title>core::cmp::PartialOrd::lt (42 samples, 0.04%)</title><rect x="57.7722%" y="821" width="0.0412%" height="15" fill="rgb(245,137,45)" fg:x="58830" fg:w="42"/><text x="58.0222%" y="831.50"></text></g><g><title>&lt;bevy_core::float_ord::FloatOrd as core::cmp::PartialOrd&gt;::partial_cmp (24 samples, 0.02%)</title><rect x="57.7899%" y="805" width="0.0236%" height="15" fill="rgb(232,154,31)" fg:x="58848" fg:w="24"/><text x="58.0399%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::partial_cmp (24 samples, 0.02%)</title><rect x="57.7899%" y="789" width="0.0236%" height="15" fill="rgb(253,6,39)" fg:x="58848" fg:w="24"/><text x="58.0399%" y="799.50"></text></g><g><title>alloc::slice::merge (104 samples, 0.10%)</title><rect x="57.7476%" y="853" width="0.1021%" height="15" fill="rgb(234,183,24)" fg:x="58805" fg:w="104"/><text x="57.9976%" y="863.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (37 samples, 0.04%)</title><rect x="57.8134%" y="837" width="0.0363%" height="15" fill="rgb(252,84,40)" fg:x="58872" fg:w="37"/><text x="58.0634%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (160 samples, 0.16%)</title><rect x="57.7064%" y="885" width="0.1571%" height="15" fill="rgb(224,65,2)" fg:x="58763" fg:w="160"/><text x="57.9564%" y="895.50"></text></g><g><title>alloc::slice::merge_sort (160 samples, 0.16%)</title><rect x="57.7064%" y="869" width="0.1571%" height="15" fill="rgb(229,38,24)" fg:x="58763" fg:w="160"/><text x="57.9564%" y="879.50"></text></g><g><title>malloc_consolidate (24 samples, 0.02%)</title><rect x="57.9313%" y="661" width="0.0236%" height="15" fill="rgb(218,131,50)" fg:x="58992" fg:w="24"/><text x="58.1813%" y="671.50"></text></g><g><title>_int_malloc (63 samples, 0.06%)</title><rect x="57.8959%" y="677" width="0.0619%" height="15" fill="rgb(233,106,18)" fg:x="58956" fg:w="63"/><text x="58.1459%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (92 samples, 0.09%)</title><rect x="57.8684%" y="789" width="0.0903%" height="15" fill="rgb(220,216,11)" fg:x="58928" fg:w="92"/><text x="58.1184%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (92 samples, 0.09%)</title><rect x="57.8684%" y="773" width="0.0903%" height="15" fill="rgb(251,100,45)" fg:x="58928" fg:w="92"/><text x="58.1184%" y="783.50"></text></g><g><title>alloc::alloc::realloc (92 samples, 0.09%)</title><rect x="57.8684%" y="757" width="0.0903%" height="15" fill="rgb(235,143,32)" fg:x="58928" fg:w="92"/><text x="58.1184%" y="767.50"></text></g><g><title>__rdl_realloc (92 samples, 0.09%)</title><rect x="57.8684%" y="741" width="0.0903%" height="15" fill="rgb(248,124,34)" fg:x="58928" fg:w="92"/><text x="58.1184%" y="751.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (92 samples, 0.09%)</title><rect x="57.8684%" y="725" width="0.0903%" height="15" fill="rgb(225,221,4)" fg:x="58928" fg:w="92"/><text x="58.1184%" y="735.50"></text></g><g><title>__GI___libc_realloc (91 samples, 0.09%)</title><rect x="57.8694%" y="709" width="0.0894%" height="15" fill="rgb(242,27,43)" fg:x="58929" fg:w="91"/><text x="58.1194%" y="719.50"></text></g><g><title>_int_realloc (79 samples, 0.08%)</title><rect x="57.8812%" y="693" width="0.0776%" height="15" fill="rgb(227,54,8)" fg:x="58941" fg:w="79"/><text x="58.1312%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (97 samples, 0.10%)</title><rect x="57.8684%" y="805" width="0.0953%" height="15" fill="rgb(253,139,49)" fg:x="58928" fg:w="97"/><text x="58.1184%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (101 samples, 0.10%)</title><rect x="57.8665%" y="869" width="0.0992%" height="15" fill="rgb(231,26,43)" fg:x="58926" fg:w="101"/><text x="58.1165%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (101 samples, 0.10%)</title><rect x="57.8665%" y="853" width="0.0992%" height="15" fill="rgb(207,121,39)" fg:x="58926" fg:w="101"/><text x="58.1165%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (101 samples, 0.10%)</title><rect x="57.8665%" y="837" width="0.0992%" height="15" fill="rgb(223,101,35)" fg:x="58926" fg:w="101"/><text x="58.1165%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (101 samples, 0.10%)</title><rect x="57.8665%" y="821" width="0.0992%" height="15" fill="rgb(232,87,23)" fg:x="58926" fg:w="101"/><text x="58.1165%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (112 samples, 0.11%)</title><rect x="57.8635%" y="885" width="0.1100%" height="15" fill="rgb(225,180,29)" fg:x="58923" fg:w="112"/><text x="58.1135%" y="895.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (23 samples, 0.02%)</title><rect x="57.9951%" y="853" width="0.0226%" height="15" fill="rgb(225,25,17)" fg:x="59057" fg:w="23"/><text x="58.2451%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (23 samples, 0.02%)</title><rect x="57.9951%" y="837" width="0.0226%" height="15" fill="rgb(223,8,52)" fg:x="59057" fg:w="23"/><text x="58.2451%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (23 samples, 0.02%)</title><rect x="57.9951%" y="821" width="0.0226%" height="15" fill="rgb(246,42,21)" fg:x="59057" fg:w="23"/><text x="58.2451%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.02%)</title><rect x="58.0442%" y="789" width="0.0157%" height="15" fill="rgb(205,64,43)" fg:x="59107" fg:w="16"/><text x="58.2942%" y="799.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (16 samples, 0.02%)</title><rect x="58.0442%" y="773" width="0.0157%" height="15" fill="rgb(221,160,13)" fg:x="59107" fg:w="16"/><text x="58.2942%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (16 samples, 0.02%)</title><rect x="58.0442%" y="757" width="0.0157%" height="15" fill="rgb(239,58,35)" fg:x="59107" fg:w="16"/><text x="58.2942%" y="767.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (37 samples, 0.04%)</title><rect x="58.0442%" y="805" width="0.0363%" height="15" fill="rgb(251,26,40)" fg:x="59107" fg:w="37"/><text x="58.2942%" y="815.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (16 samples, 0.02%)</title><rect x="58.0648%" y="789" width="0.0157%" height="15" fill="rgb(247,0,4)" fg:x="59128" fg:w="16"/><text x="58.3148%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (16 samples, 0.02%)</title><rect x="58.0648%" y="773" width="0.0157%" height="15" fill="rgb(218,130,10)" fg:x="59128" fg:w="16"/><text x="58.3148%" y="783.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (65 samples, 0.06%)</title><rect x="58.0246%" y="853" width="0.0638%" height="15" fill="rgb(239,32,7)" fg:x="59087" fg:w="65"/><text x="58.2746%" y="863.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (55 samples, 0.05%)</title><rect x="58.0344%" y="837" width="0.0540%" height="15" fill="rgb(210,192,24)" fg:x="59097" fg:w="55"/><text x="58.2844%" y="847.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (47 samples, 0.05%)</title><rect x="58.0422%" y="821" width="0.0462%" height="15" fill="rgb(226,212,17)" fg:x="59105" fg:w="47"/><text x="58.2922%" y="831.50"></text></g><g><title>bevy_ecs::entity::Entities::get (33 samples, 0.03%)</title><rect x="58.0884%" y="853" width="0.0324%" height="15" fill="rgb(219,201,28)" fg:x="59152" fg:w="33"/><text x="58.3384%" y="863.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (162 samples, 0.16%)</title><rect x="57.9735%" y="885" width="0.1591%" height="15" fill="rgb(235,207,41)" fg:x="59035" fg:w="162"/><text x="58.2235%" y="895.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (155 samples, 0.15%)</title><rect x="57.9804%" y="869" width="0.1522%" height="15" fill="rgb(241,95,54)" fg:x="59042" fg:w="155"/><text x="58.2304%" y="879.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (12 samples, 0.01%)</title><rect x="58.1208%" y="853" width="0.0118%" height="15" fill="rgb(248,12,23)" fg:x="59185" fg:w="12"/><text x="58.3708%" y="863.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (706 samples, 0.69%)</title><rect x="57.4540%" y="901" width="0.6933%" height="15" fill="rgb(228,173,4)" fg:x="58506" fg:w="706"/><text x="57.7040%" y="911.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (11 samples, 0.01%)</title><rect x="58.1365%" y="885" width="0.0108%" height="15" fill="rgb(254,99,5)" fg:x="59201" fg:w="11"/><text x="58.3865%" y="895.50"></text></g><g><title>__GI___libc_free (15 samples, 0.01%)</title><rect x="58.2161%" y="853" width="0.0147%" height="15" fill="rgb(212,184,17)" fg:x="59282" fg:w="15"/><text x="58.4661%" y="863.50"></text></g><g><title>_int_free (12 samples, 0.01%)</title><rect x="58.2190%" y="837" width="0.0118%" height="15" fill="rgb(252,174,1)" fg:x="59285" fg:w="12"/><text x="58.4690%" y="847.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (14 samples, 0.01%)</title><rect x="58.2347%" y="805" width="0.0137%" height="15" fill="rgb(241,118,51)" fg:x="59301" fg:w="14"/><text x="58.4847%" y="815.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="58.2612%" y="773" width="0.0177%" height="15" fill="rgb(227,94,47)" fg:x="59328" fg:w="18"/><text x="58.5112%" y="783.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (29 samples, 0.03%)</title><rect x="58.2593%" y="789" width="0.0285%" height="15" fill="rgb(229,104,2)" fg:x="59326" fg:w="29"/><text x="58.5093%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (25 samples, 0.02%)</title><rect x="58.2878%" y="773" width="0.0246%" height="15" fill="rgb(219,28,31)" fg:x="59355" fg:w="25"/><text x="58.5378%" y="783.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (29 samples, 0.03%)</title><rect x="58.2878%" y="789" width="0.0285%" height="15" fill="rgb(233,109,36)" fg:x="59355" fg:w="29"/><text x="58.5378%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (40 samples, 0.04%)</title><rect x="58.3202%" y="789" width="0.0393%" height="15" fill="rgb(246,88,11)" fg:x="59388" fg:w="40"/><text x="58.5702%" y="799.50"></text></g><g><title>core::cmp::PartialOrd::le (40 samples, 0.04%)</title><rect x="58.3202%" y="773" width="0.0393%" height="15" fill="rgb(209,212,17)" fg:x="59388" fg:w="40"/><text x="58.5702%" y="783.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (35 samples, 0.03%)</title><rect x="58.3251%" y="757" width="0.0344%" height="15" fill="rgb(243,59,29)" fg:x="59393" fg:w="35"/><text x="58.5751%" y="767.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (26 samples, 0.03%)</title><rect x="58.3339%" y="741" width="0.0255%" height="15" fill="rgb(244,205,48)" fg:x="59402" fg:w="26"/><text x="58.5839%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (11 samples, 0.01%)</title><rect x="58.3486%" y="725" width="0.0108%" height="15" fill="rgb(227,30,6)" fg:x="59417" fg:w="11"/><text x="58.5986%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (133 samples, 0.13%)</title><rect x="58.2308%" y="853" width="0.1306%" height="15" fill="rgb(220,205,48)" fg:x="59297" fg:w="133"/><text x="58.4808%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (133 samples, 0.13%)</title><rect x="58.2308%" y="837" width="0.1306%" height="15" fill="rgb(250,94,14)" fg:x="59297" fg:w="133"/><text x="58.4808%" y="847.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (130 samples, 0.13%)</title><rect x="58.2337%" y="821" width="0.1277%" height="15" fill="rgb(216,119,42)" fg:x="59300" fg:w="130"/><text x="58.4837%" y="831.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (115 samples, 0.11%)</title><rect x="58.2485%" y="805" width="0.1129%" height="15" fill="rgb(232,155,0)" fg:x="59315" fg:w="115"/><text x="58.4985%" y="815.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (34 samples, 0.03%)</title><rect x="58.3673%" y="821" width="0.0334%" height="15" fill="rgb(212,24,32)" fg:x="59436" fg:w="34"/><text x="58.6173%" y="831.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (45 samples, 0.04%)</title><rect x="58.3624%" y="837" width="0.0442%" height="15" fill="rgb(216,69,20)" fg:x="59431" fg:w="45"/><text x="58.6124%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (14 samples, 0.01%)</title><rect x="58.4125%" y="741" width="0.0137%" height="15" fill="rgb(229,73,31)" fg:x="59482" fg:w="14"/><text x="58.6625%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (14 samples, 0.01%)</title><rect x="58.4125%" y="725" width="0.0137%" height="15" fill="rgb(224,219,20)" fg:x="59482" fg:w="14"/><text x="58.6625%" y="735.50"></text></g><g><title>alloc::alloc::realloc (14 samples, 0.01%)</title><rect x="58.4125%" y="709" width="0.0137%" height="15" fill="rgb(215,146,41)" fg:x="59482" fg:w="14"/><text x="58.6625%" y="719.50"></text></g><g><title>__rdl_realloc (14 samples, 0.01%)</title><rect x="58.4125%" y="693" width="0.0137%" height="15" fill="rgb(244,71,31)" fg:x="59482" fg:w="14"/><text x="58.6625%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (14 samples, 0.01%)</title><rect x="58.4125%" y="677" width="0.0137%" height="15" fill="rgb(224,24,11)" fg:x="59482" fg:w="14"/><text x="58.6625%" y="687.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.01%)</title><rect x="58.4125%" y="661" width="0.0137%" height="15" fill="rgb(229,76,15)" fg:x="59482" fg:w="14"/><text x="58.6625%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="58.4115%" y="821" width="0.0157%" height="15" fill="rgb(209,93,2)" fg:x="59481" fg:w="16"/><text x="58.6615%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="58.4115%" y="805" width="0.0157%" height="15" fill="rgb(216,200,50)" fg:x="59481" fg:w="16"/><text x="58.6615%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="58.4115%" y="789" width="0.0157%" height="15" fill="rgb(211,67,34)" fg:x="59481" fg:w="16"/><text x="58.6615%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="58.4115%" y="773" width="0.0157%" height="15" fill="rgb(225,87,47)" fg:x="59481" fg:w="16"/><text x="58.6615%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.02%)</title><rect x="58.4115%" y="757" width="0.0157%" height="15" fill="rgb(217,185,16)" fg:x="59481" fg:w="16"/><text x="58.6615%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (23 samples, 0.02%)</title><rect x="58.4066%" y="837" width="0.0226%" height="15" fill="rgb(205,0,0)" fg:x="59476" fg:w="23"/><text x="58.6566%" y="847.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (72 samples, 0.07%)</title><rect x="58.3614%" y="853" width="0.0707%" height="15" fill="rgb(207,116,45)" fg:x="59430" fg:w="72"/><text x="58.6114%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (81 samples, 0.08%)</title><rect x="58.4331%" y="853" width="0.0795%" height="15" fill="rgb(221,156,26)" fg:x="59503" fg:w="81"/><text x="58.6831%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.08%)</title><rect x="58.4331%" y="837" width="0.0795%" height="15" fill="rgb(213,140,4)" fg:x="59503" fg:w="81"/><text x="58.6831%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (81 samples, 0.08%)</title><rect x="58.4331%" y="821" width="0.0795%" height="15" fill="rgb(231,224,15)" fg:x="59503" fg:w="81"/><text x="58.6831%" y="831.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.08%)</title><rect x="58.4331%" y="805" width="0.0795%" height="15" fill="rgb(244,76,20)" fg:x="59503" fg:w="81"/><text x="58.6831%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (81 samples, 0.08%)</title><rect x="58.4331%" y="789" width="0.0795%" height="15" fill="rgb(238,117,7)" fg:x="59503" fg:w="81"/><text x="58.6831%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (81 samples, 0.08%)</title><rect x="58.4331%" y="773" width="0.0795%" height="15" fill="rgb(235,1,10)" fg:x="59503" fg:w="81"/><text x="58.6831%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (81 samples, 0.08%)</title><rect x="58.4331%" y="757" width="0.0795%" height="15" fill="rgb(216,165,6)" fg:x="59503" fg:w="81"/><text x="58.6831%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (81 samples, 0.08%)</title><rect x="58.4331%" y="741" width="0.0795%" height="15" fill="rgb(246,91,35)" fg:x="59503" fg:w="81"/><text x="58.6831%" y="751.50"></text></g><g><title>__rdl_dealloc (81 samples, 0.08%)</title><rect x="58.4331%" y="725" width="0.0795%" height="15" fill="rgb(228,96,24)" fg:x="59503" fg:w="81"/><text x="58.6831%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (81 samples, 0.08%)</title><rect x="58.4331%" y="709" width="0.0795%" height="15" fill="rgb(254,217,53)" fg:x="59503" fg:w="81"/><text x="58.6831%" y="719.50"></text></g><g><title>__GI___libc_free (81 samples, 0.08%)</title><rect x="58.4331%" y="693" width="0.0795%" height="15" fill="rgb(209,60,0)" fg:x="59503" fg:w="81"/><text x="58.6831%" y="703.50"></text></g><g><title>_int_free (79 samples, 0.08%)</title><rect x="58.4351%" y="677" width="0.0776%" height="15" fill="rgb(250,93,26)" fg:x="59505" fg:w="79"/><text x="58.6851%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (20 samples, 0.02%)</title><rect x="58.6973%" y="613" width="0.0196%" height="15" fill="rgb(211,9,40)" fg:x="59772" fg:w="20"/><text x="58.9473%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (148 samples, 0.15%)</title><rect x="58.6226%" y="725" width="0.1453%" height="15" fill="rgb(242,57,20)" fg:x="59696" fg:w="148"/><text x="58.8726%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (148 samples, 0.15%)</title><rect x="58.6226%" y="709" width="0.1453%" height="15" fill="rgb(248,85,48)" fg:x="59696" fg:w="148"/><text x="58.8726%" y="719.50"></text></g><g><title>alloc::alloc::realloc (148 samples, 0.15%)</title><rect x="58.6226%" y="693" width="0.1453%" height="15" fill="rgb(212,117,2)" fg:x="59696" fg:w="148"/><text x="58.8726%" y="703.50"></text></g><g><title>__rdl_realloc (148 samples, 0.15%)</title><rect x="58.6226%" y="677" width="0.1453%" height="15" fill="rgb(243,19,3)" fg:x="59696" fg:w="148"/><text x="58.8726%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (148 samples, 0.15%)</title><rect x="58.6226%" y="661" width="0.1453%" height="15" fill="rgb(232,217,24)" fg:x="59696" fg:w="148"/><text x="58.8726%" y="671.50"></text></g><g><title>__GI___libc_realloc (146 samples, 0.14%)</title><rect x="58.6246%" y="645" width="0.1434%" height="15" fill="rgb(224,175,40)" fg:x="59698" fg:w="146"/><text x="58.8746%" y="655.50"></text></g><g><title>_int_realloc (88 samples, 0.09%)</title><rect x="58.6815%" y="629" width="0.0864%" height="15" fill="rgb(212,162,32)" fg:x="59756" fg:w="88"/><text x="58.9315%" y="639.50"></text></g><g><title>_int_malloc (42 samples, 0.04%)</title><rect x="58.7267%" y="613" width="0.0412%" height="15" fill="rgb(215,9,4)" fg:x="59802" fg:w="42"/><text x="58.9767%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (167 samples, 0.16%)</title><rect x="58.6128%" y="741" width="0.1640%" height="15" fill="rgb(242,42,7)" fg:x="59686" fg:w="167"/><text x="58.8628%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (185 samples, 0.18%)</title><rect x="58.6020%" y="757" width="0.1817%" height="15" fill="rgb(242,184,45)" fg:x="59675" fg:w="185"/><text x="58.8520%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (189 samples, 0.19%)</title><rect x="58.5991%" y="805" width="0.1856%" height="15" fill="rgb(228,111,51)" fg:x="59672" fg:w="189"/><text x="58.8491%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (189 samples, 0.19%)</title><rect x="58.5991%" y="789" width="0.1856%" height="15" fill="rgb(236,147,17)" fg:x="59672" fg:w="189"/><text x="58.8491%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (186 samples, 0.18%)</title><rect x="58.6020%" y="773" width="0.1827%" height="15" fill="rgb(210,75,22)" fg:x="59675" fg:w="186"/><text x="58.8520%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (217 samples, 0.21%)</title><rect x="58.5843%" y="821" width="0.2131%" height="15" fill="rgb(217,159,45)" fg:x="59657" fg:w="217"/><text x="58.8343%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (42 samples, 0.04%)</title><rect x="58.7984%" y="821" width="0.0412%" height="15" fill="rgb(245,165,53)" fg:x="59875" fg:w="42"/><text x="59.0484%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="58.7984%" y="805" width="0.0412%" height="15" fill="rgb(251,190,50)" fg:x="59875" fg:w="42"/><text x="59.0484%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (42 samples, 0.04%)</title><rect x="58.7984%" y="789" width="0.0412%" height="15" fill="rgb(208,203,29)" fg:x="59875" fg:w="42"/><text x="59.0484%" y="799.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="58.7984%" y="773" width="0.0412%" height="15" fill="rgb(207,209,35)" fg:x="59875" fg:w="42"/><text x="59.0484%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (42 samples, 0.04%)</title><rect x="58.7984%" y="757" width="0.0412%" height="15" fill="rgb(230,144,49)" fg:x="59875" fg:w="42"/><text x="59.0484%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (42 samples, 0.04%)</title><rect x="58.7984%" y="741" width="0.0412%" height="15" fill="rgb(229,31,6)" fg:x="59875" fg:w="42"/><text x="59.0484%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (42 samples, 0.04%)</title><rect x="58.7984%" y="725" width="0.0412%" height="15" fill="rgb(251,129,24)" fg:x="59875" fg:w="42"/><text x="59.0484%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (42 samples, 0.04%)</title><rect x="58.7984%" y="709" width="0.0412%" height="15" fill="rgb(235,105,15)" fg:x="59875" fg:w="42"/><text x="59.0484%" y="719.50"></text></g><g><title>__rdl_dealloc (42 samples, 0.04%)</title><rect x="58.7984%" y="693" width="0.0412%" height="15" fill="rgb(216,52,43)" fg:x="59875" fg:w="42"/><text x="59.0484%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (42 samples, 0.04%)</title><rect x="58.7984%" y="677" width="0.0412%" height="15" fill="rgb(238,144,41)" fg:x="59875" fg:w="42"/><text x="59.0484%" y="687.50"></text></g><g><title>__GI___libc_free (42 samples, 0.04%)</title><rect x="58.7984%" y="661" width="0.0412%" height="15" fill="rgb(243,63,9)" fg:x="59875" fg:w="42"/><text x="59.0484%" y="671.50"></text></g><g><title>_int_free (34 samples, 0.03%)</title><rect x="58.8063%" y="645" width="0.0334%" height="15" fill="rgb(246,208,1)" fg:x="59883" fg:w="34"/><text x="59.0563%" y="655.50"></text></g><g><title>__GI___libc_malloc (14 samples, 0.01%)</title><rect x="58.8573%" y="709" width="0.0137%" height="15" fill="rgb(233,182,18)" fg:x="59935" fg:w="14"/><text x="59.1073%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="58.8554%" y="725" width="0.0167%" height="15" fill="rgb(242,224,8)" fg:x="59933" fg:w="17"/><text x="59.1054%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (22 samples, 0.02%)</title><rect x="58.8524%" y="741" width="0.0216%" height="15" fill="rgb(243,54,37)" fg:x="59930" fg:w="22"/><text x="59.1024%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (26 samples, 0.03%)</title><rect x="58.8514%" y="789" width="0.0255%" height="15" fill="rgb(233,192,12)" fg:x="59929" fg:w="26"/><text x="59.1014%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (26 samples, 0.03%)</title><rect x="58.8514%" y="773" width="0.0255%" height="15" fill="rgb(251,192,53)" fg:x="59929" fg:w="26"/><text x="59.1014%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (25 samples, 0.02%)</title><rect x="58.8524%" y="757" width="0.0246%" height="15" fill="rgb(246,141,26)" fg:x="59930" fg:w="25"/><text x="59.1024%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (49 samples, 0.05%)</title><rect x="58.8455%" y="805" width="0.0481%" height="15" fill="rgb(239,195,19)" fg:x="59923" fg:w="49"/><text x="59.0955%" y="815.50"></text></g><g><title>core::ptr::write (17 samples, 0.02%)</title><rect x="58.8770%" y="789" width="0.0167%" height="15" fill="rgb(241,16,39)" fg:x="59955" fg:w="17"/><text x="59.1270%" y="799.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (61 samples, 0.06%)</title><rect x="58.8396%" y="821" width="0.0599%" height="15" fill="rgb(223,13,53)" fg:x="59917" fg:w="61"/><text x="59.0896%" y="831.50"></text></g><g><title>__GI___libc_malloc (11 samples, 0.01%)</title><rect x="58.9241%" y="709" width="0.0108%" height="15" fill="rgb(214,227,0)" fg:x="60003" fg:w="11"/><text x="59.1741%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.02%)</title><rect x="58.9212%" y="725" width="0.0157%" height="15" fill="rgb(228,103,26)" fg:x="60000" fg:w="16"/><text x="59.1712%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (25 samples, 0.02%)</title><rect x="58.9153%" y="741" width="0.0246%" height="15" fill="rgb(254,177,53)" fg:x="59994" fg:w="25"/><text x="59.1653%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (27 samples, 0.03%)</title><rect x="58.9153%" y="789" width="0.0265%" height="15" fill="rgb(208,201,34)" fg:x="59994" fg:w="27"/><text x="59.1653%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.03%)</title><rect x="58.9153%" y="773" width="0.0265%" height="15" fill="rgb(212,39,5)" fg:x="59994" fg:w="27"/><text x="59.1653%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.03%)</title><rect x="58.9153%" y="757" width="0.0265%" height="15" fill="rgb(246,117,3)" fg:x="59994" fg:w="27"/><text x="59.1653%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (39 samples, 0.04%)</title><rect x="58.9054%" y="805" width="0.0383%" height="15" fill="rgb(244,118,39)" fg:x="59984" fg:w="39"/><text x="59.1554%" y="815.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (49 samples, 0.05%)</title><rect x="58.8995%" y="821" width="0.0481%" height="15" fill="rgb(241,64,10)" fg:x="59978" fg:w="49"/><text x="59.1495%" y="831.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::neighbors_with_weights (514 samples, 0.50%)</title><rect x="58.5146%" y="837" width="0.5048%" height="15" fill="rgb(229,39,44)" fg:x="59586" fg:w="514"/><text x="58.7646%" y="847.50"></text></g><g><title>engine::engine::world::TileWeightMap::get (73 samples, 0.07%)</title><rect x="58.9477%" y="821" width="0.0717%" height="15" fill="rgb(230,226,3)" fg:x="60027" fg:w="73"/><text x="59.1977%" y="831.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::get_path::{{closure}} (538 samples, 0.53%)</title><rect x="58.5126%" y="853" width="0.5283%" height="15" fill="rgb(222,13,42)" fg:x="59584" fg:w="538"/><text x="58.7626%" y="863.50"></text></g><g><title>engine::engine::world::Position::diagonal_distance (22 samples, 0.02%)</title><rect x="59.0194%" y="837" width="0.0216%" height="15" fill="rgb(247,180,54)" fg:x="60100" fg:w="22"/><text x="59.2694%" y="847.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u32 (11 samples, 0.01%)</title><rect x="59.0419%" y="789" width="0.0108%" height="15" fill="rgb(205,96,16)" fg:x="60123" fg:w="11"/><text x="59.2919%" y="799.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (11 samples, 0.01%)</title><rect x="59.0419%" y="773" width="0.0108%" height="15" fill="rgb(205,100,21)" fg:x="60123" fg:w="11"/><text x="59.2919%" y="783.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (16 samples, 0.02%)</title><rect x="59.0419%" y="837" width="0.0157%" height="15" fill="rgb(248,51,4)" fg:x="60123" fg:w="16"/><text x="59.2919%" y="847.50"></text></g><g><title>&lt;engine::engine::world::Position as core::hash::Hash&gt;::hash (16 samples, 0.02%)</title><rect x="59.0419%" y="821" width="0.0157%" height="15" fill="rgb(217,197,30)" fg:x="60123" fg:w="16"/><text x="59.2919%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (16 samples, 0.02%)</title><rect x="59.0419%" y="805" width="0.0157%" height="15" fill="rgb(240,179,40)" fg:x="60123" fg:w="16"/><text x="59.2919%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (21 samples, 0.02%)</title><rect x="59.1411%" y="789" width="0.0206%" height="15" fill="rgb(212,185,35)" fg:x="60224" fg:w="21"/><text x="59.3911%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="59.1411%" y="805" width="0.0216%" height="15" fill="rgb(251,222,31)" fg:x="60224" fg:w="22"/><text x="59.3911%" y="815.50"></text></g><g><title>hashbrown::raw::inner::h2 (16 samples, 0.02%)</title><rect x="59.1726%" y="757" width="0.0157%" height="15" fill="rgb(208,140,36)" fg:x="60256" fg:w="16"/><text x="59.4226%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (44 samples, 0.04%)</title><rect x="59.1627%" y="805" width="0.0432%" height="15" fill="rgb(220,148,1)" fg:x="60246" fg:w="44"/><text x="59.4127%" y="815.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (44 samples, 0.04%)</title><rect x="59.1627%" y="789" width="0.0432%" height="15" fill="rgb(254,4,28)" fg:x="60246" fg:w="44"/><text x="59.4127%" y="799.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (44 samples, 0.04%)</title><rect x="59.1627%" y="773" width="0.0432%" height="15" fill="rgb(222,185,44)" fg:x="60246" fg:w="44"/><text x="59.4127%" y="783.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (205 samples, 0.20%)</title><rect x="59.0410%" y="853" width="0.2013%" height="15" fill="rgb(215,74,39)" fg:x="60122" fg:w="205"/><text x="59.2910%" y="863.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (188 samples, 0.18%)</title><rect x="59.0577%" y="837" width="0.1846%" height="15" fill="rgb(247,86,4)" fg:x="60139" fg:w="188"/><text x="59.3077%" y="847.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (161 samples, 0.16%)</title><rect x="59.0842%" y="821" width="0.1581%" height="15" fill="rgb(231,105,32)" fg:x="60166" fg:w="161"/><text x="59.3342%" y="831.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (37 samples, 0.04%)</title><rect x="59.2059%" y="805" width="0.0363%" height="15" fill="rgb(222,65,35)" fg:x="60290" fg:w="37"/><text x="59.4559%" y="815.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (29 samples, 0.03%)</title><rect x="59.2138%" y="789" width="0.0285%" height="15" fill="rgb(218,145,35)" fg:x="60298" fg:w="29"/><text x="59.4638%" y="799.50"></text></g><g><title>&lt;engine::engine::world::Position as core::cmp::PartialEq&gt;::eq (24 samples, 0.02%)</title><rect x="59.2187%" y="773" width="0.0236%" height="15" fill="rgb(208,7,15)" fg:x="60303" fg:w="24"/><text x="59.4687%" y="783.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (12 samples, 0.01%)</title><rect x="59.2442%" y="853" width="0.0118%" height="15" fill="rgb(209,83,13)" fg:x="60329" fg:w="12"/><text x="59.4942%" y="863.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (12 samples, 0.01%)</title><rect x="59.2442%" y="837" width="0.0118%" height="15" fill="rgb(218,3,10)" fg:x="60329" fg:w="12"/><text x="59.4942%" y="847.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (12 samples, 0.01%)</title><rect x="59.2442%" y="821" width="0.0118%" height="15" fill="rgb(211,219,4)" fg:x="60329" fg:w="12"/><text x="59.4942%" y="831.50"></text></g><g><title>hashbrown::raw::inner::is_full (13 samples, 0.01%)</title><rect x="59.3081%" y="725" width="0.0128%" height="15" fill="rgb(228,194,12)" fg:x="60394" fg:w="13"/><text x="59.5581%" y="735.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (35 samples, 0.03%)</title><rect x="59.2973%" y="741" width="0.0344%" height="15" fill="rgb(210,175,7)" fg:x="60383" fg:w="35"/><text x="59.5473%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (42 samples, 0.04%)</title><rect x="59.2973%" y="757" width="0.0412%" height="15" fill="rgb(243,132,6)" fg:x="60383" fg:w="42"/><text x="59.5473%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (71 samples, 0.07%)</title><rect x="59.2845%" y="805" width="0.0697%" height="15" fill="rgb(207,72,18)" fg:x="60370" fg:w="71"/><text x="59.5345%" y="815.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (71 samples, 0.07%)</title><rect x="59.2845%" y="789" width="0.0697%" height="15" fill="rgb(236,1,18)" fg:x="60370" fg:w="71"/><text x="59.5345%" y="799.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (70 samples, 0.07%)</title><rect x="59.2855%" y="773" width="0.0687%" height="15" fill="rgb(227,0,18)" fg:x="60371" fg:w="70"/><text x="59.5355%" y="783.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (21 samples, 0.02%)</title><rect x="59.3542%" y="805" width="0.0206%" height="15" fill="rgb(247,37,5)" fg:x="60441" fg:w="21"/><text x="59.6042%" y="815.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (104 samples, 0.10%)</title><rect x="59.2766%" y="821" width="0.1021%" height="15" fill="rgb(237,179,24)" fg:x="60362" fg:w="104"/><text x="59.5266%" y="831.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (163 samples, 0.16%)</title><rect x="59.2570%" y="853" width="0.1601%" height="15" fill="rgb(226,53,20)" fg:x="60342" fg:w="163"/><text x="59.5070%" y="863.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (149 samples, 0.15%)</title><rect x="59.2708%" y="837" width="0.1463%" height="15" fill="rgb(247,75,7)" fg:x="60356" fg:w="149"/><text x="59.5208%" y="847.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (39 samples, 0.04%)</title><rect x="59.3788%" y="821" width="0.0383%" height="15" fill="rgb(233,96,12)" fg:x="60466" fg:w="39"/><text x="59.6288%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (39 samples, 0.04%)</title><rect x="59.3788%" y="805" width="0.0383%" height="15" fill="rgb(224,125,0)" fg:x="60466" fg:w="39"/><text x="59.6288%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (39 samples, 0.04%)</title><rect x="59.3788%" y="789" width="0.0383%" height="15" fill="rgb(224,92,25)" fg:x="60466" fg:w="39"/><text x="59.6288%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (39 samples, 0.04%)</title><rect x="59.3788%" y="773" width="0.0383%" height="15" fill="rgb(224,42,24)" fg:x="60466" fg:w="39"/><text x="59.6288%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (39 samples, 0.04%)</title><rect x="59.3788%" y="757" width="0.0383%" height="15" fill="rgb(234,132,49)" fg:x="60466" fg:w="39"/><text x="59.6288%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (37 samples, 0.04%)</title><rect x="59.3807%" y="741" width="0.0363%" height="15" fill="rgb(248,100,35)" fg:x="60468" fg:w="37"/><text x="59.6307%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (37 samples, 0.04%)</title><rect x="59.3807%" y="725" width="0.0363%" height="15" fill="rgb(239,94,40)" fg:x="60468" fg:w="37"/><text x="59.6307%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (37 samples, 0.04%)</title><rect x="59.3807%" y="709" width="0.0363%" height="15" fill="rgb(235,139,28)" fg:x="60468" fg:w="37"/><text x="59.6307%" y="719.50"></text></g><g><title>alloc::alloc::realloc (37 samples, 0.04%)</title><rect x="59.3807%" y="693" width="0.0363%" height="15" fill="rgb(217,144,7)" fg:x="60468" fg:w="37"/><text x="59.6307%" y="703.50"></text></g><g><title>__rdl_realloc (37 samples, 0.04%)</title><rect x="59.3807%" y="677" width="0.0363%" height="15" fill="rgb(227,55,4)" fg:x="60468" fg:w="37"/><text x="59.6307%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (37 samples, 0.04%)</title><rect x="59.3807%" y="661" width="0.0363%" height="15" fill="rgb(252,82,54)" fg:x="60468" fg:w="37"/><text x="59.6307%" y="671.50"></text></g><g><title>__GI___libc_realloc (37 samples, 0.04%)</title><rect x="59.3807%" y="645" width="0.0363%" height="15" fill="rgb(245,172,4)" fg:x="60468" fg:w="37"/><text x="59.6307%" y="655.50"></text></g><g><title>_int_realloc (32 samples, 0.03%)</title><rect x="59.3856%" y="629" width="0.0314%" height="15" fill="rgb(207,26,27)" fg:x="60473" fg:w="32"/><text x="59.6356%" y="639.50"></text></g><g><title>_int_malloc (18 samples, 0.02%)</title><rect x="59.3994%" y="613" width="0.0177%" height="15" fill="rgb(252,98,18)" fg:x="60487" fg:w="18"/><text x="59.6494%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="59.4200%" y="773" width="0.0118%" height="15" fill="rgb(244,8,26)" fg:x="60508" fg:w="12"/><text x="59.6700%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (2,020 samples, 1.98%)</title><rect x="57.4530%" y="949" width="1.9837%" height="15" fill="rgb(237,173,45)" fg:x="58505" fg:w="2020"/><text x="57.7030%" y="959.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,020 samples, 1.98%)</title><rect x="57.4530%" y="933" width="1.9837%" height="15" fill="rgb(208,213,49)" fg:x="58505" fg:w="2020"/><text x="57.7030%" y="943.50">c..</text></g><g><title>core::ops::function::Fn::call (2,020 samples, 1.98%)</title><rect x="57.4530%" y="917" width="1.9837%" height="15" fill="rgb(212,122,37)" fg:x="58505" fg:w="2020"/><text x="57.7030%" y="927.50">c..</text></g><g><title>engine::engine::actor::ai::pathfinding::plan_path (1,313 samples, 1.29%)</title><rect x="58.1473%" y="901" width="1.2894%" height="15" fill="rgb(213,80,17)" fg:x="59212" fg:w="1313"/><text x="58.3973%" y="911.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::get_path (1,313 samples, 1.29%)</title><rect x="58.1473%" y="885" width="1.2894%" height="15" fill="rgb(206,210,43)" fg:x="59212" fg:w="1313"/><text x="58.3973%" y="895.50"></text></g><g><title>pathfinding::directed::astar::astar (1,313 samples, 1.29%)</title><rect x="58.1473%" y="869" width="1.2894%" height="15" fill="rgb(229,214,3)" fg:x="59212" fg:w="1313"/><text x="58.3973%" y="879.50"></text></g><g><title>pathfinding::directed::reverse_path (17 samples, 0.02%)</title><rect x="59.4200%" y="853" width="0.0167%" height="15" fill="rgb(235,213,29)" fg:x="60508" fg:w="17"/><text x="59.6700%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (17 samples, 0.02%)</title><rect x="59.4200%" y="837" width="0.0167%" height="15" fill="rgb(248,135,26)" fg:x="60508" fg:w="17"/><text x="59.6700%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="59.4200%" y="821" width="0.0167%" height="15" fill="rgb(242,188,12)" fg:x="60508" fg:w="17"/><text x="59.6700%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="59.4200%" y="805" width="0.0167%" height="15" fill="rgb(245,38,12)" fg:x="60508" fg:w="17"/><text x="59.6700%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (17 samples, 0.02%)</title><rect x="59.4200%" y="789" width="0.0167%" height="15" fill="rgb(218,42,13)" fg:x="60508" fg:w="17"/><text x="59.6700%" y="799.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::neighbors_except_entities (14 samples, 0.01%)</title><rect x="59.4662%" y="869" width="0.0137%" height="15" fill="rgb(238,132,49)" fg:x="60555" fg:w="14"/><text x="59.7162%" y="879.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::best_nearest_valid_destination (19 samples, 0.02%)</title><rect x="59.4622%" y="885" width="0.0187%" height="15" fill="rgb(209,196,19)" fg:x="60551" fg:w="19"/><text x="59.7122%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (31 samples, 0.03%)</title><rect x="60.2626%" y="853" width="0.0304%" height="15" fill="rgb(244,131,22)" fg:x="61366" fg:w="31"/><text x="60.5126%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (13 samples, 0.01%)</title><rect x="60.2803%" y="837" width="0.0128%" height="15" fill="rgb(223,18,34)" fg:x="61384" fg:w="13"/><text x="60.5303%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.01%)</title><rect x="60.2803%" y="821" width="0.0128%" height="15" fill="rgb(252,124,54)" fg:x="61384" fg:w="13"/><text x="60.5303%" y="831.50"></text></g><g><title>core::ptr::read (86 samples, 0.08%)</title><rect x="60.3431%" y="837" width="0.0845%" height="15" fill="rgb(229,106,42)" fg:x="61448" fg:w="86"/><text x="60.5931%" y="847.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (158 samples, 0.16%)</title><rect x="60.2930%" y="853" width="0.1552%" height="15" fill="rgb(221,129,1)" fg:x="61397" fg:w="158"/><text x="60.5430%" y="863.50"></text></g><g><title>pathfinding::directed::astar::astar (21 samples, 0.02%)</title><rect x="60.4276%" y="837" width="0.0206%" height="15" fill="rgb(229,74,15)" fg:x="61534" fg:w="21"/><text x="60.6776%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (32 samples, 0.03%)</title><rect x="60.4560%" y="837" width="0.0314%" height="15" fill="rgb(210,206,50)" fg:x="61563" fg:w="32"/><text x="60.7060%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (11 samples, 0.01%)</title><rect x="60.4767%" y="821" width="0.0108%" height="15" fill="rgb(251,114,31)" fg:x="61584" fg:w="11"/><text x="60.7267%" y="831.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (132 samples, 0.13%)</title><rect x="60.5189%" y="805" width="0.1296%" height="15" fill="rgb(215,225,28)" fg:x="61627" fg:w="132"/><text x="60.7689%" y="815.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (52 samples, 0.05%)</title><rect x="60.7811%" y="789" width="0.0511%" height="15" fill="rgb(237,109,14)" fg:x="61894" fg:w="52"/><text x="61.0311%" y="799.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (267 samples, 0.26%)</title><rect x="60.8675%" y="773" width="0.2622%" height="15" fill="rgb(230,13,37)" fg:x="61982" fg:w="267"/><text x="61.1175%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (75 samples, 0.07%)</title><rect x="61.1297%" y="773" width="0.0737%" height="15" fill="rgb(231,40,28)" fg:x="62249" fg:w="75"/><text x="61.3797%" y="783.50"></text></g><g><title>core::cmp::PartialOrd::le (75 samples, 0.07%)</title><rect x="61.1297%" y="757" width="0.0737%" height="15" fill="rgb(231,202,18)" fg:x="62249" fg:w="75"/><text x="61.3797%" y="767.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (60 samples, 0.06%)</title><rect x="61.1444%" y="741" width="0.0589%" height="15" fill="rgb(225,33,18)" fg:x="62264" fg:w="60"/><text x="61.3944%" y="751.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (60 samples, 0.06%)</title><rect x="61.1444%" y="725" width="0.0589%" height="15" fill="rgb(223,64,47)" fg:x="62264" fg:w="60"/><text x="61.3944%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (35 samples, 0.03%)</title><rect x="61.1690%" y="709" width="0.0344%" height="15" fill="rgb(234,114,13)" fg:x="62289" fg:w="35"/><text x="61.4190%" y="719.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (400 samples, 0.39%)</title><rect x="60.8322%" y="789" width="0.3928%" height="15" fill="rgb(248,56,40)" fg:x="61946" fg:w="400"/><text x="61.0822%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (22 samples, 0.02%)</title><rect x="61.2034%" y="773" width="0.0216%" height="15" fill="rgb(221,194,21)" fg:x="62324" fg:w="22"/><text x="61.4534%" y="783.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="61.2034%" y="757" width="0.0216%" height="15" fill="rgb(242,108,46)" fg:x="62324" fg:w="22"/><text x="61.4534%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.02%)</title><rect x="61.2034%" y="741" width="0.0216%" height="15" fill="rgb(220,106,10)" fg:x="62324" fg:w="22"/><text x="61.4534%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (349 samples, 0.34%)</title><rect x="61.2250%" y="773" width="0.3427%" height="15" fill="rgb(211,88,4)" fg:x="62346" fg:w="349"/><text x="61.4750%" y="783.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (434 samples, 0.43%)</title><rect x="61.2250%" y="789" width="0.4262%" height="15" fill="rgb(214,95,34)" fg:x="62346" fg:w="434"/><text x="61.4750%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (85 samples, 0.08%)</title><rect x="61.5677%" y="773" width="0.0835%" height="15" fill="rgb(250,160,33)" fg:x="62695" fg:w="85"/><text x="61.8177%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (85 samples, 0.08%)</title><rect x="61.5677%" y="757" width="0.0835%" height="15" fill="rgb(225,29,10)" fg:x="62695" fg:w="85"/><text x="61.8177%" y="767.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (40 samples, 0.04%)</title><rect x="61.6512%" y="789" width="0.0393%" height="15" fill="rgb(224,28,30)" fg:x="62780" fg:w="40"/><text x="61.9012%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (563 samples, 0.55%)</title><rect x="61.6904%" y="789" width="0.5529%" height="15" fill="rgb(231,77,4)" fg:x="62820" fg:w="563"/><text x="61.9404%" y="799.50"></text></g><g><title>core::cmp::PartialOrd::le (563 samples, 0.55%)</title><rect x="61.6904%" y="773" width="0.5529%" height="15" fill="rgb(209,63,21)" fg:x="62820" fg:w="563"/><text x="61.9404%" y="783.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (477 samples, 0.47%)</title><rect x="61.7749%" y="757" width="0.4684%" height="15" fill="rgb(226,22,11)" fg:x="62906" fg:w="477"/><text x="62.0249%" y="767.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (351 samples, 0.34%)</title><rect x="61.8986%" y="741" width="0.3447%" height="15" fill="rgb(216,82,30)" fg:x="63032" fg:w="351"/><text x="62.1486%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (159 samples, 0.16%)</title><rect x="62.0872%" y="725" width="0.1561%" height="15" fill="rgb(246,227,38)" fg:x="63224" fg:w="159"/><text x="62.3372%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (39 samples, 0.04%)</title><rect x="62.2433%" y="741" width="0.0383%" height="15" fill="rgb(251,203,53)" fg:x="63383" fg:w="39"/><text x="62.4933%" y="751.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (1,665 samples, 1.64%)</title><rect x="60.6485%" y="805" width="1.6351%" height="15" fill="rgb(254,101,1)" fg:x="61759" fg:w="1665"/><text x="60.8985%" y="815.50"></text></g><g><title>core::mem::drop (41 samples, 0.04%)</title><rect x="62.2433%" y="789" width="0.0403%" height="15" fill="rgb(241,180,5)" fg:x="63383" fg:w="41"/><text x="62.4933%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (41 samples, 0.04%)</title><rect x="62.2433%" y="773" width="0.0403%" height="15" fill="rgb(218,168,4)" fg:x="63383" fg:w="41"/><text x="62.4933%" y="783.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (41 samples, 0.04%)</title><rect x="62.2433%" y="757" width="0.0403%" height="15" fill="rgb(224,223,32)" fg:x="63383" fg:w="41"/><text x="62.4933%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (15 samples, 0.01%)</title><rect x="62.2836%" y="773" width="0.0147%" height="15" fill="rgb(236,106,22)" fg:x="63424" fg:w="15"/><text x="62.5336%" y="783.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (1,880 samples, 1.85%)</title><rect x="60.4560%" y="853" width="1.8462%" height="15" fill="rgb(206,121,5)" fg:x="61563" fg:w="1880"/><text x="60.7060%" y="863.50">a..</text></g><g><title>core::option::Option&lt;T&gt;::map (1,848 samples, 1.81%)</title><rect x="60.4875%" y="837" width="1.8148%" height="15" fill="rgb(233,87,28)" fg:x="61595" fg:w="1848"/><text x="60.7375%" y="847.50">c..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (1,833 samples, 1.80%)</title><rect x="60.5022%" y="821" width="1.8000%" height="15" fill="rgb(236,137,17)" fg:x="61610" fg:w="1833"/><text x="60.7522%" y="831.50">a..</text></g><g><title>core::mem::swap (19 samples, 0.02%)</title><rect x="62.2836%" y="805" width="0.0187%" height="15" fill="rgb(209,183,38)" fg:x="63424" fg:w="19"/><text x="62.5336%" y="815.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (19 samples, 0.02%)</title><rect x="62.2836%" y="789" width="0.0187%" height="15" fill="rgb(206,162,44)" fg:x="63424" fg:w="19"/><text x="62.5336%" y="799.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (393 samples, 0.39%)</title><rect x="62.3376%" y="821" width="0.3859%" height="15" fill="rgb(237,70,39)" fg:x="63479" fg:w="393"/><text x="62.5876%" y="831.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (70 samples, 0.07%)</title><rect x="62.7235%" y="821" width="0.0687%" height="15" fill="rgb(212,176,5)" fg:x="63872" fg:w="70"/><text x="62.9735%" y="831.50"></text></g><g><title>core::cmp::PartialOrd::le (70 samples, 0.07%)</title><rect x="62.7235%" y="805" width="0.0687%" height="15" fill="rgb(232,95,16)" fg:x="63872" fg:w="70"/><text x="62.9735%" y="815.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (57 samples, 0.06%)</title><rect x="62.7363%" y="789" width="0.0560%" height="15" fill="rgb(219,115,35)" fg:x="63885" fg:w="57"/><text x="62.9863%" y="799.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (57 samples, 0.06%)</title><rect x="62.7363%" y="773" width="0.0560%" height="15" fill="rgb(251,67,27)" fg:x="63885" fg:w="57"/><text x="62.9863%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (19 samples, 0.02%)</title><rect x="62.7736%" y="757" width="0.0187%" height="15" fill="rgb(222,95,40)" fg:x="63923" fg:w="19"/><text x="63.0236%" y="767.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (501 samples, 0.49%)</title><rect x="62.3052%" y="837" width="0.4920%" height="15" fill="rgb(250,35,16)" fg:x="63446" fg:w="501"/><text x="62.5552%" y="847.50"></text></g><g><title>_int_malloc (17 samples, 0.02%)</title><rect x="62.8384%" y="629" width="0.0167%" height="15" fill="rgb(224,86,44)" fg:x="63989" fg:w="17"/><text x="63.0884%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.03%)</title><rect x="62.8237%" y="821" width="0.0334%" height="15" fill="rgb(237,53,53)" fg:x="63974" fg:w="34"/><text x="63.0737%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.03%)</title><rect x="62.8237%" y="805" width="0.0334%" height="15" fill="rgb(208,171,33)" fg:x="63974" fg:w="34"/><text x="63.0737%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.03%)</title><rect x="62.8237%" y="789" width="0.0334%" height="15" fill="rgb(222,64,27)" fg:x="63974" fg:w="34"/><text x="63.0737%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.03%)</title><rect x="62.8237%" y="773" width="0.0334%" height="15" fill="rgb(221,121,35)" fg:x="63974" fg:w="34"/><text x="63.0737%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (34 samples, 0.03%)</title><rect x="62.8237%" y="757" width="0.0334%" height="15" fill="rgb(228,137,42)" fg:x="63974" fg:w="34"/><text x="63.0737%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.03%)</title><rect x="62.8237%" y="741" width="0.0334%" height="15" fill="rgb(227,54,21)" fg:x="63974" fg:w="34"/><text x="63.0737%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.03%)</title><rect x="62.8237%" y="725" width="0.0334%" height="15" fill="rgb(240,168,33)" fg:x="63974" fg:w="34"/><text x="63.0737%" y="735.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.03%)</title><rect x="62.8237%" y="709" width="0.0334%" height="15" fill="rgb(243,159,6)" fg:x="63974" fg:w="34"/><text x="63.0737%" y="719.50"></text></g><g><title>__rdl_realloc (34 samples, 0.03%)</title><rect x="62.8237%" y="693" width="0.0334%" height="15" fill="rgb(205,211,41)" fg:x="63974" fg:w="34"/><text x="63.0737%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (34 samples, 0.03%)</title><rect x="62.8237%" y="677" width="0.0334%" height="15" fill="rgb(253,30,1)" fg:x="63974" fg:w="34"/><text x="63.0737%" y="687.50"></text></g><g><title>__GI___libc_realloc (34 samples, 0.03%)</title><rect x="62.8237%" y="661" width="0.0334%" height="15" fill="rgb(226,80,18)" fg:x="63974" fg:w="34"/><text x="63.0737%" y="671.50"></text></g><g><title>_int_realloc (30 samples, 0.03%)</title><rect x="62.8276%" y="645" width="0.0295%" height="15" fill="rgb(253,156,46)" fg:x="63978" fg:w="30"/><text x="63.0776%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (97 samples, 0.10%)</title><rect x="62.7972%" y="837" width="0.0953%" height="15" fill="rgb(248,87,27)" fg:x="63947" fg:w="97"/><text x="63.0472%" y="847.50"></text></g><g><title>core::ptr::write (36 samples, 0.04%)</title><rect x="62.8571%" y="821" width="0.0354%" height="15" fill="rgb(227,122,2)" fg:x="64008" fg:w="36"/><text x="63.1071%" y="831.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (669 samples, 0.66%)</title><rect x="62.3022%" y="853" width="0.6570%" height="15" fill="rgb(229,94,39)" fg:x="63443" fg:w="669"/><text x="62.5522%" y="863.50"></text></g><g><title>pathfinding::directed::astar::astar (68 samples, 0.07%)</title><rect x="62.8924%" y="837" width="0.0668%" height="15" fill="rgb(225,173,31)" fg:x="64044" fg:w="68"/><text x="63.1424%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (15 samples, 0.01%)</title><rect x="62.9592%" y="853" width="0.0147%" height="15" fill="rgb(239,176,30)" fg:x="64112" fg:w="15"/><text x="63.2092%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,130 samples, 1.11%)</title><rect x="62.9739%" y="757" width="1.1097%" height="15" fill="rgb(212,104,21)" fg:x="64127" fg:w="1130"/><text x="63.2239%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (1,130 samples, 1.11%)</title><rect x="62.9739%" y="741" width="1.1097%" height="15" fill="rgb(240,209,40)" fg:x="64127" fg:w="1130"/><text x="63.2239%" y="751.50"></text></g><g><title>__rdl_dealloc (1,130 samples, 1.11%)</title><rect x="62.9739%" y="725" width="1.1097%" height="15" fill="rgb(234,195,5)" fg:x="64127" fg:w="1130"/><text x="63.2239%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,130 samples, 1.11%)</title><rect x="62.9739%" y="709" width="1.1097%" height="15" fill="rgb(238,213,1)" fg:x="64127" fg:w="1130"/><text x="63.2239%" y="719.50"></text></g><g><title>__GI___libc_free (1,120 samples, 1.10%)</title><rect x="62.9838%" y="693" width="1.0999%" height="15" fill="rgb(235,182,54)" fg:x="64137" fg:w="1120"/><text x="63.2338%" y="703.50"></text></g><g><title>_int_free (1,054 samples, 1.04%)</title><rect x="63.0486%" y="677" width="1.0350%" height="15" fill="rgb(229,50,46)" fg:x="64203" fg:w="1054"/><text x="63.2986%" y="687.50"></text></g><g><title>unlink_chunk.constprop.0 (14 samples, 0.01%)</title><rect x="64.0699%" y="661" width="0.0137%" height="15" fill="rgb(219,145,13)" fg:x="65243" fg:w="14"/><text x="64.3199%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (1,143 samples, 1.12%)</title><rect x="62.9739%" y="853" width="1.1224%" height="15" fill="rgb(220,226,10)" fg:x="64127" fg:w="1143"/><text x="63.2239%" y="863.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,143 samples, 1.12%)</title><rect x="62.9739%" y="837" width="1.1224%" height="15" fill="rgb(248,47,30)" fg:x="64127" fg:w="1143"/><text x="63.2239%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (1,143 samples, 1.12%)</title><rect x="62.9739%" y="821" width="1.1224%" height="15" fill="rgb(231,209,44)" fg:x="64127" fg:w="1143"/><text x="63.2239%" y="831.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,143 samples, 1.12%)</title><rect x="62.9739%" y="805" width="1.1224%" height="15" fill="rgb(209,80,30)" fg:x="64127" fg:w="1143"/><text x="63.2239%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (1,143 samples, 1.12%)</title><rect x="62.9739%" y="789" width="1.1224%" height="15" fill="rgb(232,9,14)" fg:x="64127" fg:w="1143"/><text x="63.2239%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,143 samples, 1.12%)</title><rect x="62.9739%" y="773" width="1.1224%" height="15" fill="rgb(243,91,43)" fg:x="64127" fg:w="1143"/><text x="63.2239%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (13 samples, 0.01%)</title><rect x="64.0836%" y="757" width="0.0128%" height="15" fill="rgb(231,90,52)" fg:x="65257" fg:w="13"/><text x="64.3336%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (35 samples, 0.03%)</title><rect x="65.0607%" y="821" width="0.0344%" height="15" fill="rgb(253,192,44)" fg:x="66252" fg:w="35"/><text x="65.3107%" y="831.50"></text></g><g><title>core::ptr::read (112 samples, 0.11%)</title><rect x="65.2179%" y="805" width="0.1100%" height="15" fill="rgb(241,66,31)" fg:x="66412" fg:w="112"/><text x="65.4679%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (268 samples, 0.26%)</title><rect x="65.0951%" y="821" width="0.2632%" height="15" fill="rgb(235,81,37)" fg:x="66287" fg:w="268"/><text x="65.3451%" y="831.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::neighbors_except_entities (31 samples, 0.03%)</title><rect x="65.3278%" y="805" width="0.0304%" height="15" fill="rgb(223,221,9)" fg:x="66524" fg:w="31"/><text x="65.5778%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (46 samples, 0.05%)</title><rect x="65.6067%" y="805" width="0.0452%" height="15" fill="rgb(242,180,7)" fg:x="66808" fg:w="46"/><text x="65.8567%" y="815.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (45 samples, 0.04%)</title><rect x="65.7207%" y="741" width="0.0442%" height="15" fill="rgb(243,78,19)" fg:x="66924" fg:w="45"/><text x="65.9707%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (32 samples, 0.03%)</title><rect x="65.7648%" y="741" width="0.0314%" height="15" fill="rgb(233,23,17)" fg:x="66969" fg:w="32"/><text x="66.0148%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (22 samples, 0.02%)</title><rect x="65.7963%" y="741" width="0.0216%" height="15" fill="rgb(252,122,45)" fg:x="67001" fg:w="22"/><text x="66.0463%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (16 samples, 0.02%)</title><rect x="65.9230%" y="725" width="0.0157%" height="15" fill="rgb(247,108,20)" fg:x="67130" fg:w="16"/><text x="66.1730%" y="735.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (16 samples, 0.02%)</title><rect x="65.9230%" y="709" width="0.0157%" height="15" fill="rgb(235,84,21)" fg:x="67130" fg:w="16"/><text x="66.1730%" y="719.50"></text></g><g><title>alloc::alloc::alloc (16 samples, 0.02%)</title><rect x="65.9230%" y="693" width="0.0157%" height="15" fill="rgb(247,129,10)" fg:x="67130" fg:w="16"/><text x="66.1730%" y="703.50"></text></g><g><title>__rdl_alloc (16 samples, 0.02%)</title><rect x="65.9230%" y="677" width="0.0157%" height="15" fill="rgb(208,173,14)" fg:x="67130" fg:w="16"/><text x="66.1730%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (16 samples, 0.02%)</title><rect x="65.9230%" y="661" width="0.0157%" height="15" fill="rgb(236,31,38)" fg:x="67130" fg:w="16"/><text x="66.1730%" y="671.50"></text></g><g><title>[libc-2.33.so] (17 samples, 0.02%)</title><rect x="67.0729%" y="613" width="0.0167%" height="15" fill="rgb(232,65,17)" fg:x="68301" fg:w="17"/><text x="67.3229%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (120 samples, 0.12%)</title><rect x="67.0896%" y="613" width="0.1178%" height="15" fill="rgb(224,45,49)" fg:x="68318" fg:w="120"/><text x="67.3396%" y="623.50"></text></g><g><title>_int_free (236 samples, 0.23%)</title><rect x="67.2074%" y="613" width="0.2318%" height="15" fill="rgb(225,2,53)" fg:x="68438" fg:w="236"/><text x="67.4574%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,235 samples, 2.19%)</title><rect x="65.9387%" y="725" width="2.1948%" height="15" fill="rgb(248,210,53)" fg:x="67146" fg:w="2235"/><text x="66.1887%" y="735.50">&lt;..</text></g><g><title>alloc::alloc::Global::grow_impl (2,235 samples, 2.19%)</title><rect x="65.9387%" y="709" width="2.1948%" height="15" fill="rgb(211,1,30)" fg:x="67146" fg:w="2235"/><text x="66.1887%" y="719.50">a..</text></g><g><title>alloc::alloc::realloc (2,235 samples, 2.19%)</title><rect x="65.9387%" y="693" width="2.1948%" height="15" fill="rgb(224,96,15)" fg:x="67146" fg:w="2235"/><text x="66.1887%" y="703.50">a..</text></g><g><title>__rdl_realloc (2,235 samples, 2.19%)</title><rect x="65.9387%" y="677" width="2.1948%" height="15" fill="rgb(252,45,11)" fg:x="67146" fg:w="2235"/><text x="66.1887%" y="687.50">_..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2,235 samples, 2.19%)</title><rect x="65.9387%" y="661" width="2.1948%" height="15" fill="rgb(220,125,38)" fg:x="67146" fg:w="2235"/><text x="66.1887%" y="671.50">s..</text></g><g><title>__GI___libc_realloc (2,218 samples, 2.18%)</title><rect x="65.9554%" y="645" width="2.1781%" height="15" fill="rgb(243,161,33)" fg:x="67163" fg:w="2218"/><text x="66.2054%" y="655.50">_..</text></g><g><title>_int_realloc (1,258 samples, 1.24%)</title><rect x="66.8981%" y="629" width="1.2354%" height="15" fill="rgb(248,197,34)" fg:x="68123" fg:w="1258"/><text x="67.1481%" y="639.50"></text></g><g><title>_int_malloc (707 samples, 0.69%)</title><rect x="67.4392%" y="613" width="0.6943%" height="15" fill="rgb(228,165,23)" fg:x="68674" fg:w="707"/><text x="67.6892%" y="623.50"></text></g><g><title>unlink_chunk.constprop.0 (39 samples, 0.04%)</title><rect x="68.0952%" y="597" width="0.0383%" height="15" fill="rgb(236,94,38)" fg:x="69342" fg:w="39"/><text x="68.3452%" y="607.50"></text></g><g><title>__GI___libc_malloc (144 samples, 0.14%)</title><rect x="68.1335%" y="725" width="0.1414%" height="15" fill="rgb(220,13,23)" fg:x="69381" fg:w="144"/><text x="68.3835%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,524 samples, 2.48%)</title><rect x="65.8179%" y="741" width="2.4786%" height="15" fill="rgb(234,26,39)" fg:x="67023" fg:w="2524"/><text x="66.0679%" y="751.50">al..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (22 samples, 0.02%)</title><rect x="68.2749%" y="725" width="0.0216%" height="15" fill="rgb(205,117,44)" fg:x="69525" fg:w="22"/><text x="68.5249%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::array (63 samples, 0.06%)</title><rect x="68.2965%" y="741" width="0.0619%" height="15" fill="rgb(250,42,2)" fg:x="69547" fg:w="63"/><text x="68.5465%" y="751.50"></text></g><g><title>core::alloc::layout::Layout::repeat (63 samples, 0.06%)</title><rect x="68.2965%" y="725" width="0.0619%" height="15" fill="rgb(223,83,14)" fg:x="69547" fg:w="63"/><text x="68.5465%" y="735.50"></text></g><g><title>core::cmp::max (52 samples, 0.05%)</title><rect x="68.3584%" y="741" width="0.0511%" height="15" fill="rgb(241,147,50)" fg:x="69610" fg:w="52"/><text x="68.6084%" y="751.50"></text></g><g><title>core::cmp::Ord::max (52 samples, 0.05%)</title><rect x="68.3584%" y="725" width="0.0511%" height="15" fill="rgb(218,90,6)" fg:x="69610" fg:w="52"/><text x="68.6084%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (52 samples, 0.05%)</title><rect x="68.3584%" y="709" width="0.0511%" height="15" fill="rgb(210,191,5)" fg:x="69610" fg:w="52"/><text x="68.6084%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,799 samples, 2.75%)</title><rect x="65.6617%" y="757" width="2.7487%" height="15" fill="rgb(225,139,19)" fg:x="66864" fg:w="2799"/><text x="65.9117%" y="767.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,838 samples, 2.79%)</title><rect x="65.6519%" y="789" width="2.7870%" height="15" fill="rgb(210,1,33)" fg:x="66854" fg:w="2838"/><text x="65.9019%" y="799.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,828 samples, 2.78%)</title><rect x="65.6617%" y="773" width="2.7772%" height="15" fill="rgb(213,50,3)" fg:x="66864" fg:w="2828"/><text x="65.9117%" y="783.50">al..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (29 samples, 0.03%)</title><rect x="68.4104%" y="757" width="0.0285%" height="15" fill="rgb(234,227,4)" fg:x="69663" fg:w="29"/><text x="68.6604%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,848 samples, 2.80%)</title><rect x="65.6519%" y="805" width="2.7968%" height="15" fill="rgb(246,63,5)" fg:x="66854" fg:w="2848"/><text x="65.9019%" y="815.50">al..</text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (18 samples, 0.02%)</title><rect x="68.4487%" y="805" width="0.0177%" height="15" fill="rgb(245,136,27)" fg:x="69702" fg:w="18"/><text x="68.6987%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (18 samples, 0.02%)</title><rect x="68.4487%" y="789" width="0.0177%" height="15" fill="rgb(247,199,27)" fg:x="69702" fg:w="18"/><text x="68.6987%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3,267 samples, 3.21%)</title><rect x="65.3583%" y="821" width="3.2083%" height="15" fill="rgb(252,158,49)" fg:x="66555" fg:w="3267"/><text x="65.6083%" y="831.50">all..</text></g><g><title>core::ptr::write (102 samples, 0.10%)</title><rect x="68.4664%" y="805" width="0.1002%" height="15" fill="rgb(254,73,1)" fg:x="69720" fg:w="102"/><text x="68.7164%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (20 samples, 0.02%)</title><rect x="68.5665%" y="821" width="0.0196%" height="15" fill="rgb(248,93,19)" fg:x="69822" fg:w="20"/><text x="68.8165%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (29 samples, 0.03%)</title><rect x="68.5862%" y="821" width="0.0285%" height="15" fill="rgb(206,67,5)" fg:x="69842" fg:w="29"/><text x="68.8362%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (29 samples, 0.03%)</title><rect x="68.5862%" y="805" width="0.0285%" height="15" fill="rgb(209,210,4)" fg:x="69842" fg:w="29"/><text x="68.8362%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (580 samples, 0.57%)</title><rect x="68.6147%" y="741" width="0.5696%" height="15" fill="rgb(214,185,36)" fg:x="69871" fg:w="580"/><text x="68.8647%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (580 samples, 0.57%)</title><rect x="68.6147%" y="725" width="0.5696%" height="15" fill="rgb(233,191,26)" fg:x="69871" fg:w="580"/><text x="68.8647%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (580 samples, 0.57%)</title><rect x="68.6147%" y="709" width="0.5696%" height="15" fill="rgb(248,94,17)" fg:x="69871" fg:w="580"/><text x="68.8647%" y="719.50"></text></g><g><title>__rdl_dealloc (580 samples, 0.57%)</title><rect x="68.6147%" y="693" width="0.5696%" height="15" fill="rgb(250,64,4)" fg:x="69871" fg:w="580"/><text x="68.8647%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (580 samples, 0.57%)</title><rect x="68.6147%" y="677" width="0.5696%" height="15" fill="rgb(218,41,53)" fg:x="69871" fg:w="580"/><text x="68.8647%" y="687.50"></text></g><g><title>__GI___libc_free (580 samples, 0.57%)</title><rect x="68.6147%" y="661" width="0.5696%" height="15" fill="rgb(251,176,28)" fg:x="69871" fg:w="580"/><text x="68.8647%" y="671.50"></text></g><g><title>_int_free (394 samples, 0.39%)</title><rect x="68.7973%" y="645" width="0.3869%" height="15" fill="rgb(247,22,9)" fg:x="70057" fg:w="394"/><text x="69.0473%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (583 samples, 0.57%)</title><rect x="68.6147%" y="821" width="0.5725%" height="15" fill="rgb(218,201,14)" fg:x="69871" fg:w="583"/><text x="68.8647%" y="831.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (583 samples, 0.57%)</title><rect x="68.6147%" y="805" width="0.5725%" height="15" fill="rgb(218,94,10)" fg:x="69871" fg:w="583"/><text x="68.8647%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (583 samples, 0.57%)</title><rect x="68.6147%" y="789" width="0.5725%" height="15" fill="rgb(222,183,52)" fg:x="69871" fg:w="583"/><text x="68.8647%" y="799.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (583 samples, 0.57%)</title><rect x="68.6147%" y="773" width="0.5725%" height="15" fill="rgb(242,140,25)" fg:x="69871" fg:w="583"/><text x="68.8647%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (583 samples, 0.57%)</title><rect x="68.6147%" y="757" width="0.5725%" height="15" fill="rgb(235,197,38)" fg:x="69871" fg:w="583"/><text x="68.8647%" y="767.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::neighbors_except_entities (60 samples, 0.06%)</title><rect x="69.1872%" y="821" width="0.0589%" height="15" fill="rgb(237,136,15)" fg:x="70454" fg:w="60"/><text x="69.4372%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (40 samples, 0.04%)</title><rect x="69.3679%" y="789" width="0.0393%" height="15" fill="rgb(223,44,49)" fg:x="70638" fg:w="40"/><text x="69.6179%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (28 samples, 0.03%)</title><rect x="69.4386%" y="725" width="0.0275%" height="15" fill="rgb(227,71,15)" fg:x="70710" fg:w="28"/><text x="69.6886%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (11 samples, 0.01%)</title><rect x="69.4661%" y="725" width="0.0108%" height="15" fill="rgb(225,153,20)" fg:x="70738" fg:w="11"/><text x="69.7161%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (19 samples, 0.02%)</title><rect x="69.5230%" y="709" width="0.0187%" height="15" fill="rgb(210,190,26)" fg:x="70796" fg:w="19"/><text x="69.7730%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (19 samples, 0.02%)</title><rect x="69.5230%" y="693" width="0.0187%" height="15" fill="rgb(223,147,5)" fg:x="70796" fg:w="19"/><text x="69.7730%" y="703.50"></text></g><g><title>alloc::alloc::alloc (12 samples, 0.01%)</title><rect x="69.5299%" y="677" width="0.0118%" height="15" fill="rgb(207,14,23)" fg:x="70803" fg:w="12"/><text x="69.7799%" y="687.50"></text></g><g><title>__rdl_alloc (12 samples, 0.01%)</title><rect x="69.5299%" y="661" width="0.0118%" height="15" fill="rgb(211,195,53)" fg:x="70803" fg:w="12"/><text x="69.7799%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (12 samples, 0.01%)</title><rect x="69.5299%" y="645" width="0.0118%" height="15" fill="rgb(237,75,46)" fg:x="70803" fg:w="12"/><text x="69.7799%" y="655.50"></text></g><g><title>__GI___libc_malloc (190 samples, 0.19%)</title><rect x="69.5417%" y="709" width="0.1866%" height="15" fill="rgb(254,55,14)" fg:x="70815" fg:w="190"/><text x="69.7917%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (264 samples, 0.26%)</title><rect x="69.4798%" y="725" width="0.2593%" height="15" fill="rgb(230,185,30)" fg:x="70752" fg:w="264"/><text x="69.7298%" y="735.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (11 samples, 0.01%)</title><rect x="69.7283%" y="709" width="0.0108%" height="15" fill="rgb(220,14,11)" fg:x="71005" fg:w="11"/><text x="69.9783%" y="719.50"></text></g><g><title>core::alloc::layout::Layout::array (25 samples, 0.02%)</title><rect x="69.7391%" y="725" width="0.0246%" height="15" fill="rgb(215,169,44)" fg:x="71016" fg:w="25"/><text x="69.9891%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::repeat (25 samples, 0.02%)</title><rect x="69.7391%" y="709" width="0.0246%" height="15" fill="rgb(253,203,20)" fg:x="71016" fg:w="25"/><text x="69.9891%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (12 samples, 0.01%)</title><rect x="69.7518%" y="693" width="0.0118%" height="15" fill="rgb(229,225,17)" fg:x="71029" fg:w="12"/><text x="70.0018%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (12 samples, 0.01%)</title><rect x="69.7518%" y="677" width="0.0118%" height="15" fill="rgb(236,76,26)" fg:x="71029" fg:w="12"/><text x="70.0018%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (31 samples, 0.03%)</title><rect x="69.7636%" y="693" width="0.0304%" height="15" fill="rgb(234,15,30)" fg:x="71041" fg:w="31"/><text x="70.0136%" y="703.50"></text></g><g><title>core::cmp::max (34 samples, 0.03%)</title><rect x="69.7636%" y="725" width="0.0334%" height="15" fill="rgb(211,113,48)" fg:x="71041" fg:w="34"/><text x="70.0136%" y="735.50"></text></g><g><title>core::cmp::Ord::max (34 samples, 0.03%)</title><rect x="69.7636%" y="709" width="0.0334%" height="15" fill="rgb(221,31,36)" fg:x="71041" fg:w="34"/><text x="70.0136%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (390 samples, 0.38%)</title><rect x="69.4180%" y="741" width="0.3830%" height="15" fill="rgb(215,118,52)" fg:x="70689" fg:w="390"/><text x="69.6680%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (413 samples, 0.41%)</title><rect x="69.4072%" y="789" width="0.4056%" height="15" fill="rgb(241,151,27)" fg:x="70678" fg:w="413"/><text x="69.6572%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (413 samples, 0.41%)</title><rect x="69.4072%" y="773" width="0.4056%" height="15" fill="rgb(253,51,3)" fg:x="70678" fg:w="413"/><text x="69.6572%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (402 samples, 0.39%)</title><rect x="69.4180%" y="757" width="0.3948%" height="15" fill="rgb(216,201,24)" fg:x="70689" fg:w="402"/><text x="69.6680%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.01%)</title><rect x="69.8009%" y="741" width="0.0118%" height="15" fill="rgb(231,107,4)" fg:x="71079" fg:w="12"/><text x="70.0509%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (679 samples, 0.67%)</title><rect x="69.3168%" y="805" width="0.6668%" height="15" fill="rgb(243,97,54)" fg:x="70586" fg:w="679"/><text x="69.5668%" y="815.50"></text></g><g><title>core::ptr::write (174 samples, 0.17%)</title><rect x="69.8127%" y="789" width="0.1709%" height="15" fill="rgb(221,32,51)" fg:x="71091" fg:w="174"/><text x="70.0627%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (21 samples, 0.02%)</title><rect x="69.9836%" y="805" width="0.0206%" height="15" fill="rgb(218,171,35)" fg:x="71265" fg:w="21"/><text x="70.2336%" y="815.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_sub (24 samples, 0.02%)</title><rect x="70.0042%" y="789" width="0.0236%" height="15" fill="rgb(214,20,53)" fg:x="71286" fg:w="24"/><text x="70.2542%" y="799.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_sub (51 samples, 0.05%)</title><rect x="70.0042%" y="805" width="0.0501%" height="15" fill="rgb(239,9,52)" fg:x="71286" fg:w="51"/><text x="70.2542%" y="815.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (27 samples, 0.03%)</title><rect x="70.0278%" y="789" width="0.0265%" height="15" fill="rgb(215,114,45)" fg:x="71310" fg:w="27"/><text x="70.2778%" y="799.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (839 samples, 0.82%)</title><rect x="69.2461%" y="821" width="0.8239%" height="15" fill="rgb(208,118,9)" fg:x="70514" fg:w="839"/><text x="69.4961%" y="831.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (16 samples, 0.02%)</title><rect x="70.0543%" y="805" width="0.0157%" height="15" fill="rgb(235,7,39)" fg:x="71337" fg:w="16"/><text x="70.3043%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (28 samples, 0.03%)</title><rect x="70.2016%" y="789" width="0.0275%" height="15" fill="rgb(243,225,15)" fg:x="71487" fg:w="28"/><text x="70.4516%" y="799.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (39 samples, 0.04%)</title><rect x="70.2595%" y="725" width="0.0383%" height="15" fill="rgb(225,216,18)" fg:x="71546" fg:w="39"/><text x="70.5095%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (18 samples, 0.02%)</title><rect x="70.2978%" y="725" width="0.0177%" height="15" fill="rgb(233,36,38)" fg:x="71585" fg:w="18"/><text x="70.5478%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (13 samples, 0.01%)</title><rect x="70.3744%" y="709" width="0.0128%" height="15" fill="rgb(239,88,23)" fg:x="71663" fg:w="13"/><text x="70.6244%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (13 samples, 0.01%)</title><rect x="70.3744%" y="693" width="0.0128%" height="15" fill="rgb(219,181,35)" fg:x="71663" fg:w="13"/><text x="70.6244%" y="703.50"></text></g><g><title>alloc::alloc::alloc (13 samples, 0.01%)</title><rect x="70.3744%" y="677" width="0.0128%" height="15" fill="rgb(215,18,46)" fg:x="71663" fg:w="13"/><text x="70.6244%" y="687.50"></text></g><g><title>__rdl_alloc (13 samples, 0.01%)</title><rect x="70.3744%" y="661" width="0.0128%" height="15" fill="rgb(241,38,11)" fg:x="71663" fg:w="13"/><text x="70.6244%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (13 samples, 0.01%)</title><rect x="70.3744%" y="645" width="0.0128%" height="15" fill="rgb(248,169,45)" fg:x="71663" fg:w="13"/><text x="70.6244%" y="655.50"></text></g><g><title>__GI___libc_malloc (171 samples, 0.17%)</title><rect x="70.3872%" y="709" width="0.1679%" height="15" fill="rgb(239,50,49)" fg:x="71676" fg:w="171"/><text x="70.6372%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (245 samples, 0.24%)</title><rect x="70.3155%" y="725" width="0.2406%" height="15" fill="rgb(231,96,31)" fg:x="71603" fg:w="245"/><text x="70.5655%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::array (16 samples, 0.02%)</title><rect x="70.5561%" y="725" width="0.0157%" height="15" fill="rgb(224,193,37)" fg:x="71848" fg:w="16"/><text x="70.8061%" y="735.50"></text></g><g><title>core::alloc::layout::Layout::repeat (16 samples, 0.02%)</title><rect x="70.5561%" y="709" width="0.0157%" height="15" fill="rgb(227,153,50)" fg:x="71848" fg:w="16"/><text x="70.8061%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (16 samples, 0.02%)</title><rect x="70.5561%" y="693" width="0.0157%" height="15" fill="rgb(249,228,3)" fg:x="71848" fg:w="16"/><text x="70.8061%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (16 samples, 0.02%)</title><rect x="70.5561%" y="677" width="0.0157%" height="15" fill="rgb(219,164,43)" fg:x="71848" fg:w="16"/><text x="70.8061%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 0.03%)</title><rect x="70.5718%" y="693" width="0.0344%" height="15" fill="rgb(216,45,41)" fg:x="71864" fg:w="35"/><text x="70.8218%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (377 samples, 0.37%)</title><rect x="70.2379%" y="741" width="0.3702%" height="15" fill="rgb(210,226,51)" fg:x="71524" fg:w="377"/><text x="70.4879%" y="751.50"></text></g><g><title>core::cmp::max (37 samples, 0.04%)</title><rect x="70.5718%" y="725" width="0.0363%" height="15" fill="rgb(209,117,49)" fg:x="71864" fg:w="37"/><text x="70.8218%" y="735.50"></text></g><g><title>core::cmp::Ord::max (37 samples, 0.04%)</title><rect x="70.5718%" y="709" width="0.0363%" height="15" fill="rgb(206,196,24)" fg:x="71864" fg:w="37"/><text x="70.8218%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (404 samples, 0.40%)</title><rect x="70.2291%" y="789" width="0.3967%" height="15" fill="rgb(253,218,3)" fg:x="71515" fg:w="404"/><text x="70.4791%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (404 samples, 0.40%)</title><rect x="70.2291%" y="773" width="0.3967%" height="15" fill="rgb(252,166,2)" fg:x="71515" fg:w="404"/><text x="70.4791%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (395 samples, 0.39%)</title><rect x="70.2379%" y="757" width="0.3879%" height="15" fill="rgb(236,218,26)" fg:x="71524" fg:w="395"/><text x="70.4879%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.02%)</title><rect x="70.6082%" y="741" width="0.0177%" height="15" fill="rgb(254,84,19)" fg:x="71901" fg:w="18"/><text x="70.8582%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (540 samples, 0.53%)</title><rect x="70.1545%" y="805" width="0.5303%" height="15" fill="rgb(219,137,29)" fg:x="71439" fg:w="540"/><text x="70.4045%" y="815.50"></text></g><g><title>core::ptr::write (60 samples, 0.06%)</title><rect x="70.6258%" y="789" width="0.0589%" height="15" fill="rgb(227,47,52)" fg:x="71919" fg:w="60"/><text x="70.8758%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (18 samples, 0.02%)</title><rect x="70.6848%" y="805" width="0.0177%" height="15" fill="rgb(229,167,24)" fg:x="71979" fg:w="18"/><text x="70.9348%" y="815.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (706 samples, 0.69%)</title><rect x="70.0700%" y="821" width="0.6933%" height="15" fill="rgb(233,164,1)" fg:x="71353" fg:w="706"/><text x="70.3200%" y="831.50"></text></g><g><title>core::num::&lt;impl u32&gt;::checked_sub (62 samples, 0.06%)</title><rect x="70.7024%" y="805" width="0.0609%" height="15" fill="rgb(218,88,48)" fg:x="71997" fg:w="62"/><text x="70.9524%" y="815.50"></text></g><g><title>core::num::&lt;impl u32&gt;::overflowing_sub (62 samples, 0.06%)</title><rect x="70.7024%" y="789" width="0.0609%" height="15" fill="rgb(226,214,24)" fg:x="71997" fg:w="62"/><text x="70.9524%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (94 samples, 0.09%)</title><rect x="71.2553%" y="789" width="0.0923%" height="15" fill="rgb(233,29,12)" fg:x="72560" fg:w="94"/><text x="71.5053%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (67 samples, 0.07%)</title><rect x="71.2818%" y="773" width="0.0658%" height="15" fill="rgb(219,120,34)" fg:x="72587" fg:w="67"/><text x="71.5318%" y="783.50"></text></g><g><title>engine::engine::world::TileEntityMap::get (628 samples, 0.62%)</title><rect x="70.7633%" y="821" width="0.6167%" height="15" fill="rgb(226,78,44)" fg:x="72059" fg:w="628"/><text x="71.0133%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (127 samples, 0.12%)</title><rect x="71.2553%" y="805" width="0.1247%" height="15" fill="rgb(240,15,48)" fg:x="72560" fg:w="127"/><text x="71.5053%" y="815.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (33 samples, 0.03%)</title><rect x="71.3476%" y="789" width="0.0324%" height="15" fill="rgb(253,176,7)" fg:x="72654" fg:w="33"/><text x="71.5976%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (33 samples, 0.03%)</title><rect x="71.3476%" y="773" width="0.0324%" height="15" fill="rgb(206,166,28)" fg:x="72654" fg:w="33"/><text x="71.5976%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (41 samples, 0.04%)</title><rect x="72.2530%" y="789" width="0.0403%" height="15" fill="rgb(241,53,51)" fg:x="73576" fg:w="41"/><text x="72.5030%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (15 samples, 0.01%)</title><rect x="72.2786%" y="773" width="0.0147%" height="15" fill="rgb(249,112,30)" fg:x="73602" fg:w="15"/><text x="72.5286%" y="783.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::neighbors_except_entities (8,362 samples, 8.21%)</title><rect x="64.1337%" y="837" width="8.2116%" height="15" fill="rgb(217,85,30)" fg:x="65308" fg:w="8362"/><text x="64.3837%" y="847.50">engine::eng..</text></g><g><title>engine::engine::world::TileWeightMap::get (983 samples, 0.97%)</title><rect x="71.3800%" y="821" width="0.9653%" height="15" fill="rgb(233,49,7)" fg:x="72687" fg:w="983"/><text x="71.6300%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (94 samples, 0.09%)</title><rect x="72.2530%" y="805" width="0.0923%" height="15" fill="rgb(234,109,9)" fg:x="73576" fg:w="94"/><text x="72.5030%" y="815.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (53 samples, 0.05%)</title><rect x="72.2933%" y="789" width="0.0520%" height="15" fill="rgb(253,95,22)" fg:x="73617" fg:w="53"/><text x="72.5433%" y="799.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (53 samples, 0.05%)</title><rect x="72.2933%" y="773" width="0.0520%" height="15" fill="rgb(233,176,25)" fg:x="73617" fg:w="53"/><text x="72.5433%" y="783.50"></text></g><g><title>core::cmp::min (35 samples, 0.03%)</title><rect x="72.5192%" y="821" width="0.0344%" height="15" fill="rgb(236,33,39)" fg:x="73847" fg:w="35"/><text x="72.7692%" y="831.50"></text></g><g><title>core::cmp::Ord::min (35 samples, 0.03%)</title><rect x="72.5192%" y="805" width="0.0344%" height="15" fill="rgb(223,226,42)" fg:x="73847" fg:w="35"/><text x="72.7692%" y="815.50"></text></g><g><title>pathfinding::directed::astar::astar (35 samples, 0.03%)</title><rect x="72.5192%" y="789" width="0.0344%" height="15" fill="rgb(216,99,33)" fg:x="73847" fg:w="35"/><text x="72.7692%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u32&gt;::lt (105 samples, 0.10%)</title><rect x="72.5594%" y="805" width="0.1031%" height="15" fill="rgb(235,84,23)" fg:x="73888" fg:w="105"/><text x="72.8094%" y="815.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::get_path_around_entities::{{closure}} (8,724 samples, 8.57%)</title><rect x="64.0964%" y="853" width="8.5671%" height="15" fill="rgb(232,2,27)" fg:x="65270" fg:w="8724"/><text x="64.3464%" y="863.50">engine::engi..</text></g><g><title>engine::engine::world::Position::diagonal_distance (324 samples, 0.32%)</title><rect x="72.3454%" y="837" width="0.3182%" height="15" fill="rgb(241,23,22)" fg:x="73670" fg:w="324"/><text x="72.5954%" y="847.50"></text></g><g><title>pathfinding::utils::absdiff (112 samples, 0.11%)</title><rect x="72.5535%" y="821" width="0.1100%" height="15" fill="rgb(211,73,27)" fg:x="73882" fg:w="112"/><text x="72.8035%" y="831.50"></text></g><g><title>&lt;usize as core::ops::bit::BitXor&gt;::bitxor (24 samples, 0.02%)</title><rect x="72.8275%" y="757" width="0.0236%" height="15" fill="rgb(235,109,49)" fg:x="74161" fg:w="24"/><text x="73.0775%" y="767.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (71 samples, 0.07%)</title><rect x="72.8511%" y="757" width="0.0697%" height="15" fill="rgb(230,99,29)" fg:x="74185" fg:w="71"/><text x="73.1011%" y="767.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u32 (228 samples, 0.22%)</title><rect x="72.7401%" y="789" width="0.2239%" height="15" fill="rgb(245,199,7)" fg:x="74072" fg:w="228"/><text x="72.9901%" y="799.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (139 samples, 0.14%)</title><rect x="72.8275%" y="773" width="0.1365%" height="15" fill="rgb(217,179,10)" fg:x="74161" fg:w="139"/><text x="73.0775%" y="783.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (44 samples, 0.04%)</title><rect x="72.9208%" y="757" width="0.0432%" height="15" fill="rgb(254,99,47)" fg:x="74256" fg:w="44"/><text x="73.1708%" y="767.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (263 samples, 0.26%)</title><rect x="72.7401%" y="837" width="0.2583%" height="15" fill="rgb(251,121,7)" fg:x="74072" fg:w="263"/><text x="72.9901%" y="847.50"></text></g><g><title>&lt;engine::engine::world::Position as core::hash::Hash&gt;::hash (263 samples, 0.26%)</title><rect x="72.7401%" y="821" width="0.2583%" height="15" fill="rgb(250,177,26)" fg:x="74072" fg:w="263"/><text x="72.9901%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (263 samples, 0.26%)</title><rect x="72.7401%" y="805" width="0.2583%" height="15" fill="rgb(232,88,15)" fg:x="74072" fg:w="263"/><text x="72.9901%" y="815.50"></text></g><g><title>pathfinding::directed::astar::astar (35 samples, 0.03%)</title><rect x="72.9640%" y="789" width="0.0344%" height="15" fill="rgb(251,54,54)" fg:x="74300" fg:w="35"/><text x="73.2140%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (35 samples, 0.03%)</title><rect x="73.2518%" y="821" width="0.0344%" height="15" fill="rgb(208,177,15)" fg:x="74593" fg:w="35"/><text x="73.5018%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (19 samples, 0.02%)</title><rect x="73.2675%" y="805" width="0.0187%" height="15" fill="rgb(205,97,32)" fg:x="74609" fg:w="19"/><text x="73.5175%" y="815.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (93 samples, 0.09%)</title><rect x="74.3241%" y="757" width="0.0913%" height="15" fill="rgb(217,192,13)" fg:x="75685" fg:w="93"/><text x="74.5741%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (265 samples, 0.26%)</title><rect x="74.2024%" y="773" width="0.2602%" height="15" fill="rgb(215,163,41)" fg:x="75561" fg:w="265"/><text x="74.4524%" y="783.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::remove_lowest_bit (48 samples, 0.05%)</title><rect x="74.4155%" y="757" width="0.0471%" height="15" fill="rgb(246,83,29)" fg:x="75778" fg:w="48"/><text x="74.6655%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (486 samples, 0.48%)</title><rect x="74.0609%" y="789" width="0.4773%" height="15" fill="rgb(219,2,45)" fg:x="75417" fg:w="486"/><text x="74.3109%" y="799.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (63 samples, 0.06%)</title><rect x="74.4763%" y="773" width="0.0619%" height="15" fill="rgb(242,215,33)" fg:x="75840" fg:w="63"/><text x="74.7263%" y="783.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (63 samples, 0.06%)</title><rect x="74.4763%" y="757" width="0.0619%" height="15" fill="rgb(217,1,6)" fg:x="75840" fg:w="63"/><text x="74.7263%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (63 samples, 0.06%)</title><rect x="74.4763%" y="741" width="0.0619%" height="15" fill="rgb(207,85,52)" fg:x="75840" fg:w="63"/><text x="74.7263%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (546 samples, 0.54%)</title><rect x="74.0609%" y="805" width="0.5362%" height="15" fill="rgb(231,171,19)" fg:x="75417" fg:w="546"/><text x="74.3109%" y="815.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket (60 samples, 0.06%)</title><rect x="74.5382%" y="789" width="0.0589%" height="15" fill="rgb(207,128,4)" fg:x="75903" fg:w="60"/><text x="74.7882%" y="799.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (60 samples, 0.06%)</title><rect x="74.5382%" y="773" width="0.0589%" height="15" fill="rgb(219,208,4)" fg:x="75903" fg:w="60"/><text x="74.7882%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (60 samples, 0.06%)</title><rect x="74.5382%" y="757" width="0.0589%" height="15" fill="rgb(235,161,42)" fg:x="75903" fg:w="60"/><text x="74.7882%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (60 samples, 0.06%)</title><rect x="74.5382%" y="741" width="0.0589%" height="15" fill="rgb(247,218,18)" fg:x="75903" fg:w="60"/><text x="74.7882%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (96 samples, 0.09%)</title><rect x="74.6168%" y="757" width="0.0943%" height="15" fill="rgb(232,114,51)" fg:x="75983" fg:w="96"/><text x="74.8668%" y="767.50"></text></g><g><title>hashbrown::raw::inner::h2 (83 samples, 0.08%)</title><rect x="74.7110%" y="757" width="0.0815%" height="15" fill="rgb(222,95,3)" fg:x="76079" fg:w="83"/><text x="74.9610%" y="767.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (107 samples, 0.11%)</title><rect x="74.7925%" y="757" width="0.1051%" height="15" fill="rgb(240,65,29)" fg:x="76162" fg:w="107"/><text x="75.0425%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (107 samples, 0.11%)</title><rect x="74.7925%" y="741" width="0.1051%" height="15" fill="rgb(249,209,20)" fg:x="76162" fg:w="107"/><text x="75.0425%" y="751.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (107 samples, 0.11%)</title><rect x="74.7925%" y="725" width="0.1051%" height="15" fill="rgb(241,48,37)" fg:x="76162" fg:w="107"/><text x="75.0425%" y="735.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (454 samples, 0.45%)</title><rect x="74.5971%" y="805" width="0.4458%" height="15" fill="rgb(230,140,42)" fg:x="75963" fg:w="454"/><text x="74.8471%" y="815.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (454 samples, 0.45%)</title><rect x="74.5971%" y="789" width="0.4458%" height="15" fill="rgb(230,176,45)" fg:x="75963" fg:w="454"/><text x="74.8471%" y="799.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (454 samples, 0.45%)</title><rect x="74.5971%" y="773" width="0.4458%" height="15" fill="rgb(245,112,21)" fg:x="75963" fg:w="454"/><text x="74.8471%" y="783.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (148 samples, 0.15%)</title><rect x="74.8976%" y="757" width="0.1453%" height="15" fill="rgb(207,183,35)" fg:x="76269" fg:w="148"/><text x="75.1476%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (148 samples, 0.15%)</title><rect x="74.8976%" y="741" width="0.1453%" height="15" fill="rgb(227,44,33)" fg:x="76269" fg:w="148"/><text x="75.1476%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (148 samples, 0.15%)</title><rect x="74.8976%" y="725" width="0.1453%" height="15" fill="rgb(246,120,21)" fg:x="76269" fg:w="148"/><text x="75.1476%" y="735.50"></text></g><g><title>core::core_arch::simd::i8x16::new (148 samples, 0.15%)</title><rect x="74.8976%" y="709" width="0.1453%" height="15" fill="rgb(235,57,52)" fg:x="76269" fg:w="148"/><text x="75.1476%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (2,350 samples, 2.31%)</title><rect x="73.2861%" y="821" width="2.3077%" height="15" fill="rgb(238,84,10)" fg:x="74628" fg:w="2350"/><text x="73.5361%" y="831.50">h..</text></g><g><title>indexmap::map::core::equivalent::{{closure}} (561 samples, 0.55%)</title><rect x="75.0430%" y="805" width="0.5509%" height="15" fill="rgb(251,200,32)" fg:x="76417" fg:w="561"/><text x="75.2930%" y="815.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (493 samples, 0.48%)</title><rect x="75.1097%" y="789" width="0.4841%" height="15" fill="rgb(247,159,13)" fg:x="76485" fg:w="493"/><text x="75.3597%" y="799.50"></text></g><g><title>&lt;engine::engine::world::Position as core::cmp::PartialEq&gt;::eq (408 samples, 0.40%)</title><rect x="75.1932%" y="773" width="0.4007%" height="15" fill="rgb(238,64,4)" fg:x="76570" fg:w="408"/><text x="75.4432%" y="783.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (3,000 samples, 2.95%)</title><rect x="72.6635%" y="853" width="2.9461%" height="15" fill="rgb(221,131,51)" fg:x="73994" fg:w="3000"/><text x="72.9135%" y="863.50">in..</text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (2,659 samples, 2.61%)</title><rect x="72.9984%" y="837" width="2.6112%" height="15" fill="rgb(242,5,29)" fg:x="74335" fg:w="2659"/><text x="73.2484%" y="847.50">in..</text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (16 samples, 0.02%)</title><rect x="75.5939%" y="821" width="0.0157%" height="15" fill="rgb(214,130,32)" fg:x="76978" fg:w="16"/><text x="75.8439%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (36 samples, 0.04%)</title><rect x="75.6096%" y="837" width="0.0354%" height="15" fill="rgb(244,210,16)" fg:x="76994" fg:w="36"/><text x="75.8596%" y="847.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (37 samples, 0.04%)</title><rect x="75.6096%" y="853" width="0.0363%" height="15" fill="rgb(234,48,26)" fg:x="76994" fg:w="37"/><text x="75.8596%" y="863.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::index (17 samples, 0.02%)</title><rect x="75.6479%" y="853" width="0.0167%" height="15" fill="rgb(231,82,38)" fg:x="77033" fg:w="17"/><text x="75.8979%" y="863.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::len (17 samples, 0.02%)</title><rect x="75.6479%" y="837" width="0.0167%" height="15" fill="rgb(254,128,41)" fg:x="77033" fg:w="17"/><text x="75.8979%" y="847.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::len (17 samples, 0.02%)</title><rect x="75.6479%" y="821" width="0.0167%" height="15" fill="rgb(212,73,49)" fg:x="77033" fg:w="17"/><text x="75.8979%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (17 samples, 0.02%)</title><rect x="75.7333%" y="837" width="0.0167%" height="15" fill="rgb(205,62,54)" fg:x="77120" fg:w="17"/><text x="75.9833%" y="847.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (14 samples, 0.01%)</title><rect x="75.7363%" y="821" width="0.0137%" height="15" fill="rgb(228,0,8)" fg:x="77123" fg:w="14"/><text x="75.9863%" y="831.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (14 samples, 0.01%)</title><rect x="75.7363%" y="805" width="0.0137%" height="15" fill="rgb(251,28,17)" fg:x="77123" fg:w="14"/><text x="75.9863%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (73 samples, 0.07%)</title><rect x="75.8040%" y="821" width="0.0717%" height="15" fill="rgb(238,105,27)" fg:x="77192" fg:w="73"/><text x="76.0540%" y="831.50"></text></g><g><title>core::ptr::write (69 samples, 0.07%)</title><rect x="75.8080%" y="805" width="0.0678%" height="15" fill="rgb(237,216,33)" fg:x="77196" fg:w="69"/><text x="76.0580%" y="815.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::write (18 samples, 0.02%)</title><rect x="75.9081%" y="805" width="0.0177%" height="15" fill="rgb(229,228,25)" fg:x="77298" fg:w="18"/><text x="76.1581%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (18 samples, 0.02%)</title><rect x="75.9081%" y="789" width="0.0177%" height="15" fill="rgb(233,75,23)" fg:x="77298" fg:w="18"/><text x="76.1581%" y="799.50"></text></g><g><title>core::ptr::write (18 samples, 0.02%)</title><rect x="75.9081%" y="773" width="0.0177%" height="15" fill="rgb(231,207,16)" fg:x="77298" fg:w="18"/><text x="76.1581%" y="783.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::bucket (17 samples, 0.02%)</title><rect x="75.9258%" y="805" width="0.0167%" height="15" fill="rgb(231,191,45)" fg:x="77316" fg:w="17"/><text x="76.1758%" y="815.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (17 samples, 0.02%)</title><rect x="75.9258%" y="789" width="0.0167%" height="15" fill="rgb(224,133,17)" fg:x="77316" fg:w="17"/><text x="76.1758%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (17 samples, 0.02%)</title><rect x="75.9258%" y="773" width="0.0167%" height="15" fill="rgb(209,178,27)" fg:x="77316" fg:w="17"/><text x="76.1758%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17 samples, 0.02%)</title><rect x="75.9258%" y="757" width="0.0167%" height="15" fill="rgb(218,37,11)" fg:x="77316" fg:w="17"/><text x="76.1758%" y="767.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::remove_lowest_bit (30 samples, 0.03%)</title><rect x="75.9670%" y="725" width="0.0295%" height="15" fill="rgb(251,226,25)" fg:x="77358" fg:w="30"/><text x="76.2170%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.05%)</title><rect x="75.9543%" y="757" width="0.0452%" height="15" fill="rgb(209,222,27)" fg:x="77345" fg:w="46"/><text x="76.2043%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.05%)</title><rect x="75.9543%" y="741" width="0.0452%" height="15" fill="rgb(238,22,21)" fg:x="77345" fg:w="46"/><text x="76.2043%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::deallocate (11 samples, 0.01%)</title><rect x="75.9995%" y="693" width="0.0108%" height="15" fill="rgb(233,161,25)" fg:x="77391" fg:w="11"/><text x="76.2495%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (11 samples, 0.01%)</title><rect x="75.9995%" y="677" width="0.0108%" height="15" fill="rgb(226,122,53)" fg:x="77391" fg:w="11"/><text x="76.2495%" y="687.50"></text></g><g><title>__rdl_dealloc (11 samples, 0.01%)</title><rect x="75.9995%" y="661" width="0.0108%" height="15" fill="rgb(220,123,17)" fg:x="77391" fg:w="11"/><text x="76.2495%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (11 samples, 0.01%)</title><rect x="75.9995%" y="645" width="0.0108%" height="15" fill="rgb(230,224,35)" fg:x="77391" fg:w="11"/><text x="76.2495%" y="655.50"></text></g><g><title>__GI___libc_free (11 samples, 0.01%)</title><rect x="75.9995%" y="629" width="0.0108%" height="15" fill="rgb(246,83,8)" fg:x="77391" fg:w="11"/><text x="76.2495%" y="639.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::free_buckets (13 samples, 0.01%)</title><rect x="75.9995%" y="709" width="0.0128%" height="15" fill="rgb(230,214,17)" fg:x="77391" fg:w="13"/><text x="76.2495%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;,hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (14 samples, 0.01%)</title><rect x="75.9995%" y="757" width="0.0137%" height="15" fill="rgb(222,97,18)" fg:x="77391" fg:w="14"/><text x="76.2495%" y="767.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.01%)</title><rect x="75.9995%" y="741" width="0.0137%" height="15" fill="rgb(206,79,1)" fg:x="77391" fg:w="14"/><text x="76.2495%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (14 samples, 0.01%)</title><rect x="75.9995%" y="725" width="0.0137%" height="15" fill="rgb(214,121,34)" fg:x="77391" fg:w="14"/><text x="76.2495%" y="735.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ref (17 samples, 0.02%)</title><rect x="76.0132%" y="757" width="0.0167%" height="15" fill="rgb(249,199,46)" fg:x="77405" fg:w="17"/><text x="76.2632%" y="767.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ptr (17 samples, 0.02%)</title><rect x="76.0132%" y="741" width="0.0167%" height="15" fill="rgb(214,222,46)" fg:x="77405" fg:w="17"/><text x="76.2632%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (17 samples, 0.02%)</title><rect x="76.0132%" y="725" width="0.0167%" height="15" fill="rgb(248,168,30)" fg:x="77405" fg:w="17"/><text x="76.2632%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (17 samples, 0.02%)</title><rect x="76.0132%" y="709" width="0.0167%" height="15" fill="rgb(226,14,28)" fg:x="77405" fg:w="17"/><text x="76.2632%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (30 samples, 0.03%)</title><rect x="76.0319%" y="725" width="0.0295%" height="15" fill="rgb(253,123,1)" fg:x="77424" fg:w="30"/><text x="76.2819%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (37 samples, 0.04%)</title><rect x="76.0319%" y="741" width="0.0363%" height="15" fill="rgb(225,24,42)" fg:x="77424" fg:w="37"/><text x="76.2819%" y="751.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::copy_from_nonoverlapping (40 samples, 0.04%)</title><rect x="76.0299%" y="757" width="0.0393%" height="15" fill="rgb(216,161,37)" fg:x="77422" fg:w="40"/><text x="76.2799%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (12 samples, 0.01%)</title><rect x="76.1360%" y="725" width="0.0118%" height="15" fill="rgb(251,164,26)" fg:x="77530" fg:w="12"/><text x="76.3860%" y="735.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (37 samples, 0.04%)</title><rect x="76.1477%" y="725" width="0.0363%" height="15" fill="rgb(219,177,3)" fg:x="77542" fg:w="37"/><text x="76.3977%" y="735.50"></text></g><g><title>hashbrown::raw::inner::is_full (98 samples, 0.10%)</title><rect x="76.1841%" y="725" width="0.0962%" height="15" fill="rgb(222,65,0)" fg:x="77579" fg:w="98"/><text x="76.4341%" y="735.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (63 samples, 0.06%)</title><rect x="76.2803%" y="725" width="0.0619%" height="15" fill="rgb(223,69,54)" fg:x="77677" fg:w="63"/><text x="76.5303%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (63 samples, 0.06%)</title><rect x="76.2803%" y="709" width="0.0619%" height="15" fill="rgb(235,30,27)" fg:x="77677" fg:w="63"/><text x="76.5303%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (63 samples, 0.06%)</title><rect x="76.2803%" y="693" width="0.0619%" height="15" fill="rgb(220,183,50)" fg:x="77677" fg:w="63"/><text x="76.5303%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (309 samples, 0.30%)</title><rect x="76.0692%" y="741" width="0.3034%" height="15" fill="rgb(248,198,15)" fg:x="77462" fg:w="309"/><text x="76.3192%" y="751.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (31 samples, 0.03%)</title><rect x="76.3422%" y="725" width="0.0304%" height="15" fill="rgb(222,211,4)" fg:x="77740" fg:w="31"/><text x="76.5922%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (31 samples, 0.03%)</title><rect x="76.3422%" y="709" width="0.0304%" height="15" fill="rgb(214,102,34)" fg:x="77740" fg:w="31"/><text x="76.5922%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (47 samples, 0.05%)</title><rect x="76.3726%" y="725" width="0.0462%" height="15" fill="rgb(245,92,5)" fg:x="77771" fg:w="47"/><text x="76.6226%" y="735.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (357 samples, 0.35%)</title><rect x="76.0692%" y="757" width="0.3506%" height="15" fill="rgb(252,72,51)" fg:x="77462" fg:w="357"/><text x="76.3192%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (48 samples, 0.05%)</title><rect x="76.3726%" y="741" width="0.0471%" height="15" fill="rgb(252,208,19)" fg:x="77771" fg:w="48"/><text x="76.6226%" y="751.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (27 samples, 0.03%)</title><rect x="76.4276%" y="709" width="0.0265%" height="15" fill="rgb(211,69,7)" fg:x="77827" fg:w="27"/><text x="76.6776%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (27 samples, 0.03%)</title><rect x="76.4276%" y="693" width="0.0265%" height="15" fill="rgb(211,27,16)" fg:x="77827" fg:w="27"/><text x="76.6776%" y="703.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.03%)</title><rect x="76.4276%" y="677" width="0.0265%" height="15" fill="rgb(219,216,14)" fg:x="77827" fg:w="27"/><text x="76.6776%" y="687.50"></text></g><g><title>__rdl_alloc (27 samples, 0.03%)</title><rect x="76.4276%" y="661" width="0.0265%" height="15" fill="rgb(219,71,8)" fg:x="77827" fg:w="27"/><text x="76.6776%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (27 samples, 0.03%)</title><rect x="76.4276%" y="645" width="0.0265%" height="15" fill="rgb(223,170,53)" fg:x="77827" fg:w="27"/><text x="76.6776%" y="655.50"></text></g><g><title>__GI___libc_malloc (27 samples, 0.03%)</title><rect x="76.4276%" y="629" width="0.0265%" height="15" fill="rgb(246,21,26)" fg:x="77827" fg:w="27"/><text x="76.6776%" y="639.50"></text></g><g><title>_int_malloc (17 samples, 0.02%)</title><rect x="76.4374%" y="613" width="0.0167%" height="15" fill="rgb(248,20,46)" fg:x="77837" fg:w="17"/><text x="76.6874%" y="623.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (29 samples, 0.03%)</title><rect x="76.4266%" y="725" width="0.0285%" height="15" fill="rgb(252,94,11)" fg:x="77826" fg:w="29"/><text x="76.6766%" y="735.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (37 samples, 0.04%)</title><rect x="76.4198%" y="757" width="0.0363%" height="15" fill="rgb(236,163,8)" fg:x="77819" fg:w="37"/><text x="76.6698%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (37 samples, 0.04%)</title><rect x="76.4198%" y="741" width="0.0363%" height="15" fill="rgb(217,221,45)" fg:x="77819" fg:w="37"/><text x="76.6698%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (583 samples, 0.57%)</title><rect x="75.9435%" y="805" width="0.5725%" height="15" fill="rgb(238,38,17)" fg:x="77334" fg:w="583"/><text x="76.1935%" y="815.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (583 samples, 0.57%)</title><rect x="75.9435%" y="789" width="0.5725%" height="15" fill="rgb(242,210,23)" fg:x="77334" fg:w="583"/><text x="76.1935%" y="799.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (581 samples, 0.57%)</title><rect x="75.9454%" y="773" width="0.5706%" height="15" fill="rgb(250,86,53)" fg:x="77336" fg:w="581"/><text x="76.1954%" y="783.50"></text></g><g><title>indexmap::map::core::get_hash::{{closure}} (61 samples, 0.06%)</title><rect x="76.4561%" y="757" width="0.0599%" height="15" fill="rgb(223,168,25)" fg:x="77856" fg:w="61"/><text x="76.7061%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (15 samples, 0.01%)</title><rect x="76.6368%" y="789" width="0.0147%" height="15" fill="rgb(251,189,4)" fg:x="78040" fg:w="15"/><text x="76.8868%" y="799.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (24 samples, 0.02%)</title><rect x="76.6594%" y="789" width="0.0236%" height="15" fill="rgb(245,19,28)" fg:x="78063" fg:w="24"/><text x="76.9094%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (24 samples, 0.02%)</title><rect x="76.6594%" y="773" width="0.0236%" height="15" fill="rgb(207,10,34)" fg:x="78063" fg:w="24"/><text x="76.9094%" y="783.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (24 samples, 0.02%)</title><rect x="76.6594%" y="757" width="0.0236%" height="15" fill="rgb(235,153,31)" fg:x="78063" fg:w="24"/><text x="76.9094%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (251 samples, 0.25%)</title><rect x="76.5160%" y="805" width="0.2465%" height="15" fill="rgb(228,72,37)" fg:x="77917" fg:w="251"/><text x="76.7660%" y="815.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (81 samples, 0.08%)</title><rect x="76.6829%" y="789" width="0.0795%" height="15" fill="rgb(215,15,16)" fg:x="78087" fg:w="81"/><text x="76.9329%" y="799.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (81 samples, 0.08%)</title><rect x="76.6829%" y="773" width="0.0795%" height="15" fill="rgb(250,119,29)" fg:x="78087" fg:w="81"/><text x="76.9329%" y="783.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (979 samples, 0.96%)</title><rect x="75.8757%" y="821" width="0.9614%" height="15" fill="rgb(214,59,1)" fg:x="77265" fg:w="979"/><text x="76.1257%" y="831.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (76 samples, 0.07%)</title><rect x="76.7625%" y="805" width="0.0746%" height="15" fill="rgb(223,109,25)" fg:x="78168" fg:w="76"/><text x="77.0125%" y="815.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (19 samples, 0.02%)</title><rect x="76.8185%" y="789" width="0.0187%" height="15" fill="rgb(230,198,22)" fg:x="78225" fg:w="19"/><text x="77.0685%" y="799.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (19 samples, 0.02%)</title><rect x="76.8185%" y="773" width="0.0187%" height="15" fill="rgb(245,184,46)" fg:x="78225" fg:w="19"/><text x="77.0685%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (100 samples, 0.10%)</title><rect x="76.8489%" y="613" width="0.0982%" height="15" fill="rgb(253,73,16)" fg:x="78256" fg:w="100"/><text x="77.0989%" y="623.50"></text></g><g><title>malloc_consolidate (26 samples, 0.03%)</title><rect x="76.9805%" y="597" width="0.0255%" height="15" fill="rgb(206,94,45)" fg:x="78390" fg:w="26"/><text x="77.2305%" y="607.50"></text></g><g><title>_int_malloc (55 samples, 0.05%)</title><rect x="76.9550%" y="613" width="0.0540%" height="15" fill="rgb(236,83,27)" fg:x="78364" fg:w="55"/><text x="77.2050%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (176 samples, 0.17%)</title><rect x="76.8371%" y="757" width="0.1728%" height="15" fill="rgb(220,196,8)" fg:x="78244" fg:w="176"/><text x="77.0871%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (176 samples, 0.17%)</title><rect x="76.8371%" y="741" width="0.1728%" height="15" fill="rgb(254,185,14)" fg:x="78244" fg:w="176"/><text x="77.0871%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (176 samples, 0.17%)</title><rect x="76.8371%" y="725" width="0.1728%" height="15" fill="rgb(226,50,22)" fg:x="78244" fg:w="176"/><text x="77.0871%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (176 samples, 0.17%)</title><rect x="76.8371%" y="709" width="0.1728%" height="15" fill="rgb(253,147,0)" fg:x="78244" fg:w="176"/><text x="77.0871%" y="719.50"></text></g><g><title>alloc::alloc::realloc (176 samples, 0.17%)</title><rect x="76.8371%" y="693" width="0.1728%" height="15" fill="rgb(252,46,33)" fg:x="78244" fg:w="176"/><text x="77.0871%" y="703.50"></text></g><g><title>__rdl_realloc (176 samples, 0.17%)</title><rect x="76.8371%" y="677" width="0.1728%" height="15" fill="rgb(242,22,54)" fg:x="78244" fg:w="176"/><text x="77.0871%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (176 samples, 0.17%)</title><rect x="76.8371%" y="661" width="0.1728%" height="15" fill="rgb(223,178,32)" fg:x="78244" fg:w="176"/><text x="77.0871%" y="671.50"></text></g><g><title>__GI___libc_realloc (176 samples, 0.17%)</title><rect x="76.8371%" y="645" width="0.1728%" height="15" fill="rgb(214,106,53)" fg:x="78244" fg:w="176"/><text x="77.0871%" y="655.50"></text></g><g><title>_int_realloc (169 samples, 0.17%)</title><rect x="76.8440%" y="629" width="0.1660%" height="15" fill="rgb(232,65,50)" fg:x="78251" fg:w="169"/><text x="77.0940%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (178 samples, 0.17%)</title><rect x="76.8371%" y="805" width="0.1748%" height="15" fill="rgb(231,110,28)" fg:x="78244" fg:w="178"/><text x="77.0871%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (178 samples, 0.17%)</title><rect x="76.8371%" y="789" width="0.1748%" height="15" fill="rgb(216,71,40)" fg:x="78244" fg:w="178"/><text x="77.0871%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (178 samples, 0.17%)</title><rect x="76.8371%" y="773" width="0.1748%" height="15" fill="rgb(229,89,53)" fg:x="78244" fg:w="178"/><text x="77.0871%" y="783.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (1,373 samples, 1.35%)</title><rect x="75.6646%" y="853" width="1.3483%" height="15" fill="rgb(210,124,14)" fg:x="77050" fg:w="1373"/><text x="75.9146%" y="863.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (1,286 samples, 1.26%)</title><rect x="75.7500%" y="837" width="1.2629%" height="15" fill="rgb(236,213,6)" fg:x="77137" fg:w="1286"/><text x="76.0000%" y="847.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (179 samples, 0.18%)</title><rect x="76.8371%" y="821" width="0.1758%" height="15" fill="rgb(228,41,5)" fg:x="78244" fg:w="179"/><text x="77.0871%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (62 samples, 0.06%)</title><rect x="77.0129%" y="821" width="0.0609%" height="15" fill="rgb(221,167,25)" fg:x="78423" fg:w="62"/><text x="77.2629%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (60 samples, 0.06%)</title><rect x="77.0149%" y="805" width="0.0589%" height="15" fill="rgb(228,144,37)" fg:x="78425" fg:w="60"/><text x="77.2649%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (101 samples, 0.10%)</title><rect x="77.0129%" y="837" width="0.0992%" height="15" fill="rgb(227,189,38)" fg:x="78423" fg:w="101"/><text x="77.2629%" y="847.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (39 samples, 0.04%)</title><rect x="77.0738%" y="821" width="0.0383%" height="15" fill="rgb(218,8,2)" fg:x="78485" fg:w="39"/><text x="77.3238%" y="831.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (39 samples, 0.04%)</title><rect x="77.0738%" y="805" width="0.0383%" height="15" fill="rgb(209,61,28)" fg:x="78485" fg:w="39"/><text x="77.3238%" y="815.50"></text></g><g><title>indexmap::map::core::raw::OccupiedEntry&lt;K,V&gt;::get (170 samples, 0.17%)</title><rect x="77.0129%" y="853" width="0.1669%" height="15" fill="rgb(233,140,39)" fg:x="78423" fg:w="170"/><text x="77.2629%" y="863.50"></text></g><g><title>indexmap::map::core::raw::OccupiedEntry&lt;K,V&gt;::index (69 samples, 0.07%)</title><rect x="77.1121%" y="837" width="0.0678%" height="15" fill="rgb(251,66,48)" fg:x="78524" fg:w="69"/><text x="77.3621%" y="847.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::read (69 samples, 0.07%)</title><rect x="77.1121%" y="821" width="0.0678%" height="15" fill="rgb(210,44,45)" fg:x="78524" fg:w="69"/><text x="77.3621%" y="831.50"></text></g><g><title>pathfinding::directed::astar::astar (18 samples, 0.02%)</title><rect x="77.1798%" y="853" width="0.0177%" height="15" fill="rgb(214,136,46)" fg:x="78593" fg:w="18"/><text x="77.4298%" y="863.50"></text></g><g><title>&lt;itertools::sources::Unfold&lt;St,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="77.1985%" y="741" width="0.0157%" height="15" fill="rgb(207,130,50)" fg:x="78612" fg:w="16"/><text x="77.4485%" y="751.50"></text></g><g><title>pathfinding::directed::reverse_path::{{closure}} (16 samples, 0.02%)</title><rect x="77.1985%" y="725" width="0.0157%" height="15" fill="rgb(228,102,49)" fg:x="78612" fg:w="16"/><text x="77.4485%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (16 samples, 0.02%)</title><rect x="77.1985%" y="709" width="0.0157%" height="15" fill="rgb(253,55,1)" fg:x="78612" fg:w="16"/><text x="77.4485%" y="719.50"></text></g><g><title>pathfinding::directed::reverse_path::{{closure}}::{{closure}} (16 samples, 0.02%)</title><rect x="77.1985%" y="693" width="0.0157%" height="15" fill="rgb(238,222,9)" fg:x="78612" fg:w="16"/><text x="77.4485%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (32 samples, 0.03%)</title><rect x="77.1975%" y="757" width="0.0314%" height="15" fill="rgb(246,99,6)" fg:x="78611" fg:w="32"/><text x="77.4475%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="77.2162%" y="741" width="0.0128%" height="15" fill="rgb(219,110,26)" fg:x="78630" fg:w="13"/><text x="77.4662%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (13 samples, 0.01%)</title><rect x="77.2162%" y="725" width="0.0128%" height="15" fill="rgb(239,160,33)" fg:x="78630" fg:w="13"/><text x="77.4662%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.01%)</title><rect x="77.2162%" y="709" width="0.0128%" height="15" fill="rgb(220,202,23)" fg:x="78630" fg:w="13"/><text x="77.4662%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.01%)</title><rect x="77.2162%" y="693" width="0.0128%" height="15" fill="rgb(208,80,26)" fg:x="78630" fg:w="13"/><text x="77.4662%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.01%)</title><rect x="77.2162%" y="677" width="0.0128%" height="15" fill="rgb(243,85,7)" fg:x="78630" fg:w="13"/><text x="77.4662%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.01%)</title><rect x="77.2162%" y="661" width="0.0128%" height="15" fill="rgb(228,77,47)" fg:x="78630" fg:w="13"/><text x="77.4662%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.01%)</title><rect x="77.2162%" y="645" width="0.0128%" height="15" fill="rgb(212,226,8)" fg:x="78630" fg:w="13"/><text x="77.4662%" y="655.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.01%)</title><rect x="77.2162%" y="629" width="0.0128%" height="15" fill="rgb(241,120,54)" fg:x="78630" fg:w="13"/><text x="77.4662%" y="639.50"></text></g><g><title>__rdl_realloc (13 samples, 0.01%)</title><rect x="77.2162%" y="613" width="0.0128%" height="15" fill="rgb(226,80,16)" fg:x="78630" fg:w="13"/><text x="77.4662%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (13 samples, 0.01%)</title><rect x="77.2162%" y="597" width="0.0128%" height="15" fill="rgb(240,76,13)" fg:x="78630" fg:w="13"/><text x="77.4662%" y="607.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.01%)</title><rect x="77.2162%" y="581" width="0.0128%" height="15" fill="rgb(252,74,8)" fg:x="78630" fg:w="13"/><text x="77.4662%" y="591.50"></text></g><g><title>_int_realloc (12 samples, 0.01%)</title><rect x="77.2172%" y="565" width="0.0118%" height="15" fill="rgb(244,155,2)" fg:x="78631" fg:w="12"/><text x="77.4672%" y="575.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (33 samples, 0.03%)</title><rect x="77.1975%" y="773" width="0.0324%" height="15" fill="rgb(215,81,35)" fg:x="78611" fg:w="33"/><text x="77.4475%" y="783.50"></text></g><g><title>engine::engine::actor::ai::pathfinding::local_avoidance (18,118 samples, 17.79%)</title><rect x="59.4397%" y="901" width="17.7922%" height="15" fill="rgb(206,55,2)" fg:x="60528" fg:w="18118"/><text x="59.6897%" y="911.50">engine::engine::actor::ai::p..</text></g><g><title>engine::engine::actor::ai::pathfinding::get_path_around_entities (18,076 samples, 17.75%)</title><rect x="59.4809%" y="885" width="17.7510%" height="15" fill="rgb(231,2,34)" fg:x="60570" fg:w="18076"/><text x="59.7309%" y="895.50">engine::engine::actor::ai::p..</text></g><g><title>pathfinding::directed::astar::astar (18,076 samples, 17.75%)</title><rect x="59.4809%" y="869" width="17.7510%" height="15" fill="rgb(242,176,48)" fg:x="60570" fg:w="18076"/><text x="59.7309%" y="879.50">pathfinding::directed::astar..</text></g><g><title>pathfinding::directed::reverse_path (35 samples, 0.03%)</title><rect x="77.1975%" y="853" width="0.0344%" height="15" fill="rgb(249,31,36)" fg:x="78611" fg:w="35"/><text x="77.4475%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (35 samples, 0.03%)</title><rect x="77.1975%" y="837" width="0.0344%" height="15" fill="rgb(205,18,17)" fg:x="78611" fg:w="35"/><text x="77.4475%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (35 samples, 0.03%)</title><rect x="77.1975%" y="821" width="0.0344%" height="15" fill="rgb(254,130,5)" fg:x="78611" fg:w="35"/><text x="77.4475%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (35 samples, 0.03%)</title><rect x="77.1975%" y="805" width="0.0344%" height="15" fill="rgb(229,42,45)" fg:x="78611" fg:w="35"/><text x="77.4475%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (35 samples, 0.03%)</title><rect x="77.1975%" y="789" width="0.0344%" height="15" fill="rgb(245,95,25)" fg:x="78611" fg:w="35"/><text x="77.4475%" y="799.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (18,145 samples, 17.82%)</title><rect x="59.4367%" y="949" width="17.8187%" height="15" fill="rgb(249,193,38)" fg:x="60525" fg:w="18145"/><text x="59.6867%" y="959.50">&lt;Func as bevy_ecs::system::i..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (18,145 samples, 17.82%)</title><rect x="59.4367%" y="933" width="17.8187%" height="15" fill="rgb(241,140,43)" fg:x="60525" fg:w="18145"/><text x="59.6867%" y="943.50">core::ops::function::impls::..</text></g><g><title>core::ops::function::Fn::call (18,145 samples, 17.82%)</title><rect x="59.4367%" y="917" width="17.8187%" height="15" fill="rgb(245,78,48)" fg:x="60525" fg:w="18145"/><text x="59.6867%" y="927.50">core::ops::function::Fn::call</text></g><g><title>engine::engine::actor::ai::walk_system (24 samples, 0.02%)</title><rect x="77.2319%" y="901" width="0.0236%" height="15" fill="rgb(214,92,39)" fg:x="78646" fg:w="24"/><text x="77.4819%" y="911.50"></text></g><g><title>egui::context::Context::drain_paint_lists (12 samples, 0.01%)</title><rect x="77.2780%" y="869" width="0.0118%" height="15" fill="rgb(211,189,14)" fg:x="78693" fg:w="12"/><text x="77.5280%" y="879.50"></text></g><g><title>egui::layers::GraphicLayers::drain (11 samples, 0.01%)</title><rect x="77.2790%" y="853" width="0.0108%" height="15" fill="rgb(218,7,24)" fg:x="78694" fg:w="11"/><text x="77.5290%" y="863.50"></text></g><g><title>egui::context::Context::end_frame (30 samples, 0.03%)</title><rect x="77.2771%" y="885" width="0.0295%" height="15" fill="rgb(224,200,49)" fg:x="78692" fg:w="30"/><text x="77.5271%" y="895.50"></text></g><g><title>bevy_egui::systems::process_output (63 samples, 0.06%)</title><rect x="77.2555%" y="901" width="0.0619%" height="15" fill="rgb(218,210,14)" fg:x="78670" fg:w="63"/><text x="77.5055%" y="911.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (15 samples, 0.01%)</title><rect x="77.3311%" y="869" width="0.0147%" height="15" fill="rgb(234,142,31)" fg:x="78747" fg:w="15"/><text x="77.5811%" y="879.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (15 samples, 0.01%)</title><rect x="77.3311%" y="853" width="0.0147%" height="15" fill="rgb(227,165,2)" fg:x="78747" fg:w="15"/><text x="77.5811%" y="863.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::is_changed (15 samples, 0.01%)</title><rect x="77.3311%" y="837" width="0.0147%" height="15" fill="rgb(232,44,46)" fg:x="78747" fg:w="15"/><text x="77.5811%" y="847.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (13 samples, 0.01%)</title><rect x="77.3330%" y="821" width="0.0128%" height="15" fill="rgb(236,149,47)" fg:x="78749" fg:w="13"/><text x="77.5830%" y="831.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (28 samples, 0.03%)</title><rect x="77.3222%" y="885" width="0.0275%" height="15" fill="rgb(227,45,31)" fg:x="78738" fg:w="28"/><text x="77.5722%" y="895.50"></text></g><g><title>bevy_render::mesh::mesh::mesh_resource_provider_system (30 samples, 0.03%)</title><rect x="77.3586%" y="885" width="0.0295%" height="15" fill="rgb(240,176,51)" fg:x="78775" fg:w="30"/><text x="77.6086%" y="895.50"></text></g><g><title>bevy_render::mesh::mesh::mesh_resource_provider_system (74 samples, 0.07%)</title><rect x="77.3173%" y="901" width="0.0727%" height="15" fill="rgb(249,146,41)" fg:x="78733" fg:w="74"/><text x="77.5673%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (16 samples, 0.02%)</title><rect x="77.8682%" y="885" width="0.0157%" height="15" fill="rgb(213,208,4)" fg:x="79294" fg:w="16"/><text x="78.1182%" y="895.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (19 samples, 0.02%)</title><rect x="77.8918%" y="853" width="0.0187%" height="15" fill="rgb(245,84,36)" fg:x="79318" fg:w="19"/><text x="78.1418%" y="863.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (28 samples, 0.03%)</title><rect x="77.8859%" y="869" width="0.0275%" height="15" fill="rgb(254,84,18)" fg:x="79312" fg:w="28"/><text x="78.1359%" y="879.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (21 samples, 0.02%)</title><rect x="77.9281%" y="837" width="0.0206%" height="15" fill="rgb(225,38,54)" fg:x="79355" fg:w="21"/><text x="78.1781%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.02%)</title><rect x="77.9566%" y="789" width="0.0167%" height="15" fill="rgb(246,50,30)" fg:x="79384" fg:w="17"/><text x="78.2066%" y="799.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (17 samples, 0.02%)</title><rect x="77.9566%" y="773" width="0.0167%" height="15" fill="rgb(246,148,9)" fg:x="79384" fg:w="17"/><text x="78.2066%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (17 samples, 0.02%)</title><rect x="77.9566%" y="757" width="0.0167%" height="15" fill="rgb(223,75,4)" fg:x="79384" fg:w="17"/><text x="78.2066%" y="767.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (20 samples, 0.02%)</title><rect x="77.9566%" y="805" width="0.0196%" height="15" fill="rgb(239,148,41)" fg:x="79384" fg:w="20"/><text x="78.2066%" y="815.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (55 samples, 0.05%)</title><rect x="77.9232%" y="853" width="0.0540%" height="15" fill="rgb(205,195,3)" fg:x="79350" fg:w="55"/><text x="78.1732%" y="863.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (21 samples, 0.02%)</title><rect x="77.9566%" y="837" width="0.0206%" height="15" fill="rgb(254,161,1)" fg:x="79384" fg:w="21"/><text x="78.2066%" y="847.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (21 samples, 0.02%)</title><rect x="77.9566%" y="821" width="0.0206%" height="15" fill="rgb(211,229,8)" fg:x="79384" fg:w="21"/><text x="78.2066%" y="831.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (67 samples, 0.07%)</title><rect x="77.9134%" y="869" width="0.0658%" height="15" fill="rgb(220,97,9)" fg:x="79340" fg:w="67"/><text x="78.1634%" y="879.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (100 samples, 0.10%)</title><rect x="77.8839%" y="885" width="0.0982%" height="15" fill="rgb(240,218,8)" fg:x="79310" fg:w="100"/><text x="78.1339%" y="895.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (40 samples, 0.04%)</title><rect x="78.0028%" y="869" width="0.0393%" height="15" fill="rgb(250,44,0)" fg:x="79431" fg:w="40"/><text x="78.2528%" y="879.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (40 samples, 0.04%)</title><rect x="78.0028%" y="853" width="0.0393%" height="15" fill="rgb(236,41,53)" fg:x="79431" fg:w="40"/><text x="78.2528%" y="863.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (50 samples, 0.05%)</title><rect x="78.0646%" y="693" width="0.0491%" height="15" fill="rgb(218,227,13)" fg:x="79494" fg:w="50"/><text x="78.3146%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (62 samples, 0.06%)</title><rect x="78.0548%" y="741" width="0.0609%" height="15" fill="rgb(217,94,32)" fg:x="79484" fg:w="62"/><text x="78.3048%" y="751.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (62 samples, 0.06%)</title><rect x="78.0548%" y="725" width="0.0609%" height="15" fill="rgb(213,217,12)" fg:x="79484" fg:w="62"/><text x="78.3048%" y="735.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (62 samples, 0.06%)</title><rect x="78.0548%" y="709" width="0.0609%" height="15" fill="rgb(229,13,46)" fg:x="79484" fg:w="62"/><text x="78.3048%" y="719.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (63 samples, 0.06%)</title><rect x="78.0548%" y="789" width="0.0619%" height="15" fill="rgb(243,139,5)" fg:x="79484" fg:w="63"/><text x="78.3048%" y="799.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (63 samples, 0.06%)</title><rect x="78.0548%" y="773" width="0.0619%" height="15" fill="rgb(249,38,45)" fg:x="79484" fg:w="63"/><text x="78.3048%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (63 samples, 0.06%)</title><rect x="78.0548%" y="757" width="0.0619%" height="15" fill="rgb(216,70,11)" fg:x="79484" fg:w="63"/><text x="78.3048%" y="767.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (65 samples, 0.06%)</title><rect x="78.0538%" y="805" width="0.0638%" height="15" fill="rgb(253,101,25)" fg:x="79483" fg:w="65"/><text x="78.3038%" y="815.50"></text></g><g><title>hashbrown::map::make_hash (82 samples, 0.08%)</title><rect x="78.0430%" y="821" width="0.0805%" height="15" fill="rgb(207,197,30)" fg:x="79472" fg:w="82"/><text x="78.2930%" y="831.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (12 samples, 0.01%)</title><rect x="78.1412%" y="773" width="0.0118%" height="15" fill="rgb(238,87,13)" fg:x="79572" fg:w="12"/><text x="78.3912%" y="783.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.01%)</title><rect x="78.1412%" y="789" width="0.0128%" height="15" fill="rgb(215,155,8)" fg:x="79572" fg:w="13"/><text x="78.3912%" y="799.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (176 samples, 0.17%)</title><rect x="78.0028%" y="885" width="0.1728%" height="15" fill="rgb(239,166,38)" fg:x="79431" fg:w="176"/><text x="78.2528%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (136 samples, 0.13%)</title><rect x="78.0421%" y="869" width="0.1336%" height="15" fill="rgb(240,194,35)" fg:x="79471" fg:w="136"/><text x="78.2921%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (136 samples, 0.13%)</title><rect x="78.0421%" y="853" width="0.1336%" height="15" fill="rgb(219,10,44)" fg:x="79471" fg:w="136"/><text x="78.2921%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (135 samples, 0.13%)</title><rect x="78.0430%" y="837" width="0.1326%" height="15" fill="rgb(251,220,35)" fg:x="79472" fg:w="135"/><text x="78.2930%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (53 samples, 0.05%)</title><rect x="78.1236%" y="821" width="0.0520%" height="15" fill="rgb(218,117,13)" fg:x="79554" fg:w="53"/><text x="78.3736%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (49 samples, 0.05%)</title><rect x="78.1275%" y="805" width="0.0481%" height="15" fill="rgb(221,213,40)" fg:x="79558" fg:w="49"/><text x="78.3775%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (18 samples, 0.02%)</title><rect x="78.1579%" y="789" width="0.0177%" height="15" fill="rgb(251,224,35)" fg:x="79589" fg:w="18"/><text x="78.4079%" y="799.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (18 samples, 0.02%)</title><rect x="78.1579%" y="773" width="0.0177%" height="15" fill="rgb(241,33,39)" fg:x="79589" fg:w="18"/><text x="78.4079%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (18 samples, 0.02%)</title><rect x="78.1579%" y="757" width="0.0177%" height="15" fill="rgb(222,74,17)" fg:x="79589" fg:w="18"/><text x="78.4079%" y="767.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (24 samples, 0.02%)</title><rect x="78.3268%" y="853" width="0.0236%" height="15" fill="rgb(225,103,0)" fg:x="79761" fg:w="24"/><text x="78.5768%" y="863.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (12 samples, 0.01%)</title><rect x="78.3386%" y="837" width="0.0118%" height="15" fill="rgb(240,0,12)" fg:x="79773" fg:w="12"/><text x="78.5886%" y="847.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (12 samples, 0.01%)</title><rect x="78.3386%" y="821" width="0.0118%" height="15" fill="rgb(233,213,37)" fg:x="79773" fg:w="12"/><text x="78.5886%" y="831.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (31 samples, 0.03%)</title><rect x="78.3504%" y="853" width="0.0304%" height="15" fill="rgb(225,84,52)" fg:x="79785" fg:w="31"/><text x="78.6004%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.03%)</title><rect x="78.3808%" y="789" width="0.0344%" height="15" fill="rgb(247,160,51)" fg:x="79816" fg:w="35"/><text x="78.6308%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.03%)</title><rect x="78.3808%" y="773" width="0.0344%" height="15" fill="rgb(244,60,51)" fg:x="79816" fg:w="35"/><text x="78.6308%" y="783.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="78.3808%" y="853" width="0.0363%" height="15" fill="rgb(233,114,7)" fg:x="79816" fg:w="37"/><text x="78.6308%" y="863.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="78.3808%" y="837" width="0.0363%" height="15" fill="rgb(246,136,16)" fg:x="79816" fg:w="37"/><text x="78.6308%" y="847.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="78.3808%" y="821" width="0.0363%" height="15" fill="rgb(243,114,45)" fg:x="79816" fg:w="37"/><text x="78.6308%" y="831.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (37 samples, 0.04%)</title><rect x="78.3808%" y="805" width="0.0363%" height="15" fill="rgb(247,183,43)" fg:x="79816" fg:w="37"/><text x="78.6308%" y="815.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (142 samples, 0.14%)</title><rect x="78.4250%" y="837" width="0.1394%" height="15" fill="rgb(251,210,42)" fg:x="79861" fg:w="142"/><text x="78.6750%" y="847.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (142 samples, 0.14%)</title><rect x="78.4250%" y="821" width="0.1394%" height="15" fill="rgb(221,88,35)" fg:x="79861" fg:w="142"/><text x="78.6750%" y="831.50"></text></g><g><title>ahash::operations::folded_multiply (11 samples, 0.01%)</title><rect x="78.5655%" y="757" width="0.0108%" height="15" fill="rgb(242,21,20)" fg:x="80004" fg:w="11"/><text x="78.8155%" y="767.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="78.5655%" y="773" width="0.0167%" height="15" fill="rgb(233,226,36)" fg:x="80004" fg:w="17"/><text x="78.8155%" y="783.50"></text></g><g><title>ahash::operations::folded_multiply (15 samples, 0.01%)</title><rect x="78.6008%" y="661" width="0.0147%" height="15" fill="rgb(243,189,34)" fg:x="80040" fg:w="15"/><text x="78.8508%" y="671.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (11 samples, 0.01%)</title><rect x="78.6047%" y="645" width="0.0108%" height="15" fill="rgb(207,145,50)" fg:x="80044" fg:w="11"/><text x="78.8547%" y="655.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (17 samples, 0.02%)</title><rect x="78.6155%" y="661" width="0.0167%" height="15" fill="rgb(242,1,50)" fg:x="80055" fg:w="17"/><text x="78.8655%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (53 samples, 0.05%)</title><rect x="78.5841%" y="709" width="0.0520%" height="15" fill="rgb(231,65,32)" fg:x="80023" fg:w="53"/><text x="78.8341%" y="719.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (53 samples, 0.05%)</title><rect x="78.5841%" y="693" width="0.0520%" height="15" fill="rgb(208,68,49)" fg:x="80023" fg:w="53"/><text x="78.8341%" y="703.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (53 samples, 0.05%)</title><rect x="78.5841%" y="677" width="0.0520%" height="15" fill="rgb(253,54,49)" fg:x="80023" fg:w="53"/><text x="78.8341%" y="687.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (55 samples, 0.05%)</title><rect x="78.5841%" y="757" width="0.0540%" height="15" fill="rgb(245,186,24)" fg:x="80023" fg:w="55"/><text x="78.8341%" y="767.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (55 samples, 0.05%)</title><rect x="78.5841%" y="741" width="0.0540%" height="15" fill="rgb(209,2,41)" fg:x="80023" fg:w="55"/><text x="78.8341%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (55 samples, 0.05%)</title><rect x="78.5841%" y="725" width="0.0540%" height="15" fill="rgb(242,208,54)" fg:x="80023" fg:w="55"/><text x="78.8341%" y="735.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (56 samples, 0.05%)</title><rect x="78.5841%" y="773" width="0.0550%" height="15" fill="rgb(225,9,51)" fg:x="80023" fg:w="56"/><text x="78.8341%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (78 samples, 0.08%)</title><rect x="78.5655%" y="789" width="0.0766%" height="15" fill="rgb(207,207,25)" fg:x="80004" fg:w="78"/><text x="78.8155%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (12 samples, 0.01%)</title><rect x="78.6637%" y="709" width="0.0118%" height="15" fill="rgb(253,96,18)" fg:x="80104" fg:w="12"/><text x="78.9137%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="78.6588%" y="757" width="0.0177%" height="15" fill="rgb(252,215,20)" fg:x="80099" fg:w="18"/><text x="78.9088%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="78.6588%" y="741" width="0.0177%" height="15" fill="rgb(245,227,26)" fg:x="80099" fg:w="18"/><text x="78.9088%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="78.6617%" y="725" width="0.0147%" height="15" fill="rgb(241,208,0)" fg:x="80102" fg:w="15"/><text x="78.9117%" y="735.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (79 samples, 0.08%)</title><rect x="78.6764%" y="741" width="0.0776%" height="15" fill="rgb(224,130,10)" fg:x="80117" fg:w="79"/><text x="78.9264%" y="751.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (98 samples, 0.10%)</title><rect x="78.6764%" y="757" width="0.0962%" height="15" fill="rgb(237,29,0)" fg:x="80117" fg:w="98"/><text x="78.9264%" y="767.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (19 samples, 0.02%)</title><rect x="78.7540%" y="741" width="0.0187%" height="15" fill="rgb(219,27,41)" fg:x="80196" fg:w="19"/><text x="79.0040%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (12 samples, 0.01%)</title><rect x="78.7854%" y="709" width="0.0118%" height="15" fill="rgb(245,101,19)" fg:x="80228" fg:w="12"/><text x="79.0354%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.01%)</title><rect x="78.7854%" y="693" width="0.0118%" height="15" fill="rgb(243,44,37)" fg:x="80228" fg:w="12"/><text x="79.0354%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="78.7854%" y="677" width="0.0118%" height="15" fill="rgb(228,213,43)" fg:x="80228" fg:w="12"/><text x="79.0354%" y="687.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (383 samples, 0.38%)</title><rect x="78.4250%" y="853" width="0.3761%" height="15" fill="rgb(219,163,21)" fg:x="79861" fg:w="383"/><text x="78.6750%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (241 samples, 0.24%)</title><rect x="78.5645%" y="837" width="0.2367%" height="15" fill="rgb(234,86,24)" fg:x="80003" fg:w="241"/><text x="78.8145%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (241 samples, 0.24%)</title><rect x="78.5645%" y="821" width="0.2367%" height="15" fill="rgb(225,10,24)" fg:x="80003" fg:w="241"/><text x="78.8145%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (240 samples, 0.24%)</title><rect x="78.5655%" y="805" width="0.2357%" height="15" fill="rgb(218,109,7)" fg:x="80004" fg:w="240"/><text x="78.8155%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (162 samples, 0.16%)</title><rect x="78.6421%" y="789" width="0.1591%" height="15" fill="rgb(210,20,26)" fg:x="80082" fg:w="162"/><text x="78.8921%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (157 samples, 0.15%)</title><rect x="78.6470%" y="773" width="0.1542%" height="15" fill="rgb(216,18,1)" fg:x="80087" fg:w="157"/><text x="78.8970%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (22 samples, 0.02%)</title><rect x="78.7795%" y="757" width="0.0216%" height="15" fill="rgb(206,163,23)" fg:x="80222" fg:w="22"/><text x="79.0295%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (22 samples, 0.02%)</title><rect x="78.7795%" y="741" width="0.0216%" height="15" fill="rgb(229,150,31)" fg:x="80222" fg:w="22"/><text x="79.0295%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (22 samples, 0.02%)</title><rect x="78.7795%" y="725" width="0.0216%" height="15" fill="rgb(231,10,5)" fg:x="80222" fg:w="22"/><text x="79.0295%" y="735.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (189 samples, 0.19%)</title><rect x="78.8012%" y="837" width="0.1856%" height="15" fill="rgb(250,40,50)" fg:x="80244" fg:w="189"/><text x="79.0512%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (171 samples, 0.17%)</title><rect x="78.8188%" y="821" width="0.1679%" height="15" fill="rgb(217,119,7)" fg:x="80262" fg:w="171"/><text x="79.0688%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (171 samples, 0.17%)</title><rect x="78.8188%" y="805" width="0.1679%" height="15" fill="rgb(245,214,40)" fg:x="80262" fg:w="171"/><text x="79.0688%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_add (171 samples, 0.17%)</title><rect x="78.8188%" y="789" width="0.1679%" height="15" fill="rgb(216,187,1)" fg:x="80262" fg:w="171"/><text x="79.0688%" y="799.50"></text></g><g><title>bevy_render::draw::Draw::set_bind_group (198 samples, 0.19%)</title><rect x="78.8012%" y="853" width="0.1944%" height="15" fill="rgb(237,146,21)" fg:x="80244" fg:w="198"/><text x="79.0512%" y="863.50"></text></g><g><title>ahash::operations::folded_multiply (17 samples, 0.02%)</title><rect x="79.0074%" y="757" width="0.0167%" height="15" fill="rgb(210,174,47)" fg:x="80454" fg:w="17"/><text x="79.2574%" y="767.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (22 samples, 0.02%)</title><rect x="79.0074%" y="773" width="0.0216%" height="15" fill="rgb(218,111,39)" fg:x="80454" fg:w="22"/><text x="79.2574%" y="783.50"></text></g><g><title>ahash::operations::folded_multiply (17 samples, 0.02%)</title><rect x="79.2578%" y="645" width="0.0167%" height="15" fill="rgb(224,95,19)" fg:x="80709" fg:w="17"/><text x="79.5078%" y="655.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (15 samples, 0.01%)</title><rect x="79.2598%" y="629" width="0.0147%" height="15" fill="rgb(234,15,38)" fg:x="80711" fg:w="15"/><text x="79.5098%" y="639.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (29 samples, 0.03%)</title><rect x="79.2480%" y="661" width="0.0285%" height="15" fill="rgb(246,56,12)" fg:x="80699" fg:w="29"/><text x="79.4980%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (40 samples, 0.04%)</title><rect x="79.2411%" y="693" width="0.0393%" height="15" fill="rgb(247,16,17)" fg:x="80692" fg:w="40"/><text x="79.4911%" y="703.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (40 samples, 0.04%)</title><rect x="79.2411%" y="677" width="0.0393%" height="15" fill="rgb(215,151,11)" fg:x="80692" fg:w="40"/><text x="79.4911%" y="687.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (45 samples, 0.04%)</title><rect x="79.2411%" y="741" width="0.0442%" height="15" fill="rgb(225,16,24)" fg:x="80692" fg:w="45"/><text x="79.4911%" y="751.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (45 samples, 0.04%)</title><rect x="79.2411%" y="725" width="0.0442%" height="15" fill="rgb(217,117,5)" fg:x="80692" fg:w="45"/><text x="79.4911%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (45 samples, 0.04%)</title><rect x="79.2411%" y="709" width="0.0442%" height="15" fill="rgb(246,187,53)" fg:x="80692" fg:w="45"/><text x="79.4911%" y="719.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (261 samples, 0.26%)</title><rect x="79.0309%" y="757" width="0.2563%" height="15" fill="rgb(241,71,40)" fg:x="80478" fg:w="261"/><text x="79.2809%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (305 samples, 0.30%)</title><rect x="79.0074%" y="789" width="0.2995%" height="15" fill="rgb(231,67,39)" fg:x="80454" fg:w="305"/><text x="79.2574%" y="799.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (281 samples, 0.28%)</title><rect x="79.0309%" y="773" width="0.2759%" height="15" fill="rgb(222,120,24)" fg:x="80478" fg:w="281"/><text x="79.2809%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (20 samples, 0.02%)</title><rect x="79.2873%" y="757" width="0.0196%" height="15" fill="rgb(248,3,3)" fg:x="80739" fg:w="20"/><text x="79.5373%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (18 samples, 0.02%)</title><rect x="79.3373%" y="725" width="0.0177%" height="15" fill="rgb(228,218,5)" fg:x="80790" fg:w="18"/><text x="79.5873%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="79.3314%" y="757" width="0.0285%" height="15" fill="rgb(212,202,43)" fg:x="80784" fg:w="29"/><text x="79.5814%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.03%)</title><rect x="79.3314%" y="741" width="0.0285%" height="15" fill="rgb(235,183,2)" fg:x="80784" fg:w="29"/><text x="79.5814%" y="751.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (328 samples, 0.32%)</title><rect x="79.3599%" y="725" width="0.3221%" height="15" fill="rgb(230,165,10)" fg:x="80813" fg:w="328"/><text x="79.6099%" y="735.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (19 samples, 0.02%)</title><rect x="79.6634%" y="709" width="0.0187%" height="15" fill="rgb(219,54,40)" fg:x="81122" fg:w="19"/><text x="79.9134%" y="719.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (19 samples, 0.02%)</title><rect x="79.6634%" y="693" width="0.0187%" height="15" fill="rgb(244,73,9)" fg:x="81122" fg:w="19"/><text x="79.9134%" y="703.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (19 samples, 0.02%)</title><rect x="79.6634%" y="677" width="0.0187%" height="15" fill="rgb(212,32,45)" fg:x="81122" fg:w="19"/><text x="79.9134%" y="687.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (361 samples, 0.35%)</title><rect x="79.3599%" y="757" width="0.3545%" height="15" fill="rgb(205,58,31)" fg:x="80813" fg:w="361"/><text x="79.6099%" y="767.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (361 samples, 0.35%)</title><rect x="79.3599%" y="741" width="0.3545%" height="15" fill="rgb(250,120,43)" fg:x="80813" fg:w="361"/><text x="79.6099%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (33 samples, 0.03%)</title><rect x="79.6820%" y="725" width="0.0324%" height="15" fill="rgb(235,13,10)" fg:x="81141" fg:w="33"/><text x="79.9320%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (13 samples, 0.01%)</title><rect x="79.7144%" y="757" width="0.0128%" height="15" fill="rgb(232,219,31)" fg:x="81174" fg:w="13"/><text x="79.9644%" y="767.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (13 samples, 0.01%)</title><rect x="79.7144%" y="741" width="0.0128%" height="15" fill="rgb(218,157,51)" fg:x="81174" fg:w="13"/><text x="79.9644%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (13 samples, 0.01%)</title><rect x="79.7144%" y="725" width="0.0128%" height="15" fill="rgb(211,91,52)" fg:x="81174" fg:w="13"/><text x="79.9644%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (13 samples, 0.01%)</title><rect x="79.7144%" y="709" width="0.0128%" height="15" fill="rgb(240,173,1)" fg:x="81174" fg:w="13"/><text x="79.9644%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (32 samples, 0.03%)</title><rect x="79.7360%" y="709" width="0.0314%" height="15" fill="rgb(248,20,47)" fg:x="81196" fg:w="32"/><text x="79.9860%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (32 samples, 0.03%)</title><rect x="79.7360%" y="693" width="0.0314%" height="15" fill="rgb(217,221,40)" fg:x="81196" fg:w="32"/><text x="79.9860%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32 samples, 0.03%)</title><rect x="79.7360%" y="677" width="0.0314%" height="15" fill="rgb(226,149,51)" fg:x="81196" fg:w="32"/><text x="79.9860%" y="687.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_mut_untyped (782 samples, 0.77%)</title><rect x="79.0025%" y="853" width="0.7679%" height="15" fill="rgb(252,193,7)" fg:x="80449" fg:w="782"/><text x="79.2525%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (782 samples, 0.77%)</title><rect x="79.0025%" y="837" width="0.7679%" height="15" fill="rgb(205,123,0)" fg:x="80449" fg:w="782"/><text x="79.2525%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (782 samples, 0.77%)</title><rect x="79.0025%" y="821" width="0.7679%" height="15" fill="rgb(233,173,25)" fg:x="80449" fg:w="782"/><text x="79.2525%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (777 samples, 0.76%)</title><rect x="79.0074%" y="805" width="0.7630%" height="15" fill="rgb(216,63,32)" fg:x="80454" fg:w="777"/><text x="79.2574%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (472 samples, 0.46%)</title><rect x="79.3069%" y="789" width="0.4635%" height="15" fill="rgb(209,56,45)" fg:x="80759" fg:w="472"/><text x="79.5569%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (467 samples, 0.46%)</title><rect x="79.3118%" y="773" width="0.4586%" height="15" fill="rgb(226,111,49)" fg:x="80764" fg:w="467"/><text x="79.5618%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (44 samples, 0.04%)</title><rect x="79.7272%" y="757" width="0.0432%" height="15" fill="rgb(244,181,21)" fg:x="81187" fg:w="44"/><text x="79.9772%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (44 samples, 0.04%)</title><rect x="79.7272%" y="741" width="0.0432%" height="15" fill="rgb(222,126,15)" fg:x="81187" fg:w="44"/><text x="79.9772%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (44 samples, 0.04%)</title><rect x="79.7272%" y="725" width="0.0432%" height="15" fill="rgb(222,95,17)" fg:x="81187" fg:w="44"/><text x="79.9772%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (12 samples, 0.01%)</title><rect x="79.7704%" y="741" width="0.0118%" height="15" fill="rgb(254,46,5)" fg:x="81231" fg:w="12"/><text x="80.0204%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (12 samples, 0.01%)</title><rect x="79.7704%" y="725" width="0.0118%" height="15" fill="rgb(236,216,35)" fg:x="81231" fg:w="12"/><text x="80.0204%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (125 samples, 0.12%)</title><rect x="79.7822%" y="741" width="0.1228%" height="15" fill="rgb(217,187,26)" fg:x="81243" fg:w="125"/><text x="80.0322%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (125 samples, 0.12%)</title><rect x="79.7822%" y="725" width="0.1228%" height="15" fill="rgb(207,192,25)" fg:x="81243" fg:w="125"/><text x="80.0322%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (143 samples, 0.14%)</title><rect x="79.7704%" y="757" width="0.1404%" height="15" fill="rgb(253,135,27)" fg:x="81231" fg:w="143"/><text x="80.0204%" y="767.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::iter_assets (163 samples, 0.16%)</title><rect x="79.7704%" y="853" width="0.1601%" height="15" fill="rgb(211,122,29)" fg:x="81231" fg:w="163"/><text x="80.0204%" y="863.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (163 samples, 0.16%)</title><rect x="79.7704%" y="837" width="0.1601%" height="15" fill="rgb(233,162,40)" fg:x="81231" fg:w="163"/><text x="80.0204%" y="847.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (163 samples, 0.16%)</title><rect x="79.7704%" y="821" width="0.1601%" height="15" fill="rgb(222,184,47)" fg:x="81231" fg:w="163"/><text x="80.0204%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (163 samples, 0.16%)</title><rect x="79.7704%" y="805" width="0.1601%" height="15" fill="rgb(249,99,23)" fg:x="81231" fg:w="163"/><text x="80.0204%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (163 samples, 0.16%)</title><rect x="79.7704%" y="789" width="0.1601%" height="15" fill="rgb(214,60,12)" fg:x="81231" fg:w="163"/><text x="80.0204%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (163 samples, 0.16%)</title><rect x="79.7704%" y="773" width="0.1601%" height="15" fill="rgb(250,229,36)" fg:x="81231" fg:w="163"/><text x="80.0204%" y="783.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (12 samples, 0.01%)</title><rect x="79.9187%" y="757" width="0.0118%" height="15" fill="rgb(232,195,10)" fg:x="81382" fg:w="12"/><text x="80.1687%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.01%)</title><rect x="79.9707%" y="773" width="0.0147%" height="15" fill="rgb(205,213,31)" fg:x="81435" fg:w="15"/><text x="80.2207%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="80.1966%" y="741" width="0.0128%" height="15" fill="rgb(237,43,8)" fg:x="81665" fg:w="13"/><text x="80.4466%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (195 samples, 0.19%)</title><rect x="80.2153%" y="693" width="0.1915%" height="15" fill="rgb(216,208,3)" fg:x="81684" fg:w="195"/><text x="80.4653%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (195 samples, 0.19%)</title><rect x="80.2153%" y="677" width="0.1915%" height="15" fill="rgb(228,179,44)" fg:x="81684" fg:w="195"/><text x="80.4653%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (195 samples, 0.19%)</title><rect x="80.2153%" y="661" width="0.1915%" height="15" fill="rgb(230,192,27)" fg:x="81684" fg:w="195"/><text x="80.4653%" y="671.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get_bind_group (451 samples, 0.44%)</title><rect x="79.9707%" y="837" width="0.4429%" height="15" fill="rgb(251,30,38)" fg:x="81435" fg:w="451"/><text x="80.2207%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (451 samples, 0.44%)</title><rect x="79.9707%" y="821" width="0.4429%" height="15" fill="rgb(246,55,52)" fg:x="81435" fg:w="451"/><text x="80.2207%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (451 samples, 0.44%)</title><rect x="79.9707%" y="805" width="0.4429%" height="15" fill="rgb(249,79,26)" fg:x="81435" fg:w="451"/><text x="80.2207%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (451 samples, 0.44%)</title><rect x="79.9707%" y="789" width="0.4429%" height="15" fill="rgb(220,202,16)" fg:x="81435" fg:w="451"/><text x="80.2207%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (436 samples, 0.43%)</title><rect x="79.9855%" y="773" width="0.4282%" height="15" fill="rgb(250,170,23)" fg:x="81450" fg:w="436"/><text x="80.2355%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (434 samples, 0.43%)</title><rect x="79.9874%" y="757" width="0.4262%" height="15" fill="rgb(230,7,37)" fg:x="81452" fg:w="434"/><text x="80.2374%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (206 samples, 0.20%)</title><rect x="80.2113%" y="741" width="0.2023%" height="15" fill="rgb(213,71,1)" fg:x="81680" fg:w="206"/><text x="80.4613%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (206 samples, 0.20%)</title><rect x="80.2113%" y="725" width="0.2023%" height="15" fill="rgb(227,87,39)" fg:x="81680" fg:w="206"/><text x="80.4613%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (206 samples, 0.20%)</title><rect x="80.2113%" y="709" width="0.2023%" height="15" fill="rgb(210,41,29)" fg:x="81680" fg:w="206"/><text x="80.4613%" y="719.50"></text></g><g><title>ahash::operations::folded_multiply (50 samples, 0.05%)</title><rect x="80.4431%" y="741" width="0.0491%" height="15" fill="rgb(206,191,31)" fg:x="81916" fg:w="50"/><text x="80.6931%" y="751.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (32 samples, 0.03%)</title><rect x="80.4608%" y="725" width="0.0314%" height="15" fill="rgb(247,75,54)" fg:x="81934" fg:w="32"/><text x="80.7108%" y="735.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (74 samples, 0.07%)</title><rect x="80.4431%" y="757" width="0.0727%" height="15" fill="rgb(208,54,50)" fg:x="81916" fg:w="74"/><text x="80.6931%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (24 samples, 0.02%)</title><rect x="80.4922%" y="741" width="0.0236%" height="15" fill="rgb(214,90,37)" fg:x="81966" fg:w="24"/><text x="80.7422%" y="751.50"></text></g><g><title>&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId as core::hash::Hash&gt;::hash (57 samples, 0.06%)</title><rect x="80.5158%" y="757" width="0.0560%" height="15" fill="rgb(220,132,6)" fg:x="81990" fg:w="57"/><text x="80.7658%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (44 samples, 0.04%)</title><rect x="80.5285%" y="741" width="0.0432%" height="15" fill="rgb(213,167,7)" fg:x="82003" fg:w="44"/><text x="80.7785%" y="751.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (44 samples, 0.04%)</title><rect x="80.5285%" y="725" width="0.0432%" height="15" fill="rgb(243,36,27)" fg:x="82003" fg:w="44"/><text x="80.7785%" y="735.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (44 samples, 0.04%)</title><rect x="80.5285%" y="709" width="0.0432%" height="15" fill="rgb(235,147,12)" fg:x="82003" fg:w="44"/><text x="80.7785%" y="719.50"></text></g><g><title>ahash::operations::folded_multiply (23 samples, 0.02%)</title><rect x="80.5491%" y="693" width="0.0226%" height="15" fill="rgb(212,198,44)" fg:x="82024" fg:w="23"/><text x="80.7991%" y="703.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (21 samples, 0.02%)</title><rect x="80.5511%" y="677" width="0.0206%" height="15" fill="rgb(218,68,50)" fg:x="82026" fg:w="21"/><text x="80.8011%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (325 samples, 0.32%)</title><rect x="80.4431%" y="773" width="0.3192%" height="15" fill="rgb(224,79,48)" fg:x="81916" fg:w="325"/><text x="80.6931%" y="783.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (194 samples, 0.19%)</title><rect x="80.5717%" y="757" width="0.1905%" height="15" fill="rgb(213,191,50)" fg:x="82047" fg:w="194"/><text x="80.8217%" y="767.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (35 samples, 0.03%)</title><rect x="80.7622%" y="757" width="0.0344%" height="15" fill="rgb(254,146,10)" fg:x="82241" fg:w="35"/><text x="81.0122%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (64 samples, 0.06%)</title><rect x="81.2042%" y="725" width="0.0628%" height="15" fill="rgb(215,175,11)" fg:x="82691" fg:w="64"/><text x="81.4542%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.03%)</title><rect x="81.2356%" y="709" width="0.0314%" height="15" fill="rgb(207,49,7)" fg:x="82723" fg:w="32"/><text x="81.4856%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (106 samples, 0.10%)</title><rect x="81.2042%" y="741" width="0.1041%" height="15" fill="rgb(234,144,29)" fg:x="82691" fg:w="106"/><text x="81.4542%" y="751.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (42 samples, 0.04%)</title><rect x="81.2670%" y="725" width="0.0412%" height="15" fill="rgb(213,222,48)" fg:x="82755" fg:w="42"/><text x="81.5170%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (42 samples, 0.04%)</title><rect x="81.2670%" y="709" width="0.0412%" height="15" fill="rgb(222,8,6)" fg:x="82755" fg:w="42"/><text x="81.5170%" y="719.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (36 samples, 0.04%)</title><rect x="81.2729%" y="693" width="0.0354%" height="15" fill="rgb(221,114,49)" fg:x="82761" fg:w="36"/><text x="81.5229%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (11 samples, 0.01%)</title><rect x="81.3161%" y="693" width="0.0108%" height="15" fill="rgb(250,140,42)" fg:x="82805" fg:w="11"/><text x="81.5661%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (759 samples, 0.75%)</title><rect x="81.3367%" y="693" width="0.7454%" height="15" fill="rgb(250,150,27)" fg:x="82826" fg:w="759"/><text x="81.5867%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (759 samples, 0.75%)</title><rect x="81.3367%" y="677" width="0.7454%" height="15" fill="rgb(252,159,3)" fg:x="82826" fg:w="759"/><text x="81.5867%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (759 samples, 0.75%)</title><rect x="81.3367%" y="661" width="0.7454%" height="15" fill="rgb(241,182,3)" fg:x="82826" fg:w="759"/><text x="81.5867%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,688 samples, 1.66%)</title><rect x="80.4431%" y="821" width="1.6576%" height="15" fill="rgb(236,3,9)" fg:x="81916" fg:w="1688"/><text x="80.6931%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,688 samples, 1.66%)</title><rect x="80.4431%" y="805" width="1.6576%" height="15" fill="rgb(223,227,51)" fg:x="81916" fg:w="1688"/><text x="80.6931%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,688 samples, 1.66%)</title><rect x="80.4431%" y="789" width="1.6576%" height="15" fill="rgb(232,133,30)" fg:x="81916" fg:w="1688"/><text x="80.6931%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,363 samples, 1.34%)</title><rect x="80.7622%" y="773" width="1.3385%" height="15" fill="rgb(209,93,27)" fg:x="82241" fg:w="1363"/><text x="81.0122%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,328 samples, 1.30%)</title><rect x="80.7966%" y="757" width="1.3041%" height="15" fill="rgb(208,108,34)" fg:x="82276" fg:w="1328"/><text x="81.0466%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (807 samples, 0.79%)</title><rect x="81.3082%" y="741" width="0.7925%" height="15" fill="rgb(215,189,13)" fg:x="82797" fg:w="807"/><text x="81.5582%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (807 samples, 0.79%)</title><rect x="81.3082%" y="725" width="0.7925%" height="15" fill="rgb(206,88,23)" fg:x="82797" fg:w="807"/><text x="81.5582%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (807 samples, 0.79%)</title><rect x="81.3082%" y="709" width="0.7925%" height="15" fill="rgb(240,173,0)" fg:x="82797" fg:w="807"/><text x="81.5582%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (19 samples, 0.02%)</title><rect x="82.0821%" y="693" width="0.0187%" height="15" fill="rgb(223,106,52)" fg:x="83585" fg:w="19"/><text x="82.3321%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (19 samples, 0.02%)</title><rect x="82.0821%" y="677" width="0.0187%" height="15" fill="rgb(206,130,16)" fg:x="83585" fg:w="19"/><text x="82.3321%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (19 samples, 0.02%)</title><rect x="82.0821%" y="661" width="0.0187%" height="15" fill="rgb(220,54,25)" fg:x="83585" fg:w="19"/><text x="82.3321%" y="671.50"></text></g><g><title>core::core_arch::simd::i8x16::new (19 samples, 0.02%)</title><rect x="82.0821%" y="645" width="0.0187%" height="15" fill="rgb(210,4,38)" fg:x="83585" fg:w="19"/><text x="82.3321%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (11 samples, 0.01%)</title><rect x="82.1007%" y="741" width="0.0108%" height="15" fill="rgb(238,94,39)" fg:x="83604" fg:w="11"/><text x="82.3507%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (17 samples, 0.02%)</title><rect x="82.1007%" y="757" width="0.0167%" height="15" fill="rgb(234,124,34)" fg:x="83604" fg:w="17"/><text x="82.3507%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (241 samples, 0.24%)</title><rect x="82.1469%" y="677" width="0.2367%" height="15" fill="rgb(221,91,40)" fg:x="83651" fg:w="241"/><text x="82.3969%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (241 samples, 0.24%)</title><rect x="82.1469%" y="661" width="0.2367%" height="15" fill="rgb(246,53,28)" fg:x="83651" fg:w="241"/><text x="82.3969%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (241 samples, 0.24%)</title><rect x="82.1469%" y="645" width="0.2367%" height="15" fill="rgb(229,109,7)" fg:x="83651" fg:w="241"/><text x="82.3969%" y="655.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (2,504 samples, 2.46%)</title><rect x="79.9305%" y="853" width="2.4590%" height="15" fill="rgb(249,117,8)" fg:x="81394" fg:w="2504"/><text x="80.1805%" y="863.50">be..</text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group_status (2,012 samples, 1.98%)</title><rect x="80.4136%" y="837" width="1.9758%" height="15" fill="rgb(210,181,1)" fg:x="81886" fg:w="2012"/><text x="80.6636%" y="847.50">b..</text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (294 samples, 0.29%)</title><rect x="82.1007%" y="821" width="0.2887%" height="15" fill="rgb(211,66,1)" fg:x="83604" fg:w="294"/><text x="82.3507%" y="831.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (294 samples, 0.29%)</title><rect x="82.1007%" y="805" width="0.2887%" height="15" fill="rgb(221,90,14)" fg:x="83604" fg:w="294"/><text x="82.3507%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (294 samples, 0.29%)</title><rect x="82.1007%" y="789" width="0.2887%" height="15" fill="rgb(219,222,44)" fg:x="83604" fg:w="294"/><text x="82.3507%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (294 samples, 0.29%)</title><rect x="82.1007%" y="773" width="0.2887%" height="15" fill="rgb(246,34,33)" fg:x="83604" fg:w="294"/><text x="82.3507%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (277 samples, 0.27%)</title><rect x="82.1174%" y="757" width="0.2720%" height="15" fill="rgb(227,135,41)" fg:x="83621" fg:w="277"/><text x="82.3674%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (276 samples, 0.27%)</title><rect x="82.1184%" y="741" width="0.2710%" height="15" fill="rgb(226,15,14)" fg:x="83622" fg:w="276"/><text x="82.3684%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (254 samples, 0.25%)</title><rect x="82.1400%" y="725" width="0.2494%" height="15" fill="rgb(236,148,47)" fg:x="83644" fg:w="254"/><text x="82.3900%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (254 samples, 0.25%)</title><rect x="82.1400%" y="709" width="0.2494%" height="15" fill="rgb(233,162,52)" fg:x="83644" fg:w="254"/><text x="82.3900%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (254 samples, 0.25%)</title><rect x="82.1400%" y="693" width="0.2494%" height="15" fill="rgb(244,35,28)" fg:x="83644" fg:w="254"/><text x="82.3900%" y="703.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (4,285 samples, 4.21%)</title><rect x="78.1825%" y="885" width="4.2080%" height="15" fill="rgb(205,121,10)" fg:x="79614" fg:w="4285"/><text x="78.4325%" y="895.50">bevy_..</text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (4,277 samples, 4.20%)</title><rect x="78.1903%" y="869" width="4.2001%" height="15" fill="rgb(250,58,18)" fg:x="79622" fg:w="4277"/><text x="78.4403%" y="879.50">bevy_..</text></g><g><title>bevy_render::draw::Draw::set_pipeline (152 samples, 0.15%)</title><rect x="82.4130%" y="869" width="0.1493%" height="15" fill="rgb(216,37,13)" fg:x="83922" fg:w="152"/><text x="82.6630%" y="879.50"></text></g><g><title>bevy_render::draw::Draw::render_command (145 samples, 0.14%)</title><rect x="82.4199%" y="853" width="0.1424%" height="15" fill="rgb(221,215,42)" fg:x="83929" fg:w="145"/><text x="82.6699%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (74 samples, 0.07%)</title><rect x="82.4896%" y="837" width="0.0727%" height="15" fill="rgb(217,214,19)" fg:x="84000" fg:w="74"/><text x="82.7396%" y="847.50"></text></g><g><title>core::ptr::write (57 samples, 0.06%)</title><rect x="82.5063%" y="821" width="0.0560%" height="15" fill="rgb(233,139,13)" fg:x="84017" fg:w="57"/><text x="82.7563%" y="831.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (12 samples, 0.01%)</title><rect x="82.6212%" y="725" width="0.0118%" height="15" fill="rgb(247,168,23)" fg:x="84134" fg:w="12"/><text x="82.8712%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (12 samples, 0.01%)</title><rect x="82.6212%" y="709" width="0.0118%" height="15" fill="rgb(207,202,1)" fg:x="84134" fg:w="12"/><text x="82.8712%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (12 samples, 0.01%)</title><rect x="82.6212%" y="693" width="0.0118%" height="15" fill="rgb(220,155,48)" fg:x="84134" fg:w="12"/><text x="82.8712%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (12 samples, 0.01%)</title><rect x="82.6212%" y="677" width="0.0118%" height="15" fill="rgb(250,43,26)" fg:x="84134" fg:w="12"/><text x="82.8712%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (12 samples, 0.01%)</title><rect x="82.6212%" y="661" width="0.0118%" height="15" fill="rgb(212,190,23)" fg:x="84134" fg:w="12"/><text x="82.8712%" y="671.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::ShaderSpecialization as core::cmp::PartialEq&gt;::eq (64 samples, 0.06%)</title><rect x="82.5751%" y="757" width="0.0628%" height="15" fill="rgb(216,39,24)" fg:x="84087" fg:w="64"/><text x="82.8251%" y="767.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (64 samples, 0.06%)</title><rect x="82.5751%" y="741" width="0.0628%" height="15" fill="rgb(252,113,16)" fg:x="84087" fg:w="64"/><text x="82.8251%" y="751.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (20 samples, 0.02%)</title><rect x="82.6428%" y="741" width="0.0196%" height="15" fill="rgb(208,113,19)" fg:x="84156" fg:w="20"/><text x="82.8928%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="82.6831%" y="661" width="0.0118%" height="15" fill="rgb(234,107,25)" fg:x="84197" fg:w="12"/><text x="82.9331%" y="671.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (12 samples, 0.01%)</title><rect x="82.6831%" y="645" width="0.0118%" height="15" fill="rgb(234,217,51)" fg:x="84197" fg:w="12"/><text x="82.9331%" y="655.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (217 samples, 0.21%)</title><rect x="82.7165%" y="581" width="0.2131%" height="15" fill="rgb(251,29,42)" fg:x="84231" fg:w="217"/><text x="82.9665%" y="591.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (352 samples, 0.35%)</title><rect x="82.7165%" y="597" width="0.3457%" height="15" fill="rgb(221,62,51)" fg:x="84231" fg:w="352"/><text x="82.9665%" y="607.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (133 samples, 0.13%)</title><rect x="82.9315%" y="581" width="0.1306%" height="15" fill="rgb(240,192,43)" fg:x="84450" fg:w="133"/><text x="83.1815%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (133 samples, 0.13%)</title><rect x="82.9315%" y="565" width="0.1306%" height="15" fill="rgb(224,157,47)" fg:x="84450" fg:w="133"/><text x="83.1815%" y="575.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (133 samples, 0.13%)</title><rect x="82.9315%" y="549" width="0.1306%" height="15" fill="rgb(226,84,45)" fg:x="84450" fg:w="133"/><text x="83.1815%" y="559.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (133 samples, 0.13%)</title><rect x="82.9315%" y="533" width="0.1306%" height="15" fill="rgb(208,207,23)" fg:x="84450" fg:w="133"/><text x="83.1815%" y="543.50"></text></g><g><title>__memcmp_avx2_movbe (64 samples, 0.06%)</title><rect x="82.9993%" y="517" width="0.0628%" height="15" fill="rgb(253,34,51)" fg:x="84519" fg:w="64"/><text x="83.2493%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (405 samples, 0.40%)</title><rect x="82.6772%" y="677" width="0.3977%" height="15" fill="rgb(227,26,34)" fg:x="84191" fg:w="405"/><text x="82.9272%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (387 samples, 0.38%)</title><rect x="82.6949%" y="661" width="0.3800%" height="15" fill="rgb(245,75,19)" fg:x="84209" fg:w="387"/><text x="82.9449%" y="671.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (387 samples, 0.38%)</title><rect x="82.6949%" y="645" width="0.3800%" height="15" fill="rgb(250,191,31)" fg:x="84209" fg:w="387"/><text x="82.9449%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (387 samples, 0.38%)</title><rect x="82.6949%" y="629" width="0.3800%" height="15" fill="rgb(224,11,50)" fg:x="84209" fg:w="387"/><text x="82.9449%" y="639.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute as core::cmp::PartialEq&gt;::eq (387 samples, 0.38%)</title><rect x="82.6949%" y="613" width="0.3800%" height="15" fill="rgb(231,171,7)" fg:x="84209" fg:w="387"/><text x="82.9449%" y="623.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_format::VertexFormat as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="83.0621%" y="597" width="0.0128%" height="15" fill="rgb(252,214,10)" fg:x="84583" fg:w="13"/><text x="83.3121%" y="607.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout as core::cmp::PartialEq&gt;::eq (442 samples, 0.43%)</title><rect x="82.6428%" y="757" width="0.4341%" height="15" fill="rgb(249,45,46)" fg:x="84156" fg:w="442"/><text x="82.8928%" y="767.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (421 samples, 0.41%)</title><rect x="82.6634%" y="741" width="0.4134%" height="15" fill="rgb(240,173,7)" fg:x="84177" fg:w="421"/><text x="82.9134%" y="751.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (417 samples, 0.41%)</title><rect x="82.6674%" y="725" width="0.4095%" height="15" fill="rgb(235,214,13)" fg:x="84181" fg:w="417"/><text x="82.9174%" y="735.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (412 samples, 0.40%)</title><rect x="82.6723%" y="709" width="0.4046%" height="15" fill="rgb(245,156,8)" fg:x="84186" fg:w="412"/><text x="82.9223%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (407 samples, 0.40%)</title><rect x="82.6772%" y="693" width="0.3997%" height="15" fill="rgb(235,46,12)" fg:x="84191" fg:w="407"/><text x="82.9272%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="83.1358%" y="645" width="0.0157%" height="15" fill="rgb(221,81,14)" fg:x="84658" fg:w="16"/><text x="83.3858%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="83.1358%" y="629" width="0.0157%" height="15" fill="rgb(238,207,9)" fg:x="84658" fg:w="16"/><text x="83.3858%" y="639.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="83.1358%" y="709" width="0.0167%" height="15" fill="rgb(224,129,35)" fg:x="84658" fg:w="17"/><text x="83.3858%" y="719.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="83.1358%" y="693" width="0.0167%" height="15" fill="rgb(243,218,34)" fg:x="84658" fg:w="17"/><text x="83.3858%" y="703.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="83.1358%" y="677" width="0.0167%" height="15" fill="rgb(220,166,13)" fg:x="84658" fg:w="17"/><text x="83.3858%" y="687.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="83.1358%" y="661" width="0.0167%" height="15" fill="rgb(227,167,49)" fg:x="84658" fg:w="17"/><text x="83.3858%" y="671.50"></text></g><g><title>ahash::operations::folded_multiply (13 samples, 0.01%)</title><rect x="83.1652%" y="581" width="0.0128%" height="15" fill="rgb(234,142,12)" fg:x="84688" fg:w="13"/><text x="83.4152%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (15 samples, 0.01%)</title><rect x="83.1652%" y="597" width="0.0147%" height="15" fill="rgb(207,100,48)" fg:x="84688" fg:w="15"/><text x="83.4152%" y="607.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (26 samples, 0.03%)</title><rect x="83.2026%" y="549" width="0.0255%" height="15" fill="rgb(210,25,14)" fg:x="84726" fg:w="26"/><text x="83.4526%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (37 samples, 0.04%)</title><rect x="83.1977%" y="565" width="0.0363%" height="15" fill="rgb(246,116,27)" fg:x="84721" fg:w="37"/><text x="83.4477%" y="575.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (15 samples, 0.01%)</title><rect x="83.2340%" y="565" width="0.0147%" height="15" fill="rgb(214,193,42)" fg:x="84758" fg:w="15"/><text x="83.4840%" y="575.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (15 samples, 0.01%)</title><rect x="83.2340%" y="549" width="0.0147%" height="15" fill="rgb(214,122,8)" fg:x="84758" fg:w="15"/><text x="83.4840%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (106 samples, 0.10%)</title><rect x="83.1613%" y="613" width="0.1041%" height="15" fill="rgb(244,173,18)" fg:x="84684" fg:w="106"/><text x="83.4113%" y="623.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (82 samples, 0.08%)</title><rect x="83.1849%" y="597" width="0.0805%" height="15" fill="rgb(232,68,19)" fg:x="84708" fg:w="82"/><text x="83.4349%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (72 samples, 0.07%)</title><rect x="83.1947%" y="581" width="0.0707%" height="15" fill="rgb(236,224,1)" fg:x="84718" fg:w="72"/><text x="83.4447%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (17 samples, 0.02%)</title><rect x="83.2487%" y="565" width="0.0167%" height="15" fill="rgb(240,11,8)" fg:x="84773" fg:w="17"/><text x="83.4987%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="83.2929%" y="581" width="0.0226%" height="15" fill="rgb(244,159,20)" fg:x="84818" fg:w="23"/><text x="83.5429%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="83.2929%" y="565" width="0.0226%" height="15" fill="rgb(240,223,54)" fg:x="84818" fg:w="23"/><text x="83.5429%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (16 samples, 0.02%)</title><rect x="83.2998%" y="549" width="0.0157%" height="15" fill="rgb(237,146,5)" fg:x="84825" fg:w="16"/><text x="83.5498%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (31 samples, 0.03%)</title><rect x="83.3194%" y="517" width="0.0304%" height="15" fill="rgb(218,221,32)" fg:x="84845" fg:w="31"/><text x="83.5694%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (36 samples, 0.04%)</title><rect x="83.3155%" y="549" width="0.0354%" height="15" fill="rgb(244,96,26)" fg:x="84841" fg:w="36"/><text x="83.5655%" y="559.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (36 samples, 0.04%)</title><rect x="83.3155%" y="533" width="0.0354%" height="15" fill="rgb(245,184,37)" fg:x="84841" fg:w="36"/><text x="83.5655%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (623 samples, 0.61%)</title><rect x="83.3508%" y="501" width="0.6118%" height="15" fill="rgb(248,91,47)" fg:x="84877" fg:w="623"/><text x="83.6008%" y="511.50"></text></g><g><title>__memcmp_avx2_movbe (466 samples, 0.46%)</title><rect x="83.5050%" y="485" width="0.4576%" height="15" fill="rgb(243,199,8)" fg:x="85034" fg:w="466"/><text x="83.7550%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (664 samples, 0.65%)</title><rect x="83.3155%" y="581" width="0.6521%" height="15" fill="rgb(249,12,15)" fg:x="84841" fg:w="664"/><text x="83.5655%" y="591.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (664 samples, 0.65%)</title><rect x="83.3155%" y="565" width="0.6521%" height="15" fill="rgb(245,97,12)" fg:x="84841" fg:w="664"/><text x="83.5655%" y="575.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (628 samples, 0.62%)</title><rect x="83.3508%" y="549" width="0.6167%" height="15" fill="rgb(244,61,1)" fg:x="84877" fg:w="628"/><text x="83.6008%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (628 samples, 0.62%)</title><rect x="83.3508%" y="533" width="0.6167%" height="15" fill="rgb(222,194,10)" fg:x="84877" fg:w="628"/><text x="83.6008%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (628 samples, 0.62%)</title><rect x="83.3508%" y="517" width="0.6167%" height="15" fill="rgb(226,178,8)" fg:x="84877" fg:w="628"/><text x="83.6008%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (351 samples, 0.34%)</title><rect x="83.9754%" y="533" width="0.3447%" height="15" fill="rgb(241,32,34)" fg:x="85513" fg:w="351"/><text x="84.2254%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (351 samples, 0.34%)</title><rect x="83.9754%" y="517" width="0.3447%" height="15" fill="rgb(254,26,6)" fg:x="85513" fg:w="351"/><text x="84.2254%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (351 samples, 0.34%)</title><rect x="83.9754%" y="501" width="0.3447%" height="15" fill="rgb(249,71,11)" fg:x="85513" fg:w="351"/><text x="84.2254%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1,217 samples, 1.20%)</title><rect x="83.1328%" y="741" width="1.1951%" height="15" fill="rgb(232,170,27)" fg:x="84655" fg:w="1217"/><text x="83.3828%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,217 samples, 1.20%)</title><rect x="83.1328%" y="725" width="1.1951%" height="15" fill="rgb(214,223,17)" fg:x="84655" fg:w="1217"/><text x="83.3828%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1,197 samples, 1.18%)</title><rect x="83.1525%" y="709" width="1.1755%" height="15" fill="rgb(250,18,15)" fg:x="84675" fg:w="1197"/><text x="83.4025%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (1,197 samples, 1.18%)</title><rect x="83.1525%" y="693" width="1.1755%" height="15" fill="rgb(212,153,51)" fg:x="84675" fg:w="1197"/><text x="83.4025%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1,197 samples, 1.18%)</title><rect x="83.1525%" y="677" width="1.1755%" height="15" fill="rgb(219,194,12)" fg:x="84675" fg:w="1197"/><text x="83.4025%" y="687.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1,197 samples, 1.18%)</title><rect x="83.1525%" y="661" width="1.1755%" height="15" fill="rgb(212,58,17)" fg:x="84675" fg:w="1197"/><text x="83.4025%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,190 samples, 1.17%)</title><rect x="83.1594%" y="645" width="1.1686%" height="15" fill="rgb(254,5,10)" fg:x="84682" fg:w="1190"/><text x="83.4094%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,188 samples, 1.17%)</title><rect x="83.1613%" y="629" width="1.1666%" height="15" fill="rgb(246,91,7)" fg:x="84684" fg:w="1188"/><text x="83.4113%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,082 samples, 1.06%)</title><rect x="83.2654%" y="613" width="1.0625%" height="15" fill="rgb(218,108,49)" fg:x="84790" fg:w="1082"/><text x="83.5154%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,082 samples, 1.06%)</title><rect x="83.2654%" y="597" width="1.0625%" height="15" fill="rgb(238,123,20)" fg:x="84790" fg:w="1082"/><text x="83.5154%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (365 samples, 0.36%)</title><rect x="83.9695%" y="581" width="0.3584%" height="15" fill="rgb(231,69,23)" fg:x="85507" fg:w="365"/><text x="84.2195%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (365 samples, 0.36%)</title><rect x="83.9695%" y="565" width="0.3584%" height="15" fill="rgb(230,209,3)" fg:x="85507" fg:w="365"/><text x="84.2195%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (365 samples, 0.36%)</title><rect x="83.9695%" y="549" width="0.3584%" height="15" fill="rgb(231,19,0)" fg:x="85507" fg:w="365"/><text x="84.2195%" y="559.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1,810 samples, 1.78%)</title><rect x="82.5662%" y="821" width="1.7775%" height="15" fill="rgb(226,192,25)" fg:x="84078" fg:w="1810"/><text x="82.8162%" y="831.50">&lt;..</text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}}::{{closure}} (1,807 samples, 1.77%)</title><rect x="82.5692%" y="805" width="1.7745%" height="15" fill="rgb(223,175,53)" fg:x="84081" fg:w="1807"/><text x="82.8192%" y="815.50">b..</text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,807 samples, 1.77%)</title><rect x="82.5692%" y="789" width="1.7745%" height="15" fill="rgb(248,35,51)" fg:x="84081" fg:w="1807"/><text x="82.8192%" y="799.50">c..</text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (1,807 samples, 1.77%)</title><rect x="82.5692%" y="773" width="1.7745%" height="15" fill="rgb(230,37,26)" fg:x="84081" fg:w="1807"/><text x="82.8192%" y="783.50">&lt;..</text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (1,286 samples, 1.26%)</title><rect x="83.0808%" y="757" width="1.2629%" height="15" fill="rgb(206,120,22)" fg:x="84602" fg:w="1286"/><text x="83.3308%" y="767.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (16 samples, 0.02%)</title><rect x="84.3280%" y="741" width="0.0157%" height="15" fill="rgb(207,165,28)" fg:x="85872" fg:w="16"/><text x="84.5780%" y="751.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (16 samples, 0.02%)</title><rect x="84.3280%" y="725" width="0.0157%" height="15" fill="rgb(226,23,46)" fg:x="85872" fg:w="16"/><text x="84.5780%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (16 samples, 0.02%)</title><rect x="84.3280%" y="709" width="0.0157%" height="15" fill="rgb(208,130,44)" fg:x="85872" fg:w="16"/><text x="84.5780%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (16 samples, 0.02%)</title><rect x="84.3280%" y="693" width="0.0157%" height="15" fill="rgb(231,67,8)" fg:x="85872" fg:w="16"/><text x="84.5780%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (16 samples, 0.02%)</title><rect x="84.3280%" y="677" width="0.0157%" height="15" fill="rgb(205,183,22)" fg:x="85872" fg:w="16"/><text x="84.5780%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (16 samples, 0.02%)</title><rect x="84.3280%" y="661" width="0.0157%" height="15" fill="rgb(224,47,9)" fg:x="85872" fg:w="16"/><text x="84.5780%" y="671.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,817 samples, 1.78%)</title><rect x="82.5652%" y="853" width="1.7843%" height="15" fill="rgb(250,183,49)" fg:x="84077" fg:w="1817"/><text x="82.8152%" y="863.50">c..</text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}} (1,816 samples, 1.78%)</title><rect x="82.5662%" y="837" width="1.7833%" height="15" fill="rgb(220,151,39)" fg:x="84078" fg:w="1816"/><text x="82.8162%" y="847.50">b..</text></g><g><title>core::option::Option&lt;T&gt;::map (11 samples, 0.01%)</title><rect x="84.3496%" y="853" width="0.0108%" height="15" fill="rgb(220,118,20)" fg:x="85894" fg:w="11"/><text x="84.5996%" y="863.50"></text></g><g><title>ahash::operations::folded_multiply (14 samples, 0.01%)</title><rect x="84.3633%" y="773" width="0.0137%" height="15" fill="rgb(231,65,51)" fg:x="85908" fg:w="14"/><text x="84.6133%" y="783.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (17 samples, 0.02%)</title><rect x="84.3633%" y="789" width="0.0167%" height="15" fill="rgb(253,125,37)" fg:x="85908" fg:w="17"/><text x="84.6133%" y="799.50"></text></g><g><title>ahash::operations::folded_multiply (14 samples, 0.01%)</title><rect x="84.4419%" y="661" width="0.0137%" height="15" fill="rgb(232,102,6)" fg:x="85988" fg:w="14"/><text x="84.6919%" y="671.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (13 samples, 0.01%)</title><rect x="84.4429%" y="645" width="0.0128%" height="15" fill="rgb(251,105,13)" fg:x="85989" fg:w="13"/><text x="84.6929%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (36 samples, 0.04%)</title><rect x="84.4271%" y="709" width="0.0354%" height="15" fill="rgb(222,179,29)" fg:x="85973" fg:w="36"/><text x="84.6771%" y="719.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (36 samples, 0.04%)</title><rect x="84.4271%" y="693" width="0.0354%" height="15" fill="rgb(229,180,53)" fg:x="85973" fg:w="36"/><text x="84.6771%" y="703.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (28 samples, 0.03%)</title><rect x="84.4350%" y="677" width="0.0275%" height="15" fill="rgb(238,104,13)" fg:x="85981" fg:w="28"/><text x="84.6850%" y="687.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (88 samples, 0.09%)</title><rect x="84.3849%" y="773" width="0.0864%" height="15" fill="rgb(210,130,5)" fg:x="85930" fg:w="88"/><text x="84.6349%" y="783.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (45 samples, 0.04%)</title><rect x="84.4271%" y="757" width="0.0442%" height="15" fill="rgb(233,87,49)" fg:x="85973" fg:w="45"/><text x="84.6771%" y="767.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (45 samples, 0.04%)</title><rect x="84.4271%" y="741" width="0.0442%" height="15" fill="rgb(243,34,9)" fg:x="85973" fg:w="45"/><text x="84.6771%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (45 samples, 0.04%)</title><rect x="84.4271%" y="725" width="0.0442%" height="15" fill="rgb(235,225,10)" fg:x="85973" fg:w="45"/><text x="84.6771%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (116 samples, 0.11%)</title><rect x="84.3633%" y="805" width="0.1139%" height="15" fill="rgb(212,0,30)" fg:x="85908" fg:w="116"/><text x="84.6133%" y="815.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (94 samples, 0.09%)</title><rect x="84.3849%" y="789" width="0.0923%" height="15" fill="rgb(211,177,0)" fg:x="85930" fg:w="94"/><text x="84.6349%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="84.4861%" y="773" width="0.0196%" height="15" fill="rgb(225,220,11)" fg:x="86033" fg:w="20"/><text x="84.7361%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (20 samples, 0.02%)</title><rect x="84.4861%" y="757" width="0.0196%" height="15" fill="rgb(215,10,13)" fg:x="86033" fg:w="20"/><text x="84.7361%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (13 samples, 0.01%)</title><rect x="84.4929%" y="741" width="0.0128%" height="15" fill="rgb(240,177,14)" fg:x="86040" fg:w="13"/><text x="84.7429%" y="751.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (35 samples, 0.03%)</title><rect x="84.5057%" y="741" width="0.0344%" height="15" fill="rgb(243,7,39)" fg:x="86053" fg:w="35"/><text x="84.7557%" y="751.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (16 samples, 0.02%)</title><rect x="84.5244%" y="725" width="0.0157%" height="15" fill="rgb(212,99,0)" fg:x="86072" fg:w="16"/><text x="84.7744%" y="735.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (16 samples, 0.02%)</title><rect x="84.5244%" y="709" width="0.0157%" height="15" fill="rgb(225,162,48)" fg:x="86072" fg:w="16"/><text x="84.7744%" y="719.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (16 samples, 0.02%)</title><rect x="84.5244%" y="693" width="0.0157%" height="15" fill="rgb(246,16,25)" fg:x="86072" fg:w="16"/><text x="84.7744%" y="703.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (38 samples, 0.04%)</title><rect x="84.5057%" y="773" width="0.0373%" height="15" fill="rgb(220,150,2)" fg:x="86053" fg:w="38"/><text x="84.7557%" y="783.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (38 samples, 0.04%)</title><rect x="84.5057%" y="757" width="0.0373%" height="15" fill="rgb(237,113,11)" fg:x="86053" fg:w="38"/><text x="84.7557%" y="767.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (26 samples, 0.03%)</title><rect x="84.5548%" y="725" width="0.0255%" height="15" fill="rgb(236,70,20)" fg:x="86103" fg:w="26"/><text x="84.8048%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (26 samples, 0.03%)</title><rect x="84.5548%" y="709" width="0.0255%" height="15" fill="rgb(234,94,7)" fg:x="86103" fg:w="26"/><text x="84.8048%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (26 samples, 0.03%)</title><rect x="84.5548%" y="693" width="0.0255%" height="15" fill="rgb(250,221,0)" fg:x="86103" fg:w="26"/><text x="84.8048%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (111 samples, 0.11%)</title><rect x="84.4772%" y="789" width="0.1090%" height="15" fill="rgb(245,149,46)" fg:x="86024" fg:w="111"/><text x="84.7272%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (39 samples, 0.04%)</title><rect x="84.5479%" y="773" width="0.0383%" height="15" fill="rgb(215,37,27)" fg:x="86096" fg:w="39"/><text x="84.7979%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (39 samples, 0.04%)</title><rect x="84.5479%" y="757" width="0.0383%" height="15" fill="rgb(232,65,3)" fg:x="86096" fg:w="39"/><text x="84.7979%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (39 samples, 0.04%)</title><rect x="84.5479%" y="741" width="0.0383%" height="15" fill="rgb(214,2,16)" fg:x="86096" fg:w="39"/><text x="84.7979%" y="751.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (2,063 samples, 2.03%)</title><rect x="82.5623%" y="869" width="2.0259%" height="15" fill="rgb(227,131,50)" fg:x="84074" fg:w="2063"/><text x="82.8123%" y="879.50">b..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (232 samples, 0.23%)</title><rect x="84.3604%" y="853" width="0.2278%" height="15" fill="rgb(247,131,45)" fg:x="85905" fg:w="232"/><text x="84.6104%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (232 samples, 0.23%)</title><rect x="84.3604%" y="837" width="0.2278%" height="15" fill="rgb(215,97,47)" fg:x="85905" fg:w="232"/><text x="84.6104%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (229 samples, 0.22%)</title><rect x="84.3633%" y="821" width="0.2249%" height="15" fill="rgb(233,143,12)" fg:x="85908" fg:w="229"/><text x="84.6133%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (113 samples, 0.11%)</title><rect x="84.4772%" y="805" width="0.1110%" height="15" fill="rgb(222,57,17)" fg:x="86024" fg:w="113"/><text x="84.7272%" y="815.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (2,243 samples, 2.20%)</title><rect x="82.3904%" y="885" width="2.2027%" height="15" fill="rgb(214,119,38)" fg:x="83899" fg:w="2243"/><text x="82.6404%" y="895.50">b..</text></g><g><title>bevy_render::draw::Draw::set_index_buffer (115 samples, 0.11%)</title><rect x="84.6098%" y="869" width="0.1129%" height="15" fill="rgb(217,28,47)" fg:x="86159" fg:w="115"/><text x="84.8598%" y="879.50"></text></g><g><title>bevy_render::draw::Draw::render_command (115 samples, 0.11%)</title><rect x="84.6098%" y="853" width="0.1129%" height="15" fill="rgb(231,14,52)" fg:x="86159" fg:w="115"/><text x="84.8598%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (112 samples, 0.11%)</title><rect x="84.6127%" y="837" width="0.1100%" height="15" fill="rgb(220,158,18)" fg:x="86162" fg:w="112"/><text x="84.8627%" y="847.50"></text></g><g><title>core::ptr::write (108 samples, 0.11%)</title><rect x="84.6167%" y="821" width="0.1061%" height="15" fill="rgb(222,143,46)" fg:x="86166" fg:w="108"/><text x="84.8667%" y="831.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (255 samples, 0.25%)</title><rect x="84.5931%" y="885" width="0.2504%" height="15" fill="rgb(227,165,5)" fg:x="86142" fg:w="255"/><text x="84.8431%" y="895.50"></text></g><g><title>bevy_render::draw::Draw::set_vertex_buffer (123 samples, 0.12%)</title><rect x="84.7227%" y="869" width="0.1208%" height="15" fill="rgb(216,222,49)" fg:x="86274" fg:w="123"/><text x="84.9727%" y="879.50"></text></g><g><title>bevy_render::draw::Draw::render_command (123 samples, 0.12%)</title><rect x="84.7227%" y="853" width="0.1208%" height="15" fill="rgb(238,73,39)" fg:x="86274" fg:w="123"/><text x="84.9727%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (121 samples, 0.12%)</title><rect x="84.7247%" y="837" width="0.1188%" height="15" fill="rgb(252,115,9)" fg:x="86276" fg:w="121"/><text x="84.9747%" y="847.50"></text></g><g><title>core::ptr::write (120 samples, 0.12%)</title><rect x="84.7257%" y="821" width="0.1178%" height="15" fill="rgb(238,202,4)" fg:x="86277" fg:w="120"/><text x="84.9757%" y="831.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (7,611 samples, 7.47%)</title><rect x="77.3900%" y="901" width="7.4741%" height="15" fill="rgb(252,153,44)" fg:x="78807" fg:w="7611"/><text x="77.6400%" y="911.50">bevy_rende..</text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (7,760 samples, 7.62%)</title><rect x="77.2555%" y="949" width="7.6205%" height="15" fill="rgb(235,128,27)" fg:x="78670" fg:w="7760"/><text x="77.5055%" y="959.50">&lt;Func as b..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7,760 samples, 7.62%)</title><rect x="77.2555%" y="933" width="7.6205%" height="15" fill="rgb(221,121,47)" fg:x="78670" fg:w="7760"/><text x="77.5055%" y="943.50">core::ops:..</text></g><g><title>core::ops::function::Fn::call (7,760 samples, 7.62%)</title><rect x="77.2555%" y="917" width="7.6205%" height="15" fill="rgb(247,211,47)" fg:x="78670" fg:w="7760"/><text x="77.5055%" y="927.50">core::ops:..</text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (12 samples, 0.01%)</title><rect x="84.8759%" y="933" width="0.0118%" height="15" fill="rgb(252,47,49)" fg:x="86430" fg:w="12"/><text x="85.1259%" y="943.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (14 samples, 0.01%)</title><rect x="84.8759%" y="949" width="0.0137%" height="15" fill="rgb(219,119,53)" fg:x="86430" fg:w="14"/><text x="85.1259%" y="959.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (11 samples, 0.01%)</title><rect x="84.8897%" y="933" width="0.0108%" height="15" fill="rgb(243,165,53)" fg:x="86444" fg:w="11"/><text x="85.1397%" y="943.50"></text></g><g><title>bevy_text::text2d::draw_text2d_system (22 samples, 0.02%)</title><rect x="84.9005%" y="901" width="0.0216%" height="15" fill="rgb(230,12,35)" fg:x="86455" fg:w="22"/><text x="85.1505%" y="911.50"></text></g><g><title>bevy_ui::widget::text::draw_text_system (15 samples, 0.01%)</title><rect x="84.9221%" y="901" width="0.0147%" height="15" fill="rgb(239,57,49)" fg:x="86477" fg:w="15"/><text x="85.1721%" y="911.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6),()&gt;&gt;::run (49 samples, 0.05%)</title><rect x="84.8897%" y="949" width="0.0481%" height="15" fill="rgb(231,154,7)" fg:x="86444" fg:w="49"/><text x="85.1397%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (38 samples, 0.04%)</title><rect x="84.9005%" y="933" width="0.0373%" height="15" fill="rgb(248,81,34)" fg:x="86455" fg:w="38"/><text x="85.1505%" y="943.50"></text></g><g><title>core::ops::function::Fn::call (38 samples, 0.04%)</title><rect x="84.9005%" y="917" width="0.0373%" height="15" fill="rgb(247,9,5)" fg:x="86455" fg:w="38"/><text x="85.1505%" y="927.50"></text></g><g><title>stretch::forest::Forest::compute_layout (11 samples, 0.01%)</title><rect x="84.9427%" y="853" width="0.0108%" height="15" fill="rgb(228,172,27)" fg:x="86498" fg:w="11"/><text x="85.1927%" y="863.50"></text></g><g><title>bevy_ui::flex::FlexSurface::compute_window_layouts (13 samples, 0.01%)</title><rect x="84.9417%" y="885" width="0.0128%" height="15" fill="rgb(230,57,44)" fg:x="86497" fg:w="13"/><text x="85.1917%" y="895.50"></text></g><g><title>stretch::node::Stretch::compute_layout (12 samples, 0.01%)</title><rect x="84.9427%" y="869" width="0.0118%" height="15" fill="rgb(249,35,22)" fg:x="86498" fg:w="12"/><text x="85.1927%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (13 samples, 0.01%)</title><rect x="84.9564%" y="869" width="0.0128%" height="15" fill="rgb(250,137,27)" fg:x="86512" fg:w="13"/><text x="85.2064%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="84.9564%" y="853" width="0.0128%" height="15" fill="rgb(251,57,31)" fg:x="86512" fg:w="13"/><text x="85.2064%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (13 samples, 0.01%)</title><rect x="84.9564%" y="837" width="0.0128%" height="15" fill="rgb(238,60,0)" fg:x="86512" fg:w="13"/><text x="85.2064%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (11 samples, 0.01%)</title><rect x="84.9584%" y="821" width="0.0108%" height="15" fill="rgb(242,185,39)" fg:x="86514" fg:w="11"/><text x="85.2084%" y="831.50"></text></g><g><title>bevy_ui::flex::FlexSurface::set_window_children (19 samples, 0.02%)</title><rect x="84.9564%" y="885" width="0.0187%" height="15" fill="rgb(240,63,43)" fg:x="86512" fg:w="19"/><text x="85.2064%" y="895.50"></text></g><g><title>bevy_ui::flex::FlexSurface::update_window (15 samples, 0.01%)</title><rect x="84.9751%" y="885" width="0.0147%" height="15" fill="rgb(236,155,6)" fg:x="86531" fg:w="15"/><text x="85.2251%" y="895.50"></text></g><g><title>bevy_ui::flex::flex_node_system (60 samples, 0.06%)</title><rect x="84.9378%" y="901" width="0.0589%" height="15" fill="rgb(215,11,29)" fg:x="86493" fg:w="60"/><text x="85.1878%" y="911.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (67 samples, 0.07%)</title><rect x="84.9378%" y="949" width="0.0658%" height="15" fill="rgb(228,180,48)" fg:x="86493" fg:w="67"/><text x="85.1878%" y="959.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (67 samples, 0.07%)</title><rect x="84.9378%" y="933" width="0.0658%" height="15" fill="rgb(241,102,12)" fg:x="86493" fg:w="67"/><text x="85.1878%" y="943.50"></text></g><g><title>core::ops::function::Fn::call (67 samples, 0.07%)</title><rect x="84.9378%" y="917" width="0.0658%" height="15" fill="rgb(246,213,4)" fg:x="86493" fg:w="67"/><text x="85.1878%" y="927.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (28,160 samples, 27.65%)</title><rect x="57.3539%" y="1157" width="27.6537%" height="15" fill="rgb(218,134,35)" fg:x="58404" fg:w="28160"/><text x="57.6039%" y="1167.50">&lt;bevy_ecs::schedule::executor_parallel::Para..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (28,160 samples, 27.65%)</title><rect x="57.3539%" y="1141" width="27.6537%" height="15" fill="rgb(251,117,35)" fg:x="58404" fg:w="28160"/><text x="57.6039%" y="1151.50">bevy_tasks::task_pool::TaskPool::scope</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (28,160 samples, 27.65%)</title><rect x="57.3539%" y="1125" width="27.6537%" height="15" fill="rgb(206,156,45)" fg:x="58404" fg:w="28160"/><text x="57.6039%" y="1135.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (28,160 samples, 27.65%)</title><rect x="57.3539%" y="1109" width="27.6537%" height="15" fill="rgb(218,52,27)" fg:x="58404" fg:w="28160"/><text x="57.6039%" y="1119.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (28,160 samples, 27.65%)</title><rect x="57.3539%" y="1093" width="27.6537%" height="15" fill="rgb(238,83,36)" fg:x="58404" fg:w="28160"/><text x="57.6039%" y="1103.50">bevy_tasks::task_pool::TaskPool::scope::{{cl..</text></g><g><title>async_executor::Executor::try_tick (28,149 samples, 27.64%)</title><rect x="57.3647%" y="1077" width="27.6429%" height="15" fill="rgb(218,53,43)" fg:x="58415" fg:w="28149"/><text x="57.6147%" y="1087.50">async_executor::Executor::try_tick</text></g><g><title>async_task::runnable::Runnable::run (28,149 samples, 27.64%)</title><rect x="57.3647%" y="1061" width="27.6429%" height="15" fill="rgb(239,54,39)" fg:x="58415" fg:w="28149"/><text x="57.6147%" y="1071.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (28,149 samples, 27.64%)</title><rect x="57.3647%" y="1045" width="27.6429%" height="15" fill="rgb(212,198,13)" fg:x="58415" fg:w="28149"/><text x="57.6147%" y="1055.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28,149 samples, 27.64%)</title><rect x="57.3647%" y="1029" width="27.6429%" height="15" fill="rgb(234,54,46)" fg:x="58415" fg:w="28149"/><text x="57.6147%" y="1039.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; ..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (28,149 samples, 27.64%)</title><rect x="57.3647%" y="1013" width="27.6429%" height="15" fill="rgb(217,120,7)" fg:x="58415" fg:w="28149"/><text x="57.6147%" y="1023.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28,149 samples, 27.64%)</title><rect x="57.3647%" y="997" width="27.6429%" height="15" fill="rgb(246,39,15)" fg:x="58415" fg:w="28149"/><text x="57.6147%" y="1007.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; ..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (28,149 samples, 27.64%)</title><rect x="57.3647%" y="981" width="27.6429%" height="15" fill="rgb(242,143,31)" fg:x="58415" fg:w="28149"/><text x="57.6147%" y="991.50">bevy_ecs::schedule::executor_parallel::Paral..</text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (28,149 samples, 27.64%)</title><rect x="57.3647%" y="965" width="27.6429%" height="15" fill="rgb(252,60,24)" fg:x="58415" fg:w="28149"/><text x="57.6147%" y="975.50">&lt;bevy_ecs::system::into_system::FunctionSyst..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (11 samples, 0.01%)</title><rect x="85.0507%" y="933" width="0.0108%" height="15" fill="rgb(249,220,7)" fg:x="86608" fg:w="11"/><text x="85.3007%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="85.0507%" y="917" width="0.0108%" height="15" fill="rgb(236,67,13)" fg:x="86608" fg:w="11"/><text x="85.3007%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="85.0507%" y="901" width="0.0108%" height="15" fill="rgb(210,62,39)" fg:x="86608" fg:w="11"/><text x="85.3007%" y="911.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (23 samples, 0.02%)</title><rect x="85.0468%" y="949" width="0.0226%" height="15" fill="rgb(219,122,53)" fg:x="86604" fg:w="23"/><text x="85.2968%" y="959.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (18 samples, 0.02%)</title><rect x="85.0959%" y="885" width="0.0177%" height="15" fill="rgb(218,87,25)" fg:x="86654" fg:w="18"/><text x="85.3459%" y="895.50"></text></g><g><title>async_task::runnable::Runnable::schedule (29 samples, 0.03%)</title><rect x="85.0949%" y="917" width="0.0285%" height="15" fill="rgb(234,179,48)" fg:x="86653" fg:w="29"/><text x="85.3449%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (29 samples, 0.03%)</title><rect x="85.0949%" y="901" width="0.0285%" height="15" fill="rgb(248,90,0)" fg:x="86653" fg:w="29"/><text x="85.3449%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (13 samples, 0.01%)</title><rect x="85.1234%" y="885" width="0.0128%" height="15" fill="rgb(207,228,37)" fg:x="86682" fg:w="13"/><text x="85.3734%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (13 samples, 0.01%)</title><rect x="85.1234%" y="869" width="0.0128%" height="15" fill="rgb(235,214,15)" fg:x="86682" fg:w="13"/><text x="85.3734%" y="879.50"></text></g><g><title>async_task::runnable::Runnable::waker (14 samples, 0.01%)</title><rect x="85.1234%" y="917" width="0.0137%" height="15" fill="rgb(210,144,39)" fg:x="86682" fg:w="14"/><text x="85.3734%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (14 samples, 0.01%)</title><rect x="85.1234%" y="901" width="0.0137%" height="15" fill="rgb(222,67,41)" fg:x="86682" fg:w="14"/><text x="85.3734%" y="911.50"></text></g><g><title>alloc::alloc::alloc (18 samples, 0.02%)</title><rect x="85.1391%" y="885" width="0.0177%" height="15" fill="rgb(205,35,37)" fg:x="86698" fg:w="18"/><text x="85.3891%" y="895.50"></text></g><g><title>__rdl_alloc (18 samples, 0.02%)</title><rect x="85.1391%" y="869" width="0.0177%" height="15" fill="rgb(216,125,40)" fg:x="86698" fg:w="18"/><text x="85.3891%" y="879.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (18 samples, 0.02%)</title><rect x="85.1391%" y="853" width="0.0177%" height="15" fill="rgb(228,227,20)" fg:x="86698" fg:w="18"/><text x="85.3891%" y="863.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.02%)</title><rect x="85.1391%" y="837" width="0.0177%" height="15" fill="rgb(242,173,45)" fg:x="86698" fg:w="18"/><text x="85.3891%" y="847.50"></text></g><g><title>_int_malloc (12 samples, 0.01%)</title><rect x="85.1450%" y="821" width="0.0118%" height="15" fill="rgb(215,79,24)" fg:x="86704" fg:w="12"/><text x="85.3950%" y="831.50"></text></g><g><title>async_task::runnable::spawn_unchecked (24 samples, 0.02%)</title><rect x="85.1371%" y="917" width="0.0236%" height="15" fill="rgb(238,164,38)" fg:x="86696" fg:w="24"/><text x="85.3871%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (22 samples, 0.02%)</title><rect x="85.1391%" y="901" width="0.0216%" height="15" fill="rgb(245,196,38)" fg:x="86698" fg:w="22"/><text x="85.3891%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (98 samples, 0.10%)</title><rect x="85.0743%" y="949" width="0.0962%" height="15" fill="rgb(231,217,29)" fg:x="86632" fg:w="98"/><text x="85.3243%" y="959.50"></text></g><g><title>async_executor::Executor::spawn (89 samples, 0.09%)</title><rect x="85.0831%" y="933" width="0.0874%" height="15" fill="rgb(245,6,4)" fg:x="86641" fg:w="89"/><text x="85.3331%" y="943.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (128 samples, 0.13%)</title><rect x="85.0468%" y="965" width="0.1257%" height="15" fill="rgb(214,76,49)" fg:x="86604" fg:w="128"/><text x="85.2968%" y="975.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (135 samples, 0.13%)</title><rect x="85.0468%" y="981" width="0.1326%" height="15" fill="rgb(205,96,12)" fg:x="86604" fg:w="135"/><text x="85.2968%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (21 samples, 0.02%)</title><rect x="85.2511%" y="837" width="0.0206%" height="15" fill="rgb(243,131,4)" fg:x="86812" fg:w="21"/><text x="85.5011%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (18 samples, 0.02%)</title><rect x="85.2540%" y="821" width="0.0177%" height="15" fill="rgb(214,114,4)" fg:x="86815" fg:w="18"/><text x="85.5040%" y="831.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (25 samples, 0.02%)</title><rect x="85.2491%" y="853" width="0.0246%" height="15" fill="rgb(234,215,15)" fg:x="86810" fg:w="25"/><text x="85.4991%" y="863.50"></text></g><g><title>event_listener::Event::listen (13 samples, 0.01%)</title><rect x="85.2746%" y="853" width="0.0128%" height="15" fill="rgb(250,216,45)" fg:x="86836" fg:w="13"/><text x="85.5246%" y="863.50"></text></g><g><title>event_listener::Inner::lock (11 samples, 0.01%)</title><rect x="85.2874%" y="837" width="0.0108%" height="15" fill="rgb(236,128,4)" fg:x="86849" fg:w="11"/><text x="85.5374%" y="847.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (11 samples, 0.01%)</title><rect x="85.2874%" y="821" width="0.0108%" height="15" fill="rgb(234,50,33)" fg:x="86849" fg:w="11"/><text x="85.5374%" y="831.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (62 samples, 0.06%)</title><rect x="85.2383%" y="869" width="0.0609%" height="15" fill="rgb(253,131,37)" fg:x="86799" fg:w="62"/><text x="85.4883%" y="879.50"></text></g><g><title>event_listener::Event::notify (12 samples, 0.01%)</title><rect x="85.2874%" y="853" width="0.0118%" height="15" fill="rgb(218,55,27)" fg:x="86849" fg:w="12"/><text x="85.5374%" y="863.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (11 samples, 0.01%)</title><rect x="85.3051%" y="805" width="0.0108%" height="15" fill="rgb(241,220,28)" fg:x="86867" fg:w="11"/><text x="85.5551%" y="815.50"></text></g><g><title>async_executor::State::notify (12 samples, 0.01%)</title><rect x="85.3306%" y="741" width="0.0118%" height="15" fill="rgb(241,90,48)" fg:x="86893" fg:w="12"/><text x="85.5806%" y="751.50"></text></g><g><title>event_listener::List::notify (27 samples, 0.03%)</title><rect x="85.3296%" y="789" width="0.0265%" height="15" fill="rgb(216,43,37)" fg:x="86892" fg:w="27"/><text x="85.5796%" y="799.50"></text></g><g><title>core::task::wake::Waker::wake (26 samples, 0.03%)</title><rect x="85.3306%" y="773" width="0.0255%" height="15" fill="rgb(207,173,9)" fg:x="86893" fg:w="26"/><text x="85.5806%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (26 samples, 0.03%)</title><rect x="85.3306%" y="757" width="0.0255%" height="15" fill="rgb(240,126,30)" fg:x="86893" fg:w="26"/><text x="85.5806%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (14 samples, 0.01%)</title><rect x="85.3424%" y="741" width="0.0137%" height="15" fill="rgb(228,178,53)" fg:x="86905" fg:w="14"/><text x="85.5924%" y="751.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.05%)</title><rect x="85.3051%" y="837" width="0.0520%" height="15" fill="rgb(217,33,4)" fg:x="86867" fg:w="53"/><text x="85.5551%" y="847.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (53 samples, 0.05%)</title><rect x="85.3051%" y="821" width="0.0520%" height="15" fill="rgb(206,124,34)" fg:x="86867" fg:w="53"/><text x="85.5551%" y="831.50"></text></g><g><title>event_listener::Event::notify (42 samples, 0.04%)</title><rect x="85.3159%" y="805" width="0.0412%" height="15" fill="rgb(208,122,53)" fg:x="86878" fg:w="42"/><text x="85.5659%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (29 samples, 0.03%)</title><rect x="85.3709%" y="789" width="0.0285%" height="15" fill="rgb(215,202,26)" fg:x="86934" fg:w="29"/><text x="85.6209%" y="799.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (29 samples, 0.03%)</title><rect x="85.3709%" y="773" width="0.0285%" height="15" fill="rgb(232,198,31)" fg:x="86934" fg:w="29"/><text x="85.6209%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (16 samples, 0.02%)</title><rect x="85.3836%" y="757" width="0.0157%" height="15" fill="rgb(222,23,35)" fg:x="86947" fg:w="16"/><text x="85.6336%" y="767.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint::{{closure}} (16 samples, 0.02%)</title><rect x="85.3836%" y="741" width="0.0157%" height="15" fill="rgb(242,27,53)" fg:x="86947" fg:w="16"/><text x="85.6336%" y="751.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (35 samples, 0.03%)</title><rect x="85.3659%" y="837" width="0.0344%" height="15" fill="rgb(210,216,42)" fg:x="86929" fg:w="35"/><text x="85.6159%" y="847.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (35 samples, 0.03%)</title><rect x="85.3659%" y="821" width="0.0344%" height="15" fill="rgb(234,39,38)" fg:x="86929" fg:w="35"/><text x="85.6159%" y="831.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (31 samples, 0.03%)</title><rect x="85.3699%" y="805" width="0.0304%" height="15" fill="rgb(235,126,54)" fg:x="86933" fg:w="31"/><text x="85.6199%" y="815.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (105 samples, 0.10%)</title><rect x="85.2992%" y="869" width="0.1031%" height="15" fill="rgb(235,150,33)" fg:x="86861" fg:w="105"/><text x="85.5492%" y="879.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (104 samples, 0.10%)</title><rect x="85.3002%" y="853" width="0.1021%" height="15" fill="rgb(249,49,53)" fg:x="86862" fg:w="104"/><text x="85.5502%" y="863.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (12 samples, 0.01%)</title><rect x="85.4111%" y="869" width="0.0118%" height="15" fill="rgb(238,60,50)" fg:x="86975" fg:w="12"/><text x="85.6611%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (209 samples, 0.21%)</title><rect x="85.2353%" y="885" width="0.2052%" height="15" fill="rgb(210,5,2)" fg:x="86796" fg:w="209"/><text x="85.4853%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (17 samples, 0.02%)</title><rect x="85.4573%" y="837" width="0.0167%" height="15" fill="rgb(214,207,24)" fg:x="87022" fg:w="17"/><text x="85.7073%" y="847.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (17 samples, 0.02%)</title><rect x="85.4573%" y="821" width="0.0167%" height="15" fill="rgb(228,173,2)" fg:x="87022" fg:w="17"/><text x="85.7073%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (16 samples, 0.02%)</title><rect x="85.4583%" y="805" width="0.0157%" height="15" fill="rgb(244,26,8)" fg:x="87023" fg:w="16"/><text x="85.7083%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (16 samples, 0.02%)</title><rect x="85.4583%" y="789" width="0.0157%" height="15" fill="rgb(249,153,35)" fg:x="87023" fg:w="16"/><text x="85.7083%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (16 samples, 0.02%)</title><rect x="85.4583%" y="773" width="0.0157%" height="15" fill="rgb(221,215,40)" fg:x="87023" fg:w="16"/><text x="85.7083%" y="783.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (20 samples, 0.02%)</title><rect x="85.4553%" y="853" width="0.0196%" height="15" fill="rgb(238,106,35)" fg:x="87020" fg:w="20"/><text x="85.7053%" y="863.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (52 samples, 0.05%)</title><rect x="85.4425%" y="869" width="0.0511%" height="15" fill="rgb(207,195,21)" fg:x="87007" fg:w="52"/><text x="85.6925%" y="879.50"></text></g><g><title>event_listener::Event::listen (19 samples, 0.02%)</title><rect x="85.4750%" y="853" width="0.0187%" height="15" fill="rgb(205,43,29)" fg:x="87040" fg:w="19"/><text x="85.7250%" y="863.50"></text></g><g><title>core::task::wake::Waker::wake (12 samples, 0.01%)</title><rect x="85.5162%" y="757" width="0.0118%" height="15" fill="rgb(236,35,21)" fg:x="87082" fg:w="12"/><text x="85.7662%" y="767.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (12 samples, 0.01%)</title><rect x="85.5162%" y="741" width="0.0118%" height="15" fill="rgb(244,74,8)" fg:x="87082" fg:w="12"/><text x="85.7662%" y="751.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (12 samples, 0.01%)</title><rect x="85.5162%" y="725" width="0.0118%" height="15" fill="rgb(241,229,7)" fg:x="87082" fg:w="12"/><text x="85.7662%" y="735.50"></text></g><g><title>parking::Unparker::unpark (12 samples, 0.01%)</title><rect x="85.5162%" y="709" width="0.0118%" height="15" fill="rgb(212,223,25)" fg:x="87082" fg:w="12"/><text x="85.7662%" y="719.50"></text></g><g><title>parking::Inner::unpark (11 samples, 0.01%)</title><rect x="85.5172%" y="693" width="0.0108%" height="15" fill="rgb(234,58,53)" fg:x="87083" fg:w="11"/><text x="85.7672%" y="703.50"></text></g><g><title>async_executor::State::notify (16 samples, 0.02%)</title><rect x="85.5133%" y="773" width="0.0157%" height="15" fill="rgb(244,36,1)" fg:x="87079" fg:w="16"/><text x="85.7633%" y="783.50"></text></g><g><title>event_listener::List::notify (23 samples, 0.02%)</title><rect x="85.5133%" y="821" width="0.0226%" height="15" fill="rgb(222,40,54)" fg:x="87079" fg:w="23"/><text x="85.7633%" y="831.50"></text></g><g><title>core::task::wake::Waker::wake (23 samples, 0.02%)</title><rect x="85.5133%" y="805" width="0.0226%" height="15" fill="rgb(210,207,39)" fg:x="87079" fg:w="23"/><text x="85.7633%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (23 samples, 0.02%)</title><rect x="85.5133%" y="789" width="0.0226%" height="15" fill="rgb(234,52,14)" fg:x="87079" fg:w="23"/><text x="85.7633%" y="799.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (47 samples, 0.05%)</title><rect x="85.4946%" y="853" width="0.0462%" height="15" fill="rgb(239,108,46)" fg:x="87060" fg:w="47"/><text x="85.7446%" y="863.50"></text></g><g><title>event_listener::Event::notify (37 samples, 0.04%)</title><rect x="85.5044%" y="837" width="0.0363%" height="15" fill="rgb(252,223,5)" fg:x="87070" fg:w="37"/><text x="85.7544%" y="847.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (51 samples, 0.05%)</title><rect x="85.4936%" y="869" width="0.0501%" height="15" fill="rgb(227,181,11)" fg:x="87059" fg:w="51"/><text x="85.7436%" y="879.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (20 samples, 0.02%)</title><rect x="85.5506%" y="789" width="0.0196%" height="15" fill="rgb(248,126,40)" fg:x="87117" fg:w="20"/><text x="85.8006%" y="799.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (14 samples, 0.01%)</title><rect x="85.5722%" y="789" width="0.0137%" height="15" fill="rgb(243,1,18)" fg:x="87139" fg:w="14"/><text x="85.8222%" y="799.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (62 samples, 0.06%)</title><rect x="85.5476%" y="853" width="0.0609%" height="15" fill="rgb(214,145,23)" fg:x="87114" fg:w="62"/><text x="85.7976%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (60 samples, 0.06%)</title><rect x="85.5496%" y="837" width="0.0589%" height="15" fill="rgb(241,218,11)" fg:x="87116" fg:w="60"/><text x="85.7996%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (60 samples, 0.06%)</title><rect x="85.5496%" y="821" width="0.0589%" height="15" fill="rgb(214,219,24)" fg:x="87116" fg:w="60"/><text x="85.7996%" y="831.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (60 samples, 0.06%)</title><rect x="85.5496%" y="805" width="0.0589%" height="15" fill="rgb(235,32,7)" fg:x="87116" fg:w="60"/><text x="85.7996%" y="815.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (85 samples, 0.08%)</title><rect x="85.5437%" y="869" width="0.0835%" height="15" fill="rgb(227,121,28)" fg:x="87110" fg:w="85"/><text x="85.7937%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (403 samples, 0.40%)</title><rect x="85.2353%" y="901" width="0.3958%" height="15" fill="rgb(216,129,49)" fg:x="86796" fg:w="403"/><text x="85.4853%" y="911.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (194 samples, 0.19%)</title><rect x="85.4406%" y="885" width="0.1905%" height="15" fill="rgb(207,194,50)" fg:x="87005" fg:w="194"/><text x="85.6906%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (416 samples, 0.41%)</title><rect x="85.2324%" y="933" width="0.4085%" height="15" fill="rgb(207,4,18)" fg:x="86793" fg:w="416"/><text x="85.4824%" y="943.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (415 samples, 0.41%)</title><rect x="85.2334%" y="917" width="0.4075%" height="15" fill="rgb(213,50,30)" fg:x="86794" fg:w="415"/><text x="85.4834%" y="927.50"></text></g><g><title>async_task::utils::abort_on_panic (11 samples, 0.01%)</title><rect x="85.6478%" y="933" width="0.0108%" height="15" fill="rgb(208,77,22)" fg:x="87216" fg:w="11"/><text x="85.8978%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (11 samples, 0.01%)</title><rect x="85.6478%" y="917" width="0.0108%" height="15" fill="rgb(244,204,34)" fg:x="87216" fg:w="11"/><text x="85.8978%" y="927.50"></text></g><g><title>core::task::wake::Waker::wake (11 samples, 0.01%)</title><rect x="85.6478%" y="901" width="0.0108%" height="15" fill="rgb(230,20,17)" fg:x="87216" fg:w="11"/><text x="85.8978%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (11 samples, 0.01%)</title><rect x="85.6478%" y="885" width="0.0108%" height="15" fill="rgb(237,83,15)" fg:x="87216" fg:w="11"/><text x="85.8978%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (15 samples, 0.01%)</title><rect x="85.6586%" y="933" width="0.0147%" height="15" fill="rgb(221,109,25)" fg:x="87227" fg:w="15"/><text x="85.9086%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (15 samples, 0.01%)</title><rect x="85.6586%" y="917" width="0.0147%" height="15" fill="rgb(205,194,52)" fg:x="87227" fg:w="15"/><text x="85.9086%" y="927.50"></text></g><g><title>async_task::runnable::Runnable::run (455 samples, 0.45%)</title><rect x="85.2275%" y="965" width="0.4468%" height="15" fill="rgb(244,173,54)" fg:x="86788" fg:w="455"/><text x="85.4775%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (454 samples, 0.45%)</title><rect x="85.2285%" y="949" width="0.4458%" height="15" fill="rgb(227,181,18)" fg:x="86789" fg:w="454"/><text x="85.4785%" y="959.50"></text></g><g><title>concurrent_queue::full_fence (246 samples, 0.24%)</title><rect x="85.7342%" y="933" width="0.2416%" height="15" fill="rgb(238,36,30)" fg:x="87304" fg:w="246"/><text x="85.9842%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (236 samples, 0.23%)</title><rect x="85.7440%" y="917" width="0.2318%" height="15" fill="rgb(254,85,0)" fg:x="87314" fg:w="236"/><text x="85.9940%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (236 samples, 0.23%)</title><rect x="85.7440%" y="901" width="0.2318%" height="15" fill="rgb(247,63,33)" fg:x="87314" fg:w="236"/><text x="85.9940%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (236 samples, 0.23%)</title><rect x="85.7440%" y="885" width="0.2318%" height="15" fill="rgb(220,7,54)" fg:x="87314" fg:w="236"/><text x="85.9940%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (13 samples, 0.01%)</title><rect x="85.9758%" y="933" width="0.0128%" height="15" fill="rgb(238,227,21)" fg:x="87550" fg:w="13"/><text x="86.2258%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (13 samples, 0.01%)</title><rect x="85.9758%" y="917" width="0.0128%" height="15" fill="rgb(237,29,31)" fg:x="87550" fg:w="13"/><text x="86.2258%" y="927.50"></text></g><g><title>async_executor::Executor::try_tick (852 samples, 0.84%)</title><rect x="85.1794%" y="981" width="0.8367%" height="15" fill="rgb(211,21,50)" fg:x="86739" fg:w="852"/><text x="85.4294%" y="991.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (348 samples, 0.34%)</title><rect x="85.6743%" y="965" width="0.3417%" height="15" fill="rgb(239,119,2)" fg:x="87243" fg:w="348"/><text x="85.9243%" y="975.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (318 samples, 0.31%)</title><rect x="85.7038%" y="949" width="0.3123%" height="15" fill="rgb(250,2,39)" fg:x="87273" fg:w="318"/><text x="85.9538%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (19 samples, 0.02%)</title><rect x="85.9974%" y="933" width="0.0187%" height="15" fill="rgb(244,46,53)" fg:x="87572" fg:w="19"/><text x="86.2474%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (19 samples, 0.02%)</title><rect x="85.9974%" y="917" width="0.0187%" height="15" fill="rgb(209,21,19)" fg:x="87572" fg:w="19"/><text x="86.2474%" y="927.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::get_unchecked (11 samples, 0.01%)</title><rect x="86.0229%" y="901" width="0.0108%" height="15" fill="rgb(236,145,4)" fg:x="87598" fg:w="11"/><text x="86.2729%" y="911.50"></text></g><g><title>async_executor::Executor::state (12 samples, 0.01%)</title><rect x="86.0229%" y="949" width="0.0118%" height="15" fill="rgb(220,133,36)" fg:x="87598" fg:w="12"/><text x="86.2729%" y="959.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (12 samples, 0.01%)</title><rect x="86.0229%" y="933" width="0.0118%" height="15" fill="rgb(244,18,3)" fg:x="87598" fg:w="12"/><text x="86.2729%" y="943.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (12 samples, 0.01%)</title><rect x="86.0229%" y="917" width="0.0118%" height="15" fill="rgb(232,171,48)" fg:x="87598" fg:w="12"/><text x="86.2729%" y="927.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (11 samples, 0.01%)</title><rect x="86.0504%" y="837" width="0.0108%" height="15" fill="rgb(223,223,53)" fg:x="87626" fg:w="11"/><text x="86.3004%" y="847.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (11 samples, 0.01%)</title><rect x="86.0504%" y="821" width="0.0108%" height="15" fill="rgb(246,92,13)" fg:x="87626" fg:w="11"/><text x="86.3004%" y="831.50"></text></g><g><title>__GI___libc_free (14 samples, 0.01%)</title><rect x="86.0691%" y="821" width="0.0137%" height="15" fill="rgb(229,171,10)" fg:x="87645" fg:w="14"/><text x="86.3191%" y="831.50"></text></g><g><title>_int_free (12 samples, 0.01%)</title><rect x="86.0710%" y="805" width="0.0118%" height="15" fill="rgb(213,131,26)" fg:x="87647" fg:w="12"/><text x="86.3210%" y="815.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (40 samples, 0.04%)</title><rect x="86.0494%" y="885" width="0.0393%" height="15" fill="rgb(242,87,54)" fg:x="87625" fg:w="40"/><text x="86.2994%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (40 samples, 0.04%)</title><rect x="86.0494%" y="869" width="0.0393%" height="15" fill="rgb(237,21,35)" fg:x="87625" fg:w="40"/><text x="86.2994%" y="879.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (40 samples, 0.04%)</title><rect x="86.0494%" y="853" width="0.0393%" height="15" fill="rgb(253,13,47)" fg:x="87625" fg:w="40"/><text x="86.2994%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (28 samples, 0.03%)</title><rect x="86.0612%" y="837" width="0.0275%" height="15" fill="rgb(215,122,49)" fg:x="87637" fg:w="28"/><text x="86.3112%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.04%)</title><rect x="86.0485%" y="917" width="0.0412%" height="15" fill="rgb(209,179,30)" fg:x="87624" fg:w="42"/><text x="86.2985%" y="927.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (42 samples, 0.04%)</title><rect x="86.0485%" y="901" width="0.0412%" height="15" fill="rgb(235,100,24)" fg:x="87624" fg:w="42"/><text x="86.2985%" y="911.50"></text></g><g><title>async_task::runnable::Runnable::run (55 samples, 0.05%)</title><rect x="86.0445%" y="949" width="0.0540%" height="15" fill="rgb(209,67,24)" fg:x="87620" fg:w="55"/><text x="86.2945%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (55 samples, 0.05%)</title><rect x="86.0445%" y="933" width="0.0540%" height="15" fill="rgb(206,74,32)" fg:x="87620" fg:w="55"/><text x="86.2945%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (319 samples, 0.31%)</title><rect x="86.1584%" y="917" width="0.3133%" height="15" fill="rgb(212,45,25)" fg:x="87736" fg:w="319"/><text x="86.4084%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (301 samples, 0.30%)</title><rect x="86.1761%" y="901" width="0.2956%" height="15" fill="rgb(239,26,3)" fg:x="87754" fg:w="301"/><text x="86.4261%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (301 samples, 0.30%)</title><rect x="86.1761%" y="885" width="0.2956%" height="15" fill="rgb(218,36,15)" fg:x="87754" fg:w="301"/><text x="86.4261%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (301 samples, 0.30%)</title><rect x="86.1761%" y="869" width="0.2956%" height="15" fill="rgb(206,108,24)" fg:x="87754" fg:w="301"/><text x="86.4261%" y="879.50"></text></g><g><title>async_executor::Executor::try_tick (490 samples, 0.48%)</title><rect x="86.0229%" y="965" width="0.4812%" height="15" fill="rgb(234,204,42)" fg:x="87598" fg:w="490"/><text x="86.2729%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (413 samples, 0.41%)</title><rect x="86.0985%" y="949" width="0.4056%" height="15" fill="rgb(229,2,11)" fg:x="87675" fg:w="413"/><text x="86.3485%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (403 samples, 0.40%)</title><rect x="86.1084%" y="933" width="0.3958%" height="15" fill="rgb(221,20,48)" fg:x="87685" fg:w="403"/><text x="86.3584%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (23 samples, 0.02%)</title><rect x="86.4815%" y="917" width="0.0226%" height="15" fill="rgb(244,164,10)" fg:x="88065" fg:w="23"/><text x="86.7315%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (23 samples, 0.02%)</title><rect x="86.4815%" y="901" width="0.0226%" height="15" fill="rgb(243,229,2)" fg:x="88065" fg:w="23"/><text x="86.7315%" y="911.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (504 samples, 0.49%)</title><rect x="86.0210%" y="981" width="0.4949%" height="15" fill="rgb(232,131,37)" fg:x="87596" fg:w="504"/><text x="86.2710%" y="991.50"></text></g><g><title>async_executor::LocalExecutor::inner (12 samples, 0.01%)</title><rect x="86.5041%" y="965" width="0.0118%" height="15" fill="rgb(217,156,11)" fg:x="88088" fg:w="12"/><text x="86.7541%" y="975.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (12 samples, 0.01%)</title><rect x="86.5041%" y="949" width="0.0118%" height="15" fill="rgb(239,99,48)" fg:x="88088" fg:w="12"/><text x="86.7541%" y="959.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (12 samples, 0.01%)</title><rect x="86.5041%" y="933" width="0.0118%" height="15" fill="rgb(231,209,9)" fg:x="88088" fg:w="12"/><text x="86.7541%" y="943.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (18 samples, 0.02%)</title><rect x="86.5866%" y="933" width="0.0177%" height="15" fill="rgb(254,97,27)" fg:x="88172" fg:w="18"/><text x="86.8366%" y="943.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (295 samples, 0.29%)</title><rect x="86.7673%" y="805" width="0.2897%" height="15" fill="rgb(223,151,38)" fg:x="88356" fg:w="295"/><text x="87.0173%" y="815.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (284 samples, 0.28%)</title><rect x="86.7781%" y="789" width="0.2789%" height="15" fill="rgb(219,206,35)" fg:x="88367" fg:w="284"/><text x="87.0281%" y="799.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (268 samples, 0.26%)</title><rect x="86.7938%" y="773" width="0.2632%" height="15" fill="rgb(216,130,31)" fg:x="88383" fg:w="268"/><text x="87.0438%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (268 samples, 0.26%)</title><rect x="86.7938%" y="757" width="0.2632%" height="15" fill="rgb(251,97,34)" fg:x="88383" fg:w="268"/><text x="87.0438%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (266 samples, 0.26%)</title><rect x="86.7958%" y="741" width="0.2612%" height="15" fill="rgb(246,159,47)" fg:x="88385" fg:w="266"/><text x="87.0458%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (266 samples, 0.26%)</title><rect x="86.7958%" y="725" width="0.2612%" height="15" fill="rgb(232,87,10)" fg:x="88385" fg:w="266"/><text x="87.0458%" y="735.50"></text></g><g><title>async_task::utils::abort_on_panic (555 samples, 0.55%)</title><rect x="86.7673%" y="837" width="0.5450%" height="15" fill="rgb(249,1,37)" fg:x="88356" fg:w="555"/><text x="87.0173%" y="847.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (555 samples, 0.55%)</title><rect x="86.7673%" y="821" width="0.5450%" height="15" fill="rgb(239,135,14)" fg:x="88356" fg:w="555"/><text x="87.0173%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (260 samples, 0.26%)</title><rect x="87.0570%" y="805" width="0.2553%" height="15" fill="rgb(253,116,46)" fg:x="88651" fg:w="260"/><text x="87.3070%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (245 samples, 0.24%)</title><rect x="87.0717%" y="789" width="0.2406%" height="15" fill="rgb(222,217,37)" fg:x="88666" fg:w="245"/><text x="87.3217%" y="799.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (245 samples, 0.24%)</title><rect x="87.0717%" y="773" width="0.2406%" height="15" fill="rgb(252,96,8)" fg:x="88666" fg:w="245"/><text x="87.3217%" y="783.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (245 samples, 0.24%)</title><rect x="87.0717%" y="757" width="0.2406%" height="15" fill="rgb(254,103,41)" fg:x="88666" fg:w="245"/><text x="87.3217%" y="767.50"></text></g><g><title>core::mem::drop (235 samples, 0.23%)</title><rect x="87.0815%" y="741" width="0.2308%" height="15" fill="rgb(218,213,19)" fg:x="88676" fg:w="235"/><text x="87.3315%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (235 samples, 0.23%)</title><rect x="87.0815%" y="725" width="0.2308%" height="15" fill="rgb(253,95,21)" fg:x="88676" fg:w="235"/><text x="87.3315%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (235 samples, 0.23%)</title><rect x="87.0815%" y="709" width="0.2308%" height="15" fill="rgb(229,26,28)" fg:x="88676" fg:w="235"/><text x="87.3315%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (232 samples, 0.23%)</title><rect x="87.0845%" y="693" width="0.2278%" height="15" fill="rgb(230,129,16)" fg:x="88679" fg:w="232"/><text x="87.3345%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (232 samples, 0.23%)</title><rect x="87.0845%" y="677" width="0.2278%" height="15" fill="rgb(236,126,17)" fg:x="88679" fg:w="232"/><text x="87.3345%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (11 samples, 0.01%)</title><rect x="87.3123%" y="837" width="0.0108%" height="15" fill="rgb(209,33,33)" fg:x="88911" fg:w="11"/><text x="87.5623%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (11 samples, 0.01%)</title><rect x="87.3123%" y="821" width="0.0108%" height="15" fill="rgb(227,85,29)" fg:x="88911" fg:w="11"/><text x="87.5623%" y="831.50"></text></g><g><title>async_task::header::Header::register (1,227 samples, 1.20%)</title><rect x="86.7054%" y="853" width="1.2049%" height="15" fill="rgb(241,53,46)" fg:x="88293" fg:w="1227"/><text x="86.9554%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (598 samples, 0.59%)</title><rect x="87.3231%" y="837" width="0.5872%" height="15" fill="rgb(228,167,53)" fg:x="88922" fg:w="598"/><text x="87.5731%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (598 samples, 0.59%)</title><rect x="87.3231%" y="821" width="0.5872%" height="15" fill="rgb(238,195,45)" fg:x="88922" fg:w="598"/><text x="87.5731%" y="831.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1,466 samples, 1.44%)</title><rect x="86.6072%" y="901" width="1.4396%" height="15" fill="rgb(252,124,45)" fg:x="88193" fg:w="1466"/><text x="86.8572%" y="911.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (1,466 samples, 1.44%)</title><rect x="86.6072%" y="885" width="1.4396%" height="15" fill="rgb(251,38,35)" fg:x="88193" fg:w="1466"/><text x="86.8572%" y="895.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (1,448 samples, 1.42%)</title><rect x="86.6249%" y="869" width="1.4220%" height="15" fill="rgb(227,33,2)" fg:x="88211" fg:w="1448"/><text x="86.8749%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (139 samples, 0.14%)</title><rect x="87.9104%" y="853" width="0.1365%" height="15" fill="rgb(223,157,46)" fg:x="89520" fg:w="139"/><text x="88.1604%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (139 samples, 0.14%)</title><rect x="87.9104%" y="837" width="0.1365%" height="15" fill="rgb(222,78,41)" fg:x="89520" fg:w="139"/><text x="88.1604%" y="847.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (1,467 samples, 1.44%)</title><rect x="86.6072%" y="917" width="1.4406%" height="15" fill="rgb(248,176,11)" fg:x="88193" fg:w="1467"/><text x="86.8572%" y="927.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (17 samples, 0.02%)</title><rect x="88.0478%" y="917" width="0.0167%" height="15" fill="rgb(241,221,18)" fg:x="89660" fg:w="17"/><text x="88.2978%" y="927.50"></text></g><g><title>core::cell::BorrowRefMut::new (17 samples, 0.02%)</title><rect x="88.0478%" y="901" width="0.0167%" height="15" fill="rgb(218,85,22)" fg:x="89660" fg:w="17"/><text x="88.2978%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (12 samples, 0.01%)</title><rect x="88.0528%" y="885" width="0.0118%" height="15" fill="rgb(222,223,7)" fg:x="89665" fg:w="12"/><text x="88.3028%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (12 samples, 0.01%)</title><rect x="88.0528%" y="869" width="0.0118%" height="15" fill="rgb(254,59,39)" fg:x="89665" fg:w="12"/><text x="88.3028%" y="879.50"></text></g><g><title>core::mem::replace (12 samples, 0.01%)</title><rect x="88.0528%" y="853" width="0.0118%" height="15" fill="rgb(247,100,27)" fg:x="89665" fg:w="12"/><text x="88.3028%" y="863.50"></text></g><g><title>core::ptr::write (12 samples, 0.01%)</title><rect x="88.0528%" y="837" width="0.0118%" height="15" fill="rgb(237,207,10)" fg:x="89665" fg:w="12"/><text x="88.3028%" y="847.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (16 samples, 0.02%)</title><rect x="88.0645%" y="917" width="0.0157%" height="15" fill="rgb(220,121,28)" fg:x="89677" fg:w="16"/><text x="88.3145%" y="927.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (16 samples, 0.02%)</title><rect x="88.0645%" y="901" width="0.0157%" height="15" fill="rgb(213,223,20)" fg:x="89677" fg:w="16"/><text x="88.3145%" y="911.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1,518 samples, 1.49%)</title><rect x="86.6043%" y="933" width="1.4907%" height="15" fill="rgb(205,121,27)" fg:x="88190" fg:w="1518"/><text x="86.8543%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (15 samples, 0.01%)</title><rect x="88.0803%" y="917" width="0.0147%" height="15" fill="rgb(253,24,53)" fg:x="89693" fg:w="15"/><text x="88.3303%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (15 samples, 0.01%)</title><rect x="88.0803%" y="901" width="0.0147%" height="15" fill="rgb(224,224,47)" fg:x="89693" fg:w="15"/><text x="88.3303%" y="911.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="88.0803%" y="885" width="0.0147%" height="15" fill="rgb(250,125,36)" fg:x="89693" fg:w="15"/><text x="88.3303%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (15 samples, 0.01%)</title><rect x="88.0803%" y="869" width="0.0147%" height="15" fill="rgb(240,144,38)" fg:x="89693" fg:w="15"/><text x="88.3303%" y="879.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (15 samples, 0.01%)</title><rect x="88.0803%" y="853" width="0.0147%" height="15" fill="rgb(250,15,50)" fg:x="89693" fg:w="15"/><text x="88.3303%" y="863.50"></text></g><g><title>core::mem::replace (15 samples, 0.01%)</title><rect x="88.0803%" y="837" width="0.0147%" height="15" fill="rgb(210,24,26)" fg:x="89693" fg:w="15"/><text x="88.3303%" y="847.50"></text></g><g><title>core::ptr::write (15 samples, 0.01%)</title><rect x="88.0803%" y="821" width="0.0147%" height="15" fill="rgb(234,53,53)" fg:x="89693" fg:w="15"/><text x="88.3303%" y="831.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (3,157 samples, 3.10%)</title><rect x="85.0085%" y="1125" width="3.1002%" height="15" fill="rgb(208,108,28)" fg:x="86565" fg:w="3157"/><text x="85.2585%" y="1135.50">bev..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (3,157 samples, 3.10%)</title><rect x="85.0085%" y="1109" width="3.1002%" height="15" fill="rgb(227,143,7)" fg:x="86565" fg:w="3157"/><text x="85.2585%" y="1119.50">&lt;be..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (3,157 samples, 3.10%)</title><rect x="85.0085%" y="1093" width="3.1002%" height="15" fill="rgb(238,189,38)" fg:x="86565" fg:w="3157"/><text x="85.2585%" y="1103.50">bev..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (3,157 samples, 3.10%)</title><rect x="85.0085%" y="1077" width="3.1002%" height="15" fill="rgb(222,69,15)" fg:x="86565" fg:w="3157"/><text x="85.2585%" y="1087.50">&lt;be..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (3,157 samples, 3.10%)</title><rect x="85.0085%" y="1061" width="3.1002%" height="15" fill="rgb(213,169,7)" fg:x="86565" fg:w="3157"/><text x="85.2585%" y="1071.50">&lt;be..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (3,157 samples, 3.10%)</title><rect x="85.0085%" y="1045" width="3.1002%" height="15" fill="rgb(251,219,4)" fg:x="86565" fg:w="3157"/><text x="85.2585%" y="1055.50">bev..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,157 samples, 3.10%)</title><rect x="85.0085%" y="1029" width="3.1002%" height="15" fill="rgb(241,55,40)" fg:x="86565" fg:w="3157"/><text x="85.2585%" y="1039.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,157 samples, 3.10%)</title><rect x="85.0085%" y="1013" width="3.1002%" height="15" fill="rgb(243,57,30)" fg:x="86565" fg:w="3157"/><text x="85.2585%" y="1023.50">std..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (3,157 samples, 3.10%)</title><rect x="85.0085%" y="997" width="3.1002%" height="15" fill="rgb(234,50,30)" fg:x="86565" fg:w="3157"/><text x="85.2585%" y="1007.50">bev..</text></g><g><title>futures_lite::future::block_on (1,620 samples, 1.59%)</title><rect x="86.5179%" y="981" width="1.5909%" height="15" fill="rgb(239,23,42)" fg:x="88102" fg:w="1620"/><text x="86.7679%" y="991.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,591 samples, 1.56%)</title><rect x="86.5463%" y="965" width="1.5624%" height="15" fill="rgb(217,38,19)" fg:x="88131" fg:w="1591"/><text x="86.7963%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,558 samples, 1.53%)</title><rect x="86.5787%" y="949" width="1.5300%" height="15" fill="rgb(215,179,16)" fg:x="88164" fg:w="1558"/><text x="86.8287%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.01%)</title><rect x="88.0950%" y="933" width="0.0137%" height="15" fill="rgb(254,21,37)" fg:x="89708" fg:w="14"/><text x="88.3450%" y="943.50"></text></g><g><title>_XEventsQueued (11 samples, 0.01%)</title><rect x="88.1559%" y="709" width="0.0108%" height="15" fill="rgb(219,207,48)" fg:x="89770" fg:w="11"/><text x="88.4059%" y="719.50"></text></g><g><title>[libX11.so.6.4.0] (11 samples, 0.01%)</title><rect x="88.1559%" y="693" width="0.0108%" height="15" fill="rgb(227,225,41)" fg:x="89770" fg:w="11"/><text x="88.4059%" y="703.50"></text></g><g><title>_XGetRequest (14 samples, 0.01%)</title><rect x="88.1559%" y="725" width="0.0137%" height="15" fill="rgb(223,130,1)" fg:x="89770" fg:w="14"/><text x="88.4059%" y="735.50"></text></g><g><title>_XSend (15 samples, 0.01%)</title><rect x="88.1726%" y="709" width="0.0147%" height="15" fill="rgb(249,54,42)" fg:x="89787" fg:w="15"/><text x="88.4226%" y="719.50"></text></g><g><title>[libxcb.so.1.1.0] (14 samples, 0.01%)</title><rect x="88.1961%" y="661" width="0.0137%" height="15" fill="rgb(248,69,25)" fg:x="89811" fg:w="14"/><text x="88.4461%" y="671.50"></text></g><g><title>[libxcb.so.1.1.0] (34 samples, 0.03%)</title><rect x="88.1902%" y="677" width="0.0334%" height="15" fill="rgb(234,21,32)" fg:x="89805" fg:w="34"/><text x="88.4402%" y="687.50"></text></g><g><title>[libxcb.so.1.1.0] (36 samples, 0.04%)</title><rect x="88.1893%" y="693" width="0.0354%" height="15" fill="rgb(252,136,6)" fg:x="89804" fg:w="36"/><text x="88.4393%" y="703.50"></text></g><g><title>XSync (71 samples, 0.07%)</title><rect x="88.1559%" y="741" width="0.0697%" height="15" fill="rgb(245,87,12)" fg:x="89770" fg:w="71"/><text x="88.4059%" y="751.50"></text></g><g><title>_XReply (57 samples, 0.06%)</title><rect x="88.1696%" y="725" width="0.0560%" height="15" fill="rgb(208,12,15)" fg:x="89784" fg:w="57"/><text x="88.4196%" y="735.50"></text></g><g><title>xcb_wait_for_reply64 (37 samples, 0.04%)</title><rect x="88.1893%" y="709" width="0.0363%" height="15" fill="rgb(250,98,2)" fg:x="89804" fg:w="37"/><text x="88.4393%" y="719.50"></text></g><g><title>[libxcb.so.1.1.0] (11 samples, 0.01%)</title><rect x="88.2521%" y="709" width="0.0108%" height="15" fill="rgb(205,213,15)" fg:x="89868" fg:w="11"/><text x="88.5021%" y="719.50"></text></g><g><title>xcb_poll_for_special_event (17 samples, 0.02%)</title><rect x="88.2492%" y="725" width="0.0167%" height="15" fill="rgb(248,192,44)" fg:x="89865" fg:w="17"/><text x="88.4992%" y="735.50"></text></g><g><title>xcb_sync_await_fence (20 samples, 0.02%)</title><rect x="88.2717%" y="725" width="0.0196%" height="15" fill="rgb(221,89,17)" fg:x="89888" fg:w="20"/><text x="88.5217%" y="735.50"></text></g><g><title>xcb_send_request (20 samples, 0.02%)</title><rect x="88.2717%" y="709" width="0.0196%" height="15" fill="rgb(209,55,3)" fg:x="89888" fg:w="20"/><text x="88.5217%" y="719.50"></text></g><g><title>xcb_send_request_with_fds64 (20 samples, 0.02%)</title><rect x="88.2717%" y="693" width="0.0196%" height="15" fill="rgb(247,23,45)" fg:x="89888" fg:w="20"/><text x="88.5217%" y="703.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (74 samples, 0.07%)</title><rect x="88.2256%" y="741" width="0.0727%" height="15" fill="rgb(235,152,23)" fg:x="89841" fg:w="74"/><text x="88.4756%" y="751.50"></text></g><g><title>__GI___poll (15 samples, 0.01%)</title><rect x="88.3051%" y="741" width="0.0147%" height="15" fill="rgb(244,63,13)" fg:x="89922" fg:w="15"/><text x="88.5551%" y="751.50"></text></g><g><title>[libxcb.so.1.1.0] (11 samples, 0.01%)</title><rect x="88.3258%" y="725" width="0.0108%" height="15" fill="rgb(227,30,37)" fg:x="89943" fg:w="11"/><text x="88.5758%" y="735.50"></text></g><g><title>xcb_flush (14 samples, 0.01%)</title><rect x="88.3248%" y="741" width="0.0137%" height="15" fill="rgb(224,49,42)" fg:x="89942" fg:w="14"/><text x="88.5748%" y="751.50"></text></g><g><title>__GI___poll (18 samples, 0.02%)</title><rect x="88.3454%" y="709" width="0.0177%" height="15" fill="rgb(218,129,5)" fg:x="89963" fg:w="18"/><text x="88.5954%" y="719.50"></text></g><g><title>[libxcb.so.1.1.0] (24 samples, 0.02%)</title><rect x="88.3444%" y="725" width="0.0236%" height="15" fill="rgb(240,199,54)" fg:x="89962" fg:w="24"/><text x="88.5944%" y="735.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (235 samples, 0.23%)</title><rect x="88.1421%" y="757" width="0.2308%" height="15" fill="rgb(234,31,13)" fg:x="89756" fg:w="235"/><text x="88.3921%" y="767.50"></text></g><g><title>xcb_wait_for_special_event (35 samples, 0.03%)</title><rect x="88.3385%" y="741" width="0.0344%" height="15" fill="rgb(219,73,54)" fg:x="89956" fg:w="35"/><text x="88.5885%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (25 samples, 0.02%)</title><rect x="88.3817%" y="741" width="0.0246%" height="15" fill="rgb(251,162,10)" fg:x="90000" fg:w="25"/><text x="88.6317%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (24 samples, 0.02%)</title><rect x="88.3827%" y="725" width="0.0236%" height="15" fill="rgb(240,138,47)" fg:x="90001" fg:w="24"/><text x="88.6327%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (311 samples, 0.31%)</title><rect x="88.1087%" y="1109" width="0.3054%" height="15" fill="rgb(216,138,26)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (311 samples, 0.31%)</title><rect x="88.1087%" y="1093" width="0.3054%" height="15" fill="rgb(243,17,35)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (311 samples, 0.31%)</title><rect x="88.1087%" y="1077" width="0.3054%" height="15" fill="rgb(241,60,18)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (311 samples, 0.31%)</title><rect x="88.1087%" y="1061" width="0.3054%" height="15" fill="rgb(234,2,44)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (311 samples, 0.31%)</title><rect x="88.1087%" y="1045" width="0.3054%" height="15" fill="rgb(225,225,33)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="1055.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (311 samples, 0.31%)</title><rect x="88.1087%" y="1029" width="0.3054%" height="15" fill="rgb(234,50,31)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (311 samples, 0.31%)</title><rect x="88.1087%" y="1013" width="0.3054%" height="15" fill="rgb(249,6,25)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (311 samples, 0.31%)</title><rect x="88.1087%" y="997" width="0.3054%" height="15" fill="rgb(241,5,17)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (311 samples, 0.31%)</title><rect x="88.1087%" y="981" width="0.3054%" height="15" fill="rgb(207,116,10)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (311 samples, 0.31%)</title><rect x="88.1087%" y="965" width="0.3054%" height="15" fill="rgb(222,128,18)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="975.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (311 samples, 0.31%)</title><rect x="88.1087%" y="949" width="0.3054%" height="15" fill="rgb(229,109,25)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (311 samples, 0.31%)</title><rect x="88.1087%" y="933" width="0.3054%" height="15" fill="rgb(222,102,25)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="943.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (311 samples, 0.31%)</title><rect x="88.1087%" y="917" width="0.3054%" height="15" fill="rgb(239,211,5)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="927.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (311 samples, 0.31%)</title><rect x="88.1087%" y="901" width="0.3054%" height="15" fill="rgb(223,136,26)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="911.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (311 samples, 0.31%)</title><rect x="88.1087%" y="885" width="0.3054%" height="15" fill="rgb(227,30,15)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="895.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (311 samples, 0.31%)</title><rect x="88.1087%" y="869" width="0.3054%" height="15" fill="rgb(247,76,4)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="879.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (311 samples, 0.31%)</title><rect x="88.1087%" y="853" width="0.3054%" height="15" fill="rgb(245,38,48)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (311 samples, 0.31%)</title><rect x="88.1087%" y="837" width="0.3054%" height="15" fill="rgb(210,220,14)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (311 samples, 0.31%)</title><rect x="88.1087%" y="821" width="0.3054%" height="15" fill="rgb(224,60,51)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (311 samples, 0.31%)</title><rect x="88.1087%" y="805" width="0.3054%" height="15" fill="rgb(212,133,49)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (311 samples, 0.31%)</title><rect x="88.1087%" y="789" width="0.3054%" height="15" fill="rgb(231,39,22)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (311 samples, 0.31%)</title><rect x="88.1087%" y="773" width="0.3054%" height="15" fill="rgb(236,173,22)" fg:x="89722" fg:w="311"/><text x="88.3587%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (42 samples, 0.04%)</title><rect x="88.3729%" y="757" width="0.0412%" height="15" fill="rgb(210,70,0)" fg:x="89991" fg:w="42"/><text x="88.6229%" y="767.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (15 samples, 0.01%)</title><rect x="88.4161%" y="1013" width="0.0147%" height="15" fill="rgb(215,170,11)" fg:x="90035" fg:w="15"/><text x="88.6661%" y="1023.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (29 samples, 0.03%)</title><rect x="88.4161%" y="1029" width="0.0285%" height="15" fill="rgb(220,154,28)" fg:x="90035" fg:w="29"/><text x="88.6661%" y="1039.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (11 samples, 0.01%)</title><rect x="88.4672%" y="933" width="0.0108%" height="15" fill="rgb(240,160,41)" fg:x="90087" fg:w="11"/><text x="88.7172%" y="943.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (11 samples, 0.01%)</title><rect x="88.4672%" y="917" width="0.0108%" height="15" fill="rgb(243,215,41)" fg:x="90087" fg:w="11"/><text x="88.7172%" y="927.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (17 samples, 0.02%)</title><rect x="88.4829%" y="917" width="0.0167%" height="15" fill="rgb(214,208,31)" fg:x="90103" fg:w="17"/><text x="88.7329%" y="927.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (17 samples, 0.02%)</title><rect x="88.4829%" y="901" width="0.0167%" height="15" fill="rgb(247,57,22)" fg:x="90103" fg:w="17"/><text x="88.7329%" y="911.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (17 samples, 0.02%)</title><rect x="88.4829%" y="885" width="0.0167%" height="15" fill="rgb(228,73,52)" fg:x="90103" fg:w="17"/><text x="88.7329%" y="895.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (17 samples, 0.02%)</title><rect x="88.4829%" y="869" width="0.0167%" height="15" fill="rgb(252,60,9)" fg:x="90103" fg:w="17"/><text x="88.7329%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.02%)</title><rect x="88.4829%" y="853" width="0.0167%" height="15" fill="rgb(233,9,51)" fg:x="90103" fg:w="17"/><text x="88.7329%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="88.4878%" y="837" width="0.0118%" height="15" fill="rgb(223,67,14)" fg:x="90108" fg:w="12"/><text x="88.7378%" y="847.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::device::Device&lt;B&gt;&gt;::borrow_pending_writes (21 samples, 0.02%)</title><rect x="88.4829%" y="933" width="0.0206%" height="15" fill="rgb(222,86,2)" fg:x="90103" fg:w="21"/><text x="88.7329%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (42 samples, 0.04%)</title><rect x="88.4652%" y="965" width="0.0412%" height="15" fill="rgb(243,58,54)" fg:x="90085" fg:w="42"/><text x="88.7152%" y="975.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (42 samples, 0.04%)</title><rect x="88.4652%" y="949" width="0.0412%" height="15" fill="rgb(210,200,39)" fg:x="90085" fg:w="42"/><text x="88.7152%" y="959.50"></text></g><g><title>wgpu::Buffer::unmap (43 samples, 0.04%)</title><rect x="88.4652%" y="981" width="0.0422%" height="15" fill="rgb(238,135,9)" fg:x="90085" fg:w="43"/><text x="88.7152%" y="991.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (65 samples, 0.06%)</title><rect x="88.4554%" y="997" width="0.0638%" height="15" fill="rgb(232,179,7)" fg:x="90075" fg:w="65"/><text x="88.7054%" y="1007.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (87 samples, 0.09%)</title><rect x="88.4534%" y="1013" width="0.0854%" height="15" fill="rgb(245,65,41)" fg:x="90073" fg:w="87"/><text x="88.7034%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (14 samples, 0.01%)</title><rect x="88.5251%" y="997" width="0.0137%" height="15" fill="rgb(227,43,8)" fg:x="90146" fg:w="14"/><text x="88.7751%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (14 samples, 0.01%)</title><rect x="88.5251%" y="981" width="0.0137%" height="15" fill="rgb(235,91,14)" fg:x="90146" fg:w="14"/><text x="88.7751%" y="991.50"></text></g><g><title>&lt;wgpu::Buffer as core::ops::drop::Drop&gt;::drop (26 samples, 0.03%)</title><rect x="88.5389%" y="917" width="0.0255%" height="15" fill="rgb(235,219,31)" fg:x="90160" fg:w="26"/><text x="88.7889%" y="927.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_drop (25 samples, 0.02%)</title><rect x="88.5398%" y="901" width="0.0246%" height="15" fill="rgb(227,121,25)" fg:x="90161" fg:w="25"/><text x="88.7898%" y="911.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (31 samples, 0.03%)</title><rect x="88.5389%" y="949" width="0.0304%" height="15" fill="rgb(254,129,24)" fg:x="90160" fg:w="31"/><text x="88.7889%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (31 samples, 0.03%)</title><rect x="88.5389%" y="933" width="0.0304%" height="15" fill="rgb(226,144,49)" fg:x="90160" fg:w="31"/><text x="88.7889%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt;&gt; (34 samples, 0.03%)</title><rect x="88.5389%" y="997" width="0.0334%" height="15" fill="rgb(214,187,32)" fg:x="90160" fg:w="34"/><text x="88.7889%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (34 samples, 0.03%)</title><rect x="88.5389%" y="981" width="0.0334%" height="15" fill="rgb(243,129,46)" fg:x="90160" fg:w="34"/><text x="88.7889%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (34 samples, 0.03%)</title><rect x="88.5389%" y="965" width="0.0334%" height="15" fill="rgb(221,185,35)" fg:x="90160" fg:w="34"/><text x="88.7889%" y="975.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (132 samples, 0.13%)</title><rect x="88.4534%" y="1029" width="0.1296%" height="15" fill="rgb(205,0,32)" fg:x="90073" fg:w="132"/><text x="88.7034%" y="1039.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::remove_buffer (45 samples, 0.04%)</title><rect x="88.5389%" y="1013" width="0.0442%" height="15" fill="rgb(229,179,12)" fg:x="90160" fg:w="45"/><text x="88.7889%" y="1023.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (188 samples, 0.18%)</title><rect x="88.4161%" y="1045" width="0.1846%" height="15" fill="rgb(252,107,19)" fg:x="90035" fg:w="188"/><text x="88.6661%" y="1055.50"></text></g><g><title>egui::context::Context::tessellate (17 samples, 0.02%)</title><rect x="88.5840%" y="1029" width="0.0167%" height="15" fill="rgb(220,95,27)" fg:x="90206" fg:w="17"/><text x="88.8340%" y="1039.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (19 samples, 0.02%)</title><rect x="88.7932%" y="981" width="0.0187%" height="15" fill="rgb(240,113,40)" fg:x="90419" fg:w="19"/><text x="89.0432%" y="991.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.04%)</title><rect x="88.7932%" y="997" width="0.0403%" height="15" fill="rgb(208,4,43)" fg:x="90419" fg:w="41"/><text x="89.0432%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (22 samples, 0.02%)</title><rect x="88.8119%" y="981" width="0.0216%" height="15" fill="rgb(247,189,30)" fg:x="90438" fg:w="22"/><text x="89.0619%" y="991.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (22 samples, 0.02%)</title><rect x="88.8119%" y="965" width="0.0216%" height="15" fill="rgb(231,157,17)" fg:x="90438" fg:w="22"/><text x="89.0619%" y="975.50"></text></g><g><title>core::ptr::read (22 samples, 0.02%)</title><rect x="88.8119%" y="949" width="0.0216%" height="15" fill="rgb(224,139,6)" fg:x="90438" fg:w="22"/><text x="89.0619%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (127 samples, 0.12%)</title><rect x="88.8767%" y="933" width="0.1247%" height="15" fill="rgb(223,83,16)" fg:x="90504" fg:w="127"/><text x="89.1267%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (127 samples, 0.12%)</title><rect x="88.8767%" y="917" width="0.1247%" height="15" fill="rgb(232,211,20)" fg:x="90504" fg:w="127"/><text x="89.1267%" y="927.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (155 samples, 0.15%)</title><rect x="88.8551%" y="949" width="0.1522%" height="15" fill="rgb(225,203,35)" fg:x="90482" fg:w="155"/><text x="89.1051%" y="959.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (251 samples, 0.25%)</title><rect x="88.8443%" y="981" width="0.2465%" height="15" fill="rgb(215,211,44)" fg:x="90471" fg:w="251"/><text x="89.0943%" y="991.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (247 samples, 0.24%)</title><rect x="88.8482%" y="965" width="0.2426%" height="15" fill="rgb(248,213,26)" fg:x="90475" fg:w="247"/><text x="89.0982%" y="975.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (85 samples, 0.08%)</title><rect x="89.0073%" y="949" width="0.0835%" height="15" fill="rgb(214,23,52)" fg:x="90637" fg:w="85"/><text x="89.2573%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (82 samples, 0.08%)</title><rect x="89.0102%" y="933" width="0.0805%" height="15" fill="rgb(225,173,50)" fg:x="90640" fg:w="82"/><text x="89.2602%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_or (82 samples, 0.08%)</title><rect x="89.0102%" y="917" width="0.0805%" height="15" fill="rgb(206,150,22)" fg:x="90640" fg:w="82"/><text x="89.2602%" y="927.50"></text></g><g><title>ahash::operations::folded_multiply (24 samples, 0.02%)</title><rect x="89.0907%" y="901" width="0.0236%" height="15" fill="rgb(239,64,23)" fg:x="90722" fg:w="24"/><text x="89.3407%" y="911.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (20 samples, 0.02%)</title><rect x="89.0947%" y="885" width="0.0196%" height="15" fill="rgb(242,50,38)" fg:x="90726" fg:w="20"/><text x="89.3447%" y="895.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (36 samples, 0.04%)</title><rect x="89.0907%" y="917" width="0.0354%" height="15" fill="rgb(217,91,15)" fg:x="90722" fg:w="36"/><text x="89.3407%" y="927.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.01%)</title><rect x="89.1143%" y="901" width="0.0118%" height="15" fill="rgb(230,172,6)" fg:x="90746" fg:w="12"/><text x="89.3643%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (61 samples, 0.06%)</title><rect x="89.0907%" y="933" width="0.0599%" height="15" fill="rgb(221,98,26)" fg:x="90722" fg:w="61"/><text x="89.3407%" y="943.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId as core::hash::Hash&gt;::hash (21 samples, 0.02%)</title><rect x="89.1300%" y="917" width="0.0206%" height="15" fill="rgb(227,210,45)" fg:x="90762" fg:w="21"/><text x="89.3800%" y="927.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (21 samples, 0.02%)</title><rect x="89.1300%" y="901" width="0.0206%" height="15" fill="rgb(206,8,30)" fg:x="90762" fg:w="21"/><text x="89.3800%" y="911.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (21 samples, 0.02%)</title><rect x="89.1300%" y="885" width="0.0206%" height="15" fill="rgb(241,219,17)" fg:x="90762" fg:w="21"/><text x="89.3800%" y="895.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (21 samples, 0.02%)</title><rect x="89.1300%" y="869" width="0.0206%" height="15" fill="rgb(247,121,29)" fg:x="90762" fg:w="21"/><text x="89.3800%" y="879.50"></text></g><g><title>ahash::operations::folded_multiply (15 samples, 0.01%)</title><rect x="89.1359%" y="853" width="0.0147%" height="15" fill="rgb(219,169,49)" fg:x="90768" fg:w="15"/><text x="89.3859%" y="863.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (12 samples, 0.01%)</title><rect x="89.1389%" y="837" width="0.0118%" height="15" fill="rgb(253,49,49)" fg:x="90771" fg:w="12"/><text x="89.3889%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (27 samples, 0.03%)</title><rect x="89.2381%" y="885" width="0.0265%" height="15" fill="rgb(217,178,3)" fg:x="90872" fg:w="27"/><text x="89.4881%" y="895.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (17 samples, 0.02%)</title><rect x="89.2479%" y="869" width="0.0167%" height="15" fill="rgb(234,73,37)" fg:x="90882" fg:w="17"/><text x="89.4979%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.04%)</title><rect x="89.2381%" y="901" width="0.0393%" height="15" fill="rgb(250,98,22)" fg:x="90872" fg:w="40"/><text x="89.4881%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (13 samples, 0.01%)</title><rect x="89.2646%" y="885" width="0.0128%" height="15" fill="rgb(220,108,37)" fg:x="90899" fg:w="13"/><text x="89.5146%" y="895.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (13 samples, 0.01%)</title><rect x="89.2646%" y="869" width="0.0128%" height="15" fill="rgb(225,168,10)" fg:x="90899" fg:w="13"/><text x="89.5146%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (45 samples, 0.04%)</title><rect x="89.2872%" y="853" width="0.0442%" height="15" fill="rgb(247,215,21)" fg:x="90922" fg:w="45"/><text x="89.5372%" y="863.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (45 samples, 0.04%)</title><rect x="89.2872%" y="837" width="0.0442%" height="15" fill="rgb(253,189,31)" fg:x="90922" fg:w="45"/><text x="89.5372%" y="847.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (45 samples, 0.04%)</title><rect x="89.2872%" y="821" width="0.0442%" height="15" fill="rgb(241,54,22)" fg:x="90922" fg:w="45"/><text x="89.5372%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (251 samples, 0.25%)</title><rect x="89.0907%" y="981" width="0.2465%" height="15" fill="rgb(211,87,4)" fg:x="90722" fg:w="251"/><text x="89.3407%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (251 samples, 0.25%)</title><rect x="89.0907%" y="965" width="0.2465%" height="15" fill="rgb(245,112,24)" fg:x="90722" fg:w="251"/><text x="89.3407%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (251 samples, 0.25%)</title><rect x="89.0907%" y="949" width="0.2465%" height="15" fill="rgb(235,190,41)" fg:x="90722" fg:w="251"/><text x="89.3407%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (190 samples, 0.19%)</title><rect x="89.1507%" y="933" width="0.1866%" height="15" fill="rgb(214,89,8)" fg:x="90783" fg:w="190"/><text x="89.4007%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (183 samples, 0.18%)</title><rect x="89.1575%" y="917" width="0.1797%" height="15" fill="rgb(249,155,35)" fg:x="90790" fg:w="183"/><text x="89.4075%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (61 samples, 0.06%)</title><rect x="89.2773%" y="901" width="0.0599%" height="15" fill="rgb(249,88,26)" fg:x="90912" fg:w="61"/><text x="89.5273%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (61 samples, 0.06%)</title><rect x="89.2773%" y="885" width="0.0599%" height="15" fill="rgb(232,56,8)" fg:x="90912" fg:w="61"/><text x="89.5273%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (61 samples, 0.06%)</title><rect x="89.2773%" y="869" width="0.0599%" height="15" fill="rgb(240,95,3)" fg:x="90912" fg:w="61"/><text x="89.5273%" y="879.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_bind_group (522 samples, 0.51%)</title><rect x="88.8335%" y="997" width="0.5126%" height="15" fill="rgb(222,44,28)" fg:x="90460" fg:w="522"/><text x="89.0835%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (12 samples, 0.01%)</title><rect x="89.3480%" y="981" width="0.0118%" height="15" fill="rgb(234,16,30)" fg:x="90984" fg:w="12"/><text x="89.5980%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (12 samples, 0.01%)</title><rect x="89.3480%" y="965" width="0.0118%" height="15" fill="rgb(223,26,17)" fg:x="90984" fg:w="12"/><text x="89.5980%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (12 samples, 0.01%)</title><rect x="89.3480%" y="949" width="0.0118%" height="15" fill="rgb(239,187,47)" fg:x="90984" fg:w="12"/><text x="89.5980%" y="959.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_pipeline (15 samples, 0.01%)</title><rect x="89.3471%" y="997" width="0.0147%" height="15" fill="rgb(247,102,50)" fg:x="90983" fg:w="15"/><text x="89.5971%" y="1007.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (26 samples, 0.03%)</title><rect x="89.3893%" y="805" width="0.0255%" height="15" fill="rgb(231,216,22)" fg:x="91026" fg:w="26"/><text x="89.6393%" y="815.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (37 samples, 0.04%)</title><rect x="89.3814%" y="821" width="0.0363%" height="15" fill="rgb(216,201,26)" fg:x="91018" fg:w="37"/><text x="89.6314%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (39 samples, 0.04%)</title><rect x="89.3814%" y="853" width="0.0383%" height="15" fill="rgb(214,186,23)" fg:x="91018" fg:w="39"/><text x="89.6314%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (39 samples, 0.04%)</title><rect x="89.3814%" y="837" width="0.0383%" height="15" fill="rgb(235,184,4)" fg:x="91018" fg:w="39"/><text x="89.6314%" y="847.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (45 samples, 0.04%)</title><rect x="89.3814%" y="901" width="0.0442%" height="15" fill="rgb(244,46,17)" fg:x="91018" fg:w="45"/><text x="89.6314%" y="911.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (45 samples, 0.04%)</title><rect x="89.3814%" y="885" width="0.0442%" height="15" fill="rgb(248,74,46)" fg:x="91018" fg:w="45"/><text x="89.6314%" y="895.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (45 samples, 0.04%)</title><rect x="89.3814%" y="869" width="0.0442%" height="15" fill="rgb(243,79,5)" fg:x="91018" fg:w="45"/><text x="89.6314%" y="879.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (54 samples, 0.05%)</title><rect x="89.3795%" y="917" width="0.0530%" height="15" fill="rgb(213,148,1)" fg:x="91016" fg:w="54"/><text x="89.6295%" y="927.50"></text></g><g><title>hashbrown::map::make_hash (68 samples, 0.07%)</title><rect x="89.3716%" y="933" width="0.0668%" height="15" fill="rgb(221,30,0)" fg:x="91008" fg:w="68"/><text x="89.6216%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="89.4472%" y="901" width="0.0118%" height="15" fill="rgb(207,85,29)" fg:x="91085" fg:w="12"/><text x="89.6972%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.01%)</title><rect x="89.4472%" y="885" width="0.0118%" height="15" fill="rgb(239,31,46)" fg:x="91085" fg:w="12"/><text x="89.6972%" y="895.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.01%)</title><rect x="89.4590%" y="901" width="0.0128%" height="15" fill="rgb(219,6,1)" fg:x="91097" fg:w="13"/><text x="89.7090%" y="911.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (13 samples, 0.01%)</title><rect x="89.4590%" y="885" width="0.0128%" height="15" fill="rgb(229,90,29)" fg:x="91097" fg:w="13"/><text x="89.7090%" y="895.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (124 samples, 0.12%)</title><rect x="89.3637%" y="997" width="0.1218%" height="15" fill="rgb(242,201,42)" fg:x="91000" fg:w="124"/><text x="89.6137%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (118 samples, 0.12%)</title><rect x="89.3696%" y="981" width="0.1159%" height="15" fill="rgb(243,80,54)" fg:x="91006" fg:w="118"/><text x="89.6196%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (116 samples, 0.11%)</title><rect x="89.3716%" y="965" width="0.1139%" height="15" fill="rgb(223,166,15)" fg:x="91008" fg:w="116"/><text x="89.6216%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (116 samples, 0.11%)</title><rect x="89.3716%" y="949" width="0.1139%" height="15" fill="rgb(238,78,27)" fg:x="91008" fg:w="116"/><text x="89.6216%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (48 samples, 0.05%)</title><rect x="89.4384%" y="933" width="0.0471%" height="15" fill="rgb(235,28,43)" fg:x="91076" fg:w="48"/><text x="89.6884%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (43 samples, 0.04%)</title><rect x="89.4433%" y="917" width="0.0422%" height="15" fill="rgb(240,210,28)" fg:x="91081" fg:w="43"/><text x="89.6933%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (14 samples, 0.01%)</title><rect x="89.4718%" y="901" width="0.0137%" height="15" fill="rgb(253,6,46)" fg:x="91110" fg:w="14"/><text x="89.7218%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (14 samples, 0.01%)</title><rect x="89.4718%" y="885" width="0.0137%" height="15" fill="rgb(250,159,47)" fg:x="91110" fg:w="14"/><text x="89.7218%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (14 samples, 0.01%)</title><rect x="89.4718%" y="869" width="0.0137%" height="15" fill="rgb(216,139,2)" fg:x="91110" fg:w="14"/><text x="89.7218%" y="879.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="89.5022%" y="965" width="0.0108%" height="15" fill="rgb(221,124,44)" fg:x="91141" fg:w="11"/><text x="89.7522%" y="975.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (11 samples, 0.01%)</title><rect x="89.5022%" y="949" width="0.0108%" height="15" fill="rgb(205,37,22)" fg:x="91141" fg:w="11"/><text x="89.7522%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (11 samples, 0.01%)</title><rect x="89.5022%" y="933" width="0.0108%" height="15" fill="rgb(250,55,8)" fg:x="91141" fg:w="11"/><text x="89.7522%" y="943.50"></text></g><g><title>bevy_render::pipeline::pipeline_layout::PipelineLayout::get_bind_group (26 samples, 0.03%)</title><rect x="89.4904%" y="997" width="0.0255%" height="15" fill="rgb(215,83,48)" fg:x="91129" fg:w="26"/><text x="89.7404%" y="1007.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (21 samples, 0.02%)</title><rect x="89.4953%" y="981" width="0.0206%" height="15" fill="rgb(253,2,32)" fg:x="91134" fg:w="21"/><text x="89.7453%" y="991.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::can_draw_indexed (22 samples, 0.02%)</title><rect x="89.5160%" y="997" width="0.0216%" height="15" fill="rgb(236,67,28)" fg:x="91155" fg:w="22"/><text x="89.7660%" y="1007.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::can_draw (22 samples, 0.02%)</title><rect x="89.5160%" y="981" width="0.0216%" height="15" fill="rgb(252,55,15)" fg:x="91155" fg:w="22"/><text x="89.7660%" y="991.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (18 samples, 0.02%)</title><rect x="89.5199%" y="965" width="0.0177%" height="15" fill="rgb(243,173,17)" fg:x="91159" fg:w="18"/><text x="89.7699%" y="975.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::is_index_buffer_set (11 samples, 0.01%)</title><rect x="89.5415%" y="997" width="0.0108%" height="15" fill="rgb(215,212,13)" fg:x="91181" fg:w="11"/><text x="89.7915%" y="1007.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::is_pipeline_set (110 samples, 0.11%)</title><rect x="89.5523%" y="997" width="0.1080%" height="15" fill="rgb(253,176,6)" fg:x="91192" fg:w="110"/><text x="89.8023%" y="1007.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (103 samples, 0.10%)</title><rect x="89.5592%" y="981" width="0.1011%" height="15" fill="rgb(236,105,26)" fg:x="91199" fg:w="103"/><text x="89.8092%" y="991.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (101 samples, 0.10%)</title><rect x="89.5611%" y="965" width="0.0992%" height="15" fill="rgb(239,226,32)" fg:x="91201" fg:w="101"/><text x="89.8111%" y="975.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (101 samples, 0.10%)</title><rect x="89.5611%" y="949" width="0.0992%" height="15" fill="rgb(236,104,51)" fg:x="91201" fg:w="101"/><text x="89.8111%" y="959.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (92 samples, 0.09%)</title><rect x="89.5700%" y="933" width="0.0903%" height="15" fill="rgb(220,172,33)" fg:x="91210" fg:w="92"/><text x="89.8200%" y="943.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (92 samples, 0.09%)</title><rect x="89.5700%" y="917" width="0.0903%" height="15" fill="rgb(224,182,25)" fg:x="91210" fg:w="92"/><text x="89.8200%" y="927.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (92 samples, 0.09%)</title><rect x="89.5700%" y="901" width="0.0903%" height="15" fill="rgb(236,184,24)" fg:x="91210" fg:w="92"/><text x="89.8200%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_deref (12 samples, 0.01%)</title><rect x="89.6800%" y="997" width="0.0118%" height="15" fill="rgb(241,221,14)" fg:x="91322" fg:w="12"/><text x="89.9300%" y="1007.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (12 samples, 0.01%)</title><rect x="89.6800%" y="981" width="0.0118%" height="15" fill="rgb(227,146,5)" fg:x="91322" fg:w="12"/><text x="89.9300%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (105 samples, 0.10%)</title><rect x="89.7006%" y="997" width="0.1031%" height="15" fill="rgb(214,15,23)" fg:x="91343" fg:w="105"/><text x="89.9506%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (102 samples, 0.10%)</title><rect x="89.7035%" y="981" width="0.1002%" height="15" fill="rgb(233,157,31)" fg:x="91346" fg:w="102"/><text x="89.9535%" y="991.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (102 samples, 0.10%)</title><rect x="89.7035%" y="965" width="0.1002%" height="15" fill="rgb(211,27,52)" fg:x="91346" fg:w="102"/><text x="89.9535%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (102 samples, 0.10%)</title><rect x="89.7035%" y="949" width="0.1002%" height="15" fill="rgb(212,223,15)" fg:x="91346" fg:w="102"/><text x="89.9535%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (102 samples, 0.10%)</title><rect x="89.7035%" y="933" width="0.1002%" height="15" fill="rgb(254,211,0)" fg:x="91346" fg:w="102"/><text x="89.9535%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (102 samples, 0.10%)</title><rect x="89.8165%" y="933" width="0.1002%" height="15" fill="rgb(205,43,38)" fg:x="91461" fg:w="102"/><text x="90.0665%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (102 samples, 0.10%)</title><rect x="89.8165%" y="917" width="0.1002%" height="15" fill="rgb(242,206,46)" fg:x="91461" fg:w="102"/><text x="90.0665%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (110 samples, 0.11%)</title><rect x="89.8135%" y="981" width="0.1080%" height="15" fill="rgb(220,221,12)" fg:x="91458" fg:w="110"/><text x="90.0635%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (110 samples, 0.11%)</title><rect x="89.8135%" y="965" width="0.1080%" height="15" fill="rgb(217,156,35)" fg:x="91458" fg:w="110"/><text x="90.0635%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (110 samples, 0.11%)</title><rect x="89.8135%" y="949" width="0.1080%" height="15" fill="rgb(207,181,49)" fg:x="91458" fg:w="110"/><text x="90.0635%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (19 samples, 0.02%)</title><rect x="89.9215%" y="981" width="0.0187%" height="15" fill="rgb(235,103,47)" fg:x="91568" fg:w="19"/><text x="90.1715%" y="991.50"></text></g><g><title>wgpu_render_pass_set_bind_group (141 samples, 0.14%)</title><rect x="89.8057%" y="997" width="0.1385%" height="15" fill="rgb(222,63,28)" fg:x="91450" fg:w="141"/><text x="90.0557%" y="1007.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (1,369 samples, 1.34%)</title><rect x="88.6007%" y="1013" width="1.3444%" height="15" fill="rgb(244,137,21)" fg:x="90223" fg:w="1369"/><text x="88.8507%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (15 samples, 0.01%)</title><rect x="89.9520%" y="1013" width="0.0147%" height="15" fill="rgb(228,35,27)" fg:x="91599" fg:w="15"/><text x="90.2020%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (15 samples, 0.01%)</title><rect x="89.9520%" y="997" width="0.0147%" height="15" fill="rgb(226,191,41)" fg:x="91599" fg:w="15"/><text x="90.2020%" y="1007.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (1,396 samples, 1.37%)</title><rect x="88.6007%" y="1029" width="1.3709%" height="15" fill="rgb(210,154,3)" fg:x="90223" fg:w="1396"/><text x="88.8507%" y="1039.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (1,397 samples, 1.37%)</title><rect x="88.6007%" y="1045" width="1.3719%" height="15" fill="rgb(216,60,49)" fg:x="90223" fg:w="1397"/><text x="88.8507%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.01%)</title><rect x="90.0227%" y="853" width="0.0128%" height="15" fill="rgb(226,17,20)" fg:x="91671" fg:w="13"/><text x="90.2727%" y="863.50"></text></g><g><title>ash::device::DeviceV1_0::wait_for_fences (36 samples, 0.04%)</title><rect x="90.0030%" y="933" width="0.0354%" height="15" fill="rgb(206,115,35)" fg:x="91651" fg:w="36"/><text x="90.2530%" y="943.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::wait_for_fences (36 samples, 0.04%)</title><rect x="90.0030%" y="917" width="0.0354%" height="15" fill="rgb(227,88,1)" fg:x="91651" fg:w="36"/><text x="90.2530%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (36 samples, 0.04%)</title><rect x="90.0030%" y="901" width="0.0354%" height="15" fill="rgb(230,222,24)" fg:x="91651" fg:w="36"/><text x="90.2530%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (31 samples, 0.03%)</title><rect x="90.0080%" y="885" width="0.0304%" height="15" fill="rgb(214,124,32)" fg:x="91656" fg:w="31"/><text x="90.2580%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (27 samples, 0.03%)</title><rect x="90.0119%" y="869" width="0.0265%" height="15" fill="rgb(240,41,36)" fg:x="91660" fg:w="27"/><text x="90.2619%" y="879.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (40 samples, 0.04%)</title><rect x="90.0384%" y="869" width="0.0393%" height="15" fill="rgb(221,17,52)" fg:x="91687" fg:w="40"/><text x="90.2884%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="90.0885%" y="853" width="0.0118%" height="15" fill="rgb(252,70,16)" fg:x="91738" fg:w="12"/><text x="90.3385%" y="863.50"></text></g><g><title>gfx_backend_vulkan::window::Swapchain::acquire_image (64 samples, 0.06%)</title><rect x="90.0384%" y="933" width="0.0628%" height="15" fill="rgb(250,177,4)" fg:x="91687" fg:w="64"/><text x="90.2884%" y="943.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (64 samples, 0.06%)</title><rect x="90.0384%" y="917" width="0.0628%" height="15" fill="rgb(240,188,47)" fg:x="91687" fg:w="64"/><text x="90.2884%" y="927.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::acquire_next_image_khr (64 samples, 0.06%)</title><rect x="90.0384%" y="901" width="0.0628%" height="15" fill="rgb(215,92,12)" fg:x="91687" fg:w="64"/><text x="90.2884%" y="911.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (64 samples, 0.06%)</title><rect x="90.0384%" y="885" width="0.0628%" height="15" fill="rgb(242,110,29)" fg:x="91687" fg:w="64"/><text x="90.2884%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (24 samples, 0.02%)</title><rect x="90.0777%" y="869" width="0.0236%" height="15" fill="rgb(208,211,26)" fg:x="91727" fg:w="24"/><text x="90.3277%" y="879.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::acquire_image (109 samples, 0.11%)</title><rect x="89.9952%" y="949" width="0.1070%" height="15" fill="rgb(244,147,6)" fg:x="91643" fg:w="109"/><text x="90.2452%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_get_current_texture_view (128 samples, 0.13%)</title><rect x="89.9922%" y="981" width="0.1257%" height="15" fill="rgb(211,130,42)" fg:x="91640" fg:w="128"/><text x="90.2422%" y="991.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_get_current_texture_view (127 samples, 0.12%)</title><rect x="89.9932%" y="965" width="0.1247%" height="15" fill="rgb(220,63,1)" fg:x="91641" fg:w="127"/><text x="90.2432%" y="975.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (150 samples, 0.15%)</title><rect x="89.9726%" y="1045" width="0.1473%" height="15" fill="rgb(241,212,30)" fg:x="91620" fg:w="150"/><text x="90.2226%" y="1055.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::next_swap_chain_texture (145 samples, 0.14%)</title><rect x="89.9775%" y="1029" width="0.1424%" height="15" fill="rgb(233,153,17)" fg:x="91625" fg:w="145"/><text x="90.2275%" y="1039.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::try_next_swap_chain_texture (145 samples, 0.14%)</title><rect x="89.9775%" y="1013" width="0.1424%" height="15" fill="rgb(236,3,10)" fg:x="91625" fg:w="145"/><text x="90.2275%" y="1023.50"></text></g><g><title>wgpu::SwapChain::get_current_frame (131 samples, 0.13%)</title><rect x="89.9913%" y="997" width="0.1286%" height="15" fill="rgb(232,41,21)" fg:x="91639" fg:w="131"/><text x="90.2413%" y="1007.50"></text></g><g><title>inplace_it::fixed_array::indirect (16 samples, 0.02%)</title><rect x="90.2417%" y="869" width="0.0157%" height="15" fill="rgb(206,63,51)" fg:x="91894" fg:w="16"/><text x="90.4917%" y="879.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer::{{closure}} (1,244 samples, 1.22%)</title><rect x="90.2623%" y="837" width="1.2216%" height="15" fill="rgb(250,214,3)" fg:x="91915" fg:w="1244"/><text x="90.5123%" y="847.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_copy_buffer (1,242 samples, 1.22%)</title><rect x="90.2643%" y="821" width="1.2197%" height="15" fill="rgb(254,89,27)" fg:x="91917" fg:w="1242"/><text x="90.5143%" y="831.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_copy_buffer (1,242 samples, 1.22%)</title><rect x="90.2643%" y="805" width="1.2197%" height="15" fill="rgb(249,41,14)" fg:x="91917" fg:w="1242"/><text x="90.5143%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1,242 samples, 1.22%)</title><rect x="90.2643%" y="789" width="1.2197%" height="15" fill="rgb(221,196,51)" fg:x="91917" fg:w="1242"/><text x="90.5143%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1,171 samples, 1.15%)</title><rect x="90.3340%" y="773" width="1.1499%" height="15" fill="rgb(214,116,26)" fg:x="91988" fg:w="1171"/><text x="90.5840%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (44 samples, 0.04%)</title><rect x="91.4407%" y="757" width="0.0432%" height="15" fill="rgb(236,67,7)" fg:x="93115" fg:w="44"/><text x="91.6907%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (23 samples, 0.02%)</title><rect x="91.4613%" y="741" width="0.0226%" height="15" fill="rgb(253,179,32)" fg:x="93136" fg:w="23"/><text x="91.7113%" y="751.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (1,252 samples, 1.23%)</title><rect x="90.2603%" y="853" width="1.2295%" height="15" fill="rgb(218,33,15)" fg:x="91913" fg:w="1252"/><text x="90.5103%" y="863.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (1,342 samples, 1.32%)</title><rect x="90.1729%" y="949" width="1.3179%" height="15" fill="rgb(217,202,41)" fg:x="91824" fg:w="1342"/><text x="90.4229%" y="959.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1,339 samples, 1.31%)</title><rect x="90.1759%" y="933" width="1.3149%" height="15" fill="rgb(234,133,5)" fg:x="91827" fg:w="1339"/><text x="90.4259%" y="943.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (1,339 samples, 1.31%)</title><rect x="90.1759%" y="917" width="1.3149%" height="15" fill="rgb(240,47,40)" fg:x="91827" fg:w="1339"/><text x="90.4259%" y="927.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (1,298 samples, 1.27%)</title><rect x="90.2161%" y="901" width="1.2747%" height="15" fill="rgb(234,166,26)" fg:x="91868" fg:w="1298"/><text x="90.4661%" y="911.50"></text></g><g><title>inplace_it::fixed_array::indirect (1,272 samples, 1.25%)</title><rect x="90.2417%" y="885" width="1.2491%" height="15" fill="rgb(244,125,51)" fg:x="91894" fg:w="1272"/><text x="90.4917%" y="895.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (1,256 samples, 1.23%)</title><rect x="90.2574%" y="869" width="1.2334%" height="15" fill="rgb(229,171,11)" fg:x="91910" fg:w="1256"/><text x="90.5074%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (17 samples, 0.02%)</title><rect x="91.4928%" y="949" width="0.0167%" height="15" fill="rgb(224,38,45)" fg:x="93168" fg:w="17"/><text x="91.7428%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (37 samples, 0.04%)</title><rect x="91.5095%" y="949" width="0.0363%" height="15" fill="rgb(237,27,7)" fg:x="93185" fg:w="37"/><text x="91.7595%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (33 samples, 0.03%)</title><rect x="91.5487%" y="949" width="0.0324%" height="15" fill="rgb(216,52,7)" fg:x="93225" fg:w="33"/><text x="91.7987%" y="959.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.03%)</title><rect x="91.5487%" y="933" width="0.0324%" height="15" fill="rgb(243,11,11)" fg:x="93225" fg:w="33"/><text x="91.7987%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (33 samples, 0.03%)</title><rect x="91.5487%" y="917" width="0.0324%" height="15" fill="rgb(253,167,20)" fg:x="93225" fg:w="33"/><text x="91.7987%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (32 samples, 0.03%)</title><rect x="91.5497%" y="901" width="0.0314%" height="15" fill="rgb(215,207,5)" fg:x="93226" fg:w="32"/><text x="91.7997%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (32 samples, 0.03%)</title><rect x="91.5497%" y="885" width="0.0314%" height="15" fill="rgb(252,127,31)" fg:x="93226" fg:w="32"/><text x="91.7997%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (43 samples, 0.04%)</title><rect x="91.5811%" y="949" width="0.0422%" height="15" fill="rgb(209,106,27)" fg:x="93258" fg:w="43"/><text x="91.8311%" y="959.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (43 samples, 0.04%)</title><rect x="91.5811%" y="933" width="0.0422%" height="15" fill="rgb(214,220,18)" fg:x="93258" fg:w="43"/><text x="91.8311%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (41 samples, 0.04%)</title><rect x="91.5831%" y="917" width="0.0403%" height="15" fill="rgb(237,89,12)" fg:x="93260" fg:w="41"/><text x="91.8331%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (40 samples, 0.04%)</title><rect x="91.5841%" y="901" width="0.0393%" height="15" fill="rgb(209,167,36)" fg:x="93261" fg:w="40"/><text x="91.8341%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (40 samples, 0.04%)</title><rect x="91.5841%" y="885" width="0.0393%" height="15" fill="rgb(243,45,22)" fg:x="93261" fg:w="40"/><text x="91.8341%" y="895.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::get_encoder_mut (13 samples, 0.01%)</title><rect x="91.6371%" y="949" width="0.0128%" height="15" fill="rgb(239,2,46)" fg:x="93315" fg:w="13"/><text x="91.8871%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (27 samples, 0.03%)</title><rect x="91.6646%" y="885" width="0.0265%" height="15" fill="rgb(241,101,0)" fg:x="93343" fg:w="27"/><text x="91.9146%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 0.03%)</title><rect x="91.6646%" y="869" width="0.0265%" height="15" fill="rgb(244,34,31)" fg:x="93343" fg:w="27"/><text x="91.9146%" y="879.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (33 samples, 0.03%)</title><rect x="91.6597%" y="949" width="0.0324%" height="15" fill="rgb(248,23,22)" fg:x="93338" fg:w="33"/><text x="91.9097%" y="959.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (32 samples, 0.03%)</title><rect x="91.6607%" y="933" width="0.0314%" height="15" fill="rgb(218,27,48)" fg:x="93339" fg:w="32"/><text x="91.9107%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (32 samples, 0.03%)</title><rect x="91.6607%" y="917" width="0.0314%" height="15" fill="rgb(232,78,1)" fg:x="93339" fg:w="32"/><text x="91.9107%" y="927.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (32 samples, 0.03%)</title><rect x="91.6607%" y="901" width="0.0314%" height="15" fill="rgb(233,169,12)" fg:x="93339" fg:w="32"/><text x="91.9107%" y="911.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (54 samples, 0.05%)</title><rect x="91.6921%" y="949" width="0.0530%" height="15" fill="rgb(225,222,54)" fg:x="93371" fg:w="54"/><text x="91.9421%" y="959.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (54 samples, 0.05%)</title><rect x="91.6921%" y="933" width="0.0530%" height="15" fill="rgb(245,126,29)" fg:x="93371" fg:w="54"/><text x="91.9421%" y="943.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (54 samples, 0.05%)</title><rect x="91.6921%" y="917" width="0.0530%" height="15" fill="rgb(241,63,48)" fg:x="93371" fg:w="54"/><text x="91.9421%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (54 samples, 0.05%)</title><rect x="91.6921%" y="901" width="0.0530%" height="15" fill="rgb(235,126,38)" fg:x="93371" fg:w="54"/><text x="91.9421%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (54 samples, 0.05%)</title><rect x="91.6921%" y="885" width="0.0530%" height="15" fill="rgb(232,96,49)" fg:x="93371" fg:w="54"/><text x="91.9421%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.01%)</title><rect x="91.7481%" y="933" width="0.0118%" height="15" fill="rgb(211,146,40)" fg:x="93428" fg:w="12"/><text x="91.9981%" y="943.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (29 samples, 0.03%)</title><rect x="91.7609%" y="933" width="0.0285%" height="15" fill="rgb(247,93,44)" fg:x="93441" fg:w="29"/><text x="92.0109%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (11 samples, 0.01%)</title><rect x="91.7942%" y="917" width="0.0108%" height="15" fill="rgb(251,41,49)" fg:x="93475" fg:w="11"/><text x="92.0442%" y="927.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (12 samples, 0.01%)</title><rect x="91.8060%" y="901" width="0.0118%" height="15" fill="rgb(218,155,12)" fg:x="93487" fg:w="12"/><text x="92.0560%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (11 samples, 0.01%)</title><rect x="91.8070%" y="885" width="0.0108%" height="15" fill="rgb(221,161,30)" fg:x="93488" fg:w="11"/><text x="92.0570%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_add (11 samples, 0.01%)</title><rect x="91.8070%" y="869" width="0.0108%" height="15" fill="rgb(221,179,11)" fg:x="93488" fg:w="11"/><text x="92.0570%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (12 samples, 0.01%)</title><rect x="91.8247%" y="869" width="0.0118%" height="15" fill="rgb(224,170,48)" fg:x="93506" fg:w="12"/><text x="92.0747%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="91.8247%" y="853" width="0.0118%" height="15" fill="rgb(223,117,5)" fg:x="93506" fg:w="12"/><text x="92.0747%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (12 samples, 0.01%)</title><rect x="91.8247%" y="837" width="0.0118%" height="15" fill="rgb(209,52,20)" fg:x="93506" fg:w="12"/><text x="92.0747%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (12 samples, 0.01%)</title><rect x="91.8247%" y="821" width="0.0118%" height="15" fill="rgb(209,19,41)" fg:x="93506" fg:w="12"/><text x="92.0747%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="91.8443%" y="853" width="0.0147%" height="15" fill="rgb(210,177,12)" fg:x="93526" fg:w="15"/><text x="92.0943%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.01%)</title><rect x="91.8443%" y="837" width="0.0147%" height="15" fill="rgb(211,159,37)" fg:x="93526" fg:w="15"/><text x="92.0943%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (46 samples, 0.05%)</title><rect x="91.8247%" y="901" width="0.0452%" height="15" fill="rgb(209,20,2)" fg:x="93506" fg:w="46"/><text x="92.0747%" y="911.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (46 samples, 0.05%)</title><rect x="91.8247%" y="885" width="0.0452%" height="15" fill="rgb(244,3,46)" fg:x="93506" fg:w="46"/><text x="92.0747%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (29 samples, 0.03%)</title><rect x="91.8414%" y="869" width="0.0285%" height="15" fill="rgb(220,94,38)" fg:x="93523" fg:w="29"/><text x="92.0914%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (11 samples, 0.01%)</title><rect x="91.8591%" y="853" width="0.0108%" height="15" fill="rgb(253,14,31)" fg:x="93541" fg:w="11"/><text x="92.1091%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (11 samples, 0.01%)</title><rect x="91.8591%" y="837" width="0.0108%" height="15" fill="rgb(234,176,13)" fg:x="93541" fg:w="11"/><text x="92.1091%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (11 samples, 0.01%)</title><rect x="91.8591%" y="821" width="0.0108%" height="15" fill="rgb(218,62,25)" fg:x="93541" fg:w="11"/><text x="92.1091%" y="831.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (73 samples, 0.07%)</title><rect x="91.8050%" y="917" width="0.0717%" height="15" fill="rgb(216,124,40)" fg:x="93486" fg:w="73"/><text x="92.0550%" y="927.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_replace (150 samples, 0.15%)</title><rect x="91.7451%" y="949" width="0.1473%" height="15" fill="rgb(228,170,12)" fg:x="93425" fg:w="150"/><text x="91.9951%" y="959.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (105 samples, 0.10%)</title><rect x="91.7893%" y="933" width="0.1031%" height="15" fill="rgb(231,226,5)" fg:x="93470" fg:w="105"/><text x="92.0393%" y="943.50"></text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::change (16 samples, 0.02%)</title><rect x="91.8767%" y="917" width="0.0157%" height="15" fill="rgb(237,122,22)" fg:x="93559" fg:w="16"/><text x="92.1267%" y="927.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (1,807 samples, 1.77%)</title><rect x="90.1199%" y="1045" width="1.7745%" height="15" fill="rgb(209,185,25)" fg:x="91770" fg:w="1807"/><text x="90.3699%" y="1055.50">b..</text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (1,807 samples, 1.77%)</title><rect x="90.1199%" y="1029" width="1.7745%" height="15" fill="rgb(228,200,32)" fg:x="91770" fg:w="1807"/><text x="90.3699%" y="1039.50">&lt;..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (1,807 samples, 1.77%)</title><rect x="90.1199%" y="1013" width="1.7745%" height="15" fill="rgb(217,140,10)" fg:x="91770" fg:w="1807"/><text x="90.3699%" y="1023.50">b..</text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (1,807 samples, 1.77%)</title><rect x="90.1199%" y="997" width="1.7745%" height="15" fill="rgb(253,17,24)" fg:x="91770" fg:w="1807"/><text x="90.3699%" y="1007.50">w..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (1,807 samples, 1.77%)</title><rect x="90.1199%" y="981" width="1.7745%" height="15" fill="rgb(212,61,6)" fg:x="91770" fg:w="1807"/><text x="90.3699%" y="991.50">&lt;..</text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (1,807 samples, 1.77%)</title><rect x="90.1199%" y="965" width="1.7745%" height="15" fill="rgb(205,14,25)" fg:x="91770" fg:w="1807"/><text x="90.3699%" y="975.50">w..</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (35,176 samples, 34.54%)</title><rect x="57.3529%" y="1317" width="34.5435%" height="15" fill="rgb(232,69,41)" fg:x="58403" fg:w="35176"/><text x="57.6029%" y="1327.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (35,176 samples, 34.54%)</title><rect x="57.3529%" y="1301" width="34.5435%" height="15" fill="rgb(241,106,47)" fg:x="58403" fg:w="35176"/><text x="57.6029%" y="1311.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (35,176 samples, 34.54%)</title><rect x="57.3529%" y="1285" width="34.5435%" height="15" fill="rgb(210,213,53)" fg:x="58403" fg:w="35176"/><text x="57.6029%" y="1295.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (35,176 samples, 34.54%)</title><rect x="57.3529%" y="1269" width="34.5435%" height="15" fill="rgb(253,175,27)" fg:x="58403" fg:w="35176"/><text x="57.6029%" y="1279.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_r..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (35,176 samples, 34.54%)</title><rect x="57.3529%" y="1253" width="34.5435%" height="15" fill="rgb(211,171,24)" fg:x="58403" fg:w="35176"/><text x="57.6029%" y="1263.50">winit::platform_impl::platform::sticky_exit_callback</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (35,176 samples, 34.54%)</title><rect x="57.3529%" y="1237" width="34.5435%" height="15" fill="rgb(229,80,7)" fg:x="58403" fg:w="35176"/><text x="57.6029%" y="1247.50">bevy_winit::winit_runner_with::{{closure}}</text></g><g><title>bevy_app::app::App::update (35,176 samples, 34.54%)</title><rect x="57.3529%" y="1221" width="34.5435%" height="15" fill="rgb(212,46,39)" fg:x="58403" fg:w="35176"/><text x="57.6029%" y="1231.50">bevy_app::app::App::update</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (35,176 samples, 34.54%)</title><rect x="57.3529%" y="1205" width="34.5435%" height="15" fill="rgb(240,80,45)" fg:x="58403" fg:w="35176"/><text x="57.6029%" y="1215.50">&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::sta..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (35,176 samples, 34.54%)</title><rect x="57.3529%" y="1189" width="34.5435%" height="15" fill="rgb(253,177,40)" fg:x="58403" fg:w="35176"/><text x="57.6029%" y="1199.50">bevy_ecs::schedule::Schedule::run_once</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (35,175 samples, 34.54%)</title><rect x="57.3539%" y="1173" width="34.5425%" height="15" fill="rgb(249,200,15)" fg:x="58404" fg:w="35175"/><text x="57.6039%" y="1183.50">&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::sch..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (7,014 samples, 6.89%)</title><rect x="85.0085%" y="1157" width="6.8879%" height="15" fill="rgb(217,78,26)" fg:x="86565" fg:w="7014"/><text x="85.2585%" y="1167.50">&lt;bevy_ecs..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (7,014 samples, 6.89%)</title><rect x="85.0085%" y="1141" width="6.8879%" height="15" fill="rgb(254,151,32)" fg:x="86565" fg:w="7014"/><text x="85.2585%" y="1151.50">&lt;alloc::b..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (3,857 samples, 3.79%)</title><rect x="88.1087%" y="1125" width="3.7876%" height="15" fill="rgb(226,165,27)" fg:x="89722" fg:w="3857"/><text x="88.3587%" y="1135.50">bevy..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (3,546 samples, 3.48%)</title><rect x="88.4141%" y="1109" width="3.4822%" height="15" fill="rgb(250,206,4)" fg:x="90033" fg:w="3546"/><text x="88.6641%" y="1119.50">bev..</text></g><g><title>bevy_ecs::world::World::resource_scope (3,546 samples, 3.48%)</title><rect x="88.4141%" y="1093" width="3.4822%" height="15" fill="rgb(231,229,27)" fg:x="90033" fg:w="3546"/><text x="88.6641%" y="1103.50">bev..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (3,546 samples, 3.48%)</title><rect x="88.4141%" y="1077" width="3.4822%" height="15" fill="rgb(239,217,8)" fg:x="90033" fg:w="3546"/><text x="88.6641%" y="1087.50">bev..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (3,544 samples, 3.48%)</title><rect x="88.4161%" y="1061" width="3.4803%" height="15" fill="rgb(225,204,27)" fg:x="90035" fg:w="3544"/><text x="88.6661%" y="1071.50">bev..</text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (37 samples, 0.04%)</title><rect x="91.8974%" y="965" width="0.0363%" height="15" fill="rgb(230,56,32)" fg:x="93580" fg:w="37"/><text x="92.1474%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (37 samples, 0.04%)</title><rect x="91.8974%" y="949" width="0.0363%" height="15" fill="rgb(222,56,27)" fg:x="93580" fg:w="37"/><text x="92.1474%" y="959.50"></text></g><g><title>core::ops::function::Fn::call (37 samples, 0.04%)</title><rect x="91.8974%" y="933" width="0.0363%" height="15" fill="rgb(253,108,27)" fg:x="93580" fg:w="37"/><text x="92.1474%" y="943.50"></text></g><g><title>bevy_egui::systems::begin_frame (30 samples, 0.03%)</title><rect x="91.9042%" y="917" width="0.0295%" height="15" fill="rgb(212,87,36)" fg:x="93587" fg:w="30"/><text x="92.1542%" y="927.50"></text></g><g><title>egui::context::CtxRef::begin_frame (30 samples, 0.03%)</title><rect x="91.9042%" y="901" width="0.0295%" height="15" fill="rgb(247,82,36)" fg:x="93587" fg:w="30"/><text x="92.1542%" y="911.50"></text></g><g><title>egui::context::Context::begin_frame_mut (28 samples, 0.03%)</title><rect x="91.9062%" y="885" width="0.0275%" height="15" fill="rgb(222,143,9)" fg:x="93589" fg:w="28"/><text x="92.1562%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId,bevy_wgpu::wgpu_resources::WgpuBindGroupInfo,ahash::random_state::RandomState&gt;&gt;&gt; (63 samples, 0.06%)</title><rect x="91.9524%" y="821" width="0.0619%" height="15" fill="rgb(238,162,48)" fg:x="93636" fg:w="63"/><text x="92.2024%" y="831.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (63 samples, 0.06%)</title><rect x="91.9524%" y="805" width="0.0619%" height="15" fill="rgb(221,59,43)" fg:x="93636" fg:w="63"/><text x="92.2024%" y="815.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (63 samples, 0.06%)</title><rect x="91.9524%" y="789" width="0.0619%" height="15" fill="rgb(205,166,41)" fg:x="93636" fg:w="63"/><text x="92.2024%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (59 samples, 0.06%)</title><rect x="91.9563%" y="773" width="0.0579%" height="15" fill="rgb(241,186,40)" fg:x="93640" fg:w="59"/><text x="92.2063%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_sub (59 samples, 0.06%)</title><rect x="91.9563%" y="757" width="0.0579%" height="15" fill="rgb(216,119,35)" fg:x="93640" fg:w="59"/><text x="92.2063%" y="767.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (114 samples, 0.11%)</title><rect x="92.0142%" y="821" width="0.1120%" height="15" fill="rgb(208,68,38)" fg:x="93699" fg:w="114"/><text x="92.2642%" y="831.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (114 samples, 0.11%)</title><rect x="92.0142%" y="805" width="0.1120%" height="15" fill="rgb(217,113,1)" fg:x="93699" fg:w="114"/><text x="92.2642%" y="815.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (114 samples, 0.11%)</title><rect x="92.0142%" y="789" width="0.1120%" height="15" fill="rgb(242,153,3)" fg:x="93699" fg:w="114"/><text x="92.2642%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (111 samples, 0.11%)</title><rect x="92.0172%" y="773" width="0.1090%" height="15" fill="rgb(229,76,35)" fg:x="93702" fg:w="111"/><text x="92.2672%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (111 samples, 0.11%)</title><rect x="92.0172%" y="757" width="0.1090%" height="15" fill="rgb(229,125,34)" fg:x="93702" fg:w="111"/><text x="92.2672%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.02%)</title><rect x="92.1262%" y="773" width="0.0196%" height="15" fill="rgb(238,179,36)" fg:x="93813" fg:w="20"/><text x="92.3762%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (22 samples, 0.02%)</title><rect x="92.1655%" y="725" width="0.0216%" height="15" fill="rgb(244,183,19)" fg:x="93853" fg:w="22"/><text x="92.4155%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (14 samples, 0.01%)</title><rect x="92.1733%" y="709" width="0.0137%" height="15" fill="rgb(216,85,49)" fg:x="93861" fg:w="14"/><text x="92.4233%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (23 samples, 0.02%)</title><rect x="92.1655%" y="741" width="0.0226%" height="15" fill="rgb(208,161,47)" fg:x="93853" fg:w="23"/><text x="92.4155%" y="751.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (273 samples, 0.27%)</title><rect x="91.9406%" y="853" width="0.2681%" height="15" fill="rgb(233,210,18)" fg:x="93624" fg:w="273"/><text x="92.1906%" y="863.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (266 samples, 0.26%)</title><rect x="91.9474%" y="837" width="0.2612%" height="15" fill="rgb(205,104,42)" fg:x="93631" fg:w="266"/><text x="92.1974%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (84 samples, 0.08%)</title><rect x="92.1262%" y="821" width="0.0825%" height="15" fill="rgb(248,90,43)" fg:x="93813" fg:w="84"/><text x="92.3762%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (84 samples, 0.08%)</title><rect x="92.1262%" y="805" width="0.0825%" height="15" fill="rgb(206,198,11)" fg:x="93813" fg:w="84"/><text x="92.3762%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (84 samples, 0.08%)</title><rect x="92.1262%" y="789" width="0.0825%" height="15" fill="rgb(239,165,27)" fg:x="93813" fg:w="84"/><text x="92.3762%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (64 samples, 0.06%)</title><rect x="92.1458%" y="773" width="0.0628%" height="15" fill="rgb(246,44,32)" fg:x="93833" fg:w="64"/><text x="92.3958%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (56 samples, 0.05%)</title><rect x="92.1537%" y="757" width="0.0550%" height="15" fill="rgb(252,65,42)" fg:x="93841" fg:w="56"/><text x="92.4037%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (21 samples, 0.02%)</title><rect x="92.1880%" y="741" width="0.0206%" height="15" fill="rgb(246,197,18)" fg:x="93876" fg:w="21"/><text x="92.4380%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (21 samples, 0.02%)</title><rect x="92.1880%" y="725" width="0.0206%" height="15" fill="rgb(216,192,4)" fg:x="93876" fg:w="21"/><text x="92.4380%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (21 samples, 0.02%)</title><rect x="92.1880%" y="709" width="0.0206%" height="15" fill="rgb(208,117,10)" fg:x="93876" fg:w="21"/><text x="92.4380%" y="719.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (276 samples, 0.27%)</title><rect x="91.9406%" y="917" width="0.2710%" height="15" fill="rgb(240,61,47)" fg:x="93624" fg:w="276"/><text x="92.1906%" y="927.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (276 samples, 0.27%)</title><rect x="91.9406%" y="901" width="0.2710%" height="15" fill="rgb(228,178,21)" fg:x="93624" fg:w="276"/><text x="92.1906%" y="911.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (276 samples, 0.27%)</title><rect x="91.9406%" y="885" width="0.2710%" height="15" fill="rgb(219,96,54)" fg:x="93624" fg:w="276"/><text x="92.1906%" y="895.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (276 samples, 0.27%)</title><rect x="91.9406%" y="869" width="0.2710%" height="15" fill="rgb(250,177,24)" fg:x="93624" fg:w="276"/><text x="92.1906%" y="879.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (284 samples, 0.28%)</title><rect x="91.9337%" y="965" width="0.2789%" height="15" fill="rgb(242,154,46)" fg:x="93617" fg:w="284"/><text x="92.1837%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (284 samples, 0.28%)</title><rect x="91.9337%" y="949" width="0.2789%" height="15" fill="rgb(226,176,29)" fg:x="93617" fg:w="284"/><text x="92.1837%" y="959.50"></text></g><g><title>core::ops::function::Fn::call (284 samples, 0.28%)</title><rect x="91.9337%" y="933" width="0.2789%" height="15" fill="rgb(226,29,2)" fg:x="93617" fg:w="284"/><text x="92.1837%" y="943.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5),()&gt;&gt;::run (16 samples, 0.02%)</title><rect x="92.2126%" y="965" width="0.0157%" height="15" fill="rgb(237,104,14)" fg:x="93901" fg:w="16"/><text x="92.4626%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (16 samples, 0.02%)</title><rect x="92.2126%" y="949" width="0.0157%" height="15" fill="rgb(245,207,31)" fg:x="93901" fg:w="16"/><text x="92.4626%" y="959.50"></text></g><g><title>core::ops::function::Fn::call (16 samples, 0.02%)</title><rect x="92.2126%" y="933" width="0.0157%" height="15" fill="rgb(229,211,45)" fg:x="93901" fg:w="16"/><text x="92.4626%" y="943.50"></text></g><g><title>bevy_egui::systems::process_input (16 samples, 0.02%)</title><rect x="92.2126%" y="917" width="0.0157%" height="15" fill="rgb(229,113,15)" fg:x="93901" fg:w="16"/><text x="92.4626%" y="927.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (12 samples, 0.01%)</title><rect x="92.2568%" y="789" width="0.0118%" height="15" fill="rgb(237,147,15)" fg:x="93946" fg:w="12"/><text x="92.5068%" y="799.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (15 samples, 0.01%)</title><rect x="92.2558%" y="821" width="0.0147%" height="15" fill="rgb(244,120,12)" fg:x="93945" fg:w="15"/><text x="92.5058%" y="831.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}} (15 samples, 0.01%)</title><rect x="92.2558%" y="805" width="0.0147%" height="15" fill="rgb(205,120,12)" fg:x="93945" fg:w="15"/><text x="92.5058%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (12 samples, 0.01%)</title><rect x="92.3039%" y="757" width="0.0118%" height="15" fill="rgb(231,26,45)" fg:x="93994" fg:w="12"/><text x="92.5539%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (12 samples, 0.01%)</title><rect x="92.3039%" y="741" width="0.0118%" height="15" fill="rgb(246,98,1)" fg:x="93994" fg:w="12"/><text x="92.5539%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (12 samples, 0.01%)</title><rect x="92.3039%" y="725" width="0.0118%" height="15" fill="rgb(207,68,45)" fg:x="93994" fg:w="12"/><text x="92.5539%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (40 samples, 0.04%)</title><rect x="92.2823%" y="805" width="0.0393%" height="15" fill="rgb(231,27,38)" fg:x="93972" fg:w="40"/><text x="92.5323%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each::call::{{closure}} (39 samples, 0.04%)</title><rect x="92.2833%" y="789" width="0.0383%" height="15" fill="rgb(214,223,3)" fg:x="93973" fg:w="39"/><text x="92.5333%" y="799.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal::{{closure}} (32 samples, 0.03%)</title><rect x="92.2902%" y="773" width="0.0314%" height="15" fill="rgb(228,195,46)" fg:x="93980" fg:w="32"/><text x="92.5402%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_for_each (41 samples, 0.04%)</title><rect x="92.2823%" y="821" width="0.0403%" height="15" fill="rgb(231,100,42)" fg:x="93972" fg:w="41"/><text x="92.5323%" y="831.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (443 samples, 0.44%)</title><rect x="91.8974%" y="1173" width="0.4350%" height="15" fill="rgb(236,53,4)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1183.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (443 samples, 0.44%)</title><rect x="91.8974%" y="1157" width="0.4350%" height="15" fill="rgb(230,152,12)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (443 samples, 0.44%)</title><rect x="91.8974%" y="1141" width="0.4350%" height="15" fill="rgb(226,101,19)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (443 samples, 0.44%)</title><rect x="91.8974%" y="1125" width="0.4350%" height="15" fill="rgb(250,149,32)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1135.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (443 samples, 0.44%)</title><rect x="91.8974%" y="1109" width="0.4350%" height="15" fill="rgb(232,178,12)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1119.50"></text></g><g><title>async_executor::Executor::try_tick (443 samples, 0.44%)</title><rect x="91.8974%" y="1093" width="0.4350%" height="15" fill="rgb(246,151,17)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1103.50"></text></g><g><title>async_task::runnable::Runnable::run (443 samples, 0.44%)</title><rect x="91.8974%" y="1077" width="0.4350%" height="15" fill="rgb(252,17,51)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (443 samples, 0.44%)</title><rect x="91.8974%" y="1061" width="0.4350%" height="15" fill="rgb(250,207,23)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (443 samples, 0.44%)</title><rect x="91.8974%" y="1045" width="0.4350%" height="15" fill="rgb(205,27,5)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1055.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (443 samples, 0.44%)</title><rect x="91.8974%" y="1029" width="0.4350%" height="15" fill="rgb(224,32,19)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (443 samples, 0.44%)</title><rect x="91.8974%" y="1013" width="0.4350%" height="15" fill="rgb(247,214,40)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1023.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (443 samples, 0.44%)</title><rect x="91.8974%" y="997" width="0.4350%" height="15" fill="rgb(239,199,17)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (443 samples, 0.44%)</title><rect x="91.8974%" y="981" width="0.4350%" height="15" fill="rgb(251,159,9)" fg:x="93580" fg:w="443"/><text x="92.1474%" y="991.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (106 samples, 0.10%)</title><rect x="92.2283%" y="965" width="0.1041%" height="15" fill="rgb(225,78,32)" fg:x="93917" fg:w="106"/><text x="92.4783%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (106 samples, 0.10%)</title><rect x="92.2283%" y="949" width="0.1041%" height="15" fill="rgb(206,97,47)" fg:x="93917" fg:w="106"/><text x="92.4783%" y="959.50"></text></g><g><title>core::ops::function::Fn::call (106 samples, 0.10%)</title><rect x="92.2283%" y="933" width="0.1041%" height="15" fill="rgb(227,107,4)" fg:x="93917" fg:w="106"/><text x="92.4783%" y="943.50"></text></g><g><title>bevy_ui::flex::flex_node_system (105 samples, 0.10%)</title><rect x="92.2293%" y="917" width="0.1031%" height="15" fill="rgb(241,146,50)" fg:x="93918" fg:w="105"/><text x="92.4793%" y="927.50"></text></g><g><title>bevy_ui::flex::FlexSurface::compute_window_layouts (105 samples, 0.10%)</title><rect x="92.2293%" y="901" width="0.1031%" height="15" fill="rgb(232,92,30)" fg:x="93918" fg:w="105"/><text x="92.4793%" y="911.50"></text></g><g><title>stretch::node::Stretch::compute_layout (105 samples, 0.10%)</title><rect x="92.2293%" y="885" width="0.1031%" height="15" fill="rgb(222,0,40)" fg:x="93918" fg:w="105"/><text x="92.4793%" y="895.50"></text></g><g><title>stretch::forest::Forest::compute_layout (105 samples, 0.10%)</title><rect x="92.2293%" y="869" width="0.1031%" height="15" fill="rgb(219,54,33)" fg:x="93918" fg:w="105"/><text x="92.4793%" y="879.50"></text></g><g><title>stretch::forest::Forest::compute_layout (105 samples, 0.10%)</title><rect x="92.2293%" y="853" width="0.1031%" height="15" fill="rgb(226,209,28)" fg:x="93918" fg:w="105"/><text x="92.4793%" y="863.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal (105 samples, 0.10%)</title><rect x="92.2293%" y="837" width="0.1031%" height="15" fill="rgb(254,205,35)" fg:x="93918" fg:w="105"/><text x="92.4793%" y="847.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemCoerced as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (19 samples, 0.02%)</title><rect x="92.3324%" y="1173" width="0.0187%" height="15" fill="rgb(230,159,3)" fg:x="94023" fg:w="19"/><text x="92.5824%" y="1183.50"></text></g><g><title>bevy_ecs::system::system::System::run (19 samples, 0.02%)</title><rect x="92.3324%" y="1157" width="0.0187%" height="15" fill="rgb(232,190,24)" fg:x="94023" fg:w="19"/><text x="92.5824%" y="1167.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (19 samples, 0.02%)</title><rect x="92.3324%" y="1141" width="0.0187%" height="15" fill="rgb(217,227,44)" fg:x="94023" fg:w="19"/><text x="92.5824%" y="1151.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (19 samples, 0.02%)</title><rect x="92.3324%" y="1125" width="0.0187%" height="15" fill="rgb(236,211,1)" fg:x="94023" fg:w="19"/><text x="92.5824%" y="1135.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (19 samples, 0.02%)</title><rect x="92.3324%" y="1109" width="0.0187%" height="15" fill="rgb(250,127,46)" fg:x="94023" fg:w="19"/><text x="92.5824%" y="1119.50"></text></g><g><title>core::ops::function::Fn::call (19 samples, 0.02%)</title><rect x="92.3324%" y="1093" width="0.0187%" height="15" fill="rgb(229,213,6)" fg:x="94023" fg:w="19"/><text x="92.5824%" y="1103.50"></text></g><g><title>bevy_console::console_system (19 samples, 0.02%)</title><rect x="92.3324%" y="1077" width="0.0187%" height="15" fill="rgb(237,15,36)" fg:x="94023" fg:w="19"/><text x="92.5824%" y="1087.50"></text></g><g><title>egui::containers::window::Window::show (19 samples, 0.02%)</title><rect x="92.3324%" y="1061" width="0.0187%" height="15" fill="rgb(213,131,41)" fg:x="94023" fg:w="19"/><text x="92.5824%" y="1071.50"></text></g><g><title>egui::containers::window::Window::show_impl (19 samples, 0.02%)</title><rect x="92.3324%" y="1045" width="0.0187%" height="15" fill="rgb(225,82,44)" fg:x="94023" fg:w="19"/><text x="92.5824%" y="1055.50"></text></g><g><title>egui::containers::area::Area::show_open_close_animation (11 samples, 0.01%)</title><rect x="92.3403%" y="1029" width="0.0108%" height="15" fill="rgb(249,42,11)" fg:x="94031" fg:w="11"/><text x="92.5903%" y="1039.50"></text></g><g><title>wgpu::BufferSlice::map_async (18 samples, 0.02%)</title><rect x="92.3511%" y="789" width="0.0177%" height="15" fill="rgb(253,11,29)" fg:x="94042" fg:w="18"/><text x="92.6011%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (18 samples, 0.02%)</title><rect x="92.3511%" y="773" width="0.0177%" height="15" fill="rgb(206,8,54)" fg:x="94042" fg:w="18"/><text x="92.6011%" y="783.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (18 samples, 0.02%)</title><rect x="92.3511%" y="757" width="0.0177%" height="15" fill="rgb(222,186,2)" fg:x="94042" fg:w="18"/><text x="92.6011%" y="767.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (11 samples, 0.01%)</title><rect x="92.3766%" y="725" width="0.0108%" height="15" fill="rgb(221,206,53)" fg:x="94068" fg:w="11"/><text x="92.6266%" y="735.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (26 samples, 0.03%)</title><rect x="92.3687%" y="741" width="0.0255%" height="15" fill="rgb(230,150,21)" fg:x="94060" fg:w="26"/><text x="92.6187%" y="751.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (46 samples, 0.05%)</title><rect x="92.3511%" y="805" width="0.0452%" height="15" fill="rgb(253,202,10)" fg:x="94042" fg:w="46"/><text x="92.6011%" y="815.50"></text></g><g><title>wgpu::Device::poll (28 samples, 0.03%)</title><rect x="92.3687%" y="789" width="0.0275%" height="15" fill="rgb(238,109,40)" fg:x="94060" fg:w="28"/><text x="92.6187%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (28 samples, 0.03%)</title><rect x="92.3687%" y="773" width="0.0275%" height="15" fill="rgb(247,120,22)" fg:x="94060" fg:w="28"/><text x="92.6187%" y="783.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (28 samples, 0.03%)</title><rect x="92.3687%" y="757" width="0.0275%" height="15" fill="rgb(207,43,30)" fg:x="94060" fg:w="28"/><text x="92.6187%" y="767.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (51 samples, 0.05%)</title><rect x="92.3511%" y="869" width="0.0501%" height="15" fill="rgb(213,211,24)" fg:x="94042" fg:w="51"/><text x="92.6011%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (51 samples, 0.05%)</title><rect x="92.3511%" y="853" width="0.0501%" height="15" fill="rgb(239,73,39)" fg:x="94042" fg:w="51"/><text x="92.6011%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (51 samples, 0.05%)</title><rect x="92.3511%" y="837" width="0.0501%" height="15" fill="rgb(245,182,19)" fg:x="94042" fg:w="51"/><text x="92.6011%" y="847.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (51 samples, 0.05%)</title><rect x="92.3511%" y="821" width="0.0501%" height="15" fill="rgb(247,143,26)" fg:x="94042" fg:w="51"/><text x="92.6011%" y="831.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (46 samples, 0.05%)</title><rect x="92.4453%" y="757" width="0.0452%" height="15" fill="rgb(228,191,23)" fg:x="94138" fg:w="46"/><text x="92.6953%" y="767.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (16 samples, 0.02%)</title><rect x="92.4905%" y="725" width="0.0157%" height="15" fill="rgb(253,165,31)" fg:x="94184" fg:w="16"/><text x="92.7405%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.01%)</title><rect x="92.4915%" y="709" width="0.0147%" height="15" fill="rgb(234,138,20)" fg:x="94185" fg:w="15"/><text x="92.7415%" y="719.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (15 samples, 0.01%)</title><rect x="92.4915%" y="693" width="0.0147%" height="15" fill="rgb(218,191,29)" fg:x="94185" fg:w="15"/><text x="92.7415%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (15 samples, 0.01%)</title><rect x="92.4915%" y="677" width="0.0147%" height="15" fill="rgb(221,157,19)" fg:x="94185" fg:w="15"/><text x="92.7415%" y="687.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (66 samples, 0.06%)</title><rect x="92.4424%" y="773" width="0.0648%" height="15" fill="rgb(237,26,42)" fg:x="94135" fg:w="66"/><text x="92.6924%" y="783.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (17 samples, 0.02%)</title><rect x="92.4905%" y="757" width="0.0167%" height="15" fill="rgb(220,163,24)" fg:x="94184" fg:w="17"/><text x="92.7405%" y="767.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (17 samples, 0.02%)</title><rect x="92.4905%" y="741" width="0.0167%" height="15" fill="rgb(242,115,20)" fg:x="94184" fg:w="17"/><text x="92.7405%" y="751.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_table (72 samples, 0.07%)</title><rect x="92.4385%" y="789" width="0.0707%" height="15" fill="rgb(210,206,9)" fg:x="94131" fg:w="72"/><text x="92.6885%" y="799.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (30 samples, 0.03%)</title><rect x="92.5209%" y="741" width="0.0295%" height="15" fill="rgb(208,71,17)" fg:x="94215" fg:w="30"/><text x="92.7709%" y="751.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::is_changed (25 samples, 0.02%)</title><rect x="92.5259%" y="725" width="0.0246%" height="15" fill="rgb(233,7,5)" fg:x="94220" fg:w="25"/><text x="92.7759%" y="735.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (22 samples, 0.02%)</title><rect x="92.5288%" y="709" width="0.0216%" height="15" fill="rgb(207,92,33)" fg:x="94223" fg:w="22"/><text x="92.7788%" y="719.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (38 samples, 0.04%)</title><rect x="92.5150%" y="789" width="0.0373%" height="15" fill="rgb(218,87,9)" fg:x="94209" fg:w="38"/><text x="92.7650%" y="799.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (38 samples, 0.04%)</title><rect x="92.5150%" y="773" width="0.0373%" height="15" fill="rgb(219,47,37)" fg:x="94209" fg:w="38"/><text x="92.7650%" y="783.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (32 samples, 0.03%)</title><rect x="92.5209%" y="757" width="0.0314%" height="15" fill="rgb(221,152,34)" fg:x="94215" fg:w="32"/><text x="92.7709%" y="767.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (145 samples, 0.14%)</title><rect x="92.4168%" y="805" width="0.1424%" height="15" fill="rgb(235,176,21)" fg:x="94109" fg:w="145"/><text x="92.6668%" y="815.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (41 samples, 0.04%)</title><rect x="92.5808%" y="773" width="0.0403%" height="15" fill="rgb(232,212,21)" fg:x="94276" fg:w="41"/><text x="92.8308%" y="783.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (37 samples, 0.04%)</title><rect x="92.5848%" y="757" width="0.0363%" height="15" fill="rgb(245,82,39)" fg:x="94280" fg:w="37"/><text x="92.8348%" y="767.50"></text></g><g><title>wgpu::BufferSlice::map_async (45 samples, 0.04%)</title><rect x="92.5808%" y="789" width="0.0442%" height="15" fill="rgb(241,52,51)" fg:x="94276" fg:w="45"/><text x="92.8308%" y="799.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::reset (43 samples, 0.04%)</title><rect x="92.6358%" y="677" width="0.0422%" height="15" fill="rgb(219,91,24)" fg:x="94332" fg:w="43"/><text x="92.8858%" y="687.50"></text></g><g><title>ash::device::DeviceV1_0::reset_command_buffer (43 samples, 0.04%)</title><rect x="92.6358%" y="661" width="0.0422%" height="15" fill="rgb(241,142,12)" fg:x="94332" fg:w="43"/><text x="92.8858%" y="671.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::reset_command_buffer (43 samples, 0.04%)</title><rect x="92.6358%" y="645" width="0.0422%" height="15" fill="rgb(230,27,9)" fg:x="94332" fg:w="43"/><text x="92.8858%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (43 samples, 0.04%)</title><rect x="92.6358%" y="629" width="0.0422%" height="15" fill="rgb(249,181,32)" fg:x="94332" fg:w="43"/><text x="92.8858%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (35 samples, 0.03%)</title><rect x="92.6437%" y="613" width="0.0344%" height="15" fill="rgb(230,107,3)" fg:x="94340" fg:w="35"/><text x="92.8937%" y="623.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (48 samples, 0.05%)</title><rect x="92.6319%" y="725" width="0.0471%" height="15" fill="rgb(246,204,14)" fg:x="94328" fg:w="48"/><text x="92.8819%" y="735.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::maintain (45 samples, 0.04%)</title><rect x="92.6349%" y="709" width="0.0442%" height="15" fill="rgb(213,192,47)" fg:x="94331" fg:w="45"/><text x="92.8849%" y="719.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::recycle (44 samples, 0.04%)</title><rect x="92.6358%" y="693" width="0.0432%" height="15" fill="rgb(240,44,36)" fg:x="94332" fg:w="44"/><text x="92.8858%" y="703.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (13 samples, 0.01%)</title><rect x="92.6800%" y="709" width="0.0128%" height="15" fill="rgb(244,209,38)" fg:x="94377" fg:w="13"/><text x="92.9300%" y="719.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (13 samples, 0.01%)</title><rect x="92.6800%" y="693" width="0.0128%" height="15" fill="rgb(219,34,37)" fg:x="94377" fg:w="13"/><text x="92.9300%" y="703.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (39 samples, 0.04%)</title><rect x="92.6790%" y="725" width="0.0383%" height="15" fill="rgb(210,28,6)" fg:x="94376" fg:w="39"/><text x="92.9290%" y="735.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (25 samples, 0.02%)</title><rect x="92.6928%" y="709" width="0.0246%" height="15" fill="rgb(244,110,52)" fg:x="94390" fg:w="25"/><text x="92.9428%" y="719.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (118 samples, 0.12%)</title><rect x="92.6270%" y="741" width="0.1159%" height="15" fill="rgb(254,124,47)" fg:x="94323" fg:w="118"/><text x="92.8770%" y="751.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (18 samples, 0.02%)</title><rect x="92.7252%" y="725" width="0.0177%" height="15" fill="rgb(254,110,13)" fg:x="94423" fg:w="18"/><text x="92.9752%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (191 samples, 0.19%)</title><rect x="92.5592%" y="805" width="0.1876%" height="15" fill="rgb(252,57,21)" fg:x="94254" fg:w="191"/><text x="92.8092%" y="815.50"></text></g><g><title>wgpu::Device::poll (124 samples, 0.12%)</title><rect x="92.6250%" y="789" width="0.1218%" height="15" fill="rgb(242,60,45)" fg:x="94321" fg:w="124"/><text x="92.8750%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (124 samples, 0.12%)</title><rect x="92.6250%" y="773" width="0.1218%" height="15" fill="rgb(234,49,30)" fg:x="94321" fg:w="124"/><text x="92.8750%" y="783.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (124 samples, 0.12%)</title><rect x="92.6250%" y="757" width="0.1218%" height="15" fill="rgb(218,98,6)" fg:x="94321" fg:w="124"/><text x="92.8750%" y="767.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (14 samples, 0.01%)</title><rect x="92.7517%" y="773" width="0.0137%" height="15" fill="rgb(220,174,29)" fg:x="94450" fg:w="14"/><text x="93.0017%" y="783.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (12 samples, 0.01%)</title><rect x="92.7537%" y="757" width="0.0118%" height="15" fill="rgb(236,163,23)" fg:x="94452" fg:w="12"/><text x="93.0037%" y="767.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (21 samples, 0.02%)</title><rect x="92.7468%" y="805" width="0.0206%" height="15" fill="rgb(242,114,45)" fg:x="94445" fg:w="21"/><text x="92.9968%" y="815.50"></text></g><g><title>wgpu::Buffer::unmap (18 samples, 0.02%)</title><rect x="92.7498%" y="789" width="0.0177%" height="15" fill="rgb(232,10,53)" fg:x="94448" fg:w="18"/><text x="92.9998%" y="799.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (14 samples, 0.01%)</title><rect x="92.8018%" y="725" width="0.0137%" height="15" fill="rgb(245,108,29)" fg:x="94501" fg:w="14"/><text x="93.0518%" y="735.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (20 samples, 0.02%)</title><rect x="92.8008%" y="741" width="0.0196%" height="15" fill="rgb(240,89,53)" fg:x="94500" fg:w="20"/><text x="93.0508%" y="751.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::set_table (28 samples, 0.03%)</title><rect x="92.7989%" y="757" width="0.0275%" height="15" fill="rgb(226,60,45)" fg:x="94498" fg:w="28"/><text x="93.0489%" y="767.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (21 samples, 0.02%)</title><rect x="92.8273%" y="757" width="0.0206%" height="15" fill="rgb(230,41,44)" fg:x="94527" fg:w="21"/><text x="93.0773%" y="767.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (21 samples, 0.02%)</title><rect x="92.8273%" y="741" width="0.0206%" height="15" fill="rgb(230,26,20)" fg:x="94527" fg:w="21"/><text x="93.0773%" y="751.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (11 samples, 0.01%)</title><rect x="92.8372%" y="725" width="0.0108%" height="15" fill="rgb(237,170,32)" fg:x="94537" fg:w="11"/><text x="93.0872%" y="735.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (68 samples, 0.07%)</title><rect x="92.7871%" y="773" width="0.0668%" height="15" fill="rgb(212,35,42)" fg:x="94486" fg:w="68"/><text x="93.0371%" y="783.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (21 samples, 0.02%)</title><rect x="92.8912%" y="757" width="0.0206%" height="15" fill="rgb(227,31,34)" fg:x="94592" fg:w="21"/><text x="93.1412%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (33 samples, 0.03%)</title><rect x="92.9481%" y="661" width="0.0324%" height="15" fill="rgb(216,19,18)" fg:x="94650" fg:w="33"/><text x="93.1981%" y="671.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (33 samples, 0.03%)</title><rect x="92.9481%" y="645" width="0.0324%" height="15" fill="rgb(211,133,42)" fg:x="94650" fg:w="33"/><text x="93.1981%" y="655.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding (71 samples, 0.07%)</title><rect x="92.9236%" y="757" width="0.0697%" height="15" fill="rgb(244,66,13)" fg:x="94625" fg:w="71"/><text x="93.1736%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (66 samples, 0.06%)</title><rect x="92.9285%" y="741" width="0.0648%" height="15" fill="rgb(218,185,50)" fg:x="94630" fg:w="66"/><text x="93.1785%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (66 samples, 0.06%)</title><rect x="92.9285%" y="725" width="0.0648%" height="15" fill="rgb(219,149,13)" fg:x="94630" fg:w="66"/><text x="93.1785%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (66 samples, 0.06%)</title><rect x="92.9285%" y="709" width="0.0648%" height="15" fill="rgb(221,125,0)" fg:x="94630" fg:w="66"/><text x="93.1785%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (57 samples, 0.06%)</title><rect x="92.9373%" y="693" width="0.0560%" height="15" fill="rgb(247,126,27)" fg:x="94639" fg:w="57"/><text x="93.1873%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (57 samples, 0.06%)</title><rect x="92.9373%" y="677" width="0.0560%" height="15" fill="rgb(250,138,30)" fg:x="94639" fg:w="57"/><text x="93.1873%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (23 samples, 0.02%)</title><rect x="92.9953%" y="757" width="0.0226%" height="15" fill="rgb(230,151,9)" fg:x="94698" fg:w="23"/><text x="93.2453%" y="767.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (254 samples, 0.25%)</title><rect x="92.7704%" y="789" width="0.2494%" height="15" fill="rgb(233,80,38)" fg:x="94469" fg:w="254"/><text x="93.0204%" y="799.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (163 samples, 0.16%)</title><rect x="92.8597%" y="773" width="0.1601%" height="15" fill="rgb(232,68,43)" fg:x="94560" fg:w="163"/><text x="93.1097%" y="783.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (268 samples, 0.26%)</title><rect x="92.7674%" y="805" width="0.2632%" height="15" fill="rgb(254,5,50)" fg:x="94466" fg:w="268"/><text x="93.0174%" y="815.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (11 samples, 0.01%)</title><rect x="93.0326%" y="805" width="0.0108%" height="15" fill="rgb(225,45,5)" fg:x="94736" fg:w="11"/><text x="93.2826%" y="815.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (11 samples, 0.01%)</title><rect x="93.0326%" y="789" width="0.0108%" height="15" fill="rgb(239,22,3)" fg:x="94736" fg:w="11"/><text x="93.2826%" y="799.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (11 samples, 0.01%)</title><rect x="93.0326%" y="773" width="0.0108%" height="15" fill="rgb(243,129,0)" fg:x="94736" fg:w="11"/><text x="93.2826%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;bevy_render::render_graph::command::Command&gt;&gt;&gt; (53 samples, 0.05%)</title><rect x="93.0620%" y="757" width="0.0520%" height="15" fill="rgb(223,164,0)" fg:x="94766" fg:w="53"/><text x="93.3120%" y="767.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.05%)</title><rect x="93.0620%" y="741" width="0.0520%" height="15" fill="rgb(221,46,29)" fg:x="94766" fg:w="53"/><text x="93.3120%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (53 samples, 0.05%)</title><rect x="93.0620%" y="725" width="0.0520%" height="15" fill="rgb(205,97,47)" fg:x="94766" fg:w="53"/><text x="93.3120%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (53 samples, 0.05%)</title><rect x="93.0620%" y="709" width="0.0520%" height="15" fill="rgb(249,14,8)" fg:x="94766" fg:w="53"/><text x="93.3120%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (53 samples, 0.05%)</title><rect x="93.0620%" y="693" width="0.0520%" height="15" fill="rgb(216,77,3)" fg:x="94766" fg:w="53"/><text x="93.3120%" y="703.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::copy_staging_buffer_to_final_buffers (98 samples, 0.10%)</title><rect x="93.0473%" y="805" width="0.0962%" height="15" fill="rgb(206,168,54)" fg:x="94751" fg:w="98"/><text x="93.2973%" y="815.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (97 samples, 0.10%)</title><rect x="93.0483%" y="789" width="0.0953%" height="15" fill="rgb(236,3,41)" fg:x="94752" fg:w="97"/><text x="93.2983%" y="799.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::push (93 samples, 0.09%)</title><rect x="93.0522%" y="773" width="0.0913%" height="15" fill="rgb(231,132,24)" fg:x="94756" fg:w="93"/><text x="93.3022%" y="783.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (30 samples, 0.03%)</title><rect x="93.1141%" y="757" width="0.0295%" height="15" fill="rgb(227,221,40)" fg:x="94819" fg:w="30"/><text x="93.3641%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (30 samples, 0.03%)</title><rect x="93.1141%" y="741" width="0.0295%" height="15" fill="rgb(233,151,11)" fg:x="94819" fg:w="30"/><text x="93.3641%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (30 samples, 0.03%)</title><rect x="93.1141%" y="725" width="0.0295%" height="15" fill="rgb(247,81,35)" fg:x="94819" fg:w="30"/><text x="93.3641%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (30 samples, 0.03%)</title><rect x="93.1141%" y="709" width="0.0295%" height="15" fill="rgb(243,128,48)" fg:x="94819" fg:w="30"/><text x="93.3641%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (73 samples, 0.07%)</title><rect x="93.1858%" y="693" width="0.0717%" height="15" fill="rgb(253,16,10)" fg:x="94892" fg:w="73"/><text x="93.4358%" y="703.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (71 samples, 0.07%)</title><rect x="93.1877%" y="677" width="0.0697%" height="15" fill="rgb(228,67,27)" fg:x="94894" fg:w="71"/><text x="93.4377%" y="687.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (129 samples, 0.13%)</title><rect x="93.1435%" y="805" width="0.1267%" height="15" fill="rgb(231,105,25)" fg:x="94849" fg:w="129"/><text x="93.3935%" y="815.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_or_assign_index (100 samples, 0.10%)</title><rect x="93.1720%" y="789" width="0.0982%" height="15" fill="rgb(213,166,47)" fg:x="94878" fg:w="100"/><text x="93.4220%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (100 samples, 0.10%)</title><rect x="93.1720%" y="773" width="0.0982%" height="15" fill="rgb(209,27,10)" fg:x="94878" fg:w="100"/><text x="93.4220%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (100 samples, 0.10%)</title><rect x="93.1720%" y="757" width="0.0982%" height="15" fill="rgb(241,44,30)" fg:x="94878" fg:w="100"/><text x="93.4220%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (100 samples, 0.10%)</title><rect x="93.1720%" y="741" width="0.0982%" height="15" fill="rgb(223,216,15)" fg:x="94878" fg:w="100"/><text x="93.4220%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (91 samples, 0.09%)</title><rect x="93.1809%" y="725" width="0.0894%" height="15" fill="rgb(227,14,7)" fg:x="94887" fg:w="91"/><text x="93.4309%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (89 samples, 0.09%)</title><rect x="93.1828%" y="709" width="0.0874%" height="15" fill="rgb(237,14,5)" fg:x="94889" fg:w="89"/><text x="93.4328%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (13 samples, 0.01%)</title><rect x="93.2575%" y="693" width="0.0128%" height="15" fill="rgb(232,14,36)" fg:x="94965" fg:w="13"/><text x="93.5075%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (13 samples, 0.01%)</title><rect x="93.2575%" y="677" width="0.0128%" height="15" fill="rgb(234,0,38)" fg:x="94965" fg:w="13"/><text x="93.5075%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (13 samples, 0.01%)</title><rect x="93.2575%" y="661" width="0.0128%" height="15" fill="rgb(207,170,14)" fg:x="94965" fg:w="13"/><text x="93.5075%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (893 samples, 0.88%)</title><rect x="92.4011%" y="869" width="0.8769%" height="15" fill="rgb(252,45,13)" fg:x="94093" fg:w="893"/><text x="92.6511%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (893 samples, 0.88%)</title><rect x="92.4011%" y="853" width="0.8769%" height="15" fill="rgb(213,142,7)" fg:x="94093" fg:w="893"/><text x="92.6511%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (893 samples, 0.88%)</title><rect x="92.4011%" y="837" width="0.8769%" height="15" fill="rgb(216,157,23)" fg:x="94093" fg:w="893"/><text x="92.6511%" y="847.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (893 samples, 0.88%)</title><rect x="92.4011%" y="821" width="0.8769%" height="15" fill="rgb(212,145,33)" fg:x="94093" fg:w="893"/><text x="92.6511%" y="831.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="93.2928%" y="805" width="0.0108%" height="15" fill="rgb(233,26,13)" fg:x="95001" fg:w="11"/><text x="93.5428%" y="815.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (30 samples, 0.03%)</title><rect x="93.3164%" y="773" width="0.0295%" height="15" fill="rgb(219,196,19)" fg:x="95025" fg:w="30"/><text x="93.5664%" y="783.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (24 samples, 0.02%)</title><rect x="93.3223%" y="757" width="0.0236%" height="15" fill="rgb(246,56,21)" fg:x="95031" fg:w="24"/><text x="93.5723%" y="767.50"></text></g><g><title>wgpu::BufferSlice::map_async (32 samples, 0.03%)</title><rect x="93.3154%" y="789" width="0.0314%" height="15" fill="rgb(222,28,53)" fg:x="95024" fg:w="32"/><text x="93.5654%" y="799.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (60 samples, 0.06%)</title><rect x="93.3036%" y="805" width="0.0589%" height="15" fill="rgb(224,5,27)" fg:x="95012" fg:w="60"/><text x="93.5536%" y="815.50"></text></g><g><title>wgpu::Device::poll (16 samples, 0.02%)</title><rect x="93.3468%" y="789" width="0.0157%" height="15" fill="rgb(220,153,33)" fg:x="95056" fg:w="16"/><text x="93.5968%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (16 samples, 0.02%)</title><rect x="93.3468%" y="773" width="0.0157%" height="15" fill="rgb(226,58,19)" fg:x="95056" fg:w="16"/><text x="93.5968%" y="783.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (15 samples, 0.01%)</title><rect x="93.3478%" y="757" width="0.0147%" height="15" fill="rgb(239,112,23)" fg:x="95057" fg:w="15"/><text x="93.5978%" y="767.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (14 samples, 0.01%)</title><rect x="93.3488%" y="741" width="0.0137%" height="15" fill="rgb(251,213,20)" fg:x="95058" fg:w="14"/><text x="93.5988%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (14 samples, 0.01%)</title><rect x="93.3782%" y="789" width="0.0137%" height="15" fill="rgb(215,181,21)" fg:x="95088" fg:w="14"/><text x="93.6282%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (14 samples, 0.01%)</title><rect x="93.3782%" y="773" width="0.0137%" height="15" fill="rgb(240,8,35)" fg:x="95088" fg:w="14"/><text x="93.6282%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (13 samples, 0.01%)</title><rect x="93.3792%" y="757" width="0.0128%" height="15" fill="rgb(232,203,3)" fg:x="95089" fg:w="13"/><text x="93.6292%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (13 samples, 0.01%)</title><rect x="93.3792%" y="741" width="0.0128%" height="15" fill="rgb(214,202,43)" fg:x="95089" fg:w="13"/><text x="93.6292%" y="751.50"></text></g><g><title>alloc::raw_vec::finish_grow (13 samples, 0.01%)</title><rect x="93.3792%" y="725" width="0.0128%" height="15" fill="rgb(254,35,11)" fg:x="95089" fg:w="13"/><text x="93.6292%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (13 samples, 0.01%)</title><rect x="93.3792%" y="709" width="0.0128%" height="15" fill="rgb(239,173,13)" fg:x="95089" fg:w="13"/><text x="93.6292%" y="719.50"></text></g><g><title>alloc::alloc::Global::grow_impl (13 samples, 0.01%)</title><rect x="93.3792%" y="693" width="0.0128%" height="15" fill="rgb(220,141,0)" fg:x="95089" fg:w="13"/><text x="93.6292%" y="703.50"></text></g><g><title>alloc::alloc::realloc (13 samples, 0.01%)</title><rect x="93.3792%" y="677" width="0.0128%" height="15" fill="rgb(210,98,12)" fg:x="95089" fg:w="13"/><text x="93.6292%" y="687.50"></text></g><g><title>__rdl_realloc (13 samples, 0.01%)</title><rect x="93.3792%" y="661" width="0.0128%" height="15" fill="rgb(254,153,22)" fg:x="95089" fg:w="13"/><text x="93.6292%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (13 samples, 0.01%)</title><rect x="93.3792%" y="645" width="0.0128%" height="15" fill="rgb(247,223,17)" fg:x="95089" fg:w="13"/><text x="93.6292%" y="655.50"></text></g><g><title>__GI___libc_realloc (13 samples, 0.01%)</title><rect x="93.3792%" y="629" width="0.0128%" height="15" fill="rgb(246,56,7)" fg:x="95089" fg:w="13"/><text x="93.6292%" y="639.50"></text></g><g><title>_int_realloc (12 samples, 0.01%)</title><rect x="93.3802%" y="613" width="0.0118%" height="15" fill="rgb(240,226,12)" fg:x="95090" fg:w="12"/><text x="93.6302%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.02%)</title><rect x="93.3773%" y="805" width="0.0177%" height="15" fill="rgb(205,87,46)" fg:x="95087" fg:w="18"/><text x="93.6273%" y="815.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (77 samples, 0.08%)</title><rect x="93.4234%" y="693" width="0.0756%" height="15" fill="rgb(245,214,51)" fg:x="95134" fg:w="77"/><text x="93.6734%" y="703.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (80 samples, 0.08%)</title><rect x="93.4234%" y="709" width="0.0786%" height="15" fill="rgb(223,172,33)" fg:x="95134" fg:w="80"/><text x="93.6734%" y="719.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (115 samples, 0.11%)</title><rect x="93.3989%" y="805" width="0.1129%" height="15" fill="rgb(227,203,34)" fg:x="95109" fg:w="115"/><text x="93.6489%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (103 samples, 0.10%)</title><rect x="93.4107%" y="789" width="0.1011%" height="15" fill="rgb(248,143,44)" fg:x="95121" fg:w="103"/><text x="93.6607%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (103 samples, 0.10%)</title><rect x="93.4107%" y="773" width="0.1011%" height="15" fill="rgb(226,162,5)" fg:x="95121" fg:w="103"/><text x="93.6607%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (103 samples, 0.10%)</title><rect x="93.4107%" y="757" width="0.1011%" height="15" fill="rgb(211,143,1)" fg:x="95121" fg:w="103"/><text x="93.6607%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (95 samples, 0.09%)</title><rect x="93.4185%" y="741" width="0.0933%" height="15" fill="rgb(224,96,15)" fg:x="95129" fg:w="95"/><text x="93.6685%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (95 samples, 0.09%)</title><rect x="93.4185%" y="725" width="0.0933%" height="15" fill="rgb(222,4,38)" fg:x="95129" fg:w="95"/><text x="93.6685%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.01%)</title><rect x="93.5177%" y="789" width="0.0108%" height="15" fill="rgb(253,228,15)" fg:x="95230" fg:w="11"/><text x="93.7677%" y="799.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::resize_buffer_arrays (12 samples, 0.01%)</title><rect x="93.5177%" y="805" width="0.0118%" height="15" fill="rgb(242,194,12)" fg:x="95230" fg:w="12"/><text x="93.7677%" y="815.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (13 samples, 0.01%)</title><rect x="93.5678%" y="757" width="0.0128%" height="15" fill="rgb(214,177,31)" fg:x="95281" fg:w="13"/><text x="93.8178%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (13 samples, 0.01%)</title><rect x="93.5678%" y="741" width="0.0128%" height="15" fill="rgb(226,58,51)" fg:x="95281" fg:w="13"/><text x="93.8178%" y="751.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (12 samples, 0.01%)</title><rect x="93.5688%" y="725" width="0.0118%" height="15" fill="rgb(250,119,16)" fg:x="95282" fg:w="12"/><text x="93.8188%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (12 samples, 0.01%)</title><rect x="93.5688%" y="709" width="0.0118%" height="15" fill="rgb(223,128,53)" fg:x="95282" fg:w="12"/><text x="93.8188%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (12 samples, 0.01%)</title><rect x="93.5688%" y="693" width="0.0118%" height="15" fill="rgb(251,199,15)" fg:x="95282" fg:w="12"/><text x="93.8188%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (40 samples, 0.04%)</title><rect x="93.5560%" y="773" width="0.0393%" height="15" fill="rgb(235,168,42)" fg:x="95269" fg:w="40"/><text x="93.8060%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15 samples, 0.01%)</title><rect x="93.5805%" y="757" width="0.0147%" height="15" fill="rgb(250,210,17)" fg:x="95294" fg:w="15"/><text x="93.8305%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (15 samples, 0.01%)</title><rect x="93.5805%" y="741" width="0.0147%" height="15" fill="rgb(226,36,41)" fg:x="95294" fg:w="15"/><text x="93.8305%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.01%)</title><rect x="93.5805%" y="725" width="0.0147%" height="15" fill="rgb(225,87,10)" fg:x="95294" fg:w="15"/><text x="93.8305%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.01%)</title><rect x="93.5845%" y="709" width="0.0108%" height="15" fill="rgb(228,83,9)" fg:x="95298" fg:w="11"/><text x="93.8345%" y="719.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (52 samples, 0.05%)</title><rect x="93.5550%" y="789" width="0.0511%" height="15" fill="rgb(225,16,36)" fg:x="95268" fg:w="52"/><text x="93.8050%" y="799.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::clone_weak_untyped (11 samples, 0.01%)</title><rect x="93.5953%" y="773" width="0.0108%" height="15" fill="rgb(242,198,13)" fg:x="95309" fg:w="11"/><text x="93.8453%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (71 samples, 0.07%)</title><rect x="93.6385%" y="565" width="0.0697%" height="15" fill="rgb(239,25,51)" fg:x="95353" fg:w="71"/><text x="93.8885%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (71 samples, 0.07%)</title><rect x="93.6385%" y="549" width="0.0697%" height="15" fill="rgb(239,28,37)" fg:x="95353" fg:w="71"/><text x="93.8885%" y="559.50"></text></g><g><title>alloc::alloc::realloc (69 samples, 0.07%)</title><rect x="93.6404%" y="533" width="0.0678%" height="15" fill="rgb(234,70,17)" fg:x="95355" fg:w="69"/><text x="93.8904%" y="543.50"></text></g><g><title>__rdl_realloc (69 samples, 0.07%)</title><rect x="93.6404%" y="517" width="0.0678%" height="15" fill="rgb(231,215,53)" fg:x="95355" fg:w="69"/><text x="93.8904%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (69 samples, 0.07%)</title><rect x="93.6404%" y="501" width="0.0678%" height="15" fill="rgb(218,140,42)" fg:x="95355" fg:w="69"/><text x="93.8904%" y="511.50"></text></g><g><title>__GI___libc_realloc (69 samples, 0.07%)</title><rect x="93.6404%" y="485" width="0.0678%" height="15" fill="rgb(233,227,45)" fg:x="95355" fg:w="69"/><text x="93.8904%" y="495.50"></text></g><g><title>_int_realloc (34 samples, 0.03%)</title><rect x="93.6748%" y="469" width="0.0334%" height="15" fill="rgb(225,189,21)" fg:x="95390" fg:w="34"/><text x="93.9248%" y="479.50"></text></g><g><title>_int_malloc (19 samples, 0.02%)</title><rect x="93.6895%" y="453" width="0.0187%" height="15" fill="rgb(237,176,54)" fg:x="95405" fg:w="19"/><text x="93.9395%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (80 samples, 0.08%)</title><rect x="93.6365%" y="581" width="0.0786%" height="15" fill="rgb(215,131,46)" fg:x="95351" fg:w="80"/><text x="93.8865%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (90 samples, 0.09%)</title><rect x="93.6277%" y="597" width="0.0884%" height="15" fill="rgb(218,95,20)" fg:x="95342" fg:w="90"/><text x="93.8777%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (92 samples, 0.09%)</title><rect x="93.6267%" y="645" width="0.0903%" height="15" fill="rgb(208,198,12)" fg:x="95341" fg:w="92"/><text x="93.8767%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (92 samples, 0.09%)</title><rect x="93.6267%" y="629" width="0.0903%" height="15" fill="rgb(239,107,50)" fg:x="95341" fg:w="92"/><text x="93.8767%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (91 samples, 0.09%)</title><rect x="93.6277%" y="613" width="0.0894%" height="15" fill="rgb(240,217,37)" fg:x="95342" fg:w="91"/><text x="93.8777%" y="623.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (109 samples, 0.11%)</title><rect x="93.6208%" y="741" width="0.1070%" height="15" fill="rgb(242,197,49)" fg:x="95335" fg:w="109"/><text x="93.8708%" y="751.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (107 samples, 0.11%)</title><rect x="93.6228%" y="725" width="0.1051%" height="15" fill="rgb(219,171,17)" fg:x="95337" fg:w="107"/><text x="93.8728%" y="735.50"></text></g><g><title>alloc::string::String::push_str (107 samples, 0.11%)</title><rect x="93.6228%" y="709" width="0.1051%" height="15" fill="rgb(209,81,40)" fg:x="95337" fg:w="107"/><text x="93.8728%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (107 samples, 0.11%)</title><rect x="93.6228%" y="693" width="0.1051%" height="15" fill="rgb(237,156,30)" fg:x="95337" fg:w="107"/><text x="93.8728%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (107 samples, 0.11%)</title><rect x="93.6228%" y="677" width="0.1051%" height="15" fill="rgb(212,127,16)" fg:x="95337" fg:w="107"/><text x="93.8728%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (104 samples, 0.10%)</title><rect x="93.6257%" y="661" width="0.1021%" height="15" fill="rgb(226,66,32)" fg:x="95340" fg:w="104"/><text x="93.8757%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="93.7170%" y="645" width="0.0108%" height="15" fill="rgb(245,22,46)" fg:x="95433" fg:w="11"/><text x="93.9670%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (11 samples, 0.01%)</title><rect x="93.7170%" y="629" width="0.0108%" height="15" fill="rgb(210,112,21)" fg:x="95433" fg:w="11"/><text x="93.9670%" y="639.50"></text></g><g><title>alloc::fmt::format (130 samples, 0.13%)</title><rect x="93.6061%" y="789" width="0.1277%" height="15" fill="rgb(207,118,39)" fg:x="95320" fg:w="130"/><text x="93.8561%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (123 samples, 0.12%)</title><rect x="93.6129%" y="773" width="0.1208%" height="15" fill="rgb(205,206,35)" fg:x="95327" fg:w="123"/><text x="93.8629%" y="783.50"></text></g><g><title>core::fmt::write (119 samples, 0.12%)</title><rect x="93.6169%" y="757" width="0.1169%" height="15" fill="rgb(222,120,2)" fg:x="95331" fg:w="119"/><text x="93.8669%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (21 samples, 0.02%)</title><rect x="93.7357%" y="725" width="0.0206%" height="15" fill="rgb(205,38,18)" fg:x="95452" fg:w="21"/><text x="93.9857%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (21 samples, 0.02%)</title><rect x="93.7357%" y="709" width="0.0206%" height="15" fill="rgb(226,61,2)" fg:x="95452" fg:w="21"/><text x="93.9857%" y="719.50"></text></g><g><title>__rdl_dealloc (21 samples, 0.02%)</title><rect x="93.7357%" y="693" width="0.0206%" height="15" fill="rgb(242,161,23)" fg:x="95452" fg:w="21"/><text x="93.9857%" y="703.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (21 samples, 0.02%)</title><rect x="93.7357%" y="677" width="0.0206%" height="15" fill="rgb(213,13,52)" fg:x="95452" fg:w="21"/><text x="93.9857%" y="687.50"></text></g><g><title>__GI___libc_free (21 samples, 0.02%)</title><rect x="93.7357%" y="661" width="0.0206%" height="15" fill="rgb(246,209,47)" fg:x="95452" fg:w="21"/><text x="93.9857%" y="671.50"></text></g><g><title>_int_free (21 samples, 0.02%)</title><rect x="93.7357%" y="645" width="0.0206%" height="15" fill="rgb(214,41,3)" fg:x="95452" fg:w="21"/><text x="93.9857%" y="655.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (223 samples, 0.22%)</title><rect x="93.5393%" y="805" width="0.2190%" height="15" fill="rgb(236,119,38)" fg:x="95252" fg:w="223"/><text x="93.7893%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (23 samples, 0.02%)</title><rect x="93.7357%" y="789" width="0.0226%" height="15" fill="rgb(218,50,11)" fg:x="95452" fg:w="23"/><text x="93.9857%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (23 samples, 0.02%)</title><rect x="93.7357%" y="773" width="0.0226%" height="15" fill="rgb(228,38,11)" fg:x="95452" fg:w="23"/><text x="93.9857%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (23 samples, 0.02%)</title><rect x="93.7357%" y="757" width="0.0226%" height="15" fill="rgb(212,13,9)" fg:x="95452" fg:w="23"/><text x="93.9857%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (23 samples, 0.02%)</title><rect x="93.7357%" y="741" width="0.0226%" height="15" fill="rgb(208,211,9)" fg:x="95452" fg:w="23"/><text x="93.9857%" y="751.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (17 samples, 0.02%)</title><rect x="93.7730%" y="773" width="0.0167%" height="15" fill="rgb(239,39,32)" fg:x="95490" fg:w="17"/><text x="94.0230%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (13 samples, 0.01%)</title><rect x="93.7946%" y="661" width="0.0128%" height="15" fill="rgb(254,179,26)" fg:x="95512" fg:w="13"/><text x="94.0446%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (13 samples, 0.01%)</title><rect x="93.7946%" y="645" width="0.0128%" height="15" fill="rgb(249,165,28)" fg:x="95512" fg:w="13"/><text x="94.0446%" y="655.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (15 samples, 0.01%)</title><rect x="93.7936%" y="725" width="0.0147%" height="15" fill="rgb(225,59,50)" fg:x="95511" fg:w="15"/><text x="94.0436%" y="735.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (14 samples, 0.01%)</title><rect x="93.7946%" y="709" width="0.0137%" height="15" fill="rgb(209,122,5)" fg:x="95512" fg:w="14"/><text x="94.0446%" y="719.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (14 samples, 0.01%)</title><rect x="93.7946%" y="693" width="0.0137%" height="15" fill="rgb(214,65,34)" fg:x="95512" fg:w="14"/><text x="94.0446%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (14 samples, 0.01%)</title><rect x="93.7946%" y="677" width="0.0137%" height="15" fill="rgb(249,183,32)" fg:x="95512" fg:w="14"/><text x="94.0446%" y="687.50"></text></g><g><title>hashbrown::map::make_insert_hash (24 samples, 0.02%)</title><rect x="93.7927%" y="757" width="0.0236%" height="15" fill="rgb(218,122,24)" fg:x="95510" fg:w="24"/><text x="94.0427%" y="767.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (23 samples, 0.02%)</title><rect x="93.7936%" y="741" width="0.0226%" height="15" fill="rgb(224,109,18)" fg:x="95511" fg:w="23"/><text x="94.0436%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (103 samples, 0.10%)</title><rect x="93.8162%" y="757" width="0.1011%" height="15" fill="rgb(210,68,50)" fg:x="95534" fg:w="103"/><text x="94.0662%" y="767.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (95 samples, 0.09%)</title><rect x="93.8241%" y="741" width="0.0933%" height="15" fill="rgb(212,184,34)" fg:x="95542" fg:w="95"/><text x="94.0741%" y="751.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (95 samples, 0.09%)</title><rect x="93.8241%" y="725" width="0.0933%" height="15" fill="rgb(238,105,48)" fg:x="95542" fg:w="95"/><text x="94.0741%" y="735.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (95 samples, 0.09%)</title><rect x="93.8241%" y="709" width="0.0933%" height="15" fill="rgb(222,134,54)" fg:x="95542" fg:w="95"/><text x="94.0741%" y="719.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (131 samples, 0.13%)</title><rect x="93.7897%" y="773" width="0.1286%" height="15" fill="rgb(246,24,43)" fg:x="95507" fg:w="131"/><text x="94.0397%" y="783.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (164 samples, 0.16%)</title><rect x="93.7583%" y="805" width="0.1611%" height="15" fill="rgb(227,169,22)" fg:x="95475" fg:w="164"/><text x="94.0083%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (161 samples, 0.16%)</title><rect x="93.7612%" y="789" width="0.1581%" height="15" fill="rgb(253,152,4)" fg:x="95478" fg:w="161"/><text x="94.0112%" y="799.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (1,603 samples, 1.57%)</title><rect x="92.3511%" y="1141" width="1.5742%" height="15" fill="rgb(219,158,36)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="1151.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1,603 samples, 1.57%)</title><rect x="92.3511%" y="1125" width="1.5742%" height="15" fill="rgb(251,128,40)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="1135.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1,603 samples, 1.57%)</title><rect x="92.3511%" y="1109" width="1.5742%" height="15" fill="rgb(254,101,39)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1,603 samples, 1.57%)</title><rect x="92.3511%" y="1093" width="1.5742%" height="15" fill="rgb(221,168,40)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="1103.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1,603 samples, 1.57%)</title><rect x="92.3511%" y="1077" width="1.5742%" height="15" fill="rgb(221,14,27)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="1087.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (1,603 samples, 1.57%)</title><rect x="92.3511%" y="1061" width="1.5742%" height="15" fill="rgb(207,36,43)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,603 samples, 1.57%)</title><rect x="92.3511%" y="1045" width="1.5742%" height="15" fill="rgb(240,172,53)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,603 samples, 1.57%)</title><rect x="92.3511%" y="1029" width="1.5742%" height="15" fill="rgb(241,138,43)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="1039.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (1,603 samples, 1.57%)</title><rect x="92.3511%" y="1013" width="1.5742%" height="15" fill="rgb(227,78,19)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="1023.50"></text></g><g><title>async_executor::Executor::try_tick (1,603 samples, 1.57%)</title><rect x="92.3511%" y="997" width="1.5742%" height="15" fill="rgb(215,127,44)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="1007.50"></text></g><g><title>async_task::runnable::Runnable::run (1,603 samples, 1.57%)</title><rect x="92.3511%" y="981" width="1.5742%" height="15" fill="rgb(227,13,10)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,603 samples, 1.57%)</title><rect x="92.3511%" y="965" width="1.5742%" height="15" fill="rgb(249,177,6)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,603 samples, 1.57%)</title><rect x="92.3511%" y="949" width="1.5742%" height="15" fill="rgb(215,154,26)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="959.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,603 samples, 1.57%)</title><rect x="92.3511%" y="933" width="1.5742%" height="15" fill="rgb(250,168,20)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,603 samples, 1.57%)</title><rect x="92.3511%" y="917" width="1.5742%" height="15" fill="rgb(222,53,38)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1,603 samples, 1.57%)</title><rect x="92.3511%" y="901" width="1.5742%" height="15" fill="rgb(245,154,5)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="911.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1,603 samples, 1.57%)</title><rect x="92.3511%" y="885" width="1.5742%" height="15" fill="rgb(214,89,50)" fg:x="94042" fg:w="1603"/><text x="92.6011%" y="895.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (659 samples, 0.65%)</title><rect x="93.2781%" y="869" width="0.6472%" height="15" fill="rgb(232,73,14)" fg:x="94986" fg:w="659"/><text x="93.5281%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (659 samples, 0.65%)</title><rect x="93.2781%" y="853" width="0.6472%" height="15" fill="rgb(230,101,20)" fg:x="94986" fg:w="659"/><text x="93.5281%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (659 samples, 0.65%)</title><rect x="93.2781%" y="837" width="0.6472%" height="15" fill="rgb(208,56,28)" fg:x="94986" fg:w="659"/><text x="93.5281%" y="847.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (659 samples, 0.65%)</title><rect x="93.2781%" y="821" width="0.6472%" height="15" fill="rgb(247,205,22)" fg:x="94986" fg:w="659"/><text x="93.5281%" y="831.50"></text></g><g><title>__GI___libc_malloc (18 samples, 0.02%)</title><rect x="93.9341%" y="709" width="0.0177%" height="15" fill="rgb(252,109,51)" fg:x="95654" fg:w="18"/><text x="94.1841%" y="719.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (31 samples, 0.03%)</title><rect x="93.9252%" y="773" width="0.0304%" height="15" fill="rgb(220,40,24)" fg:x="95645" fg:w="31"/><text x="94.1752%" y="783.50"></text></g><g><title>xcb_wait_for_special_event (25 samples, 0.02%)</title><rect x="93.9311%" y="757" width="0.0246%" height="15" fill="rgb(251,108,7)" fg:x="95651" fg:w="25"/><text x="94.1811%" y="767.50"></text></g><g><title>[libxcb.so.1.1.0] (25 samples, 0.02%)</title><rect x="93.9311%" y="741" width="0.0246%" height="15" fill="rgb(238,102,51)" fg:x="95651" fg:w="25"/><text x="94.1811%" y="751.50"></text></g><g><title>[libxcb.so.1.1.0] (25 samples, 0.02%)</title><rect x="93.9311%" y="725" width="0.0246%" height="15" fill="rgb(219,149,34)" fg:x="95651" fg:w="25"/><text x="94.1811%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (47 samples, 0.05%)</title><rect x="93.9252%" y="1125" width="0.0462%" height="15" fill="rgb(239,70,0)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="1135.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (47 samples, 0.05%)</title><rect x="93.9252%" y="1109" width="0.0462%" height="15" fill="rgb(246,214,23)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="1119.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (47 samples, 0.05%)</title><rect x="93.9252%" y="1093" width="0.0462%" height="15" fill="rgb(239,221,51)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (47 samples, 0.05%)</title><rect x="93.9252%" y="1077" width="0.0462%" height="15" fill="rgb(254,62,14)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (47 samples, 0.05%)</title><rect x="93.9252%" y="1061" width="0.0462%" height="15" fill="rgb(253,57,33)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="1071.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (47 samples, 0.05%)</title><rect x="93.9252%" y="1045" width="0.0462%" height="15" fill="rgb(229,34,6)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (47 samples, 0.05%)</title><rect x="93.9252%" y="1029" width="0.0462%" height="15" fill="rgb(235,191,23)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (47 samples, 0.05%)</title><rect x="93.9252%" y="1013" width="0.0462%" height="15" fill="rgb(217,207,27)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (47 samples, 0.05%)</title><rect x="93.9252%" y="997" width="0.0462%" height="15" fill="rgb(232,41,44)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (47 samples, 0.05%)</title><rect x="93.9252%" y="981" width="0.0462%" height="15" fill="rgb(221,188,19)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="991.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (47 samples, 0.05%)</title><rect x="93.9252%" y="965" width="0.0462%" height="15" fill="rgb(245,180,45)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (47 samples, 0.05%)</title><rect x="93.9252%" y="949" width="0.0462%" height="15" fill="rgb(250,220,42)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="959.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (47 samples, 0.05%)</title><rect x="93.9252%" y="933" width="0.0462%" height="15" fill="rgb(234,16,34)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="943.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (47 samples, 0.05%)</title><rect x="93.9252%" y="917" width="0.0462%" height="15" fill="rgb(233,217,23)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="927.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (47 samples, 0.05%)</title><rect x="93.9252%" y="901" width="0.0462%" height="15" fill="rgb(209,22,46)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="911.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (47 samples, 0.05%)</title><rect x="93.9252%" y="885" width="0.0462%" height="15" fill="rgb(213,101,18)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="895.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (47 samples, 0.05%)</title><rect x="93.9252%" y="869" width="0.0462%" height="15" fill="rgb(215,179,52)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (47 samples, 0.05%)</title><rect x="93.9252%" y="853" width="0.0462%" height="15" fill="rgb(223,50,25)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (47 samples, 0.05%)</title><rect x="93.9252%" y="837" width="0.0462%" height="15" fill="rgb(224,51,44)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (47 samples, 0.05%)</title><rect x="93.9252%" y="821" width="0.0462%" height="15" fill="rgb(224,13,54)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (47 samples, 0.05%)</title><rect x="93.9252%" y="805" width="0.0462%" height="15" fill="rgb(219,58,47)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (47 samples, 0.05%)</title><rect x="93.9252%" y="789" width="0.0462%" height="15" fill="rgb(246,124,34)" fg:x="95645" fg:w="47"/><text x="94.1752%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.02%)</title><rect x="93.9557%" y="773" width="0.0157%" height="15" fill="rgb(245,109,25)" fg:x="95676" fg:w="16"/><text x="94.2057%" y="783.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (15 samples, 0.01%)</title><rect x="93.9714%" y="1077" width="0.0147%" height="15" fill="rgb(235,48,23)" fg:x="95692" fg:w="15"/><text x="94.2214%" y="1087.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::prepare (15 samples, 0.01%)</title><rect x="93.9714%" y="1061" width="0.0147%" height="15" fill="rgb(229,203,36)" fg:x="95692" fg:w="15"/><text x="94.2214%" y="1071.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::init_pipeline (15 samples, 0.01%)</title><rect x="93.9714%" y="1045" width="0.0147%" height="15" fill="rgb(234,180,9)" fg:x="95692" fg:w="15"/><text x="94.2214%" y="1055.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (15 samples, 0.01%)</title><rect x="93.9714%" y="1029" width="0.0147%" height="15" fill="rgb(228,98,45)" fg:x="95692" fg:w="15"/><text x="94.2214%" y="1039.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (12 samples, 0.01%)</title><rect x="93.9861%" y="1045" width="0.0118%" height="15" fill="rgb(240,24,36)" fg:x="95707" fg:w="12"/><text x="94.2361%" y="1055.50"></text></g><g><title>wgpu::Buffer::unmap (13 samples, 0.01%)</title><rect x="93.9979%" y="997" width="0.0128%" height="15" fill="rgb(227,154,19)" fg:x="95719" fg:w="13"/><text x="94.2479%" y="1007.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (13 samples, 0.01%)</title><rect x="93.9979%" y="981" width="0.0128%" height="15" fill="rgb(231,2,48)" fg:x="95719" fg:w="13"/><text x="94.2479%" y="991.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (13 samples, 0.01%)</title><rect x="93.9979%" y="965" width="0.0128%" height="15" fill="rgb(219,216,0)" fg:x="95719" fg:w="13"/><text x="94.2479%" y="975.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_buffer (23 samples, 0.02%)</title><rect x="94.0303%" y="933" width="0.0226%" height="15" fill="rgb(251,88,0)" fg:x="95752" fg:w="23"/><text x="94.2803%" y="943.50"></text></g><g><title>ash::device::DeviceV1_0::create_buffer (23 samples, 0.02%)</title><rect x="94.0303%" y="917" width="0.0226%" height="15" fill="rgb(242,45,45)" fg:x="95752" fg:w="23"/><text x="94.2803%" y="927.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_buffer (23 samples, 0.02%)</title><rect x="94.0303%" y="901" width="0.0226%" height="15" fill="rgb(218,149,45)" fg:x="95752" fg:w="23"/><text x="94.2803%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (23 samples, 0.02%)</title><rect x="94.0303%" y="885" width="0.0226%" height="15" fill="rgb(247,194,10)" fg:x="95752" fg:w="23"/><text x="94.2803%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (21 samples, 0.02%)</title><rect x="94.0323%" y="869" width="0.0206%" height="15" fill="rgb(234,33,37)" fg:x="95754" fg:w="21"/><text x="94.2823%" y="879.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::get_buffer_requirements (20 samples, 0.02%)</title><rect x="94.0529%" y="933" width="0.0196%" height="15" fill="rgb(218,61,13)" fg:x="95775" fg:w="20"/><text x="94.3029%" y="943.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_backend_vulkan::Device&gt;::filter_memory_requirements (14 samples, 0.01%)</title><rect x="94.0588%" y="917" width="0.0137%" height="15" fill="rgb(210,80,52)" fg:x="95781" fg:w="14"/><text x="94.3088%" y="927.50"></text></g><g><title>ash::extensions::ext::debug_utils::DebugUtils::debug_utils_set_object_name (22 samples, 0.02%)</title><rect x="94.0745%" y="901" width="0.0216%" height="15" fill="rgb(218,203,27)" fg:x="95797" fg:w="22"/><text x="94.3245%" y="911.50"></text></g><g><title>ash::vk::extensions::ExtDebugUtilsFn::set_debug_utils_object_name_ext (22 samples, 0.02%)</title><rect x="94.0745%" y="885" width="0.0216%" height="15" fill="rgb(209,126,33)" fg:x="95797" fg:w="22"/><text x="94.3245%" y="895.50"></text></g><g><title>[libvulkan.so.1.2.194] (22 samples, 0.02%)</title><rect x="94.0745%" y="869" width="0.0216%" height="15" fill="rgb(234,173,41)" fg:x="95797" fg:w="22"/><text x="94.3245%" y="879.50"></text></g><g><title>[libvulkan.so.1.2.194] (16 samples, 0.02%)</title><rect x="94.0804%" y="853" width="0.0157%" height="15" fill="rgb(228,166,9)" fg:x="95803" fg:w="16"/><text x="94.3304%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.01%)</title><rect x="94.0833%" y="837" width="0.0128%" height="15" fill="rgb(208,124,43)" fg:x="95806" fg:w="13"/><text x="94.3333%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.01%)</title><rect x="94.0833%" y="821" width="0.0128%" height="15" fill="rgb(212,154,38)" fg:x="95806" fg:w="13"/><text x="94.3333%" y="831.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::set_buffer_name (26 samples, 0.03%)</title><rect x="94.0725%" y="933" width="0.0255%" height="15" fill="rgb(246,179,35)" fg:x="95795" fg:w="26"/><text x="94.3225%" y="943.50"></text></g><g><title>gfx_backend_vulkan::RawDevice::set_object_name (26 samples, 0.03%)</title><rect x="94.0725%" y="917" width="0.0255%" height="15" fill="rgb(251,3,50)" fg:x="95795" fg:w="26"/><text x="94.3225%" y="927.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (37 samples, 0.04%)</title><rect x="94.1010%" y="933" width="0.0363%" height="15" fill="rgb(219,96,8)" fg:x="95824" fg:w="37"/><text x="94.3510%" y="943.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (37 samples, 0.04%)</title><rect x="94.1010%" y="917" width="0.0363%" height="15" fill="rgb(251,216,33)" fg:x="95824" fg:w="37"/><text x="94.3510%" y="927.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.02%)</title><rect x="94.1373%" y="853" width="0.0157%" height="15" fill="rgb(243,145,29)" fg:x="95861" fg:w="16"/><text x="94.3873%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.01%)</title><rect x="94.1531%" y="837" width="0.0147%" height="15" fill="rgb(210,75,20)" fg:x="95877" fg:w="15"/><text x="94.4031%" y="847.50"></text></g><g><title>wgpu_core::device::alloc::MemoryBlock&lt;B&gt;::bind_buffer (33 samples, 0.03%)</title><rect x="94.1373%" y="933" width="0.0324%" height="15" fill="rgb(235,56,8)" fg:x="95861" fg:w="33"/><text x="94.3873%" y="943.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::bind_buffer_memory (33 samples, 0.03%)</title><rect x="94.1373%" y="917" width="0.0324%" height="15" fill="rgb(226,175,49)" fg:x="95861" fg:w="33"/><text x="94.3873%" y="927.50"></text></g><g><title>ash::device::DeviceV1_0::bind_buffer_memory (33 samples, 0.03%)</title><rect x="94.1373%" y="901" width="0.0324%" height="15" fill="rgb(242,204,23)" fg:x="95861" fg:w="33"/><text x="94.3873%" y="911.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::bind_buffer_memory (33 samples, 0.03%)</title><rect x="94.1373%" y="885" width="0.0324%" height="15" fill="rgb(225,104,24)" fg:x="95861" fg:w="33"/><text x="94.3873%" y="895.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (33 samples, 0.03%)</title><rect x="94.1373%" y="869" width="0.0324%" height="15" fill="rgb(253,34,1)" fg:x="95861" fg:w="33"/><text x="94.3873%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (17 samples, 0.02%)</title><rect x="94.1531%" y="853" width="0.0167%" height="15" fill="rgb(233,199,23)" fg:x="95877" fg:w="17"/><text x="94.4031%" y="863.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (147 samples, 0.14%)</title><rect x="94.0264%" y="949" width="0.1444%" height="15" fill="rgb(247,7,51)" fg:x="95748" fg:w="147"/><text x="94.2764%" y="959.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register_identity (13 samples, 0.01%)</title><rect x="94.1737%" y="949" width="0.0128%" height="15" fill="rgb(214,146,12)" fg:x="95898" fg:w="13"/><text x="94.4237%" y="959.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (210 samples, 0.21%)</title><rect x="93.9861%" y="1061" width="0.2062%" height="15" fill="rgb(234,181,43)" fg:x="95707" fg:w="210"/><text x="94.2361%" y="1071.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (198 samples, 0.19%)</title><rect x="93.9979%" y="1045" width="0.1944%" height="15" fill="rgb(239,148,6)" fg:x="95719" fg:w="198"/><text x="94.2479%" y="1055.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (198 samples, 0.19%)</title><rect x="93.9979%" y="1029" width="0.1944%" height="15" fill="rgb(206,151,17)" fg:x="95719" fg:w="198"/><text x="94.2479%" y="1039.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (198 samples, 0.19%)</title><rect x="93.9979%" y="1013" width="0.1944%" height="15" fill="rgb(213,215,10)" fg:x="95719" fg:w="198"/><text x="94.2479%" y="1023.50"></text></g><g><title>wgpu::Device::create_buffer (185 samples, 0.18%)</title><rect x="94.0107%" y="997" width="0.1817%" height="15" fill="rgb(215,220,44)" fg:x="95732" fg:w="185"/><text x="94.2607%" y="1007.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (185 samples, 0.18%)</title><rect x="94.0107%" y="981" width="0.1817%" height="15" fill="rgb(245,205,37)" fg:x="95732" fg:w="185"/><text x="94.2607%" y="991.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (185 samples, 0.18%)</title><rect x="94.0107%" y="965" width="0.1817%" height="15" fill="rgb(245,130,43)" fg:x="95732" fg:w="185"/><text x="94.2607%" y="975.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_bind_group (26 samples, 0.03%)</title><rect x="94.1923%" y="1013" width="0.0255%" height="15" fill="rgb(231,227,38)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="1023.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (26 samples, 0.03%)</title><rect x="94.1923%" y="997" width="0.0255%" height="15" fill="rgb(233,185,4)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="1007.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (26 samples, 0.03%)</title><rect x="94.1923%" y="981" width="0.0255%" height="15" fill="rgb(224,154,43)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="991.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (26 samples, 0.03%)</title><rect x="94.1923%" y="965" width="0.0255%" height="15" fill="rgb(235,156,15)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="975.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (26 samples, 0.03%)</title><rect x="94.1923%" y="949" width="0.0255%" height="15" fill="rgb(211,55,43)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="959.50"></text></g><g><title>alloc::alloc::exchange_malloc (26 samples, 0.03%)</title><rect x="94.1923%" y="933" width="0.0255%" height="15" fill="rgb(247,149,40)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (26 samples, 0.03%)</title><rect x="94.1923%" y="917" width="0.0255%" height="15" fill="rgb(232,171,16)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (26 samples, 0.03%)</title><rect x="94.1923%" y="901" width="0.0255%" height="15" fill="rgb(215,117,49)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="911.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.03%)</title><rect x="94.1923%" y="885" width="0.0255%" height="15" fill="rgb(246,194,11)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="895.50"></text></g><g><title>__rdl_alloc (26 samples, 0.03%)</title><rect x="94.1923%" y="869" width="0.0255%" height="15" fill="rgb(242,101,44)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="879.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (26 samples, 0.03%)</title><rect x="94.1923%" y="853" width="0.0255%" height="15" fill="rgb(226,174,6)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="863.50"></text></g><g><title>__GI___libc_malloc (26 samples, 0.03%)</title><rect x="94.1923%" y="837" width="0.0255%" height="15" fill="rgb(213,150,20)" fg:x="95917" fg:w="26"/><text x="94.4423%" y="847.50"></text></g><g><title>_int_malloc (15 samples, 0.01%)</title><rect x="94.2031%" y="821" width="0.0147%" height="15" fill="rgb(222,124,42)" fg:x="95928" fg:w="15"/><text x="94.4531%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (34 samples, 0.03%)</title><rect x="94.2287%" y="869" width="0.0334%" height="15" fill="rgb(250,19,47)" fg:x="95954" fg:w="34"/><text x="94.4787%" y="879.50"></text></g><g><title>alloc::alloc::Global::grow_impl (34 samples, 0.03%)</title><rect x="94.2287%" y="853" width="0.0334%" height="15" fill="rgb(241,217,19)" fg:x="95954" fg:w="34"/><text x="94.4787%" y="863.50"></text></g><g><title>alloc::alloc::realloc (34 samples, 0.03%)</title><rect x="94.2287%" y="837" width="0.0334%" height="15" fill="rgb(207,210,34)" fg:x="95954" fg:w="34"/><text x="94.4787%" y="847.50"></text></g><g><title>__rdl_realloc (34 samples, 0.03%)</title><rect x="94.2287%" y="821" width="0.0334%" height="15" fill="rgb(244,45,4)" fg:x="95954" fg:w="34"/><text x="94.4787%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (34 samples, 0.03%)</title><rect x="94.2287%" y="805" width="0.0334%" height="15" fill="rgb(252,134,50)" fg:x="95954" fg:w="34"/><text x="94.4787%" y="815.50"></text></g><g><title>__GI___libc_realloc (34 samples, 0.03%)</title><rect x="94.2287%" y="789" width="0.0334%" height="15" fill="rgb(238,74,2)" fg:x="95954" fg:w="34"/><text x="94.4787%" y="799.50"></text></g><g><title>_int_realloc (28 samples, 0.03%)</title><rect x="94.2346%" y="773" width="0.0275%" height="15" fill="rgb(226,58,46)" fg:x="95960" fg:w="28"/><text x="94.4846%" y="783.50"></text></g><g><title>_int_malloc (15 samples, 0.01%)</title><rect x="94.2473%" y="757" width="0.0147%" height="15" fill="rgb(232,83,35)" fg:x="95973" fg:w="15"/><text x="94.4973%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (35 samples, 0.03%)</title><rect x="94.2287%" y="997" width="0.0344%" height="15" fill="rgb(212,148,47)" fg:x="95954" fg:w="35"/><text x="94.4787%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (35 samples, 0.03%)</title><rect x="94.2287%" y="981" width="0.0344%" height="15" fill="rgb(235,29,1)" fg:x="95954" fg:w="35"/><text x="94.4787%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (35 samples, 0.03%)</title><rect x="94.2287%" y="965" width="0.0344%" height="15" fill="rgb(247,55,37)" fg:x="95954" fg:w="35"/><text x="94.4787%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (35 samples, 0.03%)</title><rect x="94.2287%" y="949" width="0.0344%" height="15" fill="rgb(222,48,3)" fg:x="95954" fg:w="35"/><text x="94.4787%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (35 samples, 0.03%)</title><rect x="94.2287%" y="933" width="0.0344%" height="15" fill="rgb(234,21,33)" fg:x="95954" fg:w="35"/><text x="94.4787%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (35 samples, 0.03%)</title><rect x="94.2287%" y="917" width="0.0344%" height="15" fill="rgb(247,178,53)" fg:x="95954" fg:w="35"/><text x="94.4787%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (35 samples, 0.03%)</title><rect x="94.2287%" y="901" width="0.0344%" height="15" fill="rgb(225,75,7)" fg:x="95954" fg:w="35"/><text x="94.4787%" y="911.50"></text></g><g><title>alloc::raw_vec::finish_grow (35 samples, 0.03%)</title><rect x="94.2287%" y="885" width="0.0344%" height="15" fill="rgb(219,199,7)" fg:x="95954" fg:w="35"/><text x="94.4787%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (20 samples, 0.02%)</title><rect x="94.2709%" y="789" width="0.0196%" height="15" fill="rgb(209,93,42)" fg:x="95997" fg:w="20"/><text x="94.5209%" y="799.50"></text></g><g><title>_int_malloc (23 samples, 0.02%)</title><rect x="94.2945%" y="789" width="0.0226%" height="15" fill="rgb(240,175,17)" fg:x="96021" fg:w="23"/><text x="94.5445%" y="799.50"></text></g><g><title>wgpu_render_pass_set_bind_group (92 samples, 0.09%)</title><rect x="94.2287%" y="1013" width="0.0903%" height="15" fill="rgb(232,106,7)" fg:x="95954" fg:w="92"/><text x="94.4787%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (57 samples, 0.06%)</title><rect x="94.2630%" y="997" width="0.0560%" height="15" fill="rgb(242,106,43)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (57 samples, 0.06%)</title><rect x="94.2630%" y="981" width="0.0560%" height="15" fill="rgb(242,61,37)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (57 samples, 0.06%)</title><rect x="94.2630%" y="965" width="0.0560%" height="15" fill="rgb(205,72,10)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (57 samples, 0.06%)</title><rect x="94.2630%" y="949" width="0.0560%" height="15" fill="rgb(214,184,36)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (57 samples, 0.06%)</title><rect x="94.2630%" y="933" width="0.0560%" height="15" fill="rgb(206,107,18)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="943.50"></text></g><g><title>alloc::raw_vec::finish_grow (57 samples, 0.06%)</title><rect x="94.2630%" y="917" width="0.0560%" height="15" fill="rgb(210,75,5)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (57 samples, 0.06%)</title><rect x="94.2630%" y="901" width="0.0560%" height="15" fill="rgb(205,3,19)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="911.50"></text></g><g><title>alloc::alloc::Global::grow_impl (57 samples, 0.06%)</title><rect x="94.2630%" y="885" width="0.0560%" height="15" fill="rgb(207,181,42)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="895.50"></text></g><g><title>alloc::alloc::realloc (57 samples, 0.06%)</title><rect x="94.2630%" y="869" width="0.0560%" height="15" fill="rgb(229,179,43)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="879.50"></text></g><g><title>__rdl_realloc (57 samples, 0.06%)</title><rect x="94.2630%" y="853" width="0.0560%" height="15" fill="rgb(246,95,30)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="863.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (57 samples, 0.06%)</title><rect x="94.2630%" y="837" width="0.0560%" height="15" fill="rgb(234,144,45)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="847.50"></text></g><g><title>__GI___libc_realloc (57 samples, 0.06%)</title><rect x="94.2630%" y="821" width="0.0560%" height="15" fill="rgb(250,54,25)" fg:x="95989" fg:w="57"/><text x="94.5130%" y="831.50"></text></g><g><title>_int_realloc (52 samples, 0.05%)</title><rect x="94.2680%" y="805" width="0.0511%" height="15" fill="rgb(215,195,40)" fg:x="95994" fg:w="52"/><text x="94.5180%" y="815.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (134 samples, 0.13%)</title><rect x="94.1923%" y="1029" width="0.1316%" height="15" fill="rgb(233,188,42)" fg:x="95917" fg:w="134"/><text x="94.4423%" y="1039.50"></text></g><g><title>&lt;T as bevy_wgpu::wgpu_type_converter::WgpuInto&lt;U&gt;&gt;::wgpu_into (14 samples, 0.01%)</title><rect x="94.3298%" y="837" width="0.0137%" height="15" fill="rgb(247,227,35)" fg:x="96057" fg:w="14"/><text x="94.5798%" y="847.50"></text></g><g><title>&lt;wgpu::Operations&lt;U&gt; as bevy_wgpu::wgpu_type_converter::WgpuFrom&lt;&amp;bevy_render::pass::ops::Operations&lt;T&gt;&gt;&gt;::from (14 samples, 0.01%)</title><rect x="94.3298%" y="821" width="0.0137%" height="15" fill="rgb(249,124,27)" fg:x="96057" fg:w="14"/><text x="94.5798%" y="831.50"></text></g><g><title>&lt;T as bevy_wgpu::wgpu_type_converter::WgpuInto&lt;U&gt;&gt;::wgpu_into (12 samples, 0.01%)</title><rect x="94.3318%" y="805" width="0.0118%" height="15" fill="rgb(219,207,25)" fg:x="96059" fg:w="12"/><text x="94.5818%" y="815.50"></text></g><g><title>&lt;wgpu::LoadOp&lt;wgpu_types::Color&gt; as bevy_wgpu::wgpu_type_converter::WgpuFrom&lt;&amp;bevy_render::pass::ops::LoadOp&lt;bevy_render::color::Color&gt;&gt;&gt;::from (12 samples, 0.01%)</title><rect x="94.3318%" y="789" width="0.0118%" height="15" fill="rgb(241,216,47)" fg:x="96059" fg:w="12"/><text x="94.5818%" y="799.50"></text></g><g><title>&lt;T as bevy_wgpu::wgpu_type_converter::WgpuInto&lt;U&gt;&gt;::wgpu_into (12 samples, 0.01%)</title><rect x="94.3318%" y="773" width="0.0118%" height="15" fill="rgb(233,82,50)" fg:x="96059" fg:w="12"/><text x="94.5818%" y="783.50"></text></g><g><title>&lt;wgpu_types::Color as bevy_wgpu::wgpu_type_converter::WgpuFrom&lt;bevy_render::color::Color&gt;&gt;::from (12 samples, 0.01%)</title><rect x="94.3318%" y="757" width="0.0118%" height="15" fill="rgb(232,63,2)" fg:x="96059" fg:w="12"/><text x="94.5818%" y="767.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_f32 (12 samples, 0.01%)</title><rect x="94.3318%" y="741" width="0.0118%" height="15" fill="rgb(236,184,28)" fg:x="96059" fg:w="12"/><text x="94.5818%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (23 samples, 0.02%)</title><rect x="94.3298%" y="885" width="0.0226%" height="15" fill="rgb(254,63,27)" fg:x="96057" fg:w="23"/><text x="94.5798%" y="895.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_render_pass::{{closure}} (23 samples, 0.02%)</title><rect x="94.3298%" y="869" width="0.0226%" height="15" fill="rgb(253,106,28)" fg:x="96057" fg:w="23"/><text x="94.5798%" y="879.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_wgpu_color_attachment_descriptor (23 samples, 0.02%)</title><rect x="94.3298%" y="853" width="0.0226%" height="15" fill="rgb(225,141,39)" fg:x="96057" fg:w="23"/><text x="94.5798%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (29 samples, 0.03%)</title><rect x="94.3249%" y="949" width="0.0285%" height="15" fill="rgb(222,157,20)" fg:x="96052" fg:w="29"/><text x="94.5749%" y="959.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (29 samples, 0.03%)</title><rect x="94.3249%" y="933" width="0.0285%" height="15" fill="rgb(210,190,9)" fg:x="96052" fg:w="29"/><text x="94.5749%" y="943.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (28 samples, 0.03%)</title><rect x="94.3259%" y="917" width="0.0275%" height="15" fill="rgb(242,167,7)" fg:x="96053" fg:w="28"/><text x="94.5759%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (24 samples, 0.02%)</title><rect x="94.3298%" y="901" width="0.0236%" height="15" fill="rgb(227,82,41)" fg:x="96057" fg:w="24"/><text x="94.5798%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (31 samples, 0.03%)</title><rect x="94.3249%" y="1013" width="0.0304%" height="15" fill="rgb(222,131,13)" fg:x="96052" fg:w="31"/><text x="94.5749%" y="1023.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (31 samples, 0.03%)</title><rect x="94.3249%" y="997" width="0.0304%" height="15" fill="rgb(221,98,26)" fg:x="96052" fg:w="31"/><text x="94.5749%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (31 samples, 0.03%)</title><rect x="94.3249%" y="981" width="0.0304%" height="15" fill="rgb(251,63,52)" fg:x="96052" fg:w="31"/><text x="94.5749%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (31 samples, 0.03%)</title><rect x="94.3249%" y="965" width="0.0304%" height="15" fill="rgb(246,25,43)" fg:x="96052" fg:w="31"/><text x="94.5749%" y="975.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (184 samples, 0.18%)</title><rect x="94.1923%" y="1061" width="0.1807%" height="15" fill="rgb(247,167,15)" fg:x="95917" fg:w="184"/><text x="94.4423%" y="1071.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (184 samples, 0.18%)</title><rect x="94.1923%" y="1045" width="0.1807%" height="15" fill="rgb(240,104,42)" fg:x="95917" fg:w="184"/><text x="94.4423%" y="1055.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_render_pass (50 samples, 0.05%)</title><rect x="94.3239%" y="1029" width="0.0491%" height="15" fill="rgb(224,54,6)" fg:x="96051" fg:w="50"/><text x="94.5739%" y="1039.50"></text></g><g><title>wgpu::CommandEncoder::begin_render_pass (13 samples, 0.01%)</title><rect x="94.3603%" y="1013" width="0.0128%" height="15" fill="rgb(244,108,35)" fg:x="96088" fg:w="13"/><text x="94.6103%" y="1023.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (16 samples, 0.02%)</title><rect x="94.3730%" y="1061" width="0.0157%" height="15" fill="rgb(216,154,2)" fg:x="96101" fg:w="16"/><text x="94.6230%" y="1071.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::next_swap_chain_texture (12 samples, 0.01%)</title><rect x="94.3770%" y="1045" width="0.0118%" height="15" fill="rgb(222,8,47)" fg:x="96105" fg:w="12"/><text x="94.6270%" y="1055.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::try_next_swap_chain_texture (12 samples, 0.01%)</title><rect x="94.3770%" y="1029" width="0.0118%" height="15" fill="rgb(252,93,1)" fg:x="96105" fg:w="12"/><text x="94.6270%" y="1039.50"></text></g><g><title>wgpu::SwapChain::get_current_frame (12 samples, 0.01%)</title><rect x="94.3770%" y="1013" width="0.0118%" height="15" fill="rgb(223,226,51)" fg:x="96105" fg:w="12"/><text x="94.6270%" y="1023.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_get_current_texture_view (12 samples, 0.01%)</title><rect x="94.3770%" y="997" width="0.0118%" height="15" fill="rgb(206,147,9)" fg:x="96105" fg:w="12"/><text x="94.6270%" y="1007.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_get_current_texture_view (12 samples, 0.01%)</title><rect x="94.3770%" y="981" width="0.0118%" height="15" fill="rgb(248,180,41)" fg:x="96105" fg:w="12"/><text x="94.6270%" y="991.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (45 samples, 0.04%)</title><rect x="94.4005%" y="949" width="0.0442%" height="15" fill="rgb(209,47,50)" fg:x="96129" fg:w="45"/><text x="94.6505%" y="959.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (45 samples, 0.04%)</title><rect x="94.4005%" y="933" width="0.0442%" height="15" fill="rgb(243,65,31)" fg:x="96129" fg:w="45"/><text x="94.6505%" y="943.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (45 samples, 0.04%)</title><rect x="94.4005%" y="917" width="0.0442%" height="15" fill="rgb(228,128,1)" fg:x="96129" fg:w="45"/><text x="94.6505%" y="927.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (45 samples, 0.04%)</title><rect x="94.4005%" y="901" width="0.0442%" height="15" fill="rgb(231,192,16)" fg:x="96129" fg:w="45"/><text x="94.6505%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (45 samples, 0.04%)</title><rect x="94.4005%" y="885" width="0.0442%" height="15" fill="rgb(224,26,40)" fg:x="96129" fg:w="45"/><text x="94.6505%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (31 samples, 0.03%)</title><rect x="94.4143%" y="869" width="0.0304%" height="15" fill="rgb(214,192,17)" fg:x="96143" fg:w="31"/><text x="94.6643%" y="879.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::get_or_create (71 samples, 0.07%)</title><rect x="94.3887%" y="1029" width="0.0697%" height="15" fill="rgb(225,147,18)" fg:x="96117" fg:w="71"/><text x="94.6387%" y="1039.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (71 samples, 0.07%)</title><rect x="94.3887%" y="1013" width="0.0697%" height="15" fill="rgb(205,35,11)" fg:x="96117" fg:w="71"/><text x="94.6387%" y="1023.50"></text></g><g><title>wgpu::Device::create_command_encoder (71 samples, 0.07%)</title><rect x="94.3887%" y="997" width="0.0697%" height="15" fill="rgb(242,40,42)" fg:x="96117" fg:w="71"/><text x="94.6387%" y="1007.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (71 samples, 0.07%)</title><rect x="94.3887%" y="981" width="0.0697%" height="15" fill="rgb(250,170,13)" fg:x="96117" fg:w="71"/><text x="94.6387%" y="991.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (71 samples, 0.07%)</title><rect x="94.3887%" y="965" width="0.0697%" height="15" fill="rgb(240,161,28)" fg:x="96117" fg:w="71"/><text x="94.6387%" y="975.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (40 samples, 0.04%)</title><rect x="94.4585%" y="965" width="0.0393%" height="15" fill="rgb(245,179,12)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="975.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (40 samples, 0.04%)</title><rect x="94.4585%" y="949" width="0.0393%" height="15" fill="rgb(250,92,32)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="959.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (40 samples, 0.04%)</title><rect x="94.4585%" y="933" width="0.0393%" height="15" fill="rgb(233,10,40)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="943.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (40 samples, 0.04%)</title><rect x="94.4585%" y="917" width="0.0393%" height="15" fill="rgb(217,98,1)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="927.50"></text></g><g><title>inplace_it::fixed_array::indirect (40 samples, 0.04%)</title><rect x="94.4585%" y="901" width="0.0393%" height="15" fill="rgb(238,202,7)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="911.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (40 samples, 0.04%)</title><rect x="94.4585%" y="885" width="0.0393%" height="15" fill="rgb(222,91,3)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="895.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (40 samples, 0.04%)</title><rect x="94.4585%" y="869" width="0.0393%" height="15" fill="rgb(211,170,49)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="879.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer::{{closure}} (40 samples, 0.04%)</title><rect x="94.4585%" y="853" width="0.0393%" height="15" fill="rgb(253,139,18)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="863.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_copy_buffer (40 samples, 0.04%)</title><rect x="94.4585%" y="837" width="0.0393%" height="15" fill="rgb(222,4,43)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="847.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_copy_buffer (40 samples, 0.04%)</title><rect x="94.4585%" y="821" width="0.0393%" height="15" fill="rgb(207,205,12)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (40 samples, 0.04%)</title><rect x="94.4585%" y="805" width="0.0393%" height="15" fill="rgb(216,159,46)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (40 samples, 0.04%)</title><rect x="94.4585%" y="789" width="0.0393%" height="15" fill="rgb(236,115,1)" fg:x="96188" fg:w="40"/><text x="94.7085%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (33 samples, 0.03%)</title><rect x="94.4653%" y="773" width="0.0324%" height="15" fill="rgb(251,35,33)" fg:x="96195" fg:w="33"/><text x="94.7153%" y="783.50"></text></g><g><title>__memmove_avx_unaligned_erms (134 samples, 0.13%)</title><rect x="94.5154%" y="949" width="0.1316%" height="15" fill="rgb(248,62,51)" fg:x="96246" fg:w="134"/><text x="94.7654%" y="959.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (12 samples, 0.01%)</title><rect x="94.6470%" y="949" width="0.0118%" height="15" fill="rgb(254,180,19)" fg:x="96380" fg:w="12"/><text x="94.8970%" y="959.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (12 samples, 0.01%)</title><rect x="94.6470%" y="933" width="0.0118%" height="15" fill="rgb(217,100,32)" fg:x="96380" fg:w="12"/><text x="94.8970%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (70 samples, 0.07%)</title><rect x="94.7256%" y="933" width="0.0687%" height="15" fill="rgb(224,71,22)" fg:x="96460" fg:w="70"/><text x="94.9756%" y="943.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (414 samples, 0.41%)</title><rect x="94.3887%" y="1061" width="0.4066%" height="15" fill="rgb(251,185,33)" fg:x="96117" fg:w="414"/><text x="94.6387%" y="1071.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (414 samples, 0.41%)</title><rect x="94.3887%" y="1045" width="0.4066%" height="15" fill="rgb(209,75,48)" fg:x="96117" fg:w="414"/><text x="94.6387%" y="1055.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (343 samples, 0.34%)</title><rect x="94.4585%" y="1029" width="0.3368%" height="15" fill="rgb(253,190,16)" fg:x="96188" fg:w="343"/><text x="94.7085%" y="1039.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (343 samples, 0.34%)</title><rect x="94.4585%" y="1013" width="0.3368%" height="15" fill="rgb(226,140,1)" fg:x="96188" fg:w="343"/><text x="94.7085%" y="1023.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (343 samples, 0.34%)</title><rect x="94.4585%" y="997" width="0.3368%" height="15" fill="rgb(206,75,30)" fg:x="96188" fg:w="343"/><text x="94.7085%" y="1007.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (343 samples, 0.34%)</title><rect x="94.4585%" y="981" width="0.3368%" height="15" fill="rgb(231,208,37)" fg:x="96188" fg:w="343"/><text x="94.7085%" y="991.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (303 samples, 0.30%)</title><rect x="94.4977%" y="965" width="0.2976%" height="15" fill="rgb(238,136,40)" fg:x="96228" fg:w="303"/><text x="94.7477%" y="975.50"></text></g><g><title>gfx_backend_vulkan::command::destructure_barriers (129 samples, 0.13%)</title><rect x="94.6686%" y="949" width="0.1267%" height="15" fill="rgb(247,137,17)" fg:x="96402" fg:w="129"/><text x="94.9186%" y="959.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (39 samples, 0.04%)</title><rect x="94.8424%" y="949" width="0.0383%" height="15" fill="rgb(240,60,40)" fg:x="96579" fg:w="39"/><text x="95.0924%" y="959.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (43 samples, 0.04%)</title><rect x="94.8415%" y="997" width="0.0422%" height="15" fill="rgb(236,68,50)" fg:x="96578" fg:w="43"/><text x="95.0915%" y="1007.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (42 samples, 0.04%)</title><rect x="94.8424%" y="981" width="0.0412%" height="15" fill="rgb(230,42,12)" fg:x="96579" fg:w="42"/><text x="95.0924%" y="991.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (42 samples, 0.04%)</title><rect x="94.8424%" y="965" width="0.0412%" height="15" fill="rgb(219,16,16)" fg:x="96579" fg:w="42"/><text x="95.0924%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="94.8974%" y="901" width="0.0177%" height="15" fill="rgb(220,38,35)" fg:x="96635" fg:w="18"/><text x="95.1474%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (18 samples, 0.02%)</title><rect x="94.8974%" y="885" width="0.0177%" height="15" fill="rgb(228,33,1)" fg:x="96635" fg:w="18"/><text x="95.1474%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.02%)</title><rect x="94.8974%" y="869" width="0.0177%" height="15" fill="rgb(241,46,31)" fg:x="96635" fg:w="18"/><text x="95.1474%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (18 samples, 0.02%)</title><rect x="94.8974%" y="853" width="0.0177%" height="15" fill="rgb(232,58,20)" fg:x="96635" fg:w="18"/><text x="95.1474%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (17 samples, 0.02%)</title><rect x="94.8984%" y="837" width="0.0167%" height="15" fill="rgb(206,228,53)" fg:x="96636" fg:w="17"/><text x="95.1484%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.02%)</title><rect x="94.8994%" y="821" width="0.0157%" height="15" fill="rgb(206,88,33)" fg:x="96637" fg:w="16"/><text x="95.1494%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.02%)</title><rect x="94.8994%" y="805" width="0.0157%" height="15" fill="rgb(238,69,7)" fg:x="96637" fg:w="16"/><text x="95.1494%" y="815.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.02%)</title><rect x="94.8994%" y="789" width="0.0157%" height="15" fill="rgb(250,21,46)" fg:x="96637" fg:w="16"/><text x="95.1494%" y="799.50"></text></g><g><title>__rdl_realloc (16 samples, 0.02%)</title><rect x="94.8994%" y="773" width="0.0157%" height="15" fill="rgb(215,212,21)" fg:x="96637" fg:w="16"/><text x="95.1494%" y="783.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (16 samples, 0.02%)</title><rect x="94.8994%" y="757" width="0.0157%" height="15" fill="rgb(211,35,12)" fg:x="96637" fg:w="16"/><text x="95.1494%" y="767.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.02%)</title><rect x="94.8994%" y="741" width="0.0157%" height="15" fill="rgb(231,184,16)" fg:x="96637" fg:w="16"/><text x="95.1494%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (33 samples, 0.03%)</title><rect x="94.8837%" y="933" width="0.0324%" height="15" fill="rgb(242,140,15)" fg:x="96621" fg:w="33"/><text x="95.1337%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (33 samples, 0.03%)</title><rect x="94.8837%" y="917" width="0.0324%" height="15" fill="rgb(220,37,14)" fg:x="96621" fg:w="33"/><text x="95.1337%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (65 samples, 0.06%)</title><rect x="94.8837%" y="997" width="0.0638%" height="15" fill="rgb(223,146,22)" fg:x="96621" fg:w="65"/><text x="95.1337%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (65 samples, 0.06%)</title><rect x="94.8837%" y="981" width="0.0638%" height="15" fill="rgb(216,132,15)" fg:x="96621" fg:w="65"/><text x="95.1337%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (65 samples, 0.06%)</title><rect x="94.8837%" y="965" width="0.0638%" height="15" fill="rgb(248,83,5)" fg:x="96621" fg:w="65"/><text x="95.1337%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (65 samples, 0.06%)</title><rect x="94.8837%" y="949" width="0.0638%" height="15" fill="rgb(231,206,48)" fg:x="96621" fg:w="65"/><text x="95.1337%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (22 samples, 0.02%)</title><rect x="94.9259%" y="933" width="0.0216%" height="15" fill="rgb(253,185,37)" fg:x="96664" fg:w="22"/><text x="95.1759%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="94.9259%" y="917" width="0.0216%" height="15" fill="rgb(208,21,44)" fg:x="96664" fg:w="22"/><text x="95.1759%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (22 samples, 0.02%)</title><rect x="94.9259%" y="901" width="0.0216%" height="15" fill="rgb(236,125,4)" fg:x="96664" fg:w="22"/><text x="95.1759%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (21 samples, 0.02%)</title><rect x="94.9269%" y="885" width="0.0206%" height="15" fill="rgb(226,134,25)" fg:x="96665" fg:w="21"/><text x="95.1769%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (21 samples, 0.02%)</title><rect x="94.9269%" y="869" width="0.0206%" height="15" fill="rgb(250,201,12)" fg:x="96665" fg:w="21"/><text x="95.1769%" y="879.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (21 samples, 0.02%)</title><rect x="94.9269%" y="853" width="0.0206%" height="15" fill="rgb(225,92,18)" fg:x="96665" fg:w="21"/><text x="95.1769%" y="863.50"></text></g><g><title>alloc::alloc::alloc (21 samples, 0.02%)</title><rect x="94.9269%" y="837" width="0.0206%" height="15" fill="rgb(227,35,22)" fg:x="96665" fg:w="21"/><text x="95.1769%" y="847.50"></text></g><g><title>__rdl_alloc (21 samples, 0.02%)</title><rect x="94.9269%" y="821" width="0.0206%" height="15" fill="rgb(214,180,52)" fg:x="96665" fg:w="21"/><text x="95.1769%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (21 samples, 0.02%)</title><rect x="94.9269%" y="805" width="0.0206%" height="15" fill="rgb(233,55,38)" fg:x="96665" fg:w="21"/><text x="95.1769%" y="815.50"></text></g><g><title>__GI___libc_malloc (21 samples, 0.02%)</title><rect x="94.9269%" y="789" width="0.0206%" height="15" fill="rgb(249,171,43)" fg:x="96665" fg:w="21"/><text x="95.1769%" y="799.50"></text></g><g><title>_int_malloc (11 samples, 0.01%)</title><rect x="94.9367%" y="773" width="0.0108%" height="15" fill="rgb(239,87,2)" fg:x="96675" fg:w="11"/><text x="95.1867%" y="783.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (120 samples, 0.12%)</title><rect x="94.8346%" y="1013" width="0.1178%" height="15" fill="rgb(248,141,5)" fg:x="96571" fg:w="120"/><text x="95.0846%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (29 samples, 0.03%)</title><rect x="94.9878%" y="933" width="0.0285%" height="15" fill="rgb(238,33,42)" fg:x="96727" fg:w="29"/><text x="95.2378%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (21 samples, 0.02%)</title><rect x="94.9956%" y="917" width="0.0206%" height="15" fill="rgb(231,57,19)" fg:x="96735" fg:w="21"/><text x="95.2456%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (54 samples, 0.05%)</title><rect x="94.9681%" y="949" width="0.0530%" height="15" fill="rgb(214,78,53)" fg:x="96707" fg:w="54"/><text x="95.2181%" y="959.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::finish (75 samples, 0.07%)</title><rect x="94.9524%" y="1013" width="0.0737%" height="15" fill="rgb(206,132,29)" fg:x="96691" fg:w="75"/><text x="95.2024%" y="1023.50"></text></g><g><title>ash::device::DeviceV1_0::end_command_buffer (75 samples, 0.07%)</title><rect x="94.9524%" y="997" width="0.0737%" height="15" fill="rgb(248,174,31)" fg:x="96691" fg:w="75"/><text x="95.2024%" y="1007.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::end_command_buffer (75 samples, 0.07%)</title><rect x="94.9524%" y="981" width="0.0737%" height="15" fill="rgb(221,87,13)" fg:x="96691" fg:w="75"/><text x="95.2024%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (75 samples, 0.07%)</title><rect x="94.9524%" y="965" width="0.0737%" height="15" fill="rgb(223,197,17)" fg:x="96691" fg:w="75"/><text x="95.2024%" y="975.50"></text></g><g><title>_IO_no_init (11 samples, 0.01%)</title><rect x="95.2451%" y="805" width="0.0108%" height="15" fill="rgb(220,144,50)" fg:x="96989" fg:w="11"/><text x="95.4951%" y="815.50"></text></g><g><title>__GI___snprintf (33 samples, 0.03%)</title><rect x="95.2352%" y="837" width="0.0324%" height="15" fill="rgb(244,201,11)" fg:x="96979" fg:w="33"/><text x="95.4852%" y="847.50"></text></g><g><title>__vsnprintf_internal (26 samples, 0.03%)</title><rect x="95.2421%" y="821" width="0.0255%" height="15" fill="rgb(249,81,34)" fg:x="96986" fg:w="26"/><text x="95.4921%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (38 samples, 0.04%)</title><rect x="95.2343%" y="853" width="0.0373%" height="15" fill="rgb(205,161,12)" fg:x="96978" fg:w="38"/><text x="95.4843%" y="863.50"></text></g><g><title>__GI___libc_malloc (22 samples, 0.02%)</title><rect x="95.2716%" y="853" width="0.0216%" height="15" fill="rgb(252,139,50)" fg:x="97016" fg:w="22"/><text x="95.5216%" y="863.50"></text></g><g><title>__libc_open64 (15 samples, 0.01%)</title><rect x="95.2942%" y="853" width="0.0147%" height="15" fill="rgb(205,169,14)" fg:x="97039" fg:w="15"/><text x="95.5442%" y="863.50"></text></g><g><title>fcntl_compat (14 samples, 0.01%)</title><rect x="95.3128%" y="853" width="0.0137%" height="15" fill="rgb(248,198,33)" fg:x="97058" fg:w="14"/><text x="95.5628%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (131 samples, 0.13%)</title><rect x="95.2019%" y="869" width="0.1286%" height="15" fill="rgb(236,23,21)" fg:x="96945" fg:w="131"/><text x="95.4519%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (171 samples, 0.17%)</title><rect x="95.1655%" y="885" width="0.1679%" height="15" fill="rgb(231,13,38)" fg:x="96908" fg:w="171"/><text x="95.4155%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (225 samples, 0.22%)</title><rect x="95.1380%" y="901" width="0.2210%" height="15" fill="rgb(239,139,21)" fg:x="96880" fg:w="225"/><text x="95.3880%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (267 samples, 0.26%)</title><rect x="95.0997%" y="933" width="0.2622%" height="15" fill="rgb(222,164,45)" fg:x="96841" fg:w="267"/><text x="95.3497%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (257 samples, 0.25%)</title><rect x="95.1095%" y="917" width="0.2524%" height="15" fill="rgb(230,52,27)" fg:x="96851" fg:w="257"/><text x="95.3595%" y="927.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_fence (286 samples, 0.28%)</title><rect x="95.0860%" y="1013" width="0.2809%" height="15" fill="rgb(227,143,42)" fg:x="96827" fg:w="286"/><text x="95.3360%" y="1023.50"></text></g><g><title>ash::device::DeviceV1_0::create_fence (280 samples, 0.27%)</title><rect x="95.0919%" y="997" width="0.2750%" height="15" fill="rgb(249,127,1)" fg:x="96833" fg:w="280"/><text x="95.3419%" y="1007.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_fence (279 samples, 0.27%)</title><rect x="95.0928%" y="981" width="0.2740%" height="15" fill="rgb(243,107,26)" fg:x="96834" fg:w="279"/><text x="95.3428%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (279 samples, 0.27%)</title><rect x="95.0928%" y="965" width="0.2740%" height="15" fill="rgb(225,7,45)" fg:x="96834" fg:w="279"/><text x="95.3428%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (275 samples, 0.27%)</title><rect x="95.0968%" y="949" width="0.2701%" height="15" fill="rgb(241,88,38)" fg:x="96838" fg:w="275"/><text x="95.3468%" y="959.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (39 samples, 0.04%)</title><rect x="95.3668%" y="1013" width="0.0383%" height="15" fill="rgb(226,121,9)" fg:x="97113" fg:w="39"/><text x="95.6168%" y="1023.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (39 samples, 0.04%)</title><rect x="95.3668%" y="997" width="0.0383%" height="15" fill="rgb(253,60,29)" fg:x="97113" fg:w="39"/><text x="95.6168%" y="1007.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (39 samples, 0.04%)</title><rect x="95.3668%" y="981" width="0.0383%" height="15" fill="rgb(244,181,39)" fg:x="97113" fg:w="39"/><text x="95.6168%" y="991.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (39 samples, 0.04%)</title><rect x="95.3668%" y="965" width="0.0383%" height="15" fill="rgb(252,203,31)" fg:x="97113" fg:w="39"/><text x="95.6168%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (39 samples, 0.04%)</title><rect x="95.3668%" y="949" width="0.0383%" height="15" fill="rgb(224,120,8)" fg:x="97113" fg:w="39"/><text x="95.6168%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (30 samples, 0.03%)</title><rect x="95.3757%" y="933" width="0.0295%" height="15" fill="rgb(205,171,54)" fg:x="97122" fg:w="30"/><text x="95.6257%" y="943.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (21 samples, 0.02%)</title><rect x="95.4110%" y="997" width="0.0206%" height="15" fill="rgb(235,89,11)" fg:x="97158" fg:w="21"/><text x="95.6610%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (31 samples, 0.03%)</title><rect x="95.4395%" y="981" width="0.0304%" height="15" fill="rgb(212,180,28)" fg:x="97187" fg:w="31"/><text x="95.6895%" y="991.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (31 samples, 0.03%)</title><rect x="95.4395%" y="965" width="0.0304%" height="15" fill="rgb(247,84,49)" fg:x="97187" fg:w="31"/><text x="95.6895%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (31 samples, 0.03%)</title><rect x="95.4395%" y="949" width="0.0304%" height="15" fill="rgb(236,187,52)" fg:x="97187" fg:w="31"/><text x="95.6895%" y="959.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (65 samples, 0.06%)</title><rect x="95.4100%" y="1013" width="0.0638%" height="15" fill="rgb(227,24,15)" fg:x="97157" fg:w="65"/><text x="95.6600%" y="1023.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (43 samples, 0.04%)</title><rect x="95.4316%" y="997" width="0.0422%" height="15" fill="rgb(227,211,13)" fg:x="97179" fg:w="43"/><text x="95.6816%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (34 samples, 0.03%)</title><rect x="95.4906%" y="997" width="0.0334%" height="15" fill="rgb(245,52,14)" fg:x="97239" fg:w="34"/><text x="95.7406%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;wgpu_core::track::texture::TextureState&gt;&gt; (11 samples, 0.01%)</title><rect x="95.5132%" y="981" width="0.0108%" height="15" fill="rgb(225,185,13)" fg:x="97262" fg:w="11"/><text x="95.7632%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::texture::TextureState&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="95.5132%" y="965" width="0.0108%" height="15" fill="rgb(217,160,29)" fg:x="97262" fg:w="11"/><text x="95.7632%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::texture::TextureState&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (11 samples, 0.01%)</title><rect x="95.5132%" y="949" width="0.0108%" height="15" fill="rgb(216,115,53)" fg:x="97262" fg:w="11"/><text x="95.7632%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::texture::TextureState&gt;)&gt;&gt; (11 samples, 0.01%)</title><rect x="95.5132%" y="933" width="0.0108%" height="15" fill="rgb(236,99,5)" fg:x="97262" fg:w="11"/><text x="95.7632%" y="943.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::after_submit (54 samples, 0.05%)</title><rect x="95.4739%" y="1013" width="0.0530%" height="15" fill="rgb(222,60,38)" fg:x="97222" fg:w="54"/><text x="95.7239%" y="1023.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (32 samples, 0.03%)</title><rect x="95.5416%" y="997" width="0.0314%" height="15" fill="rgb(212,82,22)" fg:x="97291" fg:w="32"/><text x="95.7916%" y="1007.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::maintain (24 samples, 0.02%)</title><rect x="95.5495%" y="981" width="0.0236%" height="15" fill="rgb(214,48,28)" fg:x="97299" fg:w="24"/><text x="95.7995%" y="991.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::recycle (22 samples, 0.02%)</title><rect x="95.5515%" y="965" width="0.0216%" height="15" fill="rgb(245,196,50)" fg:x="97301" fg:w="22"/><text x="95.8015%" y="975.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::reset (22 samples, 0.02%)</title><rect x="95.5515%" y="949" width="0.0216%" height="15" fill="rgb(225,159,46)" fg:x="97301" fg:w="22"/><text x="95.8015%" y="959.50"></text></g><g><title>ash::device::DeviceV1_0::reset_command_buffer (22 samples, 0.02%)</title><rect x="95.5515%" y="933" width="0.0216%" height="15" fill="rgb(207,195,48)" fg:x="97301" fg:w="22"/><text x="95.8015%" y="943.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::reset_command_buffer (22 samples, 0.02%)</title><rect x="95.5515%" y="917" width="0.0216%" height="15" fill="rgb(240,73,3)" fg:x="97301" fg:w="22"/><text x="95.8015%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (22 samples, 0.02%)</title><rect x="95.5515%" y="901" width="0.0216%" height="15" fill="rgb(245,57,23)" fg:x="97301" fg:w="22"/><text x="95.8015%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.02%)</title><rect x="95.5573%" y="885" width="0.0157%" height="15" fill="rgb(240,75,18)" fg:x="97307" fg:w="16"/><text x="95.8073%" y="895.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorBucket&lt;P&gt;::cleanup (13 samples, 0.01%)</title><rect x="95.5770%" y="949" width="0.0128%" height="15" fill="rgb(238,168,12)" fg:x="97327" fg:w="13"/><text x="95.8270%" y="959.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (22 samples, 0.02%)</title><rect x="95.5770%" y="981" width="0.0216%" height="15" fill="rgb(226,20,40)" fg:x="97327" fg:w="22"/><text x="95.8270%" y="991.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (22 samples, 0.02%)</title><rect x="95.5770%" y="965" width="0.0216%" height="15" fill="rgb(224,130,35)" fg:x="97327" fg:w="22"/><text x="95.8270%" y="975.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::destroy_buffer (12 samples, 0.01%)</title><rect x="95.6064%" y="965" width="0.0118%" height="15" fill="rgb(225,63,41)" fg:x="97357" fg:w="12"/><text x="95.8564%" y="975.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_buffer (12 samples, 0.01%)</title><rect x="95.6064%" y="949" width="0.0118%" height="15" fill="rgb(219,3,3)" fg:x="97357" fg:w="12"/><text x="95.8564%" y="959.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::destroy_buffer (12 samples, 0.01%)</title><rect x="95.6064%" y="933" width="0.0118%" height="15" fill="rgb(218,157,4)" fg:x="97357" fg:w="12"/><text x="95.8564%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="95.6064%" y="917" width="0.0118%" height="15" fill="rgb(232,76,36)" fg:x="97357" fg:w="12"/><text x="95.8564%" y="927.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (84 samples, 0.08%)</title><rect x="95.5760%" y="997" width="0.0825%" height="15" fill="rgb(247,36,0)" fg:x="97326" fg:w="84"/><text x="95.8260%" y="1007.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (61 samples, 0.06%)</title><rect x="95.5986%" y="981" width="0.0599%" height="15" fill="rgb(205,2,34)" fg:x="97349" fg:w="61"/><text x="95.8486%" y="991.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (41 samples, 0.04%)</title><rect x="95.6182%" y="965" width="0.0403%" height="15" fill="rgb(239,136,13)" fg:x="97369" fg:w="41"/><text x="95.8682%" y="975.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (41 samples, 0.04%)</title><rect x="95.6182%" y="949" width="0.0403%" height="15" fill="rgb(253,122,12)" fg:x="97369" fg:w="41"/><text x="95.8682%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (55 samples, 0.05%)</title><rect x="95.7066%" y="853" width="0.0540%" height="15" fill="rgb(222,174,7)" fg:x="97459" fg:w="55"/><text x="95.9566%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (66 samples, 0.06%)</title><rect x="95.6978%" y="869" width="0.0648%" height="15" fill="rgb(208,191,42)" fg:x="97450" fg:w="66"/><text x="95.9478%" y="879.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::destroy_fence (96 samples, 0.09%)</title><rect x="95.6713%" y="981" width="0.0943%" height="15" fill="rgb(237,212,15)" fg:x="97423" fg:w="96"/><text x="95.9213%" y="991.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_fence (96 samples, 0.09%)</title><rect x="95.6713%" y="965" width="0.0943%" height="15" fill="rgb(215,65,20)" fg:x="97423" fg:w="96"/><text x="95.9213%" y="975.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::destroy_fence (96 samples, 0.09%)</title><rect x="95.6713%" y="949" width="0.0943%" height="15" fill="rgb(232,103,11)" fg:x="97423" fg:w="96"/><text x="95.9213%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (96 samples, 0.09%)</title><rect x="95.6713%" y="933" width="0.0943%" height="15" fill="rgb(235,148,18)" fg:x="97423" fg:w="96"/><text x="95.9213%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (90 samples, 0.09%)</title><rect x="95.6772%" y="917" width="0.0884%" height="15" fill="rgb(240,173,7)" fg:x="97429" fg:w="90"/><text x="95.9272%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (85 samples, 0.08%)</title><rect x="95.6821%" y="901" width="0.0835%" height="15" fill="rgb(228,182,25)" fg:x="97434" fg:w="85"/><text x="95.9321%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (76 samples, 0.07%)</title><rect x="95.6909%" y="885" width="0.0746%" height="15" fill="rgb(247,3,52)" fg:x="97443" fg:w="76"/><text x="95.9409%" y="895.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (233 samples, 0.23%)</title><rect x="95.5407%" y="1013" width="0.2288%" height="15" fill="rgb(226,155,8)" fg:x="97290" fg:w="233"/><text x="95.7907%" y="1023.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (113 samples, 0.11%)</title><rect x="95.6585%" y="997" width="0.1110%" height="15" fill="rgb(243,195,38)" fg:x="97410" fg:w="113"/><text x="95.9085%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.01%)</title><rect x="95.7901%" y="933" width="0.0118%" height="15" fill="rgb(254,181,33)" fg:x="97544" fg:w="12"/><text x="96.0401%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="95.7901%" y="917" width="0.0118%" height="15" fill="rgb(232,98,23)" fg:x="97544" fg:w="12"/><text x="96.0401%" y="927.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::track_submission (34 samples, 0.03%)</title><rect x="95.7695%" y="1013" width="0.0334%" height="15" fill="rgb(205,23,10)" fg:x="97523" fg:w="34"/><text x="96.0195%" y="1023.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::extend (15 samples, 0.01%)</title><rect x="95.7881%" y="997" width="0.0147%" height="15" fill="rgb(212,124,38)" fg:x="97542" fg:w="15"/><text x="96.0381%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (14 samples, 0.01%)</title><rect x="95.7891%" y="981" width="0.0137%" height="15" fill="rgb(228,207,2)" fg:x="97543" fg:w="14"/><text x="96.0391%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (13 samples, 0.01%)</title><rect x="95.7901%" y="965" width="0.0128%" height="15" fill="rgb(215,120,22)" fg:x="97544" fg:w="13"/><text x="96.0401%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (13 samples, 0.01%)</title><rect x="95.7901%" y="949" width="0.0128%" height="15" fill="rgb(251,172,33)" fg:x="97544" fg:w="13"/><text x="96.0401%" y="959.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.01%)</title><rect x="95.8048%" y="997" width="0.0137%" height="15" fill="rgb(250,83,2)" fg:x="97559" fg:w="14"/><text x="96.0548%" y="1007.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;B&gt;::finish::{{closure}} (14 samples, 0.01%)</title><rect x="95.8048%" y="981" width="0.0137%" height="15" fill="rgb(210,132,53)" fg:x="97559" fg:w="14"/><text x="96.0548%" y="991.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::finish (14 samples, 0.01%)</title><rect x="95.8048%" y="965" width="0.0137%" height="15" fill="rgb(221,208,36)" fg:x="97559" fg:w="14"/><text x="96.0548%" y="975.50"></text></g><g><title>ash::device::DeviceV1_0::end_command_buffer (14 samples, 0.01%)</title><rect x="95.8048%" y="949" width="0.0137%" height="15" fill="rgb(205,192,46)" fg:x="97559" fg:w="14"/><text x="96.0548%" y="959.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::end_command_buffer (14 samples, 0.01%)</title><rect x="95.8048%" y="933" width="0.0137%" height="15" fill="rgb(223,163,14)" fg:x="97559" fg:w="14"/><text x="96.0548%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.01%)</title><rect x="95.8048%" y="917" width="0.0137%" height="15" fill="rgb(218,41,28)" fg:x="97559" fg:w="14"/><text x="96.0548%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.01%)</title><rect x="95.8048%" y="901" width="0.0137%" height="15" fill="rgb(235,104,10)" fg:x="97559" fg:w="14"/><text x="96.0548%" y="911.50"></text></g><g><title>wgpu_core::device::queue::PendingWrites&lt;B&gt;::finish (19 samples, 0.02%)</title><rect x="95.8048%" y="1013" width="0.0187%" height="15" fill="rgb(246,17,4)" fg:x="97559" fg:w="19"/><text x="96.0548%" y="1023.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (11 samples, 0.01%)</title><rect x="95.8235%" y="1013" width="0.0108%" height="15" fill="rgb(240,7,16)" fg:x="97578" fg:w="11"/><text x="96.0735%" y="1023.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (11 samples, 0.01%)</title><rect x="95.8235%" y="997" width="0.0108%" height="15" fill="rgb(213,160,23)" fg:x="97578" fg:w="11"/><text x="96.0735%" y="1007.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (11 samples, 0.01%)</title><rect x="95.8235%" y="981" width="0.0108%" height="15" fill="rgb(251,179,49)" fg:x="97578" fg:w="11"/><text x="96.0735%" y="991.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (11 samples, 0.01%)</title><rect x="95.8235%" y="965" width="0.0108%" height="15" fill="rgb(247,198,10)" fg:x="97578" fg:w="11"/><text x="96.0735%" y="975.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (4,052 samples, 3.98%)</title><rect x="91.8974%" y="1317" width="3.9791%" height="15" fill="rgb(220,65,29)" fg:x="93580" fg:w="4052"/><text x="92.1474%" y="1327.50">wini..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (4,052 samples, 3.98%)</title><rect x="91.8974%" y="1301" width="3.9791%" height="15" fill="rgb(237,171,28)" fg:x="93580" fg:w="4052"/><text x="92.1474%" y="1311.50">wini..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (4,052 samples, 3.98%)</title><rect x="91.8974%" y="1285" width="3.9791%" height="15" fill="rgb(228,44,26)" fg:x="93580" fg:w="4052"/><text x="92.1474%" y="1295.50">wini..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (4,052 samples, 3.98%)</title><rect x="91.8974%" y="1269" width="3.9791%" height="15" fill="rgb(216,210,27)" fg:x="93580" fg:w="4052"/><text x="92.1474%" y="1279.50">wini..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (4,052 samples, 3.98%)</title><rect x="91.8974%" y="1253" width="3.9791%" height="15" fill="rgb(252,10,17)" fg:x="93580" fg:w="4052"/><text x="92.1474%" y="1263.50">bevy..</text></g><g><title>bevy_app::app::App::update (4,052 samples, 3.98%)</title><rect x="91.8974%" y="1237" width="3.9791%" height="15" fill="rgb(214,172,30)" fg:x="93580" fg:w="4052"/><text x="92.1474%" y="1247.50">bevy..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (4,052 samples, 3.98%)</title><rect x="91.8974%" y="1221" width="3.9791%" height="15" fill="rgb(253,130,48)" fg:x="93580" fg:w="4052"/><text x="92.1474%" y="1231.50">&lt;bev..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (4,052 samples, 3.98%)</title><rect x="91.8974%" y="1205" width="3.9791%" height="15" fill="rgb(226,99,43)" fg:x="93580" fg:w="4052"/><text x="92.1474%" y="1215.50">bevy..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (4,052 samples, 3.98%)</title><rect x="91.8974%" y="1189" width="3.9791%" height="15" fill="rgb(239,111,26)" fg:x="93580" fg:w="4052"/><text x="92.1474%" y="1199.50">&lt;bev..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (3,590 samples, 3.53%)</title><rect x="92.3511%" y="1173" width="3.5254%" height="15" fill="rgb(240,27,53)" fg:x="94042" fg:w="3590"/><text x="92.6011%" y="1183.50">&lt;be..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (3,590 samples, 3.53%)</title><rect x="92.3511%" y="1157" width="3.5254%" height="15" fill="rgb(254,163,12)" fg:x="94042" fg:w="3590"/><text x="92.6011%" y="1167.50">&lt;al..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (1,987 samples, 1.95%)</title><rect x="93.9252%" y="1141" width="1.9513%" height="15" fill="rgb(225,51,48)" fg:x="95645" fg:w="1987"/><text x="94.1752%" y="1151.50">b..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (1,940 samples, 1.91%)</title><rect x="93.9714%" y="1125" width="1.9051%" height="15" fill="rgb(205,19,32)" fg:x="95692" fg:w="1940"/><text x="94.2214%" y="1135.50">b..</text></g><g><title>bevy_ecs::world::World::resource_scope (1,940 samples, 1.91%)</title><rect x="93.9714%" y="1109" width="1.9051%" height="15" fill="rgb(218,119,26)" fg:x="95692" fg:w="1940"/><text x="94.2214%" y="1119.50">b..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (1,940 samples, 1.91%)</title><rect x="93.9714%" y="1093" width="1.9051%" height="15" fill="rgb(231,173,33)" fg:x="95692" fg:w="1940"/><text x="94.2214%" y="1103.50">b..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (1,925 samples, 1.89%)</title><rect x="93.9861%" y="1077" width="1.8904%" height="15" fill="rgb(241,100,29)" fg:x="95707" fg:w="1925"/><text x="94.2361%" y="1087.50">b..</text></g><g><title>wgpu::Queue::submit (1,101 samples, 1.08%)</title><rect x="94.7953%" y="1061" width="1.0812%" height="15" fill="rgb(250,194,34)" fg:x="96531" fg:w="1101"/><text x="95.0453%" y="1071.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (1,101 samples, 1.08%)</title><rect x="94.7953%" y="1045" width="1.0812%" height="15" fill="rgb(215,23,50)" fg:x="96531" fg:w="1101"/><text x="95.0453%" y="1055.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (1,101 samples, 1.08%)</title><rect x="94.7953%" y="1029" width="1.0812%" height="15" fill="rgb(206,49,37)" fg:x="96531" fg:w="1101"/><text x="95.0453%" y="1039.50"></text></g><g><title>wgpu_core::track::TrackerSet::optimize (19 samples, 0.02%)</title><rect x="95.8578%" y="1013" width="0.0187%" height="15" fill="rgb(247,39,21)" fg:x="97613" fg:w="19"/><text x="96.1078%" y="1023.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::optimize (19 samples, 0.02%)</title><rect x="95.8578%" y="997" width="0.0187%" height="15" fill="rgb(209,220,15)" fg:x="97613" fg:w="19"/><text x="96.1078%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::values_mut (11 samples, 0.01%)</title><rect x="95.8657%" y="981" width="0.0108%" height="15" fill="rgb(206,41,33)" fg:x="97621" fg:w="11"/><text x="96.1157%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter_mut (11 samples, 0.01%)</title><rect x="95.8657%" y="965" width="0.0108%" height="15" fill="rgb(221,225,45)" fg:x="97621" fg:w="11"/><text x="96.1157%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter_mut (11 samples, 0.01%)</title><rect x="95.8657%" y="949" width="0.0108%" height="15" fill="rgb(216,27,18)" fg:x="97621" fg:w="11"/><text x="96.1157%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (11 samples, 0.01%)</title><rect x="95.8657%" y="933" width="0.0108%" height="15" fill="rgb(250,193,34)" fg:x="97621" fg:w="11"/><text x="96.1157%" y="943.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (12 samples, 0.01%)</title><rect x="95.8775%" y="981" width="0.0118%" height="15" fill="rgb(227,215,20)" fg:x="97633" fg:w="12"/><text x="96.1275%" y="991.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (12 samples, 0.01%)</title><rect x="95.8775%" y="965" width="0.0118%" height="15" fill="rgb(242,211,27)" fg:x="97633" fg:w="12"/><text x="96.1275%" y="975.50"></text></g><g><title>core::ops::function::Fn::call (12 samples, 0.01%)</title><rect x="95.8775%" y="949" width="0.0118%" height="15" fill="rgb(229,190,30)" fg:x="97633" fg:w="12"/><text x="96.1275%" y="959.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (20 samples, 0.02%)</title><rect x="95.8775%" y="1189" width="0.0196%" height="15" fill="rgb(253,31,29)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1199.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (20 samples, 0.02%)</title><rect x="95.8775%" y="1173" width="0.0196%" height="15" fill="rgb(229,177,52)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1183.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (20 samples, 0.02%)</title><rect x="95.8775%" y="1157" width="0.0196%" height="15" fill="rgb(226,88,8)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1167.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (20 samples, 0.02%)</title><rect x="95.8775%" y="1141" width="0.0196%" height="15" fill="rgb(214,55,27)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1151.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (20 samples, 0.02%)</title><rect x="95.8775%" y="1125" width="0.0196%" height="15" fill="rgb(233,202,5)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1135.50"></text></g><g><title>async_executor::Executor::try_tick (20 samples, 0.02%)</title><rect x="95.8775%" y="1109" width="0.0196%" height="15" fill="rgb(251,49,30)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1119.50"></text></g><g><title>async_task::runnable::Runnable::run (20 samples, 0.02%)</title><rect x="95.8775%" y="1093" width="0.0196%" height="15" fill="rgb(235,18,52)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1103.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (20 samples, 0.02%)</title><rect x="95.8775%" y="1077" width="0.0196%" height="15" fill="rgb(250,111,51)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1087.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="95.8775%" y="1061" width="0.0196%" height="15" fill="rgb(218,13,25)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1071.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (20 samples, 0.02%)</title><rect x="95.8775%" y="1045" width="0.0196%" height="15" fill="rgb(248,96,7)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (20 samples, 0.02%)</title><rect x="95.8775%" y="1029" width="0.0196%" height="15" fill="rgb(217,31,15)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1039.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (20 samples, 0.02%)</title><rect x="95.8775%" y="1013" width="0.0196%" height="15" fill="rgb(228,59,49)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (20 samples, 0.02%)</title><rect x="95.8775%" y="997" width="0.0196%" height="15" fill="rgb(210,152,38)" fg:x="97633" fg:w="20"/><text x="96.1275%" y="1007.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::dealloc (36 samples, 0.04%)</title><rect x="95.9236%" y="677" width="0.0354%" height="15" fill="rgb(206,71,11)" fg:x="97680" fg:w="36"/><text x="96.1736%" y="687.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (18 samples, 0.02%)</title><rect x="95.9688%" y="517" width="0.0177%" height="15" fill="rgb(244,199,5)" fg:x="97726" fg:w="18"/><text x="96.2188%" y="527.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (29 samples, 0.03%)</title><rect x="95.9668%" y="613" width="0.0285%" height="15" fill="rgb(253,49,1)" fg:x="97724" fg:w="29"/><text x="96.2168%" y="623.50"></text></g><g><title>tracing::span::Span::new_with (29 samples, 0.03%)</title><rect x="95.9668%" y="597" width="0.0285%" height="15" fill="rgb(225,206,40)" fg:x="97724" fg:w="29"/><text x="96.2168%" y="607.50"></text></g><g><title>tracing::span::Span::make_with (29 samples, 0.03%)</title><rect x="95.9668%" y="581" width="0.0285%" height="15" fill="rgb(243,116,47)" fg:x="97724" fg:w="29"/><text x="96.2168%" y="591.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (29 samples, 0.03%)</title><rect x="95.9668%" y="565" width="0.0285%" height="15" fill="rgb(219,225,16)" fg:x="97724" fg:w="29"/><text x="96.2168%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (29 samples, 0.03%)</title><rect x="95.9668%" y="549" width="0.0285%" height="15" fill="rgb(233,29,47)" fg:x="97724" fg:w="29"/><text x="96.2168%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (29 samples, 0.03%)</title><rect x="95.9668%" y="533" width="0.0285%" height="15" fill="rgb(250,179,18)" fg:x="97724" fg:w="29"/><text x="96.2168%" y="543.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (87 samples, 0.09%)</title><rect x="95.9158%" y="741" width="0.0854%" height="15" fill="rgb(215,176,6)" fg:x="97672" fg:w="87"/><text x="96.1658%" y="751.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (87 samples, 0.09%)</title><rect x="95.9158%" y="725" width="0.0854%" height="15" fill="rgb(214,117,39)" fg:x="97672" fg:w="87"/><text x="96.1658%" y="735.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (86 samples, 0.08%)</title><rect x="95.9168%" y="709" width="0.0845%" height="15" fill="rgb(247,183,36)" fg:x="97673" fg:w="86"/><text x="96.1668%" y="719.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (86 samples, 0.08%)</title><rect x="95.9168%" y="693" width="0.0845%" height="15" fill="rgb(237,200,3)" fg:x="97673" fg:w="86"/><text x="96.1668%" y="703.50"></text></g><g><title>tracing::span::Span::new (35 samples, 0.03%)</title><rect x="95.9668%" y="677" width="0.0344%" height="15" fill="rgb(212,220,24)" fg:x="97724" fg:w="35"/><text x="96.2168%" y="687.50"></text></g><g><title>tracing_core::dispatcher::get_default (35 samples, 0.03%)</title><rect x="95.9668%" y="661" width="0.0344%" height="15" fill="rgb(245,216,20)" fg:x="97724" fg:w="35"/><text x="96.2168%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (35 samples, 0.03%)</title><rect x="95.9668%" y="645" width="0.0344%" height="15" fill="rgb(219,124,7)" fg:x="97724" fg:w="35"/><text x="96.2168%" y="655.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (35 samples, 0.03%)</title><rect x="95.9668%" y="629" width="0.0344%" height="15" fill="rgb(227,167,8)" fg:x="97724" fg:w="35"/><text x="96.2168%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (72 samples, 0.07%)</title><rect x="96.0601%" y="597" width="0.0707%" height="15" fill="rgb(241,37,2)" fg:x="97819" fg:w="72"/><text x="96.3101%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (93 samples, 0.09%)</title><rect x="96.0444%" y="613" width="0.0913%" height="15" fill="rgb(238,134,33)" fg:x="97803" fg:w="93"/><text x="96.2944%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (117 samples, 0.11%)</title><rect x="96.0326%" y="629" width="0.1149%" height="15" fill="rgb(248,48,27)" fg:x="97791" fg:w="117"/><text x="96.2826%" y="639.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::destroy_fence (137 samples, 0.13%)</title><rect x="96.0150%" y="725" width="0.1345%" height="15" fill="rgb(212,14,16)" fg:x="97773" fg:w="137"/><text x="96.2650%" y="735.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_fence (137 samples, 0.13%)</title><rect x="96.0150%" y="709" width="0.1345%" height="15" fill="rgb(217,205,37)" fg:x="97773" fg:w="137"/><text x="96.2650%" y="719.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::destroy_fence (137 samples, 0.13%)</title><rect x="96.0150%" y="693" width="0.1345%" height="15" fill="rgb(233,185,47)" fg:x="97773" fg:w="137"/><text x="96.2650%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (137 samples, 0.13%)</title><rect x="96.0150%" y="677" width="0.1345%" height="15" fill="rgb(244,88,8)" fg:x="97773" fg:w="137"/><text x="96.2650%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (137 samples, 0.13%)</title><rect x="96.0150%" y="661" width="0.1345%" height="15" fill="rgb(213,0,20)" fg:x="97773" fg:w="137"/><text x="96.2650%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (133 samples, 0.13%)</title><rect x="96.0189%" y="645" width="0.1306%" height="15" fill="rgb(238,159,36)" fg:x="97777" fg:w="133"/><text x="96.2689%" y="655.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::wait_idle (51 samples, 0.05%)</title><rect x="96.1495%" y="725" width="0.0501%" height="15" fill="rgb(253,173,17)" fg:x="97910" fg:w="51"/><text x="96.3995%" y="735.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences (51 samples, 0.05%)</title><rect x="96.1495%" y="709" width="0.0501%" height="15" fill="rgb(221,23,28)" fg:x="97910" fg:w="51"/><text x="96.3995%" y="719.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (51 samples, 0.05%)</title><rect x="96.1495%" y="693" width="0.0501%" height="15" fill="rgb(218,113,15)" fg:x="97910" fg:w="51"/><text x="96.3995%" y="703.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (51 samples, 0.05%)</title><rect x="96.1495%" y="677" width="0.0501%" height="15" fill="rgb(233,58,3)" fg:x="97910" fg:w="51"/><text x="96.3995%" y="687.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (49 samples, 0.05%)</title><rect x="96.1515%" y="661" width="0.0481%" height="15" fill="rgb(250,46,35)" fg:x="97912" fg:w="49"/><text x="96.4015%" y="671.50"></text></g><g><title>inplace_it::fixed_array::indirect (42 samples, 0.04%)</title><rect x="96.1583%" y="645" width="0.0412%" height="15" fill="rgb(210,169,11)" fg:x="97919" fg:w="42"/><text x="96.4083%" y="655.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (42 samples, 0.04%)</title><rect x="96.1583%" y="629" width="0.0412%" height="15" fill="rgb(246,88,19)" fg:x="97919" fg:w="42"/><text x="96.4083%" y="639.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (42 samples, 0.04%)</title><rect x="96.1583%" y="613" width="0.0412%" height="15" fill="rgb(206,81,49)" fg:x="97919" fg:w="42"/><text x="96.4083%" y="623.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences::{{closure}} (42 samples, 0.04%)</title><rect x="96.1583%" y="597" width="0.0412%" height="15" fill="rgb(232,144,18)" fg:x="97919" fg:w="42"/><text x="96.4083%" y="607.50"></text></g><g><title>ash::device::DeviceV1_0::wait_for_fences (42 samples, 0.04%)</title><rect x="96.1583%" y="581" width="0.0412%" height="15" fill="rgb(235,2,27)" fg:x="97919" fg:w="42"/><text x="96.4083%" y="591.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::wait_for_fences (42 samples, 0.04%)</title><rect x="96.1583%" y="565" width="0.0412%" height="15" fill="rgb(239,157,39)" fg:x="97919" fg:w="42"/><text x="96.4083%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (42 samples, 0.04%)</title><rect x="96.1583%" y="549" width="0.0412%" height="15" fill="rgb(220,11,17)" fg:x="97919" fg:w="42"/><text x="96.4083%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (39 samples, 0.04%)</title><rect x="96.1613%" y="533" width="0.0383%" height="15" fill="rgb(243,94,50)" fg:x="97922" fg:w="39"/><text x="96.4113%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (29 samples, 0.03%)</title><rect x="96.1711%" y="517" width="0.0285%" height="15" fill="rgb(218,22,0)" fg:x="97932" fg:w="29"/><text x="96.4211%" y="527.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (308 samples, 0.30%)</title><rect x="95.9060%" y="821" width="0.3025%" height="15" fill="rgb(249,70,21)" fg:x="97662" fg:w="308"/><text x="96.1560%" y="831.50"></text></g><g><title>wgpu::Device::poll (308 samples, 0.30%)</title><rect x="95.9060%" y="805" width="0.3025%" height="15" fill="rgb(245,111,46)" fg:x="97662" fg:w="308"/><text x="96.1560%" y="815.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (308 samples, 0.30%)</title><rect x="95.9060%" y="789" width="0.3025%" height="15" fill="rgb(244,183,12)" fg:x="97662" fg:w="308"/><text x="96.1560%" y="799.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (308 samples, 0.30%)</title><rect x="95.9060%" y="773" width="0.3025%" height="15" fill="rgb(207,117,0)" fg:x="97662" fg:w="308"/><text x="96.1560%" y="783.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (308 samples, 0.30%)</title><rect x="95.9060%" y="757" width="0.3025%" height="15" fill="rgb(206,20,43)" fg:x="97662" fg:w="308"/><text x="96.1560%" y="767.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (203 samples, 0.20%)</title><rect x="96.0091%" y="741" width="0.1993%" height="15" fill="rgb(221,104,11)" fg:x="97767" fg:w="203"/><text x="96.2591%" y="751.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (14 samples, 0.01%)</title><rect x="96.2222%" y="661" width="0.0137%" height="15" fill="rgb(254,36,50)" fg:x="97984" fg:w="14"/><text x="96.4722%" y="671.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (14 samples, 0.01%)</title><rect x="96.2222%" y="645" width="0.0137%" height="15" fill="rgb(252,17,15)" fg:x="97984" fg:w="14"/><text x="96.4722%" y="655.50"></text></g><g><title>core::hint::spin_loop (14 samples, 0.01%)</title><rect x="96.2222%" y="629" width="0.0137%" height="15" fill="rgb(219,129,43)" fg:x="97984" fg:w="14"/><text x="96.4722%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (14 samples, 0.01%)</title><rect x="96.2222%" y="613" width="0.0137%" height="15" fill="rgb(205,34,45)" fg:x="97984" fg:w="14"/><text x="96.4722%" y="623.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (29 samples, 0.03%)</title><rect x="96.2084%" y="821" width="0.0285%" height="15" fill="rgb(251,201,32)" fg:x="97970" fg:w="29"/><text x="96.4584%" y="831.50"></text></g><g><title>wgpu::Buffer::unmap (29 samples, 0.03%)</title><rect x="96.2084%" y="805" width="0.0285%" height="15" fill="rgb(205,56,0)" fg:x="97970" fg:w="29"/><text x="96.4584%" y="815.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (29 samples, 0.03%)</title><rect x="96.2084%" y="789" width="0.0285%" height="15" fill="rgb(211,193,27)" fg:x="97970" fg:w="29"/><text x="96.4584%" y="799.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (29 samples, 0.03%)</title><rect x="96.2084%" y="773" width="0.0285%" height="15" fill="rgb(231,100,42)" fg:x="97970" fg:w="29"/><text x="96.4584%" y="783.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (22 samples, 0.02%)</title><rect x="96.2153%" y="757" width="0.0216%" height="15" fill="rgb(245,85,27)" fg:x="97977" fg:w="22"/><text x="96.4653%" y="767.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (22 samples, 0.02%)</title><rect x="96.2153%" y="741" width="0.0216%" height="15" fill="rgb(241,76,24)" fg:x="97977" fg:w="22"/><text x="96.4653%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (22 samples, 0.02%)</title><rect x="96.2153%" y="725" width="0.0216%" height="15" fill="rgb(249,157,15)" fg:x="97977" fg:w="22"/><text x="96.4653%" y="735.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (22 samples, 0.02%)</title><rect x="96.2153%" y="709" width="0.0216%" height="15" fill="rgb(222,218,25)" fg:x="97977" fg:w="22"/><text x="96.4653%" y="719.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::wait_for_readers (19 samples, 0.02%)</title><rect x="96.2182%" y="693" width="0.0187%" height="15" fill="rgb(252,156,52)" fg:x="97980" fg:w="19"/><text x="96.4682%" y="703.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (17 samples, 0.02%)</title><rect x="96.2202%" y="677" width="0.0167%" height="15" fill="rgb(211,185,7)" fg:x="97982" fg:w="17"/><text x="96.4702%" y="687.50"></text></g><g><title>&lt;f32 as bevy_render::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (20 samples, 0.02%)</title><rect x="96.2457%" y="741" width="0.0196%" height="15" fill="rgb(234,108,24)" fg:x="98008" fg:w="20"/><text x="96.4957%" y="751.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (19 samples, 0.02%)</title><rect x="96.2467%" y="725" width="0.0187%" height="15" fill="rgb(227,218,2)" fg:x="98009" fg:w="19"/><text x="96.4967%" y="735.50"></text></g><g><title>[libm-2.33.so] (19 samples, 0.02%)</title><rect x="96.2467%" y="709" width="0.0187%" height="15" fill="rgb(224,0,36)" fg:x="98009" fg:w="19"/><text x="96.4967%" y="719.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (42 samples, 0.04%)</title><rect x="96.2369%" y="773" width="0.0412%" height="15" fill="rgb(233,201,10)" fg:x="97999" fg:w="42"/><text x="96.4869%" y="783.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (42 samples, 0.04%)</title><rect x="96.2369%" y="757" width="0.0412%" height="15" fill="rgb(252,209,14)" fg:x="97999" fg:w="42"/><text x="96.4869%" y="767.50"></text></g><g><title>[libm-2.33.so] (13 samples, 0.01%)</title><rect x="96.2654%" y="741" width="0.0128%" height="15" fill="rgb(205,93,49)" fg:x="98028" fg:w="13"/><text x="96.5154%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (11 samples, 0.01%)</title><rect x="96.2791%" y="597" width="0.0108%" height="15" fill="rgb(234,116,45)" fg:x="98042" fg:w="11"/><text x="96.5291%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (11 samples, 0.01%)</title><rect x="96.2791%" y="581" width="0.0108%" height="15" fill="rgb(248,89,35)" fg:x="98042" fg:w="11"/><text x="96.5291%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (11 samples, 0.01%)</title><rect x="96.2791%" y="565" width="0.0108%" height="15" fill="rgb(233,167,45)" fg:x="98042" fg:w="11"/><text x="96.5291%" y="575.50"></text></g><g><title>alloc::alloc::alloc (11 samples, 0.01%)</title><rect x="96.2791%" y="549" width="0.0108%" height="15" fill="rgb(248,228,14)" fg:x="98042" fg:w="11"/><text x="96.5291%" y="559.50"></text></g><g><title>__rdl_alloc (11 samples, 0.01%)</title><rect x="96.2791%" y="533" width="0.0108%" height="15" fill="rgb(246,91,14)" fg:x="98042" fg:w="11"/><text x="96.5291%" y="543.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (11 samples, 0.01%)</title><rect x="96.2791%" y="517" width="0.0108%" height="15" fill="rgb(227,142,5)" fg:x="98042" fg:w="11"/><text x="96.5291%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="96.2791%" y="629" width="0.0137%" height="15" fill="rgb(221,63,33)" fg:x="98042" fg:w="14"/><text x="96.5291%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (14 samples, 0.01%)</title><rect x="96.2791%" y="613" width="0.0137%" height="15" fill="rgb(233,49,0)" fg:x="98042" fg:w="14"/><text x="96.5291%" y="623.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (22 samples, 0.02%)</title><rect x="96.2791%" y="757" width="0.0216%" height="15" fill="rgb(251,115,38)" fg:x="98042" fg:w="22"/><text x="96.5291%" y="767.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (22 samples, 0.02%)</title><rect x="96.2791%" y="741" width="0.0216%" height="15" fill="rgb(231,214,32)" fg:x="98042" fg:w="22"/><text x="96.5291%" y="751.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (22 samples, 0.02%)</title><rect x="96.2791%" y="725" width="0.0216%" height="15" fill="rgb(248,73,46)" fg:x="98042" fg:w="22"/><text x="96.5291%" y="735.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (22 samples, 0.02%)</title><rect x="96.2791%" y="709" width="0.0216%" height="15" fill="rgb(237,156,4)" fg:x="98042" fg:w="22"/><text x="96.5291%" y="719.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (22 samples, 0.02%)</title><rect x="96.2791%" y="693" width="0.0216%" height="15" fill="rgb(227,132,2)" fg:x="98042" fg:w="22"/><text x="96.5291%" y="703.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (22 samples, 0.02%)</title><rect x="96.2791%" y="677" width="0.0216%" height="15" fill="rgb(248,161,9)" fg:x="98042" fg:w="22"/><text x="96.5291%" y="687.50"></text></g><g><title>alloc::slice::hack::to_vec (22 samples, 0.02%)</title><rect x="96.2791%" y="661" width="0.0216%" height="15" fill="rgb(238,77,38)" fg:x="98042" fg:w="22"/><text x="96.5291%" y="671.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (22 samples, 0.02%)</title><rect x="96.2791%" y="645" width="0.0216%" height="15" fill="rgb(222,166,40)" fg:x="98042" fg:w="22"/><text x="96.5291%" y="655.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding as core::cmp::PartialEq&gt;::ne (13 samples, 0.01%)</title><rect x="96.3007%" y="725" width="0.0128%" height="15" fill="rgb(214,168,45)" fg:x="98064" fg:w="13"/><text x="96.5507%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (16 samples, 0.02%)</title><rect x="96.3007%" y="741" width="0.0157%" height="15" fill="rgb(226,64,37)" fg:x="98064" fg:w="16"/><text x="96.5507%" y="751.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (19 samples, 0.02%)</title><rect x="96.3194%" y="677" width="0.0187%" height="15" fill="rgb(232,210,43)" fg:x="98083" fg:w="19"/><text x="96.5694%" y="687.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (19 samples, 0.02%)</title><rect x="96.3194%" y="661" width="0.0187%" height="15" fill="rgb(214,76,33)" fg:x="98083" fg:w="19"/><text x="96.5694%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.03%)</title><rect x="96.3164%" y="693" width="0.0334%" height="15" fill="rgb(210,78,5)" fg:x="98080" fg:w="34"/><text x="96.5664%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (12 samples, 0.01%)</title><rect x="96.3381%" y="677" width="0.0118%" height="15" fill="rgb(211,107,37)" fg:x="98102" fg:w="12"/><text x="96.5881%" y="687.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (15 samples, 0.01%)</title><rect x="96.3567%" y="645" width="0.0147%" height="15" fill="rgb(249,67,16)" fg:x="98121" fg:w="15"/><text x="96.6067%" y="655.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (15 samples, 0.01%)</title><rect x="96.3567%" y="629" width="0.0147%" height="15" fill="rgb(222,114,31)" fg:x="98121" fg:w="15"/><text x="96.6067%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (15 samples, 0.01%)</title><rect x="96.3567%" y="613" width="0.0147%" height="15" fill="rgb(242,118,19)" fg:x="98121" fg:w="15"/><text x="96.6067%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (13 samples, 0.01%)</title><rect x="96.3587%" y="597" width="0.0128%" height="15" fill="rgb(223,115,1)" fg:x="98123" fg:w="13"/><text x="96.6087%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (162 samples, 0.16%)</title><rect x="96.3714%" y="597" width="0.1591%" height="15" fill="rgb(241,182,54)" fg:x="98136" fg:w="162"/><text x="96.6214%" y="607.50"></text></g><g><title>__memcmp_avx2_movbe (71 samples, 0.07%)</title><rect x="96.4608%" y="581" width="0.0697%" height="15" fill="rgb(244,166,36)" fg:x="98227" fg:w="71"/><text x="96.7108%" y="591.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (181 samples, 0.18%)</title><rect x="96.3567%" y="661" width="0.1777%" height="15" fill="rgb(241,52,43)" fg:x="98121" fg:w="181"/><text x="96.6067%" y="671.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (166 samples, 0.16%)</title><rect x="96.3714%" y="645" width="0.1630%" height="15" fill="rgb(236,82,9)" fg:x="98136" fg:w="166"/><text x="96.6214%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (166 samples, 0.16%)</title><rect x="96.3714%" y="629" width="0.1630%" height="15" fill="rgb(241,119,0)" fg:x="98136" fg:w="166"/><text x="96.6214%" y="639.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (166 samples, 0.16%)</title><rect x="96.3714%" y="613" width="0.1630%" height="15" fill="rgb(221,19,22)" fg:x="98136" fg:w="166"/><text x="96.6214%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (59 samples, 0.06%)</title><rect x="96.5345%" y="613" width="0.0579%" height="15" fill="rgb(254,144,35)" fg:x="98302" fg:w="59"/><text x="96.7845%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (59 samples, 0.06%)</title><rect x="96.5345%" y="597" width="0.0579%" height="15" fill="rgb(246,132,30)" fg:x="98302" fg:w="59"/><text x="96.7845%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (59 samples, 0.06%)</title><rect x="96.5345%" y="581" width="0.0579%" height="15" fill="rgb(234,69,28)" fg:x="98302" fg:w="59"/><text x="96.7845%" y="591.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::try_set_dirty (298 samples, 0.29%)</title><rect x="96.3007%" y="757" width="0.2926%" height="15" fill="rgb(219,106,47)" fg:x="98064" fg:w="298"/><text x="96.5507%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (282 samples, 0.28%)</title><rect x="96.3164%" y="741" width="0.2769%" height="15" fill="rgb(218,79,24)" fg:x="98080" fg:w="282"/><text x="96.5664%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (282 samples, 0.28%)</title><rect x="96.3164%" y="725" width="0.2769%" height="15" fill="rgb(225,26,21)" fg:x="98080" fg:w="282"/><text x="96.5664%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (282 samples, 0.28%)</title><rect x="96.3164%" y="709" width="0.2769%" height="15" fill="rgb(217,68,49)" fg:x="98080" fg:w="282"/><text x="96.5664%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (248 samples, 0.24%)</title><rect x="96.3498%" y="693" width="0.2435%" height="15" fill="rgb(220,204,28)" fg:x="98114" fg:w="248"/><text x="96.5998%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (246 samples, 0.24%)</title><rect x="96.3518%" y="677" width="0.2416%" height="15" fill="rgb(237,208,43)" fg:x="98116" fg:w="246"/><text x="96.6018%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (60 samples, 0.06%)</title><rect x="96.5345%" y="661" width="0.0589%" height="15" fill="rgb(213,97,42)" fg:x="98302" fg:w="60"/><text x="96.7845%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (60 samples, 0.06%)</title><rect x="96.5345%" y="645" width="0.0589%" height="15" fill="rgb(238,96,52)" fg:x="98302" fg:w="60"/><text x="96.7845%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (60 samples, 0.06%)</title><rect x="96.5345%" y="629" width="0.0589%" height="15" fill="rgb(228,14,13)" fg:x="98302" fg:w="60"/><text x="96.7845%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (22 samples, 0.02%)</title><rect x="96.6022%" y="725" width="0.0216%" height="15" fill="rgb(219,123,13)" fg:x="98371" fg:w="22"/><text x="96.8522%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="96.6022%" y="709" width="0.0216%" height="15" fill="rgb(216,144,17)" fg:x="98371" fg:w="22"/><text x="96.8522%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (22 samples, 0.02%)</title><rect x="96.6022%" y="693" width="0.0216%" height="15" fill="rgb(230,228,29)" fg:x="98371" fg:w="22"/><text x="96.8522%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.02%)</title><rect x="96.6022%" y="677" width="0.0216%" height="15" fill="rgb(233,18,5)" fg:x="98371" fg:w="22"/><text x="96.8522%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (22 samples, 0.02%)</title><rect x="96.6022%" y="661" width="0.0216%" height="15" fill="rgb(233,197,12)" fg:x="98371" fg:w="22"/><text x="96.8522%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (22 samples, 0.02%)</title><rect x="96.6022%" y="645" width="0.0216%" height="15" fill="rgb(234,140,29)" fg:x="98371" fg:w="22"/><text x="96.8522%" y="655.50"></text></g><g><title>__rdl_dealloc (22 samples, 0.02%)</title><rect x="96.6022%" y="629" width="0.0216%" height="15" fill="rgb(233,113,19)" fg:x="98371" fg:w="22"/><text x="96.8522%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (22 samples, 0.02%)</title><rect x="96.6022%" y="613" width="0.0216%" height="15" fill="rgb(246,209,13)" fg:x="98371" fg:w="22"/><text x="96.8522%" y="623.50"></text></g><g><title>__GI___libc_free (22 samples, 0.02%)</title><rect x="96.6022%" y="597" width="0.0216%" height="15" fill="rgb(242,79,54)" fg:x="98371" fg:w="22"/><text x="96.8522%" y="607.50"></text></g><g><title>_int_free (16 samples, 0.02%)</title><rect x="96.6081%" y="581" width="0.0157%" height="15" fill="rgb(219,73,16)" fg:x="98377" fg:w="16"/><text x="96.8581%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (14 samples, 0.01%)</title><rect x="96.6238%" y="709" width="0.0137%" height="15" fill="rgb(224,52,10)" fg:x="98393" fg:w="14"/><text x="96.8738%" y="719.50"></text></g><g><title>ahash::operations::folded_multiply (14 samples, 0.01%)</title><rect x="96.6238%" y="693" width="0.0137%" height="15" fill="rgb(237,179,5)" fg:x="98393" fg:w="14"/><text x="96.8738%" y="703.50"></text></g><g><title>hashbrown::map::make_insert_hash (41 samples, 0.04%)</title><rect x="96.6238%" y="725" width="0.0403%" height="15" fill="rgb(231,20,6)" fg:x="98393" fg:w="41"/><text x="96.8738%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (25 samples, 0.02%)</title><rect x="96.6395%" y="709" width="0.0246%" height="15" fill="rgb(253,171,45)" fg:x="98409" fg:w="25"/><text x="96.8895%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (21 samples, 0.02%)</title><rect x="96.6435%" y="693" width="0.0206%" height="15" fill="rgb(230,75,49)" fg:x="98413" fg:w="21"/><text x="96.8935%" y="703.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (19 samples, 0.02%)</title><rect x="96.6749%" y="613" width="0.0187%" height="15" fill="rgb(216,83,46)" fg:x="98445" fg:w="19"/><text x="96.9249%" y="623.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (21 samples, 0.02%)</title><rect x="96.6749%" y="693" width="0.0206%" height="15" fill="rgb(236,56,9)" fg:x="98445" fg:w="21"/><text x="96.9249%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (21 samples, 0.02%)</title><rect x="96.6749%" y="677" width="0.0206%" height="15" fill="rgb(215,28,34)" fg:x="98445" fg:w="21"/><text x="96.9249%" y="687.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (21 samples, 0.02%)</title><rect x="96.6749%" y="661" width="0.0206%" height="15" fill="rgb(230,222,20)" fg:x="98445" fg:w="21"/><text x="96.9249%" y="671.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (21 samples, 0.02%)</title><rect x="96.6749%" y="645" width="0.0206%" height="15" fill="rgb(235,209,51)" fg:x="98445" fg:w="21"/><text x="96.9249%" y="655.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (21 samples, 0.02%)</title><rect x="96.6749%" y="629" width="0.0206%" height="15" fill="rgb(235,167,1)" fg:x="98445" fg:w="21"/><text x="96.9249%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (45 samples, 0.04%)</title><rect x="96.6641%" y="725" width="0.0442%" height="15" fill="rgb(248,220,0)" fg:x="98434" fg:w="45"/><text x="96.9141%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (45 samples, 0.04%)</title><rect x="96.6641%" y="709" width="0.0442%" height="15" fill="rgb(239,0,18)" fg:x="98434" fg:w="45"/><text x="96.9141%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (13 samples, 0.01%)</title><rect x="96.6955%" y="693" width="0.0128%" height="15" fill="rgb(229,179,11)" fg:x="98466" fg:w="13"/><text x="96.9455%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (13 samples, 0.01%)</title><rect x="96.6955%" y="677" width="0.0128%" height="15" fill="rgb(226,116,53)" fg:x="98466" fg:w="13"/><text x="96.9455%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (13 samples, 0.01%)</title><rect x="96.6955%" y="661" width="0.0128%" height="15" fill="rgb(218,1,49)" fg:x="98466" fg:w="13"/><text x="96.9455%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (818 samples, 0.80%)</title><rect x="95.9060%" y="885" width="0.8033%" height="15" fill="rgb(208,184,47)" fg:x="97662" fg:w="818"/><text x="96.1560%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (818 samples, 0.80%)</title><rect x="95.9060%" y="869" width="0.8033%" height="15" fill="rgb(238,174,3)" fg:x="97662" fg:w="818"/><text x="96.1560%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (818 samples, 0.80%)</title><rect x="95.9060%" y="853" width="0.8033%" height="15" fill="rgb(247,188,6)" fg:x="97662" fg:w="818"/><text x="96.1560%" y="863.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (818 samples, 0.80%)</title><rect x="95.9060%" y="837" width="0.8033%" height="15" fill="rgb(211,165,46)" fg:x="97662" fg:w="818"/><text x="96.1560%" y="847.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (481 samples, 0.47%)</title><rect x="96.2369%" y="821" width="0.4724%" height="15" fill="rgb(222,190,10)" fg:x="97999" fg:w="481"/><text x="96.4869%" y="831.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (481 samples, 0.47%)</title><rect x="96.2369%" y="805" width="0.4724%" height="15" fill="rgb(206,185,3)" fg:x="97999" fg:w="481"/><text x="96.4869%" y="815.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (481 samples, 0.47%)</title><rect x="96.2369%" y="789" width="0.4724%" height="15" fill="rgb(244,125,37)" fg:x="97999" fg:w="481"/><text x="96.4869%" y="799.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (438 samples, 0.43%)</title><rect x="96.2791%" y="773" width="0.4301%" height="15" fill="rgb(211,43,7)" fg:x="98042" fg:w="438"/><text x="96.5291%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (118 samples, 0.12%)</title><rect x="96.5934%" y="757" width="0.1159%" height="15" fill="rgb(250,41,42)" fg:x="98362" fg:w="118"/><text x="96.8434%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (113 samples, 0.11%)</title><rect x="96.5983%" y="741" width="0.1110%" height="15" fill="rgb(254,54,42)" fg:x="98367" fg:w="113"/><text x="96.8483%" y="751.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (837 samples, 0.82%)</title><rect x="95.8971%" y="1157" width="0.8220%" height="15" fill="rgb(213,71,43)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="1167.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (837 samples, 0.82%)</title><rect x="95.8971%" y="1141" width="0.8220%" height="15" fill="rgb(249,3,44)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="1151.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (837 samples, 0.82%)</title><rect x="95.8971%" y="1125" width="0.8220%" height="15" fill="rgb(229,80,41)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="1135.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (837 samples, 0.82%)</title><rect x="95.8971%" y="1109" width="0.8220%" height="15" fill="rgb(231,25,28)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (837 samples, 0.82%)</title><rect x="95.8971%" y="1093" width="0.8220%" height="15" fill="rgb(208,79,48)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="1103.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (837 samples, 0.82%)</title><rect x="95.8971%" y="1077" width="0.8220%" height="15" fill="rgb(207,196,38)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (837 samples, 0.82%)</title><rect x="95.8971%" y="1061" width="0.8220%" height="15" fill="rgb(228,105,49)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="1071.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (837 samples, 0.82%)</title><rect x="95.8971%" y="1045" width="0.8220%" height="15" fill="rgb(237,99,15)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="1055.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (837 samples, 0.82%)</title><rect x="95.8971%" y="1029" width="0.8220%" height="15" fill="rgb(224,207,46)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="1039.50"></text></g><g><title>async_executor::Executor::try_tick (837 samples, 0.82%)</title><rect x="95.8971%" y="1013" width="0.8220%" height="15" fill="rgb(249,117,50)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="1023.50"></text></g><g><title>async_task::runnable::Runnable::run (837 samples, 0.82%)</title><rect x="95.8971%" y="997" width="0.8220%" height="15" fill="rgb(248,17,13)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (837 samples, 0.82%)</title><rect x="95.8971%" y="981" width="0.8220%" height="15" fill="rgb(228,187,36)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (837 samples, 0.82%)</title><rect x="95.8971%" y="965" width="0.8220%" height="15" fill="rgb(234,132,20)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="975.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (837 samples, 0.82%)</title><rect x="95.8971%" y="949" width="0.8220%" height="15" fill="rgb(209,170,46)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (837 samples, 0.82%)</title><rect x="95.8971%" y="933" width="0.8220%" height="15" fill="rgb(237,23,19)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="943.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (837 samples, 0.82%)</title><rect x="95.8971%" y="917" width="0.8220%" height="15" fill="rgb(227,21,26)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="927.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (837 samples, 0.82%)</title><rect x="95.8971%" y="901" width="0.8220%" height="15" fill="rgb(222,220,48)" fg:x="97653" fg:w="837"/><text x="96.1471%" y="911.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.02%)</title><rect x="96.7397%" y="757" width="0.0157%" height="15" fill="rgb(214,9,16)" fg:x="98511" fg:w="16"/><text x="96.9897%" y="767.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (58 samples, 0.06%)</title><rect x="96.7387%" y="773" width="0.0570%" height="15" fill="rgb(209,73,30)" fg:x="98510" fg:w="58"/><text x="96.9887%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (41 samples, 0.04%)</title><rect x="96.7554%" y="757" width="0.0403%" height="15" fill="rgb(207,20,33)" fg:x="98527" fg:w="41"/><text x="97.0054%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.02%)</title><rect x="96.7780%" y="741" width="0.0177%" height="15" fill="rgb(219,153,12)" fg:x="98550" fg:w="18"/><text x="97.0280%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.02%)</title><rect x="97.0363%" y="645" width="0.0187%" height="15" fill="rgb(235,97,25)" fg:x="98813" fg:w="19"/><text x="97.2863%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (49 samples, 0.05%)</title><rect x="97.0098%" y="693" width="0.0481%" height="15" fill="rgb(244,30,34)" fg:x="98786" fg:w="49"/><text x="97.2598%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (36 samples, 0.04%)</title><rect x="97.0225%" y="677" width="0.0354%" height="15" fill="rgb(214,106,45)" fg:x="98799" fg:w="36"/><text x="97.2725%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (27 samples, 0.03%)</title><rect x="97.0314%" y="661" width="0.0265%" height="15" fill="rgb(226,41,9)" fg:x="98808" fg:w="27"/><text x="97.2814%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (84 samples, 0.08%)</title><rect x="96.9773%" y="709" width="0.0825%" height="15" fill="rgb(253,139,29)" fg:x="98753" fg:w="84"/><text x="97.2273%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (160 samples, 0.16%)</title><rect x="96.9047%" y="741" width="0.1571%" height="15" fill="rgb(213,205,39)" fg:x="98679" fg:w="160"/><text x="97.1547%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (128 samples, 0.13%)</title><rect x="96.9361%" y="725" width="0.1257%" height="15" fill="rgb(209,27,10)" fg:x="98711" fg:w="128"/><text x="97.1861%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (226 samples, 0.22%)</title><rect x="96.8438%" y="757" width="0.2219%" height="15" fill="rgb(249,142,16)" fg:x="98617" fg:w="226"/><text x="97.0938%" y="767.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (361 samples, 0.35%)</title><rect x="96.7191%" y="1141" width="0.3545%" height="15" fill="rgb(242,65,12)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="1151.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (361 samples, 0.35%)</title><rect x="96.7191%" y="1125" width="0.3545%" height="15" fill="rgb(232,48,10)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="1135.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (361 samples, 0.35%)</title><rect x="96.7191%" y="1109" width="0.3545%" height="15" fill="rgb(253,67,19)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (361 samples, 0.35%)</title><rect x="96.7191%" y="1093" width="0.3545%" height="15" fill="rgb(227,93,29)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (361 samples, 0.35%)</title><rect x="96.7191%" y="1077" width="0.3545%" height="15" fill="rgb(226,189,53)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="1087.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (361 samples, 0.35%)</title><rect x="96.7191%" y="1061" width="0.3545%" height="15" fill="rgb(223,224,1)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (361 samples, 0.35%)</title><rect x="96.7191%" y="1045" width="0.3545%" height="15" fill="rgb(221,84,32)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (361 samples, 0.35%)</title><rect x="96.7191%" y="1029" width="0.3545%" height="15" fill="rgb(214,189,28)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (361 samples, 0.35%)</title><rect x="96.7191%" y="1013" width="0.3545%" height="15" fill="rgb(234,7,52)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (361 samples, 0.35%)</title><rect x="96.7191%" y="997" width="0.3545%" height="15" fill="rgb(249,73,31)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="1007.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (361 samples, 0.35%)</title><rect x="96.7191%" y="981" width="0.3545%" height="15" fill="rgb(253,153,41)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="991.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (361 samples, 0.35%)</title><rect x="96.7191%" y="965" width="0.3545%" height="15" fill="rgb(249,52,34)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="975.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (361 samples, 0.35%)</title><rect x="96.7191%" y="949" width="0.3545%" height="15" fill="rgb(236,177,47)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="959.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (361 samples, 0.35%)</title><rect x="96.7191%" y="933" width="0.3545%" height="15" fill="rgb(252,185,45)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="943.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (361 samples, 0.35%)</title><rect x="96.7191%" y="917" width="0.3545%" height="15" fill="rgb(251,15,30)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="927.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (361 samples, 0.35%)</title><rect x="96.7191%" y="901" width="0.3545%" height="15" fill="rgb(233,31,4)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="911.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (361 samples, 0.35%)</title><rect x="96.7191%" y="885" width="0.3545%" height="15" fill="rgb(254,44,24)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (361 samples, 0.35%)</title><rect x="96.7191%" y="869" width="0.3545%" height="15" fill="rgb(218,54,1)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (361 samples, 0.35%)</title><rect x="96.7191%" y="853" width="0.3545%" height="15" fill="rgb(243,209,39)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (361 samples, 0.35%)</title><rect x="96.7191%" y="837" width="0.3545%" height="15" fill="rgb(206,75,33)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (361 samples, 0.35%)</title><rect x="96.7191%" y="821" width="0.3545%" height="15" fill="rgb(223,108,18)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (361 samples, 0.35%)</title><rect x="96.7191%" y="805" width="0.3545%" height="15" fill="rgb(244,89,31)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (361 samples, 0.35%)</title><rect x="96.7191%" y="789" width="0.3545%" height="15" fill="rgb(222,167,27)" fg:x="98490" fg:w="361"/><text x="96.9691%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (283 samples, 0.28%)</title><rect x="96.7957%" y="773" width="0.2779%" height="15" fill="rgb(247,41,16)" fg:x="98568" fg:w="283"/><text x="97.0457%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (16 samples, 0.02%)</title><rect x="97.0922%" y="917" width="0.0157%" height="15" fill="rgb(233,168,40)" fg:x="98870" fg:w="16"/><text x="97.3422%" y="927.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (16 samples, 0.02%)</title><rect x="97.0922%" y="901" width="0.0157%" height="15" fill="rgb(205,211,8)" fg:x="98870" fg:w="16"/><text x="97.3422%" y="911.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (16 samples, 0.02%)</title><rect x="97.0922%" y="885" width="0.0157%" height="15" fill="rgb(238,105,11)" fg:x="98870" fg:w="16"/><text x="97.3422%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (16 samples, 0.02%)</title><rect x="97.0922%" y="869" width="0.0157%" height="15" fill="rgb(223,142,52)" fg:x="98870" fg:w="16"/><text x="97.3422%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (16 samples, 0.02%)</title><rect x="97.0922%" y="853" width="0.0157%" height="15" fill="rgb(238,51,33)" fg:x="98870" fg:w="16"/><text x="97.3422%" y="863.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (24 samples, 0.02%)</title><rect x="97.1080%" y="917" width="0.0236%" height="15" fill="rgb(231,188,43)" fg:x="98886" fg:w="24"/><text x="97.3580%" y="927.50"></text></g><g><title>core::fmt::Write::write_fmt (12 samples, 0.01%)</title><rect x="97.1423%" y="629" width="0.0118%" height="15" fill="rgb(216,92,17)" fg:x="98921" fg:w="12"/><text x="97.3923%" y="639.50"></text></g><g><title>core::fmt::write (11 samples, 0.01%)</title><rect x="97.1433%" y="613" width="0.0108%" height="15" fill="rgb(228,2,40)" fg:x="98922" fg:w="11"/><text x="97.3933%" y="623.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (25 samples, 0.02%)</title><rect x="97.1364%" y="725" width="0.0246%" height="15" fill="rgb(226,73,15)" fg:x="98915" fg:w="25"/><text x="97.3864%" y="735.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (25 samples, 0.02%)</title><rect x="97.1364%" y="709" width="0.0246%" height="15" fill="rgb(227,66,46)" fg:x="98915" fg:w="25"/><text x="97.3864%" y="719.50"></text></g><g><title>tracing_core::span::Attributes::record (25 samples, 0.02%)</title><rect x="97.1364%" y="693" width="0.0246%" height="15" fill="rgb(209,71,6)" fg:x="98915" fg:w="25"/><text x="97.3864%" y="703.50"></text></g><g><title>tracing_core::field::ValueSet::record (25 samples, 0.02%)</title><rect x="97.1364%" y="677" width="0.0246%" height="15" fill="rgb(246,100,25)" fg:x="98915" fg:w="25"/><text x="97.3864%" y="687.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (25 samples, 0.02%)</title><rect x="97.1364%" y="661" width="0.0246%" height="15" fill="rgb(248,185,27)" fg:x="98915" fg:w="25"/><text x="97.3864%" y="671.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (21 samples, 0.02%)</title><rect x="97.1404%" y="645" width="0.0206%" height="15" fill="rgb(225,118,47)" fg:x="98919" fg:w="21"/><text x="97.3904%" y="655.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (26 samples, 0.03%)</title><rect x="97.1364%" y="741" width="0.0255%" height="15" fill="rgb(220,185,44)" fg:x="98915" fg:w="26"/><text x="97.3864%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (50 samples, 0.05%)</title><rect x="97.1335%" y="757" width="0.0491%" height="15" fill="rgb(227,95,24)" fg:x="98912" fg:w="50"/><text x="97.3835%" y="767.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (129 samples, 0.13%)</title><rect x="97.0736%" y="1077" width="0.1267%" height="15" fill="rgb(252,84,24)" fg:x="98851" fg:w="129"/><text x="97.3236%" y="1087.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (125 samples, 0.12%)</title><rect x="97.0775%" y="1061" width="0.1228%" height="15" fill="rgb(240,34,44)" fg:x="98855" fg:w="125"/><text x="97.3275%" y="1071.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (125 samples, 0.12%)</title><rect x="97.0775%" y="1045" width="0.1228%" height="15" fill="rgb(209,72,54)" fg:x="98855" fg:w="125"/><text x="97.3275%" y="1055.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (125 samples, 0.12%)</title><rect x="97.0775%" y="1029" width="0.1228%" height="15" fill="rgb(226,19,45)" fg:x="98855" fg:w="125"/><text x="97.3275%" y="1039.50"></text></g><g><title>wgpu::Device::create_buffer (115 samples, 0.11%)</title><rect x="97.0873%" y="1013" width="0.1129%" height="15" fill="rgb(246,7,45)" fg:x="98865" fg:w="115"/><text x="97.3373%" y="1023.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (115 samples, 0.11%)</title><rect x="97.0873%" y="997" width="0.1129%" height="15" fill="rgb(225,45,2)" fg:x="98865" fg:w="115"/><text x="97.3373%" y="1007.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (115 samples, 0.11%)</title><rect x="97.0873%" y="981" width="0.1129%" height="15" fill="rgb(221,80,29)" fg:x="98865" fg:w="115"/><text x="97.3373%" y="991.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (115 samples, 0.11%)</title><rect x="97.0873%" y="965" width="0.1129%" height="15" fill="rgb(228,11,19)" fg:x="98865" fg:w="115"/><text x="97.3373%" y="975.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (114 samples, 0.11%)</title><rect x="97.0883%" y="949" width="0.1120%" height="15" fill="rgb(243,17,21)" fg:x="98866" fg:w="114"/><text x="97.3383%" y="959.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (114 samples, 0.11%)</title><rect x="97.0883%" y="933" width="0.1120%" height="15" fill="rgb(243,88,8)" fg:x="98866" fg:w="114"/><text x="97.3383%" y="943.50"></text></g><g><title>tracing::span::Span::new (68 samples, 0.07%)</title><rect x="97.1335%" y="917" width="0.0668%" height="15" fill="rgb(214,17,9)" fg:x="98912" fg:w="68"/><text x="97.3835%" y="927.50"></text></g><g><title>tracing_core::dispatcher::get_default (68 samples, 0.07%)</title><rect x="97.1335%" y="901" width="0.0668%" height="15" fill="rgb(232,169,15)" fg:x="98912" fg:w="68"/><text x="97.3835%" y="911.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (68 samples, 0.07%)</title><rect x="97.1335%" y="885" width="0.0668%" height="15" fill="rgb(232,86,53)" fg:x="98912" fg:w="68"/><text x="97.3835%" y="895.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (68 samples, 0.07%)</title><rect x="97.1335%" y="869" width="0.0668%" height="15" fill="rgb(222,100,4)" fg:x="98912" fg:w="68"/><text x="97.3835%" y="879.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (68 samples, 0.07%)</title><rect x="97.1335%" y="853" width="0.0668%" height="15" fill="rgb(253,151,38)" fg:x="98912" fg:w="68"/><text x="97.3835%" y="863.50"></text></g><g><title>tracing::span::Span::new_with (68 samples, 0.07%)</title><rect x="97.1335%" y="837" width="0.0668%" height="15" fill="rgb(238,215,29)" fg:x="98912" fg:w="68"/><text x="97.3835%" y="847.50"></text></g><g><title>tracing::span::Span::make_with (68 samples, 0.07%)</title><rect x="97.1335%" y="821" width="0.0668%" height="15" fill="rgb(205,128,53)" fg:x="98912" fg:w="68"/><text x="97.3835%" y="831.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (68 samples, 0.07%)</title><rect x="97.1335%" y="805" width="0.0668%" height="15" fill="rgb(248,183,14)" fg:x="98912" fg:w="68"/><text x="97.3835%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (68 samples, 0.07%)</title><rect x="97.1335%" y="789" width="0.0668%" height="15" fill="rgb(244,172,35)" fg:x="98912" fg:w="68"/><text x="97.3835%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (68 samples, 0.07%)</title><rect x="97.1335%" y="773" width="0.0668%" height="15" fill="rgb(234,93,19)" fg:x="98912" fg:w="68"/><text x="97.3835%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (18 samples, 0.02%)</title><rect x="97.1826%" y="757" width="0.0177%" height="15" fill="rgb(227,109,7)" fg:x="98962" fg:w="18"/><text x="97.4326%" y="767.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (18 samples, 0.02%)</title><rect x="97.1826%" y="741" width="0.0177%" height="15" fill="rgb(233,136,54)" fg:x="98962" fg:w="18"/><text x="97.4326%" y="751.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create_with (15 samples, 0.01%)</title><rect x="97.1855%" y="725" width="0.0147%" height="15" fill="rgb(233,19,40)" fg:x="98965" fg:w="15"/><text x="97.4355%" y="735.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create (11 samples, 0.01%)</title><rect x="97.1895%" y="709" width="0.0108%" height="15" fill="rgb(247,41,18)" fg:x="98969" fg:w="11"/><text x="97.4395%" y="719.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (14 samples, 0.01%)</title><rect x="97.2003%" y="1077" width="0.0137%" height="15" fill="rgb(220,34,34)" fg:x="98980" fg:w="14"/><text x="97.4503%" y="1087.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (14 samples, 0.01%)</title><rect x="97.2003%" y="1061" width="0.0137%" height="15" fill="rgb(222,135,32)" fg:x="98980" fg:w="14"/><text x="97.4503%" y="1071.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (14 samples, 0.01%)</title><rect x="97.2003%" y="1045" width="0.0137%" height="15" fill="rgb(214,80,19)" fg:x="98980" fg:w="14"/><text x="97.4503%" y="1055.50"></text></g><g><title>wgpu::Device::create_command_encoder (14 samples, 0.01%)</title><rect x="97.2003%" y="1029" width="0.0137%" height="15" fill="rgb(234,54,46)" fg:x="98980" fg:w="14"/><text x="97.4503%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (14 samples, 0.01%)</title><rect x="97.2003%" y="1013" width="0.0137%" height="15" fill="rgb(251,48,23)" fg:x="98980" fg:w="14"/><text x="97.4503%" y="1023.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (14 samples, 0.01%)</title><rect x="97.2003%" y="997" width="0.0137%" height="15" fill="rgb(254,109,52)" fg:x="98980" fg:w="14"/><text x="97.4503%" y="1007.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (13 samples, 0.01%)</title><rect x="97.2012%" y="981" width="0.0128%" height="15" fill="rgb(240,186,19)" fg:x="98981" fg:w="13"/><text x="97.4512%" y="991.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (13 samples, 0.01%)</title><rect x="97.2012%" y="965" width="0.0128%" height="15" fill="rgb(246,187,17)" fg:x="98981" fg:w="13"/><text x="97.4512%" y="975.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (13 samples, 0.01%)</title><rect x="97.2012%" y="949" width="0.0128%" height="15" fill="rgb(212,21,5)" fg:x="98981" fg:w="13"/><text x="97.4512%" y="959.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (13 samples, 0.01%)</title><rect x="97.2012%" y="933" width="0.0128%" height="15" fill="rgb(225,185,18)" fg:x="98981" fg:w="13"/><text x="97.4512%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.01%)</title><rect x="97.2012%" y="917" width="0.0128%" height="15" fill="rgb(245,114,17)" fg:x="98981" fg:w="13"/><text x="97.4512%" y="927.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::allocate (20 samples, 0.02%)</title><rect x="97.2140%" y="965" width="0.0196%" height="15" fill="rgb(223,164,24)" fg:x="98994" fg:w="20"/><text x="97.4640%" y="975.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::get_or_create (25 samples, 0.02%)</title><rect x="97.2140%" y="1045" width="0.0246%" height="15" fill="rgb(211,228,3)" fg:x="98994" fg:w="25"/><text x="97.4640%" y="1055.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (25 samples, 0.02%)</title><rect x="97.2140%" y="1029" width="0.0246%" height="15" fill="rgb(223,16,38)" fg:x="98994" fg:w="25"/><text x="97.4640%" y="1039.50"></text></g><g><title>wgpu::Device::create_command_encoder (25 samples, 0.02%)</title><rect x="97.2140%" y="1013" width="0.0246%" height="15" fill="rgb(207,31,54)" fg:x="98994" fg:w="25"/><text x="97.4640%" y="1023.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (25 samples, 0.02%)</title><rect x="97.2140%" y="997" width="0.0246%" height="15" fill="rgb(220,39,11)" fg:x="98994" fg:w="25"/><text x="97.4640%" y="1007.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (25 samples, 0.02%)</title><rect x="97.2140%" y="981" width="0.0246%" height="15" fill="rgb(235,185,0)" fg:x="98994" fg:w="25"/><text x="97.4640%" y="991.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (240 samples, 0.24%)</title><rect x="97.2140%" y="1077" width="0.2357%" height="15" fill="rgb(249,39,18)" fg:x="98994" fg:w="240"/><text x="97.4640%" y="1087.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (240 samples, 0.24%)</title><rect x="97.2140%" y="1061" width="0.2357%" height="15" fill="rgb(240,110,33)" fg:x="98994" fg:w="240"/><text x="97.4640%" y="1071.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (215 samples, 0.21%)</title><rect x="97.2386%" y="1045" width="0.2111%" height="15" fill="rgb(210,92,42)" fg:x="99019" fg:w="215"/><text x="97.4886%" y="1055.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (215 samples, 0.21%)</title><rect x="97.2386%" y="1029" width="0.2111%" height="15" fill="rgb(218,215,28)" fg:x="99019" fg:w="215"/><text x="97.4886%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (215 samples, 0.21%)</title><rect x="97.2386%" y="1013" width="0.2111%" height="15" fill="rgb(238,215,36)" fg:x="99019" fg:w="215"/><text x="97.4886%" y="1023.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (215 samples, 0.21%)</title><rect x="97.2386%" y="997" width="0.2111%" height="15" fill="rgb(220,31,10)" fg:x="99019" fg:w="215"/><text x="97.4886%" y="1007.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (215 samples, 0.21%)</title><rect x="97.2386%" y="981" width="0.2111%" height="15" fill="rgb(212,93,14)" fg:x="99019" fg:w="215"/><text x="97.4886%" y="991.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (215 samples, 0.21%)</title><rect x="97.2386%" y="965" width="0.2111%" height="15" fill="rgb(254,207,2)" fg:x="99019" fg:w="215"/><text x="97.4886%" y="975.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (215 samples, 0.21%)</title><rect x="97.2386%" y="949" width="0.2111%" height="15" fill="rgb(205,57,44)" fg:x="99019" fg:w="215"/><text x="97.4886%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (215 samples, 0.21%)</title><rect x="97.2386%" y="933" width="0.2111%" height="15" fill="rgb(226,151,19)" fg:x="99019" fg:w="215"/><text x="97.4886%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (184 samples, 0.18%)</title><rect x="97.2690%" y="917" width="0.1807%" height="15" fill="rgb(230,72,30)" fg:x="99050" fg:w="184"/><text x="97.5190%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (101 samples, 0.10%)</title><rect x="97.3505%" y="901" width="0.0992%" height="15" fill="rgb(244,0,8)" fg:x="99133" fg:w="101"/><text x="97.6005%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (44 samples, 0.04%)</title><rect x="97.4065%" y="885" width="0.0432%" height="15" fill="rgb(230,192,6)" fg:x="99190" fg:w="44"/><text x="97.6565%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (22 samples, 0.02%)</title><rect x="97.4281%" y="869" width="0.0216%" height="15" fill="rgb(233,207,13)" fg:x="99212" fg:w="22"/><text x="97.6781%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (22 samples, 0.02%)</title><rect x="97.4281%" y="853" width="0.0216%" height="15" fill="rgb(206,227,7)" fg:x="99212" fg:w="22"/><text x="97.6781%" y="863.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (144 samples, 0.14%)</title><rect x="97.4497%" y="1029" width="0.1414%" height="15" fill="rgb(213,217,25)" fg:x="99234" fg:w="144"/><text x="97.6997%" y="1039.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (144 samples, 0.14%)</title><rect x="97.4497%" y="1013" width="0.1414%" height="15" fill="rgb(249,75,4)" fg:x="99234" fg:w="144"/><text x="97.6997%" y="1023.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (144 samples, 0.14%)</title><rect x="97.4497%" y="997" width="0.1414%" height="15" fill="rgb(225,114,18)" fg:x="99234" fg:w="144"/><text x="97.6997%" y="1007.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (144 samples, 0.14%)</title><rect x="97.4497%" y="981" width="0.1414%" height="15" fill="rgb(211,162,40)" fg:x="99234" fg:w="144"/><text x="97.6997%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (144 samples, 0.14%)</title><rect x="97.4497%" y="965" width="0.1414%" height="15" fill="rgb(206,49,29)" fg:x="99234" fg:w="144"/><text x="97.6997%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (124 samples, 0.12%)</title><rect x="97.4693%" y="949" width="0.1218%" height="15" fill="rgb(244,8,6)" fg:x="99254" fg:w="124"/><text x="97.7193%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (76 samples, 0.07%)</title><rect x="97.5165%" y="933" width="0.0746%" height="15" fill="rgb(231,194,28)" fg:x="99302" fg:w="76"/><text x="97.7665%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (45 samples, 0.04%)</title><rect x="97.5469%" y="917" width="0.0442%" height="15" fill="rgb(210,69,5)" fg:x="99333" fg:w="45"/><text x="97.7969%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.02%)</title><rect x="97.5754%" y="901" width="0.0157%" height="15" fill="rgb(216,186,12)" fg:x="99362" fg:w="16"/><text x="97.8254%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.01%)</title><rect x="97.5793%" y="885" width="0.0118%" height="15" fill="rgb(238,61,15)" fg:x="99366" fg:w="12"/><text x="97.8293%" y="895.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::merge (11 samples, 0.01%)</title><rect x="97.5960%" y="997" width="0.0108%" height="15" fill="rgb(226,104,1)" fg:x="99383" fg:w="11"/><text x="97.8460%" y="1007.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (23 samples, 0.02%)</title><rect x="97.5911%" y="1029" width="0.0226%" height="15" fill="rgb(229,128,15)" fg:x="99378" fg:w="23"/><text x="97.8411%" y="1039.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (21 samples, 0.02%)</title><rect x="97.5931%" y="1013" width="0.0206%" height="15" fill="rgb(247,110,15)" fg:x="99380" fg:w="21"/><text x="97.8431%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (11 samples, 0.01%)</title><rect x="97.6235%" y="933" width="0.0108%" height="15" fill="rgb(210,74,48)" fg:x="99411" fg:w="11"/><text x="97.8735%" y="943.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (11 samples, 0.01%)</title><rect x="97.6235%" y="917" width="0.0108%" height="15" fill="rgb(246,121,10)" fg:x="99411" fg:w="11"/><text x="97.8735%" y="927.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (11 samples, 0.01%)</title><rect x="97.6235%" y="901" width="0.0108%" height="15" fill="rgb(214,156,37)" fg:x="99411" fg:w="11"/><text x="97.8735%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (11 samples, 0.01%)</title><rect x="97.6235%" y="885" width="0.0108%" height="15" fill="rgb(214,210,34)" fg:x="99411" fg:w="11"/><text x="97.8735%" y="895.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (11 samples, 0.01%)</title><rect x="97.6235%" y="869" width="0.0108%" height="15" fill="rgb(237,93,35)" fg:x="99411" fg:w="11"/><text x="97.8735%" y="879.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (13 samples, 0.01%)</title><rect x="97.6441%" y="773" width="0.0128%" height="15" fill="rgb(206,36,8)" fg:x="99432" fg:w="13"/><text x="97.8941%" y="783.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (47 samples, 0.05%)</title><rect x="97.6166%" y="949" width="0.0462%" height="15" fill="rgb(208,151,12)" fg:x="99404" fg:w="47"/><text x="97.8666%" y="959.50"></text></g><g><title>tracing::span::Span::new (19 samples, 0.02%)</title><rect x="97.6441%" y="933" width="0.0187%" height="15" fill="rgb(225,133,52)" fg:x="99432" fg:w="19"/><text x="97.8941%" y="943.50"></text></g><g><title>tracing_core::dispatcher::get_default (19 samples, 0.02%)</title><rect x="97.6441%" y="917" width="0.0187%" height="15" fill="rgb(231,71,53)" fg:x="99432" fg:w="19"/><text x="97.8941%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (19 samples, 0.02%)</title><rect x="97.6441%" y="901" width="0.0187%" height="15" fill="rgb(243,76,21)" fg:x="99432" fg:w="19"/><text x="97.8941%" y="911.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (19 samples, 0.02%)</title><rect x="97.6441%" y="885" width="0.0187%" height="15" fill="rgb(252,144,3)" fg:x="99432" fg:w="19"/><text x="97.8941%" y="895.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (19 samples, 0.02%)</title><rect x="97.6441%" y="869" width="0.0187%" height="15" fill="rgb(231,199,10)" fg:x="99432" fg:w="19"/><text x="97.8941%" y="879.50"></text></g><g><title>tracing::span::Span::new_with (19 samples, 0.02%)</title><rect x="97.6441%" y="853" width="0.0187%" height="15" fill="rgb(215,18,11)" fg:x="99432" fg:w="19"/><text x="97.8941%" y="863.50"></text></g><g><title>tracing::span::Span::make_with (19 samples, 0.02%)</title><rect x="97.6441%" y="837" width="0.0187%" height="15" fill="rgb(241,65,24)" fg:x="99432" fg:w="19"/><text x="97.8941%" y="847.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (19 samples, 0.02%)</title><rect x="97.6441%" y="821" width="0.0187%" height="15" fill="rgb(251,192,38)" fg:x="99432" fg:w="19"/><text x="97.8941%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (19 samples, 0.02%)</title><rect x="97.6441%" y="805" width="0.0187%" height="15" fill="rgb(205,9,35)" fg:x="99432" fg:w="19"/><text x="97.8941%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (19 samples, 0.02%)</title><rect x="97.6441%" y="789" width="0.0187%" height="15" fill="rgb(229,225,49)" fg:x="99432" fg:w="19"/><text x="97.8941%" y="799.50"></text></g><g><title>core::fmt::Write::write_fmt (38 samples, 0.04%)</title><rect x="97.6628%" y="661" width="0.0373%" height="15" fill="rgb(207,125,39)" fg:x="99451" fg:w="38"/><text x="97.9128%" y="671.50"></text></g><g><title>core::fmt::write (38 samples, 0.04%)</title><rect x="97.6628%" y="645" width="0.0373%" height="15" fill="rgb(222,78,19)" fg:x="99451" fg:w="38"/><text x="97.9128%" y="655.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (30 samples, 0.03%)</title><rect x="97.6707%" y="629" width="0.0295%" height="15" fill="rgb(248,207,20)" fg:x="99459" fg:w="30"/><text x="97.9207%" y="639.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (26 samples, 0.03%)</title><rect x="97.6746%" y="613" width="0.0255%" height="15" fill="rgb(205,103,49)" fg:x="99463" fg:w="26"/><text x="97.9246%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (25 samples, 0.02%)</title><rect x="97.6756%" y="597" width="0.0246%" height="15" fill="rgb(216,42,28)" fg:x="99464" fg:w="25"/><text x="97.9256%" y="607.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (24 samples, 0.02%)</title><rect x="97.6765%" y="581" width="0.0236%" height="15" fill="rgb(213,205,53)" fg:x="99465" fg:w="24"/><text x="97.9265%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (17 samples, 0.02%)</title><rect x="97.6834%" y="565" width="0.0167%" height="15" fill="rgb(239,140,53)" fg:x="99472" fg:w="17"/><text x="97.9334%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (17 samples, 0.02%)</title><rect x="97.6834%" y="549" width="0.0167%" height="15" fill="rgb(248,95,9)" fg:x="99472" fg:w="17"/><text x="97.9334%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.02%)</title><rect x="97.6844%" y="533" width="0.0157%" height="15" fill="rgb(254,58,47)" fg:x="99473" fg:w="16"/><text x="97.9344%" y="543.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 0.02%)</title><rect x="97.6844%" y="517" width="0.0157%" height="15" fill="rgb(234,227,14)" fg:x="99473" fg:w="16"/><text x="97.9344%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.02%)</title><rect x="97.6844%" y="501" width="0.0157%" height="15" fill="rgb(205,192,45)" fg:x="99473" fg:w="16"/><text x="97.9344%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.02%)</title><rect x="97.6844%" y="485" width="0.0157%" height="15" fill="rgb(253,187,31)" fg:x="99473" fg:w="16"/><text x="97.9344%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.01%)</title><rect x="97.6854%" y="469" width="0.0147%" height="15" fill="rgb(222,6,32)" fg:x="99474" fg:w="15"/><text x="97.9354%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (11 samples, 0.01%)</title><rect x="97.6893%" y="453" width="0.0108%" height="15" fill="rgb(249,190,19)" fg:x="99478" fg:w="11"/><text x="97.9393%" y="463.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (42 samples, 0.04%)</title><rect x="97.6628%" y="773" width="0.0412%" height="15" fill="rgb(251,28,20)" fg:x="99451" fg:w="42"/><text x="97.9128%" y="783.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (42 samples, 0.04%)</title><rect x="97.6628%" y="757" width="0.0412%" height="15" fill="rgb(210,223,40)" fg:x="99451" fg:w="42"/><text x="97.9128%" y="767.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (42 samples, 0.04%)</title><rect x="97.6628%" y="741" width="0.0412%" height="15" fill="rgb(216,137,22)" fg:x="99451" fg:w="42"/><text x="97.9128%" y="751.50"></text></g><g><title>tracing_core::span::Attributes::record (42 samples, 0.04%)</title><rect x="97.6628%" y="725" width="0.0412%" height="15" fill="rgb(247,39,34)" fg:x="99451" fg:w="42"/><text x="97.9128%" y="735.50"></text></g><g><title>tracing_core::field::ValueSet::record (42 samples, 0.04%)</title><rect x="97.6628%" y="709" width="0.0412%" height="15" fill="rgb(239,43,50)" fg:x="99451" fg:w="42"/><text x="97.9128%" y="719.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (42 samples, 0.04%)</title><rect x="97.6628%" y="693" width="0.0412%" height="15" fill="rgb(241,212,9)" fg:x="99451" fg:w="42"/><text x="97.9128%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (42 samples, 0.04%)</title><rect x="97.6628%" y="677" width="0.0412%" height="15" fill="rgb(205,8,2)" fg:x="99451" fg:w="42"/><text x="97.9128%" y="687.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (98 samples, 0.10%)</title><rect x="97.6137%" y="1013" width="0.0962%" height="15" fill="rgb(217,173,54)" fg:x="99401" fg:w="98"/><text x="97.8637%" y="1023.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (98 samples, 0.10%)</title><rect x="97.6137%" y="997" width="0.0962%" height="15" fill="rgb(208,149,52)" fg:x="99401" fg:w="98"/><text x="97.8637%" y="1007.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (98 samples, 0.10%)</title><rect x="97.6137%" y="981" width="0.0962%" height="15" fill="rgb(239,99,40)" fg:x="99401" fg:w="98"/><text x="97.8637%" y="991.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (98 samples, 0.10%)</title><rect x="97.6137%" y="965" width="0.0962%" height="15" fill="rgb(233,214,26)" fg:x="99401" fg:w="98"/><text x="97.8637%" y="975.50"></text></g><g><title>tracing::span::Span::new (48 samples, 0.05%)</title><rect x="97.6628%" y="949" width="0.0471%" height="15" fill="rgb(231,225,37)" fg:x="99451" fg:w="48"/><text x="97.9128%" y="959.50"></text></g><g><title>tracing_core::dispatcher::get_default (48 samples, 0.05%)</title><rect x="97.6628%" y="933" width="0.0471%" height="15" fill="rgb(252,55,35)" fg:x="99451" fg:w="48"/><text x="97.9128%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (48 samples, 0.05%)</title><rect x="97.6628%" y="917" width="0.0471%" height="15" fill="rgb(239,43,18)" fg:x="99451" fg:w="48"/><text x="97.9128%" y="927.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (48 samples, 0.05%)</title><rect x="97.6628%" y="901" width="0.0471%" height="15" fill="rgb(251,125,49)" fg:x="99451" fg:w="48"/><text x="97.9128%" y="911.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (48 samples, 0.05%)</title><rect x="97.6628%" y="885" width="0.0471%" height="15" fill="rgb(212,83,54)" fg:x="99451" fg:w="48"/><text x="97.9128%" y="895.50"></text></g><g><title>tracing::span::Span::new_with (48 samples, 0.05%)</title><rect x="97.6628%" y="869" width="0.0471%" height="15" fill="rgb(250,75,6)" fg:x="99451" fg:w="48"/><text x="97.9128%" y="879.50"></text></g><g><title>tracing::span::Span::make_with (48 samples, 0.05%)</title><rect x="97.6628%" y="853" width="0.0471%" height="15" fill="rgb(252,36,40)" fg:x="99451" fg:w="48"/><text x="97.9128%" y="863.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (48 samples, 0.05%)</title><rect x="97.6628%" y="837" width="0.0471%" height="15" fill="rgb(230,91,51)" fg:x="99451" fg:w="48"/><text x="97.9128%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (48 samples, 0.05%)</title><rect x="97.6628%" y="821" width="0.0471%" height="15" fill="rgb(212,92,28)" fg:x="99451" fg:w="48"/><text x="97.9128%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (48 samples, 0.05%)</title><rect x="97.6628%" y="805" width="0.0471%" height="15" fill="rgb(227,13,22)" fg:x="99451" fg:w="48"/><text x="97.9128%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (48 samples, 0.05%)</title><rect x="97.6628%" y="789" width="0.0471%" height="15" fill="rgb(239,204,32)" fg:x="99451" fg:w="48"/><text x="97.9128%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (13 samples, 0.01%)</title><rect x="97.7158%" y="997" width="0.0128%" height="15" fill="rgb(228,49,41)" fg:x="99505" fg:w="13"/><text x="97.9658%" y="1007.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (1,903 samples, 1.87%)</title><rect x="95.8775%" y="1317" width="1.8688%" height="15" fill="rgb(206,95,6)" fg:x="97633" fg:w="1903"/><text x="96.1275%" y="1327.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1,903 samples, 1.87%)</title><rect x="95.8775%" y="1301" width="1.8688%" height="15" fill="rgb(251,20,14)" fg:x="97633" fg:w="1903"/><text x="96.1275%" y="1311.50">w..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1,903 samples, 1.87%)</title><rect x="95.8775%" y="1285" width="1.8688%" height="15" fill="rgb(214,99,28)" fg:x="97633" fg:w="1903"/><text x="96.1275%" y="1295.50">w..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (1,903 samples, 1.87%)</title><rect x="95.8775%" y="1269" width="1.8688%" height="15" fill="rgb(239,122,54)" fg:x="97633" fg:w="1903"/><text x="96.1275%" y="1279.50">b..</text></g><g><title>bevy_app::app::App::update (1,903 samples, 1.87%)</title><rect x="95.8775%" y="1253" width="1.8688%" height="15" fill="rgb(218,217,46)" fg:x="97633" fg:w="1903"/><text x="96.1275%" y="1263.50">b..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1,903 samples, 1.87%)</title><rect x="95.8775%" y="1237" width="1.8688%" height="15" fill="rgb(249,106,28)" fg:x="97633" fg:w="1903"/><text x="96.1275%" y="1247.50">&lt;..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1,903 samples, 1.87%)</title><rect x="95.8775%" y="1221" width="1.8688%" height="15" fill="rgb(250,158,18)" fg:x="97633" fg:w="1903"/><text x="96.1275%" y="1231.50">b..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1,903 samples, 1.87%)</title><rect x="95.8775%" y="1205" width="1.8688%" height="15" fill="rgb(226,137,29)" fg:x="97633" fg:w="1903"/><text x="96.1275%" y="1215.50">&lt;..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (1,883 samples, 1.85%)</title><rect x="95.8971%" y="1189" width="1.8491%" height="15" fill="rgb(210,188,1)" fg:x="97653" fg:w="1883"/><text x="96.1471%" y="1199.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (1,883 samples, 1.85%)</title><rect x="95.8971%" y="1173" width="1.8491%" height="15" fill="rgb(227,84,42)" fg:x="97653" fg:w="1883"/><text x="96.1471%" y="1183.50">&lt;..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (1,046 samples, 1.03%)</title><rect x="96.7191%" y="1157" width="1.0272%" height="15" fill="rgb(222,147,48)" fg:x="98490" fg:w="1046"/><text x="96.9691%" y="1167.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (685 samples, 0.67%)</title><rect x="97.0736%" y="1141" width="0.6727%" height="15" fill="rgb(241,150,43)" fg:x="98851" fg:w="685"/><text x="97.3236%" y="1151.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (685 samples, 0.67%)</title><rect x="97.0736%" y="1125" width="0.6727%" height="15" fill="rgb(206,139,52)" fg:x="98851" fg:w="685"/><text x="97.3236%" y="1135.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (685 samples, 0.67%)</title><rect x="97.0736%" y="1109" width="0.6727%" height="15" fill="rgb(230,63,14)" fg:x="98851" fg:w="685"/><text x="97.3236%" y="1119.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (685 samples, 0.67%)</title><rect x="97.0736%" y="1093" width="0.6727%" height="15" fill="rgb(247,8,20)" fg:x="98851" fg:w="685"/><text x="97.3236%" y="1103.50"></text></g><g><title>wgpu::Queue::submit (302 samples, 0.30%)</title><rect x="97.4497%" y="1077" width="0.2966%" height="15" fill="rgb(213,115,4)" fg:x="99234" fg:w="302"/><text x="97.6997%" y="1087.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (302 samples, 0.30%)</title><rect x="97.4497%" y="1061" width="0.2966%" height="15" fill="rgb(241,79,49)" fg:x="99234" fg:w="302"/><text x="97.6997%" y="1071.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (302 samples, 0.30%)</title><rect x="97.4497%" y="1045" width="0.2966%" height="15" fill="rgb(222,42,35)" fg:x="99234" fg:w="302"/><text x="97.6997%" y="1055.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (135 samples, 0.13%)</title><rect x="97.6137%" y="1029" width="0.1326%" height="15" fill="rgb(247,59,23)" fg:x="99401" fg:w="135"/><text x="97.8637%" y="1039.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (36 samples, 0.04%)</title><rect x="97.7109%" y="1013" width="0.0354%" height="15" fill="rgb(247,93,18)" fg:x="99500" fg:w="36"/><text x="97.9609%" y="1023.50"></text></g><g><title>core::fmt::Write::write_fmt (29 samples, 0.03%)</title><rect x="97.7630%" y="389" width="0.0285%" height="15" fill="rgb(249,107,47)" fg:x="99553" fg:w="29"/><text x="98.0130%" y="399.50"></text></g><g><title>core::fmt::write (28 samples, 0.03%)</title><rect x="97.7639%" y="373" width="0.0275%" height="15" fill="rgb(219,27,1)" fg:x="99554" fg:w="28"/><text x="98.0139%" y="383.50"></text></g><g><title>&lt;gpu_alloc::linear::LinearBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (12 samples, 0.01%)</title><rect x="97.7797%" y="357" width="0.0118%" height="15" fill="rgb(217,82,32)" fg:x="99570" fg:w="12"/><text x="98.0297%" y="367.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (31 samples, 0.03%)</title><rect x="97.7630%" y="405" width="0.0304%" height="15" fill="rgb(250,129,47)" fg:x="99553" fg:w="31"/><text x="98.0130%" y="415.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (45 samples, 0.04%)</title><rect x="97.7600%" y="421" width="0.0442%" height="15" fill="rgb(253,88,35)" fg:x="99550" fg:w="45"/><text x="98.0100%" y="431.50"></text></g><g><title>tracing_core::field::Visit::record_u64 (11 samples, 0.01%)</title><rect x="97.7934%" y="405" width="0.0108%" height="15" fill="rgb(245,221,14)" fg:x="99584" fg:w="11"/><text x="98.0434%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (11 samples, 0.01%)</title><rect x="97.7934%" y="389" width="0.0108%" height="15" fill="rgb(217,119,54)" fg:x="99584" fg:w="11"/><text x="98.0434%" y="399.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (47 samples, 0.05%)</title><rect x="97.7590%" y="501" width="0.0462%" height="15" fill="rgb(247,128,31)" fg:x="99549" fg:w="47"/><text x="98.0090%" y="511.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (47 samples, 0.05%)</title><rect x="97.7590%" y="485" width="0.0462%" height="15" fill="rgb(211,99,22)" fg:x="99549" fg:w="47"/><text x="98.0090%" y="495.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (47 samples, 0.05%)</title><rect x="97.7590%" y="469" width="0.0462%" height="15" fill="rgb(212,20,17)" fg:x="99549" fg:w="47"/><text x="98.0090%" y="479.50"></text></g><g><title>tracing_core::span::Attributes::record (47 samples, 0.05%)</title><rect x="97.7590%" y="453" width="0.0462%" height="15" fill="rgb(209,159,29)" fg:x="99549" fg:w="47"/><text x="98.0090%" y="463.50"></text></g><g><title>tracing_core::field::ValueSet::record (47 samples, 0.05%)</title><rect x="97.7590%" y="437" width="0.0462%" height="15" fill="rgb(222,177,53)" fg:x="99549" fg:w="47"/><text x="98.0090%" y="447.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::dealloc (58 samples, 0.06%)</title><rect x="97.7541%" y="693" width="0.0570%" height="15" fill="rgb(234,46,43)" fg:x="99544" fg:w="58"/><text x="98.0041%" y="703.50"></text></g><g><title>tracing::span::Span::new (53 samples, 0.05%)</title><rect x="97.7590%" y="677" width="0.0520%" height="15" fill="rgb(208,108,14)" fg:x="99549" fg:w="53"/><text x="98.0090%" y="687.50"></text></g><g><title>tracing_core::dispatcher::get_default (53 samples, 0.05%)</title><rect x="97.7590%" y="661" width="0.0520%" height="15" fill="rgb(226,78,53)" fg:x="99549" fg:w="53"/><text x="98.0090%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (53 samples, 0.05%)</title><rect x="97.7590%" y="645" width="0.0520%" height="15" fill="rgb(230,20,41)" fg:x="99549" fg:w="53"/><text x="98.0090%" y="655.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (53 samples, 0.05%)</title><rect x="97.7590%" y="629" width="0.0520%" height="15" fill="rgb(213,195,35)" fg:x="99549" fg:w="53"/><text x="98.0090%" y="639.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (53 samples, 0.05%)</title><rect x="97.7590%" y="613" width="0.0520%" height="15" fill="rgb(242,62,36)" fg:x="99549" fg:w="53"/><text x="98.0090%" y="623.50"></text></g><g><title>tracing::span::Span::new_with (53 samples, 0.05%)</title><rect x="97.7590%" y="597" width="0.0520%" height="15" fill="rgb(222,210,37)" fg:x="99549" fg:w="53"/><text x="98.0090%" y="607.50"></text></g><g><title>tracing::span::Span::make_with (53 samples, 0.05%)</title><rect x="97.7590%" y="581" width="0.0520%" height="15" fill="rgb(232,107,19)" fg:x="99549" fg:w="53"/><text x="98.0090%" y="591.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (53 samples, 0.05%)</title><rect x="97.7590%" y="565" width="0.0520%" height="15" fill="rgb(235,85,17)" fg:x="99549" fg:w="53"/><text x="98.0090%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (53 samples, 0.05%)</title><rect x="97.7590%" y="549" width="0.0520%" height="15" fill="rgb(219,195,31)" fg:x="99549" fg:w="53"/><text x="98.0090%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (53 samples, 0.05%)</title><rect x="97.7590%" y="533" width="0.0520%" height="15" fill="rgb(231,183,30)" fg:x="99549" fg:w="53"/><text x="98.0090%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (53 samples, 0.05%)</title><rect x="97.7590%" y="517" width="0.0520%" height="15" fill="rgb(212,0,11)" fg:x="99549" fg:w="53"/><text x="98.0090%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="97.8513%" y="197" width="0.0167%" height="15" fill="rgb(249,53,54)" fg:x="99643" fg:w="17"/><text x="98.1013%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.02%)</title><rect x="97.8513%" y="181" width="0.0167%" height="15" fill="rgb(211,118,13)" fg:x="99643" fg:w="17"/><text x="98.1013%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="97.8523%" y="165" width="0.0157%" height="15" fill="rgb(237,42,9)" fg:x="99644" fg:w="16"/><text x="98.1023%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="97.8523%" y="149" width="0.0157%" height="15" fill="rgb(227,68,32)" fg:x="99644" fg:w="16"/><text x="98.1023%" y="159.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.01%)</title><rect x="97.8533%" y="133" width="0.0147%" height="15" fill="rgb(238,10,7)" fg:x="99645" fg:w="15"/><text x="98.1033%" y="143.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 0.01%)</title><rect x="97.8533%" y="117" width="0.0147%" height="15" fill="rgb(224,42,12)" fg:x="99645" fg:w="15"/><text x="98.1033%" y="127.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 0.01%)</title><rect x="97.8533%" y="101" width="0.0147%" height="15" fill="rgb(252,190,5)" fg:x="99645" fg:w="15"/><text x="98.1033%" y="111.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.01%)</title><rect x="97.8533%" y="85" width="0.0147%" height="15" fill="rgb(220,214,39)" fg:x="99645" fg:w="15"/><text x="98.1033%" y="95.50"></text></g><g><title>__rdl_realloc (15 samples, 0.01%)</title><rect x="97.8533%" y="69" width="0.0147%" height="15" fill="rgb(247,98,4)" fg:x="99645" fg:w="15"/><text x="98.1033%" y="79.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (15 samples, 0.01%)</title><rect x="97.8533%" y="53" width="0.0147%" height="15" fill="rgb(211,60,12)" fg:x="99645" fg:w="15"/><text x="98.1033%" y="63.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.01%)</title><rect x="97.8533%" y="37" width="0.0147%" height="15" fill="rgb(224,42,10)" fg:x="99645" fg:w="15"/><text x="98.1033%" y="47.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (56 samples, 0.05%)</title><rect x="97.8219%" y="373" width="0.0550%" height="15" fill="rgb(217,167,4)" fg:x="99613" fg:w="56"/><text x="98.0719%" y="383.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (51 samples, 0.05%)</title><rect x="97.8268%" y="357" width="0.0501%" height="15" fill="rgb(253,18,17)" fg:x="99618" fg:w="51"/><text x="98.0768%" y="367.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (51 samples, 0.05%)</title><rect x="97.8268%" y="341" width="0.0501%" height="15" fill="rgb(249,186,44)" fg:x="99618" fg:w="51"/><text x="98.0768%" y="351.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (51 samples, 0.05%)</title><rect x="97.8268%" y="325" width="0.0501%" height="15" fill="rgb(254,124,54)" fg:x="99618" fg:w="51"/><text x="98.0768%" y="335.50"></text></g><g><title>core::fmt::Formatter::write_str (26 samples, 0.03%)</title><rect x="97.8513%" y="309" width="0.0255%" height="15" fill="rgb(220,124,39)" fg:x="99643" fg:w="26"/><text x="98.1013%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (26 samples, 0.03%)</title><rect x="97.8513%" y="293" width="0.0255%" height="15" fill="rgb(225,96,46)" fg:x="99643" fg:w="26"/><text x="98.1013%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (26 samples, 0.03%)</title><rect x="97.8513%" y="277" width="0.0255%" height="15" fill="rgb(221,106,12)" fg:x="99643" fg:w="26"/><text x="98.1013%" y="287.50"></text></g><g><title>alloc::string::String::push_str (26 samples, 0.03%)</title><rect x="97.8513%" y="261" width="0.0255%" height="15" fill="rgb(227,133,23)" fg:x="99643" fg:w="26"/><text x="98.1013%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (26 samples, 0.03%)</title><rect x="97.8513%" y="245" width="0.0255%" height="15" fill="rgb(216,44,52)" fg:x="99643" fg:w="26"/><text x="98.1013%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (26 samples, 0.03%)</title><rect x="97.8513%" y="229" width="0.0255%" height="15" fill="rgb(239,149,7)" fg:x="99643" fg:w="26"/><text x="98.1013%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (26 samples, 0.03%)</title><rect x="97.8513%" y="213" width="0.0255%" height="15" fill="rgb(211,157,31)" fg:x="99643" fg:w="26"/><text x="98.1013%" y="223.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (130 samples, 0.13%)</title><rect x="97.7512%" y="757" width="0.1277%" height="15" fill="rgb(206,215,22)" fg:x="99541" fg:w="130"/><text x="98.0012%" y="767.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (130 samples, 0.13%)</title><rect x="97.7512%" y="741" width="0.1277%" height="15" fill="rgb(208,113,15)" fg:x="99541" fg:w="130"/><text x="98.0012%" y="751.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (130 samples, 0.13%)</title><rect x="97.7512%" y="725" width="0.1277%" height="15" fill="rgb(207,189,15)" fg:x="99541" fg:w="130"/><text x="98.0012%" y="735.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (130 samples, 0.13%)</title><rect x="97.7512%" y="709" width="0.1277%" height="15" fill="rgb(231,115,4)" fg:x="99541" fg:w="130"/><text x="98.0012%" y="719.50"></text></g><g><title>tracing::span::Span::new (69 samples, 0.07%)</title><rect x="97.8111%" y="693" width="0.0678%" height="15" fill="rgb(253,117,2)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="703.50"></text></g><g><title>tracing_core::dispatcher::get_default (69 samples, 0.07%)</title><rect x="97.8111%" y="677" width="0.0678%" height="15" fill="rgb(248,48,24)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (69 samples, 0.07%)</title><rect x="97.8111%" y="661" width="0.0678%" height="15" fill="rgb(241,28,46)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="671.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (69 samples, 0.07%)</title><rect x="97.8111%" y="645" width="0.0678%" height="15" fill="rgb(216,165,52)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="655.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (69 samples, 0.07%)</title><rect x="97.8111%" y="629" width="0.0678%" height="15" fill="rgb(220,222,34)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="639.50"></text></g><g><title>tracing::span::Span::new_with (69 samples, 0.07%)</title><rect x="97.8111%" y="613" width="0.0678%" height="15" fill="rgb(247,222,49)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="623.50"></text></g><g><title>tracing::span::Span::make_with (69 samples, 0.07%)</title><rect x="97.8111%" y="597" width="0.0678%" height="15" fill="rgb(240,10,31)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="607.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (69 samples, 0.07%)</title><rect x="97.8111%" y="581" width="0.0678%" height="15" fill="rgb(221,199,35)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (69 samples, 0.07%)</title><rect x="97.8111%" y="565" width="0.0678%" height="15" fill="rgb(230,223,11)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (69 samples, 0.07%)</title><rect x="97.8111%" y="549" width="0.0678%" height="15" fill="rgb(218,82,45)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (69 samples, 0.07%)</title><rect x="97.8111%" y="533" width="0.0678%" height="15" fill="rgb(233,213,33)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="543.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (69 samples, 0.07%)</title><rect x="97.8111%" y="517" width="0.0678%" height="15" fill="rgb(210,143,52)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="527.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (69 samples, 0.07%)</title><rect x="97.8111%" y="501" width="0.0678%" height="15" fill="rgb(206,95,4)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="511.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (69 samples, 0.07%)</title><rect x="97.8111%" y="485" width="0.0678%" height="15" fill="rgb(246,164,46)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="495.50"></text></g><g><title>tracing_core::span::Attributes::record (69 samples, 0.07%)</title><rect x="97.8111%" y="469" width="0.0678%" height="15" fill="rgb(213,210,47)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="479.50"></text></g><g><title>tracing_core::field::ValueSet::record (69 samples, 0.07%)</title><rect x="97.8111%" y="453" width="0.0678%" height="15" fill="rgb(210,12,38)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="463.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (69 samples, 0.07%)</title><rect x="97.8111%" y="437" width="0.0678%" height="15" fill="rgb(252,192,54)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (69 samples, 0.07%)</title><rect x="97.8111%" y="421" width="0.0678%" height="15" fill="rgb(242,92,6)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (69 samples, 0.07%)</title><rect x="97.8111%" y="405" width="0.0678%" height="15" fill="rgb(253,154,15)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="415.50"></text></g><g><title>core::fmt::write (69 samples, 0.07%)</title><rect x="97.8111%" y="389" width="0.0678%" height="15" fill="rgb(209,20,43)" fg:x="99602" fg:w="69"/><text x="98.0611%" y="399.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (142 samples, 0.14%)</title><rect x="97.7512%" y="901" width="0.1394%" height="15" fill="rgb(232,28,49)" fg:x="99541" fg:w="142"/><text x="98.0012%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (142 samples, 0.14%)</title><rect x="97.7512%" y="885" width="0.1394%" height="15" fill="rgb(248,131,53)" fg:x="99541" fg:w="142"/><text x="98.0012%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (142 samples, 0.14%)</title><rect x="97.7512%" y="869" width="0.1394%" height="15" fill="rgb(214,16,30)" fg:x="99541" fg:w="142"/><text x="98.0012%" y="879.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (142 samples, 0.14%)</title><rect x="97.7512%" y="853" width="0.1394%" height="15" fill="rgb(245,16,0)" fg:x="99541" fg:w="142"/><text x="98.0012%" y="863.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (142 samples, 0.14%)</title><rect x="97.7512%" y="837" width="0.1394%" height="15" fill="rgb(245,17,35)" fg:x="99541" fg:w="142"/><text x="98.0012%" y="847.50"></text></g><g><title>wgpu::Device::poll (142 samples, 0.14%)</title><rect x="97.7512%" y="821" width="0.1394%" height="15" fill="rgb(249,27,53)" fg:x="99541" fg:w="142"/><text x="98.0012%" y="831.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (142 samples, 0.14%)</title><rect x="97.7512%" y="805" width="0.1394%" height="15" fill="rgb(214,73,24)" fg:x="99541" fg:w="142"/><text x="98.0012%" y="815.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (142 samples, 0.14%)</title><rect x="97.7512%" y="789" width="0.1394%" height="15" fill="rgb(223,84,37)" fg:x="99541" fg:w="142"/><text x="98.0012%" y="799.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (142 samples, 0.14%)</title><rect x="97.7512%" y="773" width="0.1394%" height="15" fill="rgb(210,109,28)" fg:x="99541" fg:w="142"/><text x="98.0012%" y="783.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (12 samples, 0.01%)</title><rect x="97.8788%" y="757" width="0.0118%" height="15" fill="rgb(208,186,6)" fg:x="99671" fg:w="12"/><text x="98.1288%" y="767.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (149 samples, 0.15%)</title><rect x="97.7492%" y="1173" width="0.1463%" height="15" fill="rgb(235,201,30)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1183.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (149 samples, 0.15%)</title><rect x="97.7492%" y="1157" width="0.1463%" height="15" fill="rgb(216,198,48)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1167.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (149 samples, 0.15%)</title><rect x="97.7492%" y="1141" width="0.1463%" height="15" fill="rgb(254,186,25)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1151.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (149 samples, 0.15%)</title><rect x="97.7492%" y="1125" width="0.1463%" height="15" fill="rgb(227,87,5)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1135.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (149 samples, 0.15%)</title><rect x="97.7492%" y="1109" width="0.1463%" height="15" fill="rgb(236,205,25)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1119.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (149 samples, 0.15%)</title><rect x="97.7492%" y="1093" width="0.1463%" height="15" fill="rgb(229,99,32)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (149 samples, 0.15%)</title><rect x="97.7492%" y="1077" width="0.1463%" height="15" fill="rgb(231,177,31)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (149 samples, 0.15%)</title><rect x="97.7492%" y="1061" width="0.1463%" height="15" fill="rgb(246,15,2)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (149 samples, 0.15%)</title><rect x="97.7492%" y="1045" width="0.1463%" height="15" fill="rgb(207,39,15)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1055.50"></text></g><g><title>async_executor::Executor::try_tick (149 samples, 0.15%)</title><rect x="97.7492%" y="1029" width="0.1463%" height="15" fill="rgb(207,44,9)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1039.50"></text></g><g><title>async_task::runnable::Runnable::run (149 samples, 0.15%)</title><rect x="97.7492%" y="1013" width="0.1463%" height="15" fill="rgb(225,224,33)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1023.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (149 samples, 0.15%)</title><rect x="97.7492%" y="997" width="0.1463%" height="15" fill="rgb(252,151,3)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (149 samples, 0.15%)</title><rect x="97.7492%" y="981" width="0.1463%" height="15" fill="rgb(211,140,13)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="991.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (149 samples, 0.15%)</title><rect x="97.7492%" y="965" width="0.1463%" height="15" fill="rgb(239,225,17)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (149 samples, 0.15%)</title><rect x="97.7492%" y="949" width="0.1463%" height="15" fill="rgb(223,170,52)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="959.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (149 samples, 0.15%)</title><rect x="97.7492%" y="933" width="0.1463%" height="15" fill="rgb(212,64,21)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="943.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (149 samples, 0.15%)</title><rect x="97.7492%" y="917" width="0.1463%" height="15" fill="rgb(236,126,48)" fg:x="99539" fg:w="149"/><text x="97.9992%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (27 samples, 0.03%)</title><rect x="97.9417%" y="693" width="0.0265%" height="15" fill="rgb(209,135,11)" fg:x="99735" fg:w="27"/><text x="98.1917%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (11 samples, 0.01%)</title><rect x="97.9574%" y="677" width="0.0108%" height="15" fill="rgb(228,126,40)" fg:x="99751" fg:w="11"/><text x="98.2074%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (38 samples, 0.04%)</title><rect x="97.9338%" y="709" width="0.0373%" height="15" fill="rgb(205,196,36)" fg:x="99727" fg:w="38"/><text x="98.1838%" y="719.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (78 samples, 0.08%)</title><rect x="97.8955%" y="1157" width="0.0766%" height="15" fill="rgb(243,160,33)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (78 samples, 0.08%)</title><rect x="97.8955%" y="1141" width="0.0766%" height="15" fill="rgb(210,84,20)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (78 samples, 0.08%)</title><rect x="97.8955%" y="1125" width="0.0766%" height="15" fill="rgb(228,213,30)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (78 samples, 0.08%)</title><rect x="97.8955%" y="1109" width="0.0766%" height="15" fill="rgb(252,33,45)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (78 samples, 0.08%)</title><rect x="97.8955%" y="1093" width="0.0766%" height="15" fill="rgb(254,227,20)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (78 samples, 0.08%)</title><rect x="97.8955%" y="1077" width="0.0766%" height="15" fill="rgb(228,192,2)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (78 samples, 0.08%)</title><rect x="97.8955%" y="1061" width="0.0766%" height="15" fill="rgb(233,32,8)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (78 samples, 0.08%)</title><rect x="97.8955%" y="1045" width="0.0766%" height="15" fill="rgb(220,146,47)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (78 samples, 0.08%)</title><rect x="97.8955%" y="1029" width="0.0766%" height="15" fill="rgb(246,194,1)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (78 samples, 0.08%)</title><rect x="97.8955%" y="1013" width="0.0766%" height="15" fill="rgb(218,203,9)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="1023.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (78 samples, 0.08%)</title><rect x="97.8955%" y="997" width="0.0766%" height="15" fill="rgb(237,97,14)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="1007.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (78 samples, 0.08%)</title><rect x="97.8955%" y="981" width="0.0766%" height="15" fill="rgb(239,76,15)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="991.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (78 samples, 0.08%)</title><rect x="97.8955%" y="965" width="0.0766%" height="15" fill="rgb(222,53,45)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="975.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (78 samples, 0.08%)</title><rect x="97.8955%" y="949" width="0.0766%" height="15" fill="rgb(237,88,5)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="959.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (78 samples, 0.08%)</title><rect x="97.8955%" y="933" width="0.0766%" height="15" fill="rgb(218,223,35)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="943.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (78 samples, 0.08%)</title><rect x="97.8955%" y="917" width="0.0766%" height="15" fill="rgb(243,229,38)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="927.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (78 samples, 0.08%)</title><rect x="97.8955%" y="901" width="0.0766%" height="15" fill="rgb(240,75,41)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (78 samples, 0.08%)</title><rect x="97.8955%" y="885" width="0.0766%" height="15" fill="rgb(209,110,37)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (78 samples, 0.08%)</title><rect x="97.8955%" y="869" width="0.0766%" height="15" fill="rgb(221,130,46)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (78 samples, 0.08%)</title><rect x="97.8955%" y="853" width="0.0766%" height="15" fill="rgb(237,160,20)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (78 samples, 0.08%)</title><rect x="97.8955%" y="837" width="0.0766%" height="15" fill="rgb(234,126,24)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (78 samples, 0.08%)</title><rect x="97.8955%" y="821" width="0.0766%" height="15" fill="rgb(207,177,9)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (78 samples, 0.08%)</title><rect x="97.8955%" y="805" width="0.0766%" height="15" fill="rgb(231,191,33)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (78 samples, 0.08%)</title><rect x="97.8955%" y="789" width="0.0766%" height="15" fill="rgb(207,42,1)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (78 samples, 0.08%)</title><rect x="97.8955%" y="773" width="0.0766%" height="15" fill="rgb(218,34,50)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (78 samples, 0.08%)</title><rect x="97.8955%" y="757" width="0.0766%" height="15" fill="rgb(254,126,39)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (78 samples, 0.08%)</title><rect x="97.8955%" y="741" width="0.0766%" height="15" fill="rgb(251,17,26)" fg:x="99688" fg:w="78"/><text x="98.1455%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (59 samples, 0.06%)</title><rect x="97.9142%" y="725" width="0.0579%" height="15" fill="rgb(252,215,34)" fg:x="99707" fg:w="59"/><text x="98.1642%" y="735.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (14 samples, 0.01%)</title><rect x="97.9741%" y="997" width="0.0137%" height="15" fill="rgb(217,120,44)" fg:x="99768" fg:w="14"/><text x="98.2241%" y="1007.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (14 samples, 0.01%)</title><rect x="97.9741%" y="981" width="0.0137%" height="15" fill="rgb(211,31,11)" fg:x="99768" fg:w="14"/><text x="98.2241%" y="991.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (14 samples, 0.01%)</title><rect x="97.9741%" y="965" width="0.0137%" height="15" fill="rgb(222,69,51)" fg:x="99768" fg:w="14"/><text x="98.2241%" y="975.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::begin_command_buffer (14 samples, 0.01%)</title><rect x="97.9741%" y="949" width="0.0137%" height="15" fill="rgb(215,229,42)" fg:x="99768" fg:w="14"/><text x="98.2241%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.01%)</title><rect x="97.9741%" y="933" width="0.0137%" height="15" fill="rgb(212,102,15)" fg:x="99768" fg:w="14"/><text x="98.2241%" y="943.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (23 samples, 0.02%)</title><rect x="97.9741%" y="1077" width="0.0226%" height="15" fill="rgb(205,179,41)" fg:x="99768" fg:w="23"/><text x="98.2241%" y="1087.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (23 samples, 0.02%)</title><rect x="97.9741%" y="1061" width="0.0226%" height="15" fill="rgb(219,148,46)" fg:x="99768" fg:w="23"/><text x="98.2241%" y="1071.50"></text></g><g><title>wgpu::Device::create_command_encoder (23 samples, 0.02%)</title><rect x="97.9741%" y="1045" width="0.0226%" height="15" fill="rgb(243,40,19)" fg:x="99768" fg:w="23"/><text x="98.2241%" y="1055.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (23 samples, 0.02%)</title><rect x="97.9741%" y="1029" width="0.0226%" height="15" fill="rgb(208,206,34)" fg:x="99768" fg:w="23"/><text x="98.2241%" y="1039.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (23 samples, 0.02%)</title><rect x="97.9741%" y="1013" width="0.0226%" height="15" fill="rgb(244,184,38)" fg:x="99768" fg:w="23"/><text x="98.2241%" y="1023.50"></text></g><g><title>wgpu::Buffer::unmap (19 samples, 0.02%)</title><rect x="97.9967%" y="1029" width="0.0187%" height="15" fill="rgb(244,151,47)" fg:x="99791" fg:w="19"/><text x="98.2467%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (19 samples, 0.02%)</title><rect x="97.9967%" y="1013" width="0.0187%" height="15" fill="rgb(236,134,42)" fg:x="99791" fg:w="19"/><text x="98.2467%" y="1023.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (19 samples, 0.02%)</title><rect x="97.9967%" y="997" width="0.0187%" height="15" fill="rgb(233,93,22)" fg:x="99791" fg:w="19"/><text x="98.2467%" y="1007.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (19 samples, 0.02%)</title><rect x="97.9967%" y="981" width="0.0187%" height="15" fill="rgb(211,202,10)" fg:x="99791" fg:w="19"/><text x="98.2467%" y="991.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (19 samples, 0.02%)</title><rect x="97.9967%" y="965" width="0.0187%" height="15" fill="rgb(240,63,8)" fg:x="99791" fg:w="19"/><text x="98.2467%" y="975.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (19 samples, 0.02%)</title><rect x="97.9967%" y="949" width="0.0187%" height="15" fill="rgb(214,9,4)" fg:x="99791" fg:w="19"/><text x="98.2467%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.02%)</title><rect x="97.9967%" y="933" width="0.0187%" height="15" fill="rgb(243,66,45)" fg:x="99791" fg:w="19"/><text x="98.2467%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (19 samples, 0.02%)</title><rect x="97.9967%" y="917" width="0.0187%" height="15" fill="rgb(220,50,42)" fg:x="99791" fg:w="19"/><text x="98.2467%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.02%)</title><rect x="97.9996%" y="901" width="0.0157%" height="15" fill="rgb(220,134,27)" fg:x="99794" fg:w="16"/><text x="98.2496%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (17 samples, 0.02%)</title><rect x="98.0271%" y="901" width="0.0167%" height="15" fill="rgb(246,151,50)" fg:x="99822" fg:w="17"/><text x="98.2771%" y="911.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (17 samples, 0.02%)</title><rect x="98.0271%" y="885" width="0.0167%" height="15" fill="rgb(238,216,27)" fg:x="99822" fg:w="17"/><text x="98.2771%" y="895.50"></text></g><g><title>tracing::span::Span::do_exit (17 samples, 0.02%)</title><rect x="98.0271%" y="869" width="0.0167%" height="15" fill="rgb(250,92,11)" fg:x="99822" fg:w="17"/><text x="98.2771%" y="879.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (17 samples, 0.02%)</title><rect x="98.0271%" y="853" width="0.0167%" height="15" fill="rgb(248,183,6)" fg:x="99822" fg:w="17"/><text x="98.2771%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::exit (17 samples, 0.02%)</title><rect x="98.0271%" y="837" width="0.0167%" height="15" fill="rgb(211,204,50)" fg:x="99822" fg:w="17"/><text x="98.2771%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (17 samples, 0.02%)</title><rect x="98.0271%" y="821" width="0.0167%" height="15" fill="rgb(252,55,47)" fg:x="99822" fg:w="17"/><text x="98.2771%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (17 samples, 0.02%)</title><rect x="98.0271%" y="805" width="0.0167%" height="15" fill="rgb(240,198,32)" fg:x="99822" fg:w="17"/><text x="98.2771%" y="815.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (11 samples, 0.01%)</title><rect x="98.0468%" y="597" width="0.0108%" height="15" fill="rgb(224,203,19)" fg:x="99842" fg:w="11"/><text x="98.2968%" y="607.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (13 samples, 0.01%)</title><rect x="98.0468%" y="613" width="0.0128%" height="15" fill="rgb(205,27,16)" fg:x="99842" fg:w="13"/><text x="98.2968%" y="623.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (14 samples, 0.01%)</title><rect x="98.0468%" y="725" width="0.0137%" height="15" fill="rgb(224,226,17)" fg:x="99842" fg:w="14"/><text x="98.2968%" y="735.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::{{closure}} (14 samples, 0.01%)</title><rect x="98.0468%" y="709" width="0.0137%" height="15" fill="rgb(205,216,54)" fg:x="99842" fg:w="14"/><text x="98.2968%" y="719.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (14 samples, 0.01%)</title><rect x="98.0468%" y="693" width="0.0137%" height="15" fill="rgb(248,168,46)" fg:x="99842" fg:w="14"/><text x="98.2968%" y="703.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (14 samples, 0.01%)</title><rect x="98.0468%" y="677" width="0.0137%" height="15" fill="rgb(226,111,45)" fg:x="99842" fg:w="14"/><text x="98.2968%" y="687.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (14 samples, 0.01%)</title><rect x="98.0468%" y="661" width="0.0137%" height="15" fill="rgb(231,15,9)" fg:x="99842" fg:w="14"/><text x="98.2968%" y="671.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::{{closure}} (14 samples, 0.01%)</title><rect x="98.0468%" y="645" width="0.0137%" height="15" fill="rgb(243,168,3)" fg:x="99842" fg:w="14"/><text x="98.2968%" y="655.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (14 samples, 0.01%)</title><rect x="98.0468%" y="629" width="0.0137%" height="15" fill="rgb(221,220,54)" fg:x="99842" fg:w="14"/><text x="98.2968%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (18 samples, 0.02%)</title><rect x="98.0438%" y="901" width="0.0177%" height="15" fill="rgb(232,174,38)" fg:x="99839" fg:w="18"/><text x="98.2938%" y="911.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (18 samples, 0.02%)</title><rect x="98.0438%" y="885" width="0.0177%" height="15" fill="rgb(205,14,38)" fg:x="99839" fg:w="18"/><text x="98.2938%" y="895.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (18 samples, 0.02%)</title><rect x="98.0438%" y="869" width="0.0177%" height="15" fill="rgb(234,89,19)" fg:x="99839" fg:w="18"/><text x="98.2938%" y="879.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (18 samples, 0.02%)</title><rect x="98.0438%" y="853" width="0.0177%" height="15" fill="rgb(216,68,51)" fg:x="99839" fg:w="18"/><text x="98.2938%" y="863.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (18 samples, 0.02%)</title><rect x="98.0438%" y="837" width="0.0177%" height="15" fill="rgb(213,49,2)" fg:x="99839" fg:w="18"/><text x="98.2938%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (15 samples, 0.01%)</title><rect x="98.0468%" y="821" width="0.0147%" height="15" fill="rgb(242,146,30)" fg:x="99842" fg:w="15"/><text x="98.2968%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (15 samples, 0.01%)</title><rect x="98.0468%" y="805" width="0.0147%" height="15" fill="rgb(224,188,11)" fg:x="99842" fg:w="15"/><text x="98.2968%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (15 samples, 0.01%)</title><rect x="98.0468%" y="789" width="0.0147%" height="15" fill="rgb(213,159,11)" fg:x="99842" fg:w="15"/><text x="98.2968%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.01%)</title><rect x="98.0468%" y="773" width="0.0147%" height="15" fill="rgb(229,13,31)" fg:x="99842" fg:w="15"/><text x="98.2968%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop::{{closure}} (15 samples, 0.01%)</title><rect x="98.0468%" y="757" width="0.0147%" height="15" fill="rgb(209,103,11)" fg:x="99842" fg:w="15"/><text x="98.2968%" y="767.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (15 samples, 0.01%)</title><rect x="98.0468%" y="741" width="0.0147%" height="15" fill="rgb(206,3,4)" fg:x="99842" fg:w="15"/><text x="98.2968%" y="751.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (16 samples, 0.02%)</title><rect x="98.0792%" y="757" width="0.0157%" height="15" fill="rgb(252,10,49)" fg:x="99875" fg:w="16"/><text x="98.3292%" y="767.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (17 samples, 0.02%)</title><rect x="98.0792%" y="837" width="0.0167%" height="15" fill="rgb(217,160,32)" fg:x="99875" fg:w="17"/><text x="98.3292%" y="847.50"></text></g><g><title>tracing::span::Span::new_with (17 samples, 0.02%)</title><rect x="98.0792%" y="821" width="0.0167%" height="15" fill="rgb(249,196,0)" fg:x="99875" fg:w="17"/><text x="98.3292%" y="831.50"></text></g><g><title>tracing::span::Span::make_with (17 samples, 0.02%)</title><rect x="98.0792%" y="805" width="0.0167%" height="15" fill="rgb(213,17,48)" fg:x="99875" fg:w="17"/><text x="98.3292%" y="815.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (17 samples, 0.02%)</title><rect x="98.0792%" y="789" width="0.0167%" height="15" fill="rgb(206,42,46)" fg:x="99875" fg:w="17"/><text x="98.3292%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (17 samples, 0.02%)</title><rect x="98.0792%" y="773" width="0.0167%" height="15" fill="rgb(212,105,24)" fg:x="99875" fg:w="17"/><text x="98.3292%" y="783.50"></text></g><g><title>tracing::span::Span::new (18 samples, 0.02%)</title><rect x="98.0792%" y="901" width="0.0177%" height="15" fill="rgb(243,216,30)" fg:x="99875" fg:w="18"/><text x="98.3292%" y="911.50"></text></g><g><title>tracing_core::dispatcher::get_default (18 samples, 0.02%)</title><rect x="98.0792%" y="885" width="0.0177%" height="15" fill="rgb(207,121,3)" fg:x="99875" fg:w="18"/><text x="98.3292%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (18 samples, 0.02%)</title><rect x="98.0792%" y="869" width="0.0177%" height="15" fill="rgb(249,78,0)" fg:x="99875" fg:w="18"/><text x="98.3292%" y="879.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (18 samples, 0.02%)</title><rect x="98.0792%" y="853" width="0.0177%" height="15" fill="rgb(244,151,32)" fg:x="99875" fg:w="18"/><text x="98.3292%" y="863.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (78 samples, 0.08%)</title><rect x="98.0212%" y="917" width="0.0766%" height="15" fill="rgb(228,63,25)" fg:x="99816" fg:w="78"/><text x="98.2712%" y="927.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (15 samples, 0.01%)</title><rect x="98.1096%" y="725" width="0.0147%" height="15" fill="rgb(231,158,23)" fg:x="99906" fg:w="15"/><text x="98.3596%" y="735.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (15 samples, 0.01%)</title><rect x="98.1096%" y="709" width="0.0147%" height="15" fill="rgb(248,107,23)" fg:x="99906" fg:w="15"/><text x="98.3596%" y="719.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (15 samples, 0.01%)</title><rect x="98.1096%" y="693" width="0.0147%" height="15" fill="rgb(215,168,21)" fg:x="99906" fg:w="15"/><text x="98.3596%" y="703.50"></text></g><g><title>tracing_core::span::Attributes::record (15 samples, 0.01%)</title><rect x="98.1096%" y="677" width="0.0147%" height="15" fill="rgb(227,83,22)" fg:x="99906" fg:w="15"/><text x="98.3596%" y="687.50"></text></g><g><title>tracing_core::field::ValueSet::record (15 samples, 0.01%)</title><rect x="98.1096%" y="661" width="0.0147%" height="15" fill="rgb(217,118,43)" fg:x="99906" fg:w="15"/><text x="98.3596%" y="671.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (14 samples, 0.01%)</title><rect x="98.1106%" y="645" width="0.0137%" height="15" fill="rgb(229,220,41)" fg:x="99907" fg:w="14"/><text x="98.3606%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (25 samples, 0.02%)</title><rect x="98.1096%" y="741" width="0.0246%" height="15" fill="rgb(254,146,46)" fg:x="99906" fg:w="25"/><text x="98.3596%" y="751.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (119 samples, 0.12%)</title><rect x="98.0212%" y="933" width="0.1169%" height="15" fill="rgb(233,208,31)" fg:x="99816" fg:w="119"/><text x="98.2712%" y="943.50"></text></g><g><title>gpu_alloc::linear::LinearAllocator&lt;M&gt;::alloc (41 samples, 0.04%)</title><rect x="98.0978%" y="917" width="0.0403%" height="15" fill="rgb(222,162,7)" fg:x="99894" fg:w="41"/><text x="98.3478%" y="927.50"></text></g><g><title>tracing::span::Span::new (29 samples, 0.03%)</title><rect x="98.1096%" y="901" width="0.0285%" height="15" fill="rgb(230,117,45)" fg:x="99906" fg:w="29"/><text x="98.3596%" y="911.50"></text></g><g><title>tracing_core::dispatcher::get_default (29 samples, 0.03%)</title><rect x="98.1096%" y="885" width="0.0285%" height="15" fill="rgb(239,163,6)" fg:x="99906" fg:w="29"/><text x="98.3596%" y="895.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (29 samples, 0.03%)</title><rect x="98.1096%" y="869" width="0.0285%" height="15" fill="rgb(246,130,17)" fg:x="99906" fg:w="29"/><text x="98.3596%" y="879.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (29 samples, 0.03%)</title><rect x="98.1096%" y="853" width="0.0285%" height="15" fill="rgb(216,84,5)" fg:x="99906" fg:w="29"/><text x="98.3596%" y="863.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (29 samples, 0.03%)</title><rect x="98.1096%" y="837" width="0.0285%" height="15" fill="rgb(230,200,21)" fg:x="99906" fg:w="29"/><text x="98.3596%" y="847.50"></text></g><g><title>tracing::span::Span::new_with (29 samples, 0.03%)</title><rect x="98.1096%" y="821" width="0.0285%" height="15" fill="rgb(224,2,8)" fg:x="99906" fg:w="29"/><text x="98.3596%" y="831.50"></text></g><g><title>tracing::span::Span::make_with (29 samples, 0.03%)</title><rect x="98.1096%" y="805" width="0.0285%" height="15" fill="rgb(238,178,10)" fg:x="99906" fg:w="29"/><text x="98.3596%" y="815.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (29 samples, 0.03%)</title><rect x="98.1096%" y="789" width="0.0285%" height="15" fill="rgb(242,153,24)" fg:x="99906" fg:w="29"/><text x="98.3596%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (29 samples, 0.03%)</title><rect x="98.1096%" y="773" width="0.0285%" height="15" fill="rgb(242,32,48)" fg:x="99906" fg:w="29"/><text x="98.3596%" y="783.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (29 samples, 0.03%)</title><rect x="98.1096%" y="757" width="0.0285%" height="15" fill="rgb(227,36,0)" fg:x="99906" fg:w="29"/><text x="98.3596%" y="767.50"></text></g><g><title>core::fmt::Formatter::debug_struct (12 samples, 0.01%)</title><rect x="98.1479%" y="597" width="0.0118%" height="15" fill="rgb(251,33,35)" fg:x="99945" fg:w="12"/><text x="98.3979%" y="607.50"></text></g><g><title>core::fmt::builders::debug_struct_new (12 samples, 0.01%)</title><rect x="98.1479%" y="581" width="0.0118%" height="15" fill="rgb(232,168,51)" fg:x="99945" fg:w="12"/><text x="98.3979%" y="591.50"></text></g><g><title>core::fmt::Formatter::write_str (12 samples, 0.01%)</title><rect x="98.1479%" y="565" width="0.0118%" height="15" fill="rgb(228,56,10)" fg:x="99945" fg:w="12"/><text x="98.3979%" y="575.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.01%)</title><rect x="98.1479%" y="549" width="0.0118%" height="15" fill="rgb(231,10,26)" fg:x="99945" fg:w="12"/><text x="98.3979%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.01%)</title><rect x="98.1479%" y="533" width="0.0118%" height="15" fill="rgb(226,202,12)" fg:x="99945" fg:w="12"/><text x="98.3979%" y="543.50"></text></g><g><title>alloc::string::String::push_str (12 samples, 0.01%)</title><rect x="98.1479%" y="517" width="0.0118%" height="15" fill="rgb(251,49,21)" fg:x="99945" fg:w="12"/><text x="98.3979%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.01%)</title><rect x="98.1479%" y="501" width="0.0118%" height="15" fill="rgb(206,228,28)" fg:x="99945" fg:w="12"/><text x="98.3979%" y="511.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="98.1479%" y="485" width="0.0118%" height="15" fill="rgb(205,198,31)" fg:x="99945" fg:w="12"/><text x="98.3979%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.01%)</title><rect x="98.1479%" y="469" width="0.0118%" height="15" fill="rgb(213,69,1)" fg:x="99945" fg:w="12"/><text x="98.3979%" y="479.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (15 samples, 0.01%)</title><rect x="98.1646%" y="549" width="0.0147%" height="15" fill="rgb(209,177,9)" fg:x="99962" fg:w="15"/><text x="98.4146%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="98.1813%" y="421" width="0.0118%" height="15" fill="rgb(227,119,30)" fg:x="99979" fg:w="12"/><text x="98.4313%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (12 samples, 0.01%)</title><rect x="98.1813%" y="405" width="0.0118%" height="15" fill="rgb(234,106,41)" fg:x="99979" fg:w="12"/><text x="98.4313%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (12 samples, 0.01%)</title><rect x="98.1813%" y="389" width="0.0118%" height="15" fill="rgb(244,103,47)" fg:x="99979" fg:w="12"/><text x="98.4313%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (12 samples, 0.01%)</title><rect x="98.1813%" y="373" width="0.0118%" height="15" fill="rgb(212,211,25)" fg:x="99979" fg:w="12"/><text x="98.4313%" y="383.50"></text></g><g><title>&lt;gpu_alloc::usage::UsageFlags as core::fmt::Debug&gt;::fmt (17 samples, 0.02%)</title><rect x="98.1793%" y="549" width="0.0167%" height="15" fill="rgb(208,63,53)" fg:x="99977" fg:w="17"/><text x="98.4293%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_str (16 samples, 0.02%)</title><rect x="98.1803%" y="533" width="0.0157%" height="15" fill="rgb(213,176,21)" fg:x="99978" fg:w="16"/><text x="98.4303%" y="543.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (15 samples, 0.01%)</title><rect x="98.1813%" y="517" width="0.0147%" height="15" fill="rgb(243,124,12)" fg:x="99979" fg:w="15"/><text x="98.4313%" y="527.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (15 samples, 0.01%)</title><rect x="98.1813%" y="501" width="0.0147%" height="15" fill="rgb(239,2,35)" fg:x="99979" fg:w="15"/><text x="98.4313%" y="511.50"></text></g><g><title>alloc::string::String::push_str (15 samples, 0.01%)</title><rect x="98.1813%" y="485" width="0.0147%" height="15" fill="rgb(253,169,22)" fg:x="99979" fg:w="15"/><text x="98.4313%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (15 samples, 0.01%)</title><rect x="98.1813%" y="469" width="0.0147%" height="15" fill="rgb(254,51,12)" fg:x="99979" fg:w="15"/><text x="98.4313%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (15 samples, 0.01%)</title><rect x="98.1813%" y="453" width="0.0147%" height="15" fill="rgb(244,17,47)" fg:x="99979" fg:w="15"/><text x="98.4313%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (15 samples, 0.01%)</title><rect x="98.1813%" y="437" width="0.0147%" height="15" fill="rgb(251,45,46)" fg:x="99979" fg:w="15"/><text x="98.4313%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (30 samples, 0.03%)</title><rect x="98.1960%" y="437" width="0.0295%" height="15" fill="rgb(223,87,43)" fg:x="99994" fg:w="30"/><text x="98.4460%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (30 samples, 0.03%)</title><rect x="98.1960%" y="421" width="0.0295%" height="15" fill="rgb(230,132,31)" fg:x="99994" fg:w="30"/><text x="98.4460%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.03%)</title><rect x="98.1990%" y="405" width="0.0265%" height="15" fill="rgb(206,99,1)" fg:x="99997" fg:w="27"/><text x="98.4490%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.03%)</title><rect x="98.1990%" y="389" width="0.0265%" height="15" fill="rgb(227,110,25)" fg:x="99997" fg:w="27"/><text x="98.4490%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.02%)</title><rect x="98.2019%" y="373" width="0.0236%" height="15" fill="rgb(217,182,7)" fg:x="100000" fg:w="24"/><text x="98.4519%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (24 samples, 0.02%)</title><rect x="98.2019%" y="357" width="0.0236%" height="15" fill="rgb(250,176,4)" fg:x="100000" fg:w="24"/><text x="98.4519%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (24 samples, 0.02%)</title><rect x="98.2019%" y="341" width="0.0236%" height="15" fill="rgb(244,98,30)" fg:x="100000" fg:w="24"/><text x="98.4519%" y="351.50"></text></g><g><title>alloc::alloc::realloc (24 samples, 0.02%)</title><rect x="98.2019%" y="325" width="0.0236%" height="15" fill="rgb(228,150,42)" fg:x="100000" fg:w="24"/><text x="98.4519%" y="335.50"></text></g><g><title>__rdl_realloc (24 samples, 0.02%)</title><rect x="98.2019%" y="309" width="0.0236%" height="15" fill="rgb(231,91,46)" fg:x="100000" fg:w="24"/><text x="98.4519%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (24 samples, 0.02%)</title><rect x="98.2019%" y="293" width="0.0236%" height="15" fill="rgb(252,161,32)" fg:x="100000" fg:w="24"/><text x="98.4519%" y="303.50"></text></g><g><title>__GI___libc_realloc (24 samples, 0.02%)</title><rect x="98.2019%" y="277" width="0.0236%" height="15" fill="rgb(236,69,41)" fg:x="100000" fg:w="24"/><text x="98.4519%" y="287.50"></text></g><g><title>_int_realloc (22 samples, 0.02%)</title><rect x="98.2039%" y="261" width="0.0216%" height="15" fill="rgb(212,160,3)" fg:x="100002" fg:w="22"/><text x="98.4539%" y="271.50"></text></g><g><title>_int_malloc (15 samples, 0.01%)</title><rect x="98.2108%" y="245" width="0.0147%" height="15" fill="rgb(216,5,50)" fg:x="100009" fg:w="15"/><text x="98.4608%" y="255.50"></text></g><g><title>core::fmt::Formatter::write_str (40 samples, 0.04%)</title><rect x="98.1960%" y="549" width="0.0393%" height="15" fill="rgb(241,138,25)" fg:x="99994" fg:w="40"/><text x="98.4460%" y="559.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (40 samples, 0.04%)</title><rect x="98.1960%" y="533" width="0.0393%" height="15" fill="rgb(239,42,18)" fg:x="99994" fg:w="40"/><text x="98.4460%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (40 samples, 0.04%)</title><rect x="98.1960%" y="517" width="0.0393%" height="15" fill="rgb(239,40,7)" fg:x="99994" fg:w="40"/><text x="98.4460%" y="527.50"></text></g><g><title>alloc::string::String::push_str (40 samples, 0.04%)</title><rect x="98.1960%" y="501" width="0.0393%" height="15" fill="rgb(239,11,31)" fg:x="99994" fg:w="40"/><text x="98.4460%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (40 samples, 0.04%)</title><rect x="98.1960%" y="485" width="0.0393%" height="15" fill="rgb(224,77,40)" fg:x="99994" fg:w="40"/><text x="98.4460%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (40 samples, 0.04%)</title><rect x="98.1960%" y="469" width="0.0393%" height="15" fill="rgb(226,15,5)" fg:x="99994" fg:w="40"/><text x="98.4460%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (40 samples, 0.04%)</title><rect x="98.1960%" y="453" width="0.0393%" height="15" fill="rgb(254,188,5)" fg:x="99994" fg:w="40"/><text x="98.4460%" y="463.50"></text></g><g><title>&lt;gpu_alloc::Request as core::fmt::Debug&gt;::fmt (90 samples, 0.09%)</title><rect x="98.1479%" y="613" width="0.0884%" height="15" fill="rgb(241,148,52)" fg:x="99945" fg:w="90"/><text x="98.3979%" y="623.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (78 samples, 0.08%)</title><rect x="98.1597%" y="597" width="0.0766%" height="15" fill="rgb(251,48,36)" fg:x="99957" fg:w="78"/><text x="98.4097%" y="607.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (74 samples, 0.07%)</title><rect x="98.1636%" y="581" width="0.0727%" height="15" fill="rgb(243,83,13)" fg:x="99961" fg:w="74"/><text x="98.4136%" y="591.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (73 samples, 0.07%)</title><rect x="98.1646%" y="565" width="0.0717%" height="15" fill="rgb(210,105,0)" fg:x="99962" fg:w="73"/><text x="98.4146%" y="575.50"></text></g><g><title>&lt;bevy_egui::egui_node::EguiNode as bevy_render::render_graph::node::Node&gt;::update (268 samples, 0.26%)</title><rect x="97.9741%" y="1093" width="0.2632%" height="15" fill="rgb(239,60,36)" fg:x="99768" fg:w="268"/><text x="98.2241%" y="1103.50"></text></g><g><title>bevy_egui::egui_node::EguiNode::update_buffers (245 samples, 0.24%)</title><rect x="97.9967%" y="1077" width="0.2406%" height="15" fill="rgb(210,20,0)" fg:x="99791" fg:w="245"/><text x="98.2467%" y="1087.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer_with_data (245 samples, 0.24%)</title><rect x="97.9967%" y="1061" width="0.2406%" height="15" fill="rgb(244,26,53)" fg:x="99791" fg:w="245"/><text x="98.2467%" y="1071.50"></text></g><g><title>&lt;wgpu::Device as wgpu::util::device::DeviceExt&gt;::create_buffer_init (245 samples, 0.24%)</title><rect x="97.9967%" y="1045" width="0.2406%" height="15" fill="rgb(240,100,49)" fg:x="99791" fg:w="245"/><text x="98.2467%" y="1055.50"></text></g><g><title>wgpu::Device::create_buffer (226 samples, 0.22%)</title><rect x="98.0153%" y="1029" width="0.2219%" height="15" fill="rgb(250,46,45)" fg:x="99810" fg:w="226"/><text x="98.2653%" y="1039.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (226 samples, 0.22%)</title><rect x="98.0153%" y="1013" width="0.2219%" height="15" fill="rgb(220,181,29)" fg:x="99810" fg:w="226"/><text x="98.2653%" y="1023.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (226 samples, 0.22%)</title><rect x="98.0153%" y="997" width="0.2219%" height="15" fill="rgb(213,137,33)" fg:x="99810" fg:w="226"/><text x="98.2653%" y="1007.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (226 samples, 0.22%)</title><rect x="98.0153%" y="981" width="0.2219%" height="15" fill="rgb(213,27,48)" fg:x="99810" fg:w="226"/><text x="98.2653%" y="991.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (226 samples, 0.22%)</title><rect x="98.0153%" y="965" width="0.2219%" height="15" fill="rgb(245,180,39)" fg:x="99810" fg:w="226"/><text x="98.2653%" y="975.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (226 samples, 0.22%)</title><rect x="98.0153%" y="949" width="0.2219%" height="15" fill="rgb(212,158,42)" fg:x="99810" fg:w="226"/><text x="98.2653%" y="959.50"></text></g><g><title>tracing::span::Span::new (101 samples, 0.10%)</title><rect x="98.1381%" y="933" width="0.0992%" height="15" fill="rgb(228,193,18)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="943.50"></text></g><g><title>tracing_core::dispatcher::get_default (101 samples, 0.10%)</title><rect x="98.1381%" y="917" width="0.0992%" height="15" fill="rgb(245,172,29)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="927.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (101 samples, 0.10%)</title><rect x="98.1381%" y="901" width="0.0992%" height="15" fill="rgb(207,98,24)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="911.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (101 samples, 0.10%)</title><rect x="98.1381%" y="885" width="0.0992%" height="15" fill="rgb(249,92,26)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="895.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (101 samples, 0.10%)</title><rect x="98.1381%" y="869" width="0.0992%" height="15" fill="rgb(217,176,26)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="879.50"></text></g><g><title>tracing::span::Span::new_with (101 samples, 0.10%)</title><rect x="98.1381%" y="853" width="0.0992%" height="15" fill="rgb(221,8,39)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="863.50"></text></g><g><title>tracing::span::Span::make_with (101 samples, 0.10%)</title><rect x="98.1381%" y="837" width="0.0992%" height="15" fill="rgb(208,90,18)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="847.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (101 samples, 0.10%)</title><rect x="98.1381%" y="821" width="0.0992%" height="15" fill="rgb(207,202,30)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (101 samples, 0.10%)</title><rect x="98.1381%" y="805" width="0.0992%" height="15" fill="rgb(231,124,22)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (101 samples, 0.10%)</title><rect x="98.1381%" y="789" width="0.0992%" height="15" fill="rgb(206,15,5)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="799.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (101 samples, 0.10%)</title><rect x="98.1381%" y="773" width="0.0992%" height="15" fill="rgb(239,16,52)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="783.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (101 samples, 0.10%)</title><rect x="98.1381%" y="757" width="0.0992%" height="15" fill="rgb(245,213,29)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="767.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (101 samples, 0.10%)</title><rect x="98.1381%" y="741" width="0.0992%" height="15" fill="rgb(213,203,36)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="751.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (101 samples, 0.10%)</title><rect x="98.1381%" y="725" width="0.0992%" height="15" fill="rgb(209,55,18)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="735.50"></text></g><g><title>tracing_core::span::Attributes::record (101 samples, 0.10%)</title><rect x="98.1381%" y="709" width="0.0992%" height="15" fill="rgb(207,133,49)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="719.50"></text></g><g><title>tracing_core::field::ValueSet::record (101 samples, 0.10%)</title><rect x="98.1381%" y="693" width="0.0992%" height="15" fill="rgb(240,33,46)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="703.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (101 samples, 0.10%)</title><rect x="98.1381%" y="677" width="0.0992%" height="15" fill="rgb(212,35,2)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="687.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (101 samples, 0.10%)</title><rect x="98.1381%" y="661" width="0.0992%" height="15" fill="rgb(231,119,28)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="671.50"></text></g><g><title>core::fmt::Write::write_fmt (101 samples, 0.10%)</title><rect x="98.1381%" y="645" width="0.0992%" height="15" fill="rgb(252,178,7)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="655.50"></text></g><g><title>core::fmt::write (101 samples, 0.10%)</title><rect x="98.1381%" y="629" width="0.0992%" height="15" fill="rgb(251,91,4)" fg:x="99935" fg:w="101"/><text x="98.3881%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (29 samples, 0.03%)</title><rect x="98.3679%" y="853" width="0.0285%" height="15" fill="rgb(233,122,19)" fg:x="100169" fg:w="29"/><text x="98.6179%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (69 samples, 0.07%)</title><rect x="98.3345%" y="869" width="0.0678%" height="15" fill="rgb(231,208,46)" fg:x="100135" fg:w="69"/><text x="98.5845%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (119 samples, 0.12%)</title><rect x="98.2962%" y="885" width="0.1169%" height="15" fill="rgb(243,15,41)" fg:x="100096" fg:w="119"/><text x="98.5462%" y="895.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (167 samples, 0.16%)</title><rect x="98.2520%" y="1045" width="0.1640%" height="15" fill="rgb(210,32,43)" fg:x="100051" fg:w="167"/><text x="98.5020%" y="1055.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (167 samples, 0.16%)</title><rect x="98.2520%" y="1029" width="0.1640%" height="15" fill="rgb(222,177,15)" fg:x="100051" fg:w="167"/><text x="98.5020%" y="1039.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (167 samples, 0.16%)</title><rect x="98.2520%" y="1013" width="0.1640%" height="15" fill="rgb(244,121,34)" fg:x="100051" fg:w="167"/><text x="98.5020%" y="1023.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (167 samples, 0.16%)</title><rect x="98.2520%" y="997" width="0.1640%" height="15" fill="rgb(234,138,4)" fg:x="100051" fg:w="167"/><text x="98.5020%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (167 samples, 0.16%)</title><rect x="98.2520%" y="981" width="0.1640%" height="15" fill="rgb(240,97,48)" fg:x="100051" fg:w="167"/><text x="98.5020%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (167 samples, 0.16%)</title><rect x="98.2520%" y="965" width="0.1640%" height="15" fill="rgb(237,65,54)" fg:x="100051" fg:w="167"/><text x="98.5020%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (167 samples, 0.16%)</title><rect x="98.2520%" y="949" width="0.1640%" height="15" fill="rgb(214,25,24)" fg:x="100051" fg:w="167"/><text x="98.5020%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (165 samples, 0.16%)</title><rect x="98.2540%" y="933" width="0.1620%" height="15" fill="rgb(213,5,3)" fg:x="100053" fg:w="165"/><text x="98.5040%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (164 samples, 0.16%)</title><rect x="98.2550%" y="917" width="0.1611%" height="15" fill="rgb(219,81,29)" fg:x="100054" fg:w="164"/><text x="98.5050%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (150 samples, 0.15%)</title><rect x="98.2687%" y="901" width="0.1473%" height="15" fill="rgb(220,43,48)" fg:x="100068" fg:w="150"/><text x="98.5187%" y="911.50"></text></g><g><title>__strchrnul_avx2 (17 samples, 0.02%)</title><rect x="98.4572%" y="821" width="0.0167%" height="15" fill="rgb(239,157,2)" fg:x="100260" fg:w="17"/><text x="98.7072%" y="831.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_fence (66 samples, 0.06%)</title><rect x="98.4160%" y="1045" width="0.0648%" height="15" fill="rgb(213,104,43)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="1055.50"></text></g><g><title>ash::device::DeviceV1_0::create_fence (66 samples, 0.06%)</title><rect x="98.4160%" y="1029" width="0.0648%" height="15" fill="rgb(237,84,9)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="1039.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_fence (66 samples, 0.06%)</title><rect x="98.4160%" y="1013" width="0.0648%" height="15" fill="rgb(252,6,33)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (66 samples, 0.06%)</title><rect x="98.4160%" y="997" width="0.0648%" height="15" fill="rgb(251,172,22)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (66 samples, 0.06%)</title><rect x="98.4160%" y="981" width="0.0648%" height="15" fill="rgb(244,91,53)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (66 samples, 0.06%)</title><rect x="98.4160%" y="965" width="0.0648%" height="15" fill="rgb(219,29,30)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (66 samples, 0.06%)</title><rect x="98.4160%" y="949" width="0.0648%" height="15" fill="rgb(213,3,15)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (66 samples, 0.06%)</title><rect x="98.4160%" y="933" width="0.0648%" height="15" fill="rgb(208,25,28)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (66 samples, 0.06%)</title><rect x="98.4160%" y="917" width="0.0648%" height="15" fill="rgb(252,144,25)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (66 samples, 0.06%)</title><rect x="98.4160%" y="901" width="0.0648%" height="15" fill="rgb(226,220,25)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (66 samples, 0.06%)</title><rect x="98.4160%" y="885" width="0.0648%" height="15" fill="rgb(212,131,28)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="895.50"></text></g><g><title>__GI___snprintf (66 samples, 0.06%)</title><rect x="98.4160%" y="869" width="0.0648%" height="15" fill="rgb(219,143,52)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="879.50"></text></g><g><title>__vsnprintf_internal (66 samples, 0.06%)</title><rect x="98.4160%" y="853" width="0.0648%" height="15" fill="rgb(215,56,7)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="863.50"></text></g><g><title>__vfprintf_internal (66 samples, 0.06%)</title><rect x="98.4160%" y="837" width="0.0648%" height="15" fill="rgb(239,59,51)" fg:x="100218" fg:w="66"/><text x="98.6660%" y="847.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (46 samples, 0.05%)</title><rect x="98.4808%" y="1013" width="0.0452%" height="15" fill="rgb(209,215,4)" fg:x="100284" fg:w="46"/><text x="98.7308%" y="1023.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (46 samples, 0.05%)</title><rect x="98.4808%" y="997" width="0.0452%" height="15" fill="rgb(221,118,39)" fg:x="100284" fg:w="46"/><text x="98.7308%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (46 samples, 0.05%)</title><rect x="98.4808%" y="981" width="0.0452%" height="15" fill="rgb(236,6,44)" fg:x="100284" fg:w="46"/><text x="98.7308%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (37 samples, 0.04%)</title><rect x="98.4897%" y="965" width="0.0363%" height="15" fill="rgb(216,122,9)" fg:x="100293" fg:w="37"/><text x="98.7397%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (23 samples, 0.02%)</title><rect x="98.5034%" y="949" width="0.0226%" height="15" fill="rgb(244,134,42)" fg:x="100307" fg:w="23"/><text x="98.7534%" y="959.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (84 samples, 0.08%)</title><rect x="98.4808%" y="1045" width="0.0825%" height="15" fill="rgb(209,189,35)" fg:x="100284" fg:w="84"/><text x="98.7308%" y="1055.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (84 samples, 0.08%)</title><rect x="98.4808%" y="1029" width="0.0825%" height="15" fill="rgb(250,47,36)" fg:x="100284" fg:w="84"/><text x="98.7308%" y="1039.50"></text></g><g><title>gfx_backend_vulkan::command::destructure_barriers (38 samples, 0.04%)</title><rect x="98.5260%" y="1013" width="0.0373%" height="15" fill="rgb(252,112,4)" fg:x="100330" fg:w="38"/><text x="98.7760%" y="1023.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (13 samples, 0.01%)</title><rect x="98.5505%" y="997" width="0.0128%" height="15" fill="rgb(221,79,51)" fg:x="100355" fg:w="13"/><text x="98.8005%" y="1007.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::reserve (11 samples, 0.01%)</title><rect x="98.5525%" y="981" width="0.0108%" height="15" fill="rgb(232,65,53)" fg:x="100357" fg:w="11"/><text x="98.8025%" y="991.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::try_reserve (11 samples, 0.01%)</title><rect x="98.5525%" y="965" width="0.0108%" height="15" fill="rgb(211,37,7)" fg:x="100357" fg:w="11"/><text x="98.8025%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="98.5888%" y="373" width="0.0108%" height="15" fill="rgb(234,221,18)" fg:x="100394" fg:w="11"/><text x="98.8388%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11 samples, 0.01%)</title><rect x="98.5888%" y="357" width="0.0108%" height="15" fill="rgb(220,158,26)" fg:x="100394" fg:w="11"/><text x="98.8388%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.01%)</title><rect x="98.5888%" y="341" width="0.0108%" height="15" fill="rgb(220,70,6)" fg:x="100394" fg:w="11"/><text x="98.8388%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11 samples, 0.01%)</title><rect x="98.5888%" y="325" width="0.0108%" height="15" fill="rgb(250,39,48)" fg:x="100394" fg:w="11"/><text x="98.8388%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (11 samples, 0.01%)</title><rect x="98.5888%" y="309" width="0.0108%" height="15" fill="rgb(206,40,27)" fg:x="100394" fg:w="11"/><text x="98.8388%" y="319.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (11 samples, 0.01%)</title><rect x="98.5888%" y="293" width="0.0108%" height="15" fill="rgb(247,80,36)" fg:x="100394" fg:w="11"/><text x="98.8388%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (11 samples, 0.01%)</title><rect x="98.5888%" y="277" width="0.0108%" height="15" fill="rgb(222,9,20)" fg:x="100394" fg:w="11"/><text x="98.8388%" y="287.50"></text></g><g><title>alloc::alloc::realloc (11 samples, 0.01%)</title><rect x="98.5888%" y="261" width="0.0108%" height="15" fill="rgb(217,26,45)" fg:x="100394" fg:w="11"/><text x="98.8388%" y="271.50"></text></g><g><title>__rdl_realloc (11 samples, 0.01%)</title><rect x="98.5888%" y="245" width="0.0108%" height="15" fill="rgb(221,67,14)" fg:x="100394" fg:w="11"/><text x="98.8388%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (11 samples, 0.01%)</title><rect x="98.5888%" y="229" width="0.0108%" height="15" fill="rgb(248,100,24)" fg:x="100394" fg:w="11"/><text x="98.8388%" y="239.50"></text></g><g><title>__GI___libc_realloc (11 samples, 0.01%)</title><rect x="98.5888%" y="213" width="0.0108%" height="15" fill="rgb(230,187,16)" fg:x="100394" fg:w="11"/><text x="98.8388%" y="223.50"></text></g><g><title>core::fmt::Formatter::debug_struct (12 samples, 0.01%)</title><rect x="98.5888%" y="517" width="0.0118%" height="15" fill="rgb(205,108,13)" fg:x="100394" fg:w="12"/><text x="98.8388%" y="527.50"></text></g><g><title>core::fmt::builders::debug_struct_new (12 samples, 0.01%)</title><rect x="98.5888%" y="501" width="0.0118%" height="15" fill="rgb(235,71,51)" fg:x="100394" fg:w="12"/><text x="98.8388%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_str (12 samples, 0.01%)</title><rect x="98.5888%" y="485" width="0.0118%" height="15" fill="rgb(251,172,48)" fg:x="100394" fg:w="12"/><text x="98.8388%" y="495.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.01%)</title><rect x="98.5888%" y="469" width="0.0118%" height="15" fill="rgb(240,96,49)" fg:x="100394" fg:w="12"/><text x="98.8388%" y="479.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.01%)</title><rect x="98.5888%" y="453" width="0.0118%" height="15" fill="rgb(235,46,36)" fg:x="100394" fg:w="12"/><text x="98.8388%" y="463.50"></text></g><g><title>alloc::string::String::push_str (12 samples, 0.01%)</title><rect x="98.5888%" y="437" width="0.0118%" height="15" fill="rgb(244,3,49)" fg:x="100394" fg:w="12"/><text x="98.8388%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.01%)</title><rect x="98.5888%" y="421" width="0.0118%" height="15" fill="rgb(206,78,54)" fg:x="100394" fg:w="12"/><text x="98.8388%" y="431.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="98.5888%" y="405" width="0.0118%" height="15" fill="rgb(208,85,42)" fg:x="100394" fg:w="12"/><text x="98.8388%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.01%)</title><rect x="98.5888%" y="389" width="0.0118%" height="15" fill="rgb(219,196,21)" fg:x="100394" fg:w="12"/><text x="98.8388%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::fmt::Debug&gt;::fmt (16 samples, 0.02%)</title><rect x="98.5888%" y="549" width="0.0157%" height="15" fill="rgb(238,19,9)" fg:x="100394" fg:w="16"/><text x="98.8388%" y="559.50"></text></g><g><title>&lt;gfx_backend_vulkan::native::Memory as core::fmt::Debug&gt;::fmt (16 samples, 0.02%)</title><rect x="98.5888%" y="533" width="0.0157%" height="15" fill="rgb(206,86,13)" fg:x="100394" fg:w="16"/><text x="98.8388%" y="543.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (22 samples, 0.02%)</title><rect x="98.5849%" y="565" width="0.0216%" height="15" fill="rgb(214,123,40)" fg:x="100390" fg:w="22"/><text x="98.8349%" y="575.50"></text></g><g><title>&lt;gpu_alloc::buddy::BuddyBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (48 samples, 0.05%)</title><rect x="98.5741%" y="629" width="0.0471%" height="15" fill="rgb(243,53,5)" fg:x="100379" fg:w="48"/><text x="98.8241%" y="639.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (39 samples, 0.04%)</title><rect x="98.5829%" y="613" width="0.0383%" height="15" fill="rgb(254,186,31)" fg:x="100388" fg:w="39"/><text x="98.8329%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (38 samples, 0.04%)</title><rect x="98.5839%" y="597" width="0.0373%" height="15" fill="rgb(221,216,25)" fg:x="100389" fg:w="38"/><text x="98.8339%" y="607.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (37 samples, 0.04%)</title><rect x="98.5849%" y="581" width="0.0363%" height="15" fill="rgb(248,107,42)" fg:x="100390" fg:w="37"/><text x="98.8349%" y="591.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (17 samples, 0.02%)</title><rect x="98.6281%" y="613" width="0.0167%" height="15" fill="rgb(221,85,43)" fg:x="100434" fg:w="17"/><text x="98.8781%" y="623.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (17 samples, 0.02%)</title><rect x="98.6281%" y="597" width="0.0167%" height="15" fill="rgb(225,34,24)" fg:x="100434" fg:w="17"/><text x="98.8781%" y="607.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (17 samples, 0.02%)</title><rect x="98.6281%" y="581" width="0.0167%" height="15" fill="rgb(211,119,1)" fg:x="100434" fg:w="17"/><text x="98.8781%" y="591.50"></text></g><g><title>core::fmt::Write::write_fmt (80 samples, 0.08%)</title><rect x="98.5672%" y="661" width="0.0786%" height="15" fill="rgb(254,216,46)" fg:x="100372" fg:w="80"/><text x="98.8172%" y="671.50"></text></g><g><title>core::fmt::write (80 samples, 0.08%)</title><rect x="98.5672%" y="645" width="0.0786%" height="15" fill="rgb(238,11,38)" fg:x="100372" fg:w="80"/><text x="98.8172%" y="655.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (25 samples, 0.02%)</title><rect x="98.6212%" y="629" width="0.0246%" height="15" fill="rgb(233,50,15)" fg:x="100427" fg:w="25"/><text x="98.8712%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (81 samples, 0.08%)</title><rect x="98.5672%" y="677" width="0.0795%" height="15" fill="rgb(217,181,29)" fg:x="100372" fg:w="81"/><text x="98.8172%" y="687.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (94 samples, 0.09%)</title><rect x="98.5633%" y="965" width="0.0923%" height="15" fill="rgb(214,56,3)" fg:x="100368" fg:w="94"/><text x="98.8133%" y="975.50"></text></g><g><title>tracing::span::Span::new (90 samples, 0.09%)</title><rect x="98.5672%" y="949" width="0.0884%" height="15" fill="rgb(230,69,45)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="959.50"></text></g><g><title>tracing_core::dispatcher::get_default (90 samples, 0.09%)</title><rect x="98.5672%" y="933" width="0.0884%" height="15" fill="rgb(224,201,50)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (90 samples, 0.09%)</title><rect x="98.5672%" y="917" width="0.0884%" height="15" fill="rgb(217,228,18)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="927.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (90 samples, 0.09%)</title><rect x="98.5672%" y="901" width="0.0884%" height="15" fill="rgb(239,33,44)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="911.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (90 samples, 0.09%)</title><rect x="98.5672%" y="885" width="0.0884%" height="15" fill="rgb(248,210,23)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="895.50"></text></g><g><title>tracing::span::Span::new_with (90 samples, 0.09%)</title><rect x="98.5672%" y="869" width="0.0884%" height="15" fill="rgb(253,135,8)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="879.50"></text></g><g><title>tracing::span::Span::make_with (90 samples, 0.09%)</title><rect x="98.5672%" y="853" width="0.0884%" height="15" fill="rgb(217,98,21)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="863.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (90 samples, 0.09%)</title><rect x="98.5672%" y="837" width="0.0884%" height="15" fill="rgb(253,130,21)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (90 samples, 0.09%)</title><rect x="98.5672%" y="821" width="0.0884%" height="15" fill="rgb(207,81,54)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (90 samples, 0.09%)</title><rect x="98.5672%" y="805" width="0.0884%" height="15" fill="rgb(232,48,33)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="815.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (90 samples, 0.09%)</title><rect x="98.5672%" y="789" width="0.0884%" height="15" fill="rgb(211,9,35)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="799.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (90 samples, 0.09%)</title><rect x="98.5672%" y="773" width="0.0884%" height="15" fill="rgb(205,152,21)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="783.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (90 samples, 0.09%)</title><rect x="98.5672%" y="757" width="0.0884%" height="15" fill="rgb(249,21,27)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="767.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (90 samples, 0.09%)</title><rect x="98.5672%" y="741" width="0.0884%" height="15" fill="rgb(252,29,24)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="751.50"></text></g><g><title>tracing_core::span::Attributes::record (90 samples, 0.09%)</title><rect x="98.5672%" y="725" width="0.0884%" height="15" fill="rgb(230,130,50)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="735.50"></text></g><g><title>tracing_core::field::ValueSet::record (90 samples, 0.09%)</title><rect x="98.5672%" y="709" width="0.0884%" height="15" fill="rgb(239,144,14)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="719.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (90 samples, 0.09%)</title><rect x="98.5672%" y="693" width="0.0884%" height="15" fill="rgb(227,111,50)" fg:x="100372" fg:w="90"/><text x="98.8172%" y="703.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (18 samples, 0.02%)</title><rect x="98.6694%" y="517" width="0.0177%" height="15" fill="rgb(254,84,20)" fg:x="100476" fg:w="18"/><text x="98.9194%" y="527.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlockFlavor&lt;M&gt; as core::fmt::Debug&gt;::fmt (34 samples, 0.03%)</title><rect x="98.6664%" y="581" width="0.0334%" height="15" fill="rgb(232,90,48)" fg:x="100473" fg:w="34"/><text x="98.9164%" y="591.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (32 samples, 0.03%)</title><rect x="98.6684%" y="565" width="0.0314%" height="15" fill="rgb(253,63,47)" fg:x="100475" fg:w="32"/><text x="98.9184%" y="575.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (32 samples, 0.03%)</title><rect x="98.6684%" y="549" width="0.0314%" height="15" fill="rgb(251,146,35)" fg:x="100475" fg:w="32"/><text x="98.9184%" y="559.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (32 samples, 0.03%)</title><rect x="98.6684%" y="533" width="0.0314%" height="15" fill="rgb(229,192,35)" fg:x="100475" fg:w="32"/><text x="98.9184%" y="543.50"></text></g><g><title>core::fmt::Formatter::write_str (12 samples, 0.01%)</title><rect x="98.6880%" y="517" width="0.0118%" height="15" fill="rgb(225,68,9)" fg:x="100495" fg:w="12"/><text x="98.9380%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (12 samples, 0.01%)</title><rect x="98.6880%" y="501" width="0.0118%" height="15" fill="rgb(214,97,34)" fg:x="100495" fg:w="12"/><text x="98.9380%" y="511.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (12 samples, 0.01%)</title><rect x="98.6880%" y="485" width="0.0118%" height="15" fill="rgb(253,31,26)" fg:x="100495" fg:w="12"/><text x="98.9380%" y="495.50"></text></g><g><title>alloc::string::String::push_str (12 samples, 0.01%)</title><rect x="98.6880%" y="469" width="0.0118%" height="15" fill="rgb(225,151,47)" fg:x="100495" fg:w="12"/><text x="98.9380%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (12 samples, 0.01%)</title><rect x="98.6880%" y="453" width="0.0118%" height="15" fill="rgb(206,185,9)" fg:x="100495" fg:w="12"/><text x="98.9380%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (12 samples, 0.01%)</title><rect x="98.6880%" y="437" width="0.0118%" height="15" fill="rgb(249,65,17)" fg:x="100495" fg:w="12"/><text x="98.9380%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (12 samples, 0.01%)</title><rect x="98.6880%" y="421" width="0.0118%" height="15" fill="rgb(220,110,10)" fg:x="100495" fg:w="12"/><text x="98.9380%" y="431.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (155 samples, 0.15%)</title><rect x="98.5633%" y="1029" width="0.1522%" height="15" fill="rgb(222,198,49)" fg:x="100368" fg:w="155"/><text x="98.8133%" y="1039.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (155 samples, 0.15%)</title><rect x="98.5633%" y="1013" width="0.1522%" height="15" fill="rgb(239,81,13)" fg:x="100368" fg:w="155"/><text x="98.8133%" y="1023.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (155 samples, 0.15%)</title><rect x="98.5633%" y="997" width="0.1522%" height="15" fill="rgb(216,128,11)" fg:x="100368" fg:w="155"/><text x="98.8133%" y="1007.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (155 samples, 0.15%)</title><rect x="98.5633%" y="981" width="0.1522%" height="15" fill="rgb(247,156,8)" fg:x="100368" fg:w="155"/><text x="98.8133%" y="991.50"></text></g><g><title>tracing::span::Span::new (61 samples, 0.06%)</title><rect x="98.6556%" y="965" width="0.0599%" height="15" fill="rgb(219,173,1)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="975.50"></text></g><g><title>tracing_core::dispatcher::get_default (61 samples, 0.06%)</title><rect x="98.6556%" y="949" width="0.0599%" height="15" fill="rgb(227,42,24)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (61 samples, 0.06%)</title><rect x="98.6556%" y="933" width="0.0599%" height="15" fill="rgb(253,219,50)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="943.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (61 samples, 0.06%)</title><rect x="98.6556%" y="917" width="0.0599%" height="15" fill="rgb(215,191,54)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="927.50"></text></g><g><title>tracing::span::Span::new::{{closure}} (61 samples, 0.06%)</title><rect x="98.6556%" y="901" width="0.0599%" height="15" fill="rgb(238,83,12)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="911.50"></text></g><g><title>tracing::span::Span::new_with (61 samples, 0.06%)</title><rect x="98.6556%" y="885" width="0.0599%" height="15" fill="rgb(205,124,9)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="895.50"></text></g><g><title>tracing::span::Span::make_with (61 samples, 0.06%)</title><rect x="98.6556%" y="869" width="0.0599%" height="15" fill="rgb(253,174,7)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="879.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (61 samples, 0.06%)</title><rect x="98.6556%" y="853" width="0.0599%" height="15" fill="rgb(206,134,49)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Send+core::marker::Sync&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (61 samples, 0.06%)</title><rect x="98.6556%" y="837" width="0.0599%" height="15" fill="rgb(221,89,20)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="847.50"></text></g><g><title>&lt;tracing_subscriber::layer::layered::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (61 samples, 0.06%)</title><rect x="98.6556%" y="821" width="0.0599%" height="15" fill="rgb(240,205,13)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="831.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (61 samples, 0.06%)</title><rect x="98.6556%" y="805" width="0.0599%" height="15" fill="rgb(237,174,32)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="815.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (61 samples, 0.06%)</title><rect x="98.6556%" y="789" width="0.0599%" height="15" fill="rgb(226,12,15)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="799.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (61 samples, 0.06%)</title><rect x="98.6556%" y="773" width="0.0599%" height="15" fill="rgb(245,160,52)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="783.50"></text></g><g><title>&lt;tracing_core::span::Attributes as tracing_subscriber::field::RecordFields&gt;::record (61 samples, 0.06%)</title><rect x="98.6556%" y="757" width="0.0599%" height="15" fill="rgb(253,80,21)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="767.50"></text></g><g><title>tracing_core::span::Attributes::record (61 samples, 0.06%)</title><rect x="98.6556%" y="741" width="0.0599%" height="15" fill="rgb(231,225,22)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="751.50"></text></g><g><title>tracing_core::field::ValueSet::record (61 samples, 0.06%)</title><rect x="98.6556%" y="725" width="0.0599%" height="15" fill="rgb(253,185,12)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="735.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (61 samples, 0.06%)</title><rect x="98.6556%" y="709" width="0.0599%" height="15" fill="rgb(234,197,21)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (61 samples, 0.06%)</title><rect x="98.6556%" y="693" width="0.0599%" height="15" fill="rgb(210,47,30)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="703.50"></text></g><g><title>core::fmt::Write::write_fmt (61 samples, 0.06%)</title><rect x="98.6556%" y="677" width="0.0599%" height="15" fill="rgb(246,139,27)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="687.50"></text></g><g><title>core::fmt::write (61 samples, 0.06%)</title><rect x="98.6556%" y="661" width="0.0599%" height="15" fill="rgb(226,130,16)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="671.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (61 samples, 0.06%)</title><rect x="98.6556%" y="645" width="0.0599%" height="15" fill="rgb(237,208,20)" fg:x="100462" fg:w="61"/><text x="98.9056%" y="655.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (60 samples, 0.06%)</title><rect x="98.6566%" y="629" width="0.0589%" height="15" fill="rgb(245,186,28)" fg:x="100463" fg:w="60"/><text x="98.9066%" y="639.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (60 samples, 0.06%)</title><rect x="98.6566%" y="613" width="0.0589%" height="15" fill="rgb(238,105,39)" fg:x="100463" fg:w="60"/><text x="98.9066%" y="623.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (60 samples, 0.06%)</title><rect x="98.6566%" y="597" width="0.0589%" height="15" fill="rgb(253,228,11)" fg:x="100463" fg:w="60"/><text x="98.9066%" y="607.50"></text></g><g><title>core::fmt::Formatter::write_str (16 samples, 0.02%)</title><rect x="98.6998%" y="581" width="0.0157%" height="15" fill="rgb(224,136,38)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (16 samples, 0.02%)</title><rect x="98.6998%" y="565" width="0.0157%" height="15" fill="rgb(211,3,25)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (16 samples, 0.02%)</title><rect x="98.6998%" y="549" width="0.0157%" height="15" fill="rgb(238,66,34)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="559.50"></text></g><g><title>alloc::string::String::push_str (16 samples, 0.02%)</title><rect x="98.6998%" y="533" width="0.0157%" height="15" fill="rgb(223,188,11)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (16 samples, 0.02%)</title><rect x="98.6998%" y="517" width="0.0157%" height="15" fill="rgb(221,10,35)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="527.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (16 samples, 0.02%)</title><rect x="98.6998%" y="501" width="0.0157%" height="15" fill="rgb(223,18,44)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (16 samples, 0.02%)</title><rect x="98.6998%" y="485" width="0.0157%" height="15" fill="rgb(220,97,41)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="98.6998%" y="469" width="0.0157%" height="15" fill="rgb(206,95,45)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.02%)</title><rect x="98.6998%" y="453" width="0.0157%" height="15" fill="rgb(209,96,13)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.02%)</title><rect x="98.6998%" y="437" width="0.0157%" height="15" fill="rgb(237,39,34)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.02%)</title><rect x="98.6998%" y="421" width="0.0157%" height="15" fill="rgb(213,49,47)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (16 samples, 0.02%)</title><rect x="98.6998%" y="405" width="0.0157%" height="15" fill="rgb(205,107,27)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.02%)</title><rect x="98.6998%" y="389" width="0.0157%" height="15" fill="rgb(212,142,9)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.02%)</title><rect x="98.6998%" y="373" width="0.0157%" height="15" fill="rgb(226,182,0)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="383.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.02%)</title><rect x="98.6998%" y="357" width="0.0157%" height="15" fill="rgb(231,3,53)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="367.50"></text></g><g><title>__rdl_realloc (16 samples, 0.02%)</title><rect x="98.6998%" y="341" width="0.0157%" height="15" fill="rgb(246,111,28)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (16 samples, 0.02%)</title><rect x="98.6998%" y="325" width="0.0157%" height="15" fill="rgb(254,183,7)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="335.50"></text></g><g><title>__GI___libc_realloc (16 samples, 0.02%)</title><rect x="98.6998%" y="309" width="0.0157%" height="15" fill="rgb(247,177,28)" fg:x="100507" fg:w="16"/><text x="98.9498%" y="319.50"></text></g><g><title>_int_realloc (14 samples, 0.01%)</title><rect x="98.7018%" y="293" width="0.0137%" height="15" fill="rgb(244,43,1)" fg:x="100509" fg:w="14"/><text x="98.9518%" y="303.50"></text></g><g><title>_int_malloc (11 samples, 0.01%)</title><rect x="98.7047%" y="277" width="0.0108%" height="15" fill="rgb(207,2,35)" fg:x="100512" fg:w="11"/><text x="98.9547%" y="287.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (157 samples, 0.15%)</title><rect x="98.5633%" y="1045" width="0.1542%" height="15" fill="rgb(213,83,22)" fg:x="100368" fg:w="157"/><text x="98.8133%" y="1055.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1,002 samples, 0.98%)</title><rect x="97.7463%" y="1317" width="0.9840%" height="15" fill="rgb(246,212,13)" fg:x="99536" fg:w="1002"/><text x="97.9963%" y="1327.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1,002 samples, 0.98%)</title><rect x="97.7463%" y="1301" width="0.9840%" height="15" fill="rgb(213,127,46)" fg:x="99536" fg:w="1002"/><text x="97.9963%" y="1311.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (1,002 samples, 0.98%)</title><rect x="97.7463%" y="1285" width="0.9840%" height="15" fill="rgb(219,215,39)" fg:x="99536" fg:w="1002"/><text x="97.9963%" y="1295.50"></text></g><g><title>bevy_app::app::App::update (1,002 samples, 0.98%)</title><rect x="97.7463%" y="1269" width="0.9840%" height="15" fill="rgb(227,99,17)" fg:x="99536" fg:w="1002"/><text x="97.9963%" y="1279.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1,002 samples, 0.98%)</title><rect x="97.7463%" y="1253" width="0.9840%" height="15" fill="rgb(208,155,18)" fg:x="99536" fg:w="1002"/><text x="97.9963%" y="1263.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1,002 samples, 0.98%)</title><rect x="97.7463%" y="1237" width="0.9840%" height="15" fill="rgb(223,204,38)" fg:x="99536" fg:w="1002"/><text x="97.9963%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1,002 samples, 0.98%)</title><rect x="97.7463%" y="1221" width="0.9840%" height="15" fill="rgb(212,114,21)" fg:x="99536" fg:w="1002"/><text x="97.9963%" y="1231.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (999 samples, 0.98%)</title><rect x="97.7492%" y="1205" width="0.9810%" height="15" fill="rgb(250,74,13)" fg:x="99539" fg:w="999"/><text x="97.9992%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (999 samples, 0.98%)</title><rect x="97.7492%" y="1189" width="0.9810%" height="15" fill="rgb(234,7,1)" fg:x="99539" fg:w="999"/><text x="97.9992%" y="1199.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (850 samples, 0.83%)</title><rect x="97.8955%" y="1173" width="0.8347%" height="15" fill="rgb(207,138,31)" fg:x="99688" fg:w="850"/><text x="98.1455%" y="1183.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (772 samples, 0.76%)</title><rect x="97.9721%" y="1157" width="0.7581%" height="15" fill="rgb(215,186,42)" fg:x="99766" fg:w="772"/><text x="98.2221%" y="1167.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (772 samples, 0.76%)</title><rect x="97.9721%" y="1141" width="0.7581%" height="15" fill="rgb(229,205,49)" fg:x="99766" fg:w="772"/><text x="98.2221%" y="1151.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (772 samples, 0.76%)</title><rect x="97.9721%" y="1125" width="0.7581%" height="15" fill="rgb(216,156,32)" fg:x="99766" fg:w="772"/><text x="98.2221%" y="1135.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (770 samples, 0.76%)</title><rect x="97.9741%" y="1109" width="0.7562%" height="15" fill="rgb(238,7,21)" fg:x="99768" fg:w="770"/><text x="98.2241%" y="1119.50"></text></g><g><title>wgpu::Queue::submit (487 samples, 0.48%)</title><rect x="98.2520%" y="1093" width="0.4782%" height="15" fill="rgb(249,190,22)" fg:x="100051" fg:w="487"/><text x="98.5020%" y="1103.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (487 samples, 0.48%)</title><rect x="98.2520%" y="1077" width="0.4782%" height="15" fill="rgb(253,51,31)" fg:x="100051" fg:w="487"/><text x="98.5020%" y="1087.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (487 samples, 0.48%)</title><rect x="98.2520%" y="1061" width="0.4782%" height="15" fill="rgb(237,90,54)" fg:x="100051" fg:w="487"/><text x="98.5020%" y="1071.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::unregister (13 samples, 0.01%)</title><rect x="98.7175%" y="1045" width="0.0128%" height="15" fill="rgb(250,214,33)" fg:x="100525" fg:w="13"/><text x="98.9675%" y="1055.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::remove (13 samples, 0.01%)</title><rect x="98.7175%" y="1029" width="0.0128%" height="15" fill="rgb(237,10,49)" fg:x="100525" fg:w="13"/><text x="98.9675%" y="1039.50"></text></g><g><title>__memmove_avx_unaligned_erms (30 samples, 0.03%)</title><rect x="98.7921%" y="1301" width="0.0295%" height="15" fill="rgb(241,56,36)" fg:x="100601" fg:w="30"/><text x="99.0421%" y="1311.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_get_insert_unique_pos (12 samples, 0.01%)</title><rect x="98.8471%" y="1237" width="0.0118%" height="15" fill="rgb(227,164,12)" fg:x="100657" fg:w="12"/><text x="99.0971%" y="1247.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (19 samples, 0.02%)</title><rect x="98.8442%" y="1253" width="0.0187%" height="15" fill="rgb(249,149,35)" fg:x="100654" fg:w="19"/><text x="99.0942%" y="1263.50"></text></g><g><title>glslang::TSymbolTable::insert (27 samples, 0.03%)</title><rect x="98.8432%" y="1285" width="0.0265%" height="15" fill="rgb(238,227,50)" fg:x="100653" fg:w="27"/><text x="99.0932%" y="1295.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (26 samples, 0.03%)</title><rect x="98.8442%" y="1269" width="0.0255%" height="15" fill="rgb(235,102,45)" fg:x="100654" fg:w="26"/><text x="99.0942%" y="1279.50"></text></g><g><title>glslang::TParseContext::handleFunctionDeclarator (61 samples, 0.06%)</title><rect x="98.8422%" y="1301" width="0.0599%" height="15" fill="rgb(211,10,38)" fg:x="100652" fg:w="61"/><text x="99.0922%" y="1311.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (33 samples, 0.03%)</title><rect x="98.8697%" y="1285" width="0.0324%" height="15" fill="rgb(219,77,48)" fg:x="100680" fg:w="33"/><text x="99.1197%" y="1295.50"></text></g><g><title>__memcmp_avx2_movbe (12 samples, 0.01%)</title><rect x="98.8903%" y="1269" width="0.0118%" height="15" fill="rgb(246,6,15)" fg:x="100701" fg:w="12"/><text x="99.1403%" y="1279.50"></text></g><g><title>__GI___snprintf (24 samples, 0.02%)</title><rect x="98.9325%" y="1253" width="0.0236%" height="15" fill="rgb(207,220,2)" fg:x="100744" fg:w="24"/><text x="99.1825%" y="1263.50"></text></g><g><title>__vsnprintf_internal (24 samples, 0.02%)</title><rect x="98.9325%" y="1237" width="0.0236%" height="15" fill="rgb(242,48,14)" fg:x="100744" fg:w="24"/><text x="99.1825%" y="1247.50"></text></g><g><title>__vfprintf_internal (19 samples, 0.02%)</title><rect x="98.9375%" y="1221" width="0.0187%" height="15" fill="rgb(218,19,27)" fg:x="100749" fg:w="19"/><text x="99.1875%" y="1231.50"></text></g><g><title>glslang::TPpContext::MacroExpand (39 samples, 0.04%)</title><rect x="98.9561%" y="1253" width="0.0383%" height="15" fill="rgb(228,0,35)" fg:x="100768" fg:w="39"/><text x="99.2061%" y="1263.50"></text></g><g><title>glslang::TStringAtomMap::getAtom (39 samples, 0.04%)</title><rect x="98.9561%" y="1237" width="0.0383%" height="15" fill="rgb(244,142,54)" fg:x="100768" fg:w="39"/><text x="99.2061%" y="1247.50"></text></g><g><title>glslang::TPpContext::tStringInput::getch (19 samples, 0.02%)</title><rect x="99.0082%" y="1237" width="0.0187%" height="15" fill="rgb(243,217,40)" fg:x="100821" fg:w="19"/><text x="99.2582%" y="1247.50"></text></g><g><title>glslang::TInputScanner::get (11 samples, 0.01%)</title><rect x="99.0160%" y="1221" width="0.0108%" height="15" fill="rgb(207,114,16)" fg:x="100829" fg:w="11"/><text x="99.2660%" y="1231.50"></text></g><g><title>glslang::TPpContext::tokenize (105 samples, 0.10%)</title><rect x="98.9267%" y="1269" width="0.1031%" height="15" fill="rgb(224,33,25)" fg:x="100738" fg:w="105"/><text x="99.1767%" y="1279.50"></text></g><g><title>glslang::TPpContext::tStringInput::scan (35 samples, 0.03%)</title><rect x="98.9954%" y="1253" width="0.0344%" height="15" fill="rgb(230,93,54)" fg:x="100808" fg:w="35"/><text x="99.2454%" y="1263.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (13 samples, 0.01%)</title><rect x="99.0317%" y="1253" width="0.0128%" height="15" fill="rgb(224,56,24)" fg:x="100845" fg:w="13"/><text x="99.2817%" y="1263.50"></text></g><g><title>glslang::TScanContext::identifierOrType (17 samples, 0.02%)</title><rect x="99.0298%" y="1269" width="0.0167%" height="15" fill="rgb(235,189,50)" fg:x="100843" fg:w="17"/><text x="99.2798%" y="1279.50"></text></g><g><title>[unknown] (67,942 samples, 66.72%)</title><rect x="32.3575%" y="1333" width="66.7204%" height="15" fill="rgb(242,173,8)" fg:x="32950" fg:w="67942"/><text x="32.6075%" y="1343.50">[unknown]</text></g><g><title>yyparse (347 samples, 0.34%)</title><rect x="98.7371%" y="1317" width="0.3408%" height="15" fill="rgb(209,206,10)" fg:x="100545" fg:w="347"/><text x="98.9871%" y="1327.50"></text></g><g><title>yylex (167 samples, 0.16%)</title><rect x="98.9139%" y="1301" width="0.1640%" height="15" fill="rgb(213,182,44)" fg:x="100725" fg:w="167"/><text x="99.1639%" y="1311.50"></text></g><g><title>glslang::TScanContext::tokenize (166 samples, 0.16%)</title><rect x="98.9149%" y="1285" width="0.1630%" height="15" fill="rgb(243,51,15)" fg:x="100726" fg:w="166"/><text x="99.1649%" y="1295.50"></text></g><g><title>glslang::TScanContext::tokenizeIdentifier (32 samples, 0.03%)</title><rect x="99.0465%" y="1269" width="0.0314%" height="15" fill="rgb(241,13,14)" fg:x="100860" fg:w="32"/><text x="99.2965%" y="1279.50"></text></g><g><title>std::thread::sleep (27 samples, 0.03%)</title><rect x="99.1181%" y="1093" width="0.0265%" height="15" fill="rgb(239,147,24)" fg:x="100933" fg:w="27"/><text x="99.3681%" y="1103.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (27 samples, 0.03%)</title><rect x="99.1181%" y="1077" width="0.0265%" height="15" fill="rgb(223,129,16)" fg:x="100933" fg:w="27"/><text x="99.3681%" y="1087.50"></text></g><g><title>__GI___nanosleep (26 samples, 0.03%)</title><rect x="99.1191%" y="1061" width="0.0255%" height="15" fill="rgb(209,169,13)" fg:x="100934" fg:w="26"/><text x="99.3691%" y="1071.50"></text></g><g><title>__clock_nanosleep_2 (23 samples, 0.02%)</title><rect x="99.1221%" y="1045" width="0.0226%" height="15" fill="rgb(235,159,41)" fg:x="100937" fg:w="23"/><text x="99.3721%" y="1055.50"></text></g><g><title>std::panic::catch_unwind (36 samples, 0.04%)</title><rect x="99.1162%" y="1221" width="0.0354%" height="15" fill="rgb(223,219,48)" fg:x="100931" fg:w="36"/><text x="99.3662%" y="1231.50"></text></g><g><title>std::panicking::try (36 samples, 0.04%)</title><rect x="99.1162%" y="1205" width="0.0354%" height="15" fill="rgb(236,80,13)" fg:x="100931" fg:w="36"/><text x="99.3662%" y="1215.50"></text></g><g><title>std::panicking::try::do_call (36 samples, 0.04%)</title><rect x="99.1162%" y="1189" width="0.0354%" height="15" fill="rgb(213,5,6)" fg:x="100931" fg:w="36"/><text x="99.3662%" y="1199.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (36 samples, 0.04%)</title><rect x="99.1162%" y="1173" width="0.0354%" height="15" fill="rgb(205,59,21)" fg:x="100931" fg:w="36"/><text x="99.3662%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (36 samples, 0.04%)</title><rect x="99.1162%" y="1157" width="0.0354%" height="15" fill="rgb(247,137,35)" fg:x="100931" fg:w="36"/><text x="99.3662%" y="1167.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (36 samples, 0.04%)</title><rect x="99.1162%" y="1141" width="0.0354%" height="15" fill="rgb(242,208,28)" fg:x="100931" fg:w="36"/><text x="99.3662%" y="1151.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (36 samples, 0.04%)</title><rect x="99.1162%" y="1125" width="0.0354%" height="15" fill="rgb(245,62,25)" fg:x="100931" fg:w="36"/><text x="99.3662%" y="1135.50"></text></g><g><title>gilrs::ff::server::run (36 samples, 0.04%)</title><rect x="99.1162%" y="1109" width="0.0354%" height="15" fill="rgb(233,99,54)" fg:x="100931" fg:w="36"/><text x="99.3662%" y="1119.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37 samples, 0.04%)</title><rect x="99.1162%" y="1285" width="0.0363%" height="15" fill="rgb(213,10,37)" fg:x="100931" fg:w="37"/><text x="99.3662%" y="1295.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (37 samples, 0.04%)</title><rect x="99.1162%" y="1269" width="0.0363%" height="15" fill="rgb(235,143,30)" fg:x="100931" fg:w="37"/><text x="99.3662%" y="1279.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (37 samples, 0.04%)</title><rect x="99.1162%" y="1253" width="0.0363%" height="15" fill="rgb(250,146,33)" fg:x="100931" fg:w="37"/><text x="99.3662%" y="1263.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (37 samples, 0.04%)</title><rect x="99.1162%" y="1237" width="0.0363%" height="15" fill="rgb(226,198,42)" fg:x="100931" fg:w="37"/><text x="99.3662%" y="1247.50"></text></g><g><title>__GI___clone (78 samples, 0.08%)</title><rect x="99.0818%" y="1333" width="0.0766%" height="15" fill="rgb(222,55,6)" fg:x="100896" fg:w="78"/><text x="99.3318%" y="1343.50"></text></g><g><title>start_thread (45 samples, 0.04%)</title><rect x="99.1142%" y="1317" width="0.0442%" height="15" fill="rgb(213,224,31)" fg:x="100929" fg:w="45"/><text x="99.3642%" y="1327.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (43 samples, 0.04%)</title><rect x="99.1162%" y="1301" width="0.0422%" height="15" fill="rgb(226,103,35)" fg:x="100931" fg:w="43"/><text x="99.3662%" y="1311.50"></text></g><g><title>[libudev.so.1.7.2] (21 samples, 0.02%)</title><rect x="99.2075%" y="821" width="0.0206%" height="15" fill="rgb(205,66,45)" fg:x="101024" fg:w="21"/><text x="99.4575%" y="831.50"></text></g><g><title>[libudev.so.1.7.2] (30 samples, 0.03%)</title><rect x="99.2016%" y="837" width="0.0295%" height="15" fill="rgb(226,51,42)" fg:x="101018" fg:w="30"/><text x="99.4516%" y="847.50"></text></g><g><title>[libudev.so.1.7.2] (37 samples, 0.04%)</title><rect x="99.1977%" y="853" width="0.0363%" height="15" fill="rgb(206,69,1)" fg:x="101014" fg:w="37"/><text x="99.4477%" y="863.50"></text></g><g><title>[libudev.so.1.7.2] (61 samples, 0.06%)</title><rect x="99.1938%" y="869" width="0.0599%" height="15" fill="rgb(213,228,47)" fg:x="101010" fg:w="61"/><text x="99.4438%" y="879.50"></text></g><g><title>[libudev.so.1.7.2] (85 samples, 0.08%)</title><rect x="99.1859%" y="885" width="0.0835%" height="15" fill="rgb(224,204,18)" fg:x="101002" fg:w="85"/><text x="99.4359%" y="895.50"></text></g><g><title>[libudev.so.1.7.2] (92 samples, 0.09%)</title><rect x="99.1839%" y="901" width="0.0903%" height="15" fill="rgb(253,187,47)" fg:x="101000" fg:w="92"/><text x="99.4339%" y="911.50"></text></g><g><title>[libudev.so.1.7.2] (96 samples, 0.09%)</title><rect x="99.1820%" y="917" width="0.0943%" height="15" fill="rgb(232,61,2)" fg:x="100998" fg:w="96"/><text x="99.4320%" y="927.50"></text></g><g><title>&lt;bevy_gilrs::GilrsPlugin as bevy_app::plugin::Plugin&gt;::build (100 samples, 0.10%)</title><rect x="99.1810%" y="1045" width="0.0982%" height="15" fill="rgb(213,132,35)" fg:x="100997" fg:w="100"/><text x="99.4310%" y="1055.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (100 samples, 0.10%)</title><rect x="99.1810%" y="1029" width="0.0982%" height="15" fill="rgb(247,33,21)" fg:x="100997" fg:w="100"/><text x="99.4310%" y="1039.50"></text></g><g><title>gilrs_core::Gilrs::new (99 samples, 0.10%)</title><rect x="99.1820%" y="1013" width="0.0972%" height="15" fill="rgb(233,71,46)" fg:x="100998" fg:w="99"/><text x="99.4320%" y="1023.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (99 samples, 0.10%)</title><rect x="99.1820%" y="997" width="0.0972%" height="15" fill="rgb(222,173,43)" fg:x="100998" fg:w="99"/><text x="99.4320%" y="1007.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (99 samples, 0.10%)</title><rect x="99.1820%" y="981" width="0.0972%" height="15" fill="rgb(249,218,47)" fg:x="100998" fg:w="99"/><text x="99.4320%" y="991.50"></text></g><g><title>udev_enumerate_scan_devices (99 samples, 0.10%)</title><rect x="99.1820%" y="965" width="0.0972%" height="15" fill="rgb(254,185,48)" fg:x="100998" fg:w="99"/><text x="99.4320%" y="975.50"></text></g><g><title>[libudev.so.1.7.2] (99 samples, 0.10%)</title><rect x="99.1820%" y="949" width="0.0972%" height="15" fill="rgb(252,165,50)" fg:x="100998" fg:w="99"/><text x="99.4320%" y="959.50"></text></g><g><title>[libudev.so.1.7.2] (99 samples, 0.10%)</title><rect x="99.1820%" y="933" width="0.0972%" height="15" fill="rgb(206,219,6)" fg:x="100998" fg:w="99"/><text x="99.4320%" y="943.50"></text></g><g><title>__libc_start_main (106 samples, 0.10%)</title><rect x="99.1780%" y="1317" width="0.1041%" height="15" fill="rgb(212,212,45)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1327.50"></text></g><g><title>main (106 samples, 0.10%)</title><rect x="99.1780%" y="1301" width="0.1041%" height="15" fill="rgb(221,31,9)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1311.50"></text></g><g><title>std::rt::lang_start_internal (106 samples, 0.10%)</title><rect x="99.1780%" y="1285" width="0.1041%" height="15" fill="rgb(234,198,39)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1295.50"></text></g><g><title>std::panic::catch_unwind (106 samples, 0.10%)</title><rect x="99.1780%" y="1269" width="0.1041%" height="15" fill="rgb(252,145,46)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1279.50"></text></g><g><title>std::panicking::try (106 samples, 0.10%)</title><rect x="99.1780%" y="1253" width="0.1041%" height="15" fill="rgb(237,149,0)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1263.50"></text></g><g><title>std::panicking::try::do_call (106 samples, 0.10%)</title><rect x="99.1780%" y="1237" width="0.1041%" height="15" fill="rgb(229,65,5)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1247.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (106 samples, 0.10%)</title><rect x="99.1780%" y="1221" width="0.1041%" height="15" fill="rgb(235,60,36)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (106 samples, 0.10%)</title><rect x="99.1780%" y="1205" width="0.1041%" height="15" fill="rgb(222,47,18)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1215.50"></text></g><g><title>std::panicking::try (106 samples, 0.10%)</title><rect x="99.1780%" y="1189" width="0.1041%" height="15" fill="rgb(235,114,22)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (106 samples, 0.10%)</title><rect x="99.1780%" y="1173" width="0.1041%" height="15" fill="rgb(209,167,11)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (106 samples, 0.10%)</title><rect x="99.1780%" y="1157" width="0.1041%" height="15" fill="rgb(251,73,18)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1167.50"></text></g><g><title>std::rt::lang_start::{{closure}} (106 samples, 0.10%)</title><rect x="99.1780%" y="1141" width="0.1041%" height="15" fill="rgb(217,60,17)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1151.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (106 samples, 0.10%)</title><rect x="99.1780%" y="1125" width="0.1041%" height="15" fill="rgb(224,36,37)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1135.50"></text></g><g><title>core::ops::function::FnOnce::call_once (106 samples, 0.10%)</title><rect x="99.1780%" y="1109" width="0.1041%" height="15" fill="rgb(211,21,32)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1119.50"></text></g><g><title>engine::main (106 samples, 0.10%)</title><rect x="99.1780%" y="1093" width="0.1041%" height="15" fill="rgb(231,55,48)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1103.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_plugins (106 samples, 0.10%)</title><rect x="99.1780%" y="1077" width="0.1041%" height="15" fill="rgb(227,42,18)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1087.50"></text></g><g><title>bevy_app::plugin_group::PluginGroupBuilder::finish (106 samples, 0.10%)</title><rect x="99.1780%" y="1061" width="0.1041%" height="15" fill="rgb(217,2,27)" fg:x="100994" fg:w="106"/><text x="99.4280%" y="1071.50"></text></g><g><title>_start (116 samples, 0.11%)</title><rect x="99.1731%" y="1333" width="0.1139%" height="15" fill="rgb(251,138,23)" fg:x="100989" fg:w="116"/><text x="99.4231%" y="1343.50"></text></g><g><title>anon.196896449e373b45e23046df40e816ba.0.llvm.13179569854636256397 (20 samples, 0.02%)</title><rect x="99.2979%" y="1333" width="0.0196%" height="15" fill="rgb(226,184,11)" fg:x="101116" fg:w="20"/><text x="99.5479%" y="1343.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (52 samples, 0.05%)</title><rect x="99.4186%" y="1333" width="0.0511%" height="15" fill="rgb(242,142,12)" fg:x="101239" fg:w="52"/><text x="99.6686%" y="1343.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (17 samples, 0.02%)</title><rect x="99.5119%" y="1333" width="0.0167%" height="15" fill="rgb(234,187,18)" fg:x="101334" fg:w="17"/><text x="99.7619%" y="1343.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (17 samples, 0.02%)</title><rect x="99.5119%" y="1317" width="0.0167%" height="15" fill="rgb(237,44,42)" fg:x="101334" fg:w="17"/><text x="99.7619%" y="1327.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (17 samples, 0.02%)</title><rect x="99.5119%" y="1301" width="0.0167%" height="15" fill="rgb(211,90,23)" fg:x="101334" fg:w="17"/><text x="99.7619%" y="1311.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (22 samples, 0.02%)</title><rect x="99.5306%" y="1333" width="0.0216%" height="15" fill="rgb(207,81,18)" fg:x="101353" fg:w="22"/><text x="99.7806%" y="1343.50"></text></g><g><title>engine (74,453 samples, 73.11%)</title><rect x="26.4595%" y="1349" width="73.1143%" height="15" fill="rgb(222,107,28)" fg:x="26944" fg:w="74453"/><text x="26.7095%" y="1359.50">engine</text></g><g><title>[[heap]] (18 samples, 0.02%)</title><rect x="99.6013%" y="1333" width="0.0177%" height="15" fill="rgb(237,83,52)" fg:x="101425" fg:w="18"/><text x="99.8513%" y="1343.50"></text></g><g><title>[[vdso]] (12 samples, 0.01%)</title><rect x="99.6200%" y="1333" width="0.0118%" height="15" fill="rgb(208,67,11)" fg:x="101444" fg:w="12"/><text x="99.8700%" y="1343.50"></text></g><g><title>[libpulsecommon-15.0.so] (16 samples, 0.02%)</title><rect x="99.6337%" y="1317" width="0.0157%" height="15" fill="rgb(249,157,49)" fg:x="101458" fg:w="16"/><text x="99.8837%" y="1327.50"></text></g><g><title>[anon] (74 samples, 0.07%)</title><rect x="99.6317%" y="1333" width="0.0727%" height="15" fill="rgb(243,200,1)" fg:x="101456" fg:w="74"/><text x="99.8817%" y="1343.50"></text></g><g><title>[libpulse.so.0.24.0] (17 samples, 0.02%)</title><rect x="99.7044%" y="1317" width="0.0167%" height="15" fill="rgb(225,162,37)" fg:x="101530" fg:w="17"/><text x="99.9544%" y="1327.50"></text></g><g><title>[unknown] (48 samples, 0.05%)</title><rect x="99.7044%" y="1333" width="0.0471%" height="15" fill="rgb(242,92,13)" fg:x="101530" fg:w="48"/><text x="99.9544%" y="1343.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (17 samples, 0.02%)</title><rect x="99.7997%" y="1109" width="0.0167%" height="15" fill="rgb(220,43,36)" fg:x="101627" fg:w="17"/><text x="100.0497%" y="1119.50"></text></g><g><title>[libpulse.so.0.24.0] (24 samples, 0.02%)</title><rect x="99.7957%" y="1125" width="0.0236%" height="15" fill="rgb(213,165,48)" fg:x="101623" fg:w="24"/><text x="100.0457%" y="1135.50"></text></g><g><title>[libpulse.so.0.24.0] (33 samples, 0.03%)</title><rect x="99.7957%" y="1157" width="0.0324%" height="15" fill="rgb(227,200,9)" fg:x="101623" fg:w="33"/><text x="100.0457%" y="1167.50"></text></g><g><title>pa_pdispatch_run (33 samples, 0.03%)</title><rect x="99.7957%" y="1141" width="0.0324%" height="15" fill="rgb(221,222,28)" fg:x="101623" fg:w="33"/><text x="100.0457%" y="1151.50"></text></g><g><title>pa_memexport_process_release (15 samples, 0.01%)</title><rect x="99.8281%" y="1157" width="0.0147%" height="15" fill="rgb(223,142,26)" fg:x="101656" fg:w="15"/><text x="100.0781%" y="1167.50"></text></g><g><title>[libpulsecommon-15.0.so] (82 samples, 0.08%)</title><rect x="99.7889%" y="1173" width="0.0805%" height="15" fill="rgb(243,46,9)" fg:x="101616" fg:w="82"/><text x="100.0389%" y="1183.50"></text></g><g><title>pa_srbchannel_read (11 samples, 0.01%)</title><rect x="99.8586%" y="1157" width="0.0108%" height="15" fill="rgb(250,56,11)" fg:x="101687" fg:w="11"/><text x="100.1086%" y="1167.50"></text></g><g><title>[libpulsecommon-15.0.so] (92 samples, 0.09%)</title><rect x="99.7830%" y="1189" width="0.0903%" height="15" fill="rgb(229,113,5)" fg:x="101610" fg:w="92"/><text x="100.0330%" y="1199.50"></text></g><g><title>[libpulsecommon-15.0.so] (124 samples, 0.12%)</title><rect x="99.7751%" y="1205" width="0.1218%" height="15" fill="rgb(244,108,28)" fg:x="101602" fg:w="124"/><text x="100.0251%" y="1215.50"></text></g><g><title>[libpulsecommon-15.0.so] (134 samples, 0.13%)</title><rect x="99.7712%" y="1221" width="0.1316%" height="15" fill="rgb(242,119,50)" fg:x="101598" fg:w="134"/><text x="100.0212%" y="1231.50"></text></g><g><title>pa_mainloop_dispatch (158 samples, 0.16%)</title><rect x="99.7574%" y="1237" width="0.1552%" height="15" fill="rgb(224,164,23)" fg:x="101584" fg:w="158"/><text x="100.0074%" y="1247.50"></text></g><g><title>__GI___poll (47 samples, 0.05%)</title><rect x="99.9214%" y="1205" width="0.0462%" height="15" fill="rgb(214,227,44)" fg:x="101751" fg:w="47"/><text x="100.1714%" y="1215.50"></text></g><g><title>__GI___pthread_mutex_lock (12 samples, 0.01%)</title><rect x="99.9676%" y="1189" width="0.0118%" height="15" fill="rgb(238,202,4)" fg:x="101798" fg:w="12"/><text x="100.2176%" y="1199.50"></text></g><g><title>pa_mutex_lock (14 samples, 0.01%)</title><rect x="99.9676%" y="1205" width="0.0137%" height="15" fill="rgb(213,190,30)" fg:x="101798" fg:w="14"/><text x="100.2176%" y="1215.50"></text></g><g><title>pa_mainloop_poll (74 samples, 0.07%)</title><rect x="99.9126%" y="1237" width="0.0727%" height="15" fill="rgb(239,15,2)" fg:x="101742" fg:w="74"/><text x="100.1626%" y="1247.50"></text></g><g><title>[libpulse.so.0.24.0] (67 samples, 0.07%)</title><rect x="99.9195%" y="1221" width="0.0658%" height="15" fill="rgb(249,229,4)" fg:x="101749" fg:w="67"/><text x="100.1695%" y="1231.50"></text></g><g><title>__GI___clone (251 samples, 0.25%)</title><rect x="99.7515%" y="1333" width="0.2465%" height="15" fill="rgb(239,75,44)" fg:x="101578" fg:w="251"/><text x="100.0015%" y="1343.50"></text></g><g><title>start_thread (251 samples, 0.25%)</title><rect x="99.7515%" y="1317" width="0.2465%" height="15" fill="rgb(251,206,23)" fg:x="101578" fg:w="251"/><text x="100.0015%" y="1327.50"></text></g><g><title>[libpulsecommon-15.0.so] (251 samples, 0.25%)</title><rect x="99.7515%" y="1301" width="0.2465%" height="15" fill="rgb(215,208,0)" fg:x="101578" fg:w="251"/><text x="100.0015%" y="1311.50"></text></g><g><title>[libpulse.so.0.24.0] (251 samples, 0.25%)</title><rect x="99.7515%" y="1285" width="0.2465%" height="15" fill="rgb(230,75,50)" fg:x="101578" fg:w="251"/><text x="100.0015%" y="1295.50"></text></g><g><title>pa_mainloop_run (251 samples, 0.25%)</title><rect x="99.7515%" y="1269" width="0.2465%" height="15" fill="rgb(246,180,39)" fg:x="101578" fg:w="251"/><text x="100.0015%" y="1279.50"></text></g><g><title>pa_mainloop_iterate (249 samples, 0.24%)</title><rect x="99.7535%" y="1253" width="0.2445%" height="15" fill="rgb(249,175,24)" fg:x="101580" fg:w="249"/><text x="100.0035%" y="1263.50"></text></g><g><title>pa_mainloop_prepare (13 samples, 0.01%)</title><rect x="99.9853%" y="1237" width="0.0128%" height="15" fill="rgb(247,176,22)" fg:x="101816" fg:w="13"/><text x="100.2353%" y="1247.50"></text></g><g><title>all (101,831 samples, 100%)</title><rect x="0.0000%" y="1365" width="100.0000%" height="15" fill="rgb(241,100,24)" fg:x="0" fg:w="101831"/><text x="0.2500%" y="1375.50"></text></g><g><title>threaded-ml (434 samples, 0.43%)</title><rect x="99.5738%" y="1349" width="0.4262%" height="15" fill="rgb(233,4,35)" fg:x="101397" fg:w="434"/><text x="99.8238%" y="1359.50"></text></g></svg></svg>