<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1334" onload="init(evt)" viewBox="0 0 1200 1334" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1334" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1317.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1317.00"> </text><svg id="frames" x="10" width="1180" total_samples="9545"><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="0.0105%" y="1237" width="0.0105%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="1"/><text x="0.2605%" y="1247.50"></text></g><g><title>[anon] (2 samples, 0.02%)</title><rect x="0.0105%" y="1253" width="0.0210%" height="15" fill="rgb(217,0,24)" fg:x="1" fg:w="2"/><text x="0.2605%" y="1263.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::new (1 samples, 0.01%)</title><rect x="0.0210%" y="1237" width="0.0105%" height="15" fill="rgb(221,193,54)" fg:x="2" fg:w="1"/><text x="0.2710%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T&gt; as core::convert::From&lt;T&gt;&gt;::from (1 samples, 0.01%)</title><rect x="0.0210%" y="1221" width="0.0105%" height="15" fill="rgb(248,212,6)" fg:x="2" fg:w="1"/><text x="0.2710%" y="1231.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="0.0210%" y="1205" width="0.0105%" height="15" fill="rgb(208,68,35)" fg:x="2" fg:w="1"/><text x="0.2710%" y="1215.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="0.0210%" y="1189" width="0.0105%" height="15" fill="rgb(232,128,0)" fg:x="2" fg:w="1"/><text x="0.2710%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="0.0210%" y="1173" width="0.0105%" height="15" fill="rgb(207,160,47)" fg:x="2" fg:w="1"/><text x="0.2710%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="0.0210%" y="1157" width="0.0105%" height="15" fill="rgb(228,23,34)" fg:x="2" fg:w="1"/><text x="0.2710%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="0.0210%" y="1141" width="0.0105%" height="15" fill="rgb(218,30,26)" fg:x="2" fg:w="1"/><text x="0.2710%" y="1151.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="0.0314%" y="1253" width="0.0105%" height="15" fill="rgb(220,122,19)" fg:x="3" fg:w="1"/><text x="0.2814%" y="1263.50"></text></g><g><title>parking::Parker::new (1 samples, 0.01%)</title><rect x="0.0314%" y="1237" width="0.0105%" height="15" fill="rgb(250,228,42)" fg:x="3" fg:w="1"/><text x="0.2814%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="0.0314%" y="1221" width="0.0105%" height="15" fill="rgb(240,193,28)" fg:x="3" fg:w="1"/><text x="0.2814%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="0.0419%" y="965" width="0.0105%" height="15" fill="rgb(216,20,37)" fg:x="4" fg:w="1"/><text x="0.2919%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.01%)</title><rect x="0.0419%" y="949" width="0.0105%" height="15" fill="rgb(206,188,39)" fg:x="4" fg:w="1"/><text x="0.2919%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Runner&gt; (1 samples, 0.01%)</title><rect x="0.0419%" y="933" width="0.0105%" height="15" fill="rgb(217,207,13)" fg:x="4" fg:w="1"/><text x="0.2919%" y="943.50"></text></g><g><title>&lt;async_executor::Runner as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="0.0419%" y="917" width="0.0105%" height="15" fill="rgb(231,73,38)" fg:x="4" fg:w="1"/><text x="0.2919%" y="927.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="0.0419%" y="901" width="0.0105%" height="15" fill="rgb(225,20,46)" fg:x="4" fg:w="1"/><text x="0.2919%" y="911.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::write (1 samples, 0.01%)</title><rect x="0.0419%" y="885" width="0.0105%" height="15" fill="rgb(210,31,41)" fg:x="4" fg:w="1"/><text x="0.2919%" y="895.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (1 samples, 0.01%)</title><rect x="0.0419%" y="869" width="0.0105%" height="15" fill="rgb(221,200,47)" fg:x="4" fg:w="1"/><text x="0.2919%" y="879.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (1 samples, 0.01%)</title><rect x="0.0419%" y="853" width="0.0105%" height="15" fill="rgb(226,26,5)" fg:x="4" fg:w="1"/><text x="0.2919%" y="863.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (6 samples, 0.06%)</title><rect x="0.0419%" y="981" width="0.0629%" height="15" fill="rgb(249,33,26)" fg:x="4" fg:w="6"/><text x="0.2919%" y="991.50"></text></g><g><title>parking::Parker::park (5 samples, 0.05%)</title><rect x="0.0524%" y="965" width="0.0524%" height="15" fill="rgb(235,183,28)" fg:x="5" fg:w="5"/><text x="0.3024%" y="975.50"></text></g><g><title>parking::Inner::park (5 samples, 0.05%)</title><rect x="0.0524%" y="949" width="0.0524%" height="15" fill="rgb(221,5,38)" fg:x="5" fg:w="5"/><text x="0.3024%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait (5 samples, 0.05%)</title><rect x="0.0524%" y="933" width="0.0524%" height="15" fill="rgb(247,18,42)" fg:x="5" fg:w="5"/><text x="0.3024%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (5 samples, 0.05%)</title><rect x="0.0524%" y="917" width="0.0524%" height="15" fill="rgb(241,131,45)" fg:x="5" fg:w="5"/><text x="0.3024%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (5 samples, 0.05%)</title><rect x="0.0524%" y="901" width="0.0524%" height="15" fill="rgb(249,31,29)" fg:x="5" fg:w="5"/><text x="0.3024%" y="911.50"></text></g><g><title>__pthread_cond_wait (5 samples, 0.05%)</title><rect x="0.0524%" y="885" width="0.0524%" height="15" fill="rgb(225,111,53)" fg:x="5" fg:w="5"/><text x="0.3024%" y="895.50"></text></g><g><title>__futex_abstimed_wait_common64 (5 samples, 0.05%)</title><rect x="0.0524%" y="869" width="0.0524%" height="15" fill="rgb(238,160,17)" fg:x="5" fg:w="5"/><text x="0.3024%" y="879.50"></text></g><g><title>std::panic::catch_unwind (11 samples, 0.12%)</title><rect x="0.0419%" y="1141" width="0.1152%" height="15" fill="rgb(214,148,48)" fg:x="4" fg:w="11"/><text x="0.2919%" y="1151.50"></text></g><g><title>std::panicking::try (11 samples, 0.12%)</title><rect x="0.0419%" y="1125" width="0.1152%" height="15" fill="rgb(232,36,49)" fg:x="4" fg:w="11"/><text x="0.2919%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (11 samples, 0.12%)</title><rect x="0.0419%" y="1109" width="0.1152%" height="15" fill="rgb(209,103,24)" fg:x="4" fg:w="11"/><text x="0.2919%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (11 samples, 0.12%)</title><rect x="0.0419%" y="1093" width="0.1152%" height="15" fill="rgb(229,88,8)" fg:x="4" fg:w="11"/><text x="0.2919%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (11 samples, 0.12%)</title><rect x="0.0419%" y="1077" width="0.1152%" height="15" fill="rgb(213,181,19)" fg:x="4" fg:w="11"/><text x="0.2919%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (11 samples, 0.12%)</title><rect x="0.0419%" y="1061" width="0.1152%" height="15" fill="rgb(254,191,54)" fg:x="4" fg:w="11"/><text x="0.2919%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (11 samples, 0.12%)</title><rect x="0.0419%" y="1045" width="0.1152%" height="15" fill="rgb(241,83,37)" fg:x="4" fg:w="11"/><text x="0.2919%" y="1055.50"></text></g><g><title>futures_lite::future::block_on (11 samples, 0.12%)</title><rect x="0.0419%" y="1029" width="0.1152%" height="15" fill="rgb(233,36,39)" fg:x="4" fg:w="11"/><text x="0.2919%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.12%)</title><rect x="0.0419%" y="1013" width="0.1152%" height="15" fill="rgb(226,3,54)" fg:x="4" fg:w="11"/><text x="0.2919%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.12%)</title><rect x="0.0419%" y="997" width="0.1152%" height="15" fill="rgb(245,192,40)" fg:x="4" fg:w="11"/><text x="0.2919%" y="1007.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (5 samples, 0.05%)</title><rect x="0.1048%" y="981" width="0.0524%" height="15" fill="rgb(238,167,29)" fg:x="10" fg:w="5"/><text x="0.3548%" y="991.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::initialize (5 samples, 0.05%)</title><rect x="0.1048%" y="965" width="0.0524%" height="15" fill="rgb(232,182,51)" fg:x="10" fg:w="5"/><text x="0.3548%" y="975.50"></text></g><g><title>core::ops::function::FnOnce::call_once (5 samples, 0.05%)</title><rect x="0.1048%" y="949" width="0.0524%" height="15" fill="rgb(231,60,39)" fg:x="10" fg:w="5"/><text x="0.3548%" y="959.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__init (5 samples, 0.05%)</title><rect x="0.1048%" y="933" width="0.0524%" height="15" fill="rgb(208,69,12)" fg:x="10" fg:w="5"/><text x="0.3548%" y="943.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker (5 samples, 0.05%)</title><rect x="0.1048%" y="917" width="0.0524%" height="15" fill="rgb(235,93,37)" fg:x="10" fg:w="5"/><text x="0.3548%" y="927.50"></text></g><g><title>parking::Parker::new (5 samples, 0.05%)</title><rect x="0.1048%" y="901" width="0.0524%" height="15" fill="rgb(213,116,39)" fg:x="10" fg:w="5"/><text x="0.3548%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (5 samples, 0.05%)</title><rect x="0.1048%" y="885" width="0.0524%" height="15" fill="rgb(222,207,29)" fg:x="10" fg:w="5"/><text x="0.3548%" y="895.50"></text></g><g><title>arena_get2.part.0 (1 samples, 0.01%)</title><rect x="0.1572%" y="1077" width="0.0105%" height="15" fill="rgb(206,96,30)" fg:x="15" fg:w="1"/><text x="0.4072%" y="1087.50"></text></g><g><title>new_heap (1 samples, 0.01%)</title><rect x="0.1572%" y="1061" width="0.0105%" height="15" fill="rgb(218,138,4)" fg:x="15" fg:w="1"/><text x="0.4072%" y="1071.50"></text></g><g><title>__GI___mmap64 (1 samples, 0.01%)</title><rect x="0.1572%" y="1045" width="0.0105%" height="15" fill="rgb(250,191,14)" fg:x="15" fg:w="1"/><text x="0.4072%" y="1055.50"></text></g><g><title>Async_Compute_T (17 samples, 0.18%)</title><rect x="0.0000%" y="1269" width="0.1781%" height="15" fill="rgb(239,60,40)" fg:x="0" fg:w="17"/><text x="0.2500%" y="1279.50"></text></g><g><title>__GI___clone (13 samples, 0.14%)</title><rect x="0.0419%" y="1253" width="0.1362%" height="15" fill="rgb(206,27,48)" fg:x="4" fg:w="13"/><text x="0.2919%" y="1263.50"></text></g><g><title>start_thread (13 samples, 0.14%)</title><rect x="0.0419%" y="1237" width="0.1362%" height="15" fill="rgb(225,35,8)" fg:x="4" fg:w="13"/><text x="0.2919%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (13 samples, 0.14%)</title><rect x="0.0419%" y="1221" width="0.1362%" height="15" fill="rgb(250,213,24)" fg:x="4" fg:w="13"/><text x="0.2919%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.14%)</title><rect x="0.0419%" y="1205" width="0.1362%" height="15" fill="rgb(247,123,22)" fg:x="4" fg:w="13"/><text x="0.2919%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (13 samples, 0.14%)</title><rect x="0.0419%" y="1189" width="0.1362%" height="15" fill="rgb(231,138,38)" fg:x="4" fg:w="13"/><text x="0.2919%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (13 samples, 0.14%)</title><rect x="0.0419%" y="1173" width="0.1362%" height="15" fill="rgb(231,145,46)" fg:x="4" fg:w="13"/><text x="0.2919%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (13 samples, 0.14%)</title><rect x="0.0419%" y="1157" width="0.1362%" height="15" fill="rgb(251,118,11)" fg:x="4" fg:w="13"/><text x="0.2919%" y="1167.50"></text></g><g><title>std::sys::unix::thread::guard::current (2 samples, 0.02%)</title><rect x="0.1572%" y="1141" width="0.0210%" height="15" fill="rgb(217,147,25)" fg:x="15" fg:w="2"/><text x="0.4072%" y="1151.50"></text></g><g><title>__pthread_getattr_np (2 samples, 0.02%)</title><rect x="0.1572%" y="1125" width="0.0210%" height="15" fill="rgb(247,81,37)" fg:x="15" fg:w="2"/><text x="0.4072%" y="1135.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="0.1572%" y="1109" width="0.0210%" height="15" fill="rgb(209,12,38)" fg:x="15" fg:w="2"/><text x="0.4072%" y="1119.50"></text></g><g><title>tcache_init.part.0 (2 samples, 0.02%)</title><rect x="0.1572%" y="1093" width="0.0210%" height="15" fill="rgb(227,1,9)" fg:x="15" fg:w="2"/><text x="0.4072%" y="1103.50"></text></g><g><title>get_free_list (1 samples, 0.01%)</title><rect x="0.1676%" y="1077" width="0.0105%" height="15" fill="rgb(248,47,43)" fg:x="16" fg:w="1"/><text x="0.4176%" y="1087.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="0.9953%" y="1237" width="0.0105%" height="15" fill="rgb(221,10,30)" fg:x="95" fg:w="1"/><text x="1.2453%" y="1247.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1.0058%" y="1237" width="0.0105%" height="15" fill="rgb(210,229,1)" fg:x="96" fg:w="1"/><text x="1.2558%" y="1247.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1.0162%" y="1237" width="0.0105%" height="15" fill="rgb(222,148,37)" fg:x="97" fg:w="1"/><text x="1.2662%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="1.0267%" y="1237" width="0.0314%" height="15" fill="rgb(234,67,33)" fg:x="98" fg:w="3"/><text x="1.2767%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (15 samples, 0.16%)</title><rect x="1.0581%" y="1237" width="0.1572%" height="15" fill="rgb(247,98,35)" fg:x="101" fg:w="15"/><text x="1.3081%" y="1247.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1.2153%" y="1237" width="0.0105%" height="15" fill="rgb(247,138,52)" fg:x="116" fg:w="1"/><text x="1.4653%" y="1247.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (1 samples, 0.01%)</title><rect x="1.2258%" y="1237" width="0.0105%" height="15" fill="rgb(213,79,30)" fg:x="117" fg:w="1"/><text x="1.4758%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (8 samples, 0.08%)</title><rect x="1.2362%" y="1237" width="0.0838%" height="15" fill="rgb(246,177,23)" fg:x="118" fg:w="8"/><text x="1.4862%" y="1247.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (8 samples, 0.08%)</title><rect x="1.2362%" y="1221" width="0.0838%" height="15" fill="rgb(230,62,27)" fg:x="118" fg:w="8"/><text x="1.4862%" y="1231.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="1.3201%" y="1237" width="0.0210%" height="15" fill="rgb(216,154,8)" fg:x="126" fg:w="2"/><text x="1.5701%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="1.3410%" y="1237" width="0.0314%" height="15" fill="rgb(244,35,45)" fg:x="128" fg:w="3"/><text x="1.5910%" y="1247.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="1.3724%" y="1237" width="0.0210%" height="15" fill="rgb(251,115,12)" fg:x="131" fg:w="2"/><text x="1.6224%" y="1247.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="1.3934%" y="1237" width="0.0105%" height="15" fill="rgb(240,54,50)" fg:x="133" fg:w="1"/><text x="1.6434%" y="1247.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="1.4039%" y="1237" width="0.0105%" height="15" fill="rgb(233,84,52)" fg:x="134" fg:w="1"/><text x="1.6539%" y="1247.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (1 samples, 0.01%)</title><rect x="1.4144%" y="1237" width="0.0105%" height="15" fill="rgb(207,117,47)" fg:x="135" fg:w="1"/><text x="1.6644%" y="1247.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (2 samples, 0.02%)</title><rect x="1.4248%" y="1237" width="0.0210%" height="15" fill="rgb(249,43,39)" fg:x="136" fg:w="2"/><text x="1.6748%" y="1247.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (2 samples, 0.02%)</title><rect x="1.4458%" y="1237" width="0.0210%" height="15" fill="rgb(209,38,44)" fg:x="138" fg:w="2"/><text x="1.6958%" y="1247.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (1 samples, 0.01%)</title><rect x="1.4563%" y="1221" width="0.0105%" height="15" fill="rgb(236,212,23)" fg:x="139" fg:w="1"/><text x="1.7063%" y="1231.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (2 samples, 0.02%)</title><rect x="1.4667%" y="1237" width="0.0210%" height="15" fill="rgb(242,79,21)" fg:x="140" fg:w="2"/><text x="1.7167%" y="1247.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="1.4877%" y="1237" width="0.0105%" height="15" fill="rgb(211,96,35)" fg:x="142" fg:w="1"/><text x="1.7377%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="1.4982%" y="1237" width="0.0105%" height="15" fill="rgb(253,215,40)" fg:x="143" fg:w="1"/><text x="1.7482%" y="1247.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="1.5086%" y="1237" width="0.0105%" height="15" fill="rgb(211,81,21)" fg:x="144" fg:w="1"/><text x="1.7586%" y="1247.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (2 samples, 0.02%)</title><rect x="1.5191%" y="1237" width="0.0210%" height="15" fill="rgb(208,190,38)" fg:x="145" fg:w="2"/><text x="1.7691%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="1.5401%" y="1237" width="0.0105%" height="15" fill="rgb(235,213,38)" fg:x="147" fg:w="1"/><text x="1.7901%" y="1247.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::unlock_shared_slow (1 samples, 0.01%)</title><rect x="1.5506%" y="1237" width="0.0105%" height="15" fill="rgb(237,122,38)" fg:x="148" fg:w="1"/><text x="1.8006%" y="1247.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (2 samples, 0.02%)</title><rect x="1.5610%" y="1237" width="0.0210%" height="15" fill="rgb(244,218,35)" fg:x="149" fg:w="2"/><text x="1.8110%" y="1247.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="1.5820%" y="1237" width="0.0105%" height="15" fill="rgb(240,68,47)" fg:x="151" fg:w="1"/><text x="1.8320%" y="1247.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (1 samples, 0.01%)</title><rect x="1.5925%" y="1237" width="0.0105%" height="15" fill="rgb(210,16,53)" fg:x="152" fg:w="1"/><text x="1.8425%" y="1247.50"></text></g><g><title>[[heap]] (59 samples, 0.62%)</title><rect x="0.9953%" y="1253" width="0.6181%" height="15" fill="rgb(235,124,12)" fg:x="95" fg:w="59"/><text x="1.2453%" y="1263.50"></text></g><g><title>wgpu_core::device::unmap_buffer (1 samples, 0.01%)</title><rect x="1.6029%" y="1237" width="0.0105%" height="15" fill="rgb(224,169,11)" fg:x="153" fg:w="1"/><text x="1.8529%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="1.6029%" y="1221" width="0.0105%" height="15" fill="rgb(250,166,2)" fg:x="153" fg:w="1"/><text x="1.8529%" y="1231.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="1.6134%" y="1237" width="0.0105%" height="15" fill="rgb(242,216,29)" fg:x="154" fg:w="1"/><text x="1.8634%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="1.6134%" y="1221" width="0.0105%" height="15" fill="rgb(230,116,27)" fg:x="154" fg:w="1"/><text x="1.8634%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="1.6134%" y="1205" width="0.0105%" height="15" fill="rgb(228,99,48)" fg:x="154" fg:w="1"/><text x="1.8634%" y="1215.50"></text></g><g><title>[[stack]] (2 samples, 0.02%)</title><rect x="1.6134%" y="1253" width="0.0210%" height="15" fill="rgb(253,11,6)" fg:x="154" fg:w="2"/><text x="1.8634%" y="1263.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (1 samples, 0.01%)</title><rect x="1.6239%" y="1237" width="0.0105%" height="15" fill="rgb(247,143,39)" fg:x="155" fg:w="1"/><text x="1.8739%" y="1247.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="1.6448%" y="1237" width="0.0105%" height="15" fill="rgb(236,97,10)" fg:x="157" fg:w="1"/><text x="1.8948%" y="1247.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="1.6553%" y="1237" width="0.0210%" height="15" fill="rgb(233,208,19)" fg:x="158" fg:w="2"/><text x="1.9053%" y="1247.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1.6763%" y="1237" width="0.0105%" height="15" fill="rgb(216,164,2)" fg:x="160" fg:w="1"/><text x="1.9263%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="1.6867%" y="1237" width="0.0105%" height="15" fill="rgb(220,129,5)" fg:x="161" fg:w="1"/><text x="1.9367%" y="1247.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (12 samples, 0.13%)</title><rect x="1.6972%" y="1237" width="0.1257%" height="15" fill="rgb(242,17,10)" fg:x="162" fg:w="12"/><text x="1.9472%" y="1247.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::iter (1 samples, 0.01%)</title><rect x="1.8229%" y="1237" width="0.0105%" height="15" fill="rgb(242,107,0)" fg:x="174" fg:w="1"/><text x="2.0729%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="1.8334%" y="1237" width="0.0314%" height="15" fill="rgb(251,28,31)" fg:x="175" fg:w="3"/><text x="2.0834%" y="1247.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2 samples, 0.02%)</title><rect x="1.8439%" y="1221" width="0.0210%" height="15" fill="rgb(233,223,10)" fg:x="176" fg:w="2"/><text x="2.0939%" y="1231.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="1.8649%" y="1237" width="0.0314%" height="15" fill="rgb(215,21,27)" fg:x="178" fg:w="3"/><text x="2.1149%" y="1247.50"></text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="1.8963%" y="1237" width="0.0105%" height="15" fill="rgb(232,23,21)" fg:x="181" fg:w="1"/><text x="2.1463%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.01%)</title><rect x="1.8963%" y="1221" width="0.0105%" height="15" fill="rgb(244,5,23)" fg:x="181" fg:w="1"/><text x="2.1463%" y="1231.50"></text></g><g><title>core::mem::take (1 samples, 0.01%)</title><rect x="1.8963%" y="1205" width="0.0105%" height="15" fill="rgb(226,81,46)" fg:x="181" fg:w="1"/><text x="2.1463%" y="1215.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="1.8963%" y="1189" width="0.0105%" height="15" fill="rgb(247,70,30)" fg:x="181" fg:w="1"/><text x="2.1463%" y="1199.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="1.8963%" y="1173" width="0.0105%" height="15" fill="rgb(212,68,19)" fg:x="181" fg:w="1"/><text x="2.1463%" y="1183.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="1.9277%" y="1205" width="0.0105%" height="15" fill="rgb(240,187,13)" fg:x="184" fg:w="1"/><text x="2.1777%" y="1215.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="1.9277%" y="1189" width="0.0105%" height="15" fill="rgb(223,113,26)" fg:x="184" fg:w="1"/><text x="2.1777%" y="1199.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.01%)</title><rect x="1.9277%" y="1173" width="0.0105%" height="15" fill="rgb(206,192,2)" fg:x="184" fg:w="1"/><text x="2.1777%" y="1183.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.01%)</title><rect x="1.9277%" y="1157" width="0.0105%" height="15" fill="rgb(241,108,4)" fg:x="184" fg:w="1"/><text x="2.1777%" y="1167.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="1.9068%" y="1237" width="0.0419%" height="15" fill="rgb(247,173,49)" fg:x="182" fg:w="4"/><text x="2.1568%" y="1247.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="1.9277%" y="1221" width="0.0210%" height="15" fill="rgb(224,114,35)" fg:x="184" fg:w="2"/><text x="2.1777%" y="1231.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="1.9382%" y="1205" width="0.0105%" height="15" fill="rgb(245,159,27)" fg:x="185" fg:w="1"/><text x="2.1882%" y="1215.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="1.9487%" y="1237" width="0.0105%" height="15" fill="rgb(245,172,44)" fg:x="186" fg:w="1"/><text x="2.1987%" y="1247.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="1.9591%" y="1237" width="0.0105%" height="15" fill="rgb(236,23,11)" fg:x="187" fg:w="1"/><text x="2.2091%" y="1247.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="1.9696%" y="1237" width="0.0105%" height="15" fill="rgb(205,117,38)" fg:x="188" fg:w="1"/><text x="2.2196%" y="1247.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="1.9801%" y="1237" width="0.0105%" height="15" fill="rgb(237,72,25)" fg:x="189" fg:w="1"/><text x="2.2301%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="1.9906%" y="1237" width="0.0105%" height="15" fill="rgb(244,70,9)" fg:x="190" fg:w="1"/><text x="2.2406%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Inner&gt; (1 samples, 0.01%)</title><rect x="1.9906%" y="1221" width="0.0105%" height="15" fill="rgb(217,125,39)" fg:x="190" fg:w="1"/><text x="2.2406%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::condvar::Condvar&gt; (1 samples, 0.01%)</title><rect x="1.9906%" y="1205" width="0.0105%" height="15" fill="rgb(235,36,10)" fg:x="190" fg:w="1"/><text x="2.2406%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::condvar::Condvar&gt; (1 samples, 0.01%)</title><rect x="1.9906%" y="1189" width="0.0105%" height="15" fill="rgb(251,123,47)" fg:x="190" fg:w="1"/><text x="2.2406%" y="1199.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="2.0010%" y="1237" width="0.0105%" height="15" fill="rgb(221,13,13)" fg:x="191" fg:w="1"/><text x="2.2510%" y="1247.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1 samples, 0.01%)</title><rect x="2.0115%" y="1237" width="0.0105%" height="15" fill="rgb(238,131,9)" fg:x="192" fg:w="1"/><text x="2.2615%" y="1247.50"></text></g><g><title>bevy_text::text2d::text2d_system (1 samples, 0.01%)</title><rect x="2.0220%" y="1237" width="0.0105%" height="15" fill="rgb(211,50,8)" fg:x="193" fg:w="1"/><text x="2.2720%" y="1247.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="2.0325%" y="1237" width="0.0105%" height="15" fill="rgb(245,182,24)" fg:x="194" fg:w="1"/><text x="2.2825%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="2.0430%" y="1237" width="0.0105%" height="15" fill="rgb(242,14,37)" fg:x="195" fg:w="1"/><text x="2.2930%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;gfx_backend_vulkan::native::Framebuffer,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="2.0534%" y="1237" width="0.0105%" height="15" fill="rgb(246,228,12)" fg:x="196" fg:w="1"/><text x="2.3034%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;async_channel::Receiver&lt;()&gt;::recv::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="2.0639%" y="1237" width="0.0105%" height="15" fill="rgb(213,55,15)" fg:x="197" fg:w="1"/><text x="2.3139%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;::recv::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="2.0639%" y="1221" width="0.0105%" height="15" fill="rgb(209,9,3)" fg:x="197" fg:w="1"/><text x="2.3139%" y="1231.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (2 samples, 0.02%)</title><rect x="2.0744%" y="1237" width="0.0210%" height="15" fill="rgb(230,59,30)" fg:x="198" fg:w="2"/><text x="2.3244%" y="1247.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.01%)</title><rect x="2.0953%" y="1237" width="0.0105%" height="15" fill="rgb(209,121,21)" fg:x="200" fg:w="1"/><text x="2.3453%" y="1247.50"></text></g><g><title>event_listener::Event::inner (1 samples, 0.01%)</title><rect x="2.0953%" y="1221" width="0.0105%" height="15" fill="rgb(220,109,13)" fg:x="200" fg:w="1"/><text x="2.3453%" y="1231.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="2.0953%" y="1205" width="0.0105%" height="15" fill="rgb(232,18,1)" fg:x="200" fg:w="1"/><text x="2.3453%" y="1215.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="2.0953%" y="1189" width="0.0105%" height="15" fill="rgb(215,41,42)" fg:x="200" fg:w="1"/><text x="2.3453%" y="1199.50"></text></g><g><title>glslang::TPpContext::tStringInput::getch (1 samples, 0.01%)</title><rect x="2.1058%" y="1237" width="0.0105%" height="15" fill="rgb(224,123,36)" fg:x="201" fg:w="1"/><text x="2.3558%" y="1247.50"></text></g><g><title>glslang::TPpContext::tStringInput::scan (1 samples, 0.01%)</title><rect x="2.1163%" y="1237" width="0.0105%" height="15" fill="rgb(240,125,3)" fg:x="202" fg:w="1"/><text x="2.3663%" y="1247.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (1 samples, 0.01%)</title><rect x="2.1268%" y="1237" width="0.0105%" height="15" fill="rgb(205,98,50)" fg:x="203" fg:w="1"/><text x="2.3768%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="2.1372%" y="1237" width="0.0105%" height="15" fill="rgb(205,185,37)" fg:x="204" fg:w="1"/><text x="2.3872%" y="1247.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (1 samples, 0.01%)</title><rect x="2.1477%" y="1237" width="0.0105%" height="15" fill="rgb(238,207,15)" fg:x="205" fg:w="1"/><text x="2.3977%" y="1247.50"></text></g><g><title>parking::Parker::new (1 samples, 0.01%)</title><rect x="2.1582%" y="1237" width="0.0105%" height="15" fill="rgb(213,199,42)" fg:x="206" fg:w="1"/><text x="2.4082%" y="1247.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="2.1582%" y="1221" width="0.0105%" height="15" fill="rgb(235,201,11)" fg:x="206" fg:w="1"/><text x="2.4082%" y="1231.50"></text></g><g><title>parking::Parker::park (2 samples, 0.02%)</title><rect x="2.1687%" y="1237" width="0.0210%" height="15" fill="rgb(207,46,11)" fg:x="207" fg:w="2"/><text x="2.4187%" y="1247.50"></text></g><g><title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_insert_unique&lt;unsigned int const&amp;&gt; (1 samples, 0.01%)</title><rect x="2.1896%" y="1237" width="0.0105%" height="15" fill="rgb(241,35,35)" fg:x="209" fg:w="1"/><text x="2.4396%" y="1247.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.01%)</title><rect x="2.2001%" y="1237" width="0.0105%" height="15" fill="rgb(243,32,47)" fg:x="210" fg:w="1"/><text x="2.4501%" y="1247.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (1 samples, 0.01%)</title><rect x="2.2106%" y="1237" width="0.0105%" height="15" fill="rgb(247,202,23)" fg:x="211" fg:w="1"/><text x="2.4606%" y="1247.50"></text></g><g><title>core::ops::function::FnOnce::call_once (1 samples, 0.01%)</title><rect x="2.2106%" y="1221" width="0.0105%" height="15" fill="rgb(219,102,11)" fg:x="211" fg:w="1"/><text x="2.4606%" y="1231.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="2.2106%" y="1205" width="0.0105%" height="15" fill="rgb(243,110,44)" fg:x="211" fg:w="1"/><text x="2.4606%" y="1215.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="2.2106%" y="1189" width="0.0105%" height="15" fill="rgb(222,74,54)" fg:x="211" fg:w="1"/><text x="2.4606%" y="1199.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="2.2106%" y="1173" width="0.0105%" height="15" fill="rgb(216,99,12)" fg:x="211" fg:w="1"/><text x="2.4606%" y="1183.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="2.2211%" y="1237" width="0.0105%" height="15" fill="rgb(226,22,26)" fg:x="212" fg:w="1"/><text x="2.4711%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="2.2211%" y="1221" width="0.0105%" height="15" fill="rgb(217,163,10)" fg:x="212" fg:w="1"/><text x="2.4711%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="2.2211%" y="1205" width="0.0105%" height="15" fill="rgb(213,25,53)" fg:x="212" fg:w="1"/><text x="2.4711%" y="1215.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="2.2211%" y="1189" width="0.0105%" height="15" fill="rgb(252,105,26)" fg:x="212" fg:w="1"/><text x="2.4711%" y="1199.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="2.2211%" y="1173" width="0.0105%" height="15" fill="rgb(220,39,43)" fg:x="212" fg:w="1"/><text x="2.4711%" y="1183.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="2.2211%" y="1157" width="0.0105%" height="15" fill="rgb(229,68,48)" fg:x="212" fg:w="1"/><text x="2.4711%" y="1167.50"></text></g><g><title>std::sync::condvar::Condvar::new (1 samples, 0.01%)</title><rect x="2.2315%" y="1237" width="0.0105%" height="15" fill="rgb(252,8,32)" fg:x="213" fg:w="1"/><text x="2.4815%" y="1247.50"></text></g><g><title>std::sys_common::condvar::Condvar::new (1 samples, 0.01%)</title><rect x="2.2315%" y="1221" width="0.0105%" height="15" fill="rgb(223,20,43)" fg:x="213" fg:w="1"/><text x="2.4815%" y="1231.50"></text></g><g><title>std::sys::unix::condvar::Condvar::init (1 samples, 0.01%)</title><rect x="2.2315%" y="1205" width="0.0105%" height="15" fill="rgb(229,81,49)" fg:x="213" fg:w="1"/><text x="2.4815%" y="1215.50"></text></g><g><title>thread_local::thread_id::get (1 samples, 0.01%)</title><rect x="2.2420%" y="1237" width="0.0105%" height="15" fill="rgb(236,28,36)" fg:x="214" fg:w="1"/><text x="2.4920%" y="1247.50"></text></g><g><title>tracing_core::dispatcher::Entered::current (2 samples, 0.02%)</title><rect x="2.2525%" y="1237" width="0.0210%" height="15" fill="rgb(249,185,26)" fg:x="215" fg:w="2"/><text x="2.5025%" y="1247.50"></text></g><g><title>update_get_addr (1 samples, 0.01%)</title><rect x="2.2734%" y="1237" width="0.0105%" height="15" fill="rgb(249,174,33)" fg:x="217" fg:w="1"/><text x="2.5234%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (1 samples, 0.01%)</title><rect x="2.3049%" y="1221" width="0.0105%" height="15" fill="rgb(233,201,37)" fg:x="220" fg:w="1"/><text x="2.5549%" y="1231.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="2.3049%" y="1205" width="0.0105%" height="15" fill="rgb(221,78,26)" fg:x="220" fg:w="1"/><text x="2.5549%" y="1215.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (5 samples, 0.05%)</title><rect x="2.2839%" y="1237" width="0.0524%" height="15" fill="rgb(250,127,30)" fg:x="218" fg:w="5"/><text x="2.5339%" y="1247.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (2 samples, 0.02%)</title><rect x="2.3153%" y="1221" width="0.0210%" height="15" fill="rgb(230,49,44)" fg:x="221" fg:w="2"/><text x="2.5653%" y="1231.50"></text></g><g><title>wgpu::MapContext::add (1 samples, 0.01%)</title><rect x="2.3363%" y="1237" width="0.0105%" height="15" fill="rgb(229,67,23)" fg:x="223" fg:w="1"/><text x="2.5863%" y="1247.50"></text></g><g><title>[anon] (69 samples, 0.72%)</title><rect x="1.6344%" y="1253" width="0.7229%" height="15" fill="rgb(249,83,47)" fg:x="156" fg:w="69"/><text x="1.8844%" y="1263.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="2.3468%" y="1237" width="0.0105%" height="15" fill="rgb(215,43,3)" fg:x="224" fg:w="1"/><text x="2.5968%" y="1247.50"></text></g><g><title>[game] (2 samples, 0.02%)</title><rect x="2.3573%" y="1253" width="0.0210%" height="15" fill="rgb(238,154,13)" fg:x="225" fg:w="2"/><text x="2.6073%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.02%)</title><rect x="2.3573%" y="1237" width="0.0210%" height="15" fill="rgb(219,56,2)" fg:x="225" fg:w="2"/><text x="2.6073%" y="1247.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="2.3782%" y="1237" width="0.0210%" height="15" fill="rgb(233,0,4)" fg:x="227" fg:w="2"/><text x="2.6282%" y="1247.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="2.3992%" y="1237" width="0.0105%" height="15" fill="rgb(235,30,7)" fg:x="229" fg:w="1"/><text x="2.6492%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (1 samples, 0.01%)</title><rect x="2.4096%" y="1237" width="0.0105%" height="15" fill="rgb(250,79,13)" fg:x="230" fg:w="1"/><text x="2.6596%" y="1247.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="2.4201%" y="1237" width="0.0105%" height="15" fill="rgb(211,146,34)" fg:x="231" fg:w="1"/><text x="2.6701%" y="1247.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (2 samples, 0.02%)</title><rect x="2.4306%" y="1237" width="0.0210%" height="15" fill="rgb(228,22,38)" fg:x="232" fg:w="2"/><text x="2.6806%" y="1247.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system::{{closure}} (1 samples, 0.01%)</title><rect x="2.4515%" y="1237" width="0.0105%" height="15" fill="rgb(235,168,5)" fg:x="234" fg:w="1"/><text x="2.7015%" y="1247.50"></text></g><g><title>glslang::TPpContext::tokenPaste (1 samples, 0.01%)</title><rect x="2.4620%" y="1237" width="0.0105%" height="15" fill="rgb(221,155,16)" fg:x="235" fg:w="1"/><text x="2.7120%" y="1247.50"></text></g><g><title>glslang::TPpContext::tokenize (1 samples, 0.01%)</title><rect x="2.4725%" y="1237" width="0.0105%" height="15" fill="rgb(215,215,53)" fg:x="236" fg:w="1"/><text x="2.7225%" y="1247.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (2 samples, 0.02%)</title><rect x="2.4830%" y="1237" width="0.0210%" height="15" fill="rgb(223,4,10)" fg:x="237" fg:w="2"/><text x="2.7330%" y="1247.50"></text></g><g><title>std::io::stdio::set_output_capture (1 samples, 0.01%)</title><rect x="2.5039%" y="1237" width="0.0105%" height="15" fill="rgb(234,103,6)" fg:x="239" fg:w="1"/><text x="2.7539%" y="1247.50"></text></g><g><title>[libbevy_dylib-7e0daee3ecabe62f.so] (14 samples, 0.15%)</title><rect x="2.3782%" y="1253" width="0.1467%" height="15" fill="rgb(227,97,0)" fg:x="227" fg:w="14"/><text x="2.6282%" y="1263.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (1 samples, 0.01%)</title><rect x="2.5144%" y="1237" width="0.0105%" height="15" fill="rgb(234,150,53)" fg:x="240" fg:w="1"/><text x="2.7644%" y="1247.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (1 samples, 0.01%)</title><rect x="2.5144%" y="1221" width="0.0105%" height="15" fill="rgb(228,201,54)" fg:x="240" fg:w="1"/><text x="2.7644%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="2.5249%" y="1253" width="0.0105%" height="15" fill="rgb(222,22,37)" fg:x="241" fg:w="1"/><text x="2.7749%" y="1263.50"></text></g><g><title>__GI___snprintf (1 samples, 0.01%)</title><rect x="2.5354%" y="997" width="0.0105%" height="15" fill="rgb(237,53,32)" fg:x="242" fg:w="1"/><text x="2.7854%" y="1007.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="2.5354%" y="981" width="0.0105%" height="15" fill="rgb(233,25,53)" fg:x="242" fg:w="1"/><text x="2.7854%" y="991.50"></text></g><g><title>_IO_no_init (1 samples, 0.01%)</title><rect x="2.5354%" y="965" width="0.0105%" height="15" fill="rgb(210,40,34)" fg:x="242" fg:w="1"/><text x="2.7854%" y="975.50"></text></g><g><title>_IO_old_init (1 samples, 0.01%)</title><rect x="2.5354%" y="949" width="0.0105%" height="15" fill="rgb(241,220,44)" fg:x="242" fg:w="1"/><text x="2.7854%" y="959.50"></text></g><g><title>glslang::TBuiltIns::initialize (3 samples, 0.03%)</title><rect x="2.5354%" y="1013" width="0.0314%" height="15" fill="rgb(235,28,35)" fg:x="242" fg:w="3"/><text x="2.7854%" y="1023.50"></text></g><g><title>glslang::TBuiltIns::add2ndGenerationSamplingImaging (2 samples, 0.02%)</title><rect x="2.5458%" y="997" width="0.0210%" height="15" fill="rgb(210,56,17)" fg:x="243" fg:w="2"/><text x="2.7958%" y="1007.50"></text></g><g><title>glslang::TBuiltIns::addSamplingFunctions (2 samples, 0.02%)</title><rect x="2.5458%" y="981" width="0.0210%" height="15" fill="rgb(224,130,29)" fg:x="243" fg:w="2"/><text x="2.7958%" y="991.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.01%)</title><rect x="2.5563%" y="965" width="0.0105%" height="15" fill="rgb(235,212,8)" fg:x="244" fg:w="1"/><text x="2.8063%" y="975.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (4 samples, 0.04%)</title><rect x="2.5354%" y="1125" width="0.0419%" height="15" fill="rgb(223,33,50)" fg:x="242" fg:w="4"/><text x="2.7854%" y="1135.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (4 samples, 0.04%)</title><rect x="2.5354%" y="1109" width="0.0419%" height="15" fill="rgb(219,149,13)" fg:x="242" fg:w="4"/><text x="2.7854%" y="1119.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (4 samples, 0.04%)</title><rect x="2.5354%" y="1093" width="0.0419%" height="15" fill="rgb(250,156,29)" fg:x="242" fg:w="4"/><text x="2.7854%" y="1103.50"></text></g><g><title>bevy_glsl_to_spirv::compile (4 samples, 0.04%)</title><rect x="2.5354%" y="1077" width="0.0419%" height="15" fill="rgb(216,193,19)" fg:x="242" fg:w="4"/><text x="2.7854%" y="1087.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (4 samples, 0.04%)</title><rect x="2.5354%" y="1061" width="0.0419%" height="15" fill="rgb(216,135,14)" fg:x="242" fg:w="4"/><text x="2.7854%" y="1071.50"></text></g><g><title>glslang_shader_preprocess (4 samples, 0.04%)</title><rect x="2.5354%" y="1045" width="0.0419%" height="15" fill="rgb(241,47,5)" fg:x="242" fg:w="4"/><text x="2.7854%" y="1055.50"></text></g><g><title>glslang::TShader::preprocess (4 samples, 0.04%)</title><rect x="2.5354%" y="1029" width="0.0419%" height="15" fill="rgb(233,42,35)" fg:x="242" fg:w="4"/><text x="2.7854%" y="1039.50"></text></g><g><title>glslang::TSymbolTable::copyTable (1 samples, 0.01%)</title><rect x="2.5668%" y="1013" width="0.0105%" height="15" fill="rgb(231,13,6)" fg:x="245" fg:w="1"/><text x="2.8168%" y="1023.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (1 samples, 0.01%)</title><rect x="2.5668%" y="997" width="0.0105%" height="15" fill="rgb(207,181,40)" fg:x="245" fg:w="1"/><text x="2.8168%" y="1007.50"></text></g><g><title>glslang::TFunction::clone (1 samples, 0.01%)</title><rect x="2.5668%" y="981" width="0.0105%" height="15" fill="rgb(254,173,49)" fg:x="245" fg:w="1"/><text x="2.8168%" y="991.50"></text></g><g><title>glslang::TFunction::TFunction (1 samples, 0.01%)</title><rect x="2.5668%" y="965" width="0.0105%" height="15" fill="rgb(221,1,38)" fg:x="245" fg:w="1"/><text x="2.8168%" y="975.50"></text></g><g><title>glslang::TType::clone (1 samples, 0.01%)</title><rect x="2.5668%" y="949" width="0.0105%" height="15" fill="rgb(206,124,46)" fg:x="245" fg:w="1"/><text x="2.8168%" y="959.50"></text></g><g><title>glslang::TType::deepCopy (1 samples, 0.01%)</title><rect x="2.5668%" y="933" width="0.0105%" height="15" fill="rgb(249,21,11)" fg:x="245" fg:w="1"/><text x="2.8168%" y="943.50"></text></g><g><title>glslang::TBuiltIns::initialize (1 samples, 0.01%)</title><rect x="2.5773%" y="981" width="0.0105%" height="15" fill="rgb(222,201,40)" fg:x="246" fg:w="1"/><text x="2.8273%" y="991.50"></text></g><g><title>glslang::TBuiltIns::add2ndGenerationSamplingImaging (1 samples, 0.01%)</title><rect x="2.5773%" y="965" width="0.0105%" height="15" fill="rgb(235,61,29)" fg:x="246" fg:w="1"/><text x="2.8273%" y="975.50"></text></g><g><title>glslang::TBuiltIns::addGatherFunctions (1 samples, 0.01%)</title><rect x="2.5773%" y="949" width="0.0105%" height="15" fill="rgb(219,207,3)" fg:x="246" fg:w="1"/><text x="2.8273%" y="959.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.01%)</title><rect x="2.5773%" y="933" width="0.0105%" height="15" fill="rgb(222,56,46)" fg:x="246" fg:w="1"/><text x="2.8273%" y="943.50"></text></g><g><title>glslang::TFunction::TFunction (5 samples, 0.05%)</title><rect x="2.5877%" y="933" width="0.0524%" height="15" fill="rgb(239,76,54)" fg:x="247" fg:w="5"/><text x="2.8377%" y="943.50"></text></g><g><title>glslang::TType::clone (5 samples, 0.05%)</title><rect x="2.5877%" y="917" width="0.0524%" height="15" fill="rgb(231,124,27)" fg:x="247" fg:w="5"/><text x="2.8377%" y="927.50"></text></g><g><title>glslang::TType::deepCopy (5 samples, 0.05%)</title><rect x="2.5877%" y="901" width="0.0524%" height="15" fill="rgb(249,195,6)" fg:x="247" fg:w="5"/><text x="2.8377%" y="911.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (11 samples, 0.12%)</title><rect x="2.5354%" y="1237" width="0.1152%" height="15" fill="rgb(237,174,47)" fg:x="242" fg:w="11"/><text x="2.7854%" y="1247.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (11 samples, 0.12%)</title><rect x="2.5354%" y="1221" width="0.1152%" height="15" fill="rgb(206,201,31)" fg:x="242" fg:w="11"/><text x="2.7854%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (11 samples, 0.12%)</title><rect x="2.5354%" y="1205" width="0.1152%" height="15" fill="rgb(231,57,52)" fg:x="242" fg:w="11"/><text x="2.7854%" y="1215.50"></text></g><g><title>core::ops::function::Fn::call (11 samples, 0.12%)</title><rect x="2.5354%" y="1189" width="0.1152%" height="15" fill="rgb(248,177,22)" fg:x="242" fg:w="11"/><text x="2.7854%" y="1199.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (11 samples, 0.12%)</title><rect x="2.5354%" y="1173" width="0.1152%" height="15" fill="rgb(215,211,37)" fg:x="242" fg:w="11"/><text x="2.7854%" y="1183.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (11 samples, 0.12%)</title><rect x="2.5354%" y="1157" width="0.1152%" height="15" fill="rgb(241,128,51)" fg:x="242" fg:w="11"/><text x="2.7854%" y="1167.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (11 samples, 0.12%)</title><rect x="2.5354%" y="1141" width="0.1152%" height="15" fill="rgb(227,165,31)" fg:x="242" fg:w="11"/><text x="2.7854%" y="1151.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.07%)</title><rect x="2.5773%" y="1125" width="0.0733%" height="15" fill="rgb(228,167,24)" fg:x="246" fg:w="7"/><text x="2.8273%" y="1135.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (7 samples, 0.07%)</title><rect x="2.5773%" y="1109" width="0.0733%" height="15" fill="rgb(228,143,12)" fg:x="246" fg:w="7"/><text x="2.8273%" y="1119.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (7 samples, 0.07%)</title><rect x="2.5773%" y="1093" width="0.0733%" height="15" fill="rgb(249,149,8)" fg:x="246" fg:w="7"/><text x="2.8273%" y="1103.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (7 samples, 0.07%)</title><rect x="2.5773%" y="1077" width="0.0733%" height="15" fill="rgb(243,35,44)" fg:x="246" fg:w="7"/><text x="2.8273%" y="1087.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (7 samples, 0.07%)</title><rect x="2.5773%" y="1061" width="0.0733%" height="15" fill="rgb(246,89,9)" fg:x="246" fg:w="7"/><text x="2.8273%" y="1071.50"></text></g><g><title>bevy_glsl_to_spirv::compile (7 samples, 0.07%)</title><rect x="2.5773%" y="1045" width="0.0733%" height="15" fill="rgb(233,213,13)" fg:x="246" fg:w="7"/><text x="2.8273%" y="1055.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (7 samples, 0.07%)</title><rect x="2.5773%" y="1029" width="0.0733%" height="15" fill="rgb(233,141,41)" fg:x="246" fg:w="7"/><text x="2.8273%" y="1039.50"></text></g><g><title>glslang_shader_preprocess (7 samples, 0.07%)</title><rect x="2.5773%" y="1013" width="0.0733%" height="15" fill="rgb(239,167,4)" fg:x="246" fg:w="7"/><text x="2.8273%" y="1023.50"></text></g><g><title>glslang::TShader::preprocess (7 samples, 0.07%)</title><rect x="2.5773%" y="997" width="0.0733%" height="15" fill="rgb(209,217,16)" fg:x="246" fg:w="7"/><text x="2.8273%" y="1007.50"></text></g><g><title>glslang::TSymbolTable::copyTable (6 samples, 0.06%)</title><rect x="2.5877%" y="981" width="0.0629%" height="15" fill="rgb(219,88,35)" fg:x="247" fg:w="6"/><text x="2.8377%" y="991.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (6 samples, 0.06%)</title><rect x="2.5877%" y="965" width="0.0629%" height="15" fill="rgb(220,193,23)" fg:x="247" fg:w="6"/><text x="2.8377%" y="975.50"></text></g><g><title>glslang::TFunction::clone (6 samples, 0.06%)</title><rect x="2.5877%" y="949" width="0.0629%" height="15" fill="rgb(230,90,52)" fg:x="247" fg:w="6"/><text x="2.8377%" y="959.50"></text></g><g><title>glslang::TPoolAllocator::allocate (1 samples, 0.01%)</title><rect x="2.6401%" y="933" width="0.0105%" height="15" fill="rgb(252,106,19)" fg:x="252" fg:w="1"/><text x="2.8901%" y="943.50"></text></g><g><title>operator new (1 samples, 0.01%)</title><rect x="2.6401%" y="917" width="0.0105%" height="15" fill="rgb(206,74,20)" fg:x="252" fg:w="1"/><text x="2.8901%" y="927.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="2.6401%" y="901" width="0.0105%" height="15" fill="rgb(230,138,44)" fg:x="252" fg:w="1"/><text x="2.8901%" y="911.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="2.6401%" y="885" width="0.0105%" height="15" fill="rgb(235,182,43)" fg:x="252" fg:w="1"/><text x="2.8901%" y="895.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="2.6401%" y="869" width="0.0105%" height="15" fill="rgb(242,16,51)" fg:x="252" fg:w="1"/><text x="2.8901%" y="879.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (1 samples, 0.01%)</title><rect x="2.6506%" y="1237" width="0.0105%" height="15" fill="rgb(248,9,4)" fg:x="253" fg:w="1"/><text x="2.9006%" y="1247.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="2.6611%" y="1237" width="0.0629%" height="15" fill="rgb(210,31,22)" fg:x="254" fg:w="6"/><text x="2.9111%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="2.7239%" y="1237" width="0.0105%" height="15" fill="rgb(239,54,39)" fg:x="260" fg:w="1"/><text x="2.9739%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (1 samples, 0.01%)</title><rect x="2.7344%" y="1237" width="0.0105%" height="15" fill="rgb(230,99,41)" fg:x="261" fg:w="1"/><text x="2.9844%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::BufferViewMut&gt; (1 samples, 0.01%)</title><rect x="2.7344%" y="1221" width="0.0105%" height="15" fill="rgb(253,106,12)" fg:x="261" fg:w="1"/><text x="2.9844%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::direct::BufferMappedRange&gt; (1 samples, 0.01%)</title><rect x="2.7344%" y="1205" width="0.0105%" height="15" fill="rgb(213,46,41)" fg:x="261" fg:w="1"/><text x="2.9844%" y="1215.50"></text></g><g><title>glslang::TFunction::clone (1 samples, 0.01%)</title><rect x="2.7554%" y="869" width="0.0105%" height="15" fill="rgb(215,133,35)" fg:x="263" fg:w="1"/><text x="3.0054%" y="879.50"></text></g><g><title>glslang::TSymbolTable::copyTable (4 samples, 0.04%)</title><rect x="2.7449%" y="901" width="0.0419%" height="15" fill="rgb(213,28,5)" fg:x="262" fg:w="4"/><text x="2.9949%" y="911.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (4 samples, 0.04%)</title><rect x="2.7449%" y="885" width="0.0419%" height="15" fill="rgb(215,77,49)" fg:x="262" fg:w="4"/><text x="2.9949%" y="895.50"></text></g><g><title>std::_Rb_tree_increment (2 samples, 0.02%)</title><rect x="2.7658%" y="869" width="0.0210%" height="15" fill="rgb(248,100,22)" fg:x="264" fg:w="2"/><text x="3.0158%" y="879.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (5 samples, 0.05%)</title><rect x="2.7449%" y="1013" width="0.0524%" height="15" fill="rgb(208,67,9)" fg:x="262" fg:w="5"/><text x="2.9949%" y="1023.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (5 samples, 0.05%)</title><rect x="2.7449%" y="997" width="0.0524%" height="15" fill="rgb(219,133,21)" fg:x="262" fg:w="5"/><text x="2.9949%" y="1007.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (5 samples, 0.05%)</title><rect x="2.7449%" y="981" width="0.0524%" height="15" fill="rgb(246,46,29)" fg:x="262" fg:w="5"/><text x="2.9949%" y="991.50"></text></g><g><title>bevy_glsl_to_spirv::compile (5 samples, 0.05%)</title><rect x="2.7449%" y="965" width="0.0524%" height="15" fill="rgb(246,185,52)" fg:x="262" fg:w="5"/><text x="2.9949%" y="975.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (5 samples, 0.05%)</title><rect x="2.7449%" y="949" width="0.0524%" height="15" fill="rgb(252,136,11)" fg:x="262" fg:w="5"/><text x="2.9949%" y="959.50"></text></g><g><title>glslang_shader_preprocess (5 samples, 0.05%)</title><rect x="2.7449%" y="933" width="0.0524%" height="15" fill="rgb(219,138,53)" fg:x="262" fg:w="5"/><text x="2.9949%" y="943.50"></text></g><g><title>glslang::TShader::preprocess (5 samples, 0.05%)</title><rect x="2.7449%" y="917" width="0.0524%" height="15" fill="rgb(211,51,23)" fg:x="262" fg:w="5"/><text x="2.9949%" y="927.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="2.7868%" y="901" width="0.0105%" height="15" fill="rgb(247,221,28)" fg:x="266" fg:w="1"/><text x="3.0368%" y="911.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="2.7868%" y="885" width="0.0105%" height="15" fill="rgb(251,222,45)" fg:x="266" fg:w="1"/><text x="3.0368%" y="895.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="2.7868%" y="869" width="0.0105%" height="15" fill="rgb(217,162,53)" fg:x="266" fg:w="1"/><text x="3.0368%" y="879.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="2.7868%" y="853" width="0.0105%" height="15" fill="rgb(229,93,14)" fg:x="266" fg:w="1"/><text x="3.0368%" y="863.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (6 samples, 0.06%)</title><rect x="2.7449%" y="1221" width="0.0629%" height="15" fill="rgb(209,67,49)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1231.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (6 samples, 0.06%)</title><rect x="2.7449%" y="1205" width="0.0629%" height="15" fill="rgb(213,87,29)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.06%)</title><rect x="2.7449%" y="1189" width="0.0629%" height="15" fill="rgb(205,151,52)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1199.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (6 samples, 0.06%)</title><rect x="2.7449%" y="1173" width="0.0629%" height="15" fill="rgb(253,215,39)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.06%)</title><rect x="2.7449%" y="1157" width="0.0629%" height="15" fill="rgb(221,220,41)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1167.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (6 samples, 0.06%)</title><rect x="2.7449%" y="1141" width="0.0629%" height="15" fill="rgb(218,133,21)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1151.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (6 samples, 0.06%)</title><rect x="2.7449%" y="1125" width="0.0629%" height="15" fill="rgb(221,193,43)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1135.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (6 samples, 0.06%)</title><rect x="2.7449%" y="1109" width="0.0629%" height="15" fill="rgb(240,128,52)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1119.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (6 samples, 0.06%)</title><rect x="2.7449%" y="1093" width="0.0629%" height="15" fill="rgb(253,114,12)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1103.50"></text></g><g><title>core::ops::function::Fn::call (6 samples, 0.06%)</title><rect x="2.7449%" y="1077" width="0.0629%" height="15" fill="rgb(215,223,47)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1087.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (6 samples, 0.06%)</title><rect x="2.7449%" y="1061" width="0.0629%" height="15" fill="rgb(248,225,23)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1071.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (6 samples, 0.06%)</title><rect x="2.7449%" y="1045" width="0.0629%" height="15" fill="rgb(250,108,0)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1055.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (6 samples, 0.06%)</title><rect x="2.7449%" y="1029" width="0.0629%" height="15" fill="rgb(228,208,7)" fg:x="262" fg:w="6"/><text x="2.9949%" y="1039.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="2.7973%" y="1013" width="0.0105%" height="15" fill="rgb(244,45,10)" fg:x="267" fg:w="1"/><text x="3.0473%" y="1023.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (1 samples, 0.01%)</title><rect x="2.7973%" y="997" width="0.0105%" height="15" fill="rgb(207,125,25)" fg:x="267" fg:w="1"/><text x="3.0473%" y="1007.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (1 samples, 0.01%)</title><rect x="2.7973%" y="981" width="0.0105%" height="15" fill="rgb(210,195,18)" fg:x="267" fg:w="1"/><text x="3.0473%" y="991.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (1 samples, 0.01%)</title><rect x="2.7973%" y="965" width="0.0105%" height="15" fill="rgb(249,80,12)" fg:x="267" fg:w="1"/><text x="3.0473%" y="975.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (1 samples, 0.01%)</title><rect x="2.7973%" y="949" width="0.0105%" height="15" fill="rgb(221,65,9)" fg:x="267" fg:w="1"/><text x="3.0473%" y="959.50"></text></g><g><title>bevy_glsl_to_spirv::compile (1 samples, 0.01%)</title><rect x="2.7973%" y="933" width="0.0105%" height="15" fill="rgb(235,49,36)" fg:x="267" fg:w="1"/><text x="3.0473%" y="943.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (1 samples, 0.01%)</title><rect x="2.7973%" y="917" width="0.0105%" height="15" fill="rgb(225,32,20)" fg:x="267" fg:w="1"/><text x="3.0473%" y="927.50"></text></g><g><title>glslang_shader_preprocess (1 samples, 0.01%)</title><rect x="2.7973%" y="901" width="0.0105%" height="15" fill="rgb(215,141,46)" fg:x="267" fg:w="1"/><text x="3.0473%" y="911.50"></text></g><g><title>glslang::TShader::preprocess (1 samples, 0.01%)</title><rect x="2.7973%" y="885" width="0.0105%" height="15" fill="rgb(250,160,47)" fg:x="267" fg:w="1"/><text x="3.0473%" y="895.50"></text></g><g><title>glslang::TSymbolTable::copyTable (1 samples, 0.01%)</title><rect x="2.7973%" y="869" width="0.0105%" height="15" fill="rgb(216,222,40)" fg:x="267" fg:w="1"/><text x="3.0473%" y="879.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (1 samples, 0.01%)</title><rect x="2.7973%" y="853" width="0.0105%" height="15" fill="rgb(234,217,39)" fg:x="267" fg:w="1"/><text x="3.0473%" y="863.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="2.7973%" y="837" width="0.0105%" height="15" fill="rgb(207,178,40)" fg:x="267" fg:w="1"/><text x="3.0473%" y="847.50"></text></g><g><title>glslang_initialize_process (1 samples, 0.01%)</title><rect x="2.8078%" y="885" width="0.0105%" height="15" fill="rgb(221,136,13)" fg:x="268" fg:w="1"/><text x="3.0578%" y="895.50"></text></g><g><title>glslang::InitializeProcess (1 samples, 0.01%)</title><rect x="2.8078%" y="869" width="0.0105%" height="15" fill="rgb(249,199,10)" fg:x="268" fg:w="1"/><text x="3.0578%" y="879.50"></text></g><g><title>ShInitialize (1 samples, 0.01%)</title><rect x="2.8078%" y="853" width="0.0105%" height="15" fill="rgb(249,222,13)" fg:x="268" fg:w="1"/><text x="3.0578%" y="863.50"></text></g><g><title>glslang::TScanContext::fillInKeywordMap (1 samples, 0.01%)</title><rect x="2.8078%" y="837" width="0.0105%" height="15" fill="rgb(244,185,38)" fg:x="268" fg:w="1"/><text x="3.0578%" y="847.50"></text></g><g><title>std::unordered_map&lt;char const*, int, (anonymous namespace)::str_hash, (anonymous namespace)::str_eq, std::allocator&lt;std::pair&lt;char const* const, int&gt; &gt; &gt;::operator[] (1 samples, 0.01%)</title><rect x="2.8078%" y="821" width="0.0105%" height="15" fill="rgb(236,202,9)" fg:x="268" fg:w="1"/><text x="3.0578%" y="831.50"></text></g><g><title>local_Rb_tree_increment (1 samples, 0.01%)</title><rect x="2.8392%" y="821" width="0.0105%" height="15" fill="rgb(250,229,37)" fg:x="271" fg:w="1"/><text x="3.0892%" y="831.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="2.8392%" y="805" width="0.0105%" height="15" fill="rgb(206,174,23)" fg:x="271" fg:w="1"/><text x="3.0892%" y="815.50"></text></g><g><title>std::_Rb_tree_increment (3 samples, 0.03%)</title><rect x="2.8392%" y="837" width="0.0314%" height="15" fill="rgb(211,33,43)" fg:x="271" fg:w="3"/><text x="3.0892%" y="847.50"></text></g><g><title>std::_Rb_tree_increment (2 samples, 0.02%)</title><rect x="2.8497%" y="821" width="0.0210%" height="15" fill="rgb(245,58,50)" fg:x="272" fg:w="2"/><text x="3.0997%" y="831.50"></text></g><g><title>glslang::TSymbolTableLevel::readOnly (6 samples, 0.06%)</title><rect x="2.8182%" y="853" width="0.0629%" height="15" fill="rgb(244,68,36)" fg:x="269" fg:w="6"/><text x="3.0682%" y="863.50"></text></g><g><title>std::_Rb_tree_increment@plt (1 samples, 0.01%)</title><rect x="2.8706%" y="837" width="0.0105%" height="15" fill="rgb(232,229,15)" fg:x="274" fg:w="1"/><text x="3.1206%" y="847.50"></text></g><g><title>glslang::TFunction::~TFunction (1 samples, 0.01%)</title><rect x="2.8811%" y="837" width="0.0105%" height="15" fill="rgb(254,30,23)" fg:x="275" fg:w="1"/><text x="3.1311%" y="847.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (9 samples, 0.09%)</title><rect x="2.8078%" y="965" width="0.0943%" height="15" fill="rgb(235,160,14)" fg:x="268" fg:w="9"/><text x="3.0578%" y="975.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (9 samples, 0.09%)</title><rect x="2.8078%" y="949" width="0.0943%" height="15" fill="rgb(212,155,44)" fg:x="268" fg:w="9"/><text x="3.0578%" y="959.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (9 samples, 0.09%)</title><rect x="2.8078%" y="933" width="0.0943%" height="15" fill="rgb(226,2,50)" fg:x="268" fg:w="9"/><text x="3.0578%" y="943.50"></text></g><g><title>bevy_glsl_to_spirv::compile (9 samples, 0.09%)</title><rect x="2.8078%" y="917" width="0.0943%" height="15" fill="rgb(234,177,6)" fg:x="268" fg:w="9"/><text x="3.0578%" y="927.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (9 samples, 0.09%)</title><rect x="2.8078%" y="901" width="0.0943%" height="15" fill="rgb(217,24,9)" fg:x="268" fg:w="9"/><text x="3.0578%" y="911.50"></text></g><g><title>glslang_shader_preprocess (8 samples, 0.08%)</title><rect x="2.8182%" y="885" width="0.0838%" height="15" fill="rgb(220,13,46)" fg:x="269" fg:w="8"/><text x="3.0682%" y="895.50"></text></g><g><title>glslang::TShader::preprocess (8 samples, 0.08%)</title><rect x="2.8182%" y="869" width="0.0838%" height="15" fill="rgb(239,221,27)" fg:x="269" fg:w="8"/><text x="3.0682%" y="879.50"></text></g><g><title>glslang::TSymbolTableLevel::~TSymbolTableLevel (2 samples, 0.02%)</title><rect x="2.8811%" y="853" width="0.0210%" height="15" fill="rgb(222,198,25)" fg:x="275" fg:w="2"/><text x="3.1311%" y="863.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="2.8916%" y="837" width="0.0105%" height="15" fill="rgb(211,99,13)" fg:x="276" fg:w="1"/><text x="3.1416%" y="847.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="2.8916%" y="821" width="0.0105%" height="15" fill="rgb(232,111,31)" fg:x="276" fg:w="1"/><text x="3.1416%" y="831.50"></text></g><g><title>local_Rb_tree_increment (1 samples, 0.01%)</title><rect x="2.9335%" y="789" width="0.0105%" height="15" fill="rgb(245,82,37)" fg:x="280" fg:w="1"/><text x="3.1835%" y="799.50"></text></g><g><title>local_Rb_tree_increment (1 samples, 0.01%)</title><rect x="2.9335%" y="773" width="0.0105%" height="15" fill="rgb(227,149,46)" fg:x="280" fg:w="1"/><text x="3.1835%" y="783.50"></text></g><g><title>glslang::TSymbolTableLevel::readOnly (7 samples, 0.07%)</title><rect x="2.9020%" y="821" width="0.0733%" height="15" fill="rgb(218,36,50)" fg:x="277" fg:w="7"/><text x="3.1520%" y="831.50"></text></g><g><title>std::_Rb_tree_increment (4 samples, 0.04%)</title><rect x="2.9335%" y="805" width="0.0419%" height="15" fill="rgb(226,80,48)" fg:x="280" fg:w="4"/><text x="3.1835%" y="815.50"></text></g><g><title>std::_Rb_tree_increment (3 samples, 0.03%)</title><rect x="2.9439%" y="789" width="0.0314%" height="15" fill="rgb(238,224,15)" fg:x="281" fg:w="3"/><text x="3.1939%" y="799.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (19 samples, 0.20%)</title><rect x="2.8078%" y="1221" width="0.1991%" height="15" fill="rgb(241,136,10)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1231.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (19 samples, 0.20%)</title><rect x="2.8078%" y="1205" width="0.1991%" height="15" fill="rgb(208,32,45)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.20%)</title><rect x="2.8078%" y="1189" width="0.1991%" height="15" fill="rgb(207,135,9)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1199.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (19 samples, 0.20%)</title><rect x="2.8078%" y="1173" width="0.1991%" height="15" fill="rgb(206,86,44)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1183.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (19 samples, 0.20%)</title><rect x="2.8078%" y="1157" width="0.1991%" height="15" fill="rgb(245,177,15)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.20%)</title><rect x="2.8078%" y="1141" width="0.1991%" height="15" fill="rgb(206,64,50)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1151.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (19 samples, 0.20%)</title><rect x="2.8078%" y="1125" width="0.1991%" height="15" fill="rgb(234,36,40)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1135.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.20%)</title><rect x="2.8078%" y="1109" width="0.1991%" height="15" fill="rgb(213,64,8)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1119.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (19 samples, 0.20%)</title><rect x="2.8078%" y="1093" width="0.1991%" height="15" fill="rgb(210,75,36)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1103.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (19 samples, 0.20%)</title><rect x="2.8078%" y="1077" width="0.1991%" height="15" fill="rgb(229,88,21)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1087.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (19 samples, 0.20%)</title><rect x="2.8078%" y="1061" width="0.1991%" height="15" fill="rgb(252,204,47)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1071.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (19 samples, 0.20%)</title><rect x="2.8078%" y="1045" width="0.1991%" height="15" fill="rgb(208,77,27)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1055.50"></text></g><g><title>core::ops::function::Fn::call (19 samples, 0.20%)</title><rect x="2.8078%" y="1029" width="0.1991%" height="15" fill="rgb(221,76,26)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1039.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (19 samples, 0.20%)</title><rect x="2.8078%" y="1013" width="0.1991%" height="15" fill="rgb(225,139,18)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1023.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (19 samples, 0.20%)</title><rect x="2.8078%" y="997" width="0.1991%" height="15" fill="rgb(230,137,11)" fg:x="268" fg:w="19"/><text x="3.0578%" y="1007.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (19 samples, 0.20%)</title><rect x="2.8078%" y="981" width="0.1991%" height="15" fill="rgb(212,28,1)" fg:x="268" fg:w="19"/><text x="3.0578%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (10 samples, 0.10%)</title><rect x="2.9020%" y="965" width="0.1048%" height="15" fill="rgb(248,164,17)" fg:x="277" fg:w="10"/><text x="3.1520%" y="975.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (10 samples, 0.10%)</title><rect x="2.9020%" y="949" width="0.1048%" height="15" fill="rgb(222,171,42)" fg:x="277" fg:w="10"/><text x="3.1520%" y="959.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (10 samples, 0.10%)</title><rect x="2.9020%" y="933" width="0.1048%" height="15" fill="rgb(243,84,45)" fg:x="277" fg:w="10"/><text x="3.1520%" y="943.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (10 samples, 0.10%)</title><rect x="2.9020%" y="917" width="0.1048%" height="15" fill="rgb(252,49,23)" fg:x="277" fg:w="10"/><text x="3.1520%" y="927.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (10 samples, 0.10%)</title><rect x="2.9020%" y="901" width="0.1048%" height="15" fill="rgb(215,19,7)" fg:x="277" fg:w="10"/><text x="3.1520%" y="911.50"></text></g><g><title>bevy_glsl_to_spirv::compile (10 samples, 0.10%)</title><rect x="2.9020%" y="885" width="0.1048%" height="15" fill="rgb(238,81,41)" fg:x="277" fg:w="10"/><text x="3.1520%" y="895.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (10 samples, 0.10%)</title><rect x="2.9020%" y="869" width="0.1048%" height="15" fill="rgb(210,199,37)" fg:x="277" fg:w="10"/><text x="3.1520%" y="879.50"></text></g><g><title>glslang_shader_preprocess (10 samples, 0.10%)</title><rect x="2.9020%" y="853" width="0.1048%" height="15" fill="rgb(244,192,49)" fg:x="277" fg:w="10"/><text x="3.1520%" y="863.50"></text></g><g><title>glslang::TShader::preprocess (10 samples, 0.10%)</title><rect x="2.9020%" y="837" width="0.1048%" height="15" fill="rgb(226,211,11)" fg:x="277" fg:w="10"/><text x="3.1520%" y="847.50"></text></g><g><title>glslang::TSymbolTableLevel::~TSymbolTableLevel (3 samples, 0.03%)</title><rect x="2.9754%" y="821" width="0.0314%" height="15" fill="rgb(236,162,54)" fg:x="284" fg:w="3"/><text x="3.2254%" y="831.50"></text></g><g><title>std::_Rb_tree_increment (2 samples, 0.02%)</title><rect x="2.9859%" y="805" width="0.0210%" height="15" fill="rgb(220,229,9)" fg:x="285" fg:w="2"/><text x="3.2359%" y="815.50"></text></g><g><title>std::_Rb_tree_increment (2 samples, 0.02%)</title><rect x="2.9859%" y="789" width="0.0210%" height="15" fill="rgb(250,87,22)" fg:x="285" fg:w="2"/><text x="3.2359%" y="799.50"></text></g><g><title>__memchr_avx2 (1 samples, 0.01%)</title><rect x="3.0278%" y="901" width="0.0105%" height="15" fill="rgb(239,43,17)" fg:x="289" fg:w="1"/><text x="3.2778%" y="911.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="3.0382%" y="901" width="0.0105%" height="15" fill="rgb(231,177,25)" fg:x="290" fg:w="1"/><text x="3.2882%" y="911.50"></text></g><g><title>glslang::GetThreadPoolAllocator (1 samples, 0.01%)</title><rect x="3.0487%" y="901" width="0.0105%" height="15" fill="rgb(219,179,1)" fg:x="291" fg:w="1"/><text x="3.2987%" y="911.50"></text></g><g><title>pthread_getspecific@plt (1 samples, 0.01%)</title><rect x="3.0487%" y="885" width="0.0105%" height="15" fill="rgb(238,219,53)" fg:x="291" fg:w="1"/><text x="3.2987%" y="895.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (6 samples, 0.06%)</title><rect x="3.0068%" y="1061" width="0.0629%" height="15" fill="rgb(232,167,36)" fg:x="287" fg:w="6"/><text x="3.2568%" y="1071.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (6 samples, 0.06%)</title><rect x="3.0068%" y="1045" width="0.0629%" height="15" fill="rgb(244,19,51)" fg:x="287" fg:w="6"/><text x="3.2568%" y="1055.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (6 samples, 0.06%)</title><rect x="3.0068%" y="1029" width="0.0629%" height="15" fill="rgb(224,6,22)" fg:x="287" fg:w="6"/><text x="3.2568%" y="1039.50"></text></g><g><title>bevy_glsl_to_spirv::compile (6 samples, 0.06%)</title><rect x="3.0068%" y="1013" width="0.0629%" height="15" fill="rgb(224,145,5)" fg:x="287" fg:w="6"/><text x="3.2568%" y="1023.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (6 samples, 0.06%)</title><rect x="3.0068%" y="997" width="0.0629%" height="15" fill="rgb(234,130,49)" fg:x="287" fg:w="6"/><text x="3.2568%" y="1007.50"></text></g><g><title>glslang_shader_preprocess (6 samples, 0.06%)</title><rect x="3.0068%" y="981" width="0.0629%" height="15" fill="rgb(254,6,2)" fg:x="287" fg:w="6"/><text x="3.2568%" y="991.50"></text></g><g><title>glslang::TShader::preprocess (6 samples, 0.06%)</title><rect x="3.0068%" y="965" width="0.0629%" height="15" fill="rgb(208,96,46)" fg:x="287" fg:w="6"/><text x="3.2568%" y="975.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (6 samples, 0.06%)</title><rect x="3.0068%" y="949" width="0.0629%" height="15" fill="rgb(239,3,39)" fg:x="287" fg:w="6"/><text x="3.2568%" y="959.50"></text></g><g><title>glslang::TBuiltIns::relateTabledBuiltins (6 samples, 0.06%)</title><rect x="3.0068%" y="933" width="0.0629%" height="15" fill="rgb(233,210,1)" fg:x="287" fg:w="6"/><text x="3.2568%" y="943.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (6 samples, 0.06%)</title><rect x="3.0068%" y="917" width="0.0629%" height="15" fill="rgb(244,137,37)" fg:x="287" fg:w="6"/><text x="3.2568%" y="927.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="3.0592%" y="901" width="0.0105%" height="15" fill="rgb(240,136,2)" fg:x="292" fg:w="1"/><text x="3.3092%" y="911.50"></text></g><g><title>__memchr_avx2 (1 samples, 0.01%)</title><rect x="3.0697%" y="869" width="0.0105%" height="15" fill="rgb(239,18,37)" fg:x="293" fg:w="1"/><text x="3.3197%" y="879.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (9 samples, 0.09%)</title><rect x="3.0068%" y="1221" width="0.0943%" height="15" fill="rgb(218,185,22)" fg:x="287" fg:w="9"/><text x="3.2568%" y="1231.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (9 samples, 0.09%)</title><rect x="3.0068%" y="1205" width="0.0943%" height="15" fill="rgb(225,218,4)" fg:x="287" fg:w="9"/><text x="3.2568%" y="1215.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (9 samples, 0.09%)</title><rect x="3.0068%" y="1189" width="0.0943%" height="15" fill="rgb(230,182,32)" fg:x="287" fg:w="9"/><text x="3.2568%" y="1199.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (9 samples, 0.09%)</title><rect x="3.0068%" y="1173" width="0.0943%" height="15" fill="rgb(242,56,43)" fg:x="287" fg:w="9"/><text x="3.2568%" y="1183.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (9 samples, 0.09%)</title><rect x="3.0068%" y="1157" width="0.0943%" height="15" fill="rgb(233,99,24)" fg:x="287" fg:w="9"/><text x="3.2568%" y="1167.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (9 samples, 0.09%)</title><rect x="3.0068%" y="1141" width="0.0943%" height="15" fill="rgb(234,209,42)" fg:x="287" fg:w="9"/><text x="3.2568%" y="1151.50"></text></g><g><title>core::ops::function::Fn::call (9 samples, 0.09%)</title><rect x="3.0068%" y="1125" width="0.0943%" height="15" fill="rgb(227,7,12)" fg:x="287" fg:w="9"/><text x="3.2568%" y="1135.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (9 samples, 0.09%)</title><rect x="3.0068%" y="1109" width="0.0943%" height="15" fill="rgb(245,203,43)" fg:x="287" fg:w="9"/><text x="3.2568%" y="1119.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (9 samples, 0.09%)</title><rect x="3.0068%" y="1093" width="0.0943%" height="15" fill="rgb(238,205,33)" fg:x="287" fg:w="9"/><text x="3.2568%" y="1103.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (9 samples, 0.09%)</title><rect x="3.0068%" y="1077" width="0.0943%" height="15" fill="rgb(231,56,7)" fg:x="287" fg:w="9"/><text x="3.2568%" y="1087.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.03%)</title><rect x="3.0697%" y="1061" width="0.0314%" height="15" fill="rgb(244,186,29)" fg:x="293" fg:w="3"/><text x="3.3197%" y="1071.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (3 samples, 0.03%)</title><rect x="3.0697%" y="1045" width="0.0314%" height="15" fill="rgb(234,111,31)" fg:x="293" fg:w="3"/><text x="3.3197%" y="1055.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (3 samples, 0.03%)</title><rect x="3.0697%" y="1029" width="0.0314%" height="15" fill="rgb(241,149,10)" fg:x="293" fg:w="3"/><text x="3.3197%" y="1039.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (3 samples, 0.03%)</title><rect x="3.0697%" y="1013" width="0.0314%" height="15" fill="rgb(249,206,44)" fg:x="293" fg:w="3"/><text x="3.3197%" y="1023.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (3 samples, 0.03%)</title><rect x="3.0697%" y="997" width="0.0314%" height="15" fill="rgb(251,153,30)" fg:x="293" fg:w="3"/><text x="3.3197%" y="1007.50"></text></g><g><title>bevy_glsl_to_spirv::compile (3 samples, 0.03%)</title><rect x="3.0697%" y="981" width="0.0314%" height="15" fill="rgb(239,152,38)" fg:x="293" fg:w="3"/><text x="3.3197%" y="991.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (3 samples, 0.03%)</title><rect x="3.0697%" y="965" width="0.0314%" height="15" fill="rgb(249,139,47)" fg:x="293" fg:w="3"/><text x="3.3197%" y="975.50"></text></g><g><title>glslang_shader_preprocess (3 samples, 0.03%)</title><rect x="3.0697%" y="949" width="0.0314%" height="15" fill="rgb(244,64,35)" fg:x="293" fg:w="3"/><text x="3.3197%" y="959.50"></text></g><g><title>glslang::TShader::preprocess (3 samples, 0.03%)</title><rect x="3.0697%" y="933" width="0.0314%" height="15" fill="rgb(216,46,15)" fg:x="293" fg:w="3"/><text x="3.3197%" y="943.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (3 samples, 0.03%)</title><rect x="3.0697%" y="917" width="0.0314%" height="15" fill="rgb(250,74,19)" fg:x="293" fg:w="3"/><text x="3.3197%" y="927.50"></text></g><g><title>glslang::TBuiltIns::relateTabledBuiltins (3 samples, 0.03%)</title><rect x="3.0697%" y="901" width="0.0314%" height="15" fill="rgb(249,42,33)" fg:x="293" fg:w="3"/><text x="3.3197%" y="911.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (3 samples, 0.03%)</title><rect x="3.0697%" y="885" width="0.0314%" height="15" fill="rgb(242,149,17)" fg:x="293" fg:w="3"/><text x="3.3197%" y="895.50"></text></g><g><title>std::_Rb_tree_increment (2 samples, 0.02%)</title><rect x="3.0801%" y="869" width="0.0210%" height="15" fill="rgb(244,29,21)" fg:x="294" fg:w="2"/><text x="3.3301%" y="879.50"></text></g><g><title>glslang_program_SPIRV_generate (1 samples, 0.01%)</title><rect x="3.1011%" y="1013" width="0.0105%" height="15" fill="rgb(220,130,37)" fg:x="296" fg:w="1"/><text x="3.3511%" y="1023.50"></text></g><g><title>glslang::GlslangToSpv (1 samples, 0.01%)</title><rect x="3.1011%" y="997" width="0.0105%" height="15" fill="rgb(211,67,2)" fg:x="296" fg:w="1"/><text x="3.3511%" y="1007.50"></text></g><g><title>spv::Builder::postProcess (1 samples, 0.01%)</title><rect x="3.1011%" y="981" width="0.0105%" height="15" fill="rgb(235,68,52)" fg:x="296" fg:w="1"/><text x="3.3511%" y="991.50"></text></g><g><title>spv::Builder::postProcessCFG (1 samples, 0.01%)</title><rect x="3.1011%" y="965" width="0.0105%" height="15" fill="rgb(246,142,3)" fg:x="296" fg:w="1"/><text x="3.3511%" y="975.50"></text></g><g><title>spv::inReadableOrder (1 samples, 0.01%)</title><rect x="3.1011%" y="949" width="0.0105%" height="15" fill="rgb(241,25,7)" fg:x="296" fg:w="1"/><text x="3.3511%" y="959.50"></text></g><g><title>glslang::TFunction::clone (4 samples, 0.04%)</title><rect x="3.1116%" y="949" width="0.0419%" height="15" fill="rgb(242,119,39)" fg:x="297" fg:w="4"/><text x="3.3616%" y="959.50"></text></g><g><title>glslang::TFunction::TFunction (4 samples, 0.04%)</title><rect x="3.1116%" y="933" width="0.0419%" height="15" fill="rgb(241,98,45)" fg:x="297" fg:w="4"/><text x="3.3616%" y="943.50"></text></g><g><title>glslang::TType::clone (2 samples, 0.02%)</title><rect x="3.1325%" y="917" width="0.0210%" height="15" fill="rgb(254,28,30)" fg:x="299" fg:w="2"/><text x="3.3825%" y="927.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (2 samples, 0.02%)</title><rect x="3.1535%" y="933" width="0.0210%" height="15" fill="rgb(241,142,54)" fg:x="301" fg:w="2"/><text x="3.4035%" y="943.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_get_insert_unique_pos (2 samples, 0.02%)</title><rect x="3.1535%" y="917" width="0.0210%" height="15" fill="rgb(222,85,15)" fg:x="301" fg:w="2"/><text x="3.4035%" y="927.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="3.1535%" y="901" width="0.0210%" height="15" fill="rgb(210,85,47)" fg:x="301" fg:w="2"/><text x="3.4035%" y="911.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (8 samples, 0.08%)</title><rect x="3.1011%" y="1093" width="0.0838%" height="15" fill="rgb(224,206,25)" fg:x="296" fg:w="8"/><text x="3.3511%" y="1103.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (8 samples, 0.08%)</title><rect x="3.1011%" y="1077" width="0.0838%" height="15" fill="rgb(243,201,19)" fg:x="296" fg:w="8"/><text x="3.3511%" y="1087.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (8 samples, 0.08%)</title><rect x="3.1011%" y="1061" width="0.0838%" height="15" fill="rgb(236,59,4)" fg:x="296" fg:w="8"/><text x="3.3511%" y="1071.50"></text></g><g><title>bevy_glsl_to_spirv::compile (8 samples, 0.08%)</title><rect x="3.1011%" y="1045" width="0.0838%" height="15" fill="rgb(254,179,45)" fg:x="296" fg:w="8"/><text x="3.3511%" y="1055.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (8 samples, 0.08%)</title><rect x="3.1011%" y="1029" width="0.0838%" height="15" fill="rgb(226,14,10)" fg:x="296" fg:w="8"/><text x="3.3511%" y="1039.50"></text></g><g><title>glslang_shader_preprocess (7 samples, 0.07%)</title><rect x="3.1116%" y="1013" width="0.0733%" height="15" fill="rgb(244,27,41)" fg:x="297" fg:w="7"/><text x="3.3616%" y="1023.50"></text></g><g><title>glslang::TShader::preprocess (7 samples, 0.07%)</title><rect x="3.1116%" y="997" width="0.0733%" height="15" fill="rgb(235,35,32)" fg:x="297" fg:w="7"/><text x="3.3616%" y="1007.50"></text></g><g><title>glslang::TSymbolTable::copyTable (7 samples, 0.07%)</title><rect x="3.1116%" y="981" width="0.0733%" height="15" fill="rgb(218,68,31)" fg:x="297" fg:w="7"/><text x="3.3616%" y="991.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (7 samples, 0.07%)</title><rect x="3.1116%" y="965" width="0.0733%" height="15" fill="rgb(207,120,37)" fg:x="297" fg:w="7"/><text x="3.3616%" y="975.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (3 samples, 0.03%)</title><rect x="3.1535%" y="949" width="0.0314%" height="15" fill="rgb(227,98,0)" fg:x="301" fg:w="3"/><text x="3.4035%" y="959.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (1 samples, 0.01%)</title><rect x="3.1744%" y="933" width="0.0105%" height="15" fill="rgb(207,7,3)" fg:x="303" fg:w="1"/><text x="3.4244%" y="943.50"></text></g><g><title>glslang::TFunction::clone (1 samples, 0.01%)</title><rect x="3.1849%" y="917" width="0.0105%" height="15" fill="rgb(206,98,19)" fg:x="304" fg:w="1"/><text x="3.4349%" y="927.50"></text></g><g><title>glslang::TFunction::TFunction (1 samples, 0.01%)</title><rect x="3.1849%" y="901" width="0.0105%" height="15" fill="rgb(217,5,26)" fg:x="304" fg:w="1"/><text x="3.4349%" y="911.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_get_insert_unique_pos (2 samples, 0.02%)</title><rect x="3.1954%" y="885" width="0.0210%" height="15" fill="rgb(235,190,38)" fg:x="305" fg:w="2"/><text x="3.4454%" y="895.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="3.2059%" y="869" width="0.0105%" height="15" fill="rgb(247,86,24)" fg:x="306" fg:w="1"/><text x="3.4559%" y="879.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (3 samples, 0.03%)</title><rect x="3.1954%" y="901" width="0.0314%" height="15" fill="rgb(205,101,16)" fg:x="305" fg:w="3"/><text x="3.4454%" y="911.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.01%)</title><rect x="3.2163%" y="885" width="0.0105%" height="15" fill="rgb(246,168,33)" fg:x="307" fg:w="1"/><text x="3.4663%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.51%)</title><rect x="2.7449%" y="1237" width="0.5134%" height="15" fill="rgb(231,114,1)" fg:x="262" fg:w="49"/><text x="2.9949%" y="1247.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (15 samples, 0.16%)</title><rect x="3.1011%" y="1221" width="0.1572%" height="15" fill="rgb(207,184,53)" fg:x="296" fg:w="15"/><text x="3.3511%" y="1231.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (15 samples, 0.16%)</title><rect x="3.1011%" y="1205" width="0.1572%" height="15" fill="rgb(224,95,51)" fg:x="296" fg:w="15"/><text x="3.3511%" y="1215.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (15 samples, 0.16%)</title><rect x="3.1011%" y="1189" width="0.1572%" height="15" fill="rgb(212,188,45)" fg:x="296" fg:w="15"/><text x="3.3511%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (15 samples, 0.16%)</title><rect x="3.1011%" y="1173" width="0.1572%" height="15" fill="rgb(223,154,38)" fg:x="296" fg:w="15"/><text x="3.3511%" y="1183.50"></text></g><g><title>core::ops::function::Fn::call (15 samples, 0.16%)</title><rect x="3.1011%" y="1157" width="0.1572%" height="15" fill="rgb(251,22,52)" fg:x="296" fg:w="15"/><text x="3.3511%" y="1167.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (15 samples, 0.16%)</title><rect x="3.1011%" y="1141" width="0.1572%" height="15" fill="rgb(229,209,22)" fg:x="296" fg:w="15"/><text x="3.3511%" y="1151.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (15 samples, 0.16%)</title><rect x="3.1011%" y="1125" width="0.1572%" height="15" fill="rgb(234,138,34)" fg:x="296" fg:w="15"/><text x="3.3511%" y="1135.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (15 samples, 0.16%)</title><rect x="3.1011%" y="1109" width="0.1572%" height="15" fill="rgb(212,95,11)" fg:x="296" fg:w="15"/><text x="3.3511%" y="1119.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (7 samples, 0.07%)</title><rect x="3.1849%" y="1093" width="0.0733%" height="15" fill="rgb(240,179,47)" fg:x="304" fg:w="7"/><text x="3.4349%" y="1103.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (7 samples, 0.07%)</title><rect x="3.1849%" y="1077" width="0.0733%" height="15" fill="rgb(240,163,11)" fg:x="304" fg:w="7"/><text x="3.4349%" y="1087.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (7 samples, 0.07%)</title><rect x="3.1849%" y="1061" width="0.0733%" height="15" fill="rgb(236,37,12)" fg:x="304" fg:w="7"/><text x="3.4349%" y="1071.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (7 samples, 0.07%)</title><rect x="3.1849%" y="1045" width="0.0733%" height="15" fill="rgb(232,164,16)" fg:x="304" fg:w="7"/><text x="3.4349%" y="1055.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (7 samples, 0.07%)</title><rect x="3.1849%" y="1029" width="0.0733%" height="15" fill="rgb(244,205,15)" fg:x="304" fg:w="7"/><text x="3.4349%" y="1039.50"></text></g><g><title>bevy_glsl_to_spirv::compile (7 samples, 0.07%)</title><rect x="3.1849%" y="1013" width="0.0733%" height="15" fill="rgb(223,117,47)" fg:x="304" fg:w="7"/><text x="3.4349%" y="1023.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (7 samples, 0.07%)</title><rect x="3.1849%" y="997" width="0.0733%" height="15" fill="rgb(244,107,35)" fg:x="304" fg:w="7"/><text x="3.4349%" y="1007.50"></text></g><g><title>glslang_shader_preprocess (7 samples, 0.07%)</title><rect x="3.1849%" y="981" width="0.0733%" height="15" fill="rgb(205,140,8)" fg:x="304" fg:w="7"/><text x="3.4349%" y="991.50"></text></g><g><title>glslang::TShader::preprocess (7 samples, 0.07%)</title><rect x="3.1849%" y="965" width="0.0733%" height="15" fill="rgb(228,84,46)" fg:x="304" fg:w="7"/><text x="3.4349%" y="975.50"></text></g><g><title>glslang::TSymbolTable::copyTable (7 samples, 0.07%)</title><rect x="3.1849%" y="949" width="0.0733%" height="15" fill="rgb(254,188,9)" fg:x="304" fg:w="7"/><text x="3.4349%" y="959.50"></text></g><g><title>glslang::TSymbolTableLevel::clone (7 samples, 0.07%)</title><rect x="3.1849%" y="933" width="0.0733%" height="15" fill="rgb(206,112,54)" fg:x="304" fg:w="7"/><text x="3.4349%" y="943.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (6 samples, 0.06%)</title><rect x="3.1954%" y="917" width="0.0629%" height="15" fill="rgb(216,84,49)" fg:x="305" fg:w="6"/><text x="3.4454%" y="927.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (3 samples, 0.03%)</title><rect x="3.2268%" y="901" width="0.0314%" height="15" fill="rgb(214,194,35)" fg:x="308" fg:w="3"/><text x="3.4768%" y="911.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="3.2373%" y="885" width="0.0210%" height="15" fill="rgb(249,28,3)" fg:x="309" fg:w="2"/><text x="3.4873%" y="895.50"></text></g><g><title>&lt;glam::mat4::Mat4 as bevy_core::bytes::Bytes&gt;::write_bytes (1 samples, 0.01%)</title><rect x="3.2583%" y="1237" width="0.0105%" height="15" fill="rgb(222,56,52)" fg:x="311" fg:w="1"/><text x="3.5083%" y="1247.50"></text></g><g><title>&lt;gpu_alloc_types::device::AllocationFlags as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="3.2687%" y="1237" width="0.0105%" height="15" fill="rgb(245,217,50)" fg:x="312" fg:w="1"/><text x="3.5187%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="3.2792%" y="1237" width="0.0105%" height="15" fill="rgb(213,201,24)" fg:x="313" fg:w="1"/><text x="3.5292%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="3.2897%" y="1237" width="0.0105%" height="15" fill="rgb(248,116,28)" fg:x="314" fg:w="1"/><text x="3.5397%" y="1247.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.01%)</title><rect x="3.2897%" y="1221" width="0.0105%" height="15" fill="rgb(219,72,43)" fg:x="314" fg:w="1"/><text x="3.5397%" y="1231.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="3.3002%" y="1221" width="0.0105%" height="15" fill="rgb(209,138,14)" fg:x="315" fg:w="1"/><text x="3.5502%" y="1231.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="3.3002%" y="1205" width="0.0105%" height="15" fill="rgb(222,18,33)" fg:x="315" fg:w="1"/><text x="3.5502%" y="1215.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="3.3002%" y="1189" width="0.0105%" height="15" fill="rgb(213,199,7)" fg:x="315" fg:w="1"/><text x="3.5502%" y="1199.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="3.3002%" y="1173" width="0.0105%" height="15" fill="rgb(250,110,10)" fg:x="315" fg:w="1"/><text x="3.5502%" y="1183.50"></text></g><g><title>[libbevy_dylib-7e0daee3ecabe62f.so] (2 samples, 0.02%)</title><rect x="3.3002%" y="1237" width="0.0210%" height="15" fill="rgb(248,123,6)" fg:x="315" fg:w="2"/><text x="3.5502%" y="1247.50"></text></g><g><title>glslang::TPpContext::tStringInput::scan (1 samples, 0.01%)</title><rect x="3.3106%" y="1221" width="0.0105%" height="15" fill="rgb(206,91,31)" fg:x="316" fg:w="1"/><text x="3.5606%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="3.3211%" y="1237" width="0.0105%" height="15" fill="rgb(211,154,13)" fg:x="317" fg:w="1"/><text x="3.5711%" y="1247.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="3.3316%" y="1237" width="0.0105%" height="15" fill="rgb(225,148,7)" fg:x="318" fg:w="1"/><text x="3.5816%" y="1247.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="3.3421%" y="1237" width="0.0210%" height="15" fill="rgb(220,160,43)" fg:x="319" fg:w="2"/><text x="3.5921%" y="1247.50"></text></g><g><title>__futex_abstimed_wait_common64 (2 samples, 0.02%)</title><rect x="3.3630%" y="1237" width="0.0210%" height="15" fill="rgb(213,52,39)" fg:x="321" fg:w="2"/><text x="3.6130%" y="1247.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.01%)</title><rect x="3.3840%" y="1237" width="0.0105%" height="15" fill="rgb(243,137,7)" fg:x="323" fg:w="1"/><text x="3.6340%" y="1247.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="3.3944%" y="1237" width="0.0105%" height="15" fill="rgb(230,79,13)" fg:x="324" fg:w="1"/><text x="3.6444%" y="1247.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="3.4049%" y="1237" width="0.0314%" height="15" fill="rgb(247,105,23)" fg:x="325" fg:w="3"/><text x="3.6549%" y="1247.50"></text></g><g><title>_int_malloc (4 samples, 0.04%)</title><rect x="3.4364%" y="1237" width="0.0419%" height="15" fill="rgb(223,179,41)" fg:x="328" fg:w="4"/><text x="3.6864%" y="1247.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="3.4783%" y="1237" width="0.0210%" height="15" fill="rgb(218,9,34)" fg:x="332" fg:w="2"/><text x="3.7283%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="3.4992%" y="1237" width="0.0105%" height="15" fill="rgb(222,106,8)" fg:x="334" fg:w="1"/><text x="3.7492%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="3.4992%" y="1221" width="0.0105%" height="15" fill="rgb(211,220,0)" fg:x="334" fg:w="1"/><text x="3.7492%" y="1231.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="3.5097%" y="1237" width="0.0210%" height="15" fill="rgb(229,52,16)" fg:x="335" fg:w="2"/><text x="3.7597%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="3.5202%" y="1221" width="0.0105%" height="15" fill="rgb(212,155,18)" fg:x="336" fg:w="1"/><text x="3.7702%" y="1231.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="3.5202%" y="1205" width="0.0105%" height="15" fill="rgb(242,21,14)" fg:x="336" fg:w="1"/><text x="3.7702%" y="1215.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="3.5202%" y="1189" width="0.0105%" height="15" fill="rgb(222,19,48)" fg:x="336" fg:w="1"/><text x="3.7702%" y="1199.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.01%)</title><rect x="3.5306%" y="1237" width="0.0105%" height="15" fill="rgb(232,45,27)" fg:x="337" fg:w="1"/><text x="3.7806%" y="1247.50"></text></g><g><title>__memchr_avx2 (2 samples, 0.02%)</title><rect x="3.5726%" y="901" width="0.0210%" height="15" fill="rgb(249,103,42)" fg:x="341" fg:w="2"/><text x="3.8226%" y="911.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="3.5935%" y="901" width="0.0210%" height="15" fill="rgb(246,81,33)" fg:x="343" fg:w="2"/><text x="3.8435%" y="911.50"></text></g><g><title>std::_Rb_tree_increment (2 samples, 0.02%)</title><rect x="3.6145%" y="901" width="0.0210%" height="15" fill="rgb(252,33,42)" fg:x="345" fg:w="2"/><text x="3.8645%" y="911.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (10 samples, 0.10%)</title><rect x="3.5411%" y="917" width="0.1048%" height="15" fill="rgb(209,212,41)" fg:x="338" fg:w="10"/><text x="3.7911%" y="927.50"></text></g><g><title>std::_Rb_tree_increment@plt (1 samples, 0.01%)</title><rect x="3.6354%" y="901" width="0.0105%" height="15" fill="rgb(207,154,6)" fg:x="347" fg:w="1"/><text x="3.8854%" y="911.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (12 samples, 0.13%)</title><rect x="3.5411%" y="933" width="0.1257%" height="15" fill="rgb(223,64,47)" fg:x="338" fg:w="12"/><text x="3.7911%" y="943.50"></text></g><g><title>glslang::TSymbolTableLevel::setFunctionExtensions (2 samples, 0.02%)</title><rect x="3.6459%" y="917" width="0.0210%" height="15" fill="rgb(211,161,38)" fg:x="348" fg:w="2"/><text x="3.8959%" y="927.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="3.6564%" y="901" width="0.0105%" height="15" fill="rgb(219,138,40)" fg:x="349" fg:w="1"/><text x="3.9064%" y="911.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (13 samples, 0.14%)</title><rect x="3.5411%" y="1045" width="0.1362%" height="15" fill="rgb(241,228,46)" fg:x="338" fg:w="13"/><text x="3.7911%" y="1055.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (13 samples, 0.14%)</title><rect x="3.5411%" y="1029" width="0.1362%" height="15" fill="rgb(223,209,38)" fg:x="338" fg:w="13"/><text x="3.7911%" y="1039.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (13 samples, 0.14%)</title><rect x="3.5411%" y="1013" width="0.1362%" height="15" fill="rgb(236,164,45)" fg:x="338" fg:w="13"/><text x="3.7911%" y="1023.50"></text></g><g><title>bevy_glsl_to_spirv::compile (13 samples, 0.14%)</title><rect x="3.5411%" y="997" width="0.1362%" height="15" fill="rgb(231,15,5)" fg:x="338" fg:w="13"/><text x="3.7911%" y="1007.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (13 samples, 0.14%)</title><rect x="3.5411%" y="981" width="0.1362%" height="15" fill="rgb(252,35,15)" fg:x="338" fg:w="13"/><text x="3.7911%" y="991.50"></text></g><g><title>glslang_shader_preprocess (13 samples, 0.14%)</title><rect x="3.5411%" y="965" width="0.1362%" height="15" fill="rgb(248,181,18)" fg:x="338" fg:w="13"/><text x="3.7911%" y="975.50"></text></g><g><title>glslang::TShader::preprocess (13 samples, 0.14%)</title><rect x="3.5411%" y="949" width="0.1362%" height="15" fill="rgb(233,39,42)" fg:x="338" fg:w="13"/><text x="3.7911%" y="959.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="3.6668%" y="933" width="0.0105%" height="15" fill="rgb(238,110,33)" fg:x="350" fg:w="1"/><text x="3.9168%" y="943.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="3.6668%" y="917" width="0.0105%" height="15" fill="rgb(233,195,10)" fg:x="350" fg:w="1"/><text x="3.9168%" y="927.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="3.6668%" y="901" width="0.0105%" height="15" fill="rgb(254,105,3)" fg:x="350" fg:w="1"/><text x="3.9168%" y="911.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="3.6668%" y="885" width="0.0105%" height="15" fill="rgb(221,225,9)" fg:x="350" fg:w="1"/><text x="3.9168%" y="895.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="3.6668%" y="869" width="0.0105%" height="15" fill="rgb(224,227,45)" fg:x="350" fg:w="1"/><text x="3.9168%" y="879.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="3.6668%" y="853" width="0.0105%" height="15" fill="rgb(229,198,43)" fg:x="350" fg:w="1"/><text x="3.9168%" y="863.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="3.6668%" y="837" width="0.0105%" height="15" fill="rgb(206,209,35)" fg:x="350" fg:w="1"/><text x="3.9168%" y="847.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="3.6668%" y="821" width="0.0105%" height="15" fill="rgb(245,195,53)" fg:x="350" fg:w="1"/><text x="3.9168%" y="831.50"></text></g><g><title>__memchr_avx2 (2 samples, 0.02%)</title><rect x="3.7297%" y="869" width="0.0210%" height="15" fill="rgb(240,92,26)" fg:x="356" fg:w="2"/><text x="3.9797%" y="879.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="3.7507%" y="869" width="0.0105%" height="15" fill="rgb(207,40,23)" fg:x="358" fg:w="1"/><text x="4.0007%" y="879.50"></text></g><g><title>glslang::GetThreadPoolAllocator (1 samples, 0.01%)</title><rect x="3.7611%" y="869" width="0.0105%" height="15" fill="rgb(223,111,35)" fg:x="359" fg:w="1"/><text x="4.0111%" y="879.50"></text></g><g><title>__GI___pthread_getspecific (1 samples, 0.01%)</title><rect x="3.7611%" y="853" width="0.0105%" height="15" fill="rgb(229,147,28)" fg:x="359" fg:w="1"/><text x="4.0111%" y="863.50"></text></g><g><title>glslang::TSymbolTableLevel::relateToOperator (14 samples, 0.15%)</title><rect x="3.6773%" y="885" width="0.1467%" height="15" fill="rgb(211,29,28)" fg:x="351" fg:w="14"/><text x="3.9273%" y="895.50"></text></g><g><title>std::_Rb_tree_increment (5 samples, 0.05%)</title><rect x="3.7716%" y="869" width="0.0524%" height="15" fill="rgb(228,72,33)" fg:x="360" fg:w="5"/><text x="4.0216%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (28 samples, 0.29%)</title><rect x="3.5411%" y="1237" width="0.2933%" height="15" fill="rgb(205,214,31)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.29%)</title><rect x="3.5411%" y="1221" width="0.2933%" height="15" fill="rgb(224,111,15)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1231.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (28 samples, 0.29%)</title><rect x="3.5411%" y="1205" width="0.2933%" height="15" fill="rgb(253,21,26)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.29%)</title><rect x="3.5411%" y="1189" width="0.2933%" height="15" fill="rgb(245,139,43)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1199.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (28 samples, 0.29%)</title><rect x="3.5411%" y="1173" width="0.2933%" height="15" fill="rgb(252,170,7)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1183.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (28 samples, 0.29%)</title><rect x="3.5411%" y="1157" width="0.2933%" height="15" fill="rgb(231,118,14)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1167.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (28 samples, 0.29%)</title><rect x="3.5411%" y="1141" width="0.2933%" height="15" fill="rgb(238,83,0)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1151.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (28 samples, 0.29%)</title><rect x="3.5411%" y="1125" width="0.2933%" height="15" fill="rgb(221,39,39)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1135.50"></text></g><g><title>core::ops::function::Fn::call (28 samples, 0.29%)</title><rect x="3.5411%" y="1109" width="0.2933%" height="15" fill="rgb(222,119,46)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1119.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (28 samples, 0.29%)</title><rect x="3.5411%" y="1093" width="0.2933%" height="15" fill="rgb(222,165,49)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1103.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (28 samples, 0.29%)</title><rect x="3.5411%" y="1077" width="0.2933%" height="15" fill="rgb(219,113,52)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1087.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (28 samples, 0.29%)</title><rect x="3.5411%" y="1061" width="0.2933%" height="15" fill="rgb(214,7,15)" fg:x="338" fg:w="28"/><text x="3.7911%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (15 samples, 0.16%)</title><rect x="3.6773%" y="1045" width="0.1572%" height="15" fill="rgb(235,32,4)" fg:x="351" fg:w="15"/><text x="3.9273%" y="1055.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (15 samples, 0.16%)</title><rect x="3.6773%" y="1029" width="0.1572%" height="15" fill="rgb(238,90,54)" fg:x="351" fg:w="15"/><text x="3.9273%" y="1039.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (15 samples, 0.16%)</title><rect x="3.6773%" y="1013" width="0.1572%" height="15" fill="rgb(213,208,19)" fg:x="351" fg:w="15"/><text x="3.9273%" y="1023.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (15 samples, 0.16%)</title><rect x="3.6773%" y="997" width="0.1572%" height="15" fill="rgb(233,156,4)" fg:x="351" fg:w="15"/><text x="3.9273%" y="1007.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (15 samples, 0.16%)</title><rect x="3.6773%" y="981" width="0.1572%" height="15" fill="rgb(207,194,5)" fg:x="351" fg:w="15"/><text x="3.9273%" y="991.50"></text></g><g><title>bevy_glsl_to_spirv::compile (15 samples, 0.16%)</title><rect x="3.6773%" y="965" width="0.1572%" height="15" fill="rgb(206,111,30)" fg:x="351" fg:w="15"/><text x="3.9273%" y="975.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (15 samples, 0.16%)</title><rect x="3.6773%" y="949" width="0.1572%" height="15" fill="rgb(243,70,54)" fg:x="351" fg:w="15"/><text x="3.9273%" y="959.50"></text></g><g><title>glslang_shader_preprocess (15 samples, 0.16%)</title><rect x="3.6773%" y="933" width="0.1572%" height="15" fill="rgb(242,28,8)" fg:x="351" fg:w="15"/><text x="3.9273%" y="943.50"></text></g><g><title>glslang::TShader::preprocess (15 samples, 0.16%)</title><rect x="3.6773%" y="917" width="0.1572%" height="15" fill="rgb(219,106,18)" fg:x="351" fg:w="15"/><text x="3.9273%" y="927.50"></text></g><g><title>glslang::TBuiltIns::identifyBuiltIns (15 samples, 0.16%)</title><rect x="3.6773%" y="901" width="0.1572%" height="15" fill="rgb(244,222,10)" fg:x="351" fg:w="15"/><text x="3.9273%" y="911.50"></text></g><g><title>glslang::TSymbolTableLevel::setFunctionExtensions (1 samples, 0.01%)</title><rect x="3.8240%" y="885" width="0.0105%" height="15" fill="rgb(236,179,52)" fg:x="365" fg:w="1"/><text x="4.0740%" y="895.50"></text></g><g><title>std::_Rb_tree_increment (1 samples, 0.01%)</title><rect x="3.8240%" y="869" width="0.0105%" height="15" fill="rgb(213,23,39)" fg:x="365" fg:w="1"/><text x="4.0740%" y="879.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (1 samples, 0.01%)</title><rect x="3.8345%" y="1237" width="0.0105%" height="15" fill="rgb(238,48,10)" fg:x="366" fg:w="1"/><text x="4.0845%" y="1247.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (1 samples, 0.01%)</title><rect x="3.8449%" y="1237" width="0.0105%" height="15" fill="rgb(251,196,23)" fg:x="367" fg:w="1"/><text x="4.0949%" y="1247.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (1 samples, 0.01%)</title><rect x="3.8554%" y="1221" width="0.0105%" height="15" fill="rgb(250,152,24)" fg:x="368" fg:w="1"/><text x="4.1054%" y="1231.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (1 samples, 0.01%)</title><rect x="3.8554%" y="1205" width="0.0105%" height="15" fill="rgb(209,150,17)" fg:x="368" fg:w="1"/><text x="4.1054%" y="1215.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (1 samples, 0.01%)</title><rect x="3.8554%" y="1189" width="0.0105%" height="15" fill="rgb(234,202,34)" fg:x="368" fg:w="1"/><text x="4.1054%" y="1199.50"></text></g><g><title>bevy_glsl_to_spirv::compile (1 samples, 0.01%)</title><rect x="3.8554%" y="1173" width="0.0105%" height="15" fill="rgb(253,148,53)" fg:x="368" fg:w="1"/><text x="4.1054%" y="1183.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (1 samples, 0.01%)</title><rect x="3.8554%" y="1157" width="0.0105%" height="15" fill="rgb(218,129,16)" fg:x="368" fg:w="1"/><text x="4.1054%" y="1167.50"></text></g><g><title>glslang_shader_preprocess (1 samples, 0.01%)</title><rect x="3.8554%" y="1141" width="0.0105%" height="15" fill="rgb(216,85,19)" fg:x="368" fg:w="1"/><text x="4.1054%" y="1151.50"></text></g><g><title>glslang::TShader::preprocess (1 samples, 0.01%)</title><rect x="3.8554%" y="1125" width="0.0105%" height="15" fill="rgb(235,228,7)" fg:x="368" fg:w="1"/><text x="4.1054%" y="1135.50"></text></g><g><title>glslang::TParseContext::TParseContext (1 samples, 0.01%)</title><rect x="3.8554%" y="1109" width="0.0105%" height="15" fill="rgb(245,175,0)" fg:x="368" fg:w="1"/><text x="4.1054%" y="1119.50"></text></g><g><title>glslang::TParseContextBase::TParseContextBase (1 samples, 0.01%)</title><rect x="3.8554%" y="1093" width="0.0105%" height="15" fill="rgb(208,168,36)" fg:x="368" fg:w="1"/><text x="4.1054%" y="1103.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (2 samples, 0.02%)</title><rect x="3.8554%" y="1237" width="0.0210%" height="15" fill="rgb(246,171,24)" fg:x="368" fg:w="2"/><text x="4.1054%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="3.8659%" y="1221" width="0.0105%" height="15" fill="rgb(215,142,24)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1231.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (1 samples, 0.01%)</title><rect x="3.8659%" y="1205" width="0.0105%" height="15" fill="rgb(250,187,7)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1215.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (1 samples, 0.01%)</title><rect x="3.8659%" y="1189" width="0.0105%" height="15" fill="rgb(228,66,33)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1199.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (1 samples, 0.01%)</title><rect x="3.8659%" y="1173" width="0.0105%" height="15" fill="rgb(234,215,21)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1183.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (1 samples, 0.01%)</title><rect x="3.8659%" y="1157" width="0.0105%" height="15" fill="rgb(222,191,20)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1167.50"></text></g><g><title>bevy_glsl_to_spirv::compile (1 samples, 0.01%)</title><rect x="3.8659%" y="1141" width="0.0105%" height="15" fill="rgb(245,79,54)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1151.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (1 samples, 0.01%)</title><rect x="3.8659%" y="1125" width="0.0105%" height="15" fill="rgb(240,10,37)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1135.50"></text></g><g><title>glslang_shader_preprocess (1 samples, 0.01%)</title><rect x="3.8659%" y="1109" width="0.0105%" height="15" fill="rgb(214,192,32)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1119.50"></text></g><g><title>glslang::TShader::preprocess (1 samples, 0.01%)</title><rect x="3.8659%" y="1093" width="0.0105%" height="15" fill="rgb(209,36,54)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1103.50"></text></g><g><title>glslang::TBuiltIns::initialize (1 samples, 0.01%)</title><rect x="3.8659%" y="1077" width="0.0105%" height="15" fill="rgb(220,10,11)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1087.50"></text></g><g><title>__GI___snprintf (1 samples, 0.01%)</title><rect x="3.8659%" y="1061" width="0.0105%" height="15" fill="rgb(221,106,17)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1071.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="3.8659%" y="1045" width="0.0105%" height="15" fill="rgb(251,142,44)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1055.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="3.8659%" y="1029" width="0.0105%" height="15" fill="rgb(238,13,15)" fg:x="369" fg:w="1"/><text x="4.1159%" y="1039.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (1 samples, 0.01%)</title><rect x="3.8764%" y="1237" width="0.0105%" height="15" fill="rgb(208,107,27)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1247.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (1 samples, 0.01%)</title><rect x="3.8764%" y="1221" width="0.0105%" height="15" fill="rgb(205,136,37)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1231.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (1 samples, 0.01%)</title><rect x="3.8764%" y="1205" width="0.0105%" height="15" fill="rgb(250,205,27)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1215.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (1 samples, 0.01%)</title><rect x="3.8764%" y="1189" width="0.0105%" height="15" fill="rgb(210,80,43)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1199.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (1 samples, 0.01%)</title><rect x="3.8764%" y="1173" width="0.0105%" height="15" fill="rgb(247,160,36)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1183.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (1 samples, 0.01%)</title><rect x="3.8764%" y="1157" width="0.0105%" height="15" fill="rgb(234,13,49)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1167.50"></text></g><g><title>bevy_glsl_to_spirv::compile (1 samples, 0.01%)</title><rect x="3.8764%" y="1141" width="0.0105%" height="15" fill="rgb(234,122,0)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1151.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (1 samples, 0.01%)</title><rect x="3.8764%" y="1125" width="0.0105%" height="15" fill="rgb(207,146,38)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1135.50"></text></g><g><title>glslang_shader_preprocess (1 samples, 0.01%)</title><rect x="3.8764%" y="1109" width="0.0105%" height="15" fill="rgb(207,177,25)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1119.50"></text></g><g><title>glslang::TShader::preprocess (1 samples, 0.01%)</title><rect x="3.8764%" y="1093" width="0.0105%" height="15" fill="rgb(211,178,42)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1103.50"></text></g><g><title>glslang::TBuiltIns::initialize (1 samples, 0.01%)</title><rect x="3.8764%" y="1077" width="0.0105%" height="15" fill="rgb(230,69,54)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1087.50"></text></g><g><title>glslang::TBuiltIns::add2ndGenerationSamplingImaging (1 samples, 0.01%)</title><rect x="3.8764%" y="1061" width="0.0105%" height="15" fill="rgb(214,135,41)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1071.50"></text></g><g><title>glslang::TBuiltIns::addSamplingFunctions (1 samples, 0.01%)</title><rect x="3.8764%" y="1045" width="0.0105%" height="15" fill="rgb(237,67,25)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1055.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::append (1 samples, 0.01%)</title><rect x="3.8764%" y="1029" width="0.0105%" height="15" fill="rgb(222,189,50)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1039.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::reserve (1 samples, 0.01%)</title><rect x="3.8764%" y="1013" width="0.0105%" height="15" fill="rgb(245,148,34)" fg:x="370" fg:w="1"/><text x="4.1264%" y="1023.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (1 samples, 0.01%)</title><rect x="3.8869%" y="1237" width="0.0105%" height="15" fill="rgb(222,29,6)" fg:x="371" fg:w="1"/><text x="4.1369%" y="1247.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (5 samples, 0.05%)</title><rect x="3.8973%" y="1237" width="0.0524%" height="15" fill="rgb(221,189,43)" fg:x="372" fg:w="5"/><text x="4.1473%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="3.9392%" y="1221" width="0.0105%" height="15" fill="rgb(207,36,27)" fg:x="376" fg:w="1"/><text x="4.1892%" y="1231.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (1 samples, 0.01%)</title><rect x="3.9602%" y="1221" width="0.0105%" height="15" fill="rgb(217,90,24)" fg:x="378" fg:w="1"/><text x="4.2102%" y="1231.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (1 samples, 0.01%)</title><rect x="3.9602%" y="1205" width="0.0105%" height="15" fill="rgb(224,66,35)" fg:x="378" fg:w="1"/><text x="4.2102%" y="1215.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (1 samples, 0.01%)</title><rect x="3.9602%" y="1189" width="0.0105%" height="15" fill="rgb(221,13,50)" fg:x="378" fg:w="1"/><text x="4.2102%" y="1199.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (1 samples, 0.01%)</title><rect x="3.9602%" y="1173" width="0.0105%" height="15" fill="rgb(236,68,49)" fg:x="378" fg:w="1"/><text x="4.2102%" y="1183.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="3.9602%" y="1157" width="0.0105%" height="15" fill="rgb(229,146,28)" fg:x="378" fg:w="1"/><text x="4.2102%" y="1167.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="3.9602%" y="1141" width="0.0105%" height="15" fill="rgb(225,31,38)" fg:x="378" fg:w="1"/><text x="4.2102%" y="1151.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="3.9602%" y="1125" width="0.0105%" height="15" fill="rgb(250,208,3)" fg:x="378" fg:w="1"/><text x="4.2102%" y="1135.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="3.9602%" y="1109" width="0.0105%" height="15" fill="rgb(246,54,23)" fg:x="378" fg:w="1"/><text x="4.2102%" y="1119.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (1 samples, 0.01%)</title><rect x="3.9602%" y="1093" width="0.0105%" height="15" fill="rgb(243,76,11)" fg:x="378" fg:w="1"/><text x="4.2102%" y="1103.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="3.9602%" y="1077" width="0.0105%" height="15" fill="rgb(245,21,50)" fg:x="378" fg:w="1"/><text x="4.2102%" y="1087.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (3 samples, 0.03%)</title><rect x="3.9497%" y="1237" width="0.0314%" height="15" fill="rgb(228,9,43)" fg:x="377" fg:w="3"/><text x="4.1997%" y="1247.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::try_set_dirty (1 samples, 0.01%)</title><rect x="3.9707%" y="1221" width="0.0105%" height="15" fill="rgb(208,100,47)" fg:x="379" fg:w="1"/><text x="4.2207%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="3.9707%" y="1205" width="0.0105%" height="15" fill="rgb(232,26,8)" fg:x="379" fg:w="1"/><text x="4.2207%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="3.9707%" y="1189" width="0.0105%" height="15" fill="rgb(216,166,38)" fg:x="379" fg:w="1"/><text x="4.2207%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="3.9707%" y="1173" width="0.0105%" height="15" fill="rgb(251,202,51)" fg:x="379" fg:w="1"/><text x="4.2207%" y="1183.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="3.9707%" y="1157" width="0.0105%" height="15" fill="rgb(254,216,34)" fg:x="379" fg:w="1"/><text x="4.2207%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="3.9707%" y="1141" width="0.0105%" height="15" fill="rgb(251,32,27)" fg:x="379" fg:w="1"/><text x="4.2207%" y="1151.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="3.9707%" y="1125" width="0.0105%" height="15" fill="rgb(208,127,28)" fg:x="379" fg:w="1"/><text x="4.2207%" y="1135.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="3.9707%" y="1109" width="0.0105%" height="15" fill="rgb(224,137,22)" fg:x="379" fg:w="1"/><text x="4.2207%" y="1119.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="3.9707%" y="1093" width="0.0105%" height="15" fill="rgb(254,70,32)" fg:x="379" fg:w="1"/><text x="4.2207%" y="1103.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="3.9707%" y="1077" width="0.0105%" height="15" fill="rgb(229,75,37)" fg:x="379" fg:w="1"/><text x="4.2207%" y="1087.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="3.9707%" y="1061" width="0.0105%" height="15" fill="rgb(252,64,23)" fg:x="379" fg:w="1"/><text x="4.2207%" y="1071.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (2 samples, 0.02%)</title><rect x="3.9811%" y="1237" width="0.0210%" height="15" fill="rgb(232,162,48)" fg:x="380" fg:w="2"/><text x="4.2311%" y="1247.50"></text></g><g><title>bevy_render::texture::texture::&lt;impl bevy_render::renderer::render_resource::render_resource::RenderResource for bevy_asset::handle::Handle&lt;bevy_render::texture::texture::Texture&gt;&gt;::resource_type (1 samples, 0.01%)</title><rect x="4.0021%" y="1237" width="0.0105%" height="15" fill="rgb(246,160,12)" fg:x="382" fg:w="1"/><text x="4.2521%" y="1247.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="4.0126%" y="1237" width="0.0105%" height="15" fill="rgb(247,166,0)" fg:x="383" fg:w="1"/><text x="4.2626%" y="1247.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="4.0230%" y="1237" width="0.0105%" height="15" fill="rgb(249,219,21)" fg:x="384" fg:w="1"/><text x="4.2730%" y="1247.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.01%)</title><rect x="4.0335%" y="1237" width="0.0105%" height="15" fill="rgb(205,209,3)" fg:x="385" fg:w="1"/><text x="4.2835%" y="1247.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="4.0440%" y="1237" width="0.0105%" height="15" fill="rgb(243,44,1)" fg:x="386" fg:w="1"/><text x="4.2940%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (5 samples, 0.05%)</title><rect x="4.0545%" y="1237" width="0.0524%" height="15" fill="rgb(206,159,16)" fg:x="387" fg:w="5"/><text x="4.3045%" y="1247.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1 samples, 0.01%)</title><rect x="4.1069%" y="1237" width="0.0105%" height="15" fill="rgb(244,77,30)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1247.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1 samples, 0.01%)</title><rect x="4.1069%" y="1221" width="0.0105%" height="15" fill="rgb(218,69,12)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1231.50"></text></g><g><title>std::panic::catch_unwind (1 samples, 0.01%)</title><rect x="4.1069%" y="1205" width="0.0105%" height="15" fill="rgb(212,87,7)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1215.50"></text></g><g><title>std::panicking::try (1 samples, 0.01%)</title><rect x="4.1069%" y="1189" width="0.0105%" height="15" fill="rgb(245,114,25)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1199.50"></text></g><g><title>std::panicking::try::do_call (1 samples, 0.01%)</title><rect x="4.1069%" y="1173" width="0.0105%" height="15" fill="rgb(210,61,42)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1183.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1 samples, 0.01%)</title><rect x="4.1069%" y="1157" width="0.0105%" height="15" fill="rgb(211,52,33)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1167.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="4.1069%" y="1141" width="0.0105%" height="15" fill="rgb(234,58,33)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1151.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1 samples, 0.01%)</title><rect x="4.1069%" y="1125" width="0.0105%" height="15" fill="rgb(220,115,36)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1135.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="4.1069%" y="1109" width="0.0105%" height="15" fill="rgb(243,153,54)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1119.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.01%)</title><rect x="4.1069%" y="1093" width="0.0105%" height="15" fill="rgb(251,47,18)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1103.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="4.1069%" y="1077" width="0.0105%" height="15" fill="rgb(242,102,42)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1087.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="4.1069%" y="1061" width="0.0105%" height="15" fill="rgb(234,31,38)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1071.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.01%)</title><rect x="4.1069%" y="1045" width="0.0105%" height="15" fill="rgb(221,117,51)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1055.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="4.1069%" y="1029" width="0.0105%" height="15" fill="rgb(212,20,18)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1039.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (1 samples, 0.01%)</title><rect x="4.1069%" y="1013" width="0.0105%" height="15" fill="rgb(245,133,36)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1023.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="4.1069%" y="997" width="0.0105%" height="15" fill="rgb(212,6,19)" fg:x="392" fg:w="1"/><text x="4.3569%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="4.1069%" y="981" width="0.0105%" height="15" fill="rgb(218,1,36)" fg:x="392" fg:w="1"/><text x="4.3569%" y="991.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="4.1069%" y="965" width="0.0105%" height="15" fill="rgb(246,84,54)" fg:x="392" fg:w="1"/><text x="4.3569%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1 samples, 0.01%)</title><rect x="4.1069%" y="949" width="0.0105%" height="15" fill="rgb(242,110,6)" fg:x="392" fg:w="1"/><text x="4.3569%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="4.1069%" y="933" width="0.0105%" height="15" fill="rgb(214,47,5)" fg:x="392" fg:w="1"/><text x="4.3569%" y="943.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1 samples, 0.01%)</title><rect x="4.1069%" y="917" width="0.0105%" height="15" fill="rgb(218,159,25)" fg:x="392" fg:w="1"/><text x="4.3569%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="4.1069%" y="901" width="0.0105%" height="15" fill="rgb(215,211,28)" fg:x="392" fg:w="1"/><text x="4.3569%" y="911.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1 samples, 0.01%)</title><rect x="4.1069%" y="885" width="0.0105%" height="15" fill="rgb(238,59,32)" fg:x="392" fg:w="1"/><text x="4.3569%" y="895.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1 samples, 0.01%)</title><rect x="4.1069%" y="869" width="0.0105%" height="15" fill="rgb(226,82,3)" fg:x="392" fg:w="1"/><text x="4.3569%" y="879.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="4.1069%" y="853" width="0.0105%" height="15" fill="rgb(240,164,32)" fg:x="392" fg:w="1"/><text x="4.3569%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="4.1069%" y="837" width="0.0105%" height="15" fill="rgb(232,46,7)" fg:x="392" fg:w="1"/><text x="4.3569%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="4.1069%" y="821" width="0.0105%" height="15" fill="rgb(229,129,53)" fg:x="392" fg:w="1"/><text x="4.3569%" y="831.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (1 samples, 0.01%)</title><rect x="4.1069%" y="805" width="0.0105%" height="15" fill="rgb(234,188,29)" fg:x="392" fg:w="1"/><text x="4.3569%" y="815.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (1 samples, 0.01%)</title><rect x="4.1069%" y="789" width="0.0105%" height="15" fill="rgb(246,141,4)" fg:x="392" fg:w="1"/><text x="4.3569%" y="799.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system::{{closure}} (1 samples, 0.01%)</title><rect x="4.1069%" y="773" width="0.0105%" height="15" fill="rgb(229,23,39)" fg:x="392" fg:w="1"/><text x="4.3569%" y="783.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (1 samples, 0.01%)</title><rect x="4.1069%" y="757" width="0.0105%" height="15" fill="rgb(206,12,3)" fg:x="392" fg:w="1"/><text x="4.3569%" y="767.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer (1 samples, 0.01%)</title><rect x="4.1069%" y="741" width="0.0105%" height="15" fill="rgb(252,226,20)" fg:x="392" fg:w="1"/><text x="4.3569%" y="751.50"></text></g><g><title>wgpu::Device::create_buffer (1 samples, 0.01%)</title><rect x="4.1069%" y="725" width="0.0105%" height="15" fill="rgb(216,123,35)" fg:x="392" fg:w="1"/><text x="4.3569%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (1 samples, 0.01%)</title><rect x="4.1069%" y="709" width="0.0105%" height="15" fill="rgb(212,68,40)" fg:x="392" fg:w="1"/><text x="4.3569%" y="719.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (1 samples, 0.01%)</title><rect x="4.1069%" y="693" width="0.0105%" height="15" fill="rgb(254,125,32)" fg:x="392" fg:w="1"/><text x="4.3569%" y="703.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (1 samples, 0.01%)</title><rect x="4.1069%" y="677" width="0.0105%" height="15" fill="rgb(253,97,22)" fg:x="392" fg:w="1"/><text x="4.3569%" y="687.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (1 samples, 0.01%)</title><rect x="4.1069%" y="661" width="0.0105%" height="15" fill="rgb(241,101,14)" fg:x="392" fg:w="1"/><text x="4.3569%" y="671.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (1 samples, 0.01%)</title><rect x="4.1069%" y="645" width="0.0105%" height="15" fill="rgb(238,103,29)" fg:x="392" fg:w="1"/><text x="4.3569%" y="655.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (1 samples, 0.01%)</title><rect x="4.1069%" y="629" width="0.0105%" height="15" fill="rgb(233,195,47)" fg:x="392" fg:w="1"/><text x="4.3569%" y="639.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (1 samples, 0.01%)</title><rect x="4.1069%" y="613" width="0.0105%" height="15" fill="rgb(246,218,30)" fg:x="392" fg:w="1"/><text x="4.3569%" y="623.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="4.1069%" y="597" width="0.0105%" height="15" fill="rgb(219,145,47)" fg:x="392" fg:w="1"/><text x="4.3569%" y="607.50"></text></g><g><title>tracing::span::Span::make (1 samples, 0.01%)</title><rect x="4.1069%" y="581" width="0.0105%" height="15" fill="rgb(243,12,26)" fg:x="392" fg:w="1"/><text x="4.3569%" y="591.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="4.1069%" y="565" width="0.0105%" height="15" fill="rgb(214,87,16)" fg:x="392" fg:w="1"/><text x="4.3569%" y="575.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="4.1069%" y="549" width="0.0105%" height="15" fill="rgb(208,99,42)" fg:x="392" fg:w="1"/><text x="4.3569%" y="559.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="4.1069%" y="533" width="0.0105%" height="15" fill="rgb(253,99,2)" fg:x="392" fg:w="1"/><text x="4.3569%" y="543.50"></text></g><g><title>tracing::span::Span::make::{{closure}} (1 samples, 0.01%)</title><rect x="4.1069%" y="517" width="0.0105%" height="15" fill="rgb(220,168,23)" fg:x="392" fg:w="1"/><text x="4.3569%" y="527.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="4.1069%" y="501" width="0.0105%" height="15" fill="rgb(242,38,24)" fg:x="392" fg:w="1"/><text x="4.3569%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="4.1069%" y="485" width="0.0105%" height="15" fill="rgb(225,182,9)" fg:x="392" fg:w="1"/><text x="4.3569%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="4.1069%" y="469" width="0.0105%" height="15" fill="rgb(243,178,37)" fg:x="392" fg:w="1"/><text x="4.3569%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="4.1069%" y="453" width="0.0105%" height="15" fill="rgb(232,139,19)" fg:x="392" fg:w="1"/><text x="4.3569%" y="463.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.01%)</title><rect x="4.1069%" y="437" width="0.0105%" height="15" fill="rgb(225,201,24)" fg:x="392" fg:w="1"/><text x="4.3569%" y="447.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="4.1069%" y="421" width="0.0105%" height="15" fill="rgb(221,47,46)" fg:x="392" fg:w="1"/><text x="4.3569%" y="431.50"></text></g><g><title>tracing_core::span::Attributes::record (1 samples, 0.01%)</title><rect x="4.1069%" y="405" width="0.0105%" height="15" fill="rgb(249,23,13)" fg:x="392" fg:w="1"/><text x="4.3569%" y="415.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="4.1069%" y="389" width="0.0105%" height="15" fill="rgb(219,9,5)" fg:x="392" fg:w="1"/><text x="4.3569%" y="399.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="4.1069%" y="373" width="0.0105%" height="15" fill="rgb(254,171,16)" fg:x="392" fg:w="1"/><text x="4.3569%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="4.1069%" y="357" width="0.0105%" height="15" fill="rgb(230,171,20)" fg:x="392" fg:w="1"/><text x="4.3569%" y="367.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="4.1069%" y="341" width="0.0105%" height="15" fill="rgb(210,71,41)" fg:x="392" fg:w="1"/><text x="4.3569%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="4.1069%" y="325" width="0.0105%" height="15" fill="rgb(206,173,20)" fg:x="392" fg:w="1"/><text x="4.3569%" y="335.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="4.1069%" y="309" width="0.0105%" height="15" fill="rgb(233,88,34)" fg:x="392" fg:w="1"/><text x="4.3569%" y="319.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="4.1069%" y="293" width="0.0105%" height="15" fill="rgb(223,209,46)" fg:x="392" fg:w="1"/><text x="4.3569%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="4.1069%" y="277" width="0.0105%" height="15" fill="rgb(250,43,18)" fg:x="392" fg:w="1"/><text x="4.3569%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="4.1069%" y="261" width="0.0105%" height="15" fill="rgb(208,13,10)" fg:x="392" fg:w="1"/><text x="4.3569%" y="271.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="4.1069%" y="245" width="0.0105%" height="15" fill="rgb(212,200,36)" fg:x="392" fg:w="1"/><text x="4.3569%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="4.1069%" y="229" width="0.0105%" height="15" fill="rgb(225,90,30)" fg:x="392" fg:w="1"/><text x="4.3569%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="4.1069%" y="213" width="0.0105%" height="15" fill="rgb(236,182,39)" fg:x="392" fg:w="1"/><text x="4.3569%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="4.1069%" y="197" width="0.0105%" height="15" fill="rgb(212,144,35)" fg:x="392" fg:w="1"/><text x="4.3569%" y="207.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="4.1069%" y="181" width="0.0105%" height="15" fill="rgb(228,63,44)" fg:x="392" fg:w="1"/><text x="4.3569%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="4.1069%" y="165" width="0.0105%" height="15" fill="rgb(228,109,6)" fg:x="392" fg:w="1"/><text x="4.3569%" y="175.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (1 samples, 0.01%)</title><rect x="4.1383%" y="1205" width="0.0105%" height="15" fill="rgb(238,117,24)" fg:x="395" fg:w="1"/><text x="4.3883%" y="1215.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.04%)</title><rect x="4.1173%" y="1237" width="0.0419%" height="15" fill="rgb(242,26,26)" fg:x="393" fg:w="4"/><text x="4.3673%" y="1247.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="4.1383%" y="1221" width="0.0210%" height="15" fill="rgb(221,92,48)" fg:x="395" fg:w="2"/><text x="4.3883%" y="1231.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (1 samples, 0.01%)</title><rect x="4.1488%" y="1205" width="0.0105%" height="15" fill="rgb(209,209,32)" fg:x="396" fg:w="1"/><text x="4.3988%" y="1215.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (1 samples, 0.01%)</title><rect x="4.1488%" y="1189" width="0.0105%" height="15" fill="rgb(221,70,22)" fg:x="396" fg:w="1"/><text x="4.3988%" y="1199.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::iter (1 samples, 0.01%)</title><rect x="4.1488%" y="1173" width="0.0105%" height="15" fill="rgb(248,145,5)" fg:x="396" fg:w="1"/><text x="4.3988%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;gfx_backend_vulkan::native::Framebuffer,alloc::alloc::Global&gt;&gt; (1 samples, 0.01%)</title><rect x="4.1592%" y="1237" width="0.0105%" height="15" fill="rgb(226,116,26)" fg:x="397" fg:w="1"/><text x="4.4092%" y="1247.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="4.1592%" y="1221" width="0.0105%" height="15" fill="rgb(244,5,17)" fg:x="397" fg:w="1"/><text x="4.4092%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="4.1697%" y="1237" width="0.0105%" height="15" fill="rgb(252,159,33)" fg:x="398" fg:w="1"/><text x="4.4197%" y="1247.50"></text></g><g><title>engine::movement::pathing::move_actor (1 samples, 0.01%)</title><rect x="4.1802%" y="1237" width="0.0105%" height="15" fill="rgb(206,71,0)" fg:x="399" fg:w="1"/><text x="4.4302%" y="1247.50"></text></g><g><title>engine::movement::pathing::move_weights (1 samples, 0.01%)</title><rect x="4.1907%" y="1237" width="0.0105%" height="15" fill="rgb(233,118,54)" fg:x="400" fg:w="1"/><text x="4.4407%" y="1247.50"></text></g><g><title>engine::movement::pathing::tile_weight (1 samples, 0.01%)</title><rect x="4.1907%" y="1221" width="0.0105%" height="15" fill="rgb(234,83,48)" fg:x="400" fg:w="1"/><text x="4.4407%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="4.1907%" y="1205" width="0.0105%" height="15" fill="rgb(228,3,54)" fg:x="400" fg:w="1"/><text x="4.4407%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="4.1907%" y="1189" width="0.0105%" height="15" fill="rgb(226,155,13)" fg:x="400" fg:w="1"/><text x="4.4407%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="4.1907%" y="1173" width="0.0105%" height="15" fill="rgb(241,28,37)" fg:x="400" fg:w="1"/><text x="4.4407%" y="1183.50"></text></g><g><title>event_listener::List::notify (1 samples, 0.01%)</title><rect x="4.2012%" y="1237" width="0.0105%" height="15" fill="rgb(233,93,10)" fg:x="401" fg:w="1"/><text x="4.4512%" y="1247.50"></text></g><g><title>glslang::GlslangToSpv (4 samples, 0.04%)</title><rect x="4.2116%" y="1237" width="0.0419%" height="15" fill="rgb(225,113,19)" fg:x="402" fg:w="4"/><text x="4.4616%" y="1247.50"></text></g><g><title>glslang::TIntermAggregate::traverse (4 samples, 0.04%)</title><rect x="4.2116%" y="1221" width="0.0419%" height="15" fill="rgb(241,2,18)" fg:x="402" fg:w="4"/><text x="4.4616%" y="1231.50"></text></g><g><title>glslang::TIntermAggregate::traverse (4 samples, 0.04%)</title><rect x="4.2116%" y="1205" width="0.0419%" height="15" fill="rgb(228,207,21)" fg:x="402" fg:w="4"/><text x="4.4616%" y="1215.50"></text></g><g><title>glslang::TIntermAggregate::traverse (4 samples, 0.04%)</title><rect x="4.2116%" y="1189" width="0.0419%" height="15" fill="rgb(213,211,35)" fg:x="402" fg:w="4"/><text x="4.4616%" y="1199.50"></text></g><g><title>glslang::TIntermAggregate::traverse (4 samples, 0.04%)</title><rect x="4.2116%" y="1173" width="0.0419%" height="15" fill="rgb(209,83,10)" fg:x="402" fg:w="4"/><text x="4.4616%" y="1183.50"></text></g><g><title>glslang::TIntermBinary::traverse (4 samples, 0.04%)</title><rect x="4.2116%" y="1157" width="0.0419%" height="15" fill="rgb(209,164,1)" fg:x="402" fg:w="4"/><text x="4.4616%" y="1167.50"></text></g><g><title>glslang::TIntermAggregate::traverse (4 samples, 0.04%)</title><rect x="4.2116%" y="1141" width="0.0419%" height="15" fill="rgb(213,184,43)" fg:x="402" fg:w="4"/><text x="4.4616%" y="1151.50"></text></g><g><title>glslang::TIntermBinary::traverse (4 samples, 0.04%)</title><rect x="4.2116%" y="1125" width="0.0419%" height="15" fill="rgb(231,61,34)" fg:x="402" fg:w="4"/><text x="4.4616%" y="1135.50"></text></g><g><title>glslang::TIntermBinary::traverse (4 samples, 0.04%)</title><rect x="4.2116%" y="1109" width="0.0419%" height="15" fill="rgb(235,75,3)" fg:x="402" fg:w="4"/><text x="4.4616%" y="1119.50"></text></g><g><title>std::_Rb_tree&lt;unsigned int, unsigned int, std::_Identity&lt;unsigned int&gt;, std::less&lt;unsigned int&gt;, std::allocator&lt;unsigned int&gt; &gt;::_M_insert_unique&lt;unsigned int const&amp;&gt; (4 samples, 0.04%)</title><rect x="4.2116%" y="1093" width="0.0419%" height="15" fill="rgb(220,106,47)" fg:x="402" fg:w="4"/><text x="4.4616%" y="1103.50"></text></g><g><title>glslang::TPpContext::tStringInput::getch (3 samples, 0.03%)</title><rect x="4.2535%" y="1237" width="0.0314%" height="15" fill="rgb(210,196,33)" fg:x="406" fg:w="3"/><text x="4.5035%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.02%)</title><rect x="4.2850%" y="1237" width="0.0210%" height="15" fill="rgb(229,154,42)" fg:x="409" fg:w="2"/><text x="4.5350%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="4.2954%" y="1221" width="0.0105%" height="15" fill="rgb(228,114,26)" fg:x="410" fg:w="1"/><text x="4.5454%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="4.2954%" y="1205" width="0.0105%" height="15" fill="rgb(208,144,1)" fg:x="410" fg:w="1"/><text x="4.5454%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="4.2954%" y="1189" width="0.0105%" height="15" fill="rgb(239,112,37)" fg:x="410" fg:w="1"/><text x="4.5454%" y="1199.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="4.2954%" y="1173" width="0.0105%" height="15" fill="rgb(210,96,50)" fg:x="410" fg:w="1"/><text x="4.5454%" y="1183.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="4.2954%" y="1157" width="0.0105%" height="15" fill="rgb(222,178,2)" fg:x="410" fg:w="1"/><text x="4.5454%" y="1167.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="4.2954%" y="1141" width="0.0105%" height="15" fill="rgb(226,74,18)" fg:x="410" fg:w="1"/><text x="4.5454%" y="1151.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="4.2954%" y="1125" width="0.0105%" height="15" fill="rgb(225,67,54)" fg:x="410" fg:w="1"/><text x="4.5454%" y="1135.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="4.2954%" y="1109" width="0.0105%" height="15" fill="rgb(251,92,32)" fg:x="410" fg:w="1"/><text x="4.5454%" y="1119.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="4.2954%" y="1093" width="0.0105%" height="15" fill="rgb(228,149,22)" fg:x="410" fg:w="1"/><text x="4.5454%" y="1103.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="4.3059%" y="1237" width="0.0105%" height="15" fill="rgb(243,54,13)" fg:x="411" fg:w="1"/><text x="4.5559%" y="1247.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="4.3164%" y="1237" width="0.0105%" height="15" fill="rgb(243,180,28)" fg:x="412" fg:w="1"/><text x="4.5664%" y="1247.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="4.3269%" y="1237" width="0.0105%" height="15" fill="rgb(208,167,24)" fg:x="413" fg:w="1"/><text x="4.5769%" y="1247.50"></text></g><g><title>parking::Parker::park (1 samples, 0.01%)</title><rect x="4.3373%" y="1237" width="0.0105%" height="15" fill="rgb(245,73,45)" fg:x="414" fg:w="1"/><text x="4.5873%" y="1247.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="4.3478%" y="1237" width="0.0105%" height="15" fill="rgb(237,203,48)" fg:x="415" fg:w="1"/><text x="4.5978%" y="1247.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="4.3478%" y="1221" width="0.0105%" height="15" fill="rgb(211,197,16)" fg:x="415" fg:w="1"/><text x="4.5978%" y="1231.50"></text></g><g><title>rand_chacha::guts::refill_wide (1 samples, 0.01%)</title><rect x="4.3583%" y="1237" width="0.0105%" height="15" fill="rgb(243,99,51)" fg:x="416" fg:w="1"/><text x="4.6083%" y="1247.50"></text></g><g><title>spvValidateWithOptions (1 samples, 0.01%)</title><rect x="4.3688%" y="1237" width="0.0105%" height="15" fill="rgb(215,123,29)" fg:x="417" fg:w="1"/><text x="4.6188%" y="1247.50"></text></g><g><title>spvtools::val::(anonymous namespace)::ValidateBinaryUsingContextAndValidationState (1 samples, 0.01%)</title><rect x="4.3688%" y="1221" width="0.0105%" height="15" fill="rgb(239,186,37)" fg:x="417" fg:w="1"/><text x="4.6188%" y="1231.50"></text></g><g><title>spvtools::val::UpdateIdUse (1 samples, 0.01%)</title><rect x="4.3688%" y="1205" width="0.0105%" height="15" fill="rgb(252,136,39)" fg:x="417" fg:w="1"/><text x="4.6188%" y="1215.50"></text></g><g><title>spvtools::val::MiscPass (1 samples, 0.01%)</title><rect x="4.3793%" y="1221" width="0.0105%" height="15" fill="rgb(223,213,32)" fg:x="418" fg:w="1"/><text x="4.6293%" y="1231.50"></text></g><g><title>spvtools::val::ValidateDecorations (1 samples, 0.01%)</title><rect x="4.3897%" y="1221" width="0.0105%" height="15" fill="rgb(233,115,5)" fg:x="419" fg:w="1"/><text x="4.6397%" y="1231.50"></text></g><g><title>spvtools::val::(anonymous namespace)::ValidateBinaryUsingContextAndValidationState (3 samples, 0.03%)</title><rect x="4.3793%" y="1237" width="0.0314%" height="15" fill="rgb(207,226,44)" fg:x="418" fg:w="3"/><text x="4.6293%" y="1247.50"></text></g><g><title>spvtools::val::ValidateExecutionLimitations (1 samples, 0.01%)</title><rect x="4.4002%" y="1221" width="0.0105%" height="15" fill="rgb(208,126,0)" fg:x="420" fg:w="1"/><text x="4.6502%" y="1231.50"></text></g><g><title>spvtools::val::Function::IsCompatibleWithExecutionModel (1 samples, 0.01%)</title><rect x="4.4002%" y="1205" width="0.0105%" height="15" fill="rgb(244,66,21)" fg:x="420" fg:w="1"/><text x="4.6502%" y="1215.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::init (1 samples, 0.01%)</title><rect x="4.4002%" y="1189" width="0.0105%" height="15" fill="rgb(222,97,12)" fg:x="420" fg:w="1"/><text x="4.6502%" y="1199.50"></text></g><g><title>std::basic_ios&lt;char, std::char_traits&lt;char&gt; &gt;::_M_cache_locale (1 samples, 0.01%)</title><rect x="4.4002%" y="1173" width="0.0105%" height="15" fill="rgb(219,213,19)" fg:x="420" fg:w="1"/><text x="4.6502%" y="1183.50"></text></g><g><title>std::has_facet&lt;std::ctype&lt;char&gt; &gt; (1 samples, 0.01%)</title><rect x="4.4002%" y="1157" width="0.0105%" height="15" fill="rgb(252,169,30)" fg:x="420" fg:w="1"/><text x="4.6502%" y="1167.50"></text></g><g><title>__dynamic_cast (1 samples, 0.01%)</title><rect x="4.4002%" y="1141" width="0.0105%" height="15" fill="rgb(206,32,51)" fg:x="420" fg:w="1"/><text x="4.6502%" y="1151.50"></text></g><g><title>__cxxabiv1::__vmi_class_type_info::__do_dyncast (1 samples, 0.01%)</title><rect x="4.4002%" y="1125" width="0.0105%" height="15" fill="rgb(250,172,42)" fg:x="420" fg:w="1"/><text x="4.6502%" y="1135.50"></text></g><g><title>std::type_info::operator== (1 samples, 0.01%)</title><rect x="4.4002%" y="1109" width="0.0105%" height="15" fill="rgb(209,34,43)" fg:x="420" fg:w="1"/><text x="4.6502%" y="1119.50"></text></g><g><title>spvtools::val::(anonymous namespace)::ValidateVariable (1 samples, 0.01%)</title><rect x="4.4107%" y="1237" width="0.0105%" height="15" fill="rgb(223,11,35)" fg:x="421" fg:w="1"/><text x="4.6607%" y="1247.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.02%)</title><rect x="4.4212%" y="1237" width="0.0210%" height="15" fill="rgb(251,219,26)" fg:x="422" fg:w="2"/><text x="4.6712%" y="1247.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="4.4421%" y="261" width="0.0105%" height="15" fill="rgb(231,119,3)" fg:x="424" fg:w="1"/><text x="4.6921%" y="271.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (2 samples, 0.02%)</title><rect x="4.4421%" y="1237" width="0.0210%" height="15" fill="rgb(216,97,11)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="4.4421%" y="1221" width="0.0210%" height="15" fill="rgb(223,59,9)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="4.4421%" y="1205" width="0.0210%" height="15" fill="rgb(233,93,31)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1215.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (2 samples, 0.02%)</title><rect x="4.4421%" y="1189" width="0.0210%" height="15" fill="rgb(239,81,33)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1199.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (2 samples, 0.02%)</title><rect x="4.4421%" y="1173" width="0.0210%" height="15" fill="rgb(213,120,34)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1183.50"></text></g><g><title>std::panic::catch_unwind (2 samples, 0.02%)</title><rect x="4.4421%" y="1157" width="0.0210%" height="15" fill="rgb(243,49,53)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1167.50"></text></g><g><title>std::panicking::try (2 samples, 0.02%)</title><rect x="4.4421%" y="1141" width="0.0210%" height="15" fill="rgb(247,216,33)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1151.50"></text></g><g><title>std::panicking::try::do_call (2 samples, 0.02%)</title><rect x="4.4421%" y="1125" width="0.0210%" height="15" fill="rgb(226,26,14)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1135.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (2 samples, 0.02%)</title><rect x="4.4421%" y="1109" width="0.0210%" height="15" fill="rgb(215,49,53)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1119.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="4.4421%" y="1093" width="0.0210%" height="15" fill="rgb(245,162,40)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1103.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (2 samples, 0.02%)</title><rect x="4.4421%" y="1077" width="0.0210%" height="15" fill="rgb(229,68,17)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1087.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="4.4421%" y="1061" width="0.0210%" height="15" fill="rgb(213,182,10)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1071.50"></text></g><g><title>futures_lite::future::block_on (2 samples, 0.02%)</title><rect x="4.4421%" y="1045" width="0.0210%" height="15" fill="rgb(245,125,30)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1055.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="4.4421%" y="1029" width="0.0210%" height="15" fill="rgb(232,202,2)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="4.4421%" y="1013" width="0.0210%" height="15" fill="rgb(237,140,51)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1023.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (2 samples, 0.02%)</title><rect x="4.4421%" y="997" width="0.0210%" height="15" fill="rgb(236,157,25)" fg:x="424" fg:w="2"/><text x="4.6921%" y="1007.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="4.4421%" y="981" width="0.0210%" height="15" fill="rgb(219,209,0)" fg:x="424" fg:w="2"/><text x="4.6921%" y="991.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (2 samples, 0.02%)</title><rect x="4.4421%" y="965" width="0.0210%" height="15" fill="rgb(240,116,54)" fg:x="424" fg:w="2"/><text x="4.6921%" y="975.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="4.4421%" y="949" width="0.0210%" height="15" fill="rgb(216,10,36)" fg:x="424" fg:w="2"/><text x="4.6921%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="4.4421%" y="933" width="0.0210%" height="15" fill="rgb(222,72,44)" fg:x="424" fg:w="2"/><text x="4.6921%" y="943.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="4.4421%" y="917" width="0.0210%" height="15" fill="rgb(232,159,9)" fg:x="424" fg:w="2"/><text x="4.6921%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2 samples, 0.02%)</title><rect x="4.4421%" y="901" width="0.0210%" height="15" fill="rgb(210,39,32)" fg:x="424" fg:w="2"/><text x="4.6921%" y="911.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="4.4421%" y="885" width="0.0210%" height="15" fill="rgb(216,194,45)" fg:x="424" fg:w="2"/><text x="4.6921%" y="895.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2 samples, 0.02%)</title><rect x="4.4421%" y="869" width="0.0210%" height="15" fill="rgb(218,18,35)" fg:x="424" fg:w="2"/><text x="4.6921%" y="879.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="4.4421%" y="853" width="0.0210%" height="15" fill="rgb(207,83,51)" fg:x="424" fg:w="2"/><text x="4.6921%" y="863.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2 samples, 0.02%)</title><rect x="4.4421%" y="837" width="0.0210%" height="15" fill="rgb(225,63,43)" fg:x="424" fg:w="2"/><text x="4.6921%" y="847.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.02%)</title><rect x="4.4421%" y="821" width="0.0210%" height="15" fill="rgb(207,57,36)" fg:x="424" fg:w="2"/><text x="4.6921%" y="831.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="4.4421%" y="805" width="0.0210%" height="15" fill="rgb(216,99,33)" fg:x="424" fg:w="2"/><text x="4.6921%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="4.4421%" y="789" width="0.0210%" height="15" fill="rgb(225,42,16)" fg:x="424" fg:w="2"/><text x="4.6921%" y="799.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="4.4421%" y="773" width="0.0210%" height="15" fill="rgb(220,201,45)" fg:x="424" fg:w="2"/><text x="4.6921%" y="783.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (2 samples, 0.02%)</title><rect x="4.4421%" y="757" width="0.0210%" height="15" fill="rgb(225,33,4)" fg:x="424" fg:w="2"/><text x="4.6921%" y="767.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (2 samples, 0.02%)</title><rect x="4.4421%" y="741" width="0.0210%" height="15" fill="rgb(224,33,50)" fg:x="424" fg:w="2"/><text x="4.6921%" y="751.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system::{{closure}} (2 samples, 0.02%)</title><rect x="4.4421%" y="725" width="0.0210%" height="15" fill="rgb(246,198,51)" fg:x="424" fg:w="2"/><text x="4.6921%" y="735.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (2 samples, 0.02%)</title><rect x="4.4421%" y="709" width="0.0210%" height="15" fill="rgb(205,22,4)" fg:x="424" fg:w="2"/><text x="4.6921%" y="719.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer (2 samples, 0.02%)</title><rect x="4.4421%" y="693" width="0.0210%" height="15" fill="rgb(206,3,8)" fg:x="424" fg:w="2"/><text x="4.6921%" y="703.50"></text></g><g><title>wgpu::Device::create_buffer (2 samples, 0.02%)</title><rect x="4.4421%" y="677" width="0.0210%" height="15" fill="rgb(251,23,15)" fg:x="424" fg:w="2"/><text x="4.6921%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (2 samples, 0.02%)</title><rect x="4.4421%" y="661" width="0.0210%" height="15" fill="rgb(252,88,28)" fg:x="424" fg:w="2"/><text x="4.6921%" y="671.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (2 samples, 0.02%)</title><rect x="4.4421%" y="645" width="0.0210%" height="15" fill="rgb(212,127,14)" fg:x="424" fg:w="2"/><text x="4.6921%" y="655.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (2 samples, 0.02%)</title><rect x="4.4421%" y="629" width="0.0210%" height="15" fill="rgb(247,145,37)" fg:x="424" fg:w="2"/><text x="4.6921%" y="639.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (2 samples, 0.02%)</title><rect x="4.4421%" y="613" width="0.0210%" height="15" fill="rgb(209,117,53)" fg:x="424" fg:w="2"/><text x="4.6921%" y="623.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (2 samples, 0.02%)</title><rect x="4.4421%" y="597" width="0.0210%" height="15" fill="rgb(212,90,42)" fg:x="424" fg:w="2"/><text x="4.6921%" y="607.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (2 samples, 0.02%)</title><rect x="4.4421%" y="581" width="0.0210%" height="15" fill="rgb(218,164,37)" fg:x="424" fg:w="2"/><text x="4.6921%" y="591.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (2 samples, 0.02%)</title><rect x="4.4421%" y="565" width="0.0210%" height="15" fill="rgb(246,65,34)" fg:x="424" fg:w="2"/><text x="4.6921%" y="575.50"></text></g><g><title>tracing::span::Span::new (2 samples, 0.02%)</title><rect x="4.4421%" y="549" width="0.0210%" height="15" fill="rgb(231,100,33)" fg:x="424" fg:w="2"/><text x="4.6921%" y="559.50"></text></g><g><title>tracing::span::Span::make (2 samples, 0.02%)</title><rect x="4.4421%" y="533" width="0.0210%" height="15" fill="rgb(228,126,14)" fg:x="424" fg:w="2"/><text x="4.6921%" y="543.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="4.4421%" y="517" width="0.0210%" height="15" fill="rgb(215,173,21)" fg:x="424" fg:w="2"/><text x="4.6921%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="4.4421%" y="501" width="0.0210%" height="15" fill="rgb(210,6,40)" fg:x="424" fg:w="2"/><text x="4.6921%" y="511.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (2 samples, 0.02%)</title><rect x="4.4421%" y="485" width="0.0210%" height="15" fill="rgb(212,48,18)" fg:x="424" fg:w="2"/><text x="4.6921%" y="495.50"></text></g><g><title>tracing::span::Span::make::{{closure}} (2 samples, 0.02%)</title><rect x="4.4421%" y="469" width="0.0210%" height="15" fill="rgb(230,214,11)" fg:x="424" fg:w="2"/><text x="4.6921%" y="479.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (2 samples, 0.02%)</title><rect x="4.4421%" y="453" width="0.0210%" height="15" fill="rgb(254,105,39)" fg:x="424" fg:w="2"/><text x="4.6921%" y="463.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="4.4421%" y="437" width="0.0210%" height="15" fill="rgb(245,158,5)" fg:x="424" fg:w="2"/><text x="4.6921%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="4.4421%" y="421" width="0.0210%" height="15" fill="rgb(249,208,11)" fg:x="424" fg:w="2"/><text x="4.6921%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (2 samples, 0.02%)</title><rect x="4.4421%" y="405" width="0.0210%" height="15" fill="rgb(210,39,28)" fg:x="424" fg:w="2"/><text x="4.6921%" y="415.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (2 samples, 0.02%)</title><rect x="4.4421%" y="389" width="0.0210%" height="15" fill="rgb(211,56,53)" fg:x="424" fg:w="2"/><text x="4.6921%" y="399.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (2 samples, 0.02%)</title><rect x="4.4421%" y="373" width="0.0210%" height="15" fill="rgb(226,201,30)" fg:x="424" fg:w="2"/><text x="4.6921%" y="383.50"></text></g><g><title>tracing_core::span::Attributes::record (2 samples, 0.02%)</title><rect x="4.4421%" y="357" width="0.0210%" height="15" fill="rgb(239,101,34)" fg:x="424" fg:w="2"/><text x="4.6921%" y="367.50"></text></g><g><title>tracing_core::field::ValueSet::record (2 samples, 0.02%)</title><rect x="4.4421%" y="341" width="0.0210%" height="15" fill="rgb(226,209,5)" fg:x="424" fg:w="2"/><text x="4.6921%" y="351.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (2 samples, 0.02%)</title><rect x="4.4421%" y="325" width="0.0210%" height="15" fill="rgb(250,105,47)" fg:x="424" fg:w="2"/><text x="4.6921%" y="335.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (2 samples, 0.02%)</title><rect x="4.4421%" y="309" width="0.0210%" height="15" fill="rgb(230,72,3)" fg:x="424" fg:w="2"/><text x="4.6921%" y="319.50"></text></g><g><title>core::fmt::Write::write_fmt (2 samples, 0.02%)</title><rect x="4.4421%" y="293" width="0.0210%" height="15" fill="rgb(232,218,39)" fg:x="424" fg:w="2"/><text x="4.6921%" y="303.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="4.4421%" y="277" width="0.0210%" height="15" fill="rgb(248,166,6)" fg:x="424" fg:w="2"/><text x="4.6921%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="4.4526%" y="261" width="0.0105%" height="15" fill="rgb(247,89,20)" fg:x="425" fg:w="1"/><text x="4.7026%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="4.4526%" y="245" width="0.0105%" height="15" fill="rgb(248,130,54)" fg:x="425" fg:w="1"/><text x="4.7026%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="4.4526%" y="229" width="0.0105%" height="15" fill="rgb(234,196,4)" fg:x="425" fg:w="1"/><text x="4.7026%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="4.4526%" y="213" width="0.0105%" height="15" fill="rgb(250,143,31)" fg:x="425" fg:w="1"/><text x="4.7026%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="4.4526%" y="197" width="0.0105%" height="15" fill="rgb(211,110,34)" fg:x="425" fg:w="1"/><text x="4.7026%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="4.4526%" y="181" width="0.0105%" height="15" fill="rgb(215,124,48)" fg:x="425" fg:w="1"/><text x="4.7026%" y="191.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="4.4526%" y="165" width="0.0105%" height="15" fill="rgb(216,46,13)" fg:x="425" fg:w="1"/><text x="4.7026%" y="175.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="4.4526%" y="149" width="0.0105%" height="15" fill="rgb(205,184,25)" fg:x="425" fg:w="1"/><text x="4.7026%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="4.4631%" y="421" width="0.0105%" height="15" fill="rgb(228,1,10)" fg:x="426" fg:w="1"/><text x="4.7131%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="4.4631%" y="405" width="0.0105%" height="15" fill="rgb(213,116,27)" fg:x="426" fg:w="1"/><text x="4.7131%" y="415.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="4.4631%" y="389" width="0.0105%" height="15" fill="rgb(241,95,50)" fg:x="426" fg:w="1"/><text x="4.7131%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="4.4631%" y="373" width="0.0105%" height="15" fill="rgb(238,48,32)" fg:x="426" fg:w="1"/><text x="4.7131%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="4.4631%" y="357" width="0.0105%" height="15" fill="rgb(235,113,49)" fg:x="426" fg:w="1"/><text x="4.7131%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="4.4631%" y="341" width="0.0105%" height="15" fill="rgb(205,127,43)" fg:x="426" fg:w="1"/><text x="4.7131%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="4.4631%" y="325" width="0.0105%" height="15" fill="rgb(250,162,2)" fg:x="426" fg:w="1"/><text x="4.7131%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="4.4631%" y="309" width="0.0105%" height="15" fill="rgb(220,13,41)" fg:x="426" fg:w="1"/><text x="4.7131%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="4.4631%" y="293" width="0.0105%" height="15" fill="rgb(249,221,25)" fg:x="426" fg:w="1"/><text x="4.7131%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="4.4631%" y="277" width="0.0105%" height="15" fill="rgb(215,208,19)" fg:x="426" fg:w="1"/><text x="4.7131%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="4.4631%" y="261" width="0.0105%" height="15" fill="rgb(236,175,2)" fg:x="426" fg:w="1"/><text x="4.7131%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="4.4631%" y="245" width="0.0105%" height="15" fill="rgb(241,52,2)" fg:x="426" fg:w="1"/><text x="4.7131%" y="255.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="4.4631%" y="229" width="0.0105%" height="15" fill="rgb(248,140,14)" fg:x="426" fg:w="1"/><text x="4.7131%" y="239.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="4.4631%" y="213" width="0.0105%" height="15" fill="rgb(253,22,42)" fg:x="426" fg:w="1"/><text x="4.7131%" y="223.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="4.4631%" y="197" width="0.0105%" height="15" fill="rgb(234,61,47)" fg:x="426" fg:w="1"/><text x="4.7131%" y="207.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="4.4631%" y="181" width="0.0105%" height="15" fill="rgb(208,226,15)" fg:x="426" fg:w="1"/><text x="4.7131%" y="191.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="4.4735%" y="421" width="0.0105%" height="15" fill="rgb(217,221,4)" fg:x="427" fg:w="1"/><text x="4.7235%" y="431.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="4.4735%" y="405" width="0.0105%" height="15" fill="rgb(212,174,34)" fg:x="427" fg:w="1"/><text x="4.7235%" y="415.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="4.4735%" y="389" width="0.0105%" height="15" fill="rgb(253,83,4)" fg:x="427" fg:w="1"/><text x="4.7235%" y="399.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="4.4735%" y="373" width="0.0105%" height="15" fill="rgb(250,195,49)" fg:x="427" fg:w="1"/><text x="4.7235%" y="383.50"></text></g><g><title>core::fmt::num::fmt_u128 (1 samples, 0.01%)</title><rect x="4.4735%" y="357" width="0.0105%" height="15" fill="rgb(241,192,25)" fg:x="427" fg:w="1"/><text x="4.7235%" y="367.50"></text></g><g><title>core::fmt::num::fmt_u128 (1 samples, 0.01%)</title><rect x="4.4735%" y="341" width="0.0105%" height="15" fill="rgb(208,124,10)" fg:x="427" fg:w="1"/><text x="4.7235%" y="351.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (3 samples, 0.03%)</title><rect x="4.4631%" y="741" width="0.0314%" height="15" fill="rgb(222,33,0)" fg:x="426" fg:w="3"/><text x="4.7131%" y="751.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (3 samples, 0.03%)</title><rect x="4.4631%" y="725" width="0.0314%" height="15" fill="rgb(234,209,28)" fg:x="426" fg:w="3"/><text x="4.7131%" y="735.50"></text></g><g><title>tracing::span::Span::new (3 samples, 0.03%)</title><rect x="4.4631%" y="709" width="0.0314%" height="15" fill="rgb(224,11,23)" fg:x="426" fg:w="3"/><text x="4.7131%" y="719.50"></text></g><g><title>tracing::span::Span::make (3 samples, 0.03%)</title><rect x="4.4631%" y="693" width="0.0314%" height="15" fill="rgb(232,99,1)" fg:x="426" fg:w="3"/><text x="4.7131%" y="703.50"></text></g><g><title>tracing_core::dispatcher::get_default (3 samples, 0.03%)</title><rect x="4.4631%" y="677" width="0.0314%" height="15" fill="rgb(237,95,45)" fg:x="426" fg:w="3"/><text x="4.7131%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.03%)</title><rect x="4.4631%" y="661" width="0.0314%" height="15" fill="rgb(208,109,11)" fg:x="426" fg:w="3"/><text x="4.7131%" y="671.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (3 samples, 0.03%)</title><rect x="4.4631%" y="645" width="0.0314%" height="15" fill="rgb(216,190,48)" fg:x="426" fg:w="3"/><text x="4.7131%" y="655.50"></text></g><g><title>tracing::span::Span::make::{{closure}} (3 samples, 0.03%)</title><rect x="4.4631%" y="629" width="0.0314%" height="15" fill="rgb(251,171,36)" fg:x="426" fg:w="3"/><text x="4.7131%" y="639.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (3 samples, 0.03%)</title><rect x="4.4631%" y="613" width="0.0314%" height="15" fill="rgb(230,62,22)" fg:x="426" fg:w="3"/><text x="4.7131%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.03%)</title><rect x="4.4631%" y="597" width="0.0314%" height="15" fill="rgb(225,114,35)" fg:x="426" fg:w="3"/><text x="4.7131%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.03%)</title><rect x="4.4631%" y="581" width="0.0314%" height="15" fill="rgb(215,118,42)" fg:x="426" fg:w="3"/><text x="4.7131%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (3 samples, 0.03%)</title><rect x="4.4631%" y="565" width="0.0314%" height="15" fill="rgb(243,119,21)" fg:x="426" fg:w="3"/><text x="4.7131%" y="575.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (3 samples, 0.03%)</title><rect x="4.4631%" y="549" width="0.0314%" height="15" fill="rgb(252,177,53)" fg:x="426" fg:w="3"/><text x="4.7131%" y="559.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.03%)</title><rect x="4.4631%" y="533" width="0.0314%" height="15" fill="rgb(237,209,29)" fg:x="426" fg:w="3"/><text x="4.7131%" y="543.50"></text></g><g><title>tracing_core::span::Attributes::record (3 samples, 0.03%)</title><rect x="4.4631%" y="517" width="0.0314%" height="15" fill="rgb(212,65,23)" fg:x="426" fg:w="3"/><text x="4.7131%" y="527.50"></text></g><g><title>tracing_core::field::ValueSet::record (3 samples, 0.03%)</title><rect x="4.4631%" y="501" width="0.0314%" height="15" fill="rgb(230,222,46)" fg:x="426" fg:w="3"/><text x="4.7131%" y="511.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (3 samples, 0.03%)</title><rect x="4.4631%" y="485" width="0.0314%" height="15" fill="rgb(215,135,32)" fg:x="426" fg:w="3"/><text x="4.7131%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (3 samples, 0.03%)</title><rect x="4.4631%" y="469" width="0.0314%" height="15" fill="rgb(246,101,22)" fg:x="426" fg:w="3"/><text x="4.7131%" y="479.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.03%)</title><rect x="4.4631%" y="453" width="0.0314%" height="15" fill="rgb(206,107,13)" fg:x="426" fg:w="3"/><text x="4.7131%" y="463.50"></text></g><g><title>core::fmt::write (3 samples, 0.03%)</title><rect x="4.4631%" y="437" width="0.0314%" height="15" fill="rgb(250,100,44)" fg:x="426" fg:w="3"/><text x="4.7131%" y="447.50"></text></g><g><title>&lt;gpu_alloc_types::device::AllocationFlags as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="4.4840%" y="421" width="0.0105%" height="15" fill="rgb(231,147,38)" fg:x="428" fg:w="1"/><text x="4.7340%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="4.4840%" y="405" width="0.0105%" height="15" fill="rgb(229,8,40)" fg:x="428" fg:w="1"/><text x="4.7340%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="4.4840%" y="389" width="0.0105%" height="15" fill="rgb(221,135,30)" fg:x="428" fg:w="1"/><text x="4.7340%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="4.4840%" y="373" width="0.0105%" height="15" fill="rgb(249,193,18)" fg:x="428" fg:w="1"/><text x="4.7340%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="4.4840%" y="357" width="0.0105%" height="15" fill="rgb(209,133,39)" fg:x="428" fg:w="1"/><text x="4.7340%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="4.4840%" y="341" width="0.0105%" height="15" fill="rgb(232,100,14)" fg:x="428" fg:w="1"/><text x="4.7340%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="4.4840%" y="325" width="0.0105%" height="15" fill="rgb(224,185,1)" fg:x="428" fg:w="1"/><text x="4.7340%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="4.4840%" y="309" width="0.0105%" height="15" fill="rgb(223,139,8)" fg:x="428" fg:w="1"/><text x="4.7340%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="4.4840%" y="293" width="0.0105%" height="15" fill="rgb(232,213,38)" fg:x="428" fg:w="1"/><text x="4.7340%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="4.4840%" y="277" width="0.0105%" height="15" fill="rgb(207,94,22)" fg:x="428" fg:w="1"/><text x="4.7340%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="4.4840%" y="261" width="0.0105%" height="15" fill="rgb(219,183,54)" fg:x="428" fg:w="1"/><text x="4.7340%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="4.4840%" y="245" width="0.0105%" height="15" fill="rgb(216,185,54)" fg:x="428" fg:w="1"/><text x="4.7340%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="4.4840%" y="229" width="0.0105%" height="15" fill="rgb(254,217,39)" fg:x="428" fg:w="1"/><text x="4.7340%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="4.4840%" y="213" width="0.0105%" height="15" fill="rgb(240,178,23)" fg:x="428" fg:w="1"/><text x="4.7340%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="4.4840%" y="197" width="0.0105%" height="15" fill="rgb(218,11,47)" fg:x="428" fg:w="1"/><text x="4.7340%" y="207.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="4.4840%" y="181" width="0.0105%" height="15" fill="rgb(218,51,51)" fg:x="428" fg:w="1"/><text x="4.7340%" y="191.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="4.4840%" y="165" width="0.0105%" height="15" fill="rgb(238,126,27)" fg:x="428" fg:w="1"/><text x="4.7340%" y="175.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="4.4840%" y="149" width="0.0105%" height="15" fill="rgb(249,202,22)" fg:x="428" fg:w="1"/><text x="4.7340%" y="159.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (4 samples, 0.04%)</title><rect x="4.4631%" y="1237" width="0.0419%" height="15" fill="rgb(254,195,49)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1247.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (4 samples, 0.04%)</title><rect x="4.4631%" y="1221" width="0.0419%" height="15" fill="rgb(208,123,14)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1231.50"></text></g><g><title>futures_lite::future::block_on (4 samples, 0.04%)</title><rect x="4.4631%" y="1205" width="0.0419%" height="15" fill="rgb(224,200,8)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1215.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.04%)</title><rect x="4.4631%" y="1189" width="0.0419%" height="15" fill="rgb(217,61,36)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1199.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (4 samples, 0.04%)</title><rect x="4.4631%" y="1173" width="0.0419%" height="15" fill="rgb(206,35,45)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1183.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (4 samples, 0.04%)</title><rect x="4.4631%" y="1157" width="0.0419%" height="15" fill="rgb(217,65,33)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1167.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="4.4631%" y="1141" width="0.0419%" height="15" fill="rgb(222,158,48)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1151.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (4 samples, 0.04%)</title><rect x="4.4631%" y="1125" width="0.0419%" height="15" fill="rgb(254,2,54)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1135.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="4.4631%" y="1109" width="0.0419%" height="15" fill="rgb(250,143,38)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1119.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="4.4631%" y="1093" width="0.0419%" height="15" fill="rgb(248,25,0)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1103.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (4 samples, 0.04%)</title><rect x="4.4631%" y="1077" width="0.0419%" height="15" fill="rgb(206,152,27)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1087.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (4 samples, 0.04%)</title><rect x="4.4631%" y="1061" width="0.0419%" height="15" fill="rgb(240,77,30)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1071.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="4.4631%" y="1045" width="0.0419%" height="15" fill="rgb(231,5,3)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1055.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (4 samples, 0.04%)</title><rect x="4.4631%" y="1029" width="0.0419%" height="15" fill="rgb(207,226,32)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1039.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="4.4631%" y="1013" width="0.0419%" height="15" fill="rgb(222,207,47)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1023.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (4 samples, 0.04%)</title><rect x="4.4631%" y="997" width="0.0419%" height="15" fill="rgb(229,115,45)" fg:x="426" fg:w="4"/><text x="4.7131%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (4 samples, 0.04%)</title><rect x="4.4631%" y="981" width="0.0419%" height="15" fill="rgb(224,191,6)" fg:x="426" fg:w="4"/><text x="4.7131%" y="991.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (4 samples, 0.04%)</title><rect x="4.4631%" y="965" width="0.0419%" height="15" fill="rgb(230,227,24)" fg:x="426" fg:w="4"/><text x="4.7131%" y="975.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.04%)</title><rect x="4.4631%" y="949" width="0.0419%" height="15" fill="rgb(228,80,19)" fg:x="426" fg:w="4"/><text x="4.7131%" y="959.50"></text></g><g><title>core::ops::function::Fn::call (4 samples, 0.04%)</title><rect x="4.4631%" y="933" width="0.0419%" height="15" fill="rgb(247,229,0)" fg:x="426" fg:w="4"/><text x="4.7131%" y="943.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (4 samples, 0.04%)</title><rect x="4.4631%" y="917" width="0.0419%" height="15" fill="rgb(237,194,15)" fg:x="426" fg:w="4"/><text x="4.7131%" y="927.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (4 samples, 0.04%)</title><rect x="4.4631%" y="901" width="0.0419%" height="15" fill="rgb(219,203,20)" fg:x="426" fg:w="4"/><text x="4.7131%" y="911.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system::{{closure}} (4 samples, 0.04%)</title><rect x="4.4631%" y="885" width="0.0419%" height="15" fill="rgb(234,128,8)" fg:x="426" fg:w="4"/><text x="4.7131%" y="895.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (4 samples, 0.04%)</title><rect x="4.4631%" y="869" width="0.0419%" height="15" fill="rgb(248,202,8)" fg:x="426" fg:w="4"/><text x="4.7131%" y="879.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer (4 samples, 0.04%)</title><rect x="4.4631%" y="853" width="0.0419%" height="15" fill="rgb(206,104,37)" fg:x="426" fg:w="4"/><text x="4.7131%" y="863.50"></text></g><g><title>wgpu::Device::create_buffer (4 samples, 0.04%)</title><rect x="4.4631%" y="837" width="0.0419%" height="15" fill="rgb(223,8,27)" fg:x="426" fg:w="4"/><text x="4.7131%" y="847.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (4 samples, 0.04%)</title><rect x="4.4631%" y="821" width="0.0419%" height="15" fill="rgb(216,217,28)" fg:x="426" fg:w="4"/><text x="4.7131%" y="831.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (4 samples, 0.04%)</title><rect x="4.4631%" y="805" width="0.0419%" height="15" fill="rgb(249,199,1)" fg:x="426" fg:w="4"/><text x="4.7131%" y="815.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (4 samples, 0.04%)</title><rect x="4.4631%" y="789" width="0.0419%" height="15" fill="rgb(240,85,17)" fg:x="426" fg:w="4"/><text x="4.7131%" y="799.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (4 samples, 0.04%)</title><rect x="4.4631%" y="773" width="0.0419%" height="15" fill="rgb(206,108,45)" fg:x="426" fg:w="4"/><text x="4.7131%" y="783.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (4 samples, 0.04%)</title><rect x="4.4631%" y="757" width="0.0419%" height="15" fill="rgb(245,210,41)" fg:x="426" fg:w="4"/><text x="4.7131%" y="767.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="4.4945%" y="741" width="0.0105%" height="15" fill="rgb(206,13,37)" fg:x="429" fg:w="1"/><text x="4.7445%" y="751.50"></text></g><g><title>tracing::span::Span::make (1 samples, 0.01%)</title><rect x="4.4945%" y="725" width="0.0105%" height="15" fill="rgb(250,61,18)" fg:x="429" fg:w="1"/><text x="4.7445%" y="735.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="4.4945%" y="709" width="0.0105%" height="15" fill="rgb(235,172,48)" fg:x="429" fg:w="1"/><text x="4.7445%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="4.4945%" y="693" width="0.0105%" height="15" fill="rgb(249,201,17)" fg:x="429" fg:w="1"/><text x="4.7445%" y="703.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="4.4945%" y="677" width="0.0105%" height="15" fill="rgb(219,208,6)" fg:x="429" fg:w="1"/><text x="4.7445%" y="687.50"></text></g><g><title>tracing::span::Span::make::{{closure}} (1 samples, 0.01%)</title><rect x="4.4945%" y="661" width="0.0105%" height="15" fill="rgb(248,31,23)" fg:x="429" fg:w="1"/><text x="4.7445%" y="671.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="4.4945%" y="645" width="0.0105%" height="15" fill="rgb(245,15,42)" fg:x="429" fg:w="1"/><text x="4.7445%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="4.4945%" y="629" width="0.0105%" height="15" fill="rgb(222,217,39)" fg:x="429" fg:w="1"/><text x="4.7445%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="4.4945%" y="613" width="0.0105%" height="15" fill="rgb(210,219,27)" fg:x="429" fg:w="1"/><text x="4.7445%" y="623.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="4.4945%" y="597" width="0.0105%" height="15" fill="rgb(252,166,36)" fg:x="429" fg:w="1"/><text x="4.7445%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="4.4945%" y="581" width="0.0105%" height="15" fill="rgb(245,132,34)" fg:x="429" fg:w="1"/><text x="4.7445%" y="591.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="4.4945%" y="565" width="0.0105%" height="15" fill="rgb(236,54,3)" fg:x="429" fg:w="1"/><text x="4.7445%" y="575.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.01%)</title><rect x="4.4945%" y="549" width="0.0105%" height="15" fill="rgb(241,173,43)" fg:x="429" fg:w="1"/><text x="4.7445%" y="559.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.01%)</title><rect x="4.4945%" y="533" width="0.0105%" height="15" fill="rgb(215,190,9)" fg:x="429" fg:w="1"/><text x="4.7445%" y="543.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="4.4945%" y="517" width="0.0105%" height="15" fill="rgb(242,101,16)" fg:x="429" fg:w="1"/><text x="4.7445%" y="527.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="4.5050%" y="1237" width="0.0105%" height="15" fill="rgb(223,190,21)" fg:x="430" fg:w="1"/><text x="4.7550%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="4.5050%" y="1221" width="0.0105%" height="15" fill="rgb(215,228,25)" fg:x="430" fg:w="1"/><text x="4.7550%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="4.5155%" y="1045" width="0.0733%" height="15" fill="rgb(225,36,22)" fg:x="431" fg:w="7"/><text x="4.7655%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="4.5155%" y="1029" width="0.0733%" height="15" fill="rgb(251,106,46)" fg:x="431" fg:w="7"/><text x="4.7655%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="4.5783%" y="1013" width="0.0105%" height="15" fill="rgb(208,90,1)" fg:x="437" fg:w="1"/><text x="4.8283%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="4.5783%" y="997" width="0.0105%" height="15" fill="rgb(243,10,4)" fg:x="437" fg:w="1"/><text x="4.8283%" y="1007.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="4.5783%" y="981" width="0.0105%" height="15" fill="rgb(212,137,27)" fg:x="437" fg:w="1"/><text x="4.8283%" y="991.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="4.5783%" y="965" width="0.0105%" height="15" fill="rgb(231,220,49)" fg:x="437" fg:w="1"/><text x="4.8283%" y="975.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_render_pipeline (8 samples, 0.08%)</title><rect x="4.5155%" y="1237" width="0.0838%" height="15" fill="rgb(237,96,20)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1247.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_render_pipeline (8 samples, 0.08%)</title><rect x="4.5155%" y="1221" width="0.0838%" height="15" fill="rgb(239,229,30)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1231.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_graphics_pipeline (8 samples, 0.08%)</title><rect x="4.5155%" y="1205" width="0.0838%" height="15" fill="rgb(219,65,33)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="4.5155%" y="1189" width="0.0838%" height="15" fill="rgb(243,134,7)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="4.5155%" y="1173" width="0.0838%" height="15" fill="rgb(216,177,54)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="4.5155%" y="1157" width="0.0838%" height="15" fill="rgb(211,160,20)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="4.5155%" y="1141" width="0.0838%" height="15" fill="rgb(239,85,39)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="4.5155%" y="1125" width="0.0838%" height="15" fill="rgb(232,125,22)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="4.5155%" y="1109" width="0.0838%" height="15" fill="rgb(244,57,34)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="4.5155%" y="1093" width="0.0838%" height="15" fill="rgb(214,203,32)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="4.5155%" y="1077" width="0.0838%" height="15" fill="rgb(207,58,43)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="4.5155%" y="1061" width="0.0838%" height="15" fill="rgb(215,193,15)" fg:x="431" fg:w="8"/><text x="4.7655%" y="1071.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="4.5888%" y="1045" width="0.0105%" height="15" fill="rgb(232,15,44)" fg:x="438" fg:w="1"/><text x="4.8388%" y="1055.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="4.5993%" y="1237" width="0.0105%" height="15" fill="rgb(212,3,48)" fg:x="439" fg:w="1"/><text x="4.8493%" y="1247.50"></text></g><g><title>[libbevy_dylib-7e0daee3ecabe62f.so] (1 samples, 0.01%)</title><rect x="4.7250%" y="1221" width="0.0105%" height="15" fill="rgb(218,128,7)" fg:x="451" fg:w="1"/><text x="4.9750%" y="1231.50"></text></g><g><title>__memmove_avx_unaligned_erms (12 samples, 0.13%)</title><rect x="4.7355%" y="1221" width="0.1257%" height="15" fill="rgb(226,216,39)" fg:x="452" fg:w="12"/><text x="4.9855%" y="1231.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.01%)</title><rect x="4.8612%" y="1205" width="0.0105%" height="15" fill="rgb(243,47,51)" fg:x="464" fg:w="1"/><text x="5.1112%" y="1215.50"></text></g><g><title>glslang::TFunction::TFunction (2 samples, 0.02%)</title><rect x="4.8612%" y="1221" width="0.0210%" height="15" fill="rgb(241,183,40)" fg:x="464" fg:w="2"/><text x="5.1112%" y="1231.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::reserve (1 samples, 0.01%)</title><rect x="4.8717%" y="1205" width="0.0105%" height="15" fill="rgb(231,217,32)" fg:x="465" fg:w="1"/><text x="5.1217%" y="1215.50"></text></g><g><title>glslang::TType::buildMangledName (3 samples, 0.03%)</title><rect x="4.8821%" y="1205" width="0.0314%" height="15" fill="rgb(229,61,38)" fg:x="466" fg:w="3"/><text x="5.1321%" y="1215.50"></text></g><g><title>glslang::TFunction::addParameter (4 samples, 0.04%)</title><rect x="4.8821%" y="1221" width="0.0419%" height="15" fill="rgb(225,210,5)" fg:x="466" fg:w="4"/><text x="5.1321%" y="1231.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::reserve (1 samples, 0.01%)</title><rect x="4.9136%" y="1205" width="0.0105%" height="15" fill="rgb(231,79,45)" fg:x="469" fg:w="1"/><text x="5.1636%" y="1215.50"></text></g><g><title>glslang::TIntermediate::addConstantUnion (1 samples, 0.01%)</title><rect x="4.9240%" y="1221" width="0.0105%" height="15" fill="rgb(224,100,7)" fg:x="470" fg:w="1"/><text x="5.1740%" y="1231.50"></text></g><g><title>glslang::TParseContext::declareArray (1 samples, 0.01%)</title><rect x="4.9345%" y="1205" width="0.0105%" height="15" fill="rgb(241,198,18)" fg:x="471" fg:w="1"/><text x="5.1845%" y="1215.50"></text></g><g><title>glslang::TVariable::TVariable (1 samples, 0.01%)</title><rect x="4.9345%" y="1189" width="0.0105%" height="15" fill="rgb(252,97,53)" fg:x="471" fg:w="1"/><text x="5.1845%" y="1199.50"></text></g><g><title>glslang::TParseContext::declareNonArray (1 samples, 0.01%)</title><rect x="4.9450%" y="1205" width="0.0105%" height="15" fill="rgb(220,88,7)" fg:x="472" fg:w="1"/><text x="5.1950%" y="1215.50"></text></g><g><title>glslang::TPoolAllocator::allocate (1 samples, 0.01%)</title><rect x="4.9450%" y="1189" width="0.0105%" height="15" fill="rgb(213,176,14)" fg:x="472" fg:w="1"/><text x="5.1950%" y="1199.50"></text></g><g><title>operator new (1 samples, 0.01%)</title><rect x="4.9450%" y="1173" width="0.0105%" height="15" fill="rgb(246,73,7)" fg:x="472" fg:w="1"/><text x="5.1950%" y="1183.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="4.9450%" y="1157" width="0.0105%" height="15" fill="rgb(245,64,36)" fg:x="472" fg:w="1"/><text x="5.1950%" y="1167.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="4.9450%" y="1141" width="0.0105%" height="15" fill="rgb(245,80,10)" fg:x="472" fg:w="1"/><text x="5.1950%" y="1151.50"></text></g><g><title>sysmalloc (1 samples, 0.01%)</title><rect x="4.9450%" y="1125" width="0.0105%" height="15" fill="rgb(232,107,50)" fg:x="472" fg:w="1"/><text x="5.1950%" y="1135.50"></text></g><g><title>__GI___mprotect (1 samples, 0.01%)</title><rect x="4.9450%" y="1109" width="0.0105%" height="15" fill="rgb(253,3,0)" fg:x="472" fg:w="1"/><text x="5.1950%" y="1119.50"></text></g><g><title>glslang::TParseContext::declareVariable (3 samples, 0.03%)</title><rect x="4.9345%" y="1221" width="0.0314%" height="15" fill="rgb(212,99,53)" fg:x="471" fg:w="3"/><text x="5.1845%" y="1231.50"></text></g><g><title>glslang::TParseContext::executeInitializer (1 samples, 0.01%)</title><rect x="4.9555%" y="1205" width="0.0105%" height="15" fill="rgb(249,111,54)" fg:x="473" fg:w="1"/><text x="5.2055%" y="1215.50"></text></g><g><title>glslang::TIntermTyped::getType (1 samples, 0.01%)</title><rect x="4.9555%" y="1189" width="0.0105%" height="15" fill="rgb(249,55,30)" fg:x="473" fg:w="1"/><text x="5.2055%" y="1199.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_get_insert_unique_pos (3 samples, 0.03%)</title><rect x="4.9660%" y="1157" width="0.0314%" height="15" fill="rgb(237,47,42)" fg:x="474" fg:w="3"/><text x="5.2160%" y="1167.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="4.9764%" y="1141" width="0.0210%" height="15" fill="rgb(211,20,18)" fg:x="475" fg:w="2"/><text x="5.2264%" y="1151.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_insert_unique&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; const&gt; (4 samples, 0.04%)</title><rect x="4.9660%" y="1173" width="0.0419%" height="15" fill="rgb(231,203,46)" fg:x="474" fg:w="4"/><text x="5.2160%" y="1183.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.01%)</title><rect x="4.9974%" y="1157" width="0.0105%" height="15" fill="rgb(237,142,3)" fg:x="477" fg:w="1"/><text x="5.2474%" y="1167.50"></text></g><g><title>std::_Rb_tree_insert_and_rebalance (1 samples, 0.01%)</title><rect x="4.9974%" y="1141" width="0.0105%" height="15" fill="rgb(241,107,1)" fg:x="477" fg:w="1"/><text x="5.2474%" y="1151.50"></text></g><g><title>glslang::TSymbolTable::insert (9 samples, 0.09%)</title><rect x="4.9660%" y="1205" width="0.0943%" height="15" fill="rgb(229,83,13)" fg:x="474" fg:w="9"/><text x="5.2160%" y="1215.50"></text></g><g><title>glslang::TSymbolTableLevel::insert (9 samples, 0.09%)</title><rect x="4.9660%" y="1189" width="0.0943%" height="15" fill="rgb(241,91,40)" fg:x="474" fg:w="9"/><text x="5.2160%" y="1199.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (5 samples, 0.05%)</title><rect x="5.0079%" y="1173" width="0.0524%" height="15" fill="rgb(225,3,45)" fg:x="478" fg:w="5"/><text x="5.2579%" y="1183.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.05%)</title><rect x="5.0079%" y="1157" width="0.0524%" height="15" fill="rgb(244,223,14)" fg:x="478" fg:w="5"/><text x="5.2579%" y="1167.50"></text></g><g><title>glslang::TParseContext::handleFunctionDeclarator (14 samples, 0.15%)</title><rect x="4.9660%" y="1221" width="0.1467%" height="15" fill="rgb(224,124,37)" fg:x="474" fg:w="14"/><text x="5.2160%" y="1231.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (5 samples, 0.05%)</title><rect x="5.0602%" y="1205" width="0.0524%" height="15" fill="rgb(251,171,30)" fg:x="483" fg:w="5"/><text x="5.3102%" y="1215.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="5.0917%" y="1189" width="0.0210%" height="15" fill="rgb(236,46,54)" fg:x="486" fg:w="2"/><text x="5.3417%" y="1199.50"></text></g><g><title>glslang::TParseContext::mergeQualifiers (1 samples, 0.01%)</title><rect x="5.1126%" y="1221" width="0.0105%" height="15" fill="rgb(245,213,5)" fg:x="488" fg:w="1"/><text x="5.3626%" y="1231.50"></text></g><g><title>glslang::TParseContextBase::renameShaderFunction (1 samples, 0.01%)</title><rect x="5.1231%" y="1221" width="0.0105%" height="15" fill="rgb(230,144,27)" fg:x="489" fg:w="1"/><text x="5.3731%" y="1231.50"></text></g><g><title>glslang::TType::TType (1 samples, 0.01%)</title><rect x="5.1336%" y="1221" width="0.0105%" height="15" fill="rgb(220,86,6)" fg:x="490" fg:w="1"/><text x="5.3836%" y="1231.50"></text></g><g><title>_IO_no_init (2 samples, 0.02%)</title><rect x="5.1964%" y="1141" width="0.0210%" height="15" fill="rgb(240,20,13)" fg:x="496" fg:w="2"/><text x="5.4464%" y="1151.50"></text></g><g><title>_IO_old_init (1 samples, 0.01%)</title><rect x="5.2069%" y="1125" width="0.0105%" height="15" fill="rgb(217,89,34)" fg:x="497" fg:w="1"/><text x="5.4569%" y="1135.50"></text></g><g><title>_IO_str_init_static_internal (1 samples, 0.01%)</title><rect x="5.2174%" y="1141" width="0.0105%" height="15" fill="rgb(229,13,5)" fg:x="498" fg:w="1"/><text x="5.4674%" y="1151.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="5.2803%" y="1125" width="0.0105%" height="15" fill="rgb(244,67,35)" fg:x="504" fg:w="1"/><text x="5.5303%" y="1135.50"></text></g><g><title>__GI__IO_default_xsputn (1 samples, 0.01%)</title><rect x="5.2907%" y="1125" width="0.0105%" height="15" fill="rgb(221,40,2)" fg:x="505" fg:w="1"/><text x="5.5407%" y="1135.50"></text></g><g><title>__GI___snprintf (11 samples, 0.12%)</title><rect x="5.1964%" y="1173" width="0.1152%" height="15" fill="rgb(237,157,21)" fg:x="496" fg:w="11"/><text x="5.4464%" y="1183.50"></text></g><g><title>__vsnprintf_internal (11 samples, 0.12%)</title><rect x="5.1964%" y="1157" width="0.1152%" height="15" fill="rgb(222,94,11)" fg:x="496" fg:w="11"/><text x="5.4464%" y="1167.50"></text></g><g><title>__vfprintf_internal (8 samples, 0.08%)</title><rect x="5.2279%" y="1141" width="0.0838%" height="15" fill="rgb(249,113,6)" fg:x="499" fg:w="8"/><text x="5.4779%" y="1151.50"></text></g><g><title>__strchrnul_avx2 (1 samples, 0.01%)</title><rect x="5.3012%" y="1125" width="0.0105%" height="15" fill="rgb(238,137,36)" fg:x="506" fg:w="1"/><text x="5.5512%" y="1135.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="5.3745%" y="1141" width="0.0105%" height="15" fill="rgb(210,102,26)" fg:x="513" fg:w="1"/><text x="5.6245%" y="1151.50"></text></g><g><title>__GI___pthread_getspecific (1 samples, 0.01%)</title><rect x="5.3850%" y="1125" width="0.0105%" height="15" fill="rgb(218,30,30)" fg:x="514" fg:w="1"/><text x="5.6350%" y="1135.50"></text></g><g><title>glslang::GetThreadPoolAllocator (2 samples, 0.02%)</title><rect x="5.3850%" y="1141" width="0.0210%" height="15" fill="rgb(214,67,26)" fg:x="514" fg:w="2"/><text x="5.6350%" y="1151.50"></text></g><g><title>pthread_getspecific@plt (1 samples, 0.01%)</title><rect x="5.3955%" y="1125" width="0.0105%" height="15" fill="rgb(251,9,53)" fg:x="515" fg:w="1"/><text x="5.6455%" y="1135.50"></text></g><g><title>glslang::TPpContext::MacroExpand (12 samples, 0.13%)</title><rect x="5.3117%" y="1173" width="0.1257%" height="15" fill="rgb(228,204,25)" fg:x="507" fg:w="12"/><text x="5.5617%" y="1183.50"></text></g><g><title>glslang::TStringAtomMap::getAtom (12 samples, 0.13%)</title><rect x="5.3117%" y="1157" width="0.1257%" height="15" fill="rgb(207,153,8)" fg:x="507" fg:w="12"/><text x="5.5617%" y="1167.50"></text></g><g><title>std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;::_S_construct&lt;char const*&gt; (3 samples, 0.03%)</title><rect x="5.4060%" y="1141" width="0.0314%" height="15" fill="rgb(242,9,16)" fg:x="516" fg:w="3"/><text x="5.6560%" y="1151.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="5.4269%" y="1125" width="0.0105%" height="15" fill="rgb(217,211,10)" fg:x="518" fg:w="1"/><text x="5.6769%" y="1135.50"></text></g><g><title>glslang::TPpContext::tStringInput::getch (10 samples, 0.10%)</title><rect x="5.5107%" y="1157" width="0.1048%" height="15" fill="rgb(219,228,52)" fg:x="526" fg:w="10"/><text x="5.7607%" y="1167.50"></text></g><g><title>glslang::TInputScanner::get (8 samples, 0.08%)</title><rect x="5.5317%" y="1141" width="0.0838%" height="15" fill="rgb(231,92,29)" fg:x="528" fg:w="8"/><text x="5.7817%" y="1151.50"></text></g><g><title>glslang::TPpContext::tokenize (44 samples, 0.46%)</title><rect x="5.1650%" y="1189" width="0.4610%" height="15" fill="rgb(232,8,23)" fg:x="493" fg:w="44"/><text x="5.4150%" y="1199.50"></text></g><g><title>glslang::TPpContext::tStringInput::scan (18 samples, 0.19%)</title><rect x="5.4374%" y="1173" width="0.1886%" height="15" fill="rgb(216,211,34)" fg:x="519" fg:w="18"/><text x="5.6874%" y="1183.50"></text></g><g><title>glslang::TPpContext::tStringInput::ungetch (1 samples, 0.01%)</title><rect x="5.6155%" y="1157" width="0.0105%" height="15" fill="rgb(236,151,0)" fg:x="536" fg:w="1"/><text x="5.8655%" y="1167.50"></text></g><g><title>glslang::TInputScanner::unget (1 samples, 0.01%)</title><rect x="5.6155%" y="1141" width="0.0105%" height="15" fill="rgb(209,168,3)" fg:x="536" fg:w="1"/><text x="5.8655%" y="1151.50"></text></g><g><title>glslang::TScanContext::identifierOrType (10 samples, 0.10%)</title><rect x="5.6260%" y="1189" width="0.1048%" height="15" fill="rgb(208,129,28)" fg:x="537" fg:w="10"/><text x="5.8760%" y="1199.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::find (10 samples, 0.10%)</title><rect x="5.6260%" y="1173" width="0.1048%" height="15" fill="rgb(229,78,22)" fg:x="537" fg:w="10"/><text x="5.8760%" y="1183.50"></text></g><g><title>__memcmp_avx2_movbe (6 samples, 0.06%)</title><rect x="5.6679%" y="1157" width="0.0629%" height="15" fill="rgb(228,187,13)" fg:x="541" fg:w="6"/><text x="5.9179%" y="1167.50"></text></g><g><title>[unknown] (324 samples, 3.39%)</title><rect x="2.5354%" y="1253" width="3.3944%" height="15" fill="rgb(240,119,24)" fg:x="242" fg:w="324"/><text x="2.7854%" y="1263.50">[un..</text></g><g><title>yyparse (126 samples, 1.32%)</title><rect x="4.6097%" y="1237" width="1.3201%" height="15" fill="rgb(209,194,42)" fg:x="440" fg:w="126"/><text x="4.8597%" y="1247.50"></text></g><g><title>yylex (75 samples, 0.79%)</title><rect x="5.1441%" y="1221" width="0.7858%" height="15" fill="rgb(247,200,46)" fg:x="491" fg:w="75"/><text x="5.3941%" y="1231.50"></text></g><g><title>glslang::TScanContext::tokenize (75 samples, 0.79%)</title><rect x="5.1441%" y="1205" width="0.7858%" height="15" fill="rgb(218,76,16)" fg:x="491" fg:w="75"/><text x="5.3941%" y="1215.50"></text></g><g><title>glslang::TScanContext::tokenizeIdentifier (19 samples, 0.20%)</title><rect x="5.7307%" y="1189" width="0.1991%" height="15" fill="rgb(225,21,48)" fg:x="547" fg:w="19"/><text x="5.9807%" y="1199.50"></text></g><g><title>__strcmp_avx2 (3 samples, 0.03%)</title><rect x="5.8984%" y="1173" width="0.0314%" height="15" fill="rgb(239,223,50)" fg:x="563" fg:w="3"/><text x="6.1484%" y="1183.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="5.9298%" y="949" width="0.0105%" height="15" fill="rgb(244,45,21)" fg:x="566" fg:w="1"/><text x="6.1798%" y="959.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.04%)</title><rect x="5.9612%" y="869" width="0.0419%" height="15" fill="rgb(232,33,43)" fg:x="569" fg:w="4"/><text x="6.2112%" y="879.50"></text></g><g><title>core::mem::replace (4 samples, 0.04%)</title><rect x="5.9612%" y="853" width="0.0419%" height="15" fill="rgb(209,8,3)" fg:x="569" fg:w="4"/><text x="6.2112%" y="863.50"></text></g><g><title>core::ptr::read (4 samples, 0.04%)</title><rect x="5.9612%" y="837" width="0.0419%" height="15" fill="rgb(214,25,53)" fg:x="569" fg:w="4"/><text x="6.2112%" y="847.50"></text></g><g><title>core::task::wake::Waker::will_wake (2 samples, 0.02%)</title><rect x="6.0031%" y="869" width="0.0210%" height="15" fill="rgb(254,186,54)" fg:x="573" fg:w="2"/><text x="6.2531%" y="879.50"></text></g><g><title>&lt;core::task::wake::RawWaker as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="6.0031%" y="853" width="0.0210%" height="15" fill="rgb(208,174,49)" fg:x="573" fg:w="2"/><text x="6.2531%" y="863.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::recv::{{closure}} (9 samples, 0.09%)</title><rect x="5.9612%" y="901" width="0.0943%" height="15" fill="rgb(233,191,51)" fg:x="569" fg:w="9"/><text x="6.2112%" y="911.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (9 samples, 0.09%)</title><rect x="5.9612%" y="885" width="0.0943%" height="15" fill="rgb(222,134,10)" fg:x="569" fg:w="9"/><text x="6.2112%" y="895.50"></text></g><g><title>event_listener::Inner::lock (3 samples, 0.03%)</title><rect x="6.0241%" y="869" width="0.0314%" height="15" fill="rgb(230,226,20)" fg:x="575" fg:w="3"/><text x="6.2741%" y="879.50"></text></g><g><title>event_listener::Spinlock&lt;T&gt;::lock (3 samples, 0.03%)</title><rect x="6.0241%" y="853" width="0.0314%" height="15" fill="rgb(251,111,25)" fg:x="575" fg:w="3"/><text x="6.2741%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (3 samples, 0.03%)</title><rect x="6.0241%" y="837" width="0.0314%" height="15" fill="rgb(224,40,46)" fg:x="575" fg:w="3"/><text x="6.2741%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.03%)</title><rect x="6.0241%" y="821" width="0.0314%" height="15" fill="rgb(236,108,47)" fg:x="575" fg:w="3"/><text x="6.2741%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="6.1603%" y="677" width="0.0105%" height="15" fill="rgb(234,93,0)" fg:x="588" fg:w="1"/><text x="6.4103%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::filter::Filter&lt;I,P&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="6.1498%" y="773" width="0.0629%" height="15" fill="rgb(224,213,32)" fg:x="587" fg:w="6"/><text x="6.3998%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find (6 samples, 0.06%)</title><rect x="6.1498%" y="757" width="0.0629%" height="15" fill="rgb(251,11,48)" fg:x="587" fg:w="6"/><text x="6.3998%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.06%)</title><rect x="6.1498%" y="741" width="0.0629%" height="15" fill="rgb(236,173,5)" fg:x="587" fg:w="6"/><text x="6.3998%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::skip::Skip&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.06%)</title><rect x="6.1498%" y="725" width="0.0629%" height="15" fill="rgb(230,95,12)" fg:x="587" fg:w="6"/><text x="6.3998%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold (6 samples, 0.06%)</title><rect x="6.1498%" y="709" width="0.0629%" height="15" fill="rgb(232,209,1)" fg:x="587" fg:w="6"/><text x="6.3998%" y="719.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (5 samples, 0.05%)</title><rect x="6.1603%" y="693" width="0.0524%" height="15" fill="rgb(232,6,1)" fg:x="588" fg:w="5"/><text x="6.4103%" y="703.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (4 samples, 0.04%)</title><rect x="6.1708%" y="677" width="0.0419%" height="15" fill="rgb(210,224,50)" fg:x="589" fg:w="4"/><text x="6.4208%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::take::Take&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::try_fold::check::{{closure}} (4 samples, 0.04%)</title><rect x="6.1708%" y="661" width="0.0419%" height="15" fill="rgb(228,127,35)" fg:x="589" fg:w="4"/><text x="6.4208%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::find::check::{{closure}} (4 samples, 0.04%)</title><rect x="6.1708%" y="645" width="0.0419%" height="15" fill="rgb(245,102,45)" fg:x="589" fg:w="4"/><text x="6.4208%" y="655.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;mut F&gt;::call_mut (2 samples, 0.02%)</title><rect x="6.1917%" y="629" width="0.0210%" height="15" fill="rgb(214,1,49)" fg:x="591" fg:w="2"/><text x="6.4417%" y="639.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="6.2022%" y="613" width="0.0105%" height="15" fill="rgb(226,163,40)" fg:x="592" fg:w="1"/><text x="6.4522%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (3 samples, 0.03%)</title><rect x="6.2232%" y="757" width="0.0314%" height="15" fill="rgb(239,212,28)" fg:x="594" fg:w="3"/><text x="6.4732%" y="767.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::len (2 samples, 0.02%)</title><rect x="6.2336%" y="741" width="0.0210%" height="15" fill="rgb(220,20,13)" fg:x="595" fg:w="2"/><text x="6.4836%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="6.2441%" y="725" width="0.0105%" height="15" fill="rgb(210,164,35)" fg:x="596" fg:w="1"/><text x="6.4941%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="6.2441%" y="709" width="0.0105%" height="15" fill="rgb(248,109,41)" fg:x="596" fg:w="1"/><text x="6.4941%" y="719.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="6.2651%" y="741" width="0.0210%" height="15" fill="rgb(238,23,50)" fg:x="598" fg:w="2"/><text x="6.5151%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="6.2651%" y="725" width="0.0210%" height="15" fill="rgb(211,48,49)" fg:x="598" fg:w="2"/><text x="6.5151%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="6.2651%" y="709" width="0.0210%" height="15" fill="rgb(223,36,21)" fg:x="598" fg:w="2"/><text x="6.5151%" y="719.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="6.2860%" y="725" width="0.0105%" height="15" fill="rgb(207,123,46)" fg:x="600" fg:w="1"/><text x="6.5360%" y="735.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="6.2860%" y="709" width="0.0105%" height="15" fill="rgb(240,218,32)" fg:x="600" fg:w="1"/><text x="6.5360%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (6 samples, 0.06%)</title><rect x="6.2546%" y="757" width="0.0629%" height="15" fill="rgb(252,5,43)" fg:x="597" fg:w="6"/><text x="6.5046%" y="767.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (3 samples, 0.03%)</title><rect x="6.2860%" y="741" width="0.0314%" height="15" fill="rgb(252,84,19)" fg:x="600" fg:w="3"/><text x="6.5360%" y="751.50"></text></g><g><title>concurrent_queue::full_fence (2 samples, 0.02%)</title><rect x="6.2965%" y="725" width="0.0210%" height="15" fill="rgb(243,152,39)" fg:x="601" fg:w="2"/><text x="6.5465%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2 samples, 0.02%)</title><rect x="6.2965%" y="709" width="0.0210%" height="15" fill="rgb(234,160,15)" fg:x="601" fg:w="2"/><text x="6.5465%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="6.2965%" y="693" width="0.0210%" height="15" fill="rgb(237,34,20)" fg:x="601" fg:w="2"/><text x="6.5465%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="6.2965%" y="677" width="0.0210%" height="15" fill="rgb(229,97,13)" fg:x="601" fg:w="2"/><text x="6.5465%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.03%)</title><rect x="6.3174%" y="725" width="0.0314%" height="15" fill="rgb(234,71,50)" fg:x="603" fg:w="3"/><text x="6.5674%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="6.3174%" y="709" width="0.0314%" height="15" fill="rgb(253,155,4)" fg:x="603" fg:w="3"/><text x="6.5674%" y="719.50"></text></g><g><title>async_executor::steal (14 samples, 0.15%)</title><rect x="6.2127%" y="773" width="0.1467%" height="15" fill="rgb(222,185,37)" fg:x="593" fg:w="14"/><text x="6.4627%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (4 samples, 0.04%)</title><rect x="6.3174%" y="757" width="0.0419%" height="15" fill="rgb(251,177,13)" fg:x="603" fg:w="4"/><text x="6.5674%" y="767.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::push (4 samples, 0.04%)</title><rect x="6.3174%" y="741" width="0.0419%" height="15" fill="rgb(250,179,40)" fg:x="603" fg:w="4"/><text x="6.5674%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="6.3489%" y="725" width="0.0105%" height="15" fill="rgb(242,44,2)" fg:x="606" fg:w="1"/><text x="6.5989%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="6.3489%" y="709" width="0.0105%" height="15" fill="rgb(216,177,13)" fg:x="606" fg:w="1"/><text x="6.5989%" y="719.50"></text></g><g><title>concurrent_queue::full_fence (1 samples, 0.01%)</title><rect x="6.4851%" y="741" width="0.0105%" height="15" fill="rgb(216,106,43)" fg:x="619" fg:w="1"/><text x="6.7351%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="6.4851%" y="725" width="0.0105%" height="15" fill="rgb(216,183,2)" fg:x="619" fg:w="1"/><text x="6.7351%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="6.4851%" y="709" width="0.0105%" height="15" fill="rgb(249,75,3)" fg:x="619" fg:w="1"/><text x="6.7351%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="6.4851%" y="693" width="0.0105%" height="15" fill="rgb(219,67,39)" fg:x="619" fg:w="1"/><text x="6.7351%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="6.4955%" y="741" width="0.0105%" height="15" fill="rgb(253,228,2)" fg:x="620" fg:w="1"/><text x="6.7455%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="6.4955%" y="725" width="0.0105%" height="15" fill="rgb(235,138,27)" fg:x="620" fg:w="1"/><text x="6.7455%" y="735.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (12 samples, 0.13%)</title><rect x="6.4013%" y="757" width="0.1257%" height="15" fill="rgb(236,97,51)" fg:x="611" fg:w="12"/><text x="6.6513%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="6.5060%" y="741" width="0.0210%" height="15" fill="rgb(240,80,30)" fg:x="621" fg:w="2"/><text x="6.7560%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="6.5060%" y="725" width="0.0210%" height="15" fill="rgb(230,178,19)" fg:x="621" fg:w="2"/><text x="6.7560%" y="735.50"></text></g><g><title>concurrent_queue::full_fence (5 samples, 0.05%)</title><rect x="6.5270%" y="741" width="0.0524%" height="15" fill="rgb(210,190,27)" fg:x="623" fg:w="5"/><text x="6.7770%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (5 samples, 0.05%)</title><rect x="6.5270%" y="725" width="0.0524%" height="15" fill="rgb(222,107,31)" fg:x="623" fg:w="5"/><text x="6.7770%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (5 samples, 0.05%)</title><rect x="6.5270%" y="709" width="0.0524%" height="15" fill="rgb(216,127,34)" fg:x="623" fg:w="5"/><text x="6.7770%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (5 samples, 0.05%)</title><rect x="6.5270%" y="693" width="0.0524%" height="15" fill="rgb(234,116,52)" fg:x="623" fg:w="5"/><text x="6.7770%" y="703.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (3 samples, 0.03%)</title><rect x="6.5794%" y="741" width="0.0314%" height="15" fill="rgb(222,124,15)" fg:x="628" fg:w="3"/><text x="6.8294%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.03%)</title><rect x="6.5794%" y="725" width="0.0314%" height="15" fill="rgb(231,179,28)" fg:x="628" fg:w="3"/><text x="6.8294%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.03%)</title><rect x="6.5794%" y="709" width="0.0314%" height="15" fill="rgb(226,93,45)" fg:x="628" fg:w="3"/><text x="6.8294%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.03%)</title><rect x="6.6108%" y="741" width="0.0314%" height="15" fill="rgb(215,8,51)" fg:x="631" fg:w="3"/><text x="6.8608%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="6.6108%" y="725" width="0.0314%" height="15" fill="rgb(223,106,5)" fg:x="631" fg:w="3"/><text x="6.8608%" y="735.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (28 samples, 0.29%)</title><rect x="6.3594%" y="773" width="0.2933%" height="15" fill="rgb(250,191,5)" fg:x="607" fg:w="28"/><text x="6.6094%" y="783.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (12 samples, 0.13%)</title><rect x="6.5270%" y="757" width="0.1257%" height="15" fill="rgb(242,132,44)" fg:x="623" fg:w="12"/><text x="6.7770%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="6.6422%" y="741" width="0.0105%" height="15" fill="rgb(251,152,29)" fg:x="634" fg:w="1"/><text x="6.8922%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="6.6422%" y="725" width="0.0105%" height="15" fill="rgb(218,179,5)" fg:x="634" fg:w="1"/><text x="6.8922%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="6.6527%" y="709" width="0.0210%" height="15" fill="rgb(227,67,19)" fg:x="635" fg:w="2"/><text x="6.9027%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="6.6527%" y="693" width="0.0210%" height="15" fill="rgb(233,119,31)" fg:x="635" fg:w="2"/><text x="6.9027%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;alloc::vec::Vec&lt;alloc::sync::Arc&lt;concurrent_queue::ConcurrentQueue&lt;async_task::runnable::Runnable&gt;&gt;&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="6.6527%" y="773" width="0.0524%" height="15" fill="rgb(241,120,22)" fg:x="635" fg:w="5"/><text x="6.9027%" y="783.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="6.6527%" y="757" width="0.0524%" height="15" fill="rgb(224,102,30)" fg:x="635" fg:w="5"/><text x="6.9027%" y="767.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (5 samples, 0.05%)</title><rect x="6.6527%" y="741" width="0.0524%" height="15" fill="rgb(210,164,37)" fg:x="635" fg:w="5"/><text x="6.9027%" y="751.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (5 samples, 0.05%)</title><rect x="6.6527%" y="725" width="0.0524%" height="15" fill="rgb(226,191,16)" fg:x="635" fg:w="5"/><text x="6.9027%" y="735.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::raw_unlock (3 samples, 0.03%)</title><rect x="6.6737%" y="709" width="0.0314%" height="15" fill="rgb(214,40,45)" fg:x="637" fg:w="3"/><text x="6.9237%" y="719.50"></text></g><g><title>__GI___pthread_rwlock_unlock (3 samples, 0.03%)</title><rect x="6.6737%" y="693" width="0.0314%" height="15" fill="rgb(244,29,26)" fg:x="637" fg:w="3"/><text x="6.9237%" y="703.50"></text></g><g><title>__tls_get_addr (1 samples, 0.01%)</title><rect x="6.7051%" y="709" width="0.0105%" height="15" fill="rgb(216,16,5)" fg:x="640" fg:w="1"/><text x="6.9551%" y="719.50"></text></g><g><title>__tls_get_addr (11 samples, 0.12%)</title><rect x="6.7156%" y="661" width="0.1152%" height="15" fill="rgb(249,76,35)" fg:x="641" fg:w="11"/><text x="6.9656%" y="671.50"></text></g><g><title>update_get_addr (5 samples, 0.05%)</title><rect x="6.7784%" y="645" width="0.0524%" height="15" fill="rgb(207,11,44)" fg:x="647" fg:w="5"/><text x="7.0284%" y="655.50"></text></g><g><title>_dl_update_slotinfo (5 samples, 0.05%)</title><rect x="6.7784%" y="629" width="0.0524%" height="15" fill="rgb(228,190,49)" fg:x="647" fg:w="5"/><text x="7.0284%" y="639.50"></text></g><g><title>fastrand::usize (13 samples, 0.14%)</title><rect x="6.7051%" y="773" width="0.1362%" height="15" fill="rgb(214,173,12)" fg:x="640" fg:w="13"/><text x="6.9551%" y="783.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (13 samples, 0.14%)</title><rect x="6.7051%" y="757" width="0.1362%" height="15" fill="rgb(218,26,35)" fg:x="640" fg:w="13"/><text x="6.9551%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (13 samples, 0.14%)</title><rect x="6.7051%" y="741" width="0.1362%" height="15" fill="rgb(220,200,19)" fg:x="640" fg:w="13"/><text x="6.9551%" y="751.50"></text></g><g><title>fastrand::RNG::__getit (13 samples, 0.14%)</title><rect x="6.7051%" y="725" width="0.1362%" height="15" fill="rgb(239,95,49)" fg:x="640" fg:w="13"/><text x="6.9551%" y="735.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.13%)</title><rect x="6.7156%" y="709" width="0.1257%" height="15" fill="rgb(235,85,53)" fg:x="641" fg:w="12"/><text x="6.9656%" y="719.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (12 samples, 0.13%)</title><rect x="6.7156%" y="693" width="0.1257%" height="15" fill="rgb(233,133,31)" fg:x="641" fg:w="12"/><text x="6.9656%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (12 samples, 0.13%)</title><rect x="6.7156%" y="677" width="0.1257%" height="15" fill="rgb(218,25,20)" fg:x="641" fg:w="12"/><text x="6.9656%" y="687.50"></text></g><g><title>__tls_get_addr@plt (1 samples, 0.01%)</title><rect x="6.8308%" y="661" width="0.0105%" height="15" fill="rgb(252,210,38)" fg:x="652" fg:w="1"/><text x="7.0808%" y="671.50"></text></g><g><title>std::sync::rwlock::RwLockReadGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="6.8413%" y="757" width="0.0105%" height="15" fill="rgb(242,134,21)" fg:x="653" fg:w="1"/><text x="7.0913%" y="767.50"></text></g><g><title>std::sync::poison::Flag::borrow (1 samples, 0.01%)</title><rect x="6.8413%" y="741" width="0.0105%" height="15" fill="rgb(213,28,48)" fg:x="653" fg:w="1"/><text x="7.0913%" y="751.50"></text></g><g><title>std::sync::poison::Flag::get (1 samples, 0.01%)</title><rect x="6.8413%" y="725" width="0.0105%" height="15" fill="rgb(250,196,2)" fg:x="653" fg:w="1"/><text x="7.0913%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="6.8413%" y="709" width="0.0105%" height="15" fill="rgb(227,5,17)" fg:x="653" fg:w="1"/><text x="7.0913%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="6.8413%" y="693" width="0.0105%" height="15" fill="rgb(221,226,24)" fg:x="653" fg:w="1"/><text x="7.0913%" y="703.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (75 samples, 0.79%)</title><rect x="6.1079%" y="789" width="0.7858%" height="15" fill="rgb(211,5,48)" fg:x="583" fg:w="75"/><text x="6.3579%" y="799.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (5 samples, 0.05%)</title><rect x="6.8413%" y="773" width="0.0524%" height="15" fill="rgb(219,150,6)" fg:x="653" fg:w="5"/><text x="7.0913%" y="783.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (4 samples, 0.04%)</title><rect x="6.8518%" y="757" width="0.0419%" height="15" fill="rgb(251,46,16)" fg:x="654" fg:w="4"/><text x="7.1018%" y="767.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (4 samples, 0.04%)</title><rect x="6.8518%" y="741" width="0.0419%" height="15" fill="rgb(220,204,40)" fg:x="654" fg:w="4"/><text x="7.1018%" y="751.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (4 samples, 0.04%)</title><rect x="6.8518%" y="725" width="0.0419%" height="15" fill="rgb(211,85,2)" fg:x="654" fg:w="4"/><text x="7.1018%" y="735.50"></text></g><g><title>async_executor::Sleepers::notify (1 samples, 0.01%)</title><rect x="6.8937%" y="773" width="0.0105%" height="15" fill="rgb(229,17,7)" fg:x="658" fg:w="1"/><text x="7.1437%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.01%)</title><rect x="6.9041%" y="773" width="0.0105%" height="15" fill="rgb(239,72,28)" fg:x="659" fg:w="1"/><text x="7.1541%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="6.9041%" y="757" width="0.0105%" height="15" fill="rgb(230,47,54)" fg:x="659" fg:w="1"/><text x="7.1541%" y="767.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.01%)</title><rect x="6.9041%" y="741" width="0.0105%" height="15" fill="rgb(214,50,8)" fg:x="659" fg:w="1"/><text x="7.1541%" y="751.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="6.9041%" y="725" width="0.0105%" height="15" fill="rgb(216,198,43)" fg:x="659" fg:w="1"/><text x="7.1541%" y="735.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="6.9041%" y="709" width="0.0105%" height="15" fill="rgb(234,20,35)" fg:x="659" fg:w="1"/><text x="7.1541%" y="719.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="6.9041%" y="693" width="0.0105%" height="15" fill="rgb(254,45,19)" fg:x="659" fg:w="1"/><text x="7.1541%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="6.9041%" y="677" width="0.0105%" height="15" fill="rgb(219,14,44)" fg:x="659" fg:w="1"/><text x="7.1541%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="6.9041%" y="661" width="0.0105%" height="15" fill="rgb(217,220,26)" fg:x="659" fg:w="1"/><text x="7.1541%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_and_swap (1 samples, 0.01%)</title><rect x="6.9146%" y="773" width="0.0105%" height="15" fill="rgb(213,158,28)" fg:x="660" fg:w="1"/><text x="7.1646%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.01%)</title><rect x="6.9146%" y="757" width="0.0105%" height="15" fill="rgb(252,51,52)" fg:x="660" fg:w="1"/><text x="7.1646%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="6.9146%" y="741" width="0.0105%" height="15" fill="rgb(246,89,16)" fg:x="660" fg:w="1"/><text x="7.1646%" y="751.50"></text></g><g><title>__pthread_cond_signal (3 samples, 0.03%)</title><rect x="6.9251%" y="693" width="0.0314%" height="15" fill="rgb(216,158,49)" fg:x="661" fg:w="3"/><text x="7.1751%" y="703.50"></text></g><g><title>core::task::wake::Waker::wake (4 samples, 0.04%)</title><rect x="6.9251%" y="773" width="0.0419%" height="15" fill="rgb(236,107,19)" fg:x="661" fg:w="4"/><text x="7.1751%" y="783.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (4 samples, 0.04%)</title><rect x="6.9251%" y="757" width="0.0419%" height="15" fill="rgb(228,185,30)" fg:x="661" fg:w="4"/><text x="7.1751%" y="767.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (4 samples, 0.04%)</title><rect x="6.9251%" y="741" width="0.0419%" height="15" fill="rgb(246,134,8)" fg:x="661" fg:w="4"/><text x="7.1751%" y="751.50"></text></g><g><title>parking::Unparker::unpark (4 samples, 0.04%)</title><rect x="6.9251%" y="725" width="0.0419%" height="15" fill="rgb(214,143,50)" fg:x="661" fg:w="4"/><text x="7.1751%" y="735.50"></text></g><g><title>parking::Inner::unpark (4 samples, 0.04%)</title><rect x="6.9251%" y="709" width="0.0419%" height="15" fill="rgb(228,75,8)" fg:x="661" fg:w="4"/><text x="7.1751%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (1 samples, 0.01%)</title><rect x="6.9565%" y="693" width="0.0105%" height="15" fill="rgb(207,175,4)" fg:x="664" fg:w="1"/><text x="7.2065%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.01%)</title><rect x="6.9565%" y="677" width="0.0105%" height="15" fill="rgb(205,108,24)" fg:x="664" fg:w="1"/><text x="7.2065%" y="687.50"></text></g><g><title>async_executor::State::notify (8 samples, 0.08%)</title><rect x="6.8937%" y="789" width="0.0838%" height="15" fill="rgb(244,120,49)" fg:x="658" fg:w="8"/><text x="7.1437%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="6.9670%" y="773" width="0.0105%" height="15" fill="rgb(223,47,38)" fg:x="665" fg:w="1"/><text x="7.2170%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="6.9670%" y="757" width="0.0105%" height="15" fill="rgb(229,179,11)" fg:x="665" fg:w="1"/><text x="7.2170%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="6.9670%" y="741" width="0.0105%" height="15" fill="rgb(231,122,1)" fg:x="665" fg:w="1"/><text x="7.2170%" y="751.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="6.9670%" y="725" width="0.0105%" height="15" fill="rgb(245,119,9)" fg:x="665" fg:w="1"/><text x="7.2170%" y="735.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="6.9775%" y="757" width="0.0105%" height="15" fill="rgb(241,163,25)" fg:x="666" fg:w="1"/><text x="7.2275%" y="767.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (1 samples, 0.01%)</title><rect x="6.9775%" y="741" width="0.0105%" height="15" fill="rgb(217,214,3)" fg:x="666" fg:w="1"/><text x="7.2275%" y="751.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="6.9775%" y="725" width="0.0105%" height="15" fill="rgb(240,86,28)" fg:x="666" fg:w="1"/><text x="7.2275%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="6.9775%" y="709" width="0.0105%" height="15" fill="rgb(215,47,9)" fg:x="666" fg:w="1"/><text x="7.2275%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="6.9775%" y="693" width="0.0105%" height="15" fill="rgb(252,25,45)" fg:x="666" fg:w="1"/><text x="7.2275%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="6.9775%" y="677" width="0.0105%" height="15" fill="rgb(251,164,9)" fg:x="666" fg:w="1"/><text x="7.2275%" y="687.50"></text></g><g><title>async_executor::Sleepers::insert (2 samples, 0.02%)</title><rect x="6.9775%" y="773" width="0.0210%" height="15" fill="rgb(233,194,0)" fg:x="666" fg:w="2"/><text x="7.2275%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="6.9880%" y="757" width="0.0105%" height="15" fill="rgb(249,111,24)" fg:x="667" fg:w="1"/><text x="7.2380%" y="767.50"></text></g><g><title>async_executor::Sleepers::update (1 samples, 0.01%)</title><rect x="6.9984%" y="773" width="0.0105%" height="15" fill="rgb(250,223,3)" fg:x="668" fg:w="1"/><text x="7.2484%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (2 samples, 0.02%)</title><rect x="7.0089%" y="773" width="0.0210%" height="15" fill="rgb(236,178,37)" fg:x="669" fg:w="2"/><text x="7.2589%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="7.0089%" y="757" width="0.0210%" height="15" fill="rgb(241,158,50)" fg:x="669" fg:w="2"/><text x="7.2589%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (2 samples, 0.02%)</title><rect x="7.0089%" y="741" width="0.0210%" height="15" fill="rgb(213,121,41)" fg:x="669" fg:w="2"/><text x="7.2589%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (2 samples, 0.02%)</title><rect x="7.0089%" y="725" width="0.0210%" height="15" fill="rgb(240,92,3)" fg:x="669" fg:w="2"/><text x="7.2589%" y="735.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="7.0089%" y="709" width="0.0210%" height="15" fill="rgb(205,123,3)" fg:x="669" fg:w="2"/><text x="7.2589%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (1 samples, 0.01%)</title><rect x="7.0299%" y="773" width="0.0105%" height="15" fill="rgb(205,97,47)" fg:x="671" fg:w="1"/><text x="7.2799%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.01%)</title><rect x="7.0299%" y="757" width="0.0105%" height="15" fill="rgb(247,152,14)" fg:x="671" fg:w="1"/><text x="7.2799%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (1 samples, 0.01%)</title><rect x="7.0403%" y="773" width="0.0105%" height="15" fill="rgb(248,195,53)" fg:x="672" fg:w="1"/><text x="7.2903%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.01%)</title><rect x="7.0403%" y="757" width="0.0105%" height="15" fill="rgb(226,201,16)" fg:x="672" fg:w="1"/><text x="7.2903%" y="767.50"></text></g><g><title>async_executor::Ticker::sleep (16 samples, 0.17%)</title><rect x="6.9775%" y="789" width="0.1676%" height="15" fill="rgb(205,98,0)" fg:x="666" fg:w="16"/><text x="7.2275%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (9 samples, 0.09%)</title><rect x="7.0508%" y="773" width="0.0943%" height="15" fill="rgb(214,191,48)" fg:x="673" fg:w="9"/><text x="7.3008%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (9 samples, 0.09%)</title><rect x="7.0508%" y="757" width="0.0943%" height="15" fill="rgb(237,112,39)" fg:x="673" fg:w="9"/><text x="7.3008%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (9 samples, 0.09%)</title><rect x="7.0508%" y="741" width="0.0943%" height="15" fill="rgb(247,203,27)" fg:x="673" fg:w="9"/><text x="7.3008%" y="751.50"></text></g><g><title>__GI___pthread_mutex_lock (9 samples, 0.09%)</title><rect x="7.0508%" y="725" width="0.0943%" height="15" fill="rgb(235,124,28)" fg:x="673" fg:w="9"/><text x="7.3008%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;async_executor::Sleepers&gt;&gt; (1 samples, 0.01%)</title><rect x="7.1451%" y="773" width="0.0105%" height="15" fill="rgb(208,207,46)" fg:x="682" fg:w="1"/><text x="7.3951%" y="783.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="7.1451%" y="757" width="0.0105%" height="15" fill="rgb(234,176,4)" fg:x="682" fg:w="1"/><text x="7.3951%" y="767.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="7.1451%" y="741" width="0.0105%" height="15" fill="rgb(230,133,28)" fg:x="682" fg:w="1"/><text x="7.3951%" y="751.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="7.1451%" y="725" width="0.0105%" height="15" fill="rgb(211,137,40)" fg:x="682" fg:w="1"/><text x="7.3951%" y="735.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="7.1451%" y="709" width="0.0105%" height="15" fill="rgb(254,35,13)" fg:x="682" fg:w="1"/><text x="7.3951%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::swap (2 samples, 0.02%)</title><rect x="7.1556%" y="773" width="0.0210%" height="15" fill="rgb(225,49,51)" fg:x="683" fg:w="2"/><text x="7.4056%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.02%)</title><rect x="7.1556%" y="757" width="0.0210%" height="15" fill="rgb(251,10,15)" fg:x="683" fg:w="2"/><text x="7.4056%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (106 samples, 1.11%)</title><rect x="6.0765%" y="853" width="1.1105%" height="15" fill="rgb(228,207,15)" fg:x="580" fg:w="106"/><text x="6.3265%" y="863.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (106 samples, 1.11%)</title><rect x="6.0765%" y="837" width="1.1105%" height="15" fill="rgb(241,99,19)" fg:x="580" fg:w="106"/><text x="6.3265%" y="847.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (103 samples, 1.08%)</title><rect x="6.1079%" y="821" width="1.0791%" height="15" fill="rgb(207,104,49)" fg:x="583" fg:w="103"/><text x="6.3579%" y="831.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (103 samples, 1.08%)</title><rect x="6.1079%" y="805" width="1.0791%" height="15" fill="rgb(234,99,18)" fg:x="583" fg:w="103"/><text x="6.3579%" y="815.50"></text></g><g><title>async_executor::Ticker::wake (4 samples, 0.04%)</title><rect x="7.1451%" y="789" width="0.0419%" height="15" fill="rgb(213,191,49)" fg:x="682" fg:w="4"/><text x="7.3951%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="7.1765%" y="773" width="0.0105%" height="15" fill="rgb(210,226,19)" fg:x="685" fg:w="1"/><text x="7.4265%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="7.1765%" y="757" width="0.0105%" height="15" fill="rgb(229,97,18)" fg:x="685" fg:w="1"/><text x="7.4265%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (108 samples, 1.13%)</title><rect x="6.0660%" y="885" width="1.1315%" height="15" fill="rgb(211,167,15)" fg:x="579" fg:w="108"/><text x="6.3160%" y="895.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (108 samples, 1.13%)</title><rect x="6.0660%" y="869" width="1.1315%" height="15" fill="rgb(210,169,34)" fg:x="579" fg:w="108"/><text x="6.3160%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="7.1870%" y="853" width="0.0105%" height="15" fill="rgb(241,121,31)" fg:x="686" fg:w="1"/><text x="7.4370%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="7.1870%" y="837" width="0.0105%" height="15" fill="rgb(232,40,11)" fg:x="686" fg:w="1"/><text x="7.4370%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="7.2184%" y="789" width="0.0105%" height="15" fill="rgb(205,86,26)" fg:x="689" fg:w="1"/><text x="7.4684%" y="799.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="7.2394%" y="757" width="0.0105%" height="15" fill="rgb(231,126,28)" fg:x="691" fg:w="1"/><text x="7.4894%" y="767.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="7.2394%" y="741" width="0.0105%" height="15" fill="rgb(219,221,18)" fg:x="691" fg:w="1"/><text x="7.4894%" y="751.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="7.2394%" y="725" width="0.0105%" height="15" fill="rgb(211,40,0)" fg:x="691" fg:w="1"/><text x="7.4894%" y="735.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="7.2394%" y="709" width="0.0105%" height="15" fill="rgb(239,85,43)" fg:x="691" fg:w="1"/><text x="7.4894%" y="719.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="7.2394%" y="773" width="0.0210%" height="15" fill="rgb(231,55,21)" fg:x="691" fg:w="2"/><text x="7.4894%" y="783.50"></text></g><g><title>event_listener::List::remove (1 samples, 0.01%)</title><rect x="7.2499%" y="757" width="0.0105%" height="15" fill="rgb(225,184,43)" fg:x="692" fg:w="1"/><text x="7.4999%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="7.2603%" y="757" width="0.0210%" height="15" fill="rgb(251,158,41)" fg:x="693" fg:w="2"/><text x="7.5103%" y="767.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="7.2603%" y="741" width="0.0210%" height="15" fill="rgb(234,159,37)" fg:x="693" fg:w="2"/><text x="7.5103%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="7.2708%" y="725" width="0.0105%" height="15" fill="rgb(216,204,22)" fg:x="694" fg:w="1"/><text x="7.5208%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="7.2708%" y="709" width="0.0105%" height="15" fill="rgb(214,17,3)" fg:x="694" fg:w="1"/><text x="7.5208%" y="719.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (3 samples, 0.03%)</title><rect x="7.2603%" y="773" width="0.0314%" height="15" fill="rgb(212,111,17)" fg:x="693" fg:w="3"/><text x="7.5103%" y="783.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="7.2813%" y="757" width="0.0105%" height="15" fill="rgb(221,157,24)" fg:x="695" fg:w="1"/><text x="7.5313%" y="767.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="7.2813%" y="741" width="0.0105%" height="15" fill="rgb(252,16,13)" fg:x="695" fg:w="1"/><text x="7.5313%" y="751.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.01%)</title><rect x="7.2918%" y="773" width="0.0105%" height="15" fill="rgb(221,62,2)" fg:x="696" fg:w="1"/><text x="7.5418%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="7.2918%" y="757" width="0.0105%" height="15" fill="rgb(247,87,22)" fg:x="696" fg:w="1"/><text x="7.5418%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="7.2918%" y="741" width="0.0105%" height="15" fill="rgb(215,73,9)" fg:x="696" fg:w="1"/><text x="7.5418%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="7.2918%" y="725" width="0.0105%" height="15" fill="rgb(207,175,33)" fg:x="696" fg:w="1"/><text x="7.5418%" y="735.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::recv::{{closure}} (8 samples, 0.08%)</title><rect x="7.2289%" y="789" width="0.0838%" height="15" fill="rgb(243,129,54)" fg:x="690" fg:w="8"/><text x="7.4789%" y="799.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="7.3023%" y="773" width="0.0105%" height="15" fill="rgb(227,119,45)" fg:x="697" fg:w="1"/><text x="7.5523%" y="783.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="7.3023%" y="757" width="0.0105%" height="15" fill="rgb(205,109,36)" fg:x="697" fg:w="1"/><text x="7.5523%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="7.3127%" y="757" width="0.0105%" height="15" fill="rgb(205,6,39)" fg:x="698" fg:w="1"/><text x="7.5627%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="7.3337%" y="725" width="0.0105%" height="15" fill="rgb(221,32,16)" fg:x="700" fg:w="1"/><text x="7.5837%" y="735.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="7.3337%" y="709" width="0.0105%" height="15" fill="rgb(228,144,50)" fg:x="700" fg:w="1"/><text x="7.5837%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="7.3337%" y="693" width="0.0105%" height="15" fill="rgb(229,201,53)" fg:x="700" fg:w="1"/><text x="7.5837%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="7.3337%" y="677" width="0.0105%" height="15" fill="rgb(249,153,27)" fg:x="700" fg:w="1"/><text x="7.5837%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="7.3337%" y="661" width="0.0105%" height="15" fill="rgb(227,106,25)" fg:x="700" fg:w="1"/><text x="7.5837%" y="671.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="7.3442%" y="661" width="0.0105%" height="15" fill="rgb(230,65,29)" fg:x="701" fg:w="1"/><text x="7.5942%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_and_swap (1 samples, 0.01%)</title><rect x="7.3442%" y="645" width="0.0105%" height="15" fill="rgb(221,57,46)" fg:x="701" fg:w="1"/><text x="7.5942%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.01%)</title><rect x="7.3442%" y="629" width="0.0105%" height="15" fill="rgb(229,161,17)" fg:x="701" fg:w="1"/><text x="7.5942%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="7.3442%" y="613" width="0.0105%" height="15" fill="rgb(222,213,11)" fg:x="701" fg:w="1"/><text x="7.5942%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (5 samples, 0.05%)</title><rect x="7.3127%" y="773" width="0.0524%" height="15" fill="rgb(235,35,13)" fg:x="698" fg:w="5"/><text x="7.5627%" y="783.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::send::{{closure}} (4 samples, 0.04%)</title><rect x="7.3232%" y="757" width="0.0419%" height="15" fill="rgb(233,158,34)" fg:x="699" fg:w="4"/><text x="7.5732%" y="767.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (4 samples, 0.04%)</title><rect x="7.3232%" y="741" width="0.0419%" height="15" fill="rgb(215,151,48)" fg:x="699" fg:w="4"/><text x="7.5732%" y="751.50"></text></g><g><title>event_listener::Event::notify (2 samples, 0.02%)</title><rect x="7.3442%" y="725" width="0.0210%" height="15" fill="rgb(229,84,14)" fg:x="701" fg:w="2"/><text x="7.5942%" y="735.50"></text></g><g><title>event_listener::List::notify (2 samples, 0.02%)</title><rect x="7.3442%" y="709" width="0.0210%" height="15" fill="rgb(229,68,14)" fg:x="701" fg:w="2"/><text x="7.5942%" y="719.50"></text></g><g><title>core::task::wake::Waker::wake (2 samples, 0.02%)</title><rect x="7.3442%" y="693" width="0.0210%" height="15" fill="rgb(243,106,26)" fg:x="701" fg:w="2"/><text x="7.5942%" y="703.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (2 samples, 0.02%)</title><rect x="7.3442%" y="677" width="0.0210%" height="15" fill="rgb(206,45,38)" fg:x="701" fg:w="2"/><text x="7.5942%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="7.3546%" y="661" width="0.0105%" height="15" fill="rgb(226,6,15)" fg:x="702" fg:w="1"/><text x="7.6046%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="7.3546%" y="645" width="0.0105%" height="15" fill="rgb(232,22,54)" fg:x="702" fg:w="1"/><text x="7.6046%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="7.3546%" y="629" width="0.0105%" height="15" fill="rgb(229,222,32)" fg:x="702" fg:w="1"/><text x="7.6046%" y="639.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (1 samples, 0.01%)</title><rect x="7.3651%" y="757" width="0.0105%" height="15" fill="rgb(228,62,29)" fg:x="703" fg:w="1"/><text x="7.6151%" y="767.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (1 samples, 0.01%)</title><rect x="7.3651%" y="741" width="0.0105%" height="15" fill="rgb(251,103,34)" fg:x="703" fg:w="1"/><text x="7.6151%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="7.3651%" y="725" width="0.0105%" height="15" fill="rgb(233,12,30)" fg:x="703" fg:w="1"/><text x="7.6151%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="7.3651%" y="709" width="0.0105%" height="15" fill="rgb(238,52,0)" fg:x="703" fg:w="1"/><text x="7.6151%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="7.3756%" y="741" width="0.0105%" height="15" fill="rgb(223,98,5)" fg:x="704" fg:w="1"/><text x="7.6256%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="7.3756%" y="725" width="0.0105%" height="15" fill="rgb(228,75,37)" fg:x="704" fg:w="1"/><text x="7.6256%" y="735.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (3 samples, 0.03%)</title><rect x="7.3651%" y="773" width="0.0314%" height="15" fill="rgb(205,115,49)" fg:x="703" fg:w="3"/><text x="7.6151%" y="783.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (2 samples, 0.02%)</title><rect x="7.3756%" y="757" width="0.0210%" height="15" fill="rgb(250,154,43)" fg:x="704" fg:w="2"/><text x="7.6256%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="7.3861%" y="741" width="0.0105%" height="15" fill="rgb(226,43,29)" fg:x="705" fg:w="1"/><text x="7.6361%" y="751.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="7.3861%" y="725" width="0.0105%" height="15" fill="rgb(249,228,39)" fg:x="705" fg:w="1"/><text x="7.6361%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (18 samples, 0.19%)</title><rect x="7.2184%" y="805" width="0.1886%" height="15" fill="rgb(216,79,43)" fg:x="689" fg:w="18"/><text x="7.4684%" y="815.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (9 samples, 0.09%)</title><rect x="7.3127%" y="789" width="0.0943%" height="15" fill="rgb(228,95,12)" fg:x="698" fg:w="9"/><text x="7.5627%" y="799.50"></text></g><g><title>fixedbitset::FixedBitSet::set (1 samples, 0.01%)</title><rect x="7.3965%" y="773" width="0.0105%" height="15" fill="rgb(249,221,15)" fg:x="706" fg:w="1"/><text x="7.6465%" y="783.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="7.4070%" y="757" width="0.0105%" height="15" fill="rgb(233,34,13)" fg:x="707" fg:w="1"/><text x="7.6570%" y="767.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="7.4070%" y="741" width="0.0105%" height="15" fill="rgb(214,103,39)" fg:x="707" fg:w="1"/><text x="7.6570%" y="751.50"></text></g><g><title>concurrent_queue::full_fence (2 samples, 0.02%)</title><rect x="7.4175%" y="757" width="0.0210%" height="15" fill="rgb(251,126,39)" fg:x="708" fg:w="2"/><text x="7.6675%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2 samples, 0.02%)</title><rect x="7.4175%" y="741" width="0.0210%" height="15" fill="rgb(214,216,36)" fg:x="708" fg:w="2"/><text x="7.6675%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="7.4175%" y="725" width="0.0210%" height="15" fill="rgb(220,221,8)" fg:x="708" fg:w="2"/><text x="7.6675%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="7.4175%" y="709" width="0.0210%" height="15" fill="rgb(240,216,3)" fg:x="708" fg:w="2"/><text x="7.6675%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4 samples, 0.04%)</title><rect x="7.4070%" y="789" width="0.0419%" height="15" fill="rgb(232,218,17)" fg:x="707" fg:w="4"/><text x="7.6570%" y="799.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (4 samples, 0.04%)</title><rect x="7.4070%" y="773" width="0.0419%" height="15" fill="rgb(229,163,45)" fg:x="707" fg:w="4"/><text x="7.6570%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="7.4384%" y="757" width="0.0105%" height="15" fill="rgb(231,110,42)" fg:x="710" fg:w="1"/><text x="7.6884%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="7.4384%" y="741" width="0.0105%" height="15" fill="rgb(208,170,48)" fg:x="710" fg:w="1"/><text x="7.6884%" y="751.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (5 samples, 0.05%)</title><rect x="7.4070%" y="805" width="0.0524%" height="15" fill="rgb(239,116,25)" fg:x="707" fg:w="5"/><text x="7.6570%" y="815.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="7.4489%" y="789" width="0.0105%" height="15" fill="rgb(219,200,50)" fg:x="711" fg:w="1"/><text x="7.6989%" y="799.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="7.4489%" y="773" width="0.0105%" height="15" fill="rgb(245,200,0)" fg:x="711" fg:w="1"/><text x="7.6989%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="7.4489%" y="757" width="0.0105%" height="15" fill="rgb(245,119,33)" fg:x="711" fg:w="1"/><text x="7.6989%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="7.4489%" y="741" width="0.0105%" height="15" fill="rgb(231,125,12)" fg:x="711" fg:w="1"/><text x="7.6989%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="7.4489%" y="725" width="0.0105%" height="15" fill="rgb(216,96,41)" fg:x="711" fg:w="1"/><text x="7.6989%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="7.4594%" y="789" width="0.0105%" height="15" fill="rgb(248,43,45)" fg:x="712" fg:w="1"/><text x="7.7094%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="7.4594%" y="773" width="0.0105%" height="15" fill="rgb(217,222,7)" fg:x="712" fg:w="1"/><text x="7.7094%" y="783.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (3 samples, 0.03%)</title><rect x="7.4699%" y="789" width="0.0314%" height="15" fill="rgb(233,28,6)" fg:x="713" fg:w="3"/><text x="7.7199%" y="799.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (3 samples, 0.03%)</title><rect x="7.4699%" y="773" width="0.0314%" height="15" fill="rgb(231,218,15)" fg:x="713" fg:w="3"/><text x="7.7199%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="7.4804%" y="757" width="0.0210%" height="15" fill="rgb(226,171,48)" fg:x="714" fg:w="2"/><text x="7.7304%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (2 samples, 0.02%)</title><rect x="7.4804%" y="741" width="0.0210%" height="15" fill="rgb(235,201,9)" fg:x="714" fg:w="2"/><text x="7.7304%" y="751.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (5 samples, 0.05%)</title><rect x="7.4594%" y="805" width="0.0524%" height="15" fill="rgb(217,80,15)" fg:x="712" fg:w="5"/><text x="7.7094%" y="815.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (1 samples, 0.01%)</title><rect x="7.5013%" y="789" width="0.0105%" height="15" fill="rgb(219,152,8)" fg:x="716" fg:w="1"/><text x="7.7513%" y="799.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (30 samples, 0.31%)</title><rect x="7.2184%" y="821" width="0.3143%" height="15" fill="rgb(243,107,38)" fg:x="689" fg:w="30"/><text x="7.4684%" y="831.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones (2 samples, 0.02%)</title><rect x="7.5118%" y="805" width="0.0210%" height="15" fill="rgb(231,17,5)" fg:x="717" fg:w="2"/><text x="7.7618%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="7.5223%" y="789" width="0.0105%" height="15" fill="rgb(209,25,54)" fg:x="718" fg:w="1"/><text x="7.7723%" y="799.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="7.5223%" y="773" width="0.0105%" height="15" fill="rgb(219,0,2)" fg:x="718" fg:w="1"/><text x="7.7723%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="7.5223%" y="757" width="0.0105%" height="15" fill="rgb(246,9,5)" fg:x="718" fg:w="1"/><text x="7.7723%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="7.5223%" y="741" width="0.0105%" height="15" fill="rgb(226,159,4)" fg:x="718" fg:w="1"/><text x="7.7723%" y="751.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="7.5223%" y="725" width="0.0105%" height="15" fill="rgb(219,175,34)" fg:x="718" fg:w="1"/><text x="7.7723%" y="735.50"></text></g><g><title>fixedbitset::FixedBitSet::count_ones::{{closure}} (1 samples, 0.01%)</title><rect x="7.5223%" y="709" width="0.0105%" height="15" fill="rgb(236,10,46)" fg:x="718" fg:w="1"/><text x="7.7723%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="7.5327%" y="821" width="0.0105%" height="15" fill="rgb(240,211,16)" fg:x="719" fg:w="1"/><text x="7.7827%" y="831.50"></text></g><g><title>&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="7.5746%" y="773" width="0.0210%" height="15" fill="rgb(205,3,43)" fg:x="723" fg:w="2"/><text x="7.8246%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="7.5746%" y="757" width="0.0210%" height="15" fill="rgb(245,7,22)" fg:x="723" fg:w="2"/><text x="7.8246%" y="767.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (2 samples, 0.02%)</title><rect x="7.5746%" y="741" width="0.0210%" height="15" fill="rgb(239,132,32)" fg:x="723" fg:w="2"/><text x="7.8246%" y="751.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (2 samples, 0.02%)</title><rect x="7.5746%" y="725" width="0.0210%" height="15" fill="rgb(228,202,34)" fg:x="723" fg:w="2"/><text x="7.8246%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (2 samples, 0.02%)</title><rect x="7.5746%" y="709" width="0.0210%" height="15" fill="rgb(254,200,22)" fg:x="723" fg:w="2"/><text x="7.8246%" y="719.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (2 samples, 0.02%)</title><rect x="7.5746%" y="693" width="0.0210%" height="15" fill="rgb(219,10,39)" fg:x="723" fg:w="2"/><text x="7.8246%" y="703.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (2 samples, 0.02%)</title><rect x="7.5746%" y="677" width="0.0210%" height="15" fill="rgb(226,210,39)" fg:x="723" fg:w="2"/><text x="7.8246%" y="687.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update_system (2 samples, 0.02%)</title><rect x="7.6166%" y="741" width="0.0210%" height="15" fill="rgb(208,219,16)" fg:x="727" fg:w="2"/><text x="7.8666%" y="751.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::update (2 samples, 0.02%)</title><rect x="7.6166%" y="725" width="0.0210%" height="15" fill="rgb(216,158,51)" fg:x="727" fg:w="2"/><text x="7.8666%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="7.6270%" y="709" width="0.0105%" height="15" fill="rgb(233,14,44)" fg:x="728" fg:w="1"/><text x="7.8770%" y="719.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="7.6270%" y="693" width="0.0105%" height="15" fill="rgb(237,97,39)" fg:x="728" fg:w="1"/><text x="7.8770%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_sprite::texture_atlas::TextureAtlas&gt;&gt;]&gt; (1 samples, 0.01%)</title><rect x="7.6270%" y="677" width="0.0105%" height="15" fill="rgb(218,198,43)" fg:x="728" fg:w="1"/><text x="7.8770%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::texture::texture::Texture&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="7.6270%" y="661" width="0.0105%" height="15" fill="rgb(231,104,20)" fg:x="728" fg:w="1"/><text x="7.8770%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::texture::texture::Texture&gt;&gt; (1 samples, 0.01%)</title><rect x="7.6270%" y="645" width="0.0105%" height="15" fill="rgb(254,36,13)" fg:x="728" fg:w="1"/><text x="7.8770%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::handle::Handle&lt;bevy_render::texture::texture::Texture&gt;&gt; (1 samples, 0.01%)</title><rect x="7.6270%" y="629" width="0.0105%" height="15" fill="rgb(248,14,50)" fg:x="728" fg:w="1"/><text x="7.8770%" y="639.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="7.6270%" y="613" width="0.0105%" height="15" fill="rgb(217,107,29)" fg:x="728" fg:w="1"/><text x="7.8770%" y="623.50"></text></g><g><title>bevy_asset::io::file_asset_io::filesystem_watcher_system (1 samples, 0.01%)</title><rect x="7.6375%" y="741" width="0.0105%" height="15" fill="rgb(251,169,33)" fg:x="729" fg:w="1"/><text x="7.8875%" y="751.50"></text></g><g><title>&lt;dyn bevy_asset::io::AssetIo&gt;::downcast_ref (1 samples, 0.01%)</title><rect x="7.6375%" y="725" width="0.0105%" height="15" fill="rgb(217,108,32)" fg:x="729" fg:w="1"/><text x="7.8875%" y="735.50"></text></g><g><title>&lt;T as downcast_rs::Downcast&gt;::as_any (1 samples, 0.01%)</title><rect x="7.6375%" y="709" width="0.0105%" height="15" fill="rgb(219,66,42)" fg:x="729" fg:w="1"/><text x="7.8875%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; (2 samples, 0.02%)</title><rect x="7.8261%" y="645" width="0.0210%" height="15" fill="rgb(206,180,7)" fg:x="747" fg:w="2"/><text x="8.0761%" y="655.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="7.8261%" y="629" width="0.0210%" height="15" fill="rgb(208,226,31)" fg:x="747" fg:w="2"/><text x="8.0761%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (25 samples, 0.26%)</title><rect x="7.6585%" y="693" width="0.2619%" height="15" fill="rgb(218,26,49)" fg:x="731" fg:w="25"/><text x="7.9085%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::draw::RenderCommand]&gt; (25 samples, 0.26%)</title><rect x="7.6585%" y="677" width="0.2619%" height="15" fill="rgb(233,197,48)" fg:x="731" fg:w="25"/><text x="7.9085%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::draw::RenderCommand&gt; (25 samples, 0.26%)</title><rect x="7.6585%" y="661" width="0.2619%" height="15" fill="rgb(252,181,51)" fg:x="731" fg:w="25"/><text x="7.9085%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (7 samples, 0.07%)</title><rect x="7.8470%" y="645" width="0.0733%" height="15" fill="rgb(253,90,19)" fg:x="749" fg:w="7"/><text x="8.0970%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (7 samples, 0.07%)</title><rect x="7.8470%" y="629" width="0.0733%" height="15" fill="rgb(215,171,30)" fg:x="749" fg:w="7"/><text x="8.0970%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.07%)</title><rect x="7.8470%" y="613" width="0.0733%" height="15" fill="rgb(214,222,9)" fg:x="749" fg:w="7"/><text x="8.0970%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (7 samples, 0.07%)</title><rect x="7.8470%" y="597" width="0.0733%" height="15" fill="rgb(223,3,22)" fg:x="749" fg:w="7"/><text x="8.0970%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (7 samples, 0.07%)</title><rect x="7.8470%" y="581" width="0.0733%" height="15" fill="rgb(225,196,46)" fg:x="749" fg:w="7"/><text x="8.0970%" y="591.50"></text></g><g><title>bevy_render::draw::clear_draw_system (27 samples, 0.28%)</title><rect x="7.6480%" y="741" width="0.2829%" height="15" fill="rgb(209,110,37)" fg:x="730" fg:w="27"/><text x="7.8980%" y="751.50"></text></g><g><title>bevy_render::draw::Draw::clear_render_commands (26 samples, 0.27%)</title><rect x="7.6585%" y="725" width="0.2724%" height="15" fill="rgb(249,89,12)" fg:x="731" fg:w="26"/><text x="7.9085%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (26 samples, 0.27%)</title><rect x="7.6585%" y="709" width="0.2724%" height="15" fill="rgb(226,27,33)" fg:x="731" fg:w="26"/><text x="7.9085%" y="719.50"></text></g><g><title>bevy_render::draw::clear_draw_system (1 samples, 0.01%)</title><rect x="7.9204%" y="693" width="0.0105%" height="15" fill="rgb(213,82,22)" fg:x="756" fg:w="1"/><text x="8.1704%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (6 samples, 0.06%)</title><rect x="7.9413%" y="725" width="0.0629%" height="15" fill="rgb(248,140,0)" fg:x="758" fg:w="6"/><text x="8.1913%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;,hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;::clear::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="8.0042%" y="661" width="0.0105%" height="15" fill="rgb(228,106,3)" fg:x="764" fg:w="1"/><text x="8.2542%" y="671.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="8.0042%" y="645" width="0.0105%" height="15" fill="rgb(209,23,37)" fg:x="764" fg:w="1"/><text x="8.2542%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="8.0042%" y="629" width="0.0105%" height="15" fill="rgb(241,93,50)" fg:x="764" fg:w="1"/><text x="8.2542%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (1 samples, 0.01%)</title><rect x="8.0042%" y="613" width="0.0105%" height="15" fill="rgb(253,46,43)" fg:x="764" fg:w="1"/><text x="8.2542%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (1 samples, 0.01%)</title><rect x="8.0042%" y="597" width="0.0105%" height="15" fill="rgb(226,206,43)" fg:x="764" fg:w="1"/><text x="8.2542%" y="607.50"></text></g><g><title>hashbrown::raw::bucket_mask_to_capacity (1 samples, 0.01%)</title><rect x="8.0042%" y="581" width="0.0105%" height="15" fill="rgb(217,54,7)" fg:x="764" fg:w="1"/><text x="8.2542%" y="591.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (36 samples, 0.38%)</title><rect x="7.9309%" y="741" width="0.3772%" height="15" fill="rgb(223,5,52)" fg:x="757" fg:w="36"/><text x="8.1809%" y="751.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (29 samples, 0.30%)</title><rect x="8.0042%" y="725" width="0.3038%" height="15" fill="rgb(206,52,46)" fg:x="764" fg:w="29"/><text x="8.2542%" y="735.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (29 samples, 0.30%)</title><rect x="8.0042%" y="709" width="0.3038%" height="15" fill="rgb(253,136,11)" fg:x="764" fg:w="29"/><text x="8.2542%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (29 samples, 0.30%)</title><rect x="8.0042%" y="693" width="0.3038%" height="15" fill="rgb(208,106,33)" fg:x="764" fg:w="29"/><text x="8.2542%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (29 samples, 0.30%)</title><rect x="8.0042%" y="677" width="0.3038%" height="15" fill="rgb(206,54,4)" fg:x="764" fg:w="29"/><text x="8.2542%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (28 samples, 0.29%)</title><rect x="8.0147%" y="661" width="0.2933%" height="15" fill="rgb(213,3,15)" fg:x="765" fg:w="28"/><text x="8.2647%" y="671.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="8.3080%" y="741" width="0.0105%" height="15" fill="rgb(252,211,39)" fg:x="793" fg:w="1"/><text x="8.5580%" y="751.50"></text></g><g><title>engine::movement::animate_sprite_system (1 samples, 0.01%)</title><rect x="8.3185%" y="741" width="0.0105%" height="15" fill="rgb(223,6,36)" fg:x="794" fg:w="1"/><text x="8.5685%" y="751.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (73 samples, 0.76%)</title><rect x="7.5746%" y="789" width="0.7648%" height="15" fill="rgb(252,169,45)" fg:x="723" fg:w="73"/><text x="7.8246%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (71 samples, 0.74%)</title><rect x="7.5956%" y="773" width="0.7438%" height="15" fill="rgb(212,48,26)" fg:x="725" fg:w="71"/><text x="7.8456%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (69 samples, 0.72%)</title><rect x="7.6166%" y="757" width="0.7229%" height="15" fill="rgb(251,102,48)" fg:x="727" fg:w="69"/><text x="7.8666%" y="767.50"></text></g><g><title>game::add_roads (1 samples, 0.01%)</title><rect x="8.3290%" y="741" width="0.0105%" height="15" fill="rgb(243,208,16)" fg:x="795" fg:w="1"/><text x="8.5790%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="8.3290%" y="725" width="0.0105%" height="15" fill="rgb(219,96,24)" fg:x="795" fg:w="1"/><text x="8.5790%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="8.3290%" y="709" width="0.0105%" height="15" fill="rgb(219,33,29)" fg:x="795" fg:w="1"/><text x="8.5790%" y="719.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="8.3290%" y="693" width="0.0105%" height="15" fill="rgb(223,176,5)" fg:x="795" fg:w="1"/><text x="8.5790%" y="703.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="8.3290%" y="677" width="0.0105%" height="15" fill="rgb(228,140,14)" fg:x="795" fg:w="1"/><text x="8.5790%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="8.3290%" y="661" width="0.0105%" height="15" fill="rgb(217,179,31)" fg:x="795" fg:w="1"/><text x="8.5790%" y="671.50"></text></g><g><title>core::hash::Hasher::write_i64 (1 samples, 0.01%)</title><rect x="8.3290%" y="645" width="0.0105%" height="15" fill="rgb(230,9,30)" fg:x="795" fg:w="1"/><text x="8.5790%" y="655.50"></text></g><g><title>core::hash::Hasher::write_u64 (1 samples, 0.01%)</title><rect x="8.3290%" y="629" width="0.0105%" height="15" fill="rgb(230,136,20)" fg:x="795" fg:w="1"/><text x="8.5790%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="8.3290%" y="613" width="0.0105%" height="15" fill="rgb(215,210,22)" fg:x="795" fg:w="1"/><text x="8.5790%" y="623.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="8.3290%" y="597" width="0.0105%" height="15" fill="rgb(218,43,5)" fg:x="795" fg:w="1"/><text x="8.5790%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="8.3290%" y="581" width="0.0105%" height="15" fill="rgb(216,11,5)" fg:x="795" fg:w="1"/><text x="8.5790%" y="591.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="8.3394%" y="757" width="0.0105%" height="15" fill="rgb(209,82,29)" fg:x="796" fg:w="1"/><text x="8.5894%" y="767.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="8.3394%" y="741" width="0.0105%" height="15" fill="rgb(244,115,12)" fg:x="796" fg:w="1"/><text x="8.5894%" y="751.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="8.3394%" y="725" width="0.0105%" height="15" fill="rgb(222,82,18)" fg:x="796" fg:w="1"/><text x="8.5894%" y="735.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="8.3394%" y="709" width="0.0105%" height="15" fill="rgb(249,227,8)" fg:x="796" fg:w="1"/><text x="8.5894%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="8.3394%" y="693" width="0.0105%" height="15" fill="rgb(253,141,45)" fg:x="796" fg:w="1"/><text x="8.5894%" y="703.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="8.3394%" y="773" width="0.0210%" height="15" fill="rgb(234,184,4)" fg:x="796" fg:w="2"/><text x="8.5894%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="8.3499%" y="757" width="0.0105%" height="15" fill="rgb(218,194,23)" fg:x="797" fg:w="1"/><text x="8.5999%" y="767.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="8.3499%" y="741" width="0.0105%" height="15" fill="rgb(235,66,41)" fg:x="797" fg:w="1"/><text x="8.5999%" y="751.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="8.3499%" y="725" width="0.0105%" height="15" fill="rgb(245,217,1)" fg:x="797" fg:w="1"/><text x="8.5999%" y="735.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="8.3499%" y="709" width="0.0105%" height="15" fill="rgb(229,91,1)" fg:x="797" fg:w="1"/><text x="8.5999%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="8.3499%" y="693" width="0.0105%" height="15" fill="rgb(207,101,30)" fg:x="797" fg:w="1"/><text x="8.5999%" y="703.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="8.3499%" y="677" width="0.0105%" height="15" fill="rgb(223,82,49)" fg:x="797" fg:w="1"/><text x="8.5999%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="8.3499%" y="661" width="0.0105%" height="15" fill="rgb(218,167,17)" fg:x="797" fg:w="1"/><text x="8.5999%" y="671.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::send (1 samples, 0.01%)</title><rect x="8.3604%" y="693" width="0.0105%" height="15" fill="rgb(208,103,14)" fg:x="798" fg:w="1"/><text x="8.6104%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="8.3604%" y="677" width="0.0105%" height="15" fill="rgb(238,20,8)" fg:x="798" fg:w="1"/><text x="8.6104%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="8.3604%" y="661" width="0.0105%" height="15" fill="rgb(218,80,54)" fg:x="798" fg:w="1"/><text x="8.6104%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="8.3604%" y="645" width="0.0105%" height="15" fill="rgb(240,144,17)" fg:x="798" fg:w="1"/><text x="8.6104%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="8.3604%" y="629" width="0.0105%" height="15" fill="rgb(245,27,50)" fg:x="798" fg:w="1"/><text x="8.6104%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="8.3604%" y="613" width="0.0105%" height="15" fill="rgb(251,51,7)" fg:x="798" fg:w="1"/><text x="8.6104%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="8.3604%" y="597" width="0.0105%" height="15" fill="rgb(245,217,29)" fg:x="798" fg:w="1"/><text x="8.6104%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="8.3604%" y="581" width="0.0105%" height="15" fill="rgb(221,176,29)" fg:x="798" fg:w="1"/><text x="8.6104%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="8.3604%" y="565" width="0.0105%" height="15" fill="rgb(212,180,24)" fg:x="798" fg:w="1"/><text x="8.6104%" y="575.50"></text></g><g><title>bevy_app::event::EventWriter&lt;T&gt;::send_batch (2 samples, 0.02%)</title><rect x="8.3604%" y="725" width="0.0210%" height="15" fill="rgb(254,24,2)" fg:x="798" fg:w="2"/><text x="8.6104%" y="735.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::extend (2 samples, 0.02%)</title><rect x="8.3604%" y="709" width="0.0210%" height="15" fill="rgb(230,100,2)" fg:x="798" fg:w="2"/><text x="8.6104%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::chain::Chain&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt;::drain::{{closure}}&gt;,core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="8.3709%" y="693" width="0.0105%" height="15" fill="rgb(219,142,25)" fg:x="799" fg:w="1"/><text x="8.6209%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;bevy_app::event::EventInstance&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt;&gt;,bevy_app::event::Events&lt;bevy_asset::assets::AssetEvent&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt;::drain::{{closure}}&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="8.3709%" y="677" width="0.0105%" height="15" fill="rgb(240,73,43)" fg:x="799" fg:w="1"/><text x="8.6209%" y="687.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::asset_event_system (3 samples, 0.03%)</title><rect x="8.3604%" y="741" width="0.0314%" height="15" fill="rgb(214,114,15)" fg:x="798" fg:w="3"/><text x="8.6104%" y="751.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::drain (1 samples, 0.01%)</title><rect x="8.3814%" y="725" width="0.0105%" height="15" fill="rgb(207,130,4)" fg:x="800" fg:w="1"/><text x="8.6314%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;uuid::Uuid,alloc::boxed::Box&lt;dyn bevy_asset::loader::AssetLifecycle&gt;,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="8.4128%" y="709" width="0.0105%" height="15" fill="rgb(221,25,40)" fg:x="803" fg:w="1"/><text x="8.6628%" y="719.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="8.4128%" y="693" width="0.0105%" height="15" fill="rgb(241,184,7)" fg:x="803" fg:w="1"/><text x="8.6628%" y="703.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="8.4233%" y="709" width="0.0105%" height="15" fill="rgb(235,159,4)" fg:x="804" fg:w="1"/><text x="8.6733%" y="719.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="8.4337%" y="709" width="0.0105%" height="15" fill="rgb(214,87,48)" fg:x="805" fg:w="1"/><text x="8.6837%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="8.4337%" y="693" width="0.0105%" height="15" fill="rgb(246,198,24)" fg:x="805" fg:w="1"/><text x="8.6837%" y="703.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="8.4337%" y="677" width="0.0105%" height="15" fill="rgb(209,66,40)" fg:x="805" fg:w="1"/><text x="8.6837%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="8.4337%" y="661" width="0.0105%" height="15" fill="rgb(233,147,39)" fg:x="805" fg:w="1"/><text x="8.6837%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="8.4337%" y="645" width="0.0105%" height="15" fill="rgb(231,145,52)" fg:x="805" fg:w="1"/><text x="8.6837%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="8.4442%" y="661" width="0.0105%" height="15" fill="rgb(206,20,26)" fg:x="806" fg:w="1"/><text x="8.6942%" y="671.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="8.4442%" y="645" width="0.0105%" height="15" fill="rgb(238,220,4)" fg:x="806" fg:w="1"/><text x="8.6942%" y="655.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="8.4442%" y="629" width="0.0105%" height="15" fill="rgb(252,195,42)" fg:x="806" fg:w="1"/><text x="8.6942%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="8.4442%" y="613" width="0.0105%" height="15" fill="rgb(209,10,6)" fg:x="806" fg:w="1"/><text x="8.6942%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="8.4442%" y="597" width="0.0105%" height="15" fill="rgb(229,3,52)" fg:x="806" fg:w="1"/><text x="8.6942%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="8.4442%" y="581" width="0.0105%" height="15" fill="rgb(253,49,37)" fg:x="806" fg:w="1"/><text x="8.6942%" y="591.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="8.4442%" y="565" width="0.0105%" height="15" fill="rgb(240,103,49)" fg:x="806" fg:w="1"/><text x="8.6942%" y="575.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (7 samples, 0.07%)</title><rect x="8.3918%" y="741" width="0.0733%" height="15" fill="rgb(250,182,30)" fg:x="801" fg:w="7"/><text x="8.6418%" y="751.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (7 samples, 0.07%)</title><rect x="8.3918%" y="725" width="0.0733%" height="15" fill="rgb(248,8,30)" fg:x="801" fg:w="7"/><text x="8.6418%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="8.4442%" y="709" width="0.0210%" height="15" fill="rgb(237,120,30)" fg:x="806" fg:w="2"/><text x="8.6942%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="8.4442%" y="693" width="0.0210%" height="15" fill="rgb(221,146,34)" fg:x="806" fg:w="2"/><text x="8.6942%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="8.4442%" y="677" width="0.0210%" height="15" fill="rgb(242,55,13)" fg:x="806" fg:w="2"/><text x="8.6942%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="8.4547%" y="661" width="0.0105%" height="15" fill="rgb(242,112,31)" fg:x="807" fg:w="1"/><text x="8.7047%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="8.4547%" y="645" width="0.0105%" height="15" fill="rgb(249,192,27)" fg:x="807" fg:w="1"/><text x="8.7047%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="8.4547%" y="629" width="0.0105%" height="15" fill="rgb(208,204,44)" fg:x="807" fg:w="1"/><text x="8.7047%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="8.4547%" y="613" width="0.0105%" height="15" fill="rgb(208,93,54)" fg:x="807" fg:w="1"/><text x="8.7047%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="8.4547%" y="597" width="0.0105%" height="15" fill="rgb(242,1,31)" fg:x="807" fg:w="1"/><text x="8.7047%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="8.4547%" y="581" width="0.0105%" height="15" fill="rgb(241,83,25)" fg:x="807" fg:w="1"/><text x="8.7047%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="8.4547%" y="565" width="0.0105%" height="15" fill="rgb(205,169,50)" fg:x="807" fg:w="1"/><text x="8.7047%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="8.4547%" y="549" width="0.0105%" height="15" fill="rgb(239,186,37)" fg:x="807" fg:w="1"/><text x="8.7047%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="8.4652%" y="725" width="0.0210%" height="15" fill="rgb(205,221,10)" fg:x="808" fg:w="2"/><text x="8.7152%" y="735.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="8.4652%" y="709" width="0.0210%" height="15" fill="rgb(218,196,15)" fg:x="808" fg:w="2"/><text x="8.7152%" y="719.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (2 samples, 0.02%)</title><rect x="8.4652%" y="693" width="0.0210%" height="15" fill="rgb(218,196,35)" fg:x="808" fg:w="2"/><text x="8.7152%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (2 samples, 0.02%)</title><rect x="8.4652%" y="677" width="0.0210%" height="15" fill="rgb(233,63,24)" fg:x="808" fg:w="2"/><text x="8.7152%" y="687.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (2 samples, 0.02%)</title><rect x="8.4652%" y="661" width="0.0210%" height="15" fill="rgb(225,8,4)" fg:x="808" fg:w="2"/><text x="8.7152%" y="671.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (2 samples, 0.02%)</title><rect x="8.4652%" y="645" width="0.0210%" height="15" fill="rgb(234,105,35)" fg:x="808" fg:w="2"/><text x="8.7152%" y="655.50"></text></g><g><title>__memcmp_avx2_movbe (2 samples, 0.02%)</title><rect x="8.4652%" y="629" width="0.0210%" height="15" fill="rgb(236,21,32)" fg:x="808" fg:w="2"/><text x="8.7152%" y="639.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (15 samples, 0.16%)</title><rect x="8.3394%" y="789" width="0.1572%" height="15" fill="rgb(228,109,6)" fg:x="796" fg:w="15"/><text x="8.5894%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (13 samples, 0.14%)</title><rect x="8.3604%" y="773" width="0.1362%" height="15" fill="rgb(229,215,31)" fg:x="798" fg:w="13"/><text x="8.6104%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (13 samples, 0.14%)</title><rect x="8.3604%" y="757" width="0.1362%" height="15" fill="rgb(221,52,54)" fg:x="798" fg:w="13"/><text x="8.6104%" y="767.50"></text></g><g><title>bevy_render::camera::active_cameras::active_cameras_system (3 samples, 0.03%)</title><rect x="8.4652%" y="741" width="0.0314%" height="15" fill="rgb(252,129,43)" fg:x="808" fg:w="3"/><text x="8.7152%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter_mut (1 samples, 0.01%)</title><rect x="8.4861%" y="725" width="0.0105%" height="15" fill="rgb(248,183,27)" fg:x="810" fg:w="1"/><text x="8.7361%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter_mut (1 samples, 0.01%)</title><rect x="8.4861%" y="709" width="0.0105%" height="15" fill="rgb(250,0,22)" fg:x="810" fg:w="1"/><text x="8.7361%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="8.4861%" y="693" width="0.0105%" height="15" fill="rgb(213,166,10)" fg:x="810" fg:w="1"/><text x="8.7361%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="8.4861%" y="677" width="0.0105%" height="15" fill="rgb(207,163,36)" fg:x="810" fg:w="1"/><text x="8.7361%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="8.4861%" y="661" width="0.0105%" height="15" fill="rgb(208,122,22)" fg:x="810" fg:w="1"/><text x="8.7361%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="8.4861%" y="645" width="0.0105%" height="15" fill="rgb(207,104,49)" fg:x="810" fg:w="1"/><text x="8.7361%" y="655.50"></text></g><g><title>bevy_diagnostic::frame_time_diagnostics_plugin::FrameTimeDiagnosticsPlugin::diagnostic_system (1 samples, 0.01%)</title><rect x="8.4966%" y="741" width="0.0105%" height="15" fill="rgb(248,211,50)" fg:x="811" fg:w="1"/><text x="8.7466%" y="751.50"></text></g><g><title>bevy_diagnostic::log_diagnostics_plugin::LogDiagnosticsPlugin::log_diagnostics_system (1 samples, 0.01%)</title><rect x="8.5071%" y="741" width="0.0105%" height="15" fill="rgb(217,13,45)" fg:x="812" fg:w="1"/><text x="8.7571%" y="751.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (4 samples, 0.04%)</title><rect x="8.5175%" y="741" width="0.0419%" height="15" fill="rgb(211,216,49)" fg:x="813" fg:w="4"/><text x="8.7675%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="8.5385%" y="725" width="0.0210%" height="15" fill="rgb(221,58,53)" fg:x="815" fg:w="2"/><text x="8.7885%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="8.5385%" y="709" width="0.0210%" height="15" fill="rgb(220,112,41)" fg:x="815" fg:w="2"/><text x="8.7885%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="8.5385%" y="693" width="0.0210%" height="15" fill="rgb(236,38,28)" fg:x="815" fg:w="2"/><text x="8.7885%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="8.5385%" y="677" width="0.0210%" height="15" fill="rgb(227,195,22)" fg:x="815" fg:w="2"/><text x="8.7885%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="8.5385%" y="661" width="0.0210%" height="15" fill="rgb(214,55,33)" fg:x="815" fg:w="2"/><text x="8.7885%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="8.5385%" y="645" width="0.0210%" height="15" fill="rgb(248,80,13)" fg:x="815" fg:w="2"/><text x="8.7885%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="8.5385%" y="629" width="0.0210%" height="15" fill="rgb(238,52,6)" fg:x="815" fg:w="2"/><text x="8.7885%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="8.5385%" y="613" width="0.0210%" height="15" fill="rgb(224,198,47)" fg:x="815" fg:w="2"/><text x="8.7885%" y="623.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="8.5385%" y="597" width="0.0210%" height="15" fill="rgb(233,171,20)" fg:x="815" fg:w="2"/><text x="8.7885%" y="607.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="8.5385%" y="581" width="0.0210%" height="15" fill="rgb(241,30,25)" fg:x="815" fg:w="2"/><text x="8.7885%" y="591.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="8.5385%" y="565" width="0.0210%" height="15" fill="rgb(207,171,38)" fg:x="815" fg:w="2"/><text x="8.7885%" y="575.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="8.5385%" y="549" width="0.0210%" height="15" fill="rgb(234,70,1)" fg:x="815" fg:w="2"/><text x="8.7885%" y="559.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="8.5490%" y="533" width="0.0105%" height="15" fill="rgb(232,178,18)" fg:x="816" fg:w="1"/><text x="8.7990%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="8.5595%" y="741" width="0.0105%" height="15" fill="rgb(241,78,40)" fg:x="817" fg:w="1"/><text x="8.8095%" y="751.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="8.6747%" y="725" width="0.0524%" height="15" fill="rgb(222,35,25)" fg:x="828" fg:w="5"/><text x="8.9247%" y="735.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="8.6747%" y="709" width="0.0524%" height="15" fill="rgb(207,92,16)" fg:x="828" fg:w="5"/><text x="8.9247%" y="719.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (3 samples, 0.03%)</title><rect x="8.6957%" y="693" width="0.0314%" height="15" fill="rgb(216,59,51)" fg:x="830" fg:w="3"/><text x="8.9457%" y="703.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (3 samples, 0.03%)</title><rect x="8.6957%" y="677" width="0.0314%" height="15" fill="rgb(213,80,28)" fg:x="830" fg:w="3"/><text x="8.9457%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (2 samples, 0.02%)</title><rect x="8.7061%" y="661" width="0.0210%" height="15" fill="rgb(220,93,7)" fg:x="831" fg:w="2"/><text x="8.9561%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.02%)</title><rect x="8.7061%" y="645" width="0.0210%" height="15" fill="rgb(225,24,44)" fg:x="831" fg:w="2"/><text x="8.9561%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (2 samples, 0.02%)</title><rect x="8.7271%" y="725" width="0.0210%" height="15" fill="rgb(243,74,40)" fg:x="833" fg:w="2"/><text x="8.9771%" y="735.50"></text></g><g><title>core::intrinsics::copy (2 samples, 0.02%)</title><rect x="8.7271%" y="709" width="0.0210%" height="15" fill="rgb(228,39,7)" fg:x="833" fg:w="2"/><text x="8.9771%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="8.7271%" y="693" width="0.0210%" height="15" fill="rgb(227,79,8)" fg:x="833" fg:w="2"/><text x="8.9771%" y="703.50"></text></g><g><title>bevy_core::time::stopwatch::Stopwatch::tick (3 samples, 0.03%)</title><rect x="8.7480%" y="709" width="0.0314%" height="15" fill="rgb(236,58,11)" fg:x="835" fg:w="3"/><text x="8.9980%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::AddAssign&gt;::add_assign (3 samples, 0.03%)</title><rect x="8.7480%" y="693" width="0.0314%" height="15" fill="rgb(249,63,35)" fg:x="835" fg:w="3"/><text x="8.9980%" y="703.50"></text></g><g><title>bevy_core::time::timer::Timer::percent (1 samples, 0.01%)</title><rect x="8.7795%" y="709" width="0.0105%" height="15" fill="rgb(252,114,16)" fg:x="838" fg:w="1"/><text x="9.0295%" y="719.50"></text></g><g><title>core::time::Duration::as_secs_f32 (1 samples, 0.01%)</title><rect x="8.7795%" y="693" width="0.0105%" height="15" fill="rgb(254,151,24)" fg:x="838" fg:w="1"/><text x="9.0295%" y="703.50"></text></g><g><title>bevy_core::time::timer::Timer::tick (5 samples, 0.05%)</title><rect x="8.7480%" y="725" width="0.0524%" height="15" fill="rgb(253,54,39)" fg:x="835" fg:w="5"/><text x="8.9980%" y="735.50"></text></g><g><title>core::cmp::PartialOrd::ge (1 samples, 0.01%)</title><rect x="8.7899%" y="709" width="0.0105%" height="15" fill="rgb(243,25,45)" fg:x="839" fg:w="1"/><text x="9.0399%" y="719.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="8.7899%" y="693" width="0.0105%" height="15" fill="rgb(234,134,9)" fg:x="839" fg:w="1"/><text x="9.0399%" y="703.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="8.8004%" y="725" width="0.0105%" height="15" fill="rgb(227,166,31)" fg:x="840" fg:w="1"/><text x="9.0504%" y="735.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="8.8004%" y="709" width="0.0105%" height="15" fill="rgb(245,143,41)" fg:x="840" fg:w="1"/><text x="9.0504%" y="719.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="8.8004%" y="693" width="0.0105%" height="15" fill="rgb(238,181,32)" fg:x="840" fg:w="1"/><text x="9.0504%" y="703.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::is_dense (1 samples, 0.01%)</title><rect x="8.8004%" y="677" width="0.0105%" height="15" fill="rgb(224,113,18)" fg:x="840" fg:w="1"/><text x="9.0504%" y="687.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::is_dense (1 samples, 0.01%)</title><rect x="8.8004%" y="661" width="0.0105%" height="15" fill="rgb(240,229,28)" fg:x="840" fg:w="1"/><text x="9.0504%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(engine::movement::pathing::Position,u32)&gt;&gt; (1 samples, 0.01%)</title><rect x="8.8109%" y="725" width="0.0105%" height="15" fill="rgb(250,185,3)" fg:x="841" fg:w="1"/><text x="9.0609%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::movement::pathing::Position,u32)&gt;&gt; (1 samples, 0.01%)</title><rect x="8.8109%" y="709" width="0.0105%" height="15" fill="rgb(212,59,25)" fg:x="841" fg:w="1"/><text x="9.0609%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="8.8109%" y="693" width="0.0105%" height="15" fill="rgb(221,87,20)" fg:x="841" fg:w="1"/><text x="9.0609%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="8.8109%" y="677" width="0.0105%" height="15" fill="rgb(213,74,28)" fg:x="841" fg:w="1"/><text x="9.0609%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="8.8109%" y="661" width="0.0105%" height="15" fill="rgb(224,132,34)" fg:x="841" fg:w="1"/><text x="9.0609%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="8.8109%" y="645" width="0.0105%" height="15" fill="rgb(222,101,24)" fg:x="841" fg:w="1"/><text x="9.0609%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="8.8109%" y="629" width="0.0105%" height="15" fill="rgb(254,142,4)" fg:x="841" fg:w="1"/><text x="9.0609%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::movement::pathing::Path&gt; (1 samples, 0.01%)</title><rect x="8.8214%" y="725" width="0.0105%" height="15" fill="rgb(230,229,49)" fg:x="842" fg:w="1"/><text x="9.0714%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;engine::movement::pathing::Position&gt;&gt; (1 samples, 0.01%)</title><rect x="8.8214%" y="709" width="0.0105%" height="15" fill="rgb(238,70,47)" fg:x="842" fg:w="1"/><text x="9.0714%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::movement::pathing::Position&gt;&gt; (1 samples, 0.01%)</title><rect x="8.8214%" y="693" width="0.0105%" height="15" fill="rgb(231,160,17)" fg:x="842" fg:w="1"/><text x="9.0714%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="8.8214%" y="677" width="0.0105%" height="15" fill="rgb(218,68,53)" fg:x="842" fg:w="1"/><text x="9.0714%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="8.8214%" y="661" width="0.0105%" height="15" fill="rgb(236,111,10)" fg:x="842" fg:w="1"/><text x="9.0714%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="8.8214%" y="645" width="0.0105%" height="15" fill="rgb(224,34,41)" fg:x="842" fg:w="1"/><text x="9.0714%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="8.8214%" y="629" width="0.0105%" height="15" fill="rgb(241,118,19)" fg:x="842" fg:w="1"/><text x="9.0714%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="8.8423%" y="533" width="0.0105%" height="15" fill="rgb(238,129,25)" fg:x="844" fg:w="1"/><text x="9.0923%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="8.8423%" y="517" width="0.0105%" height="15" fill="rgb(238,22,31)" fg:x="844" fg:w="1"/><text x="9.0923%" y="527.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="8.8423%" y="629" width="0.0210%" height="15" fill="rgb(222,174,48)" fg:x="844" fg:w="2"/><text x="9.0923%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.02%)</title><rect x="8.8423%" y="613" width="0.0210%" height="15" fill="rgb(206,152,40)" fg:x="844" fg:w="2"/><text x="9.0923%" y="623.50"></text></g><g><title>core::hash::Hasher::write_i64 (2 samples, 0.02%)</title><rect x="8.8423%" y="597" width="0.0210%" height="15" fill="rgb(218,99,54)" fg:x="844" fg:w="2"/><text x="9.0923%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u64 (2 samples, 0.02%)</title><rect x="8.8423%" y="581" width="0.0210%" height="15" fill="rgb(220,174,26)" fg:x="844" fg:w="2"/><text x="9.0923%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="8.8423%" y="565" width="0.0210%" height="15" fill="rgb(245,116,9)" fg:x="844" fg:w="2"/><text x="9.0923%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="8.8423%" y="549" width="0.0210%" height="15" fill="rgb(209,72,35)" fg:x="844" fg:w="2"/><text x="9.0923%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="8.8528%" y="533" width="0.0105%" height="15" fill="rgb(226,126,21)" fg:x="845" fg:w="1"/><text x="9.1028%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="8.8423%" y="645" width="0.0314%" height="15" fill="rgb(227,192,1)" fg:x="844" fg:w="3"/><text x="9.0923%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="8.8633%" y="629" width="0.0105%" height="15" fill="rgb(237,180,29)" fg:x="846" fg:w="1"/><text x="9.1133%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="8.8633%" y="613" width="0.0105%" height="15" fill="rgb(230,197,35)" fg:x="846" fg:w="1"/><text x="9.1133%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="8.8633%" y="597" width="0.0105%" height="15" fill="rgb(246,193,31)" fg:x="846" fg:w="1"/><text x="9.1133%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="8.8633%" y="581" width="0.0105%" height="15" fill="rgb(241,36,4)" fg:x="846" fg:w="1"/><text x="9.1133%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="8.8633%" y="565" width="0.0105%" height="15" fill="rgb(241,130,17)" fg:x="846" fg:w="1"/><text x="9.1133%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.05%)</title><rect x="8.8738%" y="613" width="0.0524%" height="15" fill="rgb(206,137,32)" fg:x="847" fg:w="5"/><text x="9.1238%" y="623.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (5 samples, 0.05%)</title><rect x="8.8738%" y="597" width="0.0524%" height="15" fill="rgb(237,228,51)" fg:x="847" fg:w="5"/><text x="9.1238%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (9 samples, 0.09%)</title><rect x="8.8423%" y="693" width="0.0943%" height="15" fill="rgb(243,6,42)" fg:x="844" fg:w="9"/><text x="9.0923%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (9 samples, 0.09%)</title><rect x="8.8423%" y="677" width="0.0943%" height="15" fill="rgb(251,74,28)" fg:x="844" fg:w="9"/><text x="9.0923%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.09%)</title><rect x="8.8423%" y="661" width="0.0943%" height="15" fill="rgb(218,20,49)" fg:x="844" fg:w="9"/><text x="9.0923%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.06%)</title><rect x="8.8738%" y="645" width="0.0629%" height="15" fill="rgb(238,28,14)" fg:x="847" fg:w="6"/><text x="9.1238%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.06%)</title><rect x="8.8738%" y="629" width="0.0629%" height="15" fill="rgb(229,40,46)" fg:x="847" fg:w="6"/><text x="9.1238%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="8.9261%" y="613" width="0.0105%" height="15" fill="rgb(244,195,20)" fg:x="852" fg:w="1"/><text x="9.1761%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="8.9261%" y="597" width="0.0105%" height="15" fill="rgb(253,56,35)" fg:x="852" fg:w="1"/><text x="9.1761%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="8.9261%" y="581" width="0.0105%" height="15" fill="rgb(210,149,44)" fg:x="852" fg:w="1"/><text x="9.1761%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="8.9261%" y="565" width="0.0105%" height="15" fill="rgb(240,135,12)" fg:x="852" fg:w="1"/><text x="9.1761%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="8.9261%" y="549" width="0.0105%" height="15" fill="rgb(251,24,50)" fg:x="852" fg:w="1"/><text x="9.1761%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="8.9261%" y="533" width="0.0105%" height="15" fill="rgb(243,200,47)" fg:x="852" fg:w="1"/><text x="9.1761%" y="543.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="8.9261%" y="517" width="0.0105%" height="15" fill="rgb(224,166,26)" fg:x="852" fg:w="1"/><text x="9.1761%" y="527.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="8.9366%" y="629" width="0.0210%" height="15" fill="rgb(233,0,47)" fg:x="853" fg:w="2"/><text x="9.1866%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.02%)</title><rect x="8.9366%" y="613" width="0.0210%" height="15" fill="rgb(253,80,5)" fg:x="853" fg:w="2"/><text x="9.1866%" y="623.50"></text></g><g><title>core::hash::Hasher::write_i64 (2 samples, 0.02%)</title><rect x="8.9366%" y="597" width="0.0210%" height="15" fill="rgb(214,133,25)" fg:x="853" fg:w="2"/><text x="9.1866%" y="607.50"></text></g><g><title>core::hash::Hasher::write_u64 (2 samples, 0.02%)</title><rect x="8.9366%" y="581" width="0.0210%" height="15" fill="rgb(209,27,14)" fg:x="853" fg:w="2"/><text x="9.1866%" y="591.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="8.9471%" y="565" width="0.0105%" height="15" fill="rgb(219,102,51)" fg:x="854" fg:w="1"/><text x="9.1971%" y="575.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="8.9471%" y="549" width="0.0105%" height="15" fill="rgb(237,18,16)" fg:x="854" fg:w="1"/><text x="9.1971%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="8.9471%" y="533" width="0.0105%" height="15" fill="rgb(241,85,17)" fg:x="854" fg:w="1"/><text x="9.1971%" y="543.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="8.9471%" y="517" width="0.0105%" height="15" fill="rgb(236,90,42)" fg:x="854" fg:w="1"/><text x="9.1971%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="8.9366%" y="645" width="0.0419%" height="15" fill="rgb(249,57,21)" fg:x="853" fg:w="4"/><text x="9.1866%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="8.9576%" y="629" width="0.0210%" height="15" fill="rgb(243,12,36)" fg:x="855" fg:w="2"/><text x="9.2076%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="8.9576%" y="613" width="0.0210%" height="15" fill="rgb(253,128,47)" fg:x="855" fg:w="2"/><text x="9.2076%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="8.9576%" y="597" width="0.0210%" height="15" fill="rgb(207,33,20)" fg:x="855" fg:w="2"/><text x="9.2076%" y="607.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="8.9680%" y="581" width="0.0105%" height="15" fill="rgb(233,215,35)" fg:x="856" fg:w="1"/><text x="9.2180%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="8.9680%" y="565" width="0.0105%" height="15" fill="rgb(249,188,52)" fg:x="856" fg:w="1"/><text x="9.2180%" y="575.50"></text></g><g><title>engine::movement::pathing::move_weights (15 samples, 0.16%)</title><rect x="8.8318%" y="725" width="0.1572%" height="15" fill="rgb(225,12,32)" fg:x="843" fg:w="15"/><text x="9.0818%" y="735.50"></text></g><g><title>engine::movement::pathing::tile_weight (15 samples, 0.16%)</title><rect x="8.8318%" y="709" width="0.1572%" height="15" fill="rgb(247,98,14)" fg:x="843" fg:w="15"/><text x="9.0818%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (5 samples, 0.05%)</title><rect x="8.9366%" y="693" width="0.0524%" height="15" fill="rgb(247,219,48)" fg:x="853" fg:w="5"/><text x="9.1866%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.05%)</title><rect x="8.9366%" y="677" width="0.0524%" height="15" fill="rgb(253,60,48)" fg:x="853" fg:w="5"/><text x="9.1866%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.05%)</title><rect x="8.9366%" y="661" width="0.0524%" height="15" fill="rgb(245,15,52)" fg:x="853" fg:w="5"/><text x="9.1866%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="8.9785%" y="645" width="0.0105%" height="15" fill="rgb(220,133,28)" fg:x="857" fg:w="1"/><text x="9.2285%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="8.9785%" y="629" width="0.0105%" height="15" fill="rgb(217,180,4)" fg:x="857" fg:w="1"/><text x="9.2285%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="8.9785%" y="613" width="0.0105%" height="15" fill="rgb(251,24,1)" fg:x="857" fg:w="1"/><text x="9.2285%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="8.9785%" y="597" width="0.0105%" height="15" fill="rgb(212,185,49)" fg:x="857" fg:w="1"/><text x="9.2285%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="8.9785%" y="581" width="0.0105%" height="15" fill="rgb(215,175,22)" fg:x="857" fg:w="1"/><text x="9.2285%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="8.9785%" y="565" width="0.0105%" height="15" fill="rgb(250,205,14)" fg:x="857" fg:w="1"/><text x="9.2285%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="8.9785%" y="549" width="0.0105%" height="15" fill="rgb(225,211,22)" fg:x="857" fg:w="1"/><text x="9.2285%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="8.9785%" y="533" width="0.0105%" height="15" fill="rgb(251,179,42)" fg:x="857" fg:w="1"/><text x="9.2285%" y="543.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="9.0309%" y="693" width="0.0314%" height="15" fill="rgb(208,216,51)" fg:x="862" fg:w="3"/><text x="9.2809%" y="703.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="9.0519%" y="677" width="0.0105%" height="15" fill="rgb(235,36,11)" fg:x="864" fg:w="1"/><text x="9.3019%" y="687.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="9.0623%" y="645" width="0.0105%" height="15" fill="rgb(213,189,28)" fg:x="865" fg:w="1"/><text x="9.3123%" y="655.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (1 samples, 0.01%)</title><rect x="9.0728%" y="629" width="0.0105%" height="15" fill="rgb(227,203,42)" fg:x="866" fg:w="1"/><text x="9.3228%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1 samples, 0.01%)</title><rect x="9.0728%" y="613" width="0.0105%" height="15" fill="rgb(244,72,36)" fg:x="866" fg:w="1"/><text x="9.3228%" y="623.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.01%)</title><rect x="9.0728%" y="597" width="0.0105%" height="15" fill="rgb(213,53,17)" fg:x="866" fg:w="1"/><text x="9.3228%" y="607.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="9.0728%" y="581" width="0.0105%" height="15" fill="rgb(207,167,3)" fg:x="866" fg:w="1"/><text x="9.3228%" y="591.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="9.0728%" y="565" width="0.0105%" height="15" fill="rgb(216,98,30)" fg:x="866" fg:w="1"/><text x="9.3228%" y="575.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (3 samples, 0.03%)</title><rect x="9.0728%" y="645" width="0.0314%" height="15" fill="rgb(236,123,15)" fg:x="866" fg:w="3"/><text x="9.3228%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (2 samples, 0.02%)</title><rect x="9.0833%" y="629" width="0.0210%" height="15" fill="rgb(248,81,50)" fg:x="867" fg:w="2"/><text x="9.3333%" y="639.50"></text></g><g><title>core::cmp::PartialOrd::le (2 samples, 0.02%)</title><rect x="9.0833%" y="613" width="0.0210%" height="15" fill="rgb(214,120,4)" fg:x="867" fg:w="2"/><text x="9.3333%" y="623.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="9.0938%" y="597" width="0.0105%" height="15" fill="rgb(208,179,34)" fg:x="868" fg:w="1"/><text x="9.3438%" y="607.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="9.0938%" y="581" width="0.0105%" height="15" fill="rgb(227,140,7)" fg:x="868" fg:w="1"/><text x="9.3438%" y="591.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="9.0938%" y="565" width="0.0105%" height="15" fill="rgb(214,22,6)" fg:x="868" fg:w="1"/><text x="9.3438%" y="575.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (5 samples, 0.05%)</title><rect x="9.0623%" y="693" width="0.0524%" height="15" fill="rgb(207,137,27)" fg:x="865" fg:w="5"/><text x="9.3123%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (5 samples, 0.05%)</title><rect x="9.0623%" y="677" width="0.0524%" height="15" fill="rgb(210,8,46)" fg:x="865" fg:w="5"/><text x="9.3123%" y="687.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (5 samples, 0.05%)</title><rect x="9.0623%" y="661" width="0.0524%" height="15" fill="rgb(240,16,54)" fg:x="865" fg:w="5"/><text x="9.3123%" y="671.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="9.1042%" y="645" width="0.0105%" height="15" fill="rgb(211,209,29)" fg:x="869" fg:w="1"/><text x="9.3542%" y="655.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="9.1042%" y="629" width="0.0105%" height="15" fill="rgb(226,228,24)" fg:x="869" fg:w="1"/><text x="9.3542%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="9.1042%" y="613" width="0.0105%" height="15" fill="rgb(222,84,9)" fg:x="869" fg:w="1"/><text x="9.3542%" y="623.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (2 samples, 0.02%)</title><rect x="9.1252%" y="661" width="0.0210%" height="15" fill="rgb(234,203,30)" fg:x="871" fg:w="2"/><text x="9.3752%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="9.1252%" y="645" width="0.0210%" height="15" fill="rgb(238,109,14)" fg:x="871" fg:w="2"/><text x="9.3752%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (6 samples, 0.06%)</title><rect x="9.1461%" y="661" width="0.0629%" height="15" fill="rgb(233,206,34)" fg:x="873" fg:w="6"/><text x="9.3961%" y="671.50"></text></g><g><title>core::cmp::PartialOrd::le (6 samples, 0.06%)</title><rect x="9.1461%" y="645" width="0.0629%" height="15" fill="rgb(220,167,47)" fg:x="873" fg:w="6"/><text x="9.3961%" y="655.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (5 samples, 0.05%)</title><rect x="9.1566%" y="629" width="0.0524%" height="15" fill="rgb(238,105,10)" fg:x="874" fg:w="5"/><text x="9.4066%" y="639.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (4 samples, 0.04%)</title><rect x="9.1671%" y="613" width="0.0419%" height="15" fill="rgb(213,227,17)" fg:x="875" fg:w="4"/><text x="9.4171%" y="623.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (10 samples, 0.10%)</title><rect x="9.1147%" y="677" width="0.1048%" height="15" fill="rgb(217,132,38)" fg:x="870" fg:w="10"/><text x="9.3647%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;u32&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="9.2090%" y="661" width="0.0105%" height="15" fill="rgb(242,146,4)" fg:x="879" fg:w="1"/><text x="9.4590%" y="671.50"></text></g><g><title>pathfinding::directed::astar::astar (1 samples, 0.01%)</title><rect x="9.2090%" y="645" width="0.0105%" height="15" fill="rgb(212,61,9)" fg:x="879" fg:w="1"/><text x="9.4590%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.03%)</title><rect x="9.2509%" y="581" width="0.0314%" height="15" fill="rgb(247,126,22)" fg:x="883" fg:w="3"/><text x="9.5009%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.03%)</title><rect x="9.2509%" y="565" width="0.0314%" height="15" fill="rgb(220,196,2)" fg:x="883" fg:w="3"/><text x="9.5009%" y="575.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.03%)</title><rect x="9.2509%" y="549" width="0.0314%" height="15" fill="rgb(208,46,4)" fg:x="883" fg:w="3"/><text x="9.5009%" y="559.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.03%)</title><rect x="9.2509%" y="533" width="0.0314%" height="15" fill="rgb(252,104,46)" fg:x="883" fg:w="3"/><text x="9.5009%" y="543.50"></text></g><g><title>_int_realloc (2 samples, 0.02%)</title><rect x="9.2614%" y="517" width="0.0210%" height="15" fill="rgb(237,152,48)" fg:x="884" fg:w="2"/><text x="9.5114%" y="527.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="9.2614%" y="501" width="0.0210%" height="15" fill="rgb(221,59,37)" fg:x="884" fg:w="2"/><text x="9.5114%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.06%)</title><rect x="9.2300%" y="661" width="0.0629%" height="15" fill="rgb(209,202,51)" fg:x="881" fg:w="6"/><text x="9.4800%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.06%)</title><rect x="9.2300%" y="645" width="0.0629%" height="15" fill="rgb(228,81,30)" fg:x="881" fg:w="6"/><text x="9.4800%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.04%)</title><rect x="9.2509%" y="629" width="0.0419%" height="15" fill="rgb(227,42,39)" fg:x="883" fg:w="4"/><text x="9.5009%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.04%)</title><rect x="9.2509%" y="613" width="0.0419%" height="15" fill="rgb(221,26,2)" fg:x="883" fg:w="4"/><text x="9.5009%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="9.2509%" y="597" width="0.0419%" height="15" fill="rgb(254,61,31)" fg:x="883" fg:w="4"/><text x="9.5009%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="9.2823%" y="581" width="0.0105%" height="15" fill="rgb(222,173,38)" fg:x="886" fg:w="1"/><text x="9.5323%" y="591.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (18 samples, 0.19%)</title><rect x="9.1147%" y="693" width="0.1886%" height="15" fill="rgb(218,50,12)" fg:x="870" fg:w="18"/><text x="9.3647%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (8 samples, 0.08%)</title><rect x="9.2195%" y="677" width="0.0838%" height="15" fill="rgb(223,88,40)" fg:x="880" fg:w="8"/><text x="9.4695%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="9.2928%" y="661" width="0.0105%" height="15" fill="rgb(237,54,19)" fg:x="887" fg:w="1"/><text x="9.5428%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::movement::pathing::Position,u32)&gt;&gt; (4 samples, 0.04%)</title><rect x="9.3033%" y="693" width="0.0419%" height="15" fill="rgb(251,129,25)" fg:x="888" fg:w="4"/><text x="9.5533%" y="703.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="9.3033%" y="677" width="0.0419%" height="15" fill="rgb(238,97,19)" fg:x="888" fg:w="4"/><text x="9.5533%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::movement::pathing::Position,u32),alloc::alloc::Global&gt;&gt; (4 samples, 0.04%)</title><rect x="9.3033%" y="661" width="0.0419%" height="15" fill="rgb(240,169,18)" fg:x="888" fg:w="4"/><text x="9.5533%" y="671.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="9.3033%" y="645" width="0.0419%" height="15" fill="rgb(230,187,49)" fg:x="888" fg:w="4"/><text x="9.5533%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::movement::pathing::Position,u32)&gt;&gt; (4 samples, 0.04%)</title><rect x="9.3033%" y="629" width="0.0419%" height="15" fill="rgb(209,44,26)" fg:x="888" fg:w="4"/><text x="9.5533%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="9.3033%" y="613" width="0.0419%" height="15" fill="rgb(244,0,6)" fg:x="888" fg:w="4"/><text x="9.5533%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="9.3033%" y="597" width="0.0419%" height="15" fill="rgb(248,18,21)" fg:x="888" fg:w="4"/><text x="9.5533%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="9.3033%" y="581" width="0.0419%" height="15" fill="rgb(245,180,19)" fg:x="888" fg:w="4"/><text x="9.5533%" y="591.50"></text></g><g><title>__GI___libc_free (4 samples, 0.04%)</title><rect x="9.3033%" y="565" width="0.0419%" height="15" fill="rgb(252,118,36)" fg:x="888" fg:w="4"/><text x="9.5533%" y="575.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="9.3033%" y="549" width="0.0419%" height="15" fill="rgb(210,224,19)" fg:x="888" fg:w="4"/><text x="9.5533%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="9.3557%" y="645" width="0.0105%" height="15" fill="rgb(218,30,24)" fg:x="893" fg:w="1"/><text x="9.6057%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="9.3662%" y="581" width="0.0105%" height="15" fill="rgb(219,75,50)" fg:x="894" fg:w="1"/><text x="9.6162%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="9.5652%" y="485" width="0.0210%" height="15" fill="rgb(234,72,50)" fg:x="913" fg:w="2"/><text x="9.8152%" y="495.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="9.5862%" y="485" width="0.0314%" height="15" fill="rgb(219,100,48)" fg:x="915" fg:w="3"/><text x="9.8362%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.29%)</title><rect x="9.3871%" y="565" width="0.2933%" height="15" fill="rgb(253,5,41)" fg:x="896" fg:w="28"/><text x="9.6371%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.29%)</title><rect x="9.3871%" y="549" width="0.2933%" height="15" fill="rgb(247,181,11)" fg:x="896" fg:w="28"/><text x="9.6371%" y="559.50"></text></g><g><title>alloc::alloc::realloc (28 samples, 0.29%)</title><rect x="9.3871%" y="533" width="0.2933%" height="15" fill="rgb(222,223,25)" fg:x="896" fg:w="28"/><text x="9.6371%" y="543.50"></text></g><g><title>__GI___libc_realloc (28 samples, 0.29%)</title><rect x="9.3871%" y="517" width="0.2933%" height="15" fill="rgb(214,198,28)" fg:x="896" fg:w="28"/><text x="9.6371%" y="527.50"></text></g><g><title>_int_realloc (16 samples, 0.17%)</title><rect x="9.5128%" y="501" width="0.1676%" height="15" fill="rgb(230,46,43)" fg:x="908" fg:w="16"/><text x="9.7628%" y="511.50"></text></g><g><title>_int_malloc (6 samples, 0.06%)</title><rect x="9.6176%" y="485" width="0.0629%" height="15" fill="rgb(233,65,53)" fg:x="918" fg:w="6"/><text x="9.8676%" y="495.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="9.6700%" y="469" width="0.0105%" height="15" fill="rgb(221,121,27)" fg:x="923" fg:w="1"/><text x="9.9200%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.31%)</title><rect x="9.3766%" y="581" width="0.3143%" height="15" fill="rgb(247,70,47)" fg:x="895" fg:w="30"/><text x="9.6266%" y="591.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="9.6805%" y="565" width="0.0105%" height="15" fill="rgb(228,85,35)" fg:x="924" fg:w="1"/><text x="9.9305%" y="575.50"></text></g><g><title>core::alloc::layout::Layout::array (1 samples, 0.01%)</title><rect x="9.6909%" y="581" width="0.0105%" height="15" fill="rgb(209,50,18)" fg:x="925" fg:w="1"/><text x="9.9409%" y="591.50"></text></g><g><title>core::alloc::layout::Layout::repeat (1 samples, 0.01%)</title><rect x="9.6909%" y="565" width="0.0105%" height="15" fill="rgb(250,19,35)" fg:x="925" fg:w="1"/><text x="9.9409%" y="575.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (1 samples, 0.01%)</title><rect x="9.6909%" y="549" width="0.0105%" height="15" fill="rgb(253,107,29)" fg:x="925" fg:w="1"/><text x="9.9409%" y="559.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (1 samples, 0.01%)</title><rect x="9.6909%" y="533" width="0.0105%" height="15" fill="rgb(252,179,29)" fg:x="925" fg:w="1"/><text x="9.9409%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.35%)</title><rect x="9.3662%" y="645" width="0.3457%" height="15" fill="rgb(238,194,6)" fg:x="894" fg:w="33"/><text x="9.6162%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.35%)</title><rect x="9.3662%" y="629" width="0.3457%" height="15" fill="rgb(238,164,29)" fg:x="894" fg:w="33"/><text x="9.6162%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (33 samples, 0.35%)</title><rect x="9.3662%" y="613" width="0.3457%" height="15" fill="rgb(224,25,9)" fg:x="894" fg:w="33"/><text x="9.6162%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (33 samples, 0.35%)</title><rect x="9.3662%" y="597" width="0.3457%" height="15" fill="rgb(244,153,23)" fg:x="894" fg:w="33"/><text x="9.6162%" y="607.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="9.7014%" y="581" width="0.0105%" height="15" fill="rgb(212,203,14)" fg:x="926" fg:w="1"/><text x="9.9514%" y="591.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="9.7014%" y="565" width="0.0105%" height="15" fill="rgb(220,164,20)" fg:x="926" fg:w="1"/><text x="9.9514%" y="575.50"></text></g><g><title>core::cmp::max_by (1 samples, 0.01%)</title><rect x="9.7014%" y="549" width="0.0105%" height="15" fill="rgb(222,203,48)" fg:x="926" fg:w="1"/><text x="9.9514%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (36 samples, 0.38%)</title><rect x="9.3452%" y="661" width="0.3772%" height="15" fill="rgb(215,159,22)" fg:x="892" fg:w="36"/><text x="9.5952%" y="671.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="9.7119%" y="645" width="0.0105%" height="15" fill="rgb(216,183,47)" fg:x="927" fg:w="1"/><text x="9.9619%" y="655.50"></text></g><g><title>engine::movement::pathing::move_weights (3 samples, 0.03%)</title><rect x="9.7224%" y="661" width="0.0314%" height="15" fill="rgb(229,195,25)" fg:x="928" fg:w="3"/><text x="9.9724%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="9.9005%" y="453" width="0.0105%" height="15" fill="rgb(224,132,51)" fg:x="945" fg:w="1"/><text x="10.1505%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="9.9109%" y="453" width="0.0210%" height="15" fill="rgb(240,63,7)" fg:x="946" fg:w="2"/><text x="10.1609%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (7 samples, 0.07%)</title><rect x="9.8690%" y="469" width="0.0733%" height="15" fill="rgb(249,182,41)" fg:x="942" fg:w="7"/><text x="10.1190%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="9.9319%" y="453" width="0.0105%" height="15" fill="rgb(243,47,26)" fg:x="948" fg:w="1"/><text x="10.1819%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.16%)</title><rect x="9.8271%" y="485" width="0.1572%" height="15" fill="rgb(233,48,2)" fg:x="938" fg:w="15"/><text x="10.0771%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (4 samples, 0.04%)</title><rect x="9.9424%" y="469" width="0.0419%" height="15" fill="rgb(244,165,34)" fg:x="949" fg:w="4"/><text x="10.1924%" y="479.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (20 samples, 0.21%)</title><rect x="9.7852%" y="581" width="0.2095%" height="15" fill="rgb(207,89,7)" fg:x="934" fg:w="20"/><text x="10.0352%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (18 samples, 0.19%)</title><rect x="9.8062%" y="565" width="0.1886%" height="15" fill="rgb(244,117,36)" fg:x="936" fg:w="18"/><text x="10.0562%" y="575.50"></text></g><g><title>core::hash::Hasher::write_i64 (17 samples, 0.18%)</title><rect x="9.8167%" y="549" width="0.1781%" height="15" fill="rgb(226,144,34)" fg:x="937" fg:w="17"/><text x="10.0667%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u64 (17 samples, 0.18%)</title><rect x="9.8167%" y="533" width="0.1781%" height="15" fill="rgb(213,23,19)" fg:x="937" fg:w="17"/><text x="10.0667%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (16 samples, 0.17%)</title><rect x="9.8271%" y="517" width="0.1676%" height="15" fill="rgb(217,75,12)" fg:x="938" fg:w="16"/><text x="10.0771%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (16 samples, 0.17%)</title><rect x="9.8271%" y="501" width="0.1676%" height="15" fill="rgb(224,159,17)" fg:x="938" fg:w="16"/><text x="10.0771%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="9.9843%" y="485" width="0.0105%" height="15" fill="rgb(217,118,1)" fg:x="953" fg:w="1"/><text x="10.2343%" y="495.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (3 samples, 0.03%)</title><rect x="9.9948%" y="533" width="0.0314%" height="15" fill="rgb(232,180,48)" fg:x="954" fg:w="3"/><text x="10.2448%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.05%)</title><rect x="10.0576%" y="517" width="0.0524%" height="15" fill="rgb(230,27,33)" fg:x="960" fg:w="5"/><text x="10.3076%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (13 samples, 0.14%)</title><rect x="9.9948%" y="581" width="0.1362%" height="15" fill="rgb(205,31,21)" fg:x="954" fg:w="13"/><text x="10.2448%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (13 samples, 0.14%)</title><rect x="9.9948%" y="565" width="0.1362%" height="15" fill="rgb(253,59,4)" fg:x="954" fg:w="13"/><text x="10.2448%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (13 samples, 0.14%)</title><rect x="9.9948%" y="549" width="0.1362%" height="15" fill="rgb(224,201,9)" fg:x="954" fg:w="13"/><text x="10.2448%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.10%)</title><rect x="10.0262%" y="533" width="0.1048%" height="15" fill="rgb(229,206,30)" fg:x="957" fg:w="10"/><text x="10.2762%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="10.1100%" y="517" width="0.0210%" height="15" fill="rgb(212,67,47)" fg:x="965" fg:w="2"/><text x="10.3600%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (37 samples, 0.39%)</title><rect x="9.7643%" y="597" width="0.3876%" height="15" fill="rgb(211,96,50)" fg:x="932" fg:w="37"/><text x="10.0143%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="10.1310%" y="581" width="0.0210%" height="15" fill="rgb(252,114,18)" fg:x="967" fg:w="2"/><text x="10.3810%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="10.1310%" y="565" width="0.0210%" height="15" fill="rgb(223,58,37)" fg:x="967" fg:w="2"/><text x="10.3810%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="10.1414%" y="549" width="0.0105%" height="15" fill="rgb(237,70,4)" fg:x="968" fg:w="1"/><text x="10.3914%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="10.1414%" y="533" width="0.0105%" height="15" fill="rgb(244,85,46)" fg:x="968" fg:w="1"/><text x="10.3914%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="10.1938%" y="565" width="0.0419%" height="15" fill="rgb(223,39,52)" fg:x="973" fg:w="4"/><text x="10.4438%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="10.1938%" y="549" width="0.0419%" height="15" fill="rgb(218,200,14)" fg:x="973" fg:w="4"/><text x="10.4438%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="10.2148%" y="533" width="0.0210%" height="15" fill="rgb(208,171,16)" fg:x="975" fg:w="2"/><text x="10.4648%" y="543.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="10.2148%" y="517" width="0.0210%" height="15" fill="rgb(234,200,18)" fg:x="975" fg:w="2"/><text x="10.4648%" y="527.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.14%)</title><rect x="10.2357%" y="565" width="0.1362%" height="15" fill="rgb(228,45,11)" fg:x="977" fg:w="13"/><text x="10.4857%" y="575.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (13 samples, 0.14%)</title><rect x="10.2357%" y="549" width="0.1362%" height="15" fill="rgb(237,182,11)" fg:x="977" fg:w="13"/><text x="10.4857%" y="559.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="10.3719%" y="517" width="0.0105%" height="15" fill="rgb(241,175,49)" fg:x="990" fg:w="1"/><text x="10.6219%" y="527.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (7 samples, 0.07%)</title><rect x="10.3824%" y="517" width="0.0733%" height="15" fill="rgb(247,38,35)" fg:x="991" fg:w="7"/><text x="10.6324%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.07%)</title><rect x="10.3824%" y="501" width="0.0733%" height="15" fill="rgb(228,39,49)" fg:x="991" fg:w="7"/><text x="10.6324%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.07%)</title><rect x="10.3824%" y="485" width="0.0733%" height="15" fill="rgb(226,101,26)" fg:x="991" fg:w="7"/><text x="10.6324%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (68 samples, 0.71%)</title><rect x="9.7538%" y="645" width="0.7124%" height="15" fill="rgb(206,141,19)" fg:x="931" fg:w="68"/><text x="10.0038%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (68 samples, 0.71%)</title><rect x="9.7538%" y="629" width="0.7124%" height="15" fill="rgb(211,200,13)" fg:x="931" fg:w="68"/><text x="10.0038%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (67 samples, 0.70%)</title><rect x="9.7643%" y="613" width="0.7019%" height="15" fill="rgb(241,121,6)" fg:x="932" fg:w="67"/><text x="10.0143%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (30 samples, 0.31%)</title><rect x="10.1519%" y="597" width="0.3143%" height="15" fill="rgb(234,221,29)" fg:x="969" fg:w="30"/><text x="10.4019%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (30 samples, 0.31%)</title><rect x="10.1519%" y="581" width="0.3143%" height="15" fill="rgb(229,136,5)" fg:x="969" fg:w="30"/><text x="10.4019%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (9 samples, 0.09%)</title><rect x="10.3719%" y="565" width="0.0943%" height="15" fill="rgb(238,36,11)" fg:x="990" fg:w="9"/><text x="10.6219%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (9 samples, 0.09%)</title><rect x="10.3719%" y="549" width="0.0943%" height="15" fill="rgb(251,55,41)" fg:x="990" fg:w="9"/><text x="10.6219%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (9 samples, 0.09%)</title><rect x="10.3719%" y="533" width="0.0943%" height="15" fill="rgb(242,34,40)" fg:x="990" fg:w="9"/><text x="10.6219%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="10.4557%" y="517" width="0.0105%" height="15" fill="rgb(215,42,17)" fg:x="998" fg:w="1"/><text x="10.7057%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="10.4557%" y="501" width="0.0105%" height="15" fill="rgb(207,44,46)" fg:x="998" fg:w="1"/><text x="10.7057%" y="511.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="10.4557%" y="485" width="0.0105%" height="15" fill="rgb(211,206,28)" fg:x="998" fg:w="1"/><text x="10.7057%" y="495.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="10.4557%" y="469" width="0.0105%" height="15" fill="rgb(237,167,16)" fg:x="998" fg:w="1"/><text x="10.7057%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.02%)</title><rect x="10.5605%" y="453" width="0.0210%" height="15" fill="rgb(233,66,6)" fg:x="1008" fg:w="2"/><text x="10.8105%" y="463.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="10.5815%" y="453" width="0.0210%" height="15" fill="rgb(246,123,29)" fg:x="1010" fg:w="2"/><text x="10.8315%" y="463.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.06%)</title><rect x="10.5500%" y="469" width="0.0629%" height="15" fill="rgb(209,62,40)" fg:x="1007" fg:w="6"/><text x="10.8000%" y="479.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="10.6024%" y="453" width="0.0105%" height="15" fill="rgb(218,4,25)" fg:x="1012" fg:w="1"/><text x="10.8524%" y="463.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (3 samples, 0.03%)</title><rect x="10.6129%" y="469" width="0.0314%" height="15" fill="rgb(253,91,49)" fg:x="1013" fg:w="3"/><text x="10.8629%" y="479.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (15 samples, 0.16%)</title><rect x="10.5081%" y="485" width="0.1572%" height="15" fill="rgb(228,155,29)" fg:x="1003" fg:w="15"/><text x="10.7581%" y="495.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="10.6443%" y="469" width="0.0210%" height="15" fill="rgb(243,57,37)" fg:x="1016" fg:w="2"/><text x="10.8943%" y="479.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (18 samples, 0.19%)</title><rect x="10.4976%" y="581" width="0.1886%" height="15" fill="rgb(244,167,17)" fg:x="1002" fg:w="18"/><text x="10.7476%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (18 samples, 0.19%)</title><rect x="10.4976%" y="565" width="0.1886%" height="15" fill="rgb(207,181,38)" fg:x="1002" fg:w="18"/><text x="10.7476%" y="575.50"></text></g><g><title>core::hash::Hasher::write_i64 (17 samples, 0.18%)</title><rect x="10.5081%" y="549" width="0.1781%" height="15" fill="rgb(211,8,23)" fg:x="1003" fg:w="17"/><text x="10.7581%" y="559.50"></text></g><g><title>core::hash::Hasher::write_u64 (17 samples, 0.18%)</title><rect x="10.5081%" y="533" width="0.1781%" height="15" fill="rgb(235,11,44)" fg:x="1003" fg:w="17"/><text x="10.7581%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (17 samples, 0.18%)</title><rect x="10.5081%" y="517" width="0.1781%" height="15" fill="rgb(248,18,52)" fg:x="1003" fg:w="17"/><text x="10.7581%" y="527.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (17 samples, 0.18%)</title><rect x="10.5081%" y="501" width="0.1781%" height="15" fill="rgb(208,4,7)" fg:x="1003" fg:w="17"/><text x="10.7581%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.02%)</title><rect x="10.6653%" y="485" width="0.0210%" height="15" fill="rgb(240,17,39)" fg:x="1018" fg:w="2"/><text x="10.9153%" y="495.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="10.7072%" y="517" width="0.0210%" height="15" fill="rgb(207,170,3)" fg:x="1022" fg:w="2"/><text x="10.9572%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.06%)</title><rect x="10.6862%" y="533" width="0.0629%" height="15" fill="rgb(236,100,52)" fg:x="1020" fg:w="6"/><text x="10.9362%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="10.7281%" y="517" width="0.0210%" height="15" fill="rgb(246,78,51)" fg:x="1024" fg:w="2"/><text x="10.9781%" y="527.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="10.7491%" y="517" width="0.0314%" height="15" fill="rgb(211,17,15)" fg:x="1026" fg:w="3"/><text x="10.9991%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.12%)</title><rect x="10.6862%" y="581" width="0.1152%" height="15" fill="rgb(209,59,46)" fg:x="1020" fg:w="11"/><text x="10.9362%" y="591.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.12%)</title><rect x="10.6862%" y="565" width="0.1152%" height="15" fill="rgb(210,92,25)" fg:x="1020" fg:w="11"/><text x="10.9362%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.12%)</title><rect x="10.6862%" y="549" width="0.1152%" height="15" fill="rgb(238,174,52)" fg:x="1020" fg:w="11"/><text x="10.9362%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (5 samples, 0.05%)</title><rect x="10.7491%" y="533" width="0.0524%" height="15" fill="rgb(230,73,7)" fg:x="1026" fg:w="5"/><text x="10.9991%" y="543.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="10.7805%" y="517" width="0.0210%" height="15" fill="rgb(243,124,40)" fg:x="1029" fg:w="2"/><text x="11.0305%" y="527.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="10.8015%" y="581" width="0.0105%" height="15" fill="rgb(244,170,11)" fg:x="1031" fg:w="1"/><text x="11.0515%" y="591.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="10.8015%" y="565" width="0.0105%" height="15" fill="rgb(207,114,54)" fg:x="1031" fg:w="1"/><text x="11.0515%" y="575.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="10.8015%" y="549" width="0.0105%" height="15" fill="rgb(205,42,20)" fg:x="1031" fg:w="1"/><text x="11.0515%" y="559.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="10.8015%" y="533" width="0.0105%" height="15" fill="rgb(230,30,28)" fg:x="1031" fg:w="1"/><text x="11.0515%" y="543.50"></text></g><g><title>hashbrown::map::make_hash (32 samples, 0.34%)</title><rect x="10.4976%" y="597" width="0.3353%" height="15" fill="rgb(205,73,54)" fg:x="1002" fg:w="32"/><text x="10.7476%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="10.8119%" y="581" width="0.0210%" height="15" fill="rgb(254,227,23)" fg:x="1032" fg:w="2"/><text x="11.0619%" y="591.50"></text></g><g><title>engine::movement::pathing::move_weights (1 samples, 0.01%)</title><rect x="10.8329%" y="581" width="0.0105%" height="15" fill="rgb(228,202,34)" fg:x="1034" fg:w="1"/><text x="11.0829%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="10.8539%" y="565" width="0.0105%" height="15" fill="rgb(222,225,37)" fg:x="1036" fg:w="1"/><text x="11.1039%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="10.8539%" y="549" width="0.0105%" height="15" fill="rgb(221,14,54)" fg:x="1036" fg:w="1"/><text x="11.1039%" y="559.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.02%)</title><rect x="10.8643%" y="565" width="0.0210%" height="15" fill="rgb(254,102,2)" fg:x="1037" fg:w="2"/><text x="11.1143%" y="575.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="10.8643%" y="549" width="0.0210%" height="15" fill="rgb(232,104,17)" fg:x="1037" fg:w="2"/><text x="11.1143%" y="559.50"></text></g><g><title>engine::movement::pathing::move_weights (148 samples, 1.55%)</title><rect x="9.3452%" y="677" width="1.5506%" height="15" fill="rgb(250,220,14)" fg:x="892" fg:w="148"/><text x="9.5952%" y="687.50"></text></g><g><title>engine::movement::pathing::tile_weight (109 samples, 1.14%)</title><rect x="9.7538%" y="661" width="1.1420%" height="15" fill="rgb(241,158,9)" fg:x="931" fg:w="109"/><text x="10.0038%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (41 samples, 0.43%)</title><rect x="10.4662%" y="645" width="0.4295%" height="15" fill="rgb(246,9,43)" fg:x="999" fg:w="41"/><text x="10.7162%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (41 samples, 0.43%)</title><rect x="10.4662%" y="629" width="0.4295%" height="15" fill="rgb(206,73,33)" fg:x="999" fg:w="41"/><text x="10.7162%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (41 samples, 0.43%)</title><rect x="10.4662%" y="613" width="0.4295%" height="15" fill="rgb(222,79,8)" fg:x="999" fg:w="41"/><text x="10.7162%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.06%)</title><rect x="10.8329%" y="597" width="0.0629%" height="15" fill="rgb(234,8,54)" fg:x="1034" fg:w="6"/><text x="11.0829%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.05%)</title><rect x="10.8434%" y="581" width="0.0524%" height="15" fill="rgb(209,134,38)" fg:x="1035" fg:w="5"/><text x="11.0934%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="10.8853%" y="565" width="0.0105%" height="15" fill="rgb(230,127,29)" fg:x="1039" fg:w="1"/><text x="11.1353%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="10.8853%" y="549" width="0.0105%" height="15" fill="rgb(242,44,41)" fg:x="1039" fg:w="1"/><text x="11.1353%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="10.8853%" y="533" width="0.0105%" height="15" fill="rgb(222,56,43)" fg:x="1039" fg:w="1"/><text x="11.1353%" y="543.50"></text></g><g><title>engine::movement::pathing::plan_path::{{closure}} (151 samples, 1.58%)</title><rect x="9.3452%" y="693" width="1.5820%" height="15" fill="rgb(238,39,47)" fg:x="892" fg:w="151"/><text x="9.5952%" y="703.50"></text></g><g><title>pathfinding::utils::absdiff (3 samples, 0.03%)</title><rect x="10.8958%" y="677" width="0.0314%" height="15" fill="rgb(226,79,43)" fg:x="1040" fg:w="3"/><text x="11.1458%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (3 samples, 0.03%)</title><rect x="10.8958%" y="661" width="0.0314%" height="15" fill="rgb(242,105,53)" fg:x="1040" fg:w="3"/><text x="11.1458%" y="671.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="10.9272%" y="677" width="0.0105%" height="15" fill="rgb(251,132,46)" fg:x="1043" fg:w="1"/><text x="11.1772%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="10.9900%" y="549" width="0.0210%" height="15" fill="rgb(231,77,14)" fg:x="1049" fg:w="2"/><text x="11.2400%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="11.0005%" y="533" width="0.0105%" height="15" fill="rgb(240,135,9)" fg:x="1050" fg:w="1"/><text x="11.2505%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="11.0110%" y="549" width="0.0105%" height="15" fill="rgb(248,109,14)" fg:x="1051" fg:w="1"/><text x="11.2610%" y="559.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="10.9586%" y="565" width="0.0943%" height="15" fill="rgb(227,146,52)" fg:x="1046" fg:w="9"/><text x="11.2086%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.03%)</title><rect x="11.0215%" y="549" width="0.0314%" height="15" fill="rgb(232,54,3)" fg:x="1052" fg:w="3"/><text x="11.2715%" y="559.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (17 samples, 0.18%)</title><rect x="10.9377%" y="661" width="0.1781%" height="15" fill="rgb(229,201,43)" fg:x="1044" fg:w="17"/><text x="11.1877%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (17 samples, 0.18%)</title><rect x="10.9377%" y="645" width="0.1781%" height="15" fill="rgb(252,161,33)" fg:x="1044" fg:w="17"/><text x="11.1877%" y="655.50"></text></g><g><title>core::hash::Hasher::write_i64 (16 samples, 0.17%)</title><rect x="10.9481%" y="629" width="0.1676%" height="15" fill="rgb(226,146,40)" fg:x="1045" fg:w="16"/><text x="11.1981%" y="639.50"></text></g><g><title>core::hash::Hasher::write_u64 (16 samples, 0.17%)</title><rect x="10.9481%" y="613" width="0.1676%" height="15" fill="rgb(219,47,25)" fg:x="1045" fg:w="16"/><text x="11.1981%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (15 samples, 0.16%)</title><rect x="10.9586%" y="597" width="0.1572%" height="15" fill="rgb(250,135,13)" fg:x="1046" fg:w="15"/><text x="11.2086%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (15 samples, 0.16%)</title><rect x="10.9586%" y="581" width="0.1572%" height="15" fill="rgb(219,229,18)" fg:x="1046" fg:w="15"/><text x="11.2086%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (6 samples, 0.06%)</title><rect x="11.0529%" y="565" width="0.0629%" height="15" fill="rgb(217,152,27)" fg:x="1055" fg:w="6"/><text x="11.3029%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="11.1158%" y="613" width="0.0210%" height="15" fill="rgb(225,71,47)" fg:x="1061" fg:w="2"/><text x="11.3658%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="11.1262%" y="597" width="0.0105%" height="15" fill="rgb(220,139,14)" fg:x="1062" fg:w="1"/><text x="11.3762%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.06%)</title><rect x="11.1472%" y="597" width="0.0629%" height="15" fill="rgb(247,54,32)" fg:x="1064" fg:w="6"/><text x="11.3972%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (12 samples, 0.13%)</title><rect x="11.1158%" y="661" width="0.1257%" height="15" fill="rgb(252,131,39)" fg:x="1061" fg:w="12"/><text x="11.3658%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (12 samples, 0.13%)</title><rect x="11.1158%" y="645" width="0.1257%" height="15" fill="rgb(210,108,39)" fg:x="1061" fg:w="12"/><text x="11.3658%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (12 samples, 0.13%)</title><rect x="11.1158%" y="629" width="0.1257%" height="15" fill="rgb(205,23,29)" fg:x="1061" fg:w="12"/><text x="11.3658%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (10 samples, 0.10%)</title><rect x="11.1367%" y="613" width="0.1048%" height="15" fill="rgb(246,139,46)" fg:x="1063" fg:w="10"/><text x="11.3867%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="11.2101%" y="597" width="0.0314%" height="15" fill="rgb(250,81,26)" fg:x="1070" fg:w="3"/><text x="11.4601%" y="607.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (31 samples, 0.32%)</title><rect x="10.9377%" y="677" width="0.3248%" height="15" fill="rgb(214,104,7)" fg:x="1044" fg:w="31"/><text x="11.1877%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="11.2415%" y="661" width="0.0210%" height="15" fill="rgb(233,189,8)" fg:x="1073" fg:w="2"/><text x="11.4915%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::inner::ProbeSeq as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="11.3567%" y="613" width="0.0105%" height="15" fill="rgb(228,141,17)" fg:x="1084" fg:w="1"/><text x="11.6067%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="11.3672%" y="613" width="0.0314%" height="15" fill="rgb(247,157,1)" fg:x="1085" fg:w="3"/><text x="11.6172%" y="623.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="11.3882%" y="597" width="0.0105%" height="15" fill="rgb(249,225,5)" fg:x="1087" fg:w="1"/><text x="11.6382%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="11.3463%" y="629" width="0.0629%" height="15" fill="rgb(242,55,13)" fg:x="1083" fg:w="6"/><text x="11.5963%" y="639.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (1 samples, 0.01%)</title><rect x="11.3986%" y="613" width="0.0105%" height="15" fill="rgb(230,49,50)" fg:x="1088" fg:w="1"/><text x="11.6486%" y="623.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="11.3986%" y="597" width="0.0105%" height="15" fill="rgb(241,111,38)" fg:x="1088" fg:w="1"/><text x="11.6486%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="11.3986%" y="581" width="0.0105%" height="15" fill="rgb(252,155,4)" fg:x="1088" fg:w="1"/><text x="11.6486%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::probe_seq (2 samples, 0.02%)</title><rect x="11.4091%" y="597" width="0.0210%" height="15" fill="rgb(212,69,32)" fg:x="1089" fg:w="2"/><text x="11.6591%" y="607.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (1 samples, 0.01%)</title><rect x="11.4301%" y="597" width="0.0105%" height="15" fill="rgb(243,107,47)" fg:x="1091" fg:w="1"/><text x="11.6801%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="11.4301%" y="581" width="0.0105%" height="15" fill="rgb(247,130,12)" fg:x="1091" fg:w="1"/><text x="11.6801%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="11.4301%" y="565" width="0.0105%" height="15" fill="rgb(233,74,16)" fg:x="1091" fg:w="1"/><text x="11.6801%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (2 samples, 0.02%)</title><rect x="11.4405%" y="581" width="0.0210%" height="15" fill="rgb(208,58,18)" fg:x="1092" fg:w="2"/><text x="11.6905%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::iter_hash (6 samples, 0.06%)</title><rect x="11.4091%" y="629" width="0.0629%" height="15" fill="rgb(242,225,1)" fg:x="1089" fg:w="6"/><text x="11.6591%" y="639.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T&gt;::new (6 samples, 0.06%)</title><rect x="11.4091%" y="613" width="0.0629%" height="15" fill="rgb(249,39,40)" fg:x="1089" fg:w="6"/><text x="11.6591%" y="623.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (3 samples, 0.03%)</title><rect x="11.4405%" y="597" width="0.0314%" height="15" fill="rgb(207,72,44)" fg:x="1092" fg:w="3"/><text x="11.6905%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="11.4615%" y="581" width="0.0105%" height="15" fill="rgb(215,193,12)" fg:x="1094" fg:w="1"/><text x="11.7115%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="11.4615%" y="565" width="0.0105%" height="15" fill="rgb(248,41,39)" fg:x="1094" fg:w="1"/><text x="11.7115%" y="575.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="11.4615%" y="549" width="0.0105%" height="15" fill="rgb(253,85,4)" fg:x="1094" fg:w="1"/><text x="11.7115%" y="559.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (55 samples, 0.58%)</title><rect x="10.9272%" y="693" width="0.5762%" height="15" fill="rgb(243,70,31)" fg:x="1043" fg:w="55"/><text x="11.1772%" y="703.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (23 samples, 0.24%)</title><rect x="11.2624%" y="677" width="0.2410%" height="15" fill="rgb(253,195,26)" fg:x="1075" fg:w="23"/><text x="11.5124%" y="687.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::find_equivalent (21 samples, 0.22%)</title><rect x="11.2834%" y="661" width="0.2200%" height="15" fill="rgb(243,42,11)" fg:x="1077" fg:w="21"/><text x="11.5334%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find (21 samples, 0.22%)</title><rect x="11.2834%" y="645" width="0.2200%" height="15" fill="rgb(239,66,17)" fg:x="1077" fg:w="21"/><text x="11.5334%" y="655.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::find_equivalent::{{closure}} (3 samples, 0.03%)</title><rect x="11.4720%" y="629" width="0.0314%" height="15" fill="rgb(217,132,21)" fg:x="1095" fg:w="3"/><text x="11.7220%" y="639.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (3 samples, 0.03%)</title><rect x="11.4720%" y="613" width="0.0314%" height="15" fill="rgb(252,202,21)" fg:x="1095" fg:w="3"/><text x="11.7220%" y="623.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="11.4720%" y="597" width="0.0314%" height="15" fill="rgb(233,98,36)" fg:x="1095" fg:w="3"/><text x="11.7220%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find_insert_slot (1 samples, 0.01%)</title><rect x="11.5034%" y="645" width="0.0105%" height="15" fill="rgb(216,153,54)" fg:x="1098" fg:w="1"/><text x="11.7534%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="11.5244%" y="533" width="0.0105%" height="15" fill="rgb(250,99,7)" fg:x="1100" fg:w="1"/><text x="11.7744%" y="543.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="11.5244%" y="517" width="0.0105%" height="15" fill="rgb(207,56,50)" fg:x="1100" fg:w="1"/><text x="11.7744%" y="527.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="11.5244%" y="501" width="0.0105%" height="15" fill="rgb(244,61,34)" fg:x="1100" fg:w="1"/><text x="11.7744%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;core::mem::manually_drop::ManuallyDrop&lt;hashbrown::raw::inner::RawTable&lt;usize&gt;&gt;,hashbrown::raw::inner::RawTable&lt;usize&gt;::resize&lt;indexmap::map::core::get_hash&lt;engine::movement::pathing::Position,(usize,u32)&gt;::{{closure}}&gt;::{{closure}}&gt;&gt; (2 samples, 0.02%)</title><rect x="11.5244%" y="597" width="0.0210%" height="15" fill="rgb(241,50,38)" fg:x="1100" fg:w="2"/><text x="11.7744%" y="607.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="11.5244%" y="581" width="0.0210%" height="15" fill="rgb(212,166,30)" fg:x="1100" fg:w="2"/><text x="11.7744%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize::{{closure}} (2 samples, 0.02%)</title><rect x="11.5244%" y="565" width="0.0210%" height="15" fill="rgb(249,127,32)" fg:x="1100" fg:w="2"/><text x="11.7744%" y="575.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::free_buckets (2 samples, 0.02%)</title><rect x="11.5244%" y="549" width="0.0210%" height="15" fill="rgb(209,103,0)" fg:x="1100" fg:w="2"/><text x="11.7744%" y="559.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::buckets (1 samples, 0.01%)</title><rect x="11.5348%" y="533" width="0.0105%" height="15" fill="rgb(238,209,51)" fg:x="1101" fg:w="1"/><text x="11.7848%" y="543.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::copy_from_nonoverlapping (1 samples, 0.01%)</title><rect x="11.5453%" y="597" width="0.0105%" height="15" fill="rgb(237,56,23)" fg:x="1102" fg:w="1"/><text x="11.7953%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (1 samples, 0.01%)</title><rect x="11.5453%" y="581" width="0.0105%" height="15" fill="rgb(215,153,46)" fg:x="1102" fg:w="1"/><text x="11.7953%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="11.5453%" y="565" width="0.0105%" height="15" fill="rgb(224,49,31)" fg:x="1102" fg:w="1"/><text x="11.7953%" y="575.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (2 samples, 0.02%)</title><rect x="11.5558%" y="597" width="0.0210%" height="15" fill="rgb(250,18,42)" fg:x="1103" fg:w="2"/><text x="11.8058%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="11.5558%" y="581" width="0.0210%" height="15" fill="rgb(215,176,39)" fg:x="1103" fg:w="2"/><text x="11.8058%" y="591.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="11.5558%" y="565" width="0.0210%" height="15" fill="rgb(223,77,29)" fg:x="1103" fg:w="2"/><text x="11.8058%" y="575.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="11.5558%" y="549" width="0.0210%" height="15" fill="rgb(234,94,52)" fg:x="1103" fg:w="2"/><text x="11.8058%" y="559.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="11.5663%" y="533" width="0.0105%" height="15" fill="rgb(220,154,50)" fg:x="1104" fg:w="1"/><text x="11.8163%" y="543.50"></text></g><g><title>hashbrown::raw::inner::is_full (2 samples, 0.02%)</title><rect x="11.6082%" y="581" width="0.0210%" height="15" fill="rgb(212,11,10)" fg:x="1108" fg:w="2"/><text x="11.8582%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find_insert_slot (6 samples, 0.06%)</title><rect x="11.5767%" y="597" width="0.0629%" height="15" fill="rgb(205,166,19)" fg:x="1105" fg:w="6"/><text x="11.8267%" y="607.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="11.6291%" y="581" width="0.0105%" height="15" fill="rgb(244,198,16)" fg:x="1110" fg:w="1"/><text x="11.8791%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="11.6291%" y="565" width="0.0105%" height="15" fill="rgb(219,69,12)" fg:x="1110" fg:w="1"/><text x="11.8791%" y="575.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="11.6396%" y="597" width="0.0210%" height="15" fill="rgb(245,30,7)" fg:x="1111" fg:w="2"/><text x="11.8896%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (16 samples, 0.17%)</title><rect x="11.5034%" y="661" width="0.1676%" height="15" fill="rgb(218,221,48)" fg:x="1098" fg:w="16"/><text x="11.7534%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (15 samples, 0.16%)</title><rect x="11.5139%" y="645" width="0.1572%" height="15" fill="rgb(216,66,15)" fg:x="1099" fg:w="15"/><text x="11.7639%" y="655.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (15 samples, 0.16%)</title><rect x="11.5139%" y="629" width="0.1572%" height="15" fill="rgb(226,122,50)" fg:x="1099" fg:w="15"/><text x="11.7639%" y="639.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize (15 samples, 0.16%)</title><rect x="11.5139%" y="613" width="0.1572%" height="15" fill="rgb(239,156,16)" fg:x="1099" fg:w="15"/><text x="11.7639%" y="623.50"></text></g><g><title>indexmap::map::core::get_hash::{{closure}} (1 samples, 0.01%)</title><rect x="11.6606%" y="597" width="0.0105%" height="15" fill="rgb(224,27,38)" fg:x="1113" fg:w="1"/><text x="11.9106%" y="607.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="11.7129%" y="469" width="0.0105%" height="15" fill="rgb(224,39,27)" fg:x="1118" fg:w="1"/><text x="11.9629%" y="479.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (22 samples, 0.23%)</title><rect x="11.5034%" y="693" width="0.2305%" height="15" fill="rgb(215,92,29)" fg:x="1098" fg:w="22"/><text x="11.7534%" y="703.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (22 samples, 0.23%)</title><rect x="11.5034%" y="677" width="0.2305%" height="15" fill="rgb(207,159,16)" fg:x="1098" fg:w="22"/><text x="11.7534%" y="687.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (6 samples, 0.06%)</title><rect x="11.6710%" y="661" width="0.0629%" height="15" fill="rgb(238,163,47)" fg:x="1114" fg:w="6"/><text x="11.9210%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (6 samples, 0.06%)</title><rect x="11.6710%" y="645" width="0.0629%" height="15" fill="rgb(219,91,49)" fg:x="1114" fg:w="6"/><text x="11.9210%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (6 samples, 0.06%)</title><rect x="11.6710%" y="629" width="0.0629%" height="15" fill="rgb(227,167,31)" fg:x="1114" fg:w="6"/><text x="11.9210%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (6 samples, 0.06%)</title><rect x="11.6710%" y="613" width="0.0629%" height="15" fill="rgb(234,80,54)" fg:x="1114" fg:w="6"/><text x="11.9210%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (6 samples, 0.06%)</title><rect x="11.6710%" y="597" width="0.0629%" height="15" fill="rgb(212,114,2)" fg:x="1114" fg:w="6"/><text x="11.9210%" y="607.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.06%)</title><rect x="11.6710%" y="581" width="0.0629%" height="15" fill="rgb(234,50,24)" fg:x="1114" fg:w="6"/><text x="11.9210%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.06%)</title><rect x="11.6710%" y="565" width="0.0629%" height="15" fill="rgb(221,68,8)" fg:x="1114" fg:w="6"/><text x="11.9210%" y="575.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.06%)</title><rect x="11.6710%" y="549" width="0.0629%" height="15" fill="rgb(254,180,31)" fg:x="1114" fg:w="6"/><text x="11.9210%" y="559.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.06%)</title><rect x="11.6710%" y="533" width="0.0629%" height="15" fill="rgb(247,130,50)" fg:x="1114" fg:w="6"/><text x="11.9210%" y="543.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.06%)</title><rect x="11.6710%" y="517" width="0.0629%" height="15" fill="rgb(211,109,4)" fg:x="1114" fg:w="6"/><text x="11.9210%" y="527.50"></text></g><g><title>_int_realloc (5 samples, 0.05%)</title><rect x="11.6815%" y="501" width="0.0524%" height="15" fill="rgb(238,50,21)" fg:x="1115" fg:w="5"/><text x="11.9315%" y="511.50"></text></g><g><title>_int_malloc (5 samples, 0.05%)</title><rect x="11.6815%" y="485" width="0.0524%" height="15" fill="rgb(225,57,45)" fg:x="1115" fg:w="5"/><text x="11.9315%" y="495.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="11.7234%" y="469" width="0.0105%" height="15" fill="rgb(209,196,50)" fg:x="1119" fg:w="1"/><text x="11.9734%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="11.7339%" y="613" width="0.0105%" height="15" fill="rgb(242,140,13)" fg:x="1120" fg:w="1"/><text x="11.9839%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1 samples, 0.01%)</title><rect x="11.7339%" y="597" width="0.0105%" height="15" fill="rgb(217,111,7)" fg:x="1120" fg:w="1"/><text x="11.9839%" y="607.50"></text></g><g><title>&lt;itertools::sources::Unfold&lt;St,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="11.7339%" y="581" width="0.0105%" height="15" fill="rgb(253,193,51)" fg:x="1120" fg:w="1"/><text x="11.9839%" y="591.50"></text></g><g><title>pathfinding::directed::reverse_path::{{closure}} (1 samples, 0.01%)</title><rect x="11.7339%" y="565" width="0.0105%" height="15" fill="rgb(252,70,29)" fg:x="1120" fg:w="1"/><text x="11.9839%" y="575.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (1 samples, 0.01%)</title><rect x="11.7339%" y="549" width="0.0105%" height="15" fill="rgb(232,127,12)" fg:x="1120" fg:w="1"/><text x="11.9839%" y="559.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="11.7339%" y="533" width="0.0105%" height="15" fill="rgb(211,180,21)" fg:x="1120" fg:w="1"/><text x="11.9839%" y="543.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="11.7339%" y="517" width="0.0105%" height="15" fill="rgb(229,72,13)" fg:x="1120" fg:w="1"/><text x="11.9839%" y="527.50"></text></g><g><title>engine::movement::pathing::plan_path (264 samples, 2.77%)</title><rect x="8.9890%" y="725" width="2.7658%" height="15" fill="rgb(240,211,49)" fg:x="858" fg:w="264"/><text x="9.2390%" y="735.50">en..</text></g><g><title>pathfinding::directed::astar::astar (264 samples, 2.77%)</title><rect x="8.9890%" y="709" width="2.7658%" height="15" fill="rgb(219,149,40)" fg:x="858" fg:w="264"/><text x="9.2390%" y="719.50">pa..</text></g><g><title>pathfinding::directed::reverse_path (2 samples, 0.02%)</title><rect x="11.7339%" y="693" width="0.0210%" height="15" fill="rgb(210,127,46)" fg:x="1120" fg:w="2"/><text x="11.9839%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="11.7339%" y="677" width="0.0210%" height="15" fill="rgb(220,106,7)" fg:x="1120" fg:w="2"/><text x="11.9839%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="11.7339%" y="661" width="0.0210%" height="15" fill="rgb(249,31,22)" fg:x="1120" fg:w="2"/><text x="11.9839%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="11.7339%" y="645" width="0.0210%" height="15" fill="rgb(253,1,49)" fg:x="1120" fg:w="2"/><text x="11.9839%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="11.7339%" y="629" width="0.0210%" height="15" fill="rgb(227,144,33)" fg:x="1120" fg:w="2"/><text x="11.9839%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="11.7444%" y="613" width="0.0105%" height="15" fill="rgb(249,163,44)" fg:x="1121" fg:w="1"/><text x="11.9944%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="11.7444%" y="597" width="0.0105%" height="15" fill="rgb(234,15,39)" fg:x="1121" fg:w="1"/><text x="11.9944%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="11.7444%" y="581" width="0.0105%" height="15" fill="rgb(207,66,16)" fg:x="1121" fg:w="1"/><text x="11.9944%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="11.7444%" y="565" width="0.0105%" height="15" fill="rgb(233,112,24)" fg:x="1121" fg:w="1"/><text x="11.9944%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="11.7444%" y="549" width="0.0105%" height="15" fill="rgb(230,90,22)" fg:x="1121" fg:w="1"/><text x="11.9944%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="11.7444%" y="533" width="0.0105%" height="15" fill="rgb(229,61,13)" fg:x="1121" fg:w="1"/><text x="11.9944%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="11.7444%" y="517" width="0.0105%" height="15" fill="rgb(225,57,24)" fg:x="1121" fg:w="1"/><text x="11.9944%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="11.7444%" y="501" width="0.0105%" height="15" fill="rgb(208,169,48)" fg:x="1121" fg:w="1"/><text x="11.9944%" y="511.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="11.7548%" y="549" width="0.0105%" height="15" fill="rgb(244,218,51)" fg:x="1122" fg:w="1"/><text x="12.0048%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="11.7548%" y="533" width="0.0105%" height="15" fill="rgb(214,148,10)" fg:x="1122" fg:w="1"/><text x="12.0048%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="11.7548%" y="565" width="0.0210%" height="15" fill="rgb(225,174,27)" fg:x="1122" fg:w="2"/><text x="12.0048%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="11.7653%" y="549" width="0.0105%" height="15" fill="rgb(230,96,26)" fg:x="1123" fg:w="1"/><text x="12.0153%" y="559.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="11.7548%" y="661" width="0.0314%" height="15" fill="rgb(232,10,30)" fg:x="1122" fg:w="3"/><text x="12.0048%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (3 samples, 0.03%)</title><rect x="11.7548%" y="645" width="0.0314%" height="15" fill="rgb(222,8,50)" fg:x="1122" fg:w="3"/><text x="12.0048%" y="655.50"></text></g><g><title>core::hash::Hasher::write_i64 (3 samples, 0.03%)</title><rect x="11.7548%" y="629" width="0.0314%" height="15" fill="rgb(213,81,27)" fg:x="1122" fg:w="3"/><text x="12.0048%" y="639.50"></text></g><g><title>core::hash::Hasher::write_u64 (3 samples, 0.03%)</title><rect x="11.7548%" y="613" width="0.0314%" height="15" fill="rgb(245,50,10)" fg:x="1122" fg:w="3"/><text x="12.0048%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="11.7548%" y="597" width="0.0314%" height="15" fill="rgb(216,100,18)" fg:x="1122" fg:w="3"/><text x="12.0048%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="11.7548%" y="581" width="0.0314%" height="15" fill="rgb(236,147,54)" fg:x="1122" fg:w="3"/><text x="12.0048%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="11.7758%" y="565" width="0.0105%" height="15" fill="rgb(205,143,26)" fg:x="1124" fg:w="1"/><text x="12.0258%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="11.7863%" y="613" width="0.0105%" height="15" fill="rgb(236,26,9)" fg:x="1125" fg:w="1"/><text x="12.0363%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="11.7863%" y="597" width="0.0105%" height="15" fill="rgb(221,165,53)" fg:x="1125" fg:w="1"/><text x="12.0363%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="11.7968%" y="597" width="0.0210%" height="15" fill="rgb(214,110,17)" fg:x="1126" fg:w="2"/><text x="12.0468%" y="607.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="11.7863%" y="661" width="0.0524%" height="15" fill="rgb(237,197,12)" fg:x="1125" fg:w="5"/><text x="12.0363%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="11.7863%" y="645" width="0.0524%" height="15" fill="rgb(205,84,17)" fg:x="1125" fg:w="5"/><text x="12.0363%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="11.7863%" y="629" width="0.0524%" height="15" fill="rgb(237,18,45)" fg:x="1125" fg:w="5"/><text x="12.0363%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (4 samples, 0.04%)</title><rect x="11.7968%" y="613" width="0.0419%" height="15" fill="rgb(221,87,14)" fg:x="1126" fg:w="4"/><text x="12.0468%" y="623.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="11.8177%" y="597" width="0.0210%" height="15" fill="rgb(238,186,15)" fg:x="1128" fg:w="2"/><text x="12.0677%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (10 samples, 0.10%)</title><rect x="11.7548%" y="677" width="0.1048%" height="15" fill="rgb(208,115,11)" fg:x="1122" fg:w="10"/><text x="12.0048%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="11.8387%" y="661" width="0.0210%" height="15" fill="rgb(254,175,0)" fg:x="1130" fg:w="2"/><text x="12.0887%" y="671.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="11.8387%" y="645" width="0.0210%" height="15" fill="rgb(227,24,42)" fg:x="1130" fg:w="2"/><text x="12.0887%" y="655.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (2 samples, 0.02%)</title><rect x="11.8387%" y="629" width="0.0210%" height="15" fill="rgb(223,211,37)" fg:x="1130" fg:w="2"/><text x="12.0887%" y="639.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (2 samples, 0.02%)</title><rect x="11.8387%" y="613" width="0.0210%" height="15" fill="rgb(235,49,27)" fg:x="1130" fg:w="2"/><text x="12.0887%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (13 samples, 0.14%)</title><rect x="11.7548%" y="725" width="0.1362%" height="15" fill="rgb(254,97,51)" fg:x="1122" fg:w="13"/><text x="12.0048%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (13 samples, 0.14%)</title><rect x="11.7548%" y="709" width="0.1362%" height="15" fill="rgb(249,51,40)" fg:x="1122" fg:w="13"/><text x="12.0048%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.14%)</title><rect x="11.7548%" y="693" width="0.1362%" height="15" fill="rgb(210,128,45)" fg:x="1122" fg:w="13"/><text x="12.0048%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.03%)</title><rect x="11.8596%" y="677" width="0.0314%" height="15" fill="rgb(224,137,50)" fg:x="1132" fg:w="3"/><text x="12.1096%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="11.8596%" y="661" width="0.0314%" height="15" fill="rgb(242,15,9)" fg:x="1132" fg:w="3"/><text x="12.1096%" y="671.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.02%)</title><rect x="11.8701%" y="645" width="0.0210%" height="15" fill="rgb(233,187,41)" fg:x="1133" fg:w="2"/><text x="12.1201%" y="655.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="11.8701%" y="629" width="0.0210%" height="15" fill="rgb(227,2,29)" fg:x="1133" fg:w="2"/><text x="12.1201%" y="639.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="11.8910%" y="709" width="0.0105%" height="15" fill="rgb(222,70,3)" fg:x="1135" fg:w="1"/><text x="12.1410%" y="719.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="11.8910%" y="693" width="0.0105%" height="15" fill="rgb(213,11,42)" fg:x="1135" fg:w="1"/><text x="12.1410%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="11.8910%" y="677" width="0.0105%" height="15" fill="rgb(225,150,9)" fg:x="1135" fg:w="1"/><text x="12.1410%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="11.8910%" y="661" width="0.0105%" height="15" fill="rgb(230,162,45)" fg:x="1135" fg:w="1"/><text x="12.1410%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="11.8910%" y="645" width="0.0105%" height="15" fill="rgb(222,14,52)" fg:x="1135" fg:w="1"/><text x="12.1410%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="11.8910%" y="629" width="0.0105%" height="15" fill="rgb(254,198,14)" fg:x="1135" fg:w="1"/><text x="12.1410%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="11.8910%" y="613" width="0.0105%" height="15" fill="rgb(220,217,30)" fg:x="1135" fg:w="1"/><text x="12.1410%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.03%)</title><rect x="11.8910%" y="725" width="0.0314%" height="15" fill="rgb(215,146,41)" fg:x="1135" fg:w="3"/><text x="12.1410%" y="735.50"></text></g><g><title>std::collections::hash::map::map_entry (2 samples, 0.02%)</title><rect x="11.9015%" y="709" width="0.0210%" height="15" fill="rgb(217,27,36)" fg:x="1136" fg:w="2"/><text x="12.1515%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="11.9434%" y="533" width="0.0210%" height="15" fill="rgb(219,218,39)" fg:x="1140" fg:w="2"/><text x="12.1934%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.05%)</title><rect x="11.9225%" y="549" width="0.0524%" height="15" fill="rgb(219,4,42)" fg:x="1138" fg:w="5"/><text x="12.1725%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="11.9644%" y="533" width="0.0105%" height="15" fill="rgb(249,119,36)" fg:x="1142" fg:w="1"/><text x="12.2144%" y="543.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (7 samples, 0.07%)</title><rect x="11.9225%" y="661" width="0.0733%" height="15" fill="rgb(209,23,33)" fg:x="1138" fg:w="7"/><text x="12.1725%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (7 samples, 0.07%)</title><rect x="11.9225%" y="645" width="0.0733%" height="15" fill="rgb(211,10,0)" fg:x="1138" fg:w="7"/><text x="12.1725%" y="655.50"></text></g><g><title>core::hash::Hasher::write_i64 (7 samples, 0.07%)</title><rect x="11.9225%" y="629" width="0.0733%" height="15" fill="rgb(208,99,37)" fg:x="1138" fg:w="7"/><text x="12.1725%" y="639.50"></text></g><g><title>core::hash::Hasher::write_u64 (7 samples, 0.07%)</title><rect x="11.9225%" y="613" width="0.0733%" height="15" fill="rgb(213,132,31)" fg:x="1138" fg:w="7"/><text x="12.1725%" y="623.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (7 samples, 0.07%)</title><rect x="11.9225%" y="597" width="0.0733%" height="15" fill="rgb(243,129,40)" fg:x="1138" fg:w="7"/><text x="12.1725%" y="607.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (7 samples, 0.07%)</title><rect x="11.9225%" y="581" width="0.0733%" height="15" fill="rgb(210,66,33)" fg:x="1138" fg:w="7"/><text x="12.1725%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (7 samples, 0.07%)</title><rect x="11.9225%" y="565" width="0.0733%" height="15" fill="rgb(209,189,4)" fg:x="1138" fg:w="7"/><text x="12.1725%" y="575.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="11.9749%" y="549" width="0.0210%" height="15" fill="rgb(214,107,37)" fg:x="1143" fg:w="2"/><text x="12.2249%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.08%)</title><rect x="11.9225%" y="677" width="0.0838%" height="15" fill="rgb(245,88,54)" fg:x="1138" fg:w="8"/><text x="12.1725%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="11.9958%" y="661" width="0.0105%" height="15" fill="rgb(205,146,20)" fg:x="1145" fg:w="1"/><text x="12.2458%" y="671.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="11.9958%" y="645" width="0.0105%" height="15" fill="rgb(220,161,25)" fg:x="1145" fg:w="1"/><text x="12.2458%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="11.9958%" y="629" width="0.0105%" height="15" fill="rgb(215,152,15)" fg:x="1145" fg:w="1"/><text x="12.2458%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="11.9958%" y="613" width="0.0105%" height="15" fill="rgb(233,192,44)" fg:x="1145" fg:w="1"/><text x="12.2458%" y="623.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="12.0063%" y="645" width="0.0105%" height="15" fill="rgb(240,170,46)" fg:x="1146" fg:w="1"/><text x="12.2563%" y="655.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="12.0063%" y="629" width="0.0105%" height="15" fill="rgb(207,104,33)" fg:x="1146" fg:w="1"/><text x="12.2563%" y="639.50"></text></g><g><title>engine::movement::pathing::move_actor (330 samples, 3.46%)</title><rect x="8.5699%" y="741" width="3.4573%" height="15" fill="rgb(219,21,39)" fg:x="818" fg:w="330"/><text x="8.8199%" y="751.50">eng..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (10 samples, 0.10%)</title><rect x="11.9225%" y="725" width="0.1048%" height="15" fill="rgb(214,133,29)" fg:x="1138" fg:w="10"/><text x="12.1725%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (10 samples, 0.10%)</title><rect x="11.9225%" y="709" width="0.1048%" height="15" fill="rgb(226,93,6)" fg:x="1138" fg:w="10"/><text x="12.1725%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (10 samples, 0.10%)</title><rect x="11.9225%" y="693" width="0.1048%" height="15" fill="rgb(252,222,34)" fg:x="1138" fg:w="10"/><text x="12.1725%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="12.0063%" y="677" width="0.0210%" height="15" fill="rgb(252,92,48)" fg:x="1146" fg:w="2"/><text x="12.2563%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="12.0063%" y="661" width="0.0210%" height="15" fill="rgb(245,223,24)" fg:x="1146" fg:w="2"/><text x="12.2563%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="12.0168%" y="645" width="0.0105%" height="15" fill="rgb(205,176,3)" fg:x="1147" fg:w="1"/><text x="12.2668%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="12.0168%" y="629" width="0.0105%" height="15" fill="rgb(235,151,15)" fg:x="1147" fg:w="1"/><text x="12.2668%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="12.0168%" y="613" width="0.0105%" height="15" fill="rgb(237,209,11)" fg:x="1147" fg:w="1"/><text x="12.2668%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="12.0168%" y="597" width="0.0105%" height="15" fill="rgb(243,227,24)" fg:x="1147" fg:w="1"/><text x="12.2668%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="12.0168%" y="581" width="0.0105%" height="15" fill="rgb(239,193,16)" fg:x="1147" fg:w="1"/><text x="12.2668%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="12.0168%" y="565" width="0.0105%" height="15" fill="rgb(231,27,9)" fg:x="1147" fg:w="1"/><text x="12.2668%" y="575.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="12.0168%" y="549" width="0.0105%" height="15" fill="rgb(219,169,10)" fg:x="1147" fg:w="1"/><text x="12.2668%" y="559.50"></text></g><g><title>&lt;bevy_sprite::entity::SpriteSheetBundle as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="12.0272%" y="709" width="0.0105%" height="15" fill="rgb(244,229,43)" fg:x="1148" fg:w="1"/><text x="12.2772%" y="719.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="12.0272%" y="693" width="0.0105%" height="15" fill="rgb(254,38,20)" fg:x="1148" fg:w="1"/><text x="12.2772%" y="703.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (1 samples, 0.01%)</title><rect x="12.0377%" y="661" width="0.0105%" height="15" fill="rgb(250,47,30)" fg:x="1149" fg:w="1"/><text x="12.2877%" y="671.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (1 samples, 0.01%)</title><rect x="12.0482%" y="629" width="0.0105%" height="15" fill="rgb(224,124,36)" fg:x="1150" fg:w="1"/><text x="12.2982%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.01%)</title><rect x="12.0482%" y="613" width="0.0105%" height="15" fill="rgb(246,68,51)" fg:x="1150" fg:w="1"/><text x="12.2982%" y="623.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="12.0482%" y="597" width="0.0105%" height="15" fill="rgb(253,43,49)" fg:x="1150" fg:w="1"/><text x="12.2982%" y="607.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="12.0482%" y="581" width="0.0105%" height="15" fill="rgb(219,54,36)" fg:x="1150" fg:w="1"/><text x="12.2982%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="12.0482%" y="565" width="0.0105%" height="15" fill="rgb(227,133,34)" fg:x="1150" fg:w="1"/><text x="12.2982%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="12.0482%" y="549" width="0.0105%" height="15" fill="rgb(247,227,15)" fg:x="1150" fg:w="1"/><text x="12.2982%" y="559.50"></text></g><g><title>async_task::runnable::spawn_unchecked (2 samples, 0.02%)</title><rect x="12.0587%" y="629" width="0.0210%" height="15" fill="rgb(229,96,14)" fg:x="1151" fg:w="2"/><text x="12.3087%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (2 samples, 0.02%)</title><rect x="12.0587%" y="613" width="0.0210%" height="15" fill="rgb(220,79,17)" fg:x="1151" fg:w="2"/><text x="12.3087%" y="623.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="12.0587%" y="597" width="0.0210%" height="15" fill="rgb(205,131,53)" fg:x="1151" fg:w="2"/><text x="12.3087%" y="607.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="12.0587%" y="581" width="0.0210%" height="15" fill="rgb(209,50,29)" fg:x="1151" fg:w="2"/><text x="12.3087%" y="591.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load (5 samples, 0.05%)</title><rect x="12.0377%" y="709" width="0.0524%" height="15" fill="rgb(245,86,46)" fg:x="1149" fg:w="5"/><text x="12.2877%" y="719.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untyped (5 samples, 0.05%)</title><rect x="12.0377%" y="693" width="0.0524%" height="15" fill="rgb(235,66,46)" fg:x="1149" fg:w="5"/><text x="12.2877%" y="703.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked (5 samples, 0.05%)</title><rect x="12.0377%" y="677" width="0.0524%" height="15" fill="rgb(232,148,31)" fg:x="1149" fg:w="5"/><text x="12.2877%" y="687.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::spawn (4 samples, 0.04%)</title><rect x="12.0482%" y="661" width="0.0419%" height="15" fill="rgb(217,149,8)" fg:x="1150" fg:w="4"/><text x="12.2982%" y="671.50"></text></g><g><title>async_executor::Executor::spawn (4 samples, 0.04%)</title><rect x="12.0482%" y="645" width="0.0419%" height="15" fill="rgb(209,183,11)" fg:x="1150" fg:w="4"/><text x="12.2982%" y="655.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="12.0796%" y="629" width="0.0105%" height="15" fill="rgb(208,55,20)" fg:x="1153" fg:w="1"/><text x="12.3296%" y="639.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="12.0796%" y="613" width="0.0105%" height="15" fill="rgb(218,39,14)" fg:x="1153" fg:w="1"/><text x="12.3296%" y="623.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="12.0796%" y="597" width="0.0105%" height="15" fill="rgb(216,169,33)" fg:x="1153" fg:w="1"/><text x="12.3296%" y="607.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="12.0796%" y="581" width="0.0105%" height="15" fill="rgb(233,80,24)" fg:x="1153" fg:w="1"/><text x="12.3296%" y="591.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get_handle (1 samples, 0.01%)</title><rect x="12.0901%" y="693" width="0.0105%" height="15" fill="rgb(213,179,31)" fg:x="1154" fg:w="1"/><text x="12.3401%" y="703.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::strong (1 samples, 0.01%)</title><rect x="12.0901%" y="677" width="0.0105%" height="15" fill="rgb(209,19,5)" fg:x="1154" fg:w="1"/><text x="12.3401%" y="687.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (1 samples, 0.01%)</title><rect x="12.0901%" y="661" width="0.0105%" height="15" fill="rgb(219,18,35)" fg:x="1154" fg:w="1"/><text x="12.3401%" y="671.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::add (2 samples, 0.02%)</title><rect x="12.0901%" y="709" width="0.0210%" height="15" fill="rgb(209,169,16)" fg:x="1154" fg:w="2"/><text x="12.3401%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="12.1006%" y="693" width="0.0105%" height="15" fill="rgb(245,90,51)" fg:x="1155" fg:w="1"/><text x="12.3506%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="12.1006%" y="677" width="0.0105%" height="15" fill="rgb(220,99,45)" fg:x="1155" fg:w="1"/><text x="12.3506%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="12.1006%" y="661" width="0.0105%" height="15" fill="rgb(249,89,25)" fg:x="1155" fg:w="1"/><text x="12.3506%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="12.1006%" y="645" width="0.0105%" height="15" fill="rgb(239,193,0)" fg:x="1155" fg:w="1"/><text x="12.3506%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="12.1006%" y="629" width="0.0105%" height="15" fill="rgb(231,126,1)" fg:x="1155" fg:w="1"/><text x="12.3506%" y="639.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="12.1006%" y="613" width="0.0105%" height="15" fill="rgb(243,166,3)" fg:x="1155" fg:w="1"/><text x="12.3506%" y="623.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="12.1006%" y="597" width="0.0105%" height="15" fill="rgb(223,22,34)" fg:x="1155" fg:w="1"/><text x="12.3506%" y="607.50"></text></g><g><title>engine::movement::init_sprite_sheet (9 samples, 0.09%)</title><rect x="12.0272%" y="725" width="0.0943%" height="15" fill="rgb(251,52,51)" fg:x="1148" fg:w="9"/><text x="12.2772%" y="735.50"></text></g><g><title>bevy_sprite::texture_atlas::TextureAtlas::from_grid (1 samples, 0.01%)</title><rect x="12.1111%" y="709" width="0.0105%" height="15" fill="rgb(221,165,28)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="719.50"></text></g><g><title>bevy_sprite::texture_atlas::TextureAtlas::from_grid_with_padding (1 samples, 0.01%)</title><rect x="12.1111%" y="693" width="0.0105%" height="15" fill="rgb(218,121,47)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="12.1111%" y="677" width="0.0105%" height="15" fill="rgb(209,120,9)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="12.1111%" y="661" width="0.0105%" height="15" fill="rgb(236,68,12)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="12.1111%" y="645" width="0.0105%" height="15" fill="rgb(225,194,26)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="655.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="12.1111%" y="629" width="0.0105%" height="15" fill="rgb(231,84,39)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="12.1111%" y="613" width="0.0105%" height="15" fill="rgb(210,11,45)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="623.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="12.1111%" y="597" width="0.0105%" height="15" fill="rgb(224,54,52)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="12.1111%" y="581" width="0.0105%" height="15" fill="rgb(238,102,14)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="591.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="12.1111%" y="565" width="0.0105%" height="15" fill="rgb(243,160,52)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="575.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="12.1111%" y="549" width="0.0105%" height="15" fill="rgb(216,114,19)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="559.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="12.1111%" y="533" width="0.0105%" height="15" fill="rgb(244,166,37)" fg:x="1156" fg:w="1"/><text x="12.3611%" y="543.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="12.1215%" y="661" width="0.0105%" height="15" fill="rgb(246,29,44)" fg:x="1157" fg:w="1"/><text x="12.3715%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="12.1215%" y="645" width="0.0105%" height="15" fill="rgb(215,56,53)" fg:x="1157" fg:w="1"/><text x="12.3715%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="12.1215%" y="629" width="0.0105%" height="15" fill="rgb(217,60,2)" fg:x="1157" fg:w="1"/><text x="12.3715%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="12.1215%" y="613" width="0.0105%" height="15" fill="rgb(207,26,24)" fg:x="1157" fg:w="1"/><text x="12.3715%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="12.1215%" y="597" width="0.0105%" height="15" fill="rgb(252,210,15)" fg:x="1157" fg:w="1"/><text x="12.3715%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="12.1215%" y="581" width="0.0105%" height="15" fill="rgb(253,209,26)" fg:x="1157" fg:w="1"/><text x="12.3715%" y="591.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="12.1215%" y="565" width="0.0105%" height="15" fill="rgb(238,170,14)" fg:x="1157" fg:w="1"/><text x="12.3715%" y="575.50"></text></g><g><title>engine::spawn_actor (2 samples, 0.02%)</title><rect x="12.1215%" y="725" width="0.0210%" height="15" fill="rgb(216,178,15)" fg:x="1157" fg:w="2"/><text x="12.3715%" y="735.50"></text></g><g><title>bevy_ecs::system::commands::EntityCommands::insert (2 samples, 0.02%)</title><rect x="12.1215%" y="709" width="0.0210%" height="15" fill="rgb(250,197,2)" fg:x="1157" fg:w="2"/><text x="12.3715%" y="719.50"></text></g><g><title>bevy_ecs::system::commands::Commands::add (2 samples, 0.02%)</title><rect x="12.1215%" y="693" width="0.0210%" height="15" fill="rgb(212,70,42)" fg:x="1157" fg:w="2"/><text x="12.3715%" y="703.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push (2 samples, 0.02%)</title><rect x="12.1215%" y="677" width="0.0210%" height="15" fill="rgb(227,213,9)" fg:x="1157" fg:w="2"/><text x="12.3715%" y="687.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push_boxed (1 samples, 0.01%)</title><rect x="12.1320%" y="661" width="0.0105%" height="15" fill="rgb(245,99,25)" fg:x="1158" fg:w="1"/><text x="12.3820%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="12.1320%" y="645" width="0.0105%" height="15" fill="rgb(250,82,29)" fg:x="1158" fg:w="1"/><text x="12.3820%" y="655.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="12.1320%" y="629" width="0.0105%" height="15" fill="rgb(241,226,54)" fg:x="1158" fg:w="1"/><text x="12.3820%" y="639.50"></text></g><g><title>std::io::Write::write_fmt (1 samples, 0.01%)</title><rect x="12.1425%" y="661" width="0.0105%" height="15" fill="rgb(221,99,41)" fg:x="1159" fg:w="1"/><text x="12.3925%" y="671.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="12.1425%" y="645" width="0.0105%" height="15" fill="rgb(213,90,21)" fg:x="1159" fg:w="1"/><text x="12.3925%" y="655.50"></text></g><g><title>&lt;std::io::Write::write_fmt::Adapter&lt;T&gt; as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="12.1425%" y="629" width="0.0105%" height="15" fill="rgb(205,208,24)" fg:x="1159" fg:w="1"/><text x="12.3925%" y="639.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="12.1425%" y="613" width="0.0105%" height="15" fill="rgb(246,31,12)" fg:x="1159" fg:w="1"/><text x="12.3925%" y="623.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="12.1425%" y="597" width="0.0105%" height="15" fill="rgb(213,154,6)" fg:x="1159" fg:w="1"/><text x="12.3925%" y="607.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="12.1425%" y="581" width="0.0105%" height="15" fill="rgb(222,163,29)" fg:x="1159" fg:w="1"/><text x="12.3925%" y="591.50"></text></g><g><title>std::io::buffered::bufwriter::BufWriter&lt;W&gt;::flush_buf (1 samples, 0.01%)</title><rect x="12.1425%" y="565" width="0.0105%" height="15" fill="rgb(227,201,8)" fg:x="1159" fg:w="1"/><text x="12.3925%" y="575.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="12.1425%" y="549" width="0.0105%" height="15" fill="rgb(233,9,32)" fg:x="1159" fg:w="1"/><text x="12.3925%" y="559.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="12.1425%" y="533" width="0.0105%" height="15" fill="rgb(217,54,24)" fg:x="1159" fg:w="1"/><text x="12.3925%" y="543.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.01%)</title><rect x="12.1425%" y="517" width="0.0105%" height="15" fill="rgb(235,192,0)" fg:x="1159" fg:w="1"/><text x="12.3925%" y="527.50"></text></g><g><title>__libc_write (1 samples, 0.01%)</title><rect x="12.1425%" y="501" width="0.0105%" height="15" fill="rgb(235,45,9)" fg:x="1159" fg:w="1"/><text x="12.3925%" y="511.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (354 samples, 3.71%)</title><rect x="8.4966%" y="789" width="3.7087%" height="15" fill="rgb(246,42,40)" fg:x="811" fg:w="354"/><text x="8.7466%" y="799.50">&lt;Fun..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (354 samples, 3.71%)</title><rect x="8.4966%" y="773" width="3.7087%" height="15" fill="rgb(248,111,24)" fg:x="811" fg:w="354"/><text x="8.7466%" y="783.50">core..</text></g><g><title>core::ops::function::Fn::call (354 samples, 3.71%)</title><rect x="8.4966%" y="757" width="3.7087%" height="15" fill="rgb(249,65,22)" fg:x="811" fg:w="354"/><text x="8.7466%" y="767.50">core..</text></g><g><title>game::add_people (17 samples, 0.18%)</title><rect x="12.0272%" y="741" width="0.1781%" height="15" fill="rgb(238,111,51)" fg:x="1148" fg:w="17"/><text x="12.2772%" y="751.50"></text></g><g><title>std::io::stdio::_print (6 samples, 0.06%)</title><rect x="12.1425%" y="725" width="0.0629%" height="15" fill="rgb(250,118,22)" fg:x="1159" fg:w="6"/><text x="12.3925%" y="735.50"></text></g><g><title>std::io::stdio::print_to (6 samples, 0.06%)</title><rect x="12.1425%" y="709" width="0.0629%" height="15" fill="rgb(234,84,26)" fg:x="1159" fg:w="6"/><text x="12.3925%" y="719.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (6 samples, 0.06%)</title><rect x="12.1425%" y="693" width="0.0629%" height="15" fill="rgb(243,172,12)" fg:x="1159" fg:w="6"/><text x="12.3925%" y="703.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_fmt (6 samples, 0.06%)</title><rect x="12.1425%" y="677" width="0.0629%" height="15" fill="rgb(236,150,49)" fg:x="1159" fg:w="6"/><text x="12.3925%" y="687.50"></text></g><g><title>std::io::stdio::Stdout::lock (5 samples, 0.05%)</title><rect x="12.1530%" y="661" width="0.0524%" height="15" fill="rgb(225,197,26)" fg:x="1160" fg:w="5"/><text x="12.4030%" y="671.50"></text></g><g><title>std::io::stdio::Stdout::lock_any (5 samples, 0.05%)</title><rect x="12.1530%" y="645" width="0.0524%" height="15" fill="rgb(214,17,42)" fg:x="1160" fg:w="5"/><text x="12.4030%" y="655.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (5 samples, 0.05%)</title><rect x="12.1530%" y="629" width="0.0524%" height="15" fill="rgb(224,165,40)" fg:x="1160" fg:w="5"/><text x="12.4030%" y="639.50"></text></g><g><title>std::sys::unix::mutex::ReentrantMutex::lock (5 samples, 0.05%)</title><rect x="12.1530%" y="613" width="0.0524%" height="15" fill="rgb(246,100,4)" fg:x="1160" fg:w="5"/><text x="12.4030%" y="623.50"></text></g><g><title>__GI___pthread_mutex_lock (5 samples, 0.05%)</title><rect x="12.1530%" y="597" width="0.0524%" height="15" fill="rgb(222,103,0)" fg:x="1160" fg:w="5"/><text x="12.4030%" y="607.50"></text></g><g><title>__lll_lock_wait (5 samples, 0.05%)</title><rect x="12.1530%" y="581" width="0.0524%" height="15" fill="rgb(227,189,26)" fg:x="1160" fg:w="5"/><text x="12.4030%" y="591.50"></text></g><g><title>tracing::__macro_support::MacroCallsite::register (1 samples, 0.01%)</title><rect x="12.2263%" y="677" width="0.0105%" height="15" fill="rgb(214,202,17)" fg:x="1167" fg:w="1"/><text x="12.4763%" y="687.50"></text></g><g><title>std::sync::once::Once::call_once (1 samples, 0.01%)</title><rect x="12.2263%" y="661" width="0.0105%" height="15" fill="rgb(229,111,3)" fg:x="1167" fg:w="1"/><text x="12.4763%" y="671.50"></text></g><g><title>std::sync::once::Once::is_completed (1 samples, 0.01%)</title><rect x="12.2263%" y="645" width="0.0105%" height="15" fill="rgb(229,172,15)" fg:x="1167" fg:w="1"/><text x="12.4763%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="12.2263%" y="629" width="0.0105%" height="15" fill="rgb(230,224,35)" fg:x="1167" fg:w="1"/><text x="12.4763%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="12.2263%" y="613" width="0.0105%" height="15" fill="rgb(251,141,6)" fg:x="1167" fg:w="1"/><text x="12.4763%" y="623.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="12.2368%" y="661" width="0.0105%" height="15" fill="rgb(225,208,6)" fg:x="1168" fg:w="1"/><text x="12.4868%" y="671.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="12.2368%" y="645" width="0.0105%" height="15" fill="rgb(246,181,16)" fg:x="1168" fg:w="1"/><text x="12.4868%" y="655.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (1 samples, 0.01%)</title><rect x="12.2368%" y="629" width="0.0105%" height="15" fill="rgb(227,129,36)" fg:x="1168" fg:w="1"/><text x="12.4868%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::values_mut (1 samples, 0.01%)</title><rect x="12.2368%" y="613" width="0.0105%" height="15" fill="rgb(248,117,24)" fg:x="1168" fg:w="1"/><text x="12.4868%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::iter_mut (1 samples, 0.01%)</title><rect x="12.2368%" y="597" width="0.0105%" height="15" fill="rgb(214,185,35)" fg:x="1168" fg:w="1"/><text x="12.4868%" y="607.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="12.2368%" y="581" width="0.0105%" height="15" fill="rgb(236,150,34)" fg:x="1168" fg:w="1"/><text x="12.4868%" y="591.50"></text></g><g><title>hashbrown::raw::inner::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="12.2368%" y="565" width="0.0105%" height="15" fill="rgb(243,228,27)" fg:x="1168" fg:w="1"/><text x="12.4868%" y="575.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="12.2368%" y="549" width="0.0105%" height="15" fill="rgb(245,77,44)" fg:x="1168" fg:w="1"/><text x="12.4868%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="12.2368%" y="533" width="0.0105%" height="15" fill="rgb(235,214,42)" fg:x="1168" fg:w="1"/><text x="12.4868%" y="543.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (2 samples, 0.02%)</title><rect x="12.2368%" y="677" width="0.0210%" height="15" fill="rgb(221,74,3)" fg:x="1168" fg:w="2"/><text x="12.4868%" y="687.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (1 samples, 0.01%)</title><rect x="12.2472%" y="661" width="0.0105%" height="15" fill="rgb(206,121,29)" fg:x="1169" fg:w="1"/><text x="12.4972%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (1 samples, 0.01%)</title><rect x="12.2472%" y="645" width="0.0105%" height="15" fill="rgb(249,131,53)" fg:x="1169" fg:w="1"/><text x="12.4972%" y="655.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (5 samples, 0.05%)</title><rect x="12.2158%" y="709" width="0.0524%" height="15" fill="rgb(236,170,29)" fg:x="1166" fg:w="5"/><text x="12.4658%" y="719.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (5 samples, 0.05%)</title><rect x="12.2158%" y="693" width="0.0524%" height="15" fill="rgb(247,96,15)" fg:x="1166" fg:w="5"/><text x="12.4658%" y="703.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.01%)</title><rect x="12.2577%" y="677" width="0.0105%" height="15" fill="rgb(211,210,7)" fg:x="1170" fg:w="1"/><text x="12.5077%" y="687.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="12.2577%" y="661" width="0.0105%" height="15" fill="rgb(240,88,50)" fg:x="1170" fg:w="1"/><text x="12.5077%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="12.2577%" y="645" width="0.0105%" height="15" fill="rgb(209,229,26)" fg:x="1170" fg:w="1"/><text x="12.5077%" y="655.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (1 samples, 0.01%)</title><rect x="12.2577%" y="629" width="0.0105%" height="15" fill="rgb(210,68,23)" fg:x="1170" fg:w="1"/><text x="12.5077%" y="639.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (1 samples, 0.01%)</title><rect x="12.2577%" y="613" width="0.0105%" height="15" fill="rgb(229,180,13)" fg:x="1170" fg:w="1"/><text x="12.5077%" y="623.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="12.2577%" y="597" width="0.0105%" height="15" fill="rgb(236,53,44)" fg:x="1170" fg:w="1"/><text x="12.5077%" y="607.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="12.2577%" y="581" width="0.0105%" height="15" fill="rgb(244,214,29)" fg:x="1170" fg:w="1"/><text x="12.5077%" y="591.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="12.2577%" y="565" width="0.0105%" height="15" fill="rgb(220,75,29)" fg:x="1170" fg:w="1"/><text x="12.5077%" y="575.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="12.2577%" y="549" width="0.0105%" height="15" fill="rgb(214,183,37)" fg:x="1170" fg:w="1"/><text x="12.5077%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="12.2577%" y="533" width="0.0105%" height="15" fill="rgb(239,117,29)" fg:x="1170" fg:w="1"/><text x="12.5077%" y="543.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (6 samples, 0.06%)</title><rect x="12.2158%" y="725" width="0.0629%" height="15" fill="rgb(237,171,35)" fg:x="1166" fg:w="6"/><text x="12.4658%" y="735.50"></text></g><g><title>wgpu::BufferSlice::map_async (1 samples, 0.01%)</title><rect x="12.2682%" y="709" width="0.0105%" height="15" fill="rgb(229,178,53)" fg:x="1171" fg:w="1"/><text x="12.5182%" y="719.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (1 samples, 0.01%)</title><rect x="12.2682%" y="693" width="0.0105%" height="15" fill="rgb(210,102,19)" fg:x="1171" fg:w="1"/><text x="12.5182%" y="703.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (1 samples, 0.01%)</title><rect x="12.2682%" y="677" width="0.0105%" height="15" fill="rgb(235,127,22)" fg:x="1171" fg:w="1"/><text x="12.5182%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::device::life::LifetimeTracker&lt;gfx_backend_vulkan::Backend&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="12.2682%" y="661" width="0.0105%" height="15" fill="rgb(244,31,31)" fg:x="1171" fg:w="1"/><text x="12.5182%" y="671.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="12.2682%" y="645" width="0.0105%" height="15" fill="rgb(231,43,21)" fg:x="1171" fg:w="1"/><text x="12.5182%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="12.2682%" y="629" width="0.0105%" height="15" fill="rgb(217,131,35)" fg:x="1171" fg:w="1"/><text x="12.5182%" y="639.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.01%)</title><rect x="12.2682%" y="613" width="0.0105%" height="15" fill="rgb(221,149,4)" fg:x="1171" fg:w="1"/><text x="12.5182%" y="623.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (1 samples, 0.01%)</title><rect x="12.2682%" y="597" width="0.0105%" height="15" fill="rgb(232,170,28)" fg:x="1171" fg:w="1"/><text x="12.5182%" y="607.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::unlock_slow (1 samples, 0.01%)</title><rect x="12.2682%" y="581" width="0.0105%" height="15" fill="rgb(238,56,10)" fg:x="1171" fg:w="1"/><text x="12.5182%" y="591.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system::{{closure}} (1 samples, 0.01%)</title><rect x="12.2787%" y="709" width="0.0105%" height="15" fill="rgb(235,196,14)" fg:x="1172" fg:w="1"/><text x="12.5287%" y="719.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="12.2787%" y="693" width="0.0105%" height="15" fill="rgb(216,45,48)" fg:x="1172" fg:w="1"/><text x="12.5287%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="12.2787%" y="677" width="0.0105%" height="15" fill="rgb(238,213,17)" fg:x="1172" fg:w="1"/><text x="12.5287%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_get_mapped_range (1 samples, 0.01%)</title><rect x="12.2892%" y="693" width="0.0105%" height="15" fill="rgb(212,13,2)" fg:x="1173" fg:w="1"/><text x="12.5392%" y="703.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_get_mapped_range (1 samples, 0.01%)</title><rect x="12.2892%" y="677" width="0.0105%" height="15" fill="rgb(240,114,20)" fg:x="1173" fg:w="1"/><text x="12.5392%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="12.2892%" y="661" width="0.0105%" height="15" fill="rgb(228,41,40)" fg:x="1173" fg:w="1"/><text x="12.5392%" y="671.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="12.2892%" y="645" width="0.0105%" height="15" fill="rgb(244,132,35)" fg:x="1173" fg:w="1"/><text x="12.5392%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.01%)</title><rect x="12.2892%" y="629" width="0.0105%" height="15" fill="rgb(253,189,4)" fg:x="1173" fg:w="1"/><text x="12.5392%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="12.2892%" y="613" width="0.0105%" height="15" fill="rgb(224,37,19)" fg:x="1173" fg:w="1"/><text x="12.5392%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="12.2892%" y="597" width="0.0105%" height="15" fill="rgb(235,223,18)" fg:x="1173" fg:w="1"/><text x="12.5392%" y="607.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (3 samples, 0.03%)</title><rect x="12.2787%" y="725" width="0.0314%" height="15" fill="rgb(235,163,25)" fg:x="1172" fg:w="3"/><text x="12.5287%" y="735.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (2 samples, 0.02%)</title><rect x="12.2892%" y="709" width="0.0210%" height="15" fill="rgb(217,145,28)" fg:x="1173" fg:w="2"/><text x="12.5392%" y="719.50"></text></g><g><title>wgpu::MapContext::add (1 samples, 0.01%)</title><rect x="12.2996%" y="693" width="0.0105%" height="15" fill="rgb(223,223,32)" fg:x="1174" fg:w="1"/><text x="12.5496%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="12.2996%" y="677" width="0.0105%" height="15" fill="rgb(227,189,39)" fg:x="1174" fg:w="1"/><text x="12.5496%" y="687.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get_mut (1 samples, 0.01%)</title><rect x="12.3101%" y="725" width="0.0105%" height="15" fill="rgb(248,10,22)" fg:x="1175" fg:w="1"/><text x="12.5601%" y="735.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (1 samples, 0.01%)</title><rect x="12.3101%" y="709" width="0.0105%" height="15" fill="rgb(248,46,39)" fg:x="1175" fg:w="1"/><text x="12.5601%" y="719.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (1 samples, 0.01%)</title><rect x="12.3101%" y="693" width="0.0105%" height="15" fill="rgb(248,113,48)" fg:x="1175" fg:w="1"/><text x="12.5601%" y="703.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (12 samples, 0.13%)</title><rect x="12.2053%" y="741" width="0.1257%" height="15" fill="rgb(245,16,25)" fg:x="1165" fg:w="12"/><text x="12.4553%" y="751.50"></text></g><g><title>bevy_render::camera::active_cameras::ActiveCameras::get_mut (1 samples, 0.01%)</title><rect x="12.3206%" y="725" width="0.0105%" height="15" fill="rgb(249,152,16)" fg:x="1176" fg:w="1"/><text x="12.5706%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.01%)</title><rect x="12.3206%" y="709" width="0.0105%" height="15" fill="rgb(250,16,1)" fg:x="1176" fg:w="1"/><text x="12.5706%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="12.3206%" y="693" width="0.0105%" height="15" fill="rgb(249,138,3)" fg:x="1176" fg:w="1"/><text x="12.5706%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.01%)</title><rect x="12.3206%" y="677" width="0.0105%" height="15" fill="rgb(227,71,41)" fg:x="1176" fg:w="1"/><text x="12.5706%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="12.3206%" y="661" width="0.0105%" height="15" fill="rgb(209,184,23)" fg:x="1176" fg:w="1"/><text x="12.5706%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="12.3206%" y="645" width="0.0105%" height="15" fill="rgb(223,215,31)" fg:x="1176" fg:w="1"/><text x="12.5706%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="12.3206%" y="629" width="0.0105%" height="15" fill="rgb(210,146,28)" fg:x="1176" fg:w="1"/><text x="12.5706%" y="639.50"></text></g><g><title>ahash::operations::read_small (1 samples, 0.01%)</title><rect x="12.3206%" y="613" width="0.0105%" height="15" fill="rgb(209,183,41)" fg:x="1176" fg:w="1"/><text x="12.5706%" y="623.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u32 (1 samples, 0.01%)</title><rect x="12.3206%" y="597" width="0.0105%" height="15" fill="rgb(209,224,45)" fg:x="1176" fg:w="1"/><text x="12.5706%" y="607.50"></text></g><g><title>bevy_ecs::entity::Entities::get (1 samples, 0.01%)</title><rect x="12.3730%" y="693" width="0.0105%" height="15" fill="rgb(224,209,51)" fg:x="1181" fg:w="1"/><text x="12.6230%" y="703.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (6 samples, 0.06%)</title><rect x="12.3311%" y="741" width="0.0629%" height="15" fill="rgb(223,17,39)" fg:x="1177" fg:w="6"/><text x="12.5811%" y="751.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (3 samples, 0.03%)</title><rect x="12.3625%" y="725" width="0.0314%" height="15" fill="rgb(234,204,37)" fg:x="1180" fg:w="3"/><text x="12.6125%" y="735.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (3 samples, 0.03%)</title><rect x="12.3625%" y="709" width="0.0314%" height="15" fill="rgb(236,120,5)" fg:x="1180" fg:w="3"/><text x="12.6125%" y="719.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (1 samples, 0.01%)</title><rect x="12.3834%" y="693" width="0.0105%" height="15" fill="rgb(248,97,27)" fg:x="1182" fg:w="1"/><text x="12.6334%" y="703.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (19 samples, 0.20%)</title><rect x="12.2053%" y="789" width="0.1991%" height="15" fill="rgb(240,66,17)" fg:x="1165" fg:w="19"/><text x="12.4553%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (19 samples, 0.20%)</title><rect x="12.2053%" y="773" width="0.1991%" height="15" fill="rgb(210,79,3)" fg:x="1165" fg:w="19"/><text x="12.4553%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (19 samples, 0.20%)</title><rect x="12.2053%" y="757" width="0.1991%" height="15" fill="rgb(214,176,27)" fg:x="1165" fg:w="19"/><text x="12.4553%" y="767.50"></text></g><g><title>engine::movement::camera_movement::camera_movement (1 samples, 0.01%)</title><rect x="12.3939%" y="741" width="0.0105%" height="15" fill="rgb(235,185,3)" fg:x="1183" fg:w="1"/><text x="12.6439%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="12.4044%" y="757" width="0.0105%" height="15" fill="rgb(227,24,12)" fg:x="1184" fg:w="1"/><text x="12.6544%" y="767.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (1 samples, 0.01%)</title><rect x="12.4044%" y="741" width="0.0105%" height="15" fill="rgb(252,169,48)" fg:x="1184" fg:w="1"/><text x="12.6544%" y="751.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="12.4044%" y="773" width="0.0210%" height="15" fill="rgb(212,65,1)" fg:x="1184" fg:w="2"/><text x="12.6544%" y="783.50"></text></g><g><title>&lt;bevy_render::draw::DrawContextState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::shader::shader::Shader&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::pipeline::pipeline_compiler::PipelineCompiler&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::Res&lt;alloc::boxed::Box&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::shared_buffers::SharedBuffers&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="12.4149%" y="757" width="0.0105%" height="15" fill="rgb(242,39,24)" fg:x="1185" fg:w="1"/><text x="12.6649%" y="767.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="12.4149%" y="741" width="0.0105%" height="15" fill="rgb(249,32,23)" fg:x="1185" fg:w="1"/><text x="12.6649%" y="751.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="12.4149%" y="725" width="0.0105%" height="15" fill="rgb(251,195,23)" fg:x="1185" fg:w="1"/><text x="12.6649%" y="735.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="12.4149%" y="709" width="0.0105%" height="15" fill="rgb(236,174,8)" fg:x="1185" fg:w="1"/><text x="12.6649%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="12.4149%" y="693" width="0.0105%" height="15" fill="rgb(220,197,8)" fg:x="1185" fg:w="1"/><text x="12.6649%" y="703.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="12.4149%" y="677" width="0.0105%" height="15" fill="rgb(240,108,37)" fg:x="1185" fg:w="1"/><text x="12.6649%" y="687.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="12.4149%" y="661" width="0.0105%" height="15" fill="rgb(232,176,24)" fg:x="1185" fg:w="1"/><text x="12.6649%" y="671.50"></text></g><g><title>bevy_render::mesh::mesh::mesh_resource_provider_system (2 samples, 0.02%)</title><rect x="12.4254%" y="741" width="0.0210%" height="15" fill="rgb(243,35,29)" fg:x="1186" fg:w="2"/><text x="12.6754%" y="751.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="12.4254%" y="725" width="0.0210%" height="15" fill="rgb(210,37,18)" fg:x="1186" fg:w="2"/><text x="12.6754%" y="735.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (2 samples, 0.02%)</title><rect x="12.4254%" y="709" width="0.0210%" height="15" fill="rgb(224,184,40)" fg:x="1186" fg:w="2"/><text x="12.6754%" y="719.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (2 samples, 0.02%)</title><rect x="12.4254%" y="693" width="0.0210%" height="15" fill="rgb(236,39,29)" fg:x="1186" fg:w="2"/><text x="12.6754%" y="703.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::is_changed (2 samples, 0.02%)</title><rect x="12.4254%" y="677" width="0.0210%" height="15" fill="rgb(232,48,39)" fg:x="1186" fg:w="2"/><text x="12.6754%" y="687.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="12.4254%" y="661" width="0.0210%" height="15" fill="rgb(236,34,42)" fg:x="1186" fg:w="2"/><text x="12.6754%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="12.5092%" y="645" width="0.0105%" height="15" fill="rgb(243,106,37)" fg:x="1194" fg:w="1"/><text x="12.7592%" y="655.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="12.5092%" y="629" width="0.0105%" height="15" fill="rgb(218,96,6)" fg:x="1194" fg:w="1"/><text x="12.7592%" y="639.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="12.5092%" y="613" width="0.0105%" height="15" fill="rgb(235,130,12)" fg:x="1194" fg:w="1"/><text x="12.7592%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (2 samples, 0.02%)</title><rect x="12.5196%" y="581" width="0.0210%" height="15" fill="rgb(231,95,0)" fg:x="1195" fg:w="2"/><text x="12.7696%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="12.5196%" y="565" width="0.0210%" height="15" fill="rgb(228,12,23)" fg:x="1195" fg:w="2"/><text x="12.7696%" y="575.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (2 samples, 0.02%)</title><rect x="12.5196%" y="549" width="0.0210%" height="15" fill="rgb(216,12,1)" fg:x="1195" fg:w="2"/><text x="12.7696%" y="559.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="12.5196%" y="629" width="0.0314%" height="15" fill="rgb(219,59,3)" fg:x="1195" fg:w="3"/><text x="12.7696%" y="639.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (3 samples, 0.03%)</title><rect x="12.5196%" y="613" width="0.0314%" height="15" fill="rgb(215,208,46)" fg:x="1195" fg:w="3"/><text x="12.7696%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.03%)</title><rect x="12.5196%" y="597" width="0.0314%" height="15" fill="rgb(254,224,29)" fg:x="1195" fg:w="3"/><text x="12.7696%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="12.5406%" y="581" width="0.0105%" height="15" fill="rgb(232,14,29)" fg:x="1197" fg:w="1"/><text x="12.7906%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="12.5406%" y="565" width="0.0105%" height="15" fill="rgb(208,45,52)" fg:x="1197" fg:w="1"/><text x="12.7906%" y="575.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="12.5406%" y="549" width="0.0105%" height="15" fill="rgb(234,191,28)" fg:x="1197" fg:w="1"/><text x="12.7906%" y="559.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="12.5406%" y="533" width="0.0105%" height="15" fill="rgb(244,67,43)" fg:x="1197" fg:w="1"/><text x="12.7906%" y="543.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="12.5406%" y="517" width="0.0105%" height="15" fill="rgb(236,189,24)" fg:x="1197" fg:w="1"/><text x="12.7906%" y="527.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="12.5406%" y="501" width="0.0105%" height="15" fill="rgb(239,214,33)" fg:x="1197" fg:w="1"/><text x="12.7906%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="12.5511%" y="629" width="0.0105%" height="15" fill="rgb(226,176,41)" fg:x="1198" fg:w="1"/><text x="12.8011%" y="639.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="12.5511%" y="613" width="0.0105%" height="15" fill="rgb(248,47,8)" fg:x="1198" fg:w="1"/><text x="12.8011%" y="623.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="12.5511%" y="597" width="0.0105%" height="15" fill="rgb(218,81,44)" fg:x="1198" fg:w="1"/><text x="12.8011%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="12.5511%" y="581" width="0.0105%" height="15" fill="rgb(213,98,6)" fg:x="1198" fg:w="1"/><text x="12.8011%" y="591.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="12.5511%" y="565" width="0.0105%" height="15" fill="rgb(222,85,22)" fg:x="1198" fg:w="1"/><text x="12.8011%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.06%)</title><rect x="12.5092%" y="661" width="0.0629%" height="15" fill="rgb(239,46,39)" fg:x="1194" fg:w="6"/><text x="12.7592%" y="671.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (5 samples, 0.05%)</title><rect x="12.5196%" y="645" width="0.0524%" height="15" fill="rgb(237,12,29)" fg:x="1195" fg:w="5"/><text x="12.7696%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.01%)</title><rect x="12.5616%" y="629" width="0.0105%" height="15" fill="rgb(214,77,8)" fg:x="1199" fg:w="1"/><text x="12.8116%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="12.5616%" y="613" width="0.0105%" height="15" fill="rgb(217,168,37)" fg:x="1199" fg:w="1"/><text x="12.8116%" y="623.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="12.5616%" y="597" width="0.0105%" height="15" fill="rgb(221,217,23)" fg:x="1199" fg:w="1"/><text x="12.8116%" y="607.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="12.5616%" y="581" width="0.0105%" height="15" fill="rgb(243,229,36)" fg:x="1199" fg:w="1"/><text x="12.8116%" y="591.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="12.5616%" y="565" width="0.0105%" height="15" fill="rgb(251,163,40)" fg:x="1199" fg:w="1"/><text x="12.8116%" y="575.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="12.5720%" y="645" width="0.0105%" height="15" fill="rgb(237,222,12)" fg:x="1200" fg:w="1"/><text x="12.8220%" y="655.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (9 samples, 0.09%)</title><rect x="12.5092%" y="725" width="0.0943%" height="15" fill="rgb(248,132,6)" fg:x="1194" fg:w="9"/><text x="12.7592%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.09%)</title><rect x="12.5092%" y="709" width="0.0943%" height="15" fill="rgb(227,167,50)" fg:x="1194" fg:w="9"/><text x="12.7592%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.09%)</title><rect x="12.5092%" y="693" width="0.0943%" height="15" fill="rgb(242,84,37)" fg:x="1194" fg:w="9"/><text x="12.7592%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.09%)</title><rect x="12.5092%" y="677" width="0.0943%" height="15" fill="rgb(212,4,50)" fg:x="1194" fg:w="9"/><text x="12.7592%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.03%)</title><rect x="12.5720%" y="661" width="0.0314%" height="15" fill="rgb(230,228,32)" fg:x="1200" fg:w="3"/><text x="12.8220%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="12.5825%" y="645" width="0.0210%" height="15" fill="rgb(248,217,23)" fg:x="1201" fg:w="2"/><text x="12.8325%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.02%)</title><rect x="12.5825%" y="629" width="0.0210%" height="15" fill="rgb(238,197,32)" fg:x="1201" fg:w="2"/><text x="12.8325%" y="639.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="12.5825%" y="613" width="0.0210%" height="15" fill="rgb(236,106,1)" fg:x="1201" fg:w="2"/><text x="12.8325%" y="623.50"></text></g><g><title>bevy_render::draw::Draw::draw_indexed (1 samples, 0.01%)</title><rect x="12.6035%" y="725" width="0.0105%" height="15" fill="rgb(219,228,13)" fg:x="1203" fg:w="1"/><text x="12.8535%" y="735.50"></text></g><g><title>bevy_render::draw::Draw::render_command (1 samples, 0.01%)</title><rect x="12.6035%" y="709" width="0.0105%" height="15" fill="rgb(238,30,35)" fg:x="1203" fg:w="1"/><text x="12.8535%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="12.6035%" y="693" width="0.0105%" height="15" fill="rgb(236,70,23)" fg:x="1203" fg:w="1"/><text x="12.8535%" y="703.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="12.6035%" y="677" width="0.0105%" height="15" fill="rgb(249,104,48)" fg:x="1203" fg:w="1"/><text x="12.8535%" y="687.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="12.6873%" y="693" width="0.0105%" height="15" fill="rgb(254,117,50)" fg:x="1211" fg:w="1"/><text x="12.9373%" y="703.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="12.6977%" y="613" width="0.0105%" height="15" fill="rgb(223,152,4)" fg:x="1212" fg:w="1"/><text x="12.9477%" y="623.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="12.6977%" y="597" width="0.0105%" height="15" fill="rgb(245,6,2)" fg:x="1212" fg:w="1"/><text x="12.9477%" y="607.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="12.7082%" y="597" width="0.0105%" height="15" fill="rgb(249,150,24)" fg:x="1213" fg:w="1"/><text x="12.9582%" y="607.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="12.7082%" y="581" width="0.0105%" height="15" fill="rgb(228,185,42)" fg:x="1213" fg:w="1"/><text x="12.9582%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="12.7082%" y="565" width="0.0105%" height="15" fill="rgb(226,39,33)" fg:x="1213" fg:w="1"/><text x="12.9582%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="12.7082%" y="549" width="0.0105%" height="15" fill="rgb(221,166,19)" fg:x="1213" fg:w="1"/><text x="12.9582%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="12.7082%" y="533" width="0.0105%" height="15" fill="rgb(209,109,2)" fg:x="1213" fg:w="1"/><text x="12.9582%" y="543.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="12.7082%" y="517" width="0.0105%" height="15" fill="rgb(252,216,26)" fg:x="1213" fg:w="1"/><text x="12.9582%" y="527.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="12.6977%" y="629" width="0.0314%" height="15" fill="rgb(227,173,36)" fg:x="1212" fg:w="3"/><text x="12.9477%" y="639.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="12.7082%" y="613" width="0.0210%" height="15" fill="rgb(209,90,7)" fg:x="1213" fg:w="2"/><text x="12.9582%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.01%)</title><rect x="12.7187%" y="597" width="0.0105%" height="15" fill="rgb(250,194,11)" fg:x="1214" fg:w="1"/><text x="12.9687%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="12.7187%" y="581" width="0.0105%" height="15" fill="rgb(220,72,50)" fg:x="1214" fg:w="1"/><text x="12.9687%" y="591.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="12.7187%" y="565" width="0.0105%" height="15" fill="rgb(222,106,48)" fg:x="1214" fg:w="1"/><text x="12.9687%" y="575.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="12.7187%" y="549" width="0.0105%" height="15" fill="rgb(216,220,45)" fg:x="1214" fg:w="1"/><text x="12.9687%" y="559.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="12.7187%" y="533" width="0.0105%" height="15" fill="rgb(234,112,18)" fg:x="1214" fg:w="1"/><text x="12.9687%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="12.7292%" y="597" width="0.0210%" height="15" fill="rgb(206,179,9)" fg:x="1215" fg:w="2"/><text x="12.9792%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="12.7292%" y="581" width="0.0210%" height="15" fill="rgb(215,115,40)" fg:x="1215" fg:w="2"/><text x="12.9792%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="12.7292%" y="565" width="0.0210%" height="15" fill="rgb(222,69,34)" fg:x="1215" fg:w="2"/><text x="12.9792%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="12.7292%" y="549" width="0.0210%" height="15" fill="rgb(209,161,10)" fg:x="1215" fg:w="2"/><text x="12.9792%" y="559.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="12.7501%" y="549" width="0.0105%" height="15" fill="rgb(217,6,38)" fg:x="1217" fg:w="1"/><text x="13.0001%" y="559.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="12.7606%" y="549" width="0.0105%" height="15" fill="rgb(229,229,48)" fg:x="1218" fg:w="1"/><text x="13.0106%" y="559.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (9 samples, 0.09%)</title><rect x="12.6977%" y="693" width="0.0943%" height="15" fill="rgb(225,21,28)" fg:x="1212" fg:w="9"/><text x="12.9477%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.09%)</title><rect x="12.6977%" y="677" width="0.0943%" height="15" fill="rgb(206,33,13)" fg:x="1212" fg:w="9"/><text x="12.9477%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.09%)</title><rect x="12.6977%" y="661" width="0.0943%" height="15" fill="rgb(242,178,17)" fg:x="1212" fg:w="9"/><text x="12.9477%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.09%)</title><rect x="12.6977%" y="645" width="0.0943%" height="15" fill="rgb(220,162,5)" fg:x="1212" fg:w="9"/><text x="12.9477%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.06%)</title><rect x="12.7292%" y="629" width="0.0629%" height="15" fill="rgb(210,33,43)" fg:x="1215" fg:w="6"/><text x="12.9792%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.06%)</title><rect x="12.7292%" y="613" width="0.0629%" height="15" fill="rgb(216,116,54)" fg:x="1215" fg:w="6"/><text x="12.9792%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.04%)</title><rect x="12.7501%" y="597" width="0.0419%" height="15" fill="rgb(249,92,24)" fg:x="1217" fg:w="4"/><text x="13.0001%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.04%)</title><rect x="12.7501%" y="581" width="0.0419%" height="15" fill="rgb(231,189,14)" fg:x="1217" fg:w="4"/><text x="13.0001%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.04%)</title><rect x="12.7501%" y="565" width="0.0419%" height="15" fill="rgb(230,8,41)" fg:x="1217" fg:w="4"/><text x="13.0001%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="12.7711%" y="549" width="0.0210%" height="15" fill="rgb(249,7,27)" fg:x="1219" fg:w="2"/><text x="13.0211%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="12.7711%" y="533" width="0.0210%" height="15" fill="rgb(232,86,5)" fg:x="1219" fg:w="2"/><text x="13.0211%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="12.7711%" y="517" width="0.0210%" height="15" fill="rgb(224,175,18)" fg:x="1219" fg:w="2"/><text x="13.0211%" y="527.50"></text></g><g><title>bevy_render::draw::Draw::set_bind_group (3 samples, 0.03%)</title><rect x="12.7920%" y="693" width="0.0314%" height="15" fill="rgb(220,129,12)" fg:x="1221" fg:w="3"/><text x="13.0420%" y="703.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="12.7920%" y="677" width="0.0314%" height="15" fill="rgb(210,19,36)" fg:x="1221" fg:w="3"/><text x="13.0420%" y="687.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="12.8025%" y="661" width="0.0210%" height="15" fill="rgb(219,96,14)" fg:x="1222" fg:w="2"/><text x="13.0525%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="12.8025%" y="645" width="0.0210%" height="15" fill="rgb(249,106,1)" fg:x="1222" fg:w="2"/><text x="13.0525%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="12.8025%" y="629" width="0.0210%" height="15" fill="rgb(249,155,20)" fg:x="1222" fg:w="2"/><text x="13.0525%" y="639.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (1 samples, 0.01%)</title><rect x="12.8235%" y="693" width="0.0105%" height="15" fill="rgb(244,168,9)" fg:x="1224" fg:w="1"/><text x="13.0735%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="12.8235%" y="677" width="0.0105%" height="15" fill="rgb(216,23,50)" fg:x="1224" fg:w="1"/><text x="13.0735%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="12.8235%" y="661" width="0.0105%" height="15" fill="rgb(224,219,20)" fg:x="1224" fg:w="1"/><text x="13.0735%" y="671.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u64 (1 samples, 0.01%)</title><rect x="12.8339%" y="501" width="0.0105%" height="15" fill="rgb(222,156,15)" fg:x="1225" fg:w="1"/><text x="13.0839%" y="511.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="12.8339%" y="597" width="0.0210%" height="15" fill="rgb(231,97,17)" fg:x="1225" fg:w="2"/><text x="13.0839%" y="607.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="12.8339%" y="581" width="0.0210%" height="15" fill="rgb(218,70,48)" fg:x="1225" fg:w="2"/><text x="13.0839%" y="591.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (2 samples, 0.02%)</title><rect x="12.8339%" y="565" width="0.0210%" height="15" fill="rgb(212,196,52)" fg:x="1225" fg:w="2"/><text x="13.0839%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="12.8339%" y="549" width="0.0210%" height="15" fill="rgb(243,203,18)" fg:x="1225" fg:w="2"/><text x="13.0839%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (2 samples, 0.02%)</title><rect x="12.8339%" y="533" width="0.0210%" height="15" fill="rgb(252,125,41)" fg:x="1225" fg:w="2"/><text x="13.0839%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="12.8339%" y="517" width="0.0210%" height="15" fill="rgb(223,180,33)" fg:x="1225" fg:w="2"/><text x="13.0839%" y="527.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="12.8444%" y="501" width="0.0105%" height="15" fill="rgb(254,159,46)" fg:x="1226" fg:w="1"/><text x="13.0944%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.05%)</title><rect x="12.8339%" y="629" width="0.0524%" height="15" fill="rgb(254,38,10)" fg:x="1225" fg:w="5"/><text x="13.0839%" y="639.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (5 samples, 0.05%)</title><rect x="12.8339%" y="613" width="0.0524%" height="15" fill="rgb(208,217,32)" fg:x="1225" fg:w="5"/><text x="13.0839%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (3 samples, 0.03%)</title><rect x="12.8549%" y="597" width="0.0314%" height="15" fill="rgb(221,120,13)" fg:x="1227" fg:w="3"/><text x="13.1049%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="12.8968%" y="581" width="0.0105%" height="15" fill="rgb(246,54,52)" fg:x="1231" fg:w="1"/><text x="13.1468%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="12.8968%" y="565" width="0.0105%" height="15" fill="rgb(242,34,25)" fg:x="1231" fg:w="1"/><text x="13.1468%" y="575.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="12.8968%" y="549" width="0.0105%" height="15" fill="rgb(247,209,9)" fg:x="1231" fg:w="1"/><text x="13.1468%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="12.8968%" y="597" width="0.0314%" height="15" fill="rgb(228,71,26)" fg:x="1231" fg:w="3"/><text x="13.1468%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (2 samples, 0.02%)</title><rect x="12.9073%" y="581" width="0.0210%" height="15" fill="rgb(222,145,49)" fg:x="1232" fg:w="2"/><text x="13.1573%" y="591.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.02%)</title><rect x="12.9073%" y="565" width="0.0210%" height="15" fill="rgb(218,121,17)" fg:x="1232" fg:w="2"/><text x="13.1573%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="12.9073%" y="549" width="0.0210%" height="15" fill="rgb(244,50,7)" fg:x="1232" fg:w="2"/><text x="13.1573%" y="559.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (2 samples, 0.02%)</title><rect x="12.9073%" y="533" width="0.0210%" height="15" fill="rgb(246,229,37)" fg:x="1232" fg:w="2"/><text x="13.1573%" y="543.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (11 samples, 0.12%)</title><rect x="12.9282%" y="597" width="0.1152%" height="15" fill="rgb(225,18,5)" fg:x="1234" fg:w="11"/><text x="13.1782%" y="607.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (11 samples, 0.12%)</title><rect x="12.9282%" y="581" width="0.1152%" height="15" fill="rgb(213,204,8)" fg:x="1234" fg:w="11"/><text x="13.1782%" y="591.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (11 samples, 0.12%)</title><rect x="12.9282%" y="565" width="0.1152%" height="15" fill="rgb(238,103,6)" fg:x="1234" fg:w="11"/><text x="13.1782%" y="575.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="13.0330%" y="549" width="0.0105%" height="15" fill="rgb(222,25,35)" fg:x="1244" fg:w="1"/><text x="13.2830%" y="559.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1 samples, 0.01%)</title><rect x="13.0330%" y="533" width="0.0105%" height="15" fill="rgb(213,203,35)" fg:x="1244" fg:w="1"/><text x="13.2830%" y="543.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.01%)</title><rect x="13.0330%" y="517" width="0.0105%" height="15" fill="rgb(221,79,53)" fg:x="1244" fg:w="1"/><text x="13.2830%" y="527.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.02%)</title><rect x="13.0435%" y="549" width="0.0210%" height="15" fill="rgb(243,200,35)" fg:x="1245" fg:w="2"/><text x="13.2935%" y="559.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_mut_untyped (24 samples, 0.25%)</title><rect x="12.8339%" y="693" width="0.2514%" height="15" fill="rgb(248,60,25)" fg:x="1225" fg:w="24"/><text x="13.0839%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (24 samples, 0.25%)</title><rect x="12.8339%" y="677" width="0.2514%" height="15" fill="rgb(227,53,46)" fg:x="1225" fg:w="24"/><text x="13.0839%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (24 samples, 0.25%)</title><rect x="12.8339%" y="661" width="0.2514%" height="15" fill="rgb(216,120,32)" fg:x="1225" fg:w="24"/><text x="13.0839%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (24 samples, 0.25%)</title><rect x="12.8339%" y="645" width="0.2514%" height="15" fill="rgb(220,134,1)" fg:x="1225" fg:w="24"/><text x="13.0839%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (19 samples, 0.20%)</title><rect x="12.8863%" y="629" width="0.1991%" height="15" fill="rgb(237,168,5)" fg:x="1230" fg:w="19"/><text x="13.1363%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.20%)</title><rect x="12.8863%" y="613" width="0.1991%" height="15" fill="rgb(231,100,33)" fg:x="1230" fg:w="19"/><text x="13.1363%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.04%)</title><rect x="13.0435%" y="597" width="0.0419%" height="15" fill="rgb(236,177,47)" fg:x="1245" fg:w="4"/><text x="13.2935%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.04%)</title><rect x="13.0435%" y="581" width="0.0419%" height="15" fill="rgb(235,7,49)" fg:x="1245" fg:w="4"/><text x="13.2935%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.04%)</title><rect x="13.0435%" y="565" width="0.0419%" height="15" fill="rgb(232,119,22)" fg:x="1245" fg:w="4"/><text x="13.2935%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="13.0644%" y="549" width="0.0210%" height="15" fill="rgb(254,73,53)" fg:x="1247" fg:w="2"/><text x="13.3144%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="13.0644%" y="533" width="0.0210%" height="15" fill="rgb(251,35,20)" fg:x="1247" fg:w="2"/><text x="13.3144%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="13.0644%" y="517" width="0.0210%" height="15" fill="rgb(241,119,20)" fg:x="1247" fg:w="2"/><text x="13.3144%" y="527.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::iter_assets (2 samples, 0.02%)</title><rect x="13.0854%" y="693" width="0.0210%" height="15" fill="rgb(207,102,14)" fg:x="1249" fg:w="2"/><text x="13.3354%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (2 samples, 0.02%)</title><rect x="13.0854%" y="677" width="0.0210%" height="15" fill="rgb(248,201,50)" fg:x="1249" fg:w="2"/><text x="13.3354%" y="687.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (2 samples, 0.02%)</title><rect x="13.0854%" y="661" width="0.0210%" height="15" fill="rgb(222,185,44)" fg:x="1249" fg:w="2"/><text x="13.3354%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (2 samples, 0.02%)</title><rect x="13.0854%" y="645" width="0.0210%" height="15" fill="rgb(218,107,18)" fg:x="1249" fg:w="2"/><text x="13.3354%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2 samples, 0.02%)</title><rect x="13.0854%" y="629" width="0.0210%" height="15" fill="rgb(237,177,39)" fg:x="1249" fg:w="2"/><text x="13.3354%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.02%)</title><rect x="13.0854%" y="613" width="0.0210%" height="15" fill="rgb(246,69,6)" fg:x="1249" fg:w="2"/><text x="13.3354%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="13.0854%" y="597" width="0.0210%" height="15" fill="rgb(234,208,37)" fg:x="1249" fg:w="2"/><text x="13.3354%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (2 samples, 0.02%)</title><rect x="13.0854%" y="581" width="0.0210%" height="15" fill="rgb(225,4,6)" fg:x="1249" fg:w="2"/><text x="13.3354%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (2 samples, 0.02%)</title><rect x="13.0854%" y="565" width="0.0210%" height="15" fill="rgb(233,45,0)" fg:x="1249" fg:w="2"/><text x="13.3354%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId,bevy_wgpu::wgpu_resources::WgpuBindGroupInfo,ahash::random_state::RandomState&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="13.1273%" y="645" width="0.0210%" height="15" fill="rgb(226,136,5)" fg:x="1253" fg:w="2"/><text x="13.3773%" y="655.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="13.1273%" y="629" width="0.0210%" height="15" fill="rgb(211,91,47)" fg:x="1253" fg:w="2"/><text x="13.3773%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (2 samples, 0.02%)</title><rect x="13.1273%" y="613" width="0.0210%" height="15" fill="rgb(242,88,51)" fg:x="1253" fg:w="2"/><text x="13.3773%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="13.1273%" y="597" width="0.0210%" height="15" fill="rgb(230,91,28)" fg:x="1253" fg:w="2"/><text x="13.3773%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="13.1273%" y="581" width="0.0210%" height="15" fill="rgb(254,186,29)" fg:x="1253" fg:w="2"/><text x="13.3773%" y="591.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="13.1482%" y="645" width="0.0105%" height="15" fill="rgb(238,6,4)" fg:x="1255" fg:w="1"/><text x="13.3982%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="13.1482%" y="629" width="0.0105%" height="15" fill="rgb(221,151,16)" fg:x="1255" fg:w="1"/><text x="13.3982%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="13.1587%" y="597" width="0.0210%" height="15" fill="rgb(251,143,52)" fg:x="1256" fg:w="2"/><text x="13.4087%" y="607.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="13.1587%" y="581" width="0.0210%" height="15" fill="rgb(206,90,15)" fg:x="1256" fg:w="2"/><text x="13.4087%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2 samples, 0.02%)</title><rect x="13.1587%" y="565" width="0.0210%" height="15" fill="rgb(218,35,8)" fg:x="1256" fg:w="2"/><text x="13.4087%" y="575.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (2 samples, 0.02%)</title><rect x="13.1587%" y="549" width="0.0210%" height="15" fill="rgb(239,215,6)" fg:x="1256" fg:w="2"/><text x="13.4087%" y="559.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.02%)</title><rect x="13.1587%" y="533" width="0.0210%" height="15" fill="rgb(245,116,39)" fg:x="1256" fg:w="2"/><text x="13.4087%" y="543.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="13.1587%" y="517" width="0.0210%" height="15" fill="rgb(242,65,28)" fg:x="1256" fg:w="2"/><text x="13.4087%" y="527.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="13.1692%" y="501" width="0.0105%" height="15" fill="rgb(252,132,53)" fg:x="1257" fg:w="1"/><text x="13.4192%" y="511.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (7 samples, 0.07%)</title><rect x="13.1273%" y="677" width="0.0733%" height="15" fill="rgb(224,159,50)" fg:x="1253" fg:w="7"/><text x="13.3773%" y="687.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (7 samples, 0.07%)</title><rect x="13.1273%" y="661" width="0.0733%" height="15" fill="rgb(224,93,4)" fg:x="1253" fg:w="7"/><text x="13.3773%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.04%)</title><rect x="13.1587%" y="645" width="0.0419%" height="15" fill="rgb(208,81,34)" fg:x="1256" fg:w="4"/><text x="13.4087%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.04%)</title><rect x="13.1587%" y="629" width="0.0419%" height="15" fill="rgb(233,92,54)" fg:x="1256" fg:w="4"/><text x="13.4087%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.04%)</title><rect x="13.1587%" y="613" width="0.0419%" height="15" fill="rgb(237,21,14)" fg:x="1256" fg:w="4"/><text x="13.4087%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="13.1797%" y="597" width="0.0210%" height="15" fill="rgb(249,128,51)" fg:x="1258" fg:w="2"/><text x="13.4297%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="13.1797%" y="581" width="0.0210%" height="15" fill="rgb(223,129,24)" fg:x="1258" fg:w="2"/><text x="13.4297%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="13.1902%" y="565" width="0.0105%" height="15" fill="rgb(231,168,25)" fg:x="1259" fg:w="1"/><text x="13.4402%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="13.1902%" y="549" width="0.0105%" height="15" fill="rgb(224,39,20)" fg:x="1259" fg:w="1"/><text x="13.4402%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="13.1902%" y="533" width="0.0105%" height="15" fill="rgb(225,152,53)" fg:x="1259" fg:w="1"/><text x="13.4402%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="13.1902%" y="517" width="0.0105%" height="15" fill="rgb(252,17,24)" fg:x="1259" fg:w="1"/><text x="13.4402%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="13.1902%" y="501" width="0.0105%" height="15" fill="rgb(250,114,30)" fg:x="1259" fg:w="1"/><text x="13.4402%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="13.1902%" y="485" width="0.0105%" height="15" fill="rgb(229,5,4)" fg:x="1259" fg:w="1"/><text x="13.4402%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.03%)</title><rect x="13.2006%" y="581" width="0.0314%" height="15" fill="rgb(225,176,49)" fg:x="1260" fg:w="3"/><text x="13.4506%" y="591.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="13.2006%" y="565" width="0.0314%" height="15" fill="rgb(224,221,49)" fg:x="1260" fg:w="3"/><text x="13.4506%" y="575.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get_bind_group (4 samples, 0.04%)</title><rect x="13.2006%" y="677" width="0.0419%" height="15" fill="rgb(253,169,27)" fg:x="1260" fg:w="4"/><text x="13.4506%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (4 samples, 0.04%)</title><rect x="13.2006%" y="661" width="0.0419%" height="15" fill="rgb(211,206,16)" fg:x="1260" fg:w="4"/><text x="13.4506%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (4 samples, 0.04%)</title><rect x="13.2006%" y="645" width="0.0419%" height="15" fill="rgb(244,87,35)" fg:x="1260" fg:w="4"/><text x="13.4506%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.04%)</title><rect x="13.2006%" y="629" width="0.0419%" height="15" fill="rgb(246,28,10)" fg:x="1260" fg:w="4"/><text x="13.4506%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (4 samples, 0.04%)</title><rect x="13.2006%" y="613" width="0.0419%" height="15" fill="rgb(229,12,44)" fg:x="1260" fg:w="4"/><text x="13.4506%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (4 samples, 0.04%)</title><rect x="13.2006%" y="597" width="0.0419%" height="15" fill="rgb(210,145,37)" fg:x="1260" fg:w="4"/><text x="13.4506%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="13.2321%" y="581" width="0.0105%" height="15" fill="rgb(227,112,52)" fg:x="1263" fg:w="1"/><text x="13.4821%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="13.2321%" y="565" width="0.0105%" height="15" fill="rgb(238,155,34)" fg:x="1263" fg:w="1"/><text x="13.4821%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="13.2321%" y="549" width="0.0105%" height="15" fill="rgb(239,226,36)" fg:x="1263" fg:w="1"/><text x="13.4821%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="13.2321%" y="533" width="0.0105%" height="15" fill="rgb(230,16,23)" fg:x="1263" fg:w="1"/><text x="13.4821%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="13.2321%" y="517" width="0.0105%" height="15" fill="rgb(236,171,36)" fg:x="1263" fg:w="1"/><text x="13.4821%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="13.2321%" y="501" width="0.0105%" height="15" fill="rgb(221,22,14)" fg:x="1263" fg:w="1"/><text x="13.4821%" y="511.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="13.2425%" y="597" width="0.0105%" height="15" fill="rgb(242,43,11)" fg:x="1264" fg:w="1"/><text x="13.4925%" y="607.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="13.2425%" y="581" width="0.0105%" height="15" fill="rgb(232,69,23)" fg:x="1264" fg:w="1"/><text x="13.4925%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (8 samples, 0.08%)</title><rect x="13.2425%" y="613" width="0.0838%" height="15" fill="rgb(216,180,54)" fg:x="1264" fg:w="8"/><text x="13.4925%" y="623.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (7 samples, 0.07%)</title><rect x="13.2530%" y="597" width="0.0733%" height="15" fill="rgb(216,5,24)" fg:x="1265" fg:w="7"/><text x="13.5030%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="13.3473%" y="581" width="0.0210%" height="15" fill="rgb(225,89,9)" fg:x="1274" fg:w="2"/><text x="13.5973%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="13.3473%" y="565" width="0.0210%" height="15" fill="rgb(243,75,33)" fg:x="1274" fg:w="2"/><text x="13.5973%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="13.3578%" y="549" width="0.0105%" height="15" fill="rgb(247,141,45)" fg:x="1275" fg:w="1"/><text x="13.6078%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="13.3578%" y="533" width="0.0105%" height="15" fill="rgb(232,177,36)" fg:x="1275" fg:w="1"/><text x="13.6078%" y="543.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.07%)</title><rect x="13.3683%" y="581" width="0.0733%" height="15" fill="rgb(219,125,36)" fg:x="1276" fg:w="7"/><text x="13.6183%" y="591.50"></text></g><g><title>&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId as core::cmp::PartialEq&gt;::eq (7 samples, 0.07%)</title><rect x="13.3683%" y="565" width="0.0733%" height="15" fill="rgb(227,94,9)" fg:x="1276" fg:w="7"/><text x="13.6183%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.04%)</title><rect x="13.4416%" y="533" width="0.0419%" height="15" fill="rgb(240,34,52)" fg:x="1283" fg:w="4"/><text x="13.6916%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.04%)</title><rect x="13.4416%" y="517" width="0.0419%" height="15" fill="rgb(216,45,12)" fg:x="1283" fg:w="4"/><text x="13.6916%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="13.4416%" y="501" width="0.0419%" height="15" fill="rgb(246,21,19)" fg:x="1283" fg:w="4"/><text x="13.6916%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (24 samples, 0.25%)</title><rect x="13.2425%" y="661" width="0.2514%" height="15" fill="rgb(213,98,42)" fg:x="1264" fg:w="24"/><text x="13.4925%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (24 samples, 0.25%)</title><rect x="13.2425%" y="645" width="0.2514%" height="15" fill="rgb(250,136,47)" fg:x="1264" fg:w="24"/><text x="13.4925%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (24 samples, 0.25%)</title><rect x="13.2425%" y="629" width="0.2514%" height="15" fill="rgb(251,124,27)" fg:x="1264" fg:w="24"/><text x="13.4925%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (16 samples, 0.17%)</title><rect x="13.3263%" y="613" width="0.1676%" height="15" fill="rgb(229,180,14)" fg:x="1272" fg:w="16"/><text x="13.5763%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.17%)</title><rect x="13.3263%" y="597" width="0.1676%" height="15" fill="rgb(245,216,25)" fg:x="1272" fg:w="16"/><text x="13.5763%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.05%)</title><rect x="13.4416%" y="581" width="0.0524%" height="15" fill="rgb(251,43,5)" fg:x="1283" fg:w="5"/><text x="13.6916%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.05%)</title><rect x="13.4416%" y="565" width="0.0524%" height="15" fill="rgb(250,128,24)" fg:x="1283" fg:w="5"/><text x="13.6916%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.05%)</title><rect x="13.4416%" y="549" width="0.0524%" height="15" fill="rgb(217,117,27)" fg:x="1283" fg:w="5"/><text x="13.6916%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="13.4835%" y="533" width="0.0105%" height="15" fill="rgb(245,147,4)" fg:x="1287" fg:w="1"/><text x="13.7335%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="13.4835%" y="517" width="0.0105%" height="15" fill="rgb(242,201,35)" fg:x="1287" fg:w="1"/><text x="13.7335%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="13.4835%" y="501" width="0.0105%" height="15" fill="rgb(218,181,1)" fg:x="1287" fg:w="1"/><text x="13.7335%" y="511.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="13.4835%" y="485" width="0.0105%" height="15" fill="rgb(222,6,29)" fg:x="1287" fg:w="1"/><text x="13.7335%" y="495.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (85 samples, 0.89%)</title><rect x="12.6139%" y="725" width="0.8905%" height="15" fill="rgb(208,186,3)" fg:x="1204" fg:w="85"/><text x="12.8639%" y="735.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (84 samples, 0.88%)</title><rect x="12.6244%" y="709" width="0.8800%" height="15" fill="rgb(216,36,26)" fg:x="1205" fg:w="84"/><text x="12.8744%" y="719.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (38 samples, 0.40%)</title><rect x="13.1063%" y="693" width="0.3981%" height="15" fill="rgb(248,201,23)" fg:x="1251" fg:w="38"/><text x="13.3563%" y="703.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group_status (25 samples, 0.26%)</title><rect x="13.2425%" y="677" width="0.2619%" height="15" fill="rgb(251,170,31)" fg:x="1264" fg:w="25"/><text x="13.4925%" y="687.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.01%)</title><rect x="13.4940%" y="661" width="0.0105%" height="15" fill="rgb(207,110,25)" fg:x="1288" fg:w="1"/><text x="13.7440%" y="671.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.01%)</title><rect x="13.4940%" y="645" width="0.0105%" height="15" fill="rgb(250,54,15)" fg:x="1288" fg:w="1"/><text x="13.7440%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="13.4940%" y="629" width="0.0105%" height="15" fill="rgb(227,68,33)" fg:x="1288" fg:w="1"/><text x="13.7440%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="13.4940%" y="613" width="0.0105%" height="15" fill="rgb(238,34,41)" fg:x="1288" fg:w="1"/><text x="13.7440%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="13.4940%" y="597" width="0.0105%" height="15" fill="rgb(220,11,15)" fg:x="1288" fg:w="1"/><text x="13.7440%" y="607.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="13.4940%" y="581" width="0.0105%" height="15" fill="rgb(246,111,35)" fg:x="1288" fg:w="1"/><text x="13.7440%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.01%)</title><rect x="13.4940%" y="565" width="0.0105%" height="15" fill="rgb(209,88,53)" fg:x="1288" fg:w="1"/><text x="13.7440%" y="575.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="13.4940%" y="549" width="0.0105%" height="15" fill="rgb(231,185,47)" fg:x="1288" fg:w="1"/><text x="13.7440%" y="559.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="13.4940%" y="533" width="0.0105%" height="15" fill="rgb(233,154,1)" fg:x="1288" fg:w="1"/><text x="13.7440%" y="543.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="13.4940%" y="517" width="0.0105%" height="15" fill="rgb(225,15,46)" fg:x="1288" fg:w="1"/><text x="13.7440%" y="527.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="13.4940%" y="501" width="0.0105%" height="15" fill="rgb(211,135,41)" fg:x="1288" fg:w="1"/><text x="13.7440%" y="511.50"></text></g><g><title>bevy_render::draw::Draw::set_pipeline (1 samples, 0.01%)</title><rect x="13.5149%" y="709" width="0.0105%" height="15" fill="rgb(208,54,0)" fg:x="1290" fg:w="1"/><text x="13.7649%" y="719.50"></text></g><g><title>bevy_render::draw::Draw::render_command (1 samples, 0.01%)</title><rect x="13.5149%" y="693" width="0.0105%" height="15" fill="rgb(244,136,14)" fg:x="1290" fg:w="1"/><text x="13.7649%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="13.5149%" y="677" width="0.0105%" height="15" fill="rgb(241,56,14)" fg:x="1290" fg:w="1"/><text x="13.7649%" y="687.50"></text></g><g><title>glslang::TPoolAllocator::~TPoolAllocator (1 samples, 0.01%)</title><rect x="13.5254%" y="597" width="0.0105%" height="15" fill="rgb(205,80,24)" fg:x="1291" fg:w="1"/><text x="13.7754%" y="607.50"></text></g><g><title>ShFinalize (6 samples, 0.06%)</title><rect x="13.5254%" y="613" width="0.0629%" height="15" fill="rgb(220,57,4)" fg:x="1291" fg:w="6"/><text x="13.7754%" y="623.50"></text></g><g><title>glslang::TSymbolTableLevel::~TSymbolTableLevel (5 samples, 0.05%)</title><rect x="13.5359%" y="597" width="0.0524%" height="15" fill="rgb(226,193,50)" fg:x="1292" fg:w="5"/><text x="13.7859%" y="607.50"></text></g><g><title>glslang::TFunction::~TFunction (4 samples, 0.04%)</title><rect x="13.5464%" y="581" width="0.0419%" height="15" fill="rgb(231,168,22)" fg:x="1293" fg:w="4"/><text x="13.7964%" y="591.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (7 samples, 0.07%)</title><rect x="13.5254%" y="693" width="0.0733%" height="15" fill="rgb(254,215,14)" fg:x="1291" fg:w="7"/><text x="13.7754%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (7 samples, 0.07%)</title><rect x="13.5254%" y="677" width="0.0733%" height="15" fill="rgb(211,115,16)" fg:x="1291" fg:w="7"/><text x="13.7754%" y="687.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (7 samples, 0.07%)</title><rect x="13.5254%" y="661" width="0.0733%" height="15" fill="rgb(236,210,16)" fg:x="1291" fg:w="7"/><text x="13.7754%" y="671.50"></text></g><g><title>bevy_glsl_to_spirv::compile (7 samples, 0.07%)</title><rect x="13.5254%" y="645" width="0.0733%" height="15" fill="rgb(221,94,12)" fg:x="1291" fg:w="7"/><text x="13.7754%" y="655.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (7 samples, 0.07%)</title><rect x="13.5254%" y="629" width="0.0733%" height="15" fill="rgb(235,218,49)" fg:x="1291" fg:w="7"/><text x="13.7754%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (1 samples, 0.01%)</title><rect x="13.5883%" y="613" width="0.0105%" height="15" fill="rgb(217,114,14)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (1 samples, 0.01%)</title><rect x="13.5883%" y="597" width="0.0105%" height="15" fill="rgb(216,145,22)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="607.50"></text></g><g><title>alloc::slice::hack::to_vec (1 samples, 0.01%)</title><rect x="13.5883%" y="581" width="0.0105%" height="15" fill="rgb(217,112,39)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="591.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (1 samples, 0.01%)</title><rect x="13.5883%" y="565" width="0.0105%" height="15" fill="rgb(225,85,32)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="13.5883%" y="549" width="0.0105%" height="15" fill="rgb(245,209,47)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="13.5883%" y="533" width="0.0105%" height="15" fill="rgb(218,220,15)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="13.5883%" y="517" width="0.0105%" height="15" fill="rgb(222,202,31)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="13.5883%" y="501" width="0.0105%" height="15" fill="rgb(243,203,4)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="511.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="13.5883%" y="485" width="0.0105%" height="15" fill="rgb(237,92,17)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="495.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="13.5883%" y="469" width="0.0105%" height="15" fill="rgb(231,119,7)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="479.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="13.5883%" y="453" width="0.0105%" height="15" fill="rgb(237,82,41)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="463.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="13.5883%" y="437" width="0.0105%" height="15" fill="rgb(226,81,48)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="447.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="13.5883%" y="421" width="0.0105%" height="15" fill="rgb(234,70,51)" fg:x="1297" fg:w="1"/><text x="13.8383%" y="431.50"></text></g><g><title>glslang::TSymbolTableLevel::~TSymbolTableLevel (2 samples, 0.02%)</title><rect x="13.5987%" y="565" width="0.0210%" height="15" fill="rgb(251,86,4)" fg:x="1298" fg:w="2"/><text x="13.8487%" y="575.50"></text></g><g><title>glslang::TFunction::~TFunction (2 samples, 0.02%)</title><rect x="13.5987%" y="549" width="0.0210%" height="15" fill="rgb(244,144,28)" fg:x="1298" fg:w="2"/><text x="13.8487%" y="559.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (10 samples, 0.10%)</title><rect x="13.5254%" y="709" width="0.1048%" height="15" fill="rgb(232,161,39)" fg:x="1291" fg:w="10"/><text x="13.7754%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (3 samples, 0.03%)</title><rect x="13.5987%" y="693" width="0.0314%" height="15" fill="rgb(247,34,51)" fg:x="1298" fg:w="3"/><text x="13.8487%" y="703.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline::{{closure}} (3 samples, 0.03%)</title><rect x="13.5987%" y="677" width="0.0314%" height="15" fill="rgb(225,132,2)" fg:x="1298" fg:w="3"/><text x="13.8487%" y="687.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_shader (3 samples, 0.03%)</title><rect x="13.5987%" y="661" width="0.0314%" height="15" fill="rgb(209,159,44)" fg:x="1298" fg:w="3"/><text x="13.8487%" y="671.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_specialized_shader (3 samples, 0.03%)</title><rect x="13.5987%" y="645" width="0.0314%" height="15" fill="rgb(251,214,1)" fg:x="1298" fg:w="3"/><text x="13.8487%" y="655.50"></text></g><g><title>bevy_render::shader::shader::glsl_to_spirv (3 samples, 0.03%)</title><rect x="13.5987%" y="629" width="0.0314%" height="15" fill="rgb(247,84,47)" fg:x="1298" fg:w="3"/><text x="13.8487%" y="639.50"></text></g><g><title>bevy_glsl_to_spirv::compile (3 samples, 0.03%)</title><rect x="13.5987%" y="613" width="0.0314%" height="15" fill="rgb(240,111,43)" fg:x="1298" fg:w="3"/><text x="13.8487%" y="623.50"></text></g><g><title>bevy_glsl_to_spirv::compile_inner (3 samples, 0.03%)</title><rect x="13.5987%" y="597" width="0.0314%" height="15" fill="rgb(215,214,35)" fg:x="1298" fg:w="3"/><text x="13.8487%" y="607.50"></text></g><g><title>ShFinalize (3 samples, 0.03%)</title><rect x="13.5987%" y="581" width="0.0314%" height="15" fill="rgb(248,207,23)" fg:x="1298" fg:w="3"/><text x="13.8487%" y="591.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="13.6197%" y="565" width="0.0105%" height="15" fill="rgb(214,186,4)" fg:x="1300" fg:w="1"/><text x="13.8697%" y="575.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="13.6197%" y="549" width="0.0105%" height="15" fill="rgb(220,133,22)" fg:x="1300" fg:w="1"/><text x="13.8697%" y="559.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="13.6197%" y="533" width="0.0105%" height="15" fill="rgb(239,134,19)" fg:x="1300" fg:w="1"/><text x="13.8697%" y="543.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="13.6197%" y="517" width="0.0105%" height="15" fill="rgb(250,140,9)" fg:x="1300" fg:w="1"/><text x="13.8697%" y="527.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="13.6197%" y="501" width="0.0105%" height="15" fill="rgb(225,59,14)" fg:x="1300" fg:w="1"/><text x="13.8697%" y="511.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="13.6197%" y="485" width="0.0105%" height="15" fill="rgb(214,152,51)" fg:x="1300" fg:w="1"/><text x="13.8697%" y="495.50"></text></g><g><title>std::_Rb_tree&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt;, std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt;, std::_Select1st&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt;, std::less&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; &gt;, glslang::pool_allocator&lt;std::pair&lt;std::basic_string&lt;char, std::char_traits&lt;char&gt;, glslang::pool_allocator&lt;char&gt; &gt; const, glslang::TSymbol*&gt; &gt; &gt;::_M_erase (1 samples, 0.01%)</title><rect x="13.6197%" y="469" width="0.0105%" height="15" fill="rgb(251,227,43)" fg:x="1300" fg:w="1"/><text x="13.8697%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="13.6721%" y="469" width="0.0105%" height="15" fill="rgb(241,96,17)" fg:x="1305" fg:w="1"/><text x="13.9221%" y="479.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="13.6721%" y="453" width="0.0105%" height="15" fill="rgb(234,198,43)" fg:x="1305" fg:w="1"/><text x="13.9221%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (2 samples, 0.02%)</title><rect x="13.6721%" y="565" width="0.0210%" height="15" fill="rgb(220,108,29)" fg:x="1305" fg:w="2"/><text x="13.9221%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (2 samples, 0.02%)</title><rect x="13.6721%" y="549" width="0.0210%" height="15" fill="rgb(226,163,33)" fg:x="1305" fg:w="2"/><text x="13.9221%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (2 samples, 0.02%)</title><rect x="13.6721%" y="533" width="0.0210%" height="15" fill="rgb(205,194,45)" fg:x="1305" fg:w="2"/><text x="13.9221%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2 samples, 0.02%)</title><rect x="13.6721%" y="517" width="0.0210%" height="15" fill="rgb(206,143,44)" fg:x="1305" fg:w="2"/><text x="13.9221%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.02%)</title><rect x="13.6721%" y="501" width="0.0210%" height="15" fill="rgb(236,136,36)" fg:x="1305" fg:w="2"/><text x="13.9221%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="13.6721%" y="485" width="0.0210%" height="15" fill="rgb(249,172,42)" fg:x="1305" fg:w="2"/><text x="13.9221%" y="495.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="13.6826%" y="469" width="0.0105%" height="15" fill="rgb(216,139,23)" fg:x="1306" fg:w="1"/><text x="13.9326%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::invert (1 samples, 0.01%)</title><rect x="13.6826%" y="453" width="0.0105%" height="15" fill="rgb(207,166,20)" fg:x="1306" fg:w="1"/><text x="13.9326%" y="463.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::ShaderSpecialization as core::cmp::PartialEq&gt;::eq (7 samples, 0.07%)</title><rect x="13.6302%" y="597" width="0.0733%" height="15" fill="rgb(210,209,22)" fg:x="1301" fg:w="7"/><text x="13.8802%" y="607.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (7 samples, 0.07%)</title><rect x="13.6302%" y="581" width="0.0733%" height="15" fill="rgb(232,118,20)" fg:x="1301" fg:w="7"/><text x="13.8802%" y="591.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::len (1 samples, 0.01%)</title><rect x="13.6930%" y="565" width="0.0105%" height="15" fill="rgb(238,113,42)" fg:x="1307" fg:w="1"/><text x="13.9430%" y="575.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::len (1 samples, 0.01%)</title><rect x="13.6930%" y="549" width="0.0105%" height="15" fill="rgb(231,42,5)" fg:x="1307" fg:w="1"/><text x="13.9430%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::len (1 samples, 0.01%)</title><rect x="13.6930%" y="533" width="0.0105%" height="15" fill="rgb(243,166,24)" fg:x="1307" fg:w="1"/><text x="13.9430%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::len (1 samples, 0.01%)</title><rect x="13.6930%" y="517" width="0.0105%" height="15" fill="rgb(237,226,12)" fg:x="1307" fg:w="1"/><text x="13.9430%" y="527.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="13.7035%" y="581" width="0.0105%" height="15" fill="rgb(229,133,24)" fg:x="1308" fg:w="1"/><text x="13.9535%" y="591.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="13.7035%" y="565" width="0.0105%" height="15" fill="rgb(238,33,43)" fg:x="1308" fg:w="1"/><text x="13.9535%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="13.7035%" y="549" width="0.0105%" height="15" fill="rgb(227,59,38)" fg:x="1308" fg:w="1"/><text x="13.9535%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="13.7035%" y="533" width="0.0105%" height="15" fill="rgb(230,97,0)" fg:x="1308" fg:w="1"/><text x="13.9535%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="13.7035%" y="517" width="0.0105%" height="15" fill="rgb(250,173,50)" fg:x="1308" fg:w="1"/><text x="13.9535%" y="527.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="13.7559%" y="437" width="0.0210%" height="15" fill="rgb(240,15,50)" fg:x="1313" fg:w="2"/><text x="14.0059%" y="447.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout as core::cmp::PartialEq&gt;::eq (8 samples, 0.08%)</title><rect x="13.7035%" y="597" width="0.0838%" height="15" fill="rgb(221,93,22)" fg:x="1308" fg:w="8"/><text x="13.9535%" y="607.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (7 samples, 0.07%)</title><rect x="13.7140%" y="581" width="0.0733%" height="15" fill="rgb(245,180,53)" fg:x="1309" fg:w="7"/><text x="13.9640%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (7 samples, 0.07%)</title><rect x="13.7140%" y="565" width="0.0733%" height="15" fill="rgb(231,88,51)" fg:x="1309" fg:w="7"/><text x="13.9640%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (7 samples, 0.07%)</title><rect x="13.7140%" y="549" width="0.0733%" height="15" fill="rgb(240,58,21)" fg:x="1309" fg:w="7"/><text x="13.9640%" y="559.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (7 samples, 0.07%)</title><rect x="13.7140%" y="533" width="0.0733%" height="15" fill="rgb(237,21,10)" fg:x="1309" fg:w="7"/><text x="13.9640%" y="543.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (7 samples, 0.07%)</title><rect x="13.7140%" y="517" width="0.0733%" height="15" fill="rgb(218,43,11)" fg:x="1309" fg:w="7"/><text x="13.9640%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (6 samples, 0.06%)</title><rect x="13.7245%" y="501" width="0.0629%" height="15" fill="rgb(218,221,29)" fg:x="1310" fg:w="6"/><text x="13.9745%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (6 samples, 0.06%)</title><rect x="13.7245%" y="485" width="0.0629%" height="15" fill="rgb(214,118,42)" fg:x="1310" fg:w="6"/><text x="13.9745%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.06%)</title><rect x="13.7245%" y="469" width="0.0629%" height="15" fill="rgb(251,200,26)" fg:x="1310" fg:w="6"/><text x="13.9745%" y="479.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute as core::cmp::PartialEq&gt;::eq (6 samples, 0.06%)</title><rect x="13.7245%" y="453" width="0.0629%" height="15" fill="rgb(237,101,39)" fg:x="1310" fg:w="6"/><text x="13.9745%" y="463.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_format::VertexFormat as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="13.7768%" y="437" width="0.0105%" height="15" fill="rgb(251,117,11)" fg:x="1315" fg:w="1"/><text x="14.0268%" y="447.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="13.7978%" y="549" width="0.0314%" height="15" fill="rgb(216,223,23)" fg:x="1317" fg:w="3"/><text x="14.0478%" y="559.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="13.7978%" y="533" width="0.0314%" height="15" fill="rgb(251,54,12)" fg:x="1317" fg:w="3"/><text x="14.0478%" y="543.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="13.7978%" y="517" width="0.0314%" height="15" fill="rgb(254,176,54)" fg:x="1317" fg:w="3"/><text x="14.0478%" y="527.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="13.7978%" y="501" width="0.0314%" height="15" fill="rgb(210,32,8)" fg:x="1317" fg:w="3"/><text x="14.0478%" y="511.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="13.8083%" y="485" width="0.0210%" height="15" fill="rgb(235,52,38)" fg:x="1318" fg:w="2"/><text x="14.0583%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="13.8083%" y="469" width="0.0210%" height="15" fill="rgb(231,4,44)" fg:x="1318" fg:w="2"/><text x="14.0583%" y="479.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="13.8188%" y="453" width="0.0105%" height="15" fill="rgb(249,2,32)" fg:x="1319" fg:w="1"/><text x="14.0688%" y="463.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="13.8292%" y="437" width="0.0105%" height="15" fill="rgb(224,65,26)" fg:x="1320" fg:w="1"/><text x="14.0792%" y="447.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="13.8292%" y="421" width="0.0105%" height="15" fill="rgb(250,73,40)" fg:x="1320" fg:w="1"/><text x="14.0792%" y="431.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="13.8292%" y="405" width="0.0105%" height="15" fill="rgb(253,177,16)" fg:x="1320" fg:w="1"/><text x="14.0792%" y="415.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (2 samples, 0.02%)</title><rect x="13.8397%" y="389" width="0.0210%" height="15" fill="rgb(217,32,34)" fg:x="1321" fg:w="2"/><text x="14.0897%" y="399.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="13.8502%" y="373" width="0.0105%" height="15" fill="rgb(212,7,10)" fg:x="1322" fg:w="1"/><text x="14.1002%" y="383.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="13.8502%" y="357" width="0.0105%" height="15" fill="rgb(245,89,8)" fg:x="1322" fg:w="1"/><text x="14.1002%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="13.8607%" y="389" width="0.0105%" height="15" fill="rgb(237,16,53)" fg:x="1323" fg:w="1"/><text x="14.1107%" y="399.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (4 samples, 0.04%)</title><rect x="13.8397%" y="405" width="0.0419%" height="15" fill="rgb(250,204,30)" fg:x="1321" fg:w="4"/><text x="14.0897%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="13.8711%" y="389" width="0.0105%" height="15" fill="rgb(208,77,27)" fg:x="1324" fg:w="1"/><text x="14.1211%" y="399.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (1 samples, 0.01%)</title><rect x="13.8816%" y="405" width="0.0105%" height="15" fill="rgb(250,204,28)" fg:x="1325" fg:w="1"/><text x="14.1316%" y="415.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="13.8816%" y="389" width="0.0105%" height="15" fill="rgb(244,63,21)" fg:x="1325" fg:w="1"/><text x="14.1316%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.07%)</title><rect x="13.8292%" y="453" width="0.0733%" height="15" fill="rgb(236,85,44)" fg:x="1320" fg:w="7"/><text x="14.0792%" y="463.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (6 samples, 0.06%)</title><rect x="13.8397%" y="437" width="0.0629%" height="15" fill="rgb(215,98,4)" fg:x="1321" fg:w="6"/><text x="14.0897%" y="447.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (6 samples, 0.06%)</title><rect x="13.8397%" y="421" width="0.0629%" height="15" fill="rgb(235,38,11)" fg:x="1321" fg:w="6"/><text x="14.0897%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="13.8921%" y="405" width="0.0105%" height="15" fill="rgb(254,186,25)" fg:x="1326" fg:w="1"/><text x="14.1421%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (8 samples, 0.08%)</title><rect x="13.9130%" y="421" width="0.0838%" height="15" fill="rgb(225,55,31)" fg:x="1328" fg:w="8"/><text x="14.1630%" y="431.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (8 samples, 0.08%)</title><rect x="13.9130%" y="405" width="0.0838%" height="15" fill="rgb(211,15,21)" fg:x="1328" fg:w="8"/><text x="14.1630%" y="415.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (8 samples, 0.08%)</title><rect x="13.9130%" y="389" width="0.0838%" height="15" fill="rgb(215,187,41)" fg:x="1328" fg:w="8"/><text x="14.1630%" y="399.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (8 samples, 0.08%)</title><rect x="13.9130%" y="373" width="0.0838%" height="15" fill="rgb(248,69,32)" fg:x="1328" fg:w="8"/><text x="14.1630%" y="383.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (8 samples, 0.08%)</title><rect x="13.9130%" y="357" width="0.0838%" height="15" fill="rgb(252,102,52)" fg:x="1328" fg:w="8"/><text x="14.1630%" y="367.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (8 samples, 0.08%)</title><rect x="13.9130%" y="341" width="0.0838%" height="15" fill="rgb(253,140,32)" fg:x="1328" fg:w="8"/><text x="14.1630%" y="351.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="13.9864%" y="325" width="0.0105%" height="15" fill="rgb(216,56,42)" fg:x="1335" fg:w="1"/><text x="14.2364%" y="335.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="13.9969%" y="373" width="0.0105%" height="15" fill="rgb(216,184,14)" fg:x="1336" fg:w="1"/><text x="14.2469%" y="383.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (43 samples, 0.45%)</title><rect x="13.6302%" y="693" width="0.4505%" height="15" fill="rgb(237,187,27)" fg:x="1301" fg:w="43"/><text x="13.8802%" y="703.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}} (43 samples, 0.45%)</title><rect x="13.6302%" y="677" width="0.4505%" height="15" fill="rgb(219,65,3)" fg:x="1301" fg:w="43"/><text x="13.8802%" y="687.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (43 samples, 0.45%)</title><rect x="13.6302%" y="661" width="0.4505%" height="15" fill="rgb(245,83,25)" fg:x="1301" fg:w="43"/><text x="13.8802%" y="671.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}}::{{closure}} (43 samples, 0.45%)</title><rect x="13.6302%" y="645" width="0.4505%" height="15" fill="rgb(214,205,45)" fg:x="1301" fg:w="43"/><text x="13.8802%" y="655.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (43 samples, 0.45%)</title><rect x="13.6302%" y="629" width="0.4505%" height="15" fill="rgb(241,20,18)" fg:x="1301" fg:w="43"/><text x="13.8802%" y="639.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (43 samples, 0.45%)</title><rect x="13.6302%" y="613" width="0.4505%" height="15" fill="rgb(232,163,23)" fg:x="1301" fg:w="43"/><text x="13.8802%" y="623.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (28 samples, 0.29%)</title><rect x="13.7873%" y="597" width="0.2933%" height="15" fill="rgb(214,5,46)" fg:x="1316" fg:w="28"/><text x="14.0373%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (27 samples, 0.28%)</title><rect x="13.7978%" y="581" width="0.2829%" height="15" fill="rgb(229,78,17)" fg:x="1317" fg:w="27"/><text x="14.0478%" y="591.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (27 samples, 0.28%)</title><rect x="13.7978%" y="565" width="0.2829%" height="15" fill="rgb(248,89,10)" fg:x="1317" fg:w="27"/><text x="14.0478%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (24 samples, 0.25%)</title><rect x="13.8292%" y="549" width="0.2514%" height="15" fill="rgb(248,54,15)" fg:x="1320" fg:w="24"/><text x="14.0792%" y="559.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (24 samples, 0.25%)</title><rect x="13.8292%" y="533" width="0.2514%" height="15" fill="rgb(223,116,6)" fg:x="1320" fg:w="24"/><text x="14.0792%" y="543.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (24 samples, 0.25%)</title><rect x="13.8292%" y="517" width="0.2514%" height="15" fill="rgb(205,125,38)" fg:x="1320" fg:w="24"/><text x="14.0792%" y="527.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (24 samples, 0.25%)</title><rect x="13.8292%" y="501" width="0.2514%" height="15" fill="rgb(251,78,38)" fg:x="1320" fg:w="24"/><text x="14.0792%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (24 samples, 0.25%)</title><rect x="13.8292%" y="485" width="0.2514%" height="15" fill="rgb(253,78,28)" fg:x="1320" fg:w="24"/><text x="14.0792%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (24 samples, 0.25%)</title><rect x="13.8292%" y="469" width="0.2514%" height="15" fill="rgb(209,120,3)" fg:x="1320" fg:w="24"/><text x="14.0792%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (17 samples, 0.18%)</title><rect x="13.9026%" y="453" width="0.1781%" height="15" fill="rgb(238,229,9)" fg:x="1327" fg:w="17"/><text x="14.1526%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (17 samples, 0.18%)</title><rect x="13.9026%" y="437" width="0.1781%" height="15" fill="rgb(253,159,18)" fg:x="1327" fg:w="17"/><text x="14.1526%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8 samples, 0.08%)</title><rect x="13.9969%" y="421" width="0.0838%" height="15" fill="rgb(244,42,34)" fg:x="1336" fg:w="8"/><text x="14.2469%" y="431.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8 samples, 0.08%)</title><rect x="13.9969%" y="405" width="0.0838%" height="15" fill="rgb(224,8,7)" fg:x="1336" fg:w="8"/><text x="14.2469%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8 samples, 0.08%)</title><rect x="13.9969%" y="389" width="0.0838%" height="15" fill="rgb(210,201,45)" fg:x="1336" fg:w="8"/><text x="14.2469%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (7 samples, 0.07%)</title><rect x="14.0073%" y="373" width="0.0733%" height="15" fill="rgb(252,185,21)" fg:x="1337" fg:w="7"/><text x="14.2573%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (7 samples, 0.07%)</title><rect x="14.0073%" y="357" width="0.0733%" height="15" fill="rgb(223,131,1)" fg:x="1337" fg:w="7"/><text x="14.2573%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (7 samples, 0.07%)</title><rect x="14.0073%" y="341" width="0.0733%" height="15" fill="rgb(245,141,16)" fg:x="1337" fg:w="7"/><text x="14.2573%" y="351.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="14.0807%" y="629" width="0.0105%" height="15" fill="rgb(229,55,45)" fg:x="1344" fg:w="1"/><text x="14.3307%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="14.0807%" y="613" width="0.0105%" height="15" fill="rgb(208,92,15)" fg:x="1344" fg:w="1"/><text x="14.3307%" y="623.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="14.0807%" y="597" width="0.0105%" height="15" fill="rgb(234,185,47)" fg:x="1344" fg:w="1"/><text x="14.3307%" y="607.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="14.0911%" y="629" width="0.0105%" height="15" fill="rgb(253,104,50)" fg:x="1345" fg:w="1"/><text x="14.3411%" y="639.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="14.0911%" y="613" width="0.0105%" height="15" fill="rgb(205,70,7)" fg:x="1345" fg:w="1"/><text x="14.3411%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (4 samples, 0.04%)</title><rect x="14.0807%" y="645" width="0.0419%" height="15" fill="rgb(240,178,43)" fg:x="1344" fg:w="4"/><text x="14.3307%" y="655.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="14.1016%" y="629" width="0.0210%" height="15" fill="rgb(214,112,2)" fg:x="1346" fg:w="2"/><text x="14.3516%" y="639.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="14.1016%" y="613" width="0.0210%" height="15" fill="rgb(206,46,17)" fg:x="1346" fg:w="2"/><text x="14.3516%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="14.1226%" y="597" width="0.0210%" height="15" fill="rgb(225,220,16)" fg:x="1348" fg:w="2"/><text x="14.3726%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="14.1331%" y="581" width="0.0105%" height="15" fill="rgb(238,65,40)" fg:x="1349" fg:w="1"/><text x="14.3831%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="14.1331%" y="565" width="0.0105%" height="15" fill="rgb(230,151,21)" fg:x="1349" fg:w="1"/><text x="14.3831%" y="575.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (62 samples, 0.65%)</title><rect x="13.5045%" y="725" width="0.6496%" height="15" fill="rgb(218,58,49)" fg:x="1289" fg:w="62"/><text x="13.7545%" y="735.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (50 samples, 0.52%)</title><rect x="13.6302%" y="709" width="0.5238%" height="15" fill="rgb(219,179,14)" fg:x="1301" fg:w="50"/><text x="13.8802%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (7 samples, 0.07%)</title><rect x="14.0807%" y="693" width="0.0733%" height="15" fill="rgb(223,72,1)" fg:x="1344" fg:w="7"/><text x="14.3307%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (7 samples, 0.07%)</title><rect x="14.0807%" y="677" width="0.0733%" height="15" fill="rgb(238,126,10)" fg:x="1344" fg:w="7"/><text x="14.3307%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (7 samples, 0.07%)</title><rect x="14.0807%" y="661" width="0.0733%" height="15" fill="rgb(224,206,38)" fg:x="1344" fg:w="7"/><text x="14.3307%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.03%)</title><rect x="14.1226%" y="645" width="0.0314%" height="15" fill="rgb(212,201,54)" fg:x="1348" fg:w="3"/><text x="14.3726%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="14.1226%" y="629" width="0.0314%" height="15" fill="rgb(218,154,48)" fg:x="1348" fg:w="3"/><text x="14.3726%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="14.1226%" y="613" width="0.0314%" height="15" fill="rgb(232,93,24)" fg:x="1348" fg:w="3"/><text x="14.3726%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="14.1435%" y="597" width="0.0105%" height="15" fill="rgb(245,30,21)" fg:x="1350" fg:w="1"/><text x="14.3935%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="14.1435%" y="581" width="0.0105%" height="15" fill="rgb(242,148,29)" fg:x="1350" fg:w="1"/><text x="14.3935%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="14.1435%" y="565" width="0.0105%" height="15" fill="rgb(244,153,54)" fg:x="1350" fg:w="1"/><text x="14.3935%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="14.1435%" y="549" width="0.0105%" height="15" fill="rgb(252,87,22)" fg:x="1350" fg:w="1"/><text x="14.3935%" y="559.50"></text></g><g><title>bevy_render::draw::Draw::set_index_buffer (5 samples, 0.05%)</title><rect x="14.1540%" y="709" width="0.0524%" height="15" fill="rgb(210,51,29)" fg:x="1351" fg:w="5"/><text x="14.4040%" y="719.50"></text></g><g><title>bevy_render::draw::Draw::render_command (5 samples, 0.05%)</title><rect x="14.1540%" y="693" width="0.0524%" height="15" fill="rgb(242,136,47)" fg:x="1351" fg:w="5"/><text x="14.4040%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (5 samples, 0.05%)</title><rect x="14.1540%" y="677" width="0.0524%" height="15" fill="rgb(238,68,4)" fg:x="1351" fg:w="5"/><text x="14.4040%" y="687.50"></text></g><g><title>core::ptr::write (5 samples, 0.05%)</title><rect x="14.1540%" y="661" width="0.0524%" height="15" fill="rgb(242,161,30)" fg:x="1351" fg:w="5"/><text x="14.4040%" y="671.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (6 samples, 0.06%)</title><rect x="14.1540%" y="725" width="0.0629%" height="15" fill="rgb(218,58,44)" fg:x="1351" fg:w="6"/><text x="14.4040%" y="735.50"></text></g><g><title>bevy_render::draw::Draw::set_vertex_buffer (1 samples, 0.01%)</title><rect x="14.2064%" y="709" width="0.0105%" height="15" fill="rgb(252,125,32)" fg:x="1356" fg:w="1"/><text x="14.4564%" y="719.50"></text></g><g><title>bevy_render::draw::Draw::render_command (1 samples, 0.01%)</title><rect x="14.2064%" y="693" width="0.0105%" height="15" fill="rgb(219,178,0)" fg:x="1356" fg:w="1"/><text x="14.4564%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="14.2064%" y="677" width="0.0105%" height="15" fill="rgb(213,152,7)" fg:x="1356" fg:w="1"/><text x="14.4564%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="14.2064%" y="661" width="0.0105%" height="15" fill="rgb(249,109,34)" fg:x="1356" fg:w="1"/><text x="14.4564%" y="671.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (170 samples, 1.78%)</title><rect x="12.4463%" y="741" width="1.7810%" height="15" fill="rgb(232,96,21)" fg:x="1188" fg:w="170"/><text x="12.6963%" y="751.50">b..</text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;alloc::string::String,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="14.2169%" y="725" width="0.0105%" height="15" fill="rgb(228,27,39)" fg:x="1357" fg:w="1"/><text x="14.4669%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;alloc::string::String,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="14.2169%" y="709" width="0.0105%" height="15" fill="rgb(211,182,52)" fg:x="1357" fg:w="1"/><text x="14.4669%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,(),ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="14.2169%" y="693" width="0.0105%" height="15" fill="rgb(234,178,38)" fg:x="1357" fg:w="1"/><text x="14.4669%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;&gt; (1 samples, 0.01%)</title><rect x="14.2169%" y="677" width="0.0105%" height="15" fill="rgb(221,111,3)" fg:x="1357" fg:w="1"/><text x="14.4669%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="14.2169%" y="661" width="0.0105%" height="15" fill="rgb(228,175,21)" fg:x="1357" fg:w="1"/><text x="14.4669%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.01%)</title><rect x="14.2169%" y="645" width="0.0105%" height="15" fill="rgb(228,174,43)" fg:x="1357" fg:w="1"/><text x="14.4669%" y="655.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="14.2902%" y="709" width="0.0105%" height="15" fill="rgb(211,191,0)" fg:x="1364" fg:w="1"/><text x="14.5402%" y="719.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::EntityFetch as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="14.2902%" y="693" width="0.0105%" height="15" fill="rgb(253,117,3)" fg:x="1364" fg:w="1"/><text x="14.5402%" y="703.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="14.2588%" y="725" width="0.0524%" height="15" fill="rgb(241,127,19)" fg:x="1361" fg:w="5"/><text x="14.5088%" y="735.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (1 samples, 0.01%)</title><rect x="14.3007%" y="709" width="0.0105%" height="15" fill="rgb(218,103,12)" fg:x="1365" fg:w="1"/><text x="14.5507%" y="719.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="14.3007%" y="693" width="0.0105%" height="15" fill="rgb(236,214,43)" fg:x="1365" fg:w="1"/><text x="14.5507%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.01%)</title><rect x="14.3112%" y="645" width="0.0105%" height="15" fill="rgb(244,144,19)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="655.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="14.3112%" y="629" width="0.0105%" height="15" fill="rgb(246,188,10)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="639.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (1 samples, 0.01%)</title><rect x="14.3112%" y="613" width="0.0105%" height="15" fill="rgb(212,193,33)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="623.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="14.3112%" y="597" width="0.0105%" height="15" fill="rgb(241,51,29)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="14.3112%" y="581" width="0.0105%" height="15" fill="rgb(211,58,19)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="591.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="14.3112%" y="565" width="0.0105%" height="15" fill="rgb(229,111,26)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="575.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="14.3112%" y="549" width="0.0105%" height="15" fill="rgb(213,115,40)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="14.3112%" y="533" width="0.0105%" height="15" fill="rgb(209,56,44)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (1 samples, 0.01%)</title><rect x="14.3112%" y="517" width="0.0105%" height="15" fill="rgb(230,108,32)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (1 samples, 0.01%)</title><rect x="14.3112%" y="501" width="0.0105%" height="15" fill="rgb(216,165,31)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="14.3112%" y="485" width="0.0105%" height="15" fill="rgb(218,122,21)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="495.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="14.3112%" y="469" width="0.0105%" height="15" fill="rgb(223,224,47)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="479.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="14.3112%" y="453" width="0.0105%" height="15" fill="rgb(238,102,44)" fg:x="1366" fg:w="1"/><text x="14.5612%" y="463.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (2 samples, 0.02%)</title><rect x="14.3112%" y="725" width="0.0210%" height="15" fill="rgb(236,46,40)" fg:x="1366" fg:w="2"/><text x="14.5612%" y="735.50"></text></g><g><title>futures_lite::future::block_on (2 samples, 0.02%)</title><rect x="14.3112%" y="709" width="0.0210%" height="15" fill="rgb(247,202,50)" fg:x="1366" fg:w="2"/><text x="14.5612%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="14.3112%" y="693" width="0.0210%" height="15" fill="rgb(209,99,20)" fg:x="1366" fg:w="2"/><text x="14.5612%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="14.3112%" y="677" width="0.0210%" height="15" fill="rgb(252,27,34)" fg:x="1366" fg:w="2"/><text x="14.5612%" y="687.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (2 samples, 0.02%)</title><rect x="14.3112%" y="661" width="0.0210%" height="15" fill="rgb(215,206,23)" fg:x="1366" fg:w="2"/><text x="14.5612%" y="671.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker (1 samples, 0.01%)</title><rect x="14.3216%" y="645" width="0.0105%" height="15" fill="rgb(212,135,36)" fg:x="1367" fg:w="1"/><text x="14.5716%" y="655.50"></text></g><g><title>parking::Parker::new (1 samples, 0.01%)</title><rect x="14.3216%" y="629" width="0.0105%" height="15" fill="rgb(240,189,1)" fg:x="1367" fg:w="1"/><text x="14.5716%" y="639.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="14.3216%" y="613" width="0.0105%" height="15" fill="rgb(242,56,20)" fg:x="1367" fg:w="1"/><text x="14.5716%" y="623.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="14.3216%" y="597" width="0.0105%" height="15" fill="rgb(247,132,33)" fg:x="1367" fg:w="1"/><text x="14.5716%" y="607.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="14.3216%" y="581" width="0.0105%" height="15" fill="rgb(208,149,11)" fg:x="1367" fg:w="1"/><text x="14.5716%" y="591.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="14.3216%" y="565" width="0.0105%" height="15" fill="rgb(211,33,11)" fg:x="1367" fg:w="1"/><text x="14.5716%" y="575.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="14.3216%" y="549" width="0.0105%" height="15" fill="rgb(221,29,38)" fg:x="1367" fg:w="1"/><text x="14.5716%" y="559.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="14.3216%" y="533" width="0.0105%" height="15" fill="rgb(206,182,49)" fg:x="1367" fg:w="1"/><text x="14.5716%" y="543.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (1 samples, 0.01%)</title><rect x="14.3321%" y="725" width="0.0105%" height="15" fill="rgb(216,140,1)" fg:x="1368" fg:w="1"/><text x="14.5821%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="14.3321%" y="709" width="0.0105%" height="15" fill="rgb(232,57,40)" fg:x="1368" fg:w="1"/><text x="14.5821%" y="719.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="14.3321%" y="693" width="0.0105%" height="15" fill="rgb(224,186,18)" fg:x="1368" fg:w="1"/><text x="14.5821%" y="703.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (1 samples, 0.01%)</title><rect x="14.3321%" y="677" width="0.0105%" height="15" fill="rgb(215,121,11)" fg:x="1368" fg:w="1"/><text x="14.5821%" y="687.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.01%)</title><rect x="14.3321%" y="661" width="0.0105%" height="15" fill="rgb(245,147,10)" fg:x="1368" fg:w="1"/><text x="14.5821%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.01%)</title><rect x="14.3321%" y="645" width="0.0105%" height="15" fill="rgb(238,153,13)" fg:x="1368" fg:w="1"/><text x="14.5821%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="14.3321%" y="629" width="0.0105%" height="15" fill="rgb(233,108,0)" fg:x="1368" fg:w="1"/><text x="14.5821%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="14.3321%" y="613" width="0.0105%" height="15" fill="rgb(212,157,17)" fg:x="1368" fg:w="1"/><text x="14.5821%" y="623.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="14.4159%" y="677" width="0.0105%" height="15" fill="rgb(225,213,38)" fg:x="1376" fg:w="1"/><text x="14.6659%" y="687.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::EntityFetch as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="14.4159%" y="661" width="0.0105%" height="15" fill="rgb(248,16,11)" fg:x="1376" fg:w="1"/><text x="14.6659%" y="671.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="14.3740%" y="693" width="0.0733%" height="15" fill="rgb(241,33,4)" fg:x="1372" fg:w="7"/><text x="14.6240%" y="703.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (2 samples, 0.02%)</title><rect x="14.4264%" y="677" width="0.0210%" height="15" fill="rgb(222,26,43)" fg:x="1377" fg:w="2"/><text x="14.6764%" y="687.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (2 samples, 0.02%)</title><rect x="14.4264%" y="661" width="0.0210%" height="15" fill="rgb(243,29,36)" fg:x="1377" fg:w="2"/><text x="14.6764%" y="671.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (1 samples, 0.01%)</title><rect x="14.4369%" y="645" width="0.0105%" height="15" fill="rgb(241,9,27)" fg:x="1378" fg:w="1"/><text x="14.6869%" y="655.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="14.4369%" y="629" width="0.0105%" height="15" fill="rgb(205,117,26)" fg:x="1378" fg:w="1"/><text x="14.6869%" y="639.50"></text></g><g><title>bevy_ecs::component::ComponentTicks::is_changed (1 samples, 0.01%)</title><rect x="14.4369%" y="613" width="0.0105%" height="15" fill="rgb(209,80,39)" fg:x="1378" fg:w="1"/><text x="14.6869%" y="623.50"></text></g><g><title>core::num::&lt;impl u32&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="14.4369%" y="597" width="0.0105%" height="15" fill="rgb(239,155,6)" fg:x="1378" fg:w="1"/><text x="14.6869%" y="607.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="14.6464%" y="677" width="0.0105%" height="15" fill="rgb(212,104,12)" fg:x="1398" fg:w="1"/><text x="14.8964%" y="687.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="14.6464%" y="661" width="0.0105%" height="15" fill="rgb(234,204,3)" fg:x="1398" fg:w="1"/><text x="14.8964%" y="671.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="14.6464%" y="645" width="0.0105%" height="15" fill="rgb(251,218,7)" fg:x="1398" fg:w="1"/><text x="14.8964%" y="655.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (1 samples, 0.01%)</title><rect x="14.6569%" y="645" width="0.0105%" height="15" fill="rgb(221,81,32)" fg:x="1399" fg:w="1"/><text x="14.9069%" y="655.50"></text></g><g><title>&lt;f32 as bevy_render::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (14 samples, 0.15%)</title><rect x="14.6674%" y="645" width="0.1467%" height="15" fill="rgb(214,152,26)" fg:x="1400" fg:w="14"/><text x="14.9174%" y="655.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (14 samples, 0.15%)</title><rect x="14.6674%" y="629" width="0.1467%" height="15" fill="rgb(223,22,3)" fg:x="1400" fg:w="14"/><text x="14.9174%" y="639.50"></text></g><g><title>[libm-2.33.so] (14 samples, 0.15%)</title><rect x="14.6674%" y="613" width="0.1467%" height="15" fill="rgb(207,174,7)" fg:x="1400" fg:w="14"/><text x="14.9174%" y="623.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (18 samples, 0.19%)</title><rect x="14.6569%" y="661" width="0.1886%" height="15" fill="rgb(224,19,52)" fg:x="1399" fg:w="18"/><text x="14.9069%" y="671.50"></text></g><g><title>[libm-2.33.so] (3 samples, 0.03%)</title><rect x="14.8140%" y="645" width="0.0314%" height="15" fill="rgb(228,24,14)" fg:x="1414" fg:w="3"/><text x="15.0640%" y="655.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (19 samples, 0.20%)</title><rect x="14.6569%" y="677" width="0.1991%" height="15" fill="rgb(230,153,43)" fg:x="1399" fg:w="19"/><text x="14.9069%" y="687.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::split_at_mut (1 samples, 0.01%)</title><rect x="14.8455%" y="661" width="0.0105%" height="15" fill="rgb(231,106,12)" fg:x="1417" fg:w="1"/><text x="15.0955%" y="671.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::iter (1 samples, 0.01%)</title><rect x="14.8559%" y="677" width="0.0105%" height="15" fill="rgb(215,92,2)" fg:x="1418" fg:w="1"/><text x="15.1059%" y="687.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource::RenderResourceIterator::new (1 samples, 0.01%)</title><rect x="14.8559%" y="661" width="0.0105%" height="15" fill="rgb(249,143,25)" fg:x="1418" fg:w="1"/><text x="15.1059%" y="671.50"></text></g><g><title>&lt;glam::mat4::Mat4 as bevy_core::bytes::Bytes&gt;::write_bytes (1 samples, 0.01%)</title><rect x="14.8664%" y="661" width="0.0105%" height="15" fill="rgb(252,7,35)" fg:x="1419" fg:w="1"/><text x="15.1164%" y="671.50"></text></g><g><title>&lt;T as bevy_core::bytes::Bytes&gt;::write_bytes (1 samples, 0.01%)</title><rect x="14.8664%" y="645" width="0.0105%" height="15" fill="rgb(216,69,40)" fg:x="1419" fg:w="1"/><text x="15.1164%" y="655.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="14.8664%" y="629" width="0.0105%" height="15" fill="rgb(240,36,33)" fg:x="1419" fg:w="1"/><text x="15.1164%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="14.8664%" y="613" width="0.0105%" height="15" fill="rgb(231,128,14)" fg:x="1419" fg:w="1"/><text x="15.1164%" y="623.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (4 samples, 0.04%)</title><rect x="14.8664%" y="677" width="0.0419%" height="15" fill="rgb(245,143,14)" fg:x="1419" fg:w="4"/><text x="15.1164%" y="687.50"></text></g><g><title>bevy_transform::components::global_transform::GlobalTransform::compute_matrix (3 samples, 0.03%)</title><rect x="14.8769%" y="661" width="0.0314%" height="15" fill="rgb(222,130,28)" fg:x="1420" fg:w="3"/><text x="15.1269%" y="671.50"></text></g><g><title>glam::mat4::Mat4::from_scale_rotation_translation (3 samples, 0.03%)</title><rect x="14.8769%" y="645" width="0.0314%" height="15" fill="rgb(212,10,48)" fg:x="1420" fg:w="3"/><text x="15.1269%" y="655.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::from_scale_quaternion_translation (3 samples, 0.03%)</title><rect x="14.8769%" y="629" width="0.0314%" height="15" fill="rgb(254,118,45)" fg:x="1420" fg:w="3"/><text x="15.1269%" y="639.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::quaternion_to_axes (3 samples, 0.03%)</title><rect x="14.8769%" y="613" width="0.0314%" height="15" fill="rgb(228,6,45)" fg:x="1420" fg:w="3"/><text x="15.1269%" y="623.50"></text></g><g><title>&lt;f32 as core::ops::arith::Add&gt;::add (1 samples, 0.01%)</title><rect x="14.8979%" y="597" width="0.0105%" height="15" fill="rgb(241,18,35)" fg:x="1422" fg:w="1"/><text x="15.1479%" y="607.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_aligned_uniform_size (1 samples, 0.01%)</title><rect x="14.9083%" y="677" width="0.0105%" height="15" fill="rgb(227,214,53)" fg:x="1423" fg:w="1"/><text x="15.1583%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="14.9188%" y="677" width="0.0210%" height="15" fill="rgb(224,107,51)" fg:x="1424" fg:w="2"/><text x="15.1688%" y="687.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="14.9293%" y="661" width="0.0105%" height="15" fill="rgb(248,60,28)" fg:x="1425" fg:w="1"/><text x="15.1793%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="14.9398%" y="677" width="0.0105%" height="15" fill="rgb(249,101,23)" fg:x="1426" fg:w="1"/><text x="15.1898%" y="687.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="14.9398%" y="661" width="0.0105%" height="15" fill="rgb(228,51,19)" fg:x="1426" fg:w="1"/><text x="15.1898%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="14.9502%" y="597" width="0.0105%" height="15" fill="rgb(213,20,6)" fg:x="1427" fg:w="1"/><text x="15.2002%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="14.9502%" y="581" width="0.0105%" height="15" fill="rgb(212,124,10)" fg:x="1427" fg:w="1"/><text x="15.2002%" y="591.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="14.9607%" y="549" width="0.0105%" height="15" fill="rgb(248,3,40)" fg:x="1428" fg:w="1"/><text x="15.2107%" y="559.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="14.9502%" y="613" width="0.0314%" height="15" fill="rgb(223,178,23)" fg:x="1427" fg:w="3"/><text x="15.2002%" y="623.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="14.9607%" y="597" width="0.0210%" height="15" fill="rgb(240,132,45)" fg:x="1428" fg:w="2"/><text x="15.2107%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="14.9607%" y="581" width="0.0210%" height="15" fill="rgb(245,164,36)" fg:x="1428" fg:w="2"/><text x="15.2107%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u32 (2 samples, 0.02%)</title><rect x="14.9607%" y="565" width="0.0210%" height="15" fill="rgb(231,188,53)" fg:x="1428" fg:w="2"/><text x="15.2107%" y="575.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (1 samples, 0.01%)</title><rect x="14.9712%" y="549" width="0.0105%" height="15" fill="rgb(237,198,39)" fg:x="1429" fg:w="1"/><text x="15.2212%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="14.9921%" y="581" width="0.0314%" height="15" fill="rgb(223,120,35)" fg:x="1431" fg:w="3"/><text x="15.2421%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="14.9921%" y="565" width="0.0314%" height="15" fill="rgb(253,107,49)" fg:x="1431" fg:w="3"/><text x="15.2421%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="15.0026%" y="549" width="0.0210%" height="15" fill="rgb(216,44,31)" fg:x="1432" fg:w="2"/><text x="15.2526%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="15.0131%" y="533" width="0.0105%" height="15" fill="rgb(253,87,21)" fg:x="1433" fg:w="1"/><text x="15.2631%" y="543.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.04%)</title><rect x="15.0236%" y="581" width="0.0419%" height="15" fill="rgb(226,18,2)" fg:x="1434" fg:w="4"/><text x="15.2736%" y="591.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (4 samples, 0.04%)</title><rect x="15.0236%" y="565" width="0.0419%" height="15" fill="rgb(216,8,46)" fg:x="1434" fg:w="4"/><text x="15.2736%" y="575.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding (13 samples, 0.14%)</title><rect x="14.9502%" y="677" width="0.1362%" height="15" fill="rgb(226,140,39)" fg:x="1427" fg:w="13"/><text x="15.2002%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (13 samples, 0.14%)</title><rect x="14.9502%" y="661" width="0.1362%" height="15" fill="rgb(221,194,54)" fg:x="1427" fg:w="13"/><text x="15.2002%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (13 samples, 0.14%)</title><rect x="14.9502%" y="645" width="0.1362%" height="15" fill="rgb(213,92,11)" fg:x="1427" fg:w="13"/><text x="15.2002%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (13 samples, 0.14%)</title><rect x="14.9502%" y="629" width="0.1362%" height="15" fill="rgb(229,162,46)" fg:x="1427" fg:w="13"/><text x="15.2002%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (10 samples, 0.10%)</title><rect x="14.9817%" y="613" width="0.1048%" height="15" fill="rgb(214,111,36)" fg:x="1430" fg:w="10"/><text x="15.2317%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.10%)</title><rect x="14.9817%" y="597" width="0.1048%" height="15" fill="rgb(207,6,21)" fg:x="1430" fg:w="10"/><text x="15.2317%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="15.0655%" y="581" width="0.0210%" height="15" fill="rgb(213,127,38)" fg:x="1438" fg:w="2"/><text x="15.3155%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="15.0655%" y="565" width="0.0210%" height="15" fill="rgb(238,118,32)" fg:x="1438" fg:w="2"/><text x="15.3155%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="15.0655%" y="549" width="0.0210%" height="15" fill="rgb(240,139,39)" fg:x="1438" fg:w="2"/><text x="15.3155%" y="559.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="15.0655%" y="533" width="0.0210%" height="15" fill="rgb(235,10,37)" fg:x="1438" fg:w="2"/><text x="15.3155%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="15.0655%" y="517" width="0.0210%" height="15" fill="rgb(249,171,38)" fg:x="1438" fg:w="2"/><text x="15.3155%" y="527.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="15.0655%" y="501" width="0.0210%" height="15" fill="rgb(242,144,32)" fg:x="1438" fg:w="2"/><text x="15.3155%" y="511.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="15.0969%" y="437" width="0.0419%" height="15" fill="rgb(217,117,21)" fg:x="1441" fg:w="4"/><text x="15.3469%" y="447.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="15.1388%" y="437" width="0.0105%" height="15" fill="rgb(249,87,1)" fg:x="1445" fg:w="1"/><text x="15.3888%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="15.1388%" y="421" width="0.0105%" height="15" fill="rgb(248,196,48)" fg:x="1445" fg:w="1"/><text x="15.3888%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (6 samples, 0.06%)</title><rect x="15.0969%" y="533" width="0.0629%" height="15" fill="rgb(251,206,33)" fg:x="1441" fg:w="6"/><text x="15.3469%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (6 samples, 0.06%)</title><rect x="15.0969%" y="517" width="0.0629%" height="15" fill="rgb(232,141,28)" fg:x="1441" fg:w="6"/><text x="15.3469%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (6 samples, 0.06%)</title><rect x="15.0969%" y="501" width="0.0629%" height="15" fill="rgb(209,167,14)" fg:x="1441" fg:w="6"/><text x="15.3469%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (6 samples, 0.06%)</title><rect x="15.0969%" y="485" width="0.0629%" height="15" fill="rgb(225,11,50)" fg:x="1441" fg:w="6"/><text x="15.3469%" y="495.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (6 samples, 0.06%)</title><rect x="15.0969%" y="469" width="0.0629%" height="15" fill="rgb(209,50,20)" fg:x="1441" fg:w="6"/><text x="15.3469%" y="479.50"></text></g><g><title>alloc::alloc::alloc (6 samples, 0.06%)</title><rect x="15.0969%" y="453" width="0.0629%" height="15" fill="rgb(212,17,46)" fg:x="1441" fg:w="6"/><text x="15.3469%" y="463.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="15.1493%" y="437" width="0.0105%" height="15" fill="rgb(216,101,39)" fg:x="1446" fg:w="1"/><text x="15.3993%" y="447.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (8 samples, 0.08%)</title><rect x="15.0969%" y="661" width="0.0838%" height="15" fill="rgb(212,228,48)" fg:x="1441" fg:w="8"/><text x="15.3469%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (8 samples, 0.08%)</title><rect x="15.0969%" y="645" width="0.0838%" height="15" fill="rgb(250,6,50)" fg:x="1441" fg:w="8"/><text x="15.3469%" y="655.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (8 samples, 0.08%)</title><rect x="15.0969%" y="629" width="0.0838%" height="15" fill="rgb(250,160,48)" fg:x="1441" fg:w="8"/><text x="15.3469%" y="639.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (8 samples, 0.08%)</title><rect x="15.0969%" y="613" width="0.0838%" height="15" fill="rgb(244,216,33)" fg:x="1441" fg:w="8"/><text x="15.3469%" y="623.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (8 samples, 0.08%)</title><rect x="15.0969%" y="597" width="0.0838%" height="15" fill="rgb(207,157,5)" fg:x="1441" fg:w="8"/><text x="15.3469%" y="607.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (8 samples, 0.08%)</title><rect x="15.0969%" y="581" width="0.0838%" height="15" fill="rgb(228,199,8)" fg:x="1441" fg:w="8"/><text x="15.3469%" y="591.50"></text></g><g><title>alloc::slice::hack::to_vec (8 samples, 0.08%)</title><rect x="15.0969%" y="565" width="0.0838%" height="15" fill="rgb(227,80,20)" fg:x="1441" fg:w="8"/><text x="15.3469%" y="575.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (8 samples, 0.08%)</title><rect x="15.0969%" y="549" width="0.0838%" height="15" fill="rgb(222,9,33)" fg:x="1441" fg:w="8"/><text x="15.3469%" y="559.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::copy_to_nonoverlapping (2 samples, 0.02%)</title><rect x="15.1598%" y="533" width="0.0210%" height="15" fill="rgb(239,44,28)" fg:x="1447" fg:w="2"/><text x="15.4098%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="15.1598%" y="517" width="0.0210%" height="15" fill="rgb(249,187,43)" fg:x="1447" fg:w="2"/><text x="15.4098%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="15.1598%" y="501" width="0.0210%" height="15" fill="rgb(216,141,28)" fg:x="1447" fg:w="2"/><text x="15.4098%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (9 samples, 0.09%)</title><rect x="15.1807%" y="645" width="0.0943%" height="15" fill="rgb(230,154,53)" fg:x="1449" fg:w="9"/><text x="15.4307%" y="655.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding as core::cmp::PartialEq&gt;::ne (9 samples, 0.09%)</title><rect x="15.1807%" y="629" width="0.0943%" height="15" fill="rgb(227,82,4)" fg:x="1449" fg:w="9"/><text x="15.4307%" y="639.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::cmp::PartialEq&gt;::ne (4 samples, 0.04%)</title><rect x="15.2331%" y="613" width="0.0419%" height="15" fill="rgb(220,107,16)" fg:x="1454" fg:w="4"/><text x="15.4831%" y="623.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::ne (4 samples, 0.04%)</title><rect x="15.2331%" y="597" width="0.0419%" height="15" fill="rgb(207,187,2)" fg:x="1454" fg:w="4"/><text x="15.4831%" y="607.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::ne (4 samples, 0.04%)</title><rect x="15.2331%" y="581" width="0.0419%" height="15" fill="rgb(210,162,52)" fg:x="1454" fg:w="4"/><text x="15.4831%" y="591.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_ne (4 samples, 0.04%)</title><rect x="15.2331%" y="565" width="0.0419%" height="15" fill="rgb(217,216,49)" fg:x="1454" fg:w="4"/><text x="15.4831%" y="575.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (4 samples, 0.04%)</title><rect x="15.2331%" y="549" width="0.0419%" height="15" fill="rgb(218,146,49)" fg:x="1454" fg:w="4"/><text x="15.4831%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="15.2750%" y="581" width="0.0105%" height="15" fill="rgb(216,55,40)" fg:x="1458" fg:w="1"/><text x="15.5250%" y="591.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="15.2750%" y="565" width="0.0105%" height="15" fill="rgb(208,196,21)" fg:x="1458" fg:w="1"/><text x="15.5250%" y="575.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="15.2750%" y="549" width="0.0105%" height="15" fill="rgb(242,117,42)" fg:x="1458" fg:w="1"/><text x="15.5250%" y="559.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (11 samples, 0.12%)</title><rect x="15.2855%" y="581" width="0.1152%" height="15" fill="rgb(210,11,23)" fg:x="1459" fg:w="11"/><text x="15.5355%" y="591.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (11 samples, 0.12%)</title><rect x="15.2855%" y="565" width="0.1152%" height="15" fill="rgb(217,110,2)" fg:x="1459" fg:w="11"/><text x="15.5355%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.14%)</title><rect x="15.2750%" y="597" width="0.1362%" height="15" fill="rgb(229,77,54)" fg:x="1458" fg:w="13"/><text x="15.5250%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="15.4007%" y="581" width="0.0105%" height="15" fill="rgb(218,53,16)" fg:x="1470" fg:w="1"/><text x="15.6507%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="15.4007%" y="565" width="0.0105%" height="15" fill="rgb(215,38,13)" fg:x="1470" fg:w="1"/><text x="15.6507%" y="575.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="15.4007%" y="549" width="0.0105%" height="15" fill="rgb(235,42,18)" fg:x="1470" fg:w="1"/><text x="15.6507%" y="559.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (3 samples, 0.03%)</title><rect x="15.4112%" y="581" width="0.0314%" height="15" fill="rgb(219,66,54)" fg:x="1471" fg:w="3"/><text x="15.6612%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="15.4741%" y="565" width="0.0210%" height="15" fill="rgb(222,205,4)" fg:x="1477" fg:w="2"/><text x="15.7241%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="15.4741%" y="549" width="0.0210%" height="15" fill="rgb(227,213,46)" fg:x="1477" fg:w="2"/><text x="15.7241%" y="559.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="15.4845%" y="533" width="0.0105%" height="15" fill="rgb(250,145,42)" fg:x="1478" fg:w="1"/><text x="15.7345%" y="543.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (1 samples, 0.01%)</title><rect x="15.4950%" y="549" width="0.0105%" height="15" fill="rgb(219,15,2)" fg:x="1479" fg:w="1"/><text x="15.7450%" y="559.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (1 samples, 0.01%)</title><rect x="15.4950%" y="533" width="0.0105%" height="15" fill="rgb(231,181,52)" fg:x="1479" fg:w="1"/><text x="15.7450%" y="543.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="15.4950%" y="517" width="0.0105%" height="15" fill="rgb(235,1,42)" fg:x="1479" fg:w="1"/><text x="15.7450%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="15.4950%" y="501" width="0.0105%" height="15" fill="rgb(249,88,27)" fg:x="1479" fg:w="1"/><text x="15.7450%" y="511.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (42 samples, 0.44%)</title><rect x="15.4950%" y="565" width="0.4400%" height="15" fill="rgb(235,145,16)" fg:x="1479" fg:w="42"/><text x="15.7450%" y="575.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (41 samples, 0.43%)</title><rect x="15.5055%" y="549" width="0.4295%" height="15" fill="rgb(237,114,19)" fg:x="1480" fg:w="41"/><text x="15.7555%" y="559.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (41 samples, 0.43%)</title><rect x="15.5055%" y="533" width="0.4295%" height="15" fill="rgb(238,51,50)" fg:x="1480" fg:w="41"/><text x="15.7555%" y="543.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (41 samples, 0.43%)</title><rect x="15.5055%" y="517" width="0.4295%" height="15" fill="rgb(205,194,25)" fg:x="1480" fg:w="41"/><text x="15.7555%" y="527.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (41 samples, 0.43%)</title><rect x="15.5055%" y="501" width="0.4295%" height="15" fill="rgb(215,203,17)" fg:x="1480" fg:w="41"/><text x="15.7555%" y="511.50"></text></g><g><title>__memcmp_avx2_movbe (7 samples, 0.07%)</title><rect x="15.8617%" y="485" width="0.0733%" height="15" fill="rgb(233,112,49)" fg:x="1514" fg:w="7"/><text x="16.1117%" y="495.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (3 samples, 0.03%)</title><rect x="15.9560%" y="517" width="0.0314%" height="15" fill="rgb(241,130,26)" fg:x="1523" fg:w="3"/><text x="16.2060%" y="527.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::try_set_dirty (113 samples, 1.18%)</title><rect x="15.1807%" y="661" width="1.1839%" height="15" fill="rgb(252,223,19)" fg:x="1449" fg:w="113"/><text x="15.4307%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (104 samples, 1.09%)</title><rect x="15.2750%" y="645" width="1.0896%" height="15" fill="rgb(211,95,25)" fg:x="1458" fg:w="104"/><text x="15.5250%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (104 samples, 1.09%)</title><rect x="15.2750%" y="629" width="1.0896%" height="15" fill="rgb(251,182,27)" fg:x="1458" fg:w="104"/><text x="15.5250%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (104 samples, 1.09%)</title><rect x="15.2750%" y="613" width="1.0896%" height="15" fill="rgb(238,24,4)" fg:x="1458" fg:w="104"/><text x="15.5250%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (91 samples, 0.95%)</title><rect x="15.4112%" y="597" width="0.9534%" height="15" fill="rgb(224,220,25)" fg:x="1471" fg:w="91"/><text x="15.6612%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (88 samples, 0.92%)</title><rect x="15.4426%" y="581" width="0.9219%" height="15" fill="rgb(239,133,26)" fg:x="1474" fg:w="88"/><text x="15.6926%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (41 samples, 0.43%)</title><rect x="15.9350%" y="565" width="0.4295%" height="15" fill="rgb(211,94,48)" fg:x="1521" fg:w="41"/><text x="16.1850%" y="575.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (41 samples, 0.43%)</title><rect x="15.9350%" y="549" width="0.4295%" height="15" fill="rgb(239,87,6)" fg:x="1521" fg:w="41"/><text x="16.1850%" y="559.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (41 samples, 0.43%)</title><rect x="15.9350%" y="533" width="0.4295%" height="15" fill="rgb(227,62,0)" fg:x="1521" fg:w="41"/><text x="16.1850%" y="543.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (36 samples, 0.38%)</title><rect x="15.9874%" y="517" width="0.3772%" height="15" fill="rgb(211,226,4)" fg:x="1526" fg:w="36"/><text x="16.2374%" y="527.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (36 samples, 0.38%)</title><rect x="15.9874%" y="501" width="0.3772%" height="15" fill="rgb(253,38,52)" fg:x="1526" fg:w="36"/><text x="16.2374%" y="511.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.38%)</title><rect x="15.9874%" y="485" width="0.3772%" height="15" fill="rgb(229,126,40)" fg:x="1526" fg:w="36"/><text x="16.2374%" y="495.50"></text></g><g><title>core::mem::replace (3 samples, 0.03%)</title><rect x="16.3646%" y="629" width="0.0314%" height="15" fill="rgb(229,165,44)" fg:x="1562" fg:w="3"/><text x="16.6146%" y="639.50"></text></g><g><title>core::ptr::read (3 samples, 0.03%)</title><rect x="16.3646%" y="613" width="0.0314%" height="15" fill="rgb(247,95,47)" fg:x="1562" fg:w="3"/><text x="16.6146%" y="623.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="16.3960%" y="549" width="0.0419%" height="15" fill="rgb(216,140,30)" fg:x="1565" fg:w="4"/><text x="16.6460%" y="559.50"></text></g><g><title>__GI___libc_free (4 samples, 0.04%)</title><rect x="16.3960%" y="533" width="0.0419%" height="15" fill="rgb(246,214,8)" fg:x="1565" fg:w="4"/><text x="16.6460%" y="543.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="16.4065%" y="517" width="0.0314%" height="15" fill="rgb(227,224,15)" fg:x="1566" fg:w="3"/><text x="16.6565%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (5 samples, 0.05%)</title><rect x="16.3960%" y="629" width="0.0524%" height="15" fill="rgb(233,175,4)" fg:x="1565" fg:w="5"/><text x="16.6460%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (5 samples, 0.05%)</title><rect x="16.3960%" y="613" width="0.0524%" height="15" fill="rgb(221,66,45)" fg:x="1565" fg:w="5"/><text x="16.6460%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (5 samples, 0.05%)</title><rect x="16.3960%" y="597" width="0.0524%" height="15" fill="rgb(221,178,18)" fg:x="1565" fg:w="5"/><text x="16.6460%" y="607.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="16.3960%" y="581" width="0.0524%" height="15" fill="rgb(213,81,29)" fg:x="1565" fg:w="5"/><text x="16.6460%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (5 samples, 0.05%)</title><rect x="16.3960%" y="565" width="0.0524%" height="15" fill="rgb(220,89,49)" fg:x="1565" fg:w="5"/><text x="16.6460%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="16.4379%" y="549" width="0.0105%" height="15" fill="rgb(227,60,33)" fg:x="1569" fg:w="1"/><text x="16.6879%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="16.4484%" y="613" width="0.0314%" height="15" fill="rgb(205,113,12)" fg:x="1570" fg:w="3"/><text x="16.6984%" y="623.50"></text></g><g><title>ahash::operations::folded_multiply (3 samples, 0.03%)</title><rect x="16.4484%" y="597" width="0.0314%" height="15" fill="rgb(211,32,1)" fg:x="1570" fg:w="3"/><text x="16.6984%" y="607.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="16.4694%" y="581" width="0.0105%" height="15" fill="rgb(246,2,12)" fg:x="1572" fg:w="1"/><text x="16.7194%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="16.4798%" y="581" width="0.0210%" height="15" fill="rgb(243,37,27)" fg:x="1573" fg:w="2"/><text x="16.7298%" y="591.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (2 samples, 0.02%)</title><rect x="16.4798%" y="565" width="0.0210%" height="15" fill="rgb(248,211,31)" fg:x="1573" fg:w="2"/><text x="16.7298%" y="575.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="16.4798%" y="549" width="0.0210%" height="15" fill="rgb(242,146,47)" fg:x="1573" fg:w="2"/><text x="16.7298%" y="559.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="16.4798%" y="533" width="0.0210%" height="15" fill="rgb(206,70,20)" fg:x="1573" fg:w="2"/><text x="16.7298%" y="543.50"></text></g><g><title>hashbrown::map::make_insert_hash (8 samples, 0.08%)</title><rect x="16.4484%" y="629" width="0.0838%" height="15" fill="rgb(215,10,51)" fg:x="1570" fg:w="8"/><text x="16.6984%" y="639.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (5 samples, 0.05%)</title><rect x="16.4798%" y="613" width="0.0524%" height="15" fill="rgb(243,178,53)" fg:x="1573" fg:w="5"/><text x="16.7298%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (5 samples, 0.05%)</title><rect x="16.4798%" y="597" width="0.0524%" height="15" fill="rgb(233,221,20)" fg:x="1573" fg:w="5"/><text x="16.7298%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (3 samples, 0.03%)</title><rect x="16.5008%" y="581" width="0.0314%" height="15" fill="rgb(218,95,35)" fg:x="1575" fg:w="3"/><text x="16.7508%" y="591.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (3 samples, 0.03%)</title><rect x="16.5008%" y="565" width="0.0314%" height="15" fill="rgb(229,13,5)" fg:x="1575" fg:w="3"/><text x="16.7508%" y="575.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="16.5113%" y="549" width="0.0210%" height="15" fill="rgb(252,164,30)" fg:x="1576" fg:w="2"/><text x="16.7613%" y="559.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="16.5217%" y="533" width="0.0105%" height="15" fill="rgb(232,68,36)" fg:x="1577" fg:w="1"/><text x="16.7717%" y="543.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="16.5322%" y="613" width="0.0105%" height="15" fill="rgb(219,59,54)" fg:x="1578" fg:w="1"/><text x="16.7822%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="16.5427%" y="597" width="0.0105%" height="15" fill="rgb(250,92,33)" fg:x="1579" fg:w="1"/><text x="16.7927%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="16.5427%" y="581" width="0.0105%" height="15" fill="rgb(229,162,54)" fg:x="1579" fg:w="1"/><text x="16.7927%" y="591.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="16.5427%" y="565" width="0.0105%" height="15" fill="rgb(244,114,52)" fg:x="1579" fg:w="1"/><text x="16.7927%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.06%)</title><rect x="16.5532%" y="597" width="0.0629%" height="15" fill="rgb(212,211,43)" fg:x="1580" fg:w="6"/><text x="16.8032%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (6 samples, 0.06%)</title><rect x="16.5532%" y="581" width="0.0629%" height="15" fill="rgb(226,147,8)" fg:x="1580" fg:w="6"/><text x="16.8032%" y="591.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (6 samples, 0.06%)</title><rect x="16.5532%" y="565" width="0.0629%" height="15" fill="rgb(226,23,13)" fg:x="1580" fg:w="6"/><text x="16.8032%" y="575.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (6 samples, 0.06%)</title><rect x="16.5532%" y="549" width="0.0629%" height="15" fill="rgb(240,63,4)" fg:x="1580" fg:w="6"/><text x="16.8032%" y="559.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (6 samples, 0.06%)</title><rect x="16.5532%" y="533" width="0.0629%" height="15" fill="rgb(221,1,32)" fg:x="1580" fg:w="6"/><text x="16.8032%" y="543.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (6 samples, 0.06%)</title><rect x="16.5532%" y="517" width="0.0629%" height="15" fill="rgb(242,117,10)" fg:x="1580" fg:w="6"/><text x="16.8032%" y="527.50"></text></g><g><title>__memcmp_avx2_movbe (5 samples, 0.05%)</title><rect x="16.5636%" y="501" width="0.0524%" height="15" fill="rgb(249,172,44)" fg:x="1581" fg:w="5"/><text x="16.8136%" y="511.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="16.6160%" y="549" width="0.0105%" height="15" fill="rgb(244,46,45)" fg:x="1586" fg:w="1"/><text x="16.8660%" y="559.50"></text></g><g><title>hashbrown::raw::h2 (1 samples, 0.01%)</title><rect x="16.6265%" y="549" width="0.0105%" height="15" fill="rgb(206,43,17)" fg:x="1587" fg:w="1"/><text x="16.8765%" y="559.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (149 samples, 1.56%)</title><rect x="15.0864%" y="677" width="1.5610%" height="15" fill="rgb(239,218,39)" fg:x="1440" fg:w="149"/><text x="15.3364%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (27 samples, 0.28%)</title><rect x="16.3646%" y="661" width="0.2829%" height="15" fill="rgb(208,169,54)" fg:x="1562" fg:w="27"/><text x="16.6146%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (27 samples, 0.28%)</title><rect x="16.3646%" y="645" width="0.2829%" height="15" fill="rgb(247,25,42)" fg:x="1562" fg:w="27"/><text x="16.6146%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (11 samples, 0.12%)</title><rect x="16.5322%" y="629" width="0.1152%" height="15" fill="rgb(226,23,31)" fg:x="1578" fg:w="11"/><text x="16.7822%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (10 samples, 0.10%)</title><rect x="16.5427%" y="613" width="0.1048%" height="15" fill="rgb(247,16,28)" fg:x="1579" fg:w="10"/><text x="16.7927%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="16.6160%" y="597" width="0.0314%" height="15" fill="rgb(231,147,38)" fg:x="1586" fg:w="3"/><text x="16.8660%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="16.6160%" y="581" width="0.0314%" height="15" fill="rgb(253,81,48)" fg:x="1586" fg:w="3"/><text x="16.8660%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="16.6160%" y="565" width="0.0314%" height="15" fill="rgb(249,222,43)" fg:x="1586" fg:w="3"/><text x="16.8660%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="16.6370%" y="549" width="0.0105%" height="15" fill="rgb(221,3,27)" fg:x="1588" fg:w="1"/><text x="16.8870%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="16.6370%" y="533" width="0.0105%" height="15" fill="rgb(228,180,5)" fg:x="1588" fg:w="1"/><text x="16.8870%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="16.6370%" y="517" width="0.0105%" height="15" fill="rgb(227,131,42)" fg:x="1588" fg:w="1"/><text x="16.8870%" y="527.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="16.6370%" y="501" width="0.0105%" height="15" fill="rgb(212,3,39)" fg:x="1588" fg:w="1"/><text x="16.8870%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.02%)</title><rect x="16.6475%" y="677" width="0.0210%" height="15" fill="rgb(226,45,5)" fg:x="1589" fg:w="2"/><text x="16.8975%" y="687.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (223 samples, 2.34%)</title><rect x="14.3426%" y="725" width="2.3363%" height="15" fill="rgb(215,167,45)" fg:x="1369" fg:w="223"/><text x="14.5926%" y="735.50">&lt;..</text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (223 samples, 2.34%)</title><rect x="14.3426%" y="709" width="2.3363%" height="15" fill="rgb(250,218,53)" fg:x="1369" fg:w="223"/><text x="14.5926%" y="719.50">b..</text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (213 samples, 2.23%)</title><rect x="14.4474%" y="693" width="2.2315%" height="15" fill="rgb(207,140,0)" fg:x="1379" fg:w="213"/><text x="14.6974%" y="703.50">b..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.01%)</title><rect x="16.6684%" y="677" width="0.0105%" height="15" fill="rgb(238,133,51)" fg:x="1591" fg:w="1"/><text x="16.9184%" y="687.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="16.6789%" y="725" width="0.0105%" height="15" fill="rgb(218,203,53)" fg:x="1592" fg:w="1"/><text x="16.9289%" y="735.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="16.6894%" y="725" width="0.0105%" height="15" fill="rgb(226,184,25)" fg:x="1593" fg:w="1"/><text x="16.9394%" y="735.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="16.6894%" y="709" width="0.0105%" height="15" fill="rgb(231,121,21)" fg:x="1593" fg:w="1"/><text x="16.9394%" y="719.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="16.6894%" y="693" width="0.0105%" height="15" fill="rgb(251,14,34)" fg:x="1593" fg:w="1"/><text x="16.9394%" y="703.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="16.6894%" y="677" width="0.0105%" height="15" fill="rgb(249,193,11)" fg:x="1593" fg:w="1"/><text x="16.9394%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.06%)</title><rect x="16.7103%" y="677" width="0.0629%" height="15" fill="rgb(220,172,37)" fg:x="1595" fg:w="6"/><text x="16.9603%" y="687.50"></text></g><g><title>core::ptr::write (6 samples, 0.06%)</title><rect x="16.7103%" y="661" width="0.0629%" height="15" fill="rgb(231,229,43)" fg:x="1595" fg:w="6"/><text x="16.9603%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;bevy_render::render_graph::command::Command&gt;&gt;&gt; (11 samples, 0.12%)</title><rect x="16.7732%" y="677" width="0.1152%" height="15" fill="rgb(250,161,5)" fg:x="1601" fg:w="11"/><text x="17.0232%" y="687.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.12%)</title><rect x="16.7732%" y="661" width="0.1152%" height="15" fill="rgb(218,225,18)" fg:x="1601" fg:w="11"/><text x="17.0232%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (11 samples, 0.12%)</title><rect x="16.7732%" y="645" width="0.1152%" height="15" fill="rgb(245,45,42)" fg:x="1601" fg:w="11"/><text x="17.0232%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (11 samples, 0.12%)</title><rect x="16.7732%" y="629" width="0.1152%" height="15" fill="rgb(211,115,1)" fg:x="1601" fg:w="11"/><text x="17.0232%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (11 samples, 0.12%)</title><rect x="16.7732%" y="613" width="0.1152%" height="15" fill="rgb(248,133,52)" fg:x="1601" fg:w="11"/><text x="17.0232%" y="623.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::copy_staging_buffer_to_final_buffers (25 samples, 0.26%)</title><rect x="16.6998%" y="725" width="0.2619%" height="15" fill="rgb(238,100,21)" fg:x="1594" fg:w="25"/><text x="16.9498%" y="735.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (24 samples, 0.25%)</title><rect x="16.7103%" y="709" width="0.2514%" height="15" fill="rgb(247,144,11)" fg:x="1595" fg:w="24"/><text x="16.9603%" y="719.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::push (24 samples, 0.25%)</title><rect x="16.7103%" y="693" width="0.2514%" height="15" fill="rgb(206,164,16)" fg:x="1595" fg:w="24"/><text x="16.9603%" y="703.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.07%)</title><rect x="16.8884%" y="677" width="0.0733%" height="15" fill="rgb(222,34,3)" fg:x="1612" fg:w="7"/><text x="17.1384%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.07%)</title><rect x="16.8884%" y="661" width="0.0733%" height="15" fill="rgb(248,82,4)" fg:x="1612" fg:w="7"/><text x="17.1384%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.07%)</title><rect x="16.8884%" y="645" width="0.0733%" height="15" fill="rgb(228,81,46)" fg:x="1612" fg:w="7"/><text x="17.1384%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.07%)</title><rect x="16.8884%" y="629" width="0.0733%" height="15" fill="rgb(227,67,47)" fg:x="1612" fg:w="7"/><text x="17.1384%" y="639.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="17.0246%" y="693" width="0.0419%" height="15" fill="rgb(215,93,53)" fg:x="1625" fg:w="4"/><text x="17.2746%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="17.0141%" y="709" width="0.0629%" height="15" fill="rgb(248,194,39)" fg:x="1624" fg:w="6"/><text x="17.2641%" y="719.50"></text></g><g><title>[libbevy_dylib-7e0daee3ecabe62f.so] (1 samples, 0.01%)</title><rect x="17.0665%" y="693" width="0.0105%" height="15" fill="rgb(215,5,19)" fg:x="1629" fg:w="1"/><text x="17.3165%" y="703.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="17.0665%" y="677" width="0.0105%" height="15" fill="rgb(226,215,51)" fg:x="1629" fg:w="1"/><text x="17.3165%" y="687.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="17.0770%" y="629" width="0.0105%" height="15" fill="rgb(225,56,26)" fg:x="1630" fg:w="1"/><text x="17.3270%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="17.0770%" y="613" width="0.0105%" height="15" fill="rgb(222,75,29)" fg:x="1630" fg:w="1"/><text x="17.3270%" y="623.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="17.0770%" y="597" width="0.0105%" height="15" fill="rgb(236,139,6)" fg:x="1630" fg:w="1"/><text x="17.3270%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="17.0770%" y="645" width="0.0210%" height="15" fill="rgb(223,137,36)" fg:x="1630" fg:w="2"/><text x="17.3270%" y="655.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="17.0875%" y="629" width="0.0105%" height="15" fill="rgb(226,99,2)" fg:x="1631" fg:w="1"/><text x="17.3375%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="17.0875%" y="613" width="0.0105%" height="15" fill="rgb(206,133,23)" fg:x="1631" fg:w="1"/><text x="17.3375%" y="623.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u32 (1 samples, 0.01%)</title><rect x="17.0875%" y="597" width="0.0105%" height="15" fill="rgb(243,173,15)" fg:x="1631" fg:w="1"/><text x="17.3375%" y="607.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="17.0875%" y="581" width="0.0105%" height="15" fill="rgb(228,69,28)" fg:x="1631" fg:w="1"/><text x="17.3375%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="17.0980%" y="597" width="0.0105%" height="15" fill="rgb(212,51,22)" fg:x="1632" fg:w="1"/><text x="17.3480%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="17.0980%" y="581" width="0.0105%" height="15" fill="rgb(227,113,0)" fg:x="1632" fg:w="1"/><text x="17.3480%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="17.0980%" y="565" width="0.0105%" height="15" fill="rgb(252,84,27)" fg:x="1632" fg:w="1"/><text x="17.3480%" y="575.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="17.0980%" y="613" width="0.0210%" height="15" fill="rgb(223,145,39)" fg:x="1632" fg:w="2"/><text x="17.3480%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="17.1084%" y="597" width="0.0105%" height="15" fill="rgb(239,219,30)" fg:x="1633" fg:w="1"/><text x="17.3584%" y="607.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="17.1084%" y="581" width="0.0105%" height="15" fill="rgb(224,196,39)" fg:x="1633" fg:w="1"/><text x="17.3584%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="17.1084%" y="565" width="0.0105%" height="15" fill="rgb(205,35,43)" fg:x="1633" fg:w="1"/><text x="17.3584%" y="575.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="17.1084%" y="549" width="0.0105%" height="15" fill="rgb(228,201,21)" fg:x="1633" fg:w="1"/><text x="17.3584%" y="559.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.09%)</title><rect x="17.1189%" y="613" width="0.0943%" height="15" fill="rgb(237,118,16)" fg:x="1634" fg:w="9"/><text x="17.3689%" y="623.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (9 samples, 0.09%)</title><rect x="17.1189%" y="597" width="0.0943%" height="15" fill="rgb(241,17,19)" fg:x="1634" fg:w="9"/><text x="17.3689%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="17.2132%" y="565" width="0.0105%" height="15" fill="rgb(214,10,25)" fg:x="1643" fg:w="1"/><text x="17.4632%" y="575.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_or_assign_index (15 samples, 0.16%)</title><rect x="17.0770%" y="709" width="0.1572%" height="15" fill="rgb(238,37,29)" fg:x="1630" fg:w="15"/><text x="17.3270%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (15 samples, 0.16%)</title><rect x="17.0770%" y="693" width="0.1572%" height="15" fill="rgb(253,83,25)" fg:x="1630" fg:w="15"/><text x="17.3270%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (15 samples, 0.16%)</title><rect x="17.0770%" y="677" width="0.1572%" height="15" fill="rgb(234,192,12)" fg:x="1630" fg:w="15"/><text x="17.3270%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (15 samples, 0.16%)</title><rect x="17.0770%" y="661" width="0.1572%" height="15" fill="rgb(241,216,45)" fg:x="1630" fg:w="15"/><text x="17.3270%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.14%)</title><rect x="17.0980%" y="645" width="0.1362%" height="15" fill="rgb(242,22,33)" fg:x="1632" fg:w="13"/><text x="17.3480%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.14%)</title><rect x="17.0980%" y="629" width="0.1362%" height="15" fill="rgb(231,105,49)" fg:x="1632" fg:w="13"/><text x="17.3480%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="17.2132%" y="613" width="0.0210%" height="15" fill="rgb(218,204,15)" fg:x="1643" fg:w="2"/><text x="17.4632%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="17.2132%" y="597" width="0.0210%" height="15" fill="rgb(235,138,41)" fg:x="1643" fg:w="2"/><text x="17.4632%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="17.2132%" y="581" width="0.0210%" height="15" fill="rgb(246,0,9)" fg:x="1643" fg:w="2"/><text x="17.4632%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="17.2237%" y="565" width="0.0105%" height="15" fill="rgb(210,74,4)" fg:x="1644" fg:w="1"/><text x="17.4737%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="17.2237%" y="549" width="0.0105%" height="15" fill="rgb(250,60,41)" fg:x="1644" fg:w="1"/><text x="17.4737%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="17.2237%" y="533" width="0.0105%" height="15" fill="rgb(220,115,12)" fg:x="1644" fg:w="1"/><text x="17.4737%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="17.2342%" y="661" width="0.0105%" height="15" fill="rgb(237,100,13)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="17.2342%" y="645" width="0.0105%" height="15" fill="rgb(213,55,26)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="17.2342%" y="629" width="0.0105%" height="15" fill="rgb(216,17,4)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="17.2342%" y="613" width="0.0105%" height="15" fill="rgb(220,153,47)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="623.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="17.2342%" y="597" width="0.0105%" height="15" fill="rgb(215,131,9)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="607.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="17.2342%" y="581" width="0.0105%" height="15" fill="rgb(233,46,42)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="591.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="17.2342%" y="565" width="0.0105%" height="15" fill="rgb(226,86,7)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="17.2342%" y="549" width="0.0105%" height="15" fill="rgb(239,226,21)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="559.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="17.2342%" y="533" width="0.0105%" height="15" fill="rgb(244,137,22)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="543.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="17.2342%" y="517" width="0.0105%" height="15" fill="rgb(211,139,35)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="527.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.2342%" y="501" width="0.0105%" height="15" fill="rgb(214,62,50)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="511.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="17.2342%" y="485" width="0.0105%" height="15" fill="rgb(212,113,44)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="495.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="17.2342%" y="469" width="0.0105%" height="15" fill="rgb(226,150,43)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="479.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="17.2342%" y="453" width="0.0105%" height="15" fill="rgb(250,71,37)" fg:x="1645" fg:w="1"/><text x="17.4842%" y="463.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (28 samples, 0.29%)</title><rect x="16.9618%" y="725" width="0.2933%" height="15" fill="rgb(219,76,19)" fg:x="1619" fg:w="28"/><text x="17.2118%" y="735.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="17.2342%" y="709" width="0.0210%" height="15" fill="rgb(250,39,11)" fg:x="1645" fg:w="2"/><text x="17.4842%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="17.2342%" y="693" width="0.0210%" height="15" fill="rgb(230,64,31)" fg:x="1645" fg:w="2"/><text x="17.4842%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="17.2342%" y="677" width="0.0210%" height="15" fill="rgb(208,222,23)" fg:x="1645" fg:w="2"/><text x="17.4842%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.01%)</title><rect x="17.2446%" y="661" width="0.0105%" height="15" fill="rgb(227,125,18)" fg:x="1646" fg:w="1"/><text x="17.4946%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="17.2446%" y="645" width="0.0105%" height="15" fill="rgb(234,210,9)" fg:x="1646" fg:w="1"/><text x="17.4946%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="17.2446%" y="629" width="0.0105%" height="15" fill="rgb(217,127,24)" fg:x="1646" fg:w="1"/><text x="17.4946%" y="639.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="17.3389%" y="709" width="0.0210%" height="15" fill="rgb(239,141,48)" fg:x="1655" fg:w="2"/><text x="17.5889%" y="719.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="17.3389%" y="693" width="0.0210%" height="15" fill="rgb(227,109,8)" fg:x="1655" fg:w="2"/><text x="17.5889%" y="703.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (11 samples, 0.12%)</title><rect x="17.2551%" y="725" width="0.1152%" height="15" fill="rgb(235,184,23)" fg:x="1647" fg:w="11"/><text x="17.5051%" y="735.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (1 samples, 0.01%)</title><rect x="17.3599%" y="709" width="0.0105%" height="15" fill="rgb(227,226,48)" fg:x="1657" fg:w="1"/><text x="17.6099%" y="719.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (301 samples, 3.15%)</title><rect x="14.2273%" y="741" width="3.1535%" height="15" fill="rgb(206,150,11)" fg:x="1358" fg:w="301"/><text x="14.4773%" y="751.50">bev..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="17.3704%" y="725" width="0.0105%" height="15" fill="rgb(254,2,33)" fg:x="1658" fg:w="1"/><text x="17.6204%" y="735.50"></text></g><g><title>bevy_sprite::color_material::material_texture_detection_system (1 samples, 0.01%)</title><rect x="17.3808%" y="741" width="0.0105%" height="15" fill="rgb(243,160,20)" fg:x="1659" fg:w="1"/><text x="17.6308%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::set::HashSet&lt;&amp;bevy_asset::handle::Handle&lt;bevy_render::texture::texture::Texture&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="17.3808%" y="725" width="0.0105%" height="15" fill="rgb(218,208,30)" fg:x="1659" fg:w="1"/><text x="17.6308%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::set::HashSet&lt;&amp;bevy_asset::handle::Handle&lt;bevy_render::texture::texture::Texture&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="17.3808%" y="709" width="0.0105%" height="15" fill="rgb(224,120,49)" fg:x="1659" fg:w="1"/><text x="17.6308%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;&amp;bevy_asset::handle::Handle&lt;bevy_render::texture::texture::Texture&gt;,(),ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="17.3808%" y="693" width="0.0105%" height="15" fill="rgb(246,12,2)" fg:x="1659" fg:w="1"/><text x="17.6308%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(&amp;bevy_asset::handle::Handle&lt;bevy_render::texture::texture::Texture&gt;,())&gt;&gt; (1 samples, 0.01%)</title><rect x="17.3808%" y="677" width="0.0105%" height="15" fill="rgb(236,117,3)" fg:x="1659" fg:w="1"/><text x="17.6308%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.3808%" y="661" width="0.0105%" height="15" fill="rgb(216,128,52)" fg:x="1659" fg:w="1"/><text x="17.6308%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.01%)</title><rect x="17.3808%" y="645" width="0.0105%" height="15" fill="rgb(246,145,19)" fg:x="1659" fg:w="1"/><text x="17.6308%" y="655.50"></text></g><g><title>bevy_ui::focus::ui_focus_system (1 samples, 0.01%)</title><rect x="17.3913%" y="741" width="0.0105%" height="15" fill="rgb(222,11,46)" fg:x="1660" fg:w="1"/><text x="17.6413%" y="751.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="17.3913%" y="725" width="0.0105%" height="15" fill="rgb(245,82,36)" fg:x="1660" fg:w="1"/><text x="17.6413%" y="735.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="17.3913%" y="709" width="0.0105%" height="15" fill="rgb(250,73,51)" fg:x="1660" fg:w="1"/><text x="17.6413%" y="719.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="17.3913%" y="693" width="0.0105%" height="15" fill="rgb(221,189,23)" fg:x="1660" fg:w="1"/><text x="17.6413%" y="703.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="17.3913%" y="677" width="0.0105%" height="15" fill="rgb(210,33,7)" fg:x="1660" fg:w="1"/><text x="17.6413%" y="687.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (480 samples, 5.03%)</title><rect x="12.4044%" y="789" width="5.0288%" height="15" fill="rgb(210,107,22)" fg:x="1184" fg:w="480"/><text x="12.6544%" y="799.50">&lt;Func ..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (478 samples, 5.01%)</title><rect x="12.4254%" y="773" width="5.0079%" height="15" fill="rgb(222,116,37)" fg:x="1186" fg:w="478"/><text x="12.6754%" y="783.50">core::..</text></g><g><title>core::ops::function::Fn::call (478 samples, 5.01%)</title><rect x="12.4254%" y="757" width="5.0079%" height="15" fill="rgb(254,17,48)" fg:x="1186" fg:w="478"/><text x="12.6754%" y="767.50">core::..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (3 samples, 0.03%)</title><rect x="17.4018%" y="741" width="0.0314%" height="15" fill="rgb(224,36,32)" fg:x="1661" fg:w="3"/><text x="17.6518%" y="751.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="17.4332%" y="773" width="0.0105%" height="15" fill="rgb(232,90,46)" fg:x="1664" fg:w="1"/><text x="17.6832%" y="783.50"></text></g><g><title>&lt;bevy_render::draw::DrawContextState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::shader::shader::Shader&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::pipeline::pipeline_compiler::PipelineCompiler&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::Res&lt;alloc::boxed::Box&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::shared_buffers::SharedBuffers&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="17.4332%" y="757" width="0.0105%" height="15" fill="rgb(241,66,40)" fg:x="1664" fg:w="1"/><text x="17.6832%" y="767.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="17.4332%" y="741" width="0.0105%" height="15" fill="rgb(249,184,29)" fg:x="1664" fg:w="1"/><text x="17.6832%" y="751.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="17.4332%" y="725" width="0.0105%" height="15" fill="rgb(231,181,1)" fg:x="1664" fg:w="1"/><text x="17.6832%" y="735.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="17.4332%" y="709" width="0.0105%" height="15" fill="rgb(224,94,2)" fg:x="1664" fg:w="1"/><text x="17.6832%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="17.4332%" y="693" width="0.0105%" height="15" fill="rgb(229,170,15)" fg:x="1664" fg:w="1"/><text x="17.6832%" y="703.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="17.4332%" y="677" width="0.0105%" height="15" fill="rgb(240,127,35)" fg:x="1664" fg:w="1"/><text x="17.6832%" y="687.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="17.4332%" y="661" width="0.0105%" height="15" fill="rgb(248,196,34)" fg:x="1664" fg:w="1"/><text x="17.6832%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="17.4332%" y="789" width="0.0210%" height="15" fill="rgb(236,137,7)" fg:x="1664" fg:w="2"/><text x="17.6832%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="17.4437%" y="773" width="0.0105%" height="15" fill="rgb(235,127,16)" fg:x="1665" fg:w="1"/><text x="17.6937%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="17.4437%" y="757" width="0.0105%" height="15" fill="rgb(250,192,54)" fg:x="1665" fg:w="1"/><text x="17.6937%" y="767.50"></text></g><g><title>bevy_ui::widget::text::draw_text_system (1 samples, 0.01%)</title><rect x="17.4437%" y="741" width="0.0105%" height="15" fill="rgb(218,98,20)" fg:x="1665" fg:w="1"/><text x="17.6937%" y="751.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="17.4437%" y="725" width="0.0105%" height="15" fill="rgb(230,176,47)" fg:x="1665" fg:w="1"/><text x="17.6937%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="17.4437%" y="709" width="0.0105%" height="15" fill="rgb(244,2,33)" fg:x="1665" fg:w="1"/><text x="17.6937%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="17.4437%" y="693" width="0.0105%" height="15" fill="rgb(231,100,17)" fg:x="1665" fg:w="1"/><text x="17.6937%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="17.4437%" y="677" width="0.0105%" height="15" fill="rgb(245,23,12)" fg:x="1665" fg:w="1"/><text x="17.6937%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="17.4437%" y="661" width="0.0105%" height="15" fill="rgb(249,55,22)" fg:x="1665" fg:w="1"/><text x="17.6937%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="17.4437%" y="645" width="0.0105%" height="15" fill="rgb(207,134,9)" fg:x="1665" fg:w="1"/><text x="17.6937%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="17.4437%" y="629" width="0.0105%" height="15" fill="rgb(218,134,0)" fg:x="1665" fg:w="1"/><text x="17.6937%" y="639.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="17.4437%" y="613" width="0.0105%" height="15" fill="rgb(213,212,33)" fg:x="1665" fg:w="1"/><text x="17.6937%" y="623.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (4 samples, 0.04%)</title><rect x="17.4961%" y="661" width="0.0419%" height="15" fill="rgb(252,106,18)" fg:x="1670" fg:w="4"/><text x="17.7461%" y="671.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::maintain (4 samples, 0.04%)</title><rect x="17.4961%" y="645" width="0.0419%" height="15" fill="rgb(208,126,42)" fg:x="1670" fg:w="4"/><text x="17.7461%" y="655.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::recycle (4 samples, 0.04%)</title><rect x="17.4961%" y="629" width="0.0419%" height="15" fill="rgb(246,175,29)" fg:x="1670" fg:w="4"/><text x="17.7461%" y="639.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::reset (4 samples, 0.04%)</title><rect x="17.4961%" y="613" width="0.0419%" height="15" fill="rgb(215,13,50)" fg:x="1670" fg:w="4"/><text x="17.7461%" y="623.50"></text></g><g><title>ash::device::DeviceV1_0::reset_command_buffer (4 samples, 0.04%)</title><rect x="17.4961%" y="597" width="0.0419%" height="15" fill="rgb(216,172,15)" fg:x="1670" fg:w="4"/><text x="17.7461%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="17.4961%" y="581" width="0.0419%" height="15" fill="rgb(212,103,13)" fg:x="1670" fg:w="4"/><text x="17.7461%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="17.5170%" y="565" width="0.0210%" height="15" fill="rgb(231,171,36)" fg:x="1672" fg:w="2"/><text x="17.7670%" y="575.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::handle_mapping (1 samples, 0.01%)</title><rect x="17.5380%" y="661" width="0.0105%" height="15" fill="rgb(250,123,20)" fg:x="1674" fg:w="1"/><text x="17.7880%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="17.5380%" y="645" width="0.0105%" height="15" fill="rgb(212,53,50)" fg:x="1674" fg:w="1"/><text x="17.7880%" y="655.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.5380%" y="629" width="0.0105%" height="15" fill="rgb(243,54,12)" fg:x="1674" fg:w="1"/><text x="17.7880%" y="639.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="17.5380%" y="613" width="0.0105%" height="15" fill="rgb(234,101,34)" fg:x="1674" fg:w="1"/><text x="17.7880%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="17.5380%" y="597" width="0.0105%" height="15" fill="rgb(254,67,22)" fg:x="1674" fg:w="1"/><text x="17.7880%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="17.5380%" y="581" width="0.0105%" height="15" fill="rgb(250,35,47)" fg:x="1674" fg:w="1"/><text x="17.7880%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="17.5485%" y="645" width="0.0314%" height="15" fill="rgb(226,126,38)" fg:x="1675" fg:w="3"/><text x="17.7985%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="17.5485%" y="629" width="0.0314%" height="15" fill="rgb(216,138,53)" fg:x="1675" fg:w="3"/><text x="17.7985%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="17.5485%" y="613" width="0.0314%" height="15" fill="rgb(246,199,43)" fg:x="1675" fg:w="3"/><text x="17.7985%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="17.5485%" y="597" width="0.0314%" height="15" fill="rgb(232,125,11)" fg:x="1675" fg:w="3"/><text x="17.7985%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="17.5485%" y="581" width="0.0314%" height="15" fill="rgb(218,219,45)" fg:x="1675" fg:w="3"/><text x="17.7985%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="17.5485%" y="565" width="0.0314%" height="15" fill="rgb(216,102,54)" fg:x="1675" fg:w="3"/><text x="17.7985%" y="575.50"></text></g><g><title>__libc_close (1 samples, 0.01%)</title><rect x="17.5694%" y="549" width="0.0105%" height="15" fill="rgb(250,228,7)" fg:x="1677" fg:w="1"/><text x="17.8194%" y="559.50"></text></g><g><title>&lt;ash::device::Device as ash::device::DeviceV1_0&gt;::fp_v1_0 (1 samples, 0.01%)</title><rect x="17.5904%" y="485" width="0.0105%" height="15" fill="rgb(226,125,25)" fg:x="1679" fg:w="1"/><text x="17.8404%" y="495.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (11 samples, 0.12%)</title><rect x="17.4961%" y="709" width="0.1152%" height="15" fill="rgb(224,165,27)" fg:x="1670" fg:w="11"/><text x="17.7461%" y="719.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (11 samples, 0.12%)</title><rect x="17.4961%" y="693" width="0.1152%" height="15" fill="rgb(233,86,3)" fg:x="1670" fg:w="11"/><text x="17.7461%" y="703.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (11 samples, 0.12%)</title><rect x="17.4961%" y="677" width="0.1152%" height="15" fill="rgb(228,116,20)" fg:x="1670" fg:w="11"/><text x="17.7461%" y="687.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (6 samples, 0.06%)</title><rect x="17.5485%" y="661" width="0.0629%" height="15" fill="rgb(209,192,17)" fg:x="1675" fg:w="6"/><text x="17.7985%" y="671.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::wait_idle (3 samples, 0.03%)</title><rect x="17.5799%" y="645" width="0.0314%" height="15" fill="rgb(224,88,34)" fg:x="1678" fg:w="3"/><text x="17.8299%" y="655.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences (3 samples, 0.03%)</title><rect x="17.5799%" y="629" width="0.0314%" height="15" fill="rgb(233,38,6)" fg:x="1678" fg:w="3"/><text x="17.8299%" y="639.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (3 samples, 0.03%)</title><rect x="17.5799%" y="613" width="0.0314%" height="15" fill="rgb(212,59,30)" fg:x="1678" fg:w="3"/><text x="17.8299%" y="623.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (3 samples, 0.03%)</title><rect x="17.5799%" y="597" width="0.0314%" height="15" fill="rgb(213,80,3)" fg:x="1678" fg:w="3"/><text x="17.8299%" y="607.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (3 samples, 0.03%)</title><rect x="17.5799%" y="581" width="0.0314%" height="15" fill="rgb(251,178,7)" fg:x="1678" fg:w="3"/><text x="17.8299%" y="591.50"></text></g><g><title>inplace_it::fixed_array::indirect (2 samples, 0.02%)</title><rect x="17.5904%" y="565" width="0.0210%" height="15" fill="rgb(213,154,26)" fg:x="1679" fg:w="2"/><text x="17.8404%" y="575.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (2 samples, 0.02%)</title><rect x="17.5904%" y="549" width="0.0210%" height="15" fill="rgb(238,165,49)" fg:x="1679" fg:w="2"/><text x="17.8404%" y="559.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (2 samples, 0.02%)</title><rect x="17.5904%" y="533" width="0.0210%" height="15" fill="rgb(248,91,46)" fg:x="1679" fg:w="2"/><text x="17.8404%" y="543.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences::{{closure}} (2 samples, 0.02%)</title><rect x="17.5904%" y="517" width="0.0210%" height="15" fill="rgb(244,21,52)" fg:x="1679" fg:w="2"/><text x="17.8404%" y="527.50"></text></g><g><title>ash::device::DeviceV1_0::wait_for_fences (2 samples, 0.02%)</title><rect x="17.5904%" y="501" width="0.0210%" height="15" fill="rgb(247,122,20)" fg:x="1679" fg:w="2"/><text x="17.8404%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="17.6008%" y="485" width="0.0105%" height="15" fill="rgb(218,27,9)" fg:x="1680" fg:w="1"/><text x="17.8508%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="17.6008%" y="469" width="0.0105%" height="15" fill="rgb(246,7,6)" fg:x="1680" fg:w="1"/><text x="17.8508%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="17.6008%" y="453" width="0.0105%" height="15" fill="rgb(227,135,54)" fg:x="1680" fg:w="1"/><text x="17.8508%" y="463.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.01%)</title><rect x="17.6113%" y="709" width="0.0105%" height="15" fill="rgb(247,14,11)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="17.6113%" y="693" width="0.0105%" height="15" fill="rgb(206,149,34)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="17.6113%" y="677" width="0.0105%" height="15" fill="rgb(227,228,4)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="687.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1 samples, 0.01%)</title><rect x="17.6113%" y="661" width="0.0105%" height="15" fill="rgb(238,218,28)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Parker&gt; (1 samples, 0.01%)</title><rect x="17.6113%" y="645" width="0.0105%" height="15" fill="rgb(252,86,40)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Unparker&gt; (1 samples, 0.01%)</title><rect x="17.6113%" y="629" width="0.0105%" height="15" fill="rgb(251,225,11)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;parking::Inner&gt;&gt; (1 samples, 0.01%)</title><rect x="17.6113%" y="613" width="0.0105%" height="15" fill="rgb(206,46,49)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.6113%" y="597" width="0.0105%" height="15" fill="rgb(245,128,24)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="17.6113%" y="581" width="0.0105%" height="15" fill="rgb(219,177,34)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;parking::Inner&gt; (1 samples, 0.01%)</title><rect x="17.6113%" y="565" width="0.0105%" height="15" fill="rgb(218,60,48)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::Mutex&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="17.6113%" y="549" width="0.0105%" height="15" fill="rgb(221,11,5)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sys_common::mutex::MovableMutex&gt; (1 samples, 0.01%)</title><rect x="17.6113%" y="533" width="0.0105%" height="15" fill="rgb(220,148,13)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="543.50"></text></g><g><title>&lt;std::sys_common::mutex::MovableMutex as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.6113%" y="517" width="0.0105%" height="15" fill="rgb(210,16,3)" fg:x="1681" fg:w="1"/><text x="17.8613%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="17.6218%" y="629" width="0.0105%" height="15" fill="rgb(236,80,2)" fg:x="1682" fg:w="1"/><text x="17.8718%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="17.6218%" y="613" width="0.0105%" height="15" fill="rgb(239,129,19)" fg:x="1682" fg:w="1"/><text x="17.8718%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="17.6218%" y="597" width="0.0105%" height="15" fill="rgb(220,106,35)" fg:x="1682" fg:w="1"/><text x="17.8718%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="17.6218%" y="581" width="0.0105%" height="15" fill="rgb(252,139,45)" fg:x="1682" fg:w="1"/><text x="17.8718%" y="591.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="17.6218%" y="565" width="0.0105%" height="15" fill="rgb(229,8,36)" fg:x="1682" fg:w="1"/><text x="17.8718%" y="575.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (3 samples, 0.03%)</title><rect x="17.6218%" y="709" width="0.0314%" height="15" fill="rgb(230,126,33)" fg:x="1682" fg:w="3"/><text x="17.8718%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (3 samples, 0.03%)</title><rect x="17.6218%" y="693" width="0.0314%" height="15" fill="rgb(239,140,21)" fg:x="1682" fg:w="3"/><text x="17.8718%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.03%)</title><rect x="17.6218%" y="677" width="0.0314%" height="15" fill="rgb(254,104,9)" fg:x="1682" fg:w="3"/><text x="17.8718%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.03%)</title><rect x="17.6218%" y="661" width="0.0314%" height="15" fill="rgb(239,52,14)" fg:x="1682" fg:w="3"/><text x="17.8718%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="17.6218%" y="645" width="0.0314%" height="15" fill="rgb(208,227,44)" fg:x="1682" fg:w="3"/><text x="17.8718%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="17.6323%" y="629" width="0.0210%" height="15" fill="rgb(246,18,19)" fg:x="1683" fg:w="2"/><text x="17.8823%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="17.6323%" y="613" width="0.0210%" height="15" fill="rgb(235,228,25)" fg:x="1683" fg:w="2"/><text x="17.8823%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="17.6323%" y="597" width="0.0210%" height="15" fill="rgb(240,156,20)" fg:x="1683" fg:w="2"/><text x="17.8823%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="17.6323%" y="581" width="0.0210%" height="15" fill="rgb(224,8,20)" fg:x="1683" fg:w="2"/><text x="17.8823%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="17.6323%" y="565" width="0.0210%" height="15" fill="rgb(214,12,52)" fg:x="1683" fg:w="2"/><text x="17.8823%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="17.6323%" y="549" width="0.0210%" height="15" fill="rgb(211,220,47)" fg:x="1683" fg:w="2"/><text x="17.8823%" y="559.50"></text></g><g><title>wgpu::backend::native_gpu_future::new_gpu_future (1 samples, 0.01%)</title><rect x="17.6532%" y="677" width="0.0105%" height="15" fill="rgb(250,173,5)" fg:x="1685" fg:w="1"/><text x="17.9032%" y="687.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="17.6532%" y="661" width="0.0105%" height="15" fill="rgb(250,125,52)" fg:x="1685" fg:w="1"/><text x="17.9032%" y="671.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="17.6532%" y="645" width="0.0105%" height="15" fill="rgb(209,133,18)" fg:x="1685" fg:w="1"/><text x="17.9032%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="17.6532%" y="629" width="0.0105%" height="15" fill="rgb(216,173,22)" fg:x="1685" fg:w="1"/><text x="17.9032%" y="639.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="17.6532%" y="613" width="0.0105%" height="15" fill="rgb(205,3,22)" fg:x="1685" fg:w="1"/><text x="17.9032%" y="623.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="17.6532%" y="597" width="0.0105%" height="15" fill="rgb(248,22,20)" fg:x="1685" fg:w="1"/><text x="17.9032%" y="607.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="17.6532%" y="581" width="0.0105%" height="15" fill="rgb(233,6,29)" fg:x="1685" fg:w="1"/><text x="17.9032%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::device::Device&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="17.6637%" y="661" width="0.0105%" height="15" fill="rgb(240,22,54)" fg:x="1686" fg:w="1"/><text x="17.9137%" y="671.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.6637%" y="645" width="0.0105%" height="15" fill="rgb(231,133,32)" fg:x="1686" fg:w="1"/><text x="17.9137%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.01%)</title><rect x="17.6637%" y="629" width="0.0105%" height="15" fill="rgb(248,193,4)" fg:x="1686" fg:w="1"/><text x="17.9137%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="17.6637%" y="613" width="0.0105%" height="15" fill="rgb(211,178,46)" fg:x="1686" fg:w="1"/><text x="17.9137%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="17.6637%" y="597" width="0.0105%" height="15" fill="rgb(224,5,42)" fg:x="1686" fg:w="1"/><text x="17.9137%" y="607.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (1 samples, 0.01%)</title><rect x="17.6742%" y="661" width="0.0105%" height="15" fill="rgb(239,176,25)" fg:x="1687" fg:w="1"/><text x="17.9242%" y="671.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="17.6742%" y="645" width="0.0105%" height="15" fill="rgb(245,187,50)" fg:x="1687" fg:w="1"/><text x="17.9242%" y="655.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="17.6742%" y="629" width="0.0105%" height="15" fill="rgb(248,24,15)" fg:x="1687" fg:w="1"/><text x="17.9242%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="17.6742%" y="613" width="0.0105%" height="15" fill="rgb(205,166,13)" fg:x="1687" fg:w="1"/><text x="17.9242%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="17.6742%" y="597" width="0.0105%" height="15" fill="rgb(208,114,23)" fg:x="1687" fg:w="1"/><text x="17.9242%" y="607.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.01%)</title><rect x="17.6847%" y="661" width="0.0105%" height="15" fill="rgb(239,127,18)" fg:x="1688" fg:w="1"/><text x="17.9347%" y="671.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="17.6847%" y="645" width="0.0105%" height="15" fill="rgb(219,154,28)" fg:x="1688" fg:w="1"/><text x="17.9347%" y="655.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="17.6847%" y="629" width="0.0105%" height="15" fill="rgb(225,157,23)" fg:x="1688" fg:w="1"/><text x="17.9347%" y="639.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (1 samples, 0.01%)</title><rect x="17.6847%" y="613" width="0.0105%" height="15" fill="rgb(219,8,6)" fg:x="1688" fg:w="1"/><text x="17.9347%" y="623.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (1 samples, 0.01%)</title><rect x="17.6847%" y="597" width="0.0105%" height="15" fill="rgb(212,47,6)" fg:x="1688" fg:w="1"/><text x="17.9347%" y="607.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="17.6847%" y="581" width="0.0105%" height="15" fill="rgb(224,190,4)" fg:x="1688" fg:w="1"/><text x="17.9347%" y="591.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="17.6847%" y="565" width="0.0105%" height="15" fill="rgb(239,183,29)" fg:x="1688" fg:w="1"/><text x="17.9347%" y="575.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="17.6847%" y="549" width="0.0105%" height="15" fill="rgb(213,57,7)" fg:x="1688" fg:w="1"/><text x="17.9347%" y="559.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="17.6847%" y="533" width="0.0105%" height="15" fill="rgb(216,148,1)" fg:x="1688" fg:w="1"/><text x="17.9347%" y="543.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="17.6847%" y="517" width="0.0105%" height="15" fill="rgb(236,182,29)" fg:x="1688" fg:w="1"/><text x="17.9347%" y="527.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (20 samples, 0.21%)</title><rect x="17.4961%" y="725" width="0.2095%" height="15" fill="rgb(244,120,48)" fg:x="1670" fg:w="20"/><text x="17.7461%" y="735.50"></text></g><g><title>wgpu::BufferSlice::map_async (5 samples, 0.05%)</title><rect x="17.6532%" y="709" width="0.0524%" height="15" fill="rgb(206,71,34)" fg:x="1685" fg:w="5"/><text x="17.9032%" y="719.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (5 samples, 0.05%)</title><rect x="17.6532%" y="693" width="0.0524%" height="15" fill="rgb(242,32,6)" fg:x="1685" fg:w="5"/><text x="17.9032%" y="703.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (4 samples, 0.04%)</title><rect x="17.6637%" y="677" width="0.0419%" height="15" fill="rgb(241,35,3)" fg:x="1686" fg:w="4"/><text x="17.9137%" y="687.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="17.6951%" y="661" width="0.0105%" height="15" fill="rgb(222,62,19)" fg:x="1689" fg:w="1"/><text x="17.9451%" y="671.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="17.7056%" y="709" width="0.0105%" height="15" fill="rgb(223,110,41)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="719.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="17.7056%" y="693" width="0.0105%" height="15" fill="rgb(208,224,4)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="703.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (1 samples, 0.01%)</title><rect x="17.7056%" y="677" width="0.0105%" height="15" fill="rgb(241,137,19)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="687.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.01%)</title><rect x="17.7056%" y="661" width="0.0105%" height="15" fill="rgb(244,24,17)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.01%)</title><rect x="17.7056%" y="645" width="0.0105%" height="15" fill="rgb(245,178,49)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="655.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_exclusive_slow (1 samples, 0.01%)</title><rect x="17.7056%" y="629" width="0.0105%" height="15" fill="rgb(219,160,38)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="639.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::wait_for_readers (1 samples, 0.01%)</title><rect x="17.7056%" y="613" width="0.0105%" height="15" fill="rgb(228,137,14)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="623.50"></text></g><g><title>parking_lot_core::spinwait::SpinWait::spin (1 samples, 0.01%)</title><rect x="17.7056%" y="597" width="0.0105%" height="15" fill="rgb(237,134,11)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="607.50"></text></g><g><title>parking_lot_core::spinwait::cpu_relax (1 samples, 0.01%)</title><rect x="17.7056%" y="581" width="0.0105%" height="15" fill="rgb(211,126,44)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="591.50"></text></g><g><title>core::sync::atomic::spin_loop_hint (1 samples, 0.01%)</title><rect x="17.7056%" y="565" width="0.0105%" height="15" fill="rgb(226,171,33)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="575.50"></text></g><g><title>core::hint::spin_loop (1 samples, 0.01%)</title><rect x="17.7056%" y="549" width="0.0105%" height="15" fill="rgb(253,99,13)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_pause (1 samples, 0.01%)</title><rect x="17.7056%" y="533" width="0.0105%" height="15" fill="rgb(244,48,7)" fg:x="1690" fg:w="1"/><text x="17.9556%" y="543.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (2 samples, 0.02%)</title><rect x="17.7056%" y="725" width="0.0210%" height="15" fill="rgb(244,217,54)" fg:x="1690" fg:w="2"/><text x="17.9556%" y="735.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="17.7161%" y="709" width="0.0105%" height="15" fill="rgb(224,15,18)" fg:x="1691" fg:w="1"/><text x="17.9661%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="17.7161%" y="693" width="0.0105%" height="15" fill="rgb(244,99,12)" fg:x="1691" fg:w="1"/><text x="17.9661%" y="703.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="17.7161%" y="677" width="0.0105%" height="15" fill="rgb(233,226,8)" fg:x="1691" fg:w="1"/><text x="17.9661%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="17.7161%" y="661" width="0.0105%" height="15" fill="rgb(229,211,3)" fg:x="1691" fg:w="1"/><text x="17.9661%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="17.7161%" y="645" width="0.0105%" height="15" fill="rgb(216,140,21)" fg:x="1691" fg:w="1"/><text x="17.9661%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="17.7266%" y="661" width="0.0105%" height="15" fill="rgb(234,122,30)" fg:x="1692" fg:w="1"/><text x="17.9766%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="17.7266%" y="645" width="0.0105%" height="15" fill="rgb(236,25,46)" fg:x="1692" fg:w="1"/><text x="17.9766%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="17.7266%" y="629" width="0.0105%" height="15" fill="rgb(217,52,54)" fg:x="1692" fg:w="1"/><text x="17.9766%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="17.7266%" y="613" width="0.0105%" height="15" fill="rgb(222,29,26)" fg:x="1692" fg:w="1"/><text x="17.9766%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="17.7266%" y="597" width="0.0105%" height="15" fill="rgb(216,177,29)" fg:x="1692" fg:w="1"/><text x="17.9766%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="17.7266%" y="581" width="0.0105%" height="15" fill="rgb(247,136,51)" fg:x="1692" fg:w="1"/><text x="17.9766%" y="591.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.01%)</title><rect x="17.7266%" y="565" width="0.0105%" height="15" fill="rgb(231,47,47)" fg:x="1692" fg:w="1"/><text x="17.9766%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.01%)</title><rect x="17.7266%" y="549" width="0.0105%" height="15" fill="rgb(211,192,36)" fg:x="1692" fg:w="1"/><text x="17.9766%" y="559.50"></text></g><g><title>hashbrown::raw::is_full (1 samples, 0.01%)</title><rect x="17.7266%" y="533" width="0.0105%" height="15" fill="rgb(229,156,32)" fg:x="1692" fg:w="1"/><text x="17.9766%" y="543.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_buffer (1 samples, 0.01%)</title><rect x="17.7370%" y="597" width="0.0105%" height="15" fill="rgb(248,213,20)" fg:x="1693" fg:w="1"/><text x="17.9870%" y="607.50"></text></g><g><title>ash::vk::definitions::BufferCreateInfoBuilder::flags (1 samples, 0.01%)</title><rect x="17.7370%" y="581" width="0.0105%" height="15" fill="rgb(217,64,7)" fg:x="1693" fg:w="1"/><text x="17.9870%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.01%)</title><rect x="17.7475%" y="565" width="0.0105%" height="15" fill="rgb(232,142,8)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="575.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.7475%" y="549" width="0.0105%" height="15" fill="rgb(224,92,44)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="559.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (1 samples, 0.01%)</title><rect x="17.7475%" y="533" width="0.0105%" height="15" fill="rgb(214,169,17)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="543.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="17.7475%" y="517" width="0.0105%" height="15" fill="rgb(210,59,37)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="17.7475%" y="501" width="0.0105%" height="15" fill="rgb(214,116,48)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="17.7475%" y="485" width="0.0105%" height="15" fill="rgb(244,191,6)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="17.7475%" y="469" width="0.0105%" height="15" fill="rgb(241,50,52)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="479.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="17.7475%" y="453" width="0.0105%" height="15" fill="rgb(236,75,39)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="463.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="17.7475%" y="437" width="0.0105%" height="15" fill="rgb(236,99,0)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="447.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="17.7475%" y="421" width="0.0105%" height="15" fill="rgb(207,202,15)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::{{closure}} (1 samples, 0.01%)</title><rect x="17.7475%" y="405" width="0.0105%" height="15" fill="rgb(233,207,14)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="415.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="17.7475%" y="389" width="0.0105%" height="15" fill="rgb(226,27,51)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7475%" y="373" width="0.0105%" height="15" fill="rgb(206,104,42)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7475%" y="357" width="0.0105%" height="15" fill="rgb(212,225,4)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="367.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7475%" y="341" width="0.0105%" height="15" fill="rgb(233,96,42)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="351.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="17.7475%" y="325" width="0.0105%" height="15" fill="rgb(229,21,32)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="335.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close::{{closure}} (1 samples, 0.01%)</title><rect x="17.7475%" y="309" width="0.0105%" height="15" fill="rgb(226,216,24)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="319.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::start_close (1 samples, 0.01%)</title><rect x="17.7475%" y="293" width="0.0105%" height="15" fill="rgb(221,163,17)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="303.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="17.7475%" y="277" width="0.0105%" height="15" fill="rgb(216,216,42)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="287.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="17.7475%" y="261" width="0.0105%" height="15" fill="rgb(240,118,7)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="271.50"></text></g><g><title>tracing_subscriber::registry::sharded::CLOSE_COUNT::__getit (1 samples, 0.01%)</title><rect x="17.7475%" y="245" width="0.0105%" height="15" fill="rgb(221,67,37)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="255.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="17.7475%" y="229" width="0.0105%" height="15" fill="rgb(241,32,44)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="239.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="17.7475%" y="213" width="0.0105%" height="15" fill="rgb(235,204,43)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="223.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="17.7475%" y="197" width="0.0105%" height="15" fill="rgb(213,116,10)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="207.50"></text></g><g><title>__tls_get_addr (1 samples, 0.01%)</title><rect x="17.7475%" y="181" width="0.0105%" height="15" fill="rgb(239,15,48)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="191.50"></text></g><g><title>update_get_addr (1 samples, 0.01%)</title><rect x="17.7475%" y="165" width="0.0105%" height="15" fill="rgb(207,123,36)" fg:x="1694" fg:w="1"/><text x="17.9975%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.01%)</title><rect x="17.7580%" y="565" width="0.0105%" height="15" fill="rgb(209,103,30)" fg:x="1695" fg:w="1"/><text x="18.0080%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7580%" y="549" width="0.0105%" height="15" fill="rgb(238,100,19)" fg:x="1695" fg:w="1"/><text x="18.0080%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7580%" y="533" width="0.0105%" height="15" fill="rgb(244,30,14)" fg:x="1695" fg:w="1"/><text x="18.0080%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_close (1 samples, 0.01%)</title><rect x="17.7580%" y="517" width="0.0105%" height="15" fill="rgb(249,174,6)" fg:x="1695" fg:w="1"/><text x="18.0080%" y="527.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (1 samples, 0.01%)</title><rect x="17.7580%" y="501" width="0.0105%" height="15" fill="rgb(235,213,41)" fg:x="1695" fg:w="1"/><text x="18.0080%" y="511.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="17.7580%" y="485" width="0.0105%" height="15" fill="rgb(213,118,6)" fg:x="1695" fg:w="1"/><text x="18.0080%" y="495.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.01%)</title><rect x="17.7580%" y="469" width="0.0105%" height="15" fill="rgb(235,44,51)" fg:x="1695" fg:w="1"/><text x="18.0080%" y="479.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.01%)</title><rect x="17.7580%" y="453" width="0.0105%" height="15" fill="rgb(217,9,53)" fg:x="1695" fg:w="1"/><text x="18.0080%" y="463.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="17.7580%" y="437" width="0.0105%" height="15" fill="rgb(237,172,34)" fg:x="1695" fg:w="1"/><text x="18.0080%" y="447.50"></text></g><g><title>core::cmp::Ord::min (1 samples, 0.01%)</title><rect x="17.7685%" y="549" width="0.0105%" height="15" fill="rgb(206,206,11)" fg:x="1696" fg:w="1"/><text x="18.0185%" y="559.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (1 samples, 0.01%)</title><rect x="17.7685%" y="533" width="0.0105%" height="15" fill="rgb(214,149,29)" fg:x="1696" fg:w="1"/><text x="18.0185%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.01%)</title><rect x="17.7789%" y="533" width="0.0105%" height="15" fill="rgb(208,123,3)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="543.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.7789%" y="517" width="0.0105%" height="15" fill="rgb(229,126,4)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="527.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (1 samples, 0.01%)</title><rect x="17.7789%" y="501" width="0.0105%" height="15" fill="rgb(222,92,36)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="511.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="17.7789%" y="485" width="0.0105%" height="15" fill="rgb(216,39,41)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="495.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="17.7789%" y="469" width="0.0105%" height="15" fill="rgb(253,127,28)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="479.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="17.7789%" y="453" width="0.0105%" height="15" fill="rgb(249,152,51)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="17.7789%" y="437" width="0.0105%" height="15" fill="rgb(209,123,42)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="447.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="17.7789%" y="421" width="0.0105%" height="15" fill="rgb(241,118,22)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="431.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="17.7789%" y="405" width="0.0105%" height="15" fill="rgb(208,25,7)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="415.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="17.7789%" y="389" width="0.0105%" height="15" fill="rgb(243,144,39)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::exit::{{closure}} (1 samples, 0.01%)</title><rect x="17.7789%" y="373" width="0.0105%" height="15" fill="rgb(250,50,5)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="383.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="17.7789%" y="357" width="0.0105%" height="15" fill="rgb(207,67,11)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="367.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7789%" y="341" width="0.0105%" height="15" fill="rgb(245,204,40)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="351.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7789%" y="325" width="0.0105%" height="15" fill="rgb(238,228,24)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="335.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7789%" y="309" width="0.0105%" height="15" fill="rgb(217,116,22)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="319.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7789%" y="293" width="0.0105%" height="15" fill="rgb(234,98,12)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="303.50"></text></g><g><title>&lt;sharded_slab::pool::Ref&lt;T,C&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="17.7789%" y="277" width="0.0105%" height="15" fill="rgb(242,170,50)" fg:x="1697" fg:w="1"/><text x="18.0289%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.01%)</title><rect x="17.7894%" y="533" width="0.0105%" height="15" fill="rgb(235,7,5)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7894%" y="517" width="0.0105%" height="15" fill="rgb(241,114,28)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.01%)</title><rect x="17.7894%" y="501" width="0.0105%" height="15" fill="rgb(246,112,42)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.01%)</title><rect x="17.7894%" y="485" width="0.0105%" height="15" fill="rgb(248,228,14)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="495.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (1 samples, 0.01%)</title><rect x="17.7894%" y="469" width="0.0105%" height="15" fill="rgb(208,133,18)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="479.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="17.7894%" y="453" width="0.0105%" height="15" fill="rgb(207,35,49)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="463.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="17.7894%" y="437" width="0.0105%" height="15" fill="rgb(205,68,36)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="447.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (1 samples, 0.01%)</title><rect x="17.7894%" y="421" width="0.0105%" height="15" fill="rgb(245,62,40)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="431.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (1 samples, 0.01%)</title><rect x="17.7894%" y="405" width="0.0105%" height="15" fill="rgb(228,27,24)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="415.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="17.7894%" y="389" width="0.0105%" height="15" fill="rgb(253,19,12)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="399.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::{{closure}} (1 samples, 0.01%)</title><rect x="17.7894%" y="373" width="0.0105%" height="15" fill="rgb(232,28,20)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="383.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (1 samples, 0.01%)</title><rect x="17.7894%" y="357" width="0.0105%" height="15" fill="rgb(218,35,51)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="367.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (1 samples, 0.01%)</title><rect x="17.7894%" y="341" width="0.0105%" height="15" fill="rgb(212,90,40)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="351.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (1 samples, 0.01%)</title><rect x="17.7894%" y="325" width="0.0105%" height="15" fill="rgb(220,172,12)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="335.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="17.7894%" y="309" width="0.0105%" height="15" fill="rgb(226,159,20)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="319.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::{{closure}} (1 samples, 0.01%)</title><rect x="17.7894%" y="293" width="0.0105%" height="15" fill="rgb(234,205,16)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="303.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}} (1 samples, 0.01%)</title><rect x="17.7894%" y="277" width="0.0105%" height="15" fill="rgb(207,9,39)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="17.7894%" y="261" width="0.0105%" height="15" fill="rgb(249,143,15)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="271.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="17.7894%" y="245" width="0.0105%" height="15" fill="rgb(253,133,29)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="255.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (1 samples, 0.01%)</title><rect x="17.7894%" y="229" width="0.0105%" height="15" fill="rgb(221,187,0)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="239.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="17.7894%" y="213" width="0.0105%" height="15" fill="rgb(205,204,26)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="223.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7894%" y="197" width="0.0105%" height="15" fill="rgb(224,68,54)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="207.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="17.7894%" y="181" width="0.0105%" height="15" fill="rgb(209,67,4)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.01%)</title><rect x="17.7894%" y="165" width="0.0105%" height="15" fill="rgb(228,229,18)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="175.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.01%)</title><rect x="17.7894%" y="149" width="0.0105%" height="15" fill="rgb(231,89,13)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="159.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::CloseGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="17.7894%" y="133" width="0.0105%" height="15" fill="rgb(210,182,18)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="143.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="17.7894%" y="117" width="0.0105%" height="15" fill="rgb(240,105,2)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="127.50"></text></g><g><title>tracing_subscriber::registry::sharded::CLOSE_COUNT::__getit (1 samples, 0.01%)</title><rect x="17.7894%" y="101" width="0.0105%" height="15" fill="rgb(207,170,50)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="111.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="17.7894%" y="85" width="0.0105%" height="15" fill="rgb(232,133,24)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="95.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="17.7894%" y="69" width="0.0105%" height="15" fill="rgb(235,166,27)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="79.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="17.7894%" y="53" width="0.0105%" height="15" fill="rgb(209,19,13)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="63.50"></text></g><g><title>__tls_get_addr (1 samples, 0.01%)</title><rect x="17.7894%" y="37" width="0.0105%" height="15" fill="rgb(226,79,39)" fg:x="1698" fg:w="1"/><text x="18.0394%" y="47.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="17.7999%" y="389" width="0.0105%" height="15" fill="rgb(222,163,10)" fg:x="1699" fg:w="1"/><text x="18.0499%" y="399.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.01%)</title><rect x="17.7999%" y="373" width="0.0105%" height="15" fill="rgb(214,44,19)" fg:x="1699" fg:w="1"/><text x="18.0499%" y="383.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="17.7999%" y="357" width="0.0105%" height="15" fill="rgb(210,217,13)" fg:x="1699" fg:w="1"/><text x="18.0499%" y="367.50"></text></g><g><title>tracing_core::span::Attributes::record (1 samples, 0.01%)</title><rect x="17.7999%" y="341" width="0.0105%" height="15" fill="rgb(237,61,54)" fg:x="1699" fg:w="1"/><text x="18.0499%" y="351.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="17.7999%" y="325" width="0.0105%" height="15" fill="rgb(226,184,24)" fg:x="1699" fg:w="1"/><text x="18.0499%" y="335.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="17.7999%" y="309" width="0.0105%" height="15" fill="rgb(223,226,4)" fg:x="1699" fg:w="1"/><text x="18.0499%" y="319.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="17.7999%" y="293" width="0.0105%" height="15" fill="rgb(210,26,41)" fg:x="1699" fg:w="1"/><text x="18.0499%" y="303.50"></text></g><g><title>tracing_core::field::Field::name (1 samples, 0.01%)</title><rect x="17.7999%" y="277" width="0.0105%" height="15" fill="rgb(220,221,6)" fg:x="1699" fg:w="1"/><text x="18.0499%" y="287.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc_internal (5 samples, 0.05%)</title><rect x="17.7685%" y="565" width="0.0524%" height="15" fill="rgb(225,89,49)" fg:x="1696" fg:w="5"/><text x="18.0185%" y="575.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::alloc (4 samples, 0.04%)</title><rect x="17.7789%" y="549" width="0.0419%" height="15" fill="rgb(218,70,45)" fg:x="1697" fg:w="4"/><text x="18.0289%" y="559.50"></text></g><g><title>tracing::span::Span::new (2 samples, 0.02%)</title><rect x="17.7999%" y="533" width="0.0210%" height="15" fill="rgb(238,166,21)" fg:x="1699" fg:w="2"/><text x="18.0499%" y="543.50"></text></g><g><title>tracing::span::Span::make (2 samples, 0.02%)</title><rect x="17.7999%" y="517" width="0.0210%" height="15" fill="rgb(224,141,44)" fg:x="1699" fg:w="2"/><text x="18.0499%" y="527.50"></text></g><g><title>tracing_core::dispatcher::get_default (2 samples, 0.02%)</title><rect x="17.7999%" y="501" width="0.0210%" height="15" fill="rgb(230,12,49)" fg:x="1699" fg:w="2"/><text x="18.0499%" y="511.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2 samples, 0.02%)</title><rect x="17.7999%" y="485" width="0.0210%" height="15" fill="rgb(212,174,12)" fg:x="1699" fg:w="2"/><text x="18.0499%" y="495.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (2 samples, 0.02%)</title><rect x="17.7999%" y="469" width="0.0210%" height="15" fill="rgb(246,67,9)" fg:x="1699" fg:w="2"/><text x="18.0499%" y="479.50"></text></g><g><title>tracing::span::Span::make::{{closure}} (2 samples, 0.02%)</title><rect x="17.7999%" y="453" width="0.0210%" height="15" fill="rgb(239,35,23)" fg:x="1699" fg:w="2"/><text x="18.0499%" y="463.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (2 samples, 0.02%)</title><rect x="17.7999%" y="437" width="0.0210%" height="15" fill="rgb(211,167,0)" fg:x="1699" fg:w="2"/><text x="18.0499%" y="447.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="17.7999%" y="421" width="0.0210%" height="15" fill="rgb(225,119,45)" fg:x="1699" fg:w="2"/><text x="18.0499%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (2 samples, 0.02%)</title><rect x="17.7999%" y="405" width="0.0210%" height="15" fill="rgb(210,162,6)" fg:x="1699" fg:w="2"/><text x="18.0499%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="17.8104%" y="389" width="0.0105%" height="15" fill="rgb(208,118,35)" fg:x="1700" fg:w="1"/><text x="18.0604%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="17.8104%" y="373" width="0.0105%" height="15" fill="rgb(239,4,53)" fg:x="1700" fg:w="1"/><text x="18.0604%" y="383.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span (1 samples, 0.01%)</title><rect x="17.8104%" y="357" width="0.0105%" height="15" fill="rgb(213,130,21)" fg:x="1700" fg:w="1"/><text x="18.0604%" y="367.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="17.8104%" y="341" width="0.0105%" height="15" fill="rgb(235,148,0)" fg:x="1700" fg:w="1"/><text x="18.0604%" y="351.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::current_span::{{closure}} (1 samples, 0.01%)</title><rect x="17.8104%" y="325" width="0.0105%" height="15" fill="rgb(244,224,18)" fg:x="1700" fg:w="1"/><text x="18.0604%" y="335.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="17.8104%" y="309" width="0.0105%" height="15" fill="rgb(211,214,4)" fg:x="1700" fg:w="1"/><text x="18.0604%" y="319.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::create_buffer (9 samples, 0.09%)</title><rect x="17.7370%" y="613" width="0.0943%" height="15" fill="rgb(206,119,25)" fg:x="1693" fg:w="9"/><text x="17.9870%" y="623.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::allocate (8 samples, 0.08%)</title><rect x="17.7475%" y="597" width="0.0838%" height="15" fill="rgb(243,93,47)" fg:x="1694" fg:w="8"/><text x="17.9975%" y="607.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::alloc (8 samples, 0.08%)</title><rect x="17.7475%" y="581" width="0.0838%" height="15" fill="rgb(224,194,6)" fg:x="1694" fg:w="8"/><text x="17.9975%" y="591.50"></text></g><g><title>tracing::span::Span::new (1 samples, 0.01%)</title><rect x="17.8208%" y="565" width="0.0105%" height="15" fill="rgb(243,229,6)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="575.50"></text></g><g><title>tracing::span::Span::make (1 samples, 0.01%)</title><rect x="17.8208%" y="549" width="0.0105%" height="15" fill="rgb(207,23,50)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="559.50"></text></g><g><title>tracing_core::dispatcher::get_default (1 samples, 0.01%)</title><rect x="17.8208%" y="533" width="0.0105%" height="15" fill="rgb(253,192,32)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="543.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="17.8208%" y="517" width="0.0105%" height="15" fill="rgb(213,21,6)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="527.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (1 samples, 0.01%)</title><rect x="17.8208%" y="501" width="0.0105%" height="15" fill="rgb(243,151,13)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="511.50"></text></g><g><title>tracing::span::Span::make::{{closure}} (1 samples, 0.01%)</title><rect x="17.8208%" y="485" width="0.0105%" height="15" fill="rgb(233,165,41)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="495.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (1 samples, 0.01%)</title><rect x="17.8208%" y="469" width="0.0105%" height="15" fill="rgb(246,176,45)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="479.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="17.8208%" y="453" width="0.0105%" height="15" fill="rgb(217,170,52)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="463.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="17.8208%" y="437" width="0.0105%" height="15" fill="rgb(214,203,54)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (1 samples, 0.01%)</title><rect x="17.8208%" y="421" width="0.0105%" height="15" fill="rgb(248,215,49)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="431.50"></text></g><g><title>tracing_subscriber::registry::SpanRef&lt;R&gt;::extensions_mut (1 samples, 0.01%)</title><rect x="17.8208%" y="405" width="0.0105%" height="15" fill="rgb(208,46,10)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="415.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Data as tracing_subscriber::registry::SpanData&gt;::extensions_mut (1 samples, 0.01%)</title><rect x="17.8208%" y="389" width="0.0105%" height="15" fill="rgb(254,5,31)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="399.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::write (1 samples, 0.01%)</title><rect x="17.8208%" y="373" width="0.0105%" height="15" fill="rgb(222,104,33)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="383.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::write (1 samples, 0.01%)</title><rect x="17.8208%" y="357" width="0.0105%" height="15" fill="rgb(248,49,16)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="367.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::write (1 samples, 0.01%)</title><rect x="17.8208%" y="341" width="0.0105%" height="15" fill="rgb(232,198,41)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="351.50"></text></g><g><title>__GI___pthread_rwlock_wrlock (1 samples, 0.01%)</title><rect x="17.8208%" y="325" width="0.0105%" height="15" fill="rgb(214,125,3)" fg:x="1701" fg:w="1"/><text x="18.0708%" y="335.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (11 samples, 0.12%)</title><rect x="17.7266%" y="725" width="0.1152%" height="15" fill="rgb(229,220,28)" fg:x="1692" fg:w="11"/><text x="17.9766%" y="735.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system::{{closure}} (11 samples, 0.12%)</title><rect x="17.7266%" y="709" width="0.1152%" height="15" fill="rgb(222,64,37)" fg:x="1692" fg:w="11"/><text x="17.9766%" y="719.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (11 samples, 0.12%)</title><rect x="17.7266%" y="693" width="0.1152%" height="15" fill="rgb(249,184,13)" fg:x="1692" fg:w="11"/><text x="17.9766%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer (11 samples, 0.12%)</title><rect x="17.7266%" y="677" width="0.1152%" height="15" fill="rgb(252,176,6)" fg:x="1692" fg:w="11"/><text x="17.9766%" y="687.50"></text></g><g><title>wgpu::Device::create_buffer (10 samples, 0.10%)</title><rect x="17.7370%" y="661" width="0.1048%" height="15" fill="rgb(228,153,7)" fg:x="1693" fg:w="10"/><text x="17.9870%" y="671.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (10 samples, 0.10%)</title><rect x="17.7370%" y="645" width="0.1048%" height="15" fill="rgb(242,193,5)" fg:x="1693" fg:w="10"/><text x="17.9870%" y="655.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (10 samples, 0.10%)</title><rect x="17.7370%" y="629" width="0.1048%" height="15" fill="rgb(232,140,9)" fg:x="1693" fg:w="10"/><text x="17.9870%" y="639.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register_identity (1 samples, 0.01%)</title><rect x="17.8313%" y="613" width="0.0105%" height="15" fill="rgb(213,222,16)" fg:x="1702" fg:w="1"/><text x="18.0813%" y="623.50"></text></g><g><title>&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,wgpu_core::hub::IdentityManager&gt; as wgpu_core::hub::IdentityHandler&lt;I&gt;&gt;::process (1 samples, 0.01%)</title><rect x="17.8313%" y="597" width="0.0105%" height="15" fill="rgb(222,75,50)" fg:x="1702" fg:w="1"/><text x="18.0813%" y="607.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="17.8313%" y="581" width="0.0105%" height="15" fill="rgb(205,180,2)" fg:x="1702" fg:w="1"/><text x="18.0813%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="17.8313%" y="565" width="0.0105%" height="15" fill="rgb(216,34,7)" fg:x="1702" fg:w="1"/><text x="18.0813%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="17.8313%" y="549" width="0.0105%" height="15" fill="rgb(253,16,32)" fg:x="1702" fg:w="1"/><text x="18.0813%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="17.8313%" y="533" width="0.0105%" height="15" fill="rgb(208,97,28)" fg:x="1702" fg:w="1"/><text x="18.0813%" y="543.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="17.8418%" y="725" width="0.0105%" height="15" fill="rgb(225,92,11)" fg:x="1703" fg:w="1"/><text x="18.0918%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.01%)</title><rect x="17.8418%" y="709" width="0.0105%" height="15" fill="rgb(243,38,12)" fg:x="1703" fg:w="1"/><text x="18.0918%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="17.8628%" y="709" width="0.0105%" height="15" fill="rgb(208,139,16)" fg:x="1705" fg:w="1"/><text x="18.1128%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="17.8732%" y="549" width="0.0210%" height="15" fill="rgb(227,24,9)" fg:x="1706" fg:w="2"/><text x="18.1232%" y="559.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="17.8942%" y="549" width="0.0105%" height="15" fill="rgb(206,62,11)" fg:x="1708" fg:w="1"/><text x="18.1442%" y="559.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (4 samples, 0.04%)</title><rect x="17.8732%" y="709" width="0.0419%" height="15" fill="rgb(228,134,27)" fg:x="1706" fg:w="4"/><text x="18.1232%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (4 samples, 0.04%)</title><rect x="17.8732%" y="693" width="0.0419%" height="15" fill="rgb(205,55,33)" fg:x="1706" fg:w="4"/><text x="18.1232%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.04%)</title><rect x="17.8732%" y="677" width="0.0419%" height="15" fill="rgb(243,75,43)" fg:x="1706" fg:w="4"/><text x="18.1232%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (4 samples, 0.04%)</title><rect x="17.8732%" y="661" width="0.0419%" height="15" fill="rgb(223,27,42)" fg:x="1706" fg:w="4"/><text x="18.1232%" y="671.50"></text></g><g><title>alloc::raw_vec::finish_grow (4 samples, 0.04%)</title><rect x="17.8732%" y="645" width="0.0419%" height="15" fill="rgb(232,189,33)" fg:x="1706" fg:w="4"/><text x="18.1232%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (4 samples, 0.04%)</title><rect x="17.8732%" y="629" width="0.0419%" height="15" fill="rgb(210,9,39)" fg:x="1706" fg:w="4"/><text x="18.1232%" y="639.50"></text></g><g><title>alloc::alloc::Global::grow_impl (4 samples, 0.04%)</title><rect x="17.8732%" y="613" width="0.0419%" height="15" fill="rgb(242,85,26)" fg:x="1706" fg:w="4"/><text x="18.1232%" y="623.50"></text></g><g><title>alloc::alloc::realloc (4 samples, 0.04%)</title><rect x="17.8732%" y="597" width="0.0419%" height="15" fill="rgb(248,44,4)" fg:x="1706" fg:w="4"/><text x="18.1232%" y="607.50"></text></g><g><title>__GI___libc_realloc (4 samples, 0.04%)</title><rect x="17.8732%" y="581" width="0.0419%" height="15" fill="rgb(250,96,46)" fg:x="1706" fg:w="4"/><text x="18.1232%" y="591.50"></text></g><g><title>_int_realloc (4 samples, 0.04%)</title><rect x="17.8732%" y="565" width="0.0419%" height="15" fill="rgb(229,116,26)" fg:x="1706" fg:w="4"/><text x="18.1232%" y="575.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="17.9047%" y="549" width="0.0105%" height="15" fill="rgb(246,94,34)" fg:x="1709" fg:w="1"/><text x="18.1547%" y="559.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="17.9047%" y="533" width="0.0105%" height="15" fill="rgb(251,73,21)" fg:x="1709" fg:w="1"/><text x="18.1547%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (11 samples, 0.12%)</title><rect x="17.8523%" y="725" width="0.1152%" height="15" fill="rgb(254,121,25)" fg:x="1704" fg:w="11"/><text x="18.1023%" y="735.50"></text></g><g><title>core::ptr::write (5 samples, 0.05%)</title><rect x="17.9151%" y="709" width="0.0524%" height="15" fill="rgb(215,161,49)" fg:x="1710" fg:w="5"/><text x="18.1651%" y="719.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="17.9675%" y="725" width="0.0105%" height="15" fill="rgb(221,43,13)" fg:x="1715" fg:w="1"/><text x="18.2175%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="17.9885%" y="661" width="0.0105%" height="15" fill="rgb(249,5,37)" fg:x="1717" fg:w="1"/><text x="18.2385%" y="671.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="17.9885%" y="645" width="0.0105%" height="15" fill="rgb(226,25,44)" fg:x="1717" fg:w="1"/><text x="18.2385%" y="655.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="17.9885%" y="629" width="0.0105%" height="15" fill="rgb(238,189,16)" fg:x="1717" fg:w="1"/><text x="18.2385%" y="639.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="17.9885%" y="613" width="0.0105%" height="15" fill="rgb(251,186,8)" fg:x="1717" fg:w="1"/><text x="18.2385%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="17.9885%" y="597" width="0.0105%" height="15" fill="rgb(254,34,31)" fg:x="1717" fg:w="1"/><text x="18.2385%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="17.9885%" y="581" width="0.0105%" height="15" fill="rgb(225,215,27)" fg:x="1717" fg:w="1"/><text x="18.2385%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="17.9885%" y="565" width="0.0105%" height="15" fill="rgb(221,192,48)" fg:x="1717" fg:w="1"/><text x="18.2385%" y="575.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="17.9885%" y="549" width="0.0105%" height="15" fill="rgb(219,137,20)" fg:x="1717" fg:w="1"/><text x="18.2385%" y="559.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="17.9885%" y="533" width="0.0105%" height="15" fill="rgb(219,84,11)" fg:x="1717" fg:w="1"/><text x="18.2385%" y="543.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="17.9885%" y="517" width="0.0105%" height="15" fill="rgb(224,10,23)" fg:x="1717" fg:w="1"/><text x="18.2385%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="18.0094%" y="613" width="0.0210%" height="15" fill="rgb(248,22,39)" fg:x="1719" fg:w="2"/><text x="18.2594%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="18.0199%" y="597" width="0.0105%" height="15" fill="rgb(212,154,20)" fg:x="1720" fg:w="1"/><text x="18.2699%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="18.0199%" y="581" width="0.0105%" height="15" fill="rgb(236,199,50)" fg:x="1720" fg:w="1"/><text x="18.2699%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="18.0094%" y="629" width="0.0314%" height="15" fill="rgb(211,9,17)" fg:x="1719" fg:w="3"/><text x="18.2594%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="18.0304%" y="613" width="0.0105%" height="15" fill="rgb(243,216,36)" fg:x="1721" fg:w="1"/><text x="18.2804%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="18.0304%" y="597" width="0.0105%" height="15" fill="rgb(250,2,10)" fg:x="1721" fg:w="1"/><text x="18.2804%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="18.0304%" y="581" width="0.0105%" height="15" fill="rgb(226,50,48)" fg:x="1721" fg:w="1"/><text x="18.2804%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="18.0304%" y="565" width="0.0105%" height="15" fill="rgb(243,81,16)" fg:x="1721" fg:w="1"/><text x="18.2804%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (30 samples, 0.31%)</title><rect x="18.0409%" y="629" width="0.3143%" height="15" fill="rgb(250,14,2)" fg:x="1722" fg:w="30"/><text x="18.2909%" y="639.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (30 samples, 0.31%)</title><rect x="18.0409%" y="613" width="0.3143%" height="15" fill="rgb(233,135,29)" fg:x="1722" fg:w="30"/><text x="18.2909%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.03%)</title><rect x="18.3552%" y="581" width="0.0314%" height="15" fill="rgb(224,64,43)" fg:x="1752" fg:w="3"/><text x="18.6052%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.03%)</title><rect x="18.3552%" y="565" width="0.0314%" height="15" fill="rgb(238,84,13)" fg:x="1752" fg:w="3"/><text x="18.6052%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="18.3552%" y="549" width="0.0314%" height="15" fill="rgb(253,48,26)" fg:x="1752" fg:w="3"/><text x="18.6052%" y="559.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (40 samples, 0.42%)</title><rect x="17.9780%" y="725" width="0.4191%" height="15" fill="rgb(205,223,31)" fg:x="1716" fg:w="40"/><text x="18.2280%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (39 samples, 0.41%)</title><rect x="17.9885%" y="709" width="0.4086%" height="15" fill="rgb(221,41,32)" fg:x="1717" fg:w="39"/><text x="18.2385%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (39 samples, 0.41%)</title><rect x="17.9885%" y="693" width="0.4086%" height="15" fill="rgb(213,158,31)" fg:x="1717" fg:w="39"/><text x="18.2385%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (39 samples, 0.41%)</title><rect x="17.9885%" y="677" width="0.4086%" height="15" fill="rgb(245,126,43)" fg:x="1717" fg:w="39"/><text x="18.2385%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (38 samples, 0.40%)</title><rect x="17.9990%" y="661" width="0.3981%" height="15" fill="rgb(227,7,22)" fg:x="1718" fg:w="38"/><text x="18.2490%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (38 samples, 0.40%)</title><rect x="17.9990%" y="645" width="0.3981%" height="15" fill="rgb(252,90,44)" fg:x="1718" fg:w="38"/><text x="18.2490%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.04%)</title><rect x="18.3552%" y="629" width="0.0419%" height="15" fill="rgb(253,91,0)" fg:x="1752" fg:w="4"/><text x="18.6052%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.04%)</title><rect x="18.3552%" y="613" width="0.0419%" height="15" fill="rgb(252,175,49)" fg:x="1752" fg:w="4"/><text x="18.6052%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.04%)</title><rect x="18.3552%" y="597" width="0.0419%" height="15" fill="rgb(246,150,1)" fg:x="1752" fg:w="4"/><text x="18.6052%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="18.3866%" y="581" width="0.0105%" height="15" fill="rgb(241,192,25)" fg:x="1755" fg:w="1"/><text x="18.6366%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="18.3866%" y="565" width="0.0105%" height="15" fill="rgb(239,187,11)" fg:x="1755" fg:w="1"/><text x="18.6366%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="18.3866%" y="549" width="0.0105%" height="15" fill="rgb(218,202,51)" fg:x="1755" fg:w="1"/><text x="18.6366%" y="559.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="18.3866%" y="533" width="0.0105%" height="15" fill="rgb(225,176,8)" fg:x="1755" fg:w="1"/><text x="18.6366%" y="543.50"></text></g><g><title>bevy_ecs::system::system_param::RemovedComponents&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="18.3971%" y="725" width="0.0105%" height="15" fill="rgb(219,122,41)" fg:x="1756" fg:w="1"/><text x="18.6471%" y="735.50"></text></g><g><title>bevy_ecs::world::World::removed_with_id (1 samples, 0.01%)</title><rect x="18.3971%" y="709" width="0.0105%" height="15" fill="rgb(248,140,20)" fg:x="1756" fg:w="1"/><text x="18.6471%" y="719.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="18.3971%" y="693" width="0.0105%" height="15" fill="rgb(245,41,37)" fg:x="1756" fg:w="1"/><text x="18.6471%" y="703.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="18.3971%" y="677" width="0.0105%" height="15" fill="rgb(235,82,39)" fg:x="1756" fg:w="1"/><text x="18.6471%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="18.3971%" y="661" width="0.0105%" height="15" fill="rgb(230,108,42)" fg:x="1756" fg:w="1"/><text x="18.6471%" y="671.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::resize_buffer_arrays (1 samples, 0.01%)</title><rect x="18.4075%" y="725" width="0.0105%" height="15" fill="rgb(215,150,50)" fg:x="1757" fg:w="1"/><text x="18.6575%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::flatten::Flatten&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="18.4075%" y="709" width="0.0105%" height="15" fill="rgb(233,212,5)" fg:x="1757" fg:w="1"/><text x="18.6575%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::flatten::FlattenCompat&lt;I,U&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="18.4075%" y="693" width="0.0105%" height="15" fill="rgb(245,80,22)" fg:x="1757" fg:w="1"/><text x="18.6575%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="18.4075%" y="677" width="0.0105%" height="15" fill="rgb(238,129,16)" fg:x="1757" fg:w="1"/><text x="18.6575%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::fuse::Fuse&lt;I&gt; as core::iter::adapters::fuse::FuseImpl&lt;I&gt;&gt;::next (1 samples, 0.01%)</title><rect x="18.4075%" y="661" width="0.0105%" height="15" fill="rgb(240,19,0)" fg:x="1757" fg:w="1"/><text x="18.6575%" y="671.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlas as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::get_render_resource_name (1 samples, 0.01%)</title><rect x="18.4599%" y="709" width="0.0105%" height="15" fill="rgb(232,42,35)" fg:x="1762" fg:w="1"/><text x="18.7099%" y="719.50"></text></g><g><title>core::option::Option&lt;&amp;T&gt;::copied (1 samples, 0.01%)</title><rect x="18.4599%" y="693" width="0.0105%" height="15" fill="rgb(223,130,24)" fg:x="1762" fg:w="1"/><text x="18.7099%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="18.4599%" y="677" width="0.0105%" height="15" fill="rgb(237,16,22)" fg:x="1762" fg:w="1"/><text x="18.7099%" y="687.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlas as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::iter (1 samples, 0.01%)</title><rect x="18.4704%" y="709" width="0.0105%" height="15" fill="rgb(248,192,20)" fg:x="1763" fg:w="1"/><text x="18.7204%" y="719.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlas as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::get_render_resource (2 samples, 0.02%)</title><rect x="18.5228%" y="677" width="0.0210%" height="15" fill="rgb(233,167,2)" fg:x="1768" fg:w="2"/><text x="18.7728%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="18.4809%" y="709" width="0.0733%" height="15" fill="rgb(252,71,44)" fg:x="1764" fg:w="7"/><text x="18.7309%" y="719.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="18.5018%" y="693" width="0.0524%" height="15" fill="rgb(238,37,47)" fg:x="1766" fg:w="5"/><text x="18.7518%" y="703.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.01%)</title><rect x="18.5437%" y="677" width="0.0105%" height="15" fill="rgb(214,202,54)" fg:x="1770" fg:w="1"/><text x="18.7937%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;(bevy_asset::handle::HandleUntyped,u64),bevy_render::renderer::render_resource::render_resource::RenderResourceId,ahash::random_state::RandomState&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="18.5542%" y="677" width="0.0210%" height="15" fill="rgb(254,165,40)" fg:x="1771" fg:w="2"/><text x="18.8042%" y="687.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="18.5542%" y="661" width="0.0210%" height="15" fill="rgb(246,173,38)" fg:x="1771" fg:w="2"/><text x="18.8042%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (2 samples, 0.02%)</title><rect x="18.5542%" y="645" width="0.0210%" height="15" fill="rgb(215,3,27)" fg:x="1771" fg:w="2"/><text x="18.8042%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="18.5542%" y="629" width="0.0210%" height="15" fill="rgb(239,169,51)" fg:x="1771" fg:w="2"/><text x="18.8042%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="18.5542%" y="613" width="0.0210%" height="15" fill="rgb(212,5,25)" fg:x="1771" fg:w="2"/><text x="18.8042%" y="623.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (2 samples, 0.02%)</title><rect x="18.5752%" y="677" width="0.0210%" height="15" fill="rgb(243,45,17)" fg:x="1773" fg:w="2"/><text x="18.8252%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (2 samples, 0.02%)</title><rect x="18.5752%" y="661" width="0.0210%" height="15" fill="rgb(242,97,9)" fg:x="1773" fg:w="2"/><text x="18.8252%" y="671.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (2 samples, 0.02%)</title><rect x="18.5752%" y="645" width="0.0210%" height="15" fill="rgb(228,71,31)" fg:x="1773" fg:w="2"/><text x="18.8252%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="18.5752%" y="629" width="0.0210%" height="15" fill="rgb(252,184,16)" fg:x="1773" fg:w="2"/><text x="18.8252%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="18.5752%" y="613" width="0.0210%" height="15" fill="rgb(236,169,46)" fg:x="1773" fg:w="2"/><text x="18.8252%" y="623.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (1 samples, 0.01%)</title><rect x="18.5961%" y="661" width="0.0105%" height="15" fill="rgb(207,17,47)" fg:x="1775" fg:w="1"/><text x="18.8461%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="18.6066%" y="613" width="0.0105%" height="15" fill="rgb(206,201,28)" fg:x="1776" fg:w="1"/><text x="18.8566%" y="623.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="18.6066%" y="597" width="0.0105%" height="15" fill="rgb(224,184,23)" fg:x="1776" fg:w="1"/><text x="18.8566%" y="607.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="18.6066%" y="581" width="0.0105%" height="15" fill="rgb(208,139,48)" fg:x="1776" fg:w="1"/><text x="18.8566%" y="591.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="18.6171%" y="597" width="0.0105%" height="15" fill="rgb(208,130,10)" fg:x="1777" fg:w="1"/><text x="18.8671%" y="607.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="18.6171%" y="581" width="0.0105%" height="15" fill="rgb(211,213,45)" fg:x="1777" fg:w="1"/><text x="18.8671%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="18.6171%" y="565" width="0.0105%" height="15" fill="rgb(235,100,30)" fg:x="1777" fg:w="1"/><text x="18.8671%" y="575.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="18.6171%" y="549" width="0.0105%" height="15" fill="rgb(206,144,31)" fg:x="1777" fg:w="1"/><text x="18.8671%" y="559.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="18.6171%" y="533" width="0.0105%" height="15" fill="rgb(224,200,26)" fg:x="1777" fg:w="1"/><text x="18.8671%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="18.6171%" y="517" width="0.0105%" height="15" fill="rgb(247,104,53)" fg:x="1777" fg:w="1"/><text x="18.8671%" y="527.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="18.6171%" y="501" width="0.0105%" height="15" fill="rgb(220,14,17)" fg:x="1777" fg:w="1"/><text x="18.8671%" y="511.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="18.6171%" y="485" width="0.0105%" height="15" fill="rgb(230,140,40)" fg:x="1777" fg:w="1"/><text x="18.8671%" y="495.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="18.6171%" y="469" width="0.0105%" height="15" fill="rgb(229,2,41)" fg:x="1777" fg:w="1"/><text x="18.8671%" y="479.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="18.6066%" y="629" width="0.0314%" height="15" fill="rgb(232,89,16)" fg:x="1776" fg:w="3"/><text x="18.8566%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (2 samples, 0.02%)</title><rect x="18.6171%" y="613" width="0.0210%" height="15" fill="rgb(247,59,52)" fg:x="1777" fg:w="2"/><text x="18.8671%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.01%)</title><rect x="18.6276%" y="597" width="0.0105%" height="15" fill="rgb(226,110,21)" fg:x="1778" fg:w="1"/><text x="18.8776%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="18.6276%" y="581" width="0.0105%" height="15" fill="rgb(224,176,43)" fg:x="1778" fg:w="1"/><text x="18.8776%" y="591.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="18.6276%" y="565" width="0.0105%" height="15" fill="rgb(221,73,6)" fg:x="1778" fg:w="1"/><text x="18.8776%" y="575.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="18.6276%" y="549" width="0.0105%" height="15" fill="rgb(232,78,19)" fg:x="1778" fg:w="1"/><text x="18.8776%" y="559.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="18.6276%" y="533" width="0.0105%" height="15" fill="rgb(233,112,48)" fg:x="1778" fg:w="1"/><text x="18.8776%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="18.6380%" y="597" width="0.0105%" height="15" fill="rgb(243,131,47)" fg:x="1779" fg:w="1"/><text x="18.8880%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="18.6380%" y="581" width="0.0105%" height="15" fill="rgb(226,51,1)" fg:x="1779" fg:w="1"/><text x="18.8880%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.01%)</title><rect x="18.6380%" y="565" width="0.0105%" height="15" fill="rgb(247,58,7)" fg:x="1779" fg:w="1"/><text x="18.8880%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="18.6380%" y="549" width="0.0105%" height="15" fill="rgb(209,7,32)" fg:x="1779" fg:w="1"/><text x="18.8880%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="18.6380%" y="533" width="0.0105%" height="15" fill="rgb(209,39,41)" fg:x="1779" fg:w="1"/><text x="18.8880%" y="543.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (10 samples, 0.10%)</title><rect x="18.5542%" y="693" width="0.1048%" height="15" fill="rgb(226,182,46)" fg:x="1771" fg:w="10"/><text x="18.8042%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.06%)</title><rect x="18.5961%" y="677" width="0.0629%" height="15" fill="rgb(230,219,10)" fg:x="1775" fg:w="6"/><text x="18.8461%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (5 samples, 0.05%)</title><rect x="18.6066%" y="661" width="0.0524%" height="15" fill="rgb(227,175,30)" fg:x="1776" fg:w="5"/><text x="18.8566%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (5 samples, 0.05%)</title><rect x="18.6066%" y="645" width="0.0524%" height="15" fill="rgb(217,2,50)" fg:x="1776" fg:w="5"/><text x="18.8566%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="18.6380%" y="629" width="0.0210%" height="15" fill="rgb(229,160,0)" fg:x="1779" fg:w="2"/><text x="18.8880%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="18.6380%" y="613" width="0.0210%" height="15" fill="rgb(207,78,37)" fg:x="1779" fg:w="2"/><text x="18.8880%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="18.6485%" y="597" width="0.0105%" height="15" fill="rgb(225,57,0)" fg:x="1780" fg:w="1"/><text x="18.8985%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="18.6485%" y="581" width="0.0105%" height="15" fill="rgb(232,154,2)" fg:x="1780" fg:w="1"/><text x="18.8985%" y="591.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="18.6485%" y="565" width="0.0105%" height="15" fill="rgb(241,212,25)" fg:x="1780" fg:w="1"/><text x="18.8985%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="18.6485%" y="549" width="0.0105%" height="15" fill="rgb(226,69,20)" fg:x="1780" fg:w="1"/><text x="18.8985%" y="559.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="18.6485%" y="533" width="0.0105%" height="15" fill="rgb(247,184,54)" fg:x="1780" fg:w="1"/><text x="18.8985%" y="543.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="18.6485%" y="517" width="0.0105%" height="15" fill="rgb(210,145,0)" fg:x="1780" fg:w="1"/><text x="18.8985%" y="527.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (18 samples, 0.19%)</title><rect x="18.5542%" y="709" width="0.1886%" height="15" fill="rgb(253,82,12)" fg:x="1771" fg:w="18"/><text x="18.8042%" y="719.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::clone_weak_untyped (8 samples, 0.08%)</title><rect x="18.6590%" y="693" width="0.0838%" height="15" fill="rgb(245,42,11)" fg:x="1781" fg:w="8"/><text x="18.9090%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (2 samples, 0.02%)</title><rect x="18.8057%" y="533" width="0.0210%" height="15" fill="rgb(219,147,32)" fg:x="1795" fg:w="2"/><text x="19.0557%" y="543.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (2 samples, 0.02%)</title><rect x="18.8057%" y="517" width="0.0210%" height="15" fill="rgb(246,12,7)" fg:x="1795" fg:w="2"/><text x="19.0557%" y="527.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (3 samples, 0.03%)</title><rect x="18.8266%" y="501" width="0.0314%" height="15" fill="rgb(243,50,9)" fg:x="1797" fg:w="3"/><text x="19.0766%" y="511.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="19.0152%" y="405" width="0.0314%" height="15" fill="rgb(219,149,6)" fg:x="1815" fg:w="3"/><text x="19.2652%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (21 samples, 0.22%)</title><rect x="18.8685%" y="485" width="0.2200%" height="15" fill="rgb(241,51,42)" fg:x="1801" fg:w="21"/><text x="19.1185%" y="495.50"></text></g><g><title>alloc::alloc::Global::grow_impl (21 samples, 0.22%)</title><rect x="18.8685%" y="469" width="0.2200%" height="15" fill="rgb(226,128,27)" fg:x="1801" fg:w="21"/><text x="19.1185%" y="479.50"></text></g><g><title>alloc::alloc::realloc (21 samples, 0.22%)</title><rect x="18.8685%" y="453" width="0.2200%" height="15" fill="rgb(244,144,4)" fg:x="1801" fg:w="21"/><text x="19.1185%" y="463.50"></text></g><g><title>__GI___libc_realloc (21 samples, 0.22%)</title><rect x="18.8685%" y="437" width="0.2200%" height="15" fill="rgb(221,4,13)" fg:x="1801" fg:w="21"/><text x="19.1185%" y="447.50"></text></g><g><title>_int_realloc (10 samples, 0.10%)</title><rect x="18.9838%" y="421" width="0.1048%" height="15" fill="rgb(208,170,28)" fg:x="1812" fg:w="10"/><text x="19.2338%" y="431.50"></text></g><g><title>_int_malloc (4 samples, 0.04%)</title><rect x="19.0466%" y="405" width="0.0419%" height="15" fill="rgb(226,131,13)" fg:x="1818" fg:w="4"/><text x="19.2966%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (26 samples, 0.27%)</title><rect x="18.8580%" y="501" width="0.2724%" height="15" fill="rgb(215,72,41)" fg:x="1800" fg:w="26"/><text x="19.1080%" y="511.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="19.0885%" y="485" width="0.0419%" height="15" fill="rgb(243,108,20)" fg:x="1822" fg:w="4"/><text x="19.3385%" y="495.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.35%)</title><rect x="18.7952%" y="565" width="0.3457%" height="15" fill="rgb(230,189,17)" fg:x="1794" fg:w="33"/><text x="19.0452%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.35%)</title><rect x="18.7952%" y="549" width="0.3457%" height="15" fill="rgb(220,50,17)" fg:x="1794" fg:w="33"/><text x="19.0452%" y="559.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.31%)</title><rect x="18.8266%" y="533" width="0.3143%" height="15" fill="rgb(248,152,48)" fg:x="1797" fg:w="30"/><text x="19.0766%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (30 samples, 0.31%)</title><rect x="18.8266%" y="517" width="0.3143%" height="15" fill="rgb(244,91,11)" fg:x="1797" fg:w="30"/><text x="19.0766%" y="527.50"></text></g><g><title>core::cmp::max (1 samples, 0.01%)</title><rect x="19.1304%" y="501" width="0.0105%" height="15" fill="rgb(220,157,5)" fg:x="1826" fg:w="1"/><text x="19.3804%" y="511.50"></text></g><g><title>core::cmp::Ord::max (1 samples, 0.01%)</title><rect x="19.1304%" y="485" width="0.0105%" height="15" fill="rgb(253,137,8)" fg:x="1826" fg:w="1"/><text x="19.3804%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="19.1304%" y="469" width="0.0105%" height="15" fill="rgb(217,137,51)" fg:x="1826" fg:w="1"/><text x="19.3804%" y="479.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (36 samples, 0.38%)</title><rect x="18.7952%" y="661" width="0.3772%" height="15" fill="rgb(218,209,53)" fg:x="1794" fg:w="36"/><text x="19.0452%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (36 samples, 0.38%)</title><rect x="18.7952%" y="645" width="0.3772%" height="15" fill="rgb(249,137,25)" fg:x="1794" fg:w="36"/><text x="19.0452%" y="655.50"></text></g><g><title>alloc::string::String::push_str (36 samples, 0.38%)</title><rect x="18.7952%" y="629" width="0.3772%" height="15" fill="rgb(239,155,26)" fg:x="1794" fg:w="36"/><text x="19.0452%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (36 samples, 0.38%)</title><rect x="18.7952%" y="613" width="0.3772%" height="15" fill="rgb(227,85,46)" fg:x="1794" fg:w="36"/><text x="19.0452%" y="623.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (36 samples, 0.38%)</title><rect x="18.7952%" y="597" width="0.3772%" height="15" fill="rgb(251,107,43)" fg:x="1794" fg:w="36"/><text x="19.0452%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (36 samples, 0.38%)</title><rect x="18.7952%" y="581" width="0.3772%" height="15" fill="rgb(234,170,33)" fg:x="1794" fg:w="36"/><text x="19.0452%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="19.1409%" y="565" width="0.0314%" height="15" fill="rgb(206,29,35)" fg:x="1827" fg:w="3"/><text x="19.3909%" y="575.50"></text></g><g><title>__memcpy_sse2_unaligned (3 samples, 0.03%)</title><rect x="19.1409%" y="549" width="0.0314%" height="15" fill="rgb(227,138,25)" fg:x="1827" fg:w="3"/><text x="19.3909%" y="559.50"></text></g><g><title>alloc::fmt::format (42 samples, 0.44%)</title><rect x="18.7428%" y="709" width="0.4400%" height="15" fill="rgb(249,131,35)" fg:x="1789" fg:w="42"/><text x="18.9928%" y="719.50"></text></g><g><title>core::fmt::Write::write_fmt (41 samples, 0.43%)</title><rect x="18.7533%" y="693" width="0.4295%" height="15" fill="rgb(239,6,40)" fg:x="1790" fg:w="41"/><text x="19.0033%" y="703.50"></text></g><g><title>core::fmt::write (40 samples, 0.42%)</title><rect x="18.7638%" y="677" width="0.4191%" height="15" fill="rgb(246,136,47)" fg:x="1791" fg:w="40"/><text x="19.0138%" y="687.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="19.1723%" y="661" width="0.0105%" height="15" fill="rgb(253,58,26)" fg:x="1830" fg:w="1"/><text x="19.4223%" y="671.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (1 samples, 0.01%)</title><rect x="19.1828%" y="709" width="0.0105%" height="15" fill="rgb(237,141,10)" fg:x="1831" fg:w="1"/><text x="19.4328%" y="719.50"></text></g><g><title>__GI___libc_free (5 samples, 0.05%)</title><rect x="19.1933%" y="613" width="0.0524%" height="15" fill="rgb(234,156,12)" fg:x="1832" fg:w="5"/><text x="19.4433%" y="623.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="19.2038%" y="597" width="0.0419%" height="15" fill="rgb(243,224,36)" fg:x="1833" fg:w="4"/><text x="19.4538%" y="607.50"></text></g><g><title>__rdl_dealloc (1 samples, 0.01%)</title><rect x="19.2457%" y="613" width="0.0105%" height="15" fill="rgb(205,229,51)" fg:x="1837" fg:w="1"/><text x="19.4957%" y="623.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1 samples, 0.01%)</title><rect x="19.2457%" y="597" width="0.0105%" height="15" fill="rgb(223,189,4)" fg:x="1837" fg:w="1"/><text x="19.4957%" y="607.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (81 samples, 0.85%)</title><rect x="18.4180%" y="725" width="0.8486%" height="15" fill="rgb(249,167,54)" fg:x="1758" fg:w="81"/><text x="18.6680%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (7 samples, 0.07%)</title><rect x="19.1933%" y="709" width="0.0733%" height="15" fill="rgb(218,34,28)" fg:x="1832" fg:w="7"/><text x="19.4433%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (7 samples, 0.07%)</title><rect x="19.1933%" y="693" width="0.0733%" height="15" fill="rgb(232,109,42)" fg:x="1832" fg:w="7"/><text x="19.4433%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (7 samples, 0.07%)</title><rect x="19.1933%" y="677" width="0.0733%" height="15" fill="rgb(248,214,46)" fg:x="1832" fg:w="7"/><text x="19.4433%" y="687.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (7 samples, 0.07%)</title><rect x="19.1933%" y="661" width="0.0733%" height="15" fill="rgb(244,216,40)" fg:x="1832" fg:w="7"/><text x="19.4433%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.07%)</title><rect x="19.1933%" y="645" width="0.0733%" height="15" fill="rgb(231,226,31)" fg:x="1832" fg:w="7"/><text x="19.4433%" y="655.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.07%)</title><rect x="19.1933%" y="629" width="0.0733%" height="15" fill="rgb(238,38,43)" fg:x="1832" fg:w="7"/><text x="19.4433%" y="639.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="19.2562%" y="613" width="0.0105%" height="15" fill="rgb(208,88,43)" fg:x="1838" fg:w="1"/><text x="19.5062%" y="623.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::clone_weak_untyped (5 samples, 0.05%)</title><rect x="19.2666%" y="709" width="0.0524%" height="15" fill="rgb(205,136,37)" fg:x="1839" fg:w="5"/><text x="19.5166%" y="719.50"></text></g><g><title>bevy_asset::handle::HandleUntyped::weak (3 samples, 0.03%)</title><rect x="19.2876%" y="693" width="0.0314%" height="15" fill="rgb(237,34,14)" fg:x="1841" fg:w="3"/><text x="19.5376%" y="703.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (3 samples, 0.03%)</title><rect x="19.3190%" y="709" width="0.0314%" height="15" fill="rgb(236,193,44)" fg:x="1844" fg:w="3"/><text x="19.5690%" y="719.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (3 samples, 0.03%)</title><rect x="19.3190%" y="693" width="0.0314%" height="15" fill="rgb(231,48,10)" fg:x="1844" fg:w="3"/><text x="19.5690%" y="703.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::into_mut (1 samples, 0.01%)</title><rect x="19.3400%" y="677" width="0.0105%" height="15" fill="rgb(213,141,34)" fg:x="1846" fg:w="1"/><text x="19.5900%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="19.3400%" y="661" width="0.0105%" height="15" fill="rgb(249,130,34)" fg:x="1846" fg:w="1"/><text x="19.5900%" y="671.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="19.3819%" y="661" width="0.0105%" height="15" fill="rgb(219,42,41)" fg:x="1850" fg:w="1"/><text x="19.6319%" y="671.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="19.3819%" y="645" width="0.0105%" height="15" fill="rgb(224,100,54)" fg:x="1850" fg:w="1"/><text x="19.6319%" y="655.50"></text></g><g><title>hashbrown::map::make_insert_hash (2 samples, 0.02%)</title><rect x="19.3819%" y="677" width="0.0210%" height="15" fill="rgb(229,200,27)" fg:x="1850" fg:w="2"/><text x="19.6319%" y="687.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="19.3924%" y="661" width="0.0105%" height="15" fill="rgb(217,118,10)" fg:x="1851" fg:w="1"/><text x="19.6424%" y="671.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="19.3924%" y="645" width="0.0105%" height="15" fill="rgb(206,22,3)" fg:x="1851" fg:w="1"/><text x="19.6424%" y="655.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="19.3924%" y="629" width="0.0105%" height="15" fill="rgb(232,163,46)" fg:x="1851" fg:w="1"/><text x="19.6424%" y="639.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="19.3924%" y="613" width="0.0105%" height="15" fill="rgb(206,95,13)" fg:x="1851" fg:w="1"/><text x="19.6424%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="19.3924%" y="597" width="0.0105%" height="15" fill="rgb(253,154,18)" fg:x="1851" fg:w="1"/><text x="19.6424%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="19.3924%" y="581" width="0.0105%" height="15" fill="rgb(219,32,23)" fg:x="1851" fg:w="1"/><text x="19.6424%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="19.3924%" y="565" width="0.0105%" height="15" fill="rgb(230,191,45)" fg:x="1851" fg:w="1"/><text x="19.6424%" y="575.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="19.3924%" y="549" width="0.0105%" height="15" fill="rgb(229,64,36)" fg:x="1851" fg:w="1"/><text x="19.6424%" y="559.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="19.3924%" y="533" width="0.0105%" height="15" fill="rgb(205,129,25)" fg:x="1851" fg:w="1"/><text x="19.6424%" y="543.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="19.3924%" y="517" width="0.0105%" height="15" fill="rgb(254,112,7)" fg:x="1851" fg:w="1"/><text x="19.6424%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="19.4133%" y="661" width="0.0105%" height="15" fill="rgb(226,53,48)" fg:x="1853" fg:w="1"/><text x="19.6633%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="19.4133%" y="645" width="0.0105%" height="15" fill="rgb(214,153,38)" fg:x="1853" fg:w="1"/><text x="19.6633%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="19.4133%" y="629" width="0.0105%" height="15" fill="rgb(243,101,7)" fg:x="1853" fg:w="1"/><text x="19.6633%" y="639.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="19.4133%" y="613" width="0.0105%" height="15" fill="rgb(240,140,22)" fg:x="1853" fg:w="1"/><text x="19.6633%" y="623.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.04%)</title><rect x="19.4238%" y="661" width="0.0419%" height="15" fill="rgb(235,114,2)" fg:x="1854" fg:w="4"/><text x="19.6738%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.04%)</title><rect x="19.4238%" y="645" width="0.0419%" height="15" fill="rgb(242,59,12)" fg:x="1854" fg:w="4"/><text x="19.6738%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.04%)</title><rect x="19.4238%" y="629" width="0.0419%" height="15" fill="rgb(252,134,9)" fg:x="1854" fg:w="4"/><text x="19.6738%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.04%)</title><rect x="19.4238%" y="613" width="0.0419%" height="15" fill="rgb(236,4,44)" fg:x="1854" fg:w="4"/><text x="19.6738%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.04%)</title><rect x="19.4238%" y="597" width="0.0419%" height="15" fill="rgb(254,172,41)" fg:x="1854" fg:w="4"/><text x="19.6738%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="19.4238%" y="581" width="0.0419%" height="15" fill="rgb(244,63,20)" fg:x="1854" fg:w="4"/><text x="19.6738%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (46 samples, 0.48%)</title><rect x="19.4028%" y="677" width="0.4819%" height="15" fill="rgb(250,73,31)" fg:x="1852" fg:w="46"/><text x="19.6528%" y="687.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (40 samples, 0.42%)</title><rect x="19.4657%" y="661" width="0.4191%" height="15" fill="rgb(241,38,36)" fg:x="1858" fg:w="40"/><text x="19.7157%" y="671.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (38 samples, 0.40%)</title><rect x="19.4866%" y="645" width="0.3981%" height="15" fill="rgb(245,211,2)" fg:x="1860" fg:w="38"/><text x="19.7366%" y="655.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (38 samples, 0.40%)</title><rect x="19.4866%" y="629" width="0.3981%" height="15" fill="rgb(206,120,28)" fg:x="1860" fg:w="38"/><text x="19.7366%" y="639.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="19.8743%" y="613" width="0.0105%" height="15" fill="rgb(211,59,34)" fg:x="1897" fg:w="1"/><text x="20.1243%" y="623.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1 samples, 0.01%)</title><rect x="19.8743%" y="597" width="0.0105%" height="15" fill="rgb(233,168,5)" fg:x="1897" fg:w="1"/><text x="20.1243%" y="607.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.01%)</title><rect x="19.8743%" y="581" width="0.0105%" height="15" fill="rgb(234,33,13)" fg:x="1897" fg:w="1"/><text x="20.1243%" y="591.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (52 samples, 0.54%)</title><rect x="19.3714%" y="693" width="0.5448%" height="15" fill="rgb(231,150,26)" fg:x="1849" fg:w="52"/><text x="19.6214%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.03%)</title><rect x="19.8848%" y="677" width="0.0314%" height="15" fill="rgb(217,191,4)" fg:x="1898" fg:w="3"/><text x="20.1348%" y="687.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (236 samples, 2.47%)</title><rect x="17.4542%" y="789" width="2.4725%" height="15" fill="rgb(246,198,38)" fg:x="1666" fg:w="236"/><text x="17.7042%" y="799.50">&lt;F..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (236 samples, 2.47%)</title><rect x="17.4542%" y="773" width="2.4725%" height="15" fill="rgb(245,64,37)" fg:x="1666" fg:w="236"/><text x="17.7042%" y="783.50">co..</text></g><g><title>core::ops::function::Fn::call (236 samples, 2.47%)</title><rect x="17.4542%" y="757" width="2.4725%" height="15" fill="rgb(250,30,36)" fg:x="1666" fg:w="236"/><text x="17.7042%" y="767.50">co..</text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (236 samples, 2.47%)</title><rect x="17.4542%" y="741" width="2.4725%" height="15" fill="rgb(217,86,53)" fg:x="1666" fg:w="236"/><text x="17.7042%" y="751.50">be..</text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (63 samples, 0.66%)</title><rect x="19.2666%" y="725" width="0.6600%" height="15" fill="rgb(228,157,16)" fg:x="1839" fg:w="63"/><text x="19.5166%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (55 samples, 0.58%)</title><rect x="19.3504%" y="709" width="0.5762%" height="15" fill="rgb(217,59,31)" fg:x="1847" fg:w="55"/><text x="19.6004%" y="719.50"></text></g><g><title>std::collections::hash::map::map_entry (1 samples, 0.01%)</title><rect x="19.9162%" y="693" width="0.0105%" height="15" fill="rgb(237,138,41)" fg:x="1901" fg:w="1"/><text x="20.1662%" y="703.50"></text></g><g><title>bevy_ui::flex::FlexSurface::compute_window_layouts (1 samples, 0.01%)</title><rect x="19.9267%" y="725" width="0.0105%" height="15" fill="rgb(227,91,49)" fg:x="1902" fg:w="1"/><text x="20.1767%" y="735.50"></text></g><g><title>stretch::node::Stretch::compute_layout (1 samples, 0.01%)</title><rect x="19.9267%" y="709" width="0.0105%" height="15" fill="rgb(247,21,44)" fg:x="1902" fg:w="1"/><text x="20.1767%" y="719.50"></text></g><g><title>stretch::forest::Forest::compute_layout (1 samples, 0.01%)</title><rect x="19.9267%" y="693" width="0.0105%" height="15" fill="rgb(219,210,51)" fg:x="1902" fg:w="1"/><text x="20.1767%" y="703.50"></text></g><g><title>stretch::forest::Forest::compute_layout (1 samples, 0.01%)</title><rect x="19.9267%" y="677" width="0.0105%" height="15" fill="rgb(209,140,6)" fg:x="1902" fg:w="1"/><text x="20.1767%" y="687.50"></text></g><g><title>stretch::algo::&lt;impl stretch::forest::Forest&gt;::compute_internal (1 samples, 0.01%)</title><rect x="19.9267%" y="661" width="0.0105%" height="15" fill="rgb(221,188,24)" fg:x="1902" fg:w="1"/><text x="20.1767%" y="671.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7,F8),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="19.9267%" y="789" width="0.0210%" height="15" fill="rgb(232,154,20)" fg:x="1902" fg:w="2"/><text x="20.1767%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="19.9267%" y="773" width="0.0210%" height="15" fill="rgb(244,137,50)" fg:x="1902" fg:w="2"/><text x="20.1767%" y="783.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="19.9267%" y="757" width="0.0210%" height="15" fill="rgb(225,185,43)" fg:x="1902" fg:w="2"/><text x="20.1767%" y="767.50"></text></g><g><title>bevy_ui::flex::flex_node_system (2 samples, 0.02%)</title><rect x="19.9267%" y="741" width="0.0210%" height="15" fill="rgb(213,205,38)" fg:x="1902" fg:w="2"/><text x="20.1767%" y="751.50"></text></g><g><title>bevy_ui::flex::FlexSurface::update_window (1 samples, 0.01%)</title><rect x="19.9371%" y="725" width="0.0105%" height="15" fill="rgb(236,73,12)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="735.50"></text></g><g><title>stretch::node::Stretch::set_style (1 samples, 0.01%)</title><rect x="19.9371%" y="709" width="0.0105%" height="15" fill="rgb(235,219,13)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="719.50"></text></g><g><title>stretch::node::Stretch::find_node (1 samples, 0.01%)</title><rect x="19.9371%" y="693" width="0.0105%" height="15" fill="rgb(218,59,36)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="19.9371%" y="677" width="0.0105%" height="15" fill="rgb(205,110,39)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="19.9371%" y="661" width="0.0105%" height="15" fill="rgb(218,206,42)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="19.9371%" y="645" width="0.0105%" height="15" fill="rgb(248,125,24)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="19.9371%" y="629" width="0.0105%" height="15" fill="rgb(242,28,27)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="639.50"></text></g><g><title>&lt;stretch::node::Node as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="19.9371%" y="613" width="0.0105%" height="15" fill="rgb(216,228,15)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="623.50"></text></g><g><title>&lt;stretch::id::Id as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="19.9371%" y="597" width="0.0105%" height="15" fill="rgb(235,116,46)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="607.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="19.9371%" y="581" width="0.0105%" height="15" fill="rgb(224,18,32)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="591.50"></text></g><g><title>core::hash::Hasher::write_u32 (1 samples, 0.01%)</title><rect x="19.9371%" y="565" width="0.0105%" height="15" fill="rgb(252,5,12)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="575.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="19.9371%" y="549" width="0.0105%" height="15" fill="rgb(251,36,5)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="559.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="19.9371%" y="533" width="0.0105%" height="15" fill="rgb(217,53,14)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="543.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="19.9371%" y="517" width="0.0105%" height="15" fill="rgb(215,86,45)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="527.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="19.9371%" y="501" width="0.0105%" height="15" fill="rgb(242,169,11)" fg:x="1903" fg:w="1"/><text x="20.1871%" y="511.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1,186 samples, 12.43%)</title><rect x="7.5432%" y="805" width="12.4254%" height="15" fill="rgb(211,213,45)" fg:x="720" fg:w="1186"/><text x="7.7932%" y="815.50">&lt;bevy_ecs::system::..</text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.02%)</title><rect x="19.9476%" y="789" width="0.0210%" height="15" fill="rgb(205,88,11)" fg:x="1904" fg:w="2"/><text x="20.1976%" y="799.50"></text></g><g><title>core::mem::drop (1 samples, 0.01%)</title><rect x="19.9895%" y="757" width="0.0105%" height="15" fill="rgb(252,69,26)" fg:x="1908" fg:w="1"/><text x="20.2395%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::ListGuard&gt; (1 samples, 0.01%)</title><rect x="19.9895%" y="741" width="0.0105%" height="15" fill="rgb(246,123,37)" fg:x="1908" fg:w="1"/><text x="20.2395%" y="751.50"></text></g><g><title>&lt;event_listener::ListGuard as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="19.9895%" y="725" width="0.0105%" height="15" fill="rgb(212,205,5)" fg:x="1908" fg:w="1"/><text x="20.2395%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (1 samples, 0.01%)</title><rect x="19.9895%" y="709" width="0.0105%" height="15" fill="rgb(253,148,0)" fg:x="1908" fg:w="1"/><text x="20.2395%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.01%)</title><rect x="19.9895%" y="693" width="0.0105%" height="15" fill="rgb(239,22,4)" fg:x="1908" fg:w="1"/><text x="20.2395%" y="703.50"></text></g><g><title>core::task::wake::Context::waker (1 samples, 0.01%)</title><rect x="20.0000%" y="757" width="0.0105%" height="15" fill="rgb(226,26,53)" fg:x="1909" fg:w="1"/><text x="20.2500%" y="767.50"></text></g><g><title>event_listener::Inner::lock (2 samples, 0.02%)</title><rect x="20.0105%" y="757" width="0.0210%" height="15" fill="rgb(225,229,45)" fg:x="1910" fg:w="2"/><text x="20.2605%" y="767.50"></text></g><g><title>event_listener::Spinlock&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="20.0105%" y="741" width="0.0210%" height="15" fill="rgb(220,60,37)" fg:x="1910" fg:w="2"/><text x="20.2605%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (2 samples, 0.02%)</title><rect x="20.0105%" y="725" width="0.0210%" height="15" fill="rgb(217,180,35)" fg:x="1910" fg:w="2"/><text x="20.2605%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.02%)</title><rect x="20.0105%" y="709" width="0.0210%" height="15" fill="rgb(229,7,53)" fg:x="1910" fg:w="2"/><text x="20.2605%" y="719.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (8 samples, 0.08%)</title><rect x="19.9686%" y="773" width="0.0838%" height="15" fill="rgb(254,137,3)" fg:x="1906" fg:w="8"/><text x="20.2186%" y="783.50"></text></g><g><title>event_listener::List::remove (2 samples, 0.02%)</title><rect x="20.0314%" y="757" width="0.0210%" height="15" fill="rgb(215,140,41)" fg:x="1912" fg:w="2"/><text x="20.2814%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (3 samples, 0.03%)</title><rect x="20.0524%" y="725" width="0.0314%" height="15" fill="rgb(250,80,15)" fg:x="1914" fg:w="3"/><text x="20.3024%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.03%)</title><rect x="20.0524%" y="709" width="0.0314%" height="15" fill="rgb(252,191,6)" fg:x="1914" fg:w="3"/><text x="20.3024%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.03%)</title><rect x="20.0524%" y="693" width="0.0314%" height="15" fill="rgb(246,217,18)" fg:x="1914" fg:w="3"/><text x="20.3024%" y="703.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (4 samples, 0.04%)</title><rect x="20.0524%" y="757" width="0.0419%" height="15" fill="rgb(223,93,7)" fg:x="1914" fg:w="4"/><text x="20.3024%" y="767.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (4 samples, 0.04%)</title><rect x="20.0524%" y="741" width="0.0419%" height="15" fill="rgb(225,55,52)" fg:x="1914" fg:w="4"/><text x="20.3024%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (1 samples, 0.01%)</title><rect x="20.0838%" y="725" width="0.0105%" height="15" fill="rgb(240,31,24)" fg:x="1917" fg:w="1"/><text x="20.3338%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_and (1 samples, 0.01%)</title><rect x="20.0838%" y="709" width="0.0105%" height="15" fill="rgb(205,56,52)" fg:x="1917" fg:w="1"/><text x="20.3338%" y="719.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (8 samples, 0.08%)</title><rect x="20.0524%" y="773" width="0.0838%" height="15" fill="rgb(246,146,12)" fg:x="1914" fg:w="8"/><text x="20.3024%" y="783.50"></text></g><g><title>event_listener::Event::notify (4 samples, 0.04%)</title><rect x="20.0943%" y="757" width="0.0419%" height="15" fill="rgb(239,84,36)" fg:x="1918" fg:w="4"/><text x="20.3443%" y="767.50"></text></g><g><title>event_listener::full_fence (4 samples, 0.04%)</title><rect x="20.0943%" y="741" width="0.0419%" height="15" fill="rgb(207,41,40)" fg:x="1918" fg:w="4"/><text x="20.3443%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (4 samples, 0.04%)</title><rect x="20.0943%" y="725" width="0.0419%" height="15" fill="rgb(241,179,25)" fg:x="1918" fg:w="4"/><text x="20.3443%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.04%)</title><rect x="20.0943%" y="709" width="0.0419%" height="15" fill="rgb(210,0,34)" fg:x="1918" fg:w="4"/><text x="20.3443%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="20.0943%" y="693" width="0.0419%" height="15" fill="rgb(225,217,29)" fg:x="1918" fg:w="4"/><text x="20.3443%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (1 samples, 0.01%)</title><rect x="20.1362%" y="773" width="0.0105%" height="15" fill="rgb(216,191,38)" fg:x="1922" fg:w="1"/><text x="20.3862%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (1 samples, 0.01%)</title><rect x="20.1362%" y="757" width="0.0105%" height="15" fill="rgb(232,140,52)" fg:x="1922" fg:w="1"/><text x="20.3862%" y="767.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="20.1362%" y="741" width="0.0105%" height="15" fill="rgb(223,158,51)" fg:x="1922" fg:w="1"/><text x="20.3862%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="20.1362%" y="725" width="0.0105%" height="15" fill="rgb(235,29,51)" fg:x="1922" fg:w="1"/><text x="20.3862%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="20.1362%" y="709" width="0.0105%" height="15" fill="rgb(215,181,18)" fg:x="1922" fg:w="1"/><text x="20.3862%" y="719.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::recv::{{closure}} (18 samples, 0.19%)</title><rect x="19.9686%" y="789" width="0.1886%" height="15" fill="rgb(227,125,34)" fg:x="1906" fg:w="18"/><text x="20.2186%" y="799.50"></text></g><g><title>event_listener::Event::listen (1 samples, 0.01%)</title><rect x="20.1467%" y="773" width="0.0105%" height="15" fill="rgb(230,197,49)" fg:x="1923" fg:w="1"/><text x="20.3967%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="20.1467%" y="757" width="0.0105%" height="15" fill="rgb(239,141,16)" fg:x="1923" fg:w="1"/><text x="20.3967%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="20.1467%" y="741" width="0.0105%" height="15" fill="rgb(225,105,43)" fg:x="1923" fg:w="1"/><text x="20.3967%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="20.1467%" y="725" width="0.0105%" height="15" fill="rgb(214,131,14)" fg:x="1923" fg:w="1"/><text x="20.3967%" y="735.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="20.1886%" y="725" width="0.0210%" height="15" fill="rgb(229,177,11)" fg:x="1927" fg:w="2"/><text x="20.4386%" y="735.50"></text></g><g><title>alloc::alloc::exchange_malloc (2 samples, 0.02%)</title><rect x="20.1886%" y="709" width="0.0210%" height="15" fill="rgb(231,180,14)" fg:x="1927" fg:w="2"/><text x="20.4386%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="20.1886%" y="693" width="0.0210%" height="15" fill="rgb(232,88,2)" fg:x="1927" fg:w="2"/><text x="20.4386%" y="703.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="20.1886%" y="677" width="0.0210%" height="15" fill="rgb(205,220,8)" fg:x="1927" fg:w="2"/><text x="20.4386%" y="687.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="20.1886%" y="661" width="0.0210%" height="15" fill="rgb(225,23,53)" fg:x="1927" fg:w="2"/><text x="20.4386%" y="671.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="20.1886%" y="645" width="0.0210%" height="15" fill="rgb(213,62,29)" fg:x="1927" fg:w="2"/><text x="20.4386%" y="655.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="20.1991%" y="629" width="0.0105%" height="15" fill="rgb(227,75,7)" fg:x="1928" fg:w="1"/><text x="20.4491%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (4 samples, 0.04%)</title><rect x="20.2095%" y="725" width="0.0419%" height="15" fill="rgb(207,105,14)" fg:x="1929" fg:w="4"/><text x="20.4595%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (4 samples, 0.04%)</title><rect x="20.2095%" y="709" width="0.0419%" height="15" fill="rgb(245,62,29)" fg:x="1929" fg:w="4"/><text x="20.4595%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="20.2514%" y="725" width="0.0105%" height="15" fill="rgb(236,202,4)" fg:x="1933" fg:w="1"/><text x="20.5014%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="20.2514%" y="709" width="0.0105%" height="15" fill="rgb(250,67,1)" fg:x="1933" fg:w="1"/><text x="20.5014%" y="719.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (12 samples, 0.13%)</title><rect x="20.1572%" y="757" width="0.1257%" height="15" fill="rgb(253,115,44)" fg:x="1924" fg:w="12"/><text x="20.4072%" y="767.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (9 samples, 0.09%)</title><rect x="20.1886%" y="741" width="0.0943%" height="15" fill="rgb(251,139,18)" fg:x="1927" fg:w="9"/><text x="20.4386%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="20.2619%" y="725" width="0.0210%" height="15" fill="rgb(218,22,32)" fg:x="1934" fg:w="2"/><text x="20.5119%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="20.2619%" y="709" width="0.0210%" height="15" fill="rgb(243,53,5)" fg:x="1934" fg:w="2"/><text x="20.5119%" y="719.50"></text></g><g><title>event_listener::Event::try_inner (1 samples, 0.01%)</title><rect x="20.2829%" y="741" width="0.0105%" height="15" fill="rgb(227,56,16)" fg:x="1936" fg:w="1"/><text x="20.5329%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (1 samples, 0.01%)</title><rect x="20.2829%" y="725" width="0.0105%" height="15" fill="rgb(245,53,0)" fg:x="1936" fg:w="1"/><text x="20.5329%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="20.2829%" y="709" width="0.0105%" height="15" fill="rgb(216,170,35)" fg:x="1936" fg:w="1"/><text x="20.5329%" y="719.50"></text></g><g><title>event_listener::Inner::lock (3 samples, 0.03%)</title><rect x="20.2933%" y="741" width="0.0314%" height="15" fill="rgb(211,200,8)" fg:x="1937" fg:w="3"/><text x="20.5433%" y="751.50"></text></g><g><title>event_listener::Spinlock&lt;T&gt;::lock (3 samples, 0.03%)</title><rect x="20.2933%" y="725" width="0.0314%" height="15" fill="rgb(228,204,44)" fg:x="1937" fg:w="3"/><text x="20.5433%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (3 samples, 0.03%)</title><rect x="20.2933%" y="709" width="0.0314%" height="15" fill="rgb(214,121,17)" fg:x="1937" fg:w="3"/><text x="20.5433%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_swap (3 samples, 0.03%)</title><rect x="20.2933%" y="693" width="0.0314%" height="15" fill="rgb(233,64,38)" fg:x="1937" fg:w="3"/><text x="20.5433%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_and_swap (1 samples, 0.01%)</title><rect x="20.3248%" y="677" width="0.0105%" height="15" fill="rgb(253,54,19)" fg:x="1940" fg:w="1"/><text x="20.5748%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.01%)</title><rect x="20.3248%" y="661" width="0.0105%" height="15" fill="rgb(253,94,18)" fg:x="1940" fg:w="1"/><text x="20.5748%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="20.3248%" y="645" width="0.0105%" height="15" fill="rgb(227,57,52)" fg:x="1940" fg:w="1"/><text x="20.5748%" y="655.50"></text></g><g><title>async_executor::State::notify (2 samples, 0.02%)</title><rect x="20.3248%" y="693" width="0.0210%" height="15" fill="rgb(230,228,50)" fg:x="1940" fg:w="2"/><text x="20.5748%" y="703.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="20.3353%" y="677" width="0.0105%" height="15" fill="rgb(217,205,27)" fg:x="1941" fg:w="1"/><text x="20.5853%" y="687.50"></text></g><g><title>std::sync::mutex::MutexGuard&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="20.3353%" y="661" width="0.0105%" height="15" fill="rgb(252,71,50)" fg:x="1941" fg:w="1"/><text x="20.5853%" y="671.50"></text></g><g><title>std::sync::poison::Flag::borrow (1 samples, 0.01%)</title><rect x="20.3353%" y="645" width="0.0105%" height="15" fill="rgb(209,86,4)" fg:x="1941" fg:w="1"/><text x="20.5853%" y="655.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="20.3353%" y="629" width="0.0105%" height="15" fill="rgb(229,94,0)" fg:x="1941" fg:w="1"/><text x="20.5853%" y="639.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="20.3353%" y="613" width="0.0105%" height="15" fill="rgb(252,223,21)" fg:x="1941" fg:w="1"/><text x="20.5853%" y="623.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="20.3353%" y="597" width="0.0105%" height="15" fill="rgb(230,210,4)" fg:x="1941" fg:w="1"/><text x="20.5853%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="20.3353%" y="581" width="0.0105%" height="15" fill="rgb(240,149,38)" fg:x="1941" fg:w="1"/><text x="20.5853%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="20.3353%" y="565" width="0.0105%" height="15" fill="rgb(254,105,20)" fg:x="1941" fg:w="1"/><text x="20.5853%" y="575.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="20.3457%" y="677" width="0.0105%" height="15" fill="rgb(253,87,46)" fg:x="1942" fg:w="1"/><text x="20.5957%" y="687.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="20.3457%" y="661" width="0.0105%" height="15" fill="rgb(253,116,33)" fg:x="1942" fg:w="1"/><text x="20.5957%" y="671.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="20.3457%" y="645" width="0.0105%" height="15" fill="rgb(229,198,5)" fg:x="1942" fg:w="1"/><text x="20.5957%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="20.3457%" y="629" width="0.0105%" height="15" fill="rgb(242,38,37)" fg:x="1942" fg:w="1"/><text x="20.5957%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="20.3457%" y="613" width="0.0105%" height="15" fill="rgb(242,69,53)" fg:x="1942" fg:w="1"/><text x="20.5957%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="20.3562%" y="677" width="0.0210%" height="15" fill="rgb(249,80,16)" fg:x="1943" fg:w="2"/><text x="20.6062%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="20.3562%" y="661" width="0.0210%" height="15" fill="rgb(206,128,11)" fg:x="1943" fg:w="2"/><text x="20.6062%" y="671.50"></text></g><g><title>event_listener::List::notify (6 samples, 0.06%)</title><rect x="20.3248%" y="741" width="0.0629%" height="15" fill="rgb(212,35,20)" fg:x="1940" fg:w="6"/><text x="20.5748%" y="751.50"></text></g><g><title>core::task::wake::Waker::wake (6 samples, 0.06%)</title><rect x="20.3248%" y="725" width="0.0629%" height="15" fill="rgb(236,79,13)" fg:x="1940" fg:w="6"/><text x="20.5748%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (6 samples, 0.06%)</title><rect x="20.3248%" y="709" width="0.0629%" height="15" fill="rgb(233,123,3)" fg:x="1940" fg:w="6"/><text x="20.5748%" y="719.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (4 samples, 0.04%)</title><rect x="20.3457%" y="693" width="0.0419%" height="15" fill="rgb(214,93,52)" fg:x="1942" fg:w="4"/><text x="20.5957%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="20.3772%" y="677" width="0.0105%" height="15" fill="rgb(251,37,40)" fg:x="1945" fg:w="1"/><text x="20.6272%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="20.3772%" y="661" width="0.0105%" height="15" fill="rgb(227,80,54)" fg:x="1945" fg:w="1"/><text x="20.6272%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.44%)</title><rect x="19.9686%" y="805" width="0.4400%" height="15" fill="rgb(254,48,11)" fg:x="1906" fg:w="42"/><text x="20.2186%" y="815.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::send::{{closure}} (24 samples, 0.25%)</title><rect x="20.1572%" y="789" width="0.2514%" height="15" fill="rgb(235,193,26)" fg:x="1924" fg:w="24"/><text x="20.4072%" y="799.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (24 samples, 0.25%)</title><rect x="20.1572%" y="773" width="0.2514%" height="15" fill="rgb(229,99,21)" fg:x="1924" fg:w="24"/><text x="20.4072%" y="783.50"></text></g><g><title>event_listener::Event::notify (12 samples, 0.13%)</title><rect x="20.2829%" y="757" width="0.1257%" height="15" fill="rgb(211,140,41)" fg:x="1936" fg:w="12"/><text x="20.5329%" y="767.50"></text></g><g><title>event_listener::full_fence (2 samples, 0.02%)</title><rect x="20.3876%" y="741" width="0.0210%" height="15" fill="rgb(240,227,30)" fg:x="1946" fg:w="2"/><text x="20.6376%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2 samples, 0.02%)</title><rect x="20.3876%" y="725" width="0.0210%" height="15" fill="rgb(215,224,45)" fg:x="1946" fg:w="2"/><text x="20.6376%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="20.3876%" y="709" width="0.0210%" height="15" fill="rgb(206,123,31)" fg:x="1946" fg:w="2"/><text x="20.6376%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="20.3876%" y="693" width="0.0210%" height="15" fill="rgb(210,138,16)" fg:x="1946" fg:w="2"/><text x="20.6376%" y="703.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="20.4086%" y="789" width="0.0210%" height="15" fill="rgb(228,57,28)" fg:x="1948" fg:w="2"/><text x="20.6586%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="20.4086%" y="773" width="0.0210%" height="15" fill="rgb(242,170,10)" fg:x="1948" fg:w="2"/><text x="20.6586%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="20.4086%" y="757" width="0.0210%" height="15" fill="rgb(228,214,39)" fg:x="1948" fg:w="2"/><text x="20.6586%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (3 samples, 0.03%)</title><rect x="20.4086%" y="805" width="0.0314%" height="15" fill="rgb(218,179,33)" fg:x="1948" fg:w="3"/><text x="20.6586%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="20.4295%" y="789" width="0.0105%" height="15" fill="rgb(235,193,39)" fg:x="1950" fg:w="1"/><text x="20.6795%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="20.4295%" y="773" width="0.0105%" height="15" fill="rgb(219,221,36)" fg:x="1950" fg:w="1"/><text x="20.6795%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="20.4295%" y="757" width="0.0105%" height="15" fill="rgb(248,218,19)" fg:x="1950" fg:w="1"/><text x="20.6795%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="20.4295%" y="741" width="0.0105%" height="15" fill="rgb(205,50,9)" fg:x="1950" fg:w="1"/><text x="20.6795%" y="751.50"></text></g><g><title>&lt;async_channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="20.4400%" y="789" width="0.0105%" height="15" fill="rgb(238,81,28)" fg:x="1951" fg:w="1"/><text x="20.6900%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="20.4400%" y="773" width="0.0105%" height="15" fill="rgb(235,110,19)" fg:x="1951" fg:w="1"/><text x="20.6900%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="20.4400%" y="757" width="0.0105%" height="15" fill="rgb(214,7,14)" fg:x="1951" fg:w="1"/><text x="20.6900%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,266 samples, 13.26%)</title><rect x="7.2184%" y="837" width="13.2635%" height="15" fill="rgb(211,77,3)" fg:x="689" fg:w="1266"/><text x="7.4684%" y="847.50">&lt;core::future::from_..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1,235 samples, 12.94%)</title><rect x="7.5432%" y="821" width="12.9387%" height="15" fill="rgb(229,5,9)" fg:x="720" fg:w="1235"/><text x="7.7932%" y="831.50">bevy_ecs::schedule:..</text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Sender&lt;usize&gt;&gt; (4 samples, 0.04%)</title><rect x="20.4400%" y="805" width="0.0419%" height="15" fill="rgb(225,90,11)" fg:x="1951" fg:w="4"/><text x="20.6900%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;usize&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="20.4505%" y="789" width="0.0314%" height="15" fill="rgb(242,56,8)" fg:x="1952" fg:w="3"/><text x="20.7005%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="20.4505%" y="773" width="0.0314%" height="15" fill="rgb(249,212,39)" fg:x="1952" fg:w="3"/><text x="20.7005%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.03%)</title><rect x="20.4505%" y="757" width="0.0314%" height="15" fill="rgb(236,90,9)" fg:x="1952" fg:w="3"/><text x="20.7005%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.03%)</title><rect x="20.4505%" y="741" width="0.0314%" height="15" fill="rgb(206,88,35)" fg:x="1952" fg:w="3"/><text x="20.7005%" y="751.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="20.4819%" y="837" width="0.0210%" height="15" fill="rgb(205,126,30)" fg:x="1955" fg:w="2"/><text x="20.7319%" y="847.50"></text></g><g><title>core::mem::drop (3 samples, 0.03%)</title><rect x="20.5029%" y="789" width="0.0314%" height="15" fill="rgb(230,176,12)" fg:x="1957" fg:w="3"/><text x="20.7529%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (3 samples, 0.03%)</title><rect x="20.5029%" y="773" width="0.0314%" height="15" fill="rgb(243,19,9)" fg:x="1957" fg:w="3"/><text x="20.7529%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (3 samples, 0.03%)</title><rect x="20.5029%" y="757" width="0.0314%" height="15" fill="rgb(245,171,17)" fg:x="1957" fg:w="3"/><text x="20.7529%" y="767.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="20.5029%" y="741" width="0.0314%" height="15" fill="rgb(227,52,21)" fg:x="1957" fg:w="3"/><text x="20.7529%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (3 samples, 0.03%)</title><rect x="20.5029%" y="725" width="0.0314%" height="15" fill="rgb(238,69,14)" fg:x="1957" fg:w="3"/><text x="20.7529%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.03%)</title><rect x="20.5029%" y="709" width="0.0314%" height="15" fill="rgb(241,156,39)" fg:x="1957" fg:w="3"/><text x="20.7529%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.03%)</title><rect x="20.5029%" y="693" width="0.0314%" height="15" fill="rgb(212,227,28)" fg:x="1957" fg:w="3"/><text x="20.7529%" y="703.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="20.5029%" y="821" width="0.0524%" height="15" fill="rgb(209,118,27)" fg:x="1957" fg:w="5"/><text x="20.7529%" y="831.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (5 samples, 0.05%)</title><rect x="20.5029%" y="805" width="0.0524%" height="15" fill="rgb(226,102,5)" fg:x="1957" fg:w="5"/><text x="20.7529%" y="815.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="20.5343%" y="789" width="0.0210%" height="15" fill="rgb(223,34,3)" fg:x="1960" fg:w="2"/><text x="20.7843%" y="799.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (2 samples, 0.02%)</title><rect x="20.5343%" y="773" width="0.0210%" height="15" fill="rgb(221,81,38)" fg:x="1960" fg:w="2"/><text x="20.7843%" y="783.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (2 samples, 0.02%)</title><rect x="20.5343%" y="757" width="0.0210%" height="15" fill="rgb(236,219,28)" fg:x="1960" fg:w="2"/><text x="20.7843%" y="767.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="20.5343%" y="741" width="0.0210%" height="15" fill="rgb(213,200,14)" fg:x="1960" fg:w="2"/><text x="20.7843%" y="751.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="20.5553%" y="821" width="0.0210%" height="15" fill="rgb(240,33,19)" fg:x="1962" fg:w="2"/><text x="20.8053%" y="831.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,277 samples, 13.38%)</title><rect x="7.2080%" y="869" width="13.3787%" height="15" fill="rgb(233,113,27)" fg:x="688" fg:w="1277"/><text x="7.4580%" y="879.50">&lt;core::future::from_..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,277 samples, 13.38%)</title><rect x="7.2080%" y="853" width="13.3787%" height="15" fill="rgb(220,221,18)" fg:x="688" fg:w="1277"/><text x="7.4580%" y="863.50">async_executor::Exec..</text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (8 samples, 0.08%)</title><rect x="20.5029%" y="837" width="0.0838%" height="15" fill="rgb(238,92,8)" fg:x="1957" fg:w="8"/><text x="20.7529%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="20.5762%" y="821" width="0.0105%" height="15" fill="rgb(222,164,16)" fg:x="1964" fg:w="1"/><text x="20.8262%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (1 samples, 0.01%)</title><rect x="20.5762%" y="805" width="0.0105%" height="15" fill="rgb(241,119,3)" fg:x="1964" fg:w="1"/><text x="20.8262%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="20.5762%" y="789" width="0.0105%" height="15" fill="rgb(241,44,8)" fg:x="1964" fg:w="1"/><text x="20.8262%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="20.5762%" y="773" width="0.0105%" height="15" fill="rgb(230,36,40)" fg:x="1964" fg:w="1"/><text x="20.8262%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="20.5762%" y="757" width="0.0105%" height="15" fill="rgb(243,16,36)" fg:x="1964" fg:w="1"/><text x="20.8262%" y="767.50"></text></g><g><title>async_task::header::Header::take (1 samples, 0.01%)</title><rect x="20.5867%" y="869" width="0.0105%" height="15" fill="rgb(231,4,26)" fg:x="1965" fg:w="1"/><text x="20.8367%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (1 samples, 0.01%)</title><rect x="20.5867%" y="853" width="0.0105%" height="15" fill="rgb(240,9,31)" fg:x="1965" fg:w="1"/><text x="20.8367%" y="863.50"></text></g><g><title>core::mem::take (1 samples, 0.01%)</title><rect x="20.5867%" y="837" width="0.0105%" height="15" fill="rgb(207,173,15)" fg:x="1965" fg:w="1"/><text x="20.8367%" y="847.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="20.5867%" y="821" width="0.0105%" height="15" fill="rgb(224,192,53)" fg:x="1965" fg:w="1"/><text x="20.8367%" y="831.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="20.5867%" y="805" width="0.0105%" height="15" fill="rgb(223,67,28)" fg:x="1965" fg:w="1"/><text x="20.8367%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future (1 samples, 0.01%)</title><rect x="20.5972%" y="869" width="0.0105%" height="15" fill="rgb(211,20,47)" fg:x="1966" fg:w="1"/><text x="20.8472%" y="879.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.01%)</title><rect x="20.5972%" y="853" width="0.0105%" height="15" fill="rgb(240,228,2)" fg:x="1966" fg:w="1"/><text x="20.8472%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_future::{{closure}} (1 samples, 0.01%)</title><rect x="20.5972%" y="837" width="0.0105%" height="15" fill="rgb(248,151,12)" fg:x="1966" fg:w="1"/><text x="20.8472%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="20.5972%" y="821" width="0.0105%" height="15" fill="rgb(244,8,39)" fg:x="1966" fg:w="1"/><text x="20.8472%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="20.5972%" y="805" width="0.0105%" height="15" fill="rgb(222,26,8)" fg:x="1966" fg:w="1"/><text x="20.8472%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="20.5972%" y="789" width="0.0105%" height="15" fill="rgb(213,106,44)" fg:x="1966" fg:w="1"/><text x="20.8472%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (1 samples, 0.01%)</title><rect x="20.6076%" y="869" width="0.0105%" height="15" fill="rgb(214,129,20)" fg:x="1967" fg:w="1"/><text x="20.8576%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="20.6076%" y="853" width="0.0105%" height="15" fill="rgb(212,32,13)" fg:x="1967" fg:w="1"/><text x="20.8576%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="20.6076%" y="837" width="0.0105%" height="15" fill="rgb(208,168,33)" fg:x="1967" fg:w="1"/><text x="20.8576%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="20.6181%" y="805" width="0.0105%" height="15" fill="rgb(231,207,8)" fg:x="1968" fg:w="1"/><text x="20.8681%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="20.6181%" y="789" width="0.0105%" height="15" fill="rgb(235,219,23)" fg:x="1968" fg:w="1"/><text x="20.8681%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="20.6181%" y="773" width="0.0105%" height="15" fill="rgb(226,216,26)" fg:x="1968" fg:w="1"/><text x="20.8681%" y="783.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="20.6391%" y="741" width="0.0105%" height="15" fill="rgb(239,137,16)" fg:x="1970" fg:w="1"/><text x="20.8891%" y="751.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="20.6391%" y="725" width="0.0105%" height="15" fill="rgb(207,12,36)" fg:x="1970" fg:w="1"/><text x="20.8891%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="20.6391%" y="709" width="0.0105%" height="15" fill="rgb(210,214,24)" fg:x="1970" fg:w="1"/><text x="20.8891%" y="719.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="20.6391%" y="693" width="0.0105%" height="15" fill="rgb(206,56,30)" fg:x="1970" fg:w="1"/><text x="20.8891%" y="703.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="20.6391%" y="677" width="0.0105%" height="15" fill="rgb(228,143,26)" fg:x="1970" fg:w="1"/><text x="20.8891%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="20.6391%" y="661" width="0.0105%" height="15" fill="rgb(216,218,46)" fg:x="1970" fg:w="1"/><text x="20.8891%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="20.6391%" y="645" width="0.0105%" height="15" fill="rgb(206,6,19)" fg:x="1970" fg:w="1"/><text x="20.8891%" y="655.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="20.6391%" y="629" width="0.0105%" height="15" fill="rgb(239,177,51)" fg:x="1970" fg:w="1"/><text x="20.8891%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="20.6496%" y="741" width="0.0105%" height="15" fill="rgb(216,55,25)" fg:x="1971" fg:w="1"/><text x="20.8996%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="20.6496%" y="725" width="0.0105%" height="15" fill="rgb(231,163,29)" fg:x="1971" fg:w="1"/><text x="20.8996%" y="735.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (5 samples, 0.05%)</title><rect x="20.6286%" y="789" width="0.0524%" height="15" fill="rgb(232,149,50)" fg:x="1969" fg:w="5"/><text x="20.8786%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (5 samples, 0.05%)</title><rect x="20.6286%" y="773" width="0.0524%" height="15" fill="rgb(223,142,48)" fg:x="1969" fg:w="5"/><text x="20.8786%" y="783.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (4 samples, 0.04%)</title><rect x="20.6391%" y="757" width="0.0419%" height="15" fill="rgb(245,83,23)" fg:x="1970" fg:w="4"/><text x="20.8891%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="20.6600%" y="741" width="0.0210%" height="15" fill="rgb(224,63,2)" fg:x="1972" fg:w="2"/><text x="20.9100%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="20.6600%" y="725" width="0.0210%" height="15" fill="rgb(218,65,53)" fg:x="1972" fg:w="2"/><text x="20.9100%" y="735.50"></text></g><g><title>async_task::utils::abort_on_panic (7 samples, 0.07%)</title><rect x="20.6181%" y="869" width="0.0733%" height="15" fill="rgb(221,84,29)" fg:x="1968" fg:w="7"/><text x="20.8681%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (7 samples, 0.07%)</title><rect x="20.6181%" y="853" width="0.0733%" height="15" fill="rgb(234,0,32)" fg:x="1968" fg:w="7"/><text x="20.8681%" y="863.50"></text></g><g><title>core::task::wake::Waker::wake (7 samples, 0.07%)</title><rect x="20.6181%" y="837" width="0.0733%" height="15" fill="rgb(206,20,16)" fg:x="1968" fg:w="7"/><text x="20.8681%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (7 samples, 0.07%)</title><rect x="20.6181%" y="821" width="0.0733%" height="15" fill="rgb(244,172,18)" fg:x="1968" fg:w="7"/><text x="20.8681%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (6 samples, 0.06%)</title><rect x="20.6286%" y="805" width="0.0629%" height="15" fill="rgb(254,133,1)" fg:x="1969" fg:w="6"/><text x="20.8786%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="20.6810%" y="789" width="0.0105%" height="15" fill="rgb(222,206,41)" fg:x="1974" fg:w="1"/><text x="20.9310%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="20.6810%" y="773" width="0.0105%" height="15" fill="rgb(212,3,42)" fg:x="1974" fg:w="1"/><text x="20.9310%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,297 samples, 13.59%)</title><rect x="7.1975%" y="885" width="13.5883%" height="15" fill="rgb(241,11,4)" fg:x="687" fg:w="1297"/><text x="7.4475%" y="895.50">async_task::raw::RawT..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (9 samples, 0.09%)</title><rect x="20.6915%" y="869" width="0.0943%" height="15" fill="rgb(205,19,26)" fg:x="1975" fg:w="9"/><text x="20.9415%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (9 samples, 0.09%)</title><rect x="20.6915%" y="853" width="0.0943%" height="15" fill="rgb(210,179,32)" fg:x="1975" fg:w="9"/><text x="20.9415%" y="863.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (1,422 samples, 14.90%)</title><rect x="5.9508%" y="933" width="14.8979%" height="15" fill="rgb(227,116,49)" fg:x="568" fg:w="1422"/><text x="6.2008%" y="943.50">&lt;futures_lite::future::..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,421 samples, 14.89%)</title><rect x="5.9612%" y="917" width="14.8874%" height="15" fill="rgb(211,146,6)" fg:x="569" fg:w="1421"/><text x="6.2112%" y="927.50">&lt;core::future::from_gen..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (1,412 samples, 14.79%)</title><rect x="6.0555%" y="901" width="14.7931%" height="15" fill="rgb(219,44,39)" fg:x="578" fg:w="1412"/><text x="6.3055%" y="911.50">async_executor::Executo..</text></g><g><title>async_task::runnable::Runnable::run (6 samples, 0.06%)</title><rect x="20.7858%" y="885" width="0.0629%" height="15" fill="rgb(234,128,11)" fg:x="1984" fg:w="6"/><text x="21.0358%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;once_cell::imp::WaiterQueue&gt; (1 samples, 0.01%)</title><rect x="20.8486%" y="853" width="0.0105%" height="15" fill="rgb(220,183,53)" fg:x="1990" fg:w="1"/><text x="21.0986%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,431 samples, 14.99%)</title><rect x="5.9298%" y="965" width="14.9921%" height="15" fill="rgb(213,219,32)" fg:x="566" fg:w="1431"/><text x="6.1798%" y="975.50">&lt;core::future::from_gen..</text></g><g><title>async_executor::Executor::run::{{closure}} (1,430 samples, 14.98%)</title><rect x="5.9403%" y="949" width="14.9817%" height="15" fill="rgb(232,156,16)" fg:x="567" fg:w="1430"/><text x="6.1903%" y="959.50">async_executor::Executo..</text></g><g><title>async_executor::Executor::state (7 samples, 0.07%)</title><rect x="20.8486%" y="933" width="0.0733%" height="15" fill="rgb(246,135,34)" fg:x="1990" fg:w="7"/><text x="21.0986%" y="943.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (7 samples, 0.07%)</title><rect x="20.8486%" y="917" width="0.0733%" height="15" fill="rgb(241,99,0)" fg:x="1990" fg:w="7"/><text x="21.0986%" y="927.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (7 samples, 0.07%)</title><rect x="20.8486%" y="901" width="0.0733%" height="15" fill="rgb(222,103,45)" fg:x="1990" fg:w="7"/><text x="21.0986%" y="911.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize (7 samples, 0.07%)</title><rect x="20.8486%" y="885" width="0.0733%" height="15" fill="rgb(212,57,4)" fg:x="1990" fg:w="7"/><text x="21.0986%" y="895.50"></text></g><g><title>once_cell::imp::initialize_inner (7 samples, 0.07%)</title><rect x="20.8486%" y="869" width="0.0733%" height="15" fill="rgb(215,68,47)" fg:x="1990" fg:w="7"/><text x="21.0986%" y="879.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::initialize::{{closure}} (6 samples, 0.06%)</title><rect x="20.8591%" y="853" width="0.0629%" height="15" fill="rgb(230,84,2)" fg:x="1991" fg:w="6"/><text x="21.1091%" y="863.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init::{{closure}} (6 samples, 0.06%)</title><rect x="20.8591%" y="837" width="0.0629%" height="15" fill="rgb(220,102,14)" fg:x="1991" fg:w="6"/><text x="21.1091%" y="847.50"></text></g><g><title>async_executor::Executor::state::{{closure}} (6 samples, 0.06%)</title><rect x="20.8591%" y="821" width="0.0629%" height="15" fill="rgb(240,10,32)" fg:x="1991" fg:w="6"/><text x="21.1091%" y="831.50"></text></g><g><title>async_executor::State::new (6 samples, 0.06%)</title><rect x="20.8591%" y="805" width="0.0629%" height="15" fill="rgb(215,47,27)" fg:x="1991" fg:w="6"/><text x="21.1091%" y="815.50"></text></g><g><title>vec_arena::Arena&lt;T&gt;::new (6 samples, 0.06%)</title><rect x="20.8591%" y="789" width="0.0629%" height="15" fill="rgb(233,188,43)" fg:x="1991" fg:w="6"/><text x="21.1091%" y="799.50"></text></g><g><title>std::sync::poison::Flag::done (1 samples, 0.01%)</title><rect x="20.9324%" y="901" width="0.0105%" height="15" fill="rgb(253,190,1)" fg:x="1998" fg:w="1"/><text x="21.1824%" y="911.50"></text></g><g><title>std::thread::panicking (1 samples, 0.01%)</title><rect x="20.9324%" y="885" width="0.0105%" height="15" fill="rgb(206,114,52)" fg:x="1998" fg:w="1"/><text x="21.1824%" y="895.50"></text></g><g><title>std::panicking::panicking (1 samples, 0.01%)</title><rect x="20.9324%" y="869" width="0.0105%" height="15" fill="rgb(233,120,37)" fg:x="1998" fg:w="1"/><text x="21.1824%" y="879.50"></text></g><g><title>std::panicking::panic_count::count_is_zero (1 samples, 0.01%)</title><rect x="20.9324%" y="853" width="0.0105%" height="15" fill="rgb(214,52,39)" fg:x="1998" fg:w="1"/><text x="21.1824%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="20.9324%" y="837" width="0.0105%" height="15" fill="rgb(223,80,29)" fg:x="1998" fg:w="1"/><text x="21.1824%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="20.9324%" y="821" width="0.0105%" height="15" fill="rgb(230,101,40)" fg:x="1998" fg:w="1"/><text x="21.1824%" y="831.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="20.9429%" y="869" width="0.0105%" height="15" fill="rgb(219,211,8)" fg:x="1999" fg:w="1"/><text x="21.1929%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;()&gt;&gt; (6 samples, 0.06%)</title><rect x="20.9324%" y="933" width="0.0629%" height="15" fill="rgb(252,126,28)" fg:x="1998" fg:w="6"/><text x="21.1824%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (6 samples, 0.06%)</title><rect x="20.9324%" y="917" width="0.0629%" height="15" fill="rgb(215,56,38)" fg:x="1998" fg:w="6"/><text x="21.1824%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (5 samples, 0.05%)</title><rect x="20.9429%" y="901" width="0.0524%" height="15" fill="rgb(249,55,44)" fg:x="1999" fg:w="5"/><text x="21.1929%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (5 samples, 0.05%)</title><rect x="20.9429%" y="885" width="0.0524%" height="15" fill="rgb(220,221,32)" fg:x="1999" fg:w="5"/><text x="21.1929%" y="895.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (4 samples, 0.04%)</title><rect x="20.9534%" y="869" width="0.0419%" height="15" fill="rgb(212,216,41)" fg:x="2000" fg:w="4"/><text x="21.2034%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.04%)</title><rect x="20.9953%" y="933" width="0.0419%" height="15" fill="rgb(228,213,43)" fg:x="2004" fg:w="4"/><text x="21.2453%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="20.9953%" y="917" width="0.0419%" height="15" fill="rgb(211,31,26)" fg:x="2004" fg:w="4"/><text x="21.2453%" y="927.50"></text></g><g><title>std::sync::poison::Flag::get (3 samples, 0.03%)</title><rect x="21.0372%" y="917" width="0.0314%" height="15" fill="rgb(229,202,19)" fg:x="2008" fg:w="3"/><text x="21.2872%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (3 samples, 0.03%)</title><rect x="21.0372%" y="901" width="0.0314%" height="15" fill="rgb(229,105,46)" fg:x="2008" fg:w="3"/><text x="21.2872%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.03%)</title><rect x="21.0372%" y="885" width="0.0314%" height="15" fill="rgb(235,108,1)" fg:x="2008" fg:w="3"/><text x="21.2872%" y="895.50"></text></g><g><title>__condvar_dec_grefs (8 samples, 0.08%)</title><rect x="21.1001%" y="869" width="0.0838%" height="15" fill="rgb(245,111,35)" fg:x="2014" fg:w="8"/><text x="21.3501%" y="879.50"></text></g><g><title>__futex_abstimed_wait_common64 (84 samples, 0.88%)</title><rect x="21.1839%" y="869" width="0.8800%" height="15" fill="rgb(219,185,31)" fg:x="2022" fg:w="84"/><text x="21.4339%" y="879.50"></text></g><g><title>__pthread_disable_asynccancel (5 samples, 0.05%)</title><rect x="22.0115%" y="853" width="0.0524%" height="15" fill="rgb(214,4,43)" fg:x="2101" fg:w="5"/><text x="22.2615%" y="863.50"></text></g><g><title>__pthread_cleanup_pop (2 samples, 0.02%)</title><rect x="22.0639%" y="869" width="0.0210%" height="15" fill="rgb(235,227,40)" fg:x="2106" fg:w="2"/><text x="22.3139%" y="879.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (1,543 samples, 16.17%)</title><rect x="5.9298%" y="981" width="16.1655%" height="15" fill="rgb(230,88,30)" fg:x="566" fg:w="1543"/><text x="6.1798%" y="991.50">futures_lite::future::blo..</text></g><g><title>parking::Parker::park (112 samples, 1.17%)</title><rect x="20.9219%" y="965" width="1.1734%" height="15" fill="rgb(216,217,1)" fg:x="1997" fg:w="112"/><text x="21.1719%" y="975.50"></text></g><g><title>parking::Inner::park (112 samples, 1.17%)</title><rect x="20.9219%" y="949" width="1.1734%" height="15" fill="rgb(248,139,50)" fg:x="1997" fg:w="112"/><text x="21.1719%" y="959.50"></text></g><g><title>std::sync::condvar::Condvar::wait (101 samples, 1.06%)</title><rect x="21.0372%" y="933" width="1.0581%" height="15" fill="rgb(233,1,21)" fg:x="2008" fg:w="101"/><text x="21.2872%" y="943.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (98 samples, 1.03%)</title><rect x="21.0686%" y="917" width="1.0267%" height="15" fill="rgb(215,183,12)" fg:x="2011" fg:w="98"/><text x="21.3186%" y="927.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (98 samples, 1.03%)</title><rect x="21.0686%" y="901" width="1.0267%" height="15" fill="rgb(229,104,42)" fg:x="2011" fg:w="98"/><text x="21.3186%" y="911.50"></text></g><g><title>__pthread_cond_wait (98 samples, 1.03%)</title><rect x="21.0686%" y="885" width="1.0267%" height="15" fill="rgb(243,34,48)" fg:x="2011" fg:w="98"/><text x="21.3186%" y="895.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="22.0849%" y="869" width="0.0105%" height="15" fill="rgb(239,11,44)" fg:x="2108" fg:w="1"/><text x="22.3349%" y="879.50"></text></g><g><title>std::panic::catch_unwind (1,545 samples, 16.19%)</title><rect x="5.9298%" y="1141" width="16.1865%" height="15" fill="rgb(231,98,35)" fg:x="566" fg:w="1545"/><text x="6.1798%" y="1151.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (1,545 samples, 16.19%)</title><rect x="5.9298%" y="1125" width="16.1865%" height="15" fill="rgb(233,28,25)" fg:x="566" fg:w="1545"/><text x="6.1798%" y="1135.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (1,545 samples, 16.19%)</title><rect x="5.9298%" y="1109" width="16.1865%" height="15" fill="rgb(234,123,11)" fg:x="566" fg:w="1545"/><text x="6.1798%" y="1119.50">std::panicking::try::do_c..</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (1,545 samples, 16.19%)</title><rect x="5.9298%" y="1093" width="16.1865%" height="15" fill="rgb(220,69,3)" fg:x="566" fg:w="1545"/><text x="6.1798%" y="1103.50">&lt;core::panic::unwind_safe..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (1,545 samples, 16.19%)</title><rect x="5.9298%" y="1077" width="16.1865%" height="15" fill="rgb(214,64,36)" fg:x="566" fg:w="1545"/><text x="6.1798%" y="1087.50">std::thread::Builder::spa..</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (1,545 samples, 16.19%)</title><rect x="5.9298%" y="1061" width="16.1865%" height="15" fill="rgb(211,138,32)" fg:x="566" fg:w="1545"/><text x="6.1798%" y="1071.50">std::sys_common::backtrac..</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (1,545 samples, 16.19%)</title><rect x="5.9298%" y="1045" width="16.1865%" height="15" fill="rgb(213,118,47)" fg:x="566" fg:w="1545"/><text x="6.1798%" y="1055.50">bevy_tasks::task_pool::Ta..</text></g><g><title>futures_lite::future::block_on (1,545 samples, 16.19%)</title><rect x="5.9298%" y="1029" width="16.1865%" height="15" fill="rgb(243,124,49)" fg:x="566" fg:w="1545"/><text x="6.1798%" y="1039.50">futures_lite::future::blo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,545 samples, 16.19%)</title><rect x="5.9298%" y="1013" width="16.1865%" height="15" fill="rgb(221,30,28)" fg:x="566" fg:w="1545"/><text x="6.1798%" y="1023.50">std::thread::local::Local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,545 samples, 16.19%)</title><rect x="5.9298%" y="997" width="16.1865%" height="15" fill="rgb(246,37,13)" fg:x="566" fg:w="1545"/><text x="6.1798%" y="1007.50">std::thread::local::Local..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="22.0953%" y="981" width="0.0210%" height="15" fill="rgb(249,66,14)" fg:x="2109" fg:w="2"/><text x="22.3453%" y="991.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.01%)</title><rect x="22.1163%" y="1141" width="0.0105%" height="15" fill="rgb(213,166,5)" fg:x="2111" fg:w="1"/><text x="22.3663%" y="1151.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.01%)</title><rect x="22.1163%" y="1125" width="0.0105%" height="15" fill="rgb(221,66,24)" fg:x="2111" fg:w="1"/><text x="22.3663%" y="1135.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="22.1163%" y="1109" width="0.0105%" height="15" fill="rgb(210,132,17)" fg:x="2111" fg:w="1"/><text x="22.3663%" y="1119.50"></text></g><g><title>tcache_init.part.0 (1 samples, 0.01%)</title><rect x="22.1163%" y="1093" width="0.0105%" height="15" fill="rgb(243,202,5)" fg:x="2111" fg:w="1"/><text x="22.3663%" y="1103.50"></text></g><g><title>arena_get2.part.0 (1 samples, 0.01%)</title><rect x="22.1163%" y="1077" width="0.0105%" height="15" fill="rgb(233,70,48)" fg:x="2111" fg:w="1"/><text x="22.3663%" y="1087.50"></text></g><g><title>__GI___clone (1,547 samples, 16.21%)</title><rect x="5.9298%" y="1253" width="16.2074%" height="15" fill="rgb(238,41,26)" fg:x="566" fg:w="1547"/><text x="6.1798%" y="1263.50">__GI___clone</text></g><g><title>start_thread (1,547 samples, 16.21%)</title><rect x="5.9298%" y="1237" width="16.2074%" height="15" fill="rgb(241,19,31)" fg:x="566" fg:w="1547"/><text x="6.1798%" y="1247.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (1,547 samples, 16.21%)</title><rect x="5.9298%" y="1221" width="16.2074%" height="15" fill="rgb(214,76,10)" fg:x="566" fg:w="1547"/><text x="6.1798%" y="1231.50">std::sys::unix::thread::T..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,547 samples, 16.21%)</title><rect x="5.9298%" y="1205" width="16.2074%" height="15" fill="rgb(254,202,22)" fg:x="566" fg:w="1547"/><text x="6.1798%" y="1215.50">&lt;alloc::boxed::Box&lt;F,A&gt; a..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (1,547 samples, 16.21%)</title><rect x="5.9298%" y="1189" width="16.2074%" height="15" fill="rgb(214,72,24)" fg:x="566" fg:w="1547"/><text x="6.1798%" y="1199.50">&lt;alloc::boxed::Box&lt;F,A&gt; a..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (1,547 samples, 16.21%)</title><rect x="5.9298%" y="1173" width="16.2074%" height="15" fill="rgb(221,92,46)" fg:x="566" fg:w="1547"/><text x="6.1798%" y="1183.50">core::ops::function::FnOn..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (1,547 samples, 16.21%)</title><rect x="5.9298%" y="1157" width="16.2074%" height="15" fill="rgb(246,13,50)" fg:x="566" fg:w="1547"/><text x="6.1798%" y="1167.50">std::thread::Builder::spa..</text></g><g><title>std::sys_common::thread_info::set (1 samples, 0.01%)</title><rect x="22.1268%" y="1141" width="0.0105%" height="15" fill="rgb(240,165,38)" fg:x="2112" fg:w="1"/><text x="22.3768%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="22.1268%" y="1125" width="0.0105%" height="15" fill="rgb(241,24,51)" fg:x="2112" fg:w="1"/><text x="22.3768%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="22.1268%" y="1109" width="0.0105%" height="15" fill="rgb(227,51,44)" fg:x="2112" fg:w="1"/><text x="22.3768%" y="1119.50"></text></g><g><title>std::sys_common::thread_info::THREAD_INFO::__getit (1 samples, 0.01%)</title><rect x="22.1268%" y="1093" width="0.0105%" height="15" fill="rgb(231,121,3)" fg:x="2112" fg:w="1"/><text x="22.3768%" y="1103.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="22.1268%" y="1077" width="0.0105%" height="15" fill="rgb(245,3,41)" fg:x="2112" fg:w="1"/><text x="22.3768%" y="1087.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_initialize (1 samples, 0.01%)</title><rect x="22.1268%" y="1061" width="0.0105%" height="15" fill="rgb(214,13,26)" fg:x="2112" fg:w="1"/><text x="22.3768%" y="1071.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::try_register_dtor (1 samples, 0.01%)</title><rect x="22.1268%" y="1045" width="0.0105%" height="15" fill="rgb(252,75,11)" fg:x="2112" fg:w="1"/><text x="22.3768%" y="1055.50"></text></g><g><title>__cxa_thread_atexit_impl (1 samples, 0.01%)</title><rect x="22.1268%" y="1029" width="0.0105%" height="15" fill="rgb(218,226,17)" fg:x="2112" fg:w="1"/><text x="22.3768%" y="1039.50"></text></g><g><title>__GI__dl_find_dso_for_object (1 samples, 0.01%)</title><rect x="22.1268%" y="1013" width="0.0105%" height="15" fill="rgb(248,89,38)" fg:x="2112" fg:w="1"/><text x="22.3768%" y="1023.50"></text></g><g><title>__futex_abstimed_wait_common64 (1 samples, 0.01%)</title><rect x="22.1372%" y="1253" width="0.0105%" height="15" fill="rgb(237,73,46)" fg:x="2113" fg:w="1"/><text x="22.3872%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="22.1477%" y="1253" width="0.0105%" height="15" fill="rgb(242,78,33)" fg:x="2114" fg:w="1"/><text x="22.3977%" y="1263.50"></text></g><g><title>anon.666813248bedfb0540ef40dafdc00703.11.llvm.603065943596662821 (2 samples, 0.02%)</title><rect x="22.1582%" y="1253" width="0.0210%" height="15" fill="rgb(235,60,3)" fg:x="2115" fg:w="2"/><text x="22.4082%" y="1263.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="22.1582%" y="1237" width="0.0210%" height="15" fill="rgb(216,172,19)" fg:x="2115" fg:w="2"/><text x="22.4082%" y="1247.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="22.1687%" y="1221" width="0.0105%" height="15" fill="rgb(227,6,42)" fg:x="2116" fg:w="1"/><text x="22.4187%" y="1231.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="22.1687%" y="1205" width="0.0105%" height="15" fill="rgb(223,207,42)" fg:x="2116" fg:w="1"/><text x="22.4187%" y="1215.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="22.1687%" y="1189" width="0.0105%" height="15" fill="rgb(246,138,30)" fg:x="2116" fg:w="1"/><text x="22.4187%" y="1199.50"></text></g><g><title>bevy_ui::widget::image::image_node_system (1 samples, 0.01%)</title><rect x="22.1792%" y="1253" width="0.0105%" height="15" fill="rgb(251,199,47)" fg:x="2117" fg:w="1"/><text x="22.4292%" y="1263.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="22.1896%" y="1253" width="0.0105%" height="15" fill="rgb(228,218,44)" fg:x="2118" fg:w="1"/><text x="22.4396%" y="1263.50"></text></g><g><title>Compute_Task_Po (2,103 samples, 22.03%)</title><rect x="0.1781%" y="1269" width="22.0325%" height="15" fill="rgb(220,68,6)" fg:x="17" fg:w="2103"/><text x="0.4281%" y="1279.50">Compute_Task_Po</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="22.2001%" y="1253" width="0.0105%" height="15" fill="rgb(240,60,26)" fg:x="2119" fg:w="1"/><text x="22.4501%" y="1263.50"></text></g><g><title>[anon] (1 samples, 0.01%)</title><rect x="22.2106%" y="1253" width="0.0105%" height="15" fill="rgb(211,200,19)" fg:x="2120" fg:w="1"/><text x="22.4606%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::asset_server::AssetServerError&gt; (1 samples, 0.01%)</title><rect x="22.2106%" y="1237" width="0.0105%" height="15" fill="rgb(242,145,30)" fg:x="2120" fg:w="1"/><text x="22.4606%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.2211%" y="1253" width="0.0105%" height="15" fill="rgb(225,64,13)" fg:x="2121" fg:w="1"/><text x="22.4711%" y="1263.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="22.2211%" y="1237" width="0.0105%" height="15" fill="rgb(218,103,35)" fg:x="2121" fg:w="1"/><text x="22.4711%" y="1247.50"></text></g><g><title>_GLOBAL_OFFSET_TABLE_ (1 samples, 0.01%)</title><rect x="22.2315%" y="1253" width="0.0105%" height="15" fill="rgb(216,93,46)" fg:x="2122" fg:w="1"/><text x="22.4815%" y="1263.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::event (1 samples, 0.01%)</title><rect x="22.2315%" y="1237" width="0.0105%" height="15" fill="rgb(225,159,27)" fg:x="2122" fg:w="1"/><text x="22.4815%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="22.2420%" y="805" width="0.0105%" height="15" fill="rgb(225,204,11)" fg:x="2123" fg:w="1"/><text x="22.4920%" y="815.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_async::{{closure}} (1 samples, 0.01%)</title><rect x="22.2420%" y="789" width="0.0105%" height="15" fill="rgb(205,56,4)" fg:x="2123" fg:w="1"/><text x="22.4920%" y="799.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::get_path_asset_loader (1 samples, 0.01%)</title><rect x="22.2420%" y="773" width="0.0105%" height="15" fill="rgb(206,6,35)" fg:x="2123" fg:w="1"/><text x="22.4920%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="22.2420%" y="757" width="0.0105%" height="15" fill="rgb(247,73,52)" fg:x="2123" fg:w="1"/><text x="22.4920%" y="767.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::get_path_asset_loader::{{closure}} (1 samples, 0.01%)</title><rect x="22.2420%" y="741" width="0.0105%" height="15" fill="rgb(246,97,4)" fg:x="2123" fg:w="1"/><text x="22.4920%" y="751.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.01%)</title><rect x="22.2420%" y="725" width="0.0105%" height="15" fill="rgb(212,37,15)" fg:x="2123" fg:w="1"/><text x="22.4920%" y="735.50"></text></g><g><title>alloc::str::&lt;impl str&gt;::to_lowercase (1 samples, 0.01%)</title><rect x="22.2420%" y="709" width="0.0105%" height="15" fill="rgb(208,130,40)" fg:x="2123" fg:w="1"/><text x="22.4920%" y="719.50"></text></g><g><title>tracing_core::dispatcher::CURRENT_STATE::__getit (1 samples, 0.01%)</title><rect x="22.2525%" y="757" width="0.0105%" height="15" fill="rgb(236,55,29)" fg:x="2124" fg:w="1"/><text x="22.5025%" y="767.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="22.2525%" y="741" width="0.0105%" height="15" fill="rgb(209,156,45)" fg:x="2124" fg:w="1"/><text x="22.5025%" y="751.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="22.2525%" y="725" width="0.0105%" height="15" fill="rgb(249,107,4)" fg:x="2124" fg:w="1"/><text x="22.5025%" y="735.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="22.2525%" y="709" width="0.0105%" height="15" fill="rgb(227,7,13)" fg:x="2124" fg:w="1"/><text x="22.5025%" y="719.50"></text></g><g><title>__tls_get_addr (1 samples, 0.01%)</title><rect x="22.2525%" y="693" width="0.0105%" height="15" fill="rgb(250,129,14)" fg:x="2124" fg:w="1"/><text x="22.5025%" y="703.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="22.2630%" y="613" width="0.0105%" height="15" fill="rgb(229,92,13)" fg:x="2125" fg:w="1"/><text x="22.5130%" y="623.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="22.2630%" y="597" width="0.0105%" height="15" fill="rgb(245,98,39)" fg:x="2125" fg:w="1"/><text x="22.5130%" y="607.50"></text></g><g><title>&lt;std::io::stdio::StdoutLock as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="22.2630%" y="581" width="0.0105%" height="15" fill="rgb(234,135,48)" fg:x="2125" fg:w="1"/><text x="22.5130%" y="591.50"></text></g><g><title>&lt;std::io::buffered::linewriter::LineWriter&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="22.2630%" y="565" width="0.0105%" height="15" fill="rgb(230,98,28)" fg:x="2125" fg:w="1"/><text x="22.5130%" y="575.50"></text></g><g><title>&lt;std::io::buffered::linewritershim::LineWriterShim&lt;W&gt; as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="22.2630%" y="549" width="0.0105%" height="15" fill="rgb(223,121,0)" fg:x="2125" fg:w="1"/><text x="22.5130%" y="559.50"></text></g><g><title>&lt;std::io::stdio::StdoutRaw as std::io::Write&gt;::write_all (1 samples, 0.01%)</title><rect x="22.2630%" y="533" width="0.0105%" height="15" fill="rgb(234,173,33)" fg:x="2125" fg:w="1"/><text x="22.5130%" y="543.50"></text></g><g><title>std::io::Write::write_all (1 samples, 0.01%)</title><rect x="22.2630%" y="517" width="0.0105%" height="15" fill="rgb(245,47,8)" fg:x="2125" fg:w="1"/><text x="22.5130%" y="527.50"></text></g><g><title>&lt;std::sys::unix::stdio::Stdout as std::io::Write&gt;::write (1 samples, 0.01%)</title><rect x="22.2630%" y="501" width="0.0105%" height="15" fill="rgb(205,17,20)" fg:x="2125" fg:w="1"/><text x="22.5130%" y="511.50"></text></g><g><title>std::sys::unix::fd::FileDesc::write (1 samples, 0.01%)</title><rect x="22.2630%" y="485" width="0.0105%" height="15" fill="rgb(232,151,16)" fg:x="2125" fg:w="1"/><text x="22.5130%" y="495.50"></text></g><g><title>__libc_write (1 samples, 0.01%)</title><rect x="22.2630%" y="469" width="0.0105%" height="15" fill="rgb(208,30,32)" fg:x="2125" fg:w="1"/><text x="22.5130%" y="479.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.01%)</title><rect x="22.2630%" y="453" width="0.0105%" height="15" fill="rgb(254,26,3)" fg:x="2125" fg:w="1"/><text x="22.5130%" y="463.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (1 samples, 0.01%)</title><rect x="22.2734%" y="597" width="0.0105%" height="15" fill="rgb(240,177,30)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="607.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="22.2734%" y="581" width="0.0105%" height="15" fill="rgb(248,76,44)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="591.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="22.2734%" y="565" width="0.0105%" height="15" fill="rgb(241,186,54)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FmtLevel as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="22.2734%" y="549" width="0.0105%" height="15" fill="rgb(249,171,29)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="559.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="22.2734%" y="533" width="0.0105%" height="15" fill="rgb(237,151,44)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="543.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="22.2734%" y="517" width="0.0105%" height="15" fill="rgb(228,174,30)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="527.50"></text></g><g><title>&lt;ansi_term::display::ANSIGenericString&lt;str&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="22.2734%" y="501" width="0.0105%" height="15" fill="rgb(252,14,37)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="511.50"></text></g><g><title>ansi_term::display::ANSIGenericString&lt;S&gt;::write_to_any (1 samples, 0.01%)</title><rect x="22.2734%" y="485" width="0.0105%" height="15" fill="rgb(207,111,40)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="495.50"></text></g><g><title>&lt;dyn core::fmt::Write as ansi_term::write::AnyWrite&gt;::write_fmt (1 samples, 0.01%)</title><rect x="22.2734%" y="469" width="0.0105%" height="15" fill="rgb(248,171,54)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="479.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="22.2734%" y="453" width="0.0105%" height="15" fill="rgb(211,127,2)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="22.2734%" y="437" width="0.0105%" height="15" fill="rgb(236,87,47)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="447.50"></text></g><g><title>ansi_term::ansi::&lt;impl ansi_term::style::Style&gt;::write_prefix (1 samples, 0.01%)</title><rect x="22.2734%" y="421" width="0.0105%" height="15" fill="rgb(223,190,45)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="431.50"></text></g><g><title>ansi_term::ansi::&lt;impl ansi_term::style::Style&gt;::write_prefix (1 samples, 0.01%)</title><rect x="22.2734%" y="405" width="0.0105%" height="15" fill="rgb(215,5,16)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="22.2734%" y="389" width="0.0105%" height="15" fill="rgb(252,82,33)" fg:x="2126" fg:w="1"/><text x="22.5234%" y="399.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::FmtContext&lt;S,N&gt; as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.01%)</title><rect x="22.2839%" y="597" width="0.0105%" height="15" fill="rgb(247,213,44)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="607.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.01%)</title><rect x="22.2839%" y="581" width="0.0105%" height="15" fill="rgb(205,196,44)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="591.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="22.2839%" y="565" width="0.0105%" height="15" fill="rgb(237,96,54)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="575.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="22.2839%" y="549" width="0.0105%" height="15" fill="rgb(230,113,34)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="559.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="22.2839%" y="533" width="0.0105%" height="15" fill="rgb(221,224,12)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="22.2839%" y="517" width="0.0105%" height="15" fill="rgb(219,112,44)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (1 samples, 0.01%)</title><rect x="22.2839%" y="501" width="0.0105%" height="15" fill="rgb(210,31,13)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="22.2839%" y="485" width="0.0105%" height="15" fill="rgb(230,25,16)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="22.2839%" y="469" width="0.0105%" height="15" fill="rgb(246,108,53)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="479.50"></text></g><g><title>&lt;core::fmt::Arguments as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="22.2839%" y="453" width="0.0105%" height="15" fill="rgb(241,172,50)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="463.50"></text></g><g><title>&lt;core::fmt::Arguments as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="22.2839%" y="437" width="0.0105%" height="15" fill="rgb(235,141,10)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="22.2839%" y="421" width="0.0105%" height="15" fill="rgb(220,174,43)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="431.50"></text></g><g><title>&lt;bevy_asset::asset_server::AssetServerError as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="22.2839%" y="405" width="0.0105%" height="15" fill="rgb(215,181,40)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="415.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="22.2839%" y="389" width="0.0105%" height="15" fill="rgb(230,97,2)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="399.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="22.2839%" y="373" width="0.0105%" height="15" fill="rgb(211,25,27)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="383.50"></text></g><g><title>&lt;bevy_asset::io::AssetIoError as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="22.2839%" y="357" width="0.0105%" height="15" fill="rgb(230,87,26)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="367.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="22.2839%" y="341" width="0.0105%" height="15" fill="rgb(227,160,17)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="351.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="22.2839%" y="325" width="0.0105%" height="15" fill="rgb(244,85,34)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="335.50"></text></g><g><title>&lt;core::str::lossy::Utf8Lossy as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="22.2839%" y="309" width="0.0105%" height="15" fill="rgb(207,70,0)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="319.50"></text></g><g><title>&lt;core::str::lossy::Utf8LossyChunksIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="22.2839%" y="293" width="0.0105%" height="15" fill="rgb(223,129,7)" fg:x="2127" fg:w="1"/><text x="22.5339%" y="303.50"></text></g><g><title>core::fmt::write (2 samples, 0.02%)</title><rect x="22.2944%" y="469" width="0.0210%" height="15" fill="rgb(246,105,7)" fg:x="2128" fg:w="2"/><text x="22.5444%" y="479.50"></text></g><g><title>core::fmt::run (1 samples, 0.01%)</title><rect x="22.3049%" y="453" width="0.0105%" height="15" fill="rgb(215,154,42)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="463.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (1 samples, 0.01%)</title><rect x="22.3049%" y="437" width="0.0105%" height="15" fill="rgb(220,215,30)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="22.3049%" y="421" width="0.0105%" height="15" fill="rgb(228,81,51)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="431.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="22.3049%" y="405" width="0.0105%" height="15" fill="rgb(247,71,54)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="22.3049%" y="389" width="0.0105%" height="15" fill="rgb(234,176,34)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="399.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="22.3049%" y="373" width="0.0105%" height="15" fill="rgb(241,103,54)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="22.3049%" y="357" width="0.0105%" height="15" fill="rgb(228,22,34)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="22.3049%" y="341" width="0.0105%" height="15" fill="rgb(241,179,48)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="22.3049%" y="325" width="0.0105%" height="15" fill="rgb(235,167,37)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="22.3049%" y="309" width="0.0105%" height="15" fill="rgb(213,109,30)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="22.3049%" y="293" width="0.0105%" height="15" fill="rgb(222,172,16)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="22.3049%" y="277" width="0.0105%" height="15" fill="rgb(233,192,5)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="22.3049%" y="261" width="0.0105%" height="15" fill="rgb(247,189,41)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="22.3049%" y="245" width="0.0105%" height="15" fill="rgb(218,134,47)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="22.3049%" y="229" width="0.0105%" height="15" fill="rgb(216,29,3)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="239.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="22.3049%" y="213" width="0.0105%" height="15" fill="rgb(246,140,12)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="223.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="22.3049%" y="197" width="0.0105%" height="15" fill="rgb(230,136,11)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="207.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="22.3049%" y="181" width="0.0105%" height="15" fill="rgb(247,22,47)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="191.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="22.3049%" y="165" width="0.0105%" height="15" fill="rgb(218,84,22)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="175.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="22.3049%" y="149" width="0.0105%" height="15" fill="rgb(216,87,39)" fg:x="2129" fg:w="1"/><text x="22.5549%" y="159.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (3 samples, 0.03%)</title><rect x="22.2944%" y="565" width="0.0314%" height="15" fill="rgb(221,178,8)" fg:x="2128" fg:w="3"/><text x="22.5444%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.03%)</title><rect x="22.2944%" y="549" width="0.0314%" height="15" fill="rgb(230,42,11)" fg:x="2128" fg:w="3"/><text x="22.5444%" y="559.50"></text></g><g><title>core::fmt::write (3 samples, 0.03%)</title><rect x="22.2944%" y="533" width="0.0314%" height="15" fill="rgb(237,229,4)" fg:x="2128" fg:w="3"/><text x="22.5444%" y="543.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (3 samples, 0.03%)</title><rect x="22.2944%" y="517" width="0.0314%" height="15" fill="rgb(222,31,33)" fg:x="2128" fg:w="3"/><text x="22.5444%" y="527.50"></text></g><g><title>chrono::format::format (3 samples, 0.03%)</title><rect x="22.2944%" y="501" width="0.0314%" height="15" fill="rgb(210,17,39)" fg:x="2128" fg:w="3"/><text x="22.5444%" y="511.50"></text></g><g><title>chrono::format::format_inner (3 samples, 0.03%)</title><rect x="22.2944%" y="485" width="0.0314%" height="15" fill="rgb(244,93,20)" fg:x="2128" fg:w="3"/><text x="22.5444%" y="495.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="22.3153%" y="469" width="0.0105%" height="15" fill="rgb(210,40,47)" fg:x="2130" fg:w="1"/><text x="22.5653%" y="479.50"></text></g><g><title>chrono::format::format_inner::{{closure}} (1 samples, 0.01%)</title><rect x="22.3153%" y="453" width="0.0105%" height="15" fill="rgb(239,211,47)" fg:x="2130" fg:w="1"/><text x="22.5653%" y="463.50"></text></g><g><title>&lt;chrono::naive::time::NaiveTime as chrono::Timelike&gt;::minute (1 samples, 0.01%)</title><rect x="22.3153%" y="437" width="0.0105%" height="15" fill="rgb(251,223,49)" fg:x="2130" fg:w="1"/><text x="22.5653%" y="447.50"></text></g><g><title>chrono::naive::time::NaiveTime::hms (1 samples, 0.01%)</title><rect x="22.3153%" y="421" width="0.0105%" height="15" fill="rgb(221,149,5)" fg:x="2130" fg:w="1"/><text x="22.5653%" y="431.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for i32&gt;::fmt (1 samples, 0.01%)</title><rect x="22.3363%" y="437" width="0.0105%" height="15" fill="rgb(219,224,51)" fg:x="2132" fg:w="1"/><text x="22.5863%" y="447.50"></text></g><g><title>core::fmt::num::imp::fmt_u64 (1 samples, 0.01%)</title><rect x="22.3363%" y="421" width="0.0105%" height="15" fill="rgb(223,7,8)" fg:x="2132" fg:w="1"/><text x="22.5863%" y="431.50"></text></g><g><title>core::fmt::Formatter::pad_integral (1 samples, 0.01%)</title><rect x="22.3363%" y="405" width="0.0105%" height="15" fill="rgb(241,217,22)" fg:x="2132" fg:w="1"/><text x="22.5863%" y="415.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="22.3363%" y="389" width="0.0105%" height="15" fill="rgb(248,209,0)" fg:x="2132" fg:w="1"/><text x="22.5863%" y="399.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format (3 samples, 0.03%)</title><rect x="22.3258%" y="565" width="0.0314%" height="15" fill="rgb(217,205,4)" fg:x="2131" fg:w="3"/><text x="22.5758%" y="575.50"></text></g><g><title>chrono::datetime::DateTime&lt;Tz&gt;::format_with_items (3 samples, 0.03%)</title><rect x="22.3258%" y="549" width="0.0314%" height="15" fill="rgb(228,124,39)" fg:x="2131" fg:w="3"/><text x="22.5758%" y="559.50"></text></g><g><title>chrono::format::DelayedFormat&lt;I&gt;::new_with_offset (3 samples, 0.03%)</title><rect x="22.3258%" y="533" width="0.0314%" height="15" fill="rgb(250,116,42)" fg:x="2131" fg:w="3"/><text x="22.5758%" y="543.50"></text></g><g><title>&lt;T as alloc::string::ToString&gt;::to_string (3 samples, 0.03%)</title><rect x="22.3258%" y="517" width="0.0314%" height="15" fill="rgb(223,202,9)" fg:x="2131" fg:w="3"/><text x="22.5758%" y="527.50"></text></g><g><title>&lt;chrono::offset::fixed::FixedOffset as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="22.3258%" y="501" width="0.0314%" height="15" fill="rgb(242,222,40)" fg:x="2131" fg:w="3"/><text x="22.5758%" y="511.50"></text></g><g><title>core::fmt::Formatter::write_fmt (3 samples, 0.03%)</title><rect x="22.3258%" y="485" width="0.0314%" height="15" fill="rgb(229,99,46)" fg:x="2131" fg:w="3"/><text x="22.5758%" y="495.50"></text></g><g><title>core::fmt::write (3 samples, 0.03%)</title><rect x="22.3258%" y="469" width="0.0314%" height="15" fill="rgb(225,56,46)" fg:x="2131" fg:w="3"/><text x="22.5758%" y="479.50"></text></g><g><title>core::fmt::run (2 samples, 0.02%)</title><rect x="22.3363%" y="453" width="0.0210%" height="15" fill="rgb(227,94,5)" fg:x="2132" fg:w="2"/><text x="22.5863%" y="463.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="22.3468%" y="437" width="0.0105%" height="15" fill="rgb(205,112,38)" fg:x="2133" fg:w="1"/><text x="22.5968%" y="447.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.17%)</title><rect x="22.2420%" y="869" width="0.1676%" height="15" fill="rgb(231,133,46)" fg:x="2123" fg:w="16"/><text x="22.4920%" y="879.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (16 samples, 0.17%)</title><rect x="22.2420%" y="853" width="0.1676%" height="15" fill="rgb(217,16,9)" fg:x="2123" fg:w="16"/><text x="22.4920%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.17%)</title><rect x="22.2420%" y="837" width="0.1676%" height="15" fill="rgb(249,173,9)" fg:x="2123" fg:w="16"/><text x="22.4920%" y="847.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked::{{closure}} (16 samples, 0.17%)</title><rect x="22.2420%" y="821" width="0.1676%" height="15" fill="rgb(205,163,53)" fg:x="2123" fg:w="16"/><text x="22.4920%" y="831.50"></text></g><g><title>tracing_core::event::Event::dispatch (15 samples, 0.16%)</title><rect x="22.2525%" y="805" width="0.1572%" height="15" fill="rgb(217,54,41)" fg:x="2124" fg:w="15"/><text x="22.5025%" y="815.50"></text></g><g><title>tracing_core::dispatcher::get_default (15 samples, 0.16%)</title><rect x="22.2525%" y="789" width="0.1572%" height="15" fill="rgb(228,216,12)" fg:x="2124" fg:w="15"/><text x="22.5025%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (15 samples, 0.16%)</title><rect x="22.2525%" y="773" width="0.1572%" height="15" fill="rgb(244,228,15)" fg:x="2124" fg:w="15"/><text x="22.5025%" y="783.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (14 samples, 0.15%)</title><rect x="22.2630%" y="757" width="0.1467%" height="15" fill="rgb(221,176,53)" fg:x="2125" fg:w="14"/><text x="22.5130%" y="767.50"></text></g><g><title>tracing_core::event::Event::dispatch::{{closure}} (14 samples, 0.15%)</title><rect x="22.2630%" y="741" width="0.1467%" height="15" fill="rgb(205,94,34)" fg:x="2125" fg:w="14"/><text x="22.5130%" y="751.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::event (14 samples, 0.15%)</title><rect x="22.2630%" y="725" width="0.1467%" height="15" fill="rgb(213,110,48)" fg:x="2125" fg:w="14"/><text x="22.5130%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::event (14 samples, 0.15%)</title><rect x="22.2630%" y="709" width="0.1467%" height="15" fill="rgb(236,142,28)" fg:x="2125" fg:w="14"/><text x="22.5130%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (14 samples, 0.15%)</title><rect x="22.2630%" y="693" width="0.1467%" height="15" fill="rgb(225,135,29)" fg:x="2125" fg:w="14"/><text x="22.5130%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (14 samples, 0.15%)</title><rect x="22.2630%" y="677" width="0.1467%" height="15" fill="rgb(252,45,31)" fg:x="2125" fg:w="14"/><text x="22.5130%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14 samples, 0.15%)</title><rect x="22.2630%" y="661" width="0.1467%" height="15" fill="rgb(211,187,50)" fg:x="2125" fg:w="14"/><text x="22.5130%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.15%)</title><rect x="22.2630%" y="645" width="0.1467%" height="15" fill="rgb(229,109,7)" fg:x="2125" fg:w="14"/><text x="22.5130%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::{{closure}} (14 samples, 0.15%)</title><rect x="22.2630%" y="629" width="0.1467%" height="15" fill="rgb(251,131,51)" fg:x="2125" fg:w="14"/><text x="22.5130%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (13 samples, 0.14%)</title><rect x="22.2734%" y="613" width="0.1362%" height="15" fill="rgb(251,180,35)" fg:x="2126" fg:w="13"/><text x="22.5234%" y="623.50"></text></g><g><title>tracing_subscriber::fmt::format::Format&lt;F,T&gt;::format_timestamp (11 samples, 0.12%)</title><rect x="22.2944%" y="597" width="0.1152%" height="15" fill="rgb(211,46,32)" fg:x="2128" fg:w="11"/><text x="22.5444%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (11 samples, 0.12%)</title><rect x="22.2944%" y="581" width="0.1152%" height="15" fill="rgb(248,123,17)" fg:x="2128" fg:w="11"/><text x="22.5444%" y="591.50"></text></g><g><title>chrono::offset::local::Local::now (5 samples, 0.05%)</title><rect x="22.3573%" y="565" width="0.0524%" height="15" fill="rgb(227,141,18)" fg:x="2134" fg:w="5"/><text x="22.6073%" y="575.50"></text></g><g><title>chrono::sys::Timespec::local (5 samples, 0.05%)</title><rect x="22.3573%" y="549" width="0.0524%" height="15" fill="rgb(216,102,9)" fg:x="2134" fg:w="5"/><text x="22.6073%" y="559.50"></text></g><g><title>chrono::sys::inner::time_to_local_tm (5 samples, 0.05%)</title><rect x="22.3573%" y="533" width="0.0524%" height="15" fill="rgb(253,47,13)" fg:x="2134" fg:w="5"/><text x="22.6073%" y="543.50"></text></g><g><title>__tz_convert (5 samples, 0.05%)</title><rect x="22.3573%" y="517" width="0.0524%" height="15" fill="rgb(226,93,23)" fg:x="2134" fg:w="5"/><text x="22.6073%" y="527.50"></text></g><g><title>__lll_lock_wait_private (5 samples, 0.05%)</title><rect x="22.3573%" y="501" width="0.0524%" height="15" fill="rgb(247,104,17)" fg:x="2134" fg:w="5"/><text x="22.6073%" y="511.50"></text></g><g><title>__GI___clone (17 samples, 0.18%)</title><rect x="22.2420%" y="1253" width="0.1781%" height="15" fill="rgb(233,203,26)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1263.50"></text></g><g><title>start_thread (17 samples, 0.18%)</title><rect x="22.2420%" y="1237" width="0.1781%" height="15" fill="rgb(244,98,49)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (17 samples, 0.18%)</title><rect x="22.2420%" y="1221" width="0.1781%" height="15" fill="rgb(235,134,22)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.18%)</title><rect x="22.2420%" y="1205" width="0.1781%" height="15" fill="rgb(221,70,32)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (17 samples, 0.18%)</title><rect x="22.2420%" y="1189" width="0.1781%" height="15" fill="rgb(238,15,50)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (17 samples, 0.18%)</title><rect x="22.2420%" y="1173" width="0.1781%" height="15" fill="rgb(215,221,48)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (17 samples, 0.18%)</title><rect x="22.2420%" y="1157" width="0.1781%" height="15" fill="rgb(236,73,3)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (17 samples, 0.18%)</title><rect x="22.2420%" y="1141" width="0.1781%" height="15" fill="rgb(250,107,11)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1151.50"></text></g><g><title>std::panicking::try (17 samples, 0.18%)</title><rect x="22.2420%" y="1125" width="0.1781%" height="15" fill="rgb(242,39,14)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (17 samples, 0.18%)</title><rect x="22.2420%" y="1109" width="0.1781%" height="15" fill="rgb(248,164,37)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (17 samples, 0.18%)</title><rect x="22.2420%" y="1093" width="0.1781%" height="15" fill="rgb(217,60,12)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (17 samples, 0.18%)</title><rect x="22.2420%" y="1077" width="0.1781%" height="15" fill="rgb(240,125,29)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (17 samples, 0.18%)</title><rect x="22.2420%" y="1061" width="0.1781%" height="15" fill="rgb(208,207,28)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (17 samples, 0.18%)</title><rect x="22.2420%" y="1045" width="0.1781%" height="15" fill="rgb(209,159,27)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1055.50"></text></g><g><title>futures_lite::future::block_on (17 samples, 0.18%)</title><rect x="22.2420%" y="1029" width="0.1781%" height="15" fill="rgb(251,176,53)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (17 samples, 0.18%)</title><rect x="22.2420%" y="1013" width="0.1781%" height="15" fill="rgb(211,85,7)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (17 samples, 0.18%)</title><rect x="22.2420%" y="997" width="0.1781%" height="15" fill="rgb(216,64,54)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="1007.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (17 samples, 0.18%)</title><rect x="22.2420%" y="981" width="0.1781%" height="15" fill="rgb(217,54,24)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.18%)</title><rect x="22.2420%" y="965" width="0.1781%" height="15" fill="rgb(208,206,53)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (17 samples, 0.18%)</title><rect x="22.2420%" y="949" width="0.1781%" height="15" fill="rgb(251,74,39)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="959.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (17 samples, 0.18%)</title><rect x="22.2420%" y="933" width="0.1781%" height="15" fill="rgb(226,47,5)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.18%)</title><rect x="22.2420%" y="917" width="0.1781%" height="15" fill="rgb(234,111,33)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="927.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (17 samples, 0.18%)</title><rect x="22.2420%" y="901" width="0.1781%" height="15" fill="rgb(251,14,10)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (17 samples, 0.18%)</title><rect x="22.2420%" y="885" width="0.1781%" height="15" fill="rgb(232,43,0)" fg:x="2123" fg:w="17"/><text x="22.4920%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (1 samples, 0.01%)</title><rect x="22.4096%" y="869" width="0.0105%" height="15" fill="rgb(222,68,43)" fg:x="2139" fg:w="1"/><text x="22.6596%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (1 samples, 0.01%)</title><rect x="22.4096%" y="853" width="0.0105%" height="15" fill="rgb(217,24,23)" fg:x="2139" fg:w="1"/><text x="22.6596%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="22.4096%" y="837" width="0.0105%" height="15" fill="rgb(229,209,14)" fg:x="2139" fg:w="1"/><text x="22.6596%" y="847.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="22.4096%" y="821" width="0.0105%" height="15" fill="rgb(250,149,48)" fg:x="2139" fg:w="1"/><text x="22.6596%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="22.4096%" y="805" width="0.0105%" height="15" fill="rgb(210,120,37)" fg:x="2139" fg:w="1"/><text x="22.6596%" y="815.50"></text></g><g><title>IO_Task_Pool_(0 (21 samples, 0.22%)</title><rect x="22.2106%" y="1269" width="0.2200%" height="15" fill="rgb(210,21,8)" fg:x="2120" fg:w="21"/><text x="22.4606%" y="1279.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked::{{closure}}::META (1 samples, 0.01%)</title><rect x="22.4201%" y="1253" width="0.0105%" height="15" fill="rgb(243,145,7)" fg:x="2140" fg:w="1"/><text x="22.6701%" y="1263.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="22.4201%" y="1237" width="0.0105%" height="15" fill="rgb(238,178,32)" fg:x="2140" fg:w="1"/><text x="22.6701%" y="1247.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FullCtx&lt;S,N&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="22.4306%" y="1253" width="0.0105%" height="15" fill="rgb(222,4,10)" fg:x="2141" fg:w="1"/><text x="22.6806%" y="1263.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.01%)</title><rect x="22.4306%" y="1237" width="0.0105%" height="15" fill="rgb(239,7,37)" fg:x="2141" fg:w="1"/><text x="22.6806%" y="1247.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::FullCtx&lt;S,N&gt; as core::fmt::Display&gt;::fmt::{{closure}} (1 samples, 0.01%)</title><rect x="22.4306%" y="1221" width="0.0105%" height="15" fill="rgb(215,31,37)" fg:x="2141" fg:w="1"/><text x="22.6806%" y="1231.50"></text></g><g><title>tracing_subscriber::layer::Context&lt;S&gt;::lookup_current (1 samples, 0.01%)</title><rect x="22.4306%" y="1205" width="0.0105%" height="15" fill="rgb(224,83,33)" fg:x="2141" fg:w="1"/><text x="22.6806%" y="1215.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::current_span (1 samples, 0.01%)</title><rect x="22.4306%" y="1189" width="0.0105%" height="15" fill="rgb(239,55,3)" fg:x="2141" fg:w="1"/><text x="22.6806%" y="1199.50"></text></g><g><title>[anon] (1 samples, 0.01%)</title><rect x="22.4411%" y="1253" width="0.0105%" height="15" fill="rgb(247,92,11)" fg:x="2142" fg:w="1"/><text x="22.6911%" y="1263.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (1 samples, 0.01%)</title><rect x="22.4411%" y="1237" width="0.0105%" height="15" fill="rgb(239,200,7)" fg:x="2142" fg:w="1"/><text x="22.6911%" y="1247.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="22.4515%" y="1237" width="0.0105%" height="15" fill="rgb(227,115,8)" fg:x="2143" fg:w="1"/><text x="22.7015%" y="1247.50"></text></g><g><title>[libbevy_dylib-7e0daee3ecabe62f.so] (2 samples, 0.02%)</title><rect x="22.4515%" y="1253" width="0.0210%" height="15" fill="rgb(215,189,27)" fg:x="2143" fg:w="2"/><text x="22.7015%" y="1263.50"></text></g><g><title>std::sys::unix::thread::guard::current (1 samples, 0.01%)</title><rect x="22.4620%" y="1237" width="0.0105%" height="15" fill="rgb(251,216,39)" fg:x="2144" fg:w="1"/><text x="22.7120%" y="1247.50"></text></g><g><title>[unknown] (1 samples, 0.01%)</title><rect x="22.4725%" y="1253" width="0.0105%" height="15" fill="rgb(207,29,47)" fg:x="2145" fg:w="1"/><text x="22.7225%" y="1263.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="22.4725%" y="1237" width="0.0105%" height="15" fill="rgb(210,71,34)" fg:x="2145" fg:w="1"/><text x="22.7225%" y="1247.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::get_path_asset_loader (1 samples, 0.01%)</title><rect x="22.4830%" y="773" width="0.0105%" height="15" fill="rgb(253,217,51)" fg:x="2146" fg:w="1"/><text x="22.7330%" y="783.50"></text></g><g><title>std::path::Path::file_name (1 samples, 0.01%)</title><rect x="22.4830%" y="757" width="0.0105%" height="15" fill="rgb(222,117,46)" fg:x="2146" fg:w="1"/><text x="22.7330%" y="767.50"></text></g><g><title>&lt;std::path::Components as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (1 samples, 0.01%)</title><rect x="22.4830%" y="741" width="0.0105%" height="15" fill="rgb(226,132,6)" fg:x="2146" fg:w="1"/><text x="22.7330%" y="751.50"></text></g><g><title>std::path::Components::parse_next_component_back (1 samples, 0.01%)</title><rect x="22.4830%" y="725" width="0.0105%" height="15" fill="rgb(254,145,51)" fg:x="2146" fg:w="1"/><text x="22.7330%" y="735.50"></text></g><g><title>std::path::Components::len_before_body (1 samples, 0.01%)</title><rect x="22.4830%" y="709" width="0.0105%" height="15" fill="rgb(231,199,27)" fg:x="2146" fg:w="1"/><text x="22.7330%" y="719.50"></text></g><g><title>core::cmp::PartialOrd::le (1 samples, 0.01%)</title><rect x="22.4830%" y="693" width="0.0105%" height="15" fill="rgb(245,158,14)" fg:x="2146" fg:w="1"/><text x="22.7330%" y="703.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="22.4830%" y="805" width="0.0314%" height="15" fill="rgb(240,113,14)" fg:x="2146" fg:w="3"/><text x="22.7330%" y="815.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_async::{{closure}} (3 samples, 0.03%)</title><rect x="22.4830%" y="789" width="0.0314%" height="15" fill="rgb(210,20,13)" fg:x="2146" fg:w="3"/><text x="22.7330%" y="799.50"></text></g><g><title>bevy_asset::path::AssetPath::get_id (2 samples, 0.02%)</title><rect x="22.4935%" y="773" width="0.0210%" height="15" fill="rgb(241,144,13)" fg:x="2147" fg:w="2"/><text x="22.7435%" y="783.50"></text></g><g><title>&lt;bevy_asset::path::AssetPathId as core::convert::From&lt;&amp;bevy_asset::path::AssetPath&gt;&gt;::from (2 samples, 0.02%)</title><rect x="22.4935%" y="757" width="0.0210%" height="15" fill="rgb(235,43,34)" fg:x="2147" fg:w="2"/><text x="22.7435%" y="767.50"></text></g><g><title>&lt;bevy_asset::path::SourcePathId as core::convert::From&lt;&amp;std::path::Path&gt;&gt;::from (2 samples, 0.02%)</title><rect x="22.4935%" y="741" width="0.0210%" height="15" fill="rgb(208,36,20)" fg:x="2147" fg:w="2"/><text x="22.7435%" y="751.50"></text></g><g><title>bevy_asset::path::get_hasher (2 samples, 0.02%)</title><rect x="22.4935%" y="725" width="0.0210%" height="15" fill="rgb(239,204,10)" fg:x="2147" fg:w="2"/><text x="22.7435%" y="735.50"></text></g><g><title>ahash::fallback_hash::AHasher::new_with_keys (2 samples, 0.02%)</title><rect x="22.4935%" y="709" width="0.0210%" height="15" fill="rgb(217,84,43)" fg:x="2147" fg:w="2"/><text x="22.7435%" y="719.50"></text></g><g><title>&lt;std::io::stdio::Stdout as std::io::Write&gt;::write_all (5 samples, 0.05%)</title><rect x="22.5144%" y="613" width="0.0524%" height="15" fill="rgb(241,170,50)" fg:x="2149" fg:w="5"/><text x="22.7644%" y="623.50"></text></g><g><title>&lt;&amp;std::io::stdio::Stdout as std::io::Write&gt;::write_all (5 samples, 0.05%)</title><rect x="22.5144%" y="597" width="0.0524%" height="15" fill="rgb(226,205,29)" fg:x="2149" fg:w="5"/><text x="22.7644%" y="607.50"></text></g><g><title>std::io::stdio::Stdout::lock (5 samples, 0.05%)</title><rect x="22.5144%" y="581" width="0.0524%" height="15" fill="rgb(233,113,1)" fg:x="2149" fg:w="5"/><text x="22.7644%" y="591.50"></text></g><g><title>std::io::stdio::Stdout::lock_any (5 samples, 0.05%)</title><rect x="22.5144%" y="565" width="0.0524%" height="15" fill="rgb(253,98,13)" fg:x="2149" fg:w="5"/><text x="22.7644%" y="575.50"></text></g><g><title>std::sys_common::remutex::ReentrantMutex&lt;T&gt;::lock (5 samples, 0.05%)</title><rect x="22.5144%" y="549" width="0.0524%" height="15" fill="rgb(211,115,12)" fg:x="2149" fg:w="5"/><text x="22.7644%" y="559.50"></text></g><g><title>std::sys::unix::mutex::ReentrantMutex::lock (5 samples, 0.05%)</title><rect x="22.5144%" y="533" width="0.0524%" height="15" fill="rgb(208,12,16)" fg:x="2149" fg:w="5"/><text x="22.7644%" y="543.50"></text></g><g><title>__GI___pthread_mutex_lock (5 samples, 0.05%)</title><rect x="22.5144%" y="517" width="0.0524%" height="15" fill="rgb(237,193,54)" fg:x="2149" fg:w="5"/><text x="22.7644%" y="527.50"></text></g><g><title>__lll_lock_wait (5 samples, 0.05%)</title><rect x="22.5144%" y="501" width="0.0524%" height="15" fill="rgb(243,22,42)" fg:x="2149" fg:w="5"/><text x="22.7644%" y="511.50"></text></g><g><title>&lt;tracing_core::event::Event as tracing_log::NormalizeEvent&gt;::normalized_metadata (4 samples, 0.04%)</title><rect x="22.5668%" y="597" width="0.0419%" height="15" fill="rgb(233,151,36)" fg:x="2154" fg:w="4"/><text x="22.8168%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::FmtContext&lt;S,N&gt; as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.01%)</title><rect x="22.6087%" y="597" width="0.0105%" height="15" fill="rgb(237,57,45)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="607.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (1 samples, 0.01%)</title><rect x="22.6087%" y="581" width="0.0105%" height="15" fill="rgb(221,88,17)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="591.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (1 samples, 0.01%)</title><rect x="22.6087%" y="565" width="0.0105%" height="15" fill="rgb(230,79,15)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="575.50"></text></g><g><title>tracing_core::field::ValueSet::record (1 samples, 0.01%)</title><rect x="22.6087%" y="549" width="0.0105%" height="15" fill="rgb(213,57,13)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="559.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (1 samples, 0.01%)</title><rect x="22.6087%" y="533" width="0.0105%" height="15" fill="rgb(222,116,39)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (1 samples, 0.01%)</title><rect x="22.6087%" y="517" width="0.0105%" height="15" fill="rgb(245,107,2)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="527.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (1 samples, 0.01%)</title><rect x="22.6087%" y="501" width="0.0105%" height="15" fill="rgb(238,1,10)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="511.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="22.6087%" y="485" width="0.0105%" height="15" fill="rgb(249,4,48)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="495.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="22.6087%" y="469" width="0.0105%" height="15" fill="rgb(223,151,18)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="479.50"></text></g><g><title>&lt;core::fmt::Arguments as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="22.6087%" y="453" width="0.0105%" height="15" fill="rgb(227,65,43)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="463.50"></text></g><g><title>&lt;core::fmt::Arguments as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="22.6087%" y="437" width="0.0105%" height="15" fill="rgb(218,40,45)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="447.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="22.6087%" y="421" width="0.0105%" height="15" fill="rgb(252,121,31)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="431.50"></text></g><g><title>&lt;bevy_asset::asset_server::AssetServerError as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="22.6087%" y="405" width="0.0105%" height="15" fill="rgb(219,158,43)" fg:x="2158" fg:w="1"/><text x="22.8587%" y="415.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.15%)</title><rect x="22.4830%" y="869" width="0.1467%" height="15" fill="rgb(231,162,42)" fg:x="2146" fg:w="14"/><text x="22.7330%" y="879.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (14 samples, 0.15%)</title><rect x="22.4830%" y="853" width="0.1467%" height="15" fill="rgb(217,179,25)" fg:x="2146" fg:w="14"/><text x="22.7330%" y="863.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14 samples, 0.15%)</title><rect x="22.4830%" y="837" width="0.1467%" height="15" fill="rgb(206,212,31)" fg:x="2146" fg:w="14"/><text x="22.7330%" y="847.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked::{{closure}} (14 samples, 0.15%)</title><rect x="22.4830%" y="821" width="0.1467%" height="15" fill="rgb(235,144,12)" fg:x="2146" fg:w="14"/><text x="22.7330%" y="831.50"></text></g><g><title>tracing_core::event::Event::dispatch (11 samples, 0.12%)</title><rect x="22.5144%" y="805" width="0.1152%" height="15" fill="rgb(213,51,10)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="815.50"></text></g><g><title>tracing_core::dispatcher::get_default (11 samples, 0.12%)</title><rect x="22.5144%" y="789" width="0.1152%" height="15" fill="rgb(231,145,14)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.12%)</title><rect x="22.5144%" y="773" width="0.1152%" height="15" fill="rgb(235,15,28)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="783.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (11 samples, 0.12%)</title><rect x="22.5144%" y="757" width="0.1152%" height="15" fill="rgb(237,206,10)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="767.50"></text></g><g><title>tracing_core::event::Event::dispatch::{{closure}} (11 samples, 0.12%)</title><rect x="22.5144%" y="741" width="0.1152%" height="15" fill="rgb(236,227,27)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="751.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::event (11 samples, 0.12%)</title><rect x="22.5144%" y="725" width="0.1152%" height="15" fill="rgb(246,83,35)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::event (11 samples, 0.12%)</title><rect x="22.5144%" y="709" width="0.1152%" height="15" fill="rgb(220,136,24)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="719.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::event (11 samples, 0.12%)</title><rect x="22.5144%" y="693" width="0.1152%" height="15" fill="rgb(217,3,25)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="703.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event (11 samples, 0.12%)</title><rect x="22.5144%" y="677" width="0.1152%" height="15" fill="rgb(239,24,14)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (11 samples, 0.12%)</title><rect x="22.5144%" y="661" width="0.1152%" height="15" fill="rgb(244,16,53)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="671.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (11 samples, 0.12%)</title><rect x="22.5144%" y="645" width="0.1152%" height="15" fill="rgb(208,175,44)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_event::{{closure}} (11 samples, 0.12%)</title><rect x="22.5144%" y="629" width="0.1152%" height="15" fill="rgb(252,18,48)" fg:x="2149" fg:w="11"/><text x="22.7644%" y="639.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (6 samples, 0.06%)</title><rect x="22.5668%" y="613" width="0.0629%" height="15" fill="rgb(234,199,32)" fg:x="2154" fg:w="6"/><text x="22.8168%" y="623.50"></text></g><g><title>tracing_subscriber::fmt::format::Format&lt;F,T&gt;::format_timestamp (1 samples, 0.01%)</title><rect x="22.6192%" y="597" width="0.0105%" height="15" fill="rgb(225,77,54)" fg:x="2159" fg:w="1"/><text x="22.8692%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::fmt::time::SystemTime as tracing_subscriber::fmt::time::FormatTime&gt;::format_time (1 samples, 0.01%)</title><rect x="22.6192%" y="581" width="0.0105%" height="15" fill="rgb(225,42,25)" fg:x="2159" fg:w="1"/><text x="22.8692%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_fmt (1 samples, 0.01%)</title><rect x="22.6192%" y="565" width="0.0105%" height="15" fill="rgb(242,227,46)" fg:x="2159" fg:w="1"/><text x="22.8692%" y="575.50"></text></g><g><title>core::fmt::Write::write_fmt (1 samples, 0.01%)</title><rect x="22.6192%" y="549" width="0.0105%" height="15" fill="rgb(246,197,35)" fg:x="2159" fg:w="1"/><text x="22.8692%" y="559.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="22.6192%" y="533" width="0.0105%" height="15" fill="rgb(215,159,26)" fg:x="2159" fg:w="1"/><text x="22.8692%" y="543.50"></text></g><g><title>&lt;chrono::format::DelayedFormat&lt;I&gt; as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="22.6192%" y="517" width="0.0105%" height="15" fill="rgb(212,194,50)" fg:x="2159" fg:w="1"/><text x="22.8692%" y="527.50"></text></g><g><title>chrono::format::format (1 samples, 0.01%)</title><rect x="22.6192%" y="501" width="0.0105%" height="15" fill="rgb(246,132,1)" fg:x="2159" fg:w="1"/><text x="22.8692%" y="511.50"></text></g><g><title>&lt;chrono::format::strftime::StrftimeItems as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="22.6192%" y="485" width="0.0105%" height="15" fill="rgb(217,71,7)" fg:x="2159" fg:w="1"/><text x="22.8692%" y="495.50"></text></g><g><title>&lt;core::str::iter::Chars as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="22.6192%" y="469" width="0.0105%" height="15" fill="rgb(252,59,32)" fg:x="2159" fg:w="1"/><text x="22.8692%" y="479.50"></text></g><g><title>core::str::validations::next_code_point (1 samples, 0.01%)</title><rect x="22.6192%" y="453" width="0.0105%" height="15" fill="rgb(253,204,25)" fg:x="2159" fg:w="1"/><text x="22.8692%" y="463.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (15 samples, 0.16%)</title><rect x="22.4830%" y="885" width="0.1572%" height="15" fill="rgb(232,21,16)" fg:x="2146" fg:w="15"/><text x="22.7330%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (1 samples, 0.01%)</title><rect x="22.6296%" y="869" width="0.0105%" height="15" fill="rgb(248,90,29)" fg:x="2160" fg:w="1"/><text x="22.8796%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (1 samples, 0.01%)</title><rect x="22.6296%" y="853" width="0.0105%" height="15" fill="rgb(249,223,7)" fg:x="2160" fg:w="1"/><text x="22.8796%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="22.6296%" y="837" width="0.0105%" height="15" fill="rgb(231,119,42)" fg:x="2160" fg:w="1"/><text x="22.8796%" y="847.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="22.6296%" y="821" width="0.0105%" height="15" fill="rgb(215,41,35)" fg:x="2160" fg:w="1"/><text x="22.8796%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="22.6296%" y="805" width="0.0105%" height="15" fill="rgb(220,44,45)" fg:x="2160" fg:w="1"/><text x="22.8796%" y="815.50"></text></g><g><title>__GI___clone (16 samples, 0.17%)</title><rect x="22.4830%" y="1253" width="0.1676%" height="15" fill="rgb(253,197,36)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1263.50"></text></g><g><title>start_thread (16 samples, 0.17%)</title><rect x="22.4830%" y="1237" width="0.1676%" height="15" fill="rgb(245,225,54)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (16 samples, 0.17%)</title><rect x="22.4830%" y="1221" width="0.1676%" height="15" fill="rgb(239,94,37)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 0.17%)</title><rect x="22.4830%" y="1205" width="0.1676%" height="15" fill="rgb(242,217,10)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (16 samples, 0.17%)</title><rect x="22.4830%" y="1189" width="0.1676%" height="15" fill="rgb(250,193,7)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (16 samples, 0.17%)</title><rect x="22.4830%" y="1173" width="0.1676%" height="15" fill="rgb(230,104,19)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (16 samples, 0.17%)</title><rect x="22.4830%" y="1157" width="0.1676%" height="15" fill="rgb(230,181,4)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (16 samples, 0.17%)</title><rect x="22.4830%" y="1141" width="0.1676%" height="15" fill="rgb(216,219,49)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1151.50"></text></g><g><title>std::panicking::try (16 samples, 0.17%)</title><rect x="22.4830%" y="1125" width="0.1676%" height="15" fill="rgb(254,144,0)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (16 samples, 0.17%)</title><rect x="22.4830%" y="1109" width="0.1676%" height="15" fill="rgb(205,209,38)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (16 samples, 0.17%)</title><rect x="22.4830%" y="1093" width="0.1676%" height="15" fill="rgb(240,21,42)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (16 samples, 0.17%)</title><rect x="22.4830%" y="1077" width="0.1676%" height="15" fill="rgb(241,132,3)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (16 samples, 0.17%)</title><rect x="22.4830%" y="1061" width="0.1676%" height="15" fill="rgb(225,14,2)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1071.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (16 samples, 0.17%)</title><rect x="22.4830%" y="1045" width="0.1676%" height="15" fill="rgb(210,141,35)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1055.50"></text></g><g><title>futures_lite::future::block_on (16 samples, 0.17%)</title><rect x="22.4830%" y="1029" width="0.1676%" height="15" fill="rgb(251,14,44)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (16 samples, 0.17%)</title><rect x="22.4830%" y="1013" width="0.1676%" height="15" fill="rgb(247,48,18)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (16 samples, 0.17%)</title><rect x="22.4830%" y="997" width="0.1676%" height="15" fill="rgb(225,0,40)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="1007.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (16 samples, 0.17%)</title><rect x="22.4830%" y="981" width="0.1676%" height="15" fill="rgb(221,31,33)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="991.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.17%)</title><rect x="22.4830%" y="965" width="0.1676%" height="15" fill="rgb(237,42,40)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="975.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (16 samples, 0.17%)</title><rect x="22.4830%" y="949" width="0.1676%" height="15" fill="rgb(233,51,29)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="959.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (16 samples, 0.17%)</title><rect x="22.4830%" y="933" width="0.1676%" height="15" fill="rgb(226,58,20)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.17%)</title><rect x="22.4830%" y="917" width="0.1676%" height="15" fill="rgb(208,98,7)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="927.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (16 samples, 0.17%)</title><rect x="22.4830%" y="901" width="0.1676%" height="15" fill="rgb(228,143,44)" fg:x="2146" fg:w="16"/><text x="22.7330%" y="911.50"></text></g><g><title>async_task::runnable::Runnable::run (1 samples, 0.01%)</title><rect x="22.6401%" y="885" width="0.0105%" height="15" fill="rgb(246,55,38)" fg:x="2161" fg:w="1"/><text x="22.8901%" y="895.50"></text></g><g><title>IO_Task_Pool_(1 (22 samples, 0.23%)</title><rect x="22.4306%" y="1269" width="0.2305%" height="15" fill="rgb(247,87,16)" fg:x="2141" fg:w="22"/><text x="22.6806%" y="1279.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked::{{closure}}::META (1 samples, 0.01%)</title><rect x="22.6506%" y="1253" width="0.0105%" height="15" fill="rgb(234,129,42)" fg:x="2162" fg:w="1"/><text x="22.9006%" y="1263.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::Format&lt;tracing_subscriber::fmt::format::Full,T&gt; as tracing_subscriber::fmt::format::FormatEvent&lt;S,N&gt;&gt;::format_event (1 samples, 0.01%)</title><rect x="22.6506%" y="1237" width="0.0105%" height="15" fill="rgb(220,82,16)" fg:x="2162" fg:w="1"/><text x="22.9006%" y="1247.50"></text></g><g><title>cpal::host::alsa::stream_timestamp (1 samples, 0.01%)</title><rect x="22.6716%" y="1237" width="0.0105%" height="15" fill="rgb(211,88,4)" fg:x="2164" fg:w="1"/><text x="22.9216%" y="1247.50"></text></g><g><title>[[heap]] (3 samples, 0.03%)</title><rect x="22.6716%" y="1253" width="0.0314%" height="15" fill="rgb(248,151,21)" fg:x="2164" fg:w="3"/><text x="22.9216%" y="1263.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (2 samples, 0.02%)</title><rect x="22.6820%" y="1237" width="0.0210%" height="15" fill="rgb(238,163,6)" fg:x="2165" fg:w="2"/><text x="22.9320%" y="1247.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (2 samples, 0.02%)</title><rect x="22.6820%" y="1221" width="0.0210%" height="15" fill="rgb(209,183,11)" fg:x="2165" fg:w="2"/><text x="22.9320%" y="1231.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (2 samples, 0.02%)</title><rect x="22.6820%" y="1205" width="0.0210%" height="15" fill="rgb(219,37,20)" fg:x="2165" fg:w="2"/><text x="22.9320%" y="1215.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="22.6820%" y="1189" width="0.0210%" height="15" fill="rgb(210,158,4)" fg:x="2165" fg:w="2"/><text x="22.9320%" y="1199.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="22.7030%" y="1237" width="0.0105%" height="15" fill="rgb(221,167,53)" fg:x="2167" fg:w="1"/><text x="22.9530%" y="1247.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="22.7135%" y="1237" width="0.0105%" height="15" fill="rgb(237,151,45)" fg:x="2168" fg:w="1"/><text x="22.9635%" y="1247.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (1 samples, 0.01%)</title><rect x="22.7239%" y="1237" width="0.0105%" height="15" fill="rgb(231,39,3)" fg:x="2169" fg:w="1"/><text x="22.9739%" y="1247.50"></text></g><g><title>pa_memblock_release (1 samples, 0.01%)</title><rect x="22.7344%" y="1237" width="0.0105%" height="15" fill="rgb(212,167,28)" fg:x="2170" fg:w="1"/><text x="22.9844%" y="1247.50"></text></g><g><title>[anon] (5 samples, 0.05%)</title><rect x="22.7030%" y="1253" width="0.0524%" height="15" fill="rgb(232,178,8)" fg:x="2167" fg:w="5"/><text x="22.9530%" y="1263.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (1 samples, 0.01%)</title><rect x="22.7449%" y="1237" width="0.0105%" height="15" fill="rgb(225,151,20)" fg:x="2171" fg:w="1"/><text x="22.9949%" y="1247.50"></text></g><g><title>[libbevy_dylib-7e0daee3ecabe62f.so] (2 samples, 0.02%)</title><rect x="22.7554%" y="1253" width="0.0210%" height="15" fill="rgb(238,3,37)" fg:x="2172" fg:w="2"/><text x="23.0054%" y="1263.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="22.7554%" y="1237" width="0.0210%" height="15" fill="rgb(251,147,42)" fg:x="2172" fg:w="2"/><text x="23.0054%" y="1247.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="22.7763%" y="1253" width="0.0105%" height="15" fill="rgb(208,173,10)" fg:x="2174" fg:w="1"/><text x="23.0263%" y="1263.50"></text></g><g><title>pa_thread_is_running (1 samples, 0.01%)</title><rect x="22.7763%" y="1237" width="0.0105%" height="15" fill="rgb(246,225,4)" fg:x="2174" fg:w="1"/><text x="23.0263%" y="1247.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (1 samples, 0.01%)</title><rect x="22.7868%" y="1237" width="0.0105%" height="15" fill="rgb(248,102,6)" fg:x="2175" fg:w="1"/><text x="23.0368%" y="1247.50"></text></g><g><title>pa_stream_get_time (1 samples, 0.01%)</title><rect x="22.7973%" y="1237" width="0.0105%" height="15" fill="rgb(232,6,21)" fg:x="2176" fg:w="1"/><text x="23.0473%" y="1247.50"></text></g><g><title>[unknown] (3 samples, 0.03%)</title><rect x="22.7868%" y="1253" width="0.0314%" height="15" fill="rgb(221,179,22)" fg:x="2175" fg:w="3"/><text x="23.0368%" y="1263.50"></text></g><g><title>pa_stream_write_ext_free (1 samples, 0.01%)</title><rect x="22.8078%" y="1237" width="0.0105%" height="15" fill="rgb(252,50,20)" fg:x="2177" fg:w="1"/><text x="23.0578%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="22.8182%" y="981" width="0.0105%" height="15" fill="rgb(222,56,38)" fg:x="2178" fg:w="1"/><text x="23.0682%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (2 samples, 0.02%)</title><rect x="22.8182%" y="997" width="0.0210%" height="15" fill="rgb(206,193,29)" fg:x="2178" fg:w="2"/><text x="23.0682%" y="1007.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="22.8287%" y="981" width="0.0105%" height="15" fill="rgb(239,192,45)" fg:x="2179" fg:w="1"/><text x="23.0787%" y="991.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="22.8287%" y="965" width="0.0105%" height="15" fill="rgb(254,18,36)" fg:x="2179" fg:w="1"/><text x="23.0787%" y="975.50"></text></g><g><title>&lt;core::ops::range::RangeFrom&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="22.8287%" y="949" width="0.0105%" height="15" fill="rgb(221,127,11)" fg:x="2179" fg:w="1"/><text x="23.0787%" y="959.50"></text></g><g><title>&lt;core::ops::range::Range&lt;usize&gt; as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="22.8287%" y="933" width="0.0105%" height="15" fill="rgb(234,146,35)" fg:x="2179" fg:w="1"/><text x="23.0787%" y="943.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="22.8287%" y="917" width="0.0105%" height="15" fill="rgb(254,201,37)" fg:x="2179" fg:w="1"/><text x="23.0787%" y="927.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="22.8287%" y="901" width="0.0105%" height="15" fill="rgb(211,202,23)" fg:x="2179" fg:w="1"/><text x="23.0787%" y="911.50"></text></g><g><title>&lt;alsa::pcm::PCM as alsa::poll::Descriptors&gt;::revents (3 samples, 0.03%)</title><rect x="22.8392%" y="997" width="0.0314%" height="15" fill="rgb(237,91,2)" fg:x="2180" fg:w="3"/><text x="23.0892%" y="1007.50"></text></g><g><title>snd_pcm_poll_descriptors_revents (2 samples, 0.02%)</title><rect x="22.8497%" y="981" width="0.0210%" height="15" fill="rgb(226,228,36)" fg:x="2181" fg:w="2"/><text x="23.0997%" y="991.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="22.8497%" y="965" width="0.0210%" height="15" fill="rgb(213,63,50)" fg:x="2181" fg:w="2"/><text x="23.0997%" y="975.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.01%)</title><rect x="22.8601%" y="949" width="0.0105%" height="15" fill="rgb(235,194,19)" fg:x="2182" fg:w="1"/><text x="23.1101%" y="959.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.01%)</title><rect x="22.8601%" y="933" width="0.0105%" height="15" fill="rgb(207,204,18)" fg:x="2182" fg:w="1"/><text x="23.1101%" y="943.50"></text></g><g><title>pa_stream_get_state (1 samples, 0.01%)</title><rect x="22.8601%" y="917" width="0.0105%" height="15" fill="rgb(248,8,7)" fg:x="2182" fg:w="1"/><text x="23.1101%" y="927.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="22.8706%" y="997" width="0.0105%" height="15" fill="rgb(223,145,47)" fg:x="2183" fg:w="1"/><text x="23.1206%" y="1007.50"></text></g><g><title>alsa::pcm::PCM::avail (1 samples, 0.01%)</title><rect x="22.8706%" y="981" width="0.0105%" height="15" fill="rgb(228,84,11)" fg:x="2183" fg:w="1"/><text x="23.1206%" y="991.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map (1 samples, 0.01%)</title><rect x="22.8811%" y="965" width="0.0105%" height="15" fill="rgb(218,76,45)" fg:x="2184" fg:w="1"/><text x="23.1311%" y="975.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="22.8811%" y="949" width="0.0105%" height="15" fill="rgb(223,80,15)" fg:x="2184" fg:w="1"/><text x="23.1311%" y="959.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="22.8916%" y="933" width="0.0210%" height="15" fill="rgb(219,218,33)" fg:x="2185" fg:w="2"/><text x="23.1416%" y="943.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.02%)</title><rect x="22.8916%" y="917" width="0.0210%" height="15" fill="rgb(208,51,11)" fg:x="2185" fg:w="2"/><text x="23.1416%" y="927.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.02%)</title><rect x="22.8916%" y="901" width="0.0210%" height="15" fill="rgb(229,165,39)" fg:x="2185" fg:w="2"/><text x="23.1416%" y="911.50"></text></g><g><title>pa_stream_writable_size (1 samples, 0.01%)</title><rect x="22.9020%" y="885" width="0.0105%" height="15" fill="rgb(241,100,24)" fg:x="2186" fg:w="1"/><text x="23.1520%" y="895.50"></text></g><g><title>pa_detect_fork (1 samples, 0.01%)</title><rect x="22.9020%" y="869" width="0.0105%" height="15" fill="rgb(228,14,23)" fg:x="2186" fg:w="1"/><text x="23.1520%" y="879.50"></text></g><g><title>__GI___getpid (1 samples, 0.01%)</title><rect x="22.9020%" y="853" width="0.0105%" height="15" fill="rgb(247,116,52)" fg:x="2186" fg:w="1"/><text x="23.1520%" y="863.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (1 samples, 0.01%)</title><rect x="22.9125%" y="933" width="0.0105%" height="15" fill="rgb(216,149,33)" fg:x="2187" fg:w="1"/><text x="23.1625%" y="943.50"></text></g><g><title>pa_stream_get_latency (1 samples, 0.01%)</title><rect x="22.9125%" y="917" width="0.0105%" height="15" fill="rgb(238,142,29)" fg:x="2187" fg:w="1"/><text x="23.1625%" y="927.50"></text></g><g><title>pa_stream_get_time (1 samples, 0.01%)</title><rect x="22.9125%" y="901" width="0.0105%" height="15" fill="rgb(224,83,40)" fg:x="2187" fg:w="1"/><text x="23.1625%" y="911.50"></text></g><g><title>pa_smoother_get (1 samples, 0.01%)</title><rect x="22.9125%" y="885" width="0.0105%" height="15" fill="rgb(234,165,11)" fg:x="2187" fg:w="1"/><text x="23.1625%" y="895.50"></text></g><g><title>alsa::pcm::StatusBuilder::build (6 samples, 0.06%)</title><rect x="22.8811%" y="981" width="0.0629%" height="15" fill="rgb(215,96,23)" fg:x="2184" fg:w="6"/><text x="23.1311%" y="991.50"></text></g><g><title>snd_pcm_status (5 samples, 0.05%)</title><rect x="22.8916%" y="965" width="0.0524%" height="15" fill="rgb(233,179,26)" fg:x="2185" fg:w="5"/><text x="23.1416%" y="975.50"></text></g><g><title>[libasound.so.2.0.0] (5 samples, 0.05%)</title><rect x="22.8916%" y="949" width="0.0524%" height="15" fill="rgb(225,129,33)" fg:x="2185" fg:w="5"/><text x="23.1416%" y="959.50"></text></g><g><title>__clock_gettime_2 (2 samples, 0.02%)</title><rect x="22.9230%" y="933" width="0.0210%" height="15" fill="rgb(237,49,13)" fg:x="2188" fg:w="2"/><text x="23.1730%" y="943.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="22.9335%" y="917" width="0.0105%" height="15" fill="rgb(211,3,31)" fg:x="2189" fg:w="1"/><text x="23.1835%" y="927.50"></text></g><g><title>alsa::pcm::PCM::status (7 samples, 0.07%)</title><rect x="22.8811%" y="997" width="0.0733%" height="15" fill="rgb(216,152,19)" fg:x="2184" fg:w="7"/><text x="23.1311%" y="1007.50"></text></g><g><title>alsa::pcm::StatusBuilder::new (1 samples, 0.01%)</title><rect x="22.9439%" y="981" width="0.0105%" height="15" fill="rgb(251,121,35)" fg:x="2190" fg:w="1"/><text x="23.1939%" y="991.50"></text></g><g><title>alsa::pcm::Status::new (1 samples, 0.01%)</title><rect x="22.9439%" y="965" width="0.0105%" height="15" fill="rgb(210,217,47)" fg:x="2190" fg:w="1"/><text x="23.1939%" y="975.50"></text></g><g><title>snd_pcm_status_sizeof (1 samples, 0.01%)</title><rect x="22.9439%" y="949" width="0.0105%" height="15" fill="rgb(244,116,22)" fg:x="2190" fg:w="1"/><text x="23.1939%" y="959.50"></text></g><g><title>alsa::pcm::Status::get_delay (1 samples, 0.01%)</title><rect x="22.9544%" y="997" width="0.0105%" height="15" fill="rgb(228,17,21)" fg:x="2191" fg:w="1"/><text x="23.2044%" y="1007.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (34 samples, 0.36%)</title><rect x="22.8182%" y="1013" width="0.3562%" height="15" fill="rgb(240,149,34)" fg:x="2178" fg:w="34"/><text x="23.0682%" y="1023.50"></text></g><g><title>alsa::poll::poll (20 samples, 0.21%)</title><rect x="22.9649%" y="997" width="0.2095%" height="15" fill="rgb(208,125,47)" fg:x="2192" fg:w="20"/><text x="23.2149%" y="1007.50"></text></g><g><title>__GI___poll (20 samples, 0.21%)</title><rect x="22.9649%" y="981" width="0.2095%" height="15" fill="rgb(249,186,39)" fg:x="2192" fg:w="20"/><text x="23.2149%" y="991.50"></text></g><g><title>pa_memblock_new (3 samples, 0.03%)</title><rect x="23.1849%" y="885" width="0.0314%" height="15" fill="rgb(240,220,33)" fg:x="2213" fg:w="3"/><text x="23.4349%" y="895.50"></text></g><g><title>pa_memblock_new_pool (3 samples, 0.03%)</title><rect x="23.1849%" y="869" width="0.0314%" height="15" fill="rgb(243,110,23)" fg:x="2213" fg:w="3"/><text x="23.4349%" y="879.50"></text></g><g><title>[libpulsecommon-15.0.so] (3 samples, 0.03%)</title><rect x="23.1849%" y="853" width="0.0314%" height="15" fill="rgb(219,163,46)" fg:x="2213" fg:w="3"/><text x="23.4349%" y="863.50"></text></g><g><title>pa_flist_pop (1 samples, 0.01%)</title><rect x="23.2059%" y="837" width="0.0105%" height="15" fill="rgb(216,126,30)" fg:x="2215" fg:w="1"/><text x="23.4559%" y="847.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="23.2059%" y="821" width="0.0105%" height="15" fill="rgb(208,139,11)" fg:x="2215" fg:w="1"/><text x="23.4559%" y="831.50"></text></g><g><title>[libasound.so.2.0.0] (4 samples, 0.04%)</title><rect x="23.1849%" y="981" width="0.0419%" height="15" fill="rgb(213,118,36)" fg:x="2213" fg:w="4"/><text x="23.4349%" y="991.50"></text></g><g><title>[libasound.so.2.0.0] (4 samples, 0.04%)</title><rect x="23.1849%" y="965" width="0.0419%" height="15" fill="rgb(226,43,17)" fg:x="2213" fg:w="4"/><text x="23.4349%" y="975.50"></text></g><g><title>[libasound.so.2.0.0] (4 samples, 0.04%)</title><rect x="23.1849%" y="949" width="0.0419%" height="15" fill="rgb(254,217,4)" fg:x="2213" fg:w="4"/><text x="23.4349%" y="959.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (4 samples, 0.04%)</title><rect x="23.1849%" y="933" width="0.0419%" height="15" fill="rgb(210,134,47)" fg:x="2213" fg:w="4"/><text x="23.4349%" y="943.50"></text></g><g><title>pa_stream_write (4 samples, 0.04%)</title><rect x="23.1849%" y="917" width="0.0419%" height="15" fill="rgb(237,24,49)" fg:x="2213" fg:w="4"/><text x="23.4349%" y="927.50"></text></g><g><title>pa_stream_write_ext_free (4 samples, 0.04%)</title><rect x="23.1849%" y="901" width="0.0419%" height="15" fill="rgb(251,39,46)" fg:x="2213" fg:w="4"/><text x="23.4349%" y="911.50"></text></g><g><title>pa_pstream_send_memblock (1 samples, 0.01%)</title><rect x="23.2163%" y="885" width="0.0105%" height="15" fill="rgb(251,220,3)" fg:x="2216" fg:w="1"/><text x="23.4663%" y="895.50"></text></g><g><title>pa_flist_pop (1 samples, 0.01%)</title><rect x="23.2163%" y="869" width="0.0105%" height="15" fill="rgb(228,105,12)" fg:x="2216" fg:w="1"/><text x="23.4663%" y="879.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="23.2163%" y="853" width="0.0105%" height="15" fill="rgb(215,196,1)" fg:x="2216" fg:w="1"/><text x="23.4663%" y="863.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (6 samples, 0.06%)</title><rect x="23.1744%" y="997" width="0.0629%" height="15" fill="rgb(214,33,39)" fg:x="2212" fg:w="6"/><text x="23.4244%" y="1007.50"></text></g><g><title>snd_pcm_writei (1 samples, 0.01%)</title><rect x="23.2268%" y="981" width="0.0105%" height="15" fill="rgb(220,19,52)" fg:x="2217" fg:w="1"/><text x="23.4768%" y="991.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (9 samples, 0.09%)</title><rect x="23.2373%" y="949" width="0.0943%" height="15" fill="rgb(221,78,38)" fg:x="2218" fg:w="9"/><text x="23.4873%" y="959.50"></text></g><g><title>&lt;rodio::dynamic_mixer::DynamicMixer&lt;S&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="23.2687%" y="933" width="0.0629%" height="15" fill="rgb(253,30,16)" fg:x="2221" fg:w="6"/><text x="23.5187%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (3 samples, 0.03%)</title><rect x="23.3002%" y="917" width="0.0314%" height="15" fill="rgb(242,65,0)" fg:x="2224" fg:w="3"/><text x="23.5502%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.03%)</title><rect x="23.3002%" y="901" width="0.0314%" height="15" fill="rgb(235,201,12)" fg:x="2224" fg:w="3"/><text x="23.5502%" y="911.50"></text></g><g><title>cpal_alsa_out (65 samples, 0.68%)</title><rect x="22.6611%" y="1269" width="0.6810%" height="15" fill="rgb(233,161,9)" fg:x="2163" fg:w="65"/><text x="22.9111%" y="1279.50"></text></g><g><title>__GI___clone (50 samples, 0.52%)</title><rect x="22.8182%" y="1253" width="0.5238%" height="15" fill="rgb(241,207,41)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1263.50"></text></g><g><title>start_thread (50 samples, 0.52%)</title><rect x="22.8182%" y="1237" width="0.5238%" height="15" fill="rgb(212,69,46)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (50 samples, 0.52%)</title><rect x="22.8182%" y="1221" width="0.5238%" height="15" fill="rgb(239,69,45)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50 samples, 0.52%)</title><rect x="22.8182%" y="1205" width="0.5238%" height="15" fill="rgb(242,117,48)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (50 samples, 0.52%)</title><rect x="22.8182%" y="1189" width="0.5238%" height="15" fill="rgb(228,41,36)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (50 samples, 0.52%)</title><rect x="22.8182%" y="1173" width="0.5238%" height="15" fill="rgb(212,3,32)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (50 samples, 0.52%)</title><rect x="22.8182%" y="1157" width="0.5238%" height="15" fill="rgb(233,41,49)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (50 samples, 0.52%)</title><rect x="22.8182%" y="1141" width="0.5238%" height="15" fill="rgb(252,170,49)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1151.50"></text></g><g><title>std::panicking::try (50 samples, 0.52%)</title><rect x="22.8182%" y="1125" width="0.5238%" height="15" fill="rgb(229,53,26)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (50 samples, 0.52%)</title><rect x="22.8182%" y="1109" width="0.5238%" height="15" fill="rgb(217,157,12)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (50 samples, 0.52%)</title><rect x="22.8182%" y="1093" width="0.5238%" height="15" fill="rgb(227,17,9)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (50 samples, 0.52%)</title><rect x="22.8182%" y="1077" width="0.5238%" height="15" fill="rgb(218,84,12)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (50 samples, 0.52%)</title><rect x="22.8182%" y="1061" width="0.5238%" height="15" fill="rgb(212,79,24)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1071.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (50 samples, 0.52%)</title><rect x="22.8182%" y="1045" width="0.5238%" height="15" fill="rgb(217,222,37)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1055.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (50 samples, 0.52%)</title><rect x="22.8182%" y="1029" width="0.5238%" height="15" fill="rgb(246,208,8)" fg:x="2178" fg:w="50"/><text x="23.0682%" y="1039.50"></text></g><g><title>cpal::host::alsa::process_output (16 samples, 0.17%)</title><rect x="23.1744%" y="1013" width="0.1676%" height="15" fill="rgb(244,133,10)" fg:x="2212" fg:w="16"/><text x="23.4244%" y="1023.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (10 samples, 0.10%)</title><rect x="23.2373%" y="997" width="0.1048%" height="15" fill="rgb(209,219,41)" fg:x="2218" fg:w="10"/><text x="23.4873%" y="1007.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (10 samples, 0.10%)</title><rect x="23.2373%" y="981" width="0.1048%" height="15" fill="rgb(253,175,45)" fg:x="2218" fg:w="10"/><text x="23.4873%" y="991.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (10 samples, 0.10%)</title><rect x="23.2373%" y="965" width="0.1048%" height="15" fill="rgb(235,100,37)" fg:x="2218" fg:w="10"/><text x="23.4873%" y="975.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (1 samples, 0.01%)</title><rect x="23.3316%" y="949" width="0.0105%" height="15" fill="rgb(225,87,19)" fg:x="2227" fg:w="1"/><text x="23.5816%" y="959.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="24.2221%" y="1253" width="0.0105%" height="15" fill="rgb(217,152,17)" fg:x="2312" fg:w="1"/><text x="24.4721%" y="1263.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynEq&gt;::dyn_eq (1 samples, 0.01%)</title><rect x="24.2326%" y="1253" width="0.0105%" height="15" fill="rgb(235,72,13)" fg:x="2313" fg:w="1"/><text x="24.4826%" y="1263.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="24.2431%" y="1253" width="0.0105%" height="15" fill="rgb(233,140,18)" fg:x="2314" fg:w="1"/><text x="24.4931%" y="1263.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_begin_render_pass (2 samples, 0.02%)</title><rect x="24.2535%" y="1253" width="0.0210%" height="15" fill="rgb(207,212,28)" fg:x="2315" fg:w="2"/><text x="24.5035%" y="1263.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::change (1 samples, 0.01%)</title><rect x="24.2745%" y="1253" width="0.0105%" height="15" fill="rgb(220,130,25)" fg:x="2317" fg:w="1"/><text x="24.5245%" y="1263.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.2850%" y="1237" width="0.0105%" height="15" fill="rgb(205,55,34)" fg:x="2318" fg:w="1"/><text x="24.5350%" y="1247.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="24.2954%" y="1237" width="0.0210%" height="15" fill="rgb(237,54,35)" fg:x="2319" fg:w="2"/><text x="24.5454%" y="1247.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="24.3164%" y="1237" width="0.0105%" height="15" fill="rgb(208,67,23)" fg:x="2321" fg:w="1"/><text x="24.5664%" y="1247.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="24.3269%" y="1237" width="0.0105%" height="15" fill="rgb(206,207,50)" fg:x="2322" fg:w="1"/><text x="24.5769%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.3373%" y="1237" width="0.0105%" height="15" fill="rgb(213,211,42)" fg:x="2323" fg:w="1"/><text x="24.5873%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (5 samples, 0.05%)</title><rect x="24.3478%" y="1237" width="0.0524%" height="15" fill="rgb(252,197,50)" fg:x="2324" fg:w="5"/><text x="24.5978%" y="1247.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="24.3897%" y="1221" width="0.0105%" height="15" fill="rgb(251,211,41)" fg:x="2328" fg:w="1"/><text x="24.6397%" y="1231.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="24.3897%" y="1205" width="0.0105%" height="15" fill="rgb(229,211,5)" fg:x="2328" fg:w="1"/><text x="24.6397%" y="1215.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="24.3897%" y="1189" width="0.0105%" height="15" fill="rgb(239,36,31)" fg:x="2328" fg:w="1"/><text x="24.6397%" y="1199.50"></text></g><g><title>bevy_ecs_tilemap::chunk::update_chunk_mesh (1 samples, 0.01%)</title><rect x="24.3897%" y="1173" width="0.0105%" height="15" fill="rgb(248,67,31)" fg:x="2328" fg:w="1"/><text x="24.6397%" y="1183.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="24.4002%" y="1237" width="0.0105%" height="15" fill="rgb(249,55,44)" fg:x="2329" fg:w="1"/><text x="24.6502%" y="1247.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.4107%" y="1237" width="0.0105%" height="15" fill="rgb(216,82,12)" fg:x="2330" fg:w="1"/><text x="24.6607%" y="1247.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::buffer_byte_len (1 samples, 0.01%)</title><rect x="24.4212%" y="1237" width="0.0105%" height="15" fill="rgb(242,174,1)" fg:x="2331" fg:w="1"/><text x="24.6712%" y="1247.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::resource_type (1 samples, 0.01%)</title><rect x="24.4316%" y="1237" width="0.0105%" height="15" fill="rgb(208,120,29)" fg:x="2332" fg:w="1"/><text x="24.6816%" y="1247.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::iter (1 samples, 0.01%)</title><rect x="24.4421%" y="1237" width="0.0105%" height="15" fill="rgb(221,105,43)" fg:x="2333" fg:w="1"/><text x="24.6921%" y="1247.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::render_resources_len (1 samples, 0.01%)</title><rect x="24.4526%" y="1237" width="0.0105%" height="15" fill="rgb(234,124,22)" fg:x="2334" fg:w="1"/><text x="24.7026%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (2 samples, 0.02%)</title><rect x="24.4631%" y="1237" width="0.0210%" height="15" fill="rgb(212,23,30)" fg:x="2335" fg:w="2"/><text x="24.7131%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="24.4840%" y="1237" width="0.0105%" height="15" fill="rgb(219,122,53)" fg:x="2337" fg:w="1"/><text x="24.7340%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="24.4945%" y="1237" width="0.0419%" height="15" fill="rgb(248,84,24)" fg:x="2338" fg:w="4"/><text x="24.7445%" y="1247.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (4 samples, 0.04%)</title><rect x="24.4945%" y="1221" width="0.0419%" height="15" fill="rgb(245,115,18)" fg:x="2338" fg:w="4"/><text x="24.7445%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="24.5364%" y="1237" width="0.0105%" height="15" fill="rgb(227,176,51)" fg:x="2342" fg:w="1"/><text x="24.7864%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (1 samples, 0.01%)</title><rect x="24.5469%" y="1237" width="0.0105%" height="15" fill="rgb(229,63,42)" fg:x="2343" fg:w="1"/><text x="24.7969%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (3 samples, 0.03%)</title><rect x="24.5574%" y="1237" width="0.0314%" height="15" fill="rgb(247,202,24)" fg:x="2344" fg:w="3"/><text x="24.8074%" y="1247.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (1 samples, 0.01%)</title><rect x="24.5783%" y="1221" width="0.0105%" height="15" fill="rgb(244,173,20)" fg:x="2346" fg:w="1"/><text x="24.8283%" y="1231.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="24.5888%" y="1237" width="0.0105%" height="15" fill="rgb(242,81,47)" fg:x="2347" fg:w="1"/><text x="24.8388%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="24.5993%" y="1237" width="0.0105%" height="15" fill="rgb(231,185,54)" fg:x="2348" fg:w="1"/><text x="24.8493%" y="1247.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="24.6097%" y="1237" width="0.0105%" height="15" fill="rgb(243,55,32)" fg:x="2349" fg:w="1"/><text x="24.8597%" y="1247.50"></text></g><g><title>[libX11.so.6.4.0] (3 samples, 0.03%)</title><rect x="24.6202%" y="1237" width="0.0314%" height="15" fill="rgb(208,167,19)" fg:x="2350" fg:w="3"/><text x="24.8702%" y="1247.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="24.6517%" y="1221" width="0.0105%" height="15" fill="rgb(231,72,35)" fg:x="2353" fg:w="1"/><text x="24.9017%" y="1231.50"></text></g><g><title>core::fmt::num::&lt;impl core::fmt::Debug for u64&gt;::fmt (1 samples, 0.01%)</title><rect x="24.6517%" y="1205" width="0.0105%" height="15" fill="rgb(250,173,51)" fg:x="2353" fg:w="1"/><text x="24.9017%" y="1215.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="24.6621%" y="1221" width="0.0105%" height="15" fill="rgb(209,5,22)" fg:x="2354" fg:w="1"/><text x="24.9121%" y="1231.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="24.6621%" y="1205" width="0.0105%" height="15" fill="rgb(250,174,19)" fg:x="2354" fg:w="1"/><text x="24.9121%" y="1215.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::get_output (1 samples, 0.01%)</title><rect x="24.6621%" y="1189" width="0.0105%" height="15" fill="rgb(217,3,49)" fg:x="2354" fg:w="1"/><text x="24.9121%" y="1199.50"></text></g><g><title>async_executor::Executor::try_tick (8 samples, 0.08%)</title><rect x="24.6726%" y="1221" width="0.0838%" height="15" fill="rgb(218,225,5)" fg:x="2355" fg:w="8"/><text x="24.9226%" y="1231.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="24.7355%" y="1205" width="0.0210%" height="15" fill="rgb(236,89,11)" fg:x="2361" fg:w="2"/><text x="24.9855%" y="1215.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (14 samples, 0.15%)</title><rect x="24.7564%" y="1221" width="0.1467%" height="15" fill="rgb(206,33,28)" fg:x="2363" fg:w="14"/><text x="25.0064%" y="1231.50"></text></g><g><title>async_executor::Executor::try_tick (7 samples, 0.07%)</title><rect x="24.8298%" y="1205" width="0.0733%" height="15" fill="rgb(241,56,42)" fg:x="2370" fg:w="7"/><text x="25.0798%" y="1215.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (7 samples, 0.07%)</title><rect x="24.8298%" y="1189" width="0.0733%" height="15" fill="rgb(222,44,11)" fg:x="2370" fg:w="7"/><text x="25.0798%" y="1199.50"></text></g><g><title>[libbevy_dylib-7e0daee3ecabe62f.so] (46 samples, 0.48%)</title><rect x="24.6517%" y="1237" width="0.4819%" height="15" fill="rgb(234,111,20)" fg:x="2353" fg:w="46"/><text x="24.9017%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (22 samples, 0.23%)</title><rect x="24.9031%" y="1221" width="0.2305%" height="15" fill="rgb(237,77,6)" fg:x="2377" fg:w="22"/><text x="25.1531%" y="1231.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14 samples, 0.15%)</title><rect x="24.9869%" y="1205" width="0.1467%" height="15" fill="rgb(235,111,23)" fg:x="2385" fg:w="14"/><text x="25.2369%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (24 samples, 0.25%)</title><rect x="25.1336%" y="1237" width="0.2514%" height="15" fill="rgb(251,135,29)" fg:x="2399" fg:w="24"/><text x="25.3836%" y="1247.50"></text></g><g><title>_XGetRequest (1 samples, 0.01%)</title><rect x="25.3850%" y="1237" width="0.0105%" height="15" fill="rgb(217,57,1)" fg:x="2423" fg:w="1"/><text x="25.6350%" y="1247.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="25.3955%" y="1237" width="0.0105%" height="15" fill="rgb(249,119,31)" fg:x="2424" fg:w="1"/><text x="25.6455%" y="1247.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="25.4060%" y="1237" width="0.0105%" height="15" fill="rgb(233,164,33)" fg:x="2425" fg:w="1"/><text x="25.6560%" y="1247.50"></text></g><g><title>_int_free (6 samples, 0.06%)</title><rect x="25.4164%" y="1237" width="0.0629%" height="15" fill="rgb(250,217,43)" fg:x="2426" fg:w="6"/><text x="25.6664%" y="1247.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="25.4793%" y="1237" width="0.0105%" height="15" fill="rgb(232,154,50)" fg:x="2432" fg:w="1"/><text x="25.7293%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="25.4898%" y="1237" width="0.0314%" height="15" fill="rgb(227,190,8)" fg:x="2433" fg:w="3"/><text x="25.7398%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="25.4898%" y="1221" width="0.0314%" height="15" fill="rgb(209,217,32)" fg:x="2433" fg:w="3"/><text x="25.7398%" y="1231.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (3 samples, 0.03%)</title><rect x="25.4898%" y="1205" width="0.0314%" height="15" fill="rgb(243,203,50)" fg:x="2433" fg:w="3"/><text x="25.7398%" y="1215.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (3 samples, 0.03%)</title><rect x="25.4898%" y="1189" width="0.0314%" height="15" fill="rgb(232,152,27)" fg:x="2433" fg:w="3"/><text x="25.7398%" y="1199.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.01%)</title><rect x="25.5212%" y="1237" width="0.0105%" height="15" fill="rgb(240,34,29)" fg:x="2436" fg:w="1"/><text x="25.7712%" y="1247.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key::{{closure}} (1 samples, 0.01%)</title><rect x="25.5212%" y="1221" width="0.0105%" height="15" fill="rgb(215,185,52)" fg:x="2436" fg:w="1"/><text x="25.7712%" y="1231.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system::{{closure}} (1 samples, 0.01%)</title><rect x="25.5212%" y="1205" width="0.0105%" height="15" fill="rgb(240,89,49)" fg:x="2436" fg:w="1"/><text x="25.7712%" y="1215.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="25.5317%" y="1237" width="0.0105%" height="15" fill="rgb(225,12,52)" fg:x="2437" fg:w="1"/><text x="25.7817%" y="1247.50"></text></g><g><title>async_executor::Executor::state (2 samples, 0.02%)</title><rect x="25.5422%" y="1237" width="0.0210%" height="15" fill="rgb(239,128,45)" fg:x="2438" fg:w="2"/><text x="25.7922%" y="1247.50"></text></g><g><title>async_executor::Executor::try_tick (9 samples, 0.09%)</title><rect x="25.5631%" y="1237" width="0.0943%" height="15" fill="rgb(211,78,47)" fg:x="2440" fg:w="9"/><text x="25.8131%" y="1247.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (7 samples, 0.07%)</title><rect x="25.6574%" y="1237" width="0.0733%" height="15" fill="rgb(232,31,21)" fg:x="2449" fg:w="7"/><text x="25.9074%" y="1247.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="25.7307%" y="1237" width="0.0105%" height="15" fill="rgb(222,168,14)" fg:x="2456" fg:w="1"/><text x="25.9807%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="25.7307%" y="1221" width="0.0105%" height="15" fill="rgb(209,128,24)" fg:x="2456" fg:w="1"/><text x="25.9807%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="25.7307%" y="1205" width="0.0105%" height="15" fill="rgb(249,35,13)" fg:x="2456" fg:w="1"/><text x="25.9807%" y="1215.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="25.7412%" y="1237" width="0.0210%" height="15" fill="rgb(218,7,2)" fg:x="2457" fg:w="2"/><text x="25.9912%" y="1247.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="25.7517%" y="1221" width="0.0105%" height="15" fill="rgb(238,107,27)" fg:x="2458" fg:w="1"/><text x="26.0017%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="25.7517%" y="1205" width="0.0105%" height="15" fill="rgb(217,88,38)" fg:x="2458" fg:w="1"/><text x="26.0017%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="25.7517%" y="1189" width="0.0105%" height="15" fill="rgb(230,207,0)" fg:x="2458" fg:w="1"/><text x="26.0017%" y="1199.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="25.7517%" y="1173" width="0.0105%" height="15" fill="rgb(249,64,54)" fg:x="2458" fg:w="1"/><text x="26.0017%" y="1183.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="25.7517%" y="1157" width="0.0105%" height="15" fill="rgb(231,7,11)" fg:x="2458" fg:w="1"/><text x="26.0017%" y="1167.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="25.7517%" y="1141" width="0.0105%" height="15" fill="rgb(205,149,21)" fg:x="2458" fg:w="1"/><text x="26.0017%" y="1151.50"></text></g><g><title>bevy_core::time::timer::Timer::tick (2 samples, 0.02%)</title><rect x="25.7622%" y="1237" width="0.0210%" height="15" fill="rgb(215,126,34)" fg:x="2459" fg:w="2"/><text x="26.0122%" y="1247.50"></text></g><g><title>bevy_core::time::stopwatch::Stopwatch::tick (1 samples, 0.01%)</title><rect x="25.7727%" y="1221" width="0.0105%" height="15" fill="rgb(241,132,45)" fg:x="2460" fg:w="1"/><text x="26.0227%" y="1231.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (1 samples, 0.01%)</title><rect x="25.7831%" y="1237" width="0.0105%" height="15" fill="rgb(252,69,32)" fg:x="2461" fg:w="1"/><text x="26.0331%" y="1247.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (1 samples, 0.01%)</title><rect x="25.7936%" y="1237" width="0.0105%" height="15" fill="rgb(232,204,19)" fg:x="2462" fg:w="1"/><text x="26.0436%" y="1247.50"></text></g><g><title>bevy_render::render_graph::node_slot::ResourceSlots::get (1 samples, 0.01%)</title><rect x="25.8041%" y="1237" width="0.0105%" height="15" fill="rgb(249,15,47)" fg:x="2463" fg:w="1"/><text x="26.0541%" y="1247.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (1 samples, 0.01%)</title><rect x="25.8146%" y="1237" width="0.0105%" height="15" fill="rgb(209,227,23)" fg:x="2464" fg:w="1"/><text x="26.0646%" y="1247.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (2 samples, 0.02%)</title><rect x="25.8250%" y="1237" width="0.0210%" height="15" fill="rgb(248,92,24)" fg:x="2465" fg:w="2"/><text x="26.0750%" y="1247.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlas as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::iter (1 samples, 0.01%)</title><rect x="25.8355%" y="1221" width="0.0105%" height="15" fill="rgb(247,59,2)" fg:x="2466" fg:w="1"/><text x="26.0855%" y="1231.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (1 samples, 0.01%)</title><rect x="25.8460%" y="1237" width="0.0105%" height="15" fill="rgb(221,30,5)" fg:x="2467" fg:w="1"/><text x="26.0960%" y="1247.50"></text></g><g><title>core::fmt::write (1 samples, 0.01%)</title><rect x="25.8565%" y="1237" width="0.0105%" height="15" fill="rgb(208,108,53)" fg:x="2468" fg:w="1"/><text x="26.1065%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::draw::RenderCommand]&gt; (1 samples, 0.01%)</title><rect x="25.8669%" y="1237" width="0.0105%" height="15" fill="rgb(211,183,26)" fg:x="2469" fg:w="1"/><text x="26.1169%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;async_channel::Sender&lt;()&gt;::send::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="25.8774%" y="1237" width="0.0105%" height="15" fill="rgb(232,132,4)" fg:x="2470" fg:w="1"/><text x="26.1274%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Sender&lt;()&gt;::send::{{closure}}&gt; (1 samples, 0.01%)</title><rect x="25.8774%" y="1221" width="0.0105%" height="15" fill="rgb(253,128,37)" fg:x="2470" fg:w="1"/><text x="26.1274%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="25.8879%" y="1237" width="0.0105%" height="15" fill="rgb(221,58,24)" fg:x="2471" fg:w="1"/><text x="26.1379%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(usize,std::collections::hash::set::HashSet&lt;alloc::boxed::Box&lt;dyn bevy_ecs::schedule::label::SystemLabel&gt;,ahash::random_state::RandomState&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="25.8984%" y="1237" width="0.0105%" height="15" fill="rgb(230,54,45)" fg:x="2472" fg:w="1"/><text x="26.1484%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="25.8984%" y="1221" width="0.0105%" height="15" fill="rgb(254,21,18)" fg:x="2472" fg:w="1"/><text x="26.1484%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.01%)</title><rect x="25.8984%" y="1205" width="0.0105%" height="15" fill="rgb(221,108,0)" fg:x="2472" fg:w="1"/><text x="26.1484%" y="1215.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="25.9089%" y="1237" width="0.0105%" height="15" fill="rgb(206,95,1)" fg:x="2473" fg:w="1"/><text x="26.1589%" y="1247.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::recv (1 samples, 0.01%)</title><rect x="25.9193%" y="1237" width="0.0105%" height="15" fill="rgb(237,52,5)" fg:x="2474" fg:w="1"/><text x="26.1693%" y="1247.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (2 samples, 0.02%)</title><rect x="25.9298%" y="1237" width="0.0210%" height="15" fill="rgb(218,150,34)" fg:x="2475" fg:w="2"/><text x="26.1798%" y="1247.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (1 samples, 0.01%)</title><rect x="25.9508%" y="1237" width="0.0105%" height="15" fill="rgb(235,194,28)" fg:x="2477" fg:w="1"/><text x="26.2008%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="25.9508%" y="1221" width="0.0105%" height="15" fill="rgb(245,92,18)" fg:x="2477" fg:w="1"/><text x="26.2008%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="25.9508%" y="1205" width="0.0105%" height="15" fill="rgb(253,203,53)" fg:x="2477" fg:w="1"/><text x="26.2008%" y="1215.50"></text></g><g><title>fgetc (6 samples, 0.06%)</title><rect x="25.9612%" y="1237" width="0.0629%" height="15" fill="rgb(249,185,47)" fg:x="2478" fg:w="6"/><text x="26.2112%" y="1247.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (1 samples, 0.01%)</title><rect x="26.0241%" y="1237" width="0.0105%" height="15" fill="rgb(252,194,52)" fg:x="2484" fg:w="1"/><text x="26.2741%" y="1247.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_fence (1 samples, 0.01%)</title><rect x="26.0346%" y="1237" width="0.0105%" height="15" fill="rgb(210,53,36)" fg:x="2485" fg:w="1"/><text x="26.2846%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="26.0450%" y="1237" width="0.0105%" height="15" fill="rgb(237,37,25)" fg:x="2486" fg:w="1"/><text x="26.2950%" y="1247.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="26.0555%" y="1237" width="0.0210%" height="15" fill="rgb(242,116,27)" fg:x="2487" fg:w="2"/><text x="26.3055%" y="1247.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="26.0555%" y="1221" width="0.0210%" height="15" fill="rgb(213,185,26)" fg:x="2487" fg:w="2"/><text x="26.3055%" y="1231.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="26.0765%" y="1237" width="0.0105%" height="15" fill="rgb(225,204,8)" fg:x="2489" fg:w="1"/><text x="26.3265%" y="1247.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::unlock_shared_slow (1 samples, 0.01%)</title><rect x="26.0870%" y="1237" width="0.0105%" height="15" fill="rgb(254,111,37)" fg:x="2490" fg:w="1"/><text x="26.3370%" y="1247.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_one (1 samples, 0.01%)</title><rect x="26.0870%" y="1221" width="0.0105%" height="15" fill="rgb(242,35,9)" fg:x="2490" fg:w="1"/><text x="26.3370%" y="1231.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.01%)</title><rect x="26.0870%" y="1205" width="0.0105%" height="15" fill="rgb(232,138,49)" fg:x="2490" fg:w="1"/><text x="26.3370%" y="1215.50"></text></g><g><title>pathfinding::directed::astar::astar (2 samples, 0.02%)</title><rect x="26.0974%" y="1237" width="0.0210%" height="15" fill="rgb(247,56,4)" fg:x="2491" fg:w="2"/><text x="26.3474%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (7 samples, 0.07%)</title><rect x="26.1184%" y="1237" width="0.0733%" height="15" fill="rgb(226,179,17)" fg:x="2493" fg:w="7"/><text x="26.3684%" y="1247.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="26.1917%" y="1237" width="0.0105%" height="15" fill="rgb(216,163,45)" fg:x="2500" fg:w="1"/><text x="26.4417%" y="1247.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (1 samples, 0.01%)</title><rect x="26.2022%" y="1237" width="0.0105%" height="15" fill="rgb(211,157,3)" fg:x="2501" fg:w="1"/><text x="26.4522%" y="1247.50"></text></g><g><title>wgpu_core::command::query::QueryResetMap&lt;B&gt;::reset_queries (1 samples, 0.01%)</title><rect x="26.2127%" y="1237" width="0.0105%" height="15" fill="rgb(234,44,20)" fg:x="2502" fg:w="1"/><text x="26.4627%" y="1247.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (2 samples, 0.02%)</title><rect x="26.2232%" y="1237" width="0.0210%" height="15" fill="rgb(254,138,23)" fg:x="2503" fg:w="2"/><text x="26.4732%" y="1247.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_mapped (1 samples, 0.01%)</title><rect x="26.2441%" y="1237" width="0.0105%" height="15" fill="rgb(206,119,39)" fg:x="2505" fg:w="1"/><text x="26.4941%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::is_empty (1 samples, 0.01%)</title><rect x="26.2441%" y="1221" width="0.0105%" height="15" fill="rgb(231,105,52)" fg:x="2505" fg:w="1"/><text x="26.4941%" y="1231.50"></text></g><g><title>wgpu_core::device::life::SuspectedResources::clear (2 samples, 0.02%)</title><rect x="26.2546%" y="1237" width="0.0210%" height="15" fill="rgb(250,20,5)" fg:x="2506" fg:w="2"/><text x="26.5046%" y="1247.50"></text></g><g><title>wgpu_core::device::unmap_buffer (1 samples, 0.01%)</title><rect x="26.2755%" y="1237" width="0.0105%" height="15" fill="rgb(215,198,30)" fg:x="2508" fg:w="1"/><text x="26.5255%" y="1247.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (1 samples, 0.01%)</title><rect x="26.2755%" y="1221" width="0.0105%" height="15" fill="rgb(246,142,8)" fg:x="2508" fg:w="1"/><text x="26.5255%" y="1231.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (4 samples, 0.04%)</title><rect x="26.2860%" y="1237" width="0.0419%" height="15" fill="rgb(243,26,38)" fg:x="2509" fg:w="4"/><text x="26.5360%" y="1247.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (3 samples, 0.03%)</title><rect x="26.3279%" y="1237" width="0.0314%" height="15" fill="rgb(205,133,28)" fg:x="2513" fg:w="3"/><text x="26.5779%" y="1247.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (3 samples, 0.03%)</title><rect x="26.3279%" y="1221" width="0.0314%" height="15" fill="rgb(212,34,0)" fg:x="2513" fg:w="3"/><text x="26.5779%" y="1231.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (3 samples, 0.03%)</title><rect x="26.3279%" y="1205" width="0.0314%" height="15" fill="rgb(251,226,22)" fg:x="2513" fg:w="3"/><text x="26.5779%" y="1215.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (1 samples, 0.01%)</title><rect x="26.3594%" y="1237" width="0.0105%" height="15" fill="rgb(252,119,9)" fg:x="2516" fg:w="1"/><text x="26.6094%" y="1247.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (2 samples, 0.02%)</title><rect x="26.3698%" y="1237" width="0.0210%" height="15" fill="rgb(213,150,50)" fg:x="2517" fg:w="2"/><text x="26.6198%" y="1247.50"></text></g><g><title>[[heap]] (204 samples, 2.14%)</title><rect x="24.2850%" y="1253" width="2.1372%" height="15" fill="rgb(212,24,39)" fg:x="2318" fg:w="204"/><text x="24.5350%" y="1263.50">[..</text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::change (3 samples, 0.03%)</title><rect x="26.3908%" y="1237" width="0.0314%" height="15" fill="rgb(213,46,39)" fg:x="2519" fg:w="3"/><text x="26.6408%" y="1247.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (18 samples, 0.19%)</title><rect x="26.4222%" y="1237" width="0.1886%" height="15" fill="rgb(239,106,12)" fg:x="2522" fg:w="18"/><text x="26.6722%" y="1247.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (4 samples, 0.04%)</title><rect x="26.5689%" y="1221" width="0.0419%" height="15" fill="rgb(249,229,21)" fg:x="2536" fg:w="4"/><text x="26.8189%" y="1231.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (4 samples, 0.04%)</title><rect x="26.5689%" y="1205" width="0.0419%" height="15" fill="rgb(212,158,3)" fg:x="2536" fg:w="4"/><text x="26.8189%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;[I]&gt; as core::iter::traits::collect::FromIterator&lt;I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="26.6108%" y="1237" width="0.0105%" height="15" fill="rgb(253,26,48)" fg:x="2540" fg:w="1"/><text x="26.8608%" y="1247.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="26.6213%" y="1237" width="0.0105%" height="15" fill="rgb(238,178,20)" fg:x="2541" fg:w="1"/><text x="26.8713%" y="1247.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::Extend&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="26.6213%" y="1221" width="0.0105%" height="15" fill="rgb(208,86,15)" fg:x="2541" fg:w="1"/><text x="26.8713%" y="1231.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="26.6213%" y="1205" width="0.0105%" height="15" fill="rgb(239,42,53)" fg:x="2541" fg:w="1"/><text x="26.8713%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="26.6213%" y="1189" width="0.0105%" height="15" fill="rgb(245,226,8)" fg:x="2541" fg:w="1"/><text x="26.8713%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="26.6213%" y="1173" width="0.0105%" height="15" fill="rgb(216,176,32)" fg:x="2541" fg:w="1"/><text x="26.8713%" y="1183.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="26.6213%" y="1157" width="0.0105%" height="15" fill="rgb(231,186,21)" fg:x="2541" fg:w="1"/><text x="26.8713%" y="1167.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start::{{closure}} (1 samples, 0.01%)</title><rect x="26.6213%" y="1141" width="0.0105%" height="15" fill="rgb(205,95,49)" fg:x="2541" fg:w="1"/><text x="26.8713%" y="1151.50"></text></g><g><title>&lt;ash::device::Device as ash::device::DeviceV1_0&gt;::fp_v1_0 (1 samples, 0.01%)</title><rect x="26.6317%" y="1237" width="0.0105%" height="15" fill="rgb(217,145,8)" fg:x="2542" fg:w="1"/><text x="26.8817%" y="1247.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (9 samples, 0.09%)</title><rect x="26.6422%" y="1237" width="0.0943%" height="15" fill="rgb(239,144,48)" fg:x="2543" fg:w="9"/><text x="26.8922%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="26.7365%" y="1237" width="0.0105%" height="15" fill="rgb(214,189,23)" fg:x="2552" fg:w="1"/><text x="26.9865%" y="1247.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1 samples, 0.01%)</title><rect x="26.7365%" y="1221" width="0.0105%" height="15" fill="rgb(229,157,17)" fg:x="2552" fg:w="1"/><text x="26.9865%" y="1231.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="26.7470%" y="1237" width="0.0105%" height="15" fill="rgb(230,5,48)" fg:x="2553" fg:w="1"/><text x="26.9970%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.16%)</title><rect x="26.7575%" y="1237" width="0.1572%" height="15" fill="rgb(224,156,48)" fg:x="2554" fg:w="15"/><text x="27.0075%" y="1247.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="26.9146%" y="1237" width="0.0105%" height="15" fill="rgb(223,14,29)" fg:x="2569" fg:w="1"/><text x="27.1646%" y="1247.50"></text></g><g><title>__GI__IO_default_xsputn (1 samples, 0.01%)</title><rect x="26.9251%" y="1237" width="0.0105%" height="15" fill="rgb(229,96,36)" fg:x="2570" fg:w="1"/><text x="27.1751%" y="1247.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="26.9356%" y="1237" width="0.0105%" height="15" fill="rgb(231,102,53)" fg:x="2571" fg:w="1"/><text x="27.1856%" y="1247.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="26.9460%" y="1237" width="0.0105%" height="15" fill="rgb(210,77,38)" fg:x="2572" fg:w="1"/><text x="27.1960%" y="1247.50"></text></g><g><title>__futex_abstimed_wait_common64 (1 samples, 0.01%)</title><rect x="26.9565%" y="1237" width="0.0105%" height="15" fill="rgb(235,131,6)" fg:x="2573" fg:w="1"/><text x="27.2065%" y="1247.50"></text></g><g><title>_dl_close (1 samples, 0.01%)</title><rect x="26.9670%" y="1237" width="0.0105%" height="15" fill="rgb(252,55,38)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1247.50"></text></g><g><title>glVDPAURegisterVideoSurfaceWithPictureStructureNV (1 samples, 0.01%)</title><rect x="26.9670%" y="1221" width="0.0105%" height="15" fill="rgb(246,38,14)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1231.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1205" width="0.0105%" height="15" fill="rgb(242,27,5)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1215.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1189" width="0.0105%" height="15" fill="rgb(228,65,35)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1199.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1173" width="0.0105%" height="15" fill="rgb(245,93,11)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1157" width="0.0105%" height="15" fill="rgb(213,1,31)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1141" width="0.0105%" height="15" fill="rgb(237,205,14)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1125" width="0.0105%" height="15" fill="rgb(232,118,45)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1109" width="0.0105%" height="15" fill="rgb(218,5,6)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1093" width="0.0105%" height="15" fill="rgb(251,87,51)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1077" width="0.0105%" height="15" fill="rgb(207,225,20)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1061" width="0.0105%" height="15" fill="rgb(222,78,54)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1045" width="0.0105%" height="15" fill="rgb(232,85,16)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1029" width="0.0105%" height="15" fill="rgb(244,25,33)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="26.9670%" y="1013" width="0.0105%" height="15" fill="rgb(233,24,36)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1023.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="26.9670%" y="997" width="0.0105%" height="15" fill="rgb(253,49,54)" fg:x="2574" fg:w="1"/><text x="27.2170%" y="1007.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="26.9775%" y="1237" width="0.0314%" height="15" fill="rgb(245,12,22)" fg:x="2575" fg:w="3"/><text x="27.2275%" y="1247.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="27.0089%" y="1237" width="0.0105%" height="15" fill="rgb(253,141,28)" fg:x="2578" fg:w="1"/><text x="27.2589%" y="1247.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (2 samples, 0.02%)</title><rect x="27.0194%" y="1237" width="0.0210%" height="15" fill="rgb(225,207,27)" fg:x="2579" fg:w="2"/><text x="27.2694%" y="1247.50"></text></g><g><title>async_executor::LocalExecutor::schedule (1 samples, 0.01%)</title><rect x="27.0403%" y="1237" width="0.0105%" height="15" fill="rgb(220,84,2)" fg:x="2581" fg:w="1"/><text x="27.2903%" y="1247.50"></text></g><g><title>async_executor::State::notify (1 samples, 0.01%)</title><rect x="27.0508%" y="1237" width="0.0105%" height="15" fill="rgb(224,37,37)" fg:x="2582" fg:w="1"/><text x="27.3008%" y="1247.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="27.0508%" y="1221" width="0.0105%" height="15" fill="rgb(220,143,18)" fg:x="2582" fg:w="1"/><text x="27.3008%" y="1231.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (8 samples, 0.08%)</title><rect x="27.1870%" y="1189" width="0.0838%" height="15" fill="rgb(210,88,33)" fg:x="2595" fg:w="8"/><text x="27.4370%" y="1199.50"></text></g><g><title>async_task::header::Header::register (25 samples, 0.26%)</title><rect x="27.0613%" y="1237" width="0.2619%" height="15" fill="rgb(219,87,51)" fg:x="2583" fg:w="25"/><text x="27.3113%" y="1247.50"></text></g><g><title>async_task::utils::abort_on_panic (13 samples, 0.14%)</title><rect x="27.1870%" y="1221" width="0.1362%" height="15" fill="rgb(211,7,35)" fg:x="2595" fg:w="13"/><text x="27.4370%" y="1231.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (13 samples, 0.14%)</title><rect x="27.1870%" y="1205" width="0.1362%" height="15" fill="rgb(232,77,2)" fg:x="2595" fg:w="13"/><text x="27.4370%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (5 samples, 0.05%)</title><rect x="27.2708%" y="1189" width="0.0524%" height="15" fill="rgb(249,94,25)" fg:x="2603" fg:w="5"/><text x="27.5208%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (5 samples, 0.05%)</title><rect x="27.2708%" y="1173" width="0.0524%" height="15" fill="rgb(215,112,2)" fg:x="2603" fg:w="5"/><text x="27.5208%" y="1183.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="27.2708%" y="1157" width="0.0524%" height="15" fill="rgb(226,115,48)" fg:x="2603" fg:w="5"/><text x="27.5208%" y="1167.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2 samples, 0.02%)</title><rect x="27.3232%" y="1237" width="0.0210%" height="15" fill="rgb(249,196,10)" fg:x="2608" fg:w="2"/><text x="27.5732%" y="1247.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (2 samples, 0.02%)</title><rect x="27.3442%" y="1237" width="0.0210%" height="15" fill="rgb(237,109,14)" fg:x="2610" fg:w="2"/><text x="27.5942%" y="1247.50"></text></g><g><title>bevy_app::event::internal_event_reader (1 samples, 0.01%)</title><rect x="27.3651%" y="1237" width="0.0105%" height="15" fill="rgb(217,103,53)" fg:x="2612" fg:w="1"/><text x="27.6151%" y="1247.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="27.3756%" y="1237" width="0.0105%" height="15" fill="rgb(244,137,9)" fg:x="2613" fg:w="1"/><text x="27.6256%" y="1247.50"></text></g><g><title>bevy_ecs::entity::Entities::get (1 samples, 0.01%)</title><rect x="27.3861%" y="1237" width="0.0105%" height="15" fill="rgb(227,201,3)" fg:x="2614" fg:w="1"/><text x="27.6361%" y="1247.50"></text></g><g><title>bevy_reflect::type_registry::TypeRegistration::of (1 samples, 0.01%)</title><rect x="27.3965%" y="1237" width="0.0105%" height="15" fill="rgb(243,94,6)" fg:x="2615" fg:w="1"/><text x="27.6465%" y="1247.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (1 samples, 0.01%)</title><rect x="27.4070%" y="1237" width="0.0105%" height="15" fill="rgb(235,118,5)" fg:x="2616" fg:w="1"/><text x="27.6570%" y="1247.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (1 samples, 0.01%)</title><rect x="27.4175%" y="1237" width="0.0105%" height="15" fill="rgb(247,10,30)" fg:x="2617" fg:w="1"/><text x="27.6675%" y="1247.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="27.4175%" y="1221" width="0.0105%" height="15" fill="rgb(205,26,28)" fg:x="2617" fg:w="1"/><text x="27.6675%" y="1231.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (2 samples, 0.02%)</title><rect x="27.4280%" y="1237" width="0.0210%" height="15" fill="rgb(206,99,35)" fg:x="2618" fg:w="2"/><text x="27.6780%" y="1247.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (54 samples, 0.57%)</title><rect x="27.4489%" y="1237" width="0.5657%" height="15" fill="rgb(238,130,40)" fg:x="2620" fg:w="54"/><text x="27.6989%" y="1247.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="28.0147%" y="1237" width="0.0105%" height="15" fill="rgb(224,126,31)" fg:x="2674" fg:w="1"/><text x="28.2647%" y="1247.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="28.0251%" y="1237" width="0.0105%" height="15" fill="rgb(254,105,17)" fg:x="2675" fg:w="1"/><text x="28.2751%" y="1247.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="28.0251%" y="1221" width="0.0105%" height="15" fill="rgb(216,87,36)" fg:x="2675" fg:w="1"/><text x="28.2751%" y="1231.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="28.0251%" y="1205" width="0.0105%" height="15" fill="rgb(240,21,12)" fg:x="2675" fg:w="1"/><text x="28.2751%" y="1215.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.01%)</title><rect x="28.0356%" y="1237" width="0.0105%" height="15" fill="rgb(245,192,34)" fg:x="2676" fg:w="1"/><text x="28.2856%" y="1247.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="28.0356%" y="1221" width="0.0105%" height="15" fill="rgb(226,100,49)" fg:x="2676" fg:w="1"/><text x="28.2856%" y="1231.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.01%)</title><rect x="28.0356%" y="1205" width="0.0105%" height="15" fill="rgb(245,188,27)" fg:x="2676" fg:w="1"/><text x="28.2856%" y="1215.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.02%)</title><rect x="28.0461%" y="1237" width="0.0210%" height="15" fill="rgb(212,170,8)" fg:x="2677" fg:w="2"/><text x="28.2961%" y="1247.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="28.0671%" y="1237" width="0.0105%" height="15" fill="rgb(217,113,29)" fg:x="2679" fg:w="1"/><text x="28.3171%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::future::from_generator::GenFuture&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="28.0775%" y="1237" width="0.0105%" height="15" fill="rgb(237,30,3)" fg:x="2680" fg:w="1"/><text x="28.3275%" y="1247.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="28.0880%" y="1237" width="0.0105%" height="15" fill="rgb(227,19,28)" fg:x="2681" fg:w="1"/><text x="28.3380%" y="1247.50"></text></g><g><title>fstatat (1 samples, 0.01%)</title><rect x="28.0985%" y="1237" width="0.0105%" height="15" fill="rgb(239,172,45)" fg:x="2682" fg:w="1"/><text x="28.3485%" y="1247.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (8 samples, 0.08%)</title><rect x="28.1090%" y="1237" width="0.0838%" height="15" fill="rgb(254,55,39)" fg:x="2683" fg:w="8"/><text x="28.3590%" y="1247.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (8 samples, 0.08%)</title><rect x="28.1090%" y="1221" width="0.0838%" height="15" fill="rgb(249,208,12)" fg:x="2683" fg:w="8"/><text x="28.3590%" y="1231.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (8 samples, 0.08%)</title><rect x="28.1090%" y="1205" width="0.0838%" height="15" fill="rgb(240,52,13)" fg:x="2683" fg:w="8"/><text x="28.3590%" y="1215.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (8 samples, 0.08%)</title><rect x="28.1090%" y="1189" width="0.0838%" height="15" fill="rgb(252,149,13)" fg:x="2683" fg:w="8"/><text x="28.3590%" y="1199.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (5 samples, 0.05%)</title><rect x="28.2137%" y="1221" width="0.0524%" height="15" fill="rgb(232,81,48)" fg:x="2693" fg:w="5"/><text x="28.4637%" y="1231.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (5 samples, 0.05%)</title><rect x="28.2137%" y="1205" width="0.0524%" height="15" fill="rgb(222,144,2)" fg:x="2693" fg:w="5"/><text x="28.4637%" y="1215.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (8 samples, 0.08%)</title><rect x="28.1928%" y="1237" width="0.0838%" height="15" fill="rgb(216,81,32)" fg:x="2691" fg:w="8"/><text x="28.4428%" y="1247.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (1 samples, 0.01%)</title><rect x="28.2661%" y="1221" width="0.0105%" height="15" fill="rgb(244,78,51)" fg:x="2698" fg:w="1"/><text x="28.5161%" y="1231.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::find_equivalent (1 samples, 0.01%)</title><rect x="28.2661%" y="1205" width="0.0105%" height="15" fill="rgb(217,66,21)" fg:x="2698" fg:w="1"/><text x="28.5161%" y="1215.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find (1 samples, 0.01%)</title><rect x="28.2661%" y="1189" width="0.0105%" height="15" fill="rgb(247,101,42)" fg:x="2698" fg:w="1"/><text x="28.5161%" y="1199.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (4 samples, 0.04%)</title><rect x="28.2766%" y="1237" width="0.0419%" height="15" fill="rgb(227,81,39)" fg:x="2699" fg:w="4"/><text x="28.5266%" y="1247.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (2 samples, 0.02%)</title><rect x="28.3185%" y="1237" width="0.0210%" height="15" fill="rgb(220,223,44)" fg:x="2703" fg:w="2"/><text x="28.5685%" y="1247.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (1 samples, 0.01%)</title><rect x="28.3394%" y="1237" width="0.0105%" height="15" fill="rgb(205,218,2)" fg:x="2705" fg:w="1"/><text x="28.5894%" y="1247.50"></text></g><g><title>gfx_backend_vulkan::command::CommandBuffer::bind_descriptor_sets::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="28.3394%" y="1221" width="0.0105%" height="15" fill="rgb(212,207,28)" fg:x="2705" fg:w="1"/><text x="28.5894%" y="1231.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_bind_descriptor_sets (1 samples, 0.01%)</title><rect x="28.3394%" y="1205" width="0.0105%" height="15" fill="rgb(224,12,41)" fg:x="2705" fg:w="1"/><text x="28.5894%" y="1215.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="28.3499%" y="1237" width="0.0105%" height="15" fill="rgb(216,118,12)" fg:x="2706" fg:w="1"/><text x="28.5999%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="28.3499%" y="1221" width="0.0105%" height="15" fill="rgb(252,97,46)" fg:x="2706" fg:w="1"/><text x="28.5999%" y="1231.50"></text></g><g><title>&lt;core::iter::sources::once::Once&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="28.3499%" y="1205" width="0.0105%" height="15" fill="rgb(244,206,19)" fg:x="2706" fg:w="1"/><text x="28.5999%" y="1215.50"></text></g><g><title>&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="28.3499%" y="1189" width="0.0105%" height="15" fill="rgb(231,84,31)" fg:x="2706" fg:w="1"/><text x="28.5999%" y="1199.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (1 samples, 0.01%)</title><rect x="28.3604%" y="1237" width="0.0105%" height="15" fill="rgb(244,133,0)" fg:x="2707" fg:w="1"/><text x="28.6104%" y="1247.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="28.3709%" y="1237" width="0.0105%" height="15" fill="rgb(223,15,50)" fg:x="2708" fg:w="1"/><text x="28.6209%" y="1247.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="28.3709%" y="1221" width="0.0105%" height="15" fill="rgb(250,118,49)" fg:x="2708" fg:w="1"/><text x="28.6209%" y="1231.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="28.3709%" y="1205" width="0.0105%" height="15" fill="rgb(248,25,38)" fg:x="2708" fg:w="1"/><text x="28.6209%" y="1215.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1 samples, 0.01%)</title><rect x="28.3709%" y="1189" width="0.0105%" height="15" fill="rgb(215,70,14)" fg:x="2708" fg:w="1"/><text x="28.6209%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="28.3814%" y="1237" width="0.0105%" height="15" fill="rgb(215,28,15)" fg:x="2709" fg:w="1"/><text x="28.6314%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="28.3814%" y="1221" width="0.0105%" height="15" fill="rgb(243,6,28)" fg:x="2709" fg:w="1"/><text x="28.6314%" y="1231.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="28.3814%" y="1205" width="0.0105%" height="15" fill="rgb(222,130,1)" fg:x="2709" fg:w="1"/><text x="28.6314%" y="1215.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="28.3814%" y="1189" width="0.0105%" height="15" fill="rgb(236,166,44)" fg:x="2709" fg:w="1"/><text x="28.6314%" y="1199.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="28.3814%" y="1173" width="0.0105%" height="15" fill="rgb(221,108,14)" fg:x="2709" fg:w="1"/><text x="28.6314%" y="1183.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="28.3814%" y="1157" width="0.0105%" height="15" fill="rgb(252,3,45)" fg:x="2709" fg:w="1"/><text x="28.6314%" y="1167.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="28.3814%" y="1141" width="0.0105%" height="15" fill="rgb(237,68,30)" fg:x="2709" fg:w="1"/><text x="28.6314%" y="1151.50"></text></g><g><title>tracing::span::Span::enter (1 samples, 0.01%)</title><rect x="28.3918%" y="1237" width="0.0105%" height="15" fill="rgb(211,79,22)" fg:x="2710" fg:w="1"/><text x="28.6418%" y="1247.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="28.4023%" y="1237" width="0.0105%" height="15" fill="rgb(252,185,21)" fg:x="2711" fg:w="1"/><text x="28.6523%" y="1247.50"></text></g><g><title>vec_arena::Arena&lt;T&gt;::insert (1 samples, 0.01%)</title><rect x="28.4128%" y="1237" width="0.0105%" height="15" fill="rgb(225,189,26)" fg:x="2712" fg:w="1"/><text x="28.6628%" y="1247.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (5 samples, 0.05%)</title><rect x="28.4233%" y="1237" width="0.0524%" height="15" fill="rgb(241,30,40)" fg:x="2713" fg:w="5"/><text x="28.6733%" y="1247.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (2 samples, 0.02%)</title><rect x="28.4756%" y="1237" width="0.0210%" height="15" fill="rgb(235,215,44)" fg:x="2718" fg:w="2"/><text x="28.7256%" y="1247.50"></text></g><g><title>[[stack]] (199 samples, 2.08%)</title><rect x="26.4222%" y="1253" width="2.0849%" height="15" fill="rgb(205,8,29)" fg:x="2522" fg:w="199"/><text x="26.6722%" y="1263.50">[..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1 samples, 0.01%)</title><rect x="28.4966%" y="1237" width="0.0105%" height="15" fill="rgb(241,137,42)" fg:x="2720" fg:w="1"/><text x="28.7466%" y="1247.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="28.4966%" y="1221" width="0.0105%" height="15" fill="rgb(237,155,2)" fg:x="2720" fg:w="1"/><text x="28.7466%" y="1231.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="28.4966%" y="1205" width="0.0105%" height="15" fill="rgb(245,29,42)" fg:x="2720" fg:w="1"/><text x="28.7466%" y="1215.50"></text></g><g><title>&lt;hashbrown::set::HashSet&lt;T,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="28.4966%" y="1189" width="0.0105%" height="15" fill="rgb(234,101,35)" fg:x="2720" fg:w="1"/><text x="28.7466%" y="1199.50"></text></g><g><title>&lt;hashbrown::map::HashMap&lt;K,V,S,A&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="28.4966%" y="1173" width="0.0105%" height="15" fill="rgb(228,64,37)" fg:x="2720" fg:w="1"/><text x="28.7466%" y="1183.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="28.4966%" y="1157" width="0.0105%" height="15" fill="rgb(217,214,36)" fg:x="2720" fg:w="1"/><text x="28.7466%" y="1167.50"></text></g><g><title>std::collections::hash::map::RandomState::new (1 samples, 0.01%)</title><rect x="28.4966%" y="1141" width="0.0105%" height="15" fill="rgb(243,70,3)" fg:x="2720" fg:w="1"/><text x="28.7466%" y="1151.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="28.4966%" y="1125" width="0.0105%" height="15" fill="rgb(253,158,52)" fg:x="2720" fg:w="1"/><text x="28.7466%" y="1135.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="28.4966%" y="1109" width="0.0105%" height="15" fill="rgb(234,111,54)" fg:x="2720" fg:w="1"/><text x="28.7466%" y="1119.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="28.5071%" y="1237" width="0.0105%" height="15" fill="rgb(217,70,32)" fg:x="2721" fg:w="1"/><text x="28.7571%" y="1247.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="28.5175%" y="1237" width="0.0210%" height="15" fill="rgb(234,18,33)" fg:x="2722" fg:w="2"/><text x="28.7675%" y="1247.50"></text></g><g><title>&lt;tracing::span::Span as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="28.5385%" y="1237" width="0.0105%" height="15" fill="rgb(234,12,49)" fg:x="2724" fg:w="1"/><text x="28.7885%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="28.5490%" y="1237" width="0.0733%" height="15" fill="rgb(236,10,21)" fg:x="2725" fg:w="7"/><text x="28.7990%" y="1247.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="28.6223%" y="1237" width="0.0210%" height="15" fill="rgb(248,182,45)" fg:x="2732" fg:w="2"/><text x="28.8723%" y="1247.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="28.6433%" y="1237" width="0.0105%" height="15" fill="rgb(217,95,36)" fg:x="2734" fg:w="1"/><text x="28.8933%" y="1247.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (3 samples, 0.03%)</title><rect x="28.6537%" y="1237" width="0.0314%" height="15" fill="rgb(212,110,31)" fg:x="2735" fg:w="3"/><text x="28.9037%" y="1247.50"></text></g><g><title>async_task::header::Header::register (11 samples, 0.12%)</title><rect x="28.6852%" y="1237" width="0.1152%" height="15" fill="rgb(206,32,53)" fg:x="2738" fg:w="11"/><text x="28.9352%" y="1247.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (4 samples, 0.04%)</title><rect x="28.8004%" y="1237" width="0.0419%" height="15" fill="rgb(246,141,37)" fg:x="2749" fg:w="4"/><text x="29.0504%" y="1247.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (1 samples, 0.01%)</title><rect x="28.8423%" y="1237" width="0.0105%" height="15" fill="rgb(219,16,7)" fg:x="2753" fg:w="1"/><text x="29.0923%" y="1247.50"></text></g><g><title>bevy_render::shader::shader::shader_update_system (1 samples, 0.01%)</title><rect x="28.8528%" y="1237" width="0.0105%" height="15" fill="rgb(230,205,45)" fg:x="2754" fg:w="1"/><text x="29.1028%" y="1247.50"></text></g><g><title>core::fmt::Formatter::write_fmt (1 samples, 0.01%)</title><rect x="28.8633%" y="1237" width="0.0105%" height="15" fill="rgb(231,43,49)" fg:x="2755" fg:w="1"/><text x="29.1133%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="28.8738%" y="1237" width="0.0105%" height="15" fill="rgb(212,106,34)" fg:x="2756" fg:w="1"/><text x="29.1238%" y="1247.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (2 samples, 0.02%)</title><rect x="28.8842%" y="1237" width="0.0210%" height="15" fill="rgb(206,83,17)" fg:x="2757" fg:w="2"/><text x="29.1342%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.02%)</title><rect x="28.9052%" y="1237" width="0.0210%" height="15" fill="rgb(244,154,49)" fg:x="2759" fg:w="2"/><text x="29.1552%" y="1247.50"></text></g><g><title>tracing::span::Span::enter (1 samples, 0.01%)</title><rect x="28.9261%" y="1237" width="0.0105%" height="15" fill="rgb(244,149,49)" fg:x="2761" fg:w="1"/><text x="29.1761%" y="1247.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (1 samples, 0.01%)</title><rect x="28.9366%" y="1237" width="0.0105%" height="15" fill="rgb(227,134,18)" fg:x="2762" fg:w="1"/><text x="29.1866%" y="1247.50"></text></g><g><title>wgpu_core::command::bind::BindGroupEntry::provide (1 samples, 0.01%)</title><rect x="28.9366%" y="1221" width="0.0105%" height="15" fill="rgb(237,116,36)" fg:x="2762" fg:w="1"/><text x="29.1866%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="28.9366%" y="1205" width="0.0105%" height="15" fill="rgb(205,129,40)" fg:x="2762" fg:w="1"/><text x="29.1866%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="28.9366%" y="1189" width="0.0105%" height="15" fill="rgb(236,178,4)" fg:x="2762" fg:w="1"/><text x="29.1866%" y="1199.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="28.9366%" y="1173" width="0.0105%" height="15" fill="rgb(251,76,53)" fg:x="2762" fg:w="1"/><text x="29.1866%" y="1183.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="28.9366%" y="1157" width="0.0105%" height="15" fill="rgb(242,92,40)" fg:x="2762" fg:w="1"/><text x="29.1866%" y="1167.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (2 samples, 0.02%)</title><rect x="28.9680%" y="1221" width="0.0210%" height="15" fill="rgb(209,45,30)" fg:x="2765" fg:w="2"/><text x="29.2180%" y="1231.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (6 samples, 0.06%)</title><rect x="28.9471%" y="1237" width="0.0629%" height="15" fill="rgb(218,157,36)" fg:x="2763" fg:w="6"/><text x="29.1971%" y="1247.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_replace (2 samples, 0.02%)</title><rect x="28.9890%" y="1221" width="0.0210%" height="15" fill="rgb(222,186,16)" fg:x="2767" fg:w="2"/><text x="29.2390%" y="1231.50"></text></g><g><title>[anon] (49 samples, 0.51%)</title><rect x="28.5071%" y="1253" width="0.5134%" height="15" fill="rgb(254,72,35)" fg:x="2721" fg:w="49"/><text x="28.7571%" y="1263.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (1 samples, 0.01%)</title><rect x="29.0100%" y="1237" width="0.0105%" height="15" fill="rgb(224,25,35)" fg:x="2769" fg:w="1"/><text x="29.2600%" y="1247.50"></text></g><g><title>[game] (7 samples, 0.07%)</title><rect x="29.0204%" y="1253" width="0.0733%" height="15" fill="rgb(206,135,52)" fg:x="2770" fg:w="7"/><text x="29.2704%" y="1263.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (7 samples, 0.07%)</title><rect x="29.0204%" y="1237" width="0.0733%" height="15" fill="rgb(229,174,47)" fg:x="2770" fg:w="7"/><text x="29.2704%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (3 samples, 0.03%)</title><rect x="29.0623%" y="1221" width="0.0314%" height="15" fill="rgb(242,184,21)" fg:x="2774" fg:w="3"/><text x="29.3123%" y="1231.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="29.0623%" y="1205" width="0.0314%" height="15" fill="rgb(213,22,45)" fg:x="2774" fg:w="3"/><text x="29.3123%" y="1215.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="29.0623%" y="1189" width="0.0314%" height="15" fill="rgb(237,81,54)" fg:x="2774" fg:w="3"/><text x="29.3123%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.1985%" y="1125" width="0.0105%" height="15" fill="rgb(248,177,18)" fg:x="2787" fg:w="1"/><text x="29.4485%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.1985%" y="1109" width="0.0105%" height="15" fill="rgb(254,31,16)" fg:x="2787" fg:w="1"/><text x="29.4485%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="29.1566%" y="1141" width="0.0629%" height="15" fill="rgb(235,20,31)" fg:x="2783" fg:w="6"/><text x="29.4066%" y="1151.50"></text></g><g><title>__GI__dl_addr (1 samples, 0.01%)</title><rect x="29.2090%" y="1125" width="0.0105%" height="15" fill="rgb(240,56,43)" fg:x="2788" fg:w="1"/><text x="29.4590%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="29.1461%" y="1157" width="0.0838%" height="15" fill="rgb(237,197,51)" fg:x="2782" fg:w="8"/><text x="29.3961%" y="1167.50"></text></g><g><title>__GI_____strtoull_l_internal (1 samples, 0.01%)</title><rect x="29.2195%" y="1141" width="0.0105%" height="15" fill="rgb(241,162,44)" fg:x="2789" fg:w="1"/><text x="29.4695%" y="1151.50"></text></g><g><title>__GI_____strtoull_l_internal (1 samples, 0.01%)</title><rect x="29.2300%" y="1157" width="0.0105%" height="15" fill="rgb(224,23,20)" fg:x="2790" fg:w="1"/><text x="29.4800%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.16%)</title><rect x="29.0938%" y="1189" width="0.1572%" height="15" fill="rgb(250,109,34)" fg:x="2777" fg:w="15"/><text x="29.3438%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.15%)</title><rect x="29.1042%" y="1173" width="0.1467%" height="15" fill="rgb(214,175,50)" fg:x="2778" fg:w="14"/><text x="29.3542%" y="1183.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="29.2404%" y="1157" width="0.0105%" height="15" fill="rgb(213,182,5)" fg:x="2791" fg:w="1"/><text x="29.4904%" y="1167.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="29.2404%" y="1141" width="0.0105%" height="15" fill="rgb(209,199,19)" fg:x="2791" fg:w="1"/><text x="29.4904%" y="1151.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="29.2404%" y="1125" width="0.0105%" height="15" fill="rgb(236,224,42)" fg:x="2791" fg:w="1"/><text x="29.4904%" y="1135.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.17%)</title><rect x="29.0938%" y="1253" width="0.1676%" height="15" fill="rgb(246,226,29)" fg:x="2777" fg:w="16"/><text x="29.3438%" y="1263.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.17%)</title><rect x="29.0938%" y="1237" width="0.1676%" height="15" fill="rgb(227,223,11)" fg:x="2777" fg:w="16"/><text x="29.3438%" y="1247.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.17%)</title><rect x="29.0938%" y="1221" width="0.1676%" height="15" fill="rgb(219,7,51)" fg:x="2777" fg:w="16"/><text x="29.3438%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.17%)</title><rect x="29.0938%" y="1205" width="0.1676%" height="15" fill="rgb(245,167,10)" fg:x="2777" fg:w="16"/><text x="29.3438%" y="1215.50"></text></g><g><title>_dl_runtime_resolve_xsavec (1 samples, 0.01%)</title><rect x="29.2509%" y="1189" width="0.0105%" height="15" fill="rgb(237,224,16)" fg:x="2792" fg:w="1"/><text x="29.5009%" y="1199.50"></text></g><g><title>_dl_fixup (1 samples, 0.01%)</title><rect x="29.2509%" y="1173" width="0.0105%" height="15" fill="rgb(226,132,13)" fg:x="2792" fg:w="1"/><text x="29.5009%" y="1183.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="29.2509%" y="1157" width="0.0105%" height="15" fill="rgb(214,140,3)" fg:x="2792" fg:w="1"/><text x="29.5009%" y="1167.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="29.2509%" y="1141" width="0.0105%" height="15" fill="rgb(221,177,4)" fg:x="2792" fg:w="1"/><text x="29.5009%" y="1151.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="29.2614%" y="1253" width="0.0105%" height="15" fill="rgb(238,139,3)" fg:x="2793" fg:w="1"/><text x="29.5114%" y="1263.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="29.2614%" y="1237" width="0.0105%" height="15" fill="rgb(216,17,39)" fg:x="2793" fg:w="1"/><text x="29.5114%" y="1247.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="29.2719%" y="1237" width="0.0210%" height="15" fill="rgb(238,120,9)" fg:x="2794" fg:w="2"/><text x="29.5219%" y="1247.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="29.2719%" y="1221" width="0.0210%" height="15" fill="rgb(244,92,53)" fg:x="2794" fg:w="2"/><text x="29.5219%" y="1231.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="29.2719%" y="1205" width="0.0210%" height="15" fill="rgb(224,148,33)" fg:x="2794" fg:w="2"/><text x="29.5219%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="29.2719%" y="1189" width="0.0210%" height="15" fill="rgb(243,6,36)" fg:x="2794" fg:w="2"/><text x="29.5219%" y="1199.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="29.2719%" y="1173" width="0.0210%" height="15" fill="rgb(230,102,11)" fg:x="2794" fg:w="2"/><text x="29.5219%" y="1183.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="29.2719%" y="1157" width="0.0210%" height="15" fill="rgb(234,148,36)" fg:x="2794" fg:w="2"/><text x="29.5219%" y="1167.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="29.2719%" y="1141" width="0.0210%" height="15" fill="rgb(251,153,25)" fg:x="2794" fg:w="2"/><text x="29.5219%" y="1151.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="29.2719%" y="1125" width="0.0210%" height="15" fill="rgb(215,129,8)" fg:x="2794" fg:w="2"/><text x="29.5219%" y="1135.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="29.2928%" y="1237" width="0.0105%" height="15" fill="rgb(224,128,35)" fg:x="2796" fg:w="1"/><text x="29.5428%" y="1247.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="29.3033%" y="1237" width="0.0524%" height="15" fill="rgb(237,56,52)" fg:x="2797" fg:w="5"/><text x="29.5533%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (2 samples, 0.02%)</title><rect x="29.3557%" y="1237" width="0.0210%" height="15" fill="rgb(234,213,19)" fg:x="2802" fg:w="2"/><text x="29.6057%" y="1247.50"></text></g><g><title>[libbevy_dylib-7e0daee3ecabe62f.so] (12 samples, 0.13%)</title><rect x="29.2719%" y="1253" width="0.1257%" height="15" fill="rgb(252,82,23)" fg:x="2794" fg:w="12"/><text x="29.5219%" y="1263.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (2 samples, 0.02%)</title><rect x="29.3766%" y="1237" width="0.0210%" height="15" fill="rgb(254,201,21)" fg:x="2804" fg:w="2"/><text x="29.6266%" y="1247.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="29.3976%" y="1253" width="0.0105%" height="15" fill="rgb(250,186,11)" fg:x="2806" fg:w="1"/><text x="29.6476%" y="1263.50"></text></g><g><title>__GI_____strtoull_l_internal (1 samples, 0.01%)</title><rect x="29.3976%" y="1237" width="0.0105%" height="15" fill="rgb(211,174,5)" fg:x="2806" fg:w="1"/><text x="29.6476%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="29.4081%" y="1253" width="0.0419%" height="15" fill="rgb(214,121,10)" fg:x="2807" fg:w="4"/><text x="29.6581%" y="1263.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="29.4290%" y="1237" width="0.0210%" height="15" fill="rgb(241,66,2)" fg:x="2809" fg:w="2"/><text x="29.6790%" y="1247.50"></text></g><g><title>[libnvidia-glvkspirv.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.4500%" y="1253" width="0.0105%" height="15" fill="rgb(220,167,19)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1263.50"></text></g><g><title>[libnvidia-glvkspirv.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.4500%" y="1237" width="0.0105%" height="15" fill="rgb(231,54,50)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1247.50"></text></g><g><title>[libnvidia-glvkspirv.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.4500%" y="1221" width="0.0105%" height="15" fill="rgb(239,217,53)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1231.50"></text></g><g><title>[libnvidia-glvkspirv.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.4500%" y="1205" width="0.0105%" height="15" fill="rgb(248,8,0)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1215.50"></text></g><g><title>[libnvidia-glvkspirv.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.4500%" y="1189" width="0.0105%" height="15" fill="rgb(229,118,37)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1199.50"></text></g><g><title>[libnvidia-glvkspirv.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.4500%" y="1173" width="0.0105%" height="15" fill="rgb(253,223,43)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1183.50"></text></g><g><title>__pthread_once_slow (1 samples, 0.01%)</title><rect x="29.4500%" y="1157" width="0.0105%" height="15" fill="rgb(211,77,36)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1167.50"></text></g><g><title>[libnvidia-glvkspirv.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.4500%" y="1141" width="0.0105%" height="15" fill="rgb(219,3,53)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1151.50"></text></g><g><title>[libnvidia-glvkspirv.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.4500%" y="1125" width="0.0105%" height="15" fill="rgb(244,45,42)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1135.50"></text></g><g><title>[libnvidia-glvkspirv.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.4500%" y="1109" width="0.0105%" height="15" fill="rgb(225,95,27)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1119.50"></text></g><g><title>__wctype_l (1 samples, 0.01%)</title><rect x="29.4500%" y="1093" width="0.0105%" height="15" fill="rgb(207,74,8)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1103.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="29.4500%" y="1077" width="0.0105%" height="15" fill="rgb(243,63,36)" fg:x="2811" fg:w="1"/><text x="29.7000%" y="1087.50"></text></g><g><title>[libudev.so.1.7.1] (1 samples, 0.01%)</title><rect x="29.4605%" y="1253" width="0.0105%" height="15" fill="rgb(211,180,12)" fg:x="2812" fg:w="1"/><text x="29.7105%" y="1263.50"></text></g><g><title>[libudev.so.1.7.1] (1 samples, 0.01%)</title><rect x="29.4605%" y="1237" width="0.0105%" height="15" fill="rgb(254,166,49)" fg:x="2812" fg:w="1"/><text x="29.7105%" y="1247.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (12 samples, 0.13%)</title><rect x="29.4709%" y="1237" width="0.1257%" height="15" fill="rgb(205,19,0)" fg:x="2813" fg:w="12"/><text x="29.7209%" y="1247.50"></text></g><g><title>&lt;() as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="29.5966%" y="1237" width="0.0105%" height="15" fill="rgb(224,172,32)" fg:x="2825" fg:w="1"/><text x="29.8466%" y="1247.50"></text></g><g><title>&lt;alloc::rc::Rc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="29.6071%" y="1237" width="0.0105%" height="15" fill="rgb(254,136,30)" fg:x="2826" fg:w="1"/><text x="29.8571%" y="1247.50"></text></g><g><title>&lt;bevy_core::float_ord::FloatOrd as core::ops::arith::Neg&gt;::neg (1 samples, 0.01%)</title><rect x="29.6176%" y="1237" width="0.0105%" height="15" fill="rgb(246,19,35)" fg:x="2827" fg:w="1"/><text x="29.8676%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::EntityFetch as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="29.6281%" y="1237" width="0.0105%" height="15" fill="rgb(219,24,36)" fg:x="2828" fg:w="1"/><text x="29.8781%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="29.6386%" y="1237" width="0.0105%" height="15" fill="rgb(251,55,1)" fg:x="2829" fg:w="1"/><text x="29.8886%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (1 samples, 0.01%)</title><rect x="29.6490%" y="1157" width="0.0105%" height="15" fill="rgb(218,117,39)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="1167.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (1 samples, 0.01%)</title><rect x="29.6490%" y="1141" width="0.0105%" height="15" fill="rgb(248,169,11)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="1151.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="29.6490%" y="1125" width="0.0105%" height="15" fill="rgb(244,40,44)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="1135.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="29.6490%" y="1109" width="0.0105%" height="15" fill="rgb(234,62,37)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="1119.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="29.6490%" y="1093" width="0.0105%" height="15" fill="rgb(207,117,42)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="1103.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="29.6490%" y="1077" width="0.0105%" height="15" fill="rgb(213,43,2)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="1087.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="29.6490%" y="1061" width="0.0105%" height="15" fill="rgb(244,202,51)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (1 samples, 0.01%)</title><rect x="29.6490%" y="1045" width="0.0105%" height="15" fill="rgb(253,174,46)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (1 samples, 0.01%)</title><rect x="29.6490%" y="1029" width="0.0105%" height="15" fill="rgb(251,23,1)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (1 samples, 0.01%)</title><rect x="29.6490%" y="1013" width="0.0105%" height="15" fill="rgb(253,26,1)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="1023.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (1 samples, 0.01%)</title><rect x="29.6490%" y="997" width="0.0105%" height="15" fill="rgb(216,89,31)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="1007.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (1 samples, 0.01%)</title><rect x="29.6490%" y="981" width="0.0105%" height="15" fill="rgb(209,109,5)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="991.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (1 samples, 0.01%)</title><rect x="29.6490%" y="965" width="0.0105%" height="15" fill="rgb(229,63,13)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="975.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (1 samples, 0.01%)</title><rect x="29.6490%" y="949" width="0.0105%" height="15" fill="rgb(238,137,54)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="959.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (1 samples, 0.01%)</title><rect x="29.6490%" y="933" width="0.0105%" height="15" fill="rgb(228,1,9)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="943.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="917" width="0.0105%" height="15" fill="rgb(249,120,48)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="901" width="0.0105%" height="15" fill="rgb(209,72,36)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="885" width="0.0105%" height="15" fill="rgb(247,98,49)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="869" width="0.0105%" height="15" fill="rgb(233,75,36)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="853" width="0.0105%" height="15" fill="rgb(225,14,24)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="837" width="0.0105%" height="15" fill="rgb(237,193,20)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="821" width="0.0105%" height="15" fill="rgb(239,122,19)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="805" width="0.0105%" height="15" fill="rgb(231,220,10)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="789" width="0.0105%" height="15" fill="rgb(220,66,15)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="773" width="0.0105%" height="15" fill="rgb(215,171,52)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="757" width="0.0105%" height="15" fill="rgb(241,169,50)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="741" width="0.0105%" height="15" fill="rgb(236,189,0)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="725" width="0.0105%" height="15" fill="rgb(217,147,20)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="709" width="0.0105%" height="15" fill="rgb(206,188,39)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.6490%" y="693" width="0.0105%" height="15" fill="rgb(227,118,25)" fg:x="2830" fg:w="1"/><text x="29.8990%" y="703.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="29.7224%" y="981" width="0.0105%" height="15" fill="rgb(248,171,40)" fg:x="2837" fg:w="1"/><text x="29.9724%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="29.7328%" y="981" width="0.0105%" height="15" fill="rgb(251,90,54)" fg:x="2838" fg:w="1"/><text x="29.9828%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="29.7433%" y="981" width="0.0105%" height="15" fill="rgb(234,11,46)" fg:x="2839" fg:w="1"/><text x="29.9933%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="29.7433%" y="965" width="0.0105%" height="15" fill="rgb(229,134,13)" fg:x="2839" fg:w="1"/><text x="29.9933%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="29.7433%" y="949" width="0.0105%" height="15" fill="rgb(223,129,3)" fg:x="2839" fg:w="1"/><text x="29.9933%" y="959.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="29.7433%" y="933" width="0.0105%" height="15" fill="rgb(221,124,13)" fg:x="2839" fg:w="1"/><text x="29.9933%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="29.7433%" y="917" width="0.0105%" height="15" fill="rgb(234,3,18)" fg:x="2839" fg:w="1"/><text x="29.9933%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::zip (1 samples, 0.01%)</title><rect x="29.7538%" y="981" width="0.0105%" height="15" fill="rgb(249,199,20)" fg:x="2840" fg:w="1"/><text x="30.0038%" y="991.50"></text></g><g><title>&lt;&amp;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="29.7538%" y="965" width="0.0105%" height="15" fill="rgb(224,134,6)" fg:x="2840" fg:w="1"/><text x="30.0038%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="29.7538%" y="949" width="0.0105%" height="15" fill="rgb(254,83,26)" fg:x="2840" fg:w="1"/><text x="30.0038%" y="959.50"></text></g><g><title>wgpu_core::binding_model::BindGroup&lt;B&gt;::validate_dynamic_bindings (1 samples, 0.01%)</title><rect x="29.7643%" y="981" width="0.0105%" height="15" fill="rgb(217,88,9)" fg:x="2841" fg:w="1"/><text x="30.0143%" y="991.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1 samples, 0.01%)</title><rect x="29.7748%" y="981" width="0.0105%" height="15" fill="rgb(225,73,2)" fg:x="2842" fg:w="1"/><text x="30.0248%" y="991.50"></text></g><g><title>wgpu_core::command::render::VertexState::update_limits (1 samples, 0.01%)</title><rect x="29.7852%" y="981" width="0.0105%" height="15" fill="rgb(226,44,39)" fg:x="2843" fg:w="1"/><text x="30.0352%" y="991.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.01%)</title><rect x="29.7957%" y="981" width="0.0105%" height="15" fill="rgb(228,53,17)" fg:x="2844" fg:w="1"/><text x="30.0457%" y="991.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="29.7957%" y="965" width="0.0105%" height="15" fill="rgb(212,27,27)" fg:x="2844" fg:w="1"/><text x="30.0457%" y="975.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="29.7957%" y="949" width="0.0105%" height="15" fill="rgb(241,50,6)" fg:x="2844" fg:w="1"/><text x="30.0457%" y="959.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="29.7957%" y="933" width="0.0105%" height="15" fill="rgb(225,28,51)" fg:x="2844" fg:w="1"/><text x="30.0457%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="29.7957%" y="917" width="0.0105%" height="15" fill="rgb(215,33,16)" fg:x="2844" fg:w="1"/><text x="30.0457%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="29.7957%" y="901" width="0.0105%" height="15" fill="rgb(243,40,39)" fg:x="2844" fg:w="1"/><text x="30.0457%" y="911.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (15 samples, 0.16%)</title><rect x="29.6595%" y="1093" width="0.1572%" height="15" fill="rgb(225,11,42)" fg:x="2831" fg:w="15"/><text x="29.9095%" y="1103.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (15 samples, 0.16%)</title><rect x="29.6595%" y="1077" width="0.1572%" height="15" fill="rgb(241,220,38)" fg:x="2831" fg:w="15"/><text x="29.9095%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (15 samples, 0.16%)</title><rect x="29.6595%" y="1061" width="0.1572%" height="15" fill="rgb(244,52,35)" fg:x="2831" fg:w="15"/><text x="29.9095%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (15 samples, 0.16%)</title><rect x="29.6595%" y="1045" width="0.1572%" height="15" fill="rgb(246,42,46)" fg:x="2831" fg:w="15"/><text x="29.9095%" y="1055.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (15 samples, 0.16%)</title><rect x="29.6595%" y="1029" width="0.1572%" height="15" fill="rgb(205,184,13)" fg:x="2831" fg:w="15"/><text x="29.9095%" y="1039.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (15 samples, 0.16%)</title><rect x="29.6595%" y="1013" width="0.1572%" height="15" fill="rgb(209,48,36)" fg:x="2831" fg:w="15"/><text x="29.9095%" y="1023.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (15 samples, 0.16%)</title><rect x="29.6595%" y="997" width="0.1572%" height="15" fill="rgb(244,34,51)" fg:x="2831" fg:w="15"/><text x="29.9095%" y="1007.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (1 samples, 0.01%)</title><rect x="29.8062%" y="981" width="0.0105%" height="15" fill="rgb(221,107,33)" fg:x="2845" fg:w="1"/><text x="30.0562%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="29.8062%" y="965" width="0.0105%" height="15" fill="rgb(224,203,12)" fg:x="2845" fg:w="1"/><text x="30.0562%" y="975.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="29.8167%" y="1093" width="0.0105%" height="15" fill="rgb(230,215,18)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="1103.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (1 samples, 0.01%)</title><rect x="29.8167%" y="1077" width="0.0105%" height="15" fill="rgb(206,185,35)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="1087.50"></text></g><g><title>wgpu::Device::create_swap_chain (1 samples, 0.01%)</title><rect x="29.8167%" y="1061" width="0.0105%" height="15" fill="rgb(228,140,34)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="1071.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (1 samples, 0.01%)</title><rect x="29.8167%" y="1045" width="0.0105%" height="15" fill="rgb(208,93,13)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="1055.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (1 samples, 0.01%)</title><rect x="29.8167%" y="1029" width="0.0105%" height="15" fill="rgb(221,193,39)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="1039.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::configure_swapchain (1 samples, 0.01%)</title><rect x="29.8167%" y="1013" width="0.0105%" height="15" fill="rgb(241,132,34)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="1023.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_backend_vulkan::Device&gt;::create_swapchain (1 samples, 0.01%)</title><rect x="29.8167%" y="997" width="0.0105%" height="15" fill="rgb(221,141,10)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="1007.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (1 samples, 0.01%)</title><rect x="29.8167%" y="981" width="0.0105%" height="15" fill="rgb(226,90,31)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="991.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::create_swapchain_khr (1 samples, 0.01%)</title><rect x="29.8167%" y="965" width="0.0105%" height="15" fill="rgb(243,75,5)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="975.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="29.8167%" y="949" width="0.0105%" height="15" fill="rgb(227,156,21)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="959.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8167%" y="933" width="0.0105%" height="15" fill="rgb(250,195,8)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8167%" y="917" width="0.0105%" height="15" fill="rgb(220,134,5)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8167%" y="901" width="0.0105%" height="15" fill="rgb(246,106,34)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8167%" y="885" width="0.0105%" height="15" fill="rgb(205,1,4)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8167%" y="869" width="0.0105%" height="15" fill="rgb(224,151,29)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8167%" y="853" width="0.0105%" height="15" fill="rgb(251,196,0)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="863.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8167%" y="837" width="0.0105%" height="15" fill="rgb(212,127,0)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8167%" y="821" width="0.0105%" height="15" fill="rgb(236,71,53)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="831.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8167%" y="805" width="0.0105%" height="15" fill="rgb(227,99,0)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="815.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8167%" y="789" width="0.0105%" height="15" fill="rgb(239,89,21)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="799.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8167%" y="773" width="0.0105%" height="15" fill="rgb(243,122,19)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="783.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="29.8167%" y="757" width="0.0105%" height="15" fill="rgb(229,192,45)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="767.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="29.8167%" y="741" width="0.0105%" height="15" fill="rgb(235,165,35)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="751.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="29.8167%" y="725" width="0.0105%" height="15" fill="rgb(253,202,0)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="735.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="29.8167%" y="709" width="0.0105%" height="15" fill="rgb(235,51,20)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="719.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="29.8167%" y="693" width="0.0105%" height="15" fill="rgb(218,95,46)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="703.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="29.8167%" y="677" width="0.0105%" height="15" fill="rgb(212,81,10)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="687.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="29.8167%" y="661" width="0.0105%" height="15" fill="rgb(240,59,0)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="671.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="29.8167%" y="645" width="0.0105%" height="15" fill="rgb(212,191,42)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="655.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="29.8167%" y="629" width="0.0105%" height="15" fill="rgb(233,140,3)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="639.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="29.8167%" y="613" width="0.0105%" height="15" fill="rgb(215,69,23)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="623.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="29.8167%" y="597" width="0.0105%" height="15" fill="rgb(240,202,20)" fg:x="2846" fg:w="1"/><text x="30.0667%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.8690%" y="853" width="0.0105%" height="15" fill="rgb(209,146,50)" fg:x="2851" fg:w="1"/><text x="30.1190%" y="863.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (7 samples, 0.07%)</title><rect x="29.8271%" y="1045" width="0.0733%" height="15" fill="rgb(253,102,54)" fg:x="2847" fg:w="7"/><text x="30.0771%" y="1055.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (7 samples, 0.07%)</title><rect x="29.8271%" y="1029" width="0.0733%" height="15" fill="rgb(250,173,47)" fg:x="2847" fg:w="7"/><text x="30.0771%" y="1039.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (7 samples, 0.07%)</title><rect x="29.8271%" y="1013" width="0.0733%" height="15" fill="rgb(232,142,7)" fg:x="2847" fg:w="7"/><text x="30.0771%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="29.8271%" y="997" width="0.0733%" height="15" fill="rgb(230,157,47)" fg:x="2847" fg:w="7"/><text x="30.0771%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="29.8271%" y="981" width="0.0733%" height="15" fill="rgb(214,177,35)" fg:x="2847" fg:w="7"/><text x="30.0771%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="29.8271%" y="965" width="0.0733%" height="15" fill="rgb(234,119,46)" fg:x="2847" fg:w="7"/><text x="30.0771%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="29.8271%" y="949" width="0.0733%" height="15" fill="rgb(241,180,50)" fg:x="2847" fg:w="7"/><text x="30.0771%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="29.8271%" y="933" width="0.0733%" height="15" fill="rgb(221,54,25)" fg:x="2847" fg:w="7"/><text x="30.0771%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="29.8271%" y="917" width="0.0733%" height="15" fill="rgb(209,157,44)" fg:x="2847" fg:w="7"/><text x="30.0771%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="29.8376%" y="901" width="0.0629%" height="15" fill="rgb(246,115,41)" fg:x="2848" fg:w="6"/><text x="30.0876%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="29.8586%" y="885" width="0.0419%" height="15" fill="rgb(229,86,1)" fg:x="2850" fg:w="4"/><text x="30.1086%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="29.8690%" y="869" width="0.0314%" height="15" fill="rgb(240,108,53)" fg:x="2851" fg:w="3"/><text x="30.1190%" y="879.50"></text></g><g><title>__GI___pthread_mutex_lock (2 samples, 0.02%)</title><rect x="29.8795%" y="853" width="0.0210%" height="15" fill="rgb(227,134,2)" fg:x="2852" fg:w="2"/><text x="30.1295%" y="863.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (26 samples, 0.27%)</title><rect x="29.6490%" y="1237" width="0.2724%" height="15" fill="rgb(213,129,25)" fg:x="2830" fg:w="26"/><text x="29.8990%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (26 samples, 0.27%)</title><rect x="29.6490%" y="1221" width="0.2724%" height="15" fill="rgb(226,35,21)" fg:x="2830" fg:w="26"/><text x="29.8990%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (26 samples, 0.27%)</title><rect x="29.6490%" y="1205" width="0.2724%" height="15" fill="rgb(208,129,26)" fg:x="2830" fg:w="26"/><text x="29.8990%" y="1215.50"></text></g><g><title>bevy_wgpu::get_wgpu_render_system::{{closure}} (26 samples, 0.27%)</title><rect x="29.6490%" y="1189" width="0.2724%" height="15" fill="rgb(224,83,6)" fg:x="2830" fg:w="26"/><text x="29.8990%" y="1199.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (26 samples, 0.27%)</title><rect x="29.6490%" y="1173" width="0.2724%" height="15" fill="rgb(227,52,39)" fg:x="2830" fg:w="26"/><text x="29.8990%" y="1183.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (25 samples, 0.26%)</title><rect x="29.6595%" y="1157" width="0.2619%" height="15" fill="rgb(241,30,17)" fg:x="2831" fg:w="25"/><text x="29.9095%" y="1167.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (25 samples, 0.26%)</title><rect x="29.6595%" y="1141" width="0.2619%" height="15" fill="rgb(246,186,42)" fg:x="2831" fg:w="25"/><text x="29.9095%" y="1151.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (25 samples, 0.26%)</title><rect x="29.6595%" y="1125" width="0.2619%" height="15" fill="rgb(221,169,15)" fg:x="2831" fg:w="25"/><text x="29.9095%" y="1135.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (25 samples, 0.26%)</title><rect x="29.6595%" y="1109" width="0.2619%" height="15" fill="rgb(235,108,21)" fg:x="2831" fg:w="25"/><text x="29.9095%" y="1119.50"></text></g><g><title>wgpu::Queue::submit (9 samples, 0.09%)</title><rect x="29.8271%" y="1093" width="0.0943%" height="15" fill="rgb(219,148,30)" fg:x="2847" fg:w="9"/><text x="30.0771%" y="1103.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (9 samples, 0.09%)</title><rect x="29.8271%" y="1077" width="0.0943%" height="15" fill="rgb(220,109,5)" fg:x="2847" fg:w="9"/><text x="30.0771%" y="1087.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (9 samples, 0.09%)</title><rect x="29.8271%" y="1061" width="0.0943%" height="15" fill="rgb(213,203,48)" fg:x="2847" fg:w="9"/><text x="30.0771%" y="1071.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (2 samples, 0.02%)</title><rect x="29.9005%" y="1045" width="0.0210%" height="15" fill="rgb(244,71,33)" fg:x="2854" fg:w="2"/><text x="30.1505%" y="1055.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (2 samples, 0.02%)</title><rect x="29.9005%" y="1029" width="0.0210%" height="15" fill="rgb(209,23,2)" fg:x="2854" fg:w="2"/><text x="30.1505%" y="1039.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (2 samples, 0.02%)</title><rect x="29.9005%" y="1013" width="0.0210%" height="15" fill="rgb(219,97,7)" fg:x="2854" fg:w="2"/><text x="30.1505%" y="1023.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (2 samples, 0.02%)</title><rect x="29.9005%" y="997" width="0.0210%" height="15" fill="rgb(216,161,23)" fg:x="2854" fg:w="2"/><text x="30.1505%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="29.9005%" y="981" width="0.0210%" height="15" fill="rgb(207,45,42)" fg:x="2854" fg:w="2"/><text x="30.1505%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="29.9005%" y="965" width="0.0210%" height="15" fill="rgb(241,61,4)" fg:x="2854" fg:w="2"/><text x="30.1505%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="29.9005%" y="949" width="0.0210%" height="15" fill="rgb(236,170,1)" fg:x="2854" fg:w="2"/><text x="30.1505%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.9109%" y="933" width="0.0105%" height="15" fill="rgb(239,72,5)" fg:x="2855" fg:w="1"/><text x="30.1609%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.9109%" y="917" width="0.0105%" height="15" fill="rgb(214,13,50)" fg:x="2855" fg:w="1"/><text x="30.1609%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.9109%" y="901" width="0.0105%" height="15" fill="rgb(224,88,9)" fg:x="2855" fg:w="1"/><text x="30.1609%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="29.9214%" y="997" width="0.0105%" height="15" fill="rgb(238,192,34)" fg:x="2856" fg:w="1"/><text x="30.1714%" y="1007.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (2 samples, 0.02%)</title><rect x="29.9214%" y="1237" width="0.0210%" height="15" fill="rgb(217,203,50)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1247.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (2 samples, 0.02%)</title><rect x="29.9214%" y="1221" width="0.0210%" height="15" fill="rgb(241,123,32)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1231.50"></text></g><g><title>bevy_wgpu::get_wgpu_render_system::{{closure}} (2 samples, 0.02%)</title><rect x="29.9214%" y="1205" width="0.0210%" height="15" fill="rgb(248,151,39)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1215.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (2 samples, 0.02%)</title><rect x="29.9214%" y="1189" width="0.0210%" height="15" fill="rgb(208,89,6)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1199.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (2 samples, 0.02%)</title><rect x="29.9214%" y="1173" width="0.0210%" height="15" fill="rgb(254,43,26)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1183.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (2 samples, 0.02%)</title><rect x="29.9214%" y="1157" width="0.0210%" height="15" fill="rgb(216,158,13)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1167.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (2 samples, 0.02%)</title><rect x="29.9214%" y="1141" width="0.0210%" height="15" fill="rgb(212,47,37)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1151.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (2 samples, 0.02%)</title><rect x="29.9214%" y="1125" width="0.0210%" height="15" fill="rgb(254,16,10)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1135.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (2 samples, 0.02%)</title><rect x="29.9214%" y="1109" width="0.0210%" height="15" fill="rgb(223,228,16)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1119.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (2 samples, 0.02%)</title><rect x="29.9214%" y="1093" width="0.0210%" height="15" fill="rgb(249,108,50)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (2 samples, 0.02%)</title><rect x="29.9214%" y="1077" width="0.0210%" height="15" fill="rgb(208,220,5)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (2 samples, 0.02%)</title><rect x="29.9214%" y="1061" width="0.0210%" height="15" fill="rgb(217,89,48)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1071.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (2 samples, 0.02%)</title><rect x="29.9214%" y="1045" width="0.0210%" height="15" fill="rgb(212,113,41)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1055.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (2 samples, 0.02%)</title><rect x="29.9214%" y="1029" width="0.0210%" height="15" fill="rgb(231,127,5)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1039.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (2 samples, 0.02%)</title><rect x="29.9214%" y="1013" width="0.0210%" height="15" fill="rgb(217,141,17)" fg:x="2856" fg:w="2"/><text x="30.1714%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (1 samples, 0.01%)</title><rect x="29.9319%" y="997" width="0.0105%" height="15" fill="rgb(245,125,54)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="29.9319%" y="981" width="0.0105%" height="15" fill="rgb(248,125,3)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="29.9319%" y="965" width="0.0105%" height="15" fill="rgb(236,119,51)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="29.9319%" y="949" width="0.0105%" height="15" fill="rgb(239,99,8)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="29.9319%" y="933" width="0.0105%" height="15" fill="rgb(224,228,4)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="943.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="29.9319%" y="917" width="0.0105%" height="15" fill="rgb(220,131,45)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="29.9319%" y="901" width="0.0105%" height="15" fill="rgb(215,62,5)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (1 samples, 0.01%)</title><rect x="29.9319%" y="885" width="0.0105%" height="15" fill="rgb(253,12,24)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="29.9319%" y="869" width="0.0105%" height="15" fill="rgb(248,120,50)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="879.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="29.9319%" y="853" width="0.0105%" height="15" fill="rgb(245,194,10)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="29.9319%" y="837" width="0.0105%" height="15" fill="rgb(241,149,38)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="29.9319%" y="821" width="0.0105%" height="15" fill="rgb(219,215,7)" fg:x="2857" fg:w="1"/><text x="30.1819%" y="831.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (1 samples, 0.01%)</title><rect x="29.9424%" y="1237" width="0.0105%" height="15" fill="rgb(208,120,31)" fg:x="2858" fg:w="1"/><text x="30.1924%" y="1247.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="29.9529%" y="1237" width="0.0105%" height="15" fill="rgb(244,30,8)" fg:x="2859" fg:w="1"/><text x="30.2029%" y="1247.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="29.9529%" y="1221" width="0.0105%" height="15" fill="rgb(238,35,44)" fg:x="2859" fg:w="1"/><text x="30.2029%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="29.9529%" y="1205" width="0.0105%" height="15" fill="rgb(243,218,37)" fg:x="2859" fg:w="1"/><text x="30.2029%" y="1215.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="29.9529%" y="1189" width="0.0105%" height="15" fill="rgb(218,169,10)" fg:x="2859" fg:w="1"/><text x="30.2029%" y="1199.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="29.9529%" y="1173" width="0.0105%" height="15" fill="rgb(221,144,10)" fg:x="2859" fg:w="1"/><text x="30.2029%" y="1183.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="29.9529%" y="1157" width="0.0105%" height="15" fill="rgb(226,41,38)" fg:x="2859" fg:w="1"/><text x="30.2029%" y="1167.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="29.9529%" y="1141" width="0.0105%" height="15" fill="rgb(228,3,1)" fg:x="2859" fg:w="1"/><text x="30.2029%" y="1151.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="29.9529%" y="1125" width="0.0105%" height="15" fill="rgb(209,129,12)" fg:x="2859" fg:w="1"/><text x="30.2029%" y="1135.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (3 samples, 0.03%)</title><rect x="29.9633%" y="1237" width="0.0314%" height="15" fill="rgb(213,136,33)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (3 samples, 0.03%)</title><rect x="29.9633%" y="1221" width="0.0314%" height="15" fill="rgb(209,181,29)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (3 samples, 0.03%)</title><rect x="29.9633%" y="1205" width="0.0314%" height="15" fill="rgb(234,173,18)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (3 samples, 0.03%)</title><rect x="29.9633%" y="1189" width="0.0314%" height="15" fill="rgb(227,73,47)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1199.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (3 samples, 0.03%)</title><rect x="29.9633%" y="1173" width="0.0314%" height="15" fill="rgb(234,9,34)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1183.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (3 samples, 0.03%)</title><rect x="29.9633%" y="1157" width="0.0314%" height="15" fill="rgb(235,172,15)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1167.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (3 samples, 0.03%)</title><rect x="29.9633%" y="1141" width="0.0314%" height="15" fill="rgb(245,61,2)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1151.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::finish (3 samples, 0.03%)</title><rect x="29.9633%" y="1125" width="0.0314%" height="15" fill="rgb(238,39,47)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1135.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (3 samples, 0.03%)</title><rect x="29.9633%" y="1109" width="0.0314%" height="15" fill="rgb(234,37,24)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1119.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (3 samples, 0.03%)</title><rect x="29.9633%" y="1093" width="0.0314%" height="15" fill="rgb(248,223,24)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.03%)</title><rect x="29.9633%" y="1077" width="0.0314%" height="15" fill="rgb(223,12,15)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1087.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.03%)</title><rect x="29.9633%" y="1061" width="0.0314%" height="15" fill="rgb(249,6,3)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (3 samples, 0.03%)</title><rect x="29.9633%" y="1045" width="0.0314%" height="15" fill="rgb(237,105,33)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="29.9633%" y="1029" width="0.0314%" height="15" fill="rgb(252,208,35)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.03%)</title><rect x="29.9633%" y="1013" width="0.0314%" height="15" fill="rgb(215,181,35)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.03%)</title><rect x="29.9633%" y="997" width="0.0314%" height="15" fill="rgb(246,212,3)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (3 samples, 0.03%)</title><rect x="29.9633%" y="981" width="0.0314%" height="15" fill="rgb(247,156,24)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (3 samples, 0.03%)</title><rect x="29.9633%" y="965" width="0.0314%" height="15" fill="rgb(248,9,31)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (3 samples, 0.03%)</title><rect x="29.9633%" y="949" width="0.0314%" height="15" fill="rgb(234,26,45)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="959.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (3 samples, 0.03%)</title><rect x="29.9633%" y="933" width="0.0314%" height="15" fill="rgb(249,11,32)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="943.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (3 samples, 0.03%)</title><rect x="29.9633%" y="917" width="0.0314%" height="15" fill="rgb(249,162,33)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="927.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (3 samples, 0.03%)</title><rect x="29.9633%" y="901" width="0.0314%" height="15" fill="rgb(232,4,32)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="911.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="29.9633%" y="885" width="0.0314%" height="15" fill="rgb(212,5,45)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="895.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="29.9633%" y="869" width="0.0314%" height="15" fill="rgb(227,95,13)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="879.50"></text></g><g><title>_int_malloc (3 samples, 0.03%)</title><rect x="29.9633%" y="853" width="0.0314%" height="15" fill="rgb(223,205,10)" fg:x="2860" fg:w="3"/><text x="30.2133%" y="863.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="29.9843%" y="837" width="0.0105%" height="15" fill="rgb(222,178,8)" fg:x="2862" fg:w="1"/><text x="30.2343%" y="847.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="29.9948%" y="1237" width="0.0733%" height="15" fill="rgb(216,13,22)" fg:x="2863" fg:w="7"/><text x="30.2448%" y="1247.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlas as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::get_render_resource (2 samples, 0.02%)</title><rect x="30.0681%" y="1237" width="0.0210%" height="15" fill="rgb(240,167,12)" fg:x="2870" fg:w="2"/><text x="30.3181%" y="1247.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlas as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::render_resources_len (2 samples, 0.02%)</title><rect x="30.0891%" y="1237" width="0.0210%" height="15" fill="rgb(235,68,35)" fg:x="2872" fg:w="2"/><text x="30.3391%" y="1247.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (1 samples, 0.01%)</title><rect x="30.1100%" y="1237" width="0.0105%" height="15" fill="rgb(253,40,27)" fg:x="2874" fg:w="1"/><text x="30.3600%" y="1247.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::render_resources_len (2 samples, 0.02%)</title><rect x="30.1205%" y="1237" width="0.0210%" height="15" fill="rgb(214,19,28)" fg:x="2875" fg:w="2"/><text x="30.3705%" y="1247.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::resource_type (2 samples, 0.02%)</title><rect x="30.1414%" y="1237" width="0.0210%" height="15" fill="rgb(210,167,45)" fg:x="2877" fg:w="2"/><text x="30.3914%" y="1247.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::render_resources_len (2 samples, 0.02%)</title><rect x="30.1624%" y="1237" width="0.0210%" height="15" fill="rgb(232,97,40)" fg:x="2879" fg:w="2"/><text x="30.4124%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="30.1833%" y="1237" width="0.0105%" height="15" fill="rgb(250,35,23)" fg:x="2881" fg:w="1"/><text x="30.4333%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (1 samples, 0.01%)</title><rect x="30.1938%" y="1237" width="0.0105%" height="15" fill="rgb(248,47,53)" fg:x="2882" fg:w="1"/><text x="30.4438%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (1 samples, 0.01%)</title><rect x="30.2043%" y="1237" width="0.0105%" height="15" fill="rgb(226,58,50)" fg:x="2883" fg:w="1"/><text x="30.4543%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (3 samples, 0.03%)</title><rect x="30.2148%" y="1237" width="0.0314%" height="15" fill="rgb(217,105,26)" fg:x="2884" fg:w="3"/><text x="30.4648%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::remove_stale_bind_groups (2 samples, 0.02%)</title><rect x="30.2462%" y="1237" width="0.0210%" height="15" fill="rgb(208,64,1)" fg:x="2887" fg:w="2"/><text x="30.4962%" y="1247.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_index_buffer (1 samples, 0.01%)</title><rect x="30.2672%" y="1237" width="0.0105%" height="15" fill="rgb(214,80,1)" fg:x="2889" fg:w="1"/><text x="30.5172%" y="1247.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="30.2776%" y="1237" width="0.0105%" height="15" fill="rgb(206,175,26)" fg:x="2890" fg:w="1"/><text x="30.5276%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="30.2881%" y="1237" width="0.0105%" height="15" fill="rgb(235,156,37)" fg:x="2891" fg:w="1"/><text x="30.5381%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::PhysicalDevice as gfx_hal::adapter::PhysicalDevice&lt;gfx_backend_vulkan::Backend&gt;&gt;::open (1 samples, 0.01%)</title><rect x="30.2986%" y="1237" width="0.0105%" height="15" fill="rgb(213,100,9)" fg:x="2892" fg:w="1"/><text x="30.5486%" y="1247.50"></text></g><g><title>&lt;ash::instance::Instance as ash::instance::InstanceV1_0&gt;::create_device (1 samples, 0.01%)</title><rect x="30.2986%" y="1221" width="0.0105%" height="15" fill="rgb(241,15,13)" fg:x="2892" fg:w="1"/><text x="30.5486%" y="1231.50"></text></g><g><title>ash::vk::features::InstanceFnV1_0::create_device (1 samples, 0.01%)</title><rect x="30.2986%" y="1205" width="0.0105%" height="15" fill="rgb(205,97,43)" fg:x="2892" fg:w="1"/><text x="30.5486%" y="1215.50"></text></g><g><title>vkCreateDevice (1 samples, 0.01%)</title><rect x="30.2986%" y="1189" width="0.0105%" height="15" fill="rgb(216,106,32)" fg:x="2892" fg:w="1"/><text x="30.5486%" y="1199.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="30.2986%" y="1173" width="0.0105%" height="15" fill="rgb(226,200,8)" fg:x="2892" fg:w="1"/><text x="30.5486%" y="1183.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="30.2986%" y="1157" width="0.0105%" height="15" fill="rgb(244,54,29)" fg:x="2892" fg:w="1"/><text x="30.5486%" y="1167.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="30.2986%" y="1141" width="0.0105%" height="15" fill="rgb(252,169,12)" fg:x="2892" fg:w="1"/><text x="30.5486%" y="1151.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="30.2986%" y="1125" width="0.0105%" height="15" fill="rgb(231,199,11)" fg:x="2892" fg:w="1"/><text x="30.5486%" y="1135.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="30.2986%" y="1109" width="0.0105%" height="15" fill="rgb(233,191,18)" fg:x="2892" fg:w="1"/><text x="30.5486%" y="1119.50"></text></g><g><title>gfx_backend_vulkan::debug_utils_messenger_callback (1 samples, 0.01%)</title><rect x="30.2986%" y="1093" width="0.0105%" height="15" fill="rgb(215,83,47)" fg:x="2892" fg:w="1"/><text x="30.5486%" y="1103.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (1 samples, 0.01%)</title><rect x="30.3719%" y="1221" width="0.0105%" height="15" fill="rgb(251,67,19)" fg:x="2899" fg:w="1"/><text x="30.6219%" y="1231.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (10 samples, 0.10%)</title><rect x="30.3091%" y="1237" width="0.1048%" height="15" fill="rgb(240,7,20)" fg:x="2893" fg:w="10"/><text x="30.5591%" y="1247.50"></text></g><g><title>gfx_backend_vulkan::command::destructure_barriers (3 samples, 0.03%)</title><rect x="30.3824%" y="1221" width="0.0314%" height="15" fill="rgb(210,150,26)" fg:x="2900" fg:w="3"/><text x="30.6324%" y="1231.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="30.4138%" y="1237" width="0.0210%" height="15" fill="rgb(228,75,42)" fg:x="2903" fg:w="2"/><text x="30.6638%" y="1247.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="30.4348%" y="1237" width="0.0210%" height="15" fill="rgb(237,134,48)" fg:x="2905" fg:w="2"/><text x="30.6848%" y="1247.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (4 samples, 0.04%)</title><rect x="30.4557%" y="1237" width="0.0419%" height="15" fill="rgb(205,80,50)" fg:x="2907" fg:w="4"/><text x="30.7057%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_scissors (1 samples, 0.01%)</title><rect x="30.5291%" y="1173" width="0.0105%" height="15" fill="rgb(217,74,48)" fg:x="2914" fg:w="1"/><text x="30.7791%" y="1183.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="30.5291%" y="1157" width="0.0105%" height="15" fill="rgb(205,82,50)" fg:x="2914" fg:w="1"/><text x="30.7791%" y="1167.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (1 samples, 0.01%)</title><rect x="30.5291%" y="1141" width="0.0105%" height="15" fill="rgb(228,1,33)" fg:x="2914" fg:w="1"/><text x="30.7791%" y="1151.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="30.5395%" y="1173" width="0.0105%" height="15" fill="rgb(214,50,23)" fg:x="2915" fg:w="1"/><text x="30.7895%" y="1183.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="30.5500%" y="1141" width="0.0105%" height="15" fill="rgb(210,62,9)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="1151.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (1 samples, 0.01%)</title><rect x="30.5500%" y="1125" width="0.0105%" height="15" fill="rgb(210,104,37)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="1135.50"></text></g><g><title>&lt;wgpu_core::device::AttachmentData&lt;T&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="30.5500%" y="1109" width="0.0105%" height="15" fill="rgb(232,104,43)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="1119.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="30.5500%" y="1093" width="0.0105%" height="15" fill="rgb(244,52,6)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="1103.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="30.5500%" y="1077" width="0.0105%" height="15" fill="rgb(211,174,52)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="1087.50"></text></g><g><title>core::hash::Hash::hash_slice (1 samples, 0.01%)</title><rect x="30.5500%" y="1061" width="0.0105%" height="15" fill="rgb(229,48,4)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="1071.50"></text></g><g><title>&lt;gfx_hal::image::FramebufferAttachment as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="30.5500%" y="1045" width="0.0105%" height="15" fill="rgb(205,155,16)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="1055.50"></text></g><g><title>&lt;gfx_hal::format::Format as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="30.5500%" y="1029" width="0.0105%" height="15" fill="rgb(211,141,53)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="1039.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="30.5500%" y="1013" width="0.0105%" height="15" fill="rgb(240,148,11)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="1023.50"></text></g><g><title>&lt;fxhash::FxHasher as core::hash::Hasher&gt;::write_u32 (1 samples, 0.01%)</title><rect x="30.5500%" y="997" width="0.0105%" height="15" fill="rgb(214,45,23)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="1007.50"></text></g><g><title>&lt;usize as fxhash::HashWord&gt;::hash_word (1 samples, 0.01%)</title><rect x="30.5500%" y="981" width="0.0105%" height="15" fill="rgb(248,74,26)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="991.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="30.5500%" y="965" width="0.0105%" height="15" fill="rgb(218,121,16)" fg:x="2916" fg:w="1"/><text x="30.8000%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="30.5605%" y="1125" width="0.0105%" height="15" fill="rgb(218,10,47)" fg:x="2917" fg:w="1"/><text x="30.8105%" y="1135.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="30.5605%" y="1109" width="0.0105%" height="15" fill="rgb(227,99,14)" fg:x="2917" fg:w="1"/><text x="30.8105%" y="1119.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="30.5605%" y="1093" width="0.0105%" height="15" fill="rgb(229,83,46)" fg:x="2917" fg:w="1"/><text x="30.8105%" y="1103.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="30.5605%" y="1077" width="0.0105%" height="15" fill="rgb(228,25,1)" fg:x="2917" fg:w="1"/><text x="30.8105%" y="1087.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="30.5605%" y="1061" width="0.0105%" height="15" fill="rgb(252,190,15)" fg:x="2917" fg:w="1"/><text x="30.8105%" y="1071.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="30.5605%" y="1045" width="0.0105%" height="15" fill="rgb(213,103,51)" fg:x="2917" fg:w="1"/><text x="30.8105%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.03%)</title><rect x="30.5500%" y="1173" width="0.0314%" height="15" fill="rgb(220,38,44)" fg:x="2916" fg:w="3"/><text x="30.8000%" y="1183.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (3 samples, 0.03%)</title><rect x="30.5500%" y="1157" width="0.0314%" height="15" fill="rgb(210,45,26)" fg:x="2916" fg:w="3"/><text x="30.8000%" y="1167.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="30.5605%" y="1141" width="0.0210%" height="15" fill="rgb(205,95,48)" fg:x="2917" fg:w="2"/><text x="30.8105%" y="1151.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (1 samples, 0.01%)</title><rect x="30.5710%" y="1125" width="0.0105%" height="15" fill="rgb(225,179,37)" fg:x="2918" fg:w="1"/><text x="30.8210%" y="1135.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (1 samples, 0.01%)</title><rect x="30.5710%" y="1109" width="0.0105%" height="15" fill="rgb(230,209,3)" fg:x="2918" fg:w="1"/><text x="30.8210%" y="1119.50"></text></g><g><title>&lt;wgpu_core::device::AttachmentData&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="30.5710%" y="1093" width="0.0105%" height="15" fill="rgb(248,12,46)" fg:x="2918" fg:w="1"/><text x="30.8210%" y="1103.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="30.5710%" y="1077" width="0.0105%" height="15" fill="rgb(234,18,0)" fg:x="2918" fg:w="1"/><text x="30.8210%" y="1087.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="30.5710%" y="1061" width="0.0105%" height="15" fill="rgb(238,197,14)" fg:x="2918" fg:w="1"/><text x="30.8210%" y="1071.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="30.5710%" y="1045" width="0.0105%" height="15" fill="rgb(251,162,48)" fg:x="2918" fg:w="1"/><text x="30.8210%" y="1055.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="30.5710%" y="1029" width="0.0105%" height="15" fill="rgb(237,73,42)" fg:x="2918" fg:w="1"/><text x="30.8210%" y="1039.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="30.5710%" y="1013" width="0.0105%" height="15" fill="rgb(211,108,8)" fg:x="2918" fg:w="1"/><text x="30.8210%" y="1023.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="30.5710%" y="997" width="0.0105%" height="15" fill="rgb(213,45,22)" fg:x="2918" fg:w="1"/><text x="30.8210%" y="1007.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="30.5710%" y="981" width="0.0105%" height="15" fill="rgb(252,154,5)" fg:x="2918" fg:w="1"/><text x="30.8210%" y="991.50"></text></g><g><title>wgpu_core::command::render::DepthStencilAttachmentDescriptor::is_read_only (1 samples, 0.01%)</title><rect x="30.5815%" y="1173" width="0.0105%" height="15" fill="rgb(221,79,52)" fg:x="2919" fg:w="1"/><text x="30.8315%" y="1183.50"></text></g><g><title>wgpu_core::device::AttachmentData&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="30.5919%" y="1173" width="0.0105%" height="15" fill="rgb(229,220,36)" fg:x="2920" fg:w="1"/><text x="30.8419%" y="1183.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="30.5919%" y="1157" width="0.0105%" height="15" fill="rgb(211,17,16)" fg:x="2920" fg:w="1"/><text x="30.8419%" y="1167.50"></text></g><g><title>&lt;arrayvec::ArrayVec&lt;A&gt; as core::iter::traits::collect::FromIterator&lt;&lt;A as arrayvec::array::Array&gt;::Item&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="30.5919%" y="1141" width="0.0105%" height="15" fill="rgb(222,55,31)" fg:x="2920" fg:w="1"/><text x="30.8419%" y="1151.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="30.6024%" y="1125" width="0.0105%" height="15" fill="rgb(221,221,31)" fg:x="2921" fg:w="1"/><text x="30.8524%" y="1135.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="30.6024%" y="1109" width="0.0105%" height="15" fill="rgb(227,168,26)" fg:x="2921" fg:w="1"/><text x="30.8524%" y="1119.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="30.6024%" y="1093" width="0.0105%" height="15" fill="rgb(224,139,9)" fg:x="2921" fg:w="1"/><text x="30.8524%" y="1103.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (12 samples, 0.13%)</title><rect x="30.4976%" y="1237" width="0.1257%" height="15" fill="rgb(254,172,0)" fg:x="2911" fg:w="12"/><text x="30.7476%" y="1247.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (12 samples, 0.13%)</title><rect x="30.4976%" y="1221" width="0.1257%" height="15" fill="rgb(235,203,1)" fg:x="2911" fg:w="12"/><text x="30.7476%" y="1231.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (12 samples, 0.13%)</title><rect x="30.4976%" y="1205" width="0.1257%" height="15" fill="rgb(216,205,24)" fg:x="2911" fg:w="12"/><text x="30.7476%" y="1215.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start (12 samples, 0.13%)</title><rect x="30.4976%" y="1189" width="0.1257%" height="15" fill="rgb(233,24,6)" fg:x="2911" fg:w="12"/><text x="30.7476%" y="1199.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (2 samples, 0.02%)</title><rect x="30.6024%" y="1173" width="0.0210%" height="15" fill="rgb(244,110,9)" fg:x="2921" fg:w="2"/><text x="30.8524%" y="1183.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (2 samples, 0.02%)</title><rect x="30.6024%" y="1157" width="0.0210%" height="15" fill="rgb(239,222,42)" fg:x="2921" fg:w="2"/><text x="30.8524%" y="1167.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (2 samples, 0.02%)</title><rect x="30.6024%" y="1141" width="0.0210%" height="15" fill="rgb(218,145,13)" fg:x="2921" fg:w="2"/><text x="30.8524%" y="1151.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (1 samples, 0.01%)</title><rect x="30.6129%" y="1125" width="0.0105%" height="15" fill="rgb(207,69,11)" fg:x="2922" fg:w="1"/><text x="30.8629%" y="1135.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (1 samples, 0.01%)</title><rect x="30.6129%" y="1109" width="0.0105%" height="15" fill="rgb(220,223,22)" fg:x="2922" fg:w="1"/><text x="30.8629%" y="1119.50"></text></g><g><title>&lt;wgpu_core::hub::Global&lt;G&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="30.6234%" y="1237" width="0.0105%" height="15" fill="rgb(245,102,5)" fg:x="2923" fg:w="1"/><text x="30.8734%" y="1247.50"></text></g><g><title>wgpu_core::hub::Hub&lt;B,F&gt;::clear (1 samples, 0.01%)</title><rect x="30.6234%" y="1221" width="0.0105%" height="15" fill="rgb(211,148,2)" fg:x="2923" fg:w="1"/><text x="30.8734%" y="1231.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::unconfigure_swapchain (1 samples, 0.01%)</title><rect x="30.6234%" y="1205" width="0.0105%" height="15" fill="rgb(241,13,44)" fg:x="2923" fg:w="1"/><text x="30.8734%" y="1215.50"></text></g><g><title>gfx_backend_vulkan::window::SurfaceSwapchain::release_resources (1 samples, 0.01%)</title><rect x="30.6234%" y="1189" width="0.0105%" height="15" fill="rgb(219,137,21)" fg:x="2923" fg:w="1"/><text x="30.8734%" y="1199.50"></text></g><g><title>ash::device::DeviceV1_0::destroy_fence (1 samples, 0.01%)</title><rect x="30.6234%" y="1173" width="0.0105%" height="15" fill="rgb(242,206,5)" fg:x="2923" fg:w="1"/><text x="30.8734%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="30.6234%" y="1157" width="0.0105%" height="15" fill="rgb(217,114,22)" fg:x="2923" fg:w="1"/><text x="30.8734%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="30.6234%" y="1141" width="0.0105%" height="15" fill="rgb(253,206,42)" fg:x="2923" fg:w="1"/><text x="30.8734%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="30.6234%" y="1125" width="0.0105%" height="15" fill="rgb(236,102,18)" fg:x="2923" fg:w="1"/><text x="30.8734%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="30.6234%" y="1109" width="0.0105%" height="15" fill="rgb(208,59,49)" fg:x="2923" fg:w="1"/><text x="30.8734%" y="1119.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="30.6338%" y="1237" width="0.0105%" height="15" fill="rgb(215,194,28)" fg:x="2924" fg:w="1"/><text x="30.8838%" y="1247.50"></text></g><g><title>XStringToKeysym (1 samples, 0.01%)</title><rect x="30.7596%" y="1221" width="0.0105%" height="15" fill="rgb(243,207,11)" fg:x="2936" fg:w="1"/><text x="31.0096%" y="1231.50"></text></g><g><title>[libX11.so.6.4.0] (14 samples, 0.15%)</title><rect x="30.7805%" y="1205" width="0.1467%" height="15" fill="rgb(254,179,35)" fg:x="2938" fg:w="14"/><text x="31.0305%" y="1215.50"></text></g><g><title>fgetc (13 samples, 0.14%)</title><rect x="30.7910%" y="1189" width="0.1362%" height="15" fill="rgb(235,97,3)" fg:x="2939" fg:w="13"/><text x="31.0410%" y="1199.50"></text></g><g><title>[libX11.so.6.4.0] (19 samples, 0.20%)</title><rect x="30.7700%" y="1221" width="0.1991%" height="15" fill="rgb(215,155,33)" fg:x="2937" fg:w="19"/><text x="31.0200%" y="1231.50"></text></g><g><title>fgetc (4 samples, 0.04%)</title><rect x="30.9272%" y="1205" width="0.0419%" height="15" fill="rgb(223,128,12)" fg:x="2952" fg:w="4"/><text x="31.1772%" y="1215.50"></text></g><g><title>_XOpenLC (2 samples, 0.02%)</title><rect x="30.9691%" y="1221" width="0.0210%" height="15" fill="rgb(208,157,18)" fg:x="2956" fg:w="2"/><text x="31.2191%" y="1231.50"></text></g><g><title>_XlcGetLocaleDataBase (1 samples, 0.01%)</title><rect x="30.9900%" y="1221" width="0.0105%" height="15" fill="rgb(249,70,54)" fg:x="2958" fg:w="1"/><text x="31.2400%" y="1231.50"></text></g><g><title>_XrmInternalStringToQuark (1 samples, 0.01%)</title><rect x="30.9900%" y="1205" width="0.0105%" height="15" fill="rgb(244,118,24)" fg:x="2958" fg:w="1"/><text x="31.2400%" y="1215.50"></text></g><g><title>_XOpenLC (1 samples, 0.01%)</title><rect x="31.0005%" y="1205" width="0.0105%" height="15" fill="rgb(211,54,0)" fg:x="2959" fg:w="1"/><text x="31.2505%" y="1215.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="31.0005%" y="1189" width="0.0105%" height="15" fill="rgb(245,137,45)" fg:x="2959" fg:w="1"/><text x="31.2505%" y="1199.50"></text></g><g><title>_Xlcmbstoutf8 (3 samples, 0.03%)</title><rect x="31.0005%" y="1221" width="0.0314%" height="15" fill="rgb(232,154,31)" fg:x="2959" fg:w="3"/><text x="31.2505%" y="1231.50"></text></g><g><title>_XlcOpenConverter (2 samples, 0.02%)</title><rect x="31.0110%" y="1205" width="0.0210%" height="15" fill="rgb(253,6,39)" fg:x="2960" fg:w="2"/><text x="31.2610%" y="1215.50"></text></g><g><title>XrmStringToQuark (2 samples, 0.02%)</title><rect x="31.0110%" y="1189" width="0.0210%" height="15" fill="rgb(234,183,24)" fg:x="2960" fg:w="2"/><text x="31.2610%" y="1199.50"></text></g><g><title>_Xlcmbstowcs (2 samples, 0.02%)</title><rect x="31.0320%" y="1221" width="0.0210%" height="15" fill="rgb(252,84,40)" fg:x="2962" fg:w="2"/><text x="31.2820%" y="1231.50"></text></g><g><title>_XlcOpenConverter (2 samples, 0.02%)</title><rect x="31.0320%" y="1205" width="0.0210%" height="15" fill="rgb(224,65,2)" fg:x="2962" fg:w="2"/><text x="31.2820%" y="1215.50"></text></g><g><title>_XrmInternalStringToQuark (2 samples, 0.02%)</title><rect x="31.0320%" y="1189" width="0.0210%" height="15" fill="rgb(229,38,24)" fg:x="2962" fg:w="2"/><text x="31.2820%" y="1199.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (2 samples, 0.02%)</title><rect x="31.0320%" y="1173" width="0.0210%" height="15" fill="rgb(218,131,50)" fg:x="2962" fg:w="2"/><text x="31.2820%" y="1183.50"></text></g><g><title>[libX11.so.6.4.0] (40 samples, 0.42%)</title><rect x="30.6443%" y="1237" width="0.4191%" height="15" fill="rgb(233,106,18)" fg:x="2925" fg:w="40"/><text x="30.8943%" y="1247.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="31.0529%" y="1221" width="0.0105%" height="15" fill="rgb(220,216,11)" fg:x="2964" fg:w="1"/><text x="31.3029%" y="1231.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="31.0634%" y="1237" width="0.0105%" height="15" fill="rgb(251,100,45)" fg:x="2965" fg:w="1"/><text x="31.3134%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (33 samples, 0.35%)</title><rect x="31.0739%" y="1237" width="0.3457%" height="15" fill="rgb(235,143,32)" fg:x="2966" fg:w="33"/><text x="31.3239%" y="1247.50"></text></g><g><title>xcb_send_request (1 samples, 0.01%)</title><rect x="31.4091%" y="1221" width="0.0105%" height="15" fill="rgb(248,124,34)" fg:x="2998" fg:w="1"/><text x="31.6591%" y="1231.50"></text></g><g><title>[libstd-10ccbcbb85a60ebf.so] (1 samples, 0.01%)</title><rect x="31.4196%" y="1237" width="0.0105%" height="15" fill="rgb(225,221,4)" fg:x="2999" fg:w="1"/><text x="31.6696%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.4196%" y="1221" width="0.0105%" height="15" fill="rgb(242,27,43)" fg:x="2999" fg:w="1"/><text x="31.6696%" y="1231.50"></text></g><g><title>[libudev.so.1.7.1] (1 samples, 0.01%)</title><rect x="31.4301%" y="1237" width="0.0105%" height="15" fill="rgb(227,54,8)" fg:x="3000" fg:w="1"/><text x="31.6801%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.4929%" y="1061" width="0.0105%" height="15" fill="rgb(253,139,49)" fg:x="3006" fg:w="1"/><text x="31.7429%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.4929%" y="1045" width="0.0105%" height="15" fill="rgb(231,26,43)" fg:x="3006" fg:w="1"/><text x="31.7429%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.4929%" y="1029" width="0.0105%" height="15" fill="rgb(207,121,39)" fg:x="3006" fg:w="1"/><text x="31.7429%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.4929%" y="1013" width="0.0105%" height="15" fill="rgb(223,101,35)" fg:x="3006" fg:w="1"/><text x="31.7429%" y="1023.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="31.4929%" y="997" width="0.0105%" height="15" fill="rgb(232,87,23)" fg:x="3006" fg:w="1"/><text x="31.7429%" y="1007.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (7 samples, 0.07%)</title><rect x="31.4405%" y="1221" width="0.0733%" height="15" fill="rgb(225,180,29)" fg:x="3001" fg:w="7"/><text x="31.6905%" y="1231.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="31.4405%" y="1205" width="0.0733%" height="15" fill="rgb(225,25,17)" fg:x="3001" fg:w="7"/><text x="31.6905%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="31.4405%" y="1189" width="0.0733%" height="15" fill="rgb(223,8,52)" fg:x="3001" fg:w="7"/><text x="31.6905%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="31.4405%" y="1173" width="0.0733%" height="15" fill="rgb(246,42,21)" fg:x="3001" fg:w="7"/><text x="31.6905%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="31.4405%" y="1157" width="0.0733%" height="15" fill="rgb(205,64,43)" fg:x="3001" fg:w="7"/><text x="31.6905%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="31.4405%" y="1141" width="0.0733%" height="15" fill="rgb(221,160,13)" fg:x="3001" fg:w="7"/><text x="31.6905%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="31.4405%" y="1125" width="0.0733%" height="15" fill="rgb(239,58,35)" fg:x="3001" fg:w="7"/><text x="31.6905%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="31.4405%" y="1109" width="0.0733%" height="15" fill="rgb(251,26,40)" fg:x="3001" fg:w="7"/><text x="31.6905%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (7 samples, 0.07%)</title><rect x="31.4405%" y="1093" width="0.0733%" height="15" fill="rgb(247,0,4)" fg:x="3001" fg:w="7"/><text x="31.6905%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="31.4929%" y="1077" width="0.0210%" height="15" fill="rgb(218,130,10)" fg:x="3006" fg:w="2"/><text x="31.7429%" y="1087.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="31.5034%" y="1061" width="0.0105%" height="15" fill="rgb(239,32,7)" fg:x="3007" fg:w="1"/><text x="31.7534%" y="1071.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.5139%" y="1205" width="0.0105%" height="15" fill="rgb(210,192,24)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1215.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.5139%" y="1189" width="0.0105%" height="15" fill="rgb(226,212,17)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.5139%" y="1173" width="0.0105%" height="15" fill="rgb(219,201,28)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.5139%" y="1157" width="0.0105%" height="15" fill="rgb(235,207,41)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.5139%" y="1141" width="0.0105%" height="15" fill="rgb(241,95,54)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.5139%" y="1125" width="0.0105%" height="15" fill="rgb(248,12,23)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.5139%" y="1109" width="0.0105%" height="15" fill="rgb(228,173,4)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.5139%" y="1093" width="0.0105%" height="15" fill="rgb(254,99,5)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.5139%" y="1077" width="0.0105%" height="15" fill="rgb(212,184,17)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="31.5139%" y="1061" width="0.0105%" height="15" fill="rgb(252,174,1)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1071.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="31.5139%" y="1045" width="0.0105%" height="15" fill="rgb(241,118,51)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1055.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="31.5139%" y="1029" width="0.0105%" height="15" fill="rgb(227,94,47)" fg:x="3008" fg:w="1"/><text x="31.7639%" y="1039.50"></text></g><g><title>[libvulkan.so.1.2.187] (2 samples, 0.02%)</title><rect x="31.5139%" y="1221" width="0.0210%" height="15" fill="rgb(229,104,2)" fg:x="3008" fg:w="2"/><text x="31.7639%" y="1231.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="31.5244%" y="1205" width="0.0105%" height="15" fill="rgb(219,28,31)" fg:x="3009" fg:w="1"/><text x="31.7744%" y="1215.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="31.5244%" y="1189" width="0.0105%" height="15" fill="rgb(233,109,36)" fg:x="3009" fg:w="1"/><text x="31.7744%" y="1199.50"></text></g><g><title>[libvulkan.so.1.2.187] (10 samples, 0.10%)</title><rect x="31.4405%" y="1237" width="0.1048%" height="15" fill="rgb(246,88,11)" fg:x="3001" fg:w="10"/><text x="31.6905%" y="1247.50"></text></g><g><title>___snprintf_chk (1 samples, 0.01%)</title><rect x="31.5348%" y="1221" width="0.0105%" height="15" fill="rgb(209,212,17)" fg:x="3010" fg:w="1"/><text x="31.7848%" y="1231.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="31.5348%" y="1205" width="0.0105%" height="15" fill="rgb(243,59,29)" fg:x="3010" fg:w="1"/><text x="31.7848%" y="1215.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="31.5348%" y="1189" width="0.0105%" height="15" fill="rgb(244,205,48)" fg:x="3010" fg:w="1"/><text x="31.7848%" y="1199.50"></text></g><g><title>_XlcResolveLocaleName (1 samples, 0.01%)</title><rect x="31.5453%" y="1237" width="0.0105%" height="15" fill="rgb(227,30,6)" fg:x="3011" fg:w="1"/><text x="31.7953%" y="1247.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="31.5453%" y="1221" width="0.0105%" height="15" fill="rgb(220,205,48)" fg:x="3011" fg:w="1"/><text x="31.7953%" y="1231.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="31.5558%" y="1237" width="0.0105%" height="15" fill="rgb(250,94,14)" fg:x="3012" fg:w="1"/><text x="31.8058%" y="1247.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="31.5663%" y="1237" width="0.0210%" height="15" fill="rgb(216,119,42)" fg:x="3013" fg:w="2"/><text x="31.8163%" y="1247.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.03%)</title><rect x="31.5872%" y="1237" width="0.0314%" height="15" fill="rgb(232,155,0)" fg:x="3015" fg:w="3"/><text x="31.8372%" y="1247.50"></text></g><g><title>__GI___strdup (1 samples, 0.01%)</title><rect x="31.6186%" y="1237" width="0.0105%" height="15" fill="rgb(212,24,32)" fg:x="3018" fg:w="1"/><text x="31.8686%" y="1247.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="31.6291%" y="1237" width="0.0105%" height="15" fill="rgb(216,69,20)" fg:x="3019" fg:w="1"/><text x="31.8791%" y="1247.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="31.6396%" y="1237" width="0.0210%" height="15" fill="rgb(229,73,31)" fg:x="3020" fg:w="2"/><text x="31.8896%" y="1247.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.01%)</title><rect x="31.6606%" y="1237" width="0.0105%" height="15" fill="rgb(224,219,20)" fg:x="3022" fg:w="1"/><text x="31.9106%" y="1247.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="31.6710%" y="1237" width="0.0105%" height="15" fill="rgb(215,146,41)" fg:x="3023" fg:w="1"/><text x="31.9210%" y="1247.50"></text></g><g><title>__rdl_realloc (4 samples, 0.04%)</title><rect x="31.6815%" y="1237" width="0.0419%" height="15" fill="rgb(244,71,31)" fg:x="3024" fg:w="4"/><text x="31.9315%" y="1247.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (3 samples, 0.03%)</title><rect x="31.6920%" y="1221" width="0.0314%" height="15" fill="rgb(224,24,11)" fg:x="3025" fg:w="3"/><text x="31.9420%" y="1231.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="31.7234%" y="1237" width="0.0419%" height="15" fill="rgb(229,76,15)" fg:x="3028" fg:w="4"/><text x="31.9734%" y="1247.50"></text></g><g><title>_int_malloc (7 samples, 0.07%)</title><rect x="31.7653%" y="1237" width="0.0733%" height="15" fill="rgb(209,93,2)" fg:x="3032" fg:w="7"/><text x="32.0153%" y="1247.50"></text></g><g><title>_int_realloc (5 samples, 0.05%)</title><rect x="31.8387%" y="1237" width="0.0524%" height="15" fill="rgb(216,200,50)" fg:x="3039" fg:w="5"/><text x="32.0887%" y="1247.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="31.8910%" y="1237" width="0.0105%" height="15" fill="rgb(211,67,34)" fg:x="3044" fg:w="1"/><text x="32.1410%" y="1247.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="31.9015%" y="1237" width="0.0105%" height="15" fill="rgb(225,87,47)" fg:x="3045" fg:w="1"/><text x="32.1515%" y="1247.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="31.9120%" y="1237" width="0.0314%" height="15" fill="rgb(217,185,16)" fg:x="3046" fg:w="3"/><text x="32.1620%" y="1247.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="31.9434%" y="1237" width="0.0105%" height="15" fill="rgb(205,0,0)" fg:x="3049" fg:w="1"/><text x="32.1934%" y="1247.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (1 samples, 0.01%)</title><rect x="31.9539%" y="1237" width="0.0105%" height="15" fill="rgb(207,116,45)" fg:x="3050" fg:w="1"/><text x="32.2039%" y="1247.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (3 samples, 0.03%)</title><rect x="31.9644%" y="1237" width="0.0314%" height="15" fill="rgb(221,156,26)" fg:x="3051" fg:w="3"/><text x="32.2144%" y="1247.50"></text></g><g><title>async_executor::Executor::spawn (1 samples, 0.01%)</title><rect x="31.9958%" y="1237" width="0.0105%" height="15" fill="rgb(213,140,4)" fg:x="3054" fg:w="1"/><text x="32.2458%" y="1247.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (8 samples, 0.08%)</title><rect x="32.0063%" y="1237" width="0.0838%" height="15" fill="rgb(231,224,15)" fg:x="3055" fg:w="8"/><text x="32.2563%" y="1247.50"></text></g><g><title>async_task::header::Header::register (1 samples, 0.01%)</title><rect x="32.0901%" y="1237" width="0.0105%" height="15" fill="rgb(244,76,20)" fg:x="3063" fg:w="1"/><text x="32.3401%" y="1247.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (1 samples, 0.01%)</title><rect x="32.1006%" y="1237" width="0.0105%" height="15" fill="rgb(238,117,7)" fg:x="3064" fg:w="1"/><text x="32.3506%" y="1247.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::init_non_send_resource (2 samples, 0.02%)</title><rect x="32.1111%" y="1237" width="0.0210%" height="15" fill="rgb(235,1,10)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1247.50"></text></g><g><title>&lt;T as bevy_ecs::world::FromWorld&gt;::from_world (2 samples, 0.02%)</title><rect x="32.1111%" y="1221" width="0.0210%" height="15" fill="rgb(216,165,6)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1231.50"></text></g><g><title>&lt;bevy_audio::audio_output::AudioOutput&lt;P&gt; as core::default::Default&gt;::default (2 samples, 0.02%)</title><rect x="32.1111%" y="1205" width="0.0210%" height="15" fill="rgb(246,91,35)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1215.50"></text></g><g><title>rodio::stream::OutputStream::try_default (2 samples, 0.02%)</title><rect x="32.1111%" y="1189" width="0.0210%" height="15" fill="rgb(228,96,24)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1199.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (2 samples, 0.02%)</title><rect x="32.1111%" y="1173" width="0.0210%" height="15" fill="rgb(254,217,53)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1183.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (2 samples, 0.02%)</title><rect x="32.1111%" y="1157" width="0.0210%" height="15" fill="rgb(209,60,0)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1167.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (2 samples, 0.02%)</title><rect x="32.1111%" y="1141" width="0.0210%" height="15" fill="rgb(250,93,26)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1151.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (2 samples, 0.02%)</title><rect x="32.1111%" y="1125" width="0.0210%" height="15" fill="rgb(211,9,40)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1135.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (2 samples, 0.02%)</title><rect x="32.1111%" y="1109" width="0.0210%" height="15" fill="rgb(242,57,20)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1119.50"></text></g><g><title>cpal::host::alsa::Device::default_config (2 samples, 0.02%)</title><rect x="32.1111%" y="1093" width="0.0210%" height="15" fill="rgb(248,85,48)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1103.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (2 samples, 0.02%)</title><rect x="32.1111%" y="1077" width="0.0210%" height="15" fill="rgb(212,117,2)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1087.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (2 samples, 0.02%)</title><rect x="32.1111%" y="1061" width="0.0210%" height="15" fill="rgb(243,19,3)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1071.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (2 samples, 0.02%)</title><rect x="32.1111%" y="1045" width="0.0210%" height="15" fill="rgb(232,217,24)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1055.50"></text></g><g><title>alsa::pcm::PCM::new (2 samples, 0.02%)</title><rect x="32.1111%" y="1029" width="0.0210%" height="15" fill="rgb(224,175,40)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1039.50"></text></g><g><title>alsa::pcm::PCM::open (2 samples, 0.02%)</title><rect x="32.1111%" y="1013" width="0.0210%" height="15" fill="rgb(212,162,32)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1023.50"></text></g><g><title>snd_pcm_open (2 samples, 0.02%)</title><rect x="32.1111%" y="997" width="0.0210%" height="15" fill="rgb(215,9,4)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="1007.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="32.1111%" y="981" width="0.0210%" height="15" fill="rgb(242,42,7)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="991.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="32.1111%" y="965" width="0.0210%" height="15" fill="rgb(242,184,45)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="975.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="32.1111%" y="949" width="0.0210%" height="15" fill="rgb(228,111,51)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="959.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="32.1111%" y="933" width="0.0210%" height="15" fill="rgb(236,147,17)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="943.50"></text></g><g><title>snd_dlopen (2 samples, 0.02%)</title><rect x="32.1111%" y="917" width="0.0210%" height="15" fill="rgb(210,75,22)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="927.50"></text></g><g><title>dlopen (2 samples, 0.02%)</title><rect x="32.1111%" y="901" width="0.0210%" height="15" fill="rgb(217,159,45)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="911.50"></text></g><g><title>[libdl-2.33.so] (2 samples, 0.02%)</title><rect x="32.1111%" y="885" width="0.0210%" height="15" fill="rgb(245,165,53)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="895.50"></text></g><g><title>__GI__dl_catch_error (2 samples, 0.02%)</title><rect x="32.1111%" y="869" width="0.0210%" height="15" fill="rgb(251,190,50)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="879.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="32.1111%" y="853" width="0.0210%" height="15" fill="rgb(208,203,29)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="863.50"></text></g><g><title>[libdl-2.33.so] (2 samples, 0.02%)</title><rect x="32.1111%" y="837" width="0.0210%" height="15" fill="rgb(207,209,35)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="847.50"></text></g><g><title>_dl_open (2 samples, 0.02%)</title><rect x="32.1111%" y="821" width="0.0210%" height="15" fill="rgb(230,144,49)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="831.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="32.1111%" y="805" width="0.0210%" height="15" fill="rgb(229,31,6)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="815.50"></text></g><g><title>dl_open_worker (2 samples, 0.02%)</title><rect x="32.1111%" y="789" width="0.0210%" height="15" fill="rgb(251,129,24)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="799.50"></text></g><g><title>_dl_relocate_object (2 samples, 0.02%)</title><rect x="32.1111%" y="773" width="0.0210%" height="15" fill="rgb(235,105,15)" fg:x="3065" fg:w="2"/><text x="32.3611%" y="783.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (2 samples, 0.02%)</title><rect x="32.1320%" y="1237" width="0.0210%" height="15" fill="rgb(216,52,43)" fg:x="3067" fg:w="2"/><text x="32.3820%" y="1247.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (2 samples, 0.02%)</title><rect x="32.1320%" y="1221" width="0.0210%" height="15" fill="rgb(238,144,41)" fg:x="3067" fg:w="2"/><text x="32.3820%" y="1231.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (1 samples, 0.01%)</title><rect x="32.1425%" y="1205" width="0.0105%" height="15" fill="rgb(243,63,9)" fg:x="3068" fg:w="1"/><text x="32.3925%" y="1215.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (1 samples, 0.01%)</title><rect x="32.1425%" y="1189" width="0.0105%" height="15" fill="rgb(246,208,1)" fg:x="3068" fg:w="1"/><text x="32.3925%" y="1199.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="32.1530%" y="1237" width="0.0210%" height="15" fill="rgb(233,182,18)" fg:x="3069" fg:w="2"/><text x="32.4030%" y="1247.50"></text></g><g><title>bevy_audio::audio_output::play_queued_audio_system (1 samples, 0.01%)</title><rect x="32.1739%" y="1237" width="0.0105%" height="15" fill="rgb(242,224,8)" fg:x="3071" fg:w="1"/><text x="32.4239%" y="1247.50"></text></g><g><title>bevy_ecs::world::World::cell (1 samples, 0.01%)</title><rect x="32.1739%" y="1221" width="0.0105%" height="15" fill="rgb(243,54,37)" fg:x="3071" fg:w="1"/><text x="32.4239%" y="1231.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (6 samples, 0.06%)</title><rect x="32.1844%" y="1237" width="0.0629%" height="15" fill="rgb(233,192,12)" fg:x="3072" fg:w="6"/><text x="32.4344%" y="1247.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (2 samples, 0.02%)</title><rect x="32.2472%" y="1237" width="0.0210%" height="15" fill="rgb(251,192,53)" fg:x="3078" fg:w="2"/><text x="32.4972%" y="1247.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare::{{closure}} (1 samples, 0.01%)</title><rect x="32.2577%" y="1221" width="0.0105%" height="15" fill="rgb(246,141,26)" fg:x="3079" fg:w="1"/><text x="32.5077%" y="1231.50"></text></g><g><title>bevy_ecs::world::World::get (1 samples, 0.01%)</title><rect x="32.2577%" y="1205" width="0.0105%" height="15" fill="rgb(239,195,19)" fg:x="3079" fg:w="1"/><text x="32.5077%" y="1215.50"></text></g><g><title>bevy_ecs::world::World::get_entity (1 samples, 0.01%)</title><rect x="32.2577%" y="1189" width="0.0105%" height="15" fill="rgb(241,16,39)" fg:x="3079" fg:w="1"/><text x="32.5077%" y="1199.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (1 samples, 0.01%)</title><rect x="32.2682%" y="1237" width="0.0105%" height="15" fill="rgb(223,13,53)" fg:x="3080" fg:w="1"/><text x="32.5182%" y="1247.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (1 samples, 0.01%)</title><rect x="32.2787%" y="1237" width="0.0105%" height="15" fill="rgb(214,227,0)" fg:x="3081" fg:w="1"/><text x="32.5287%" y="1247.50"></text></g><g><title>bevy_render::draw::clear_draw_system (1 samples, 0.01%)</title><rect x="32.2892%" y="1237" width="0.0105%" height="15" fill="rgb(228,103,26)" fg:x="3082" fg:w="1"/><text x="32.5392%" y="1247.50"></text></g><g><title>bevy_render::draw::Draw::clear_render_commands (1 samples, 0.01%)</title><rect x="32.2892%" y="1221" width="0.0105%" height="15" fill="rgb(254,177,53)" fg:x="3082" fg:w="1"/><text x="32.5392%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="32.2892%" y="1205" width="0.0105%" height="15" fill="rgb(208,201,34)" fg:x="3082" fg:w="1"/><text x="32.5392%" y="1215.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (1 samples, 0.01%)</title><rect x="32.2892%" y="1189" width="0.0105%" height="15" fill="rgb(212,39,5)" fg:x="3082" fg:w="1"/><text x="32.5392%" y="1199.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (3 samples, 0.03%)</title><rect x="32.2996%" y="1237" width="0.0314%" height="15" fill="rgb(246,117,3)" fg:x="3083" fg:w="3"/><text x="32.5496%" y="1247.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (2 samples, 0.02%)</title><rect x="32.3311%" y="1237" width="0.0210%" height="15" fill="rgb(244,118,39)" fg:x="3086" fg:w="2"/><text x="32.5811%" y="1247.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (1 samples, 0.01%)</title><rect x="32.3415%" y="1221" width="0.0105%" height="15" fill="rgb(241,64,10)" fg:x="3087" fg:w="1"/><text x="32.5915%" y="1231.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="32.3520%" y="1237" width="0.0105%" height="15" fill="rgb(229,39,44)" fg:x="3088" fg:w="1"/><text x="32.6020%" y="1247.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (2 samples, 0.02%)</title><rect x="32.3625%" y="1237" width="0.0210%" height="15" fill="rgb(230,226,3)" fg:x="3089" fg:w="2"/><text x="32.6125%" y="1247.50"></text></g><g><title>bevy_render::render_graph::node::Node::prepare (1 samples, 0.01%)</title><rect x="32.3834%" y="1237" width="0.0105%" height="15" fill="rgb(222,13,42)" fg:x="3091" fg:w="1"/><text x="32.6334%" y="1247.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (5 samples, 0.05%)</title><rect x="32.3939%" y="1237" width="0.0524%" height="15" fill="rgb(247,180,54)" fg:x="3092" fg:w="5"/><text x="32.6439%" y="1247.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::iter (2 samples, 0.02%)</title><rect x="32.4254%" y="1221" width="0.0210%" height="15" fill="rgb(205,96,16)" fg:x="3095" fg:w="2"/><text x="32.6754%" y="1231.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (3 samples, 0.03%)</title><rect x="32.4463%" y="1237" width="0.0314%" height="15" fill="rgb(205,100,21)" fg:x="3097" fg:w="3"/><text x="32.6963%" y="1247.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (1 samples, 0.01%)</title><rect x="32.4777%" y="1237" width="0.0105%" height="15" fill="rgb(248,51,4)" fg:x="3100" fg:w="1"/><text x="32.7277%" y="1247.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (1 samples, 0.01%)</title><rect x="32.4882%" y="1237" width="0.0105%" height="15" fill="rgb(217,197,30)" fg:x="3101" fg:w="1"/><text x="32.7382%" y="1247.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (5 samples, 0.05%)</title><rect x="32.4987%" y="1237" width="0.0524%" height="15" fill="rgb(240,179,40)" fg:x="3102" fg:w="5"/><text x="32.7487%" y="1247.50"></text></g><g><title>bevy_render::texture::texture::&lt;impl bevy_render::renderer::render_resource::render_resource::RenderResource for bevy_asset::handle::Handle&lt;bevy_render::texture::texture::Texture&gt;&gt;::texture (1 samples, 0.01%)</title><rect x="32.5511%" y="1237" width="0.0105%" height="15" fill="rgb(212,185,35)" fg:x="3107" fg:w="1"/><text x="32.8011%" y="1247.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (2 samples, 0.02%)</title><rect x="32.5616%" y="1237" width="0.0210%" height="15" fill="rgb(251,222,31)" fg:x="3108" fg:w="2"/><text x="32.8116%" y="1247.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (1 samples, 0.01%)</title><rect x="32.5720%" y="1221" width="0.0105%" height="15" fill="rgb(208,140,36)" fg:x="3109" fg:w="1"/><text x="32.8220%" y="1231.50"></text></g><g><title>bevy_wgpu::get_wgpu_render_system::{{closure}} (1 samples, 0.01%)</title><rect x="32.5825%" y="1237" width="0.0105%" height="15" fill="rgb(220,148,1)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1247.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (1 samples, 0.01%)</title><rect x="32.5825%" y="1221" width="0.0105%" height="15" fill="rgb(254,4,28)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1231.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (1 samples, 0.01%)</title><rect x="32.5825%" y="1205" width="0.0105%" height="15" fill="rgb(222,185,44)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1215.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (1 samples, 0.01%)</title><rect x="32.5825%" y="1189" width="0.0105%" height="15" fill="rgb(215,74,39)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1199.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (1 samples, 0.01%)</title><rect x="32.5825%" y="1173" width="0.0105%" height="15" fill="rgb(247,86,4)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1183.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (1 samples, 0.01%)</title><rect x="32.5825%" y="1157" width="0.0105%" height="15" fill="rgb(231,105,32)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1167.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="32.5825%" y="1141" width="0.0105%" height="15" fill="rgb(222,65,35)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1151.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (1 samples, 0.01%)</title><rect x="32.5825%" y="1125" width="0.0105%" height="15" fill="rgb(218,145,35)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (1 samples, 0.01%)</title><rect x="32.5825%" y="1109" width="0.0105%" height="15" fill="rgb(208,7,15)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (1 samples, 0.01%)</title><rect x="32.5825%" y="1093" width="0.0105%" height="15" fill="rgb(209,83,13)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1103.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (1 samples, 0.01%)</title><rect x="32.5825%" y="1077" width="0.0105%" height="15" fill="rgb(218,3,10)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1087.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (1 samples, 0.01%)</title><rect x="32.5825%" y="1061" width="0.0105%" height="15" fill="rgb(211,219,4)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1071.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (1 samples, 0.01%)</title><rect x="32.5825%" y="1045" width="0.0105%" height="15" fill="rgb(228,194,12)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (1 samples, 0.01%)</title><rect x="32.5825%" y="1029" width="0.0105%" height="15" fill="rgb(210,175,7)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.5825%" y="1013" width="0.0105%" height="15" fill="rgb(243,132,6)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.5825%" y="997" width="0.0105%" height="15" fill="rgb(207,72,18)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.5825%" y="981" width="0.0105%" height="15" fill="rgb(236,1,18)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="32.5825%" y="965" width="0.0105%" height="15" fill="rgb(227,0,18)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.5825%" y="949" width="0.0105%" height="15" fill="rgb(247,37,5)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.01%)</title><rect x="32.5825%" y="933" width="0.0105%" height="15" fill="rgb(237,179,24)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.01%)</title><rect x="32.5825%" y="917" width="0.0105%" height="15" fill="rgb(226,53,20)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="32.5825%" y="901" width="0.0105%" height="15" fill="rgb(247,75,7)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="911.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="32.5825%" y="885" width="0.0105%" height="15" fill="rgb(233,96,12)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="895.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="32.5825%" y="869" width="0.0105%" height="15" fill="rgb(224,125,0)" fg:x="3110" fg:w="1"/><text x="32.8325%" y="879.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::bind_vertex_buffers (1 samples, 0.01%)</title><rect x="32.5930%" y="1109" width="0.0105%" height="15" fill="rgb(224,92,25)" fg:x="3111" fg:w="1"/><text x="32.8430%" y="1119.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="32.5930%" y="1093" width="0.0105%" height="15" fill="rgb(224,42,24)" fg:x="3111" fg:w="1"/><text x="32.8430%" y="1103.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (1 samples, 0.01%)</title><rect x="32.5930%" y="1077" width="0.0105%" height="15" fill="rgb(234,132,49)" fg:x="3111" fg:w="1"/><text x="32.8430%" y="1087.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (1 samples, 0.01%)</title><rect x="32.5930%" y="1061" width="0.0105%" height="15" fill="rgb(248,100,35)" fg:x="3111" fg:w="1"/><text x="32.8430%" y="1071.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (2 samples, 0.02%)</title><rect x="32.6035%" y="1109" width="0.0210%" height="15" fill="rgb(239,94,40)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="1119.50"></text></g><g><title>wgpu_core::command::bind::BindGroupEntry::provide (2 samples, 0.02%)</title><rect x="32.6035%" y="1093" width="0.0210%" height="15" fill="rgb(235,139,28)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="1103.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="32.6035%" y="1077" width="0.0210%" height="15" fill="rgb(217,144,7)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="32.6035%" y="1061" width="0.0210%" height="15" fill="rgb(227,55,4)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="1071.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="32.6035%" y="1045" width="0.0210%" height="15" fill="rgb(252,82,54)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="32.6035%" y="1029" width="0.0210%" height="15" fill="rgb(245,172,4)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="1039.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="32.6035%" y="1013" width="0.0210%" height="15" fill="rgb(207,26,27)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="32.6035%" y="997" width="0.0210%" height="15" fill="rgb(252,98,18)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="32.6035%" y="981" width="0.0210%" height="15" fill="rgb(244,8,26)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="991.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="32.6035%" y="965" width="0.0210%" height="15" fill="rgb(237,173,45)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="975.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="32.6035%" y="949" width="0.0210%" height="15" fill="rgb(208,213,49)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="959.50"></text></g><g><title>_int_malloc (2 samples, 0.02%)</title><rect x="32.6035%" y="933" width="0.0210%" height="15" fill="rgb(212,122,37)" fg:x="3112" fg:w="2"/><text x="32.8535%" y="943.50"></text></g><g><title>&lt;wgpu_core::track::texture::TextureState as wgpu_core::track::ResourceState&gt;::change (1 samples, 0.01%)</title><rect x="32.6244%" y="1077" width="0.0105%" height="15" fill="rgb(213,80,17)" fg:x="3114" fg:w="1"/><text x="32.8744%" y="1087.50"></text></g><g><title>wgpu_core::track::range::RangedStates&lt;I,T&gt;::isolate (1 samples, 0.01%)</title><rect x="32.6244%" y="1061" width="0.0105%" height="15" fill="rgb(206,210,43)" fg:x="3114" fg:w="1"/><text x="32.8744%" y="1071.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::finish (3 samples, 0.03%)</title><rect x="32.6244%" y="1109" width="0.0314%" height="15" fill="rgb(229,214,3)" fg:x="3114" fg:w="3"/><text x="32.8744%" y="1119.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (3 samples, 0.03%)</title><rect x="32.6244%" y="1093" width="0.0314%" height="15" fill="rgb(235,213,29)" fg:x="3114" fg:w="3"/><text x="32.8744%" y="1103.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (2 samples, 0.02%)</title><rect x="32.6349%" y="1077" width="0.0210%" height="15" fill="rgb(248,135,26)" fg:x="3115" fg:w="2"/><text x="32.8849%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="32.6349%" y="1061" width="0.0210%" height="15" fill="rgb(242,188,12)" fg:x="3115" fg:w="2"/><text x="32.8849%" y="1071.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="32.6349%" y="1045" width="0.0210%" height="15" fill="rgb(245,38,12)" fg:x="3115" fg:w="2"/><text x="32.8849%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (2 samples, 0.02%)</title><rect x="32.6349%" y="1029" width="0.0210%" height="15" fill="rgb(218,42,13)" fg:x="3115" fg:w="2"/><text x="32.8849%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="32.6349%" y="1013" width="0.0210%" height="15" fill="rgb(238,132,49)" fg:x="3115" fg:w="2"/><text x="32.8849%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="32.6349%" y="997" width="0.0210%" height="15" fill="rgb(209,196,19)" fg:x="3115" fg:w="2"/><text x="32.8849%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="32.6454%" y="981" width="0.0105%" height="15" fill="rgb(244,131,22)" fg:x="3116" fg:w="1"/><text x="32.8954%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="32.6454%" y="965" width="0.0105%" height="15" fill="rgb(223,18,34)" fg:x="3116" fg:w="1"/><text x="32.8954%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="32.6454%" y="949" width="0.0105%" height="15" fill="rgb(252,124,54)" fg:x="3116" fg:w="1"/><text x="32.8954%" y="959.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="32.6454%" y="933" width="0.0105%" height="15" fill="rgb(229,106,42)" fg:x="3116" fg:w="1"/><text x="32.8954%" y="943.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="32.6454%" y="917" width="0.0105%" height="15" fill="rgb(221,129,1)" fg:x="3116" fg:w="1"/><text x="32.8954%" y="927.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="32.6454%" y="901" width="0.0105%" height="15" fill="rgb(229,74,15)" fg:x="3116" fg:w="1"/><text x="32.8954%" y="911.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="32.6454%" y="885" width="0.0105%" height="15" fill="rgb(210,206,50)" fg:x="3116" fg:w="1"/><text x="32.8954%" y="895.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="32.6454%" y="869" width="0.0105%" height="15" fill="rgb(251,114,31)" fg:x="3116" fg:w="1"/><text x="32.8954%" y="879.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="32.6454%" y="853" width="0.0105%" height="15" fill="rgb(215,225,28)" fg:x="3116" fg:w="1"/><text x="32.8954%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="32.6663%" y="1029" width="0.0314%" height="15" fill="rgb(237,109,14)" fg:x="3118" fg:w="3"/><text x="32.9163%" y="1039.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="32.6873%" y="1013" width="0.0105%" height="15" fill="rgb(230,13,37)" fg:x="3120" fg:w="1"/><text x="32.9373%" y="1023.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="32.6663%" y="1077" width="0.0419%" height="15" fill="rgb(231,40,28)" fg:x="3118" fg:w="4"/><text x="32.9163%" y="1087.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="32.6663%" y="1061" width="0.0419%" height="15" fill="rgb(231,202,18)" fg:x="3118" fg:w="4"/><text x="32.9163%" y="1071.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="32.6663%" y="1045" width="0.0419%" height="15" fill="rgb(225,33,18)" fg:x="3118" fg:w="4"/><text x="32.9163%" y="1055.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (1 samples, 0.01%)</title><rect x="32.6977%" y="1029" width="0.0105%" height="15" fill="rgb(223,64,47)" fg:x="3121" fg:w="1"/><text x="32.9477%" y="1039.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::zip (3 samples, 0.03%)</title><rect x="32.7082%" y="1077" width="0.0314%" height="15" fill="rgb(234,114,13)" fg:x="3122" fg:w="3"/><text x="32.9582%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="32.7397%" y="1045" width="0.0105%" height="15" fill="rgb(248,56,40)" fg:x="3125" fg:w="1"/><text x="32.9897%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="32.7397%" y="1029" width="0.0105%" height="15" fill="rgb(221,194,21)" fg:x="3125" fg:w="1"/><text x="32.9897%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="32.7397%" y="1013" width="0.0105%" height="15" fill="rgb(242,108,46)" fg:x="3125" fg:w="1"/><text x="32.9897%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="32.7397%" y="997" width="0.0105%" height="15" fill="rgb(220,106,10)" fg:x="3125" fg:w="1"/><text x="32.9897%" y="1007.50"></text></g><g><title>core::mem::swap (1 samples, 0.01%)</title><rect x="32.7397%" y="981" width="0.0105%" height="15" fill="rgb(211,88,4)" fg:x="3125" fg:w="1"/><text x="32.9897%" y="991.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (1 samples, 0.01%)</title><rect x="32.7397%" y="965" width="0.0105%" height="15" fill="rgb(214,95,34)" fg:x="3125" fg:w="1"/><text x="32.9897%" y="975.50"></text></g><g><title>core::ptr::swap_nonoverlapping (1 samples, 0.01%)</title><rect x="32.7397%" y="949" width="0.0105%" height="15" fill="rgb(250,160,33)" fg:x="3125" fg:w="1"/><text x="32.9897%" y="959.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (1 samples, 0.01%)</title><rect x="32.7397%" y="933" width="0.0105%" height="15" fill="rgb(225,29,10)" fg:x="3125" fg:w="1"/><text x="32.9897%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="32.7397%" y="917" width="0.0105%" height="15" fill="rgb(224,28,30)" fg:x="3125" fg:w="1"/><text x="32.9897%" y="927.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="32.7920%" y="981" width="0.0105%" height="15" fill="rgb(231,77,4)" fg:x="3130" fg:w="1"/><text x="33.0420%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="32.7606%" y="1013" width="0.0524%" height="15" fill="rgb(209,63,21)" fg:x="3127" fg:w="5"/><text x="33.0106%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="32.7816%" y="997" width="0.0314%" height="15" fill="rgb(226,22,11)" fg:x="3129" fg:w="3"/><text x="33.0316%" y="1007.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="32.8025%" y="981" width="0.0105%" height="15" fill="rgb(216,82,30)" fg:x="3131" fg:w="1"/><text x="33.0525%" y="991.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="32.7606%" y="1029" width="0.0629%" height="15" fill="rgb(246,227,38)" fg:x="3127" fg:w="6"/><text x="33.0106%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="32.8130%" y="1013" width="0.0105%" height="15" fill="rgb(251,203,53)" fg:x="3132" fg:w="1"/><text x="33.0630%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="32.8130%" y="997" width="0.0105%" height="15" fill="rgb(254,101,1)" fg:x="3132" fg:w="1"/><text x="33.0630%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="32.8130%" y="981" width="0.0105%" height="15" fill="rgb(241,180,5)" fg:x="3132" fg:w="1"/><text x="33.0630%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="32.8130%" y="965" width="0.0105%" height="15" fill="rgb(218,168,4)" fg:x="3132" fg:w="1"/><text x="33.0630%" y="975.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (9 samples, 0.09%)</title><rect x="32.7397%" y="1077" width="0.0943%" height="15" fill="rgb(224,223,32)" fg:x="3125" fg:w="9"/><text x="32.9897%" y="1087.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (9 samples, 0.09%)</title><rect x="32.7397%" y="1061" width="0.0943%" height="15" fill="rgb(236,106,22)" fg:x="3125" fg:w="9"/><text x="32.9897%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.08%)</title><rect x="32.7501%" y="1045" width="0.0838%" height="15" fill="rgb(206,121,5)" fg:x="3126" fg:w="8"/><text x="33.0001%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="32.8235%" y="1029" width="0.0105%" height="15" fill="rgb(233,87,28)" fg:x="3133" fg:w="1"/><text x="33.0735%" y="1039.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="32.8235%" y="1013" width="0.0105%" height="15" fill="rgb(236,137,17)" fg:x="3133" fg:w="1"/><text x="33.0735%" y="1023.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="32.8235%" y="997" width="0.0105%" height="15" fill="rgb(209,183,38)" fg:x="3133" fg:w="1"/><text x="33.0735%" y="1007.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="32.8235%" y="981" width="0.0105%" height="15" fill="rgb(206,162,44)" fg:x="3133" fg:w="1"/><text x="33.0735%" y="991.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="32.8235%" y="965" width="0.0105%" height="15" fill="rgb(237,70,39)" fg:x="3133" fg:w="1"/><text x="33.0735%" y="975.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="32.8235%" y="949" width="0.0105%" height="15" fill="rgb(212,176,5)" fg:x="3133" fg:w="1"/><text x="33.0735%" y="959.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="32.8235%" y="933" width="0.0105%" height="15" fill="rgb(232,95,16)" fg:x="3133" fg:w="1"/><text x="33.0735%" y="943.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (20 samples, 0.21%)</title><rect x="32.6558%" y="1093" width="0.2095%" height="15" fill="rgb(219,115,35)" fg:x="3117" fg:w="20"/><text x="32.9058%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (3 samples, 0.03%)</title><rect x="32.8339%" y="1077" width="0.0314%" height="15" fill="rgb(251,67,27)" fg:x="3134" fg:w="3"/><text x="33.0839%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (3 samples, 0.03%)</title><rect x="32.8339%" y="1061" width="0.0314%" height="15" fill="rgb(222,95,40)" fg:x="3134" fg:w="3"/><text x="33.0839%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (3 samples, 0.03%)</title><rect x="32.8339%" y="1045" width="0.0314%" height="15" fill="rgb(250,35,16)" fg:x="3134" fg:w="3"/><text x="33.0839%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (2 samples, 0.02%)</title><rect x="32.8444%" y="1029" width="0.0210%" height="15" fill="rgb(224,86,44)" fg:x="3135" fg:w="2"/><text x="33.0944%" y="1039.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (27 samples, 0.28%)</title><rect x="32.5930%" y="1237" width="0.2829%" height="15" fill="rgb(237,53,53)" fg:x="3111" fg:w="27"/><text x="32.8430%" y="1247.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (27 samples, 0.28%)</title><rect x="32.5930%" y="1221" width="0.2829%" height="15" fill="rgb(208,171,33)" fg:x="3111" fg:w="27"/><text x="32.8430%" y="1231.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (27 samples, 0.28%)</title><rect x="32.5930%" y="1205" width="0.2829%" height="15" fill="rgb(222,64,27)" fg:x="3111" fg:w="27"/><text x="32.8430%" y="1215.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (27 samples, 0.28%)</title><rect x="32.5930%" y="1189" width="0.2829%" height="15" fill="rgb(221,121,35)" fg:x="3111" fg:w="27"/><text x="32.8430%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (27 samples, 0.28%)</title><rect x="32.5930%" y="1173" width="0.2829%" height="15" fill="rgb(228,137,42)" fg:x="3111" fg:w="27"/><text x="32.8430%" y="1183.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (27 samples, 0.28%)</title><rect x="32.5930%" y="1157" width="0.2829%" height="15" fill="rgb(227,54,21)" fg:x="3111" fg:w="27"/><text x="32.8430%" y="1167.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (27 samples, 0.28%)</title><rect x="32.5930%" y="1141" width="0.2829%" height="15" fill="rgb(240,168,33)" fg:x="3111" fg:w="27"/><text x="32.8430%" y="1151.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (27 samples, 0.28%)</title><rect x="32.5930%" y="1125" width="0.2829%" height="15" fill="rgb(243,159,6)" fg:x="3111" fg:w="27"/><text x="32.8430%" y="1135.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (21 samples, 0.22%)</title><rect x="32.6558%" y="1109" width="0.2200%" height="15" fill="rgb(205,211,41)" fg:x="3117" fg:w="21"/><text x="32.9058%" y="1119.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (1 samples, 0.01%)</title><rect x="32.8654%" y="1093" width="0.0105%" height="15" fill="rgb(253,30,1)" fg:x="3137" fg:w="1"/><text x="33.1154%" y="1103.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (4 samples, 0.04%)</title><rect x="32.8759%" y="1237" width="0.0419%" height="15" fill="rgb(226,80,18)" fg:x="3138" fg:w="4"/><text x="33.1259%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::finish (2 samples, 0.02%)</title><rect x="32.9178%" y="1061" width="0.0210%" height="15" fill="rgb(253,156,46)" fg:x="3142" fg:w="2"/><text x="33.1678%" y="1071.50"></text></g><g><title>ash::device::DeviceV1_0::end_command_buffer (2 samples, 0.02%)</title><rect x="32.9178%" y="1045" width="0.0210%" height="15" fill="rgb(248,87,27)" fg:x="3142" fg:w="2"/><text x="33.1678%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="32.9178%" y="1029" width="0.0210%" height="15" fill="rgb(227,122,2)" fg:x="3142" fg:w="2"/><text x="33.1678%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="32.9282%" y="1013" width="0.0105%" height="15" fill="rgb(229,94,39)" fg:x="3143" fg:w="1"/><text x="33.1782%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="32.9387%" y="1061" width="0.0105%" height="15" fill="rgb(225,173,31)" fg:x="3144" fg:w="1"/><text x="33.1887%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="32.9387%" y="1045" width="0.0105%" height="15" fill="rgb(239,176,30)" fg:x="3144" fg:w="1"/><text x="33.1887%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="32.9387%" y="1029" width="0.0105%" height="15" fill="rgb(212,104,21)" fg:x="3144" fg:w="1"/><text x="33.1887%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="32.9387%" y="1013" width="0.0105%" height="15" fill="rgb(240,209,40)" fg:x="3144" fg:w="1"/><text x="33.1887%" y="1023.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="32.9492%" y="1061" width="0.0105%" height="15" fill="rgb(234,195,5)" fg:x="3145" fg:w="1"/><text x="33.1992%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="32.9492%" y="1045" width="0.0105%" height="15" fill="rgb(238,213,1)" fg:x="3145" fg:w="1"/><text x="33.1992%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="32.9492%" y="1029" width="0.0105%" height="15" fill="rgb(235,182,54)" fg:x="3145" fg:w="1"/><text x="33.1992%" y="1039.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="32.9492%" y="1013" width="0.0105%" height="15" fill="rgb(229,50,46)" fg:x="3145" fg:w="1"/><text x="33.1992%" y="1023.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="32.9492%" y="997" width="0.0105%" height="15" fill="rgb(219,145,13)" fg:x="3145" fg:w="1"/><text x="33.1992%" y="1007.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="32.9492%" y="981" width="0.0105%" height="15" fill="rgb(220,226,10)" fg:x="3145" fg:w="1"/><text x="33.1992%" y="991.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="32.9492%" y="965" width="0.0105%" height="15" fill="rgb(248,47,30)" fg:x="3145" fg:w="1"/><text x="33.1992%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="32.9492%" y="949" width="0.0105%" height="15" fill="rgb(231,209,44)" fg:x="3145" fg:w="1"/><text x="33.1992%" y="959.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="32.9492%" y="933" width="0.0105%" height="15" fill="rgb(209,80,30)" fg:x="3145" fg:w="1"/><text x="33.1992%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.9597%" y="1045" width="0.0105%" height="15" fill="rgb(232,9,14)" fg:x="3146" fg:w="1"/><text x="33.2097%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.9597%" y="1029" width="0.0105%" height="15" fill="rgb(243,91,43)" fg:x="3146" fg:w="1"/><text x="33.2097%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.9597%" y="1013" width="0.0105%" height="15" fill="rgb(231,90,52)" fg:x="3146" fg:w="1"/><text x="33.2097%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;core::marker::PhantomData&lt;wgpu_core::id::Id&lt;wgpu_core::resource::TextureView&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="32.9597%" y="997" width="0.0105%" height="15" fill="rgb(253,192,44)" fg:x="3146" fg:w="1"/><text x="33.2097%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.9597%" y="981" width="0.0105%" height="15" fill="rgb(241,66,31)" fg:x="3146" fg:w="1"/><text x="33.2097%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.01%)</title><rect x="32.9597%" y="965" width="0.0105%" height="15" fill="rgb(235,81,37)" fg:x="3146" fg:w="1"/><text x="33.2097%" y="975.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.01%)</title><rect x="32.9597%" y="949" width="0.0105%" height="15" fill="rgb(223,221,9)" fg:x="3146" fg:w="1"/><text x="33.2097%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="32.9597%" y="933" width="0.0105%" height="15" fill="rgb(242,180,7)" fg:x="3146" fg:w="1"/><text x="33.2097%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="32.9597%" y="917" width="0.0105%" height="15" fill="rgb(243,78,19)" fg:x="3146" fg:w="1"/><text x="33.2097%" y="927.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="32.9597%" y="901" width="0.0105%" height="15" fill="rgb(233,23,17)" fg:x="3146" fg:w="1"/><text x="33.2097%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="32.9597%" y="885" width="0.0105%" height="15" fill="rgb(252,122,45)" fg:x="3146" fg:w="1"/><text x="33.2097%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (2 samples, 0.02%)</title><rect x="32.9597%" y="1061" width="0.0210%" height="15" fill="rgb(247,108,20)" fg:x="3146" fg:w="2"/><text x="33.2097%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;wgpu_core::track::texture::TextureState&gt;&gt; (1 samples, 0.01%)</title><rect x="32.9701%" y="1045" width="0.0105%" height="15" fill="rgb(235,84,21)" fg:x="3147" fg:w="1"/><text x="33.2201%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::texture::TextureState&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.9701%" y="1029" width="0.0105%" height="15" fill="rgb(247,129,10)" fg:x="3147" fg:w="1"/><text x="33.2201%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::texture::TextureState&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="32.9701%" y="1013" width="0.0105%" height="15" fill="rgb(208,173,14)" fg:x="3147" fg:w="1"/><text x="33.2201%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::texture::TextureState&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="32.9701%" y="997" width="0.0105%" height="15" fill="rgb(236,31,38)" fg:x="3147" fg:w="1"/><text x="33.2201%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="32.9701%" y="981" width="0.0105%" height="15" fill="rgb(232,65,17)" fg:x="3147" fg:w="1"/><text x="33.2201%" y="991.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::is_empty_singleton (1 samples, 0.01%)</title><rect x="32.9701%" y="965" width="0.0105%" height="15" fill="rgb(224,45,49)" fg:x="3147" fg:w="1"/><text x="33.2201%" y="975.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (1 samples, 0.01%)</title><rect x="32.9806%" y="1061" width="0.0105%" height="15" fill="rgb(225,2,53)" fg:x="3148" fg:w="1"/><text x="33.2306%" y="1071.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (1 samples, 0.01%)</title><rect x="32.9806%" y="1045" width="0.0105%" height="15" fill="rgb(248,210,53)" fg:x="3148" fg:w="1"/><text x="33.2306%" y="1055.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (1 samples, 0.01%)</title><rect x="32.9911%" y="1045" width="0.0105%" height="15" fill="rgb(211,1,30)" fg:x="3149" fg:w="1"/><text x="33.2411%" y="1055.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.9911%" y="1029" width="0.0105%" height="15" fill="rgb(224,96,15)" fg:x="3149" fg:w="1"/><text x="33.2411%" y="1039.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.9911%" y="1013" width="0.0105%" height="15" fill="rgb(252,45,11)" fg:x="3149" fg:w="1"/><text x="33.2411%" y="1023.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.9911%" y="997" width="0.0105%" height="15" fill="rgb(220,125,38)" fg:x="3149" fg:w="1"/><text x="33.2411%" y="1007.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="32.9911%" y="981" width="0.0105%" height="15" fill="rgb(243,161,33)" fg:x="3149" fg:w="1"/><text x="33.2411%" y="991.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (2 samples, 0.02%)</title><rect x="32.9911%" y="1061" width="0.0210%" height="15" fill="rgb(248,197,34)" fg:x="3149" fg:w="2"/><text x="33.2411%" y="1071.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (1 samples, 0.01%)</title><rect x="33.0016%" y="1045" width="0.0105%" height="15" fill="rgb(228,165,23)" fg:x="3150" fg:w="1"/><text x="33.2516%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="33.0016%" y="1029" width="0.0105%" height="15" fill="rgb(236,94,38)" fg:x="3150" fg:w="1"/><text x="33.2516%" y="1039.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="33.0016%" y="1013" width="0.0105%" height="15" fill="rgb(220,13,23)" fg:x="3150" fg:w="1"/><text x="33.2516%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="33.0016%" y="997" width="0.0105%" height="15" fill="rgb(234,26,39)" fg:x="3150" fg:w="1"/><text x="33.2516%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="33.0016%" y="981" width="0.0105%" height="15" fill="rgb(205,117,44)" fg:x="3150" fg:w="1"/><text x="33.2516%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (3 samples, 0.03%)</title><rect x="33.0959%" y="997" width="0.0314%" height="15" fill="rgb(250,42,2)" fg:x="3159" fg:w="3"/><text x="33.3459%" y="1007.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="33.0959%" y="981" width="0.0314%" height="15" fill="rgb(223,83,14)" fg:x="3159" fg:w="3"/><text x="33.3459%" y="991.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.03%)</title><rect x="33.0959%" y="965" width="0.0314%" height="15" fill="rgb(241,147,50)" fg:x="3159" fg:w="3"/><text x="33.3459%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (4 samples, 0.04%)</title><rect x="33.0959%" y="1029" width="0.0419%" height="15" fill="rgb(218,90,6)" fg:x="3159" fg:w="4"/><text x="33.3459%" y="1039.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (4 samples, 0.04%)</title><rect x="33.0959%" y="1013" width="0.0419%" height="15" fill="rgb(210,191,5)" fg:x="3159" fg:w="4"/><text x="33.3459%" y="1023.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::as_slice (1 samples, 0.01%)</title><rect x="33.1273%" y="997" width="0.0105%" height="15" fill="rgb(225,139,19)" fg:x="3162" fg:w="1"/><text x="33.3773%" y="1007.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::make_slice (1 samples, 0.01%)</title><rect x="33.1273%" y="981" width="0.0105%" height="15" fill="rgb(210,1,33)" fg:x="3162" fg:w="1"/><text x="33.3773%" y="991.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (4 samples, 0.04%)</title><rect x="33.1378%" y="1029" width="0.0419%" height="15" fill="rgb(213,50,3)" fg:x="3163" fg:w="4"/><text x="33.3878%" y="1039.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (4 samples, 0.04%)</title><rect x="33.1378%" y="1013" width="0.0419%" height="15" fill="rgb(234,227,4)" fg:x="3163" fg:w="4"/><text x="33.3878%" y="1023.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (4 samples, 0.04%)</title><rect x="33.1378%" y="997" width="0.0419%" height="15" fill="rgb(246,63,5)" fg:x="3163" fg:w="4"/><text x="33.3878%" y="1007.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.03%)</title><rect x="33.1482%" y="981" width="0.0314%" height="15" fill="rgb(245,136,27)" fg:x="3164" fg:w="3"/><text x="33.3982%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::command::bind::BindGroupPair&gt;&gt; (9 samples, 0.09%)</title><rect x="33.1797%" y="1029" width="0.0943%" height="15" fill="rgb(247,199,27)" fg:x="3167" fg:w="9"/><text x="33.4297%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::BindGroupPair&gt; (9 samples, 0.09%)</title><rect x="33.1797%" y="1013" width="0.0943%" height="15" fill="rgb(252,158,49)" fg:x="3167" fg:w="9"/><text x="33.4297%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::binding_model::BindGroup&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt; (9 samples, 0.09%)</title><rect x="33.1797%" y="997" width="0.0943%" height="15" fill="rgb(254,73,1)" fg:x="3167" fg:w="9"/><text x="33.4297%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (9 samples, 0.09%)</title><rect x="33.1797%" y="981" width="0.0943%" height="15" fill="rgb(248,93,19)" fg:x="3167" fg:w="9"/><text x="33.4297%" y="991.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (9 samples, 0.09%)</title><rect x="33.1797%" y="965" width="0.0943%" height="15" fill="rgb(206,67,5)" fg:x="3167" fg:w="9"/><text x="33.4297%" y="975.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (9 samples, 0.09%)</title><rect x="33.1797%" y="949" width="0.0943%" height="15" fill="rgb(209,210,4)" fg:x="3167" fg:w="9"/><text x="33.4297%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (9 samples, 0.09%)</title><rect x="33.1797%" y="933" width="0.0943%" height="15" fill="rgb(214,185,36)" fg:x="3167" fg:w="9"/><text x="33.4297%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_sub (9 samples, 0.09%)</title><rect x="33.1797%" y="917" width="0.0943%" height="15" fill="rgb(233,191,26)" fg:x="3167" fg:w="9"/><text x="33.4297%" y="927.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (33 samples, 0.35%)</title><rect x="33.0120%" y="1061" width="0.3457%" height="15" fill="rgb(248,94,17)" fg:x="3151" fg:w="33"/><text x="33.2620%" y="1071.50"></text></g><g><title>wgpu_core::command::bind::BindGroupEntry::provide (29 samples, 0.30%)</title><rect x="33.0540%" y="1045" width="0.3038%" height="15" fill="rgb(250,64,4)" fg:x="3155" fg:w="29"/><text x="33.3040%" y="1055.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (8 samples, 0.08%)</title><rect x="33.2740%" y="1029" width="0.0838%" height="15" fill="rgb(218,41,53)" fg:x="3176" fg:w="8"/><text x="33.5240%" y="1039.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (8 samples, 0.08%)</title><rect x="33.2740%" y="1013" width="0.0838%" height="15" fill="rgb(251,176,28)" fg:x="3176" fg:w="8"/><text x="33.5240%" y="1023.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (8 samples, 0.08%)</title><rect x="33.2740%" y="997" width="0.0838%" height="15" fill="rgb(247,22,9)" fg:x="3176" fg:w="8"/><text x="33.5240%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (8 samples, 0.08%)</title><rect x="33.2740%" y="981" width="0.0838%" height="15" fill="rgb(218,201,14)" fg:x="3176" fg:w="8"/><text x="33.5240%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_add (8 samples, 0.08%)</title><rect x="33.2740%" y="965" width="0.0838%" height="15" fill="rgb(218,94,10)" fg:x="3176" fg:w="8"/><text x="33.5240%" y="975.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.01%)</title><rect x="33.3578%" y="1045" width="0.0105%" height="15" fill="rgb(222,183,52)" fg:x="3184" fg:w="1"/><text x="33.6078%" y="1055.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="33.3683%" y="1013" width="0.0105%" height="15" fill="rgb(242,140,25)" fg:x="3185" fg:w="1"/><text x="33.6183%" y="1023.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="33.3683%" y="997" width="0.0105%" height="15" fill="rgb(235,197,38)" fg:x="3185" fg:w="1"/><text x="33.6183%" y="1007.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="33.3683%" y="981" width="0.0105%" height="15" fill="rgb(237,136,15)" fg:x="3185" fg:w="1"/><text x="33.6183%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="33.3787%" y="981" width="0.0105%" height="15" fill="rgb(223,44,49)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="33.3787%" y="965" width="0.0105%" height="15" fill="rgb(227,71,15)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="33.3787%" y="949" width="0.0105%" height="15" fill="rgb(225,153,20)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="33.3787%" y="933" width="0.0105%" height="15" fill="rgb(210,190,26)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="943.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="33.3787%" y="917" width="0.0105%" height="15" fill="rgb(223,147,5)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="927.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="33.3787%" y="901" width="0.0105%" height="15" fill="rgb(207,14,23)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="33.3787%" y="885" width="0.0105%" height="15" fill="rgb(211,195,53)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="895.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="33.3787%" y="869" width="0.0105%" height="15" fill="rgb(237,75,46)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="33.3787%" y="853" width="0.0105%" height="15" fill="rgb(254,55,14)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="863.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="33.3787%" y="837" width="0.0105%" height="15" fill="rgb(230,185,30)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="847.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="33.3787%" y="821" width="0.0105%" height="15" fill="rgb(220,14,11)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="33.3787%" y="805" width="0.0105%" height="15" fill="rgb(215,169,44)" fg:x="3186" fg:w="1"/><text x="33.6287%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="33.4102%" y="965" width="0.0105%" height="15" fill="rgb(253,203,20)" fg:x="3189" fg:w="1"/><text x="33.6602%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="33.4102%" y="949" width="0.0105%" height="15" fill="rgb(229,225,17)" fg:x="3189" fg:w="1"/><text x="33.6602%" y="959.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="33.4102%" y="933" width="0.0105%" height="15" fill="rgb(236,76,26)" fg:x="3189" fg:w="1"/><text x="33.6602%" y="943.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="33.4102%" y="917" width="0.0105%" height="15" fill="rgb(234,15,30)" fg:x="3189" fg:w="1"/><text x="33.6602%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (2 samples, 0.02%)</title><rect x="33.4206%" y="901" width="0.0210%" height="15" fill="rgb(211,113,48)" fg:x="3190" fg:w="2"/><text x="33.6706%" y="911.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (51 samples, 0.53%)</title><rect x="32.9178%" y="1237" width="0.5343%" height="15" fill="rgb(221,31,36)" fg:x="3142" fg:w="51"/><text x="33.1678%" y="1247.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (51 samples, 0.53%)</title><rect x="32.9178%" y="1221" width="0.5343%" height="15" fill="rgb(215,118,52)" fg:x="3142" fg:w="51"/><text x="33.1678%" y="1231.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (51 samples, 0.53%)</title><rect x="32.9178%" y="1205" width="0.5343%" height="15" fill="rgb(241,151,27)" fg:x="3142" fg:w="51"/><text x="33.1678%" y="1215.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (51 samples, 0.53%)</title><rect x="32.9178%" y="1189" width="0.5343%" height="15" fill="rgb(253,51,3)" fg:x="3142" fg:w="51"/><text x="33.1678%" y="1199.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (51 samples, 0.53%)</title><rect x="32.9178%" y="1173" width="0.5343%" height="15" fill="rgb(216,201,24)" fg:x="3142" fg:w="51"/><text x="33.1678%" y="1183.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (51 samples, 0.53%)</title><rect x="32.9178%" y="1157" width="0.5343%" height="15" fill="rgb(231,107,4)" fg:x="3142" fg:w="51"/><text x="33.1678%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (51 samples, 0.53%)</title><rect x="32.9178%" y="1141" width="0.5343%" height="15" fill="rgb(243,97,54)" fg:x="3142" fg:w="51"/><text x="33.1678%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (51 samples, 0.53%)</title><rect x="32.9178%" y="1125" width="0.5343%" height="15" fill="rgb(221,32,51)" fg:x="3142" fg:w="51"/><text x="33.1678%" y="1135.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (51 samples, 0.53%)</title><rect x="32.9178%" y="1109" width="0.5343%" height="15" fill="rgb(218,171,35)" fg:x="3142" fg:w="51"/><text x="33.1678%" y="1119.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (51 samples, 0.53%)</title><rect x="32.9178%" y="1093" width="0.5343%" height="15" fill="rgb(214,20,53)" fg:x="3142" fg:w="51"/><text x="33.1678%" y="1103.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (51 samples, 0.53%)</title><rect x="32.9178%" y="1077" width="0.5343%" height="15" fill="rgb(239,9,52)" fg:x="3142" fg:w="51"/><text x="33.1678%" y="1087.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (9 samples, 0.09%)</title><rect x="33.3578%" y="1061" width="0.0943%" height="15" fill="rgb(215,114,45)" fg:x="3184" fg:w="9"/><text x="33.6078%" y="1071.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (8 samples, 0.08%)</title><rect x="33.3683%" y="1045" width="0.0838%" height="15" fill="rgb(208,118,9)" fg:x="3185" fg:w="8"/><text x="33.6183%" y="1055.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (8 samples, 0.08%)</title><rect x="33.3683%" y="1029" width="0.0838%" height="15" fill="rgb(235,7,39)" fg:x="3185" fg:w="8"/><text x="33.6183%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (7 samples, 0.07%)</title><rect x="33.3787%" y="1013" width="0.0733%" height="15" fill="rgb(243,225,15)" fg:x="3186" fg:w="7"/><text x="33.6287%" y="1023.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (7 samples, 0.07%)</title><rect x="33.3787%" y="997" width="0.0733%" height="15" fill="rgb(225,216,18)" fg:x="3186" fg:w="7"/><text x="33.6287%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.06%)</title><rect x="33.3892%" y="981" width="0.0629%" height="15" fill="rgb(233,36,38)" fg:x="3187" fg:w="6"/><text x="33.6392%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="33.4206%" y="965" width="0.0314%" height="15" fill="rgb(239,88,23)" fg:x="3190" fg:w="3"/><text x="33.6706%" y="975.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="33.4206%" y="949" width="0.0314%" height="15" fill="rgb(219,181,35)" fg:x="3190" fg:w="3"/><text x="33.6706%" y="959.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="33.4206%" y="933" width="0.0314%" height="15" fill="rgb(215,18,46)" fg:x="3190" fg:w="3"/><text x="33.6706%" y="943.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.03%)</title><rect x="33.4206%" y="917" width="0.0314%" height="15" fill="rgb(241,38,11)" fg:x="3190" fg:w="3"/><text x="33.6706%" y="927.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="33.4416%" y="901" width="0.0105%" height="15" fill="rgb(248,169,45)" fg:x="3192" fg:w="1"/><text x="33.6916%" y="911.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="33.4416%" y="885" width="0.0105%" height="15" fill="rgb(239,50,49)" fg:x="3192" fg:w="1"/><text x="33.6916%" y="895.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="33.4416%" y="869" width="0.0105%" height="15" fill="rgb(231,96,31)" fg:x="3192" fg:w="1"/><text x="33.6916%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.01%)</title><rect x="33.4521%" y="645" width="0.0105%" height="15" fill="rgb(224,193,37)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="655.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="33.4521%" y="629" width="0.0105%" height="15" fill="rgb(227,153,50)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="639.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (1 samples, 0.01%)</title><rect x="33.4521%" y="613" width="0.0105%" height="15" fill="rgb(249,228,3)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="33.4521%" y="597" width="0.0105%" height="15" fill="rgb(219,164,43)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="607.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="33.4521%" y="581" width="0.0105%" height="15" fill="rgb(216,45,41)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (1 samples, 0.01%)</title><rect x="33.4521%" y="565" width="0.0105%" height="15" fill="rgb(210,226,51)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (1 samples, 0.01%)</title><rect x="33.4521%" y="549" width="0.0105%" height="15" fill="rgb(209,117,49)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="559.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (1 samples, 0.01%)</title><rect x="33.4521%" y="533" width="0.0105%" height="15" fill="rgb(206,196,24)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.01%)</title><rect x="33.4521%" y="517" width="0.0105%" height="15" fill="rgb(253,218,3)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="33.4521%" y="501" width="0.0105%" height="15" fill="rgb(252,166,2)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="33.4521%" y="485" width="0.0105%" height="15" fill="rgb(236,218,26)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="495.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="33.4521%" y="469" width="0.0105%" height="15" fill="rgb(254,84,19)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="479.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="33.4521%" y="453" width="0.0105%" height="15" fill="rgb(219,137,29)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="463.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="33.4521%" y="437" width="0.0105%" height="15" fill="rgb(227,47,52)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="447.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="33.4521%" y="421" width="0.0105%" height="15" fill="rgb(229,167,24)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="431.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="33.4521%" y="405" width="0.0105%" height="15" fill="rgb(233,164,1)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="415.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="33.4521%" y="389" width="0.0105%" height="15" fill="rgb(218,88,48)" fg:x="3193" fg:w="1"/><text x="33.7021%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Span&gt; (1 samples, 0.01%)</title><rect x="33.4625%" y="645" width="0.0105%" height="15" fill="rgb(226,214,24)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="655.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="33.4625%" y="629" width="0.0105%" height="15" fill="rgb(233,29,12)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;tracing_subscriber::registry::sharded::CloseGuard&gt;&gt; (1 samples, 0.01%)</title><rect x="33.4625%" y="613" width="0.0105%" height="15" fill="rgb(219,120,34)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing_subscriber::registry::sharded::CloseGuard&gt; (1 samples, 0.01%)</title><rect x="33.4625%" y="597" width="0.0105%" height="15" fill="rgb(226,78,44)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="607.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear (1 samples, 0.01%)</title><rect x="33.4625%" y="581" width="0.0105%" height="15" fill="rgb(240,15,48)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="591.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="33.4625%" y="565" width="0.0105%" height="15" fill="rgb(253,176,7)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="575.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="33.4625%" y="549" width="0.0105%" height="15" fill="rgb(206,166,28)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="559.50"></text></g><g><title>sharded_slab::shard::Shard&lt;T,C&gt;::mark_clear_local (1 samples, 0.01%)</title><rect x="33.4625%" y="533" width="0.0105%" height="15" fill="rgb(241,53,51)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="543.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear (1 samples, 0.01%)</title><rect x="33.4625%" y="517" width="0.0105%" height="15" fill="rgb(249,112,30)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="527.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="33.4625%" y="501" width="0.0105%" height="15" fill="rgb(217,85,30)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="511.50"></text></g><g><title>sharded_slab::page::Shared&lt;T,C&gt;::mark_clear::{{closure}} (1 samples, 0.01%)</title><rect x="33.4625%" y="485" width="0.0105%" height="15" fill="rgb(233,49,7)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="495.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::try_clear_storage (1 samples, 0.01%)</title><rect x="33.4625%" y="469" width="0.0105%" height="15" fill="rgb(234,109,9)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="479.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage (1 samples, 0.01%)</title><rect x="33.4625%" y="453" width="0.0105%" height="15" fill="rgb(253,95,22)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="463.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with (1 samples, 0.01%)</title><rect x="33.4625%" y="437" width="0.0105%" height="15" fill="rgb(233,176,25)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="447.50"></text></g><g><title>sharded_slab::sync::inner::UnsafeCell&lt;T&gt;::with_mut (1 samples, 0.01%)</title><rect x="33.4625%" y="421" width="0.0105%" height="15" fill="rgb(236,33,39)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="431.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::release_with::{{closure}} (1 samples, 0.01%)</title><rect x="33.4625%" y="405" width="0.0105%" height="15" fill="rgb(223,226,42)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="415.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}} (1 samples, 0.01%)</title><rect x="33.4625%" y="389" width="0.0105%" height="15" fill="rgb(216,99,33)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="399.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="33.4625%" y="373" width="0.0105%" height="15" fill="rgb(235,84,23)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="383.50"></text></g><g><title>sharded_slab::page::slot::Slot&lt;T,C&gt;::clear_storage::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="33.4625%" y="357" width="0.0105%" height="15" fill="rgb(232,2,27)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="367.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::DataInner as sharded_slab::clear::Clear&gt;::clear (1 samples, 0.01%)</title><rect x="33.4625%" y="341" width="0.0105%" height="15" fill="rgb(241,23,22)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="351.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::try_close (1 samples, 0.01%)</title><rect x="33.4625%" y="325" width="0.0105%" height="15" fill="rgb(211,73,27)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="335.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="33.4625%" y="309" width="0.0105%" height="15" fill="rgb(235,109,49)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="319.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="33.4625%" y="293" width="0.0105%" height="15" fill="rgb(230,99,29)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="303.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close (1 samples, 0.01%)</title><rect x="33.4625%" y="277" width="0.0105%" height="15" fill="rgb(245,199,7)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="33.4625%" y="261" width="0.0105%" height="15" fill="rgb(217,179,10)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="271.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::try_close::{{closure}} (1 samples, 0.01%)</title><rect x="33.4625%" y="245" width="0.0105%" height="15" fill="rgb(254,99,47)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="255.50"></text></g><g><title>tracing_subscriber::registry::sharded::Registry::start_close (1 samples, 0.01%)</title><rect x="33.4625%" y="229" width="0.0105%" height="15" fill="rgb(251,121,7)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="239.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1 samples, 0.01%)</title><rect x="33.4625%" y="213" width="0.0105%" height="15" fill="rgb(250,177,26)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="223.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1 samples, 0.01%)</title><rect x="33.4625%" y="197" width="0.0105%" height="15" fill="rgb(232,88,15)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="207.50"></text></g><g><title>tracing_subscriber::registry::sharded::CLOSE_COUNT::__getit (1 samples, 0.01%)</title><rect x="33.4625%" y="181" width="0.0105%" height="15" fill="rgb(251,54,54)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="191.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="33.4625%" y="165" width="0.0105%" height="15" fill="rgb(208,177,15)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="175.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="33.4625%" y="149" width="0.0105%" height="15" fill="rgb(205,97,32)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="159.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="33.4625%" y="133" width="0.0105%" height="15" fill="rgb(217,192,13)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="143.50"></text></g><g><title>__tls_get_addr@plt (1 samples, 0.01%)</title><rect x="33.4625%" y="117" width="0.0105%" height="15" fill="rgb(215,163,41)" fg:x="3194" fg:w="1"/><text x="33.7125%" y="127.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="33.4730%" y="277" width="0.0105%" height="15" fill="rgb(246,83,29)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="287.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="33.4730%" y="261" width="0.0105%" height="15" fill="rgb(219,2,45)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="271.50"></text></g><g><title>core::fmt::Formatter::debug_tuple (1 samples, 0.01%)</title><rect x="33.4730%" y="245" width="0.0105%" height="15" fill="rgb(242,215,33)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="255.50"></text></g><g><title>core::fmt::builders::debug_tuple_new (1 samples, 0.01%)</title><rect x="33.4730%" y="229" width="0.0105%" height="15" fill="rgb(217,1,6)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="239.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="33.4730%" y="213" width="0.0105%" height="15" fill="rgb(207,85,52)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="33.4730%" y="197" width="0.0105%" height="15" fill="rgb(231,171,19)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="33.4730%" y="181" width="0.0105%" height="15" fill="rgb(207,128,4)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="33.4730%" y="165" width="0.0105%" height="15" fill="rgb(219,208,4)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="33.4730%" y="149" width="0.0105%" height="15" fill="rgb(235,161,42)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="33.4730%" y="133" width="0.0105%" height="15" fill="rgb(247,218,18)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="33.4730%" y="117" width="0.0105%" height="15" fill="rgb(232,114,51)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="127.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="33.4730%" y="101" width="0.0105%" height="15" fill="rgb(222,95,3)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="111.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="33.4730%" y="85" width="0.0105%" height="15" fill="rgb(240,65,29)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="95.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="33.4730%" y="69" width="0.0105%" height="15" fill="rgb(249,209,20)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="79.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="33.4730%" y="53" width="0.0105%" height="15" fill="rgb(241,48,37)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="63.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="33.4730%" y="37" width="0.0105%" height="15" fill="rgb(230,140,42)" fg:x="3195" fg:w="1"/><text x="33.7230%" y="47.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="33.4730%" y="357" width="0.0210%" height="15" fill="rgb(230,176,45)" fg:x="3195" fg:w="2"/><text x="33.7230%" y="367.50"></text></g><g><title>&lt;gpu_alloc::buddy::BuddyBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (2 samples, 0.02%)</title><rect x="33.4730%" y="341" width="0.0210%" height="15" fill="rgb(245,112,21)" fg:x="3195" fg:w="2"/><text x="33.7230%" y="351.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (2 samples, 0.02%)</title><rect x="33.4730%" y="325" width="0.0210%" height="15" fill="rgb(207,183,35)" fg:x="3195" fg:w="2"/><text x="33.7230%" y="335.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (2 samples, 0.02%)</title><rect x="33.4730%" y="309" width="0.0210%" height="15" fill="rgb(227,44,33)" fg:x="3195" fg:w="2"/><text x="33.7230%" y="319.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (2 samples, 0.02%)</title><rect x="33.4730%" y="293" width="0.0210%" height="15" fill="rgb(246,120,21)" fg:x="3195" fg:w="2"/><text x="33.7230%" y="303.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="33.4835%" y="277" width="0.0105%" height="15" fill="rgb(235,57,52)" fg:x="3196" fg:w="1"/><text x="33.7335%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="33.4835%" y="261" width="0.0105%" height="15" fill="rgb(238,84,10)" fg:x="3196" fg:w="1"/><text x="33.7335%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="33.4835%" y="245" width="0.0105%" height="15" fill="rgb(251,200,32)" fg:x="3196" fg:w="1"/><text x="33.7335%" y="255.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="33.4835%" y="229" width="0.0105%" height="15" fill="rgb(247,159,13)" fg:x="3196" fg:w="1"/><text x="33.7335%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="33.4835%" y="213" width="0.0105%" height="15" fill="rgb(238,64,4)" fg:x="3196" fg:w="1"/><text x="33.7335%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="33.4835%" y="197" width="0.0105%" height="15" fill="rgb(221,131,51)" fg:x="3196" fg:w="1"/><text x="33.7335%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="33.4835%" y="181" width="0.0105%" height="15" fill="rgb(242,5,29)" fg:x="3196" fg:w="1"/><text x="33.7335%" y="191.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="33.4835%" y="165" width="0.0105%" height="15" fill="rgb(214,130,32)" fg:x="3196" fg:w="1"/><text x="33.7335%" y="175.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="33.4940%" y="357" width="0.0105%" height="15" fill="rgb(244,210,16)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="367.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="33.4940%" y="341" width="0.0105%" height="15" fill="rgb(234,48,26)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="351.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="33.4940%" y="325" width="0.0105%" height="15" fill="rgb(231,82,38)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="33.4940%" y="309" width="0.0105%" height="15" fill="rgb(254,128,41)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="319.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="33.4940%" y="293" width="0.0105%" height="15" fill="rgb(212,73,49)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="33.4940%" y="277" width="0.0105%" height="15" fill="rgb(205,62,54)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="33.4940%" y="261" width="0.0105%" height="15" fill="rgb(228,0,8)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="33.4940%" y="245" width="0.0105%" height="15" fill="rgb(251,28,17)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="33.4940%" y="229" width="0.0105%" height="15" fill="rgb(238,105,27)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="33.4940%" y="213" width="0.0105%" height="15" fill="rgb(237,216,33)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="223.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="33.4940%" y="197" width="0.0105%" height="15" fill="rgb(229,228,25)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="207.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="33.4940%" y="181" width="0.0105%" height="15" fill="rgb(233,75,23)" fg:x="3197" fg:w="1"/><text x="33.7440%" y="191.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (4 samples, 0.04%)</title><rect x="33.4730%" y="501" width="0.0419%" height="15" fill="rgb(231,207,16)" fg:x="3195" fg:w="4"/><text x="33.7230%" y="511.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (4 samples, 0.04%)</title><rect x="33.4730%" y="485" width="0.0419%" height="15" fill="rgb(231,191,45)" fg:x="3195" fg:w="4"/><text x="33.7230%" y="495.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (4 samples, 0.04%)</title><rect x="33.4730%" y="469" width="0.0419%" height="15" fill="rgb(224,133,17)" fg:x="3195" fg:w="4"/><text x="33.7230%" y="479.50"></text></g><g><title>tracing_core::span::Attributes::record (4 samples, 0.04%)</title><rect x="33.4730%" y="453" width="0.0419%" height="15" fill="rgb(209,178,27)" fg:x="3195" fg:w="4"/><text x="33.7230%" y="463.50"></text></g><g><title>tracing_core::field::ValueSet::record (4 samples, 0.04%)</title><rect x="33.4730%" y="437" width="0.0419%" height="15" fill="rgb(218,37,11)" fg:x="3195" fg:w="4"/><text x="33.7230%" y="447.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (4 samples, 0.04%)</title><rect x="33.4730%" y="421" width="0.0419%" height="15" fill="rgb(251,226,25)" fg:x="3195" fg:w="4"/><text x="33.7230%" y="431.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (4 samples, 0.04%)</title><rect x="33.4730%" y="405" width="0.0419%" height="15" fill="rgb(209,222,27)" fg:x="3195" fg:w="4"/><text x="33.7230%" y="415.50"></text></g><g><title>core::fmt::Write::write_fmt (4 samples, 0.04%)</title><rect x="33.4730%" y="389" width="0.0419%" height="15" fill="rgb(238,22,21)" fg:x="3195" fg:w="4"/><text x="33.7230%" y="399.50"></text></g><g><title>core::fmt::write (4 samples, 0.04%)</title><rect x="33.4730%" y="373" width="0.0419%" height="15" fill="rgb(233,161,25)" fg:x="3195" fg:w="4"/><text x="33.7230%" y="383.50"></text></g><g><title>&lt;gpu_alloc::heap::Heap as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="33.5045%" y="357" width="0.0105%" height="15" fill="rgb(226,122,53)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.01%)</title><rect x="33.5045%" y="341" width="0.0105%" height="15" fill="rgb(220,123,17)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="33.5045%" y="325" width="0.0105%" height="15" fill="rgb(230,224,35)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="335.50"></text></g><g><title>core::fmt::builders::DebugStruct::finish (1 samples, 0.01%)</title><rect x="33.5045%" y="309" width="0.0105%" height="15" fill="rgb(246,83,8)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="319.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="33.5045%" y="293" width="0.0105%" height="15" fill="rgb(230,214,17)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="33.5045%" y="277" width="0.0105%" height="15" fill="rgb(222,97,18)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="287.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="33.5045%" y="261" width="0.0105%" height="15" fill="rgb(206,79,1)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="33.5045%" y="245" width="0.0105%" height="15" fill="rgb(214,121,34)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="33.5045%" y="229" width="0.0105%" height="15" fill="rgb(249,199,46)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="33.5045%" y="213" width="0.0105%" height="15" fill="rgb(214,222,46)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="33.5045%" y="197" width="0.0105%" height="15" fill="rgb(248,168,30)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="207.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="33.5045%" y="181" width="0.0105%" height="15" fill="rgb(226,14,28)" fg:x="3198" fg:w="1"/><text x="33.7545%" y="191.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (7 samples, 0.07%)</title><rect x="33.4521%" y="661" width="0.0733%" height="15" fill="rgb(253,123,1)" fg:x="3193" fg:w="7"/><text x="33.7021%" y="671.50"></text></g><g><title>tracing::span::Span::new (5 samples, 0.05%)</title><rect x="33.4730%" y="645" width="0.0524%" height="15" fill="rgb(225,24,42)" fg:x="3195" fg:w="5"/><text x="33.7230%" y="655.50"></text></g><g><title>tracing::span::Span::make (5 samples, 0.05%)</title><rect x="33.4730%" y="629" width="0.0524%" height="15" fill="rgb(216,161,37)" fg:x="3195" fg:w="5"/><text x="33.7230%" y="639.50"></text></g><g><title>tracing_core::dispatcher::get_default (5 samples, 0.05%)</title><rect x="33.4730%" y="613" width="0.0524%" height="15" fill="rgb(251,164,26)" fg:x="3195" fg:w="5"/><text x="33.7230%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (5 samples, 0.05%)</title><rect x="33.4730%" y="597" width="0.0524%" height="15" fill="rgb(219,177,3)" fg:x="3195" fg:w="5"/><text x="33.7230%" y="607.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (5 samples, 0.05%)</title><rect x="33.4730%" y="581" width="0.0524%" height="15" fill="rgb(222,65,0)" fg:x="3195" fg:w="5"/><text x="33.7230%" y="591.50"></text></g><g><title>tracing::span::Span::make::{{closure}} (5 samples, 0.05%)</title><rect x="33.4730%" y="565" width="0.0524%" height="15" fill="rgb(223,69,54)" fg:x="3195" fg:w="5"/><text x="33.7230%" y="575.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (5 samples, 0.05%)</title><rect x="33.4730%" y="549" width="0.0524%" height="15" fill="rgb(235,30,27)" fg:x="3195" fg:w="5"/><text x="33.7230%" y="559.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (5 samples, 0.05%)</title><rect x="33.4730%" y="533" width="0.0524%" height="15" fill="rgb(220,183,50)" fg:x="3195" fg:w="5"/><text x="33.7230%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (5 samples, 0.05%)</title><rect x="33.4730%" y="517" width="0.0524%" height="15" fill="rgb(248,198,15)" fg:x="3195" fg:w="5"/><text x="33.7230%" y="527.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="33.5149%" y="501" width="0.0105%" height="15" fill="rgb(222,211,4)" fg:x="3199" fg:w="1"/><text x="33.7649%" y="511.50"></text></g><g><title>&lt;tracing_subscriber::registry::sharded::Registry as tracing_core::subscriber::Subscriber&gt;::new_span (1 samples, 0.01%)</title><rect x="33.5149%" y="485" width="0.0105%" height="15" fill="rgb(214,102,34)" fg:x="3199" fg:w="1"/><text x="33.7649%" y="495.50"></text></g><g><title>sharded_slab::pool::Pool&lt;T,C&gt;::create_with (1 samples, 0.01%)</title><rect x="33.5149%" y="469" width="0.0105%" height="15" fill="rgb(245,92,5)" fg:x="3199" fg:w="1"/><text x="33.7649%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;sharded_slab::pool::RefMut&lt;tracing_subscriber::registry::sharded::DataInner&gt;&gt; (1 samples, 0.01%)</title><rect x="33.5149%" y="453" width="0.0105%" height="15" fill="rgb(252,72,51)" fg:x="3199" fg:w="1"/><text x="33.7649%" y="463.50"></text></g><g><title>&lt;sharded_slab::pool::RefMut&lt;T,C&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="33.5149%" y="437" width="0.0105%" height="15" fill="rgb(252,208,19)" fg:x="3199" fg:w="1"/><text x="33.7649%" y="447.50"></text></g><g><title>sharded_slab::page::slot::InitGuard&lt;T,C&gt;::release (1 samples, 0.01%)</title><rect x="33.5149%" y="421" width="0.0105%" height="15" fill="rgb(211,69,7)" fg:x="3199" fg:w="1"/><text x="33.7649%" y="431.50"></text></g><g><title>sharded_slab::page::slot::InitGuard&lt;T,C&gt;::release2 (1 samples, 0.01%)</title><rect x="33.5149%" y="405" width="0.0105%" height="15" fill="rgb(211,27,16)" fg:x="3199" fg:w="1"/><text x="33.7649%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="33.5149%" y="389" width="0.0105%" height="15" fill="rgb(219,216,14)" fg:x="3199" fg:w="1"/><text x="33.7649%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="33.5149%" y="373" width="0.0105%" height="15" fill="rgb(219,71,8)" fg:x="3199" fg:w="1"/><text x="33.7649%" y="383.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="33.5254%" y="293" width="0.0105%" height="15" fill="rgb(223,170,53)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="303.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlockFlavor&lt;M&gt; as core::fmt::Debug&gt;::fmt (1 samples, 0.01%)</title><rect x="33.5254%" y="277" width="0.0105%" height="15" fill="rgb(246,21,26)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="287.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (1 samples, 0.01%)</title><rect x="33.5254%" y="261" width="0.0105%" height="15" fill="rgb(248,20,46)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="271.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="33.5254%" y="245" width="0.0105%" height="15" fill="rgb(252,94,11)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="255.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (1 samples, 0.01%)</title><rect x="33.5254%" y="229" width="0.0105%" height="15" fill="rgb(236,163,8)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="239.50"></text></g><g><title>core::fmt::Formatter::write_str (1 samples, 0.01%)</title><rect x="33.5254%" y="213" width="0.0105%" height="15" fill="rgb(217,221,45)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="223.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="33.5254%" y="197" width="0.0105%" height="15" fill="rgb(238,38,17)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="207.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (1 samples, 0.01%)</title><rect x="33.5254%" y="181" width="0.0105%" height="15" fill="rgb(242,210,23)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="191.50"></text></g><g><title>alloc::string::String::push_str (1 samples, 0.01%)</title><rect x="33.5254%" y="165" width="0.0105%" height="15" fill="rgb(250,86,53)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="33.5254%" y="149" width="0.0105%" height="15" fill="rgb(223,168,25)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="159.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="33.5254%" y="133" width="0.0105%" height="15" fill="rgb(251,189,4)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="143.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="33.5254%" y="117" width="0.0105%" height="15" fill="rgb(245,19,28)" fg:x="3200" fg:w="1"/><text x="33.7754%" y="127.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="33.5359%" y="117" width="0.0105%" height="15" fill="rgb(207,10,34)" fg:x="3201" fg:w="1"/><text x="33.7859%" y="127.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (10 samples, 0.10%)</title><rect x="33.4521%" y="725" width="0.1048%" height="15" fill="rgb(235,153,31)" fg:x="3193" fg:w="10"/><text x="33.7021%" y="735.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (10 samples, 0.10%)</title><rect x="33.4521%" y="709" width="0.1048%" height="15" fill="rgb(228,72,37)" fg:x="3193" fg:w="10"/><text x="33.7021%" y="719.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (10 samples, 0.10%)</title><rect x="33.4521%" y="693" width="0.1048%" height="15" fill="rgb(215,15,16)" fg:x="3193" fg:w="10"/><text x="33.7021%" y="703.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (10 samples, 0.10%)</title><rect x="33.4521%" y="677" width="0.1048%" height="15" fill="rgb(250,119,29)" fg:x="3193" fg:w="10"/><text x="33.7021%" y="687.50"></text></g><g><title>tracing::span::Span::new (3 samples, 0.03%)</title><rect x="33.5254%" y="661" width="0.0314%" height="15" fill="rgb(214,59,1)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="671.50"></text></g><g><title>tracing::span::Span::make (3 samples, 0.03%)</title><rect x="33.5254%" y="645" width="0.0314%" height="15" fill="rgb(223,109,25)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="655.50"></text></g><g><title>tracing_core::dispatcher::get_default (3 samples, 0.03%)</title><rect x="33.5254%" y="629" width="0.0314%" height="15" fill="rgb(230,198,22)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3 samples, 0.03%)</title><rect x="33.5254%" y="613" width="0.0314%" height="15" fill="rgb(245,184,46)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="623.50"></text></g><g><title>tracing_core::dispatcher::get_default::{{closure}} (3 samples, 0.03%)</title><rect x="33.5254%" y="597" width="0.0314%" height="15" fill="rgb(253,73,16)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="607.50"></text></g><g><title>tracing::span::Span::make::{{closure}} (3 samples, 0.03%)</title><rect x="33.5254%" y="581" width="0.0314%" height="15" fill="rgb(206,94,45)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="591.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::new_span (3 samples, 0.03%)</title><rect x="33.5254%" y="565" width="0.0314%" height="15" fill="rgb(236,83,27)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="575.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.03%)</title><rect x="33.5254%" y="549" width="0.0314%" height="15" fill="rgb(220,196,8)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::new_span (3 samples, 0.03%)</title><rect x="33.5254%" y="533" width="0.0314%" height="15" fill="rgb(254,185,14)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="543.50"></text></g><g><title>&lt;tracing_subscriber::fmt::fmt_layer::Layer&lt;S,N,E,W&gt; as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::new_span (3 samples, 0.03%)</title><rect x="33.5254%" y="517" width="0.0314%" height="15" fill="rgb(226,50,22)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="527.50"></text></g><g><title>&lt;M as tracing_subscriber::fmt::format::FormatFields&gt;::format_fields (3 samples, 0.03%)</title><rect x="33.5254%" y="501" width="0.0314%" height="15" fill="rgb(253,147,0)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="511.50"></text></g><g><title>&lt;&amp;F as tracing_subscriber::field::RecordFields&gt;::record (3 samples, 0.03%)</title><rect x="33.5254%" y="485" width="0.0314%" height="15" fill="rgb(252,46,33)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="495.50"></text></g><g><title>tracing_core::span::Attributes::record (3 samples, 0.03%)</title><rect x="33.5254%" y="469" width="0.0314%" height="15" fill="rgb(242,22,54)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="479.50"></text></g><g><title>tracing_core::field::ValueSet::record (3 samples, 0.03%)</title><rect x="33.5254%" y="453" width="0.0314%" height="15" fill="rgb(223,178,32)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="463.50"></text></g><g><title>&lt;&amp;T as tracing_core::field::Value&gt;::record (3 samples, 0.03%)</title><rect x="33.5254%" y="437" width="0.0314%" height="15" fill="rgb(214,106,53)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="447.50"></text></g><g><title>&lt;tracing_subscriber::fmt::format::DefaultVisitor as tracing_core::field::Visit&gt;::record_debug (3 samples, 0.03%)</title><rect x="33.5254%" y="421" width="0.0314%" height="15" fill="rgb(232,65,50)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (3 samples, 0.03%)</title><rect x="33.5254%" y="405" width="0.0314%" height="15" fill="rgb(231,110,28)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="415.50"></text></g><g><title>core::fmt::write (3 samples, 0.03%)</title><rect x="33.5254%" y="389" width="0.0314%" height="15" fill="rgb(216,71,40)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="399.50"></text></g><g><title>&lt;&amp;T as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="33.5254%" y="373" width="0.0314%" height="15" fill="rgb(229,89,53)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="383.50"></text></g><g><title>&lt;gpu_alloc::block::MemoryBlock&lt;M&gt; as core::fmt::Debug&gt;::fmt (3 samples, 0.03%)</title><rect x="33.5254%" y="357" width="0.0314%" height="15" fill="rgb(210,124,14)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="367.50"></text></g><g><title>core::fmt::builders::DebugStruct::field (3 samples, 0.03%)</title><rect x="33.5254%" y="341" width="0.0314%" height="15" fill="rgb(236,213,6)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="351.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (3 samples, 0.03%)</title><rect x="33.5254%" y="325" width="0.0314%" height="15" fill="rgb(228,41,5)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="335.50"></text></g><g><title>core::fmt::builders::DebugStruct::field::{{closure}} (3 samples, 0.03%)</title><rect x="33.5254%" y="309" width="0.0314%" height="15" fill="rgb(221,167,25)" fg:x="3200" fg:w="3"/><text x="33.7754%" y="319.50"></text></g><g><title>core::fmt::Formatter::write_str (2 samples, 0.02%)</title><rect x="33.5359%" y="293" width="0.0210%" height="15" fill="rgb(228,144,37)" fg:x="3201" fg:w="2"/><text x="33.7859%" y="303.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="33.5359%" y="277" width="0.0210%" height="15" fill="rgb(227,189,38)" fg:x="3201" fg:w="2"/><text x="33.7859%" y="287.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (2 samples, 0.02%)</title><rect x="33.5359%" y="261" width="0.0210%" height="15" fill="rgb(218,8,2)" fg:x="3201" fg:w="2"/><text x="33.7859%" y="271.50"></text></g><g><title>alloc::string::String::push_str (2 samples, 0.02%)</title><rect x="33.5359%" y="245" width="0.0210%" height="15" fill="rgb(209,61,28)" fg:x="3201" fg:w="2"/><text x="33.7859%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (2 samples, 0.02%)</title><rect x="33.5359%" y="229" width="0.0210%" height="15" fill="rgb(233,140,39)" fg:x="3201" fg:w="2"/><text x="33.7859%" y="239.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (2 samples, 0.02%)</title><rect x="33.5359%" y="213" width="0.0210%" height="15" fill="rgb(251,66,48)" fg:x="3201" fg:w="2"/><text x="33.7859%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (2 samples, 0.02%)</title><rect x="33.5359%" y="197" width="0.0210%" height="15" fill="rgb(210,44,45)" fg:x="3201" fg:w="2"/><text x="33.7859%" y="207.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="33.5359%" y="181" width="0.0210%" height="15" fill="rgb(214,136,46)" fg:x="3201" fg:w="2"/><text x="33.7859%" y="191.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="33.5359%" y="165" width="0.0210%" height="15" fill="rgb(207,130,50)" fg:x="3201" fg:w="2"/><text x="33.7859%" y="175.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="33.5359%" y="149" width="0.0210%" height="15" fill="rgb(228,102,49)" fg:x="3201" fg:w="2"/><text x="33.7859%" y="159.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="33.5359%" y="133" width="0.0210%" height="15" fill="rgb(253,55,1)" fg:x="3201" fg:w="2"/><text x="33.7859%" y="143.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="33.5464%" y="117" width="0.0105%" height="15" fill="rgb(238,222,9)" fg:x="3202" fg:w="1"/><text x="33.7964%" y="127.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="33.5464%" y="101" width="0.0105%" height="15" fill="rgb(246,99,6)" fg:x="3202" fg:w="1"/><text x="33.7964%" y="111.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="33.5464%" y="85" width="0.0105%" height="15" fill="rgb(219,110,26)" fg:x="3202" fg:w="1"/><text x="33.7964%" y="95.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="33.5464%" y="69" width="0.0105%" height="15" fill="rgb(239,160,33)" fg:x="3202" fg:w="1"/><text x="33.7964%" y="79.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="33.5464%" y="53" width="0.0105%" height="15" fill="rgb(220,202,23)" fg:x="3202" fg:w="1"/><text x="33.7964%" y="63.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="33.5464%" y="37" width="0.0105%" height="15" fill="rgb(208,80,26)" fg:x="3202" fg:w="1"/><text x="33.7964%" y="47.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::schedule::Schedule&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="1157" width="0.1152%" height="15" fill="rgb(243,85,7)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::boxed::Box&lt;dyn bevy_ecs::schedule::label::StageLabel&gt;,alloc::boxed::Box&lt;dyn bevy_ecs::schedule::stage::Stage&gt;,ahash::random_state::RandomState&gt;&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="1141" width="0.1152%" height="15" fill="rgb(228,77,47)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::boxed::Box&lt;dyn bevy_ecs::schedule::label::StageLabel&gt;,alloc::boxed::Box&lt;dyn bevy_ecs::schedule::stage::Stage&gt;,ahash::random_state::RandomState&gt;&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="1125" width="0.1152%" height="15" fill="rgb(212,226,8)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::boxed::Box&lt;dyn bevy_ecs::schedule::label::StageLabel&gt;,alloc::boxed::Box&lt;dyn bevy_ecs::schedule::stage::Stage&gt;)&gt;&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="1109" width="0.1152%" height="15" fill="rgb(241,120,54)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="1119.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.12%)</title><rect x="33.4521%" y="1093" width="0.1152%" height="15" fill="rgb(226,80,16)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="1103.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (11 samples, 0.12%)</title><rect x="33.4521%" y="1077" width="0.1152%" height="15" fill="rgb(240,76,13)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="1087.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (11 samples, 0.12%)</title><rect x="33.4521%" y="1061" width="0.1152%" height="15" fill="rgb(252,74,8)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="1071.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (11 samples, 0.12%)</title><rect x="33.4521%" y="1045" width="0.1152%" height="15" fill="rgb(244,155,2)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::boxed::Box&lt;dyn bevy_ecs::schedule::label::StageLabel&gt;,alloc::boxed::Box&lt;dyn bevy_ecs::schedule::stage::Stage&gt;)&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="1029" width="0.1152%" height="15" fill="rgb(215,81,35)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn bevy_ecs::schedule::stage::Stage&gt;&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="1013" width="0.1152%" height="15" fill="rgb(206,55,2)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::schedule::stage::SystemStage&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="997" width="0.1152%" height="15" fill="rgb(231,2,34)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_ecs::schedule::system_container::ExclusiveSystemContainer&gt;&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="981" width="0.1152%" height="15" fill="rgb(242,176,48)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.12%)</title><rect x="33.4521%" y="965" width="0.1152%" height="15" fill="rgb(249,31,36)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_ecs::schedule::system_container::ExclusiveSystemContainer]&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="949" width="0.1152%" height="15" fill="rgb(205,18,17)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::schedule::system_container::ExclusiveSystemContainer&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="933" width="0.1152%" height="15" fill="rgb(254,130,5)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="917" width="0.1152%" height="15" fill="rgb(229,42,45)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="901" width="0.1152%" height="15" fill="rgb(245,95,25)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::ops::function::FnMut&lt;(&amp;mut bevy_ecs::world::World,)&gt;+Output = ()+core::marker::Sync+core::marker::Send&gt;&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="885" width="0.1152%" height="15" fill="rgb(249,193,38)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::get_wgpu_render_system::{{closure}}&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="869" width="0.1152%" height="15" fill="rgb(241,140,43)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_renderer::WgpuRenderer&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="853" width="0.1152%" height="15" fill="rgb(245,78,48)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Device&gt;&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="837" width="0.1152%" height="15" fill="rgb(214,92,39)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.12%)</title><rect x="33.4521%" y="821" width="0.1152%" height="15" fill="rgb(211,189,14)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="831.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (11 samples, 0.12%)</title><rect x="33.4521%" y="805" width="0.1152%" height="15" fill="rgb(218,7,24)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Device&gt; (11 samples, 0.12%)</title><rect x="33.4521%" y="789" width="0.1152%" height="15" fill="rgb(224,200,49)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_drop (11 samples, 0.12%)</title><rect x="33.4521%" y="773" width="0.1152%" height="15" fill="rgb(218,210,14)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="783.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (11 samples, 0.12%)</title><rect x="33.4521%" y="757" width="0.1152%" height="15" fill="rgb(234,142,31)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="767.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (11 samples, 0.12%)</title><rect x="33.4521%" y="741" width="0.1152%" height="15" fill="rgb(227,165,2)" fg:x="3193" fg:w="11"/><text x="33.7021%" y="751.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected (1 samples, 0.01%)</title><rect x="33.5568%" y="725" width="0.0105%" height="15" fill="rgb(232,44,46)" fg:x="3203" fg:w="1"/><text x="33.8068%" y="735.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1 samples, 0.01%)</title><rect x="33.5568%" y="709" width="0.0105%" height="15" fill="rgb(236,149,47)" fg:x="3203" fg:w="1"/><text x="33.8068%" y="719.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_suspected::{{closure}} (1 samples, 0.01%)</title><rect x="33.5568%" y="693" width="0.0105%" height="15" fill="rgb(227,45,31)" fg:x="3203" fg:w="1"/><text x="33.8068%" y="703.50"></text></g><g><title>async_executor::Executor::try_tick (1 samples, 0.01%)</title><rect x="33.5673%" y="965" width="0.0105%" height="15" fill="rgb(240,176,51)" fg:x="3204" fg:w="1"/><text x="33.8173%" y="975.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="33.5673%" y="949" width="0.0105%" height="15" fill="rgb(249,146,41)" fg:x="3204" fg:w="1"/><text x="33.8173%" y="959.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="33.5673%" y="933" width="0.0105%" height="15" fill="rgb(213,208,4)" fg:x="3204" fg:w="1"/><text x="33.8173%" y="943.50"></text></g><g><title>concurrent_queue::full_fence (1 samples, 0.01%)</title><rect x="33.5673%" y="917" width="0.0105%" height="15" fill="rgb(245,84,36)" fg:x="3204" fg:w="1"/><text x="33.8173%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="33.5673%" y="901" width="0.0105%" height="15" fill="rgb(254,84,18)" fg:x="3204" fg:w="1"/><text x="33.8173%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="33.5673%" y="885" width="0.0105%" height="15" fill="rgb(225,38,54)" fg:x="3204" fg:w="1"/><text x="33.8173%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="33.5673%" y="869" width="0.0105%" height="15" fill="rgb(246,50,30)" fg:x="3204" fg:w="1"/><text x="33.8173%" y="879.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (1 samples, 0.01%)</title><rect x="33.5778%" y="965" width="0.0105%" height="15" fill="rgb(246,148,9)" fg:x="3205" fg:w="1"/><text x="33.8278%" y="975.50"></text></g><g><title>async_executor::Executor::try_tick (1 samples, 0.01%)</title><rect x="33.5778%" y="949" width="0.0105%" height="15" fill="rgb(223,75,4)" fg:x="3205" fg:w="1"/><text x="33.8278%" y="959.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="33.5778%" y="933" width="0.0105%" height="15" fill="rgb(239,148,41)" fg:x="3205" fg:w="1"/><text x="33.8278%" y="943.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (1 samples, 0.01%)</title><rect x="33.5778%" y="917" width="0.0105%" height="15" fill="rgb(205,195,3)" fg:x="3205" fg:w="1"/><text x="33.8278%" y="927.50"></text></g><g><title>concurrent_queue::full_fence (1 samples, 0.01%)</title><rect x="33.5778%" y="901" width="0.0105%" height="15" fill="rgb(254,161,1)" fg:x="3205" fg:w="1"/><text x="33.8278%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="33.5778%" y="885" width="0.0105%" height="15" fill="rgb(211,229,8)" fg:x="3205" fg:w="1"/><text x="33.8278%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="33.5778%" y="869" width="0.0105%" height="15" fill="rgb(220,97,9)" fg:x="3205" fg:w="1"/><text x="33.8278%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="33.5778%" y="853" width="0.0105%" height="15" fill="rgb(240,218,8)" fg:x="3205" fg:w="1"/><text x="33.8278%" y="863.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="33.5987%" y="773" width="0.0105%" height="15" fill="rgb(250,44,0)" fg:x="3207" fg:w="1"/><text x="33.8487%" y="783.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (1 samples, 0.01%)</title><rect x="33.5987%" y="757" width="0.0105%" height="15" fill="rgb(236,41,53)" fg:x="3207" fg:w="1"/><text x="33.8487%" y="767.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="33.5987%" y="741" width="0.0105%" height="15" fill="rgb(218,227,13)" fg:x="3207" fg:w="1"/><text x="33.8487%" y="751.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="33.5987%" y="725" width="0.0105%" height="15" fill="rgb(217,94,32)" fg:x="3207" fg:w="1"/><text x="33.8487%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="33.5987%" y="709" width="0.0105%" height="15" fill="rgb(213,217,12)" fg:x="3207" fg:w="1"/><text x="33.8487%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="33.5987%" y="693" width="0.0105%" height="15" fill="rgb(229,13,46)" fg:x="3207" fg:w="1"/><text x="33.8487%" y="703.50"></text></g><g><title>async_task::utils::abort_on_panic (6 samples, 0.06%)</title><rect x="33.5987%" y="805" width="0.0629%" height="15" fill="rgb(243,139,5)" fg:x="3207" fg:w="6"/><text x="33.8487%" y="815.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (6 samples, 0.06%)</title><rect x="33.5987%" y="789" width="0.0629%" height="15" fill="rgb(249,38,45)" fg:x="3207" fg:w="6"/><text x="33.8487%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (5 samples, 0.05%)</title><rect x="33.6092%" y="773" width="0.0524%" height="15" fill="rgb(216,70,11)" fg:x="3208" fg:w="5"/><text x="33.8592%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (5 samples, 0.05%)</title><rect x="33.6092%" y="757" width="0.0524%" height="15" fill="rgb(253,101,25)" fg:x="3208" fg:w="5"/><text x="33.8592%" y="767.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="33.6092%" y="741" width="0.0524%" height="15" fill="rgb(207,197,30)" fg:x="3208" fg:w="5"/><text x="33.8592%" y="751.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (5 samples, 0.05%)</title><rect x="33.6092%" y="725" width="0.0524%" height="15" fill="rgb(238,87,13)" fg:x="3208" fg:w="5"/><text x="33.8592%" y="735.50"></text></g><g><title>core::mem::drop (5 samples, 0.05%)</title><rect x="33.6092%" y="709" width="0.0524%" height="15" fill="rgb(215,155,8)" fg:x="3208" fg:w="5"/><text x="33.8592%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (5 samples, 0.05%)</title><rect x="33.6092%" y="693" width="0.0524%" height="15" fill="rgb(239,166,38)" fg:x="3208" fg:w="5"/><text x="33.8592%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="33.6092%" y="677" width="0.0524%" height="15" fill="rgb(240,194,35)" fg:x="3208" fg:w="5"/><text x="33.8592%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (5 samples, 0.05%)</title><rect x="33.6092%" y="661" width="0.0524%" height="15" fill="rgb(219,10,44)" fg:x="3208" fg:w="5"/><text x="33.8592%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (5 samples, 0.05%)</title><rect x="33.6092%" y="645" width="0.0524%" height="15" fill="rgb(251,220,35)" fg:x="3208" fg:w="5"/><text x="33.8592%" y="655.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (12 samples, 0.13%)</title><rect x="33.5673%" y="1045" width="0.1257%" height="15" fill="rgb(218,117,13)" fg:x="3204" fg:w="12"/><text x="33.8173%" y="1055.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (12 samples, 0.13%)</title><rect x="33.5673%" y="1029" width="0.1257%" height="15" fill="rgb(221,213,40)" fg:x="3204" fg:w="12"/><text x="33.8173%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.13%)</title><rect x="33.5673%" y="1013" width="0.1257%" height="15" fill="rgb(251,224,35)" fg:x="3204" fg:w="12"/><text x="33.8173%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.13%)</title><rect x="33.5673%" y="997" width="0.1257%" height="15" fill="rgb(241,33,39)" fg:x="3204" fg:w="12"/><text x="33.8173%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (12 samples, 0.13%)</title><rect x="33.5673%" y="981" width="0.1257%" height="15" fill="rgb(222,74,17)" fg:x="3204" fg:w="12"/><text x="33.8173%" y="991.50"></text></g><g><title>futures_lite::future::block_on (10 samples, 0.10%)</title><rect x="33.5883%" y="965" width="0.1048%" height="15" fill="rgb(225,103,0)" fg:x="3206" fg:w="10"/><text x="33.8383%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (10 samples, 0.10%)</title><rect x="33.5883%" y="949" width="0.1048%" height="15" fill="rgb(240,0,12)" fg:x="3206" fg:w="10"/><text x="33.8383%" y="959.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (10 samples, 0.10%)</title><rect x="33.5883%" y="933" width="0.1048%" height="15" fill="rgb(233,213,37)" fg:x="3206" fg:w="10"/><text x="33.8383%" y="943.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (10 samples, 0.10%)</title><rect x="33.5883%" y="917" width="0.1048%" height="15" fill="rgb(225,84,52)" fg:x="3206" fg:w="10"/><text x="33.8383%" y="927.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (10 samples, 0.10%)</title><rect x="33.5883%" y="901" width="0.1048%" height="15" fill="rgb(247,160,51)" fg:x="3206" fg:w="10"/><text x="33.8383%" y="911.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (10 samples, 0.10%)</title><rect x="33.5883%" y="885" width="0.1048%" height="15" fill="rgb(244,60,51)" fg:x="3206" fg:w="10"/><text x="33.8383%" y="895.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (10 samples, 0.10%)</title><rect x="33.5883%" y="869" width="0.1048%" height="15" fill="rgb(233,114,7)" fg:x="3206" fg:w="10"/><text x="33.8383%" y="879.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (10 samples, 0.10%)</title><rect x="33.5883%" y="853" width="0.1048%" height="15" fill="rgb(246,136,16)" fg:x="3206" fg:w="10"/><text x="33.8383%" y="863.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (10 samples, 0.10%)</title><rect x="33.5883%" y="837" width="0.1048%" height="15" fill="rgb(243,114,45)" fg:x="3206" fg:w="10"/><text x="33.8383%" y="847.50"></text></g><g><title>async_task::header::Header::register (10 samples, 0.10%)</title><rect x="33.5883%" y="821" width="0.1048%" height="15" fill="rgb(247,183,43)" fg:x="3206" fg:w="10"/><text x="33.8383%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.03%)</title><rect x="33.6616%" y="805" width="0.0314%" height="15" fill="rgb(251,210,42)" fg:x="3213" fg:w="3"/><text x="33.9116%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="33.6616%" y="789" width="0.0314%" height="15" fill="rgb(221,88,35)" fg:x="3213" fg:w="3"/><text x="33.9116%" y="799.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (1 samples, 0.01%)</title><rect x="33.6930%" y="1013" width="0.0105%" height="15" fill="rgb(242,21,20)" fg:x="3216" fg:w="1"/><text x="33.9430%" y="1023.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (1 samples, 0.01%)</title><rect x="33.6930%" y="997" width="0.0105%" height="15" fill="rgb(233,226,36)" fg:x="3216" fg:w="1"/><text x="33.9430%" y="1007.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (1 samples, 0.01%)</title><rect x="33.6930%" y="981" width="0.0105%" height="15" fill="rgb(243,189,34)" fg:x="3216" fg:w="1"/><text x="33.9430%" y="991.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (1 samples, 0.01%)</title><rect x="33.6930%" y="965" width="0.0105%" height="15" fill="rgb(207,145,50)" fg:x="3216" fg:w="1"/><text x="33.9430%" y="975.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (1 samples, 0.01%)</title><rect x="33.6930%" y="949" width="0.0105%" height="15" fill="rgb(242,1,50)" fg:x="3216" fg:w="1"/><text x="33.9430%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="33.6930%" y="933" width="0.0105%" height="15" fill="rgb(231,65,32)" fg:x="3216" fg:w="1"/><text x="33.9430%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="33.6930%" y="917" width="0.0105%" height="15" fill="rgb(208,68,49)" fg:x="3216" fg:w="1"/><text x="33.9430%" y="927.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (14 samples, 0.15%)</title><rect x="33.5673%" y="1093" width="0.1467%" height="15" fill="rgb(253,54,49)" fg:x="3204" fg:w="14"/><text x="33.8173%" y="1103.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (14 samples, 0.15%)</title><rect x="33.5673%" y="1077" width="0.1467%" height="15" fill="rgb(245,186,24)" fg:x="3204" fg:w="14"/><text x="33.8173%" y="1087.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (14 samples, 0.15%)</title><rect x="33.5673%" y="1061" width="0.1467%" height="15" fill="rgb(209,2,41)" fg:x="3204" fg:w="14"/><text x="33.8173%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (2 samples, 0.02%)</title><rect x="33.6930%" y="1045" width="0.0210%" height="15" fill="rgb(242,208,54)" fg:x="3216" fg:w="2"/><text x="33.9430%" y="1055.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (2 samples, 0.02%)</title><rect x="33.6930%" y="1029" width="0.0210%" height="15" fill="rgb(225,9,51)" fg:x="3216" fg:w="2"/><text x="33.9430%" y="1039.50"></text></g><g><title>&lt;bevy_ecs::system::commands::InsertBundle&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (1 samples, 0.01%)</title><rect x="33.7035%" y="1013" width="0.0105%" height="15" fill="rgb(207,207,25)" fg:x="3217" fg:w="1"/><text x="33.9535%" y="1023.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="33.7035%" y="997" width="0.0105%" height="15" fill="rgb(253,96,18)" fg:x="3217" fg:w="1"/><text x="33.9535%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::LOCAL_EXECUTOR::__getit (2 samples, 0.02%)</title><rect x="33.7140%" y="1013" width="0.0210%" height="15" fill="rgb(252,215,20)" fg:x="3218" fg:w="2"/><text x="33.9640%" y="1023.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="33.7140%" y="997" width="0.0210%" height="15" fill="rgb(245,227,26)" fg:x="3218" fg:w="2"/><text x="33.9640%" y="1007.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (2 samples, 0.02%)</title><rect x="33.7140%" y="981" width="0.0210%" height="15" fill="rgb(241,208,0)" fg:x="3218" fg:w="2"/><text x="33.9640%" y="991.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="33.7140%" y="965" width="0.0210%" height="15" fill="rgb(224,130,10)" fg:x="3218" fg:w="2"/><text x="33.9640%" y="975.50"></text></g><g><title>__tls_get_addr (2 samples, 0.02%)</title><rect x="33.7140%" y="949" width="0.0210%" height="15" fill="rgb(237,29,0)" fg:x="3218" fg:w="2"/><text x="33.9640%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="33.9026%" y="949" width="0.0210%" height="15" fill="rgb(219,27,41)" fg:x="3236" fg:w="2"/><text x="34.1526%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (2 samples, 0.02%)</title><rect x="33.9026%" y="933" width="0.0210%" height="15" fill="rgb(245,101,19)" fg:x="3236" fg:w="2"/><text x="34.1526%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_add (2 samples, 0.02%)</title><rect x="33.9026%" y="917" width="0.0210%" height="15" fill="rgb(243,44,37)" fg:x="3236" fg:w="2"/><text x="34.1526%" y="927.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="33.8921%" y="965" width="0.0629%" height="15" fill="rgb(228,213,43)" fg:x="3235" fg:w="6"/><text x="34.1421%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.03%)</title><rect x="33.9235%" y="949" width="0.0314%" height="15" fill="rgb(219,163,21)" fg:x="3238" fg:w="3"/><text x="34.1735%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.03%)</title><rect x="33.9235%" y="933" width="0.0314%" height="15" fill="rgb(234,86,24)" fg:x="3238" fg:w="3"/><text x="34.1735%" y="943.50"></text></g><g><title>bevy_ecs::schedule::system_container::ParallelSystemContainer::system_mut_unsafe (1 samples, 0.01%)</title><rect x="33.9550%" y="965" width="0.0105%" height="15" fill="rgb(225,10,24)" fg:x="3241" fg:w="1"/><text x="34.2050%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="33.9759%" y="949" width="0.0210%" height="15" fill="rgb(218,109,7)" fg:x="3243" fg:w="2"/><text x="34.2259%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="33.9759%" y="933" width="0.0210%" height="15" fill="rgb(210,20,26)" fg:x="3243" fg:w="2"/><text x="34.2259%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="33.9759%" y="917" width="0.0210%" height="15" fill="rgb(216,18,1)" fg:x="3243" fg:w="2"/><text x="34.2259%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="33.9759%" y="901" width="0.0210%" height="15" fill="rgb(206,163,23)" fg:x="3243" fg:w="2"/><text x="34.2259%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="33.9759%" y="885" width="0.0210%" height="15" fill="rgb(229,150,31)" fg:x="3243" fg:w="2"/><text x="34.2259%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="33.9759%" y="869" width="0.0210%" height="15" fill="rgb(231,10,5)" fg:x="3243" fg:w="2"/><text x="34.2259%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2 samples, 0.02%)</title><rect x="33.9759%" y="853" width="0.0210%" height="15" fill="rgb(250,40,50)" fg:x="3243" fg:w="2"/><text x="34.2259%" y="863.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2 samples, 0.02%)</title><rect x="33.9759%" y="837" width="0.0210%" height="15" fill="rgb(217,119,7)" fg:x="3243" fg:w="2"/><text x="34.2259%" y="847.50"></text></g><g><title>alloc::alloc::realloc (2 samples, 0.02%)</title><rect x="33.9759%" y="821" width="0.0210%" height="15" fill="rgb(245,214,40)" fg:x="3243" fg:w="2"/><text x="34.2259%" y="831.50"></text></g><g><title>__GI___libc_realloc (2 samples, 0.02%)</title><rect x="33.9759%" y="805" width="0.0210%" height="15" fill="rgb(216,187,1)" fg:x="3243" fg:w="2"/><text x="34.2259%" y="815.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="33.9864%" y="789" width="0.0105%" height="15" fill="rgb(237,146,21)" fg:x="3244" fg:w="1"/><text x="34.2364%" y="799.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="33.9864%" y="773" width="0.0105%" height="15" fill="rgb(210,174,47)" fg:x="3244" fg:w="1"/><text x="34.2364%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="34.0073%" y="933" width="0.0105%" height="15" fill="rgb(218,111,39)" fg:x="3246" fg:w="1"/><text x="34.2573%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="34.0073%" y="917" width="0.0105%" height="15" fill="rgb(224,95,19)" fg:x="3246" fg:w="1"/><text x="34.2573%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="34.0073%" y="901" width="0.0105%" height="15" fill="rgb(234,15,38)" fg:x="3246" fg:w="1"/><text x="34.2573%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (7 samples, 0.07%)</title><rect x="34.0178%" y="933" width="0.0733%" height="15" fill="rgb(246,56,12)" fg:x="3247" fg:w="7"/><text x="34.2678%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (7 samples, 0.07%)</title><rect x="34.0178%" y="917" width="0.0733%" height="15" fill="rgb(247,16,17)" fg:x="3247" fg:w="7"/><text x="34.2678%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (7 samples, 0.07%)</title><rect x="34.0178%" y="901" width="0.0733%" height="15" fill="rgb(215,151,11)" fg:x="3247" fg:w="7"/><text x="34.2678%" y="911.50"></text></g><g><title>async_task::runnable::spawn_unchecked (1 samples, 0.01%)</title><rect x="34.0911%" y="933" width="0.0105%" height="15" fill="rgb(225,16,24)" fg:x="3254" fg:w="1"/><text x="34.3411%" y="943.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="34.0911%" y="917" width="0.0105%" height="15" fill="rgb(217,117,5)" fg:x="3254" fg:w="1"/><text x="34.3411%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;vec_arena::Arena&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="34.1016%" y="933" width="0.0105%" height="15" fill="rgb(246,187,53)" fg:x="3255" fg:w="1"/><text x="34.3516%" y="943.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="34.1016%" y="917" width="0.0105%" height="15" fill="rgb(241,71,40)" fg:x="3255" fg:w="1"/><text x="34.3516%" y="927.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="34.1016%" y="901" width="0.0105%" height="15" fill="rgb(231,67,39)" fg:x="3255" fg:w="1"/><text x="34.3516%" y="911.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="34.1016%" y="885" width="0.0105%" height="15" fill="rgb(222,120,24)" fg:x="3255" fg:w="1"/><text x="34.3516%" y="895.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="34.1016%" y="869" width="0.0105%" height="15" fill="rgb(248,3,3)" fg:x="3255" fg:w="1"/><text x="34.3516%" y="879.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (15 samples, 0.16%)</title><rect x="33.9654%" y="965" width="0.1572%" height="15" fill="rgb(228,218,5)" fg:x="3242" fg:w="15"/><text x="34.2154%" y="975.50"></text></g><g><title>async_executor::Executor::spawn (12 samples, 0.13%)</title><rect x="33.9969%" y="949" width="0.1257%" height="15" fill="rgb(212,202,43)" fg:x="3245" fg:w="12"/><text x="34.2469%" y="959.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="34.1121%" y="933" width="0.0105%" height="15" fill="rgb(235,183,2)" fg:x="3256" fg:w="1"/><text x="34.3621%" y="943.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="34.1121%" y="917" width="0.0105%" height="15" fill="rgb(230,165,10)" fg:x="3256" fg:w="1"/><text x="34.3621%" y="927.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="34.1121%" y="901" width="0.0105%" height="15" fill="rgb(219,54,40)" fg:x="3256" fg:w="1"/><text x="34.3621%" y="911.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="34.1121%" y="885" width="0.0105%" height="15" fill="rgb(244,73,9)" fg:x="3256" fg:w="1"/><text x="34.3621%" y="895.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (25 samples, 0.26%)</title><rect x="33.8711%" y="981" width="0.2619%" height="15" fill="rgb(212,32,45)" fg:x="3233" fg:w="25"/><text x="34.1211%" y="991.50"></text></g><g><title>fixedbitset::FixedBitSet::insert (1 samples, 0.01%)</title><rect x="34.1226%" y="965" width="0.0105%" height="15" fill="rgb(205,58,31)" fg:x="3257" fg:w="1"/><text x="34.3726%" y="975.50"></text></g><g><title>async_executor::Executor::schedule (1 samples, 0.01%)</title><rect x="34.1435%" y="949" width="0.0105%" height="15" fill="rgb(250,120,43)" fg:x="3259" fg:w="1"/><text x="34.3935%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="34.1435%" y="933" width="0.0105%" height="15" fill="rgb(235,13,10)" fg:x="3259" fg:w="1"/><text x="34.3935%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="34.1435%" y="917" width="0.0105%" height="15" fill="rgb(232,219,31)" fg:x="3259" fg:w="1"/><text x="34.3935%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="34.1435%" y="901" width="0.0105%" height="15" fill="rgb(218,157,51)" fg:x="3259" fg:w="1"/><text x="34.3935%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="34.1540%" y="949" width="0.0105%" height="15" fill="rgb(211,91,52)" fg:x="3260" fg:w="1"/><text x="34.4040%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="34.1540%" y="933" width="0.0105%" height="15" fill="rgb(240,173,1)" fg:x="3260" fg:w="1"/><text x="34.4040%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="34.1540%" y="917" width="0.0105%" height="15" fill="rgb(248,20,47)" fg:x="3260" fg:w="1"/><text x="34.4040%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="34.1645%" y="933" width="0.0105%" height="15" fill="rgb(217,221,40)" fg:x="3261" fg:w="1"/><text x="34.4145%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="34.1645%" y="917" width="0.0105%" height="15" fill="rgb(226,149,51)" fg:x="3261" fg:w="1"/><text x="34.4145%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="34.1645%" y="901" width="0.0105%" height="15" fill="rgb(252,193,7)" fg:x="3261" fg:w="1"/><text x="34.4145%" y="911.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (2 samples, 0.02%)</title><rect x="34.1645%" y="949" width="0.0210%" height="15" fill="rgb(205,123,0)" fg:x="3261" fg:w="2"/><text x="34.4145%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (1 samples, 0.01%)</title><rect x="34.1750%" y="933" width="0.0105%" height="15" fill="rgb(233,173,25)" fg:x="3262" fg:w="1"/><text x="34.4250%" y="943.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="34.1750%" y="917" width="0.0105%" height="15" fill="rgb(216,63,32)" fg:x="3262" fg:w="1"/><text x="34.4250%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="34.1750%" y="901" width="0.0105%" height="15" fill="rgb(209,56,45)" fg:x="3262" fg:w="1"/><text x="34.4250%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="34.1750%" y="885" width="0.0105%" height="15" fill="rgb(226,111,49)" fg:x="3262" fg:w="1"/><text x="34.4250%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="34.1750%" y="869" width="0.0105%" height="15" fill="rgb(244,181,21)" fg:x="3262" fg:w="1"/><text x="34.4250%" y="879.50"></text></g><g><title>async_task::runnable::Runnable::waker (1 samples, 0.01%)</title><rect x="34.1854%" y="949" width="0.0105%" height="15" fill="rgb(222,126,15)" fg:x="3263" fg:w="1"/><text x="34.4354%" y="959.50"></text></g><g><title>async_task::runnable::spawn_unchecked (3 samples, 0.03%)</title><rect x="34.1959%" y="949" width="0.0314%" height="15" fill="rgb(222,95,17)" fg:x="3264" fg:w="3"/><text x="34.4459%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (3 samples, 0.03%)</title><rect x="34.1959%" y="933" width="0.0314%" height="15" fill="rgb(254,46,5)" fg:x="3264" fg:w="3"/><text x="34.4459%" y="943.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (35 samples, 0.37%)</title><rect x="33.8711%" y="997" width="0.3667%" height="15" fill="rgb(236,216,35)" fg:x="3233" fg:w="35"/><text x="34.1211%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (10 samples, 0.10%)</title><rect x="34.1331%" y="981" width="0.1048%" height="15" fill="rgb(217,187,26)" fg:x="3258" fg:w="10"/><text x="34.3831%" y="991.50"></text></g><g><title>async_executor::Executor::spawn (9 samples, 0.09%)</title><rect x="34.1435%" y="965" width="0.0943%" height="15" fill="rgb(207,192,25)" fg:x="3259" fg:w="9"/><text x="34.3935%" y="975.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="34.2273%" y="949" width="0.0105%" height="15" fill="rgb(253,135,27)" fg:x="3267" fg:w="1"/><text x="34.4773%" y="959.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="34.2273%" y="933" width="0.0105%" height="15" fill="rgb(211,122,29)" fg:x="3267" fg:w="1"/><text x="34.4773%" y="943.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="34.2273%" y="917" width="0.0105%" height="15" fill="rgb(233,162,40)" fg:x="3267" fg:w="1"/><text x="34.4773%" y="927.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="34.2273%" y="901" width="0.0105%" height="15" fill="rgb(222,184,47)" fg:x="3267" fg:w="1"/><text x="34.4773%" y="911.50"></text></g><g><title>[libbevy_dylib-7e0daee3ecabe62f.so] (3 samples, 0.03%)</title><rect x="34.2378%" y="997" width="0.0314%" height="15" fill="rgb(249,99,23)" fg:x="3268" fg:w="3"/><text x="34.4878%" y="1007.50"></text></g><g><title>async_executor::Executor::try_tick (3 samples, 0.03%)</title><rect x="34.2378%" y="981" width="0.0314%" height="15" fill="rgb(214,60,12)" fg:x="3268" fg:w="3"/><text x="34.4878%" y="991.50"></text></g><g><title>async_executor::Executor::state (1 samples, 0.01%)</title><rect x="34.3112%" y="981" width="0.0105%" height="15" fill="rgb(250,229,36)" fg:x="3275" fg:w="1"/><text x="34.5612%" y="991.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (1 samples, 0.01%)</title><rect x="34.3112%" y="965" width="0.0105%" height="15" fill="rgb(232,195,10)" fg:x="3275" fg:w="1"/><text x="34.5612%" y="975.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (1 samples, 0.01%)</title><rect x="34.3112%" y="949" width="0.0105%" height="15" fill="rgb(205,213,31)" fg:x="3275" fg:w="1"/><text x="34.5612%" y="959.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="34.3112%" y="933" width="0.0105%" height="15" fill="rgb(237,43,8)" fg:x="3275" fg:w="1"/><text x="34.5612%" y="943.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::is_initialized (1 samples, 0.01%)</title><rect x="34.3112%" y="917" width="0.0105%" height="15" fill="rgb(216,208,3)" fg:x="3275" fg:w="1"/><text x="34.5612%" y="927.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="34.3950%" y="869" width="0.0105%" height="15" fill="rgb(228,179,44)" fg:x="3283" fg:w="1"/><text x="34.6450%" y="879.50"></text></g><g><title>concurrent_queue::full_fence (1 samples, 0.01%)</title><rect x="34.4159%" y="821" width="0.0105%" height="15" fill="rgb(230,192,27)" fg:x="3285" fg:w="1"/><text x="34.6659%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="34.4159%" y="805" width="0.0105%" height="15" fill="rgb(251,30,38)" fg:x="3285" fg:w="1"/><text x="34.6659%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="34.4159%" y="789" width="0.0105%" height="15" fill="rgb(246,55,52)" fg:x="3285" fg:w="1"/><text x="34.6659%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="34.4159%" y="773" width="0.0105%" height="15" fill="rgb(249,79,26)" fg:x="3285" fg:w="1"/><text x="34.6659%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (3 samples, 0.03%)</title><rect x="34.4054%" y="853" width="0.0314%" height="15" fill="rgb(220,202,16)" fg:x="3284" fg:w="3"/><text x="34.6554%" y="863.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="34.4159%" y="837" width="0.0210%" height="15" fill="rgb(250,170,23)" fg:x="3285" fg:w="2"/><text x="34.6659%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="34.4264%" y="821" width="0.0105%" height="15" fill="rgb(230,7,37)" fg:x="3286" fg:w="1"/><text x="34.6764%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="34.4264%" y="805" width="0.0105%" height="15" fill="rgb(213,71,1)" fg:x="3286" fg:w="1"/><text x="34.6764%" y="815.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (5 samples, 0.05%)</title><rect x="34.4054%" y="869" width="0.0524%" height="15" fill="rgb(227,87,39)" fg:x="3284" fg:w="5"/><text x="34.6554%" y="879.50"></text></g><g><title>event_listener::Event::notify (2 samples, 0.02%)</title><rect x="34.4369%" y="853" width="0.0210%" height="15" fill="rgb(210,41,29)" fg:x="3287" fg:w="2"/><text x="34.6869%" y="863.50"></text></g><g><title>event_listener::full_fence (2 samples, 0.02%)</title><rect x="34.4369%" y="837" width="0.0210%" height="15" fill="rgb(206,191,31)" fg:x="3287" fg:w="2"/><text x="34.6869%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2 samples, 0.02%)</title><rect x="34.4369%" y="821" width="0.0210%" height="15" fill="rgb(247,75,54)" fg:x="3287" fg:w="2"/><text x="34.6869%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="34.4369%" y="805" width="0.0210%" height="15" fill="rgb(208,54,50)" fg:x="3287" fg:w="2"/><text x="34.6869%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="34.4369%" y="789" width="0.0210%" height="15" fill="rgb(214,90,37)" fg:x="3287" fg:w="2"/><text x="34.6869%" y="799.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::recv::{{closure}} (9 samples, 0.09%)</title><rect x="34.3845%" y="885" width="0.0943%" height="15" fill="rgb(220,132,6)" fg:x="3282" fg:w="9"/><text x="34.6345%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (2 samples, 0.02%)</title><rect x="34.4578%" y="869" width="0.0210%" height="15" fill="rgb(213,167,7)" fg:x="3289" fg:w="2"/><text x="34.7078%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (2 samples, 0.02%)</title><rect x="34.4578%" y="853" width="0.0210%" height="15" fill="rgb(243,36,27)" fg:x="3289" fg:w="2"/><text x="34.7078%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="34.4578%" y="837" width="0.0210%" height="15" fill="rgb(235,147,12)" fg:x="3289" fg:w="2"/><text x="34.7078%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="34.4683%" y="821" width="0.0105%" height="15" fill="rgb(212,198,44)" fg:x="3290" fg:w="1"/><text x="34.7183%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="34.4683%" y="805" width="0.0105%" height="15" fill="rgb(218,68,50)" fg:x="3290" fg:w="1"/><text x="34.7183%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (4 samples, 0.04%)</title><rect x="34.5102%" y="789" width="0.0419%" height="15" fill="rgb(224,79,48)" fg:x="3294" fg:w="4"/><text x="34.7602%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (4 samples, 0.04%)</title><rect x="34.5102%" y="773" width="0.0419%" height="15" fill="rgb(213,191,50)" fg:x="3294" fg:w="4"/><text x="34.7602%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (4 samples, 0.04%)</title><rect x="34.5102%" y="757" width="0.0419%" height="15" fill="rgb(254,146,10)" fg:x="3294" fg:w="4"/><text x="34.7602%" y="767.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (7 samples, 0.07%)</title><rect x="34.4997%" y="821" width="0.0733%" height="15" fill="rgb(215,175,11)" fg:x="3293" fg:w="7"/><text x="34.7497%" y="831.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::push (6 samples, 0.06%)</title><rect x="34.5102%" y="805" width="0.0629%" height="15" fill="rgb(207,49,7)" fg:x="3294" fg:w="6"/><text x="34.7602%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (2 samples, 0.02%)</title><rect x="34.5521%" y="789" width="0.0210%" height="15" fill="rgb(234,144,29)" fg:x="3298" fg:w="2"/><text x="34.8021%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_and (2 samples, 0.02%)</title><rect x="34.5521%" y="773" width="0.0210%" height="15" fill="rgb(213,222,48)" fg:x="3298" fg:w="2"/><text x="34.8021%" y="783.50"></text></g><g><title>event_listener::Inner::lock (2 samples, 0.02%)</title><rect x="34.5731%" y="805" width="0.0210%" height="15" fill="rgb(222,8,6)" fg:x="3300" fg:w="2"/><text x="34.8231%" y="815.50"></text></g><g><title>event_listener::Spinlock&lt;T&gt;::lock (2 samples, 0.02%)</title><rect x="34.5731%" y="789" width="0.0210%" height="15" fill="rgb(221,114,49)" fg:x="3300" fg:w="2"/><text x="34.8231%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (2 samples, 0.02%)</title><rect x="34.5731%" y="773" width="0.0210%" height="15" fill="rgb(250,140,42)" fg:x="3300" fg:w="2"/><text x="34.8231%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_swap (2 samples, 0.02%)</title><rect x="34.5731%" y="757" width="0.0210%" height="15" fill="rgb(250,150,27)" fg:x="3300" fg:w="2"/><text x="34.8231%" y="767.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="34.5940%" y="757" width="0.0105%" height="15" fill="rgb(252,159,3)" fg:x="3302" fg:w="1"/><text x="34.8440%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="34.5940%" y="741" width="0.0105%" height="15" fill="rgb(241,182,3)" fg:x="3302" fg:w="1"/><text x="34.8440%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="34.5940%" y="725" width="0.0105%" height="15" fill="rgb(236,3,9)" fg:x="3302" fg:w="1"/><text x="34.8440%" y="735.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="34.6045%" y="741" width="0.0105%" height="15" fill="rgb(223,227,51)" fg:x="3303" fg:w="1"/><text x="34.8545%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="34.6045%" y="725" width="0.0105%" height="15" fill="rgb(232,133,30)" fg:x="3303" fg:w="1"/><text x="34.8545%" y="735.50"></text></g><g><title>event_listener::List::notify (5 samples, 0.05%)</title><rect x="34.5940%" y="805" width="0.0524%" height="15" fill="rgb(209,93,27)" fg:x="3302" fg:w="5"/><text x="34.8440%" y="815.50"></text></g><g><title>core::task::wake::Waker::wake (5 samples, 0.05%)</title><rect x="34.5940%" y="789" width="0.0524%" height="15" fill="rgb(208,108,34)" fg:x="3302" fg:w="5"/><text x="34.8440%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (5 samples, 0.05%)</title><rect x="34.5940%" y="773" width="0.0524%" height="15" fill="rgb(215,189,13)" fg:x="3302" fg:w="5"/><text x="34.8440%" y="783.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (4 samples, 0.04%)</title><rect x="34.6045%" y="757" width="0.0419%" height="15" fill="rgb(206,88,23)" fg:x="3303" fg:w="4"/><text x="34.8545%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.03%)</title><rect x="34.6150%" y="741" width="0.0314%" height="15" fill="rgb(240,173,0)" fg:x="3304" fg:w="3"/><text x="34.8650%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="34.6150%" y="725" width="0.0314%" height="15" fill="rgb(223,106,52)" fg:x="3304" fg:w="3"/><text x="34.8650%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.18%)</title><rect x="34.4788%" y="869" width="0.1781%" height="15" fill="rgb(206,130,16)" fg:x="3291" fg:w="17"/><text x="34.7288%" y="879.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::send::{{closure}} (17 samples, 0.18%)</title><rect x="34.4788%" y="853" width="0.1781%" height="15" fill="rgb(220,54,25)" fg:x="3291" fg:w="17"/><text x="34.7288%" y="863.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (15 samples, 0.16%)</title><rect x="34.4997%" y="837" width="0.1572%" height="15" fill="rgb(210,4,38)" fg:x="3293" fg:w="15"/><text x="34.7497%" y="847.50"></text></g><g><title>event_listener::Event::notify (8 samples, 0.08%)</title><rect x="34.5731%" y="821" width="0.0838%" height="15" fill="rgb(238,94,39)" fg:x="3300" fg:w="8"/><text x="34.8231%" y="831.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="34.6464%" y="805" width="0.0105%" height="15" fill="rgb(234,124,34)" fg:x="3307" fg:w="1"/><text x="34.8964%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="34.6464%" y="789" width="0.0105%" height="15" fill="rgb(221,91,40)" fg:x="3307" fg:w="1"/><text x="34.8964%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="34.6464%" y="773" width="0.0105%" height="15" fill="rgb(246,53,28)" fg:x="3307" fg:w="1"/><text x="34.8964%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="34.6464%" y="757" width="0.0105%" height="15" fill="rgb(229,109,7)" fg:x="3307" fg:w="1"/><text x="34.8964%" y="767.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (1 samples, 0.01%)</title><rect x="34.6569%" y="869" width="0.0105%" height="15" fill="rgb(249,117,8)" fg:x="3308" fg:w="1"/><text x="34.9069%" y="879.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (1 samples, 0.01%)</title><rect x="34.6569%" y="853" width="0.0105%" height="15" fill="rgb(210,181,1)" fg:x="3308" fg:w="1"/><text x="34.9069%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="34.6569%" y="837" width="0.0105%" height="15" fill="rgb(211,66,1)" fg:x="3308" fg:w="1"/><text x="34.9069%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="34.6569%" y="821" width="0.0105%" height="15" fill="rgb(221,90,14)" fg:x="3308" fg:w="1"/><text x="34.9069%" y="831.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::is_compatible (1 samples, 0.01%)</title><rect x="34.6674%" y="853" width="0.0105%" height="15" fill="rgb(219,222,44)" fg:x="3309" fg:w="1"/><text x="34.9174%" y="863.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (1 samples, 0.01%)</title><rect x="34.6674%" y="837" width="0.0105%" height="15" fill="rgb(246,34,33)" fg:x="3309" fg:w="1"/><text x="34.9174%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="34.6674%" y="821" width="0.0105%" height="15" fill="rgb(227,135,41)" fg:x="3309" fg:w="1"/><text x="34.9174%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="34.6674%" y="805" width="0.0105%" height="15" fill="rgb(226,15,14)" fg:x="3309" fg:w="1"/><text x="34.9174%" y="815.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (2 samples, 0.02%)</title><rect x="34.6674%" y="869" width="0.0210%" height="15" fill="rgb(236,148,47)" fg:x="3309" fg:w="2"/><text x="34.9174%" y="879.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (1 samples, 0.01%)</title><rect x="34.6778%" y="853" width="0.0105%" height="15" fill="rgb(233,162,52)" fg:x="3310" fg:w="1"/><text x="34.9278%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="34.6778%" y="837" width="0.0105%" height="15" fill="rgb(244,35,28)" fg:x="3310" fg:w="1"/><text x="34.9278%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="34.6778%" y="821" width="0.0105%" height="15" fill="rgb(205,121,10)" fg:x="3310" fg:w="1"/><text x="34.9278%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="34.6778%" y="805" width="0.0105%" height="15" fill="rgb(250,58,18)" fg:x="3310" fg:w="1"/><text x="34.9278%" y="815.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="34.6778%" y="789" width="0.0105%" height="15" fill="rgb(216,37,13)" fg:x="3310" fg:w="1"/><text x="34.9278%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (30 samples, 0.31%)</title><rect x="34.3845%" y="901" width="0.3143%" height="15" fill="rgb(221,215,42)" fg:x="3282" fg:w="30"/><text x="34.6345%" y="911.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (21 samples, 0.22%)</title><rect x="34.4788%" y="885" width="0.2200%" height="15" fill="rgb(217,214,19)" fg:x="3291" fg:w="21"/><text x="34.7288%" y="895.50"></text></g><g><title>fixedbitset::FixedBitSet::intersect_with (1 samples, 0.01%)</title><rect x="34.6883%" y="869" width="0.0105%" height="15" fill="rgb(233,139,13)" fg:x="3311" fg:w="1"/><text x="34.9383%" y="879.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="34.6883%" y="853" width="0.0105%" height="15" fill="rgb(247,168,23)" fg:x="3311" fg:w="1"/><text x="34.9383%" y="863.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="34.6988%" y="853" width="0.0105%" height="15" fill="rgb(207,202,1)" fg:x="3312" fg:w="1"/><text x="34.9488%" y="863.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="34.6988%" y="837" width="0.0105%" height="15" fill="rgb(220,155,48)" fg:x="3312" fg:w="1"/><text x="34.9488%" y="847.50"></text></g><g><title>concurrent_queue::unbounded::Slot&lt;T&gt;::wait_write (1 samples, 0.01%)</title><rect x="34.7093%" y="853" width="0.0105%" height="15" fill="rgb(250,43,26)" fg:x="3313" fg:w="1"/><text x="34.9593%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="34.7093%" y="837" width="0.0105%" height="15" fill="rgb(212,190,23)" fg:x="3313" fg:w="1"/><text x="34.9593%" y="847.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (3 samples, 0.03%)</title><rect x="34.6988%" y="885" width="0.0314%" height="15" fill="rgb(216,39,24)" fg:x="3312" fg:w="3"/><text x="34.9488%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (3 samples, 0.03%)</title><rect x="34.6988%" y="869" width="0.0314%" height="15" fill="rgb(252,113,16)" fg:x="3312" fg:w="3"/><text x="34.9488%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="34.7197%" y="853" width="0.0105%" height="15" fill="rgb(208,113,19)" fg:x="3314" fg:w="1"/><text x="34.9697%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="34.7197%" y="837" width="0.0105%" height="15" fill="rgb(234,107,25)" fg:x="3314" fg:w="1"/><text x="34.9697%" y="847.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (4 samples, 0.04%)</title><rect x="34.6988%" y="901" width="0.0419%" height="15" fill="rgb(234,217,51)" fg:x="3312" fg:w="4"/><text x="34.9488%" y="911.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="34.7302%" y="885" width="0.0105%" height="15" fill="rgb(251,29,42)" fg:x="3315" fg:w="1"/><text x="34.9802%" y="895.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="34.7302%" y="869" width="0.0105%" height="15" fill="rgb(221,62,51)" fg:x="3315" fg:w="1"/><text x="34.9802%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="34.7302%" y="853" width="0.0105%" height="15" fill="rgb(240,192,43)" fg:x="3315" fg:w="1"/><text x="34.9802%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="34.7302%" y="837" width="0.0105%" height="15" fill="rgb(224,157,47)" fg:x="3315" fg:w="1"/><text x="34.9802%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="34.7302%" y="821" width="0.0105%" height="15" fill="rgb(226,84,45)" fg:x="3315" fg:w="1"/><text x="34.9802%" y="831.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (1 samples, 0.01%)</title><rect x="34.7407%" y="901" width="0.0105%" height="15" fill="rgb(208,207,23)" fg:x="3316" fg:w="1"/><text x="34.9907%" y="911.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_finished_system (1 samples, 0.01%)</title><rect x="34.7407%" y="885" width="0.0105%" height="15" fill="rgb(253,34,51)" fg:x="3316" fg:w="1"/><text x="34.9907%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="34.7512%" y="885" width="0.0105%" height="15" fill="rgb(227,26,34)" fg:x="3317" fg:w="1"/><text x="35.0012%" y="895.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="34.7512%" y="869" width="0.0105%" height="15" fill="rgb(245,75,19)" fg:x="3317" fg:w="1"/><text x="35.0012%" y="879.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="34.7512%" y="853" width="0.0105%" height="15" fill="rgb(250,191,31)" fg:x="3317" fg:w="1"/><text x="35.0012%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="34.7931%" y="853" width="0.0105%" height="15" fill="rgb(224,11,50)" fg:x="3321" fg:w="1"/><text x="35.0431%" y="863.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (5 samples, 0.05%)</title><rect x="34.7617%" y="885" width="0.0524%" height="15" fill="rgb(231,171,7)" fg:x="3318" fg:w="5"/><text x="35.0117%" y="895.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (5 samples, 0.05%)</title><rect x="34.7617%" y="869" width="0.0524%" height="15" fill="rgb(252,214,10)" fg:x="3318" fg:w="5"/><text x="35.0117%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="34.8036%" y="853" width="0.0105%" height="15" fill="rgb(249,45,46)" fg:x="3322" fg:w="1"/><text x="35.0536%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="34.8036%" y="837" width="0.0105%" height="15" fill="rgb(240,173,7)" fg:x="3322" fg:w="1"/><text x="35.0536%" y="847.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (46 samples, 0.48%)</title><rect x="34.3426%" y="917" width="0.4819%" height="15" fill="rgb(235,214,13)" fg:x="3278" fg:w="46"/><text x="34.5926%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (7 samples, 0.07%)</title><rect x="34.7512%" y="901" width="0.0733%" height="15" fill="rgb(245,156,8)" fg:x="3317" fg:w="7"/><text x="35.0012%" y="911.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (1 samples, 0.01%)</title><rect x="34.8140%" y="885" width="0.0105%" height="15" fill="rgb(235,46,12)" fg:x="3323" fg:w="1"/><text x="35.0640%" y="895.50"></text></g><g><title>&lt;(P0,) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="34.8350%" y="869" width="0.0105%" height="15" fill="rgb(221,81,14)" fg:x="3325" fg:w="1"/><text x="35.0850%" y="879.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="34.8350%" y="853" width="0.0105%" height="15" fill="rgb(238,207,9)" fg:x="3325" fg:w="1"/><text x="35.0850%" y="863.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="34.8350%" y="837" width="0.0105%" height="15" fill="rgb(224,129,35)" fg:x="3325" fg:w="1"/><text x="35.0850%" y="847.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="34.8350%" y="821" width="0.0105%" height="15" fill="rgb(243,218,34)" fg:x="3325" fg:w="1"/><text x="35.0850%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="34.8350%" y="805" width="0.0105%" height="15" fill="rgb(220,166,13)" fg:x="3325" fg:w="1"/><text x="35.0850%" y="815.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="34.8350%" y="789" width="0.0105%" height="15" fill="rgb(227,167,49)" fg:x="3325" fg:w="1"/><text x="35.0850%" y="799.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="34.8350%" y="773" width="0.0105%" height="15" fill="rgb(234,142,12)" fg:x="3325" fg:w="1"/><text x="35.0850%" y="783.50"></text></g><g><title>bevy_asset::asset_server::free_unused_assets_system (1 samples, 0.01%)</title><rect x="34.8455%" y="837" width="0.0105%" height="15" fill="rgb(207,100,48)" fg:x="3326" fg:w="1"/><text x="35.0955%" y="847.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::free_unused_assets (1 samples, 0.01%)</title><rect x="34.8455%" y="821" width="0.0105%" height="15" fill="rgb(210,25,14)" fg:x="3326" fg:w="1"/><text x="35.0955%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="34.8455%" y="805" width="0.0105%" height="15" fill="rgb(246,116,27)" fg:x="3326" fg:w="1"/><text x="35.0955%" y="815.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="34.8455%" y="789" width="0.0105%" height="15" fill="rgb(214,193,42)" fg:x="3326" fg:w="1"/><text x="35.0955%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="34.8455%" y="773" width="0.0105%" height="15" fill="rgb(214,122,8)" fg:x="3326" fg:w="1"/><text x="35.0955%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="34.8455%" y="757" width="0.0105%" height="15" fill="rgb(244,173,18)" fg:x="3326" fg:w="1"/><text x="35.0955%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="34.8455%" y="741" width="0.0105%" height="15" fill="rgb(232,68,19)" fg:x="3326" fg:w="1"/><text x="35.0955%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="34.8455%" y="725" width="0.0105%" height="15" fill="rgb(236,224,1)" fg:x="3326" fg:w="1"/><text x="35.0955%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.01%)</title><rect x="34.8455%" y="709" width="0.0105%" height="15" fill="rgb(240,11,8)" fg:x="3326" fg:w="1"/><text x="35.0955%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.01%)</title><rect x="34.8455%" y="693" width="0.0105%" height="15" fill="rgb(244,159,20)" fg:x="3326" fg:w="1"/><text x="35.0955%" y="703.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="34.8664%" y="821" width="0.0210%" height="15" fill="rgb(240,223,54)" fg:x="3328" fg:w="2"/><text x="35.1164%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; (1 samples, 0.01%)</title><rect x="35.0760%" y="741" width="0.0105%" height="15" fill="rgb(237,146,5)" fg:x="3348" fg:w="1"/><text x="35.3260%" y="751.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="35.0760%" y="725" width="0.0105%" height="15" fill="rgb(218,221,32)" fg:x="3348" fg:w="1"/><text x="35.3260%" y="735.50"></text></g><g><title>bevy_render::draw::clear_draw_system (36 samples, 0.38%)</title><rect x="34.8559%" y="837" width="0.3772%" height="15" fill="rgb(244,96,26)" fg:x="3327" fg:w="36"/><text x="35.1059%" y="847.50"></text></g><g><title>bevy_render::draw::Draw::clear_render_commands (33 samples, 0.35%)</title><rect x="34.8874%" y="821" width="0.3457%" height="15" fill="rgb(245,184,37)" fg:x="3330" fg:w="33"/><text x="35.1374%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (33 samples, 0.35%)</title><rect x="34.8874%" y="805" width="0.3457%" height="15" fill="rgb(248,91,47)" fg:x="3330" fg:w="33"/><text x="35.1374%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (33 samples, 0.35%)</title><rect x="34.8874%" y="789" width="0.3457%" height="15" fill="rgb(243,199,8)" fg:x="3330" fg:w="33"/><text x="35.1374%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::draw::RenderCommand]&gt; (33 samples, 0.35%)</title><rect x="34.8874%" y="773" width="0.3457%" height="15" fill="rgb(249,12,15)" fg:x="3330" fg:w="33"/><text x="35.1374%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::draw::RenderCommand&gt; (33 samples, 0.35%)</title><rect x="34.8874%" y="757" width="0.3457%" height="15" fill="rgb(245,97,12)" fg:x="3330" fg:w="33"/><text x="35.1374%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (14 samples, 0.15%)</title><rect x="35.0864%" y="741" width="0.1467%" height="15" fill="rgb(244,61,1)" fg:x="3349" fg:w="14"/><text x="35.3364%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (14 samples, 0.15%)</title><rect x="35.0864%" y="725" width="0.1467%" height="15" fill="rgb(222,194,10)" fg:x="3349" fg:w="14"/><text x="35.3364%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.15%)</title><rect x="35.0864%" y="709" width="0.1467%" height="15" fill="rgb(226,178,8)" fg:x="3349" fg:w="14"/><text x="35.3364%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (14 samples, 0.15%)</title><rect x="35.0864%" y="693" width="0.1467%" height="15" fill="rgb(241,32,34)" fg:x="3349" fg:w="14"/><text x="35.3364%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (14 samples, 0.15%)</title><rect x="35.0864%" y="677" width="0.1467%" height="15" fill="rgb(254,26,6)" fg:x="3349" fg:w="14"/><text x="35.3364%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (11 samples, 0.12%)</title><rect x="35.2750%" y="821" width="0.1152%" height="15" fill="rgb(249,71,11)" fg:x="3367" fg:w="11"/><text x="35.5250%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;,hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;::clear::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="35.3903%" y="757" width="0.0105%" height="15" fill="rgb(232,170,27)" fg:x="3378" fg:w="1"/><text x="35.6403%" y="767.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="35.3903%" y="741" width="0.0105%" height="15" fill="rgb(214,223,17)" fg:x="3378" fg:w="1"/><text x="35.6403%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (1 samples, 0.01%)</title><rect x="35.3903%" y="725" width="0.0105%" height="15" fill="rgb(250,18,15)" fg:x="3378" fg:w="1"/><text x="35.6403%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (1 samples, 0.01%)</title><rect x="35.3903%" y="709" width="0.0105%" height="15" fill="rgb(212,153,51)" fg:x="3378" fg:w="1"/><text x="35.6403%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (1 samples, 0.01%)</title><rect x="35.3903%" y="693" width="0.0105%" height="15" fill="rgb(219,194,12)" fg:x="3378" fg:w="1"/><text x="35.6403%" y="703.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (46 samples, 0.48%)</title><rect x="35.2331%" y="837" width="0.4819%" height="15" fill="rgb(212,58,17)" fg:x="3363" fg:w="46"/><text x="35.4831%" y="847.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (31 samples, 0.32%)</title><rect x="35.3903%" y="821" width="0.3248%" height="15" fill="rgb(254,5,10)" fg:x="3378" fg:w="31"/><text x="35.6403%" y="831.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (31 samples, 0.32%)</title><rect x="35.3903%" y="805" width="0.3248%" height="15" fill="rgb(246,91,7)" fg:x="3378" fg:w="31"/><text x="35.6403%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (31 samples, 0.32%)</title><rect x="35.3903%" y="789" width="0.3248%" height="15" fill="rgb(218,108,49)" fg:x="3378" fg:w="31"/><text x="35.6403%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (31 samples, 0.32%)</title><rect x="35.3903%" y="773" width="0.3248%" height="15" fill="rgb(238,123,20)" fg:x="3378" fg:w="31"/><text x="35.6403%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (30 samples, 0.31%)</title><rect x="35.4007%" y="757" width="0.3143%" height="15" fill="rgb(231,69,23)" fg:x="3379" fg:w="30"/><text x="35.6507%" y="767.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="35.7150%" y="837" width="0.0105%" height="15" fill="rgb(230,209,3)" fg:x="3409" fg:w="1"/><text x="35.9650%" y="847.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="35.7674%" y="821" width="0.0210%" height="15" fill="rgb(231,19,0)" fg:x="3414" fg:w="2"/><text x="36.0174%" y="831.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="35.7674%" y="805" width="0.0210%" height="15" fill="rgb(226,192,25)" fg:x="3414" fg:w="2"/><text x="36.0174%" y="815.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="35.7779%" y="789" width="0.0105%" height="15" fill="rgb(223,175,53)" fg:x="3415" fg:w="1"/><text x="36.0279%" y="799.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="35.7779%" y="773" width="0.0105%" height="15" fill="rgb(248,35,51)" fg:x="3415" fg:w="1"/><text x="36.0279%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="35.7779%" y="757" width="0.0105%" height="15" fill="rgb(230,37,26)" fg:x="3415" fg:w="1"/><text x="36.0279%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="35.7779%" y="741" width="0.0105%" height="15" fill="rgb(206,120,22)" fg:x="3415" fg:w="1"/><text x="36.0279%" y="751.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (92 samples, 0.96%)</title><rect x="34.8350%" y="885" width="0.9639%" height="15" fill="rgb(207,165,28)" fg:x="3325" fg:w="92"/><text x="35.0850%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (91 samples, 0.95%)</title><rect x="34.8455%" y="869" width="0.9534%" height="15" fill="rgb(226,23,46)" fg:x="3326" fg:w="91"/><text x="35.0955%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (91 samples, 0.95%)</title><rect x="34.8455%" y="853" width="0.9534%" height="15" fill="rgb(208,130,44)" fg:x="3326" fg:w="91"/><text x="35.0955%" y="863.50"></text></g><g><title>engine::movement::animate_sprite_system (7 samples, 0.07%)</title><rect x="35.7255%" y="837" width="0.0733%" height="15" fill="rgb(231,67,8)" fg:x="3410" fg:w="7"/><text x="35.9755%" y="847.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="35.7884%" y="821" width="0.0105%" height="15" fill="rgb(205,183,22)" fg:x="3416" fg:w="1"/><text x="36.0384%" y="831.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="35.7884%" y="805" width="0.0105%" height="15" fill="rgb(224,47,9)" fg:x="3416" fg:w="1"/><text x="36.0384%" y="815.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="35.7884%" y="789" width="0.0105%" height="15" fill="rgb(250,183,49)" fg:x="3416" fg:w="1"/><text x="36.0384%" y="799.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="35.7884%" y="773" width="0.0105%" height="15" fill="rgb(220,151,39)" fg:x="3416" fg:w="1"/><text x="36.0384%" y="783.50"></text></g><g><title>&lt;bevy_app::event::EventWriterState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_app::event::Events&lt;T&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,),T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="35.7988%" y="853" width="0.0105%" height="15" fill="rgb(220,118,20)" fg:x="3417" fg:w="1"/><text x="36.0488%" y="863.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="35.7988%" y="837" width="0.0105%" height="15" fill="rgb(231,65,51)" fg:x="3417" fg:w="1"/><text x="36.0488%" y="847.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="35.7988%" y="821" width="0.0105%" height="15" fill="rgb(253,125,37)" fg:x="3417" fg:w="1"/><text x="36.0488%" y="831.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="35.7988%" y="805" width="0.0105%" height="15" fill="rgb(232,102,6)" fg:x="3417" fg:w="1"/><text x="36.0488%" y="815.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="35.7988%" y="789" width="0.0105%" height="15" fill="rgb(251,105,13)" fg:x="3417" fg:w="1"/><text x="36.0488%" y="799.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="35.7988%" y="773" width="0.0105%" height="15" fill="rgb(222,179,29)" fg:x="3417" fg:w="1"/><text x="36.0488%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="35.7988%" y="757" width="0.0105%" height="15" fill="rgb(229,180,53)" fg:x="3417" fg:w="1"/><text x="36.0488%" y="767.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="35.7988%" y="741" width="0.0105%" height="15" fill="rgb(238,104,13)" fg:x="3417" fg:w="1"/><text x="36.0488%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="35.7988%" y="725" width="0.0105%" height="15" fill="rgb(210,130,5)" fg:x="3417" fg:w="1"/><text x="36.0488%" y="735.50"></text></g><g><title>&lt;(P0,P1) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="35.7988%" y="869" width="0.0210%" height="15" fill="rgb(233,87,49)" fg:x="3417" fg:w="2"/><text x="36.0488%" y="879.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMutState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="35.8093%" y="853" width="0.0105%" height="15" fill="rgb(243,34,9)" fg:x="3418" fg:w="1"/><text x="36.0593%" y="863.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut_with_id (1 samples, 0.01%)</title><rect x="35.8093%" y="837" width="0.0105%" height="15" fill="rgb(235,225,10)" fg:x="3418" fg:w="1"/><text x="36.0593%" y="847.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column (1 samples, 0.01%)</title><rect x="35.8093%" y="821" width="0.0105%" height="15" fill="rgb(212,0,30)" fg:x="3418" fg:w="1"/><text x="36.0593%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="35.8093%" y="805" width="0.0105%" height="15" fill="rgb(211,177,0)" fg:x="3418" fg:w="1"/><text x="36.0593%" y="815.50"></text></g><g><title>bevy_ecs::world::World::get_populated_resource_column::{{closure}} (1 samples, 0.01%)</title><rect x="35.8093%" y="789" width="0.0105%" height="15" fill="rgb(225,220,11)" fg:x="3418" fg:w="1"/><text x="36.0593%" y="799.50"></text></g><g><title>bevy_ecs::storage::table::Column::is_empty (1 samples, 0.01%)</title><rect x="35.8093%" y="773" width="0.0105%" height="15" fill="rgb(215,10,13)" fg:x="3418" fg:w="1"/><text x="36.0593%" y="783.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::asset_event_system (3 samples, 0.03%)</title><rect x="35.8198%" y="837" width="0.0314%" height="15" fill="rgb(240,177,14)" fg:x="3419" fg:w="3"/><text x="36.0698%" y="847.50"></text></g><g><title>bevy_app::event::Events&lt;T&gt;::drain (3 samples, 0.03%)</title><rect x="35.8198%" y="821" width="0.0314%" height="15" fill="rgb(243,7,39)" fg:x="3419" fg:w="3"/><text x="36.0698%" y="831.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (3 samples, 0.03%)</title><rect x="35.8512%" y="837" width="0.0314%" height="15" fill="rgb(212,99,0)" fg:x="3422" fg:w="3"/><text x="36.1012%" y="847.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (3 samples, 0.03%)</title><rect x="35.8512%" y="821" width="0.0314%" height="15" fill="rgb(225,162,48)" fg:x="3422" fg:w="3"/><text x="36.1012%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="35.8722%" y="805" width="0.0105%" height="15" fill="rgb(246,16,25)" fg:x="3424" fg:w="1"/><text x="36.1222%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="35.8722%" y="789" width="0.0105%" height="15" fill="rgb(220,150,2)" fg:x="3424" fg:w="1"/><text x="36.1222%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="35.8722%" y="773" width="0.0105%" height="15" fill="rgb(237,113,11)" fg:x="3424" fg:w="1"/><text x="36.1222%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="35.8722%" y="757" width="0.0105%" height="15" fill="rgb(236,70,20)" fg:x="3424" fg:w="1"/><text x="36.1222%" y="767.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="35.8722%" y="741" width="0.0105%" height="15" fill="rgb(234,94,7)" fg:x="3424" fg:w="1"/><text x="36.1222%" y="751.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="35.8722%" y="725" width="0.0105%" height="15" fill="rgb(250,221,0)" fg:x="3424" fg:w="1"/><text x="36.1222%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="35.8722%" y="709" width="0.0105%" height="15" fill="rgb(245,149,46)" fg:x="3424" fg:w="1"/><text x="36.1222%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="35.8722%" y="693" width="0.0105%" height="15" fill="rgb(215,37,27)" fg:x="3424" fg:w="1"/><text x="36.1222%" y="703.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="35.8722%" y="677" width="0.0105%" height="15" fill="rgb(232,65,3)" fg:x="3424" fg:w="1"/><text x="36.1222%" y="687.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="35.8722%" y="661" width="0.0105%" height="15" fill="rgb(214,2,16)" fg:x="3424" fg:w="1"/><text x="36.1222%" y="671.50"></text></g><g><title>bevy_ecs_tilemap::chunk::update_chunk_visibility (1 samples, 0.01%)</title><rect x="35.8827%" y="837" width="0.0105%" height="15" fill="rgb(227,131,50)" fg:x="3425" fg:w="1"/><text x="36.1327%" y="847.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter (1 samples, 0.01%)</title><rect x="35.8827%" y="821" width="0.0105%" height="15" fill="rgb(247,131,45)" fg:x="3425" fg:w="1"/><text x="36.1327%" y="831.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="35.8827%" y="805" width="0.0105%" height="15" fill="rgb(215,97,47)" fg:x="3425" fg:w="1"/><text x="36.1327%" y="815.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="35.8827%" y="789" width="0.0105%" height="15" fill="rgb(233,143,12)" fg:x="3425" fg:w="1"/><text x="36.1327%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="35.8827%" y="773" width="0.0105%" height="15" fill="rgb(222,57,17)" fg:x="3425" fg:w="1"/><text x="36.1327%" y="783.50"></text></g><g><title>bevy_ecs_tilemap::layer::update_chunk_hashmap_for_added_tiles (1 samples, 0.01%)</title><rect x="35.8931%" y="837" width="0.0105%" height="15" fill="rgb(214,119,38)" fg:x="3426" fg:w="1"/><text x="36.1431%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="35.8931%" y="821" width="0.0105%" height="15" fill="rgb(217,28,47)" fg:x="3426" fg:w="1"/><text x="36.1431%" y="831.50"></text></g><g><title>bevy_render::renderer::render_resource::shared_buffers::shared_buffers_update_system (1 samples, 0.01%)</title><rect x="35.9036%" y="837" width="0.0105%" height="15" fill="rgb(231,14,52)" fg:x="3427" fg:w="1"/><text x="36.1536%" y="847.50"></text></g><g><title>bevy_render::renderer::render_resource::shared_buffers::SharedBuffers::update (1 samples, 0.01%)</title><rect x="35.9036%" y="821" width="0.0105%" height="15" fill="rgb(220,158,18)" fg:x="3427" fg:w="1"/><text x="36.1536%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.01%)</title><rect x="35.9036%" y="805" width="0.0105%" height="15" fill="rgb(222,143,46)" fg:x="3427" fg:w="1"/><text x="36.1536%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="35.9036%" y="789" width="0.0105%" height="15" fill="rgb(227,165,5)" fg:x="3427" fg:w="1"/><text x="36.1536%" y="799.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (12 samples, 0.13%)</title><rect x="35.7988%" y="885" width="0.1257%" height="15" fill="rgb(216,222,49)" fg:x="3417" fg:w="12"/><text x="36.0488%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (10 samples, 0.10%)</title><rect x="35.8198%" y="869" width="0.1048%" height="15" fill="rgb(238,73,39)" fg:x="3419" fg:w="10"/><text x="36.0698%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (10 samples, 0.10%)</title><rect x="35.8198%" y="853" width="0.1048%" height="15" fill="rgb(252,115,9)" fg:x="3419" fg:w="10"/><text x="36.0698%" y="863.50"></text></g><g><title>bevy_render::shader::shader_defs::asset_shader_defs_system (1 samples, 0.01%)</title><rect x="35.9141%" y="837" width="0.0105%" height="15" fill="rgb(238,202,4)" fg:x="3428" fg:w="1"/><text x="36.1641%" y="847.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="35.9141%" y="821" width="0.0105%" height="15" fill="rgb(252,153,44)" fg:x="3428" fg:w="1"/><text x="36.1641%" y="831.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="35.9141%" y="805" width="0.0105%" height="15" fill="rgb(235,128,27)" fg:x="3428" fg:w="1"/><text x="36.1641%" y="815.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="35.9141%" y="789" width="0.0105%" height="15" fill="rgb(221,121,47)" fg:x="3428" fg:w="1"/><text x="36.1641%" y="799.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="35.9141%" y="773" width="0.0105%" height="15" fill="rgb(247,211,47)" fg:x="3428" fg:w="1"/><text x="36.1641%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="35.9246%" y="885" width="0.0105%" height="15" fill="rgb(252,47,49)" fg:x="3429" fg:w="1"/><text x="36.1746%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="35.9246%" y="869" width="0.0105%" height="15" fill="rgb(219,119,53)" fg:x="3429" fg:w="1"/><text x="36.1746%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="35.9246%" y="853" width="0.0105%" height="15" fill="rgb(243,165,53)" fg:x="3429" fg:w="1"/><text x="36.1746%" y="863.50"></text></g><g><title>bevy_ui::update::ui_z_system (1 samples, 0.01%)</title><rect x="35.9246%" y="837" width="0.0105%" height="15" fill="rgb(230,12,35)" fg:x="3429" fg:w="1"/><text x="36.1746%" y="847.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter (1 samples, 0.01%)</title><rect x="35.9246%" y="821" width="0.0105%" height="15" fill="rgb(239,57,49)" fg:x="3429" fg:w="1"/><text x="36.1746%" y="831.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="35.9246%" y="805" width="0.0105%" height="15" fill="rgb(231,154,7)" fg:x="3429" fg:w="1"/><text x="36.1746%" y="815.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="35.9246%" y="789" width="0.0105%" height="15" fill="rgb(248,81,34)" fg:x="3429" fg:w="1"/><text x="36.1746%" y="799.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::EntityFetch as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="35.9246%" y="773" width="0.0105%" height="15" fill="rgb(247,9,5)" fg:x="3429" fg:w="1"/><text x="36.1746%" y="783.50"></text></g><g><title>bevy_render::camera::camera::camera_system (1 samples, 0.01%)</title><rect x="35.9350%" y="837" width="0.0105%" height="15" fill="rgb(228,172,27)" fg:x="3430" fg:w="1"/><text x="36.1850%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="35.9350%" y="821" width="0.0105%" height="15" fill="rgb(230,57,44)" fg:x="3430" fg:w="1"/><text x="36.1850%" y="831.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="35.9979%" y="821" width="0.0105%" height="15" fill="rgb(249,35,22)" fg:x="3436" fg:w="1"/><text x="36.2479%" y="831.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="35.9979%" y="805" width="0.0105%" height="15" fill="rgb(250,137,27)" fg:x="3436" fg:w="1"/><text x="36.2479%" y="815.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (1 samples, 0.01%)</title><rect x="35.9979%" y="789" width="0.0105%" height="15" fill="rgb(251,57,31)" fg:x="3436" fg:w="1"/><text x="36.2479%" y="799.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::archetype_filter_fetch (3 samples, 0.03%)</title><rect x="36.0293%" y="789" width="0.0314%" height="15" fill="rgb(238,60,0)" fg:x="3439" fg:w="3"/><text x="36.2793%" y="799.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (3 samples, 0.03%)</title><rect x="36.0293%" y="773" width="0.0314%" height="15" fill="rgb(242,185,39)" fg:x="3439" fg:w="3"/><text x="36.2793%" y="783.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::EntityFetch as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (1 samples, 0.01%)</title><rect x="36.0608%" y="789" width="0.0105%" height="15" fill="rgb(240,63,43)" fg:x="3442" fg:w="1"/><text x="36.3108%" y="799.50"></text></g><g><title>bevy_ecs::archetype::Archetype::entities (1 samples, 0.01%)</title><rect x="36.0608%" y="773" width="0.0105%" height="15" fill="rgb(236,155,6)" fg:x="3442" fg:w="1"/><text x="36.3108%" y="783.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (2 samples, 0.02%)</title><rect x="36.0712%" y="741" width="0.0210%" height="15" fill="rgb(215,11,29)" fg:x="3443" fg:w="2"/><text x="36.3212%" y="751.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="36.0712%" y="725" width="0.0210%" height="15" fill="rgb(228,180,48)" fg:x="3443" fg:w="2"/><text x="36.3212%" y="735.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (2 samples, 0.02%)</title><rect x="36.0712%" y="709" width="0.0210%" height="15" fill="rgb(241,102,12)" fg:x="3443" fg:w="2"/><text x="36.3212%" y="719.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (2 samples, 0.02%)</title><rect x="36.0712%" y="693" width="0.0210%" height="15" fill="rgb(246,213,4)" fg:x="3443" fg:w="2"/><text x="36.3212%" y="703.50"></text></g><g><title>&lt;bevy_ecs::query::filter::ChangedFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (3 samples, 0.03%)</title><rect x="36.0712%" y="789" width="0.0314%" height="15" fill="rgb(218,134,35)" fg:x="3443" fg:w="3"/><text x="36.3212%" y="799.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (3 samples, 0.03%)</title><rect x="36.0712%" y="773" width="0.0314%" height="15" fill="rgb(251,117,35)" fg:x="3443" fg:w="3"/><text x="36.3212%" y="783.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (3 samples, 0.03%)</title><rect x="36.0712%" y="757" width="0.0314%" height="15" fill="rgb(206,156,45)" fg:x="3443" fg:w="3"/><text x="36.3212%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="36.0922%" y="741" width="0.0105%" height="15" fill="rgb(218,52,27)" fg:x="3445" fg:w="1"/><text x="36.3422%" y="751.50"></text></g><g><title>bevy_ecs::entity::Entities::get (1 samples, 0.01%)</title><rect x="36.1027%" y="789" width="0.0105%" height="15" fill="rgb(238,83,36)" fg:x="3446" fg:w="1"/><text x="36.3527%" y="799.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (1 samples, 0.01%)</title><rect x="36.1131%" y="789" width="0.0105%" height="15" fill="rgb(218,53,43)" fg:x="3447" fg:w="1"/><text x="36.3631%" y="799.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (18 samples, 0.19%)</title><rect x="35.9455%" y="837" width="0.1886%" height="15" fill="rgb(239,54,39)" fg:x="3431" fg:w="18"/><text x="36.1955%" y="847.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (12 samples, 0.13%)</title><rect x="36.0084%" y="821" width="0.1257%" height="15" fill="rgb(212,198,13)" fg:x="3437" fg:w="12"/><text x="36.2584%" y="831.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (12 samples, 0.13%)</title><rect x="36.0084%" y="805" width="0.1257%" height="15" fill="rgb(234,54,46)" fg:x="3437" fg:w="12"/><text x="36.2584%" y="815.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (1 samples, 0.01%)</title><rect x="36.1236%" y="789" width="0.0105%" height="15" fill="rgb(217,120,7)" fg:x="3448" fg:w="1"/><text x="36.3736%" y="799.50"></text></g><g><title>fixedbitset::div_rem (1 samples, 0.01%)</title><rect x="36.1236%" y="773" width="0.0105%" height="15" fill="rgb(246,39,15)" fg:x="3448" fg:w="1"/><text x="36.3736%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (20 samples, 0.21%)</title><rect x="35.9350%" y="885" width="0.2095%" height="15" fill="rgb(242,143,31)" fg:x="3430" fg:w="20"/><text x="36.1850%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (20 samples, 0.21%)</title><rect x="35.9350%" y="869" width="0.2095%" height="15" fill="rgb(252,60,24)" fg:x="3430" fg:w="20"/><text x="36.1850%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (20 samples, 0.21%)</title><rect x="35.9350%" y="853" width="0.2095%" height="15" fill="rgb(249,220,7)" fg:x="3430" fg:w="20"/><text x="36.1850%" y="863.50"></text></g><g><title>engine::movement::camera_movement::camera_movement (1 samples, 0.01%)</title><rect x="36.1341%" y="837" width="0.0105%" height="15" fill="rgb(236,67,13)" fg:x="3449" fg:w="1"/><text x="36.3841%" y="847.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="36.1341%" y="821" width="0.0105%" height="15" fill="rgb(210,62,39)" fg:x="3449" fg:w="1"/><text x="36.3841%" y="831.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="36.1341%" y="805" width="0.0105%" height="15" fill="rgb(219,122,53)" fg:x="3449" fg:w="1"/><text x="36.3841%" y="815.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_table (1 samples, 0.01%)</title><rect x="36.1341%" y="789" width="0.0105%" height="15" fill="rgb(218,87,25)" fg:x="3449" fg:w="1"/><text x="36.3841%" y="799.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (1 samples, 0.01%)</title><rect x="36.1341%" y="773" width="0.0105%" height="15" fill="rgb(234,179,48)" fg:x="3449" fg:w="1"/><text x="36.3841%" y="783.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="36.1446%" y="885" width="0.0105%" height="15" fill="rgb(248,90,0)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="895.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="36.1446%" y="869" width="0.0105%" height="15" fill="rgb(207,228,37)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="879.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="36.1446%" y="853" width="0.0105%" height="15" fill="rgb(235,214,15)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="863.50"></text></g><g><title>game::inspect (1 samples, 0.01%)</title><rect x="36.1446%" y="837" width="0.0105%" height="15" fill="rgb(210,144,39)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="847.50"></text></g><g><title>bevy_input::input::Input&lt;T&gt;::just_pressed (1 samples, 0.01%)</title><rect x="36.1446%" y="821" width="0.0105%" height="15" fill="rgb(222,67,41)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="831.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1 samples, 0.01%)</title><rect x="36.1446%" y="805" width="0.0105%" height="15" fill="rgb(205,35,37)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="815.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1 samples, 0.01%)</title><rect x="36.1446%" y="789" width="0.0105%" height="15" fill="rgb(216,125,40)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="36.1446%" y="773" width="0.0105%" height="15" fill="rgb(228,227,20)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="36.1446%" y="757" width="0.0105%" height="15" fill="rgb(242,173,45)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="36.1446%" y="741" width="0.0105%" height="15" fill="rgb(215,79,24)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="751.50"></text></g><g><title>&lt;bevy_input::keyboard::KeyCode as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="36.1446%" y="725" width="0.0105%" height="15" fill="rgb(238,164,38)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (1 samples, 0.01%)</title><rect x="36.1446%" y="709" width="0.0105%" height="15" fill="rgb(245,196,38)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="719.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u32 (1 samples, 0.01%)</title><rect x="36.1446%" y="693" width="0.0105%" height="15" fill="rgb(231,217,29)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="703.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="36.1446%" y="677" width="0.0105%" height="15" fill="rgb(245,6,4)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="687.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="36.1446%" y="661" width="0.0105%" height="15" fill="rgb(214,76,49)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="671.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="36.1446%" y="645" width="0.0105%" height="15" fill="rgb(205,96,12)" fg:x="3450" fg:w="1"/><text x="36.3946%" y="655.50"></text></g><g><title>bevy_ecs::world::World::increment_change_tick (1 samples, 0.01%)</title><rect x="36.1551%" y="885" width="0.0105%" height="15" fill="rgb(243,131,4)" fg:x="3451" fg:w="1"/><text x="36.4051%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicU32::fetch_add (1 samples, 0.01%)</title><rect x="36.1551%" y="869" width="0.0105%" height="15" fill="rgb(214,114,4)" fg:x="3451" fg:w="1"/><text x="36.4051%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="36.1551%" y="853" width="0.0105%" height="15" fill="rgb(234,215,15)" fg:x="3451" fg:w="1"/><text x="36.4051%" y="863.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (129 samples, 1.35%)</title><rect x="34.8350%" y="901" width="1.3515%" height="15" fill="rgb(250,216,45)" fg:x="3325" fg:w="129"/><text x="35.0850%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_mut (2 samples, 0.02%)</title><rect x="36.1655%" y="885" width="0.0210%" height="15" fill="rgb(236,128,4)" fg:x="3452" fg:w="2"/><text x="36.4155%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="36.1865%" y="885" width="0.0105%" height="15" fill="rgb(234,50,33)" fg:x="3454" fg:w="1"/><text x="36.4365%" y="895.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="36.1970%" y="853" width="0.0105%" height="15" fill="rgb(253,131,37)" fg:x="3455" fg:w="1"/><text x="36.4470%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="36.1970%" y="837" width="0.0105%" height="15" fill="rgb(218,55,27)" fg:x="3455" fg:w="1"/><text x="36.4470%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="36.1970%" y="821" width="0.0105%" height="15" fill="rgb(241,220,28)" fg:x="3455" fg:w="1"/><text x="36.4470%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="36.1970%" y="805" width="0.0105%" height="15" fill="rgb(241,90,48)" fg:x="3455" fg:w="1"/><text x="36.4470%" y="815.50"></text></g><g><title>event_listener::Inner::lock (1 samples, 0.01%)</title><rect x="36.2074%" y="853" width="0.0105%" height="15" fill="rgb(216,43,37)" fg:x="3456" fg:w="1"/><text x="36.4574%" y="863.50"></text></g><g><title>event_listener::Spinlock&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="36.2074%" y="837" width="0.0105%" height="15" fill="rgb(207,173,9)" fg:x="3456" fg:w="1"/><text x="36.4574%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (1 samples, 0.01%)</title><rect x="36.2074%" y="821" width="0.0105%" height="15" fill="rgb(240,126,30)" fg:x="3456" fg:w="1"/><text x="36.4574%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.01%)</title><rect x="36.2074%" y="805" width="0.0105%" height="15" fill="rgb(228,178,53)" fg:x="3456" fg:w="1"/><text x="36.4574%" y="815.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="36.1970%" y="869" width="0.0314%" height="15" fill="rgb(217,33,4)" fg:x="3455" fg:w="3"/><text x="36.4470%" y="879.50"></text></g><g><title>event_listener::List::remove (1 samples, 0.01%)</title><rect x="36.2179%" y="853" width="0.0105%" height="15" fill="rgb(206,124,34)" fg:x="3457" fg:w="1"/><text x="36.4679%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="36.2389%" y="821" width="0.0105%" height="15" fill="rgb(208,122,53)" fg:x="3459" fg:w="1"/><text x="36.4889%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="36.2389%" y="805" width="0.0105%" height="15" fill="rgb(215,202,26)" fg:x="3459" fg:w="1"/><text x="36.4889%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="36.2389%" y="789" width="0.0105%" height="15" fill="rgb(232,198,31)" fg:x="3459" fg:w="1"/><text x="36.4889%" y="799.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="36.2389%" y="853" width="0.0210%" height="15" fill="rgb(222,23,35)" fg:x="3459" fg:w="2"/><text x="36.4889%" y="863.50"></text></g><g><title>concurrent_queue::single::Single&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="36.2389%" y="837" width="0.0210%" height="15" fill="rgb(242,27,53)" fg:x="3459" fg:w="2"/><text x="36.4889%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_and (1 samples, 0.01%)</title><rect x="36.2493%" y="821" width="0.0105%" height="15" fill="rgb(210,216,42)" fg:x="3460" fg:w="1"/><text x="36.4993%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_and (1 samples, 0.01%)</title><rect x="36.2493%" y="805" width="0.0105%" height="15" fill="rgb(234,39,38)" fg:x="3460" fg:w="1"/><text x="36.4993%" y="815.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (4 samples, 0.04%)</title><rect x="36.2284%" y="869" width="0.0419%" height="15" fill="rgb(235,126,54)" fg:x="3458" fg:w="4"/><text x="36.4784%" y="879.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="36.2598%" y="853" width="0.0105%" height="15" fill="rgb(235,150,33)" fg:x="3461" fg:w="1"/><text x="36.5098%" y="863.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="36.2598%" y="837" width="0.0105%" height="15" fill="rgb(249,49,53)" fg:x="3461" fg:w="1"/><text x="36.5098%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="36.2598%" y="821" width="0.0105%" height="15" fill="rgb(238,60,50)" fg:x="3461" fg:w="1"/><text x="36.5098%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="36.2598%" y="805" width="0.0105%" height="15" fill="rgb(210,5,2)" fg:x="3461" fg:w="1"/><text x="36.5098%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="36.2598%" y="789" width="0.0105%" height="15" fill="rgb(214,207,24)" fg:x="3461" fg:w="1"/><text x="36.5098%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (1 samples, 0.01%)</title><rect x="36.2703%" y="869" width="0.0105%" height="15" fill="rgb(228,173,2)" fg:x="3462" fg:w="1"/><text x="36.5203%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (1 samples, 0.01%)</title><rect x="36.2808%" y="869" width="0.0105%" height="15" fill="rgb(244,26,8)" fg:x="3463" fg:w="1"/><text x="36.5308%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;event_listener::Inner&gt;&gt; (1 samples, 0.01%)</title><rect x="36.2808%" y="853" width="0.0105%" height="15" fill="rgb(249,153,35)" fg:x="3463" fg:w="1"/><text x="36.5308%" y="863.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="36.2808%" y="837" width="0.0105%" height="15" fill="rgb(221,215,40)" fg:x="3463" fg:w="1"/><text x="36.5308%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="36.2808%" y="821" width="0.0105%" height="15" fill="rgb(238,106,35)" fg:x="3463" fg:w="1"/><text x="36.5308%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="36.2808%" y="805" width="0.0105%" height="15" fill="rgb(207,195,21)" fg:x="3463" fg:w="1"/><text x="36.5308%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="36.2913%" y="853" width="0.0314%" height="15" fill="rgb(205,43,29)" fg:x="3464" fg:w="3"/><text x="36.5413%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.03%)</title><rect x="36.2913%" y="837" width="0.0314%" height="15" fill="rgb(236,35,21)" fg:x="3464" fg:w="3"/><text x="36.5413%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.03%)</title><rect x="36.2913%" y="821" width="0.0314%" height="15" fill="rgb(244,74,8)" fg:x="3464" fg:w="3"/><text x="36.5413%" y="831.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::recv::{{closure}} (13 samples, 0.14%)</title><rect x="36.1970%" y="885" width="0.1362%" height="15" fill="rgb(241,229,7)" fg:x="3455" fg:w="13"/><text x="36.4470%" y="895.50"></text></g><g><title>event_listener::Event::listen (4 samples, 0.04%)</title><rect x="36.2913%" y="869" width="0.0419%" height="15" fill="rgb(212,223,25)" fg:x="3464" fg:w="4"/><text x="36.5413%" y="879.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="36.3227%" y="853" width="0.0105%" height="15" fill="rgb(234,58,53)" fg:x="3467" fg:w="1"/><text x="36.5727%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="36.3227%" y="837" width="0.0105%" height="15" fill="rgb(244,36,1)" fg:x="3467" fg:w="1"/><text x="36.5727%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="36.3227%" y="821" width="0.0105%" height="15" fill="rgb(222,40,54)" fg:x="3467" fg:w="1"/><text x="36.5727%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="36.3227%" y="805" width="0.0105%" height="15" fill="rgb(210,207,39)" fg:x="3467" fg:w="1"/><text x="36.5727%" y="815.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="36.3332%" y="821" width="0.0105%" height="15" fill="rgb(234,52,14)" fg:x="3468" fg:w="1"/><text x="36.5832%" y="831.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="36.3332%" y="805" width="0.0105%" height="15" fill="rgb(239,108,46)" fg:x="3468" fg:w="1"/><text x="36.5832%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="36.3332%" y="789" width="0.0105%" height="15" fill="rgb(252,223,5)" fg:x="3468" fg:w="1"/><text x="36.5832%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="36.3332%" y="773" width="0.0105%" height="15" fill="rgb(227,181,11)" fg:x="3468" fg:w="1"/><text x="36.5832%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="36.3332%" y="757" width="0.0105%" height="15" fill="rgb(248,126,40)" fg:x="3468" fg:w="1"/><text x="36.5832%" y="767.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="36.3332%" y="741" width="0.0105%" height="15" fill="rgb(243,1,18)" fg:x="3468" fg:w="1"/><text x="36.5832%" y="751.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (2 samples, 0.02%)</title><rect x="36.3332%" y="853" width="0.0210%" height="15" fill="rgb(214,145,23)" fg:x="3468" fg:w="2"/><text x="36.5832%" y="863.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (2 samples, 0.02%)</title><rect x="36.3332%" y="837" width="0.0210%" height="15" fill="rgb(241,218,11)" fg:x="3468" fg:w="2"/><text x="36.5832%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="36.3436%" y="821" width="0.0105%" height="15" fill="rgb(214,219,24)" fg:x="3469" fg:w="1"/><text x="36.5936%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="36.3436%" y="805" width="0.0105%" height="15" fill="rgb(235,32,7)" fg:x="3469" fg:w="1"/><text x="36.5936%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_and_swap (1 samples, 0.01%)</title><rect x="36.3541%" y="773" width="0.0105%" height="15" fill="rgb(227,121,28)" fg:x="3470" fg:w="1"/><text x="36.6041%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.01%)</title><rect x="36.3541%" y="757" width="0.0105%" height="15" fill="rgb(216,129,49)" fg:x="3470" fg:w="1"/><text x="36.6041%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="36.3541%" y="741" width="0.0105%" height="15" fill="rgb(207,194,50)" fg:x="3470" fg:w="1"/><text x="36.6041%" y="751.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.03%)</title><rect x="36.3646%" y="773" width="0.0314%" height="15" fill="rgb(207,4,18)" fg:x="3471" fg:w="3"/><text x="36.6146%" y="783.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (3 samples, 0.03%)</title><rect x="36.3646%" y="757" width="0.0314%" height="15" fill="rgb(213,50,30)" fg:x="3471" fg:w="3"/><text x="36.6146%" y="767.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (3 samples, 0.03%)</title><rect x="36.3646%" y="741" width="0.0314%" height="15" fill="rgb(208,77,22)" fg:x="3471" fg:w="3"/><text x="36.6146%" y="751.50"></text></g><g><title>parking::Unparker::unpark (3 samples, 0.03%)</title><rect x="36.3646%" y="725" width="0.0314%" height="15" fill="rgb(244,204,34)" fg:x="3471" fg:w="3"/><text x="36.6146%" y="735.50"></text></g><g><title>parking::Inner::unpark (2 samples, 0.02%)</title><rect x="36.3751%" y="709" width="0.0210%" height="15" fill="rgb(230,20,17)" fg:x="3472" fg:w="2"/><text x="36.6251%" y="719.50"></text></g><g><title>__pthread_cond_signal (2 samples, 0.02%)</title><rect x="36.3751%" y="693" width="0.0210%" height="15" fill="rgb(237,83,15)" fg:x="3472" fg:w="2"/><text x="36.6251%" y="703.50"></text></g><g><title>async_executor::State::notify (5 samples, 0.05%)</title><rect x="36.3541%" y="789" width="0.0524%" height="15" fill="rgb(221,109,25)" fg:x="3470" fg:w="5"/><text x="36.6041%" y="799.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="36.3960%" y="773" width="0.0105%" height="15" fill="rgb(205,194,52)" fg:x="3474" fg:w="1"/><text x="36.6460%" y="783.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="36.3960%" y="757" width="0.0105%" height="15" fill="rgb(244,173,54)" fg:x="3474" fg:w="1"/><text x="36.6460%" y="767.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="36.3960%" y="741" width="0.0105%" height="15" fill="rgb(227,181,18)" fg:x="3474" fg:w="1"/><text x="36.6460%" y="751.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="36.3960%" y="725" width="0.0105%" height="15" fill="rgb(238,36,30)" fg:x="3474" fg:w="1"/><text x="36.6460%" y="735.50"></text></g><g><title>event_listener::List::notify (6 samples, 0.06%)</title><rect x="36.3541%" y="837" width="0.0629%" height="15" fill="rgb(254,85,0)" fg:x="3470" fg:w="6"/><text x="36.6041%" y="847.50"></text></g><g><title>core::task::wake::Waker::wake (6 samples, 0.06%)</title><rect x="36.3541%" y="821" width="0.0629%" height="15" fill="rgb(247,63,33)" fg:x="3470" fg:w="6"/><text x="36.6041%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (6 samples, 0.06%)</title><rect x="36.3541%" y="805" width="0.0629%" height="15" fill="rgb(220,7,54)" fg:x="3470" fg:w="6"/><text x="36.6041%" y="815.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="36.4065%" y="789" width="0.0105%" height="15" fill="rgb(238,227,21)" fg:x="3475" fg:w="1"/><text x="36.6565%" y="799.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="36.4065%" y="773" width="0.0105%" height="15" fill="rgb(237,29,31)" fg:x="3475" fg:w="1"/><text x="36.6565%" y="783.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="36.4065%" y="757" width="0.0105%" height="15" fill="rgb(211,21,50)" fg:x="3475" fg:w="1"/><text x="36.6565%" y="767.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="36.4065%" y="741" width="0.0105%" height="15" fill="rgb(239,119,2)" fg:x="3475" fg:w="1"/><text x="36.6565%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="36.4065%" y="725" width="0.0105%" height="15" fill="rgb(250,2,39)" fg:x="3475" fg:w="1"/><text x="36.6565%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="36.4065%" y="709" width="0.0105%" height="15" fill="rgb(244,46,53)" fg:x="3475" fg:w="1"/><text x="36.6565%" y="719.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (10 samples, 0.10%)</title><rect x="36.3332%" y="869" width="0.1048%" height="15" fill="rgb(209,21,19)" fg:x="3468" fg:w="10"/><text x="36.5832%" y="879.50"></text></g><g><title>event_listener::Event::notify (8 samples, 0.08%)</title><rect x="36.3541%" y="853" width="0.0838%" height="15" fill="rgb(236,145,4)" fg:x="3470" fg:w="8"/><text x="36.6041%" y="863.50"></text></g><g><title>event_listener::full_fence (2 samples, 0.02%)</title><rect x="36.4170%" y="837" width="0.0210%" height="15" fill="rgb(220,133,36)" fg:x="3476" fg:w="2"/><text x="36.6670%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (2 samples, 0.02%)</title><rect x="36.4170%" y="821" width="0.0210%" height="15" fill="rgb(244,18,3)" fg:x="3476" fg:w="2"/><text x="36.6670%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (2 samples, 0.02%)</title><rect x="36.4170%" y="805" width="0.0210%" height="15" fill="rgb(232,171,48)" fg:x="3476" fg:w="2"/><text x="36.6670%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="36.4170%" y="789" width="0.0210%" height="15" fill="rgb(223,223,53)" fg:x="3476" fg:w="2"/><text x="36.6670%" y="799.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (25 samples, 0.26%)</title><rect x="36.1865%" y="901" width="0.2619%" height="15" fill="rgb(246,92,13)" fg:x="3454" fg:w="25"/><text x="36.4365%" y="911.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::send::{{closure}} (11 samples, 0.12%)</title><rect x="36.3332%" y="885" width="0.1152%" height="15" fill="rgb(229,171,10)" fg:x="3468" fg:w="11"/><text x="36.5832%" y="895.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="36.4379%" y="869" width="0.0105%" height="15" fill="rgb(213,131,26)" fg:x="3478" fg:w="1"/><text x="36.6879%" y="879.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="36.4379%" y="853" width="0.0105%" height="15" fill="rgb(242,87,54)" fg:x="3478" fg:w="1"/><text x="36.6879%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="36.4379%" y="837" width="0.0105%" height="15" fill="rgb(237,21,35)" fg:x="3478" fg:w="1"/><text x="36.6879%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="36.4379%" y="821" width="0.0105%" height="15" fill="rgb(253,13,47)" fg:x="3478" fg:w="1"/><text x="36.6879%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="36.4379%" y="805" width="0.0105%" height="15" fill="rgb(215,122,49)" fg:x="3478" fg:w="1"/><text x="36.6879%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Receiver&lt;()&gt;&gt; (3 samples, 0.03%)</title><rect x="36.4484%" y="901" width="0.0314%" height="15" fill="rgb(209,179,30)" fg:x="3479" fg:w="3"/><text x="36.6984%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;()&gt;&gt;&gt; (3 samples, 0.03%)</title><rect x="36.4484%" y="885" width="0.0314%" height="15" fill="rgb(235,100,24)" fg:x="3479" fg:w="3"/><text x="36.6984%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="36.4484%" y="869" width="0.0314%" height="15" fill="rgb(209,67,24)" fg:x="3479" fg:w="3"/><text x="36.6984%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (3 samples, 0.03%)</title><rect x="36.4484%" y="853" width="0.0314%" height="15" fill="rgb(206,74,32)" fg:x="3479" fg:w="3"/><text x="36.6984%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (3 samples, 0.03%)</title><rect x="36.4484%" y="837" width="0.0314%" height="15" fill="rgb(212,45,25)" fg:x="3479" fg:w="3"/><text x="36.6984%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (205 samples, 2.15%)</title><rect x="34.3426%" y="933" width="2.1477%" height="15" fill="rgb(239,26,3)" fg:x="3278" fg:w="205"/><text x="34.5926%" y="943.50">&lt;..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (159 samples, 1.67%)</title><rect x="34.8245%" y="917" width="1.6658%" height="15" fill="rgb(218,36,15)" fg:x="3324" fg:w="159"/><text x="35.0745%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Sender&lt;usize&gt;&gt; (1 samples, 0.01%)</title><rect x="36.4798%" y="901" width="0.0105%" height="15" fill="rgb(206,108,24)" fg:x="3482" fg:w="1"/><text x="36.7298%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;usize&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="36.4798%" y="885" width="0.0105%" height="15" fill="rgb(234,204,42)" fg:x="3482" fg:w="1"/><text x="36.7298%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="36.4798%" y="869" width="0.0105%" height="15" fill="rgb(229,2,11)" fg:x="3482" fg:w="1"/><text x="36.7298%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="36.4798%" y="853" width="0.0105%" height="15" fill="rgb(221,20,48)" fg:x="3482" fg:w="1"/><text x="36.7298%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="36.4798%" y="837" width="0.0105%" height="15" fill="rgb(244,164,10)" fg:x="3482" fg:w="1"/><text x="36.7298%" y="847.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="36.4903%" y="933" width="0.0105%" height="15" fill="rgb(243,229,2)" fg:x="3483" fg:w="1"/><text x="36.7403%" y="943.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="36.5008%" y="885" width="0.0210%" height="15" fill="rgb(232,131,37)" fg:x="3484" fg:w="2"/><text x="36.7508%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (2 samples, 0.02%)</title><rect x="36.5008%" y="869" width="0.0210%" height="15" fill="rgb(217,156,11)" fg:x="3484" fg:w="2"/><text x="36.7508%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (2 samples, 0.02%)</title><rect x="36.5008%" y="853" width="0.0210%" height="15" fill="rgb(239,99,48)" fg:x="3484" fg:w="2"/><text x="36.7508%" y="863.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="36.5008%" y="837" width="0.0210%" height="15" fill="rgb(231,209,9)" fg:x="3484" fg:w="2"/><text x="36.7508%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (2 samples, 0.02%)</title><rect x="36.5008%" y="821" width="0.0210%" height="15" fill="rgb(254,97,27)" fg:x="3484" fg:w="2"/><text x="36.7508%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="36.5008%" y="805" width="0.0210%" height="15" fill="rgb(223,151,38)" fg:x="3484" fg:w="2"/><text x="36.7508%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="36.5008%" y="789" width="0.0210%" height="15" fill="rgb(219,206,35)" fg:x="3484" fg:w="2"/><text x="36.7508%" y="799.50"></text></g><g><title>&lt;async_executor::CallOnDrop&lt;F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="36.5008%" y="917" width="0.0314%" height="15" fill="rgb(216,130,31)" fg:x="3484" fg:w="3"/><text x="36.7508%" y="927.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}}::{{closure}} (3 samples, 0.03%)</title><rect x="36.5008%" y="901" width="0.0314%" height="15" fill="rgb(251,97,34)" fg:x="3484" fg:w="3"/><text x="36.7508%" y="911.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="36.5217%" y="885" width="0.0105%" height="15" fill="rgb(246,159,47)" fg:x="3486" fg:w="1"/><text x="36.7717%" y="895.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="36.5217%" y="869" width="0.0105%" height="15" fill="rgb(232,87,10)" fg:x="3486" fg:w="1"/><text x="36.7717%" y="879.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="36.5217%" y="853" width="0.0105%" height="15" fill="rgb(249,1,37)" fg:x="3486" fg:w="1"/><text x="36.7717%" y="863.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="36.5217%" y="837" width="0.0105%" height="15" fill="rgb(239,135,14)" fg:x="3486" fg:w="1"/><text x="36.7717%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (212 samples, 2.22%)</title><rect x="34.3321%" y="965" width="2.2211%" height="15" fill="rgb(253,116,46)" fg:x="3277" fg:w="212"/><text x="34.5821%" y="975.50">&lt;..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (212 samples, 2.22%)</title><rect x="34.3321%" y="949" width="2.2211%" height="15" fill="rgb(222,217,37)" fg:x="3277" fg:w="212"/><text x="34.5821%" y="959.50">a..</text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (5 samples, 0.05%)</title><rect x="36.5008%" y="933" width="0.0524%" height="15" fill="rgb(252,96,8)" fg:x="3484" fg:w="5"/><text x="36.7508%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt; (2 samples, 0.02%)</title><rect x="36.5322%" y="917" width="0.0210%" height="15" fill="rgb(254,103,41)" fg:x="3487" fg:w="2"/><text x="36.7822%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (2 samples, 0.02%)</title><rect x="36.5322%" y="901" width="0.0210%" height="15" fill="rgb(218,213,19)" fg:x="3487" fg:w="2"/><text x="36.7822%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="36.5322%" y="885" width="0.0210%" height="15" fill="rgb(253,95,21)" fg:x="3487" fg:w="2"/><text x="36.7822%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="36.5322%" y="869" width="0.0210%" height="15" fill="rgb(229,26,28)" fg:x="3487" fg:w="2"/><text x="36.7822%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="36.5322%" y="853" width="0.0210%" height="15" fill="rgb(230,129,16)" fg:x="3487" fg:w="2"/><text x="36.7822%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (2 samples, 0.02%)</title><rect x="36.5532%" y="965" width="0.0210%" height="15" fill="rgb(236,126,17)" fg:x="3489" fg:w="2"/><text x="36.8032%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="36.5532%" y="949" width="0.0210%" height="15" fill="rgb(209,33,33)" fg:x="3489" fg:w="2"/><text x="36.8032%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="36.5532%" y="933" width="0.0210%" height="15" fill="rgb(227,85,29)" fg:x="3489" fg:w="2"/><text x="36.8032%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (1 samples, 0.01%)</title><rect x="36.5741%" y="901" width="0.0105%" height="15" fill="rgb(241,53,46)" fg:x="3491" fg:w="1"/><text x="36.8241%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="36.5741%" y="885" width="0.0105%" height="15" fill="rgb(228,167,53)" fg:x="3491" fg:w="1"/><text x="36.8241%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="36.5741%" y="869" width="0.0105%" height="15" fill="rgb(238,195,45)" fg:x="3491" fg:w="1"/><text x="36.8241%" y="879.50"></text></g><g><title>async_executor::LocalExecutor::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="36.5846%" y="885" width="0.0105%" height="15" fill="rgb(252,124,45)" fg:x="3492" fg:w="1"/><text x="36.8346%" y="895.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="36.5846%" y="869" width="0.0105%" height="15" fill="rgb(251,38,35)" fg:x="3492" fg:w="1"/><text x="36.8346%" y="879.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="36.5846%" y="853" width="0.0105%" height="15" fill="rgb(227,33,2)" fg:x="3492" fg:w="1"/><text x="36.8346%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="36.5846%" y="837" width="0.0105%" height="15" fill="rgb(223,157,46)" fg:x="3492" fg:w="1"/><text x="36.8346%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="36.5846%" y="821" width="0.0105%" height="15" fill="rgb(222,78,41)" fg:x="3492" fg:w="1"/><text x="36.8346%" y="831.50"></text></g><g><title>async_task::utils::abort_on_panic (3 samples, 0.03%)</title><rect x="36.5741%" y="965" width="0.0314%" height="15" fill="rgb(248,176,11)" fg:x="3491" fg:w="3"/><text x="36.8241%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (3 samples, 0.03%)</title><rect x="36.5741%" y="949" width="0.0314%" height="15" fill="rgb(241,221,18)" fg:x="3491" fg:w="3"/><text x="36.8241%" y="959.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.03%)</title><rect x="36.5741%" y="933" width="0.0314%" height="15" fill="rgb(218,85,22)" fg:x="3491" fg:w="3"/><text x="36.8241%" y="943.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (3 samples, 0.03%)</title><rect x="36.5741%" y="917" width="0.0314%" height="15" fill="rgb(222,223,7)" fg:x="3491" fg:w="3"/><text x="36.8241%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (2 samples, 0.02%)</title><rect x="36.5846%" y="901" width="0.0210%" height="15" fill="rgb(254,59,39)" fg:x="3492" fg:w="2"/><text x="36.8346%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="36.5951%" y="885" width="0.0105%" height="15" fill="rgb(247,100,27)" fg:x="3493" fg:w="1"/><text x="36.8451%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="36.5951%" y="869" width="0.0105%" height="15" fill="rgb(237,207,10)" fg:x="3493" fg:w="1"/><text x="36.8451%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (221 samples, 2.32%)</title><rect x="34.3216%" y="981" width="2.3153%" height="15" fill="rgb(220,121,28)" fg:x="3276" fg:w="221"/><text x="34.5716%" y="991.50">a..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.03%)</title><rect x="36.6056%" y="965" width="0.0314%" height="15" fill="rgb(213,223,20)" fg:x="3494" fg:w="3"/><text x="36.8556%" y="975.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="36.6056%" y="949" width="0.0314%" height="15" fill="rgb(205,121,27)" fg:x="3494" fg:w="3"/><text x="36.8556%" y="959.50"></text></g><g><title>async_task::runnable::Runnable::run (1 samples, 0.01%)</title><rect x="36.6370%" y="981" width="0.0105%" height="15" fill="rgb(253,24,53)" fg:x="3497" fg:w="1"/><text x="36.8870%" y="991.50"></text></g><g><title>concurrent_queue::full_fence (98 samples, 1.03%)</title><rect x="36.8989%" y="949" width="1.0267%" height="15" fill="rgb(224,224,47)" fg:x="3522" fg:w="98"/><text x="37.1489%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (93 samples, 0.97%)</title><rect x="36.9513%" y="933" width="0.9743%" height="15" fill="rgb(250,125,36)" fg:x="3527" fg:w="93"/><text x="37.2013%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (93 samples, 0.97%)</title><rect x="36.9513%" y="917" width="0.9743%" height="15" fill="rgb(240,144,38)" fg:x="3527" fg:w="93"/><text x="37.2013%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (93 samples, 0.97%)</title><rect x="36.9513%" y="901" width="0.9743%" height="15" fill="rgb(250,15,50)" fg:x="3527" fg:w="93"/><text x="37.2013%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (4 samples, 0.04%)</title><rect x="37.9256%" y="949" width="0.0419%" height="15" fill="rgb(210,24,26)" fg:x="3620" fg:w="4"/><text x="38.1756%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.04%)</title><rect x="37.9256%" y="933" width="0.0419%" height="15" fill="rgb(234,53,53)" fg:x="3620" fg:w="4"/><text x="38.1756%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="37.9675%" y="949" width="0.0210%" height="15" fill="rgb(208,108,28)" fg:x="3624" fg:w="2"/><text x="38.2175%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="37.9675%" y="933" width="0.0210%" height="15" fill="rgb(227,143,7)" fg:x="3624" fg:w="2"/><text x="38.2175%" y="943.50"></text></g><g><title>async_executor::Executor::try_tick (356 samples, 3.73%)</title><rect x="34.2693%" y="997" width="3.7297%" height="15" fill="rgb(238,189,38)" fg:x="3271" fg:w="356"/><text x="34.5193%" y="1007.50">asyn..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (129 samples, 1.35%)</title><rect x="36.6475%" y="981" width="1.3515%" height="15" fill="rgb(222,69,15)" fg:x="3498" fg:w="129"/><text x="36.8975%" y="991.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (126 samples, 1.32%)</title><rect x="36.6789%" y="965" width="1.3201%" height="15" fill="rgb(213,169,7)" fg:x="3501" fg:w="126"/><text x="36.9289%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="37.9885%" y="949" width="0.0105%" height="15" fill="rgb(251,219,4)" fg:x="3626" fg:w="1"/><text x="38.2385%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="37.9885%" y="933" width="0.0105%" height="15" fill="rgb(241,55,40)" fg:x="3626" fg:w="1"/><text x="38.2385%" y="943.50"></text></g><g><title>async_executor::LocalExecutor::spawn (1 samples, 0.01%)</title><rect x="37.9990%" y="997" width="0.0105%" height="15" fill="rgb(243,57,30)" fg:x="3627" fg:w="1"/><text x="38.2490%" y="1007.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (1 samples, 0.01%)</title><rect x="37.9990%" y="981" width="0.0105%" height="15" fill="rgb(234,50,30)" fg:x="3627" fg:w="1"/><text x="38.2490%" y="991.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="37.9990%" y="965" width="0.0105%" height="15" fill="rgb(239,23,42)" fg:x="3627" fg:w="1"/><text x="38.2490%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="37.9990%" y="949" width="0.0105%" height="15" fill="rgb(217,38,19)" fg:x="3627" fg:w="1"/><text x="38.2490%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="37.9990%" y="933" width="0.0105%" height="15" fill="rgb(215,179,16)" fg:x="3627" fg:w="1"/><text x="38.2490%" y="943.50"></text></g><g><title>async_executor::State::notify (3 samples, 0.03%)</title><rect x="38.1037%" y="965" width="0.0314%" height="15" fill="rgb(254,21,37)" fg:x="3637" fg:w="3"/><text x="38.3537%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_and_swap (3 samples, 0.03%)</title><rect x="38.1037%" y="949" width="0.0314%" height="15" fill="rgb(219,207,48)" fg:x="3637" fg:w="3"/><text x="38.3537%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (3 samples, 0.03%)</title><rect x="38.1037%" y="933" width="0.0314%" height="15" fill="rgb(227,225,41)" fg:x="3637" fg:w="3"/><text x="38.3537%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.03%)</title><rect x="38.1037%" y="917" width="0.0314%" height="15" fill="rgb(223,130,1)" fg:x="3637" fg:w="3"/><text x="38.3537%" y="927.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.01%)</title><rect x="38.1666%" y="821" width="0.0105%" height="15" fill="rgb(249,54,42)" fg:x="3643" fg:w="1"/><text x="38.4166%" y="831.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (1 samples, 0.01%)</title><rect x="38.1666%" y="805" width="0.0105%" height="15" fill="rgb(248,69,25)" fg:x="3643" fg:w="1"/><text x="38.4166%" y="815.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="38.1666%" y="789" width="0.0105%" height="15" fill="rgb(234,21,32)" fg:x="3643" fg:w="1"/><text x="38.4166%" y="799.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="38.1666%" y="773" width="0.0105%" height="15" fill="rgb(252,136,6)" fg:x="3643" fg:w="1"/><text x="38.4166%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="38.1666%" y="757" width="0.0105%" height="15" fill="rgb(245,87,12)" fg:x="3643" fg:w="1"/><text x="38.4166%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="38.1666%" y="741" width="0.0105%" height="15" fill="rgb(208,12,15)" fg:x="3643" fg:w="1"/><text x="38.4166%" y="751.50"></text></g><g><title>async_task::header::Header::register (3 samples, 0.03%)</title><rect x="38.1666%" y="837" width="0.0314%" height="15" fill="rgb(250,98,2)" fg:x="3643" fg:w="3"/><text x="38.4166%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="38.1771%" y="821" width="0.0210%" height="15" fill="rgb(205,213,15)" fg:x="3644" fg:w="2"/><text x="38.4271%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="38.1771%" y="805" width="0.0210%" height="15" fill="rgb(248,192,44)" fg:x="3644" fg:w="2"/><text x="38.4271%" y="815.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.06%)</title><rect x="38.1666%" y="869" width="0.0629%" height="15" fill="rgb(221,89,17)" fg:x="3643" fg:w="6"/><text x="38.4166%" y="879.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (6 samples, 0.06%)</title><rect x="38.1666%" y="853" width="0.0629%" height="15" fill="rgb(209,55,3)" fg:x="3643" fg:w="6"/><text x="38.4166%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (3 samples, 0.03%)</title><rect x="38.1980%" y="837" width="0.0314%" height="15" fill="rgb(247,23,45)" fg:x="3646" fg:w="3"/><text x="38.4480%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (3 samples, 0.03%)</title><rect x="38.1980%" y="821" width="0.0314%" height="15" fill="rgb(235,152,23)" fg:x="3646" fg:w="3"/><text x="38.4480%" y="831.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_canceled (1 samples, 0.01%)</title><rect x="38.2294%" y="837" width="0.0105%" height="15" fill="rgb(244,63,13)" fg:x="3649" fg:w="1"/><text x="38.4794%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="38.2294%" y="821" width="0.0105%" height="15" fill="rgb(227,30,37)" fg:x="3649" fg:w="1"/><text x="38.4794%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="38.2294%" y="805" width="0.0105%" height="15" fill="rgb(224,49,42)" fg:x="3649" fg:w="1"/><text x="38.4794%" y="815.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="38.2294%" y="853" width="0.0314%" height="15" fill="rgb(218,129,5)" fg:x="3649" fg:w="3"/><text x="38.4794%" y="863.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::set_detached (2 samples, 0.02%)</title><rect x="38.2399%" y="837" width="0.0210%" height="15" fill="rgb(240,199,54)" fg:x="3650" fg:w="2"/><text x="38.4899%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="38.2399%" y="821" width="0.0210%" height="15" fill="rgb(234,31,13)" fg:x="3650" fg:w="2"/><text x="38.4899%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="38.2399%" y="805" width="0.0210%" height="15" fill="rgb(219,73,54)" fg:x="3650" fg:w="2"/><text x="38.4899%" y="815.50"></text></g><g><title>__GI___libc_free (7 samples, 0.07%)</title><rect x="38.2609%" y="853" width="0.0733%" height="15" fill="rgb(251,162,10)" fg:x="3652" fg:w="7"/><text x="38.5109%" y="863.50"></text></g><g><title>_int_free (7 samples, 0.07%)</title><rect x="38.2609%" y="837" width="0.0733%" height="15" fill="rgb(240,138,47)" fg:x="3652" fg:w="7"/><text x="38.5109%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.20%)</title><rect x="38.1561%" y="949" width="0.1991%" height="15" fill="rgb(216,138,26)" fg:x="3642" fg:w="19"/><text x="38.4061%" y="959.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (19 samples, 0.20%)</title><rect x="38.1561%" y="933" width="0.1991%" height="15" fill="rgb(243,17,35)" fg:x="3642" fg:w="19"/><text x="38.4061%" y="943.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (19 samples, 0.20%)</title><rect x="38.1561%" y="917" width="0.1991%" height="15" fill="rgb(241,60,18)" fg:x="3642" fg:w="19"/><text x="38.4061%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (19 samples, 0.20%)</title><rect x="38.1561%" y="901" width="0.1991%" height="15" fill="rgb(234,2,44)" fg:x="3642" fg:w="19"/><text x="38.4061%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (19 samples, 0.20%)</title><rect x="38.1561%" y="885" width="0.1991%" height="15" fill="rgb(225,225,33)" fg:x="3642" fg:w="19"/><text x="38.4061%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (12 samples, 0.13%)</title><rect x="38.2294%" y="869" width="0.1257%" height="15" fill="rgb(234,50,31)" fg:x="3649" fg:w="12"/><text x="38.4794%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy (2 samples, 0.02%)</title><rect x="38.3342%" y="853" width="0.0210%" height="15" fill="rgb(249,6,25)" fg:x="3659" fg:w="2"/><text x="38.5842%" y="863.50"></text></g><g><title>async_task::utils::abort_on_panic (2 samples, 0.02%)</title><rect x="38.3342%" y="837" width="0.0210%" height="15" fill="rgb(241,5,17)" fg:x="3659" fg:w="2"/><text x="38.5842%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::destroy::{{closure}} (2 samples, 0.02%)</title><rect x="38.3342%" y="821" width="0.0210%" height="15" fill="rgb(207,116,10)" fg:x="3659" fg:w="2"/><text x="38.5842%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.02%)</title><rect x="38.3342%" y="805" width="0.0210%" height="15" fill="rgb(222,128,18)" fg:x="3659" fg:w="2"/><text x="38.5842%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::LocalExecutor::schedule::{{closure}}&gt; (2 samples, 0.02%)</title><rect x="38.3342%" y="789" width="0.0210%" height="15" fill="rgb(229,109,25)" fg:x="3659" fg:w="2"/><text x="38.5842%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::State&gt;&gt; (2 samples, 0.02%)</title><rect x="38.3342%" y="773" width="0.0210%" height="15" fill="rgb(222,102,25)" fg:x="3659" fg:w="2"/><text x="38.5842%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="38.3342%" y="757" width="0.0210%" height="15" fill="rgb(239,211,5)" fg:x="3659" fg:w="2"/><text x="38.5842%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (2 samples, 0.02%)</title><rect x="38.3342%" y="741" width="0.0210%" height="15" fill="rgb(223,136,26)" fg:x="3659" fg:w="2"/><text x="38.5842%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_sub (2 samples, 0.02%)</title><rect x="38.3342%" y="725" width="0.0210%" height="15" fill="rgb(227,30,15)" fg:x="3659" fg:w="2"/><text x="38.5842%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (22 samples, 0.23%)</title><rect x="38.1351%" y="965" width="0.2305%" height="15" fill="rgb(247,76,4)" fg:x="3640" fg:w="22"/><text x="38.3851%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="38.3552%" y="949" width="0.0105%" height="15" fill="rgb(245,38,48)" fg:x="3661" fg:w="1"/><text x="38.6052%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="38.3552%" y="933" width="0.0105%" height="15" fill="rgb(210,220,14)" fg:x="3661" fg:w="1"/><text x="38.6052%" y="943.50"></text></g><g><title>async_task::runnable::Runnable::run (1 samples, 0.01%)</title><rect x="38.3656%" y="965" width="0.0105%" height="15" fill="rgb(224,60,51)" fg:x="3662" fg:w="1"/><text x="38.6156%" y="975.50"></text></g><g><title>concurrent_queue::full_fence (127 samples, 1.33%)</title><rect x="38.6380%" y="933" width="1.3305%" height="15" fill="rgb(212,133,49)" fg:x="3688" fg:w="127"/><text x="38.8880%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (126 samples, 1.32%)</title><rect x="38.6485%" y="917" width="1.3201%" height="15" fill="rgb(231,39,22)" fg:x="3689" fg:w="126"/><text x="38.8985%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (126 samples, 1.32%)</title><rect x="38.6485%" y="901" width="1.3201%" height="15" fill="rgb(236,173,22)" fg:x="3689" fg:w="126"/><text x="38.8985%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (126 samples, 1.32%)</title><rect x="38.6485%" y="885" width="1.3201%" height="15" fill="rgb(210,70,0)" fg:x="3689" fg:w="126"/><text x="38.8985%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (6 samples, 0.06%)</title><rect x="39.9686%" y="933" width="0.0629%" height="15" fill="rgb(215,170,11)" fg:x="3815" fg:w="6"/><text x="40.2186%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.06%)</title><rect x="39.9686%" y="917" width="0.0629%" height="15" fill="rgb(220,154,28)" fg:x="3815" fg:w="6"/><text x="40.2186%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (2 samples, 0.02%)</title><rect x="40.0314%" y="933" width="0.0210%" height="15" fill="rgb(240,160,41)" fg:x="3821" fg:w="2"/><text x="40.2814%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (2 samples, 0.02%)</title><rect x="40.0314%" y="917" width="0.0210%" height="15" fill="rgb(243,215,41)" fg:x="3821" fg:w="2"/><text x="40.2814%" y="927.50"></text></g><g><title>async_executor::Executor::try_tick (192 samples, 2.01%)</title><rect x="38.0513%" y="981" width="2.0115%" height="15" fill="rgb(214,208,31)" fg:x="3632" fg:w="192"/><text x="38.3013%" y="991.50">a..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (161 samples, 1.69%)</title><rect x="38.3761%" y="965" width="1.6867%" height="15" fill="rgb(247,57,22)" fg:x="3663" fg:w="161"/><text x="38.6261%" y="975.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (156 samples, 1.63%)</title><rect x="38.4285%" y="949" width="1.6344%" height="15" fill="rgb(228,73,52)" fg:x="3668" fg:w="156"/><text x="38.6785%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="40.0524%" y="933" width="0.0105%" height="15" fill="rgb(252,60,9)" fg:x="3823" fg:w="1"/><text x="40.3024%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="40.0524%" y="917" width="0.0105%" height="15" fill="rgb(233,9,51)" fg:x="3823" fg:w="1"/><text x="40.3024%" y="927.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (203 samples, 2.13%)</title><rect x="38.0094%" y="997" width="2.1268%" height="15" fill="rgb(223,67,14)" fg:x="3628" fg:w="203"/><text x="38.2594%" y="1007.50">a..</text></g><g><title>async_executor::LocalExecutor::inner (7 samples, 0.07%)</title><rect x="40.0629%" y="981" width="0.0733%" height="15" fill="rgb(222,86,2)" fg:x="3824" fg:w="7"/><text x="40.3129%" y="991.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (7 samples, 0.07%)</title><rect x="40.0629%" y="965" width="0.0733%" height="15" fill="rgb(243,58,54)" fg:x="3824" fg:w="7"/><text x="40.3129%" y="975.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (7 samples, 0.07%)</title><rect x="40.0629%" y="949" width="0.0733%" height="15" fill="rgb(210,200,39)" fg:x="3824" fg:w="7"/><text x="40.3129%" y="959.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get (7 samples, 0.07%)</title><rect x="40.0629%" y="933" width="0.0733%" height="15" fill="rgb(238,135,9)" fg:x="3824" fg:w="7"/><text x="40.3129%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (7 samples, 0.07%)</title><rect x="40.0629%" y="917" width="0.0733%" height="15" fill="rgb(232,179,7)" fg:x="3824" fg:w="7"/><text x="40.3129%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;alloc::vec::Vec&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="40.1362%" y="997" width="0.0105%" height="15" fill="rgb(245,65,41)" fg:x="3831" fg:w="1"/><text x="40.3862%" y="1007.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="40.1362%" y="981" width="0.0105%" height="15" fill="rgb(227,43,8)" fg:x="3831" fg:w="1"/><text x="40.3862%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_tasks::task_pool::Scope&lt;()&gt;&gt; (1 samples, 0.01%)</title><rect x="40.1467%" y="997" width="0.0105%" height="15" fill="rgb(235,91,14)" fg:x="3832" fg:w="1"/><text x="40.3967%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="40.1467%" y="981" width="0.0105%" height="15" fill="rgb(235,219,31)" fg:x="3832" fg:w="1"/><text x="40.3967%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;async_task::task::Task&lt;()&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="40.1467%" y="965" width="0.0105%" height="15" fill="rgb(227,121,25)" fg:x="3832" fg:w="1"/><text x="40.3967%" y="975.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="40.1467%" y="949" width="0.0105%" height="15" fill="rgb(254,129,24)" fg:x="3832" fg:w="1"/><text x="40.3967%" y="959.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="40.1467%" y="933" width="0.0105%" height="15" fill="rgb(226,144,49)" fg:x="3832" fg:w="1"/><text x="40.3967%" y="943.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="40.1467%" y="917" width="0.0105%" height="15" fill="rgb(214,187,32)" fg:x="3832" fg:w="1"/><text x="40.3967%" y="927.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="40.1467%" y="901" width="0.0105%" height="15" fill="rgb(243,129,46)" fg:x="3832" fg:w="1"/><text x="40.3967%" y="911.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="40.1467%" y="885" width="0.0105%" height="15" fill="rgb(221,185,35)" fg:x="3832" fg:w="1"/><text x="40.3967%" y="895.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::expect (1 samples, 0.01%)</title><rect x="40.3248%" y="965" width="0.0105%" height="15" fill="rgb(205,0,32)" fg:x="3849" fg:w="1"/><text x="40.5748%" y="975.50"></text></g><g><title>__tls_get_addr (12 samples, 0.13%)</title><rect x="40.3981%" y="933" width="0.1257%" height="15" fill="rgb(229,179,12)" fg:x="3856" fg:w="12"/><text x="40.6481%" y="943.50"></text></g><g><title>__tls_get_addr@plt (5 samples, 0.05%)</title><rect x="40.5238%" y="933" width="0.0524%" height="15" fill="rgb(252,107,19)" fg:x="3868" fg:w="5"/><text x="40.7738%" y="943.50"></text></g><g><title>__tls_get_addr (10 samples, 0.10%)</title><rect x="40.6600%" y="885" width="0.1048%" height="15" fill="rgb(220,95,27)" fg:x="3881" fg:w="10"/><text x="40.9100%" y="895.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (43 samples, 0.45%)</title><rect x="40.3457%" y="949" width="0.4505%" height="15" fill="rgb(240,113,40)" fg:x="3851" fg:w="43"/><text x="40.5957%" y="959.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (21 samples, 0.22%)</title><rect x="40.5762%" y="933" width="0.2200%" height="15" fill="rgb(208,4,43)" fg:x="3873" fg:w="21"/><text x="40.8262%" y="943.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (16 samples, 0.17%)</title><rect x="40.6286%" y="917" width="0.1676%" height="15" fill="rgb(247,189,30)" fg:x="3878" fg:w="16"/><text x="40.8786%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (16 samples, 0.17%)</title><rect x="40.6286%" y="901" width="0.1676%" height="15" fill="rgb(231,157,17)" fg:x="3878" fg:w="16"/><text x="40.8786%" y="911.50"></text></g><g><title>__tls_get_addr@plt (3 samples, 0.03%)</title><rect x="40.7648%" y="885" width="0.0314%" height="15" fill="rgb(224,139,6)" fg:x="3891" fg:w="3"/><text x="41.0148%" y="895.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="40.8381%" y="933" width="0.0210%" height="15" fill="rgb(223,83,16)" fg:x="3898" fg:w="2"/><text x="41.0881%" y="943.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="40.8381%" y="917" width="0.0210%" height="15" fill="rgb(232,211,20)" fg:x="3898" fg:w="2"/><text x="41.0881%" y="927.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (2 samples, 0.02%)</title><rect x="40.8381%" y="901" width="0.0210%" height="15" fill="rgb(225,203,35)" fg:x="3898" fg:w="2"/><text x="41.0881%" y="911.50"></text></g><g><title>async_task::header::Header::register (1 samples, 0.01%)</title><rect x="40.8486%" y="885" width="0.0105%" height="15" fill="rgb(215,211,44)" fg:x="3899" fg:w="1"/><text x="41.0986%" y="895.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.01%)</title><rect x="40.8486%" y="869" width="0.0105%" height="15" fill="rgb(248,213,26)" fg:x="3899" fg:w="1"/><text x="41.0986%" y="879.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (1 samples, 0.01%)</title><rect x="40.8486%" y="853" width="0.0105%" height="15" fill="rgb(214,23,52)" fg:x="3899" fg:w="1"/><text x="41.0986%" y="863.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="40.8486%" y="837" width="0.0105%" height="15" fill="rgb(225,173,50)" fg:x="3899" fg:w="1"/><text x="41.0986%" y="847.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (1 samples, 0.01%)</title><rect x="40.8486%" y="821" width="0.0105%" height="15" fill="rgb(206,150,22)" fg:x="3899" fg:w="1"/><text x="41.0986%" y="831.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="40.8486%" y="805" width="0.0105%" height="15" fill="rgb(239,64,23)" fg:x="3899" fg:w="1"/><text x="41.0986%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="40.8486%" y="789" width="0.0105%" height="15" fill="rgb(242,50,38)" fg:x="3899" fg:w="1"/><text x="41.0986%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="40.8486%" y="773" width="0.0105%" height="15" fill="rgb(217,91,15)" fg:x="3899" fg:w="1"/><text x="41.0986%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="40.8486%" y="757" width="0.0105%" height="15" fill="rgb(230,172,6)" fg:x="3899" fg:w="1"/><text x="41.0986%" y="767.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (114 samples, 1.19%)</title><rect x="41.4667%" y="805" width="1.1943%" height="15" fill="rgb(221,98,26)" fg:x="3958" fg:w="114"/><text x="41.7167%" y="815.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (111 samples, 1.16%)</title><rect x="41.4982%" y="789" width="1.1629%" height="15" fill="rgb(227,210,45)" fg:x="3961" fg:w="111"/><text x="41.7482%" y="799.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (101 samples, 1.06%)</title><rect x="41.6029%" y="773" width="1.0581%" height="15" fill="rgb(206,8,30)" fg:x="3971" fg:w="101"/><text x="41.8529%" y="783.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (101 samples, 1.06%)</title><rect x="41.6029%" y="757" width="1.0581%" height="15" fill="rgb(241,219,17)" fg:x="3971" fg:w="101"/><text x="41.8529%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (101 samples, 1.06%)</title><rect x="41.6029%" y="741" width="1.0581%" height="15" fill="rgb(247,121,29)" fg:x="3971" fg:w="101"/><text x="41.8529%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_add (101 samples, 1.06%)</title><rect x="41.6029%" y="725" width="1.0581%" height="15" fill="rgb(219,169,49)" fg:x="3971" fg:w="101"/><text x="41.8529%" y="735.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (7 samples, 0.07%)</title><rect x="42.7658%" y="741" width="0.0733%" height="15" fill="rgb(253,49,49)" fg:x="4082" fg:w="7"/><text x="43.0158%" y="751.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (7 samples, 0.07%)</title><rect x="42.7658%" y="725" width="0.0733%" height="15" fill="rgb(217,178,3)" fg:x="4082" fg:w="7"/><text x="43.0158%" y="735.50"></text></g><g><title>async_task::utils::abort_on_panic (261 samples, 2.73%)</title><rect x="41.4667%" y="837" width="2.7344%" height="15" fill="rgb(234,73,37)" fg:x="3958" fg:w="261"/><text x="41.7167%" y="847.50">as..</text></g><g><title>async_task::header::Header::register::{{closure}} (261 samples, 2.73%)</title><rect x="41.4667%" y="821" width="2.7344%" height="15" fill="rgb(250,98,22)" fg:x="3958" fg:w="261"/><text x="41.7167%" y="831.50">as..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (147 samples, 1.54%)</title><rect x="42.6611%" y="805" width="1.5401%" height="15" fill="rgb(220,108,37)" fg:x="4072" fg:w="147"/><text x="42.9111%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (137 samples, 1.44%)</title><rect x="42.7658%" y="789" width="1.4353%" height="15" fill="rgb(225,168,10)" fg:x="4082" fg:w="137"/><text x="43.0158%" y="799.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (137 samples, 1.44%)</title><rect x="42.7658%" y="773" width="1.4353%" height="15" fill="rgb(247,215,21)" fg:x="4082" fg:w="137"/><text x="43.0158%" y="783.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (137 samples, 1.44%)</title><rect x="42.7658%" y="757" width="1.4353%" height="15" fill="rgb(253,189,31)" fg:x="4082" fg:w="137"/><text x="43.0158%" y="767.50"></text></g><g><title>core::mem::drop (130 samples, 1.36%)</title><rect x="42.8392%" y="741" width="1.3620%" height="15" fill="rgb(241,54,22)" fg:x="4089" fg:w="130"/><text x="43.0892%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (130 samples, 1.36%)</title><rect x="42.8392%" y="725" width="1.3620%" height="15" fill="rgb(211,87,4)" fg:x="4089" fg:w="130"/><text x="43.0892%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (130 samples, 1.36%)</title><rect x="42.8392%" y="709" width="1.3620%" height="15" fill="rgb(245,112,24)" fg:x="4089" fg:w="130"/><text x="43.0892%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (130 samples, 1.36%)</title><rect x="42.8392%" y="693" width="1.3620%" height="15" fill="rgb(235,190,41)" fg:x="4089" fg:w="130"/><text x="43.0892%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (130 samples, 1.36%)</title><rect x="42.8392%" y="677" width="1.3620%" height="15" fill="rgb(214,89,8)" fg:x="4089" fg:w="130"/><text x="43.0892%" y="687.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (5 samples, 0.05%)</title><rect x="44.2012%" y="837" width="0.0524%" height="15" fill="rgb(249,155,35)" fg:x="4219" fg:w="5"/><text x="44.4512%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (5 samples, 0.05%)</title><rect x="44.2012%" y="821" width="0.0524%" height="15" fill="rgb(249,88,26)" fg:x="4219" fg:w="5"/><text x="44.4512%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (229 samples, 2.40%)</title><rect x="44.2535%" y="837" width="2.3992%" height="15" fill="rgb(232,56,8)" fg:x="4224" fg:w="229"/><text x="44.5035%" y="847.50">co..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (229 samples, 2.40%)</title><rect x="44.2535%" y="821" width="2.3992%" height="15" fill="rgb(240,95,3)" fg:x="4224" fg:w="229"/><text x="44.5035%" y="831.50">co..</text></g><g><title>async_task::header::Header::register (530 samples, 5.55%)</title><rect x="41.1105%" y="853" width="5.5526%" height="15" fill="rgb(222,44,28)" fg:x="3924" fg:w="530"/><text x="41.3605%" y="863.50">async_t..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="46.6527%" y="837" width="0.0105%" height="15" fill="rgb(234,16,30)" fg:x="4453" fg:w="1"/><text x="46.9027%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="46.6527%" y="821" width="0.0105%" height="15" fill="rgb(223,26,17)" fg:x="4453" fg:w="1"/><text x="46.9027%" y="831.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (619 samples, 6.49%)</title><rect x="40.8591%" y="933" width="6.4851%" height="15" fill="rgb(239,187,47)" fg:x="3900" fg:w="619"/><text x="41.1091%" y="943.50">&lt;futures..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (611 samples, 6.40%)</title><rect x="40.9429%" y="917" width="6.4013%" height="15" fill="rgb(247,102,50)" fg:x="3908" fg:w="611"/><text x="41.1929%" y="927.50">&lt;core::p..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (611 samples, 6.40%)</title><rect x="40.9429%" y="901" width="6.4013%" height="15" fill="rgb(231,216,22)" fg:x="3908" fg:w="611"/><text x="41.1929%" y="911.50">&lt;&amp;mut F ..</text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (611 samples, 6.40%)</title><rect x="40.9429%" y="885" width="6.4013%" height="15" fill="rgb(216,201,26)" fg:x="3908" fg:w="611"/><text x="41.1929%" y="895.50">&lt;async_t..</text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (607 samples, 6.36%)</title><rect x="40.9848%" y="869" width="6.3594%" height="15" fill="rgb(214,186,23)" fg:x="3912" fg:w="607"/><text x="41.2348%" y="879.50">async_ta..</text></g><g><title>core::sync::atomic::AtomicUsize::load (65 samples, 0.68%)</title><rect x="46.6632%" y="853" width="0.6810%" height="15" fill="rgb(235,184,4)" fg:x="4454" fg:w="65"/><text x="46.9132%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (65 samples, 0.68%)</title><rect x="46.6632%" y="837" width="0.6810%" height="15" fill="rgb(244,46,17)" fg:x="4454" fg:w="65"/><text x="46.9132%" y="847.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (5 samples, 0.05%)</title><rect x="47.3442%" y="933" width="0.0524%" height="15" fill="rgb(248,74,46)" fg:x="4519" fg:w="5"/><text x="47.5942%" y="943.50"></text></g><g><title>core::cell::BorrowRefMut::new (5 samples, 0.05%)</title><rect x="47.3442%" y="917" width="0.0524%" height="15" fill="rgb(243,79,5)" fg:x="4519" fg:w="5"/><text x="47.5942%" y="927.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="47.3861%" y="901" width="0.0105%" height="15" fill="rgb(213,148,1)" fg:x="4523" fg:w="1"/><text x="47.6361%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="47.3861%" y="885" width="0.0105%" height="15" fill="rgb(221,30,0)" fg:x="4523" fg:w="1"/><text x="47.6361%" y="895.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="47.3861%" y="869" width="0.0105%" height="15" fill="rgb(207,85,29)" fg:x="4523" fg:w="1"/><text x="47.6361%" y="879.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="47.3861%" y="853" width="0.0105%" height="15" fill="rgb(239,31,46)" fg:x="4523" fg:w="1"/><text x="47.6361%" y="863.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (4 samples, 0.04%)</title><rect x="47.3965%" y="933" width="0.0419%" height="15" fill="rgb(219,6,1)" fg:x="4524" fg:w="4"/><text x="47.6465%" y="943.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (4 samples, 0.04%)</title><rect x="47.3965%" y="917" width="0.0419%" height="15" fill="rgb(229,90,29)" fg:x="4524" fg:w="4"/><text x="47.6465%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (4 samples, 0.04%)</title><rect x="47.4384%" y="933" width="0.0419%" height="15" fill="rgb(242,201,42)" fg:x="4528" fg:w="4"/><text x="47.6884%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (4 samples, 0.04%)</title><rect x="47.4384%" y="917" width="0.0419%" height="15" fill="rgb(243,80,54)" fg:x="4528" fg:w="4"/><text x="47.6884%" y="927.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="47.4384%" y="901" width="0.0419%" height="15" fill="rgb(223,166,15)" fg:x="4528" fg:w="4"/><text x="47.6884%" y="911.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (4 samples, 0.04%)</title><rect x="47.4384%" y="885" width="0.0419%" height="15" fill="rgb(238,78,27)" fg:x="4528" fg:w="4"/><text x="47.6884%" y="895.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (4 samples, 0.04%)</title><rect x="47.4384%" y="869" width="0.0419%" height="15" fill="rgb(235,28,43)" fg:x="4528" fg:w="4"/><text x="47.6884%" y="879.50"></text></g><g><title>core::mem::replace (4 samples, 0.04%)</title><rect x="47.4384%" y="853" width="0.0419%" height="15" fill="rgb(240,210,28)" fg:x="4528" fg:w="4"/><text x="47.6884%" y="863.50"></text></g><g><title>core::ptr::write (4 samples, 0.04%)</title><rect x="47.4384%" y="837" width="0.0419%" height="15" fill="rgb(253,6,46)" fg:x="4528" fg:w="4"/><text x="47.6884%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="47.4804%" y="901" width="0.0105%" height="15" fill="rgb(250,159,47)" fg:x="4532" fg:w="1"/><text x="47.7304%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="47.4804%" y="885" width="0.0105%" height="15" fill="rgb(216,139,2)" fg:x="4532" fg:w="1"/><text x="47.7304%" y="895.50"></text></g><g><title>__condvar_dec_grefs (1 samples, 0.01%)</title><rect x="47.4908%" y="837" width="0.0105%" height="15" fill="rgb(221,124,44)" fg:x="4533" fg:w="1"/><text x="47.7408%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (685 samples, 7.18%)</title><rect x="40.3353%" y="965" width="7.1765%" height="15" fill="rgb(205,37,22)" fg:x="3850" fg:w="685"/><text x="40.5853%" y="975.50">std::threa..</text></g><g><title>futures_lite::future::block_on::{{closure}} (641 samples, 6.72%)</title><rect x="40.7962%" y="949" width="6.7156%" height="15" fill="rgb(250,55,8)" fg:x="3894" fg:w="641"/><text x="41.0462%" y="959.50">futures_l..</text></g><g><title>parking::Parker::park (3 samples, 0.03%)</title><rect x="47.4804%" y="933" width="0.0314%" height="15" fill="rgb(215,83,48)" fg:x="4532" fg:w="3"/><text x="47.7304%" y="943.50"></text></g><g><title>parking::Inner::park (3 samples, 0.03%)</title><rect x="47.4804%" y="917" width="0.0314%" height="15" fill="rgb(253,2,32)" fg:x="4532" fg:w="3"/><text x="47.7304%" y="927.50"></text></g><g><title>std::sync::condvar::Condvar::wait (2 samples, 0.02%)</title><rect x="47.4908%" y="901" width="0.0210%" height="15" fill="rgb(236,67,28)" fg:x="4533" fg:w="2"/><text x="47.7408%" y="911.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (2 samples, 0.02%)</title><rect x="47.4908%" y="885" width="0.0210%" height="15" fill="rgb(252,55,15)" fg:x="4533" fg:w="2"/><text x="47.7408%" y="895.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (2 samples, 0.02%)</title><rect x="47.4908%" y="869" width="0.0210%" height="15" fill="rgb(243,173,17)" fg:x="4533" fg:w="2"/><text x="47.7408%" y="879.50"></text></g><g><title>__pthread_cond_wait (2 samples, 0.02%)</title><rect x="47.4908%" y="853" width="0.0210%" height="15" fill="rgb(215,212,13)" fg:x="4533" fg:w="2"/><text x="47.7408%" y="863.50"></text></g><g><title>__futex_abstimed_wait_common64 (1 samples, 0.01%)</title><rect x="47.5013%" y="837" width="0.0105%" height="15" fill="rgb(253,176,6)" fg:x="4534" fg:w="1"/><text x="47.7513%" y="847.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1,322 samples, 13.85%)</title><rect x="33.7140%" y="1077" width="13.8502%" height="15" fill="rgb(236,105,26)" fg:x="3218" fg:w="1322"/><text x="33.9640%" y="1087.50">&lt;bevy_ecs::schedule::..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (1,322 samples, 13.85%)</title><rect x="33.7140%" y="1061" width="13.8502%" height="15" fill="rgb(239,226,32)" fg:x="3218" fg:w="1322"/><text x="33.9640%" y="1071.50">bevy_tasks::task_pool..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,322 samples, 13.85%)</title><rect x="33.7140%" y="1045" width="13.8502%" height="15" fill="rgb(236,104,51)" fg:x="3218" fg:w="1322"/><text x="33.9640%" y="1055.50">std::thread::local::L..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,322 samples, 13.85%)</title><rect x="33.7140%" y="1029" width="13.8502%" height="15" fill="rgb(220,172,33)" fg:x="3218" fg:w="1322"/><text x="33.9640%" y="1039.50">std::thread::local::L..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (1,320 samples, 13.83%)</title><rect x="33.7349%" y="1013" width="13.8292%" height="15" fill="rgb(224,182,25)" fg:x="3220" fg:w="1320"/><text x="33.9849%" y="1023.50">bevy_tasks::task_pool..</text></g><g><title>futures_lite::future::block_on (707 samples, 7.41%)</title><rect x="40.1572%" y="997" width="7.4070%" height="15" fill="rgb(236,184,24)" fg:x="3833" fg:w="707"/><text x="40.4072%" y="1007.50">futures_li..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (697 samples, 7.30%)</title><rect x="40.2619%" y="981" width="7.3023%" height="15" fill="rgb(241,221,14)" fg:x="3843" fg:w="697"/><text x="40.5119%" y="991.50">std::threa..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (5 samples, 0.05%)</title><rect x="47.5118%" y="965" width="0.0524%" height="15" fill="rgb(227,146,5)" fg:x="4535" fg:w="5"/><text x="47.7618%" y="975.50"></text></g><g><title>bevy_audio::audio_output::AudioOutput&lt;P&gt;::try_play_queued (1 samples, 0.01%)</title><rect x="47.5642%" y="1029" width="0.0105%" height="15" fill="rgb(214,15,23)" fg:x="4540" fg:w="1"/><text x="47.8142%" y="1039.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.01%)</title><rect x="47.5642%" y="1013" width="0.0105%" height="15" fill="rgb(233,157,31)" fg:x="4540" fg:w="1"/><text x="47.8142%" y="1023.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.01%)</title><rect x="47.5642%" y="997" width="0.0105%" height="15" fill="rgb(211,27,52)" fg:x="4540" fg:w="1"/><text x="47.8142%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="47.5642%" y="981" width="0.0105%" height="15" fill="rgb(212,223,15)" fg:x="4540" fg:w="1"/><text x="47.8142%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="47.5642%" y="965" width="0.0105%" height="15" fill="rgb(254,211,0)" fg:x="4540" fg:w="1"/><text x="47.8142%" y="975.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_non_send (1 samples, 0.01%)</title><rect x="47.5746%" y="1029" width="0.0105%" height="15" fill="rgb(205,43,38)" fg:x="4541" fg:w="1"/><text x="47.8246%" y="1039.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldBorrow&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="47.5746%" y="1013" width="0.0105%" height="15" fill="rgb(242,206,46)" fg:x="4541" fg:w="1"/><text x="47.8246%" y="1023.50"></text></g><g><title>bevy_ecs::world::world_cell::ArchetypeComponentAccess::read (1 samples, 0.01%)</title><rect x="47.5746%" y="997" width="0.0105%" height="15" fill="rgb(220,221,12)" fg:x="4541" fg:w="1"/><text x="47.8246%" y="1007.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource (1 samples, 0.01%)</title><rect x="47.5851%" y="1029" width="0.0105%" height="15" fill="rgb(217,156,35)" fg:x="4542" fg:w="1"/><text x="47.8351%" y="1039.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="47.5851%" y="1013" width="0.0105%" height="15" fill="rgb(207,181,49)" fg:x="4542" fg:w="1"/><text x="47.8351%" y="1023.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="47.5851%" y="997" width="0.0105%" height="15" fill="rgb(235,103,47)" fg:x="4542" fg:w="1"/><text x="47.8351%" y="1007.50"></text></g><g><title>bevy_audio::audio_output::play_queued_audio_system (4 samples, 0.04%)</title><rect x="47.5642%" y="1045" width="0.0419%" height="15" fill="rgb(222,63,28)" fg:x="4540" fg:w="4"/><text x="47.8142%" y="1055.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (1 samples, 0.01%)</title><rect x="47.5956%" y="1029" width="0.0105%" height="15" fill="rgb(244,137,21)" fg:x="4543" fg:w="1"/><text x="47.8456%" y="1039.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="47.5956%" y="1013" width="0.0105%" height="15" fill="rgb(228,35,27)" fg:x="4543" fg:w="1"/><text x="47.8456%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="47.5956%" y="997" width="0.0105%" height="15" fill="rgb(226,191,41)" fg:x="4543" fg:w="1"/><text x="47.8456%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="47.5956%" y="981" width="0.0105%" height="15" fill="rgb(210,154,3)" fg:x="4543" fg:w="1"/><text x="47.8456%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="47.5956%" y="965" width="0.0105%" height="15" fill="rgb(216,60,49)" fg:x="4543" fg:w="1"/><text x="47.8456%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="47.5956%" y="949" width="0.0105%" height="15" fill="rgb(226,17,20)" fg:x="4543" fg:w="1"/><text x="47.8456%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="47.5956%" y="933" width="0.0105%" height="15" fill="rgb(206,115,35)" fg:x="4543" fg:w="1"/><text x="47.8456%" y="943.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="47.5956%" y="917" width="0.0105%" height="15" fill="rgb(227,88,1)" fg:x="4543" fg:w="1"/><text x="47.8456%" y="927.50"></text></g><g><title>&lt;core::any::TypeId as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="47.5956%" y="901" width="0.0105%" height="15" fill="rgb(230,222,24)" fg:x="4543" fg:w="1"/><text x="47.8456%" y="911.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="47.6480%" y="677" width="0.0105%" height="15" fill="rgb(214,124,32)" fg:x="4548" fg:w="1"/><text x="47.8980%" y="687.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="47.6480%" y="661" width="0.0105%" height="15" fill="rgb(240,41,36)" fg:x="4548" fg:w="1"/><text x="47.8980%" y="671.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="47.6480%" y="645" width="0.0105%" height="15" fill="rgb(221,17,52)" fg:x="4548" fg:w="1"/><text x="47.8980%" y="655.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (11 samples, 0.12%)</title><rect x="47.6061%" y="1013" width="0.1152%" height="15" fill="rgb(252,70,16)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (11 samples, 0.12%)</title><rect x="47.6061%" y="997" width="0.1152%" height="15" fill="rgb(250,177,4)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (11 samples, 0.12%)</title><rect x="47.6061%" y="981" width="0.1152%" height="15" fill="rgb(240,188,47)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (11 samples, 0.12%)</title><rect x="47.6061%" y="965" width="0.1152%" height="15" fill="rgb(215,92,12)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (11 samples, 0.12%)</title><rect x="47.6061%" y="949" width="0.1152%" height="15" fill="rgb(242,110,29)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="959.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (11 samples, 0.12%)</title><rect x="47.6061%" y="933" width="0.1152%" height="15" fill="rgb(208,211,26)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="943.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (11 samples, 0.12%)</title><rect x="47.6061%" y="917" width="0.1152%" height="15" fill="rgb(244,147,6)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (11 samples, 0.12%)</title><rect x="47.6061%" y="901" width="0.1152%" height="15" fill="rgb(211,130,42)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (11 samples, 0.12%)</title><rect x="47.6061%" y="885" width="0.1152%" height="15" fill="rgb(220,63,1)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (11 samples, 0.12%)</title><rect x="47.6061%" y="869" width="0.1152%" height="15" fill="rgb(241,212,30)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="879.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (11 samples, 0.12%)</title><rect x="47.6061%" y="853" width="0.1152%" height="15" fill="rgb(233,153,17)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="863.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (11 samples, 0.12%)</title><rect x="47.6061%" y="837" width="0.1152%" height="15" fill="rgb(236,3,10)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="847.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (11 samples, 0.12%)</title><rect x="47.6061%" y="821" width="0.1152%" height="15" fill="rgb(232,41,21)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="831.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (11 samples, 0.12%)</title><rect x="47.6061%" y="805" width="0.1152%" height="15" fill="rgb(206,63,51)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="815.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (11 samples, 0.12%)</title><rect x="47.6061%" y="789" width="0.1152%" height="15" fill="rgb(250,214,3)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="799.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (11 samples, 0.12%)</title><rect x="47.6061%" y="773" width="0.1152%" height="15" fill="rgb(254,89,27)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (11 samples, 0.12%)</title><rect x="47.6061%" y="757" width="0.1152%" height="15" fill="rgb(249,41,14)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (11 samples, 0.12%)</title><rect x="47.6061%" y="741" width="0.1152%" height="15" fill="rgb(221,196,51)" fg:x="4544" fg:w="11"/><text x="47.8561%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (9 samples, 0.09%)</title><rect x="47.6270%" y="725" width="0.0943%" height="15" fill="rgb(214,116,26)" fg:x="4546" fg:w="9"/><text x="47.8770%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="47.6375%" y="709" width="0.0838%" height="15" fill="rgb(236,67,7)" fg:x="4547" fg:w="8"/><text x="47.8875%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="47.6375%" y="693" width="0.0838%" height="15" fill="rgb(253,179,32)" fg:x="4547" fg:w="8"/><text x="47.8875%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="47.6585%" y="677" width="0.0629%" height="15" fill="rgb(218,33,15)" fg:x="4549" fg:w="6"/><text x="47.9085%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="47.6794%" y="661" width="0.0419%" height="15" fill="rgb(217,202,41)" fg:x="4551" fg:w="4"/><text x="47.9294%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="47.7004%" y="645" width="0.0210%" height="15" fill="rgb(234,133,5)" fg:x="4553" fg:w="2"/><text x="47.9504%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_insert_slot (1 samples, 0.01%)</title><rect x="47.7318%" y="837" width="0.0105%" height="15" fill="rgb(240,47,40)" fg:x="4556" fg:w="1"/><text x="47.9818%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl_h2 (1 samples, 0.01%)</title><rect x="47.7318%" y="821" width="0.0105%" height="15" fill="rgb(234,166,26)" fg:x="4556" fg:w="1"/><text x="47.9818%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::set_ctrl (1 samples, 0.01%)</title><rect x="47.7318%" y="805" width="0.0105%" height="15" fill="rgb(244,125,51)" fg:x="4556" fg:w="1"/><text x="47.9818%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="47.7318%" y="885" width="0.0210%" height="15" fill="rgb(229,171,11)" fg:x="4556" fg:w="2"/><text x="47.9818%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="47.7318%" y="869" width="0.0210%" height="15" fill="rgb(224,38,45)" fg:x="4556" fg:w="2"/><text x="47.9818%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="47.7318%" y="853" width="0.0210%" height="15" fill="rgb(237,27,7)" fg:x="4556" fg:w="2"/><text x="47.9818%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (1 samples, 0.01%)</title><rect x="47.7423%" y="837" width="0.0105%" height="15" fill="rgb(216,52,7)" fg:x="4557" fg:w="1"/><text x="47.9923%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="47.7423%" y="821" width="0.0105%" height="15" fill="rgb(243,11,11)" fg:x="4557" fg:w="1"/><text x="47.9923%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="47.7423%" y="805" width="0.0105%" height="15" fill="rgb(253,167,20)" fg:x="4557" fg:w="1"/><text x="47.9923%" y="815.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (1 samples, 0.01%)</title><rect x="47.7423%" y="789" width="0.0105%" height="15" fill="rgb(215,207,5)" fg:x="4557" fg:w="1"/><text x="47.9923%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="47.7423%" y="773" width="0.0105%" height="15" fill="rgb(252,127,31)" fg:x="4557" fg:w="1"/><text x="47.9923%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="47.7423%" y="757" width="0.0105%" height="15" fill="rgb(209,106,27)" fg:x="4557" fg:w="1"/><text x="47.9923%" y="767.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="47.7423%" y="741" width="0.0105%" height="15" fill="rgb(214,220,18)" fg:x="4557" fg:w="1"/><text x="47.9923%" y="751.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="47.7423%" y="725" width="0.0105%" height="15" fill="rgb(237,89,12)" fg:x="4557" fg:w="1"/><text x="47.9923%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="47.7423%" y="709" width="0.0105%" height="15" fill="rgb(209,167,36)" fg:x="4557" fg:w="1"/><text x="47.9923%" y="719.50"></text></g><g><title>bevy_render::render_graph::schedule::Stages::new (4 samples, 0.04%)</title><rect x="47.7213%" y="949" width="0.0419%" height="15" fill="rgb(243,45,22)" fg:x="4555" fg:w="4"/><text x="47.9713%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (4 samples, 0.04%)</title><rect x="47.7213%" y="933" width="0.0419%" height="15" fill="rgb(239,2,46)" fg:x="4555" fg:w="4"/><text x="47.9713%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (4 samples, 0.04%)</title><rect x="47.7213%" y="917" width="0.0419%" height="15" fill="rgb(241,101,0)" fg:x="4555" fg:w="4"/><text x="47.9713%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.03%)</title><rect x="47.7318%" y="901" width="0.0314%" height="15" fill="rgb(244,34,31)" fg:x="4556" fg:w="3"/><text x="47.9818%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::find_insert_slot (1 samples, 0.01%)</title><rect x="47.7528%" y="885" width="0.0105%" height="15" fill="rgb(248,23,22)" fg:x="4558" fg:w="1"/><text x="48.0028%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="47.7632%" y="933" width="0.0105%" height="15" fill="rgb(218,27,48)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="47.7632%" y="917" width="0.0105%" height="15" fill="rgb(232,78,1)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="927.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="47.7632%" y="901" width="0.0105%" height="15" fill="rgb(233,169,12)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="911.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::iter_node_outputs::{{closure}} (1 samples, 0.01%)</title><rect x="47.7632%" y="885" width="0.0105%" height="15" fill="rgb(225,222,54)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="895.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::get_node_state (1 samples, 0.01%)</title><rect x="47.7632%" y="869" width="0.0105%" height="15" fill="rgb(245,126,29)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="879.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="47.7632%" y="853" width="0.0105%" height="15" fill="rgb(241,63,48)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="863.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="47.7632%" y="837" width="0.0105%" height="15" fill="rgb(235,126,38)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="47.7632%" y="821" width="0.0105%" height="15" fill="rgb(232,96,49)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="47.7632%" y="805" width="0.0105%" height="15" fill="rgb(211,146,40)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="815.50"></text></g><g><title>&lt;bevy_render::render_graph::node::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="47.7632%" y="789" width="0.0105%" height="15" fill="rgb(247,93,44)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="799.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="47.7632%" y="773" width="0.0105%" height="15" fill="rgb(251,41,49)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="783.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="47.7632%" y="757" width="0.0105%" height="15" fill="rgb(218,155,12)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="47.7632%" y="741" width="0.0105%" height="15" fill="rgb(221,161,30)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="47.7632%" y="725" width="0.0105%" height="15" fill="rgb(221,179,11)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="735.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="47.7632%" y="709" width="0.0105%" height="15" fill="rgb(224,170,48)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="719.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (1 samples, 0.01%)</title><rect x="47.7632%" y="693" width="0.0105%" height="15" fill="rgb(223,117,5)" fg:x="4559" fg:w="1"/><text x="48.0132%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="47.7737%" y="837" width="0.0105%" height="15" fill="rgb(209,52,20)" fg:x="4560" fg:w="1"/><text x="48.0237%" y="847.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="47.7737%" y="821" width="0.0105%" height="15" fill="rgb(209,19,41)" fg:x="4560" fg:w="1"/><text x="48.0237%" y="831.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="47.7737%" y="805" width="0.0105%" height="15" fill="rgb(210,177,12)" fg:x="4560" fg:w="1"/><text x="48.0237%" y="815.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="47.7737%" y="789" width="0.0105%" height="15" fill="rgb(211,159,37)" fg:x="4560" fg:w="1"/><text x="48.0237%" y="799.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="47.7737%" y="773" width="0.0105%" height="15" fill="rgb(209,20,2)" fg:x="4560" fg:w="1"/><text x="48.0237%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="47.7737%" y="757" width="0.0105%" height="15" fill="rgb(244,3,46)" fg:x="4560" fg:w="1"/><text x="48.0237%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="47.7737%" y="933" width="0.0210%" height="15" fill="rgb(220,94,38)" fg:x="4560" fg:w="2"/><text x="48.0237%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="47.7737%" y="917" width="0.0210%" height="15" fill="rgb(253,14,31)" fg:x="4560" fg:w="2"/><text x="48.0237%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="47.7737%" y="901" width="0.0210%" height="15" fill="rgb(234,176,13)" fg:x="4560" fg:w="2"/><text x="48.0237%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="47.7737%" y="885" width="0.0210%" height="15" fill="rgb(218,62,25)" fg:x="4560" fg:w="2"/><text x="48.0237%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="47.7737%" y="869" width="0.0210%" height="15" fill="rgb(216,124,40)" fg:x="4560" fg:w="2"/><text x="48.0237%" y="879.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="47.7737%" y="853" width="0.0210%" height="15" fill="rgb(228,170,12)" fg:x="4560" fg:w="2"/><text x="48.0237%" y="863.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="47.7842%" y="837" width="0.0105%" height="15" fill="rgb(231,226,5)" fg:x="4561" fg:w="1"/><text x="48.0342%" y="847.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="47.7842%" y="821" width="0.0105%" height="15" fill="rgb(237,122,22)" fg:x="4561" fg:w="1"/><text x="48.0342%" y="831.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::iter_node_outputs (1 samples, 0.01%)</title><rect x="47.7947%" y="933" width="0.0105%" height="15" fill="rgb(209,185,25)" fg:x="4562" fg:w="1"/><text x="48.0447%" y="943.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::get_node_state (1 samples, 0.01%)</title><rect x="47.7947%" y="917" width="0.0105%" height="15" fill="rgb(228,200,32)" fg:x="4562" fg:w="1"/><text x="48.0447%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="47.7947%" y="901" width="0.0105%" height="15" fill="rgb(217,140,10)" fg:x="4562" fg:w="1"/><text x="48.0447%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="47.7947%" y="885" width="0.0105%" height="15" fill="rgb(253,17,24)" fg:x="4562" fg:w="1"/><text x="48.0447%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="47.7947%" y="869" width="0.0105%" height="15" fill="rgb(212,61,6)" fg:x="4562" fg:w="1"/><text x="48.0447%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="47.7947%" y="853" width="0.0105%" height="15" fill="rgb(205,14,25)" fg:x="4562" fg:w="1"/><text x="48.0447%" y="863.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="47.7947%" y="837" width="0.0105%" height="15" fill="rgb(232,69,41)" fg:x="4562" fg:w="1"/><text x="48.0447%" y="847.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="47.7947%" y="821" width="0.0105%" height="15" fill="rgb(241,106,47)" fg:x="4562" fg:w="1"/><text x="48.0447%" y="831.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="47.7947%" y="805" width="0.0105%" height="15" fill="rgb(210,213,53)" fg:x="4562" fg:w="1"/><text x="48.0447%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="47.8156%" y="917" width="0.0105%" height="15" fill="rgb(253,175,27)" fg:x="4564" fg:w="1"/><text x="48.0656%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="47.8156%" y="901" width="0.0105%" height="15" fill="rgb(211,171,24)" fg:x="4564" fg:w="1"/><text x="48.0656%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="47.8156%" y="885" width="0.0105%" height="15" fill="rgb(229,80,7)" fg:x="4564" fg:w="1"/><text x="48.0656%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="47.8156%" y="869" width="0.0105%" height="15" fill="rgb(212,46,39)" fg:x="4564" fg:w="1"/><text x="48.0656%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="47.8156%" y="853" width="0.0105%" height="15" fill="rgb(240,80,45)" fg:x="4564" fg:w="1"/><text x="48.0656%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="47.8156%" y="837" width="0.0105%" height="15" fill="rgb(253,177,40)" fg:x="4564" fg:w="1"/><text x="48.0656%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="47.8156%" y="821" width="0.0105%" height="15" fill="rgb(249,200,15)" fg:x="4564" fg:w="1"/><text x="48.0656%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="47.8156%" y="805" width="0.0105%" height="15" fill="rgb(217,78,26)" fg:x="4564" fg:w="1"/><text x="48.0656%" y="815.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="47.8156%" y="789" width="0.0105%" height="15" fill="rgb(254,151,32)" fg:x="4564" fg:w="1"/><text x="48.0656%" y="799.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="47.8156%" y="773" width="0.0105%" height="15" fill="rgb(226,165,27)" fg:x="4564" fg:w="1"/><text x="48.0656%" y="783.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (3 samples, 0.03%)</title><rect x="47.8051%" y="933" width="0.0314%" height="15" fill="rgb(250,206,4)" fg:x="4563" fg:w="3"/><text x="48.0551%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max (1 samples, 0.01%)</title><rect x="47.8261%" y="917" width="0.0105%" height="15" fill="rgb(231,229,27)" fg:x="4565" fg:w="1"/><text x="48.0761%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::max_by (1 samples, 0.01%)</title><rect x="47.8261%" y="901" width="0.0105%" height="15" fill="rgb(239,217,8)" fg:x="4565" fg:w="1"/><text x="48.0761%" y="911.50"></text></g><g><title>core::iter::traits::iterator::Iterator::reduce (1 samples, 0.01%)</title><rect x="47.8261%" y="885" width="0.0105%" height="15" fill="rgb(225,204,27)" fg:x="4565" fg:w="1"/><text x="48.0761%" y="895.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="47.8261%" y="869" width="0.0105%" height="15" fill="rgb(230,56,32)" fg:x="4565" fg:w="1"/><text x="48.0761%" y="879.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="47.8261%" y="853" width="0.0105%" height="15" fill="rgb(222,56,27)" fg:x="4565" fg:w="1"/><text x="48.0761%" y="863.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="47.8261%" y="837" width="0.0105%" height="15" fill="rgb(253,108,27)" fg:x="4565" fg:w="1"/><text x="48.0761%" y="847.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node::{{closure}} (1 samples, 0.01%)</title><rect x="47.8261%" y="821" width="0.0105%" height="15" fill="rgb(212,87,36)" fg:x="4565" fg:w="1"/><text x="48.0761%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="47.8261%" y="805" width="0.0105%" height="15" fill="rgb(247,82,36)" fg:x="4565" fg:w="1"/><text x="48.0761%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="47.8261%" y="789" width="0.0105%" height="15" fill="rgb(222,143,9)" fg:x="4565" fg:w="1"/><text x="48.0761%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="47.8261%" y="773" width="0.0105%" height="15" fill="rgb(238,162,48)" fg:x="4565" fg:w="1"/><text x="48.0761%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="47.8261%" y="757" width="0.0105%" height="15" fill="rgb(221,59,43)" fg:x="4565" fg:w="1"/><text x="48.0761%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.01%)</title><rect x="47.8366%" y="933" width="0.0105%" height="15" fill="rgb(205,166,41)" fg:x="4566" fg:w="1"/><text x="48.0866%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="47.8366%" y="917" width="0.0105%" height="15" fill="rgb(241,186,40)" fg:x="4566" fg:w="1"/><text x="48.0866%" y="927.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="47.8366%" y="901" width="0.0105%" height="15" fill="rgb(216,119,35)" fg:x="4566" fg:w="1"/><text x="48.0866%" y="911.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="47.8366%" y="885" width="0.0105%" height="15" fill="rgb(208,68,38)" fg:x="4566" fg:w="1"/><text x="48.0866%" y="895.50"></text></g><g><title>&lt;bevy_render::render_graph::node::NodeId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="47.8366%" y="869" width="0.0105%" height="15" fill="rgb(217,113,1)" fg:x="4566" fg:w="1"/><text x="48.0866%" y="879.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="47.8366%" y="853" width="0.0105%" height="15" fill="rgb(242,153,3)" fg:x="4566" fg:w="1"/><text x="48.0866%" y="863.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="47.8366%" y="837" width="0.0105%" height="15" fill="rgb(229,76,35)" fg:x="4566" fg:w="1"/><text x="48.0866%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="47.8366%" y="821" width="0.0105%" height="15" fill="rgb(229,125,34)" fg:x="4566" fg:w="1"/><text x="48.0866%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="47.8366%" y="805" width="0.0105%" height="15" fill="rgb(238,179,36)" fg:x="4566" fg:w="1"/><text x="48.0866%" y="815.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="47.8366%" y="789" width="0.0105%" height="15" fill="rgb(244,183,19)" fg:x="4566" fg:w="1"/><text x="48.0866%" y="799.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (1 samples, 0.01%)</title><rect x="47.8366%" y="773" width="0.0105%" height="15" fill="rgb(216,85,49)" fg:x="4566" fg:w="1"/><text x="48.0866%" y="783.50"></text></g><g><title>&lt;bevy_render::render_graph::schedule::DependentNodeStager as bevy_render::render_graph::schedule::RenderGraphStager&gt;::get_stages (14 samples, 0.15%)</title><rect x="47.7213%" y="965" width="0.1467%" height="15" fill="rgb(208,161,47)" fg:x="4555" fg:w="14"/><text x="47.9713%" y="975.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (10 samples, 0.10%)</title><rect x="47.7632%" y="949" width="0.1048%" height="15" fill="rgb(233,210,18)" fg:x="4559" fg:w="10"/><text x="48.0132%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (2 samples, 0.02%)</title><rect x="47.8470%" y="933" width="0.0210%" height="15" fill="rgb(205,104,42)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="943.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (2 samples, 0.02%)</title><rect x="47.8470%" y="917" width="0.0210%" height="15" fill="rgb(248,90,43)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="47.8470%" y="901" width="0.0210%" height="15" fill="rgb(206,198,11)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="47.8470%" y="885" width="0.0210%" height="15" fill="rgb(239,165,27)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (2 samples, 0.02%)</title><rect x="47.8470%" y="869" width="0.0210%" height="15" fill="rgb(246,44,32)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (2 samples, 0.02%)</title><rect x="47.8470%" y="853" width="0.0210%" height="15" fill="rgb(252,65,42)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="863.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize (2 samples, 0.02%)</title><rect x="47.8470%" y="837" width="0.0210%" height="15" fill="rgb(246,197,18)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="847.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::fallible_with_capacity (2 samples, 0.02%)</title><rect x="47.8470%" y="821" width="0.0210%" height="15" fill="rgb(216,192,4)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_uninitialized (2 samples, 0.02%)</title><rect x="47.8470%" y="805" width="0.0210%" height="15" fill="rgb(208,117,10)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="815.50"></text></g><g><title>hashbrown::raw::alloc::inner::do_alloc (2 samples, 0.02%)</title><rect x="47.8470%" y="789" width="0.0210%" height="15" fill="rgb(240,61,47)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="47.8470%" y="773" width="0.0210%" height="15" fill="rgb(228,178,21)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="783.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="47.8470%" y="757" width="0.0210%" height="15" fill="rgb(219,96,54)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="767.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="47.8470%" y="741" width="0.0210%" height="15" fill="rgb(250,177,24)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="47.8470%" y="725" width="0.0210%" height="15" fill="rgb(242,154,46)" fg:x="4567" fg:w="2"/><text x="48.0970%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="47.8575%" y="709" width="0.0105%" height="15" fill="rgb(226,176,29)" fg:x="4568" fg:w="1"/><text x="48.1075%" y="719.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="47.8575%" y="693" width="0.0105%" height="15" fill="rgb(226,29,2)" fg:x="4568" fg:w="1"/><text x="48.1075%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="47.9623%" y="869" width="0.0210%" height="15" fill="rgb(237,104,14)" fg:x="4578" fg:w="2"/><text x="48.2123%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="47.9728%" y="853" width="0.0105%" height="15" fill="rgb(245,207,31)" fg:x="4579" fg:w="1"/><text x="48.2228%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::needs_to_grow (1 samples, 0.01%)</title><rect x="47.9728%" y="837" width="0.0105%" height="15" fill="rgb(229,211,45)" fg:x="4579" fg:w="1"/><text x="48.2228%" y="847.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="47.9728%" y="821" width="0.0105%" height="15" fill="rgb(229,113,15)" fg:x="4579" fg:w="1"/><text x="48.2228%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="48.0042%" y="805" width="0.0105%" height="15" fill="rgb(237,147,15)" fg:x="4582" fg:w="1"/><text x="48.2542%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (1 samples, 0.01%)</title><rect x="48.0147%" y="789" width="0.0105%" height="15" fill="rgb(244,120,12)" fg:x="4583" fg:w="1"/><text x="48.2647%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (1 samples, 0.01%)</title><rect x="48.0147%" y="773" width="0.0105%" height="15" fill="rgb(205,120,12)" fg:x="4583" fg:w="1"/><text x="48.2647%" y="783.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="48.0147%" y="757" width="0.0105%" height="15" fill="rgb(231,26,45)" fg:x="4583" fg:w="1"/><text x="48.2647%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (9 samples, 0.09%)</title><rect x="47.9623%" y="901" width="0.0943%" height="15" fill="rgb(246,98,1)" fg:x="4578" fg:w="9"/><text x="48.2123%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (9 samples, 0.09%)</title><rect x="47.9623%" y="885" width="0.0943%" height="15" fill="rgb(207,68,45)" fg:x="4578" fg:w="9"/><text x="48.2123%" y="895.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (7 samples, 0.07%)</title><rect x="47.9832%" y="869" width="0.0733%" height="15" fill="rgb(231,27,38)" fg:x="4580" fg:w="7"/><text x="48.2332%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (7 samples, 0.07%)</title><rect x="47.9832%" y="853" width="0.0733%" height="15" fill="rgb(214,223,3)" fg:x="4580" fg:w="7"/><text x="48.2332%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.05%)</title><rect x="48.0042%" y="837" width="0.0524%" height="15" fill="rgb(228,195,46)" fg:x="4582" fg:w="5"/><text x="48.2542%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (5 samples, 0.05%)</title><rect x="48.0042%" y="821" width="0.0524%" height="15" fill="rgb(231,100,42)" fg:x="4582" fg:w="5"/><text x="48.2542%" y="831.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (4 samples, 0.04%)</title><rect x="48.0147%" y="805" width="0.0419%" height="15" fill="rgb(236,53,4)" fg:x="4583" fg:w="4"/><text x="48.2647%" y="815.50"></text></g><g><title>core::ops::function::FnMut::call_mut (3 samples, 0.03%)</title><rect x="48.0251%" y="789" width="0.0314%" height="15" fill="rgb(230,152,12)" fg:x="4584" fg:w="3"/><text x="48.2751%" y="799.50"></text></g><g><title>&lt;bevy_render::draw::RenderCommand as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="48.0251%" y="773" width="0.0314%" height="15" fill="rgb(226,101,19)" fg:x="4584" fg:w="3"/><text x="48.2751%" y="783.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="48.0461%" y="757" width="0.0105%" height="15" fill="rgb(250,149,32)" fg:x="4586" fg:w="1"/><text x="48.2961%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="48.0566%" y="901" width="0.0105%" height="15" fill="rgb(232,178,12)" fg:x="4587" fg:w="1"/><text x="48.3066%" y="911.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="48.3394%" y="885" width="0.0314%" height="15" fill="rgb(246,151,17)" fg:x="4614" fg:w="3"/><text x="48.5894%" y="895.50"></text></g><g><title>&lt;bevy_render::draw::RenderCommand as core::clone::Clone&gt;::clone (68 samples, 0.71%)</title><rect x="48.0671%" y="901" width="0.7124%" height="15" fill="rgb(252,17,51)" fg:x="4588" fg:w="68"/><text x="48.3171%" y="911.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (39 samples, 0.41%)</title><rect x="48.3709%" y="885" width="0.4086%" height="15" fill="rgb(250,207,23)" fg:x="4617" fg:w="39"/><text x="48.6209%" y="895.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (37 samples, 0.39%)</title><rect x="48.3918%" y="869" width="0.3876%" height="15" fill="rgb(205,27,5)" fg:x="4619" fg:w="37"/><text x="48.6418%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (37 samples, 0.39%)</title><rect x="48.3918%" y="853" width="0.3876%" height="15" fill="rgb(224,32,19)" fg:x="4619" fg:w="37"/><text x="48.6418%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_add (37 samples, 0.39%)</title><rect x="48.3918%" y="837" width="0.3876%" height="15" fill="rgb(247,214,40)" fg:x="4619" fg:w="37"/><text x="48.6418%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (62 samples, 0.65%)</title><rect x="48.7795%" y="901" width="0.6496%" height="15" fill="rgb(239,199,17)" fg:x="4656" fg:w="62"/><text x="49.0295%" y="911.50"></text></g><g><title>core::ptr::write (61 samples, 0.64%)</title><rect x="48.7899%" y="885" width="0.6391%" height="15" fill="rgb(251,159,9)" fg:x="4657" fg:w="61"/><text x="49.0399%" y="895.50"></text></g><g><title>&lt;bevy_ecs::storage::table::Tables as core::ops::index::Index&lt;bevy_ecs::storage::table::TableId&gt;&gt;::index (1 samples, 0.01%)</title><rect x="49.4709%" y="837" width="0.0105%" height="15" fill="rgb(225,78,32)" fg:x="4722" fg:w="1"/><text x="49.7209%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="49.4709%" y="821" width="0.0105%" height="15" fill="rgb(206,97,47)" fg:x="4722" fg:w="1"/><text x="49.7209%" y="831.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="49.4709%" y="805" width="0.0105%" height="15" fill="rgb(227,107,4)" fg:x="4722" fg:w="1"/><text x="49.7209%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="49.4709%" y="789" width="0.0105%" height="15" fill="rgb(241,146,50)" fg:x="4722" fg:w="1"/><text x="49.7209%" y="799.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ptr (1 samples, 0.01%)</title><rect x="49.4814%" y="837" width="0.0105%" height="15" fill="rgb(232,92,30)" fg:x="4723" fg:w="1"/><text x="49.7314%" y="847.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (3 samples, 0.03%)</title><rect x="49.4709%" y="853" width="0.0314%" height="15" fill="rgb(222,0,40)" fg:x="4722" fg:w="3"/><text x="49.7209%" y="863.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (1 samples, 0.01%)</title><rect x="49.4919%" y="837" width="0.0105%" height="15" fill="rgb(219,54,33)" fg:x="4724" fg:w="1"/><text x="49.7419%" y="847.50"></text></g><g><title>bevy_ecs::entity::Entities::get (1 samples, 0.01%)</title><rect x="49.5024%" y="853" width="0.0105%" height="15" fill="rgb(226,209,28)" fg:x="4725" fg:w="1"/><text x="49.7524%" y="863.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (8 samples, 0.08%)</title><rect x="49.4500%" y="869" width="0.0838%" height="15" fill="rgb(254,205,35)" fg:x="4720" fg:w="8"/><text x="49.7000%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (2 samples, 0.02%)</title><rect x="49.5128%" y="853" width="0.0210%" height="15" fill="rgb(230,159,3)" fg:x="4726" fg:w="2"/><text x="49.7628%" y="863.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get (11 samples, 0.12%)</title><rect x="49.4290%" y="901" width="0.1152%" height="15" fill="rgb(232,190,24)" fg:x="4718" fg:w="11"/><text x="49.6790%" y="911.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked (11 samples, 0.12%)</title><rect x="49.4290%" y="885" width="0.1152%" height="15" fill="rgb(217,227,44)" fg:x="4718" fg:w="11"/><text x="49.6790%" y="895.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::validate_world_and_update_archetypes (1 samples, 0.01%)</title><rect x="49.5338%" y="869" width="0.0105%" height="15" fill="rgb(236,211,1)" fg:x="4728" fg:w="1"/><text x="49.7838%" y="879.50"></text></g><g><title>&lt;bevy_ecs::world::WorldId as core::cmp::PartialEq&gt;::ne (1 samples, 0.01%)</title><rect x="49.5338%" y="853" width="0.0105%" height="15" fill="rgb(250,127,46)" fg:x="4728" fg:w="1"/><text x="49.7838%" y="863.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::ops::try_trait::Try&gt;::branch (1 samples, 0.01%)</title><rect x="49.5443%" y="869" width="0.0105%" height="15" fill="rgb(229,213,6)" fg:x="4729" fg:w="1"/><text x="49.7943%" y="879.50"></text></g><g><title>bevy_ecs::world::World::get_entity (3 samples, 0.03%)</title><rect x="49.5443%" y="885" width="0.0314%" height="15" fill="rgb(237,15,36)" fg:x="4729" fg:w="3"/><text x="49.7943%" y="895.50"></text></g><g><title>bevy_ecs::entity::Entities::get (2 samples, 0.02%)</title><rect x="49.5547%" y="869" width="0.0210%" height="15" fill="rgb(213,131,41)" fg:x="4730" fg:w="2"/><text x="49.8047%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="49.5862%" y="741" width="0.0210%" height="15" fill="rgb(225,82,44)" fg:x="4733" fg:w="2"/><text x="49.8362%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="49.5966%" y="725" width="0.0105%" height="15" fill="rgb(249,42,11)" fg:x="4734" fg:w="1"/><text x="49.8466%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="49.5966%" y="709" width="0.0105%" height="15" fill="rgb(253,11,29)" fg:x="4734" fg:w="1"/><text x="49.8466%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="49.5862%" y="757" width="0.0419%" height="15" fill="rgb(206,8,54)" fg:x="4733" fg:w="4"/><text x="49.8362%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (2 samples, 0.02%)</title><rect x="49.6071%" y="741" width="0.0210%" height="15" fill="rgb(222,186,2)" fg:x="4735" fg:w="2"/><text x="49.8571%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.02%)</title><rect x="49.6071%" y="725" width="0.0210%" height="15" fill="rgb(221,206,53)" fg:x="4735" fg:w="2"/><text x="49.8571%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.02%)</title><rect x="49.6071%" y="709" width="0.0210%" height="15" fill="rgb(230,150,21)" fg:x="4735" fg:w="2"/><text x="49.8571%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (2 samples, 0.02%)</title><rect x="49.6281%" y="757" width="0.0210%" height="15" fill="rgb(253,202,10)" fg:x="4737" fg:w="2"/><text x="49.8781%" y="767.50"></text></g><g><title>&lt;core::any::TypeId as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="49.6281%" y="741" width="0.0210%" height="15" fill="rgb(238,109,40)" fg:x="4737" fg:w="2"/><text x="49.8781%" y="751.50"></text></g><g><title>bevy_ecs::component::Components::get_id (9 samples, 0.09%)</title><rect x="49.5862%" y="853" width="0.0943%" height="15" fill="rgb(247,120,22)" fg:x="4733" fg:w="9"/><text x="49.8362%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.09%)</title><rect x="49.5862%" y="837" width="0.0943%" height="15" fill="rgb(207,43,30)" fg:x="4733" fg:w="9"/><text x="49.8362%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.09%)</title><rect x="49.5862%" y="821" width="0.0943%" height="15" fill="rgb(213,211,24)" fg:x="4733" fg:w="9"/><text x="49.8362%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.09%)</title><rect x="49.5862%" y="805" width="0.0943%" height="15" fill="rgb(239,73,39)" fg:x="4733" fg:w="9"/><text x="49.8362%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.09%)</title><rect x="49.5862%" y="789" width="0.0943%" height="15" fill="rgb(245,182,19)" fg:x="4733" fg:w="9"/><text x="49.8362%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.09%)</title><rect x="49.5862%" y="773" width="0.0943%" height="15" fill="rgb(247,143,26)" fg:x="4733" fg:w="9"/><text x="49.8362%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="49.6490%" y="757" width="0.0314%" height="15" fill="rgb(228,191,23)" fg:x="4739" fg:w="3"/><text x="49.8990%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="49.6490%" y="741" width="0.0314%" height="15" fill="rgb(253,165,31)" fg:x="4739" fg:w="3"/><text x="49.8990%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="49.6490%" y="725" width="0.0314%" height="15" fill="rgb(234,138,20)" fg:x="4739" fg:w="3"/><text x="49.8990%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="49.6595%" y="709" width="0.0210%" height="15" fill="rgb(218,191,29)" fg:x="4740" fg:w="2"/><text x="49.9095%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.02%)</title><rect x="49.6595%" y="693" width="0.0210%" height="15" fill="rgb(221,157,19)" fg:x="4740" fg:w="2"/><text x="49.9095%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.02%)</title><rect x="49.6595%" y="677" width="0.0210%" height="15" fill="rgb(237,26,42)" fg:x="4740" fg:w="2"/><text x="49.9095%" y="687.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.02%)</title><rect x="49.6595%" y="661" width="0.0210%" height="15" fill="rgb(220,163,24)" fg:x="4740" fg:w="2"/><text x="49.9095%" y="671.50"></text></g><g><title>&lt;bevy_ecs::archetype::Archetypes as core::ops::index::Index&lt;bevy_ecs::archetype::ArchetypeId&gt;&gt;::index (1 samples, 0.01%)</title><rect x="49.6805%" y="837" width="0.0105%" height="15" fill="rgb(242,115,20)" fg:x="4742" fg:w="1"/><text x="49.9305%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="49.6805%" y="821" width="0.0105%" height="15" fill="rgb(210,206,9)" fg:x="4742" fg:w="1"/><text x="49.9305%" y="831.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (1 samples, 0.01%)</title><rect x="49.6805%" y="805" width="0.0105%" height="15" fill="rgb(208,71,17)" fg:x="4742" fg:w="1"/><text x="49.9305%" y="815.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (1 samples, 0.01%)</title><rect x="49.6805%" y="789" width="0.0105%" height="15" fill="rgb(233,7,5)" fg:x="4742" fg:w="1"/><text x="49.9305%" y="799.50"></text></g><g><title>&lt;bevy_ecs::storage::table::Tables as core::ops::index::Index&lt;bevy_ecs::storage::table::TableId&gt;&gt;::index (1 samples, 0.01%)</title><rect x="49.6909%" y="837" width="0.0105%" height="15" fill="rgb(207,92,33)" fg:x="4743" fg:w="1"/><text x="49.9409%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="49.6909%" y="821" width="0.0105%" height="15" fill="rgb(218,87,9)" fg:x="4743" fg:w="1"/><text x="49.9409%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="49.6909%" y="805" width="0.0105%" height="15" fill="rgb(219,47,37)" fg:x="4743" fg:w="1"/><text x="49.9409%" y="815.50"></text></g><g><title>bevy_ecs::archetype::Archetype::entity_table_row (1 samples, 0.01%)</title><rect x="49.7014%" y="837" width="0.0105%" height="15" fill="rgb(221,152,34)" fg:x="4744" fg:w="1"/><text x="49.9514%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="49.7014%" y="821" width="0.0105%" height="15" fill="rgb(235,176,21)" fg:x="4744" fg:w="1"/><text x="49.9514%" y="831.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="49.7014%" y="805" width="0.0105%" height="15" fill="rgb(232,212,21)" fg:x="4744" fg:w="1"/><text x="49.9514%" y="815.50"></text></g><g><title>bevy_ecs::component::ComponentInfo::storage_type (5 samples, 0.05%)</title><rect x="49.7119%" y="837" width="0.0524%" height="15" fill="rgb(245,82,39)" fg:x="4745" fg:w="5"/><text x="49.9619%" y="847.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_unchecked (4 samples, 0.04%)</title><rect x="49.7643%" y="837" width="0.0419%" height="15" fill="rgb(241,52,51)" fg:x="4750" fg:w="4"/><text x="50.0143%" y="847.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (4 samples, 0.04%)</title><rect x="49.7643%" y="821" width="0.0419%" height="15" fill="rgb(219,91,24)" fg:x="4750" fg:w="4"/><text x="50.0143%" y="831.50"></text></g><g><title>bevy_ecs::world::World::get (27 samples, 0.28%)</title><rect x="49.5443%" y="901" width="0.2829%" height="15" fill="rgb(241,142,12)" fg:x="4729" fg:w="27"/><text x="49.7943%" y="911.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityRef::get (24 samples, 0.25%)</title><rect x="49.5757%" y="885" width="0.2514%" height="15" fill="rgb(230,27,9)" fg:x="4732" fg:w="24"/><text x="49.8257%" y="895.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (24 samples, 0.25%)</title><rect x="49.5757%" y="869" width="0.2514%" height="15" fill="rgb(249,181,32)" fg:x="4732" fg:w="24"/><text x="49.8257%" y="879.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component (14 samples, 0.15%)</title><rect x="49.6805%" y="853" width="0.1467%" height="15" fill="rgb(230,107,3)" fg:x="4742" fg:w="14"/><text x="49.9305%" y="863.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (2 samples, 0.02%)</title><rect x="49.8062%" y="837" width="0.0210%" height="15" fill="rgb(246,204,14)" fg:x="4754" fg:w="2"/><text x="50.0562%" y="847.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="49.8167%" y="821" width="0.0105%" height="15" fill="rgb(213,192,47)" fg:x="4755" fg:w="1"/><text x="50.0667%" y="831.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (1 samples, 0.01%)</title><rect x="49.8167%" y="805" width="0.0105%" height="15" fill="rgb(240,44,36)" fg:x="4755" fg:w="1"/><text x="50.0667%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;,alloc::vec::Vec&lt;bevy_render::draw::RenderCommand&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="49.8271%" y="901" width="0.0105%" height="15" fill="rgb(244,209,38)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;,alloc::vec::Vec&lt;bevy_render::draw::RenderCommand&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="49.8271%" y="885" width="0.0105%" height="15" fill="rgb(219,34,37)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;,alloc::vec::Vec&lt;bevy_render::draw::RenderCommand&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="49.8271%" y="869" width="0.0105%" height="15" fill="rgb(210,28,6)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="879.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="49.8271%" y="853" width="0.0105%" height="15" fill="rgb(244,110,52)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="49.8271%" y="837" width="0.0105%" height="15" fill="rgb(254,124,47)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="847.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="49.8271%" y="821" width="0.0105%" height="15" fill="rgb(254,110,13)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="831.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="49.8271%" y="805" width="0.0105%" height="15" fill="rgb(252,57,21)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;,alloc::vec::Vec&lt;bevy_render::draw::RenderCommand&gt;)&gt; (1 samples, 0.01%)</title><rect x="49.8271%" y="789" width="0.0105%" height="15" fill="rgb(242,60,45)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::draw::RenderCommand&gt;&gt; (1 samples, 0.01%)</title><rect x="49.8271%" y="773" width="0.0105%" height="15" fill="rgb(234,49,30)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_render::draw::RenderCommand&gt;&gt; (1 samples, 0.01%)</title><rect x="49.8271%" y="757" width="0.0105%" height="15" fill="rgb(218,98,6)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="49.8271%" y="741" width="0.0105%" height="15" fill="rgb(220,174,29)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="751.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="49.8271%" y="725" width="0.0105%" height="15" fill="rgb(236,163,23)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="735.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="49.8271%" y="709" width="0.0105%" height="15" fill="rgb(242,114,45)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="719.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="49.8271%" y="693" width="0.0105%" height="15" fill="rgb(232,10,53)" fg:x="4756" fg:w="1"/><text x="50.0771%" y="703.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_err (1 samples, 0.01%)</title><rect x="49.8376%" y="901" width="0.0105%" height="15" fill="rgb(245,108,29)" fg:x="4757" fg:w="1"/><text x="50.0876%" y="911.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::is_ok (1 samples, 0.01%)</title><rect x="49.8376%" y="885" width="0.0105%" height="15" fill="rgb(240,89,53)" fg:x="4757" fg:w="1"/><text x="50.0876%" y="895.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare::{{closure}}::{{closure}} (1 samples, 0.01%)</title><rect x="49.8481%" y="885" width="0.0105%" height="15" fill="rgb(226,60,45)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="895.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (1 samples, 0.01%)</title><rect x="49.8481%" y="869" width="0.0105%" height="15" fill="rgb(230,41,44)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="879.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group_status (1 samples, 0.01%)</title><rect x="49.8481%" y="853" width="0.0105%" height="15" fill="rgb(230,26,20)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="863.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="49.8481%" y="837" width="0.0105%" height="15" fill="rgb(237,170,32)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="49.8481%" y="821" width="0.0105%" height="15" fill="rgb(212,35,42)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="49.8481%" y="805" width="0.0105%" height="15" fill="rgb(227,31,34)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="49.8481%" y="789" width="0.0105%" height="15" fill="rgb(216,19,18)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="49.8481%" y="773" width="0.0105%" height="15" fill="rgb(211,133,42)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="49.8481%" y="757" width="0.0105%" height="15" fill="rgb(244,66,13)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="49.8481%" y="741" width="0.0105%" height="15" fill="rgb(218,185,50)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="49.8481%" y="725" width="0.0105%" height="15" fill="rgb(219,149,13)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="49.8481%" y="709" width="0.0105%" height="15" fill="rgb(221,125,0)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="49.8481%" y="693" width="0.0105%" height="15" fill="rgb(247,126,27)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="49.8481%" y="677" width="0.0105%" height="15" fill="rgb(250,138,30)" fg:x="4758" fg:w="1"/><text x="50.0981%" y="687.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (5 samples, 0.05%)</title><rect x="49.8481%" y="901" width="0.0524%" height="15" fill="rgb(230,151,9)" fg:x="4758" fg:w="5"/><text x="50.0981%" y="911.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (4 samples, 0.04%)</title><rect x="49.8586%" y="885" width="0.0419%" height="15" fill="rgb(233,80,38)" fg:x="4759" fg:w="4"/><text x="50.1086%" y="895.50"></text></g><g><title>hashbrown::rustc_entry::RustcOccupiedEntry&lt;K,V,A&gt;::into_mut (2 samples, 0.02%)</title><rect x="49.8795%" y="869" width="0.0210%" height="15" fill="rgb(232,68,43)" fg:x="4761" fg:w="2"/><text x="50.1295%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::rustc_entry::RustcOccupiedEntry&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;,alloc::vec::Vec&lt;bevy_render::draw::RenderCommand&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="49.8795%" y="853" width="0.0210%" height="15" fill="rgb(254,5,50)" fg:x="4761" fg:w="2"/><text x="50.1295%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="49.8795%" y="837" width="0.0210%" height="15" fill="rgb(225,45,5)" fg:x="4761" fg:w="2"/><text x="50.1295%" y="847.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (4 samples, 0.04%)</title><rect x="49.9005%" y="885" width="0.0419%" height="15" fill="rgb(239,22,3)" fg:x="4763" fg:w="4"/><text x="50.1505%" y="895.50"></text></g><g><title>ahash::operations::folded_multiply (5 samples, 0.05%)</title><rect x="50.0367%" y="837" width="0.0524%" height="15" fill="rgb(243,129,0)" fg:x="4776" fg:w="5"/><text x="50.2867%" y="847.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (4 samples, 0.04%)</title><rect x="50.0471%" y="821" width="0.0419%" height="15" fill="rgb(223,164,0)" fg:x="4777" fg:w="4"/><text x="50.2971%" y="831.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (6 samples, 0.06%)</title><rect x="50.0367%" y="853" width="0.0629%" height="15" fill="rgb(221,46,29)" fg:x="4776" fg:w="6"/><text x="50.2867%" y="863.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="50.0891%" y="837" width="0.0105%" height="15" fill="rgb(205,97,47)" fg:x="4781" fg:w="1"/><text x="50.3391%" y="847.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u64 (8 samples, 0.08%)</title><rect x="50.0995%" y="741" width="0.0838%" height="15" fill="rgb(249,14,8)" fg:x="4782" fg:w="8"/><text x="50.3495%" y="751.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (5 samples, 0.05%)</title><rect x="50.1833%" y="741" width="0.0524%" height="15" fill="rgb(216,77,3)" fg:x="4790" fg:w="5"/><text x="50.4333%" y="751.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="50.2148%" y="725" width="0.0210%" height="15" fill="rgb(206,168,54)" fg:x="4793" fg:w="2"/><text x="50.4648%" y="735.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="50.2252%" y="709" width="0.0105%" height="15" fill="rgb(236,3,41)" fg:x="4794" fg:w="1"/><text x="50.4752%" y="719.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (14 samples, 0.15%)</title><rect x="50.0995%" y="821" width="0.1467%" height="15" fill="rgb(231,132,24)" fg:x="4782" fg:w="14"/><text x="50.3495%" y="831.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (14 samples, 0.15%)</title><rect x="50.0995%" y="805" width="0.1467%" height="15" fill="rgb(227,221,40)" fg:x="4782" fg:w="14"/><text x="50.3495%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (14 samples, 0.15%)</title><rect x="50.0995%" y="789" width="0.1467%" height="15" fill="rgb(233,151,11)" fg:x="4782" fg:w="14"/><text x="50.3495%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (14 samples, 0.15%)</title><rect x="50.0995%" y="773" width="0.1467%" height="15" fill="rgb(247,81,35)" fg:x="4782" fg:w="14"/><text x="50.3495%" y="783.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (14 samples, 0.15%)</title><rect x="50.0995%" y="757" width="0.1467%" height="15" fill="rgb(243,128,48)" fg:x="4782" fg:w="14"/><text x="50.3495%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="50.2357%" y="741" width="0.0105%" height="15" fill="rgb(253,16,10)" fg:x="4795" fg:w="1"/><text x="50.4857%" y="751.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (15 samples, 0.16%)</title><rect x="50.0995%" y="837" width="0.1572%" height="15" fill="rgb(228,67,27)" fg:x="4782" fg:w="15"/><text x="50.3495%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.01%)</title><rect x="50.2462%" y="821" width="0.0105%" height="15" fill="rgb(231,105,25)" fg:x="4796" fg:w="1"/><text x="50.4962%" y="831.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="50.2462%" y="805" width="0.0105%" height="15" fill="rgb(213,166,47)" fg:x="4796" fg:w="1"/><text x="50.4962%" y="815.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="50.2462%" y="789" width="0.0105%" height="15" fill="rgb(209,27,10)" fg:x="4796" fg:w="1"/><text x="50.4962%" y="799.50"></text></g><g><title>hashbrown::map::make_insert_hash (26 samples, 0.27%)</title><rect x="50.0367%" y="869" width="0.2724%" height="15" fill="rgb(241,44,30)" fg:x="4776" fg:w="26"/><text x="50.2867%" y="879.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (20 samples, 0.21%)</title><rect x="50.0995%" y="853" width="0.2095%" height="15" fill="rgb(223,216,15)" fg:x="4782" fg:w="20"/><text x="50.3495%" y="863.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (5 samples, 0.05%)</title><rect x="50.2567%" y="837" width="0.0524%" height="15" fill="rgb(227,14,7)" fg:x="4797" fg:w="5"/><text x="50.5067%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="50.3091%" y="853" width="0.0210%" height="15" fill="rgb(237,14,5)" fg:x="4802" fg:w="2"/><text x="50.5591%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="50.3091%" y="837" width="0.0210%" height="15" fill="rgb(232,14,36)" fg:x="4802" fg:w="2"/><text x="50.5591%" y="847.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="50.3195%" y="821" width="0.0105%" height="15" fill="rgb(234,0,38)" fg:x="4803" fg:w="1"/><text x="50.5695%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="50.3300%" y="853" width="0.0314%" height="15" fill="rgb(207,170,14)" fg:x="4804" fg:w="3"/><text x="50.5800%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="50.3300%" y="837" width="0.0314%" height="15" fill="rgb(252,45,13)" fg:x="4804" fg:w="3"/><text x="50.5800%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="50.3300%" y="821" width="0.0314%" height="15" fill="rgb(213,142,7)" fg:x="4804" fg:w="3"/><text x="50.5800%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.03%)</title><rect x="50.3300%" y="805" width="0.0314%" height="15" fill="rgb(216,157,23)" fg:x="4804" fg:w="3"/><text x="50.5800%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.03%)</title><rect x="50.3300%" y="789" width="0.0314%" height="15" fill="rgb(212,145,33)" fg:x="4804" fg:w="3"/><text x="50.5800%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="50.3300%" y="773" width="0.0314%" height="15" fill="rgb(233,26,13)" fg:x="4804" fg:w="3"/><text x="50.5800%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.08%)</title><rect x="50.3091%" y="869" width="0.0838%" height="15" fill="rgb(219,196,19)" fg:x="4802" fg:w="8"/><text x="50.5591%" y="879.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (3 samples, 0.03%)</title><rect x="50.3614%" y="853" width="0.0314%" height="15" fill="rgb(246,56,21)" fg:x="4807" fg:w="3"/><text x="50.6114%" y="863.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="50.3614%" y="837" width="0.0314%" height="15" fill="rgb(222,28,53)" fg:x="4807" fg:w="3"/><text x="50.6114%" y="847.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="50.3614%" y="821" width="0.0314%" height="15" fill="rgb(224,5,27)" fg:x="4807" fg:w="3"/><text x="50.6114%" y="831.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="50.3824%" y="805" width="0.0105%" height="15" fill="rgb(220,153,33)" fg:x="4809" fg:w="1"/><text x="50.6324%" y="815.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1 samples, 0.01%)</title><rect x="50.3824%" y="789" width="0.0105%" height="15" fill="rgb(226,58,19)" fg:x="4809" fg:w="1"/><text x="50.6324%" y="799.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.01%)</title><rect x="50.3824%" y="773" width="0.0105%" height="15" fill="rgb(239,112,23)" fg:x="4809" fg:w="1"/><text x="50.6324%" y="783.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare::{{closure}} (241 samples, 2.52%)</title><rect x="47.8785%" y="917" width="2.5249%" height="15" fill="rgb(251,213,20)" fg:x="4570" fg:w="241"/><text x="48.1285%" y="927.50">&lt;b..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (48 samples, 0.50%)</title><rect x="49.9005%" y="901" width="0.5029%" height="15" fill="rgb(215,181,21)" fg:x="4763" fg:w="48"/><text x="50.1505%" y="911.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (44 samples, 0.46%)</title><rect x="49.9424%" y="885" width="0.4610%" height="15" fill="rgb(240,8,35)" fg:x="4767" fg:w="44"/><text x="50.1924%" y="895.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="50.3929%" y="869" width="0.0105%" height="15" fill="rgb(232,203,3)" fg:x="4810" fg:w="1"/><text x="50.6429%" y="879.50"></text></g><g><title>bevy_ecs::storage::table::Column::set_unchecked (1 samples, 0.01%)</title><rect x="50.4034%" y="917" width="0.0105%" height="15" fill="rgb(214,202,43)" fg:x="4811" fg:w="1"/><text x="50.6534%" y="927.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::set_unchecked (1 samples, 0.01%)</title><rect x="50.4034%" y="901" width="0.0105%" height="15" fill="rgb(254,35,11)" fg:x="4811" fg:w="1"/><text x="50.6534%" y="911.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="50.4034%" y="885" width="0.0105%" height="15" fill="rgb(239,173,13)" fg:x="4811" fg:w="1"/><text x="50.6534%" y="895.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="50.4034%" y="869" width="0.0105%" height="15" fill="rgb(220,141,0)" fg:x="4811" fg:w="1"/><text x="50.6534%" y="879.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (244 samples, 2.56%)</title><rect x="47.8680%" y="965" width="2.5563%" height="15" fill="rgb(210,98,12)" fg:x="4569" fg:w="244"/><text x="48.1180%" y="975.50">be..</text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare (244 samples, 2.56%)</title><rect x="47.8680%" y="949" width="2.5563%" height="15" fill="rgb(254,153,22)" fg:x="4569" fg:w="244"/><text x="48.1180%" y="959.50">&lt;b..</text></g><g><title>bevy_ecs::world::World::resource_scope (243 samples, 2.55%)</title><rect x="47.8785%" y="933" width="2.5458%" height="15" fill="rgb(247,223,17)" fg:x="4570" fg:w="243"/><text x="48.1285%" y="943.50">be..</text></g><g><title>bevy_ecs::world::World::resource_scope (1 samples, 0.01%)</title><rect x="50.4138%" y="917" width="0.0105%" height="15" fill="rgb(246,56,7)" fg:x="4812" fg:w="1"/><text x="50.6638%" y="927.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key::{{closure}} (1 samples, 0.01%)</title><rect x="50.4243%" y="901" width="0.0105%" height="15" fill="rgb(240,226,12)" fg:x="4813" fg:w="1"/><text x="50.6743%" y="911.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::lt (1 samples, 0.01%)</title><rect x="50.4243%" y="885" width="0.0105%" height="15" fill="rgb(205,87,46)" fg:x="4813" fg:w="1"/><text x="50.6743%" y="895.50"></text></g><g><title>core::cmp::PartialOrd::lt (1 samples, 0.01%)</title><rect x="50.4243%" y="869" width="0.0105%" height="15" fill="rgb(245,214,51)" fg:x="4813" fg:w="1"/><text x="50.6743%" y="879.50"></text></g><g><title>&lt;bevy_render::render_graph::schedule::NodeIndices as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="50.4243%" y="853" width="0.0105%" height="15" fill="rgb(223,172,33)" fg:x="4813" fg:w="1"/><text x="50.6743%" y="863.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (2 samples, 0.02%)</title><rect x="50.4243%" y="949" width="0.0210%" height="15" fill="rgb(227,203,34)" fg:x="4813" fg:w="2"/><text x="50.6743%" y="959.50"></text></g><g><title>alloc::slice::merge_sort (2 samples, 0.02%)</title><rect x="50.4243%" y="933" width="0.0210%" height="15" fill="rgb(248,143,44)" fg:x="4813" fg:w="2"/><text x="50.6743%" y="943.50"></text></g><g><title>alloc::slice::insert_head (2 samples, 0.02%)</title><rect x="50.4243%" y="917" width="0.0210%" height="15" fill="rgb(226,162,5)" fg:x="4813" fg:w="2"/><text x="50.6743%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::slice::insert_head::InsertionHole&lt;(&amp;mut bevy_render::render_graph::node::NodeState,&amp;bevy_render::render_graph::schedule::NodeIndices)&gt;&gt; (1 samples, 0.01%)</title><rect x="50.4348%" y="901" width="0.0105%" height="15" fill="rgb(211,143,1)" fg:x="4814" fg:w="1"/><text x="50.6848%" y="911.50"></text></g><g><title>&lt;alloc::slice::insert_head::InsertionHole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="50.4348%" y="885" width="0.0105%" height="15" fill="rgb(224,96,15)" fg:x="4814" fg:w="1"/><text x="50.6848%" y="895.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="50.4348%" y="869" width="0.0105%" height="15" fill="rgb(222,4,38)" fg:x="4814" fg:w="1"/><text x="50.6848%" y="879.50"></text></g><g><title>bevy_render::render_graph::schedule::Stages::borrow (4 samples, 0.04%)</title><rect x="50.4243%" y="965" width="0.0419%" height="15" fill="rgb(253,228,15)" fg:x="4813" fg:w="4"/><text x="50.6743%" y="975.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="50.4453%" y="949" width="0.0210%" height="15" fill="rgb(242,194,12)" fg:x="4815" fg:w="2"/><text x="50.6953%" y="959.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="50.4453%" y="933" width="0.0210%" height="15" fill="rgb(214,177,31)" fg:x="4815" fg:w="2"/><text x="50.6953%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2 samples, 0.02%)</title><rect x="50.4453%" y="917" width="0.0210%" height="15" fill="rgb(226,58,51)" fg:x="4815" fg:w="2"/><text x="50.6953%" y="927.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="50.4453%" y="901" width="0.0210%" height="15" fill="rgb(250,119,16)" fg:x="4815" fg:w="2"/><text x="50.6953%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2 samples, 0.02%)</title><rect x="50.4453%" y="885" width="0.0210%" height="15" fill="rgb(223,128,53)" fg:x="4815" fg:w="2"/><text x="50.6953%" y="895.50"></text></g><g><title>alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="50.4453%" y="869" width="0.0210%" height="15" fill="rgb(251,199,15)" fg:x="4815" fg:w="2"/><text x="50.6953%" y="879.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="50.4453%" y="853" width="0.0210%" height="15" fill="rgb(235,168,42)" fg:x="4815" fg:w="2"/><text x="50.6953%" y="863.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="50.4557%" y="837" width="0.0105%" height="15" fill="rgb(250,210,17)" fg:x="4816" fg:w="1"/><text x="50.7057%" y="847.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="50.4662%" y="949" width="0.0105%" height="15" fill="rgb(226,36,41)" fg:x="4817" fg:w="1"/><text x="50.7162%" y="959.50"></text></g><g><title>&lt;lock_api::rwlock::RwLock&lt;R,T&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="50.4662%" y="933" width="0.0105%" height="15" fill="rgb(225,87,10)" fg:x="4817" fg:w="1"/><text x="50.7162%" y="943.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="50.4662%" y="917" width="0.0105%" height="15" fill="rgb(228,83,9)" fg:x="4817" fg:w="1"/><text x="50.7162%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.01%)</title><rect x="50.4662%" y="901" width="0.0105%" height="15" fill="rgb(225,16,36)" fg:x="4817" fg:w="1"/><text x="50.7162%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S&gt;::with_hasher (1 samples, 0.01%)</title><rect x="50.4662%" y="885" width="0.0105%" height="15" fill="rgb(242,198,13)" fg:x="4817" fg:w="1"/><text x="50.7162%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="50.4662%" y="869" width="0.0105%" height="15" fill="rgb(239,25,51)" fg:x="4817" fg:w="1"/><text x="50.7162%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::new_in (1 samples, 0.01%)</title><rect x="50.4662%" y="853" width="0.0105%" height="15" fill="rgb(239,28,37)" fg:x="4817" fg:w="1"/><text x="50.7162%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::static_empty (1 samples, 0.01%)</title><rect x="50.4662%" y="837" width="0.0105%" height="15" fill="rgb(234,70,17)" fg:x="4817" fg:w="1"/><text x="50.7162%" y="847.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::render_resources_node::RenderResourcesNode&lt;T&gt; as bevy_render::render_graph::node::Node&gt;::update (1 samples, 0.01%)</title><rect x="50.4767%" y="949" width="0.0105%" height="15" fill="rgb(231,215,53)" fg:x="4818" fg:w="1"/><text x="50.7267%" y="959.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (1 samples, 0.01%)</title><rect x="50.4872%" y="901" width="0.0105%" height="15" fill="rgb(218,140,42)" fg:x="4819" fg:w="1"/><text x="50.7372%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="50.4872%" y="885" width="0.0105%" height="15" fill="rgb(233,227,45)" fg:x="4819" fg:w="1"/><text x="50.7372%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (1 samples, 0.01%)</title><rect x="50.4872%" y="869" width="0.0105%" height="15" fill="rgb(225,189,21)" fg:x="4819" fg:w="1"/><text x="50.7372%" y="879.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="50.4872%" y="853" width="0.0105%" height="15" fill="rgb(237,176,54)" fg:x="4819" fg:w="1"/><text x="50.7372%" y="863.50"></text></g><g><title>&lt;bevy_window::window::WindowId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="50.4872%" y="837" width="0.0105%" height="15" fill="rgb(215,131,46)" fg:x="4819" fg:w="1"/><text x="50.7372%" y="847.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="50.4872%" y="821" width="0.0105%" height="15" fill="rgb(218,95,20)" fg:x="4819" fg:w="1"/><text x="50.7372%" y="831.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (1 samples, 0.01%)</title><rect x="50.4872%" y="805" width="0.0105%" height="15" fill="rgb(208,198,12)" fg:x="4819" fg:w="1"/><text x="50.7372%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (1 samples, 0.01%)</title><rect x="50.4872%" y="789" width="0.0105%" height="15" fill="rgb(239,107,50)" fg:x="4819" fg:w="1"/><text x="50.7372%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="50.4872%" y="773" width="0.0105%" height="15" fill="rgb(240,217,37)" fg:x="4819" fg:w="1"/><text x="50.7372%" y="783.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="50.4872%" y="757" width="0.0105%" height="15" fill="rgb(242,197,49)" fg:x="4819" fg:w="1"/><text x="50.7372%" y="767.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u64 (1 samples, 0.01%)</title><rect x="50.4872%" y="741" width="0.0105%" height="15" fill="rgb(219,171,17)" fg:x="4819" fg:w="1"/><text x="50.7372%" y="751.50"></text></g><g><title>uuid::v4::&lt;impl uuid::Uuid&gt;::new_v4 (1 samples, 0.01%)</title><rect x="50.4976%" y="901" width="0.0105%" height="15" fill="rgb(209,81,40)" fg:x="4820" fg:w="1"/><text x="50.7476%" y="911.50"></text></g><g><title>uuid::builder::Builder::set_variant (1 samples, 0.01%)</title><rect x="50.4976%" y="885" width="0.0105%" height="15" fill="rgb(237,156,30)" fg:x="4820" fg:w="1"/><text x="50.7476%" y="895.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (3 samples, 0.03%)</title><rect x="50.4872%" y="949" width="0.0314%" height="15" fill="rgb(212,127,16)" fg:x="4819" fg:w="3"/><text x="50.7372%" y="959.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::next_swap_chain_texture (3 samples, 0.03%)</title><rect x="50.4872%" y="933" width="0.0314%" height="15" fill="rgb(226,66,32)" fg:x="4819" fg:w="3"/><text x="50.7372%" y="943.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::try_next_swap_chain_texture (3 samples, 0.03%)</title><rect x="50.4872%" y="917" width="0.0314%" height="15" fill="rgb(245,22,46)" fg:x="4819" fg:w="3"/><text x="50.7372%" y="927.50"></text></g><g><title>wgpu::SwapChain::get_current_frame (1 samples, 0.01%)</title><rect x="50.5081%" y="901" width="0.0105%" height="15" fill="rgb(210,112,21)" fg:x="4821" fg:w="1"/><text x="50.7581%" y="911.50"></text></g><g><title>wgpu::SwapChain::get_current_frame (1 samples, 0.01%)</title><rect x="50.5081%" y="885" width="0.0105%" height="15" fill="rgb(207,118,39)" fg:x="4821" fg:w="1"/><text x="50.7581%" y="895.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="50.5186%" y="949" width="0.0210%" height="15" fill="rgb(205,206,35)" fg:x="4822" fg:w="2"/><text x="50.7686%" y="959.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_resources::WgpuResources as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="50.5186%" y="933" width="0.0210%" height="15" fill="rgb(222,120,2)" fg:x="4822" fg:w="2"/><text x="50.7686%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="50.5291%" y="917" width="0.0105%" height="15" fill="rgb(205,38,18)" fg:x="4823" fg:w="1"/><text x="50.7791%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="50.5291%" y="901" width="0.0105%" height="15" fill="rgb(226,61,2)" fg:x="4823" fg:w="1"/><text x="50.7791%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="50.5291%" y="885" width="0.0105%" height="15" fill="rgb(242,161,23)" fg:x="4823" fg:w="1"/><text x="50.7791%" y="895.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="50.6024%" y="933" width="0.0105%" height="15" fill="rgb(213,13,52)" fg:x="4830" fg:w="1"/><text x="50.8524%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="50.6024%" y="917" width="0.0105%" height="15" fill="rgb(246,209,47)" fg:x="4830" fg:w="1"/><text x="50.8524%" y="927.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next::{{closure}} (1 samples, 0.01%)</title><rect x="50.6024%" y="901" width="0.0105%" height="15" fill="rgb(214,41,3)" fg:x="4830" fg:w="1"/><text x="50.8524%" y="911.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="50.6024%" y="885" width="0.0105%" height="15" fill="rgb(236,119,38)" fg:x="4830" fg:w="1"/><text x="50.8524%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;,ahash::random_state::RandomState&gt;&gt;&gt; (14 samples, 0.15%)</title><rect x="50.6757%" y="901" width="0.1467%" height="15" fill="rgb(218,50,11)" fg:x="4837" fg:w="14"/><text x="50.9257%" y="911.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.15%)</title><rect x="50.6757%" y="885" width="0.1467%" height="15" fill="rgb(228,38,11)" fg:x="4837" fg:w="14"/><text x="50.9257%" y="895.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (14 samples, 0.15%)</title><rect x="50.6757%" y="869" width="0.1467%" height="15" fill="rgb(212,13,9)" fg:x="4837" fg:w="14"/><text x="50.9257%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (13 samples, 0.14%)</title><rect x="50.6862%" y="853" width="0.1362%" height="15" fill="rgb(208,211,9)" fg:x="4838" fg:w="13"/><text x="50.9362%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_sub (13 samples, 0.14%)</title><rect x="50.6862%" y="837" width="0.1362%" height="15" fill="rgb(239,39,32)" fg:x="4838" fg:w="13"/><text x="50.9362%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (27 samples, 0.28%)</title><rect x="50.8329%" y="853" width="0.2829%" height="15" fill="rgb(254,179,26)" fg:x="4852" fg:w="27"/><text x="51.0829%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (27 samples, 0.28%)</title><rect x="50.8329%" y="837" width="0.2829%" height="15" fill="rgb(249,165,28)" fg:x="4852" fg:w="27"/><text x="51.0829%" y="847.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (31 samples, 0.32%)</title><rect x="50.8224%" y="901" width="0.3248%" height="15" fill="rgb(225,59,50)" fg:x="4851" fg:w="31"/><text x="51.0724%" y="911.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (31 samples, 0.32%)</title><rect x="50.8224%" y="885" width="0.3248%" height="15" fill="rgb(209,122,5)" fg:x="4851" fg:w="31"/><text x="51.0724%" y="895.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (31 samples, 0.32%)</title><rect x="50.8224%" y="869" width="0.3248%" height="15" fill="rgb(214,65,34)" fg:x="4851" fg:w="31"/><text x="51.0724%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (3 samples, 0.03%)</title><rect x="51.1158%" y="853" width="0.0314%" height="15" fill="rgb(249,183,32)" fg:x="4879" fg:w="3"/><text x="51.3658%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (3 samples, 0.03%)</title><rect x="51.1158%" y="837" width="0.0314%" height="15" fill="rgb(218,122,24)" fg:x="4879" fg:w="3"/><text x="51.3658%" y="847.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="51.1472%" y="821" width="0.0105%" height="15" fill="rgb(224,109,18)" fg:x="4882" fg:w="1"/><text x="51.3972%" y="831.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="51.1472%" y="805" width="0.0105%" height="15" fill="rgb(210,68,50)" fg:x="4882" fg:w="1"/><text x="51.3972%" y="815.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="51.1472%" y="837" width="0.0419%" height="15" fill="rgb(212,184,34)" fg:x="4882" fg:w="4"/><text x="51.3972%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="51.1577%" y="821" width="0.0314%" height="15" fill="rgb(238,105,48)" fg:x="4883" fg:w="3"/><text x="51.4077%" y="831.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="51.2205%" y="725" width="0.0105%" height="15" fill="rgb(222,134,54)" fg:x="4889" fg:w="1"/><text x="51.4705%" y="735.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="51.2205%" y="709" width="0.0105%" height="15" fill="rgb(246,24,43)" fg:x="4889" fg:w="1"/><text x="51.4705%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (5 samples, 0.05%)</title><rect x="51.1891%" y="773" width="0.0524%" height="15" fill="rgb(227,169,22)" fg:x="4886" fg:w="5"/><text x="51.4391%" y="783.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="51.1891%" y="757" width="0.0524%" height="15" fill="rgb(253,152,4)" fg:x="4886" fg:w="5"/><text x="51.4391%" y="767.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (5 samples, 0.05%)</title><rect x="51.1891%" y="741" width="0.0524%" height="15" fill="rgb(219,158,36)" fg:x="4886" fg:w="5"/><text x="51.4391%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="51.2310%" y="725" width="0.0105%" height="15" fill="rgb(251,128,40)" fg:x="4890" fg:w="1"/><text x="51.4810%" y="735.50"></text></g><g><title>hashbrown::map::make_hash (13 samples, 0.14%)</title><rect x="51.1472%" y="853" width="0.1362%" height="15" fill="rgb(254,101,39)" fg:x="4882" fg:w="13"/><text x="51.3972%" y="863.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::hash::Hash&gt;::hash (9 samples, 0.09%)</title><rect x="51.1891%" y="837" width="0.0943%" height="15" fill="rgb(221,168,40)" fg:x="4886" fg:w="9"/><text x="51.4391%" y="847.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (9 samples, 0.09%)</title><rect x="51.1891%" y="821" width="0.0943%" height="15" fill="rgb(221,14,27)" fg:x="4886" fg:w="9"/><text x="51.4391%" y="831.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (9 samples, 0.09%)</title><rect x="51.1891%" y="805" width="0.0943%" height="15" fill="rgb(207,36,43)" fg:x="4886" fg:w="9"/><text x="51.4391%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (9 samples, 0.09%)</title><rect x="51.1891%" y="789" width="0.0943%" height="15" fill="rgb(240,172,53)" fg:x="4886" fg:w="9"/><text x="51.4391%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (4 samples, 0.04%)</title><rect x="51.2415%" y="773" width="0.0419%" height="15" fill="rgb(241,138,43)" fg:x="4891" fg:w="4"/><text x="51.4915%" y="783.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (4 samples, 0.04%)</title><rect x="51.2415%" y="757" width="0.0419%" height="15" fill="rgb(227,78,19)" fg:x="4891" fg:w="4"/><text x="51.4915%" y="767.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (4 samples, 0.04%)</title><rect x="51.2415%" y="741" width="0.0419%" height="15" fill="rgb(215,127,44)" fg:x="4891" fg:w="4"/><text x="51.4915%" y="751.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (4 samples, 0.04%)</title><rect x="51.2415%" y="725" width="0.0419%" height="15" fill="rgb(227,13,10)" fg:x="4891" fg:w="4"/><text x="51.4915%" y="735.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="51.2729%" y="709" width="0.0105%" height="15" fill="rgb(249,177,6)" fg:x="4894" fg:w="1"/><text x="51.5229%" y="719.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="51.2729%" y="693" width="0.0105%" height="15" fill="rgb(215,154,26)" fg:x="4894" fg:w="1"/><text x="51.5229%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="51.2834%" y="773" width="0.0105%" height="15" fill="rgb(250,168,20)" fg:x="4895" fg:w="1"/><text x="51.5334%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="51.2834%" y="789" width="0.0210%" height="15" fill="rgb(222,53,38)" fg:x="4895" fg:w="2"/><text x="51.5334%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="51.2939%" y="773" width="0.0105%" height="15" fill="rgb(245,154,5)" fg:x="4896" fg:w="1"/><text x="51.5439%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="51.2834%" y="805" width="0.0314%" height="15" fill="rgb(214,89,50)" fg:x="4895" fg:w="3"/><text x="51.5334%" y="815.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="51.3043%" y="789" width="0.0105%" height="15" fill="rgb(232,73,14)" fg:x="4897" fg:w="1"/><text x="51.5543%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="51.2834%" y="821" width="0.0524%" height="15" fill="rgb(230,101,20)" fg:x="4895" fg:w="5"/><text x="51.5334%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (2 samples, 0.02%)</title><rect x="51.3148%" y="805" width="0.0210%" height="15" fill="rgb(208,56,28)" fg:x="4898" fg:w="2"/><text x="51.5648%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.02%)</title><rect x="51.3148%" y="789" width="0.0210%" height="15" fill="rgb(247,205,22)" fg:x="4898" fg:w="2"/><text x="51.5648%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="51.3148%" y="773" width="0.0210%" height="15" fill="rgb(252,109,51)" fg:x="4898" fg:w="2"/><text x="51.5648%" y="783.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (2 samples, 0.02%)</title><rect x="51.3148%" y="757" width="0.0210%" height="15" fill="rgb(220,40,24)" fg:x="4898" fg:w="2"/><text x="51.5648%" y="767.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.07%)</title><rect x="51.3358%" y="821" width="0.0733%" height="15" fill="rgb(251,108,7)" fg:x="4900" fg:w="7"/><text x="51.5858%" y="831.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::cmp::PartialEq&gt;::eq (7 samples, 0.07%)</title><rect x="51.3358%" y="805" width="0.0733%" height="15" fill="rgb(238,102,51)" fg:x="4900" fg:w="7"/><text x="51.5858%" y="815.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (7 samples, 0.07%)</title><rect x="51.3358%" y="789" width="0.0733%" height="15" fill="rgb(219,149,34)" fg:x="4900" fg:w="7"/><text x="51.5858%" y="799.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (7 samples, 0.07%)</title><rect x="51.3358%" y="773" width="0.0733%" height="15" fill="rgb(239,70,0)" fg:x="4900" fg:w="7"/><text x="51.5858%" y="783.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (7 samples, 0.07%)</title><rect x="51.3358%" y="757" width="0.0733%" height="15" fill="rgb(246,214,23)" fg:x="4900" fg:w="7"/><text x="51.5858%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26 samples, 0.27%)</title><rect x="51.1472%" y="901" width="0.2724%" height="15" fill="rgb(239,221,51)" fg:x="4882" fg:w="26"/><text x="51.3972%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.27%)</title><rect x="51.1472%" y="885" width="0.2724%" height="15" fill="rgb(254,62,14)" fg:x="4882" fg:w="26"/><text x="51.3972%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.27%)</title><rect x="51.1472%" y="869" width="0.2724%" height="15" fill="rgb(253,57,33)" fg:x="4882" fg:w="26"/><text x="51.3972%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (13 samples, 0.14%)</title><rect x="51.2834%" y="853" width="0.1362%" height="15" fill="rgb(229,34,6)" fg:x="4895" fg:w="13"/><text x="51.5334%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (13 samples, 0.14%)</title><rect x="51.2834%" y="837" width="0.1362%" height="15" fill="rgb(235,191,23)" fg:x="4895" fg:w="13"/><text x="51.5334%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="51.4091%" y="821" width="0.0105%" height="15" fill="rgb(217,207,27)" fg:x="4907" fg:w="1"/><text x="51.6591%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="51.4091%" y="805" width="0.0105%" height="15" fill="rgb(232,41,44)" fg:x="4907" fg:w="1"/><text x="51.6591%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="51.4091%" y="789" width="0.0105%" height="15" fill="rgb(221,188,19)" fg:x="4907" fg:w="1"/><text x="51.6591%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="51.4091%" y="773" width="0.0105%" height="15" fill="rgb(245,180,45)" fg:x="4907" fg:w="1"/><text x="51.6591%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="51.4091%" y="757" width="0.0105%" height="15" fill="rgb(250,220,42)" fg:x="4907" fg:w="1"/><text x="51.6591%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="51.4091%" y="741" width="0.0105%" height="15" fill="rgb(234,16,34)" fg:x="4907" fg:w="1"/><text x="51.6591%" y="751.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (84 samples, 0.88%)</title><rect x="50.6129%" y="933" width="0.8800%" height="15" fill="rgb(233,217,23)" fg:x="4831" fg:w="84"/><text x="50.8629%" y="943.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (81 samples, 0.85%)</title><rect x="50.6443%" y="917" width="0.8486%" height="15" fill="rgb(209,22,46)" fg:x="4834" fg:w="81"/><text x="50.8943%" y="927.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (7 samples, 0.07%)</title><rect x="51.4196%" y="901" width="0.0733%" height="15" fill="rgb(213,101,18)" fg:x="4908" fg:w="7"/><text x="51.6696%" y="911.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (5 samples, 0.05%)</title><rect x="51.4405%" y="885" width="0.0524%" height="15" fill="rgb(215,179,52)" fg:x="4910" fg:w="5"/><text x="51.6905%" y="895.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (1 samples, 0.01%)</title><rect x="51.4825%" y="869" width="0.0105%" height="15" fill="rgb(223,50,25)" fg:x="4914" fg:w="1"/><text x="51.7325%" y="879.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (94 samples, 0.98%)</title><rect x="50.5395%" y="949" width="0.9848%" height="15" fill="rgb(224,51,44)" fg:x="4824" fg:w="94"/><text x="50.7895%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (3 samples, 0.03%)</title><rect x="51.4929%" y="933" width="0.0314%" height="15" fill="rgb(224,13,54)" fg:x="4915" fg:w="3"/><text x="51.7429%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (3 samples, 0.03%)</title><rect x="51.4929%" y="917" width="0.0314%" height="15" fill="rgb(219,58,47)" fg:x="4915" fg:w="3"/><text x="51.7429%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;,hashbrown::raw::RawTableInner&lt;alloc::alloc::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (3 samples, 0.03%)</title><rect x="51.4929%" y="901" width="0.0314%" height="15" fill="rgb(246,124,34)" fg:x="4915" fg:w="3"/><text x="51.7429%" y="911.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="51.4929%" y="885" width="0.0314%" height="15" fill="rgb(245,109,25)" fg:x="4915" fg:w="3"/><text x="51.7429%" y="895.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (3 samples, 0.03%)</title><rect x="51.4929%" y="869" width="0.0314%" height="15" fill="rgb(235,48,23)" fg:x="4915" fg:w="3"/><text x="51.7429%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (3 samples, 0.03%)</title><rect x="51.4929%" y="853" width="0.0314%" height="15" fill="rgb(229,203,36)" fg:x="4915" fg:w="3"/><text x="51.7429%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="51.4929%" y="837" width="0.0314%" height="15" fill="rgb(234,180,9)" fg:x="4915" fg:w="3"/><text x="51.7429%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="51.4929%" y="821" width="0.0314%" height="15" fill="rgb(228,98,45)" fg:x="4915" fg:w="3"/><text x="51.7429%" y="831.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (3 samples, 0.03%)</title><rect x="51.4929%" y="805" width="0.0314%" height="15" fill="rgb(240,24,36)" fg:x="4915" fg:w="3"/><text x="51.7429%" y="815.50"></text></g><g><title>bevy_render::render_graph::node_slot::ResourceSlots::iter (1 samples, 0.01%)</title><rect x="51.5244%" y="949" width="0.0105%" height="15" fill="rgb(227,154,19)" fg:x="4918" fg:w="1"/><text x="51.7744%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="51.5244%" y="933" width="0.0105%" height="15" fill="rgb(231,2,48)" fg:x="4918" fg:w="1"/><text x="51.7744%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (1 samples, 0.01%)</title><rect x="51.5244%" y="917" width="0.0105%" height="15" fill="rgb(219,216,0)" fg:x="4918" fg:w="1"/><text x="51.7744%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5348%" y="949" width="0.0105%" height="15" fill="rgb(251,88,0)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="959.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.5348%" y="933" width="0.0105%" height="15" fill="rgb(242,45,45)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="943.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="51.5348%" y="917" width="0.0105%" height="15" fill="rgb(218,149,45)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5348%" y="901" width="0.0105%" height="15" fill="rgb(247,194,10)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5348%" y="885" width="0.0105%" height="15" fill="rgb(234,33,37)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5348%" y="869" width="0.0105%" height="15" fill="rgb(218,61,13)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5348%" y="853" width="0.0105%" height="15" fill="rgb(210,80,52)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots)&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5348%" y="837" width="0.0105%" height="15" fill="rgb(218,203,27)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="847.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.5348%" y="821" width="0.0105%" height="15" fill="rgb(209,126,33)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="51.5348%" y="805" width="0.0105%" height="15" fill="rgb(234,173,41)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="51.5348%" y="789" width="0.0105%" height="15" fill="rgb(228,166,9)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="51.5348%" y="773" width="0.0105%" height="15" fill="rgb(208,124,43)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::render_graph::node::NodeId,bevy_render::render_graph::node_slot::ResourceSlots)&gt; (1 samples, 0.01%)</title><rect x="51.5348%" y="757" width="0.0105%" height="15" fill="rgb(212,154,38)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::node_slot::ResourceSlots&gt; (1 samples, 0.01%)</title><rect x="51.5348%" y="741" width="0.0105%" height="15" fill="rgb(246,179,35)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::node_slot::ResourceSlot&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5348%" y="725" width="0.0105%" height="15" fill="rgb(251,3,50)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_render::render_graph::node_slot::ResourceSlot&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5348%" y="709" width="0.0105%" height="15" fill="rgb(219,96,8)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.5348%" y="693" width="0.0105%" height="15" fill="rgb(251,216,33)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="51.5348%" y="677" width="0.0105%" height="15" fill="rgb(243,145,29)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="51.5348%" y="661" width="0.0105%" height="15" fill="rgb(210,75,20)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="671.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="51.5348%" y="645" width="0.0105%" height="15" fill="rgb(235,56,8)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="51.5348%" y="629" width="0.0105%" height="15" fill="rgb(226,175,49)" fg:x="4919" fg:w="1"/><text x="51.7848%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;,wgpu::RenderPipeline,ahash::random_state::RandomState&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5453%" y="933" width="0.0105%" height="15" fill="rgb(242,204,23)" fg:x="4920" fg:w="1"/><text x="51.7953%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.5453%" y="917" width="0.0105%" height="15" fill="rgb(225,104,24)" fg:x="4920" fg:w="1"/><text x="51.7953%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="51.5453%" y="901" width="0.0105%" height="15" fill="rgb(253,34,1)" fg:x="4920" fg:w="1"/><text x="51.7953%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="51.5453%" y="885" width="0.0105%" height="15" fill="rgb(233,199,23)" fg:x="4920" fg:w="1"/><text x="51.7953%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::texture::TextureId,wgpu::Texture,ahash::random_state::RandomState&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5558%" y="933" width="0.0105%" height="15" fill="rgb(247,7,51)" fg:x="4921" fg:w="1"/><text x="51.8058%" y="943.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.5558%" y="917" width="0.0105%" height="15" fill="rgb(214,146,12)" fg:x="4921" fg:w="1"/><text x="51.8058%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="51.5558%" y="901" width="0.0105%" height="15" fill="rgb(234,181,43)" fg:x="4921" fg:w="1"/><text x="51.8058%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="51.5558%" y="885" width="0.0105%" height="15" fill="rgb(239,148,6)" fg:x="4921" fg:w="1"/><text x="51.8058%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_resources::WgpuResources&gt; (3 samples, 0.03%)</title><rect x="51.5453%" y="949" width="0.0314%" height="15" fill="rgb(206,151,17)" fg:x="4920" fg:w="3"/><text x="51.7953%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_resources::BindGroupCounter&gt; (1 samples, 0.01%)</title><rect x="51.5663%" y="933" width="0.0105%" height="15" fill="rgb(213,215,10)" fg:x="4922" fg:w="1"/><text x="51.8163%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::channel::Sender&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5663%" y="917" width="0.0105%" height="15" fill="rgb(215,220,44)" fg:x="4922" fg:w="1"/><text x="51.8163%" y="927.50"></text></g><g><title>&lt;crossbeam_channel::channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.5663%" y="901" width="0.0105%" height="15" fill="rgb(245,205,37)" fg:x="4922" fg:w="1"/><text x="51.8163%" y="911.50"></text></g><g><title>crossbeam_channel::counter::Sender&lt;C&gt;::release (1 samples, 0.01%)</title><rect x="51.5663%" y="885" width="0.0105%" height="15" fill="rgb(245,130,43)" fg:x="4922" fg:w="1"/><text x="51.8163%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="51.5663%" y="869" width="0.0105%" height="15" fill="rgb(231,227,38)" fg:x="4922" fg:w="1"/><text x="51.8163%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="51.5663%" y="853" width="0.0105%" height="15" fill="rgb(233,185,4)" fg:x="4922" fg:w="1"/><text x="51.8163%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::channel::Receiver&lt;core::option::Option&lt;wgpu::CommandBuffer&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5767%" y="949" width="0.0105%" height="15" fill="rgb(224,154,43)" fg:x="4923" fg:w="1"/><text x="51.8267%" y="959.50"></text></g><g><title>&lt;crossbeam_channel::channel::Receiver&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.5767%" y="933" width="0.0105%" height="15" fill="rgb(235,156,15)" fg:x="4923" fg:w="1"/><text x="51.8267%" y="943.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::release (1 samples, 0.01%)</title><rect x="51.5767%" y="917" width="0.0105%" height="15" fill="rgb(211,55,43)" fg:x="4923" fg:w="1"/><text x="51.8267%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (1 samples, 0.01%)</title><rect x="51.5767%" y="901" width="0.0105%" height="15" fill="rgb(247,149,40)" fg:x="4923" fg:w="1"/><text x="51.8267%" y="911.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.01%)</title><rect x="51.5767%" y="885" width="0.0105%" height="15" fill="rgb(232,171,16)" fg:x="4923" fg:w="1"/><text x="51.8267%" y="895.50"></text></g><g><title>&lt;crossbeam_channel::flavors::array::Channel&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.5872%" y="837" width="0.0105%" height="15" fill="rgb(215,117,49)" fg:x="4924" fg:w="1"/><text x="51.8372%" y="847.50"></text></g><g><title>crossbeam_channel::flavors::array::Channel&lt;T&gt;::len (1 samples, 0.01%)</title><rect x="51.5872%" y="821" width="0.0105%" height="15" fill="rgb(246,194,11)" fg:x="4924" fg:w="1"/><text x="51.8372%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::channel::Sender&lt;core::option::Option&lt;wgpu::CommandBuffer&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="51.5872%" y="949" width="0.0210%" height="15" fill="rgb(242,101,44)" fg:x="4924" fg:w="2"/><text x="51.8372%" y="959.50"></text></g><g><title>&lt;crossbeam_channel::channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="51.5872%" y="933" width="0.0210%" height="15" fill="rgb(226,174,6)" fg:x="4924" fg:w="2"/><text x="51.8372%" y="943.50"></text></g><g><title>crossbeam_channel::counter::Sender&lt;C&gt;::release (2 samples, 0.02%)</title><rect x="51.5872%" y="917" width="0.0210%" height="15" fill="rgb(213,150,20)" fg:x="4924" fg:w="2"/><text x="51.8372%" y="927.50"></text></g><g><title>core::mem::drop (2 samples, 0.02%)</title><rect x="51.5872%" y="901" width="0.0210%" height="15" fill="rgb(222,124,42)" fg:x="4924" fg:w="2"/><text x="51.8372%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;crossbeam_channel::counter::Counter&lt;crossbeam_channel::flavors::array::Channel&lt;core::option::Option&lt;wgpu::CommandBuffer&gt;&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="51.5872%" y="885" width="0.0210%" height="15" fill="rgb(250,19,47)" fg:x="4924" fg:w="2"/><text x="51.8372%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::counter::Counter&lt;crossbeam_channel::flavors::array::Channel&lt;core::option::Option&lt;wgpu::CommandBuffer&gt;&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="51.5872%" y="869" width="0.0210%" height="15" fill="rgb(241,217,19)" fg:x="4924" fg:w="2"/><text x="51.8372%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::flavors::array::Channel&lt;core::option::Option&lt;wgpu::CommandBuffer&gt;&gt;&gt; (2 samples, 0.02%)</title><rect x="51.5872%" y="853" width="0.0210%" height="15" fill="rgb(207,210,34)" fg:x="4924" fg:w="2"/><text x="51.8372%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::waker::SyncWaker&gt; (1 samples, 0.01%)</title><rect x="51.5977%" y="837" width="0.0105%" height="15" fill="rgb(244,45,4)" fg:x="4925" fg:w="1"/><text x="51.8477%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::utils::Spinlock&lt;crossbeam_channel::waker::Waker&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5977%" y="821" width="0.0105%" height="15" fill="rgb(252,134,50)" fg:x="4925" fg:w="1"/><text x="51.8477%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;crossbeam_channel::waker::Waker&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5977%" y="805" width="0.0105%" height="15" fill="rgb(238,74,2)" fg:x="4925" fg:w="1"/><text x="51.8477%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;crossbeam_channel::waker::Waker&gt; (1 samples, 0.01%)</title><rect x="51.5977%" y="789" width="0.0105%" height="15" fill="rgb(226,58,46)" fg:x="4925" fg:w="1"/><text x="51.8477%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;crossbeam_channel::waker::Entry&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5977%" y="773" width="0.0105%" height="15" fill="rgb(232,83,35)" fg:x="4925" fg:w="1"/><text x="51.8477%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;crossbeam_channel::waker::Entry&gt;&gt; (1 samples, 0.01%)</title><rect x="51.5977%" y="757" width="0.0105%" height="15" fill="rgb(212,148,47)" fg:x="4925" fg:w="1"/><text x="51.8477%" y="767.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.5977%" y="741" width="0.0105%" height="15" fill="rgb(235,29,1)" fg:x="4925" fg:w="1"/><text x="51.8477%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="51.5977%" y="725" width="0.0105%" height="15" fill="rgb(247,55,37)" fg:x="4925" fg:w="1"/><text x="51.8477%" y="735.50"></text></g><g><title>bevy_winit::run (1,734 samples, 18.17%)</title><rect x="33.4521%" y="1237" width="18.1666%" height="15" fill="rgb(222,48,3)" fg:x="3193" fg:w="1734"/><text x="33.7021%" y="1247.50">bevy_winit::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (1,734 samples, 18.17%)</title><rect x="33.4521%" y="1221" width="18.1666%" height="15" fill="rgb(234,21,33)" fg:x="3193" fg:w="1734"/><text x="33.7021%" y="1231.50">winit::event_loop::EventLoop..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (1,734 samples, 18.17%)</title><rect x="33.4521%" y="1205" width="18.1666%" height="15" fill="rgb(247,178,53)" fg:x="3193" fg:w="1734"/><text x="33.7021%" y="1215.50">winit::platform_impl::platfo..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (1,734 samples, 18.17%)</title><rect x="33.4521%" y="1189" width="18.1666%" height="15" fill="rgb(225,75,7)" fg:x="3193" fg:w="1734"/><text x="33.7021%" y="1199.50">winit::platform_impl::platfo..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (1,734 samples, 18.17%)</title><rect x="33.4521%" y="1173" width="18.1666%" height="15" fill="rgb(219,199,7)" fg:x="3193" fg:w="1734"/><text x="33.7021%" y="1183.50">winit::platform_impl::platfo..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (1,723 samples, 18.05%)</title><rect x="33.5673%" y="1157" width="18.0513%" height="15" fill="rgb(209,93,42)" fg:x="3204" fg:w="1723"/><text x="33.8173%" y="1167.50">winit::platform_impl::platfo..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (1,723 samples, 18.05%)</title><rect x="33.5673%" y="1141" width="18.0513%" height="15" fill="rgb(240,175,17)" fg:x="3204" fg:w="1723"/><text x="33.8173%" y="1151.50">bevy_winit::winit_runner_wit..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1,723 samples, 18.05%)</title><rect x="33.5673%" y="1125" width="18.0513%" height="15" fill="rgb(232,106,7)" fg:x="3204" fg:w="1723"/><text x="33.8173%" y="1135.50">&lt;bevy_ecs::schedule::Schedul..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1,723 samples, 18.05%)</title><rect x="33.5673%" y="1109" width="18.0513%" height="15" fill="rgb(242,106,43)" fg:x="3204" fg:w="1723"/><text x="33.8173%" y="1119.50">bevy_ecs::schedule::Schedule..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1,709 samples, 17.90%)</title><rect x="33.7140%" y="1093" width="17.9047%" height="15" fill="rgb(242,61,37)" fg:x="3218" fg:w="1709"/><text x="33.9640%" y="1103.50">&lt;bevy_ecs::schedule::stage::..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (387 samples, 4.05%)</title><rect x="47.5642%" y="1077" width="4.0545%" height="15" fill="rgb(205,72,10)" fg:x="4540" fg:w="387"/><text x="47.8142%" y="1087.50">&lt;bev..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (387 samples, 4.05%)</title><rect x="47.5642%" y="1061" width="4.0545%" height="15" fill="rgb(214,184,36)" fg:x="4540" fg:w="387"/><text x="47.8142%" y="1071.50">&lt;all..</text></g><g><title>bevy_wgpu::get_wgpu_render_system::{{closure}} (383 samples, 4.01%)</title><rect x="47.6061%" y="1045" width="4.0126%" height="15" fill="rgb(206,107,18)" fg:x="4544" fg:w="383"/><text x="47.8561%" y="1055.50">bevy..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (383 samples, 4.01%)</title><rect x="47.6061%" y="1029" width="4.0126%" height="15" fill="rgb(210,75,5)" fg:x="4544" fg:w="383"/><text x="47.8561%" y="1039.50">bevy..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (372 samples, 3.90%)</title><rect x="47.7213%" y="1013" width="3.8973%" height="15" fill="rgb(205,3,19)" fg:x="4555" fg:w="372"/><text x="47.9713%" y="1023.50">bevy..</text></g><g><title>bevy_ecs::world::World::resource_scope (372 samples, 3.90%)</title><rect x="47.7213%" y="997" width="3.8973%" height="15" fill="rgb(207,181,42)" fg:x="4555" fg:w="372"/><text x="47.9713%" y="1007.50">bevy..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (372 samples, 3.90%)</title><rect x="47.7213%" y="981" width="3.8973%" height="15" fill="rgb(229,179,43)" fg:x="4555" fg:w="372"/><text x="47.9713%" y="991.50">bevy..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (110 samples, 1.15%)</title><rect x="50.4662%" y="965" width="1.1524%" height="15" fill="rgb(246,95,30)" fg:x="4817" fg:w="110"/><text x="50.7162%" y="975.50"></text></g><g><title>crossbeam_channel::channel::bounded (1 samples, 0.01%)</title><rect x="51.6082%" y="949" width="0.0105%" height="15" fill="rgb(234,144,45)" fg:x="4926" fg:w="1"/><text x="51.8582%" y="959.50"></text></g><g><title>crossbeam_channel::counter::new (1 samples, 0.01%)</title><rect x="51.6082%" y="933" width="0.0105%" height="15" fill="rgb(250,54,25)" fg:x="4926" fg:w="1"/><text x="51.8582%" y="943.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="51.6082%" y="917" width="0.0105%" height="15" fill="rgb(215,195,40)" fg:x="4926" fg:w="1"/><text x="51.8582%" y="927.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="51.6082%" y="901" width="0.0105%" height="15" fill="rgb(233,188,42)" fg:x="4926" fg:w="1"/><text x="51.8582%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="51.6082%" y="885" width="0.0105%" height="15" fill="rgb(247,227,35)" fg:x="4926" fg:w="1"/><text x="51.8582%" y="895.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="51.6082%" y="869" width="0.0105%" height="15" fill="rgb(249,124,27)" fg:x="4926" fg:w="1"/><text x="51.8582%" y="879.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="51.6082%" y="853" width="0.0105%" height="15" fill="rgb(219,207,25)" fg:x="4926" fg:w="1"/><text x="51.8582%" y="863.50"></text></g><g><title>__rdl_alloc (1 samples, 0.01%)</title><rect x="51.6082%" y="837" width="0.0105%" height="15" fill="rgb(241,216,47)" fg:x="4926" fg:w="1"/><text x="51.8582%" y="847.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (1 samples, 0.01%)</title><rect x="51.6082%" y="821" width="0.0105%" height="15" fill="rgb(233,82,50)" fg:x="4926" fg:w="1"/><text x="51.8582%" y="831.50"></text></g><g><title>std::sys::unix::alloc::aligned_malloc (1 samples, 0.01%)</title><rect x="51.6082%" y="805" width="0.0105%" height="15" fill="rgb(232,63,2)" fg:x="4926" fg:w="1"/><text x="51.8582%" y="815.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (1 samples, 0.01%)</title><rect x="51.6186%" y="1109" width="0.0105%" height="15" fill="rgb(236,184,28)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="1119.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (1 samples, 0.01%)</title><rect x="51.6186%" y="1093" width="0.0105%" height="15" fill="rgb(254,63,27)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="1103.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="51.6186%" y="1077" width="0.0105%" height="15" fill="rgb(253,106,28)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="51.6186%" y="1061" width="0.0105%" height="15" fill="rgb(225,141,39)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="1071.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="51.6186%" y="1045" width="0.0105%" height="15" fill="rgb(222,157,20)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="1055.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="51.6186%" y="1029" width="0.0105%" height="15" fill="rgb(210,190,9)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="1039.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="51.6186%" y="1013" width="0.0105%" height="15" fill="rgb(242,167,7)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (1 samples, 0.01%)</title><rect x="51.6186%" y="997" width="0.0105%" height="15" fill="rgb(227,82,41)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (1 samples, 0.01%)</title><rect x="51.6186%" y="981" width="0.0105%" height="15" fill="rgb(222,131,13)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (1 samples, 0.01%)</title><rect x="51.6186%" y="965" width="0.0105%" height="15" fill="rgb(221,98,26)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (1 samples, 0.01%)</title><rect x="51.6186%" y="949" width="0.0105%" height="15" fill="rgb(251,63,52)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="959.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (1 samples, 0.01%)</title><rect x="51.6186%" y="933" width="0.0105%" height="15" fill="rgb(246,25,43)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="943.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (1 samples, 0.01%)</title><rect x="51.6186%" y="917" width="0.0105%" height="15" fill="rgb(247,167,15)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="927.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (1 samples, 0.01%)</title><rect x="51.6186%" y="901" width="0.0105%" height="15" fill="rgb(240,104,42)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="911.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (1 samples, 0.01%)</title><rect x="51.6186%" y="885" width="0.0105%" height="15" fill="rgb(224,54,6)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="895.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="869" width="0.0105%" height="15" fill="rgb(244,108,35)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="853" width="0.0105%" height="15" fill="rgb(216,154,2)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="837" width="0.0105%" height="15" fill="rgb(222,8,47)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="821" width="0.0105%" height="15" fill="rgb(252,93,1)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="805" width="0.0105%" height="15" fill="rgb(223,226,51)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="789" width="0.0105%" height="15" fill="rgb(206,147,9)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="773" width="0.0105%" height="15" fill="rgb(248,180,41)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="757" width="0.0105%" height="15" fill="rgb(209,47,50)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="741" width="0.0105%" height="15" fill="rgb(243,65,31)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="725" width="0.0105%" height="15" fill="rgb(228,128,1)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="709" width="0.0105%" height="15" fill="rgb(231,192,16)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="693" width="0.0105%" height="15" fill="rgb(224,26,40)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="677" width="0.0105%" height="15" fill="rgb(214,192,17)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6186%" y="661" width="0.0105%" height="15" fill="rgb(225,147,18)" fg:x="4927" fg:w="1"/><text x="51.8686%" y="671.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="51.6291%" y="661" width="0.0105%" height="15" fill="rgb(205,35,11)" fg:x="4928" fg:w="1"/><text x="51.8791%" y="671.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (6 samples, 0.06%)</title><rect x="51.6291%" y="1045" width="0.0629%" height="15" fill="rgb(242,40,42)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="1055.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (6 samples, 0.06%)</title><rect x="51.6291%" y="1029" width="0.0629%" height="15" fill="rgb(250,170,13)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="1039.50"></text></g><g><title>wgpu::Device::create_swap_chain (6 samples, 0.06%)</title><rect x="51.6291%" y="1013" width="0.0629%" height="15" fill="rgb(240,161,28)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="1023.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (6 samples, 0.06%)</title><rect x="51.6291%" y="997" width="0.0629%" height="15" fill="rgb(245,179,12)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="1007.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (6 samples, 0.06%)</title><rect x="51.6291%" y="981" width="0.0629%" height="15" fill="rgb(250,92,32)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="991.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::configure_swapchain (6 samples, 0.06%)</title><rect x="51.6291%" y="965" width="0.0629%" height="15" fill="rgb(233,10,40)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="975.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_backend_vulkan::Device&gt;::create_swapchain (6 samples, 0.06%)</title><rect x="51.6291%" y="949" width="0.0629%" height="15" fill="rgb(217,98,1)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="959.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (6 samples, 0.06%)</title><rect x="51.6291%" y="933" width="0.0629%" height="15" fill="rgb(238,202,7)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="943.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::create_swapchain_khr (6 samples, 0.06%)</title><rect x="51.6291%" y="917" width="0.0629%" height="15" fill="rgb(222,91,3)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="927.50"></text></g><g><title>[libvulkan.so.1.2.187] (6 samples, 0.06%)</title><rect x="51.6291%" y="901" width="0.0629%" height="15" fill="rgb(211,170,49)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="911.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (6 samples, 0.06%)</title><rect x="51.6291%" y="885" width="0.0629%" height="15" fill="rgb(253,139,18)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="51.6291%" y="869" width="0.0629%" height="15" fill="rgb(222,4,43)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="51.6291%" y="853" width="0.0629%" height="15" fill="rgb(207,205,12)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="51.6291%" y="837" width="0.0629%" height="15" fill="rgb(216,159,46)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="51.6291%" y="821" width="0.0629%" height="15" fill="rgb(236,115,1)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="51.6291%" y="805" width="0.0629%" height="15" fill="rgb(251,35,33)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="51.6291%" y="789" width="0.0629%" height="15" fill="rgb(248,62,51)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="799.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (6 samples, 0.06%)</title><rect x="51.6291%" y="773" width="0.0629%" height="15" fill="rgb(254,180,19)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="51.6291%" y="757" width="0.0629%" height="15" fill="rgb(217,100,32)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="767.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (6 samples, 0.06%)</title><rect x="51.6291%" y="741" width="0.0629%" height="15" fill="rgb(224,71,22)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="751.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (6 samples, 0.06%)</title><rect x="51.6291%" y="725" width="0.0629%" height="15" fill="rgb(251,185,33)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="735.50"></text></g><g><title>xcb_request_check (6 samples, 0.06%)</title><rect x="51.6291%" y="709" width="0.0629%" height="15" fill="rgb(209,75,48)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="719.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.06%)</title><rect x="51.6291%" y="693" width="0.0629%" height="15" fill="rgb(253,190,16)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="703.50"></text></g><g><title>[libxcb.so.1.1.0] (6 samples, 0.06%)</title><rect x="51.6291%" y="677" width="0.0629%" height="15" fill="rgb(226,140,1)" fg:x="4928" fg:w="6"/><text x="51.8791%" y="687.50"></text></g><g><title>__GI___poll (5 samples, 0.05%)</title><rect x="51.6396%" y="661" width="0.0524%" height="15" fill="rgb(206,75,30)" fg:x="4929" fg:w="5"/><text x="51.8896%" y="671.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (1 samples, 0.01%)</title><rect x="51.6920%" y="997" width="0.0105%" height="15" fill="rgb(231,208,37)" fg:x="4934" fg:w="1"/><text x="51.9420%" y="1007.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (1 samples, 0.01%)</title><rect x="51.6920%" y="981" width="0.0105%" height="15" fill="rgb(238,136,40)" fg:x="4934" fg:w="1"/><text x="51.9420%" y="991.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6920%" y="965" width="0.0105%" height="15" fill="rgb(247,137,17)" fg:x="4934" fg:w="1"/><text x="51.9420%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6920%" y="949" width="0.0105%" height="15" fill="rgb(240,60,40)" fg:x="4934" fg:w="1"/><text x="51.9420%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6920%" y="933" width="0.0105%" height="15" fill="rgb(236,68,50)" fg:x="4934" fg:w="1"/><text x="51.9420%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6920%" y="917" width="0.0105%" height="15" fill="rgb(230,42,12)" fg:x="4934" fg:w="1"/><text x="51.9420%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6920%" y="901" width="0.0105%" height="15" fill="rgb(219,16,16)" fg:x="4934" fg:w="1"/><text x="51.9420%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.6920%" y="885" width="0.0105%" height="15" fill="rgb(220,38,35)" fg:x="4934" fg:w="1"/><text x="51.9420%" y="895.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (9 samples, 0.09%)</title><rect x="51.6186%" y="1237" width="0.0943%" height="15" fill="rgb(228,33,1)" fg:x="4927" fg:w="9"/><text x="51.8686%" y="1247.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (9 samples, 0.09%)</title><rect x="51.6186%" y="1221" width="0.0943%" height="15" fill="rgb(241,46,31)" fg:x="4927" fg:w="9"/><text x="51.8686%" y="1231.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (9 samples, 0.09%)</title><rect x="51.6186%" y="1205" width="0.0943%" height="15" fill="rgb(232,58,20)" fg:x="4927" fg:w="9"/><text x="51.8686%" y="1215.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (9 samples, 0.09%)</title><rect x="51.6186%" y="1189" width="0.0943%" height="15" fill="rgb(206,228,53)" fg:x="4927" fg:w="9"/><text x="51.8686%" y="1199.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (9 samples, 0.09%)</title><rect x="51.6186%" y="1173" width="0.0943%" height="15" fill="rgb(206,88,33)" fg:x="4927" fg:w="9"/><text x="51.8686%" y="1183.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (9 samples, 0.09%)</title><rect x="51.6186%" y="1157" width="0.0943%" height="15" fill="rgb(238,69,7)" fg:x="4927" fg:w="9"/><text x="51.8686%" y="1167.50"></text></g><g><title>bevy_wgpu::get_wgpu_render_system::{{closure}} (9 samples, 0.09%)</title><rect x="51.6186%" y="1141" width="0.0943%" height="15" fill="rgb(250,21,46)" fg:x="4927" fg:w="9"/><text x="51.8686%" y="1151.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (9 samples, 0.09%)</title><rect x="51.6186%" y="1125" width="0.0943%" height="15" fill="rgb(215,212,21)" fg:x="4927" fg:w="9"/><text x="51.8686%" y="1135.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (8 samples, 0.08%)</title><rect x="51.6291%" y="1109" width="0.0838%" height="15" fill="rgb(211,35,12)" fg:x="4928" fg:w="8"/><text x="51.8791%" y="1119.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (8 samples, 0.08%)</title><rect x="51.6291%" y="1093" width="0.0838%" height="15" fill="rgb(231,184,16)" fg:x="4928" fg:w="8"/><text x="51.8791%" y="1103.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (8 samples, 0.08%)</title><rect x="51.6291%" y="1077" width="0.0838%" height="15" fill="rgb(242,140,15)" fg:x="4928" fg:w="8"/><text x="51.8791%" y="1087.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (8 samples, 0.08%)</title><rect x="51.6291%" y="1061" width="0.0838%" height="15" fill="rgb(220,37,14)" fg:x="4928" fg:w="8"/><text x="51.8791%" y="1071.50"></text></g><g><title>wgpu::Queue::submit (2 samples, 0.02%)</title><rect x="51.6920%" y="1045" width="0.0210%" height="15" fill="rgb(223,146,22)" fg:x="4934" fg:w="2"/><text x="51.9420%" y="1055.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (2 samples, 0.02%)</title><rect x="51.6920%" y="1029" width="0.0210%" height="15" fill="rgb(216,132,15)" fg:x="4934" fg:w="2"/><text x="51.9420%" y="1039.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (2 samples, 0.02%)</title><rect x="51.6920%" y="1013" width="0.0210%" height="15" fill="rgb(248,83,5)" fg:x="4934" fg:w="2"/><text x="51.9420%" y="1023.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_fence (1 samples, 0.01%)</title><rect x="51.7025%" y="997" width="0.0105%" height="15" fill="rgb(231,206,48)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="1007.50"></text></g><g><title>ash::device::DeviceV1_0::create_fence (1 samples, 0.01%)</title><rect x="51.7025%" y="981" width="0.0105%" height="15" fill="rgb(253,185,37)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.7025%" y="965" width="0.0105%" height="15" fill="rgb(208,21,44)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.7025%" y="949" width="0.0105%" height="15" fill="rgb(236,125,4)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.7025%" y="933" width="0.0105%" height="15" fill="rgb(226,134,25)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.7025%" y="917" width="0.0105%" height="15" fill="rgb(250,201,12)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.7025%" y="901" width="0.0105%" height="15" fill="rgb(225,92,18)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.7025%" y="885" width="0.0105%" height="15" fill="rgb(227,35,22)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.7025%" y="869" width="0.0105%" height="15" fill="rgb(214,180,52)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="51.7025%" y="853" width="0.0105%" height="15" fill="rgb(233,55,38)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="863.50"></text></g><g><title>__GI___snprintf (1 samples, 0.01%)</title><rect x="51.7025%" y="837" width="0.0105%" height="15" fill="rgb(249,171,43)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="847.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="51.7025%" y="821" width="0.0105%" height="15" fill="rgb(239,87,2)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="831.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="51.7025%" y="805" width="0.0105%" height="15" fill="rgb(248,141,5)" fg:x="4935" fg:w="1"/><text x="51.9525%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;gpu_alloc::buddy::BuddyBlock&lt;gfx_backend_vulkan::native::Memory&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7129%" y="629" width="0.0105%" height="15" fill="rgb(238,33,42)" fg:x="4936" fg:w="1"/><text x="51.9629%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;gfx_backend_vulkan::native::Memory&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7129%" y="613" width="0.0105%" height="15" fill="rgb(231,57,19)" fg:x="4936" fg:w="1"/><text x="51.9629%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7129%" y="597" width="0.0105%" height="15" fill="rgb(214,78,53)" fg:x="4936" fg:w="1"/><text x="51.9629%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="51.7129%" y="581" width="0.0105%" height="15" fill="rgb(206,132,29)" fg:x="4936" fg:w="1"/><text x="51.9629%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="51.7129%" y="565" width="0.0105%" height="15" fill="rgb(248,174,31)" fg:x="4936" fg:w="1"/><text x="51.9629%" y="575.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::rwlock::RwLockReadGuard&lt;std::collections::hash::map::HashMap&lt;tracing_core::span::Id,tracing_subscriber::filter::env::directive::MatchSet&lt;tracing_subscriber::filter::env::field::SpanMatch&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7234%" y="501" width="0.0105%" height="15" fill="rgb(221,87,13)" fg:x="4937" fg:w="1"/><text x="51.9734%" y="511.50"></text></g><g><title>&lt;std::sync::rwlock::RwLockReadGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7234%" y="485" width="0.0105%" height="15" fill="rgb(223,197,17)" fg:x="4937" fg:w="1"/><text x="51.9734%" y="495.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read_unlock (1 samples, 0.01%)</title><rect x="51.7234%" y="469" width="0.0105%" height="15" fill="rgb(220,144,50)" fg:x="4937" fg:w="1"/><text x="51.9734%" y="479.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read_unlock (1 samples, 0.01%)</title><rect x="51.7234%" y="453" width="0.0105%" height="15" fill="rgb(244,201,11)" fg:x="4937" fg:w="1"/><text x="51.9734%" y="463.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="51.7234%" y="437" width="0.0105%" height="15" fill="rgb(249,81,34)" fg:x="4937" fg:w="1"/><text x="51.9734%" y="447.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="51.7234%" y="421" width="0.0105%" height="15" fill="rgb(205,161,12)" fg:x="4937" fg:w="1"/><text x="51.9734%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::schedule::Schedule&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="1141" width="0.0314%" height="15" fill="rgb(252,139,50)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::boxed::Box&lt;dyn bevy_ecs::schedule::label::StageLabel&gt;,alloc::boxed::Box&lt;dyn bevy_ecs::schedule::stage::Stage&gt;,ahash::random_state::RandomState&gt;&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="1125" width="0.0314%" height="15" fill="rgb(205,169,14)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::boxed::Box&lt;dyn bevy_ecs::schedule::label::StageLabel&gt;,alloc::boxed::Box&lt;dyn bevy_ecs::schedule::stage::Stage&gt;,ahash::random_state::RandomState&gt;&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="1109" width="0.0314%" height="15" fill="rgb(248,198,33)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::boxed::Box&lt;dyn bevy_ecs::schedule::label::StageLabel&gt;,alloc::boxed::Box&lt;dyn bevy_ecs::schedule::stage::Stage&gt;)&gt;&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="1093" width="0.0314%" height="15" fill="rgb(236,23,21)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="1103.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="51.7129%" y="1077" width="0.0314%" height="15" fill="rgb(231,13,38)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="1087.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (3 samples, 0.03%)</title><rect x="51.7129%" y="1061" width="0.0314%" height="15" fill="rgb(239,139,21)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="1071.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.03%)</title><rect x="51.7129%" y="1045" width="0.0314%" height="15" fill="rgb(222,164,45)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="1055.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.03%)</title><rect x="51.7129%" y="1029" width="0.0314%" height="15" fill="rgb(230,52,27)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::boxed::Box&lt;dyn bevy_ecs::schedule::label::StageLabel&gt;,alloc::boxed::Box&lt;dyn bevy_ecs::schedule::stage::Stage&gt;)&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="1013" width="0.0314%" height="15" fill="rgb(227,143,42)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn bevy_ecs::schedule::stage::Stage&gt;&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="997" width="0.0314%" height="15" fill="rgb(249,127,1)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::schedule::stage::SystemStage&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="981" width="0.0314%" height="15" fill="rgb(243,107,26)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_ecs::schedule::system_container::ExclusiveSystemContainer&gt;&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="965" width="0.0314%" height="15" fill="rgb(225,7,45)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="975.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="51.7129%" y="949" width="0.0314%" height="15" fill="rgb(241,88,38)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_ecs::schedule::system_container::ExclusiveSystemContainer]&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="933" width="0.0314%" height="15" fill="rgb(226,121,9)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::schedule::system_container::ExclusiveSystemContainer&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="917" width="0.0314%" height="15" fill="rgb(253,60,29)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="901" width="0.0314%" height="15" fill="rgb(244,181,39)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="885" width="0.0314%" height="15" fill="rgb(252,203,31)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn core::ops::function::FnMut&lt;(&amp;mut bevy_ecs::world::World,)&gt;+Output = ()+core::marker::Sync+core::marker::Send&gt;&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="869" width="0.0314%" height="15" fill="rgb(224,120,8)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::get_wgpu_render_system::{{closure}}&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="853" width="0.0314%" height="15" fill="rgb(205,171,54)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_renderer::WgpuRenderer&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="837" width="0.0314%" height="15" fill="rgb(235,89,11)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Device&gt;&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="821" width="0.0314%" height="15" fill="rgb(212,180,28)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="51.7129%" y="805" width="0.0314%" height="15" fill="rgb(247,84,49)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (3 samples, 0.03%)</title><rect x="51.7129%" y="789" width="0.0314%" height="15" fill="rgb(236,187,52)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Device&gt; (3 samples, 0.03%)</title><rect x="51.7129%" y="773" width="0.0314%" height="15" fill="rgb(227,24,15)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_drop (3 samples, 0.03%)</title><rect x="51.7129%" y="757" width="0.0314%" height="15" fill="rgb(227,211,13)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (3 samples, 0.03%)</title><rect x="51.7129%" y="741" width="0.0314%" height="15" fill="rgb(245,52,14)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="751.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (3 samples, 0.03%)</title><rect x="51.7129%" y="725" width="0.0314%" height="15" fill="rgb(225,185,13)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="735.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (3 samples, 0.03%)</title><rect x="51.7129%" y="709" width="0.0314%" height="15" fill="rgb(217,160,29)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="719.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::clean (3 samples, 0.03%)</title><rect x="51.7129%" y="693" width="0.0314%" height="15" fill="rgb(216,115,53)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="703.50"></text></g><g><title>wgpu_core::device::alloc::MemoryAllocator&lt;B&gt;::free (3 samples, 0.03%)</title><rect x="51.7129%" y="677" width="0.0314%" height="15" fill="rgb(236,99,5)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="687.50"></text></g><g><title>gpu_alloc::allocator::GpuAllocator&lt;M&gt;::dealloc (3 samples, 0.03%)</title><rect x="51.7129%" y="661" width="0.0314%" height="15" fill="rgb(222,60,38)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="671.50"></text></g><g><title>gpu_alloc::buddy::BuddyAllocator&lt;M&gt;::dealloc (3 samples, 0.03%)</title><rect x="51.7129%" y="645" width="0.0314%" height="15" fill="rgb(212,82,22)" fg:x="4936" fg:w="3"/><text x="51.9629%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (2 samples, 0.02%)</title><rect x="51.7234%" y="629" width="0.0210%" height="15" fill="rgb(214,48,28)" fg:x="4937" fg:w="2"/><text x="51.9734%" y="639.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="51.7234%" y="613" width="0.0210%" height="15" fill="rgb(245,196,50)" fg:x="4937" fg:w="2"/><text x="51.9734%" y="623.50"></text></g><g><title>tracing_core::dispatcher::Dispatch::exit (2 samples, 0.02%)</title><rect x="51.7234%" y="597" width="0.0210%" height="15" fill="rgb(225,159,46)" fg:x="4937" fg:w="2"/><text x="51.9734%" y="607.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;dyn tracing_core::subscriber::Subscriber+core::marker::Sync+core::marker::Send&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.02%)</title><rect x="51.7234%" y="581" width="0.0210%" height="15" fill="rgb(207,195,48)" fg:x="4937" fg:w="2"/><text x="51.9734%" y="591.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.02%)</title><rect x="51.7234%" y="565" width="0.0210%" height="15" fill="rgb(240,73,3)" fg:x="4937" fg:w="2"/><text x="51.9734%" y="575.50"></text></g><g><title>&lt;tracing_subscriber::layer::Layered&lt;L,S&gt; as tracing_core::subscriber::Subscriber&gt;::exit (2 samples, 0.02%)</title><rect x="51.7234%" y="549" width="0.0210%" height="15" fill="rgb(245,57,23)" fg:x="4937" fg:w="2"/><text x="51.9734%" y="559.50"></text></g><g><title>&lt;tracing_subscriber::filter::env::EnvFilter as tracing_subscriber::layer::Layer&lt;S&gt;&gt;::on_exit (2 samples, 0.02%)</title><rect x="51.7234%" y="533" width="0.0210%" height="15" fill="rgb(240,75,18)" fg:x="4937" fg:w="2"/><text x="51.9734%" y="543.50"></text></g><g><title>tracing_subscriber::filter::env::EnvFilter::cares_about_span (2 samples, 0.02%)</title><rect x="51.7234%" y="517" width="0.0210%" height="15" fill="rgb(238,168,12)" fg:x="4937" fg:w="2"/><text x="51.9734%" y="527.50"></text></g><g><title>std::sync::rwlock::RwLock&lt;T&gt;::read (1 samples, 0.01%)</title><rect x="51.7339%" y="501" width="0.0105%" height="15" fill="rgb(226,20,40)" fg:x="4938" fg:w="1"/><text x="51.9839%" y="511.50"></text></g><g><title>std::sys_common::rwlock::MovableRWLock::read (1 samples, 0.01%)</title><rect x="51.7339%" y="485" width="0.0105%" height="15" fill="rgb(224,130,35)" fg:x="4938" fg:w="1"/><text x="51.9839%" y="495.50"></text></g><g><title>std::sys::unix::rwlock::RWLock::read (1 samples, 0.01%)</title><rect x="51.7339%" y="469" width="0.0105%" height="15" fill="rgb(225,63,41)" fg:x="4938" fg:w="1"/><text x="51.9839%" y="479.50"></text></g><g><title>__GI___pthread_rwlock_rdlock (1 samples, 0.01%)</title><rect x="51.7339%" y="453" width="0.0105%" height="15" fill="rgb(219,3,3)" fg:x="4938" fg:w="1"/><text x="51.9839%" y="463.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7444%" y="885" width="0.0105%" height="15" fill="rgb(218,157,4)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="51.7444%" y="869" width="0.0105%" height="15" fill="rgb(232,76,36)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="879.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="51.7444%" y="853" width="0.0105%" height="15" fill="rgb(247,36,0)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="863.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="51.7444%" y="837" width="0.0105%" height="15" fill="rgb(205,2,34)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_asset::handle::HandleUntyped,bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings)&gt; (1 samples, 0.01%)</title><rect x="51.7444%" y="821" width="0.0105%" height="15" fill="rgb(239,136,13)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings&gt; (1 samples, 0.01%)</title><rect x="51.7444%" y="805" width="0.0105%" height="15" fill="rgb(253,122,12)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7444%" y="789" width="0.0105%" height="15" fill="rgb(222,174,7)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7444%" y="773" width="0.0105%" height="15" fill="rgb(208,191,42)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding)&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7444%" y="757" width="0.0105%" height="15" fill="rgb(237,212,15)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7444%" y="741" width="0.0105%" height="15" fill="rgb(215,65,20)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="51.7444%" y="725" width="0.0105%" height="15" fill="rgb(232,103,11)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="51.7444%" y="709" width="0.0105%" height="15" fill="rgb(235,148,18)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="51.7444%" y="693" width="0.0105%" height="15" fill="rgb(240,173,7)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding)&gt; (1 samples, 0.01%)</title><rect x="51.7444%" y="677" width="0.0105%" height="15" fill="rgb(228,182,25)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="51.7444%" y="661" width="0.0105%" height="15" fill="rgb(247,3,52)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7444%" y="645" width="0.0105%" height="15" fill="rgb(226,155,8)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7444%" y="629" width="0.0105%" height="15" fill="rgb(243,195,38)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="639.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7444%" y="613" width="0.0105%" height="15" fill="rgb(254,181,33)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="51.7444%" y="597" width="0.0105%" height="15" fill="rgb(232,98,23)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="607.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="51.7444%" y="581" width="0.0105%" height="15" fill="rgb(205,23,10)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="591.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="51.7444%" y="565" width="0.0105%" height="15" fill="rgb(212,124,38)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="575.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="51.7444%" y="549" width="0.0105%" height="15" fill="rgb(228,207,2)" fg:x="4939" fg:w="1"/><text x="51.9944%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::archetype::Archetypes&gt; (2 samples, 0.02%)</title><rect x="51.7444%" y="1093" width="0.0210%" height="15" fill="rgb(215,120,22)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_ecs::archetype::Archetype&gt;&gt; (2 samples, 0.02%)</title><rect x="51.7444%" y="1077" width="0.0210%" height="15" fill="rgb(251,172,33)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="1087.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="51.7444%" y="1061" width="0.0210%" height="15" fill="rgb(250,83,2)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_ecs::archetype::Archetype]&gt; (2 samples, 0.02%)</title><rect x="51.7444%" y="1045" width="0.0210%" height="15" fill="rgb(210,132,53)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::archetype::Archetype&gt; (2 samples, 0.02%)</title><rect x="51.7444%" y="1029" width="0.0210%" height="15" fill="rgb(221,208,36)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::storage::sparse_set::SparseSet&lt;bevy_ecs::component::ComponentId,bevy_ecs::storage::table::Column&gt;&gt; (2 samples, 0.02%)</title><rect x="51.7444%" y="1013" width="0.0210%" height="15" fill="rgb(205,192,46)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_ecs::storage::table::Column&gt;&gt; (2 samples, 0.02%)</title><rect x="51.7444%" y="997" width="0.0210%" height="15" fill="rgb(223,163,14)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="1007.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="51.7444%" y="981" width="0.0210%" height="15" fill="rgb(218,41,28)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_ecs::storage::table::Column]&gt; (2 samples, 0.02%)</title><rect x="51.7444%" y="965" width="0.0210%" height="15" fill="rgb(235,104,10)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::storage::table::Column&gt; (2 samples, 0.02%)</title><rect x="51.7444%" y="949" width="0.0210%" height="15" fill="rgb(246,17,4)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::storage::blob_vec::BlobVec&gt; (2 samples, 0.02%)</title><rect x="51.7444%" y="933" width="0.0210%" height="15" fill="rgb(240,7,16)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="943.50"></text></g><g><title>&lt;bevy_ecs::storage::blob_vec::BlobVec as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="51.7444%" y="917" width="0.0210%" height="15" fill="rgb(213,160,23)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="927.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::clear (2 samples, 0.02%)</title><rect x="51.7444%" y="901" width="0.0210%" height="15" fill="rgb(251,179,49)" fg:x="4939" fg:w="2"/><text x="51.9944%" y="911.50"></text></g><g><title>bevy_ecs::component::type_info::TypeInfo::drop_ptr (1 samples, 0.01%)</title><rect x="51.7548%" y="885" width="0.0105%" height="15" fill="rgb(247,198,10)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="51.7548%" y="869" width="0.0105%" height="15" fill="rgb(220,65,29)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7548%" y="853" width="0.0105%" height="15" fill="rgb(237,171,28)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_resources::WgpuResources&gt; (1 samples, 0.01%)</title><rect x="51.7548%" y="837" width="0.0105%" height="15" fill="rgb(228,44,26)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;,ahash::random_state::RandomState&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7548%" y="821" width="0.0105%" height="15" fill="rgb(216,210,27)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7548%" y="805" width="0.0105%" height="15" fill="rgb(252,10,17)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="815.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="51.7548%" y="789" width="0.0105%" height="15" fill="rgb(214,172,30)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLock&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7548%" y="773" width="0.0105%" height="15" fill="rgb(253,130,48)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::UnsafeCell&lt;std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7548%" y="757" width="0.0105%" height="15" fill="rgb(226,99,43)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7548%" y="741" width="0.0105%" height="15" fill="rgb(239,111,26)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7548%" y="725" width="0.0105%" height="15" fill="rgb(240,27,53)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7548%" y="709" width="0.0105%" height="15" fill="rgb(254,163,12)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7548%" y="693" width="0.0105%" height="15" fill="rgb(225,51,48)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="51.7548%" y="677" width="0.0105%" height="15" fill="rgb(205,19,32)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="51.7548%" y="661" width="0.0105%" height="15" fill="rgb(218,119,26)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="51.7548%" y="645" width="0.0105%" height="15" fill="rgb(231,173,33)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;)&gt; (1 samples, 0.01%)</title><rect x="51.7548%" y="629" width="0.0105%" height="15" fill="rgb(241,100,29)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::Buffer&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7548%" y="613" width="0.0105%" height="15" fill="rgb(250,194,34)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7548%" y="597" width="0.0105%" height="15" fill="rgb(215,23,50)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="607.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="51.7548%" y="581" width="0.0105%" height="15" fill="rgb(206,49,37)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::Buffer&gt; (1 samples, 0.01%)</title><rect x="51.7548%" y="565" width="0.0105%" height="15" fill="rgb(247,39,21)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="575.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_drop (1 samples, 0.01%)</title><rect x="51.7548%" y="549" width="0.0105%" height="15" fill="rgb(209,220,15)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="559.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="51.7548%" y="533" width="0.0105%" height="15" fill="rgb(206,41,33)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="543.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (1 samples, 0.01%)</title><rect x="51.7548%" y="517" width="0.0105%" height="15" fill="rgb(221,225,45)" fg:x="4940" fg:w="1"/><text x="52.0048%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_winit::winit_runner_with::{{closure}}&gt; (3 samples, 0.03%)</title><rect x="51.7444%" y="1141" width="0.0314%" height="15" fill="rgb(216,27,18)" fg:x="4939" fg:w="3"/><text x="51.9944%" y="1151.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_app::app::App&gt; (3 samples, 0.03%)</title><rect x="51.7444%" y="1125" width="0.0314%" height="15" fill="rgb(250,193,34)" fg:x="4939" fg:w="3"/><text x="51.9944%" y="1135.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::world::World&gt; (3 samples, 0.03%)</title><rect x="51.7444%" y="1109" width="0.0314%" height="15" fill="rgb(227,215,20)" fg:x="4939" fg:w="3"/><text x="51.9944%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::storage::Storages&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="1093" width="0.0105%" height="15" fill="rgb(242,211,27)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="1103.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::storage::table::Tables&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="1077" width="0.0105%" height="15" fill="rgb(229,190,30)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="1087.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_ecs::storage::table::Table&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="1061" width="0.0105%" height="15" fill="rgb(253,31,29)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7653%" y="1045" width="0.0105%" height="15" fill="rgb(229,177,52)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_ecs::storage::table::Table]&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="1029" width="0.0105%" height="15" fill="rgb(226,88,8)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::storage::table::Table&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="1013" width="0.0105%" height="15" fill="rgb(214,55,27)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="1023.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::storage::sparse_set::SparseSet&lt;bevy_ecs::component::ComponentId,bevy_ecs::storage::table::Column&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="997" width="0.0105%" height="15" fill="rgb(233,202,5)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_ecs::storage::table::Column&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="981" width="0.0105%" height="15" fill="rgb(251,49,30)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7653%" y="965" width="0.0105%" height="15" fill="rgb(235,18,52)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_ecs::storage::table::Column]&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="949" width="0.0105%" height="15" fill="rgb(250,111,51)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::storage::table::Column&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="933" width="0.0105%" height="15" fill="rgb(218,13,25)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::storage::blob_vec::BlobVec&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="917" width="0.0105%" height="15" fill="rgb(248,96,7)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="927.50"></text></g><g><title>&lt;bevy_ecs::storage::blob_vec::BlobVec as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7653%" y="901" width="0.0105%" height="15" fill="rgb(217,31,15)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="911.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::clear (1 samples, 0.01%)</title><rect x="51.7653%" y="885" width="0.0105%" height="15" fill="rgb(228,59,49)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="869" width="0.0105%" height="15" fill="rgb(210,152,38)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;alloc::string::String,bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="853" width="0.0105%" height="15" fill="rgb(206,71,11)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;alloc::string::String,bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="837" width="0.0105%" height="15" fill="rgb(244,199,5)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(alloc::string::String,bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding)&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="821" width="0.0105%" height="15" fill="rgb(253,49,1)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7653%" y="805" width="0.0105%" height="15" fill="rgb(225,206,40)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="51.7653%" y="789" width="0.0105%" height="15" fill="rgb(243,116,47)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="799.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="51.7653%" y="773" width="0.0105%" height="15" fill="rgb(219,225,16)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="51.7653%" y="757" width="0.0105%" height="15" fill="rgb(233,29,47)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;(alloc::string::String,bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding)&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="741" width="0.0105%" height="15" fill="rgb(250,179,18)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="725" width="0.0105%" height="15" fill="rgb(215,176,6)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="709" width="0.0105%" height="15" fill="rgb(214,117,39)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (1 samples, 0.01%)</title><rect x="51.7653%" y="693" width="0.0105%" height="15" fill="rgb(247,183,36)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="703.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="51.7653%" y="677" width="0.0105%" height="15" fill="rgb(237,200,3)" fg:x="4941" fg:w="1"/><text x="52.0153%" y="687.50"></text></g><g><title>mio_extras::channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="51.7758%" y="1141" width="0.0105%" height="15" fill="rgb(212,220,24)" fg:x="4942" fg:w="1"/><text x="52.0258%" y="1151.50"></text></g><g><title>std::sync::mpsc::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="51.7758%" y="1125" width="0.0105%" height="15" fill="rgb(245,216,20)" fg:x="4942" fg:w="1"/><text x="52.0258%" y="1135.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1 samples, 0.01%)</title><rect x="51.7863%" y="1077" width="0.0105%" height="15" fill="rgb(219,124,7)" fg:x="4943" fg:w="1"/><text x="52.0363%" y="1087.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1 samples, 0.01%)</title><rect x="51.7863%" y="1061" width="0.0105%" height="15" fill="rgb(227,167,8)" fg:x="4943" fg:w="1"/><text x="52.0363%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1 samples, 0.01%)</title><rect x="51.7863%" y="1045" width="0.0105%" height="15" fill="rgb(241,37,2)" fg:x="4943" fg:w="1"/><text x="52.0363%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (1 samples, 0.01%)</title><rect x="51.7863%" y="1029" width="0.0105%" height="15" fill="rgb(238,134,33)" fg:x="4943" fg:w="1"/><text x="52.0363%" y="1039.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (1 samples, 0.01%)</title><rect x="51.7863%" y="1013" width="0.0105%" height="15" fill="rgb(248,48,27)" fg:x="4943" fg:w="1"/><text x="52.0363%" y="1023.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (1 samples, 0.01%)</title><rect x="51.7863%" y="997" width="0.0105%" height="15" fill="rgb(212,14,16)" fg:x="4943" fg:w="1"/><text x="52.0363%" y="1007.50"></text></g><g><title>bevy_ecs::world::World::entity_mut (1 samples, 0.01%)</title><rect x="51.7863%" y="981" width="0.0105%" height="15" fill="rgb(217,205,37)" fg:x="4943" fg:w="1"/><text x="52.0363%" y="991.50"></text></g><g><title>bevy_ecs::world::World::get_entity_mut (1 samples, 0.01%)</title><rect x="51.7863%" y="965" width="0.0105%" height="15" fill="rgb(233,185,47)" fg:x="4943" fg:w="1"/><text x="52.0363%" y="975.50"></text></g><g><title>bevy_ecs::entity::Entities::get (1 samples, 0.01%)</title><rect x="51.7863%" y="949" width="0.0105%" height="15" fill="rgb(244,88,8)" fg:x="4943" fg:w="1"/><text x="52.0363%" y="959.50"></text></g><g><title>&lt;&amp;mut alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="51.8282%" y="1061" width="0.0105%" height="15" fill="rgb(213,0,20)" fg:x="4947" fg:w="1"/><text x="52.0782%" y="1071.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="51.8282%" y="1045" width="0.0105%" height="15" fill="rgb(238,159,36)" fg:x="4947" fg:w="1"/><text x="52.0782%" y="1055.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="51.8282%" y="1029" width="0.0105%" height="15" fill="rgb(253,173,17)" fg:x="4947" fg:w="1"/><text x="52.0782%" y="1039.50"></text></g><g><title>bevy_ecs::world::World::get_resource_or_insert_with (1 samples, 0.01%)</title><rect x="51.8387%" y="1045" width="0.0105%" height="15" fill="rgb(221,23,28)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="1055.50"></text></g><g><title>bevy_ecs::world::World::contains_resource (1 samples, 0.01%)</title><rect x="51.8387%" y="1029" width="0.0105%" height="15" fill="rgb(218,113,15)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="1039.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (1 samples, 0.01%)</title><rect x="51.8387%" y="1013" width="0.0105%" height="15" fill="rgb(233,58,3)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="1023.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="51.8387%" y="997" width="0.0105%" height="15" fill="rgb(250,46,35)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="1007.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="51.8387%" y="981" width="0.0105%" height="15" fill="rgb(210,169,11)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="51.8387%" y="965" width="0.0105%" height="15" fill="rgb(246,88,19)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="51.8387%" y="949" width="0.0105%" height="15" fill="rgb(206,81,49)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="51.8387%" y="933" width="0.0105%" height="15" fill="rgb(232,144,18)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="51.8387%" y="917" width="0.0105%" height="15" fill="rgb(235,2,27)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="51.8387%" y="901" width="0.0105%" height="15" fill="rgb(239,157,39)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="911.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="51.8387%" y="885" width="0.0105%" height="15" fill="rgb(220,11,17)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="895.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="51.8387%" y="869" width="0.0105%" height="15" fill="rgb(243,94,50)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="879.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="51.8387%" y="853" width="0.0105%" height="15" fill="rgb(218,22,0)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="863.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1 samples, 0.01%)</title><rect x="51.8387%" y="837" width="0.0105%" height="15" fill="rgb(249,70,21)" fg:x="4948" fg:w="1"/><text x="52.0887%" y="847.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (3 samples, 0.03%)</title><rect x="51.8387%" y="1061" width="0.0314%" height="15" fill="rgb(245,111,46)" fg:x="4948" fg:w="3"/><text x="52.0887%" y="1071.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_tasks::usages::ComputeTaskPool&gt; (2 samples, 0.02%)</title><rect x="51.8491%" y="1045" width="0.0210%" height="15" fill="rgb(244,183,12)" fg:x="4949" fg:w="2"/><text x="52.0991%" y="1055.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_tasks::task_pool::TaskPool&gt; (2 samples, 0.02%)</title><rect x="51.8491%" y="1029" width="0.0210%" height="15" fill="rgb(207,117,0)" fg:x="4949" fg:w="2"/><text x="52.0991%" y="1039.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_executor::Executor&gt;&gt; (2 samples, 0.02%)</title><rect x="51.8491%" y="1013" width="0.0210%" height="15" fill="rgb(206,20,43)" fg:x="4949" fg:w="2"/><text x="52.0991%" y="1023.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="51.8491%" y="997" width="0.0210%" height="15" fill="rgb(221,104,11)" fg:x="4949" fg:w="2"/><text x="52.0991%" y="1007.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="51.8596%" y="981" width="0.0105%" height="15" fill="rgb(254,36,50)" fg:x="4950" fg:w="1"/><text x="52.1096%" y="991.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="51.8596%" y="965" width="0.0105%" height="15" fill="rgb(252,17,15)" fg:x="4950" fg:w="1"/><text x="52.1096%" y="975.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run::should_run (2 samples, 0.02%)</title><rect x="51.8701%" y="1061" width="0.0210%" height="15" fill="rgb(219,129,43)" fg:x="4951" fg:w="2"/><text x="52.1201%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="51.8701%" y="1045" width="0.0210%" height="15" fill="rgb(205,34,45)" fg:x="4951" fg:w="2"/><text x="52.1201%" y="1055.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (1 samples, 0.01%)</title><rect x="51.8910%" y="1061" width="0.0105%" height="15" fill="rgb(251,201,32)" fg:x="4953" fg:w="1"/><text x="52.1410%" y="1071.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (1 samples, 0.01%)</title><rect x="51.8910%" y="1045" width="0.0105%" height="15" fill="rgb(205,56,0)" fg:x="4953" fg:w="1"/><text x="52.1410%" y="1055.50"></text></g><g><title>bevy_ecs::world::World::flush (1 samples, 0.01%)</title><rect x="51.8910%" y="1029" width="0.0105%" height="15" fill="rgb(211,193,27)" fg:x="4953" fg:w="1"/><text x="52.1410%" y="1039.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="51.9015%" y="981" width="0.0105%" height="15" fill="rgb(231,100,42)" fg:x="4954" fg:w="1"/><text x="52.1515%" y="991.50"></text></g><g><title>&lt;crossbeam_channel::counter::Receiver&lt;C&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="51.9015%" y="965" width="0.0105%" height="15" fill="rgb(245,85,27)" fg:x="4954" fg:w="1"/><text x="52.1515%" y="975.50"></text></g><g><title>crossbeam_channel::counter::Receiver&lt;C&gt;::counter (1 samples, 0.01%)</title><rect x="51.9015%" y="949" width="0.0105%" height="15" fill="rgb(241,76,24)" fg:x="4954" fg:w="1"/><text x="52.1515%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (6 samples, 0.06%)</title><rect x="51.9120%" y="949" width="0.0629%" height="15" fill="rgb(249,157,15)" fg:x="4955" fg:w="6"/><text x="52.1620%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_or (6 samples, 0.06%)</title><rect x="51.9120%" y="933" width="0.0629%" height="15" fill="rgb(222,218,25)" fg:x="4955" fg:w="6"/><text x="52.1620%" y="943.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (10 samples, 0.10%)</title><rect x="51.9120%" y="965" width="0.1048%" height="15" fill="rgb(252,156,52)" fg:x="4955" fg:w="10"/><text x="52.1620%" y="975.50"></text></g><g><title>crossbeam_channel::flavors::list::Slot&lt;T&gt;::wait_write (4 samples, 0.04%)</title><rect x="51.9749%" y="949" width="0.0419%" height="15" fill="rgb(211,185,7)" fg:x="4961" fg:w="4"/><text x="52.2249%" y="959.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4 samples, 0.04%)</title><rect x="51.9749%" y="933" width="0.0419%" height="15" fill="rgb(234,108,24)" fg:x="4961" fg:w="4"/><text x="52.2249%" y="943.50"></text></g><g><title>core::sync::atomic::atomic_load (4 samples, 0.04%)</title><rect x="51.9749%" y="917" width="0.0419%" height="15" fill="rgb(227,218,2)" fg:x="4961" fg:w="4"/><text x="52.2249%" y="927.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (2 samples, 0.02%)</title><rect x="52.0272%" y="949" width="0.0210%" height="15" fill="rgb(224,0,36)" fg:x="4966" fg:w="2"/><text x="52.2772%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="52.0272%" y="933" width="0.0210%" height="15" fill="rgb(233,201,10)" fg:x="4966" fg:w="2"/><text x="52.2772%" y="943.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (11 samples, 0.12%)</title><rect x="52.0168%" y="965" width="0.1152%" height="15" fill="rgb(252,209,14)" fg:x="4965" fg:w="11"/><text x="52.2668%" y="975.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (8 samples, 0.08%)</title><rect x="52.0482%" y="949" width="0.0838%" height="15" fill="rgb(205,93,49)" fg:x="4968" fg:w="8"/><text x="52.2982%" y="959.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (8 samples, 0.08%)</title><rect x="52.0482%" y="933" width="0.0838%" height="15" fill="rgb(234,116,45)" fg:x="4968" fg:w="8"/><text x="52.2982%" y="943.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (23 samples, 0.24%)</title><rect x="51.9120%" y="981" width="0.2410%" height="15" fill="rgb(248,89,35)" fg:x="4955" fg:w="23"/><text x="52.1620%" y="991.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (2 samples, 0.02%)</title><rect x="52.1320%" y="965" width="0.0210%" height="15" fill="rgb(233,167,45)" fg:x="4976" fg:w="2"/><text x="52.3820%" y="975.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="52.1425%" y="949" width="0.0105%" height="15" fill="rgb(248,228,14)" fg:x="4977" fg:w="1"/><text x="52.3925%" y="959.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="52.1425%" y="933" width="0.0105%" height="15" fill="rgb(246,91,14)" fg:x="4977" fg:w="1"/><text x="52.3925%" y="943.50"></text></g><g><title>hashbrown::map::make_insert_hash (1 samples, 0.01%)</title><rect x="52.1530%" y="949" width="0.0105%" height="15" fill="rgb(227,142,5)" fg:x="4978" fg:w="1"/><text x="52.4030%" y="959.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="52.1530%" y="933" width="0.0105%" height="15" fill="rgb(221,63,33)" fg:x="4978" fg:w="1"/><text x="52.4030%" y="943.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.01%)</title><rect x="52.1530%" y="917" width="0.0105%" height="15" fill="rgb(233,49,0)" fg:x="4978" fg:w="1"/><text x="52.4030%" y="927.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="52.1530%" y="901" width="0.0105%" height="15" fill="rgb(251,115,38)" fg:x="4978" fg:w="1"/><text x="52.4030%" y="911.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="52.1530%" y="885" width="0.0105%" height="15" fill="rgb(231,214,32)" fg:x="4978" fg:w="1"/><text x="52.4030%" y="895.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="52.1530%" y="869" width="0.0105%" height="15" fill="rgb(248,73,46)" fg:x="4978" fg:w="1"/><text x="52.4030%" y="879.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="52.1530%" y="853" width="0.0105%" height="15" fill="rgb(237,156,4)" fg:x="4978" fg:w="1"/><text x="52.4030%" y="863.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::remove_stale_bind_groups (26 samples, 0.27%)</title><rect x="51.9015%" y="1029" width="0.2724%" height="15" fill="rgb(227,132,2)" fg:x="4954" fg:w="26"/><text x="52.1515%" y="1039.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::remove_stale_bind_groups (26 samples, 0.27%)</title><rect x="51.9015%" y="1013" width="0.2724%" height="15" fill="rgb(248,161,9)" fg:x="4954" fg:w="26"/><text x="52.1515%" y="1023.50"></text></g><g><title>bevy_wgpu::wgpu_resources::BindGroupCounter::remove_stale_bind_groups (26 samples, 0.27%)</title><rect x="51.9015%" y="997" width="0.2724%" height="15" fill="rgb(238,77,38)" fg:x="4954" fg:w="26"/><text x="52.1515%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="52.1530%" y="981" width="0.0210%" height="15" fill="rgb(222,166,40)" fg:x="4978" fg:w="2"/><text x="52.4030%" y="991.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="52.1530%" y="965" width="0.0210%" height="15" fill="rgb(214,168,45)" fg:x="4978" fg:w="2"/><text x="52.4030%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="52.1634%" y="949" width="0.0105%" height="15" fill="rgb(226,64,37)" fg:x="4979" fg:w="1"/><text x="52.4134%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="52.1634%" y="933" width="0.0105%" height="15" fill="rgb(232,210,43)" fg:x="4979" fg:w="1"/><text x="52.4134%" y="943.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="52.1634%" y="917" width="0.0105%" height="15" fill="rgb(214,76,33)" fg:x="4979" fg:w="1"/><text x="52.4134%" y="927.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="52.1634%" y="901" width="0.0105%" height="15" fill="rgb(210,78,5)" fg:x="4979" fg:w="1"/><text x="52.4134%" y="911.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="52.1634%" y="885" width="0.0105%" height="15" fill="rgb(211,107,37)" fg:x="4979" fg:w="1"/><text x="52.4134%" y="895.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (1 samples, 0.01%)</title><rect x="52.1739%" y="805" width="0.0105%" height="15" fill="rgb(249,67,16)" fg:x="4980" fg:w="1"/><text x="52.4239%" y="815.50"></text></g><g><title>bevy_ecs::world::World::get_resource_mut (2 samples, 0.02%)</title><rect x="52.1739%" y="1013" width="0.0210%" height="15" fill="rgb(222,114,31)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="1023.50"></text></g><g><title>bevy_ecs::world::World::get_resource_unchecked_mut (2 samples, 0.02%)</title><rect x="52.1739%" y="997" width="0.0210%" height="15" fill="rgb(242,118,19)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="1007.50"></text></g><g><title>bevy_ecs::component::Components::get_resource_id (2 samples, 0.02%)</title><rect x="52.1739%" y="981" width="0.0210%" height="15" fill="rgb(223,115,1)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="991.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (2 samples, 0.02%)</title><rect x="52.1739%" y="965" width="0.0210%" height="15" fill="rgb(241,182,54)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="975.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (2 samples, 0.02%)</title><rect x="52.1739%" y="949" width="0.0210%" height="15" fill="rgb(244,166,36)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="959.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="52.1739%" y="933" width="0.0210%" height="15" fill="rgb(241,52,43)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="943.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="52.1739%" y="917" width="0.0210%" height="15" fill="rgb(236,82,9)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="927.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="52.1739%" y="901" width="0.0210%" height="15" fill="rgb(241,119,0)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="52.1739%" y="885" width="0.0210%" height="15" fill="rgb(221,19,22)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="895.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="52.1739%" y="869" width="0.0210%" height="15" fill="rgb(254,144,35)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="52.1739%" y="853" width="0.0210%" height="15" fill="rgb(246,132,30)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="863.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="52.1739%" y="837" width="0.0210%" height="15" fill="rgb(234,69,28)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="847.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="52.1739%" y="821" width="0.0210%" height="15" fill="rgb(219,106,47)" fg:x="4980" fg:w="2"/><text x="52.4239%" y="831.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="52.1844%" y="805" width="0.0105%" height="15" fill="rgb(218,79,24)" fg:x="4981" fg:w="1"/><text x="52.4344%" y="815.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (3 samples, 0.03%)</title><rect x="52.1739%" y="1029" width="0.0314%" height="15" fill="rgb(225,26,21)" fg:x="4980" fg:w="3"/><text x="52.4239%" y="1039.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::set_schedule (1 samples, 0.01%)</title><rect x="52.1949%" y="1013" width="0.0105%" height="15" fill="rgb(217,68,49)" fg:x="4982" fg:w="1"/><text x="52.4449%" y="1023.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (2 samples, 0.02%)</title><rect x="52.2053%" y="997" width="0.0210%" height="15" fill="rgb(220,204,28)" fg:x="4983" fg:w="2"/><text x="52.4553%" y="1007.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (2 samples, 0.02%)</title><rect x="52.2053%" y="981" width="0.0210%" height="15" fill="rgb(237,208,43)" fg:x="4983" fg:w="2"/><text x="52.4553%" y="991.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (2 samples, 0.02%)</title><rect x="52.2053%" y="965" width="0.0210%" height="15" fill="rgb(213,97,42)" fg:x="4983" fg:w="2"/><text x="52.4553%" y="975.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (2 samples, 0.02%)</title><rect x="52.2053%" y="949" width="0.0210%" height="15" fill="rgb(238,96,52)" fg:x="4983" fg:w="2"/><text x="52.4553%" y="959.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (2 samples, 0.02%)</title><rect x="52.2053%" y="933" width="0.0210%" height="15" fill="rgb(228,14,13)" fg:x="4983" fg:w="2"/><text x="52.4553%" y="943.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (2 samples, 0.02%)</title><rect x="52.2053%" y="917" width="0.0210%" height="15" fill="rgb(219,123,13)" fg:x="4983" fg:w="2"/><text x="52.4553%" y="927.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (2 samples, 0.02%)</title><rect x="52.2053%" y="901" width="0.0210%" height="15" fill="rgb(216,144,17)" fg:x="4983" fg:w="2"/><text x="52.4553%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (2 samples, 0.02%)</title><rect x="52.2053%" y="885" width="0.0210%" height="15" fill="rgb(230,228,29)" fg:x="4983" fg:w="2"/><text x="52.4553%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (2 samples, 0.02%)</title><rect x="52.2053%" y="869" width="0.0210%" height="15" fill="rgb(233,18,5)" fg:x="4983" fg:w="2"/><text x="52.4553%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (2 samples, 0.02%)</title><rect x="52.2053%" y="853" width="0.0210%" height="15" fill="rgb(233,197,12)" fg:x="4983" fg:w="2"/><text x="52.4553%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::TextureView&gt; (2 samples, 0.02%)</title><rect x="52.2053%" y="837" width="0.0210%" height="15" fill="rgb(234,140,29)" fg:x="4983" fg:w="2"/><text x="52.4553%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;wgpu::backend::direct::Context&gt;&gt; (1 samples, 0.01%)</title><rect x="52.2158%" y="821" width="0.0105%" height="15" fill="rgb(233,113,19)" fg:x="4984" fg:w="1"/><text x="52.4658%" y="831.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.2158%" y="805" width="0.0105%" height="15" fill="rgb(246,209,13)" fg:x="4984" fg:w="1"/><text x="52.4658%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="52.2158%" y="789" width="0.0105%" height="15" fill="rgb(242,79,54)" fg:x="4984" fg:w="1"/><text x="52.4658%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="52.2158%" y="773" width="0.0105%" height="15" fill="rgb(219,73,16)" fg:x="4984" fg:w="1"/><text x="52.4658%" y="783.50"></text></g><g><title>bevy_ecs::world::world_cell::WorldCell::get_resource_mut (1 samples, 0.01%)</title><rect x="52.2263%" y="981" width="0.0105%" height="15" fill="rgb(224,52,10)" fg:x="4985" fg:w="1"/><text x="52.4763%" y="991.50"></text></g><g><title>bevy_ecs::archetype::Archetype::get_archetype_component_id (1 samples, 0.01%)</title><rect x="52.2263%" y="965" width="0.0105%" height="15" fill="rgb(237,179,5)" fg:x="4985" fg:w="1"/><text x="52.4763%" y="975.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="52.2263%" y="949" width="0.0105%" height="15" fill="rgb(231,20,6)" fg:x="4985" fg:w="1"/><text x="52.4763%" y="959.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="52.2263%" y="933" width="0.0105%" height="15" fill="rgb(253,171,45)" fg:x="4985" fg:w="1"/><text x="52.4763%" y="943.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="52.2263%" y="917" width="0.0105%" height="15" fill="rgb(230,75,49)" fg:x="4985" fg:w="1"/><text x="52.4763%" y="927.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get::{{closure}} (1 samples, 0.01%)</title><rect x="52.2263%" y="901" width="0.0105%" height="15" fill="rgb(216,83,46)" fg:x="4985" fg:w="1"/><text x="52.4763%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="52.2263%" y="885" width="0.0105%" height="15" fill="rgb(236,56,9)" fg:x="4985" fg:w="1"/><text x="52.4763%" y="895.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::handle_window_created_events (2 samples, 0.02%)</title><rect x="52.2263%" y="997" width="0.0210%" height="15" fill="rgb(215,28,34)" fg:x="4985" fg:w="2"/><text x="52.4763%" y="1007.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_ecs::world::world_cell::WorldCell&gt; (1 samples, 0.01%)</title><rect x="52.2368%" y="981" width="0.0105%" height="15" fill="rgb(230,222,20)" fg:x="4986" fg:w="1"/><text x="52.4868%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::rc::Rc&lt;core::cell::RefCell&lt;bevy_ecs::world::world_cell::ArchetypeComponentAccess&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="52.2368%" y="965" width="0.0105%" height="15" fill="rgb(235,209,51)" fg:x="4986" fg:w="1"/><text x="52.4868%" y="975.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="52.2368%" y="949" width="0.0105%" height="15" fill="rgb(235,167,1)" fg:x="4986" fg:w="1"/><text x="52.4868%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::StageBorrow&gt;&gt; (1 samples, 0.01%)</title><rect x="52.2472%" y="949" width="0.0105%" height="15" fill="rgb(248,220,0)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="959.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.2472%" y="933" width="0.0105%" height="15" fill="rgb(239,0,18)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::StageBorrow]&gt; (1 samples, 0.01%)</title><rect x="52.2472%" y="917" width="0.0105%" height="15" fill="rgb(229,179,11)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::StageBorrow&gt; (1 samples, 0.01%)</title><rect x="52.2472%" y="901" width="0.0105%" height="15" fill="rgb(226,116,53)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::OrderedJobBorrow&gt;&gt; (1 samples, 0.01%)</title><rect x="52.2472%" y="885" width="0.0105%" height="15" fill="rgb(218,1,49)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.2472%" y="869" width="0.0105%" height="15" fill="rgb(208,184,47)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::OrderedJobBorrow]&gt; (1 samples, 0.01%)</title><rect x="52.2472%" y="853" width="0.0105%" height="15" fill="rgb(238,174,3)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::OrderedJobBorrow&gt; (1 samples, 0.01%)</title><rect x="52.2472%" y="837" width="0.0105%" height="15" fill="rgb(247,188,6)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;&amp;mut bevy_render::render_graph::node::NodeState&gt;&gt; (1 samples, 0.01%)</title><rect x="52.2472%" y="821" width="0.0105%" height="15" fill="rgb(211,165,46)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;mut bevy_render::render_graph::node::NodeState&gt;&gt; (1 samples, 0.01%)</title><rect x="52.2472%" y="805" width="0.0105%" height="15" fill="rgb(222,190,10)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.2472%" y="789" width="0.0105%" height="15" fill="rgb(206,185,3)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="52.2472%" y="773" width="0.0105%" height="15" fill="rgb(244,125,37)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="52.2472%" y="757" width="0.0105%" height="15" fill="rgb(211,43,7)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="52.2472%" y="741" width="0.0105%" height="15" fill="rgb(250,41,42)" fg:x="4987" fg:w="1"/><text x="52.4972%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::Stage&gt;&gt; (2 samples, 0.02%)</title><rect x="52.2577%" y="933" width="0.0210%" height="15" fill="rgb(254,54,42)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="943.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="52.2577%" y="917" width="0.0210%" height="15" fill="rgb(213,71,43)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::Stage]&gt; (2 samples, 0.02%)</title><rect x="52.2577%" y="901" width="0.0210%" height="15" fill="rgb(249,3,44)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::Stage&gt; (2 samples, 0.02%)</title><rect x="52.2577%" y="885" width="0.0210%" height="15" fill="rgb(229,80,41)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::schedule::OrderedJob&gt;&gt; (2 samples, 0.02%)</title><rect x="52.2577%" y="869" width="0.0210%" height="15" fill="rgb(231,25,28)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="52.2577%" y="853" width="0.0210%" height="15" fill="rgb(208,79,48)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::render_graph::schedule::OrderedJob]&gt; (2 samples, 0.02%)</title><rect x="52.2577%" y="837" width="0.0210%" height="15" fill="rgb(207,196,38)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::OrderedJob&gt; (2 samples, 0.02%)</title><rect x="52.2577%" y="821" width="0.0210%" height="15" fill="rgb(228,105,49)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_render::render_graph::node::NodeId&gt;&gt; (2 samples, 0.02%)</title><rect x="52.2577%" y="805" width="0.0210%" height="15" fill="rgb(237,99,15)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_render::render_graph::node::NodeId&gt;&gt; (2 samples, 0.02%)</title><rect x="52.2577%" y="789" width="0.0210%" height="15" fill="rgb(224,207,46)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="799.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="52.2577%" y="773" width="0.0210%" height="15" fill="rgb(249,117,50)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="783.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (2 samples, 0.02%)</title><rect x="52.2577%" y="757" width="0.0210%" height="15" fill="rgb(248,17,13)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="767.50"></text></g><g><title>alloc::alloc::dealloc (2 samples, 0.02%)</title><rect x="52.2577%" y="741" width="0.0210%" height="15" fill="rgb(228,187,36)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="751.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="52.2577%" y="725" width="0.0210%" height="15" fill="rgb(234,132,20)" fg:x="4988" fg:w="2"/><text x="52.5077%" y="735.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="52.2682%" y="709" width="0.0105%" height="15" fill="rgb(209,170,46)" fg:x="4989" fg:w="1"/><text x="52.5182%" y="719.50"></text></g><g><title>bevy_wgpu::get_wgpu_render_system::{{closure}} (8 samples, 0.08%)</title><rect x="52.2053%" y="1029" width="0.0838%" height="15" fill="rgb(237,23,19)" fg:x="4983" fg:w="8"/><text x="52.4553%" y="1039.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (8 samples, 0.08%)</title><rect x="52.2053%" y="1013" width="0.0838%" height="15" fill="rgb(227,21,26)" fg:x="4983" fg:w="8"/><text x="52.4553%" y="1023.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (4 samples, 0.04%)</title><rect x="52.2472%" y="997" width="0.0419%" height="15" fill="rgb(222,220,48)" fg:x="4987" fg:w="4"/><text x="52.4972%" y="1007.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (4 samples, 0.04%)</title><rect x="52.2472%" y="981" width="0.0419%" height="15" fill="rgb(214,9,16)" fg:x="4987" fg:w="4"/><text x="52.4972%" y="991.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (4 samples, 0.04%)</title><rect x="52.2472%" y="965" width="0.0419%" height="15" fill="rgb(209,73,30)" fg:x="4987" fg:w="4"/><text x="52.4972%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::schedule::Stages&gt; (3 samples, 0.03%)</title><rect x="52.2577%" y="949" width="0.0314%" height="15" fill="rgb(207,20,33)" fg:x="4988" fg:w="3"/><text x="52.5077%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::schedule::NodeIndices,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="52.2787%" y="933" width="0.0105%" height="15" fill="rgb(219,153,12)" fg:x="4990" fg:w="1"/><text x="52.5287%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;bevy_render::render_graph::node::NodeId,bevy_render::render_graph::schedule::NodeIndices,ahash::random_state::RandomState&gt;&gt; (1 samples, 0.01%)</title><rect x="52.2787%" y="917" width="0.0105%" height="15" fill="rgb(235,97,25)" fg:x="4990" fg:w="1"/><text x="52.5287%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(bevy_render::render_graph::node::NodeId,bevy_render::render_graph::schedule::NodeIndices)&gt;&gt; (1 samples, 0.01%)</title><rect x="52.2787%" y="901" width="0.0105%" height="15" fill="rgb(244,30,34)" fg:x="4990" fg:w="1"/><text x="52.5287%" y="911.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="52.2787%" y="885" width="0.0105%" height="15" fill="rgb(214,106,45)" fg:x="4990" fg:w="1"/><text x="52.5287%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::free_buckets (1 samples, 0.01%)</title><rect x="52.2787%" y="869" width="0.0105%" height="15" fill="rgb(226,41,9)" fg:x="4990" fg:w="1"/><text x="52.5287%" y="879.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::free_buckets (1 samples, 0.01%)</title><rect x="52.2787%" y="853" width="0.0105%" height="15" fill="rgb(253,139,29)" fg:x="4990" fg:w="1"/><text x="52.5287%" y="863.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="52.2787%" y="837" width="0.0105%" height="15" fill="rgb(213,205,39)" fg:x="4990" fg:w="1"/><text x="52.5287%" y="847.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="52.2787%" y="821" width="0.0105%" height="15" fill="rgb(209,27,10)" fg:x="4990" fg:w="1"/><text x="52.5287%" y="831.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="52.2787%" y="805" width="0.0105%" height="15" fill="rgb(249,142,16)" fg:x="4990" fg:w="1"/><text x="52.5287%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="52.2787%" y="789" width="0.0105%" height="15" fill="rgb(242,65,12)" fg:x="4990" fg:w="1"/><text x="52.5287%" y="799.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (48 samples, 0.50%)</title><rect x="51.7968%" y="1077" width="0.5029%" height="15" fill="rgb(232,48,10)" fg:x="4944" fg:w="48"/><text x="52.0468%" y="1087.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (38 samples, 0.40%)</title><rect x="51.9015%" y="1061" width="0.3981%" height="15" fill="rgb(253,67,19)" fg:x="4954" fg:w="38"/><text x="52.1515%" y="1071.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (38 samples, 0.40%)</title><rect x="51.9015%" y="1045" width="0.3981%" height="15" fill="rgb(227,93,29)" fg:x="4954" fg:w="38"/><text x="52.1515%" y="1055.50"></text></g><g><title>core::ops::function::FnMut::call_mut (1 samples, 0.01%)</title><rect x="52.2892%" y="1029" width="0.0105%" height="15" fill="rgb(226,189,53)" fg:x="4991" fg:w="1"/><text x="52.5392%" y="1039.50"></text></g><g><title>&lt;T as bevy_ecs::schedule::label::DynHash&gt;::dyn_hash (2 samples, 0.02%)</title><rect x="52.2996%" y="981" width="0.0210%" height="15" fill="rgb(223,224,1)" fg:x="4992" fg:w="2"/><text x="52.5496%" y="991.50"></text></g><g><title>&lt;bevy_app::CoreStage as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="52.3101%" y="965" width="0.0105%" height="15" fill="rgb(221,84,32)" fg:x="4993" fg:w="1"/><text x="52.5601%" y="975.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="52.3101%" y="949" width="0.0105%" height="15" fill="rgb(214,189,28)" fg:x="4993" fg:w="1"/><text x="52.5601%" y="959.50"></text></g><g><title>&lt;&amp;mut H as core::hash::Hasher&gt;::write_isize (1 samples, 0.01%)</title><rect x="52.3101%" y="933" width="0.0105%" height="15" fill="rgb(234,7,52)" fg:x="4993" fg:w="1"/><text x="52.5601%" y="943.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="52.3101%" y="917" width="0.0105%" height="15" fill="rgb(249,73,31)" fg:x="4993" fg:w="1"/><text x="52.5601%" y="927.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="52.3101%" y="901" width="0.0105%" height="15" fill="rgb(253,153,41)" fg:x="4993" fg:w="1"/><text x="52.5601%" y="911.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="52.3101%" y="885" width="0.0105%" height="15" fill="rgb(249,52,34)" fg:x="4993" fg:w="1"/><text x="52.5601%" y="895.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="52.3101%" y="869" width="0.0105%" height="15" fill="rgb(236,177,47)" fg:x="4993" fg:w="1"/><text x="52.5601%" y="879.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="52.3101%" y="853" width="0.0105%" height="15" fill="rgb(252,185,45)" fg:x="4993" fg:w="1"/><text x="52.5601%" y="863.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="52.3101%" y="837" width="0.0105%" height="15" fill="rgb(251,15,30)" fg:x="4993" fg:w="1"/><text x="52.5601%" y="847.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="52.2996%" y="1029" width="0.0314%" height="15" fill="rgb(233,31,4)" fg:x="4992" fg:w="3"/><text x="52.5496%" y="1039.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;T,A&gt; as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="52.2996%" y="1013" width="0.0314%" height="15" fill="rgb(254,44,24)" fg:x="4992" fg:w="3"/><text x="52.5496%" y="1023.50"></text></g><g><title>&lt;dyn bevy_ecs::schedule::label::StageLabel as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="52.2996%" y="997" width="0.0314%" height="15" fill="rgb(218,54,1)" fg:x="4992" fg:w="3"/><text x="52.5496%" y="1007.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="52.3206%" y="981" width="0.0105%" height="15" fill="rgb(243,209,39)" fg:x="4994" fg:w="1"/><text x="52.5706%" y="991.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="52.3206%" y="965" width="0.0105%" height="15" fill="rgb(206,75,33)" fg:x="4994" fg:w="1"/><text x="52.5706%" y="975.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (53 samples, 0.56%)</title><rect x="51.7863%" y="1109" width="0.5553%" height="15" fill="rgb(223,108,18)" fg:x="4943" fg:w="53"/><text x="52.0363%" y="1119.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (53 samples, 0.56%)</title><rect x="51.7863%" y="1093" width="0.5553%" height="15" fill="rgb(244,89,31)" fg:x="4943" fg:w="53"/><text x="52.0363%" y="1103.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (4 samples, 0.04%)</title><rect x="52.2996%" y="1077" width="0.0419%" height="15" fill="rgb(222,167,27)" fg:x="4992" fg:w="4"/><text x="52.5496%" y="1087.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (4 samples, 0.04%)</title><rect x="52.2996%" y="1061" width="0.0419%" height="15" fill="rgb(247,41,16)" fg:x="4992" fg:w="4"/><text x="52.5496%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (4 samples, 0.04%)</title><rect x="52.2996%" y="1045" width="0.0419%" height="15" fill="rgb(233,168,40)" fg:x="4992" fg:w="4"/><text x="52.5496%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (1 samples, 0.01%)</title><rect x="52.3311%" y="1029" width="0.0105%" height="15" fill="rgb(205,211,8)" fg:x="4995" fg:w="1"/><text x="52.5811%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="52.3311%" y="1013" width="0.0105%" height="15" fill="rgb(238,105,11)" fg:x="4995" fg:w="1"/><text x="52.5811%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="52.3311%" y="997" width="0.0105%" height="15" fill="rgb(223,142,52)" fg:x="4995" fg:w="1"/><text x="52.5811%" y="1007.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="52.3311%" y="981" width="0.0105%" height="15" fill="rgb(238,51,33)" fg:x="4995" fg:w="1"/><text x="52.5811%" y="991.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="52.3311%" y="965" width="0.0105%" height="15" fill="rgb(231,188,43)" fg:x="4995" fg:w="1"/><text x="52.5811%" y="975.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="52.3311%" y="949" width="0.0105%" height="15" fill="rgb(216,92,17)" fg:x="4995" fg:w="1"/><text x="52.5811%" y="959.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="52.3311%" y="933" width="0.0105%" height="15" fill="rgb(228,2,40)" fg:x="4995" fg:w="1"/><text x="52.5811%" y="943.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="52.3311%" y="917" width="0.0105%" height="15" fill="rgb(226,73,15)" fg:x="4995" fg:w="1"/><text x="52.5811%" y="927.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (54 samples, 0.57%)</title><rect x="51.7863%" y="1141" width="0.5657%" height="15" fill="rgb(227,66,46)" fg:x="4943" fg:w="54"/><text x="52.0363%" y="1151.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (54 samples, 0.57%)</title><rect x="51.7863%" y="1125" width="0.5657%" height="15" fill="rgb(209,71,6)" fg:x="4943" fg:w="54"/><text x="52.0363%" y="1135.50"></text></g><g><title>bevy_winit::handle_create_window_events (1 samples, 0.01%)</title><rect x="52.3415%" y="1109" width="0.0105%" height="15" fill="rgb(246,100,25)" fg:x="4996" fg:w="1"/><text x="52.5915%" y="1119.50"></text></g><g><title>bevy_app::event::ManualEventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="52.3415%" y="1093" width="0.0105%" height="15" fill="rgb(248,185,27)" fg:x="4996" fg:w="1"/><text x="52.5915%" y="1103.50"></text></g><g><title>bevy_app::event::internal_event_reader (1 samples, 0.01%)</title><rect x="52.3415%" y="1077" width="0.0105%" height="15" fill="rgb(225,118,47)" fg:x="4996" fg:w="1"/><text x="52.5915%" y="1087.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="52.3520%" y="1061" width="0.0105%" height="15" fill="rgb(220,185,44)" fg:x="4997" fg:w="1"/><text x="52.6020%" y="1071.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="52.3520%" y="1045" width="0.0105%" height="15" fill="rgb(227,95,24)" fg:x="4997" fg:w="1"/><text x="52.6020%" y="1055.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="52.3520%" y="1029" width="0.0105%" height="15" fill="rgb(252,84,24)" fg:x="4997" fg:w="1"/><text x="52.6020%" y="1039.50"></text></g><g><title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="52.3520%" y="1013" width="0.0105%" height="15" fill="rgb(240,34,44)" fg:x="4997" fg:w="1"/><text x="52.6020%" y="1023.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.01%)</title><rect x="52.3520%" y="997" width="0.0105%" height="15" fill="rgb(209,72,54)" fg:x="4997" fg:w="1"/><text x="52.6020%" y="1007.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll_one_event (2 samples, 0.02%)</title><rect x="52.3520%" y="1125" width="0.0210%" height="15" fill="rgb(226,19,45)" fg:x="4997" fg:w="2"/><text x="52.6020%" y="1135.50"></text></g><g><title>XCheckIfEvent (2 samples, 0.02%)</title><rect x="52.3520%" y="1109" width="0.0210%" height="15" fill="rgb(246,7,45)" fg:x="4997" fg:w="2"/><text x="52.6020%" y="1119.50"></text></g><g><title>_XEventsQueued (2 samples, 0.02%)</title><rect x="52.3520%" y="1093" width="0.0210%" height="15" fill="rgb(225,45,2)" fg:x="4997" fg:w="2"/><text x="52.6020%" y="1103.50"></text></g><g><title>[libX11.so.6.4.0] (2 samples, 0.02%)</title><rect x="52.3520%" y="1077" width="0.0210%" height="15" fill="rgb(221,80,29)" fg:x="4997" fg:w="2"/><text x="52.6020%" y="1087.50"></text></g><g><title>xcb_poll_for_reply64 (1 samples, 0.01%)</title><rect x="52.3625%" y="1061" width="0.0105%" height="15" fill="rgb(228,11,19)" fg:x="4998" fg:w="1"/><text x="52.6125%" y="1071.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="52.3625%" y="1045" width="0.0105%" height="15" fill="rgb(243,17,21)" fg:x="4998" fg:w="1"/><text x="52.6125%" y="1055.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::drain_events (3 samples, 0.03%)</title><rect x="52.3520%" y="1141" width="0.0314%" height="15" fill="rgb(243,88,8)" fg:x="4997" fg:w="3"/><text x="52.6020%" y="1151.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::process_event (1 samples, 0.01%)</title><rect x="52.3730%" y="1125" width="0.0105%" height="15" fill="rgb(214,17,9)" fg:x="4999" fg:w="1"/><text x="52.6230%" y="1135.50"></text></g><g><title>winit::platform_impl::platform::x11::DeviceInfo::get (1 samples, 0.01%)</title><rect x="52.3730%" y="1109" width="0.0105%" height="15" fill="rgb(232,169,15)" fg:x="4999" fg:w="1"/><text x="52.6230%" y="1119.50"></text></g><g><title>XIQueryDevice (1 samples, 0.01%)</title><rect x="52.3730%" y="1093" width="0.0105%" height="15" fill="rgb(232,86,53)" fg:x="4999" fg:w="1"/><text x="52.6230%" y="1103.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="52.3730%" y="1077" width="0.0105%" height="15" fill="rgb(222,100,4)" fg:x="4999" fg:w="1"/><text x="52.6230%" y="1087.50"></text></g><g><title>bevy_winit::winit_runner_with (66 samples, 0.69%)</title><rect x="51.7129%" y="1237" width="0.6915%" height="15" fill="rgb(253,151,38)" fg:x="4936" fg:w="66"/><text x="51.9629%" y="1247.50"></text></g><g><title>bevy_winit::run (66 samples, 0.69%)</title><rect x="51.7129%" y="1221" width="0.6915%" height="15" fill="rgb(238,215,29)" fg:x="4936" fg:w="66"/><text x="51.9629%" y="1231.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (66 samples, 0.69%)</title><rect x="51.7129%" y="1205" width="0.6915%" height="15" fill="rgb(205,128,53)" fg:x="4936" fg:w="66"/><text x="51.9629%" y="1215.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (66 samples, 0.69%)</title><rect x="51.7129%" y="1189" width="0.6915%" height="15" fill="rgb(248,183,14)" fg:x="4936" fg:w="66"/><text x="51.9629%" y="1199.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (66 samples, 0.69%)</title><rect x="51.7129%" y="1173" width="0.6915%" height="15" fill="rgb(244,172,35)" fg:x="4936" fg:w="66"/><text x="51.9629%" y="1183.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (66 samples, 0.69%)</title><rect x="51.7129%" y="1157" width="0.6915%" height="15" fill="rgb(234,93,19)" fg:x="4936" fg:w="66"/><text x="51.9629%" y="1167.50"></text></g><g><title>winit::platform_impl::platform::x11::event_processor::EventProcessor&lt;T&gt;::poll (2 samples, 0.02%)</title><rect x="52.3834%" y="1141" width="0.0210%" height="15" fill="rgb(227,109,7)" fg:x="5000" fg:w="2"/><text x="52.6334%" y="1151.50"></text></g><g><title>XPending (2 samples, 0.02%)</title><rect x="52.3834%" y="1125" width="0.0210%" height="15" fill="rgb(233,136,54)" fg:x="5000" fg:w="2"/><text x="52.6334%" y="1135.50"></text></g><g><title>_XEventsQueued (1 samples, 0.01%)</title><rect x="52.3939%" y="1109" width="0.0105%" height="15" fill="rgb(233,19,40)" fg:x="5001" fg:w="1"/><text x="52.6439%" y="1119.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="52.3939%" y="1093" width="0.0105%" height="15" fill="rgb(247,41,18)" fg:x="5001" fg:w="1"/><text x="52.6439%" y="1103.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="52.3939%" y="1077" width="0.0105%" height="15" fill="rgb(220,34,34)" fg:x="5001" fg:w="1"/><text x="52.6439%" y="1087.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="52.3939%" y="1061" width="0.0105%" height="15" fill="rgb(222,135,32)" fg:x="5001" fg:w="1"/><text x="52.6439%" y="1071.50"></text></g><g><title>bevy_winit::winit_windows::WinitWindows::create_window (1 samples, 0.01%)</title><rect x="52.4044%" y="1237" width="0.0105%" height="15" fill="rgb(214,80,19)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1247.50"></text></g><g><title>winit::window::WindowBuilder::build (1 samples, 0.01%)</title><rect x="52.4044%" y="1221" width="0.0105%" height="15" fill="rgb(234,54,46)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1231.50"></text></g><g><title>winit::platform_impl::platform::Window::new (1 samples, 0.01%)</title><rect x="52.4044%" y="1205" width="0.0105%" height="15" fill="rgb(251,48,23)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1215.50"></text></g><g><title>winit::platform_impl::platform::x11::Window::new (1 samples, 0.01%)</title><rect x="52.4044%" y="1189" width="0.0105%" height="15" fill="rgb(254,109,52)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1199.50"></text></g><g><title>winit::platform_impl::platform::x11::window::UnownedWindow::new (1 samples, 0.01%)</title><rect x="52.4044%" y="1173" width="0.0105%" height="15" fill="rgb(240,186,19)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1183.50"></text></g><g><title>winit::platform_impl::platform::x11::monitor::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::available_monitors (1 samples, 0.01%)</title><rect x="52.4044%" y="1157" width="0.0105%" height="15" fill="rgb(246,187,17)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1167.50"></text></g><g><title>core::option::Option&lt;T&gt;::or_else (1 samples, 0.01%)</title><rect x="52.4044%" y="1141" width="0.0105%" height="15" fill="rgb(212,21,5)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1151.50"></text></g><g><title>winit::platform_impl::platform::x11::monitor::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::available_monitors::{{closure}} (1 samples, 0.01%)</title><rect x="52.4044%" y="1125" width="0.0105%" height="15" fill="rgb(225,185,18)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1135.50"></text></g><g><title>winit::platform_impl::platform::x11::monitor::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::query_monitor_list (1 samples, 0.01%)</title><rect x="52.4044%" y="1109" width="0.0105%" height="15" fill="rgb(245,114,17)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1119.50"></text></g><g><title>winit::platform_impl::platform::x11::monitor::MonitorHandle::new (1 samples, 0.01%)</title><rect x="52.4044%" y="1093" width="0.0105%" height="15" fill="rgb(223,164,24)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1103.50"></text></g><g><title>winit::platform_impl::platform::x11::util::randr::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_output_info (1 samples, 0.01%)</title><rect x="52.4044%" y="1077" width="0.0105%" height="15" fill="rgb(211,228,3)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1087.50"></text></g><g><title>winit::platform_impl::platform::x11::util::randr::&lt;impl winit::platform_impl::platform::x11::xdisplay::XConnection&gt;::get_xft_dpi (1 samples, 0.01%)</title><rect x="52.4044%" y="1061" width="0.0105%" height="15" fill="rgb(223,16,38)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1071.50"></text></g><g><title>&lt;core::str::iter::Split&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="52.4044%" y="1045" width="0.0105%" height="15" fill="rgb(207,31,54)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1055.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.01%)</title><rect x="52.4044%" y="1029" width="0.0105%" height="15" fill="rgb(220,39,11)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1039.50"></text></g><g><title>&lt;core::str::pattern::StrSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.01%)</title><rect x="52.4044%" y="1013" width="0.0105%" height="15" fill="rgb(235,185,0)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1023.50"></text></g><g><title>core::str::pattern::TwoWaySearcher::next (1 samples, 0.01%)</title><rect x="52.4044%" y="997" width="0.0105%" height="15" fill="rgb(249,39,18)" fg:x="5002" fg:w="1"/><text x="52.6544%" y="1007.50"></text></g><g><title>core::fmt::num::imp::&lt;impl core::fmt::Display for u32&gt;::fmt (1 samples, 0.01%)</title><rect x="52.4149%" y="1237" width="0.0105%" height="15" fill="rgb(240,110,33)" fg:x="5003" fg:w="1"/><text x="52.6649%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (15 samples, 0.16%)</title><rect x="52.4254%" y="1237" width="0.1572%" height="15" fill="rgb(210,92,42)" fg:x="5004" fg:w="15"/><text x="52.6754%" y="1247.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (3 samples, 0.03%)</title><rect x="52.5825%" y="1237" width="0.0314%" height="15" fill="rgb(218,215,28)" fg:x="5019" fg:w="3"/><text x="52.8325%" y="1247.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="52.6139%" y="1237" width="0.0105%" height="15" fill="rgb(238,215,36)" fg:x="5022" fg:w="1"/><text x="52.8639%" y="1247.50"></text></g><g><title>bevy_winit::winit_runner (1 samples, 0.01%)</title><rect x="52.6139%" y="1221" width="0.0105%" height="15" fill="rgb(220,31,10)" fg:x="5022" fg:w="1"/><text x="52.8639%" y="1231.50"></text></g><g><title>bevy_winit::winit_runner_with (1 samples, 0.01%)</title><rect x="52.6139%" y="1205" width="0.0105%" height="15" fill="rgb(212,93,14)" fg:x="5022" fg:w="1"/><text x="52.8639%" y="1215.50"></text></g><g><title>bevy_winit::run (1 samples, 0.01%)</title><rect x="52.6139%" y="1189" width="0.0105%" height="15" fill="rgb(254,207,2)" fg:x="5022" fg:w="1"/><text x="52.8639%" y="1199.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (1 samples, 0.01%)</title><rect x="52.6139%" y="1173" width="0.0105%" height="15" fill="rgb(205,57,44)" fg:x="5022" fg:w="1"/><text x="52.8639%" y="1183.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (1 samples, 0.01%)</title><rect x="52.6139%" y="1157" width="0.0105%" height="15" fill="rgb(226,151,19)" fg:x="5022" fg:w="1"/><text x="52.8639%" y="1167.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (1 samples, 0.01%)</title><rect x="52.6139%" y="1141" width="0.0105%" height="15" fill="rgb(230,72,30)" fg:x="5022" fg:w="1"/><text x="52.8639%" y="1151.50"></text></g><g><title>std::process::exit (1 samples, 0.01%)</title><rect x="52.6139%" y="1125" width="0.0105%" height="15" fill="rgb(244,0,8)" fg:x="5022" fg:w="1"/><text x="52.8639%" y="1135.50"></text></g><g><title>std::sys::unix::os::exit (1 samples, 0.01%)</title><rect x="52.6139%" y="1109" width="0.0105%" height="15" fill="rgb(230,192,6)" fg:x="5022" fg:w="1"/><text x="52.8639%" y="1119.50"></text></g><g><title>__GI_exit (1 samples, 0.01%)</title><rect x="52.6139%" y="1093" width="0.0105%" height="15" fill="rgb(233,207,13)" fg:x="5022" fg:w="1"/><text x="52.8639%" y="1103.50"></text></g><g><title>__run_exit_handlers (1 samples, 0.01%)</title><rect x="52.6139%" y="1077" width="0.0105%" height="15" fill="rgb(206,227,7)" fg:x="5022" fg:w="1"/><text x="52.8639%" y="1087.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (1 samples, 0.01%)</title><rect x="52.6349%" y="1205" width="0.0105%" height="15" fill="rgb(213,217,25)" fg:x="5024" fg:w="1"/><text x="52.8849%" y="1215.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (1 samples, 0.01%)</title><rect x="52.6349%" y="1189" width="0.0105%" height="15" fill="rgb(249,75,4)" fg:x="5024" fg:w="1"/><text x="52.8849%" y="1199.50"></text></g><g><title>&lt;dyn bevy_asset::loader::AssetLifecycle&gt;::downcast_ref (1 samples, 0.01%)</title><rect x="52.6349%" y="1173" width="0.0105%" height="15" fill="rgb(225,114,18)" fg:x="5024" fg:w="1"/><text x="52.8849%" y="1183.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::downcast_ref (1 samples, 0.01%)</title><rect x="52.6349%" y="1157" width="0.0105%" height="15" fill="rgb(211,162,40)" fg:x="5024" fg:w="1"/><text x="52.8849%" y="1167.50"></text></g><g><title>&lt;dyn core::any::Any&gt;::is (1 samples, 0.01%)</title><rect x="52.6349%" y="1141" width="0.0105%" height="15" fill="rgb(206,49,29)" fg:x="5024" fg:w="1"/><text x="52.8849%" y="1151.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="52.6454%" y="1189" width="0.0105%" height="15" fill="rgb(244,8,6)" fg:x="5025" fg:w="1"/><text x="52.8954%" y="1199.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (4 samples, 0.04%)</title><rect x="52.6244%" y="1237" width="0.0419%" height="15" fill="rgb(231,194,28)" fg:x="5023" fg:w="4"/><text x="52.8744%" y="1247.50"></text></g><g><title>core::ops::function::Fn::call (3 samples, 0.03%)</title><rect x="52.6349%" y="1221" width="0.0314%" height="15" fill="rgb(210,69,5)" fg:x="5024" fg:w="3"/><text x="52.8849%" y="1231.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (2 samples, 0.02%)</title><rect x="52.6454%" y="1205" width="0.0210%" height="15" fill="rgb(216,186,12)" fg:x="5025" fg:w="2"/><text x="52.8954%" y="1215.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (1 samples, 0.01%)</title><rect x="52.6558%" y="1189" width="0.0105%" height="15" fill="rgb(238,61,15)" fg:x="5026" fg:w="1"/><text x="52.9058%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (1 samples, 0.01%)</title><rect x="52.6663%" y="1237" width="0.0105%" height="15" fill="rgb(226,104,1)" fg:x="5027" fg:w="1"/><text x="52.9163%" y="1247.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (2 samples, 0.02%)</title><rect x="52.6768%" y="1237" width="0.0210%" height="15" fill="rgb(229,128,15)" fg:x="5028" fg:w="2"/><text x="52.9268%" y="1247.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (1 samples, 0.01%)</title><rect x="52.6977%" y="1237" width="0.0105%" height="15" fill="rgb(247,110,15)" fg:x="5030" fg:w="1"/><text x="52.9477%" y="1247.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="52.7082%" y="1237" width="0.0105%" height="15" fill="rgb(210,74,48)" fg:x="5031" fg:w="1"/><text x="52.9582%" y="1247.50"></text></g><g><title>crossbeam_channel::waker::SyncWaker::notify (1 samples, 0.01%)</title><rect x="52.7187%" y="1237" width="0.0105%" height="15" fill="rgb(246,121,10)" fg:x="5032" fg:w="1"/><text x="52.9687%" y="1247.50"></text></g><g><title>core::sync::atomic::AtomicBool::load (1 samples, 0.01%)</title><rect x="52.7187%" y="1221" width="0.0105%" height="15" fill="rgb(214,156,37)" fg:x="5032" fg:w="1"/><text x="52.9687%" y="1231.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="52.7187%" y="1205" width="0.0105%" height="15" fill="rgb(214,210,34)" fg:x="5032" fg:w="1"/><text x="52.9687%" y="1215.50"></text></g><g><title>engine::movement::pathing::move_actor (1 samples, 0.01%)</title><rect x="52.7292%" y="1237" width="0.0105%" height="15" fill="rgb(237,93,35)" fg:x="5033" fg:w="1"/><text x="52.9792%" y="1247.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="52.7501%" y="1221" width="0.0105%" height="15" fill="rgb(206,36,8)" fg:x="5035" fg:w="1"/><text x="53.0001%" y="1231.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="52.7501%" y="1205" width="0.0105%" height="15" fill="rgb(208,151,12)" fg:x="5035" fg:w="1"/><text x="53.0001%" y="1215.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="52.7501%" y="1189" width="0.0105%" height="15" fill="rgb(225,133,52)" fg:x="5035" fg:w="1"/><text x="53.0001%" y="1199.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (1 samples, 0.01%)</title><rect x="52.7606%" y="1205" width="0.0105%" height="15" fill="rgb(231,71,53)" fg:x="5036" fg:w="1"/><text x="53.0106%" y="1215.50"></text></g><g><title>engine::movement::pathing::move_weights (4 samples, 0.04%)</title><rect x="52.7397%" y="1237" width="0.0419%" height="15" fill="rgb(243,76,21)" fg:x="5034" fg:w="4"/><text x="52.9897%" y="1247.50"></text></g><g><title>engine::movement::pathing::tile_weight (2 samples, 0.02%)</title><rect x="52.7606%" y="1221" width="0.0210%" height="15" fill="rgb(252,144,3)" fg:x="5036" fg:w="2"/><text x="53.0106%" y="1231.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="52.7711%" y="1205" width="0.0105%" height="15" fill="rgb(231,199,10)" fg:x="5037" fg:w="1"/><text x="53.0211%" y="1215.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="52.7711%" y="1189" width="0.0105%" height="15" fill="rgb(215,18,11)" fg:x="5037" fg:w="1"/><text x="53.0211%" y="1199.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="52.7711%" y="1173" width="0.0105%" height="15" fill="rgb(241,65,24)" fg:x="5037" fg:w="1"/><text x="53.0211%" y="1183.50"></text></g><g><title>find_derivation (1 samples, 0.01%)</title><rect x="52.7816%" y="1237" width="0.0105%" height="15" fill="rgb(251,192,38)" fg:x="5038" fg:w="1"/><text x="53.0316%" y="1247.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="52.7816%" y="1221" width="0.0105%" height="15" fill="rgb(205,9,35)" fg:x="5038" fg:w="1"/><text x="53.0316%" y="1231.50"></text></g><g><title>fixedbitset::FixedBitSet::difference_with (1 samples, 0.01%)</title><rect x="52.7920%" y="1237" width="0.0105%" height="15" fill="rgb(229,225,49)" fg:x="5039" fg:w="1"/><text x="53.0420%" y="1247.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_plugins (1 samples, 0.01%)</title><rect x="52.8025%" y="1221" width="0.0105%" height="15" fill="rgb(207,125,39)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1231.50"></text></g><g><title>bevy_app::plugin_group::PluginGroupBuilder::finish (1 samples, 0.01%)</title><rect x="52.8025%" y="1205" width="0.0105%" height="15" fill="rgb(222,78,19)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1215.50"></text></g><g><title>&lt;bevy_sprite::SpritePlugin as bevy_app::plugin::Plugin&gt;::build (1 samples, 0.01%)</title><rect x="52.8025%" y="1189" width="0.0105%" height="15" fill="rgb(248,207,20)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1199.50"></text></g><g><title>bevy_sprite::render::add_sprite_graph (1 samples, 0.01%)</title><rect x="52.8025%" y="1173" width="0.0105%" height="15" fill="rgb(205,103,49)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1183.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::add_system_node (1 samples, 0.01%)</title><rect x="52.8025%" y="1157" width="0.0105%" height="15" fill="rgb(216,42,28)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1167.50"></text></g><g><title>bevy_ecs::schedule::stage::SystemStage::add_system (1 samples, 0.01%)</title><rect x="52.8025%" y="1141" width="0.0105%" height="15" fill="rgb(213,205,53)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1151.50"></text></g><g><title>bevy_ecs::schedule::stage::SystemStage::add_system_inner (1 samples, 0.01%)</title><rect x="52.8025%" y="1125" width="0.0105%" height="15" fill="rgb(239,140,53)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1135.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="52.8025%" y="1109" width="0.0105%" height="15" fill="rgb(248,95,9)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1119.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="52.8025%" y="1093" width="0.0105%" height="15" fill="rgb(254,58,47)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1103.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="52.8025%" y="1077" width="0.0105%" height="15" fill="rgb(234,227,14)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1087.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="52.8025%" y="1061" width="0.0105%" height="15" fill="rgb(205,192,45)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1071.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="52.8025%" y="1045" width="0.0105%" height="15" fill="rgb(253,187,31)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1055.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="52.8025%" y="1029" width="0.0105%" height="15" fill="rgb(222,6,32)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1039.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="52.8025%" y="1013" width="0.0105%" height="15" fill="rgb(249,190,19)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1023.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="52.8025%" y="997" width="0.0105%" height="15" fill="rgb(251,28,20)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="1007.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="52.8025%" y="981" width="0.0105%" height="15" fill="rgb(210,223,40)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="991.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="52.8025%" y="965" width="0.0105%" height="15" fill="rgb(216,137,22)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="975.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="52.8025%" y="949" width="0.0105%" height="15" fill="rgb(247,39,34)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="959.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="52.8025%" y="933" width="0.0105%" height="15" fill="rgb(239,43,50)" fg:x="5040" fg:w="1"/><text x="53.0525%" y="943.50"></text></g><g><title>game::main (2 samples, 0.02%)</title><rect x="52.8025%" y="1237" width="0.0210%" height="15" fill="rgb(241,212,9)" fg:x="5040" fg:w="2"/><text x="53.0525%" y="1247.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::run (1 samples, 0.01%)</title><rect x="52.8130%" y="1221" width="0.0105%" height="15" fill="rgb(205,8,2)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1231.50"></text></g><g><title>bevy_app::app::App::run (1 samples, 0.01%)</title><rect x="52.8130%" y="1205" width="0.0105%" height="15" fill="rgb(217,173,54)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::Fn&lt;Args&gt;&gt;::call (1 samples, 0.01%)</title><rect x="52.8130%" y="1189" width="0.0105%" height="15" fill="rgb(208,149,52)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1199.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="52.8130%" y="1173" width="0.0105%" height="15" fill="rgb(239,99,40)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1183.50"></text></g><g><title>bevy_winit::winit_runner (1 samples, 0.01%)</title><rect x="52.8130%" y="1157" width="0.0105%" height="15" fill="rgb(233,214,26)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1167.50"></text></g><g><title>winit::event_loop::EventLoop&lt;()&gt;::new (1 samples, 0.01%)</title><rect x="52.8130%" y="1141" width="0.0105%" height="15" fill="rgb(231,225,37)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1151.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::with_user_event (1 samples, 0.01%)</title><rect x="52.8130%" y="1125" width="0.0105%" height="15" fill="rgb(252,55,35)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1135.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="52.8130%" y="1109" width="0.0105%" height="15" fill="rgb(239,43,18)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1119.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_any_thread (1 samples, 0.01%)</title><rect x="52.8130%" y="1093" width="0.0105%" height="15" fill="rgb(251,125,49)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1103.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::new_x11_any_thread (1 samples, 0.01%)</title><rect x="52.8130%" y="1077" width="0.0105%" height="15" fill="rgb(212,83,54)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1087.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="52.8130%" y="1061" width="0.0105%" height="15" fill="rgb(250,75,6)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1071.50"></text></g><g><title>XSupportsLocale (1 samples, 0.01%)</title><rect x="52.8130%" y="1045" width="0.0105%" height="15" fill="rgb(252,36,40)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1055.50"></text></g><g><title>_XOpenLC (1 samples, 0.01%)</title><rect x="52.8130%" y="1029" width="0.0105%" height="15" fill="rgb(230,91,51)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1039.50"></text></g><g><title>_XlcUtf8Loader (1 samples, 0.01%)</title><rect x="52.8130%" y="1013" width="0.0105%" height="15" fill="rgb(212,92,28)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1023.50"></text></g><g><title>_XlcCreateLC (1 samples, 0.01%)</title><rect x="52.8130%" y="997" width="0.0105%" height="15" fill="rgb(227,13,22)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="1007.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="52.8130%" y="981" width="0.0105%" height="15" fill="rgb(239,204,32)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="991.50"></text></g><g><title>[libX11.so.6.4.0] (1 samples, 0.01%)</title><rect x="52.8130%" y="965" width="0.0105%" height="15" fill="rgb(228,49,41)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="975.50"></text></g><g><title>_XlcInitCTInfo (1 samples, 0.01%)</title><rect x="52.8130%" y="949" width="0.0105%" height="15" fill="rgb(206,95,6)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="959.50"></text></g><g><title>_XlcAddCT (1 samples, 0.01%)</title><rect x="52.8130%" y="933" width="0.0105%" height="15" fill="rgb(251,20,14)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="943.50"></text></g><g><title>_XlcCreateDefaultCharSet (1 samples, 0.01%)</title><rect x="52.8130%" y="917" width="0.0105%" height="15" fill="rgb(214,99,28)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="927.50"></text></g><g><title>_XrmInternalStringToQuark (1 samples, 0.01%)</title><rect x="52.8130%" y="901" width="0.0105%" height="15" fill="rgb(239,122,54)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="911.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="52.8130%" y="885" width="0.0105%" height="15" fill="rgb(218,217,46)" fg:x="5041" fg:w="1"/><text x="53.0630%" y="895.50"></text></g><g><title>gfx_backend_vulkan::conv::map_image_usage (1 samples, 0.01%)</title><rect x="52.8235%" y="1237" width="0.0105%" height="15" fill="rgb(249,106,28)" fg:x="5042" fg:w="1"/><text x="53.0735%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (10 samples, 0.10%)</title><rect x="52.8339%" y="1237" width="0.1048%" height="15" fill="rgb(250,158,18)" fg:x="5043" fg:w="10"/><text x="53.0839%" y="1247.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (2 samples, 0.02%)</title><rect x="52.9178%" y="1221" width="0.0210%" height="15" fill="rgb(226,137,29)" fg:x="5051" fg:w="2"/><text x="53.1678%" y="1231.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="52.9178%" y="1205" width="0.0210%" height="15" fill="rgb(210,188,1)" fg:x="5051" fg:w="2"/><text x="53.1678%" y="1215.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="52.9178%" y="1189" width="0.0210%" height="15" fill="rgb(227,84,42)" fg:x="5051" fg:w="2"/><text x="53.1678%" y="1199.50"></text></g><g><title>hashbrown::map::make_hash (6 samples, 0.06%)</title><rect x="52.9387%" y="1237" width="0.0629%" height="15" fill="rgb(222,147,48)" fg:x="5053" fg:w="6"/><text x="53.1887%" y="1247.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="52.9911%" y="1221" width="0.0105%" height="15" fill="rgb(241,150,43)" fg:x="5058" fg:w="1"/><text x="53.2411%" y="1231.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="53.0016%" y="1237" width="0.0105%" height="15" fill="rgb(206,139,52)" fg:x="5059" fg:w="1"/><text x="53.2516%" y="1247.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize (1 samples, 0.01%)</title><rect x="53.0016%" y="1221" width="0.0105%" height="15" fill="rgb(230,63,14)" fg:x="5059" fg:w="1"/><text x="53.2516%" y="1231.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (1 samples, 0.01%)</title><rect x="53.0016%" y="1205" width="0.0105%" height="15" fill="rgb(247,8,20)" fg:x="5059" fg:w="1"/><text x="53.2516%" y="1215.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::new_uninitialized (1 samples, 0.01%)</title><rect x="53.0016%" y="1189" width="0.0105%" height="15" fill="rgb(213,115,4)" fg:x="5059" fg:w="1"/><text x="53.2516%" y="1199.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="53.0016%" y="1173" width="0.0105%" height="15" fill="rgb(241,79,49)" fg:x="5059" fg:w="1"/><text x="53.2516%" y="1183.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (9 samples, 0.09%)</title><rect x="53.0120%" y="1237" width="0.0943%" height="15" fill="rgb(222,42,35)" fg:x="5060" fg:w="9"/><text x="53.2620%" y="1247.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (1 samples, 0.01%)</title><rect x="53.0959%" y="1221" width="0.0105%" height="15" fill="rgb(247,59,23)" fg:x="5068" fg:w="1"/><text x="53.3459%" y="1231.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::find_equivalent (1 samples, 0.01%)</title><rect x="53.0959%" y="1205" width="0.0105%" height="15" fill="rgb(247,93,18)" fg:x="5068" fg:w="1"/><text x="53.3459%" y="1215.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find (1 samples, 0.01%)</title><rect x="53.0959%" y="1189" width="0.0105%" height="15" fill="rgb(249,107,47)" fg:x="5068" fg:w="1"/><text x="53.3459%" y="1199.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (2 samples, 0.02%)</title><rect x="53.1063%" y="1237" width="0.0210%" height="15" fill="rgb(219,27,1)" fg:x="5069" fg:w="2"/><text x="53.3563%" y="1247.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (2 samples, 0.02%)</title><rect x="53.1063%" y="1221" width="0.0210%" height="15" fill="rgb(217,82,32)" fg:x="5069" fg:w="2"/><text x="53.3563%" y="1231.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (2 samples, 0.02%)</title><rect x="53.1063%" y="1205" width="0.0210%" height="15" fill="rgb(250,129,47)" fg:x="5069" fg:w="2"/><text x="53.3563%" y="1215.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="53.1063%" y="1189" width="0.0210%" height="15" fill="rgb(253,88,35)" fg:x="5069" fg:w="2"/><text x="53.3563%" y="1199.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="53.1273%" y="1237" width="0.0105%" height="15" fill="rgb(245,221,14)" fg:x="5071" fg:w="1"/><text x="53.3773%" y="1247.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="53.1273%" y="1221" width="0.0105%" height="15" fill="rgb(217,119,54)" fg:x="5071" fg:w="1"/><text x="53.3773%" y="1231.50"></text></g><g><title>&lt;core::iter::sources::once::Once&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="53.1273%" y="1205" width="0.0105%" height="15" fill="rgb(247,128,31)" fg:x="5071" fg:w="1"/><text x="53.3773%" y="1215.50"></text></g><g><title>&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="53.1273%" y="1189" width="0.0105%" height="15" fill="rgb(211,99,22)" fg:x="5071" fg:w="1"/><text x="53.3773%" y="1199.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="53.1378%" y="1237" width="0.0105%" height="15" fill="rgb(212,20,17)" fg:x="5072" fg:w="1"/><text x="53.3878%" y="1247.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (1 samples, 0.01%)</title><rect x="53.1378%" y="1221" width="0.0105%" height="15" fill="rgb(209,159,29)" fg:x="5072" fg:w="1"/><text x="53.3878%" y="1231.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (1 samples, 0.01%)</title><rect x="53.1378%" y="1205" width="0.0105%" height="15" fill="rgb(222,177,53)" fg:x="5072" fg:w="1"/><text x="53.3878%" y="1215.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer::{{closure}} (1 samples, 0.01%)</title><rect x="53.1378%" y="1189" width="0.0105%" height="15" fill="rgb(234,46,43)" fg:x="5072" fg:w="1"/><text x="53.3878%" y="1199.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_copy_buffer (1 samples, 0.01%)</title><rect x="53.1378%" y="1173" width="0.0105%" height="15" fill="rgb(208,108,14)" fg:x="5072" fg:w="1"/><text x="53.3878%" y="1183.50"></text></g><g><title>add_alias2.part.0 (1 samples, 0.01%)</title><rect x="53.1587%" y="1093" width="0.0105%" height="15" fill="rgb(226,78,53)" fg:x="5074" fg:w="1"/><text x="53.4087%" y="1103.50"></text></g><g><title>__GI___tsearch (1 samples, 0.01%)</title><rect x="53.1587%" y="1077" width="0.0105%" height="15" fill="rgb(230,20,41)" fg:x="5074" fg:w="1"/><text x="53.4087%" y="1087.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="53.1587%" y="1061" width="0.0105%" height="15" fill="rgb(213,195,35)" fg:x="5074" fg:w="1"/><text x="53.4087%" y="1071.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="53.1797%" y="1077" width="0.0105%" height="15" fill="rgb(242,62,36)" fg:x="5076" fg:w="1"/><text x="53.4297%" y="1087.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="53.1797%" y="1061" width="0.0105%" height="15" fill="rgb(222,210,37)" fg:x="5076" fg:w="1"/><text x="53.4297%" y="1071.50"></text></g><g><title>pa_log_levelv_meta (5 samples, 0.05%)</title><rect x="53.1482%" y="1237" width="0.0524%" height="15" fill="rgb(232,107,19)" fg:x="5073" fg:w="5"/><text x="53.3982%" y="1247.50"></text></g><g><title>[libpulsecommon-15.0.so] (5 samples, 0.05%)</title><rect x="53.1482%" y="1221" width="0.0524%" height="15" fill="rgb(235,85,17)" fg:x="5073" fg:w="5"/><text x="53.3982%" y="1231.50"></text></g><g><title>pa_log_set_ident (5 samples, 0.05%)</title><rect x="53.1482%" y="1205" width="0.0524%" height="15" fill="rgb(219,195,31)" fg:x="5073" fg:w="5"/><text x="53.3982%" y="1215.50"></text></g><g><title>[libpulse.so.0.24.0] (5 samples, 0.05%)</title><rect x="53.1482%" y="1189" width="0.0524%" height="15" fill="rgb(231,183,30)" fg:x="5073" fg:w="5"/><text x="53.3982%" y="1199.50"></text></g><g><title>iconv_open (5 samples, 0.05%)</title><rect x="53.1482%" y="1173" width="0.0524%" height="15" fill="rgb(212,0,11)" fg:x="5073" fg:w="5"/><text x="53.3982%" y="1183.50"></text></g><g><title>__GI___gconv_open (5 samples, 0.05%)</title><rect x="53.1482%" y="1157" width="0.0524%" height="15" fill="rgb(249,53,54)" fg:x="5073" fg:w="5"/><text x="53.3982%" y="1167.50"></text></g><g><title>__gconv_find_transform (5 samples, 0.05%)</title><rect x="53.1482%" y="1141" width="0.0524%" height="15" fill="rgb(211,118,13)" fg:x="5073" fg:w="5"/><text x="53.3982%" y="1151.50"></text></g><g><title>__pthread_once_slow (5 samples, 0.05%)</title><rect x="53.1482%" y="1125" width="0.0524%" height="15" fill="rgb(237,42,9)" fg:x="5073" fg:w="5"/><text x="53.3982%" y="1135.50"></text></g><g><title>__gconv_read_conf (5 samples, 0.05%)</title><rect x="53.1482%" y="1109" width="0.0524%" height="15" fill="rgb(227,68,32)" fg:x="5073" fg:w="5"/><text x="53.3982%" y="1119.50"></text></g><g><title>add_module.constprop.0 (3 samples, 0.03%)</title><rect x="53.1692%" y="1093" width="0.0314%" height="15" fill="rgb(238,10,7)" fg:x="5075" fg:w="3"/><text x="53.4192%" y="1103.50"></text></g><g><title>insert_module (1 samples, 0.01%)</title><rect x="53.1902%" y="1077" width="0.0105%" height="15" fill="rgb(224,42,12)" fg:x="5077" fg:w="1"/><text x="53.4402%" y="1087.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="53.1902%" y="1061" width="0.0105%" height="15" fill="rgb(252,190,5)" fg:x="5077" fg:w="1"/><text x="53.4402%" y="1071.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.01%)</title><rect x="53.2006%" y="1237" width="0.0105%" height="15" fill="rgb(220,214,39)" fg:x="5078" fg:w="1"/><text x="53.4506%" y="1247.50"></text></g><g><title>alloc::alloc::exchange_malloc (1 samples, 0.01%)</title><rect x="53.2111%" y="1189" width="0.0105%" height="15" fill="rgb(247,98,4)" fg:x="5079" fg:w="1"/><text x="53.4611%" y="1199.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="53.2111%" y="1173" width="0.0105%" height="15" fill="rgb(211,60,12)" fg:x="5079" fg:w="1"/><text x="53.4611%" y="1183.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="53.2111%" y="1157" width="0.0105%" height="15" fill="rgb(224,42,10)" fg:x="5079" fg:w="1"/><text x="53.4611%" y="1167.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="53.2111%" y="1141" width="0.0105%" height="15" fill="rgb(217,167,4)" fg:x="5079" fg:w="1"/><text x="53.4611%" y="1151.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="53.2111%" y="1125" width="0.0105%" height="15" fill="rgb(253,18,17)" fg:x="5079" fg:w="1"/><text x="53.4611%" y="1135.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="53.2111%" y="1109" width="0.0105%" height="15" fill="rgb(249,186,44)" fg:x="5079" fg:w="1"/><text x="53.4611%" y="1119.50"></text></g><g><title>regex::compile::Compiler::c_alternate (1 samples, 0.01%)</title><rect x="53.2216%" y="1125" width="0.0105%" height="15" fill="rgb(254,124,54)" fg:x="5080" fg:w="1"/><text x="53.4716%" y="1135.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.01%)</title><rect x="53.2216%" y="1109" width="0.0105%" height="15" fill="rgb(220,124,39)" fg:x="5080" fg:w="1"/><text x="53.4716%" y="1119.50"></text></g><g><title>regex::compile::Compiler::c (1 samples, 0.01%)</title><rect x="53.2216%" y="1093" width="0.0105%" height="15" fill="rgb(225,96,46)" fg:x="5080" fg:w="1"/><text x="53.4716%" y="1103.50"></text></g><g><title>regex::compile::Compiler::c_repeat (1 samples, 0.01%)</title><rect x="53.2216%" y="1077" width="0.0105%" height="15" fill="rgb(221,106,12)" fg:x="5080" fg:w="1"/><text x="53.4716%" y="1087.50"></text></g><g><title>regex::compile::Compiler::c_repeat_one_or_more (1 samples, 0.01%)</title><rect x="53.2216%" y="1061" width="0.0105%" height="15" fill="rgb(227,133,23)" fg:x="5080" fg:w="1"/><text x="53.4716%" y="1071.50"></text></g><g><title>regex::compile::Compiler::c_class (1 samples, 0.01%)</title><rect x="53.2216%" y="1045" width="0.0105%" height="15" fill="rgb(216,44,52)" fg:x="5080" fg:w="1"/><text x="53.4716%" y="1055.50"></text></g><g><title>regex::compile::CompileClass::compile (1 samples, 0.01%)</title><rect x="53.2216%" y="1029" width="0.0105%" height="15" fill="rgb(239,149,7)" fg:x="5080" fg:w="1"/><text x="53.4716%" y="1039.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.01%)</title><rect x="53.2216%" y="1013" width="0.0105%" height="15" fill="rgb(211,157,31)" fg:x="5080" fg:w="1"/><text x="53.4716%" y="1023.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq_ (1 samples, 0.01%)</title><rect x="53.2216%" y="997" width="0.0105%" height="15" fill="rgb(206,215,22)" fg:x="5080" fg:w="1"/><text x="53.4716%" y="1007.50"></text></g><g><title>regex::compile::SuffixCache::get (1 samples, 0.01%)</title><rect x="53.2216%" y="981" width="0.0105%" height="15" fill="rgb(208,113,15)" fg:x="5080" fg:w="1"/><text x="53.4716%" y="991.50"></text></g><g><title>regex::compile::SuffixCache::hash (1 samples, 0.01%)</title><rect x="53.2216%" y="965" width="0.0105%" height="15" fill="rgb(207,189,15)" fg:x="5080" fg:w="1"/><text x="53.4716%" y="975.50"></text></g><g><title>&lt;core::iter::adapters::peekable::Peekable&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="53.2321%" y="997" width="0.0105%" height="15" fill="rgb(231,115,4)" fg:x="5081" fg:w="1"/><text x="53.4821%" y="1007.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="53.2321%" y="981" width="0.0105%" height="15" fill="rgb(253,117,2)" fg:x="5081" fg:w="1"/><text x="53.4821%" y="991.50"></text></g><g><title>&lt;regex_syntax::utf8::Utf8Sequences as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="53.2321%" y="965" width="0.0105%" height="15" fill="rgb(248,48,24)" fg:x="5081" fg:w="1"/><text x="53.4821%" y="975.50"></text></g><g><title>regex_syntax::utf8::ScalarRange::encode (1 samples, 0.01%)</title><rect x="53.2321%" y="949" width="0.0105%" height="15" fill="rgb(241,28,46)" fg:x="5081" fg:w="1"/><text x="53.4821%" y="959.50"></text></g><g><title>core::char::methods::&lt;impl char&gt;::encode_utf8 (1 samples, 0.01%)</title><rect x="53.2321%" y="933" width="0.0105%" height="15" fill="rgb(216,165,52)" fg:x="5081" fg:w="1"/><text x="53.4821%" y="943.50"></text></g><g><title>core::char::methods::encode_utf8_raw (1 samples, 0.01%)</title><rect x="53.2321%" y="917" width="0.0105%" height="15" fill="rgb(220,222,34)" fg:x="5081" fg:w="1"/><text x="53.4821%" y="927.50"></text></g><g><title>core::char::methods::len_utf8 (1 samples, 0.01%)</title><rect x="53.2321%" y="901" width="0.0105%" height="15" fill="rgb(247,222,49)" fg:x="5081" fg:w="1"/><text x="53.4821%" y="911.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq (1 samples, 0.01%)</title><rect x="53.2425%" y="997" width="0.0105%" height="15" fill="rgb(240,10,31)" fg:x="5082" fg:w="1"/><text x="53.4925%" y="1007.50"></text></g><g><title>regex::compile::CompileClass::c_utf8_seq_ (1 samples, 0.01%)</title><rect x="53.2425%" y="981" width="0.0105%" height="15" fill="rgb(221,199,35)" fg:x="5082" fg:w="1"/><text x="53.4925%" y="991.50"></text></g><g><title>regex::compile::Compiler::compile (5 samples, 0.05%)</title><rect x="53.2111%" y="1221" width="0.0524%" height="15" fill="rgb(230,223,11)" fg:x="5079" fg:w="5"/><text x="53.4611%" y="1231.50"></text></g><g><title>regex::compile::Compiler::compile_one (5 samples, 0.05%)</title><rect x="53.2111%" y="1205" width="0.0524%" height="15" fill="rgb(218,82,45)" fg:x="5079" fg:w="5"/><text x="53.4611%" y="1215.50"></text></g><g><title>regex::compile::Compiler::c_alternate (4 samples, 0.04%)</title><rect x="53.2216%" y="1189" width="0.0419%" height="15" fill="rgb(233,213,33)" fg:x="5080" fg:w="4"/><text x="53.4716%" y="1199.50"></text></g><g><title>regex::compile::Compiler::c (4 samples, 0.04%)</title><rect x="53.2216%" y="1173" width="0.0419%" height="15" fill="rgb(210,143,52)" fg:x="5080" fg:w="4"/><text x="53.4716%" y="1183.50"></text></g><g><title>regex::compile::Compiler::c_concat (4 samples, 0.04%)</title><rect x="53.2216%" y="1157" width="0.0419%" height="15" fill="rgb(206,95,4)" fg:x="5080" fg:w="4"/><text x="53.4716%" y="1167.50"></text></g><g><title>regex::compile::Compiler::c_repeat_range (4 samples, 0.04%)</title><rect x="53.2216%" y="1141" width="0.0419%" height="15" fill="rgb(246,164,46)" fg:x="5080" fg:w="4"/><text x="53.4716%" y="1151.50"></text></g><g><title>regex::compile::Compiler::c_concat (3 samples, 0.03%)</title><rect x="53.2321%" y="1125" width="0.0314%" height="15" fill="rgb(213,210,47)" fg:x="5081" fg:w="3"/><text x="53.4821%" y="1135.50"></text></g><g><title>regex::compile::Compiler::c_alternate (3 samples, 0.03%)</title><rect x="53.2321%" y="1109" width="0.0314%" height="15" fill="rgb(210,12,38)" fg:x="5081" fg:w="3"/><text x="53.4821%" y="1119.50"></text></g><g><title>regex::compile::Compiler::c (3 samples, 0.03%)</title><rect x="53.2321%" y="1093" width="0.0314%" height="15" fill="rgb(252,192,54)" fg:x="5081" fg:w="3"/><text x="53.4821%" y="1103.50"></text></g><g><title>regex::compile::Compiler::c (3 samples, 0.03%)</title><rect x="53.2321%" y="1077" width="0.0314%" height="15" fill="rgb(242,92,6)" fg:x="5081" fg:w="3"/><text x="53.4821%" y="1087.50"></text></g><g><title>regex::compile::Compiler::c_repeat (3 samples, 0.03%)</title><rect x="53.2321%" y="1061" width="0.0314%" height="15" fill="rgb(253,154,15)" fg:x="5081" fg:w="3"/><text x="53.4821%" y="1071.50"></text></g><g><title>regex::compile::Compiler::c_repeat_one_or_more (3 samples, 0.03%)</title><rect x="53.2321%" y="1045" width="0.0314%" height="15" fill="rgb(209,20,43)" fg:x="5081" fg:w="3"/><text x="53.4821%" y="1055.50"></text></g><g><title>regex::compile::Compiler::c_class (3 samples, 0.03%)</title><rect x="53.2321%" y="1029" width="0.0314%" height="15" fill="rgb(232,28,49)" fg:x="5081" fg:w="3"/><text x="53.4821%" y="1039.50"></text></g><g><title>regex::compile::CompileClass::compile (3 samples, 0.03%)</title><rect x="53.2321%" y="1013" width="0.0314%" height="15" fill="rgb(248,131,53)" fg:x="5081" fg:w="3"/><text x="53.4821%" y="1023.50"></text></g><g><title>regex::compile::Compiler::push_split_hole (1 samples, 0.01%)</title><rect x="53.2530%" y="997" width="0.0105%" height="15" fill="rgb(214,16,30)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="1007.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="53.2530%" y="981" width="0.0105%" height="15" fill="rgb(245,16,0)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="991.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="53.2530%" y="965" width="0.0105%" height="15" fill="rgb(245,17,35)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="53.2530%" y="949" width="0.0105%" height="15" fill="rgb(249,27,53)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="959.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="53.2530%" y="933" width="0.0105%" height="15" fill="rgb(214,73,24)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="943.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="53.2530%" y="917" width="0.0105%" height="15" fill="rgb(223,84,37)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="53.2530%" y="901" width="0.0105%" height="15" fill="rgb(210,109,28)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="911.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="53.2530%" y="885" width="0.0105%" height="15" fill="rgb(208,186,6)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="895.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="53.2530%" y="869" width="0.0105%" height="15" fill="rgb(235,201,30)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="879.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="53.2530%" y="853" width="0.0105%" height="15" fill="rgb(216,198,48)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="863.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="53.2530%" y="837" width="0.0105%" height="15" fill="rgb(254,186,25)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="847.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="53.2530%" y="821" width="0.0105%" height="15" fill="rgb(227,87,5)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="53.2530%" y="805" width="0.0105%" height="15" fill="rgb(236,205,25)" fg:x="5083" fg:w="1"/><text x="53.5030%" y="815.50"></text></g><g><title>regex::exec::ExecBuilder::build (6 samples, 0.06%)</title><rect x="53.2111%" y="1237" width="0.0629%" height="15" fill="rgb(229,99,32)" fg:x="5079" fg:w="6"/><text x="53.4611%" y="1247.50"></text></g><g><title>regex::exec::ExecBuilder::parse (1 samples, 0.01%)</title><rect x="53.2635%" y="1221" width="0.0105%" height="15" fill="rgb(231,177,31)" fg:x="5084" fg:w="1"/><text x="53.5135%" y="1231.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (1 samples, 0.01%)</title><rect x="53.2635%" y="1205" width="0.0105%" height="15" fill="rgb(246,15,2)" fg:x="5084" fg:w="1"/><text x="53.5135%" y="1215.50"></text></g><g><title>rodio::stream::OutputStream::try_default (1 samples, 0.01%)</title><rect x="53.2740%" y="1237" width="0.0105%" height="15" fill="rgb(207,39,15)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1247.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (1 samples, 0.01%)</title><rect x="53.2740%" y="1221" width="0.0105%" height="15" fill="rgb(207,44,9)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1231.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (1 samples, 0.01%)</title><rect x="53.2740%" y="1205" width="0.0105%" height="15" fill="rgb(225,224,33)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1215.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (1 samples, 0.01%)</title><rect x="53.2740%" y="1189" width="0.0105%" height="15" fill="rgb(252,151,3)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1199.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (1 samples, 0.01%)</title><rect x="53.2740%" y="1173" width="0.0105%" height="15" fill="rgb(211,140,13)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1183.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (1 samples, 0.01%)</title><rect x="53.2740%" y="1157" width="0.0105%" height="15" fill="rgb(239,225,17)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1167.50"></text></g><g><title>cpal::host::alsa::Device::default_config (1 samples, 0.01%)</title><rect x="53.2740%" y="1141" width="0.0105%" height="15" fill="rgb(223,170,52)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1151.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (1 samples, 0.01%)</title><rect x="53.2740%" y="1125" width="0.0105%" height="15" fill="rgb(212,64,21)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1135.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (1 samples, 0.01%)</title><rect x="53.2740%" y="1109" width="0.0105%" height="15" fill="rgb(236,126,48)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1119.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (1 samples, 0.01%)</title><rect x="53.2740%" y="1093" width="0.0105%" height="15" fill="rgb(209,135,11)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1103.50"></text></g><g><title>alsa::pcm::PCM::new (1 samples, 0.01%)</title><rect x="53.2740%" y="1077" width="0.0105%" height="15" fill="rgb(228,126,40)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1087.50"></text></g><g><title>alsa::pcm::PCM::open (1 samples, 0.01%)</title><rect x="53.2740%" y="1061" width="0.0105%" height="15" fill="rgb(205,196,36)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1071.50"></text></g><g><title>snd_pcm_open (1 samples, 0.01%)</title><rect x="53.2740%" y="1045" width="0.0105%" height="15" fill="rgb(243,160,33)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1055.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="53.2740%" y="1029" width="0.0105%" height="15" fill="rgb(210,84,20)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1039.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="53.2740%" y="1013" width="0.0105%" height="15" fill="rgb(228,213,30)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1023.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="53.2740%" y="997" width="0.0105%" height="15" fill="rgb(252,33,45)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="1007.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="53.2740%" y="981" width="0.0105%" height="15" fill="rgb(254,227,20)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="991.50"></text></g><g><title>snd_dlopen (1 samples, 0.01%)</title><rect x="53.2740%" y="965" width="0.0105%" height="15" fill="rgb(228,192,2)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="975.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="53.2740%" y="949" width="0.0105%" height="15" fill="rgb(233,32,8)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="959.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="53.2740%" y="933" width="0.0105%" height="15" fill="rgb(220,146,47)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="943.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="53.2740%" y="917" width="0.0105%" height="15" fill="rgb(246,194,1)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="927.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="53.2740%" y="901" width="0.0105%" height="15" fill="rgb(218,203,9)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="911.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="53.2740%" y="885" width="0.0105%" height="15" fill="rgb(237,97,14)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="895.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="53.2740%" y="869" width="0.0105%" height="15" fill="rgb(239,76,15)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="879.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="53.2740%" y="853" width="0.0105%" height="15" fill="rgb(222,53,45)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="863.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="53.2740%" y="837" width="0.0105%" height="15" fill="rgb(237,88,5)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="847.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="53.2740%" y="821" width="0.0105%" height="15" fill="rgb(218,223,35)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="831.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="53.2740%" y="805" width="0.0105%" height="15" fill="rgb(243,229,38)" fg:x="5085" fg:w="1"/><text x="53.5240%" y="815.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (2 samples, 0.02%)</title><rect x="53.2844%" y="1237" width="0.0210%" height="15" fill="rgb(240,75,41)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1247.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (2 samples, 0.02%)</title><rect x="53.2844%" y="1221" width="0.0210%" height="15" fill="rgb(209,110,37)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1231.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (2 samples, 0.02%)</title><rect x="53.2844%" y="1205" width="0.0210%" height="15" fill="rgb(221,130,46)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1215.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (2 samples, 0.02%)</title><rect x="53.2844%" y="1189" width="0.0210%" height="15" fill="rgb(237,160,20)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1199.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (2 samples, 0.02%)</title><rect x="53.2844%" y="1173" width="0.0210%" height="15" fill="rgb(234,126,24)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1183.50"></text></g><g><title>cpal::host::alsa::Device::default_config (2 samples, 0.02%)</title><rect x="53.2844%" y="1157" width="0.0210%" height="15" fill="rgb(207,177,9)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1167.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (2 samples, 0.02%)</title><rect x="53.2844%" y="1141" width="0.0210%" height="15" fill="rgb(231,191,33)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1151.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (2 samples, 0.02%)</title><rect x="53.2844%" y="1125" width="0.0210%" height="15" fill="rgb(207,42,1)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1135.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (2 samples, 0.02%)</title><rect x="53.2844%" y="1109" width="0.0210%" height="15" fill="rgb(218,34,50)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1119.50"></text></g><g><title>alsa::pcm::PCM::new (2 samples, 0.02%)</title><rect x="53.2844%" y="1093" width="0.0210%" height="15" fill="rgb(254,126,39)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1103.50"></text></g><g><title>alsa::pcm::PCM::open (2 samples, 0.02%)</title><rect x="53.2844%" y="1077" width="0.0210%" height="15" fill="rgb(251,17,26)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1087.50"></text></g><g><title>snd_pcm_open (2 samples, 0.02%)</title><rect x="53.2844%" y="1061" width="0.0210%" height="15" fill="rgb(252,215,34)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1071.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="53.2844%" y="1045" width="0.0210%" height="15" fill="rgb(217,120,44)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1055.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="53.2844%" y="1029" width="0.0210%" height="15" fill="rgb(211,31,11)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1039.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="53.2844%" y="1013" width="0.0210%" height="15" fill="rgb(222,69,51)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1023.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="53.2844%" y="997" width="0.0210%" height="15" fill="rgb(215,229,42)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="1007.50"></text></g><g><title>snd_dlopen (2 samples, 0.02%)</title><rect x="53.2844%" y="981" width="0.0210%" height="15" fill="rgb(212,102,15)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="991.50"></text></g><g><title>dlopen (2 samples, 0.02%)</title><rect x="53.2844%" y="965" width="0.0210%" height="15" fill="rgb(205,179,41)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="975.50"></text></g><g><title>[libdl-2.33.so] (2 samples, 0.02%)</title><rect x="53.2844%" y="949" width="0.0210%" height="15" fill="rgb(219,148,46)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="959.50"></text></g><g><title>__GI__dl_catch_error (2 samples, 0.02%)</title><rect x="53.2844%" y="933" width="0.0210%" height="15" fill="rgb(243,40,19)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="943.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="53.2844%" y="917" width="0.0210%" height="15" fill="rgb(208,206,34)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="927.50"></text></g><g><title>[libdl-2.33.so] (2 samples, 0.02%)</title><rect x="53.2844%" y="901" width="0.0210%" height="15" fill="rgb(244,184,38)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="911.50"></text></g><g><title>_dl_open (2 samples, 0.02%)</title><rect x="53.2844%" y="885" width="0.0210%" height="15" fill="rgb(244,151,47)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="895.50"></text></g><g><title>__GI__dl_catch_exception (2 samples, 0.02%)</title><rect x="53.2844%" y="869" width="0.0210%" height="15" fill="rgb(236,134,42)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="879.50"></text></g><g><title>dl_open_worker (2 samples, 0.02%)</title><rect x="53.2844%" y="853" width="0.0210%" height="15" fill="rgb(233,93,22)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="863.50"></text></g><g><title>_dl_relocate_object (2 samples, 0.02%)</title><rect x="53.2844%" y="837" width="0.0210%" height="15" fill="rgb(211,202,10)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="847.50"></text></g><g><title>_dl_lookup_symbol_x (2 samples, 0.02%)</title><rect x="53.2844%" y="821" width="0.0210%" height="15" fill="rgb(240,63,8)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="831.50"></text></g><g><title>do_lookup_x (2 samples, 0.02%)</title><rect x="53.2844%" y="805" width="0.0210%" height="15" fill="rgb(214,9,4)" fg:x="5086" fg:w="2"/><text x="53.5344%" y="815.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (5 samples, 0.05%)</title><rect x="53.3054%" y="1237" width="0.0524%" height="15" fill="rgb(243,66,45)" fg:x="5088" fg:w="5"/><text x="53.5554%" y="1247.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (1 samples, 0.01%)</title><rect x="53.3578%" y="1237" width="0.0105%" height="15" fill="rgb(220,50,42)" fg:x="5093" fg:w="1"/><text x="53.6078%" y="1247.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.4835%" y="1077" width="0.0105%" height="15" fill="rgb(220,134,27)" fg:x="5105" fg:w="1"/><text x="53.7335%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.4835%" y="1061" width="0.0105%" height="15" fill="rgb(246,151,50)" fg:x="5105" fg:w="1"/><text x="53.7335%" y="1071.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.4835%" y="1045" width="0.0105%" height="15" fill="rgb(238,216,27)" fg:x="5105" fg:w="1"/><text x="53.7335%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.4835%" y="1029" width="0.0105%" height="15" fill="rgb(250,92,11)" fg:x="5105" fg:w="1"/><text x="53.7335%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.4835%" y="1013" width="0.0105%" height="15" fill="rgb(248,183,6)" fg:x="5105" fg:w="1"/><text x="53.7335%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.4835%" y="997" width="0.0105%" height="15" fill="rgb(211,204,50)" fg:x="5105" fg:w="1"/><text x="53.7335%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.4835%" y="981" width="0.0105%" height="15" fill="rgb(252,55,47)" fg:x="5105" fg:w="1"/><text x="53.7335%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.4835%" y="965" width="0.0105%" height="15" fill="rgb(240,198,32)" fg:x="5105" fg:w="1"/><text x="53.7335%" y="975.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_begin_render_pass (13 samples, 0.14%)</title><rect x="53.3683%" y="1189" width="0.1362%" height="15" fill="rgb(224,203,19)" fg:x="5094" fg:w="13"/><text x="53.6183%" y="1199.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.14%)</title><rect x="53.3683%" y="1173" width="0.1362%" height="15" fill="rgb(205,27,16)" fg:x="5094" fg:w="13"/><text x="53.6183%" y="1183.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (12 samples, 0.13%)</title><rect x="53.3787%" y="1157" width="0.1257%" height="15" fill="rgb(224,226,17)" fg:x="5095" fg:w="12"/><text x="53.6287%" y="1167.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (9 samples, 0.09%)</title><rect x="53.4102%" y="1141" width="0.0943%" height="15" fill="rgb(205,216,54)" fg:x="5098" fg:w="9"/><text x="53.6602%" y="1151.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (9 samples, 0.09%)</title><rect x="53.4102%" y="1125" width="0.0943%" height="15" fill="rgb(248,168,46)" fg:x="5098" fg:w="9"/><text x="53.6602%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="53.4416%" y="1109" width="0.0629%" height="15" fill="rgb(226,111,45)" fg:x="5101" fg:w="6"/><text x="53.6916%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="53.4730%" y="1093" width="0.0314%" height="15" fill="rgb(231,15,9)" fg:x="5104" fg:w="3"/><text x="53.7230%" y="1103.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="53.4940%" y="1077" width="0.0105%" height="15" fill="rgb(243,168,3)" fg:x="5106" fg:w="1"/><text x="53.7440%" y="1087.50"></text></g><g><title>ash::vk::definitions::RenderPassBeginInfoBuilder::render_pass (1 samples, 0.01%)</title><rect x="53.5045%" y="1189" width="0.0105%" height="15" fill="rgb(221,220,54)" fg:x="5107" fg:w="1"/><text x="53.7545%" y="1199.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin_render_pass (15 samples, 0.16%)</title><rect x="53.3683%" y="1205" width="0.1572%" height="15" fill="rgb(232,174,38)" fg:x="5094" fg:w="15"/><text x="53.6183%" y="1215.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::push (1 samples, 0.01%)</title><rect x="53.5149%" y="1189" width="0.0105%" height="15" fill="rgb(205,14,38)" fg:x="5108" fg:w="1"/><text x="53.7649%" y="1199.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple_mut (1 samples, 0.01%)</title><rect x="53.5149%" y="1173" width="0.0105%" height="15" fill="rgb(234,89,19)" fg:x="5108" fg:w="1"/><text x="53.7649%" y="1183.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::spilled (1 samples, 0.01%)</title><rect x="53.5149%" y="1157" width="0.0105%" height="15" fill="rgb(216,68,51)" fg:x="5108" fg:w="1"/><text x="53.7649%" y="1167.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_scissors (1 samples, 0.01%)</title><rect x="53.5254%" y="1205" width="0.0105%" height="15" fill="rgb(213,49,2)" fg:x="5109" fg:w="1"/><text x="53.7754%" y="1215.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="53.5254%" y="1189" width="0.0105%" height="15" fill="rgb(242,146,30)" fg:x="5109" fg:w="1"/><text x="53.7754%" y="1199.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (1 samples, 0.01%)</title><rect x="53.5254%" y="1173" width="0.0105%" height="15" fill="rgb(224,188,11)" fg:x="5109" fg:w="1"/><text x="53.7754%" y="1183.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (1 samples, 0.01%)</title><rect x="53.5254%" y="1157" width="0.0105%" height="15" fill="rgb(213,159,11)" fg:x="5109" fg:w="1"/><text x="53.7754%" y="1167.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="53.5254%" y="1141" width="0.0105%" height="15" fill="rgb(229,13,31)" fg:x="5109" fg:w="1"/><text x="53.7754%" y="1151.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (1 samples, 0.01%)</title><rect x="53.5254%" y="1125" width="0.0105%" height="15" fill="rgb(209,103,11)" fg:x="5109" fg:w="1"/><text x="53.7754%" y="1135.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (1 samples, 0.01%)</title><rect x="53.5254%" y="1109" width="0.0105%" height="15" fill="rgb(206,3,4)" fg:x="5109" fg:w="1"/><text x="53.7754%" y="1119.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_scissors::{{closure}} (1 samples, 0.01%)</title><rect x="53.5254%" y="1093" width="0.0105%" height="15" fill="rgb(252,10,49)" fg:x="5109" fg:w="1"/><text x="53.7754%" y="1103.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_set_scissor (1 samples, 0.01%)</title><rect x="53.5254%" y="1077" width="0.0105%" height="15" fill="rgb(217,160,32)" fg:x="5109" fg:w="1"/><text x="53.7754%" y="1087.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_set_scissor (1 samples, 0.01%)</title><rect x="53.5254%" y="1061" width="0.0105%" height="15" fill="rgb(249,196,0)" fg:x="5109" fg:w="1"/><text x="53.7754%" y="1071.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_viewports (1 samples, 0.01%)</title><rect x="53.5359%" y="1205" width="0.0105%" height="15" fill="rgb(213,17,48)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1215.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="53.5359%" y="1189" width="0.0105%" height="15" fill="rgb(206,42,46)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1199.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (1 samples, 0.01%)</title><rect x="53.5359%" y="1173" width="0.0105%" height="15" fill="rgb(212,105,24)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1183.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (1 samples, 0.01%)</title><rect x="53.5359%" y="1157" width="0.0105%" height="15" fill="rgb(243,216,30)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1167.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="53.5359%" y="1141" width="0.0105%" height="15" fill="rgb(207,121,3)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1151.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (1 samples, 0.01%)</title><rect x="53.5359%" y="1125" width="0.0105%" height="15" fill="rgb(249,78,0)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1135.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (1 samples, 0.01%)</title><rect x="53.5359%" y="1109" width="0.0105%" height="15" fill="rgb(244,151,32)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1119.50"></text></g><g><title>inplace_it::guards::uninitialized_slice_memory_guard::UninitializedSliceMemoryGuard&lt;T&gt;::init_with_dyn_iter (1 samples, 0.01%)</title><rect x="53.5359%" y="1093" width="0.0105%" height="15" fill="rgb(228,63,25)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1103.50"></text></g><g><title>inplace_it::guards::slice_memory_guard::SliceMemoryGuard&lt;T&gt;::new_from_iter (1 samples, 0.01%)</title><rect x="53.5359%" y="1077" width="0.0105%" height="15" fill="rgb(231,158,23)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1087.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="53.5359%" y="1061" width="0.0105%" height="15" fill="rgb(248,107,23)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1071.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (1 samples, 0.01%)</title><rect x="53.5359%" y="1045" width="0.0105%" height="15" fill="rgb(215,168,21)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1055.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;mut F&gt;::call_once (1 samples, 0.01%)</title><rect x="53.5359%" y="1029" width="0.0105%" height="15" fill="rgb(227,83,22)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1039.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::set_viewports::{{closure}} (1 samples, 0.01%)</title><rect x="53.5359%" y="1013" width="0.0105%" height="15" fill="rgb(217,118,43)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1023.50"></text></g><g><title>gfx_backend_vulkan::RawDevice::map_viewport (1 samples, 0.01%)</title><rect x="53.5359%" y="997" width="0.0105%" height="15" fill="rgb(229,220,41)" fg:x="5110" fg:w="1"/><text x="53.7859%" y="1007.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (18 samples, 0.19%)</title><rect x="53.3683%" y="1237" width="0.1886%" height="15" fill="rgb(254,146,46)" fg:x="5094" fg:w="18"/><text x="53.6183%" y="1247.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start (18 samples, 0.19%)</title><rect x="53.3683%" y="1221" width="0.1886%" height="15" fill="rgb(233,208,31)" fg:x="5094" fg:w="18"/><text x="53.6183%" y="1231.50"></text></g><g><title>wgpu_core::track::TrackerSet::new (1 samples, 0.01%)</title><rect x="53.5464%" y="1205" width="0.0105%" height="15" fill="rgb(222,162,7)" fg:x="5111" fg:w="1"/><text x="53.7964%" y="1215.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::dispose (1 samples, 0.01%)</title><rect x="53.5568%" y="1237" width="0.0105%" height="15" fill="rgb(230,117,45)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1247.50"></text></g><g><title>core::ptr::drop_in_place&lt;gfx_hal::queue::family::QueueGroup&lt;gfx_backend_vulkan::Backend&gt;&gt; (1 samples, 0.01%)</title><rect x="53.5568%" y="1221" width="0.0105%" height="15" fill="rgb(239,163,6)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1231.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;gfx_backend_vulkan::CommandQueue&gt;&gt; (1 samples, 0.01%)</title><rect x="53.5568%" y="1205" width="0.0105%" height="15" fill="rgb(246,130,17)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="53.5568%" y="1189" width="0.0105%" height="15" fill="rgb(216,84,5)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1199.50"></text></g><g><title>core::ptr::drop_in_place&lt;[gfx_backend_vulkan::CommandQueue]&gt; (1 samples, 0.01%)</title><rect x="53.5568%" y="1173" width="0.0105%" height="15" fill="rgb(230,200,21)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1183.50"></text></g><g><title>core::ptr::drop_in_place&lt;gfx_backend_vulkan::CommandQueue&gt; (1 samples, 0.01%)</title><rect x="53.5568%" y="1157" width="0.0105%" height="15" fill="rgb(224,2,8)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1167.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;gfx_backend_vulkan::RawDevice&gt;&gt; (1 samples, 0.01%)</title><rect x="53.5568%" y="1141" width="0.0105%" height="15" fill="rgb(238,178,10)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1151.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="53.5568%" y="1125" width="0.0105%" height="15" fill="rgb(242,153,24)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1135.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::drop_slow (1 samples, 0.01%)</title><rect x="53.5568%" y="1109" width="0.0105%" height="15" fill="rgb(242,32,48)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1119.50"></text></g><g><title>core::ptr::drop_in_place&lt;gfx_backend_vulkan::RawDevice&gt; (1 samples, 0.01%)</title><rect x="53.5568%" y="1093" width="0.0105%" height="15" fill="rgb(227,36,0)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1103.50"></text></g><g><title>vkDestroyDevice (1 samples, 0.01%)</title><rect x="53.5568%" y="1077" width="0.0105%" height="15" fill="rgb(251,33,35)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1087.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="53.5568%" y="1061" width="0.0105%" height="15" fill="rgb(232,168,51)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1071.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.5568%" y="1045" width="0.0105%" height="15" fill="rgb(228,56,10)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.5568%" y="1029" width="0.0105%" height="15" fill="rgb(231,10,26)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1039.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.5568%" y="1013" width="0.0105%" height="15" fill="rgb(226,202,12)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1023.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.5568%" y="997" width="0.0105%" height="15" fill="rgb(251,49,21)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.5568%" y="981" width="0.0105%" height="15" fill="rgb(206,228,28)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.5568%" y="965" width="0.0105%" height="15" fill="rgb(205,198,31)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.5568%" y="949" width="0.0105%" height="15" fill="rgb(213,69,1)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.5568%" y="933" width="0.0105%" height="15" fill="rgb(209,177,9)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.5568%" y="917" width="0.0105%" height="15" fill="rgb(227,119,30)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.5568%" y="901" width="0.0105%" height="15" fill="rgb(234,106,41)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.5568%" y="885" width="0.0105%" height="15" fill="rgb(244,103,47)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="895.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="53.5568%" y="869" width="0.0105%" height="15" fill="rgb(212,211,25)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="879.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="53.5568%" y="853" width="0.0105%" height="15" fill="rgb(208,63,53)" fg:x="5112" fg:w="1"/><text x="53.8068%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="53.6511%" y="933" width="0.0105%" height="15" fill="rgb(213,176,21)" fg:x="5121" fg:w="1"/><text x="53.9011%" y="943.50"></text></g><g><title>__readdir64 (1 samples, 0.01%)</title><rect x="53.6511%" y="917" width="0.0105%" height="15" fill="rgb(243,124,12)" fg:x="5121" fg:w="1"/><text x="53.9011%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="53.6406%" y="997" width="0.0629%" height="15" fill="rgb(239,2,35)" fg:x="5120" fg:w="6"/><text x="53.8906%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="53.6406%" y="981" width="0.0629%" height="15" fill="rgb(253,169,22)" fg:x="5120" fg:w="6"/><text x="53.8906%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="53.6406%" y="965" width="0.0629%" height="15" fill="rgb(254,51,12)" fg:x="5120" fg:w="6"/><text x="53.8906%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="53.6406%" y="949" width="0.0629%" height="15" fill="rgb(244,17,47)" fg:x="5120" fg:w="6"/><text x="53.8906%" y="959.50"></text></g><g><title>___xstat64 (4 samples, 0.04%)</title><rect x="53.6616%" y="933" width="0.0419%" height="15" fill="rgb(251,45,46)" fg:x="5122" fg:w="4"/><text x="53.9116%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (9 samples, 0.09%)</title><rect x="53.6197%" y="1013" width="0.0943%" height="15" fill="rgb(223,87,43)" fg:x="5118" fg:w="9"/><text x="53.8697%" y="1023.50"></text></g><g><title>__GI___snprintf (1 samples, 0.01%)</title><rect x="53.7035%" y="997" width="0.0105%" height="15" fill="rgb(230,132,31)" fg:x="5126" fg:w="1"/><text x="53.9535%" y="1007.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="53.7035%" y="981" width="0.0105%" height="15" fill="rgb(206,99,1)" fg:x="5126" fg:w="1"/><text x="53.9535%" y="991.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="53.7035%" y="965" width="0.0105%" height="15" fill="rgb(227,110,25)" fg:x="5126" fg:w="1"/><text x="53.9535%" y="975.50"></text></g><g><title>__strchrnul_avx2 (1 samples, 0.01%)</title><rect x="53.7035%" y="949" width="0.0105%" height="15" fill="rgb(217,182,7)" fg:x="5126" fg:w="1"/><text x="53.9535%" y="959.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (15 samples, 0.16%)</title><rect x="53.5673%" y="1045" width="0.1572%" height="15" fill="rgb(250,176,4)" fg:x="5113" fg:w="15"/><text x="53.8173%" y="1055.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.15%)</title><rect x="53.5778%" y="1029" width="0.1467%" height="15" fill="rgb(244,98,30)" fg:x="5114" fg:w="14"/><text x="53.8278%" y="1039.50"></text></g><g><title>__strcasecmp_l_avx (1 samples, 0.01%)</title><rect x="53.7140%" y="1013" width="0.0105%" height="15" fill="rgb(228,150,42)" fg:x="5127" fg:w="1"/><text x="53.9640%" y="1023.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.17%)</title><rect x="53.5673%" y="1125" width="0.1676%" height="15" fill="rgb(231,91,46)" fg:x="5113" fg:w="16"/><text x="53.8173%" y="1135.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.17%)</title><rect x="53.5673%" y="1109" width="0.1676%" height="15" fill="rgb(252,161,32)" fg:x="5113" fg:w="16"/><text x="53.8173%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.17%)</title><rect x="53.5673%" y="1093" width="0.1676%" height="15" fill="rgb(236,69,41)" fg:x="5113" fg:w="16"/><text x="53.8173%" y="1103.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.17%)</title><rect x="53.5673%" y="1077" width="0.1676%" height="15" fill="rgb(212,160,3)" fg:x="5113" fg:w="16"/><text x="53.8173%" y="1087.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.17%)</title><rect x="53.5673%" y="1061" width="0.1676%" height="15" fill="rgb(216,5,50)" fg:x="5113" fg:w="16"/><text x="53.8173%" y="1071.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="53.7245%" y="1045" width="0.0105%" height="15" fill="rgb(241,138,25)" fg:x="5128" fg:w="1"/><text x="53.9745%" y="1055.50"></text></g><g><title>&lt;ash::entry::EntryCustom&lt;L&gt; as ash::entry::EntryV1_0&gt;::create_instance (17 samples, 0.18%)</title><rect x="53.5673%" y="1189" width="0.1781%" height="15" fill="rgb(239,42,18)" fg:x="5113" fg:w="17"/><text x="53.8173%" y="1199.50"></text></g><g><title>vkCreateInstance (17 samples, 0.18%)</title><rect x="53.5673%" y="1173" width="0.1781%" height="15" fill="rgb(239,40,7)" fg:x="5113" fg:w="17"/><text x="53.8173%" y="1183.50"></text></g><g><title>[libvulkan.so.1.2.187] (17 samples, 0.18%)</title><rect x="53.5673%" y="1157" width="0.1781%" height="15" fill="rgb(239,11,31)" fg:x="5113" fg:w="17"/><text x="53.8173%" y="1167.50"></text></g><g><title>[libvulkan.so.1.2.187] (17 samples, 0.18%)</title><rect x="53.5673%" y="1141" width="0.1781%" height="15" fill="rgb(224,77,40)" fg:x="5113" fg:w="17"/><text x="53.8173%" y="1151.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="53.7349%" y="1125" width="0.0105%" height="15" fill="rgb(226,15,5)" fg:x="5129" fg:w="1"/><text x="53.9849%" y="1135.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="53.7349%" y="1109" width="0.0105%" height="15" fill="rgb(254,188,5)" fg:x="5129" fg:w="1"/><text x="53.9849%" y="1119.50"></text></g><g><title>[libvulkan.so.1.2.187] (2 samples, 0.02%)</title><rect x="53.7559%" y="1125" width="0.0210%" height="15" fill="rgb(241,148,52)" fg:x="5131" fg:w="2"/><text x="54.0059%" y="1135.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="53.7664%" y="1109" width="0.0105%" height="15" fill="rgb(251,48,36)" fg:x="5132" fg:w="1"/><text x="54.0164%" y="1119.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.01%)</title><rect x="53.7768%" y="997" width="0.0105%" height="15" fill="rgb(243,83,13)" fg:x="5133" fg:w="1"/><text x="54.0268%" y="1007.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="53.7768%" y="981" width="0.0105%" height="15" fill="rgb(210,105,0)" fg:x="5133" fg:w="1"/><text x="54.0268%" y="991.50"></text></g><g><title>openaux (1 samples, 0.01%)</title><rect x="53.7768%" y="965" width="0.0105%" height="15" fill="rgb(239,60,36)" fg:x="5133" fg:w="1"/><text x="54.0268%" y="975.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="53.7768%" y="949" width="0.0105%" height="15" fill="rgb(210,20,0)" fg:x="5133" fg:w="1"/><text x="54.0268%" y="959.50"></text></g><g><title>strcmp (1 samples, 0.01%)</title><rect x="53.7768%" y="933" width="0.0105%" height="15" fill="rgb(244,26,53)" fg:x="5133" fg:w="1"/><text x="54.0268%" y="943.50"></text></g><g><title>dlopen (7 samples, 0.07%)</title><rect x="53.7768%" y="1125" width="0.0733%" height="15" fill="rgb(240,100,49)" fg:x="5133" fg:w="7"/><text x="54.0268%" y="1135.50"></text></g><g><title>[libdl-2.33.so] (7 samples, 0.07%)</title><rect x="53.7768%" y="1109" width="0.0733%" height="15" fill="rgb(250,46,45)" fg:x="5133" fg:w="7"/><text x="54.0268%" y="1119.50"></text></g><g><title>__GI__dl_catch_error (7 samples, 0.07%)</title><rect x="53.7768%" y="1093" width="0.0733%" height="15" fill="rgb(220,181,29)" fg:x="5133" fg:w="7"/><text x="54.0268%" y="1103.50"></text></g><g><title>__GI__dl_catch_exception (7 samples, 0.07%)</title><rect x="53.7768%" y="1077" width="0.0733%" height="15" fill="rgb(213,137,33)" fg:x="5133" fg:w="7"/><text x="54.0268%" y="1087.50"></text></g><g><title>[libdl-2.33.so] (7 samples, 0.07%)</title><rect x="53.7768%" y="1061" width="0.0733%" height="15" fill="rgb(213,27,48)" fg:x="5133" fg:w="7"/><text x="54.0268%" y="1071.50"></text></g><g><title>_dl_open (7 samples, 0.07%)</title><rect x="53.7768%" y="1045" width="0.0733%" height="15" fill="rgb(245,180,39)" fg:x="5133" fg:w="7"/><text x="54.0268%" y="1055.50"></text></g><g><title>__GI__dl_catch_exception (7 samples, 0.07%)</title><rect x="53.7768%" y="1029" width="0.0733%" height="15" fill="rgb(212,158,42)" fg:x="5133" fg:w="7"/><text x="54.0268%" y="1039.50"></text></g><g><title>dl_open_worker (7 samples, 0.07%)</title><rect x="53.7768%" y="1013" width="0.0733%" height="15" fill="rgb(228,193,18)" fg:x="5133" fg:w="7"/><text x="54.0268%" y="1023.50"></text></g><g><title>_dl_relocate_object (6 samples, 0.06%)</title><rect x="53.7873%" y="997" width="0.0629%" height="15" fill="rgb(245,172,29)" fg:x="5134" fg:w="6"/><text x="54.0373%" y="1007.50"></text></g><g><title>_dl_lookup_symbol_x (4 samples, 0.04%)</title><rect x="53.8083%" y="981" width="0.0419%" height="15" fill="rgb(207,98,24)" fg:x="5136" fg:w="4"/><text x="54.0583%" y="991.50"></text></g><g><title>do_lookup_x (4 samples, 0.04%)</title><rect x="53.8083%" y="965" width="0.0419%" height="15" fill="rgb(249,92,26)" fg:x="5136" fg:w="4"/><text x="54.0583%" y="975.50"></text></g><g><title>check_match (2 samples, 0.02%)</title><rect x="53.8292%" y="949" width="0.0210%" height="15" fill="rgb(217,176,26)" fg:x="5138" fg:w="2"/><text x="54.0792%" y="959.50"></text></g><g><title>strcmp (1 samples, 0.01%)</title><rect x="53.8397%" y="933" width="0.0105%" height="15" fill="rgb(221,8,39)" fg:x="5139" fg:w="1"/><text x="54.0897%" y="943.50"></text></g><g><title>XGetVisualInfo (8 samples, 0.08%)</title><rect x="53.8502%" y="1061" width="0.0838%" height="15" fill="rgb(208,90,18)" fg:x="5140" fg:w="8"/><text x="54.1002%" y="1071.50"></text></g><g><title>_XVIDtoVisual (1 samples, 0.01%)</title><rect x="53.9235%" y="1045" width="0.0105%" height="15" fill="rgb(207,202,30)" fg:x="5147" fg:w="1"/><text x="54.1735%" y="1055.50"></text></g><g><title>__strcspn_sse42 (4 samples, 0.04%)</title><rect x="53.9340%" y="1045" width="0.0419%" height="15" fill="rgb(231,124,22)" fg:x="5148" fg:w="4"/><text x="54.1840%" y="1055.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="53.9759%" y="1045" width="0.0105%" height="15" fill="rgb(206,15,5)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="1055.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="53.9759%" y="1029" width="0.0105%" height="15" fill="rgb(239,16,52)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="1039.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="53.9759%" y="1013" width="0.0105%" height="15" fill="rgb(245,213,29)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="1023.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="53.9759%" y="997" width="0.0105%" height="15" fill="rgb(213,203,36)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="1007.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="53.9759%" y="981" width="0.0105%" height="15" fill="rgb(209,55,18)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="991.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="53.9759%" y="965" width="0.0105%" height="15" fill="rgb(207,133,49)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="975.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="53.9759%" y="949" width="0.0105%" height="15" fill="rgb(240,33,46)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="959.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="53.9759%" y="933" width="0.0105%" height="15" fill="rgb(212,35,2)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="943.50"></text></g><g><title>_dl_map_object_deps (1 samples, 0.01%)</title><rect x="53.9759%" y="917" width="0.0105%" height="15" fill="rgb(231,119,28)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="927.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="53.9759%" y="901" width="0.0105%" height="15" fill="rgb(252,178,7)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="911.50"></text></g><g><title>openaux (1 samples, 0.01%)</title><rect x="53.9759%" y="885" width="0.0105%" height="15" fill="rgb(251,91,4)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="895.50"></text></g><g><title>_dl_map_object (1 samples, 0.01%)</title><rect x="53.9759%" y="869" width="0.0105%" height="15" fill="rgb(233,122,19)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="879.50"></text></g><g><title>_dl_name_match_p (1 samples, 0.01%)</title><rect x="53.9759%" y="853" width="0.0105%" height="15" fill="rgb(231,208,46)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="863.50"></text></g><g><title>strcmp (1 samples, 0.01%)</title><rect x="53.9759%" y="837" width="0.0105%" height="15" fill="rgb(243,15,41)" fg:x="5152" fg:w="1"/><text x="54.2259%" y="847.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (6 samples, 0.06%)</title><rect x="53.9340%" y="1061" width="0.0629%" height="15" fill="rgb(210,32,43)" fg:x="5148" fg:w="6"/><text x="54.1840%" y="1071.50"></text></g><g><title>stpcpy@plt (1 samples, 0.01%)</title><rect x="53.9864%" y="1045" width="0.0105%" height="15" fill="rgb(222,177,15)" fg:x="5153" fg:w="1"/><text x="54.2364%" y="1055.50"></text></g><g><title>_XRead (1 samples, 0.01%)</title><rect x="53.9969%" y="1061" width="0.0105%" height="15" fill="rgb(244,121,34)" fg:x="5154" fg:w="1"/><text x="54.2469%" y="1071.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="53.9969%" y="1045" width="0.0105%" height="15" fill="rgb(234,138,4)" fg:x="5154" fg:w="1"/><text x="54.2469%" y="1055.50"></text></g><g><title>ash::entry::EntryV1_0::enumerate_instance_extension_properties (26 samples, 0.27%)</title><rect x="53.7454%" y="1189" width="0.2724%" height="15" fill="rgb(240,97,48)" fg:x="5130" fg:w="26"/><text x="53.9954%" y="1199.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (26 samples, 0.27%)</title><rect x="53.7454%" y="1173" width="0.2724%" height="15" fill="rgb(237,65,54)" fg:x="5130" fg:w="26"/><text x="53.9954%" y="1183.50"></text></g><g><title>[libvulkan.so.1.2.187] (25 samples, 0.26%)</title><rect x="53.7559%" y="1157" width="0.2619%" height="15" fill="rgb(214,25,24)" fg:x="5131" fg:w="25"/><text x="54.0059%" y="1167.50"></text></g><g><title>[libvulkan.so.1.2.187] (25 samples, 0.26%)</title><rect x="53.7559%" y="1141" width="0.2619%" height="15" fill="rgb(213,5,3)" fg:x="5131" fg:w="25"/><text x="54.0059%" y="1151.50"></text></g><g><title>vk_icdNegotiateLoaderICDInterfaceVersion (16 samples, 0.17%)</title><rect x="53.8502%" y="1125" width="0.1676%" height="15" fill="rgb(219,81,29)" fg:x="5140" fg:w="16"/><text x="54.1002%" y="1135.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.17%)</title><rect x="53.8502%" y="1109" width="0.1676%" height="15" fill="rgb(220,43,48)" fg:x="5140" fg:w="16"/><text x="54.1002%" y="1119.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.17%)</title><rect x="53.8502%" y="1093" width="0.1676%" height="15" fill="rgb(239,157,2)" fg:x="5140" fg:w="16"/><text x="54.1002%" y="1103.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.17%)</title><rect x="53.8502%" y="1077" width="0.1676%" height="15" fill="rgb(213,104,43)" fg:x="5140" fg:w="16"/><text x="54.1002%" y="1087.50"></text></g><g><title>__memset_avx2_erms (1 samples, 0.01%)</title><rect x="54.0073%" y="1061" width="0.0105%" height="15" fill="rgb(237,84,9)" fg:x="5155" fg:w="1"/><text x="54.2573%" y="1071.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (44 samples, 0.46%)</title><rect x="53.5673%" y="1237" width="0.4610%" height="15" fill="rgb(252,6,33)" fg:x="5113" fg:w="44"/><text x="53.8173%" y="1247.50"></text></g><g><title>wgpu_core::instance::Instance::new (44 samples, 0.46%)</title><rect x="53.5673%" y="1221" width="0.4610%" height="15" fill="rgb(251,172,22)" fg:x="5113" fg:w="44"/><text x="53.8173%" y="1231.50"></text></g><g><title>&lt;gfx_backend_vulkan::Instance as gfx_hal::Instance&lt;gfx_backend_vulkan::Backend&gt;&gt;::create (44 samples, 0.46%)</title><rect x="53.5673%" y="1205" width="0.4610%" height="15" fill="rgb(244,91,53)" fg:x="5113" fg:w="44"/><text x="53.8173%" y="1215.50"></text></g><g><title>ash::entry::EntryV1_0::enumerate_instance_layer_properties (1 samples, 0.01%)</title><rect x="54.0178%" y="1189" width="0.0105%" height="15" fill="rgb(219,29,30)" fg:x="5156" fg:w="1"/><text x="54.2678%" y="1199.50"></text></g><g><title>vkEnumerateInstanceLayerProperties (1 samples, 0.01%)</title><rect x="54.0178%" y="1173" width="0.0105%" height="15" fill="rgb(213,3,15)" fg:x="5156" fg:w="1"/><text x="54.2678%" y="1183.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="54.0178%" y="1157" width="0.0105%" height="15" fill="rgb(208,25,28)" fg:x="5156" fg:w="1"/><text x="54.2678%" y="1167.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="54.0178%" y="1141" width="0.0105%" height="15" fill="rgb(252,144,25)" fg:x="5156" fg:w="1"/><text x="54.2678%" y="1151.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="54.0178%" y="1125" width="0.0105%" height="15" fill="rgb(226,220,25)" fg:x="5156" fg:w="1"/><text x="54.2678%" y="1135.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="54.0178%" y="1109" width="0.0105%" height="15" fill="rgb(212,131,28)" fg:x="5156" fg:w="1"/><text x="54.2678%" y="1119.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="54.0178%" y="1093" width="0.0105%" height="15" fill="rgb(219,143,52)" fg:x="5156" fg:w="1"/><text x="54.2678%" y="1103.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="54.0178%" y="1077" width="0.0105%" height="15" fill="rgb(215,56,7)" fg:x="5156" fg:w="1"/><text x="54.2678%" y="1087.50"></text></g><g><title>wgpu_core::instance::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::request_adapter (1 samples, 0.01%)</title><rect x="54.0283%" y="1237" width="0.0105%" height="15" fill="rgb(239,59,51)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::Instance as gfx_hal::Instance&lt;gfx_backend_vulkan::Backend&gt;&gt;::enumerate_adapters (1 samples, 0.01%)</title><rect x="54.0283%" y="1221" width="0.0105%" height="15" fill="rgb(209,215,4)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1231.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="54.0283%" y="1205" width="0.0105%" height="15" fill="rgb(221,118,39)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1215.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="54.0283%" y="1189" width="0.0105%" height="15" fill="rgb(236,6,44)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1199.50"></text></g><g><title>alloc::vec::source_iter_marker::&lt;impl alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt; for alloc::vec::Vec&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="54.0283%" y="1173" width="0.0105%" height="15" fill="rgb(216,122,9)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1183.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="54.0283%" y="1157" width="0.0105%" height="15" fill="rgb(244,134,42)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1167.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="54.0283%" y="1141" width="0.0105%" height="15" fill="rgb(209,189,35)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1151.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="54.0283%" y="1125" width="0.0105%" height="15" fill="rgb(250,47,36)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1135.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="54.0283%" y="1109" width="0.0105%" height="15" fill="rgb(252,112,4)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1119.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="54.0283%" y="1093" width="0.0105%" height="15" fill="rgb(221,79,51)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1103.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="54.0283%" y="1077" width="0.0105%" height="15" fill="rgb(232,65,53)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1087.50"></text></g><g><title>&lt;gfx_backend_vulkan::Instance as gfx_hal::Instance&lt;gfx_backend_vulkan::Backend&gt;&gt;::enumerate_adapters::{{closure}} (1 samples, 0.01%)</title><rect x="54.0283%" y="1061" width="0.0105%" height="15" fill="rgb(211,37,7)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1071.50"></text></g><g><title>ash::instance::InstanceV1_0::enumerate_device_extension_properties (1 samples, 0.01%)</title><rect x="54.0283%" y="1045" width="0.0105%" height="15" fill="rgb(234,221,18)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1055.50"></text></g><g><title>vkEnumerateDeviceExtensionProperties (1 samples, 0.01%)</title><rect x="54.0283%" y="1029" width="0.0105%" height="15" fill="rgb(220,158,26)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1039.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="54.0283%" y="1013" width="0.0105%" height="15" fill="rgb(220,70,6)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1023.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="54.0283%" y="997" width="0.0105%" height="15" fill="rgb(250,39,48)" fg:x="5157" fg:w="1"/><text x="54.2783%" y="1007.50"></text></g><g><title>wgpu_core::instance::Adapter&lt;B&gt;::create_device (1 samples, 0.01%)</title><rect x="54.0388%" y="1237" width="0.0105%" height="15" fill="rgb(206,40,27)" fg:x="5158" fg:w="1"/><text x="54.2888%" y="1247.50"></text></g><g><title>&lt;gfx_backend_vulkan::PhysicalDevice as gfx_hal::adapter::PhysicalDevice&lt;gfx_backend_vulkan::Backend&gt;&gt;::open (1 samples, 0.01%)</title><rect x="54.0388%" y="1221" width="0.0105%" height="15" fill="rgb(247,80,36)" fg:x="5158" fg:w="1"/><text x="54.2888%" y="1231.50"></text></g><g><title>&lt;ash::instance::Instance as ash::instance::InstanceV1_0&gt;::create_device (1 samples, 0.01%)</title><rect x="54.0388%" y="1205" width="0.0105%" height="15" fill="rgb(222,9,20)" fg:x="5158" fg:w="1"/><text x="54.2888%" y="1215.50"></text></g><g><title>ash::vk::features::InstanceFnV1_0::create_device (1 samples, 0.01%)</title><rect x="54.0388%" y="1189" width="0.0105%" height="15" fill="rgb(217,26,45)" fg:x="5158" fg:w="1"/><text x="54.2888%" y="1199.50"></text></g><g><title>vkCreateDevice (1 samples, 0.01%)</title><rect x="54.0388%" y="1173" width="0.0105%" height="15" fill="rgb(221,67,14)" fg:x="5158" fg:w="1"/><text x="54.2888%" y="1183.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="54.0388%" y="1157" width="0.0105%" height="15" fill="rgb(248,100,24)" fg:x="5158" fg:w="1"/><text x="54.2888%" y="1167.50"></text></g><g><title>[libvulkan.so.1.2.187] (1 samples, 0.01%)</title><rect x="54.0388%" y="1141" width="0.0105%" height="15" fill="rgb(230,187,16)" fg:x="5158" fg:w="1"/><text x="54.2888%" y="1151.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="54.0388%" y="1125" width="0.0105%" height="15" fill="rgb(205,108,13)" fg:x="5158" fg:w="1"/><text x="54.2888%" y="1135.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="54.0388%" y="1109" width="0.0105%" height="15" fill="rgb(235,71,51)" fg:x="5158" fg:w="1"/><text x="54.2888%" y="1119.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="54.0388%" y="1093" width="0.0105%" height="15" fill="rgb(251,172,48)" fg:x="5158" fg:w="1"/><text x="54.2888%" y="1103.50"></text></g><g><title>__strcmp_avx2 (1 samples, 0.01%)</title><rect x="54.0388%" y="1077" width="0.0105%" height="15" fill="rgb(240,96,49)" fg:x="5158" fg:w="1"/><text x="54.2888%" y="1087.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_get_current_texture_view (1 samples, 0.01%)</title><rect x="54.0492%" y="1237" width="0.0105%" height="15" fill="rgb(235,46,36)" fg:x="5159" fg:w="1"/><text x="54.2992%" y="1247.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (3 samples, 0.03%)</title><rect x="54.0597%" y="1237" width="0.0314%" height="15" fill="rgb(244,3,49)" fg:x="5160" fg:w="3"/><text x="54.3097%" y="1247.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (3 samples, 0.03%)</title><rect x="54.0911%" y="1237" width="0.0314%" height="15" fill="rgb(206,78,54)" fg:x="5163" fg:w="3"/><text x="54.3411%" y="1247.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="54.1121%" y="1221" width="0.0105%" height="15" fill="rgb(208,85,42)" fg:x="5165" fg:w="1"/><text x="54.3621%" y="1231.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="54.1121%" y="1205" width="0.0105%" height="15" fill="rgb(219,196,21)" fg:x="5165" fg:w="1"/><text x="54.3621%" y="1215.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="54.1121%" y="1189" width="0.0105%" height="15" fill="rgb(238,19,9)" fg:x="5165" fg:w="1"/><text x="54.3621%" y="1199.50"></text></g><g><title>wgpu_render_pass_set_bind_group (2 samples, 0.02%)</title><rect x="54.1226%" y="1237" width="0.0210%" height="15" fill="rgb(206,86,13)" fg:x="5166" fg:w="2"/><text x="54.3726%" y="1247.50"></text></g><g><title>async_executor::Sleepers::notify (1 samples, 0.01%)</title><rect x="54.1435%" y="901" width="0.0105%" height="15" fill="rgb(214,123,40)" fg:x="5168" fg:w="1"/><text x="54.3935%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (1 samples, 0.01%)</title><rect x="54.1435%" y="885" width="0.0105%" height="15" fill="rgb(243,53,5)" fg:x="5168" fg:w="1"/><text x="54.3935%" y="895.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="54.1435%" y="869" width="0.0105%" height="15" fill="rgb(254,186,31)" fg:x="5168" fg:w="1"/><text x="54.3935%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_and_swap (1 samples, 0.01%)</title><rect x="54.1540%" y="901" width="0.0105%" height="15" fill="rgb(221,216,25)" fg:x="5169" fg:w="1"/><text x="54.4040%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (1 samples, 0.01%)</title><rect x="54.1540%" y="885" width="0.0105%" height="15" fill="rgb(248,107,42)" fg:x="5169" fg:w="1"/><text x="54.4040%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="54.1540%" y="869" width="0.0105%" height="15" fill="rgb(221,85,43)" fg:x="5169" fg:w="1"/><text x="54.4040%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="54.1645%" y="901" width="0.0105%" height="15" fill="rgb(225,34,24)" fg:x="5170" fg:w="1"/><text x="54.4145%" y="911.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::wake (1 samples, 0.01%)</title><rect x="54.1645%" y="885" width="0.0105%" height="15" fill="rgb(211,119,1)" fg:x="5170" fg:w="1"/><text x="54.4145%" y="895.50"></text></g><g><title>futures_lite::future::block_on::parker_and_waker::{{closure}} (1 samples, 0.01%)</title><rect x="54.1645%" y="869" width="0.0105%" height="15" fill="rgb(254,216,46)" fg:x="5170" fg:w="1"/><text x="54.4145%" y="879.50"></text></g><g><title>parking::Unparker::unpark (1 samples, 0.01%)</title><rect x="54.1645%" y="853" width="0.0105%" height="15" fill="rgb(238,11,38)" fg:x="5170" fg:w="1"/><text x="54.4145%" y="863.50"></text></g><g><title>parking::Inner::unpark (1 samples, 0.01%)</title><rect x="54.1645%" y="837" width="0.0105%" height="15" fill="rgb(233,50,15)" fg:x="5170" fg:w="1"/><text x="54.4145%" y="847.50"></text></g><g><title>__pthread_cond_signal (1 samples, 0.01%)</title><rect x="54.1645%" y="821" width="0.0105%" height="15" fill="rgb(217,181,29)" fg:x="5170" fg:w="1"/><text x="54.4145%" y="831.50"></text></g><g><title>async_executor::State::notify (4 samples, 0.04%)</title><rect x="54.1435%" y="917" width="0.0419%" height="15" fill="rgb(214,56,3)" fg:x="5168" fg:w="4"/><text x="54.3935%" y="927.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="54.1750%" y="901" width="0.0105%" height="15" fill="rgb(230,69,45)" fg:x="5171" fg:w="1"/><text x="54.4250%" y="911.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (1 samples, 0.01%)</title><rect x="54.1750%" y="885" width="0.0105%" height="15" fill="rgb(224,201,50)" fg:x="5171" fg:w="1"/><text x="54.4250%" y="895.50"></text></g><g><title>std::sys::unix::mutex::Mutex::lock (1 samples, 0.01%)</title><rect x="54.1750%" y="869" width="0.0105%" height="15" fill="rgb(217,228,18)" fg:x="5171" fg:w="1"/><text x="54.4250%" y="879.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="54.1750%" y="853" width="0.0105%" height="15" fill="rgb(239,33,44)" fg:x="5171" fg:w="1"/><text x="54.4250%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.03%)</title><rect x="54.1854%" y="885" width="0.0314%" height="15" fill="rgb(248,210,23)" fg:x="5172" fg:w="3"/><text x="54.4354%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="54.1854%" y="869" width="0.0314%" height="15" fill="rgb(253,135,8)" fg:x="5172" fg:w="3"/><text x="54.4354%" y="879.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (8 samples, 0.08%)</title><rect x="54.1435%" y="933" width="0.0838%" height="15" fill="rgb(217,98,21)" fg:x="5168" fg:w="8"/><text x="54.3935%" y="943.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (4 samples, 0.04%)</title><rect x="54.1854%" y="917" width="0.0419%" height="15" fill="rgb(253,130,21)" fg:x="5172" fg:w="4"/><text x="54.4354%" y="927.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (4 samples, 0.04%)</title><rect x="54.1854%" y="901" width="0.0419%" height="15" fill="rgb(207,81,54)" fg:x="5172" fg:w="4"/><text x="54.4354%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="54.2169%" y="885" width="0.0105%" height="15" fill="rgb(232,48,33)" fg:x="5175" fg:w="1"/><text x="54.4669%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="54.2169%" y="869" width="0.0105%" height="15" fill="rgb(211,9,35)" fg:x="5175" fg:w="1"/><text x="54.4669%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (12 samples, 0.13%)</title><rect x="54.1435%" y="949" width="0.1257%" height="15" fill="rgb(205,152,21)" fg:x="5168" fg:w="12"/><text x="54.3935%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (4 samples, 0.04%)</title><rect x="54.2273%" y="933" width="0.0419%" height="15" fill="rgb(249,21,27)" fg:x="5176" fg:w="4"/><text x="54.4773%" y="943.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="54.2273%" y="917" width="0.0419%" height="15" fill="rgb(252,29,24)" fg:x="5176" fg:w="4"/><text x="54.4773%" y="927.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_waker (4 samples, 0.04%)</title><rect x="54.2273%" y="901" width="0.0419%" height="15" fill="rgb(230,130,50)" fg:x="5176" fg:w="4"/><text x="54.4773%" y="911.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.04%)</title><rect x="54.2273%" y="885" width="0.0419%" height="15" fill="rgb(239,144,14)" fg:x="5176" fg:w="4"/><text x="54.4773%" y="895.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.04%)</title><rect x="54.2273%" y="869" width="0.0419%" height="15" fill="rgb(227,111,50)" fg:x="5176" fg:w="4"/><text x="54.4773%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (19 samples, 0.20%)</title><rect x="54.1435%" y="1013" width="0.1991%" height="15" fill="rgb(254,84,20)" fg:x="5168" fg:w="19"/><text x="54.3935%" y="1023.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (19 samples, 0.20%)</title><rect x="54.1435%" y="997" width="0.1991%" height="15" fill="rgb(232,90,48)" fg:x="5168" fg:w="19"/><text x="54.3935%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (19 samples, 0.20%)</title><rect x="54.1435%" y="981" width="0.1991%" height="15" fill="rgb(253,63,47)" fg:x="5168" fg:w="19"/><text x="54.3935%" y="991.50"></text></g><g><title>async_executor::Executor::spawn (19 samples, 0.20%)</title><rect x="54.1435%" y="965" width="0.1991%" height="15" fill="rgb(251,146,35)" fg:x="5168" fg:w="19"/><text x="54.3935%" y="975.50"></text></g><g><title>async_task::runnable::spawn_unchecked (7 samples, 0.07%)</title><rect x="54.2693%" y="949" width="0.0733%" height="15" fill="rgb(229,192,35)" fg:x="5180" fg:w="7"/><text x="54.5193%" y="959.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (7 samples, 0.07%)</title><rect x="54.2693%" y="933" width="0.0733%" height="15" fill="rgb(225,68,9)" fg:x="5180" fg:w="7"/><text x="54.5193%" y="943.50"></text></g><g><title>alloc::alloc::alloc (7 samples, 0.07%)</title><rect x="54.2693%" y="917" width="0.0733%" height="15" fill="rgb(214,97,34)" fg:x="5180" fg:w="7"/><text x="54.5193%" y="927.50"></text></g><g><title>__GI___libc_malloc (7 samples, 0.07%)</title><rect x="54.2693%" y="901" width="0.0733%" height="15" fill="rgb(253,31,26)" fg:x="5180" fg:w="7"/><text x="54.5193%" y="911.50"></text></g><g><title>_int_malloc (6 samples, 0.06%)</title><rect x="54.2797%" y="885" width="0.0629%" height="15" fill="rgb(225,151,47)" fg:x="5181" fg:w="6"/><text x="54.5297%" y="895.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="54.3321%" y="869" width="0.0105%" height="15" fill="rgb(206,185,9)" fg:x="5186" fg:w="1"/><text x="54.5821%" y="879.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="54.3426%" y="901" width="0.0210%" height="15" fill="rgb(249,65,17)" fg:x="5187" fg:w="2"/><text x="54.5926%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="54.3426%" y="885" width="0.0210%" height="15" fill="rgb(220,110,10)" fg:x="5187" fg:w="2"/><text x="54.5926%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="54.3426%" y="869" width="0.0210%" height="15" fill="rgb(222,198,49)" fg:x="5187" fg:w="2"/><text x="54.5926%" y="879.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (2 samples, 0.02%)</title><rect x="54.3426%" y="853" width="0.0210%" height="15" fill="rgb(239,81,13)" fg:x="5187" fg:w="2"/><text x="54.5926%" y="863.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (2 samples, 0.02%)</title><rect x="54.3426%" y="837" width="0.0210%" height="15" fill="rgb(216,128,11)" fg:x="5187" fg:w="2"/><text x="54.5926%" y="847.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (2 samples, 0.02%)</title><rect x="54.3426%" y="821" width="0.0210%" height="15" fill="rgb(247,156,8)" fg:x="5187" fg:w="2"/><text x="54.5926%" y="831.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (2 samples, 0.02%)</title><rect x="54.3426%" y="805" width="0.0210%" height="15" fill="rgb(219,173,1)" fg:x="5187" fg:w="2"/><text x="54.5926%" y="815.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (2 samples, 0.02%)</title><rect x="54.3426%" y="789" width="0.0210%" height="15" fill="rgb(227,42,24)" fg:x="5187" fg:w="2"/><text x="54.5926%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="54.3426%" y="773" width="0.0210%" height="15" fill="rgb(253,219,50)" fg:x="5187" fg:w="2"/><text x="54.5926%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="54.3426%" y="757" width="0.0210%" height="15" fill="rgb(215,191,54)" fg:x="5187" fg:w="2"/><text x="54.5926%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="54.4369%" y="837" width="0.0105%" height="15" fill="rgb(238,83,12)" fg:x="5196" fg:w="1"/><text x="54.6869%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="54.4369%" y="821" width="0.0105%" height="15" fill="rgb(205,124,9)" fg:x="5196" fg:w="1"/><text x="54.6869%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="54.4369%" y="805" width="0.0105%" height="15" fill="rgb(253,174,7)" fg:x="5196" fg:w="1"/><text x="54.6869%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="54.4369%" y="789" width="0.0105%" height="15" fill="rgb(206,134,49)" fg:x="5196" fg:w="1"/><text x="54.6869%" y="799.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="54.4369%" y="773" width="0.0105%" height="15" fill="rgb(221,89,20)" fg:x="5196" fg:w="1"/><text x="54.6869%" y="783.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="54.4474%" y="837" width="0.0105%" height="15" fill="rgb(240,205,13)" fg:x="5197" fg:w="1"/><text x="54.6974%" y="847.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system::{{closure}} (1 samples, 0.01%)</title><rect x="54.4683%" y="789" width="0.0105%" height="15" fill="rgb(237,174,32)" fg:x="5199" fg:w="1"/><text x="54.7183%" y="799.50"></text></g><g><title>&lt;bevy_core::float_ord::FloatOrd as core::ops::arith::Neg&gt;::neg (1 samples, 0.01%)</title><rect x="54.4683%" y="773" width="0.0105%" height="15" fill="rgb(226,12,15)" fg:x="5199" fg:w="1"/><text x="54.7183%" y="783.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (3 samples, 0.03%)</title><rect x="54.4578%" y="837" width="0.0314%" height="15" fill="rgb(245,160,52)" fg:x="5198" fg:w="3"/><text x="54.7078%" y="847.50"></text></g><g><title>alloc::slice::merge_sort (3 samples, 0.03%)</title><rect x="54.4578%" y="821" width="0.0314%" height="15" fill="rgb(253,80,21)" fg:x="5198" fg:w="3"/><text x="54.7078%" y="831.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key::{{closure}} (2 samples, 0.02%)</title><rect x="54.4683%" y="805" width="0.0210%" height="15" fill="rgb(231,225,22)" fg:x="5199" fg:w="2"/><text x="54.7183%" y="815.50"></text></g><g><title>core::cmp::PartialOrd::lt (1 samples, 0.01%)</title><rect x="54.4788%" y="789" width="0.0105%" height="15" fill="rgb(253,185,12)" fg:x="5200" fg:w="1"/><text x="54.7288%" y="799.50"></text></g><g><title>&lt;bevy_core::float_ord::FloatOrd as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="54.4788%" y="773" width="0.0105%" height="15" fill="rgb(234,197,21)" fg:x="5200" fg:w="1"/><text x="54.7288%" y="783.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for f32&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="54.4788%" y="757" width="0.0105%" height="15" fill="rgb(210,47,30)" fg:x="5200" fg:w="1"/><text x="54.7288%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="54.4893%" y="821" width="0.0314%" height="15" fill="rgb(246,139,27)" fg:x="5201" fg:w="3"/><text x="54.7393%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="54.4893%" y="805" width="0.0314%" height="15" fill="rgb(226,130,16)" fg:x="5201" fg:w="3"/><text x="54.7393%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="54.4893%" y="789" width="0.0314%" height="15" fill="rgb(237,208,20)" fg:x="5201" fg:w="3"/><text x="54.7393%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="54.4893%" y="773" width="0.0314%" height="15" fill="rgb(245,186,28)" fg:x="5201" fg:w="3"/><text x="54.7393%" y="783.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="54.4893%" y="757" width="0.0314%" height="15" fill="rgb(238,105,39)" fg:x="5201" fg:w="3"/><text x="54.7393%" y="767.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.03%)</title><rect x="54.4893%" y="741" width="0.0314%" height="15" fill="rgb(253,228,11)" fg:x="5201" fg:w="3"/><text x="54.7393%" y="751.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.03%)</title><rect x="54.4893%" y="725" width="0.0314%" height="15" fill="rgb(224,136,38)" fg:x="5201" fg:w="3"/><text x="54.7393%" y="735.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.03%)</title><rect x="54.4893%" y="709" width="0.0314%" height="15" fill="rgb(211,3,25)" fg:x="5201" fg:w="3"/><text x="54.7393%" y="719.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.03%)</title><rect x="54.4893%" y="693" width="0.0314%" height="15" fill="rgb(238,66,34)" fg:x="5201" fg:w="3"/><text x="54.7393%" y="703.50"></text></g><g><title>_int_realloc (3 samples, 0.03%)</title><rect x="54.4893%" y="677" width="0.0314%" height="15" fill="rgb(223,188,11)" fg:x="5201" fg:w="3"/><text x="54.7393%" y="687.50"></text></g><g><title>_int_malloc (3 samples, 0.03%)</title><rect x="54.4893%" y="661" width="0.0314%" height="15" fill="rgb(221,10,35)" fg:x="5201" fg:w="3"/><text x="54.7393%" y="671.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="54.5102%" y="645" width="0.0105%" height="15" fill="rgb(223,18,44)" fg:x="5203" fg:w="1"/><text x="54.7602%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (4 samples, 0.04%)</title><rect x="54.4893%" y="837" width="0.0419%" height="15" fill="rgb(220,97,41)" fg:x="5201" fg:w="4"/><text x="54.7393%" y="847.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="54.5207%" y="821" width="0.0105%" height="15" fill="rgb(206,95,45)" fg:x="5204" fg:w="1"/><text x="54.7707%" y="831.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (1 samples, 0.01%)</title><rect x="54.5207%" y="805" width="0.0105%" height="15" fill="rgb(209,96,13)" fg:x="5204" fg:w="1"/><text x="54.7707%" y="815.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseArray&lt;I,V&gt;::get (1 samples, 0.01%)</title><rect x="54.5416%" y="757" width="0.0105%" height="15" fill="rgb(237,39,34)" fg:x="5206" fg:w="1"/><text x="54.7916%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="54.5416%" y="741" width="0.0105%" height="15" fill="rgb(213,49,47)" fg:x="5206" fg:w="1"/><text x="54.7916%" y="751.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="54.5416%" y="725" width="0.0105%" height="15" fill="rgb(205,107,27)" fg:x="5206" fg:w="1"/><text x="54.7916%" y="735.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (3 samples, 0.03%)</title><rect x="54.5416%" y="805" width="0.0314%" height="15" fill="rgb(212,142,9)" fg:x="5206" fg:w="3"/><text x="54.7916%" y="815.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column (3 samples, 0.03%)</title><rect x="54.5416%" y="789" width="0.0314%" height="15" fill="rgb(226,182,0)" fg:x="5206" fg:w="3"/><text x="54.7916%" y="799.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get (3 samples, 0.03%)</title><rect x="54.5416%" y="773" width="0.0314%" height="15" fill="rgb(231,3,53)" fg:x="5206" fg:w="3"/><text x="54.7916%" y="783.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (2 samples, 0.02%)</title><rect x="54.5521%" y="757" width="0.0210%" height="15" fill="rgb(246,111,28)" fg:x="5207" fg:w="2"/><text x="54.8021%" y="767.50"></text></g><g><title>bevy_ecs::entity::Entities::get (3 samples, 0.03%)</title><rect x="54.5731%" y="805" width="0.0314%" height="15" fill="rgb(254,183,7)" fg:x="5209" fg:w="3"/><text x="54.8231%" y="815.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (24 samples, 0.25%)</title><rect x="54.3635%" y="853" width="0.2514%" height="15" fill="rgb(247,177,28)" fg:x="5189" fg:w="24"/><text x="54.6135%" y="863.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (8 samples, 0.08%)</title><rect x="54.5312%" y="837" width="0.0838%" height="15" fill="rgb(244,43,1)" fg:x="5205" fg:w="8"/><text x="54.7812%" y="847.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (7 samples, 0.07%)</title><rect x="54.5416%" y="821" width="0.0733%" height="15" fill="rgb(207,2,35)" fg:x="5206" fg:w="7"/><text x="54.7916%" y="831.50"></text></g><g><title>fixedbitset::FixedBitSet::contains (1 samples, 0.01%)</title><rect x="54.6045%" y="805" width="0.0105%" height="15" fill="rgb(213,83,22)" fg:x="5212" fg:w="1"/><text x="54.8545%" y="815.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="54.7931%" y="821" width="0.0105%" height="15" fill="rgb(246,212,13)" fg:x="5230" fg:w="1"/><text x="55.0431%" y="831.50"></text></g><g><title>&lt;&amp;mut I as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="54.7931%" y="837" width="0.0524%" height="15" fill="rgb(213,127,46)" fg:x="5230" fg:w="5"/><text x="55.0431%" y="847.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="54.8036%" y="821" width="0.0419%" height="15" fill="rgb(219,215,39)" fg:x="5231" fg:w="4"/><text x="55.0536%" y="831.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4) as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (3 samples, 0.03%)</title><rect x="54.8140%" y="805" width="0.0314%" height="15" fill="rgb(227,99,17)" fg:x="5232" fg:w="3"/><text x="55.0640%" y="815.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (3 samples, 0.03%)</title><rect x="54.8140%" y="789" width="0.0314%" height="15" fill="rgb(208,155,18)" fg:x="5232" fg:w="3"/><text x="55.0640%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="54.8350%" y="773" width="0.0105%" height="15" fill="rgb(223,204,38)" fg:x="5234" fg:w="1"/><text x="55.0850%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="54.8350%" y="757" width="0.0105%" height="15" fill="rgb(212,114,21)" fg:x="5234" fg:w="1"/><text x="55.0850%" y="767.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResMut&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="54.8455%" y="837" width="0.0105%" height="15" fill="rgb(250,74,13)" fg:x="5235" fg:w="1"/><text x="55.0955%" y="847.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::sort_by_key (1 samples, 0.01%)</title><rect x="54.8559%" y="837" width="0.0105%" height="15" fill="rgb(234,7,1)" fg:x="5236" fg:w="1"/><text x="55.1059%" y="847.50"></text></g><g><title>alloc::slice::merge_sort (1 samples, 0.01%)</title><rect x="54.8559%" y="821" width="0.0105%" height="15" fill="rgb(207,138,31)" fg:x="5236" fg:w="1"/><text x="55.1059%" y="831.50"></text></g><g><title>alloc::slice::insert_head (1 samples, 0.01%)</title><rect x="54.8559%" y="805" width="0.0105%" height="15" fill="rgb(215,186,42)" fg:x="5236" fg:w="1"/><text x="55.1059%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (4 samples, 0.04%)</title><rect x="54.8664%" y="837" width="0.0419%" height="15" fill="rgb(229,205,49)" fg:x="5237" fg:w="4"/><text x="55.1164%" y="847.50"></text></g><g><title>core::intrinsics::copy (4 samples, 0.04%)</title><rect x="54.8664%" y="821" width="0.0419%" height="15" fill="rgb(216,156,32)" fg:x="5237" fg:w="4"/><text x="55.1164%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.04%)</title><rect x="54.8664%" y="805" width="0.0419%" height="15" fill="rgb(238,7,21)" fg:x="5237" fg:w="4"/><text x="55.1164%" y="815.50"></text></g><g><title>&lt;core::time::Duration as core::ops::arith::Mul&lt;u32&gt;&gt;::mul (1 samples, 0.01%)</title><rect x="54.9293%" y="821" width="0.0105%" height="15" fill="rgb(249,190,22)" fg:x="5243" fg:w="1"/><text x="55.1793%" y="831.50"></text></g><g><title>core::time::Duration::checked_mul (1 samples, 0.01%)</title><rect x="54.9293%" y="805" width="0.0105%" height="15" fill="rgb(253,51,31)" fg:x="5243" fg:w="1"/><text x="55.1793%" y="815.50"></text></g><g><title>bevy_core::time::timer::Timer::paused (1 samples, 0.01%)</title><rect x="54.9398%" y="821" width="0.0105%" height="15" fill="rgb(237,90,54)" fg:x="5244" fg:w="1"/><text x="55.1898%" y="831.50"></text></g><g><title>bevy_core::time::stopwatch::Stopwatch::paused (1 samples, 0.01%)</title><rect x="54.9398%" y="805" width="0.0105%" height="15" fill="rgb(250,214,33)" fg:x="5244" fg:w="1"/><text x="55.1898%" y="815.50"></text></g><g><title>bevy_core::time::timer::Timer::percent (1 samples, 0.01%)</title><rect x="54.9502%" y="821" width="0.0105%" height="15" fill="rgb(237,10,49)" fg:x="5245" fg:w="1"/><text x="55.2002%" y="831.50"></text></g><g><title>core::cmp::PartialOrd::ge (2 samples, 0.02%)</title><rect x="54.9607%" y="821" width="0.0210%" height="15" fill="rgb(241,56,36)" fg:x="5246" fg:w="2"/><text x="55.2107%" y="831.50"></text></g><g><title>&lt;core::time::Duration as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.02%)</title><rect x="54.9607%" y="805" width="0.0210%" height="15" fill="rgb(227,164,12)" fg:x="5246" fg:w="2"/><text x="55.2107%" y="815.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for u64&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="54.9712%" y="789" width="0.0105%" height="15" fill="rgb(249,149,35)" fg:x="5247" fg:w="1"/><text x="55.2212%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u64&gt;::cmp (1 samples, 0.01%)</title><rect x="54.9712%" y="773" width="0.0105%" height="15" fill="rgb(238,227,50)" fg:x="5247" fg:w="1"/><text x="55.2212%" y="783.50"></text></g><g><title>bevy_core::time::timer::Timer::tick (8 samples, 0.08%)</title><rect x="54.9083%" y="837" width="0.0838%" height="15" fill="rgb(235,102,45)" fg:x="5241" fg:w="8"/><text x="55.1583%" y="847.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::floor (1 samples, 0.01%)</title><rect x="54.9817%" y="821" width="0.0105%" height="15" fill="rgb(211,10,38)" fg:x="5248" fg:w="1"/><text x="55.2317%" y="831.50"></text></g><g><title>[libm-2.33.so] (1 samples, 0.01%)</title><rect x="54.9817%" y="805" width="0.0105%" height="15" fill="rgb(219,77,48)" fg:x="5248" fg:w="1"/><text x="55.2317%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;(engine::movement::pathing::Position,u32)&gt;&gt; (3 samples, 0.03%)</title><rect x="54.9921%" y="837" width="0.0314%" height="15" fill="rgb(246,6,15)" fg:x="5249" fg:w="3"/><text x="55.2421%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::movement::pathing::Position,u32)&gt;&gt; (3 samples, 0.03%)</title><rect x="54.9921%" y="821" width="0.0314%" height="15" fill="rgb(207,220,2)" fg:x="5249" fg:w="3"/><text x="55.2421%" y="831.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="54.9921%" y="805" width="0.0314%" height="15" fill="rgb(242,48,14)" fg:x="5249" fg:w="3"/><text x="55.2421%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="54.9921%" y="789" width="0.0314%" height="15" fill="rgb(218,19,27)" fg:x="5249" fg:w="3"/><text x="55.2421%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="54.9921%" y="773" width="0.0314%" height="15" fill="rgb(228,0,35)" fg:x="5249" fg:w="3"/><text x="55.2421%" y="783.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="54.9921%" y="757" width="0.0314%" height="15" fill="rgb(244,142,54)" fg:x="5249" fg:w="3"/><text x="55.2421%" y="767.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="54.9921%" y="741" width="0.0314%" height="15" fill="rgb(243,217,40)" fg:x="5249" fg:w="3"/><text x="55.2421%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;engine::movement::pathing::Path&gt; (3 samples, 0.03%)</title><rect x="55.0236%" y="837" width="0.0314%" height="15" fill="rgb(207,114,16)" fg:x="5252" fg:w="3"/><text x="55.2736%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;engine::movement::pathing::Position&gt;&gt; (3 samples, 0.03%)</title><rect x="55.0236%" y="821" width="0.0314%" height="15" fill="rgb(224,33,25)" fg:x="5252" fg:w="3"/><text x="55.2736%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::movement::pathing::Position&gt;&gt; (3 samples, 0.03%)</title><rect x="55.0236%" y="805" width="0.0314%" height="15" fill="rgb(230,93,54)" fg:x="5252" fg:w="3"/><text x="55.2736%" y="815.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (3 samples, 0.03%)</title><rect x="55.0236%" y="789" width="0.0314%" height="15" fill="rgb(224,56,24)" fg:x="5252" fg:w="3"/><text x="55.2736%" y="799.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3 samples, 0.03%)</title><rect x="55.0236%" y="773" width="0.0314%" height="15" fill="rgb(235,189,50)" fg:x="5252" fg:w="3"/><text x="55.2736%" y="783.50"></text></g><g><title>alloc::alloc::dealloc (3 samples, 0.03%)</title><rect x="55.0236%" y="757" width="0.0314%" height="15" fill="rgb(242,173,8)" fg:x="5252" fg:w="3"/><text x="55.2736%" y="767.50"></text></g><g><title>__GI___libc_free (3 samples, 0.03%)</title><rect x="55.0236%" y="741" width="0.0314%" height="15" fill="rgb(209,206,10)" fg:x="5252" fg:w="3"/><text x="55.2736%" y="751.50"></text></g><g><title>_int_free (3 samples, 0.03%)</title><rect x="55.0236%" y="725" width="0.0314%" height="15" fill="rgb(213,182,44)" fg:x="5252" fg:w="3"/><text x="55.2736%" y="735.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.0550%" y="821" width="0.0105%" height="15" fill="rgb(243,51,15)" fg:x="5255" fg:w="1"/><text x="55.3050%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (2 samples, 0.02%)</title><rect x="55.0655%" y="805" width="0.0210%" height="15" fill="rgb(241,13,14)" fg:x="5256" fg:w="2"/><text x="55.3155%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (1 samples, 0.01%)</title><rect x="55.0864%" y="741" width="0.0105%" height="15" fill="rgb(239,147,24)" fg:x="5258" fg:w="1"/><text x="55.3364%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (1 samples, 0.01%)</title><rect x="55.0864%" y="725" width="0.0105%" height="15" fill="rgb(223,129,16)" fg:x="5258" fg:w="1"/><text x="55.3364%" y="735.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="55.1388%" y="645" width="0.0210%" height="15" fill="rgb(209,169,13)" fg:x="5263" fg:w="2"/><text x="55.3888%" y="655.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="55.1598%" y="645" width="0.0105%" height="15" fill="rgb(235,159,41)" fg:x="5265" fg:w="1"/><text x="55.4098%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (12 samples, 0.13%)</title><rect x="55.1074%" y="725" width="0.1257%" height="15" fill="rgb(223,219,48)" fg:x="5260" fg:w="12"/><text x="55.3574%" y="735.50"></text></g><g><title>alloc::alloc::Global::grow_impl (12 samples, 0.13%)</title><rect x="55.1074%" y="709" width="0.1257%" height="15" fill="rgb(236,80,13)" fg:x="5260" fg:w="12"/><text x="55.3574%" y="719.50"></text></g><g><title>alloc::alloc::realloc (12 samples, 0.13%)</title><rect x="55.1074%" y="693" width="0.1257%" height="15" fill="rgb(213,5,6)" fg:x="5260" fg:w="12"/><text x="55.3574%" y="703.50"></text></g><g><title>__GI___libc_realloc (12 samples, 0.13%)</title><rect x="55.1074%" y="677" width="0.1257%" height="15" fill="rgb(205,59,21)" fg:x="5260" fg:w="12"/><text x="55.3574%" y="687.50"></text></g><g><title>_int_realloc (10 samples, 0.10%)</title><rect x="55.1283%" y="661" width="0.1048%" height="15" fill="rgb(247,137,35)" fg:x="5262" fg:w="10"/><text x="55.3783%" y="671.50"></text></g><g><title>_int_malloc (6 samples, 0.06%)</title><rect x="55.1702%" y="645" width="0.0629%" height="15" fill="rgb(242,208,28)" fg:x="5266" fg:w="6"/><text x="55.4202%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (18 samples, 0.19%)</title><rect x="55.0655%" y="821" width="0.1886%" height="15" fill="rgb(245,62,25)" fg:x="5256" fg:w="18"/><text x="55.3155%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (16 samples, 0.17%)</title><rect x="55.0864%" y="805" width="0.1676%" height="15" fill="rgb(233,99,54)" fg:x="5258" fg:w="16"/><text x="55.3364%" y="815.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (16 samples, 0.17%)</title><rect x="55.0864%" y="789" width="0.1676%" height="15" fill="rgb(213,10,37)" fg:x="5258" fg:w="16"/><text x="55.3364%" y="799.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.17%)</title><rect x="55.0864%" y="773" width="0.1676%" height="15" fill="rgb(235,143,30)" fg:x="5258" fg:w="16"/><text x="55.3364%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.17%)</title><rect x="55.0864%" y="757" width="0.1676%" height="15" fill="rgb(250,146,33)" fg:x="5258" fg:w="16"/><text x="55.3364%" y="767.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.16%)</title><rect x="55.0969%" y="741" width="0.1572%" height="15" fill="rgb(226,198,42)" fg:x="5259" fg:w="15"/><text x="55.3469%" y="751.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="55.2331%" y="725" width="0.0210%" height="15" fill="rgb(222,55,6)" fg:x="5272" fg:w="2"/><text x="55.4831%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="55.2960%" y="629" width="0.0210%" height="15" fill="rgb(213,224,31)" fg:x="5278" fg:w="2"/><text x="55.5460%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="55.2960%" y="613" width="0.0210%" height="15" fill="rgb(226,103,35)" fg:x="5278" fg:w="2"/><text x="55.5460%" y="623.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="55.2750%" y="645" width="0.0524%" height="15" fill="rgb(205,66,45)" fg:x="5276" fg:w="5"/><text x="55.5250%" y="655.50"></text></g><g><title>core::hash::sip::u8to64_le (1 samples, 0.01%)</title><rect x="55.3169%" y="629" width="0.0105%" height="15" fill="rgb(226,51,42)" fg:x="5280" fg:w="1"/><text x="55.5669%" y="639.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (7 samples, 0.07%)</title><rect x="55.2645%" y="741" width="0.0733%" height="15" fill="rgb(206,69,1)" fg:x="5275" fg:w="7"/><text x="55.5145%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (7 samples, 0.07%)</title><rect x="55.2645%" y="725" width="0.0733%" height="15" fill="rgb(213,228,47)" fg:x="5275" fg:w="7"/><text x="55.5145%" y="735.50"></text></g><g><title>core::hash::Hasher::write_i64 (7 samples, 0.07%)</title><rect x="55.2645%" y="709" width="0.0733%" height="15" fill="rgb(224,204,18)" fg:x="5275" fg:w="7"/><text x="55.5145%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u64 (7 samples, 0.07%)</title><rect x="55.2645%" y="693" width="0.0733%" height="15" fill="rgb(253,187,47)" fg:x="5275" fg:w="7"/><text x="55.5145%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="55.2750%" y="677" width="0.0629%" height="15" fill="rgb(232,61,2)" fg:x="5276" fg:w="6"/><text x="55.5250%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="55.2750%" y="661" width="0.0629%" height="15" fill="rgb(213,132,35)" fg:x="5276" fg:w="6"/><text x="55.5250%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="55.3274%" y="645" width="0.0105%" height="15" fill="rgb(247,33,21)" fg:x="5281" fg:w="1"/><text x="55.5774%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="55.3588%" y="693" width="0.0105%" height="15" fill="rgb(233,71,46)" fg:x="5284" fg:w="1"/><text x="55.6088%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="55.3588%" y="677" width="0.0105%" height="15" fill="rgb(222,173,43)" fg:x="5284" fg:w="1"/><text x="55.6088%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="55.3693%" y="677" width="0.0210%" height="15" fill="rgb(249,218,47)" fg:x="5285" fg:w="2"/><text x="55.6193%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (6 samples, 0.06%)</title><rect x="55.3379%" y="741" width="0.0629%" height="15" fill="rgb(254,185,48)" fg:x="5282" fg:w="6"/><text x="55.5879%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (6 samples, 0.06%)</title><rect x="55.3379%" y="725" width="0.0629%" height="15" fill="rgb(252,165,50)" fg:x="5282" fg:w="6"/><text x="55.5879%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (6 samples, 0.06%)</title><rect x="55.3379%" y="709" width="0.0629%" height="15" fill="rgb(206,219,6)" fg:x="5282" fg:w="6"/><text x="55.5879%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.03%)</title><rect x="55.3693%" y="693" width="0.0314%" height="15" fill="rgb(212,212,45)" fg:x="5285" fg:w="3"/><text x="55.6193%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="55.3903%" y="677" width="0.0105%" height="15" fill="rgb(221,31,9)" fg:x="5287" fg:w="1"/><text x="55.6403%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.15%)</title><rect x="55.2645%" y="757" width="0.1467%" height="15" fill="rgb(234,198,39)" fg:x="5275" fg:w="14"/><text x="55.5145%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="55.4007%" y="741" width="0.0105%" height="15" fill="rgb(252,145,46)" fg:x="5288" fg:w="1"/><text x="55.6507%" y="751.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="55.4007%" y="725" width="0.0105%" height="15" fill="rgb(237,149,0)" fg:x="5288" fg:w="1"/><text x="55.6507%" y="735.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="55.4007%" y="709" width="0.0105%" height="15" fill="rgb(229,65,5)" fg:x="5288" fg:w="1"/><text x="55.6507%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="55.4007%" y="693" width="0.0105%" height="15" fill="rgb(235,60,36)" fg:x="5288" fg:w="1"/><text x="55.6507%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.4531%" y="709" width="0.0105%" height="15" fill="rgb(222,47,18)" fg:x="5293" fg:w="1"/><text x="55.7031%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.4531%" y="693" width="0.0105%" height="15" fill="rgb(235,114,22)" fg:x="5293" fg:w="1"/><text x="55.7031%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="55.4531%" y="677" width="0.0105%" height="15" fill="rgb(209,167,11)" fg:x="5293" fg:w="1"/><text x="55.7031%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="55.4531%" y="725" width="0.0210%" height="15" fill="rgb(251,73,18)" fg:x="5293" fg:w="2"/><text x="55.7031%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="55.4636%" y="709" width="0.0105%" height="15" fill="rgb(217,60,17)" fg:x="5294" fg:w="1"/><text x="55.7136%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="55.4636%" y="693" width="0.0105%" height="15" fill="rgb(224,36,37)" fg:x="5294" fg:w="1"/><text x="55.7136%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="55.4636%" y="677" width="0.0105%" height="15" fill="rgb(211,21,32)" fg:x="5294" fg:w="1"/><text x="55.7136%" y="687.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.01%)</title><rect x="55.4636%" y="661" width="0.0105%" height="15" fill="rgb(231,55,48)" fg:x="5294" fg:w="1"/><text x="55.7136%" y="671.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="55.4636%" y="645" width="0.0105%" height="15" fill="rgb(227,42,18)" fg:x="5294" fg:w="1"/><text x="55.7136%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (21 samples, 0.22%)</title><rect x="55.4741%" y="725" width="0.2200%" height="15" fill="rgb(217,2,27)" fg:x="5295" fg:w="21"/><text x="55.7241%" y="735.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (21 samples, 0.22%)</title><rect x="55.4741%" y="709" width="0.2200%" height="15" fill="rgb(251,138,23)" fg:x="5295" fg:w="21"/><text x="55.7241%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (43 samples, 0.45%)</title><rect x="55.2645%" y="805" width="0.4505%" height="15" fill="rgb(226,184,11)" fg:x="5275" fg:w="43"/><text x="55.5145%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (43 samples, 0.45%)</title><rect x="55.2645%" y="789" width="0.4505%" height="15" fill="rgb(242,142,12)" fg:x="5275" fg:w="43"/><text x="55.5145%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (43 samples, 0.45%)</title><rect x="55.2645%" y="773" width="0.4505%" height="15" fill="rgb(234,187,18)" fg:x="5275" fg:w="43"/><text x="55.5145%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (29 samples, 0.30%)</title><rect x="55.4112%" y="757" width="0.3038%" height="15" fill="rgb(237,44,42)" fg:x="5289" fg:w="29"/><text x="55.6612%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (29 samples, 0.30%)</title><rect x="55.4112%" y="741" width="0.3038%" height="15" fill="rgb(211,90,23)" fg:x="5289" fg:w="29"/><text x="55.6612%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="55.6941%" y="725" width="0.0210%" height="15" fill="rgb(207,81,18)" fg:x="5316" fg:w="2"/><text x="55.9441%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="55.6941%" y="709" width="0.0210%" height="15" fill="rgb(222,107,28)" fg:x="5316" fg:w="2"/><text x="55.9441%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="55.6941%" y="693" width="0.0210%" height="15" fill="rgb(237,83,52)" fg:x="5316" fg:w="2"/><text x="55.9441%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="55.6941%" y="677" width="0.0210%" height="15" fill="rgb(208,67,11)" fg:x="5316" fg:w="2"/><text x="55.9441%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="55.6941%" y="661" width="0.0210%" height="15" fill="rgb(249,157,49)" fg:x="5316" fg:w="2"/><text x="55.9441%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="55.6941%" y="645" width="0.0210%" height="15" fill="rgb(243,200,1)" fg:x="5316" fg:w="2"/><text x="55.9441%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="55.7255%" y="645" width="0.0629%" height="15" fill="rgb(225,162,37)" fg:x="5319" fg:w="6"/><text x="55.9755%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (5 samples, 0.05%)</title><rect x="55.7360%" y="629" width="0.0524%" height="15" fill="rgb(242,92,13)" fg:x="5320" fg:w="5"/><text x="55.9860%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="55.7674%" y="613" width="0.0210%" height="15" fill="rgb(220,43,36)" fg:x="5323" fg:w="2"/><text x="56.0174%" y="623.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (10 samples, 0.10%)</title><rect x="55.7150%" y="741" width="0.1048%" height="15" fill="rgb(213,165,48)" fg:x="5318" fg:w="10"/><text x="55.9650%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (10 samples, 0.10%)</title><rect x="55.7150%" y="725" width="0.1048%" height="15" fill="rgb(227,200,9)" fg:x="5318" fg:w="10"/><text x="55.9650%" y="735.50"></text></g><g><title>core::hash::Hasher::write_i64 (10 samples, 0.10%)</title><rect x="55.7150%" y="709" width="0.1048%" height="15" fill="rgb(221,222,28)" fg:x="5318" fg:w="10"/><text x="55.9650%" y="719.50"></text></g><g><title>core::hash::Hasher::write_u64 (10 samples, 0.10%)</title><rect x="55.7150%" y="693" width="0.1048%" height="15" fill="rgb(223,142,26)" fg:x="5318" fg:w="10"/><text x="55.9650%" y="703.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="55.7255%" y="677" width="0.0943%" height="15" fill="rgb(243,46,9)" fg:x="5319" fg:w="9"/><text x="55.9755%" y="687.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (9 samples, 0.09%)</title><rect x="55.7255%" y="661" width="0.0943%" height="15" fill="rgb(250,56,11)" fg:x="5319" fg:w="9"/><text x="55.9755%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (3 samples, 0.03%)</title><rect x="55.7884%" y="645" width="0.0314%" height="15" fill="rgb(229,113,5)" fg:x="5325" fg:w="3"/><text x="56.0384%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="55.8198%" y="693" width="0.0105%" height="15" fill="rgb(244,108,28)" fg:x="5328" fg:w="1"/><text x="56.0698%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="55.8198%" y="677" width="0.0105%" height="15" fill="rgb(242,119,50)" fg:x="5328" fg:w="1"/><text x="56.0698%" y="687.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="55.8198%" y="741" width="0.0419%" height="15" fill="rgb(224,164,23)" fg:x="5328" fg:w="4"/><text x="56.0698%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="55.8198%" y="725" width="0.0419%" height="15" fill="rgb(214,227,44)" fg:x="5328" fg:w="4"/><text x="56.0698%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (4 samples, 0.04%)</title><rect x="55.8198%" y="709" width="0.0419%" height="15" fill="rgb(238,202,4)" fg:x="5328" fg:w="4"/><text x="56.0698%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (3 samples, 0.03%)</title><rect x="55.8303%" y="693" width="0.0314%" height="15" fill="rgb(213,190,30)" fg:x="5329" fg:w="3"/><text x="56.0803%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="55.8408%" y="677" width="0.0210%" height="15" fill="rgb(239,15,2)" fg:x="5330" fg:w="2"/><text x="56.0908%" y="687.50"></text></g><g><title>hashbrown::map::make_hash (15 samples, 0.16%)</title><rect x="55.7150%" y="757" width="0.1572%" height="15" fill="rgb(249,229,4)" fg:x="5318" fg:w="15"/><text x="55.9650%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="55.8617%" y="741" width="0.0105%" height="15" fill="rgb(239,75,44)" fg:x="5332" fg:w="1"/><text x="56.1117%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.8722%" y="725" width="0.0105%" height="15" fill="rgb(251,206,23)" fg:x="5333" fg:w="1"/><text x="56.1222%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="55.8722%" y="709" width="0.0105%" height="15" fill="rgb(215,208,0)" fg:x="5333" fg:w="1"/><text x="56.1222%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="55.8827%" y="725" width="0.0105%" height="15" fill="rgb(230,75,50)" fg:x="5334" fg:w="1"/><text x="56.1327%" y="735.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="55.8827%" y="709" width="0.0105%" height="15" fill="rgb(246,180,39)" fg:x="5334" fg:w="1"/><text x="56.1327%" y="719.50"></text></g><g><title>engine::movement::pathing::move_weights (83 samples, 0.87%)</title><rect x="55.0550%" y="837" width="0.8696%" height="15" fill="rgb(249,175,24)" fg:x="5255" fg:w="83"/><text x="55.3050%" y="847.50"></text></g><g><title>engine::movement::pathing::tile_weight (64 samples, 0.67%)</title><rect x="55.2541%" y="821" width="0.6705%" height="15" fill="rgb(247,176,22)" fg:x="5274" fg:w="64"/><text x="55.5041%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (20 samples, 0.21%)</title><rect x="55.7150%" y="805" width="0.2095%" height="15" fill="rgb(241,100,24)" fg:x="5318" fg:w="20"/><text x="55.9650%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (20 samples, 0.21%)</title><rect x="55.7150%" y="789" width="0.2095%" height="15" fill="rgb(233,4,35)" fg:x="5318" fg:w="20"/><text x="55.9650%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (20 samples, 0.21%)</title><rect x="55.7150%" y="773" width="0.2095%" height="15" fill="rgb(211,164,46)" fg:x="5318" fg:w="20"/><text x="55.9650%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (5 samples, 0.05%)</title><rect x="55.8722%" y="757" width="0.0524%" height="15" fill="rgb(242,99,53)" fg:x="5333" fg:w="5"/><text x="56.1222%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (5 samples, 0.05%)</title><rect x="55.8722%" y="741" width="0.0524%" height="15" fill="rgb(243,45,33)" fg:x="5333" fg:w="5"/><text x="56.1222%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="55.8931%" y="725" width="0.0314%" height="15" fill="rgb(217,55,21)" fg:x="5335" fg:w="3"/><text x="56.1431%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="55.8931%" y="709" width="0.0314%" height="15" fill="rgb(245,145,46)" fg:x="5335" fg:w="3"/><text x="56.1431%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="55.8931%" y="693" width="0.0314%" height="15" fill="rgb(215,112,45)" fg:x="5335" fg:w="3"/><text x="56.1431%" y="703.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="55.9036%" y="677" width="0.0210%" height="15" fill="rgb(228,104,16)" fg:x="5336" fg:w="2"/><text x="56.1536%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="55.9036%" y="661" width="0.0210%" height="15" fill="rgb(239,186,38)" fg:x="5336" fg:w="2"/><text x="56.1536%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="55.9036%" y="645" width="0.0210%" height="15" fill="rgb(228,38,35)" fg:x="5336" fg:w="2"/><text x="56.1536%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (1 samples, 0.01%)</title><rect x="56.1027%" y="805" width="0.0105%" height="15" fill="rgb(251,42,40)" fg:x="5355" fg:w="1"/><text x="56.3527%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="56.1446%" y="789" width="0.0105%" height="15" fill="rgb(210,51,19)" fg:x="5359" fg:w="1"/><text x="56.3946%" y="799.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="56.1131%" y="805" width="0.0629%" height="15" fill="rgb(236,94,42)" fg:x="5356" fg:w="6"/><text x="56.3631%" y="815.50"></text></g><g><title>core::ptr::read (2 samples, 0.02%)</title><rect x="56.1551%" y="789" width="0.0210%" height="15" fill="rgb(239,167,16)" fg:x="5360" fg:w="2"/><text x="56.4051%" y="799.50"></text></g><g><title>__GI___libc_free (4 samples, 0.04%)</title><rect x="56.1760%" y="805" width="0.0419%" height="15" fill="rgb(252,175,31)" fg:x="5362" fg:w="4"/><text x="56.4260%" y="815.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="56.1760%" y="789" width="0.0419%" height="15" fill="rgb(206,166,30)" fg:x="5362" fg:w="4"/><text x="56.4260%" y="799.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (2 samples, 0.02%)</title><rect x="56.2179%" y="757" width="0.0210%" height="15" fill="rgb(206,209,37)" fg:x="5366" fg:w="2"/><text x="56.4679%" y="767.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (3 samples, 0.03%)</title><rect x="56.2598%" y="741" width="0.0314%" height="15" fill="rgb(226,91,4)" fg:x="5370" fg:w="3"/><text x="56.5098%" y="751.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (2 samples, 0.02%)</title><rect x="56.2703%" y="725" width="0.0210%" height="15" fill="rgb(222,167,0)" fg:x="5371" fg:w="2"/><text x="56.5203%" y="735.50"></text></g><g><title>core::cmp::PartialOrd::le (2 samples, 0.02%)</title><rect x="56.2703%" y="709" width="0.0210%" height="15" fill="rgb(211,70,14)" fg:x="5371" fg:w="2"/><text x="56.5203%" y="719.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (2 samples, 0.02%)</title><rect x="56.2703%" y="693" width="0.0210%" height="15" fill="rgb(214,84,42)" fg:x="5371" fg:w="2"/><text x="56.5203%" y="703.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (2 samples, 0.02%)</title><rect x="56.2703%" y="677" width="0.0210%" height="15" fill="rgb(235,157,37)" fg:x="5371" fg:w="2"/><text x="56.5203%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (1 samples, 0.01%)</title><rect x="56.2808%" y="661" width="0.0105%" height="15" fill="rgb(225,13,6)" fg:x="5372" fg:w="1"/><text x="56.5308%" y="671.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="56.2913%" y="725" width="0.0314%" height="15" fill="rgb(205,202,1)" fg:x="5373" fg:w="3"/><text x="56.5413%" y="735.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (4 samples, 0.04%)</title><rect x="56.2913%" y="741" width="0.0419%" height="15" fill="rgb(232,195,26)" fg:x="5373" fg:w="4"/><text x="56.5413%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="56.3227%" y="725" width="0.0105%" height="15" fill="rgb(208,102,26)" fg:x="5376" fg:w="1"/><text x="56.5727%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="56.3227%" y="709" width="0.0105%" height="15" fill="rgb(215,41,39)" fg:x="5376" fg:w="1"/><text x="56.5727%" y="719.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (17 samples, 0.18%)</title><rect x="56.2179%" y="805" width="0.1781%" height="15" fill="rgb(247,139,11)" fg:x="5366" fg:w="17"/><text x="56.4679%" y="815.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (17 samples, 0.18%)</title><rect x="56.2179%" y="789" width="0.1781%" height="15" fill="rgb(243,99,6)" fg:x="5366" fg:w="17"/><text x="56.4679%" y="799.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (17 samples, 0.18%)</title><rect x="56.2179%" y="773" width="0.1781%" height="15" fill="rgb(230,168,48)" fg:x="5366" fg:w="17"/><text x="56.4679%" y="783.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (15 samples, 0.16%)</title><rect x="56.2389%" y="757" width="0.1572%" height="15" fill="rgb(238,227,13)" fg:x="5368" fg:w="15"/><text x="56.4889%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (6 samples, 0.06%)</title><rect x="56.3332%" y="741" width="0.0629%" height="15" fill="rgb(209,109,13)" fg:x="5377" fg:w="6"/><text x="56.5832%" y="751.50"></text></g><g><title>core::cmp::PartialOrd::le (6 samples, 0.06%)</title><rect x="56.3332%" y="725" width="0.0629%" height="15" fill="rgb(228,195,1)" fg:x="5377" fg:w="6"/><text x="56.5832%" y="735.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (4 samples, 0.04%)</title><rect x="56.3541%" y="709" width="0.0419%" height="15" fill="rgb(230,218,0)" fg:x="5379" fg:w="4"/><text x="56.6041%" y="719.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (4 samples, 0.04%)</title><rect x="56.3541%" y="693" width="0.0419%" height="15" fill="rgb(206,1,45)" fg:x="5379" fg:w="4"/><text x="56.6041%" y="703.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (2 samples, 0.02%)</title><rect x="56.3751%" y="677" width="0.0210%" height="15" fill="rgb(209,124,26)" fg:x="5381" fg:w="2"/><text x="56.6251%" y="687.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (1 samples, 0.01%)</title><rect x="56.4589%" y="773" width="0.0105%" height="15" fill="rgb(220,59,8)" fg:x="5389" fg:w="1"/><text x="56.7089%" y="783.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="56.4589%" y="757" width="0.0105%" height="15" fill="rgb(251,41,37)" fg:x="5389" fg:w="1"/><text x="56.7089%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="56.4589%" y="741" width="0.0105%" height="15" fill="rgb(239,152,21)" fg:x="5389" fg:w="1"/><text x="56.7089%" y="751.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="56.4694%" y="757" width="0.0105%" height="15" fill="rgb(226,32,1)" fg:x="5390" fg:w="1"/><text x="56.7194%" y="767.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="56.4694%" y="773" width="0.0210%" height="15" fill="rgb(230,154,36)" fg:x="5390" fg:w="2"/><text x="56.7194%" y="783.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="56.4798%" y="757" width="0.0105%" height="15" fill="rgb(208,228,43)" fg:x="5391" fg:w="1"/><text x="56.7298%" y="767.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (1 samples, 0.01%)</title><rect x="56.4798%" y="741" width="0.0105%" height="15" fill="rgb(214,203,3)" fg:x="5391" fg:w="1"/><text x="56.7298%" y="751.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (1 samples, 0.01%)</title><rect x="56.4798%" y="725" width="0.0105%" height="15" fill="rgb(207,149,29)" fg:x="5391" fg:w="1"/><text x="56.7298%" y="735.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (1 samples, 0.01%)</title><rect x="56.4798%" y="709" width="0.0105%" height="15" fill="rgb(250,105,7)" fg:x="5391" fg:w="1"/><text x="56.7298%" y="719.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (23 samples, 0.24%)</title><rect x="56.4903%" y="773" width="0.2410%" height="15" fill="rgb(232,222,16)" fg:x="5392" fg:w="23"/><text x="56.7403%" y="783.50"></text></g><g><title>core::cmp::PartialOrd::le (23 samples, 0.24%)</title><rect x="56.4903%" y="757" width="0.2410%" height="15" fill="rgb(209,32,24)" fg:x="5392" fg:w="23"/><text x="56.7403%" y="767.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (22 samples, 0.23%)</title><rect x="56.5008%" y="741" width="0.2305%" height="15" fill="rgb(225,13,6)" fg:x="5393" fg:w="22"/><text x="56.7508%" y="751.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (18 samples, 0.19%)</title><rect x="56.5427%" y="725" width="0.1886%" height="15" fill="rgb(245,226,26)" fg:x="5397" fg:w="18"/><text x="56.7927%" y="735.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for u32&gt;::cmp (8 samples, 0.08%)</title><rect x="56.6475%" y="709" width="0.0838%" height="15" fill="rgb(229,178,27)" fg:x="5407" fg:w="8"/><text x="56.8975%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="56.7417%" y="741" width="0.0524%" height="15" fill="rgb(205,227,28)" fg:x="5416" fg:w="5"/><text x="56.9917%" y="751.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (44 samples, 0.46%)</title><rect x="56.3960%" y="789" width="0.4610%" height="15" fill="rgb(210,191,45)" fg:x="5383" fg:w="44"/><text x="56.6460%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;u32&gt;&gt;&gt; (12 samples, 0.13%)</title><rect x="56.7313%" y="773" width="0.1257%" height="15" fill="rgb(206,124,16)" fg:x="5415" fg:w="12"/><text x="56.9813%" y="783.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (12 samples, 0.13%)</title><rect x="56.7313%" y="757" width="0.1257%" height="15" fill="rgb(210,162,0)" fg:x="5415" fg:w="12"/><text x="56.9813%" y="767.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked_mut (6 samples, 0.06%)</title><rect x="56.7941%" y="741" width="0.0629%" height="15" fill="rgb(211,54,38)" fg:x="5421" fg:w="6"/><text x="57.0441%" y="751.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked_mut (6 samples, 0.06%)</title><rect x="56.7941%" y="725" width="0.0629%" height="15" fill="rgb(248,192,3)" fg:x="5421" fg:w="6"/><text x="57.0441%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (6 samples, 0.06%)</title><rect x="56.7941%" y="709" width="0.0629%" height="15" fill="rgb(233,187,18)" fg:x="5421" fg:w="6"/><text x="57.0441%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (6 samples, 0.06%)</title><rect x="56.7941%" y="693" width="0.0629%" height="15" fill="rgb(237,208,14)" fg:x="5421" fg:w="6"/><text x="57.0441%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="56.8779%" y="709" width="0.0105%" height="15" fill="rgb(212,77,1)" fg:x="5429" fg:w="1"/><text x="57.1279%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="56.9199%" y="613" width="0.0105%" height="15" fill="rgb(210,163,22)" fg:x="5433" fg:w="1"/><text x="57.1699%" y="623.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="56.9303%" y="613" width="0.0210%" height="15" fill="rgb(250,58,28)" fg:x="5434" fg:w="2"/><text x="57.1803%" y="623.50"></text></g><g><title>__GI___libc_realloc (14 samples, 0.15%)</title><rect x="56.8884%" y="645" width="0.1467%" height="15" fill="rgb(254,28,41)" fg:x="5430" fg:w="14"/><text x="57.1384%" y="655.50"></text></g><g><title>_int_realloc (12 samples, 0.13%)</title><rect x="56.9094%" y="629" width="0.1257%" height="15" fill="rgb(237,162,36)" fg:x="5432" fg:w="12"/><text x="57.1594%" y="639.50"></text></g><g><title>_int_malloc (8 samples, 0.08%)</title><rect x="56.9513%" y="613" width="0.0838%" height="15" fill="rgb(232,56,6)" fg:x="5436" fg:w="8"/><text x="57.2013%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (17 samples, 0.18%)</title><rect x="56.8675%" y="773" width="0.1781%" height="15" fill="rgb(216,127,42)" fg:x="5428" fg:w="17"/><text x="57.1175%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (17 samples, 0.18%)</title><rect x="56.8675%" y="757" width="0.1781%" height="15" fill="rgb(241,69,15)" fg:x="5428" fg:w="17"/><text x="57.1175%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (16 samples, 0.17%)</title><rect x="56.8779%" y="741" width="0.1676%" height="15" fill="rgb(227,180,19)" fg:x="5429" fg:w="16"/><text x="57.1279%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (16 samples, 0.17%)</title><rect x="56.8779%" y="725" width="0.1676%" height="15" fill="rgb(231,188,29)" fg:x="5429" fg:w="16"/><text x="57.1279%" y="735.50"></text></g><g><title>alloc::raw_vec::finish_grow (15 samples, 0.16%)</title><rect x="56.8884%" y="709" width="0.1572%" height="15" fill="rgb(224,176,27)" fg:x="5430" fg:w="15"/><text x="57.1384%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (15 samples, 0.16%)</title><rect x="56.8884%" y="693" width="0.1572%" height="15" fill="rgb(249,214,19)" fg:x="5430" fg:w="15"/><text x="57.1384%" y="703.50"></text></g><g><title>alloc::alloc::Global::grow_impl (15 samples, 0.16%)</title><rect x="56.8884%" y="677" width="0.1572%" height="15" fill="rgb(240,0,4)" fg:x="5430" fg:w="15"/><text x="57.1384%" y="687.50"></text></g><g><title>alloc::alloc::realloc (15 samples, 0.16%)</title><rect x="56.8884%" y="661" width="0.1572%" height="15" fill="rgb(233,28,41)" fg:x="5430" fg:w="15"/><text x="57.1384%" y="671.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="57.0351%" y="645" width="0.0105%" height="15" fill="rgb(220,90,51)" fg:x="5444" fg:w="1"/><text x="57.2851%" y="655.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="57.0351%" y="629" width="0.0105%" height="15" fill="rgb(250,52,22)" fg:x="5444" fg:w="1"/><text x="57.2851%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (20 samples, 0.21%)</title><rect x="56.8570%" y="789" width="0.2095%" height="15" fill="rgb(231,152,36)" fg:x="5427" fg:w="20"/><text x="57.1070%" y="799.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="57.0456%" y="773" width="0.0210%" height="15" fill="rgb(250,218,4)" fg:x="5445" fg:w="2"/><text x="57.2956%" y="783.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (70 samples, 0.73%)</title><rect x="56.3960%" y="805" width="0.7334%" height="15" fill="rgb(210,38,21)" fg:x="5383" fg:w="70"/><text x="56.6460%" y="815.50"></text></g><g><title>pathfinding::directed::astar::astar (6 samples, 0.06%)</title><rect x="57.0665%" y="789" width="0.0629%" height="15" fill="rgb(230,75,13)" fg:x="5447" fg:w="6"/><text x="57.3165%" y="799.50"></text></g><g><title>alloc::alloc::dealloc (15 samples, 0.16%)</title><rect x="57.1294%" y="693" width="0.1572%" height="15" fill="rgb(250,68,53)" fg:x="5453" fg:w="15"/><text x="57.3794%" y="703.50"></text></g><g><title>__GI___libc_free (15 samples, 0.16%)</title><rect x="57.1294%" y="677" width="0.1572%" height="15" fill="rgb(250,210,16)" fg:x="5453" fg:w="15"/><text x="57.3794%" y="687.50"></text></g><g><title>_int_free (13 samples, 0.14%)</title><rect x="57.1503%" y="661" width="0.1362%" height="15" fill="rgb(240,132,5)" fg:x="5455" fg:w="13"/><text x="57.4003%" y="671.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (16 samples, 0.17%)</title><rect x="57.1294%" y="709" width="0.1676%" height="15" fill="rgb(222,148,48)" fg:x="5453" fg:w="16"/><text x="57.3794%" y="719.50"></text></g><g><title>pathfinding::directed::astar::astar (1 samples, 0.01%)</title><rect x="57.2865%" y="693" width="0.0105%" height="15" fill="rgb(247,181,24)" fg:x="5468" fg:w="1"/><text x="57.5365%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::movement::pathing::Position,u32)&gt;&gt; (17 samples, 0.18%)</title><rect x="57.1294%" y="805" width="0.1781%" height="15" fill="rgb(239,5,31)" fg:x="5453" fg:w="17"/><text x="57.3794%" y="815.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.18%)</title><rect x="57.1294%" y="789" width="0.1781%" height="15" fill="rgb(241,152,38)" fg:x="5453" fg:w="17"/><text x="57.3794%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::movement::pathing::Position,u32),alloc::alloc::Global&gt;&gt; (17 samples, 0.18%)</title><rect x="57.1294%" y="773" width="0.1781%" height="15" fill="rgb(246,200,37)" fg:x="5453" fg:w="17"/><text x="57.3794%" y="783.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.18%)</title><rect x="57.1294%" y="757" width="0.1781%" height="15" fill="rgb(243,210,26)" fg:x="5453" fg:w="17"/><text x="57.3794%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::movement::pathing::Position,u32)&gt;&gt; (17 samples, 0.18%)</title><rect x="57.1294%" y="741" width="0.1781%" height="15" fill="rgb(222,22,22)" fg:x="5453" fg:w="17"/><text x="57.3794%" y="751.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.18%)</title><rect x="57.1294%" y="725" width="0.1781%" height="15" fill="rgb(208,129,28)" fg:x="5453" fg:w="17"/><text x="57.3794%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="57.2970%" y="709" width="0.0105%" height="15" fill="rgb(254,169,28)" fg:x="5469" fg:w="1"/><text x="57.5470%" y="719.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="57.3284%" y="773" width="0.0105%" height="15" fill="rgb(225,45,17)" fg:x="5472" fg:w="1"/><text x="57.5784%" y="783.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (1 samples, 0.01%)</title><rect x="57.3389%" y="757" width="0.0105%" height="15" fill="rgb(232,199,2)" fg:x="5473" fg:w="1"/><text x="57.5889%" y="767.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&lt;&amp;i64&gt;&gt;::add (3 samples, 0.03%)</title><rect x="57.3389%" y="773" width="0.0314%" height="15" fill="rgb(235,33,40)" fg:x="5473" fg:w="3"/><text x="57.5889%" y="783.50"></text></g><g><title>engine::movement::pathing::move_weights (2 samples, 0.02%)</title><rect x="57.3494%" y="757" width="0.0210%" height="15" fill="rgb(237,89,50)" fg:x="5474" fg:w="2"/><text x="57.5994%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="57.4332%" y="693" width="0.0105%" height="15" fill="rgb(238,126,5)" fg:x="5482" fg:w="1"/><text x="57.6832%" y="703.50"></text></g><g><title>__memmove_avx_unaligned_erms (8 samples, 0.08%)</title><rect x="57.8104%" y="597" width="0.0838%" height="15" fill="rgb(247,214,42)" fg:x="5518" fg:w="8"/><text x="58.0604%" y="607.50"></text></g><g><title>_int_free (7 samples, 0.07%)</title><rect x="57.8942%" y="597" width="0.0733%" height="15" fill="rgb(238,60,45)" fg:x="5526" fg:w="7"/><text x="58.1442%" y="607.50"></text></g><g><title>__GI___libc_realloc (69 samples, 0.72%)</title><rect x="57.4751%" y="629" width="0.7229%" height="15" fill="rgb(225,69,44)" fg:x="5486" fg:w="69"/><text x="57.7251%" y="639.50"></text></g><g><title>_int_realloc (43 samples, 0.45%)</title><rect x="57.7475%" y="613" width="0.4505%" height="15" fill="rgb(241,13,44)" fg:x="5512" fg:w="43"/><text x="57.9975%" y="623.50"></text></g><g><title>_int_malloc (22 samples, 0.23%)</title><rect x="57.9675%" y="597" width="0.2305%" height="15" fill="rgb(227,121,22)" fg:x="5533" fg:w="22"/><text x="58.2175%" y="607.50"></text></g><g><title>unlink_chunk.constprop.0 (2 samples, 0.02%)</title><rect x="58.1771%" y="581" width="0.0210%" height="15" fill="rgb(231,160,23)" fg:x="5553" fg:w="2"/><text x="58.4271%" y="591.50"></text></g><g><title>__rdl_realloc (3 samples, 0.03%)</title><rect x="58.1980%" y="629" width="0.0314%" height="15" fill="rgb(250,179,43)" fg:x="5555" fg:w="3"/><text x="58.4480%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2 samples, 0.02%)</title><rect x="58.2085%" y="613" width="0.0210%" height="15" fill="rgb(233,54,46)" fg:x="5556" fg:w="2"/><text x="58.4585%" y="623.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (75 samples, 0.79%)</title><rect x="57.4542%" y="677" width="0.7858%" height="15" fill="rgb(247,120,42)" fg:x="5484" fg:w="75"/><text x="57.7042%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (75 samples, 0.79%)</title><rect x="57.4542%" y="661" width="0.7858%" height="15" fill="rgb(221,219,12)" fg:x="5484" fg:w="75"/><text x="57.7042%" y="671.50"></text></g><g><title>alloc::alloc::realloc (75 samples, 0.79%)</title><rect x="57.4542%" y="645" width="0.7858%" height="15" fill="rgb(211,126,8)" fg:x="5484" fg:w="75"/><text x="57.7042%" y="655.50"></text></g><g><title>__rust_realloc (1 samples, 0.01%)</title><rect x="58.2294%" y="629" width="0.0105%" height="15" fill="rgb(218,154,33)" fg:x="5558" fg:w="1"/><text x="58.4794%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="58.2399%" y="677" width="0.0210%" height="15" fill="rgb(212,199,16)" fg:x="5559" fg:w="2"/><text x="58.4899%" y="687.50"></text></g><g><title>alloc::raw_vec::finish_grow (79 samples, 0.83%)</title><rect x="57.4437%" y="693" width="0.8277%" height="15" fill="rgb(236,215,46)" fg:x="5483" fg:w="79"/><text x="57.6937%" y="703.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="58.2609%" y="677" width="0.0105%" height="15" fill="rgb(232,32,22)" fg:x="5561" fg:w="1"/><text x="58.5109%" y="687.50"></text></g><g><title>core::alloc::layout::Layout::array (2 samples, 0.02%)</title><rect x="58.2713%" y="693" width="0.0210%" height="15" fill="rgb(234,79,15)" fg:x="5562" fg:w="2"/><text x="58.5213%" y="703.50"></text></g><g><title>core::alloc::layout::Layout::repeat (2 samples, 0.02%)</title><rect x="58.2713%" y="677" width="0.0210%" height="15" fill="rgb(235,187,47)" fg:x="5562" fg:w="2"/><text x="58.5213%" y="687.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (2 samples, 0.02%)</title><rect x="58.2713%" y="661" width="0.0210%" height="15" fill="rgb(244,69,37)" fg:x="5562" fg:w="2"/><text x="58.5213%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (2 samples, 0.02%)</title><rect x="58.2713%" y="645" width="0.0210%" height="15" fill="rgb(249,140,25)" fg:x="5562" fg:w="2"/><text x="58.5213%" y="655.50"></text></g><g><title>core::cmp::max (2 samples, 0.02%)</title><rect x="58.2923%" y="693" width="0.0210%" height="15" fill="rgb(213,69,8)" fg:x="5564" fg:w="2"/><text x="58.5423%" y="703.50"></text></g><g><title>core::cmp::Ord::max (2 samples, 0.02%)</title><rect x="58.2923%" y="677" width="0.0210%" height="15" fill="rgb(220,136,2)" fg:x="5564" fg:w="2"/><text x="58.5423%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="58.2923%" y="661" width="0.0210%" height="15" fill="rgb(237,50,36)" fg:x="5564" fg:w="2"/><text x="58.5423%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (87 samples, 0.91%)</title><rect x="57.4123%" y="709" width="0.9115%" height="15" fill="rgb(226,18,11)" fg:x="5480" fg:w="87"/><text x="57.6623%" y="719.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="58.3133%" y="693" width="0.0105%" height="15" fill="rgb(243,156,2)" fg:x="5566" fg:w="1"/><text x="58.5633%" y="703.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="58.3133%" y="677" width="0.0105%" height="15" fill="rgb(218,8,34)" fg:x="5566" fg:w="1"/><text x="58.5633%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (88 samples, 0.92%)</title><rect x="57.4123%" y="757" width="0.9219%" height="15" fill="rgb(250,94,35)" fg:x="5480" fg:w="88"/><text x="57.6623%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (88 samples, 0.92%)</title><rect x="57.4123%" y="741" width="0.9219%" height="15" fill="rgb(229,127,21)" fg:x="5480" fg:w="88"/><text x="57.6623%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (88 samples, 0.92%)</title><rect x="57.4123%" y="725" width="0.9219%" height="15" fill="rgb(234,49,5)" fg:x="5480" fg:w="88"/><text x="57.6623%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="58.3237%" y="709" width="0.0105%" height="15" fill="rgb(248,12,16)" fg:x="5567" fg:w="1"/><text x="58.5737%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (96 samples, 1.01%)</title><rect x="57.3704%" y="773" width="1.0058%" height="15" fill="rgb(208,220,31)" fg:x="5476" fg:w="96"/><text x="57.6204%" y="783.50"></text></g><g><title>core::ptr::write (4 samples, 0.04%)</title><rect x="58.3342%" y="757" width="0.0419%" height="15" fill="rgb(243,184,0)" fg:x="5568" fg:w="4"/><text x="58.5842%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (3 samples, 0.03%)</title><rect x="58.3761%" y="773" width="0.0314%" height="15" fill="rgb(217,38,21)" fg:x="5572" fg:w="3"/><text x="58.6261%" y="783.50"></text></g><g><title>engine::movement::pathing::move_weights (5 samples, 0.05%)</title><rect x="58.4075%" y="773" width="0.0524%" height="15" fill="rgb(239,120,45)" fg:x="5575" fg:w="5"/><text x="58.6575%" y="783.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="58.5542%" y="741" width="0.0105%" height="15" fill="rgb(235,33,2)" fg:x="5589" fg:w="1"/><text x="58.8042%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="58.5542%" y="725" width="0.0105%" height="15" fill="rgb(249,161,5)" fg:x="5589" fg:w="1"/><text x="58.8042%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="58.5542%" y="709" width="0.0105%" height="15" fill="rgb(250,165,48)" fg:x="5589" fg:w="1"/><text x="58.8042%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (15 samples, 0.16%)</title><rect x="59.0152%" y="565" width="0.1572%" height="15" fill="rgb(221,23,45)" fg:x="5633" fg:w="15"/><text x="59.2652%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (32 samples, 0.34%)</title><rect x="58.9523%" y="581" width="0.3353%" height="15" fill="rgb(217,108,46)" fg:x="5627" fg:w="32"/><text x="59.2023%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.12%)</title><rect x="59.1723%" y="565" width="0.1152%" height="15" fill="rgb(254,26,35)" fg:x="5648" fg:w="11"/><text x="59.4223%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (7 samples, 0.07%)</title><rect x="59.2876%" y="581" width="0.0733%" height="15" fill="rgb(218,223,28)" fg:x="5659" fg:w="7"/><text x="59.5376%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (62 samples, 0.65%)</title><rect x="58.7428%" y="597" width="0.6496%" height="15" fill="rgb(242,27,47)" fg:x="5607" fg:w="62"/><text x="58.9928%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (3 samples, 0.03%)</title><rect x="59.3609%" y="581" width="0.0314%" height="15" fill="rgb(218,39,35)" fg:x="5666" fg:w="3"/><text x="59.6109%" y="591.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (84 samples, 0.88%)</title><rect x="58.6171%" y="693" width="0.8800%" height="15" fill="rgb(232,127,16)" fg:x="5595" fg:w="84"/><text x="58.8671%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (80 samples, 0.84%)</title><rect x="58.6590%" y="677" width="0.8381%" height="15" fill="rgb(231,219,51)" fg:x="5599" fg:w="80"/><text x="58.9090%" y="687.50"></text></g><g><title>core::hash::Hasher::write_i64 (75 samples, 0.79%)</title><rect x="58.7114%" y="661" width="0.7858%" height="15" fill="rgb(217,220,46)" fg:x="5604" fg:w="75"/><text x="58.9614%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u64 (75 samples, 0.79%)</title><rect x="58.7114%" y="645" width="0.7858%" height="15" fill="rgb(230,75,1)" fg:x="5604" fg:w="75"/><text x="58.9614%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (72 samples, 0.75%)</title><rect x="58.7428%" y="629" width="0.7543%" height="15" fill="rgb(218,2,8)" fg:x="5607" fg:w="72"/><text x="58.9928%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (72 samples, 0.75%)</title><rect x="58.7428%" y="613" width="0.7543%" height="15" fill="rgb(206,111,30)" fg:x="5607" fg:w="72"/><text x="58.9928%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (10 samples, 0.10%)</title><rect x="59.3924%" y="597" width="0.1048%" height="15" fill="rgb(209,135,6)" fg:x="5669" fg:w="10"/><text x="59.6424%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (4 samples, 0.04%)</title><rect x="59.5600%" y="629" width="0.0419%" height="15" fill="rgb(205,169,10)" fg:x="5685" fg:w="4"/><text x="59.8100%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.06%)</title><rect x="59.5495%" y="645" width="0.0629%" height="15" fill="rgb(212,204,38)" fg:x="5684" fg:w="6"/><text x="59.7995%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="59.6019%" y="629" width="0.0105%" height="15" fill="rgb(205,199,14)" fg:x="5689" fg:w="1"/><text x="59.8519%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (19 samples, 0.20%)</title><rect x="59.6333%" y="629" width="0.1991%" height="15" fill="rgb(212,4,6)" fg:x="5692" fg:w="19"/><text x="59.8833%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (38 samples, 0.40%)</title><rect x="59.4971%" y="693" width="0.3981%" height="15" fill="rgb(250,15,10)" fg:x="5679" fg:w="38"/><text x="59.7471%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (38 samples, 0.40%)</title><rect x="59.4971%" y="677" width="0.3981%" height="15" fill="rgb(212,49,51)" fg:x="5679" fg:w="38"/><text x="59.7471%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (38 samples, 0.40%)</title><rect x="59.4971%" y="661" width="0.3981%" height="15" fill="rgb(235,21,9)" fg:x="5679" fg:w="38"/><text x="59.7471%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (27 samples, 0.28%)</title><rect x="59.6124%" y="645" width="0.2829%" height="15" fill="rgb(251,31,32)" fg:x="5690" fg:w="27"/><text x="59.8624%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.06%)</title><rect x="59.8324%" y="629" width="0.0629%" height="15" fill="rgb(246,23,9)" fg:x="5711" fg:w="6"/><text x="60.0824%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (127 samples, 1.33%)</title><rect x="58.5961%" y="709" width="1.3305%" height="15" fill="rgb(225,216,14)" fg:x="5593" fg:w="127"/><text x="58.8461%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.03%)</title><rect x="59.8952%" y="693" width="0.0314%" height="15" fill="rgb(215,200,26)" fg:x="5717" fg:w="3"/><text x="60.1452%" y="703.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (2 samples, 0.02%)</title><rect x="59.9057%" y="677" width="0.0210%" height="15" fill="rgb(237,130,47)" fg:x="5718" fg:w="2"/><text x="60.1557%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="59.9162%" y="661" width="0.0105%" height="15" fill="rgb(247,74,14)" fg:x="5719" fg:w="1"/><text x="60.1662%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="59.9162%" y="645" width="0.0105%" height="15" fill="rgb(254,97,46)" fg:x="5719" fg:w="1"/><text x="60.1662%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.04%)</title><rect x="59.9267%" y="693" width="0.0419%" height="15" fill="rgb(234,191,1)" fg:x="5720" fg:w="4"/><text x="60.1767%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (11 samples, 0.12%)</title><rect x="60.1257%" y="661" width="0.1152%" height="15" fill="rgb(215,165,14)" fg:x="5739" fg:w="11"/><text x="60.3757%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.08%)</title><rect x="60.1572%" y="645" width="0.0838%" height="15" fill="rgb(230,182,6)" fg:x="5742" fg:w="8"/><text x="60.4072%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (8 samples, 0.08%)</title><rect x="60.1572%" y="629" width="0.0838%" height="15" fill="rgb(210,127,39)" fg:x="5742" fg:w="8"/><text x="60.4072%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="60.2410%" y="629" width="0.0105%" height="15" fill="rgb(223,212,51)" fg:x="5750" fg:w="1"/><text x="60.4910%" y="639.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.01%)</title><rect x="60.2410%" y="613" width="0.0105%" height="15" fill="rgb(226,176,43)" fg:x="5750" fg:w="1"/><text x="60.4910%" y="623.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="60.2410%" y="597" width="0.0105%" height="15" fill="rgb(222,155,4)" fg:x="5750" fg:w="1"/><text x="60.4910%" y="607.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.02%)</title><rect x="60.2514%" y="629" width="0.0210%" height="15" fill="rgb(215,149,7)" fg:x="5751" fg:w="2"/><text x="60.5014%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (15 samples, 0.16%)</title><rect x="60.1257%" y="677" width="0.1572%" height="15" fill="rgb(252,199,23)" fg:x="5739" fg:w="15"/><text x="60.3757%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (4 samples, 0.04%)</title><rect x="60.2410%" y="661" width="0.0419%" height="15" fill="rgb(245,52,29)" fg:x="5750" fg:w="4"/><text x="60.4910%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (4 samples, 0.04%)</title><rect x="60.2410%" y="645" width="0.0419%" height="15" fill="rgb(221,228,19)" fg:x="5750" fg:w="4"/><text x="60.4910%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="60.2724%" y="629" width="0.0105%" height="15" fill="rgb(253,101,6)" fg:x="5753" fg:w="1"/><text x="60.5224%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (52 samples, 0.54%)</title><rect x="60.2829%" y="677" width="0.5448%" height="15" fill="rgb(211,130,8)" fg:x="5754" fg:w="52"/><text x="60.5329%" y="687.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (52 samples, 0.54%)</title><rect x="60.2829%" y="661" width="0.5448%" height="15" fill="rgb(238,37,53)" fg:x="5754" fg:w="52"/><text x="60.5329%" y="671.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.02%)</title><rect x="60.8277%" y="629" width="0.0210%" height="15" fill="rgb(235,145,5)" fg:x="5806" fg:w="2"/><text x="61.0777%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (22 samples, 0.23%)</title><rect x="60.8486%" y="629" width="0.2305%" height="15" fill="rgb(244,12,43)" fg:x="5808" fg:w="22"/><text x="61.0986%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (22 samples, 0.23%)</title><rect x="60.8486%" y="613" width="0.2305%" height="15" fill="rgb(246,195,24)" fg:x="5808" fg:w="22"/><text x="61.0986%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.23%)</title><rect x="60.8486%" y="597" width="0.2305%" height="15" fill="rgb(235,163,6)" fg:x="5808" fg:w="22"/><text x="61.0986%" y="607.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (246 samples, 2.58%)</title><rect x="58.5542%" y="757" width="2.5773%" height="15" fill="rgb(236,218,17)" fg:x="5589" fg:w="246"/><text x="58.8042%" y="767.50">st..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (245 samples, 2.57%)</title><rect x="58.5647%" y="741" width="2.5668%" height="15" fill="rgb(235,12,38)" fg:x="5590" fg:w="245"/><text x="58.8147%" y="751.50">ha..</text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (242 samples, 2.54%)</title><rect x="58.5961%" y="725" width="2.5354%" height="15" fill="rgb(225,195,33)" fg:x="5593" fg:w="242"/><text x="58.8461%" y="735.50">ha..</text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (115 samples, 1.20%)</title><rect x="59.9267%" y="709" width="1.2048%" height="15" fill="rgb(238,54,35)" fg:x="5720" fg:w="115"/><text x="60.1767%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (111 samples, 1.16%)</title><rect x="59.9686%" y="693" width="1.1629%" height="15" fill="rgb(238,33,7)" fg:x="5724" fg:w="111"/><text x="60.2186%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (29 samples, 0.30%)</title><rect x="60.8277%" y="677" width="0.3038%" height="15" fill="rgb(245,5,14)" fg:x="5806" fg:w="29"/><text x="61.0777%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (29 samples, 0.30%)</title><rect x="60.8277%" y="661" width="0.3038%" height="15" fill="rgb(251,95,31)" fg:x="5806" fg:w="29"/><text x="61.0777%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (29 samples, 0.30%)</title><rect x="60.8277%" y="645" width="0.3038%" height="15" fill="rgb(222,15,46)" fg:x="5806" fg:w="29"/><text x="61.0777%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (5 samples, 0.05%)</title><rect x="61.0791%" y="629" width="0.0524%" height="15" fill="rgb(226,182,24)" fg:x="5830" fg:w="5"/><text x="61.3291%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (5 samples, 0.05%)</title><rect x="61.0791%" y="613" width="0.0524%" height="15" fill="rgb(229,105,41)" fg:x="5830" fg:w="5"/><text x="61.3291%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (5 samples, 0.05%)</title><rect x="61.0791%" y="597" width="0.0524%" height="15" fill="rgb(216,99,53)" fg:x="5830" fg:w="5"/><text x="61.3291%" y="607.50"></text></g><g><title>core::core_arch::simd::i8x16::new (5 samples, 0.05%)</title><rect x="61.0791%" y="581" width="0.0524%" height="15" fill="rgb(253,26,20)" fg:x="5830" fg:w="5"/><text x="61.3291%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.02%)</title><rect x="61.4458%" y="565" width="0.0210%" height="15" fill="rgb(249,155,28)" fg:x="5865" fg:w="2"/><text x="61.6958%" y="575.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (6 samples, 0.06%)</title><rect x="61.4667%" y="565" width="0.0629%" height="15" fill="rgb(241,221,2)" fg:x="5867" fg:w="6"/><text x="61.7167%" y="575.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (26 samples, 0.27%)</title><rect x="61.3724%" y="581" width="0.2724%" height="15" fill="rgb(219,124,6)" fg:x="5858" fg:w="26"/><text x="61.6224%" y="591.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (11 samples, 0.12%)</title><rect x="61.5296%" y="565" width="0.1152%" height="15" fill="rgb(233,37,6)" fg:x="5873" fg:w="11"/><text x="61.7796%" y="575.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (5 samples, 0.05%)</title><rect x="61.6448%" y="581" width="0.0524%" height="15" fill="rgb(238,20,14)" fg:x="5884" fg:w="5"/><text x="61.8948%" y="591.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (53 samples, 0.56%)</title><rect x="61.2677%" y="597" width="0.5553%" height="15" fill="rgb(232,106,27)" fg:x="5848" fg:w="53"/><text x="61.5177%" y="607.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.13%)</title><rect x="61.6972%" y="581" width="0.1257%" height="15" fill="rgb(246,157,24)" fg:x="5889" fg:w="12"/><text x="61.9472%" y="591.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (68 samples, 0.71%)</title><rect x="61.1839%" y="693" width="0.7124%" height="15" fill="rgb(214,153,10)" fg:x="5840" fg:w="68"/><text x="61.4339%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (68 samples, 0.71%)</title><rect x="61.1839%" y="677" width="0.7124%" height="15" fill="rgb(212,94,6)" fg:x="5840" fg:w="68"/><text x="61.4339%" y="687.50"></text></g><g><title>core::hash::Hasher::write_i64 (65 samples, 0.68%)</title><rect x="61.2153%" y="661" width="0.6810%" height="15" fill="rgb(254,25,27)" fg:x="5843" fg:w="65"/><text x="61.4653%" y="671.50"></text></g><g><title>core::hash::Hasher::write_u64 (65 samples, 0.68%)</title><rect x="61.2153%" y="645" width="0.6810%" height="15" fill="rgb(250,43,52)" fg:x="5843" fg:w="65"/><text x="61.4653%" y="655.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (60 samples, 0.63%)</title><rect x="61.2677%" y="629" width="0.6286%" height="15" fill="rgb(221,226,40)" fg:x="5848" fg:w="60"/><text x="61.5177%" y="639.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (60 samples, 0.63%)</title><rect x="61.2677%" y="613" width="0.6286%" height="15" fill="rgb(235,162,34)" fg:x="5848" fg:w="60"/><text x="61.5177%" y="623.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (7 samples, 0.07%)</title><rect x="61.8229%" y="597" width="0.0733%" height="15" fill="rgb(239,24,26)" fg:x="5901" fg:w="7"/><text x="62.0729%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.05%)</title><rect x="61.9801%" y="629" width="0.0524%" height="15" fill="rgb(244,226,11)" fg:x="5916" fg:w="5"/><text x="62.2301%" y="639.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (11 samples, 0.12%)</title><rect x="61.9382%" y="645" width="0.1152%" height="15" fill="rgb(225,23,10)" fg:x="5912" fg:w="11"/><text x="62.1882%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (2 samples, 0.02%)</title><rect x="62.0325%" y="629" width="0.0210%" height="15" fill="rgb(249,125,6)" fg:x="5921" fg:w="2"/><text x="62.2825%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (12 samples, 0.13%)</title><rect x="62.0849%" y="629" width="0.1257%" height="15" fill="rgb(246,212,12)" fg:x="5926" fg:w="12"/><text x="62.3349%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (36 samples, 0.38%)</title><rect x="61.8963%" y="693" width="0.3772%" height="15" fill="rgb(230,43,32)" fg:x="5908" fg:w="36"/><text x="62.1463%" y="703.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (36 samples, 0.38%)</title><rect x="61.8963%" y="677" width="0.3772%" height="15" fill="rgb(210,95,23)" fg:x="5908" fg:w="36"/><text x="62.1463%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (36 samples, 0.38%)</title><rect x="61.8963%" y="661" width="0.3772%" height="15" fill="rgb(229,103,33)" fg:x="5908" fg:w="36"/><text x="62.1463%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (21 samples, 0.22%)</title><rect x="62.0534%" y="645" width="0.2200%" height="15" fill="rgb(222,104,27)" fg:x="5923" fg:w="21"/><text x="62.3034%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (6 samples, 0.06%)</title><rect x="62.2106%" y="629" width="0.0629%" height="15" fill="rgb(239,221,23)" fg:x="5938" fg:w="6"/><text x="62.4606%" y="639.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (7 samples, 0.07%)</title><rect x="62.2734%" y="693" width="0.0733%" height="15" fill="rgb(222,98,21)" fg:x="5944" fg:w="7"/><text x="62.5234%" y="703.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (5 samples, 0.05%)</title><rect x="62.2944%" y="677" width="0.0524%" height="15" fill="rgb(231,101,20)" fg:x="5946" fg:w="5"/><text x="62.5444%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (3 samples, 0.03%)</title><rect x="62.3153%" y="661" width="0.0314%" height="15" fill="rgb(215,150,22)" fg:x="5948" fg:w="3"/><text x="62.5653%" y="671.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (3 samples, 0.03%)</title><rect x="62.3153%" y="645" width="0.0314%" height="15" fill="rgb(248,3,34)" fg:x="5948" fg:w="3"/><text x="62.5653%" y="655.50"></text></g><g><title>hashbrown::map::make_hash (114 samples, 1.19%)</title><rect x="61.1629%" y="709" width="1.1943%" height="15" fill="rgb(220,141,21)" fg:x="5838" fg:w="114"/><text x="61.4129%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="62.3468%" y="693" width="0.0105%" height="15" fill="rgb(223,41,48)" fg:x="5951" fg:w="1"/><text x="62.5968%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="62.3677%" y="661" width="0.0524%" height="15" fill="rgb(247,12,5)" fg:x="5953" fg:w="5"/><text x="62.6177%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="62.3992%" y="645" width="0.0210%" height="15" fill="rgb(206,173,10)" fg:x="5956" fg:w="2"/><text x="62.6492%" y="655.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (2 samples, 0.02%)</title><rect x="62.3992%" y="629" width="0.0210%" height="15" fill="rgb(233,214,37)" fg:x="5956" fg:w="2"/><text x="62.6492%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="62.3677%" y="677" width="0.0733%" height="15" fill="rgb(238,86,43)" fg:x="5953" fg:w="7"/><text x="62.6177%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (2 samples, 0.02%)</title><rect x="62.4201%" y="661" width="0.0210%" height="15" fill="rgb(212,182,8)" fg:x="5958" fg:w="2"/><text x="62.6701%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.02%)</title><rect x="62.4201%" y="645" width="0.0210%" height="15" fill="rgb(240,91,47)" fg:x="5958" fg:w="2"/><text x="62.6701%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (2 samples, 0.02%)</title><rect x="62.4201%" y="629" width="0.0210%" height="15" fill="rgb(209,138,26)" fg:x="5958" fg:w="2"/><text x="62.6701%" y="639.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.05%)</title><rect x="62.4411%" y="677" width="0.0524%" height="15" fill="rgb(231,163,20)" fg:x="5960" fg:w="5"/><text x="62.6911%" y="687.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (5 samples, 0.05%)</title><rect x="62.4411%" y="661" width="0.0524%" height="15" fill="rgb(214,91,54)" fg:x="5960" fg:w="5"/><text x="62.6911%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.03%)</title><rect x="62.5144%" y="629" width="0.0314%" height="15" fill="rgb(230,32,17)" fg:x="5967" fg:w="3"/><text x="62.7644%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.03%)</title><rect x="62.5144%" y="613" width="0.0314%" height="15" fill="rgb(231,34,34)" fg:x="5967" fg:w="3"/><text x="62.7644%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="62.5144%" y="597" width="0.0314%" height="15" fill="rgb(224,228,27)" fg:x="5967" fg:w="3"/><text x="62.7644%" y="607.50"></text></g><g><title>engine::movement::pathing::move_weights (502 samples, 5.26%)</title><rect x="57.3180%" y="789" width="5.2593%" height="15" fill="rgb(219,35,40)" fg:x="5471" fg:w="502"/><text x="57.5680%" y="799.50">engine..</text></g><g><title>engine::movement::pathing::tile_weight (393 samples, 4.12%)</title><rect x="58.4599%" y="773" width="4.1173%" height="15" fill="rgb(234,42,8)" fg:x="5580" fg:w="393"/><text x="58.7099%" y="783.50">engi..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (138 samples, 1.45%)</title><rect x="61.1315%" y="757" width="1.4458%" height="15" fill="rgb(226,75,22)" fg:x="5835" fg:w="138"/><text x="61.3815%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (138 samples, 1.45%)</title><rect x="61.1315%" y="741" width="1.4458%" height="15" fill="rgb(242,203,28)" fg:x="5835" fg:w="138"/><text x="61.3815%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (138 samples, 1.45%)</title><rect x="61.1315%" y="725" width="1.4458%" height="15" fill="rgb(221,3,9)" fg:x="5835" fg:w="138"/><text x="61.3815%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (21 samples, 0.22%)</title><rect x="62.3573%" y="709" width="0.2200%" height="15" fill="rgb(214,34,31)" fg:x="5952" fg:w="21"/><text x="62.6073%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (21 samples, 0.22%)</title><rect x="62.3573%" y="693" width="0.2200%" height="15" fill="rgb(252,119,15)" fg:x="5952" fg:w="21"/><text x="62.6073%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (8 samples, 0.08%)</title><rect x="62.4935%" y="677" width="0.0838%" height="15" fill="rgb(244,224,31)" fg:x="5965" fg:w="8"/><text x="62.7435%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (8 samples, 0.08%)</title><rect x="62.4935%" y="661" width="0.0838%" height="15" fill="rgb(215,8,51)" fg:x="5965" fg:w="8"/><text x="62.7435%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (8 samples, 0.08%)</title><rect x="62.4935%" y="645" width="0.0838%" height="15" fill="rgb(207,24,1)" fg:x="5965" fg:w="8"/><text x="62.7435%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (3 samples, 0.03%)</title><rect x="62.5458%" y="629" width="0.0314%" height="15" fill="rgb(245,90,0)" fg:x="5970" fg:w="3"/><text x="62.7958%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (3 samples, 0.03%)</title><rect x="62.5458%" y="613" width="0.0314%" height="15" fill="rgb(246,43,48)" fg:x="5970" fg:w="3"/><text x="62.7958%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (3 samples, 0.03%)</title><rect x="62.5458%" y="597" width="0.0314%" height="15" fill="rgb(252,218,10)" fg:x="5970" fg:w="3"/><text x="62.7958%" y="607.50"></text></g><g><title>core::core_arch::simd::i8x16::new (3 samples, 0.03%)</title><rect x="62.5458%" y="581" width="0.0314%" height="15" fill="rgb(231,24,35)" fg:x="5970" fg:w="3"/><text x="62.7958%" y="591.50"></text></g><g><title>engine::movement::pathing::plan_path::{{closure}} (507 samples, 5.31%)</title><rect x="57.3075%" y="805" width="5.3117%" height="15" fill="rgb(225,66,19)" fg:x="5470" fg:w="507"/><text x="57.5575%" y="815.50">engine:..</text></g><g><title>pathfinding::utils::absdiff (4 samples, 0.04%)</title><rect x="62.5773%" y="789" width="0.0419%" height="15" fill="rgb(214,96,51)" fg:x="5973" fg:w="4"/><text x="62.8273%" y="799.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (3 samples, 0.03%)</title><rect x="62.5877%" y="773" width="0.0314%" height="15" fill="rgb(251,151,47)" fg:x="5974" fg:w="3"/><text x="62.8377%" y="783.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="62.6192%" y="789" width="0.0105%" height="15" fill="rgb(236,79,14)" fg:x="5977" fg:w="1"/><text x="62.8692%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.02%)</title><rect x="62.9335%" y="645" width="0.0210%" height="15" fill="rgb(210,205,11)" fg:x="6007" fg:w="2"/><text x="63.1835%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.05%)</title><rect x="62.9544%" y="645" width="0.0524%" height="15" fill="rgb(233,142,53)" fg:x="6009" fg:w="5"/><text x="63.2044%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (24 samples, 0.25%)</title><rect x="62.8601%" y="661" width="0.2514%" height="15" fill="rgb(212,116,48)" fg:x="6000" fg:w="24"/><text x="63.1101%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (10 samples, 0.10%)</title><rect x="63.0068%" y="645" width="0.1048%" height="15" fill="rgb(234,55,33)" fg:x="6014" fg:w="10"/><text x="63.2568%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.02%)</title><rect x="63.1116%" y="661" width="0.0210%" height="15" fill="rgb(253,92,27)" fg:x="6024" fg:w="2"/><text x="63.3616%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (48 samples, 0.50%)</title><rect x="62.7554%" y="677" width="0.5029%" height="15" fill="rgb(220,7,35)" fg:x="5990" fg:w="48"/><text x="63.0054%" y="687.50"></text></g><g><title>core::hash::sip::u8to64_le (12 samples, 0.13%)</title><rect x="63.1325%" y="661" width="0.1257%" height="15" fill="rgb(246,124,6)" fg:x="6026" fg:w="12"/><text x="63.3825%" y="671.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (76 samples, 0.80%)</title><rect x="62.6296%" y="773" width="0.7962%" height="15" fill="rgb(212,111,51)" fg:x="5978" fg:w="76"/><text x="62.8796%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (76 samples, 0.80%)</title><rect x="62.6296%" y="757" width="0.7962%" height="15" fill="rgb(253,116,7)" fg:x="5978" fg:w="76"/><text x="62.8796%" y="767.50"></text></g><g><title>core::hash::Hasher::write_i64 (70 samples, 0.73%)</title><rect x="62.6925%" y="741" width="0.7334%" height="15" fill="rgb(213,145,18)" fg:x="5984" fg:w="70"/><text x="62.9425%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u64 (70 samples, 0.73%)</title><rect x="62.6925%" y="725" width="0.7334%" height="15" fill="rgb(219,149,7)" fg:x="5984" fg:w="70"/><text x="62.9425%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (64 samples, 0.67%)</title><rect x="62.7554%" y="709" width="0.6705%" height="15" fill="rgb(225,156,20)" fg:x="5990" fg:w="64"/><text x="63.0054%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (64 samples, 0.67%)</title><rect x="62.7554%" y="693" width="0.6705%" height="15" fill="rgb(211,98,19)" fg:x="5990" fg:w="64"/><text x="63.0054%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (16 samples, 0.17%)</title><rect x="63.2583%" y="677" width="0.1676%" height="15" fill="rgb(231,192,31)" fg:x="6038" fg:w="16"/><text x="63.5083%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.05%)</title><rect x="63.5202%" y="709" width="0.0524%" height="15" fill="rgb(249,95,19)" fg:x="6063" fg:w="5"/><text x="63.7702%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (10 samples, 0.10%)</title><rect x="63.4783%" y="725" width="0.1048%" height="15" fill="rgb(247,101,36)" fg:x="6059" fg:w="10"/><text x="63.7283%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="63.5726%" y="709" width="0.0105%" height="15" fill="rgb(221,45,43)" fg:x="6068" fg:w="1"/><text x="63.8226%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (17 samples, 0.18%)</title><rect x="63.6564%" y="709" width="0.1781%" height="15" fill="rgb(220,42,1)" fg:x="6076" fg:w="17"/><text x="63.9064%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (48 samples, 0.50%)</title><rect x="63.4259%" y="773" width="0.5029%" height="15" fill="rgb(236,19,24)" fg:x="6054" fg:w="48"/><text x="63.6759%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (48 samples, 0.50%)</title><rect x="63.4259%" y="757" width="0.5029%" height="15" fill="rgb(225,192,6)" fg:x="6054" fg:w="48"/><text x="63.6759%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (48 samples, 0.50%)</title><rect x="63.4259%" y="741" width="0.5029%" height="15" fill="rgb(242,30,19)" fg:x="6054" fg:w="48"/><text x="63.6759%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (33 samples, 0.35%)</title><rect x="63.5830%" y="725" width="0.3457%" height="15" fill="rgb(240,36,6)" fg:x="6069" fg:w="33"/><text x="63.8330%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (9 samples, 0.09%)</title><rect x="63.8345%" y="709" width="0.0943%" height="15" fill="rgb(246,40,28)" fg:x="6093" fg:w="9"/><text x="64.0845%" y="719.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (5 samples, 0.05%)</title><rect x="64.0021%" y="725" width="0.0524%" height="15" fill="rgb(225,155,33)" fg:x="6109" fg:w="5"/><text x="64.2521%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (14 samples, 0.15%)</title><rect x="63.9288%" y="773" width="0.1467%" height="15" fill="rgb(240,65,18)" fg:x="6102" fg:w="14"/><text x="64.1788%" y="783.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (9 samples, 0.09%)</title><rect x="63.9811%" y="757" width="0.0943%" height="15" fill="rgb(217,0,48)" fg:x="6107" fg:w="9"/><text x="64.2311%" y="767.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (7 samples, 0.07%)</title><rect x="64.0021%" y="741" width="0.0733%" height="15" fill="rgb(217,80,15)" fg:x="6109" fg:w="7"/><text x="64.2521%" y="751.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="64.0545%" y="725" width="0.0210%" height="15" fill="rgb(253,43,51)" fg:x="6114" fg:w="2"/><text x="64.3045%" y="735.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (139 samples, 1.46%)</title><rect x="62.6296%" y="789" width="1.4563%" height="15" fill="rgb(246,60,4)" fg:x="5978" fg:w="139"/><text x="62.8796%" y="799.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="64.0754%" y="773" width="0.0105%" height="15" fill="rgb(230,40,54)" fg:x="6116" fg:w="1"/><text x="64.3254%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::inner::ProbeSeq as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="64.4945%" y="725" width="0.0210%" height="15" fill="rgb(208,20,44)" fg:x="6156" fg:w="2"/><text x="64.7445%" y="735.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (5 samples, 0.05%)</title><rect x="64.5574%" y="709" width="0.0524%" height="15" fill="rgb(230,22,22)" fg:x="6162" fg:w="5"/><text x="64.8074%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (10 samples, 0.10%)</title><rect x="64.5155%" y="725" width="0.1048%" height="15" fill="rgb(207,57,4)" fg:x="6158" fg:w="10"/><text x="64.7655%" y="735.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="64.6097%" y="709" width="0.0105%" height="15" fill="rgb(242,130,33)" fg:x="6167" fg:w="1"/><text x="64.8597%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::bucket (1 samples, 0.01%)</title><rect x="64.6202%" y="725" width="0.0105%" height="15" fill="rgb(218,66,43)" fg:x="6168" fg:w="1"/><text x="64.8702%" y="735.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="64.6202%" y="709" width="0.0105%" height="15" fill="rgb(236,105,16)" fg:x="6168" fg:w="1"/><text x="64.8702%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="64.6202%" y="693" width="0.0105%" height="15" fill="rgb(230,46,15)" fg:x="6168" fg:w="1"/><text x="64.8702%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="64.6202%" y="677" width="0.0105%" height="15" fill="rgb(251,172,40)" fg:x="6168" fg:w="1"/><text x="64.8702%" y="687.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (2 samples, 0.02%)</title><rect x="64.6307%" y="725" width="0.0210%" height="15" fill="rgb(225,217,32)" fg:x="6169" fg:w="2"/><text x="64.8807%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="64.6307%" y="709" width="0.0210%" height="15" fill="rgb(243,10,29)" fg:x="6169" fg:w="2"/><text x="64.8807%" y="719.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="64.6307%" y="693" width="0.0210%" height="15" fill="rgb(207,102,10)" fg:x="6169" fg:w="2"/><text x="64.8807%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (40 samples, 0.42%)</title><rect x="64.2535%" y="741" width="0.4191%" height="15" fill="rgb(241,125,5)" fg:x="6133" fg:w="40"/><text x="64.5035%" y="751.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (2 samples, 0.02%)</title><rect x="64.6517%" y="725" width="0.0210%" height="15" fill="rgb(230,125,29)" fg:x="6171" fg:w="2"/><text x="64.9017%" y="735.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="64.6517%" y="709" width="0.0210%" height="15" fill="rgb(223,65,44)" fg:x="6171" fg:w="2"/><text x="64.9017%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="64.6517%" y="693" width="0.0210%" height="15" fill="rgb(224,188,28)" fg:x="6171" fg:w="2"/><text x="64.9017%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::probe_seq (2 samples, 0.02%)</title><rect x="64.6726%" y="709" width="0.0210%" height="15" fill="rgb(254,197,27)" fg:x="6173" fg:w="2"/><text x="64.9226%" y="719.50"></text></g><g><title>hashbrown::raw::inner::h2 (1 samples, 0.01%)</title><rect x="64.6936%" y="709" width="0.0105%" height="15" fill="rgb(220,200,25)" fg:x="6175" fg:w="1"/><text x="64.9436%" y="719.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (5 samples, 0.05%)</title><rect x="64.7040%" y="709" width="0.0524%" height="15" fill="rgb(239,225,54)" fg:x="6176" fg:w="5"/><text x="64.9540%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.05%)</title><rect x="64.7040%" y="693" width="0.0524%" height="15" fill="rgb(211,59,40)" fg:x="6176" fg:w="5"/><text x="64.9540%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="64.7040%" y="677" width="0.0524%" height="15" fill="rgb(213,176,46)" fg:x="6176" fg:w="5"/><text x="64.9540%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (6 samples, 0.06%)</title><rect x="64.7564%" y="693" width="0.0629%" height="15" fill="rgb(226,99,4)" fg:x="6181" fg:w="6"/><text x="65.0064%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::iter_hash (18 samples, 0.19%)</title><rect x="64.6726%" y="741" width="0.1886%" height="15" fill="rgb(239,203,43)" fg:x="6173" fg:w="18"/><text x="64.9226%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T&gt;::new (18 samples, 0.19%)</title><rect x="64.6726%" y="725" width="0.1886%" height="15" fill="rgb(246,1,45)" fg:x="6173" fg:w="18"/><text x="64.9226%" y="735.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (10 samples, 0.10%)</title><rect x="64.7564%" y="709" width="0.1048%" height="15" fill="rgb(231,42,52)" fg:x="6181" fg:w="10"/><text x="65.0064%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.04%)</title><rect x="64.8193%" y="693" width="0.0419%" height="15" fill="rgb(240,13,50)" fg:x="6187" fg:w="4"/><text x="65.0693%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.04%)</title><rect x="64.8193%" y="677" width="0.0419%" height="15" fill="rgb(225,81,14)" fg:x="6187" fg:w="4"/><text x="65.0693%" y="687.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.04%)</title><rect x="64.8193%" y="661" width="0.0419%" height="15" fill="rgb(216,182,23)" fg:x="6187" fg:w="4"/><text x="65.0693%" y="671.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (12 samples, 0.13%)</title><rect x="64.8612%" y="725" width="0.1257%" height="15" fill="rgb(233,137,19)" fg:x="6191" fg:w="12"/><text x="65.1112%" y="735.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (12 samples, 0.13%)</title><rect x="64.8612%" y="709" width="0.1257%" height="15" fill="rgb(242,61,46)" fg:x="6191" fg:w="12"/><text x="65.1112%" y="719.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (227 samples, 2.38%)</title><rect x="62.6192%" y="805" width="2.3782%" height="15" fill="rgb(221,168,51)" fg:x="5977" fg:w="227"/><text x="62.8692%" y="815.50">in..</text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (87 samples, 0.91%)</title><rect x="64.0859%" y="789" width="0.9115%" height="15" fill="rgb(238,48,15)" fg:x="6117" fg:w="87"/><text x="64.3359%" y="799.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::find_equivalent (87 samples, 0.91%)</title><rect x="64.0859%" y="773" width="0.9115%" height="15" fill="rgb(216,13,16)" fg:x="6117" fg:w="87"/><text x="64.3359%" y="783.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find (87 samples, 0.91%)</title><rect x="64.0859%" y="757" width="0.9115%" height="15" fill="rgb(223,185,34)" fg:x="6117" fg:w="87"/><text x="64.3359%" y="767.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::find_equivalent::{{closure}} (13 samples, 0.14%)</title><rect x="64.8612%" y="741" width="0.1362%" height="15" fill="rgb(228,94,42)" fg:x="6191" fg:w="13"/><text x="65.1112%" y="751.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (1 samples, 0.01%)</title><rect x="64.9869%" y="725" width="0.0105%" height="15" fill="rgb(218,166,43)" fg:x="6203" fg:w="1"/><text x="65.2369%" y="735.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="64.9869%" y="709" width="0.0105%" height="15" fill="rgb(232,30,50)" fg:x="6203" fg:w="1"/><text x="65.2369%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find_insert_slot (1 samples, 0.01%)</title><rect x="64.9974%" y="725" width="0.0105%" height="15" fill="rgb(245,206,45)" fg:x="6204" fg:w="1"/><text x="65.2474%" y="735.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="64.9974%" y="709" width="0.0105%" height="15" fill="rgb(220,56,22)" fg:x="6204" fg:w="1"/><text x="65.2474%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="64.9974%" y="693" width="0.0105%" height="15" fill="rgb(239,129,38)" fg:x="6204" fg:w="1"/><text x="65.2474%" y="703.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (2 samples, 0.02%)</title><rect x="64.9974%" y="805" width="0.0210%" height="15" fill="rgb(207,68,41)" fg:x="6204" fg:w="2"/><text x="65.2474%" y="815.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (2 samples, 0.02%)</title><rect x="64.9974%" y="789" width="0.0210%" height="15" fill="rgb(221,21,7)" fg:x="6204" fg:w="2"/><text x="65.2474%" y="799.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (2 samples, 0.02%)</title><rect x="64.9974%" y="773" width="0.0210%" height="15" fill="rgb(240,33,25)" fg:x="6204" fg:w="2"/><text x="65.2474%" y="783.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (2 samples, 0.02%)</title><rect x="64.9974%" y="757" width="0.0210%" height="15" fill="rgb(242,119,10)" fg:x="6204" fg:w="2"/><text x="65.2474%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (2 samples, 0.02%)</title><rect x="64.9974%" y="741" width="0.0210%" height="15" fill="rgb(214,149,40)" fg:x="6204" fg:w="2"/><text x="65.2474%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (1 samples, 0.01%)</title><rect x="65.0079%" y="725" width="0.0105%" height="15" fill="rgb(228,25,36)" fg:x="6205" fg:w="1"/><text x="65.2579%" y="735.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="65.0079%" y="709" width="0.0105%" height="15" fill="rgb(222,59,15)" fg:x="6205" fg:w="1"/><text x="65.2579%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize (1 samples, 0.01%)</title><rect x="65.0079%" y="693" width="0.0105%" height="15" fill="rgb(218,170,0)" fg:x="6205" fg:w="1"/><text x="65.2579%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="65.0079%" y="677" width="0.0105%" height="15" fill="rgb(232,173,23)" fg:x="6205" fg:w="1"/><text x="65.2579%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="65.0079%" y="661" width="0.0105%" height="15" fill="rgb(218,116,1)" fg:x="6205" fg:w="1"/><text x="65.2579%" y="671.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="65.0079%" y="645" width="0.0105%" height="15" fill="rgb(207,34,4)" fg:x="6205" fg:w="1"/><text x="65.2579%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="65.0079%" y="629" width="0.0105%" height="15" fill="rgb(229,54,52)" fg:x="6205" fg:w="1"/><text x="65.2579%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="65.0183%" y="789" width="0.0105%" height="15" fill="rgb(211,86,23)" fg:x="6206" fg:w="1"/><text x="65.2683%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="65.0183%" y="773" width="0.0105%" height="15" fill="rgb(254,153,34)" fg:x="6206" fg:w="1"/><text x="65.2683%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="65.1021%" y="757" width="0.0105%" height="15" fill="rgb(219,220,14)" fg:x="6214" fg:w="1"/><text x="65.3521%" y="767.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.03%)</title><rect x="65.0917%" y="773" width="0.0314%" height="15" fill="rgb(247,8,26)" fg:x="6213" fg:w="3"/><text x="65.3417%" y="783.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="65.1126%" y="757" width="0.0105%" height="15" fill="rgb(213,129,42)" fg:x="6215" fg:w="1"/><text x="65.3626%" y="767.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write (1 samples, 0.01%)</title><rect x="65.1650%" y="741" width="0.0105%" height="15" fill="rgb(225,95,41)" fg:x="6220" fg:w="1"/><text x="65.4150%" y="751.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="65.1650%" y="725" width="0.0105%" height="15" fill="rgb(215,134,24)" fg:x="6220" fg:w="1"/><text x="65.4150%" y="735.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::write (2 samples, 0.02%)</title><rect x="65.1650%" y="757" width="0.0210%" height="15" fill="rgb(235,23,54)" fg:x="6220" fg:w="2"/><text x="65.4150%" y="767.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ptr (1 samples, 0.01%)</title><rect x="65.1755%" y="741" width="0.0105%" height="15" fill="rgb(229,96,31)" fg:x="6221" fg:w="1"/><text x="65.4255%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="65.1755%" y="725" width="0.0105%" height="15" fill="rgb(206,111,12)" fg:x="6221" fg:w="1"/><text x="65.4255%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="65.1755%" y="709" width="0.0105%" height="15" fill="rgb(222,177,8)" fg:x="6221" fg:w="1"/><text x="65.4255%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::bucket (1 samples, 0.01%)</title><rect x="65.1860%" y="757" width="0.0105%" height="15" fill="rgb(251,36,52)" fg:x="6222" fg:w="1"/><text x="65.4360%" y="767.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="65.1860%" y="741" width="0.0105%" height="15" fill="rgb(216,182,29)" fg:x="6222" fg:w="1"/><text x="65.4360%" y="751.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="65.1860%" y="725" width="0.0105%" height="15" fill="rgb(241,145,50)" fg:x="6222" fg:w="1"/><text x="65.4360%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="65.1860%" y="709" width="0.0105%" height="15" fill="rgb(231,71,35)" fg:x="6222" fg:w="1"/><text x="65.4360%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::inner::ProbeSeq as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="65.2383%" y="741" width="0.0105%" height="15" fill="rgb(218,22,17)" fg:x="6227" fg:w="1"/><text x="65.4883%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::probe_seq (4 samples, 0.04%)</title><rect x="65.2488%" y="741" width="0.0419%" height="15" fill="rgb(225,227,6)" fg:x="6228" fg:w="4"/><text x="65.4988%" y="751.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (4 samples, 0.04%)</title><rect x="65.2907%" y="741" width="0.0419%" height="15" fill="rgb(224,204,17)" fg:x="6232" fg:w="4"/><text x="65.5407%" y="751.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (3 samples, 0.03%)</title><rect x="65.3326%" y="741" width="0.0314%" height="15" fill="rgb(227,61,28)" fg:x="6236" fg:w="3"/><text x="65.5826%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.03%)</title><rect x="65.3326%" y="725" width="0.0314%" height="15" fill="rgb(242,148,23)" fg:x="6236" fg:w="3"/><text x="65.5826%" y="735.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="65.3326%" y="709" width="0.0314%" height="15" fill="rgb(237,105,33)" fg:x="6236" fg:w="3"/><text x="65.5826%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find_insert_slot (19 samples, 0.20%)</title><rect x="65.1964%" y="757" width="0.1991%" height="15" fill="rgb(238,218,40)" fg:x="6223" fg:w="19"/><text x="65.4464%" y="767.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (3 samples, 0.03%)</title><rect x="65.3641%" y="741" width="0.0314%" height="15" fill="rgb(209,126,11)" fg:x="6239" fg:w="3"/><text x="65.6141%" y="751.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (3 samples, 0.03%)</title><rect x="65.3641%" y="725" width="0.0314%" height="15" fill="rgb(245,90,11)" fg:x="6239" fg:w="3"/><text x="65.6141%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="65.4374%" y="709" width="0.0314%" height="15" fill="rgb(211,195,10)" fg:x="6246" fg:w="3"/><text x="65.6874%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="65.4374%" y="693" width="0.0314%" height="15" fill="rgb(231,45,45)" fg:x="6246" fg:w="3"/><text x="65.6874%" y="703.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::remove_lowest_bit (3 samples, 0.03%)</title><rect x="65.4374%" y="677" width="0.0314%" height="15" fill="rgb(246,100,43)" fg:x="6246" fg:w="3"/><text x="65.6874%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;core::mem::manually_drop::ManuallyDrop&lt;hashbrown::raw::inner::RawTable&lt;usize&gt;&gt;,hashbrown::raw::inner::RawTable&lt;usize&gt;::resize&lt;indexmap::map::core::get_hash&lt;engine::movement::pathing::Position,(usize,u32)&gt;::{{closure}}&gt;::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="65.4688%" y="709" width="0.0105%" height="15" fill="rgb(241,193,8)" fg:x="6249" fg:w="1"/><text x="65.7188%" y="719.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="65.4688%" y="693" width="0.0105%" height="15" fill="rgb(208,76,19)" fg:x="6249" fg:w="1"/><text x="65.7188%" y="703.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize::{{closure}} (1 samples, 0.01%)</title><rect x="65.4688%" y="677" width="0.0105%" height="15" fill="rgb(223,69,40)" fg:x="6249" fg:w="1"/><text x="65.7188%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::free_buckets (1 samples, 0.01%)</title><rect x="65.4688%" y="661" width="0.0105%" height="15" fill="rgb(207,120,39)" fg:x="6249" fg:w="1"/><text x="65.7188%" y="671.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="65.4688%" y="645" width="0.0105%" height="15" fill="rgb(212,209,28)" fg:x="6249" fg:w="1"/><text x="65.7188%" y="655.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="65.4688%" y="629" width="0.0105%" height="15" fill="rgb(246,82,29)" fg:x="6249" fg:w="1"/><text x="65.7188%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="65.4688%" y="613" width="0.0105%" height="15" fill="rgb(239,6,40)" fg:x="6249" fg:w="1"/><text x="65.7188%" y="623.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::copy_from_nonoverlapping (3 samples, 0.03%)</title><rect x="65.4793%" y="709" width="0.0314%" height="15" fill="rgb(228,181,35)" fg:x="6250" fg:w="3"/><text x="65.7293%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (3 samples, 0.03%)</title><rect x="65.4793%" y="693" width="0.0314%" height="15" fill="rgb(238,151,2)" fg:x="6250" fg:w="3"/><text x="65.7293%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="65.4793%" y="677" width="0.0314%" height="15" fill="rgb(236,94,18)" fg:x="6250" fg:w="3"/><text x="65.7293%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::fallible_with_capacity (3 samples, 0.03%)</title><rect x="65.5107%" y="709" width="0.0314%" height="15" fill="rgb(208,38,14)" fg:x="6253" fg:w="3"/><text x="65.7607%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::new_uninitialized (3 samples, 0.03%)</title><rect x="65.5107%" y="693" width="0.0314%" height="15" fill="rgb(234,215,27)" fg:x="6253" fg:w="3"/><text x="65.7607%" y="703.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="65.5107%" y="677" width="0.0314%" height="15" fill="rgb(254,211,53)" fg:x="6253" fg:w="3"/><text x="65.7607%" y="687.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="65.5107%" y="661" width="0.0314%" height="15" fill="rgb(216,175,11)" fg:x="6253" fg:w="3"/><text x="65.7607%" y="671.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="65.5317%" y="645" width="0.0105%" height="15" fill="rgb(246,179,26)" fg:x="6255" fg:w="1"/><text x="65.7817%" y="655.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="65.5317%" y="629" width="0.0105%" height="15" fill="rgb(249,19,52)" fg:x="6255" fg:w="1"/><text x="65.7817%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::inner::ProbeSeq as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="65.5631%" y="693" width="0.0210%" height="15" fill="rgb(230,42,52)" fg:x="6258" fg:w="2"/><text x="65.8131%" y="703.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (5 samples, 0.05%)</title><rect x="65.5841%" y="693" width="0.0524%" height="15" fill="rgb(221,171,0)" fg:x="6260" fg:w="5"/><text x="65.8341%" y="703.50"></text></g><g><title>hashbrown::raw::inner::is_full (9 samples, 0.09%)</title><rect x="65.6365%" y="693" width="0.0943%" height="15" fill="rgb(222,177,40)" fg:x="6265" fg:w="9"/><text x="65.8865%" y="703.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (4 samples, 0.04%)</title><rect x="65.7307%" y="693" width="0.0419%" height="15" fill="rgb(247,34,16)" fg:x="6274" fg:w="4"/><text x="65.9807%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.04%)</title><rect x="65.7307%" y="677" width="0.0419%" height="15" fill="rgb(213,217,37)" fg:x="6274" fg:w="4"/><text x="65.9807%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="65.7307%" y="661" width="0.0419%" height="15" fill="rgb(231,189,24)" fg:x="6274" fg:w="4"/><text x="65.9807%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find_insert_slot (24 samples, 0.25%)</title><rect x="65.5422%" y="709" width="0.2514%" height="15" fill="rgb(214,22,9)" fg:x="6256" fg:w="24"/><text x="65.7922%" y="719.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (2 samples, 0.02%)</title><rect x="65.7727%" y="693" width="0.0210%" height="15" fill="rgb(212,70,22)" fg:x="6278" fg:w="2"/><text x="66.0227%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (2 samples, 0.02%)</title><rect x="65.7727%" y="677" width="0.0210%" height="15" fill="rgb(249,64,51)" fg:x="6278" fg:w="2"/><text x="66.0227%" y="687.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="65.7936%" y="709" width="0.0105%" height="15" fill="rgb(249,148,20)" fg:x="6280" fg:w="1"/><text x="66.0436%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawIterRange&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="65.7936%" y="693" width="0.0105%" height="15" fill="rgb(246,46,48)" fg:x="6280" fg:w="1"/><text x="66.0436%" y="703.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="65.7936%" y="677" width="0.0105%" height="15" fill="rgb(217,34,48)" fg:x="6280" fg:w="1"/><text x="66.0436%" y="687.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::invert (1 samples, 0.01%)</title><rect x="65.7936%" y="661" width="0.0105%" height="15" fill="rgb(222,45,26)" fg:x="6280" fg:w="1"/><text x="66.0436%" y="671.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (3 samples, 0.03%)</title><rect x="65.8041%" y="709" width="0.0314%" height="15" fill="rgb(230,201,36)" fg:x="6281" fg:w="3"/><text x="66.0541%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::set_ctrl (2 samples, 0.02%)</title><rect x="65.8355%" y="709" width="0.0210%" height="15" fill="rgb(217,30,43)" fg:x="6284" fg:w="2"/><text x="66.0855%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve (51 samples, 0.53%)</title><rect x="65.3955%" y="757" width="0.5343%" height="15" fill="rgb(230,197,40)" fg:x="6242" fg:w="51"/><text x="65.6455%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::reserve_rehash (51 samples, 0.53%)</title><rect x="65.3955%" y="741" width="0.5343%" height="15" fill="rgb(239,181,18)" fg:x="6242" fg:w="51"/><text x="65.6455%" y="751.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::resize (51 samples, 0.53%)</title><rect x="65.3955%" y="725" width="0.5343%" height="15" fill="rgb(222,60,39)" fg:x="6242" fg:w="51"/><text x="65.6455%" y="735.50"></text></g><g><title>indexmap::map::core::get_hash::{{closure}} (7 samples, 0.07%)</title><rect x="65.8565%" y="709" width="0.0733%" height="15" fill="rgb(210,60,22)" fg:x="6286" fg:w="7"/><text x="66.1065%" y="719.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::set_ctrl (1 samples, 0.01%)</title><rect x="65.9298%" y="757" width="0.0105%" height="15" fill="rgb(239,213,48)" fg:x="6293" fg:w="1"/><text x="66.1798%" y="767.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::insert (79 samples, 0.83%)</title><rect x="65.1231%" y="773" width="0.8277%" height="15" fill="rgb(253,214,23)" fg:x="6216" fg:w="79"/><text x="65.3731%" y="783.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (1 samples, 0.01%)</title><rect x="65.9403%" y="757" width="0.0105%" height="15" fill="rgb(211,98,45)" fg:x="6294" fg:w="1"/><text x="66.1903%" y="767.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="66.0346%" y="597" width="0.0105%" height="15" fill="rgb(239,130,44)" fg:x="6303" fg:w="1"/><text x="66.2846%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (4 samples, 0.04%)</title><rect x="66.0450%" y="597" width="0.0419%" height="15" fill="rgb(222,181,35)" fg:x="6304" fg:w="4"/><text x="66.2950%" y="607.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="66.0870%" y="597" width="0.0210%" height="15" fill="rgb(219,219,49)" fg:x="6308" fg:w="2"/><text x="66.3370%" y="607.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="66.0974%" y="581" width="0.0105%" height="15" fill="rgb(227,161,51)" fg:x="6309" fg:w="1"/><text x="66.3474%" y="591.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="66.1708%" y="581" width="0.0105%" height="15" fill="rgb(239,112,27)" fg:x="6316" fg:w="1"/><text x="66.4208%" y="591.50"></text></g><g><title>__GI___libc_realloc (22 samples, 0.23%)</title><rect x="65.9612%" y="629" width="0.2305%" height="15" fill="rgb(248,122,18)" fg:x="6296" fg:w="22"/><text x="66.2112%" y="639.50"></text></g><g><title>_int_realloc (16 samples, 0.17%)</title><rect x="66.0241%" y="613" width="0.1676%" height="15" fill="rgb(245,130,23)" fg:x="6302" fg:w="16"/><text x="66.2741%" y="623.50"></text></g><g><title>_int_malloc (8 samples, 0.08%)</title><rect x="66.1079%" y="597" width="0.0838%" height="15" fill="rgb(211,225,28)" fg:x="6310" fg:w="8"/><text x="66.3579%" y="607.50"></text></g><g><title>unlink_chunk.constprop.0 (1 samples, 0.01%)</title><rect x="66.1812%" y="581" width="0.0105%" height="15" fill="rgb(242,105,44)" fg:x="6317" fg:w="1"/><text x="66.4312%" y="591.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (113 samples, 1.18%)</title><rect x="65.0183%" y="805" width="1.1839%" height="15" fill="rgb(216,183,46)" fg:x="6206" fg:w="113"/><text x="65.2683%" y="815.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (112 samples, 1.17%)</title><rect x="65.0288%" y="789" width="1.1734%" height="15" fill="rgb(227,112,9)" fg:x="6207" fg:w="112"/><text x="65.2788%" y="799.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (24 samples, 0.25%)</title><rect x="65.9508%" y="773" width="0.2514%" height="15" fill="rgb(244,21,0)" fg:x="6295" fg:w="24"/><text x="66.2008%" y="783.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (24 samples, 0.25%)</title><rect x="65.9508%" y="757" width="0.2514%" height="15" fill="rgb(236,185,14)" fg:x="6295" fg:w="24"/><text x="66.2008%" y="767.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (24 samples, 0.25%)</title><rect x="65.9508%" y="741" width="0.2514%" height="15" fill="rgb(236,170,30)" fg:x="6295" fg:w="24"/><text x="66.2008%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (24 samples, 0.25%)</title><rect x="65.9508%" y="725" width="0.2514%" height="15" fill="rgb(209,198,51)" fg:x="6295" fg:w="24"/><text x="66.2008%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (24 samples, 0.25%)</title><rect x="65.9508%" y="709" width="0.2514%" height="15" fill="rgb(205,171,26)" fg:x="6295" fg:w="24"/><text x="66.2008%" y="719.50"></text></g><g><title>alloc::raw_vec::finish_grow (24 samples, 0.25%)</title><rect x="65.9508%" y="693" width="0.2514%" height="15" fill="rgb(246,41,49)" fg:x="6295" fg:w="24"/><text x="66.2008%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (23 samples, 0.24%)</title><rect x="65.9612%" y="677" width="0.2410%" height="15" fill="rgb(240,229,12)" fg:x="6296" fg:w="23"/><text x="66.2112%" y="687.50"></text></g><g><title>alloc::alloc::Global::grow_impl (23 samples, 0.24%)</title><rect x="65.9612%" y="661" width="0.2410%" height="15" fill="rgb(212,8,54)" fg:x="6296" fg:w="23"/><text x="66.2112%" y="671.50"></text></g><g><title>alloc::alloc::realloc (23 samples, 0.24%)</title><rect x="65.9612%" y="645" width="0.2410%" height="15" fill="rgb(230,114,13)" fg:x="6296" fg:w="23"/><text x="66.2112%" y="655.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="66.1917%" y="629" width="0.0105%" height="15" fill="rgb(229,130,28)" fg:x="6318" fg:w="1"/><text x="66.4417%" y="639.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1 samples, 0.01%)</title><rect x="66.1917%" y="613" width="0.0105%" height="15" fill="rgb(206,139,15)" fg:x="6318" fg:w="1"/><text x="66.4417%" y="623.50"></text></g><g><title>&lt;itertools::sources::Unfold&lt;St,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="66.2022%" y="693" width="0.0105%" height="15" fill="rgb(241,188,35)" fg:x="6319" fg:w="1"/><text x="66.4522%" y="703.50"></text></g><g><title>pathfinding::directed::reverse_path::{{closure}} (1 samples, 0.01%)</title><rect x="66.2022%" y="677" width="0.0105%" height="15" fill="rgb(208,224,26)" fg:x="6319" fg:w="1"/><text x="66.4522%" y="687.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (1 samples, 0.01%)</title><rect x="66.2022%" y="661" width="0.0105%" height="15" fill="rgb(251,131,28)" fg:x="6319" fg:w="1"/><text x="66.4522%" y="671.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (1 samples, 0.01%)</title><rect x="66.2022%" y="645" width="0.0105%" height="15" fill="rgb(208,153,1)" fg:x="6319" fg:w="1"/><text x="66.4522%" y="655.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (1 samples, 0.01%)</title><rect x="66.2022%" y="629" width="0.0105%" height="15" fill="rgb(234,33,36)" fg:x="6319" fg:w="1"/><text x="66.4522%" y="639.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="66.2232%" y="533" width="0.0105%" height="15" fill="rgb(246,42,29)" fg:x="6321" fg:w="1"/><text x="66.4732%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (7 samples, 0.07%)</title><rect x="66.2127%" y="693" width="0.0733%" height="15" fill="rgb(251,114,16)" fg:x="6320" fg:w="7"/><text x="66.4627%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (7 samples, 0.07%)</title><rect x="66.2127%" y="677" width="0.0733%" height="15" fill="rgb(233,13,38)" fg:x="6320" fg:w="7"/><text x="66.4627%" y="687.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.07%)</title><rect x="66.2127%" y="661" width="0.0733%" height="15" fill="rgb(247,120,19)" fg:x="6320" fg:w="7"/><text x="66.4627%" y="671.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (7 samples, 0.07%)</title><rect x="66.2127%" y="645" width="0.0733%" height="15" fill="rgb(205,11,16)" fg:x="6320" fg:w="7"/><text x="66.4627%" y="655.50"></text></g><g><title>alloc::raw_vec::finish_grow (7 samples, 0.07%)</title><rect x="66.2127%" y="629" width="0.0733%" height="15" fill="rgb(228,185,19)" fg:x="6320" fg:w="7"/><text x="66.4627%" y="639.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (7 samples, 0.07%)</title><rect x="66.2127%" y="613" width="0.0733%" height="15" fill="rgb(239,88,52)" fg:x="6320" fg:w="7"/><text x="66.4627%" y="623.50"></text></g><g><title>alloc::alloc::Global::grow_impl (7 samples, 0.07%)</title><rect x="66.2127%" y="597" width="0.0733%" height="15" fill="rgb(219,23,1)" fg:x="6320" fg:w="7"/><text x="66.4627%" y="607.50"></text></g><g><title>alloc::alloc::realloc (7 samples, 0.07%)</title><rect x="66.2127%" y="581" width="0.0733%" height="15" fill="rgb(253,177,16)" fg:x="6320" fg:w="7"/><text x="66.4627%" y="591.50"></text></g><g><title>__GI___libc_realloc (7 samples, 0.07%)</title><rect x="66.2127%" y="565" width="0.0733%" height="15" fill="rgb(225,150,40)" fg:x="6320" fg:w="7"/><text x="66.4627%" y="575.50"></text></g><g><title>_int_realloc (6 samples, 0.06%)</title><rect x="66.2232%" y="549" width="0.0629%" height="15" fill="rgb(208,108,30)" fg:x="6321" fg:w="6"/><text x="66.4732%" y="559.50"></text></g><g><title>_int_malloc (5 samples, 0.05%)</title><rect x="66.2336%" y="533" width="0.0524%" height="15" fill="rgb(214,122,4)" fg:x="6322" fg:w="5"/><text x="66.4836%" y="543.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (9 samples, 0.09%)</title><rect x="66.2022%" y="709" width="0.0943%" height="15" fill="rgb(229,74,37)" fg:x="6319" fg:w="9"/><text x="66.4522%" y="719.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="66.2860%" y="693" width="0.0105%" height="15" fill="rgb(233,61,41)" fg:x="6327" fg:w="1"/><text x="66.5360%" y="703.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (14 samples, 0.15%)</title><rect x="66.2022%" y="725" width="0.1467%" height="15" fill="rgb(238,191,5)" fg:x="6319" fg:w="14"/><text x="66.4522%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (5 samples, 0.05%)</title><rect x="66.2965%" y="709" width="0.0524%" height="15" fill="rgb(233,78,24)" fg:x="6328" fg:w="5"/><text x="66.5465%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.05%)</title><rect x="66.2965%" y="693" width="0.0524%" height="15" fill="rgb(211,142,8)" fg:x="6328" fg:w="5"/><text x="66.5465%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.05%)</title><rect x="66.2965%" y="677" width="0.0524%" height="15" fill="rgb(253,38,53)" fg:x="6328" fg:w="5"/><text x="66.5465%" y="687.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (5 samples, 0.05%)</title><rect x="66.2965%" y="661" width="0.0524%" height="15" fill="rgb(234,63,51)" fg:x="6328" fg:w="5"/><text x="66.5465%" y="671.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (5 samples, 0.05%)</title><rect x="66.2965%" y="645" width="0.0524%" height="15" fill="rgb(205,23,31)" fg:x="6328" fg:w="5"/><text x="66.5465%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;engine::movement::pathing::Position&gt;&gt; (4 samples, 0.04%)</title><rect x="66.3070%" y="629" width="0.0419%" height="15" fill="rgb(210,184,50)" fg:x="6329" fg:w="4"/><text x="66.5570%" y="639.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="66.3070%" y="613" width="0.0419%" height="15" fill="rgb(222,112,26)" fg:x="6329" fg:w="4"/><text x="66.5570%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;engine::movement::pathing::Position,alloc::alloc::Global&gt;&gt; (4 samples, 0.04%)</title><rect x="66.3070%" y="597" width="0.0419%" height="15" fill="rgb(250,98,18)" fg:x="6329" fg:w="4"/><text x="66.5570%" y="607.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="66.3070%" y="581" width="0.0419%" height="15" fill="rgb(250,34,12)" fg:x="6329" fg:w="4"/><text x="66.5570%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;engine::movement::pathing::Position&gt;&gt; (4 samples, 0.04%)</title><rect x="66.3070%" y="565" width="0.0419%" height="15" fill="rgb(236,141,30)" fg:x="6329" fg:w="4"/><text x="66.5570%" y="575.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="66.3070%" y="549" width="0.0419%" height="15" fill="rgb(246,134,38)" fg:x="6329" fg:w="4"/><text x="66.5570%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (4 samples, 0.04%)</title><rect x="66.3070%" y="533" width="0.0419%" height="15" fill="rgb(240,114,4)" fg:x="6329" fg:w="4"/><text x="66.5570%" y="543.50"></text></g><g><title>alloc::alloc::dealloc (4 samples, 0.04%)</title><rect x="66.3070%" y="517" width="0.0419%" height="15" fill="rgb(243,113,39)" fg:x="6329" fg:w="4"/><text x="66.5570%" y="527.50"></text></g><g><title>__GI___libc_free (4 samples, 0.04%)</title><rect x="66.3070%" y="501" width="0.0419%" height="15" fill="rgb(239,215,4)" fg:x="6329" fg:w="4"/><text x="66.5570%" y="511.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="66.3070%" y="485" width="0.0419%" height="15" fill="rgb(236,229,45)" fg:x="6329" fg:w="4"/><text x="66.5570%" y="495.50"></text></g><g><title>engine::movement::pathing::plan_path (997 samples, 10.45%)</title><rect x="55.9246%" y="837" width="10.4453%" height="15" fill="rgb(242,2,6)" fg:x="5338" fg:w="997"/><text x="56.1746%" y="847.50">engine::movemen..</text></g><g><title>pathfinding::directed::astar::astar (997 samples, 10.45%)</title><rect x="55.9246%" y="821" width="10.4453%" height="15" fill="rgb(239,108,21)" fg:x="5338" fg:w="997"/><text x="56.1746%" y="831.50">pathfinding::di..</text></g><g><title>pathfinding::directed::reverse_path (16 samples, 0.17%)</title><rect x="66.2022%" y="805" width="0.1676%" height="15" fill="rgb(215,168,34)" fg:x="6319" fg:w="16"/><text x="66.4522%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (16 samples, 0.17%)</title><rect x="66.2022%" y="789" width="0.1676%" height="15" fill="rgb(238,31,17)" fg:x="6319" fg:w="16"/><text x="66.4522%" y="799.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (16 samples, 0.17%)</title><rect x="66.2022%" y="773" width="0.1676%" height="15" fill="rgb(220,133,11)" fg:x="6319" fg:w="16"/><text x="66.4522%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (16 samples, 0.17%)</title><rect x="66.2022%" y="757" width="0.1676%" height="15" fill="rgb(212,158,23)" fg:x="6319" fg:w="16"/><text x="66.4522%" y="767.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (16 samples, 0.17%)</title><rect x="66.2022%" y="741" width="0.1676%" height="15" fill="rgb(223,172,7)" fg:x="6319" fg:w="16"/><text x="66.4522%" y="751.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (2 samples, 0.02%)</title><rect x="66.3489%" y="725" width="0.0210%" height="15" fill="rgb(244,3,52)" fg:x="6333" fg:w="2"/><text x="66.5989%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="66.3489%" y="709" width="0.0210%" height="15" fill="rgb(207,69,27)" fg:x="6333" fg:w="2"/><text x="66.5989%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (2 samples, 0.02%)</title><rect x="66.3489%" y="693" width="0.0210%" height="15" fill="rgb(213,136,45)" fg:x="6333" fg:w="2"/><text x="66.5989%" y="703.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (2 samples, 0.02%)</title><rect x="66.3489%" y="677" width="0.0210%" height="15" fill="rgb(218,79,17)" fg:x="6333" fg:w="2"/><text x="66.5989%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (2 samples, 0.02%)</title><rect x="66.3489%" y="661" width="0.0210%" height="15" fill="rgb(216,106,36)" fg:x="6333" fg:w="2"/><text x="66.5989%" y="671.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (2 samples, 0.02%)</title><rect x="66.3489%" y="645" width="0.0210%" height="15" fill="rgb(251,27,45)" fg:x="6333" fg:w="2"/><text x="66.5989%" y="655.50"></text></g><g><title>alloc::alloc::alloc (2 samples, 0.02%)</title><rect x="66.3489%" y="629" width="0.0210%" height="15" fill="rgb(232,21,34)" fg:x="6333" fg:w="2"/><text x="66.5989%" y="639.50"></text></g><g><title>__GI___libc_malloc (2 samples, 0.02%)</title><rect x="66.3489%" y="613" width="0.0210%" height="15" fill="rgb(249,191,16)" fg:x="6333" fg:w="2"/><text x="66.5989%" y="623.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="66.3594%" y="597" width="0.0105%" height="15" fill="rgb(224,88,20)" fg:x="6334" fg:w="1"/><text x="66.6094%" y="607.50"></text></g><g><title>pathfinding::utils::absdiff (2 samples, 0.02%)</title><rect x="66.3698%" y="837" width="0.0210%" height="15" fill="rgb(237,93,27)" fg:x="6335" fg:w="2"/><text x="66.6198%" y="847.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (1 samples, 0.01%)</title><rect x="66.3803%" y="821" width="0.0105%" height="15" fill="rgb(226,198,48)" fg:x="6336" fg:w="1"/><text x="66.6303%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="66.4327%" y="645" width="0.0105%" height="15" fill="rgb(207,162,53)" fg:x="6341" fg:w="1"/><text x="66.6827%" y="655.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="66.4432%" y="645" width="0.0210%" height="15" fill="rgb(207,169,9)" fg:x="6342" fg:w="2"/><text x="66.6932%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.06%)</title><rect x="66.4327%" y="661" width="0.0629%" height="15" fill="rgb(224,166,46)" fg:x="6341" fg:w="6"/><text x="66.6827%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="66.4641%" y="645" width="0.0314%" height="15" fill="rgb(233,26,6)" fg:x="6344" fg:w="3"/><text x="66.7141%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (12 samples, 0.13%)</title><rect x="66.4013%" y="677" width="0.1257%" height="15" fill="rgb(218,106,45)" fg:x="6338" fg:w="12"/><text x="66.6513%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (3 samples, 0.03%)</title><rect x="66.4955%" y="661" width="0.0314%" height="15" fill="rgb(240,217,4)" fg:x="6347" fg:w="3"/><text x="66.7455%" y="671.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (19 samples, 0.20%)</title><rect x="66.4013%" y="773" width="0.1991%" height="15" fill="rgb(246,171,10)" fg:x="6338" fg:w="19"/><text x="66.6513%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (19 samples, 0.20%)</title><rect x="66.4013%" y="757" width="0.1991%" height="15" fill="rgb(223,197,30)" fg:x="6338" fg:w="19"/><text x="66.6513%" y="767.50"></text></g><g><title>core::hash::Hasher::write_i64 (19 samples, 0.20%)</title><rect x="66.4013%" y="741" width="0.1991%" height="15" fill="rgb(207,92,16)" fg:x="6338" fg:w="19"/><text x="66.6513%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u64 (19 samples, 0.20%)</title><rect x="66.4013%" y="725" width="0.1991%" height="15" fill="rgb(211,6,44)" fg:x="6338" fg:w="19"/><text x="66.6513%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (19 samples, 0.20%)</title><rect x="66.4013%" y="709" width="0.1991%" height="15" fill="rgb(219,139,2)" fg:x="6338" fg:w="19"/><text x="66.6513%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (19 samples, 0.20%)</title><rect x="66.4013%" y="693" width="0.1991%" height="15" fill="rgb(224,103,21)" fg:x="6338" fg:w="19"/><text x="66.6513%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (7 samples, 0.07%)</title><rect x="66.5270%" y="677" width="0.0733%" height="15" fill="rgb(254,110,48)" fg:x="6350" fg:w="7"/><text x="66.7770%" y="687.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="66.6108%" y="725" width="0.0210%" height="15" fill="rgb(212,88,19)" fg:x="6358" fg:w="2"/><text x="66.8608%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="66.6213%" y="709" width="0.0105%" height="15" fill="rgb(248,103,6)" fg:x="6359" fg:w="1"/><text x="66.8713%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (3 samples, 0.03%)</title><rect x="66.6632%" y="709" width="0.0314%" height="15" fill="rgb(214,53,46)" fg:x="6363" fg:w="3"/><text x="66.9132%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (34 samples, 0.36%)</title><rect x="66.3908%" y="789" width="0.3562%" height="15" fill="rgb(236,190,24)" fg:x="6337" fg:w="34"/><text x="66.6408%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (14 samples, 0.15%)</title><rect x="66.6003%" y="773" width="0.1467%" height="15" fill="rgb(254,58,28)" fg:x="6357" fg:w="14"/><text x="66.8503%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (14 samples, 0.15%)</title><rect x="66.6003%" y="757" width="0.1467%" height="15" fill="rgb(243,63,27)" fg:x="6357" fg:w="14"/><text x="66.8503%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (14 samples, 0.15%)</title><rect x="66.6003%" y="741" width="0.1467%" height="15" fill="rgb(206,81,20)" fg:x="6357" fg:w="14"/><text x="66.8503%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (11 samples, 0.12%)</title><rect x="66.6317%" y="725" width="0.1152%" height="15" fill="rgb(252,69,51)" fg:x="6360" fg:w="11"/><text x="66.8817%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (5 samples, 0.05%)</title><rect x="66.6946%" y="709" width="0.0524%" height="15" fill="rgb(222,213,4)" fg:x="6366" fg:w="5"/><text x="66.9446%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.02%)</title><rect x="66.7470%" y="773" width="0.0210%" height="15" fill="rgb(226,198,12)" fg:x="6371" fg:w="2"/><text x="66.9970%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (3 samples, 0.03%)</title><rect x="66.7889%" y="709" width="0.0314%" height="15" fill="rgb(248,115,11)" fg:x="6375" fg:w="3"/><text x="67.0389%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="66.7784%" y="741" width="0.0524%" height="15" fill="rgb(221,148,54)" fg:x="6374" fg:w="5"/><text x="67.0284%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="66.7889%" y="725" width="0.0419%" height="15" fill="rgb(214,209,51)" fg:x="6375" fg:w="4"/><text x="67.0389%" y="735.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="66.8203%" y="709" width="0.0105%" height="15" fill="rgb(249,116,53)" fg:x="6378" fg:w="1"/><text x="67.0703%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="66.7784%" y="757" width="0.0629%" height="15" fill="rgb(248,170,1)" fg:x="6374" fg:w="6"/><text x="67.0284%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="66.8308%" y="741" width="0.0105%" height="15" fill="rgb(244,105,10)" fg:x="6379" fg:w="1"/><text x="67.0808%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="66.8308%" y="725" width="0.0105%" height="15" fill="rgb(229,100,5)" fg:x="6379" fg:w="1"/><text x="67.0808%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="66.8308%" y="709" width="0.0105%" height="15" fill="rgb(233,221,39)" fg:x="6379" fg:w="1"/><text x="67.0808%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (8 samples, 0.08%)</title><rect x="66.8413%" y="757" width="0.0838%" height="15" fill="rgb(233,88,21)" fg:x="6380" fg:w="8"/><text x="67.0913%" y="767.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (8 samples, 0.08%)</title><rect x="66.8413%" y="741" width="0.0838%" height="15" fill="rgb(206,13,0)" fg:x="6380" fg:w="8"/><text x="67.0913%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::contains_key (52 samples, 0.54%)</title><rect x="66.3908%" y="837" width="0.5448%" height="15" fill="rgb(242,15,35)" fg:x="6337" fg:w="52"/><text x="66.6408%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (52 samples, 0.54%)</title><rect x="66.3908%" y="821" width="0.5448%" height="15" fill="rgb(247,142,41)" fg:x="6337" fg:w="52"/><text x="66.6408%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (52 samples, 0.54%)</title><rect x="66.3908%" y="805" width="0.5448%" height="15" fill="rgb(245,51,29)" fg:x="6337" fg:w="52"/><text x="66.6408%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (18 samples, 0.19%)</title><rect x="66.7470%" y="789" width="0.1886%" height="15" fill="rgb(228,209,43)" fg:x="6371" fg:w="18"/><text x="66.9970%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (16 samples, 0.17%)</title><rect x="66.7679%" y="773" width="0.1676%" height="15" fill="rgb(233,185,9)" fg:x="6373" fg:w="16"/><text x="67.0179%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="66.9251%" y="757" width="0.0105%" height="15" fill="rgb(226,93,0)" fg:x="6388" fg:w="1"/><text x="67.1751%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="66.9251%" y="741" width="0.0105%" height="15" fill="rgb(245,194,43)" fg:x="6388" fg:w="1"/><text x="67.1751%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="66.9251%" y="725" width="0.0105%" height="15" fill="rgb(211,145,34)" fg:x="6388" fg:w="1"/><text x="67.1751%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="66.9251%" y="709" width="0.0105%" height="15" fill="rgb(231,228,28)" fg:x="6388" fg:w="1"/><text x="67.1751%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="66.9251%" y="693" width="0.0105%" height="15" fill="rgb(236,149,4)" fg:x="6388" fg:w="1"/><text x="67.1751%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="66.9251%" y="677" width="0.0105%" height="15" fill="rgb(234,114,38)" fg:x="6388" fg:w="1"/><text x="67.1751%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::reserve (1 samples, 0.01%)</title><rect x="66.9356%" y="805" width="0.0105%" height="15" fill="rgb(246,132,51)" fg:x="6389" fg:w="1"/><text x="67.1856%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="66.9356%" y="789" width="0.0105%" height="15" fill="rgb(251,137,22)" fg:x="6389" fg:w="1"/><text x="67.1856%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="66.9356%" y="773" width="0.0105%" height="15" fill="rgb(243,59,52)" fg:x="6389" fg:w="1"/><text x="67.1856%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="66.9356%" y="757" width="0.0105%" height="15" fill="rgb(239,56,28)" fg:x="6389" fg:w="1"/><text x="67.1856%" y="767.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.01%)</title><rect x="66.9356%" y="741" width="0.0105%" height="15" fill="rgb(218,168,27)" fg:x="6389" fg:w="1"/><text x="67.1856%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="66.9356%" y="725" width="0.0105%" height="15" fill="rgb(232,165,11)" fg:x="6389" fg:w="1"/><text x="67.1856%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="66.9356%" y="709" width="0.0105%" height="15" fill="rgb(253,55,41)" fg:x="6389" fg:w="1"/><text x="67.1856%" y="719.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="66.9356%" y="693" width="0.0105%" height="15" fill="rgb(233,206,24)" fg:x="6389" fg:w="1"/><text x="67.1856%" y="703.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="66.9356%" y="677" width="0.0105%" height="15" fill="rgb(220,199,8)" fg:x="6389" fg:w="1"/><text x="67.1856%" y="687.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="66.9356%" y="661" width="0.0105%" height="15" fill="rgb(254,65,26)" fg:x="6389" fg:w="1"/><text x="67.1856%" y="671.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="66.9565%" y="693" width="0.0105%" height="15" fill="rgb(253,102,23)" fg:x="6391" fg:w="1"/><text x="67.2065%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="66.9565%" y="677" width="0.0105%" height="15" fill="rgb(231,103,35)" fg:x="6391" fg:w="1"/><text x="67.2065%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="66.9565%" y="661" width="0.0105%" height="15" fill="rgb(238,26,10)" fg:x="6391" fg:w="1"/><text x="67.2065%" y="671.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="66.9460%" y="789" width="0.0314%" height="15" fill="rgb(234,191,34)" fg:x="6390" fg:w="3"/><text x="67.1960%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (2 samples, 0.02%)</title><rect x="66.9565%" y="773" width="0.0210%" height="15" fill="rgb(206,210,9)" fg:x="6391" fg:w="2"/><text x="67.2065%" y="783.50"></text></g><g><title>core::hash::Hasher::write_i64 (2 samples, 0.02%)</title><rect x="66.9565%" y="757" width="0.0210%" height="15" fill="rgb(219,155,3)" fg:x="6391" fg:w="2"/><text x="67.2065%" y="767.50"></text></g><g><title>core::hash::Hasher::write_u64 (2 samples, 0.02%)</title><rect x="66.9565%" y="741" width="0.0210%" height="15" fill="rgb(221,62,52)" fg:x="6391" fg:w="2"/><text x="67.2065%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="66.9565%" y="725" width="0.0210%" height="15" fill="rgb(215,197,36)" fg:x="6391" fg:w="2"/><text x="67.2065%" y="735.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (2 samples, 0.02%)</title><rect x="66.9565%" y="709" width="0.0210%" height="15" fill="rgb(226,222,6)" fg:x="6391" fg:w="2"/><text x="67.2065%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="66.9670%" y="693" width="0.0105%" height="15" fill="rgb(215,58,28)" fg:x="6392" fg:w="1"/><text x="67.2170%" y="703.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (1 samples, 0.01%)</title><rect x="66.9775%" y="741" width="0.0105%" height="15" fill="rgb(212,148,2)" fg:x="6393" fg:w="1"/><text x="67.2275%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="66.9775%" y="789" width="0.0210%" height="15" fill="rgb(208,21,42)" fg:x="6393" fg:w="2"/><text x="67.2275%" y="799.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="66.9775%" y="773" width="0.0210%" height="15" fill="rgb(209,107,26)" fg:x="6393" fg:w="2"/><text x="67.2275%" y="783.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="66.9775%" y="757" width="0.0210%" height="15" fill="rgb(254,60,47)" fg:x="6393" fg:w="2"/><text x="67.2275%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="66.9880%" y="741" width="0.0105%" height="15" fill="rgb(207,226,45)" fg:x="6394" fg:w="1"/><text x="67.2380%" y="751.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="66.9880%" y="725" width="0.0105%" height="15" fill="rgb(223,124,22)" fg:x="6394" fg:w="1"/><text x="67.2380%" y="735.50"></text></g><g><title>hashbrown::map::make_insert_hash (6 samples, 0.06%)</title><rect x="66.9460%" y="805" width="0.0629%" height="15" fill="rgb(240,162,13)" fg:x="6390" fg:w="6"/><text x="67.1960%" y="815.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="66.9984%" y="789" width="0.0105%" height="15" fill="rgb(244,199,31)" fg:x="6395" fg:w="1"/><text x="67.2484%" y="799.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="66.9984%" y="773" width="0.0105%" height="15" fill="rgb(207,92,16)" fg:x="6395" fg:w="1"/><text x="67.2484%" y="783.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="66.9984%" y="757" width="0.0105%" height="15" fill="rgb(215,31,19)" fg:x="6395" fg:w="1"/><text x="67.2484%" y="767.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="66.9984%" y="741" width="0.0105%" height="15" fill="rgb(245,118,14)" fg:x="6395" fg:w="1"/><text x="67.2484%" y="751.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (9 samples, 0.09%)</title><rect x="66.9356%" y="821" width="0.0943%" height="15" fill="rgb(248,12,46)" fg:x="6389" fg:w="9"/><text x="67.1856%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="67.0089%" y="805" width="0.0210%" height="15" fill="rgb(209,119,0)" fg:x="6396" fg:w="2"/><text x="67.2589%" y="815.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (2 samples, 0.02%)</title><rect x="67.0089%" y="789" width="0.0210%" height="15" fill="rgb(254,51,44)" fg:x="6396" fg:w="2"/><text x="67.2589%" y="799.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="67.0089%" y="773" width="0.0210%" height="15" fill="rgb(253,182,35)" fg:x="6396" fg:w="2"/><text x="67.2589%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (10 samples, 0.10%)</title><rect x="66.9356%" y="837" width="0.1048%" height="15" fill="rgb(205,198,39)" fg:x="6389" fg:w="10"/><text x="67.1856%" y="847.50"></text></g><g><title>std::collections::hash::map::map_entry (1 samples, 0.01%)</title><rect x="67.0299%" y="821" width="0.0105%" height="15" fill="rgb(251,175,48)" fg:x="6398" fg:w="1"/><text x="67.2799%" y="831.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (1 samples, 0.01%)</title><rect x="67.1346%" y="645" width="0.0105%" height="15" fill="rgb(239,38,17)" fg:x="6408" fg:w="1"/><text x="67.3846%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (6 samples, 0.06%)</title><rect x="67.1032%" y="661" width="0.0629%" height="15" fill="rgb(212,101,8)" fg:x="6405" fg:w="6"/><text x="67.3532%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="67.1451%" y="645" width="0.0210%" height="15" fill="rgb(228,35,17)" fg:x="6409" fg:w="2"/><text x="67.3951%" y="655.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::write (10 samples, 0.10%)</title><rect x="67.0822%" y="677" width="0.1048%" height="15" fill="rgb(214,95,8)" fg:x="6403" fg:w="10"/><text x="67.3322%" y="687.50"></text></g><g><title>core::hash::sip::u8to64_le (2 samples, 0.02%)</title><rect x="67.1661%" y="661" width="0.0210%" height="15" fill="rgb(210,176,35)" fg:x="6411" fg:w="2"/><text x="67.4161%" y="671.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::hash::Hash&gt;::hash (16 samples, 0.17%)</title><rect x="67.0613%" y="773" width="0.1676%" height="15" fill="rgb(226,4,3)" fg:x="6401" fg:w="16"/><text x="67.3113%" y="783.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (16 samples, 0.17%)</title><rect x="67.0613%" y="757" width="0.1676%" height="15" fill="rgb(232,133,14)" fg:x="6401" fg:w="16"/><text x="67.3113%" y="767.50"></text></g><g><title>core::hash::Hasher::write_i64 (14 samples, 0.15%)</title><rect x="67.0822%" y="741" width="0.1467%" height="15" fill="rgb(250,191,8)" fg:x="6403" fg:w="14"/><text x="67.3322%" y="751.50"></text></g><g><title>core::hash::Hasher::write_u64 (14 samples, 0.15%)</title><rect x="67.0822%" y="725" width="0.1467%" height="15" fill="rgb(213,12,45)" fg:x="6403" fg:w="14"/><text x="67.3322%" y="735.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::write (14 samples, 0.15%)</title><rect x="67.0822%" y="709" width="0.1467%" height="15" fill="rgb(233,78,26)" fg:x="6403" fg:w="14"/><text x="67.3322%" y="719.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::write (14 samples, 0.15%)</title><rect x="67.0822%" y="693" width="0.1467%" height="15" fill="rgb(245,222,11)" fg:x="6403" fg:w="14"/><text x="67.3322%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (4 samples, 0.04%)</title><rect x="67.1870%" y="677" width="0.0419%" height="15" fill="rgb(216,174,12)" fg:x="6413" fg:w="4"/><text x="67.4370%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="67.2289%" y="709" width="0.0105%" height="15" fill="rgb(213,15,9)" fg:x="6417" fg:w="1"/><text x="67.4789%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::c_rounds (2 samples, 0.02%)</title><rect x="67.2289%" y="725" width="0.0210%" height="15" fill="rgb(238,103,32)" fg:x="6417" fg:w="2"/><text x="67.4789%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (1 samples, 0.01%)</title><rect x="67.2394%" y="709" width="0.0105%" height="15" fill="rgb(245,85,15)" fg:x="6418" fg:w="1"/><text x="67.4894%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (5 samples, 0.05%)</title><rect x="67.2603%" y="709" width="0.0524%" height="15" fill="rgb(254,204,5)" fg:x="6420" fg:w="5"/><text x="67.5103%" y="719.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (11 samples, 0.12%)</title><rect x="67.2289%" y="773" width="0.1152%" height="15" fill="rgb(231,178,15)" fg:x="6417" fg:w="11"/><text x="67.4789%" y="783.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (11 samples, 0.12%)</title><rect x="67.2289%" y="757" width="0.1152%" height="15" fill="rgb(248,151,3)" fg:x="6417" fg:w="11"/><text x="67.4789%" y="767.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (11 samples, 0.12%)</title><rect x="67.2289%" y="741" width="0.1152%" height="15" fill="rgb(250,139,13)" fg:x="6417" fg:w="11"/><text x="67.4789%" y="751.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (9 samples, 0.09%)</title><rect x="67.2499%" y="725" width="0.0943%" height="15" fill="rgb(243,107,53)" fg:x="6419" fg:w="9"/><text x="67.4999%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_add (3 samples, 0.03%)</title><rect x="67.3127%" y="709" width="0.0314%" height="15" fill="rgb(232,81,15)" fg:x="6425" fg:w="3"/><text x="67.5627%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (30 samples, 0.31%)</title><rect x="67.0508%" y="789" width="0.3143%" height="15" fill="rgb(225,187,48)" fg:x="6400" fg:w="30"/><text x="67.3008%" y="799.50"></text></g><g><title>&lt;std::collections::hash::map::RandomState as core::hash::BuildHasher&gt;::build_hasher (2 samples, 0.02%)</title><rect x="67.3442%" y="773" width="0.0210%" height="15" fill="rgb(205,116,12)" fg:x="6428" fg:w="2"/><text x="67.5942%" y="783.50"></text></g><g><title>core::hash::sip::SipHasher13::new_with_keys (1 samples, 0.01%)</title><rect x="67.3546%" y="757" width="0.0105%" height="15" fill="rgb(220,222,31)" fg:x="6429" fg:w="1"/><text x="67.6046%" y="767.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::new_with_keys (1 samples, 0.01%)</title><rect x="67.3546%" y="741" width="0.0105%" height="15" fill="rgb(233,187,49)" fg:x="6429" fg:w="1"/><text x="67.6046%" y="751.50"></text></g><g><title>core::hash::sip::Hasher&lt;S&gt;::reset (1 samples, 0.01%)</title><rect x="67.3546%" y="725" width="0.0105%" height="15" fill="rgb(211,168,53)" fg:x="6429" fg:w="1"/><text x="67.6046%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="67.3756%" y="757" width="0.0105%" height="15" fill="rgb(206,160,16)" fg:x="6431" fg:w="1"/><text x="67.6256%" y="767.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="67.3756%" y="741" width="0.0105%" height="15" fill="rgb(254,164,13)" fg:x="6431" fg:w="1"/><text x="67.6256%" y="751.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="67.3756%" y="725" width="0.0105%" height="15" fill="rgb(229,45,30)" fg:x="6431" fg:w="1"/><text x="67.6256%" y="735.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.01%)</title><rect x="67.3756%" y="709" width="0.0105%" height="15" fill="rgb(237,32,10)" fg:x="6431" fg:w="1"/><text x="67.6256%" y="719.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (6 samples, 0.06%)</title><rect x="67.3861%" y="757" width="0.0629%" height="15" fill="rgb(251,20,47)" fg:x="6432" fg:w="6"/><text x="67.6361%" y="767.50"></text></g><g><title>&lt;engine::movement::pathing::Position as core::cmp::PartialEq&gt;::eq (6 samples, 0.06%)</title><rect x="67.3861%" y="741" width="0.0629%" height="15" fill="rgb(251,116,12)" fg:x="6432" fg:w="6"/><text x="67.6361%" y="751.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (1,250 samples, 13.10%)</title><rect x="54.3635%" y="901" width="13.0959%" height="15" fill="rgb(214,227,27)" fg:x="5189" fg:w="1250"/><text x="54.6135%" y="911.50">&lt;Func as bevy_ecs::s..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,250 samples, 13.10%)</title><rect x="54.3635%" y="885" width="13.0959%" height="15" fill="rgb(248,10,53)" fg:x="5189" fg:w="1250"/><text x="54.6135%" y="895.50">core::ops::function:..</text></g><g><title>core::ops::function::Fn::call (1,250 samples, 13.10%)</title><rect x="54.3635%" y="869" width="13.0959%" height="15" fill="rgb(221,176,25)" fg:x="5189" fg:w="1250"/><text x="54.6135%" y="879.50">core::ops::function:..</text></g><g><title>engine::movement::pathing::move_actor (1,226 samples, 12.84%)</title><rect x="54.6150%" y="853" width="12.8444%" height="15" fill="rgb(205,70,46)" fg:x="5213" fg:w="1226"/><text x="54.8650%" y="863.50">engine::movement::p..</text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (40 samples, 0.42%)</title><rect x="67.0403%" y="837" width="0.4191%" height="15" fill="rgb(217,45,38)" fg:x="6399" fg:w="40"/><text x="67.2903%" y="847.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (40 samples, 0.42%)</title><rect x="67.0403%" y="821" width="0.4191%" height="15" fill="rgb(243,6,54)" fg:x="6399" fg:w="40"/><text x="67.2903%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (40 samples, 0.42%)</title><rect x="67.0403%" y="805" width="0.4191%" height="15" fill="rgb(242,76,23)" fg:x="6399" fg:w="40"/><text x="67.2903%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.09%)</title><rect x="67.3651%" y="789" width="0.0943%" height="15" fill="rgb(239,166,0)" fg:x="6430" fg:w="9"/><text x="67.6151%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.09%)</title><rect x="67.3651%" y="773" width="0.0943%" height="15" fill="rgb(238,174,32)" fg:x="6430" fg:w="9"/><text x="67.6151%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="67.4489%" y="757" width="0.0105%" height="15" fill="rgb(238,124,44)" fg:x="6438" fg:w="1"/><text x="67.6989%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="67.4489%" y="741" width="0.0105%" height="15" fill="rgb(206,185,9)" fg:x="6438" fg:w="1"/><text x="67.6989%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="67.4489%" y="725" width="0.0105%" height="15" fill="rgb(215,157,17)" fg:x="6438" fg:w="1"/><text x="67.6989%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="67.4489%" y="709" width="0.0105%" height="15" fill="rgb(251,17,29)" fg:x="6438" fg:w="1"/><text x="67.6989%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="67.4489%" y="693" width="0.0105%" height="15" fill="rgb(227,113,27)" fg:x="6438" fg:w="1"/><text x="67.6989%" y="703.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="67.4489%" y="677" width="0.0105%" height="15" fill="rgb(217,226,24)" fg:x="6438" fg:w="1"/><text x="67.6989%" y="687.50"></text></g><g><title>bevy_app::event::EventReader&lt;T&gt;::iter (1 samples, 0.01%)</title><rect x="67.4594%" y="837" width="0.0105%" height="15" fill="rgb(251,99,38)" fg:x="6439" fg:w="1"/><text x="67.7094%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (1 samples, 0.01%)</title><rect x="67.4594%" y="821" width="0.0105%" height="15" fill="rgb(231,147,19)" fg:x="6439" fg:w="1"/><text x="67.7094%" y="831.50"></text></g><g><title>core::iter::adapters::map::Map&lt;I,F&gt;::new (1 samples, 0.01%)</title><rect x="67.4594%" y="805" width="0.0105%" height="15" fill="rgb(230,86,8)" fg:x="6439" fg:w="1"/><text x="67.7094%" y="815.50"></text></g><g><title>bevy_render::mesh::mesh::mesh_resource_provider_system (2 samples, 0.02%)</title><rect x="67.4594%" y="853" width="0.0210%" height="15" fill="rgb(237,159,39)" fg:x="6439" fg:w="2"/><text x="67.7094%" y="863.50"></text></g><g><title>bevy_render::mesh::mesh::update_entity_mesh (1 samples, 0.01%)</title><rect x="67.4699%" y="837" width="0.0105%" height="15" fill="rgb(247,179,47)" fg:x="6440" fg:w="1"/><text x="67.7199%" y="847.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (1 samples, 0.01%)</title><rect x="67.4699%" y="821" width="0.0105%" height="15" fill="rgb(253,152,26)" fg:x="6440" fg:w="1"/><text x="67.7199%" y="831.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (1 samples, 0.01%)</title><rect x="67.4699%" y="805" width="0.0105%" height="15" fill="rgb(222,211,15)" fg:x="6440" fg:w="1"/><text x="67.7199%" y="815.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="67.4699%" y="789" width="0.0105%" height="15" fill="rgb(236,193,6)" fg:x="6440" fg:w="1"/><text x="67.7199%" y="799.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="67.4699%" y="773" width="0.0105%" height="15" fill="rgb(226,206,10)" fg:x="6440" fg:w="1"/><text x="67.7199%" y="783.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="67.4699%" y="757" width="0.0105%" height="15" fill="rgb(213,125,22)" fg:x="6440" fg:w="1"/><text x="67.7199%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="67.4699%" y="741" width="0.0105%" height="15" fill="rgb(221,66,28)" fg:x="6440" fg:w="1"/><text x="67.7199%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="67.4699%" y="725" width="0.0105%" height="15" fill="rgb(222,84,53)" fg:x="6440" fg:w="1"/><text x="67.7199%" y="735.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (1 samples, 0.01%)</title><rect x="67.8680%" y="805" width="0.0105%" height="15" fill="rgb(243,50,15)" fg:x="6478" fg:w="1"/><text x="68.1180%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="67.8680%" y="789" width="0.0105%" height="15" fill="rgb(208,184,23)" fg:x="6478" fg:w="1"/><text x="68.1180%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="67.8680%" y="773" width="0.0105%" height="15" fill="rgb(221,83,2)" fg:x="6478" fg:w="1"/><text x="68.1180%" y="783.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="67.8680%" y="837" width="0.0419%" height="15" fill="rgb(236,53,24)" fg:x="6478" fg:w="4"/><text x="68.1180%" y="847.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (4 samples, 0.04%)</title><rect x="67.8680%" y="821" width="0.0419%" height="15" fill="rgb(244,171,29)" fg:x="6478" fg:w="4"/><text x="68.1180%" y="831.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (3 samples, 0.03%)</title><rect x="67.8785%" y="805" width="0.0314%" height="15" fill="rgb(205,19,11)" fg:x="6479" fg:w="3"/><text x="68.1285%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (3 samples, 0.03%)</title><rect x="67.8785%" y="789" width="0.0314%" height="15" fill="rgb(207,108,29)" fg:x="6479" fg:w="3"/><text x="68.1285%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (3 samples, 0.03%)</title><rect x="67.8785%" y="773" width="0.0314%" height="15" fill="rgb(236,215,43)" fg:x="6479" fg:w="3"/><text x="68.1285%" y="783.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (3 samples, 0.03%)</title><rect x="67.9099%" y="821" width="0.0314%" height="15" fill="rgb(213,58,35)" fg:x="6482" fg:w="3"/><text x="68.1599%" y="831.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (3 samples, 0.03%)</title><rect x="67.9099%" y="805" width="0.0314%" height="15" fill="rgb(220,211,46)" fg:x="6482" fg:w="3"/><text x="68.1599%" y="815.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="67.9518%" y="757" width="0.0524%" height="15" fill="rgb(212,134,16)" fg:x="6486" fg:w="5"/><text x="68.2018%" y="767.50"></text></g><g><title>ahash::operations::folded_multiply (5 samples, 0.05%)</title><rect x="67.9518%" y="741" width="0.0524%" height="15" fill="rgb(232,90,44)" fg:x="6486" fg:w="5"/><text x="68.2018%" y="751.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (4 samples, 0.04%)</title><rect x="67.9623%" y="725" width="0.0419%" height="15" fill="rgb(212,18,36)" fg:x="6487" fg:w="4"/><text x="68.2123%" y="735.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="68.0880%" y="645" width="0.0210%" height="15" fill="rgb(206,112,24)" fg:x="6499" fg:w="2"/><text x="68.3380%" y="655.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="68.0880%" y="629" width="0.0210%" height="15" fill="rgb(238,223,40)" fg:x="6499" fg:w="2"/><text x="68.3380%" y="639.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (11 samples, 0.12%)</title><rect x="68.0042%" y="661" width="0.1152%" height="15" fill="rgb(226,169,20)" fg:x="6491" fg:w="11"/><text x="68.2542%" y="671.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="68.1090%" y="645" width="0.0105%" height="15" fill="rgb(241,64,52)" fg:x="6501" fg:w="1"/><text x="68.3590%" y="655.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (12 samples, 0.13%)</title><rect x="68.0042%" y="741" width="0.1257%" height="15" fill="rgb(228,120,25)" fg:x="6491" fg:w="12"/><text x="68.2542%" y="751.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (12 samples, 0.13%)</title><rect x="68.0042%" y="725" width="0.1257%" height="15" fill="rgb(234,108,19)" fg:x="6491" fg:w="12"/><text x="68.2542%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.13%)</title><rect x="68.0042%" y="709" width="0.1257%" height="15" fill="rgb(236,133,29)" fg:x="6491" fg:w="12"/><text x="68.2542%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (12 samples, 0.13%)</title><rect x="68.0042%" y="693" width="0.1257%" height="15" fill="rgb(246,174,53)" fg:x="6491" fg:w="12"/><text x="68.2542%" y="703.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (12 samples, 0.13%)</title><rect x="68.0042%" y="677" width="0.1257%" height="15" fill="rgb(210,105,35)" fg:x="6491" fg:w="12"/><text x="68.2542%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="68.1194%" y="661" width="0.0105%" height="15" fill="rgb(225,27,26)" fg:x="6502" fg:w="1"/><text x="68.3694%" y="671.50"></text></g><g><title>hashbrown::map::make_hash (19 samples, 0.20%)</title><rect x="67.9518%" y="773" width="0.1991%" height="15" fill="rgb(233,2,39)" fg:x="6486" fg:w="19"/><text x="68.2018%" y="783.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (14 samples, 0.15%)</title><rect x="68.0042%" y="757" width="0.1467%" height="15" fill="rgb(219,164,26)" fg:x="6491" fg:w="14"/><text x="68.2542%" y="767.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2 samples, 0.02%)</title><rect x="68.1299%" y="741" width="0.0210%" height="15" fill="rgb(236,211,5)" fg:x="6503" fg:w="2"/><text x="68.3799%" y="751.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (2 samples, 0.02%)</title><rect x="68.1299%" y="725" width="0.0210%" height="15" fill="rgb(244,227,23)" fg:x="6503" fg:w="2"/><text x="68.3799%" y="735.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.02%)</title><rect x="68.1299%" y="709" width="0.0210%" height="15" fill="rgb(230,184,8)" fg:x="6503" fg:w="2"/><text x="68.3799%" y="719.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="68.1299%" y="693" width="0.0210%" height="15" fill="rgb(217,125,48)" fg:x="6503" fg:w="2"/><text x="68.3799%" y="703.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="68.1299%" y="677" width="0.0210%" height="15" fill="rgb(223,192,47)" fg:x="6503" fg:w="2"/><text x="68.3799%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="68.1928%" y="741" width="0.0105%" height="15" fill="rgb(226,119,10)" fg:x="6509" fg:w="1"/><text x="68.4428%" y="751.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="68.1928%" y="725" width="0.0105%" height="15" fill="rgb(221,49,29)" fg:x="6509" fg:w="1"/><text x="68.4428%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="68.1928%" y="709" width="0.0105%" height="15" fill="rgb(217,205,19)" fg:x="6509" fg:w="1"/><text x="68.4428%" y="719.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="68.1928%" y="693" width="0.0105%" height="15" fill="rgb(242,104,7)" fg:x="6509" fg:w="1"/><text x="68.4428%" y="703.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1 samples, 0.01%)</title><rect x="68.2032%" y="741" width="0.0105%" height="15" fill="rgb(209,154,48)" fg:x="6510" fg:w="1"/><text x="68.4532%" y="751.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="68.2032%" y="725" width="0.0105%" height="15" fill="rgb(219,213,46)" fg:x="6510" fg:w="1"/><text x="68.4532%" y="735.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="68.2137%" y="693" width="0.0210%" height="15" fill="rgb(229,105,38)" fg:x="6511" fg:w="2"/><text x="68.4637%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="68.2137%" y="677" width="0.0210%" height="15" fill="rgb(205,151,5)" fg:x="6511" fg:w="2"/><text x="68.4637%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="68.2137%" y="661" width="0.0210%" height="15" fill="rgb(248,115,40)" fg:x="6511" fg:w="2"/><text x="68.4637%" y="671.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (32 samples, 0.34%)</title><rect x="67.9099%" y="837" width="0.3353%" height="15" fill="rgb(206,179,2)" fg:x="6482" fg:w="32"/><text x="68.1599%" y="847.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (29 samples, 0.30%)</title><rect x="67.9413%" y="821" width="0.3038%" height="15" fill="rgb(230,103,24)" fg:x="6485" fg:w="29"/><text x="68.1913%" y="831.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (29 samples, 0.30%)</title><rect x="67.9413%" y="805" width="0.3038%" height="15" fill="rgb(218,152,4)" fg:x="6485" fg:w="29"/><text x="68.1913%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (28 samples, 0.29%)</title><rect x="67.9518%" y="789" width="0.2933%" height="15" fill="rgb(236,161,54)" fg:x="6486" fg:w="28"/><text x="68.2018%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (9 samples, 0.09%)</title><rect x="68.1509%" y="773" width="0.0943%" height="15" fill="rgb(226,65,17)" fg:x="6505" fg:w="9"/><text x="68.4009%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (9 samples, 0.09%)</title><rect x="68.1509%" y="757" width="0.0943%" height="15" fill="rgb(221,134,44)" fg:x="6505" fg:w="9"/><text x="68.4009%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="68.2137%" y="741" width="0.0314%" height="15" fill="rgb(251,129,4)" fg:x="6511" fg:w="3"/><text x="68.4637%" y="751.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="68.2137%" y="725" width="0.0314%" height="15" fill="rgb(244,32,34)" fg:x="6511" fg:w="3"/><text x="68.4637%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="68.2137%" y="709" width="0.0314%" height="15" fill="rgb(251,224,37)" fg:x="6511" fg:w="3"/><text x="68.4637%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="68.2347%" y="693" width="0.0105%" height="15" fill="rgb(248,117,31)" fg:x="6513" fg:w="1"/><text x="68.4847%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="68.2347%" y="677" width="0.0105%" height="15" fill="rgb(222,208,37)" fg:x="6513" fg:w="1"/><text x="68.4847%" y="687.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="68.2347%" y="661" width="0.0105%" height="15" fill="rgb(234,211,25)" fg:x="6513" fg:w="1"/><text x="68.4847%" y="671.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="68.2347%" y="645" width="0.0105%" height="15" fill="rgb(211,72,6)" fg:x="6513" fg:w="1"/><text x="68.4847%" y="655.50"></text></g><g><title>bevy_render::draw::Draw::draw_indexed (14 samples, 0.15%)</title><rect x="68.2452%" y="837" width="0.1467%" height="15" fill="rgb(249,198,38)" fg:x="6514" fg:w="14"/><text x="68.4952%" y="847.50"></text></g><g><title>bevy_render::draw::Draw::render_command (14 samples, 0.15%)</title><rect x="68.2452%" y="821" width="0.1467%" height="15" fill="rgb(221,86,51)" fg:x="6514" fg:w="14"/><text x="68.4952%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (12 samples, 0.13%)</title><rect x="68.2661%" y="805" width="0.1257%" height="15" fill="rgb(226,178,43)" fg:x="6516" fg:w="12"/><text x="68.5161%" y="815.50"></text></g><g><title>core::ptr::write (12 samples, 0.13%)</title><rect x="68.2661%" y="789" width="0.1257%" height="15" fill="rgb(215,145,7)" fg:x="6516" fg:w="12"/><text x="68.5161%" y="799.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="68.5909%" y="805" width="0.0210%" height="15" fill="rgb(250,202,36)" fg:x="6547" fg:w="2"/><text x="68.8409%" y="815.50"></text></g><g><title>ahash::operations::folded_multiply (4 samples, 0.04%)</title><rect x="68.6118%" y="709" width="0.0419%" height="15" fill="rgb(215,86,13)" fg:x="6549" fg:w="4"/><text x="68.8618%" y="719.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="68.6328%" y="693" width="0.0210%" height="15" fill="rgb(221,134,12)" fg:x="6551" fg:w="2"/><text x="68.8828%" y="703.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="68.6118%" y="725" width="0.0524%" height="15" fill="rgb(213,82,10)" fg:x="6549" fg:w="5"/><text x="68.8618%" y="735.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="68.6537%" y="709" width="0.0105%" height="15" fill="rgb(214,142,0)" fg:x="6553" fg:w="1"/><text x="68.9037%" y="719.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (12 samples, 0.13%)</title><rect x="68.6642%" y="709" width="0.1257%" height="15" fill="rgb(205,145,9)" fg:x="6554" fg:w="12"/><text x="68.9142%" y="719.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (12 samples, 0.13%)</title><rect x="68.6642%" y="693" width="0.1257%" height="15" fill="rgb(244,214,8)" fg:x="6554" fg:w="12"/><text x="68.9142%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (12 samples, 0.13%)</title><rect x="68.6642%" y="677" width="0.1257%" height="15" fill="rgb(224,72,51)" fg:x="6554" fg:w="12"/><text x="68.9142%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (12 samples, 0.13%)</title><rect x="68.6642%" y="661" width="0.1257%" height="15" fill="rgb(233,137,37)" fg:x="6554" fg:w="12"/><text x="68.9142%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (12 samples, 0.13%)</title><rect x="68.6642%" y="645" width="0.1257%" height="15" fill="rgb(208,71,28)" fg:x="6554" fg:w="12"/><text x="68.9142%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (12 samples, 0.13%)</title><rect x="68.6642%" y="629" width="0.1257%" height="15" fill="rgb(226,31,7)" fg:x="6554" fg:w="12"/><text x="68.9142%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="68.7690%" y="613" width="0.0210%" height="15" fill="rgb(229,62,18)" fg:x="6564" fg:w="2"/><text x="69.0190%" y="623.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="68.7795%" y="597" width="0.0105%" height="15" fill="rgb(226,74,28)" fg:x="6565" fg:w="1"/><text x="69.0295%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (22 samples, 0.23%)</title><rect x="68.6118%" y="741" width="0.2305%" height="15" fill="rgb(214,170,18)" fg:x="6549" fg:w="22"/><text x="68.8618%" y="751.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (17 samples, 0.18%)</title><rect x="68.6642%" y="725" width="0.1781%" height="15" fill="rgb(227,229,35)" fg:x="6554" fg:w="17"/><text x="68.9142%" y="735.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (5 samples, 0.05%)</title><rect x="68.7899%" y="709" width="0.0524%" height="15" fill="rgb(225,181,39)" fg:x="6566" fg:w="5"/><text x="69.0399%" y="719.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (5 samples, 0.05%)</title><rect x="68.7899%" y="693" width="0.0524%" height="15" fill="rgb(253,124,44)" fg:x="6566" fg:w="5"/><text x="69.0399%" y="703.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (5 samples, 0.05%)</title><rect x="68.7899%" y="677" width="0.0524%" height="15" fill="rgb(220,75,18)" fg:x="6566" fg:w="5"/><text x="69.0399%" y="687.50"></text></g><g><title>ahash::operations::folded_multiply (4 samples, 0.04%)</title><rect x="68.8004%" y="661" width="0.0419%" height="15" fill="rgb(239,175,43)" fg:x="6567" fg:w="4"/><text x="69.0504%" y="671.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="68.8318%" y="645" width="0.0105%" height="15" fill="rgb(228,112,50)" fg:x="6570" fg:w="1"/><text x="69.0818%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="68.8633%" y="693" width="0.0105%" height="15" fill="rgb(232,105,36)" fg:x="6573" fg:w="1"/><text x="69.1133%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="68.8633%" y="677" width="0.0105%" height="15" fill="rgb(227,137,47)" fg:x="6573" fg:w="1"/><text x="69.1133%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="68.8633%" y="661" width="0.0105%" height="15" fill="rgb(217,51,9)" fg:x="6573" fg:w="1"/><text x="69.1133%" y="671.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.01%)</title><rect x="68.8738%" y="645" width="0.0105%" height="15" fill="rgb(245,117,0)" fg:x="6574" fg:w="1"/><text x="69.1238%" y="655.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="68.8738%" y="629" width="0.0105%" height="15" fill="rgb(252,52,30)" fg:x="6574" fg:w="1"/><text x="69.1238%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="68.8633%" y="709" width="0.0314%" height="15" fill="rgb(227,85,33)" fg:x="6573" fg:w="3"/><text x="69.1133%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (2 samples, 0.02%)</title><rect x="68.8738%" y="693" width="0.0210%" height="15" fill="rgb(220,157,20)" fg:x="6574" fg:w="2"/><text x="69.1238%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.02%)</title><rect x="68.8738%" y="677" width="0.0210%" height="15" fill="rgb(254,14,34)" fg:x="6574" fg:w="2"/><text x="69.1238%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (2 samples, 0.02%)</title><rect x="68.8738%" y="661" width="0.0210%" height="15" fill="rgb(216,103,41)" fg:x="6574" fg:w="2"/><text x="69.1238%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="68.8842%" y="645" width="0.0105%" height="15" fill="rgb(245,221,9)" fg:x="6575" fg:w="1"/><text x="69.1342%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (7 samples, 0.07%)</title><rect x="68.8947%" y="709" width="0.0733%" height="15" fill="rgb(254,136,47)" fg:x="6576" fg:w="7"/><text x="69.1447%" y="719.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (7 samples, 0.07%)</title><rect x="68.8947%" y="693" width="0.0733%" height="15" fill="rgb(235,71,46)" fg:x="6576" fg:w="7"/><text x="69.1447%" y="703.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="68.9471%" y="677" width="0.0210%" height="15" fill="rgb(242,154,29)" fg:x="6581" fg:w="2"/><text x="69.1971%" y="687.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (2 samples, 0.02%)</title><rect x="68.9471%" y="661" width="0.0210%" height="15" fill="rgb(210,65,31)" fg:x="6581" fg:w="2"/><text x="69.1971%" y="671.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (2 samples, 0.02%)</title><rect x="68.9471%" y="645" width="0.0210%" height="15" fill="rgb(244,9,50)" fg:x="6581" fg:w="2"/><text x="69.1971%" y="655.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="68.9680%" y="661" width="0.0105%" height="15" fill="rgb(215,141,38)" fg:x="6583" fg:w="1"/><text x="69.2180%" y="671.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (36 samples, 0.38%)</title><rect x="68.6118%" y="805" width="0.3772%" height="15" fill="rgb(241,129,6)" fg:x="6549" fg:w="36"/><text x="68.8618%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (36 samples, 0.38%)</title><rect x="68.6118%" y="789" width="0.3772%" height="15" fill="rgb(253,169,4)" fg:x="6549" fg:w="36"/><text x="68.8618%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (36 samples, 0.38%)</title><rect x="68.6118%" y="773" width="0.3772%" height="15" fill="rgb(237,82,36)" fg:x="6549" fg:w="36"/><text x="68.8618%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (36 samples, 0.38%)</title><rect x="68.6118%" y="757" width="0.3772%" height="15" fill="rgb(209,171,11)" fg:x="6549" fg:w="36"/><text x="68.8618%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (14 samples, 0.15%)</title><rect x="68.8423%" y="741" width="0.1467%" height="15" fill="rgb(242,19,22)" fg:x="6571" fg:w="14"/><text x="69.0923%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.15%)</title><rect x="68.8423%" y="725" width="0.1467%" height="15" fill="rgb(251,122,24)" fg:x="6571" fg:w="14"/><text x="69.0923%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="68.9680%" y="709" width="0.0210%" height="15" fill="rgb(226,166,42)" fg:x="6583" fg:w="2"/><text x="69.2180%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="68.9680%" y="693" width="0.0210%" height="15" fill="rgb(244,101,48)" fg:x="6583" fg:w="2"/><text x="69.2180%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="68.9680%" y="677" width="0.0210%" height="15" fill="rgb(227,125,1)" fg:x="6583" fg:w="2"/><text x="69.2180%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="68.9785%" y="661" width="0.0105%" height="15" fill="rgb(206,79,43)" fg:x="6584" fg:w="1"/><text x="69.2285%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="68.9785%" y="645" width="0.0105%" height="15" fill="rgb(241,109,41)" fg:x="6584" fg:w="1"/><text x="69.2285%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="68.9785%" y="629" width="0.0105%" height="15" fill="rgb(219,73,4)" fg:x="6584" fg:w="1"/><text x="69.2285%" y="639.50"></text></g><g><title>bevy_render::draw::Draw::set_bind_group (4 samples, 0.04%)</title><rect x="68.9890%" y="805" width="0.0419%" height="15" fill="rgb(239,25,41)" fg:x="6585" fg:w="4"/><text x="69.2390%" y="815.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="68.9890%" y="789" width="0.0419%" height="15" fill="rgb(208,88,46)" fg:x="6585" fg:w="4"/><text x="69.2390%" y="799.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="68.9995%" y="773" width="0.0314%" height="15" fill="rgb(239,184,9)" fg:x="6586" fg:w="3"/><text x="69.2495%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (3 samples, 0.03%)</title><rect x="68.9995%" y="757" width="0.0314%" height="15" fill="rgb(223,114,13)" fg:x="6586" fg:w="3"/><text x="69.2495%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_add (3 samples, 0.03%)</title><rect x="68.9995%" y="741" width="0.0314%" height="15" fill="rgb(214,28,42)" fg:x="6586" fg:w="3"/><text x="69.2495%" y="751.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (4 samples, 0.04%)</title><rect x="69.0309%" y="805" width="0.0419%" height="15" fill="rgb(252,32,44)" fg:x="6589" fg:w="4"/><text x="69.2809%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="69.0309%" y="789" width="0.0419%" height="15" fill="rgb(231,159,4)" fg:x="6589" fg:w="4"/><text x="69.2809%" y="799.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="69.0309%" y="773" width="0.0419%" height="15" fill="rgb(210,35,26)" fg:x="6589" fg:w="4"/><text x="69.2809%" y="783.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="69.0623%" y="757" width="0.0105%" height="15" fill="rgb(208,190,37)" fg:x="6592" fg:w="1"/><text x="69.3123%" y="767.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="69.0728%" y="725" width="0.0314%" height="15" fill="rgb(226,148,22)" fg:x="6593" fg:w="3"/><text x="69.3228%" y="735.50"></text></g><g><title>ahash::operations::folded_multiply (3 samples, 0.03%)</title><rect x="69.0728%" y="709" width="0.0314%" height="15" fill="rgb(242,153,24)" fg:x="6593" fg:w="3"/><text x="69.3228%" y="719.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="69.0833%" y="693" width="0.0210%" height="15" fill="rgb(213,133,7)" fg:x="6594" fg:w="2"/><text x="69.3333%" y="703.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (5 samples, 0.05%)</title><rect x="69.1042%" y="613" width="0.0524%" height="15" fill="rgb(248,206,18)" fg:x="6596" fg:w="5"/><text x="69.3542%" y="623.50"></text></g><g><title>ahash::operations::folded_multiply (3 samples, 0.03%)</title><rect x="69.1252%" y="597" width="0.0314%" height="15" fill="rgb(233,157,4)" fg:x="6598" fg:w="3"/><text x="69.3752%" y="607.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="69.1357%" y="581" width="0.0210%" height="15" fill="rgb(249,179,32)" fg:x="6599" fg:w="2"/><text x="69.3857%" y="591.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (6 samples, 0.06%)</title><rect x="69.1042%" y="645" width="0.0629%" height="15" fill="rgb(248,69,35)" fg:x="6596" fg:w="6"/><text x="69.3542%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="69.1042%" y="629" width="0.0629%" height="15" fill="rgb(249,158,38)" fg:x="6596" fg:w="6"/><text x="69.3542%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="69.1566%" y="613" width="0.0105%" height="15" fill="rgb(223,18,43)" fg:x="6601" fg:w="1"/><text x="69.4066%" y="623.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (7 samples, 0.07%)</title><rect x="69.1042%" y="693" width="0.0733%" height="15" fill="rgb(238,42,45)" fg:x="6596" fg:w="7"/><text x="69.3542%" y="703.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (7 samples, 0.07%)</title><rect x="69.1042%" y="677" width="0.0733%" height="15" fill="rgb(219,65,47)" fg:x="6596" fg:w="7"/><text x="69.3542%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.07%)</title><rect x="69.1042%" y="661" width="0.0733%" height="15" fill="rgb(248,153,12)" fg:x="6596" fg:w="7"/><text x="69.3542%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="69.1671%" y="645" width="0.0105%" height="15" fill="rgb(240,118,4)" fg:x="6602" fg:w="1"/><text x="69.4171%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="69.1671%" y="629" width="0.0105%" height="15" fill="rgb(250,96,34)" fg:x="6602" fg:w="1"/><text x="69.4171%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="69.1671%" y="613" width="0.0105%" height="15" fill="rgb(221,15,4)" fg:x="6602" fg:w="1"/><text x="69.4171%" y="623.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="69.1671%" y="597" width="0.0105%" height="15" fill="rgb(217,149,33)" fg:x="6602" fg:w="1"/><text x="69.4171%" y="607.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="69.1671%" y="581" width="0.0105%" height="15" fill="rgb(213,58,29)" fg:x="6602" fg:w="1"/><text x="69.4171%" y="591.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="69.1671%" y="565" width="0.0105%" height="15" fill="rgb(236,218,9)" fg:x="6602" fg:w="1"/><text x="69.4171%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (11 samples, 0.12%)</title><rect x="69.0728%" y="741" width="0.1152%" height="15" fill="rgb(248,40,19)" fg:x="6593" fg:w="11"/><text x="69.3228%" y="751.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (8 samples, 0.08%)</title><rect x="69.1042%" y="725" width="0.0838%" height="15" fill="rgb(212,17,6)" fg:x="6596" fg:w="8"/><text x="69.3542%" y="735.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (8 samples, 0.08%)</title><rect x="69.1042%" y="709" width="0.0838%" height="15" fill="rgb(206,212,20)" fg:x="6596" fg:w="8"/><text x="69.3542%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for isize&gt;::hash (1 samples, 0.01%)</title><rect x="69.1776%" y="693" width="0.0105%" height="15" fill="rgb(229,80,37)" fg:x="6603" fg:w="1"/><text x="69.4276%" y="703.50"></text></g><g><title>core::hash::Hasher::write_isize (1 samples, 0.01%)</title><rect x="69.1776%" y="677" width="0.0105%" height="15" fill="rgb(253,8,37)" fg:x="6603" fg:w="1"/><text x="69.4276%" y="687.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="69.1776%" y="661" width="0.0105%" height="15" fill="rgb(215,16,43)" fg:x="6603" fg:w="1"/><text x="69.4276%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="69.1776%" y="645" width="0.0105%" height="15" fill="rgb(236,219,16)" fg:x="6603" fg:w="1"/><text x="69.4276%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="69.1776%" y="629" width="0.0105%" height="15" fill="rgb(251,0,3)" fg:x="6603" fg:w="1"/><text x="69.4276%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="69.1776%" y="613" width="0.0105%" height="15" fill="rgb(207,133,37)" fg:x="6603" fg:w="1"/><text x="69.4276%" y="623.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="69.1776%" y="597" width="0.0105%" height="15" fill="rgb(250,143,20)" fg:x="6603" fg:w="1"/><text x="69.4276%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="69.2404%" y="677" width="0.0105%" height="15" fill="rgb(242,19,50)" fg:x="6609" fg:w="1"/><text x="69.4904%" y="687.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="69.2404%" y="661" width="0.0105%" height="15" fill="rgb(206,124,43)" fg:x="6609" fg:w="1"/><text x="69.4904%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="69.2195%" y="693" width="0.0524%" height="15" fill="rgb(229,4,38)" fg:x="6607" fg:w="5"/><text x="69.4695%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (2 samples, 0.02%)</title><rect x="69.2509%" y="677" width="0.0210%" height="15" fill="rgb(247,220,45)" fg:x="6610" fg:w="2"/><text x="69.5009%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="69.2195%" y="709" width="0.0629%" height="15" fill="rgb(247,195,0)" fg:x="6607" fg:w="6"/><text x="69.4695%" y="719.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="69.2719%" y="693" width="0.0105%" height="15" fill="rgb(252,12,19)" fg:x="6612" fg:w="1"/><text x="69.5219%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="69.2719%" y="677" width="0.0105%" height="15" fill="rgb(222,49,50)" fg:x="6612" fg:w="1"/><text x="69.5219%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="69.2719%" y="661" width="0.0105%" height="15" fill="rgb(209,157,28)" fg:x="6612" fg:w="1"/><text x="69.5219%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="69.2719%" y="645" width="0.0105%" height="15" fill="rgb(238,174,24)" fg:x="6612" fg:w="1"/><text x="69.5219%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (44 samples, 0.46%)</title><rect x="69.2823%" y="709" width="0.4610%" height="15" fill="rgb(224,17,28)" fg:x="6613" fg:w="44"/><text x="69.5323%" y="719.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (44 samples, 0.46%)</title><rect x="69.2823%" y="693" width="0.4610%" height="15" fill="rgb(249,7,29)" fg:x="6613" fg:w="44"/><text x="69.5323%" y="703.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (44 samples, 0.46%)</title><rect x="69.2823%" y="677" width="0.4610%" height="15" fill="rgb(243,178,4)" fg:x="6613" fg:w="44"/><text x="69.5323%" y="687.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="69.7119%" y="661" width="0.0314%" height="15" fill="rgb(246,138,35)" fg:x="6654" fg:w="3"/><text x="69.9619%" y="671.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (3 samples, 0.03%)</title><rect x="69.7119%" y="645" width="0.0314%" height="15" fill="rgb(251,85,18)" fg:x="6654" fg:w="3"/><text x="69.9619%" y="655.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (3 samples, 0.03%)</title><rect x="69.7119%" y="629" width="0.0314%" height="15" fill="rgb(254,55,9)" fg:x="6654" fg:w="3"/><text x="69.9619%" y="639.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ref (4 samples, 0.04%)</title><rect x="69.7433%" y="709" width="0.0419%" height="15" fill="rgb(248,4,50)" fg:x="6657" fg:w="4"/><text x="69.9933%" y="719.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::as_ptr (4 samples, 0.04%)</title><rect x="69.7433%" y="693" width="0.0419%" height="15" fill="rgb(215,208,14)" fg:x="6657" fg:w="4"/><text x="69.9933%" y="703.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (4 samples, 0.04%)</title><rect x="69.7433%" y="677" width="0.0419%" height="15" fill="rgb(218,37,18)" fg:x="6657" fg:w="4"/><text x="69.9933%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (4 samples, 0.04%)</title><rect x="69.7433%" y="661" width="0.0419%" height="15" fill="rgb(206,104,13)" fg:x="6657" fg:w="4"/><text x="69.9933%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="69.7852%" y="661" width="0.0105%" height="15" fill="rgb(248,94,22)" fg:x="6661" fg:w="1"/><text x="70.0352%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (4 samples, 0.04%)</title><rect x="69.7957%" y="661" width="0.0419%" height="15" fill="rgb(235,42,46)" fg:x="6662" fg:w="4"/><text x="70.0457%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (4 samples, 0.04%)</title><rect x="69.7957%" y="645" width="0.0419%" height="15" fill="rgb(220,228,48)" fg:x="6662" fg:w="4"/><text x="70.0457%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (4 samples, 0.04%)</title><rect x="69.7957%" y="629" width="0.0419%" height="15" fill="rgb(216,58,12)" fg:x="6662" fg:w="4"/><text x="70.0457%" y="639.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_mut_untyped (74 samples, 0.78%)</title><rect x="69.0728%" y="805" width="0.7753%" height="15" fill="rgb(223,97,52)" fg:x="6593" fg:w="74"/><text x="69.3228%" y="815.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (74 samples, 0.78%)</title><rect x="69.0728%" y="789" width="0.7753%" height="15" fill="rgb(208,159,17)" fg:x="6593" fg:w="74"/><text x="69.3228%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (74 samples, 0.78%)</title><rect x="69.0728%" y="773" width="0.7753%" height="15" fill="rgb(215,172,9)" fg:x="6593" fg:w="74"/><text x="69.3228%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (74 samples, 0.78%)</title><rect x="69.0728%" y="757" width="0.7753%" height="15" fill="rgb(252,175,30)" fg:x="6593" fg:w="74"/><text x="69.3228%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (63 samples, 0.66%)</title><rect x="69.1881%" y="741" width="0.6600%" height="15" fill="rgb(209,159,10)" fg:x="6604" fg:w="63"/><text x="69.4381%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (63 samples, 0.66%)</title><rect x="69.1881%" y="725" width="0.6600%" height="15" fill="rgb(229,73,51)" fg:x="6604" fg:w="63"/><text x="69.4381%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.06%)</title><rect x="69.7852%" y="709" width="0.0629%" height="15" fill="rgb(208,212,43)" fg:x="6661" fg:w="6"/><text x="70.0352%" y="719.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.06%)</title><rect x="69.7852%" y="693" width="0.0629%" height="15" fill="rgb(254,123,53)" fg:x="6661" fg:w="6"/><text x="70.0352%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.06%)</title><rect x="69.7852%" y="677" width="0.0629%" height="15" fill="rgb(254,128,49)" fg:x="6661" fg:w="6"/><text x="70.0352%" y="687.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="69.8376%" y="661" width="0.0105%" height="15" fill="rgb(246,16,16)" fg:x="6666" fg:w="1"/><text x="70.0876%" y="671.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="69.8376%" y="645" width="0.0105%" height="15" fill="rgb(209,200,1)" fg:x="6666" fg:w="1"/><text x="70.0876%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="69.8376%" y="629" width="0.0105%" height="15" fill="rgb(235,9,3)" fg:x="6666" fg:w="1"/><text x="70.0876%" y="639.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="69.8376%" y="613" width="0.0105%" height="15" fill="rgb(233,121,54)" fg:x="6666" fg:w="1"/><text x="70.0876%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.03%)</title><rect x="69.8690%" y="693" width="0.0314%" height="15" fill="rgb(236,80,25)" fg:x="6669" fg:w="3"/><text x="70.1190%" y="703.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.03%)</title><rect x="69.8690%" y="677" width="0.0314%" height="15" fill="rgb(220,44,24)" fg:x="6669" fg:w="3"/><text x="70.1190%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (14 samples, 0.15%)</title><rect x="69.8690%" y="709" width="0.1467%" height="15" fill="rgb(236,225,16)" fg:x="6669" fg:w="14"/><text x="70.1190%" y="719.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (11 samples, 0.12%)</title><rect x="69.9005%" y="693" width="0.1152%" height="15" fill="rgb(237,140,0)" fg:x="6672" fg:w="11"/><text x="70.1505%" y="703.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (11 samples, 0.12%)</title><rect x="69.9005%" y="677" width="0.1152%" height="15" fill="rgb(243,225,53)" fg:x="6672" fg:w="11"/><text x="70.1505%" y="687.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::iter_assets (17 samples, 0.18%)</title><rect x="69.8481%" y="805" width="0.1781%" height="15" fill="rgb(240,140,30)" fg:x="6667" fg:w="17"/><text x="70.0981%" y="815.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (17 samples, 0.18%)</title><rect x="69.8481%" y="789" width="0.1781%" height="15" fill="rgb(217,51,16)" fg:x="6667" fg:w="17"/><text x="70.0981%" y="799.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (17 samples, 0.18%)</title><rect x="69.8481%" y="773" width="0.1781%" height="15" fill="rgb(245,75,50)" fg:x="6667" fg:w="17"/><text x="70.0981%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (17 samples, 0.18%)</title><rect x="69.8481%" y="757" width="0.1781%" height="15" fill="rgb(208,174,22)" fg:x="6667" fg:w="17"/><text x="70.0981%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (17 samples, 0.18%)</title><rect x="69.8481%" y="741" width="0.1781%" height="15" fill="rgb(219,98,50)" fg:x="6667" fg:w="17"/><text x="70.0981%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (17 samples, 0.18%)</title><rect x="69.8481%" y="725" width="0.1781%" height="15" fill="rgb(243,138,3)" fg:x="6667" fg:w="17"/><text x="70.0981%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::buckets (1 samples, 0.01%)</title><rect x="70.0157%" y="709" width="0.0105%" height="15" fill="rgb(243,132,26)" fg:x="6683" fg:w="1"/><text x="70.2657%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId,bevy_wgpu::wgpu_resources::WgpuBindGroupInfo,ahash::random_state::RandomState&gt;&gt;&gt; (4 samples, 0.04%)</title><rect x="70.1205%" y="757" width="0.0419%" height="15" fill="rgb(250,201,8)" fg:x="6693" fg:w="4"/><text x="70.3705%" y="767.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (4 samples, 0.04%)</title><rect x="70.1205%" y="741" width="0.0419%" height="15" fill="rgb(213,91,26)" fg:x="6693" fg:w="4"/><text x="70.3705%" y="751.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (4 samples, 0.04%)</title><rect x="70.1205%" y="725" width="0.0419%" height="15" fill="rgb(229,117,1)" fg:x="6693" fg:w="4"/><text x="70.3705%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (4 samples, 0.04%)</title><rect x="70.1205%" y="709" width="0.0419%" height="15" fill="rgb(229,24,6)" fg:x="6693" fg:w="4"/><text x="70.3705%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_sub (4 samples, 0.04%)</title><rect x="70.1205%" y="693" width="0.0419%" height="15" fill="rgb(206,69,11)" fg:x="6693" fg:w="4"/><text x="70.3705%" y="703.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (10 samples, 0.10%)</title><rect x="70.1624%" y="757" width="0.1048%" height="15" fill="rgb(234,111,34)" fg:x="6697" fg:w="10"/><text x="70.4124%" y="767.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (10 samples, 0.10%)</title><rect x="70.1624%" y="741" width="0.1048%" height="15" fill="rgb(213,187,51)" fg:x="6697" fg:w="10"/><text x="70.4124%" y="751.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (10 samples, 0.10%)</title><rect x="70.1624%" y="725" width="0.1048%" height="15" fill="rgb(207,45,11)" fg:x="6697" fg:w="10"/><text x="70.4124%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (10 samples, 0.10%)</title><rect x="70.1624%" y="709" width="0.1048%" height="15" fill="rgb(225,151,47)" fg:x="6697" fg:w="10"/><text x="70.4124%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (10 samples, 0.10%)</title><rect x="70.1624%" y="693" width="0.1048%" height="15" fill="rgb(211,226,5)" fg:x="6697" fg:w="10"/><text x="70.4124%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="70.2776%" y="661" width="0.0105%" height="15" fill="rgb(214,83,52)" fg:x="6708" fg:w="1"/><text x="70.5276%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="70.2776%" y="677" width="0.0210%" height="15" fill="rgb(229,49,53)" fg:x="6708" fg:w="2"/><text x="70.5276%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="70.2881%" y="661" width="0.0105%" height="15" fill="rgb(246,8,28)" fg:x="6709" fg:w="1"/><text x="70.5381%" y="671.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="70.2881%" y="645" width="0.0105%" height="15" fill="rgb(207,28,41)" fg:x="6709" fg:w="1"/><text x="70.5381%" y="655.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.01%)</title><rect x="70.2881%" y="629" width="0.0105%" height="15" fill="rgb(254,22,25)" fg:x="6709" fg:w="1"/><text x="70.5381%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.02%)</title><rect x="70.2986%" y="629" width="0.0210%" height="15" fill="rgb(209,120,42)" fg:x="6710" fg:w="2"/><text x="70.5486%" y="639.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (21 samples, 0.22%)</title><rect x="70.1100%" y="789" width="0.2200%" height="15" fill="rgb(216,194,18)" fg:x="6692" fg:w="21"/><text x="70.3600%" y="799.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (20 samples, 0.21%)</title><rect x="70.1205%" y="773" width="0.2095%" height="15" fill="rgb(213,70,17)" fg:x="6693" fg:w="20"/><text x="70.3705%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (6 samples, 0.06%)</title><rect x="70.2672%" y="757" width="0.0629%" height="15" fill="rgb(228,66,19)" fg:x="6707" fg:w="6"/><text x="70.5172%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (6 samples, 0.06%)</title><rect x="70.2672%" y="741" width="0.0629%" height="15" fill="rgb(236,221,54)" fg:x="6707" fg:w="6"/><text x="70.5172%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (6 samples, 0.06%)</title><rect x="70.2672%" y="725" width="0.0629%" height="15" fill="rgb(207,175,15)" fg:x="6707" fg:w="6"/><text x="70.5172%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (6 samples, 0.06%)</title><rect x="70.2672%" y="709" width="0.0629%" height="15" fill="rgb(234,76,8)" fg:x="6707" fg:w="6"/><text x="70.5172%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (6 samples, 0.06%)</title><rect x="70.2672%" y="693" width="0.0629%" height="15" fill="rgb(243,106,0)" fg:x="6707" fg:w="6"/><text x="70.5172%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="70.2986%" y="677" width="0.0314%" height="15" fill="rgb(208,48,19)" fg:x="6710" fg:w="3"/><text x="70.5486%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="70.2986%" y="661" width="0.0314%" height="15" fill="rgb(251,50,29)" fg:x="6710" fg:w="3"/><text x="70.5486%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="70.2986%" y="645" width="0.0314%" height="15" fill="rgb(222,31,49)" fg:x="6710" fg:w="3"/><text x="70.5486%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="70.3195%" y="629" width="0.0105%" height="15" fill="rgb(232,33,18)" fg:x="6712" fg:w="1"/><text x="70.5695%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="70.3195%" y="613" width="0.0105%" height="15" fill="rgb(209,1,44)" fg:x="6712" fg:w="1"/><text x="70.5695%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="70.3195%" y="597" width="0.0105%" height="15" fill="rgb(211,7,1)" fg:x="6712" fg:w="1"/><text x="70.5695%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="70.3300%" y="693" width="0.0105%" height="15" fill="rgb(224,111,27)" fg:x="6713" fg:w="1"/><text x="70.5800%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="70.3300%" y="677" width="0.0105%" height="15" fill="rgb(252,195,39)" fg:x="6713" fg:w="1"/><text x="70.5800%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="70.3300%" y="661" width="0.0105%" height="15" fill="rgb(237,198,5)" fg:x="6713" fg:w="1"/><text x="70.5800%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.01%)</title><rect x="70.3300%" y="645" width="0.0105%" height="15" fill="rgb(232,148,1)" fg:x="6713" fg:w="1"/><text x="70.5800%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (21 samples, 0.22%)</title><rect x="70.3405%" y="693" width="0.2200%" height="15" fill="rgb(249,41,3)" fg:x="6714" fg:w="21"/><text x="70.5905%" y="703.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId as core::cmp::PartialEq&gt;::eq (21 samples, 0.22%)</title><rect x="70.3405%" y="677" width="0.2200%" height="15" fill="rgb(215,14,33)" fg:x="6714" fg:w="21"/><text x="70.5905%" y="687.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get_bind_group (28 samples, 0.29%)</title><rect x="70.3300%" y="789" width="0.2933%" height="15" fill="rgb(209,146,24)" fg:x="6713" fg:w="28"/><text x="70.5800%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (28 samples, 0.29%)</title><rect x="70.3300%" y="773" width="0.2933%" height="15" fill="rgb(219,51,47)" fg:x="6713" fg:w="28"/><text x="70.5800%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (28 samples, 0.29%)</title><rect x="70.3300%" y="757" width="0.2933%" height="15" fill="rgb(234,217,40)" fg:x="6713" fg:w="28"/><text x="70.5800%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (28 samples, 0.29%)</title><rect x="70.3300%" y="741" width="0.2933%" height="15" fill="rgb(228,34,26)" fg:x="6713" fg:w="28"/><text x="70.5800%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (28 samples, 0.29%)</title><rect x="70.3300%" y="725" width="0.2933%" height="15" fill="rgb(224,50,29)" fg:x="6713" fg:w="28"/><text x="70.5800%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (28 samples, 0.29%)</title><rect x="70.3300%" y="709" width="0.2933%" height="15" fill="rgb(205,79,51)" fg:x="6713" fg:w="28"/><text x="70.5800%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.06%)</title><rect x="70.5605%" y="693" width="0.0629%" height="15" fill="rgb(218,136,28)" fg:x="6735" fg:w="6"/><text x="70.8105%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.06%)</title><rect x="70.5605%" y="677" width="0.0629%" height="15" fill="rgb(220,150,10)" fg:x="6735" fg:w="6"/><text x="70.8105%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.06%)</title><rect x="70.5605%" y="661" width="0.0629%" height="15" fill="rgb(242,158,47)" fg:x="6735" fg:w="6"/><text x="70.8105%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (6 samples, 0.06%)</title><rect x="70.5605%" y="645" width="0.0629%" height="15" fill="rgb(209,68,0)" fg:x="6735" fg:w="6"/><text x="70.8105%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (6 samples, 0.06%)</title><rect x="70.5605%" y="629" width="0.0629%" height="15" fill="rgb(208,13,41)" fg:x="6735" fg:w="6"/><text x="70.8105%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (6 samples, 0.06%)</title><rect x="70.5605%" y="613" width="0.0629%" height="15" fill="rgb(226,201,7)" fg:x="6735" fg:w="6"/><text x="70.8105%" y="623.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="70.6757%" y="693" width="0.0210%" height="15" fill="rgb(236,103,26)" fg:x="6746" fg:w="2"/><text x="70.9257%" y="703.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="70.6757%" y="677" width="0.0210%" height="15" fill="rgb(243,162,8)" fg:x="6746" fg:w="2"/><text x="70.9257%" y="687.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="70.6757%" y="709" width="0.0314%" height="15" fill="rgb(237,225,11)" fg:x="6746" fg:w="3"/><text x="70.9257%" y="719.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="70.6967%" y="693" width="0.0105%" height="15" fill="rgb(247,186,32)" fg:x="6748" fg:w="1"/><text x="70.9467%" y="703.50"></text></g><g><title>&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="70.7072%" y="709" width="0.0314%" height="15" fill="rgb(215,26,28)" fg:x="6749" fg:w="3"/><text x="70.9572%" y="719.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (2 samples, 0.02%)</title><rect x="70.7177%" y="693" width="0.0210%" height="15" fill="rgb(208,121,6)" fg:x="6750" fg:w="2"/><text x="70.9677%" y="703.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (2 samples, 0.02%)</title><rect x="70.7177%" y="677" width="0.0210%" height="15" fill="rgb(225,91,3)" fg:x="6750" fg:w="2"/><text x="70.9677%" y="687.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.02%)</title><rect x="70.7177%" y="661" width="0.0210%" height="15" fill="rgb(246,119,36)" fg:x="6750" fg:w="2"/><text x="70.9677%" y="671.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="70.7177%" y="645" width="0.0210%" height="15" fill="rgb(254,173,2)" fg:x="6750" fg:w="2"/><text x="70.9677%" y="655.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="70.7281%" y="629" width="0.0105%" height="15" fill="rgb(209,87,54)" fg:x="6751" fg:w="1"/><text x="70.9781%" y="639.50"></text></g><g><title>hashbrown::map::make_hash (31 samples, 0.32%)</title><rect x="70.6757%" y="725" width="0.3248%" height="15" fill="rgb(223,216,20)" fg:x="6746" fg:w="31"/><text x="70.9257%" y="735.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (25 samples, 0.26%)</title><rect x="70.7386%" y="709" width="0.2619%" height="15" fill="rgb(220,31,8)" fg:x="6752" fg:w="25"/><text x="70.9886%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="71.0110%" y="677" width="0.0629%" height="15" fill="rgb(220,185,15)" fg:x="6778" fg:w="6"/><text x="71.2610%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="71.0320%" y="661" width="0.0419%" height="15" fill="rgb(247,190,50)" fg:x="6780" fg:w="4"/><text x="71.2820%" y="671.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (4 samples, 0.04%)</title><rect x="71.0320%" y="645" width="0.0419%" height="15" fill="rgb(239,173,47)" fg:x="6780" fg:w="4"/><text x="71.2820%" y="655.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="71.0739%" y="645" width="0.0105%" height="15" fill="rgb(218,190,42)" fg:x="6784" fg:w="1"/><text x="71.3239%" y="655.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.01%)</title><rect x="71.0739%" y="629" width="0.0105%" height="15" fill="rgb(251,207,16)" fg:x="6784" fg:w="1"/><text x="71.3239%" y="639.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="71.0739%" y="613" width="0.0105%" height="15" fill="rgb(222,199,47)" fg:x="6784" fg:w="1"/><text x="71.3239%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (8 samples, 0.08%)</title><rect x="71.0110%" y="693" width="0.0838%" height="15" fill="rgb(245,190,7)" fg:x="6778" fg:w="8"/><text x="71.2610%" y="703.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (2 samples, 0.02%)</title><rect x="71.0739%" y="677" width="0.0210%" height="15" fill="rgb(239,85,38)" fg:x="6784" fg:w="2"/><text x="71.3239%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (2 samples, 0.02%)</title><rect x="71.0739%" y="661" width="0.0210%" height="15" fill="rgb(229,69,51)" fg:x="6784" fg:w="2"/><text x="71.3239%" y="671.50"></text></g><g><title>core::ptr::non_null::NonNull&lt;T&gt;::new_unchecked (1 samples, 0.01%)</title><rect x="71.0843%" y="645" width="0.0105%" height="15" fill="rgb(231,104,51)" fg:x="6785" fg:w="1"/><text x="71.3343%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (13 samples, 0.14%)</title><rect x="71.0948%" y="693" width="0.1362%" height="15" fill="rgb(235,49,4)" fg:x="6786" fg:w="13"/><text x="71.3448%" y="703.50"></text></g><g><title>&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId as core::cmp::PartialEq&gt;::eq (13 samples, 0.14%)</title><rect x="71.0948%" y="677" width="0.1362%" height="15" fill="rgb(246,166,20)" fg:x="6786" fg:w="13"/><text x="71.3448%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (4 samples, 0.04%)</title><rect x="71.2415%" y="645" width="0.0419%" height="15" fill="rgb(230,119,37)" fg:x="6800" fg:w="4"/><text x="71.4915%" y="655.50"></text></g><g><title>hashbrown::raw::h2 (2 samples, 0.02%)</title><rect x="71.2834%" y="645" width="0.0210%" height="15" fill="rgb(234,77,34)" fg:x="6804" fg:w="2"/><text x="71.5334%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (22 samples, 0.23%)</title><rect x="71.3043%" y="645" width="0.2305%" height="15" fill="rgb(211,222,33)" fg:x="6806" fg:w="22"/><text x="71.5543%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (22 samples, 0.23%)</title><rect x="71.3043%" y="629" width="0.2305%" height="15" fill="rgb(226,45,42)" fg:x="6806" fg:w="22"/><text x="71.5543%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (22 samples, 0.23%)</title><rect x="71.3043%" y="613" width="0.2305%" height="15" fill="rgb(215,174,28)" fg:x="6806" fg:w="22"/><text x="71.5543%" y="623.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (84 samples, 0.88%)</title><rect x="70.6757%" y="773" width="0.8800%" height="15" fill="rgb(254,173,49)" fg:x="6746" fg:w="84"/><text x="70.9257%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (84 samples, 0.88%)</title><rect x="70.6757%" y="757" width="0.8800%" height="15" fill="rgb(229,191,6)" fg:x="6746" fg:w="84"/><text x="70.9257%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (84 samples, 0.88%)</title><rect x="70.6757%" y="741" width="0.8800%" height="15" fill="rgb(212,145,22)" fg:x="6746" fg:w="84"/><text x="70.9257%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (53 samples, 0.56%)</title><rect x="71.0005%" y="725" width="0.5553%" height="15" fill="rgb(226,6,51)" fg:x="6777" fg:w="53"/><text x="71.2505%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (53 samples, 0.56%)</title><rect x="71.0005%" y="709" width="0.5553%" height="15" fill="rgb(227,128,8)" fg:x="6777" fg:w="53"/><text x="71.2505%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (31 samples, 0.32%)</title><rect x="71.2310%" y="693" width="0.3248%" height="15" fill="rgb(205,24,10)" fg:x="6799" fg:w="31"/><text x="71.4810%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (31 samples, 0.32%)</title><rect x="71.2310%" y="677" width="0.3248%" height="15" fill="rgb(217,147,27)" fg:x="6799" fg:w="31"/><text x="71.4810%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (31 samples, 0.32%)</title><rect x="71.2310%" y="661" width="0.3248%" height="15" fill="rgb(250,82,42)" fg:x="6799" fg:w="31"/><text x="71.4810%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="71.5348%" y="645" width="0.0210%" height="15" fill="rgb(248,93,17)" fg:x="6828" fg:w="2"/><text x="71.7848%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.02%)</title><rect x="71.5348%" y="629" width="0.0210%" height="15" fill="rgb(254,212,40)" fg:x="6828" fg:w="2"/><text x="71.7848%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.02%)</title><rect x="71.5348%" y="613" width="0.0210%" height="15" fill="rgb(229,209,2)" fg:x="6828" fg:w="2"/><text x="71.7848%" y="623.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.02%)</title><rect x="71.5348%" y="597" width="0.0210%" height="15" fill="rgb(211,50,43)" fg:x="6828" fg:w="2"/><text x="71.7848%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="71.5558%" y="709" width="0.0105%" height="15" fill="rgb(245,196,29)" fg:x="6830" fg:w="1"/><text x="71.8058%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1 samples, 0.01%)</title><rect x="71.5558%" y="693" width="0.0105%" height="15" fill="rgb(216,132,13)" fg:x="6830" fg:w="1"/><text x="71.8058%" y="703.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (150 samples, 1.57%)</title><rect x="70.0262%" y="805" width="1.5715%" height="15" fill="rgb(251,108,21)" fg:x="6684" fg:w="150"/><text x="70.2762%" y="815.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group_status (93 samples, 0.97%)</title><rect x="70.6234%" y="789" width="0.9743%" height="15" fill="rgb(229,174,54)" fg:x="6741" fg:w="93"/><text x="70.8734%" y="799.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (4 samples, 0.04%)</title><rect x="71.5558%" y="773" width="0.0419%" height="15" fill="rgb(211,175,47)" fg:x="6830" fg:w="4"/><text x="71.8058%" y="783.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (4 samples, 0.04%)</title><rect x="71.5558%" y="757" width="0.0419%" height="15" fill="rgb(234,5,37)" fg:x="6830" fg:w="4"/><text x="71.8058%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.04%)</title><rect x="71.5558%" y="741" width="0.0419%" height="15" fill="rgb(244,150,43)" fg:x="6830" fg:w="4"/><text x="71.8058%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (4 samples, 0.04%)</title><rect x="71.5558%" y="725" width="0.0419%" height="15" fill="rgb(242,172,38)" fg:x="6830" fg:w="4"/><text x="71.8058%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (3 samples, 0.03%)</title><rect x="71.5663%" y="709" width="0.0314%" height="15" fill="rgb(205,27,8)" fg:x="6831" fg:w="3"/><text x="71.8163%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (3 samples, 0.03%)</title><rect x="71.5663%" y="693" width="0.0314%" height="15" fill="rgb(217,57,3)" fg:x="6831" fg:w="3"/><text x="71.8163%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="71.5767%" y="677" width="0.0210%" height="15" fill="rgb(242,21,38)" fg:x="6832" fg:w="2"/><text x="71.8267%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="71.5767%" y="661" width="0.0210%" height="15" fill="rgb(209,64,43)" fg:x="6832" fg:w="2"/><text x="71.8267%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="71.5767%" y="645" width="0.0210%" height="15" fill="rgb(222,2,46)" fg:x="6832" fg:w="2"/><text x="71.8267%" y="655.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="71.5767%" y="629" width="0.0210%" height="15" fill="rgb(218,19,44)" fg:x="6832" fg:w="2"/><text x="71.8267%" y="639.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="71.5767%" y="613" width="0.0210%" height="15" fill="rgb(240,203,42)" fg:x="6832" fg:w="2"/><text x="71.8267%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="71.5767%" y="597" width="0.0210%" height="15" fill="rgb(229,23,45)" fg:x="6832" fg:w="2"/><text x="71.8267%" y="607.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (307 samples, 3.22%)</title><rect x="68.3918%" y="837" width="3.2163%" height="15" fill="rgb(205,228,51)" fg:x="6528" fg:w="307"/><text x="68.6418%" y="847.50">bev..</text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (307 samples, 3.22%)</title><rect x="68.3918%" y="821" width="3.2163%" height="15" fill="rgb(239,36,20)" fg:x="6528" fg:w="307"/><text x="68.6418%" y="831.50">bev..</text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.01%)</title><rect x="71.5977%" y="805" width="0.0105%" height="15" fill="rgb(248,172,27)" fg:x="6834" fg:w="1"/><text x="71.8477%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="71.7548%" y="773" width="0.0105%" height="15" fill="rgb(244,55,32)" fg:x="6849" fg:w="1"/><text x="72.0048%" y="783.50"></text></g><g><title>bevy_render::draw::Draw::set_pipeline (15 samples, 0.16%)</title><rect x="71.6501%" y="821" width="0.1572%" height="15" fill="rgb(215,97,16)" fg:x="6839" fg:w="15"/><text x="71.9001%" y="831.50"></text></g><g><title>bevy_render::draw::Draw::render_command (15 samples, 0.16%)</title><rect x="71.6501%" y="805" width="0.1572%" height="15" fill="rgb(224,80,29)" fg:x="6839" fg:w="15"/><text x="71.9001%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (6 samples, 0.06%)</title><rect x="71.7444%" y="789" width="0.0629%" height="15" fill="rgb(216,93,47)" fg:x="6848" fg:w="6"/><text x="71.9944%" y="799.50"></text></g><g><title>core::ptr::write (4 samples, 0.04%)</title><rect x="71.7653%" y="773" width="0.0419%" height="15" fill="rgb(238,159,10)" fg:x="6850" fg:w="4"/><text x="72.0153%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (2 samples, 0.02%)</title><rect x="71.9120%" y="677" width="0.0210%" height="15" fill="rgb(223,98,29)" fg:x="6864" fg:w="2"/><text x="72.1620%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (2 samples, 0.02%)</title><rect x="71.9120%" y="661" width="0.0210%" height="15" fill="rgb(210,176,23)" fg:x="6864" fg:w="2"/><text x="72.1620%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="71.9120%" y="645" width="0.0210%" height="15" fill="rgb(242,162,27)" fg:x="6864" fg:w="2"/><text x="72.1620%" y="655.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="71.9120%" y="629" width="0.0210%" height="15" fill="rgb(245,109,32)" fg:x="6864" fg:w="2"/><text x="72.1620%" y="639.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="71.9120%" y="613" width="0.0210%" height="15" fill="rgb(248,87,8)" fg:x="6864" fg:w="2"/><text x="72.1620%" y="623.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="71.9120%" y="597" width="0.0210%" height="15" fill="rgb(250,160,50)" fg:x="6864" fg:w="2"/><text x="72.1620%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.9225%" y="581" width="0.0105%" height="15" fill="rgb(246,165,25)" fg:x="6865" fg:w="1"/><text x="72.1725%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="71.9225%" y="565" width="0.0105%" height="15" fill="rgb(249,219,3)" fg:x="6865" fg:w="1"/><text x="72.1725%" y="575.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (1 samples, 0.01%)</title><rect x="71.9434%" y="581" width="0.0105%" height="15" fill="rgb(226,66,5)" fg:x="6867" fg:w="1"/><text x="72.1934%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (1 samples, 0.01%)</title><rect x="71.9434%" y="565" width="0.0105%" height="15" fill="rgb(250,220,43)" fg:x="6867" fg:w="1"/><text x="72.1934%" y="575.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::ShaderSpecialization as core::cmp::PartialEq&gt;::eq (15 samples, 0.16%)</title><rect x="71.8072%" y="709" width="0.1572%" height="15" fill="rgb(225,111,31)" fg:x="6854" fg:w="15"/><text x="72.0572%" y="719.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (15 samples, 0.16%)</title><rect x="71.8072%" y="693" width="0.1572%" height="15" fill="rgb(248,106,18)" fg:x="6854" fg:w="15"/><text x="72.0572%" y="703.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (3 samples, 0.03%)</title><rect x="71.9329%" y="677" width="0.0314%" height="15" fill="rgb(220,226,45)" fg:x="6866" fg:w="3"/><text x="72.1829%" y="687.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (3 samples, 0.03%)</title><rect x="71.9329%" y="661" width="0.0314%" height="15" fill="rgb(208,58,53)" fg:x="6866" fg:w="3"/><text x="72.1829%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (3 samples, 0.03%)</title><rect x="71.9329%" y="645" width="0.0314%" height="15" fill="rgb(209,133,1)" fg:x="6866" fg:w="3"/><text x="72.1829%" y="655.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (3 samples, 0.03%)</title><rect x="71.9329%" y="629" width="0.0314%" height="15" fill="rgb(228,216,27)" fg:x="6866" fg:w="3"/><text x="72.1829%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (3 samples, 0.03%)</title><rect x="71.9329%" y="613" width="0.0314%" height="15" fill="rgb(238,155,2)" fg:x="6866" fg:w="3"/><text x="72.1829%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="71.9434%" y="597" width="0.0210%" height="15" fill="rgb(244,99,37)" fg:x="6867" fg:w="2"/><text x="72.1934%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_full (1 samples, 0.01%)</title><rect x="71.9539%" y="581" width="0.0105%" height="15" fill="rgb(254,32,3)" fg:x="6868" fg:w="1"/><text x="72.2039%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty_or_deleted (1 samples, 0.01%)</title><rect x="71.9539%" y="565" width="0.0105%" height="15" fill="rgb(234,46,50)" fg:x="6868" fg:w="1"/><text x="72.2039%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="71.9539%" y="549" width="0.0105%" height="15" fill="rgb(232,118,51)" fg:x="6868" fg:w="1"/><text x="72.2039%" y="559.50"></text></g><g><title>&lt;bevy_render::pipeline::state_descriptors::PrimitiveTopology as core::cmp::PartialEq&gt;::eq (4 samples, 0.04%)</title><rect x="71.9644%" y="709" width="0.0419%" height="15" fill="rgb(207,24,32)" fg:x="6869" fg:w="4"/><text x="72.2144%" y="719.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (1 samples, 0.01%)</title><rect x="72.0063%" y="693" width="0.0105%" height="15" fill="rgb(208,107,43)" fg:x="6873" fg:w="1"/><text x="72.2563%" y="703.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (1 samples, 0.01%)</title><rect x="72.0063%" y="677" width="0.0105%" height="15" fill="rgb(231,28,9)" fg:x="6873" fg:w="1"/><text x="72.2563%" y="687.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1 samples, 0.01%)</title><rect x="72.0063%" y="661" width="0.0105%" height="15" fill="rgb(241,204,15)" fg:x="6873" fg:w="1"/><text x="72.2563%" y="671.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (1 samples, 0.01%)</title><rect x="72.0063%" y="645" width="0.0105%" height="15" fill="rgb(214,54,15)" fg:x="6873" fg:w="1"/><text x="72.2563%" y="655.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (1 samples, 0.01%)</title><rect x="72.0063%" y="629" width="0.0105%" height="15" fill="rgb(230,12,28)" fg:x="6873" fg:w="1"/><text x="72.2563%" y="639.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="72.0063%" y="613" width="0.0105%" height="15" fill="rgb(221,171,5)" fg:x="6873" fg:w="1"/><text x="72.2563%" y="623.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (4 samples, 0.04%)</title><rect x="72.0377%" y="533" width="0.0419%" height="15" fill="rgb(207,72,25)" fg:x="6876" fg:w="4"/><text x="72.2877%" y="543.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (9 samples, 0.09%)</title><rect x="72.0377%" y="549" width="0.0943%" height="15" fill="rgb(249,79,37)" fg:x="6876" fg:w="9"/><text x="72.2877%" y="559.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (5 samples, 0.05%)</title><rect x="72.0796%" y="533" width="0.0524%" height="15" fill="rgb(209,98,49)" fg:x="6880" fg:w="5"/><text x="72.3296%" y="543.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (5 samples, 0.05%)</title><rect x="72.0796%" y="517" width="0.0524%" height="15" fill="rgb(221,62,13)" fg:x="6880" fg:w="5"/><text x="72.3296%" y="527.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (5 samples, 0.05%)</title><rect x="72.0796%" y="501" width="0.0524%" height="15" fill="rgb(223,39,6)" fg:x="6880" fg:w="5"/><text x="72.3296%" y="511.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (5 samples, 0.05%)</title><rect x="72.0796%" y="485" width="0.0524%" height="15" fill="rgb(246,163,20)" fg:x="6880" fg:w="5"/><text x="72.3296%" y="495.50"></text></g><g><title>__memcmp_avx2_movbe (3 samples, 0.03%)</title><rect x="72.1006%" y="469" width="0.0314%" height="15" fill="rgb(211,111,29)" fg:x="6882" fg:w="3"/><text x="72.3506%" y="479.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout as core::cmp::PartialEq&gt;::eq (14 samples, 0.15%)</title><rect x="72.0063%" y="709" width="0.1467%" height="15" fill="rgb(243,118,5)" fg:x="6873" fg:w="14"/><text x="72.2563%" y="719.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (13 samples, 0.14%)</title><rect x="72.0168%" y="693" width="0.1362%" height="15" fill="rgb(240,144,52)" fg:x="6874" fg:w="13"/><text x="72.2668%" y="703.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (13 samples, 0.14%)</title><rect x="72.0168%" y="677" width="0.1362%" height="15" fill="rgb(244,158,36)" fg:x="6874" fg:w="13"/><text x="72.2668%" y="687.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (13 samples, 0.14%)</title><rect x="72.0168%" y="661" width="0.1362%" height="15" fill="rgb(241,109,37)" fg:x="6874" fg:w="13"/><text x="72.2668%" y="671.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (13 samples, 0.14%)</title><rect x="72.0168%" y="645" width="0.1362%" height="15" fill="rgb(213,95,32)" fg:x="6874" fg:w="13"/><text x="72.2668%" y="655.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (13 samples, 0.14%)</title><rect x="72.0168%" y="629" width="0.1362%" height="15" fill="rgb(252,193,9)" fg:x="6874" fg:w="13"/><text x="72.2668%" y="639.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (13 samples, 0.14%)</title><rect x="72.0168%" y="613" width="0.1362%" height="15" fill="rgb(225,213,21)" fg:x="6874" fg:w="13"/><text x="72.2668%" y="623.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (13 samples, 0.14%)</title><rect x="72.0168%" y="597" width="0.1362%" height="15" fill="rgb(220,172,46)" fg:x="6874" fg:w="13"/><text x="72.2668%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (13 samples, 0.14%)</title><rect x="72.0168%" y="581" width="0.1362%" height="15" fill="rgb(235,75,41)" fg:x="6874" fg:w="13"/><text x="72.2668%" y="591.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute as core::cmp::PartialEq&gt;::eq (13 samples, 0.14%)</title><rect x="72.0168%" y="565" width="0.1362%" height="15" fill="rgb(213,86,9)" fg:x="6874" fg:w="13"/><text x="72.2668%" y="575.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="72.1320%" y="549" width="0.0210%" height="15" fill="rgb(238,127,51)" fg:x="6885" fg:w="2"/><text x="72.3820%" y="559.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="72.2472%" y="661" width="0.0314%" height="15" fill="rgb(215,2,54)" fg:x="6896" fg:w="3"/><text x="72.4972%" y="671.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="72.2472%" y="645" width="0.0314%" height="15" fill="rgb(245,80,6)" fg:x="6896" fg:w="3"/><text x="72.4972%" y="655.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="72.2472%" y="629" width="0.0314%" height="15" fill="rgb(233,106,42)" fg:x="6896" fg:w="3"/><text x="72.4972%" y="639.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="72.2472%" y="613" width="0.0314%" height="15" fill="rgb(244,86,38)" fg:x="6896" fg:w="3"/><text x="72.4972%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="72.2682%" y="597" width="0.0105%" height="15" fill="rgb(242,167,7)" fg:x="6898" fg:w="1"/><text x="72.5182%" y="607.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="72.2682%" y="581" width="0.0105%" height="15" fill="rgb(218,216,3)" fg:x="6898" fg:w="1"/><text x="72.5182%" y="591.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="72.2682%" y="565" width="0.0105%" height="15" fill="rgb(206,136,36)" fg:x="6898" fg:w="1"/><text x="72.5182%" y="575.50"></text></g><g><title>ahash::operations::folded_multiply (4 samples, 0.04%)</title><rect x="72.2787%" y="533" width="0.0419%" height="15" fill="rgb(206,206,15)" fg:x="6899" fg:w="4"/><text x="72.5287%" y="543.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="72.3101%" y="517" width="0.0105%" height="15" fill="rgb(207,163,34)" fg:x="6902" fg:w="1"/><text x="72.5601%" y="527.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (5 samples, 0.05%)</title><rect x="72.2787%" y="549" width="0.0524%" height="15" fill="rgb(240,127,22)" fg:x="6899" fg:w="5"/><text x="72.5287%" y="559.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="72.3206%" y="533" width="0.0105%" height="15" fill="rgb(227,49,5)" fg:x="6903" fg:w="1"/><text x="72.5706%" y="543.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (3 samples, 0.03%)</title><rect x="72.3311%" y="549" width="0.0314%" height="15" fill="rgb(231,8,6)" fg:x="6904" fg:w="3"/><text x="72.5811%" y="559.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (3 samples, 0.03%)</title><rect x="72.3311%" y="533" width="0.0314%" height="15" fill="rgb(223,21,24)" fg:x="6904" fg:w="3"/><text x="72.5811%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="72.3625%" y="517" width="0.0629%" height="15" fill="rgb(244,44,52)" fg:x="6907" fg:w="6"/><text x="72.6125%" y="527.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (6 samples, 0.06%)</title><rect x="72.3625%" y="501" width="0.0629%" height="15" fill="rgb(207,73,28)" fg:x="6907" fg:w="6"/><text x="72.6125%" y="511.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.17%)</title><rect x="72.2787%" y="565" width="0.1676%" height="15" fill="rgb(234,215,10)" fg:x="6899" fg:w="16"/><text x="72.5287%" y="575.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (8 samples, 0.08%)</title><rect x="72.3625%" y="549" width="0.0838%" height="15" fill="rgb(236,85,3)" fg:x="6907" fg:w="8"/><text x="72.6125%" y="559.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (8 samples, 0.08%)</title><rect x="72.3625%" y="533" width="0.0838%" height="15" fill="rgb(236,102,39)" fg:x="6907" fg:w="8"/><text x="72.6125%" y="543.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (2 samples, 0.02%)</title><rect x="72.4254%" y="517" width="0.0210%" height="15" fill="rgb(243,50,8)" fg:x="6913" fg:w="2"/><text x="72.6754%" y="527.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.02%)</title><rect x="72.4254%" y="501" width="0.0210%" height="15" fill="rgb(207,111,4)" fg:x="6913" fg:w="2"/><text x="72.6754%" y="511.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="72.4254%" y="485" width="0.0210%" height="15" fill="rgb(230,52,42)" fg:x="6913" fg:w="2"/><text x="72.6754%" y="495.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="72.4358%" y="469" width="0.0105%" height="15" fill="rgb(252,178,50)" fg:x="6914" fg:w="1"/><text x="72.6858%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (3 samples, 0.03%)</title><rect x="72.4463%" y="549" width="0.0314%" height="15" fill="rgb(234,46,35)" fg:x="6915" fg:w="3"/><text x="72.6963%" y="559.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="72.5196%" y="485" width="0.0105%" height="15" fill="rgb(228,69,37)" fg:x="6922" fg:w="1"/><text x="72.7696%" y="495.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="72.5196%" y="533" width="0.0210%" height="15" fill="rgb(221,21,11)" fg:x="6922" fg:w="2"/><text x="72.7696%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="72.5196%" y="517" width="0.0210%" height="15" fill="rgb(223,56,9)" fg:x="6922" fg:w="2"/><text x="72.7696%" y="527.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="72.5196%" y="501" width="0.0210%" height="15" fill="rgb(234,30,19)" fg:x="6922" fg:w="2"/><text x="72.7696%" y="511.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="72.5301%" y="485" width="0.0105%" height="15" fill="rgb(211,64,54)" fg:x="6923" fg:w="1"/><text x="72.7801%" y="495.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (19 samples, 0.20%)</title><rect x="72.5406%" y="533" width="0.1991%" height="15" fill="rgb(250,189,5)" fg:x="6924" fg:w="19"/><text x="72.7906%" y="543.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (19 samples, 0.20%)</title><rect x="72.5406%" y="517" width="0.1991%" height="15" fill="rgb(214,180,13)" fg:x="6924" fg:w="19"/><text x="72.7906%" y="527.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (19 samples, 0.20%)</title><rect x="72.5406%" y="501" width="0.1991%" height="15" fill="rgb(238,40,40)" fg:x="6924" fg:w="19"/><text x="72.7906%" y="511.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (19 samples, 0.20%)</title><rect x="72.5406%" y="485" width="0.1991%" height="15" fill="rgb(214,101,38)" fg:x="6924" fg:w="19"/><text x="72.7906%" y="495.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (19 samples, 0.20%)</title><rect x="72.5406%" y="469" width="0.1991%" height="15" fill="rgb(242,65,53)" fg:x="6924" fg:w="19"/><text x="72.7906%" y="479.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (19 samples, 0.20%)</title><rect x="72.5406%" y="453" width="0.1991%" height="15" fill="rgb(230,22,45)" fg:x="6924" fg:w="19"/><text x="72.7906%" y="463.50"></text></g><g><title>__memcmp_avx2_movbe (10 samples, 0.10%)</title><rect x="72.6349%" y="437" width="0.1048%" height="15" fill="rgb(223,77,1)" fg:x="6933" fg:w="10"/><text x="72.8849%" y="447.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (12 samples, 0.13%)</title><rect x="72.7397%" y="485" width="0.1257%" height="15" fill="rgb(227,33,37)" fg:x="6943" fg:w="12"/><text x="72.9897%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (12 samples, 0.13%)</title><rect x="72.7397%" y="469" width="0.1257%" height="15" fill="rgb(224,148,39)" fg:x="6943" fg:w="12"/><text x="72.9897%" y="479.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (12 samples, 0.13%)</title><rect x="72.7397%" y="453" width="0.1257%" height="15" fill="rgb(232,212,39)" fg:x="6943" fg:w="12"/><text x="72.9897%" y="463.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (64 samples, 0.67%)</title><rect x="72.2368%" y="693" width="0.6705%" height="15" fill="rgb(251,172,7)" fg:x="6895" fg:w="64"/><text x="72.4868%" y="703.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (64 samples, 0.67%)</title><rect x="72.2368%" y="677" width="0.6705%" height="15" fill="rgb(219,39,9)" fg:x="6895" fg:w="64"/><text x="72.4868%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (60 samples, 0.63%)</title><rect x="72.2787%" y="661" width="0.6286%" height="15" fill="rgb(228,118,14)" fg:x="6899" fg:w="60"/><text x="72.5287%" y="671.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (60 samples, 0.63%)</title><rect x="72.2787%" y="645" width="0.6286%" height="15" fill="rgb(207,140,10)" fg:x="6899" fg:w="60"/><text x="72.5287%" y="655.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (60 samples, 0.63%)</title><rect x="72.2787%" y="629" width="0.6286%" height="15" fill="rgb(227,111,53)" fg:x="6899" fg:w="60"/><text x="72.5287%" y="639.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (60 samples, 0.63%)</title><rect x="72.2787%" y="613" width="0.6286%" height="15" fill="rgb(216,165,16)" fg:x="6899" fg:w="60"/><text x="72.5287%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (60 samples, 0.63%)</title><rect x="72.2787%" y="597" width="0.6286%" height="15" fill="rgb(226,111,18)" fg:x="6899" fg:w="60"/><text x="72.5287%" y="607.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (60 samples, 0.63%)</title><rect x="72.2787%" y="581" width="0.6286%" height="15" fill="rgb(251,27,17)" fg:x="6899" fg:w="60"/><text x="72.5287%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (44 samples, 0.46%)</title><rect x="72.4463%" y="565" width="0.4610%" height="15" fill="rgb(254,69,9)" fg:x="6915" fg:w="44"/><text x="72.6963%" y="575.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (41 samples, 0.43%)</title><rect x="72.4777%" y="549" width="0.4295%" height="15" fill="rgb(234,140,37)" fg:x="6918" fg:w="41"/><text x="72.7277%" y="559.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (16 samples, 0.17%)</title><rect x="72.7397%" y="533" width="0.1676%" height="15" fill="rgb(220,93,8)" fg:x="6943" fg:w="16"/><text x="72.9897%" y="543.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (16 samples, 0.17%)</title><rect x="72.7397%" y="517" width="0.1676%" height="15" fill="rgb(236,113,3)" fg:x="6943" fg:w="16"/><text x="72.9897%" y="527.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (16 samples, 0.17%)</title><rect x="72.7397%" y="501" width="0.1676%" height="15" fill="rgb(234,108,23)" fg:x="6943" fg:w="16"/><text x="72.9897%" y="511.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (4 samples, 0.04%)</title><rect x="72.8654%" y="485" width="0.0419%" height="15" fill="rgb(205,114,34)" fg:x="6955" fg:w="4"/><text x="73.1154%" y="495.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (4 samples, 0.04%)</title><rect x="72.8654%" y="469" width="0.0419%" height="15" fill="rgb(236,200,45)" fg:x="6955" fg:w="4"/><text x="73.1154%" y="479.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (4 samples, 0.04%)</title><rect x="72.8654%" y="453" width="0.0419%" height="15" fill="rgb(227,194,29)" fg:x="6955" fg:w="4"/><text x="73.1154%" y="463.50"></text></g><g><title>core::core_arch::simd::i8x16::new (4 samples, 0.04%)</title><rect x="72.8654%" y="437" width="0.0419%" height="15" fill="rgb(250,76,42)" fg:x="6955" fg:w="4"/><text x="73.1154%" y="447.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (107 samples, 1.12%)</title><rect x="71.8072%" y="805" width="1.1210%" height="15" fill="rgb(208,128,8)" fg:x="6854" fg:w="107"/><text x="72.0572%" y="815.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}} (107 samples, 1.12%)</title><rect x="71.8072%" y="789" width="1.1210%" height="15" fill="rgb(229,209,35)" fg:x="6854" fg:w="107"/><text x="72.0572%" y="799.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (107 samples, 1.12%)</title><rect x="71.8072%" y="773" width="1.1210%" height="15" fill="rgb(215,39,53)" fg:x="6854" fg:w="107"/><text x="72.0572%" y="783.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}}::{{closure}} (107 samples, 1.12%)</title><rect x="71.8072%" y="757" width="1.1210%" height="15" fill="rgb(219,123,41)" fg:x="6854" fg:w="107"/><text x="72.0572%" y="767.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (107 samples, 1.12%)</title><rect x="71.8072%" y="741" width="1.1210%" height="15" fill="rgb(212,158,18)" fg:x="6854" fg:w="107"/><text x="72.0572%" y="751.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (107 samples, 1.12%)</title><rect x="71.8072%" y="725" width="1.1210%" height="15" fill="rgb(234,196,53)" fg:x="6854" fg:w="107"/><text x="72.0572%" y="735.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (74 samples, 0.78%)</title><rect x="72.1530%" y="709" width="0.7753%" height="15" fill="rgb(210,139,12)" fg:x="6887" fg:w="74"/><text x="72.4030%" y="719.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (2 samples, 0.02%)</title><rect x="72.9073%" y="693" width="0.0210%" height="15" fill="rgb(220,116,54)" fg:x="6959" fg:w="2"/><text x="73.1573%" y="703.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (2 samples, 0.02%)</title><rect x="72.9073%" y="677" width="0.0210%" height="15" fill="rgb(247,103,28)" fg:x="6959" fg:w="2"/><text x="73.1573%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (2 samples, 0.02%)</title><rect x="72.9073%" y="661" width="0.0210%" height="15" fill="rgb(253,156,45)" fg:x="6959" fg:w="2"/><text x="73.1573%" y="671.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (2 samples, 0.02%)</title><rect x="72.9073%" y="645" width="0.0210%" height="15" fill="rgb(237,157,52)" fg:x="6959" fg:w="2"/><text x="73.1573%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (2 samples, 0.02%)</title><rect x="72.9073%" y="629" width="0.0210%" height="15" fill="rgb(253,112,16)" fg:x="6959" fg:w="2"/><text x="73.1573%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (2 samples, 0.02%)</title><rect x="72.9073%" y="613" width="0.0210%" height="15" fill="rgb(234,70,18)" fg:x="6959" fg:w="2"/><text x="73.1573%" y="623.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (2 samples, 0.02%)</title><rect x="72.9073%" y="597" width="0.0210%" height="15" fill="rgb(247,138,19)" fg:x="6959" fg:w="2"/><text x="73.1573%" y="607.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (2 samples, 0.02%)</title><rect x="72.9073%" y="581" width="0.0210%" height="15" fill="rgb(207,171,1)" fg:x="6959" fg:w="2"/><text x="73.1573%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="72.9282%" y="741" width="0.0105%" height="15" fill="rgb(239,213,3)" fg:x="6961" fg:w="1"/><text x="73.1782%" y="751.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="72.9282%" y="725" width="0.0105%" height="15" fill="rgb(226,112,4)" fg:x="6961" fg:w="1"/><text x="73.1782%" y="735.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="72.9282%" y="709" width="0.0105%" height="15" fill="rgb(252,170,12)" fg:x="6961" fg:w="1"/><text x="73.1782%" y="719.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="73.0435%" y="613" width="0.0210%" height="15" fill="rgb(241,106,13)" fg:x="6972" fg:w="2"/><text x="73.2935%" y="623.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (2 samples, 0.02%)</title><rect x="73.0435%" y="597" width="0.0210%" height="15" fill="rgb(225,73,23)" fg:x="6972" fg:w="2"/><text x="73.2935%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (14 samples, 0.15%)</title><rect x="72.9282%" y="757" width="0.1467%" height="15" fill="rgb(251,227,29)" fg:x="6961" fg:w="14"/><text x="73.1782%" y="767.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (13 samples, 0.14%)</title><rect x="72.9387%" y="741" width="0.1362%" height="15" fill="rgb(237,144,13)" fg:x="6962" fg:w="13"/><text x="73.1887%" y="751.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (13 samples, 0.14%)</title><rect x="72.9387%" y="725" width="0.1362%" height="15" fill="rgb(232,106,46)" fg:x="6962" fg:w="13"/><text x="73.1887%" y="735.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="73.0435%" y="709" width="0.0314%" height="15" fill="rgb(245,154,53)" fg:x="6972" fg:w="3"/><text x="73.2935%" y="719.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (3 samples, 0.03%)</title><rect x="73.0435%" y="693" width="0.0314%" height="15" fill="rgb(212,119,47)" fg:x="6972" fg:w="3"/><text x="73.2935%" y="703.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (3 samples, 0.03%)</title><rect x="73.0435%" y="677" width="0.0314%" height="15" fill="rgb(253,135,25)" fg:x="6972" fg:w="3"/><text x="73.2935%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (3 samples, 0.03%)</title><rect x="73.0435%" y="661" width="0.0314%" height="15" fill="rgb(253,208,39)" fg:x="6972" fg:w="3"/><text x="73.2935%" y="671.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="73.0435%" y="645" width="0.0314%" height="15" fill="rgb(226,64,12)" fg:x="6972" fg:w="3"/><text x="73.2935%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (3 samples, 0.03%)</title><rect x="73.0435%" y="629" width="0.0314%" height="15" fill="rgb(214,162,37)" fg:x="6972" fg:w="3"/><text x="73.2935%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="73.0644%" y="613" width="0.0105%" height="15" fill="rgb(250,104,5)" fg:x="6974" fg:w="1"/><text x="73.3144%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="73.1063%" y="725" width="0.0210%" height="15" fill="rgb(220,202,50)" fg:x="6978" fg:w="2"/><text x="73.3563%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="73.1063%" y="709" width="0.0210%" height="15" fill="rgb(248,67,38)" fg:x="6978" fg:w="2"/><text x="73.3563%" y="719.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="73.1168%" y="693" width="0.0105%" height="15" fill="rgb(242,94,35)" fg:x="6979" fg:w="1"/><text x="73.3668%" y="703.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="73.1168%" y="677" width="0.0105%" height="15" fill="rgb(209,78,37)" fg:x="6979" fg:w="1"/><text x="73.3668%" y="687.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (129 samples, 1.35%)</title><rect x="71.8072%" y="821" width="1.3515%" height="15" fill="rgb(230,126,47)" fg:x="6854" fg:w="129"/><text x="72.0572%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (22 samples, 0.23%)</title><rect x="72.9282%" y="805" width="0.2305%" height="15" fill="rgb(222,110,35)" fg:x="6961" fg:w="22"/><text x="73.1782%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (22 samples, 0.23%)</title><rect x="72.9282%" y="789" width="0.2305%" height="15" fill="rgb(233,154,20)" fg:x="6961" fg:w="22"/><text x="73.1782%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.23%)</title><rect x="72.9282%" y="773" width="0.2305%" height="15" fill="rgb(223,53,50)" fg:x="6961" fg:w="22"/><text x="73.1782%" y="783.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (8 samples, 0.08%)</title><rect x="73.0749%" y="757" width="0.0838%" height="15" fill="rgb(251,27,26)" fg:x="6975" fg:w="8"/><text x="73.3249%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (8 samples, 0.08%)</title><rect x="73.0749%" y="741" width="0.0838%" height="15" fill="rgb(223,189,16)" fg:x="6975" fg:w="8"/><text x="73.3249%" y="751.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (3 samples, 0.03%)</title><rect x="73.1273%" y="725" width="0.0314%" height="15" fill="rgb(207,5,54)" fg:x="6980" fg:w="3"/><text x="73.3773%" y="735.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="73.1273%" y="709" width="0.0314%" height="15" fill="rgb(254,124,50)" fg:x="6980" fg:w="3"/><text x="73.3773%" y="719.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="73.1273%" y="693" width="0.0314%" height="15" fill="rgb(253,193,24)" fg:x="6980" fg:w="3"/><text x="73.3773%" y="703.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="73.1482%" y="677" width="0.0105%" height="15" fill="rgb(235,170,24)" fg:x="6982" fg:w="1"/><text x="73.3982%" y="687.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1 samples, 0.01%)</title><rect x="73.1482%" y="661" width="0.0105%" height="15" fill="rgb(222,212,52)" fg:x="6982" fg:w="1"/><text x="73.3982%" y="671.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.01%)</title><rect x="73.1482%" y="645" width="0.0105%" height="15" fill="rgb(223,17,45)" fg:x="6982" fg:w="1"/><text x="73.3982%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; (1 samples, 0.01%)</title><rect x="73.1587%" y="821" width="0.0105%" height="15" fill="rgb(227,103,26)" fg:x="6983" fg:w="1"/><text x="73.4087%" y="831.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.1587%" y="805" width="0.0105%" height="15" fill="rgb(251,151,25)" fg:x="6983" fg:w="1"/><text x="73.4087%" y="815.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (150 samples, 1.57%)</title><rect x="71.6082%" y="837" width="1.5715%" height="15" fill="rgb(248,144,29)" fg:x="6835" fg:w="150"/><text x="71.8582%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;bevy_asset::handle::Handle&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="73.1692%" y="821" width="0.0105%" height="15" fill="rgb(245,97,16)" fg:x="6984" fg:w="1"/><text x="73.4192%" y="831.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="73.2006%" y="821" width="0.0105%" height="15" fill="rgb(220,200,29)" fg:x="6987" fg:w="1"/><text x="73.4506%" y="831.50"></text></g><g><title>bevy_render::draw::Draw::set_index_buffer (15 samples, 0.16%)</title><rect x="73.2111%" y="821" width="0.1572%" height="15" fill="rgb(206,38,29)" fg:x="6988" fg:w="15"/><text x="73.4611%" y="831.50"></text></g><g><title>bevy_render::draw::Draw::render_command (15 samples, 0.16%)</title><rect x="73.2111%" y="805" width="0.1572%" height="15" fill="rgb(245,19,52)" fg:x="6988" fg:w="15"/><text x="73.4611%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (15 samples, 0.16%)</title><rect x="73.2111%" y="789" width="0.1572%" height="15" fill="rgb(205,67,43)" fg:x="6988" fg:w="15"/><text x="73.4611%" y="799.50"></text></g><g><title>core::ptr::write (15 samples, 0.16%)</title><rect x="73.2111%" y="773" width="0.1572%" height="15" fill="rgb(217,128,23)" fg:x="6988" fg:w="15"/><text x="73.4611%" y="783.50"></text></g><g><title>bevy_render::draw::Draw::set_vertex_buffer (13 samples, 0.14%)</title><rect x="73.3683%" y="821" width="0.1362%" height="15" fill="rgb(210,109,28)" fg:x="7003" fg:w="13"/><text x="73.6183%" y="831.50"></text></g><g><title>bevy_render::draw::Draw::render_command (13 samples, 0.14%)</title><rect x="73.3683%" y="805" width="0.1362%" height="15" fill="rgb(233,181,7)" fg:x="7003" fg:w="13"/><text x="73.6183%" y="815.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13 samples, 0.14%)</title><rect x="73.3683%" y="789" width="0.1362%" height="15" fill="rgb(244,11,22)" fg:x="7003" fg:w="13"/><text x="73.6183%" y="799.50"></text></g><g><title>core::ptr::write (13 samples, 0.14%)</title><rect x="73.3683%" y="773" width="0.1362%" height="15" fill="rgb(205,124,54)" fg:x="7003" fg:w="13"/><text x="73.6183%" y="783.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (576 samples, 6.03%)</title><rect x="67.4804%" y="853" width="6.0346%" height="15" fill="rgb(218,21,27)" fg:x="6441" fg:w="576"/><text x="67.7304%" y="863.50">bevy_ren..</text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (32 samples, 0.34%)</title><rect x="73.1797%" y="837" width="0.3353%" height="15" fill="rgb(224,153,33)" fg:x="6985" fg:w="32"/><text x="73.4297%" y="847.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (1 samples, 0.01%)</title><rect x="73.5045%" y="821" width="0.0105%" height="15" fill="rgb(240,219,28)" fg:x="7016" fg:w="1"/><text x="73.7545%" y="831.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (579 samples, 6.07%)</title><rect x="67.4594%" y="901" width="6.0660%" height="15" fill="rgb(214,80,29)" fg:x="6439" fg:w="579"/><text x="67.7094%" y="911.50">&lt;Func as..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (579 samples, 6.07%)</title><rect x="67.4594%" y="885" width="6.0660%" height="15" fill="rgb(247,148,44)" fg:x="6439" fg:w="579"/><text x="67.7094%" y="895.50">core::op..</text></g><g><title>core::ops::function::Fn::call (579 samples, 6.07%)</title><rect x="67.4594%" y="869" width="6.0660%" height="15" fill="rgb(243,110,30)" fg:x="6439" fg:w="579"/><text x="67.7094%" y="879.50">core::op..</text></g><g><title>bevy_ui::focus::ui_focus_system (1 samples, 0.01%)</title><rect x="73.5149%" y="853" width="0.0105%" height="15" fill="rgb(243,173,41)" fg:x="7017" fg:w="1"/><text x="73.7649%" y="863.50"></text></g><g><title>bevy_window::windows::Windows::get_primary (1 samples, 0.01%)</title><rect x="73.5149%" y="837" width="0.0105%" height="15" fill="rgb(225,160,47)" fg:x="7017" fg:w="1"/><text x="73.7649%" y="847.50"></text></g><g><title>bevy_window::windows::Windows::get (1 samples, 0.01%)</title><rect x="73.5149%" y="821" width="0.0105%" height="15" fill="rgb(215,44,21)" fg:x="7017" fg:w="1"/><text x="73.7649%" y="831.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="73.5149%" y="805" width="0.0105%" height="15" fill="rgb(248,90,3)" fg:x="7017" fg:w="1"/><text x="73.7649%" y="815.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="73.5149%" y="789" width="0.0105%" height="15" fill="rgb(220,196,49)" fg:x="7017" fg:w="1"/><text x="73.7649%" y="799.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="73.5149%" y="773" width="0.0105%" height="15" fill="rgb(217,138,14)" fg:x="7017" fg:w="1"/><text x="73.7649%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="73.5149%" y="757" width="0.0105%" height="15" fill="rgb(219,111,20)" fg:x="7017" fg:w="1"/><text x="73.7649%" y="767.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="73.5149%" y="741" width="0.0105%" height="15" fill="rgb(218,114,4)" fg:x="7017" fg:w="1"/><text x="73.7649%" y="751.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="73.5149%" y="725" width="0.0105%" height="15" fill="rgb(238,133,3)" fg:x="7017" fg:w="1"/><text x="73.7649%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::system_param::ResState&lt;T&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="73.5254%" y="869" width="0.0105%" height="15" fill="rgb(224,95,0)" fg:x="7018" fg:w="1"/><text x="73.7754%" y="879.50"></text></g><g><title>bevy_ecs::storage::table::Column::get_ticks_mut_ptr (1 samples, 0.01%)</title><rect x="73.5254%" y="853" width="0.0105%" height="15" fill="rgb(220,169,35)" fg:x="7018" fg:w="1"/><text x="73.7754%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="73.5254%" y="837" width="0.0105%" height="15" fill="rgb(242,116,47)" fg:x="7018" fg:w="1"/><text x="73.7754%" y="847.50"></text></g><g><title>&lt;(P0,P1,P2,P3,P4,P5,P6) as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (2 samples, 0.02%)</title><rect x="73.5254%" y="885" width="0.0210%" height="15" fill="rgb(251,42,20)" fg:x="7018" fg:w="2"/><text x="73.7754%" y="895.50"></text></g><g><title>&lt;bevy_render::draw::DrawContextState&lt;(&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::pipeline::pipeline::PipelineDescriptor&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_asset::assets::Assets&lt;bevy_render::shader::shader::Shader&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::pipeline::pipeline_compiler::PipelineCompiler&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::Res&lt;alloc::boxed::Box&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch,&lt;bevy_ecs::system::system_param::ResMut&lt;bevy_render::renderer::render_resource::shared_buffers::SharedBuffers&gt; as bevy_ecs::system::system_param::SystemParam&gt;::Fetch)&gt; as bevy_ecs::system::system_param::SystemParamFetch&gt;::get_param (1 samples, 0.01%)</title><rect x="73.5359%" y="869" width="0.0105%" height="15" fill="rgb(234,7,34)" fg:x="7019" fg:w="1"/><text x="73.7859%" y="879.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="73.5464%" y="837" width="0.0105%" height="15" fill="rgb(243,208,13)" fg:x="7020" fg:w="1"/><text x="73.7964%" y="847.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="73.5464%" y="821" width="0.0105%" height="15" fill="rgb(227,33,28)" fg:x="7020" fg:w="1"/><text x="73.7964%" y="831.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="73.5464%" y="805" width="0.0105%" height="15" fill="rgb(250,47,37)" fg:x="7020" fg:w="1"/><text x="73.7964%" y="815.50"></text></g><g><title>&lt;(F0,F1,F2,F3,F4,F5) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="73.5464%" y="789" width="0.0105%" height="15" fill="rgb(235,111,52)" fg:x="7020" fg:w="1"/><text x="73.7964%" y="799.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1,854 samples, 19.42%)</title><rect x="54.1435%" y="1093" width="19.4238%" height="15" fill="rgb(223,64,28)" fg:x="5168" fg:w="1854"/><text x="54.3935%" y="1103.50">&lt;bevy_ecs::schedule::executor_..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (1,854 samples, 19.42%)</title><rect x="54.1435%" y="1077" width="19.4238%" height="15" fill="rgb(236,67,22)" fg:x="5168" fg:w="1854"/><text x="54.3935%" y="1087.50">bevy_tasks::task_pool::TaskPoo..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,854 samples, 19.42%)</title><rect x="54.1435%" y="1061" width="19.4238%" height="15" fill="rgb(243,79,24)" fg:x="5168" fg:w="1854"/><text x="54.3935%" y="1071.50">std::thread::local::LocalKey&lt;T..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,854 samples, 19.42%)</title><rect x="54.1435%" y="1045" width="19.4238%" height="15" fill="rgb(241,225,22)" fg:x="5168" fg:w="1854"/><text x="54.3935%" y="1055.50">std::thread::local::LocalKey&lt;T..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (1,854 samples, 19.42%)</title><rect x="54.1435%" y="1029" width="19.4238%" height="15" fill="rgb(228,214,26)" fg:x="5168" fg:w="1854"/><text x="54.3935%" y="1039.50">bevy_tasks::task_pool::TaskPoo..</text></g><g><title>async_executor::Executor::try_tick (1,835 samples, 19.22%)</title><rect x="54.3426%" y="1013" width="19.2247%" height="15" fill="rgb(219,84,52)" fg:x="5187" fg:w="1835"/><text x="54.5926%" y="1023.50">async_executor::Executor::try_..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,835 samples, 19.22%)</title><rect x="54.3426%" y="997" width="19.2247%" height="15" fill="rgb(220,12,22)" fg:x="5187" fg:w="1835"/><text x="54.5926%" y="1007.50">async_task::raw::RawTask&lt;F,T,S..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,835 samples, 19.22%)</title><rect x="54.3426%" y="981" width="19.2247%" height="15" fill="rgb(219,9,49)" fg:x="5187" fg:w="1835"/><text x="54.5926%" y="991.50">&lt;core::future::from_generator:..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,835 samples, 19.22%)</title><rect x="54.3426%" y="965" width="19.2247%" height="15" fill="rgb(237,40,43)" fg:x="5187" fg:w="1835"/><text x="54.5926%" y="975.50">async_executor::Executor::spaw..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,835 samples, 19.22%)</title><rect x="54.3426%" y="949" width="19.2247%" height="15" fill="rgb(212,189,32)" fg:x="5187" fg:w="1835"/><text x="54.5926%" y="959.50">&lt;core::future::from_generator:..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1,835 samples, 19.22%)</title><rect x="54.3426%" y="933" width="19.2247%" height="15" fill="rgb(247,48,9)" fg:x="5187" fg:w="1835"/><text x="54.5926%" y="943.50">bevy_ecs::schedule::executor_p..</text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1,835 samples, 19.22%)</title><rect x="54.3426%" y="917" width="19.2247%" height="15" fill="rgb(247,112,3)" fg:x="5187" fg:w="1835"/><text x="54.5926%" y="927.50">&lt;bevy_ecs::system::into_system..</text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6),()&gt;&gt;::run (4 samples, 0.04%)</title><rect x="73.5254%" y="901" width="0.0419%" height="15" fill="rgb(243,110,18)" fg:x="7018" fg:w="4"/><text x="73.7754%" y="911.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="73.5464%" y="885" width="0.0210%" height="15" fill="rgb(233,223,44)" fg:x="7020" fg:w="2"/><text x="73.7964%" y="895.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="73.5464%" y="869" width="0.0210%" height="15" fill="rgb(245,160,20)" fg:x="7020" fg:w="2"/><text x="73.7964%" y="879.50"></text></g><g><title>bevy_text::text2d::draw_text2d_system (2 samples, 0.02%)</title><rect x="73.5464%" y="853" width="0.0210%" height="15" fill="rgb(225,37,1)" fg:x="7020" fg:w="2"/><text x="73.7964%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout&gt; (1 samples, 0.01%)</title><rect x="73.5568%" y="837" width="0.0105%" height="15" fill="rgb(253,227,39)" fg:x="7021" fg:w="1"/><text x="73.8068%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::borrow::Cow&lt;str&gt;&gt; (1 samples, 0.01%)</title><rect x="73.5568%" y="821" width="0.0105%" height="15" fill="rgb(240,179,26)" fg:x="7021" fg:w="1"/><text x="73.8068%" y="831.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (2 samples, 0.02%)</title><rect x="73.5987%" y="853" width="0.0210%" height="15" fill="rgb(237,212,23)" fg:x="7025" fg:w="2"/><text x="73.8487%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::clone_waker (1 samples, 0.01%)</title><rect x="73.6092%" y="837" width="0.0105%" height="15" fill="rgb(221,38,11)" fg:x="7026" fg:w="1"/><text x="73.8592%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (1 samples, 0.01%)</title><rect x="73.6092%" y="821" width="0.0105%" height="15" fill="rgb(215,85,6)" fg:x="7026" fg:w="1"/><text x="73.8592%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_add (1 samples, 0.01%)</title><rect x="73.6092%" y="805" width="0.0105%" height="15" fill="rgb(239,64,14)" fg:x="7026" fg:w="1"/><text x="73.8592%" y="815.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (3 samples, 0.03%)</title><rect x="73.5987%" y="917" width="0.0314%" height="15" fill="rgb(215,150,32)" fg:x="7025" fg:w="3"/><text x="73.8487%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (3 samples, 0.03%)</title><rect x="73.5987%" y="901" width="0.0314%" height="15" fill="rgb(238,15,13)" fg:x="7025" fg:w="3"/><text x="73.8487%" y="911.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (3 samples, 0.03%)</title><rect x="73.5987%" y="885" width="0.0314%" height="15" fill="rgb(251,87,8)" fg:x="7025" fg:w="3"/><text x="73.8487%" y="895.50"></text></g><g><title>async_executor::Executor::spawn (3 samples, 0.03%)</title><rect x="73.5987%" y="869" width="0.0314%" height="15" fill="rgb(206,86,1)" fg:x="7025" fg:w="3"/><text x="73.8487%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::sync::mutex::MutexGuard&lt;vec_arena::Arena&lt;core::task::wake::Waker&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="73.6197%" y="853" width="0.0105%" height="15" fill="rgb(208,151,45)" fg:x="7027" fg:w="1"/><text x="73.8697%" y="863.50"></text></g><g><title>&lt;std::sync::mutex::MutexGuard&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.6197%" y="837" width="0.0105%" height="15" fill="rgb(231,181,24)" fg:x="7027" fg:w="1"/><text x="73.8697%" y="847.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_unlock (1 samples, 0.01%)</title><rect x="73.6197%" y="821" width="0.0105%" height="15" fill="rgb(240,106,29)" fg:x="7027" fg:w="1"/><text x="73.8697%" y="831.50"></text></g><g><title>std::sys::unix::mutex::Mutex::unlock (1 samples, 0.01%)</title><rect x="73.6197%" y="805" width="0.0105%" height="15" fill="rgb(227,166,11)" fg:x="7027" fg:w="1"/><text x="73.8697%" y="815.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="73.6197%" y="789" width="0.0105%" height="15" fill="rgb(254,14,34)" fg:x="7027" fg:w="1"/><text x="73.8697%" y="799.50"></text></g><g><title>[libbevy_dylib-7e0daee3ecabe62f.so] (1 samples, 0.01%)</title><rect x="73.6302%" y="917" width="0.0105%" height="15" fill="rgb(223,222,6)" fg:x="7028" fg:w="1"/><text x="73.8802%" y="927.50"></text></g><g><title>async_executor::Executor::try_tick (1 samples, 0.01%)</title><rect x="73.6302%" y="901" width="0.0105%" height="15" fill="rgb(245,69,24)" fg:x="7028" fg:w="1"/><text x="73.8802%" y="911.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::recv::{{closure}} (2 samples, 0.02%)</title><rect x="73.6930%" y="805" width="0.0210%" height="15" fill="rgb(213,193,7)" fg:x="7034" fg:w="2"/><text x="73.9430%" y="815.50"></text></g><g><title>event_listener::Event::notify (2 samples, 0.02%)</title><rect x="73.6930%" y="789" width="0.0210%" height="15" fill="rgb(237,92,51)" fg:x="7034" fg:w="2"/><text x="73.9430%" y="799.50"></text></g><g><title>event_listener::full_fence (2 samples, 0.02%)</title><rect x="73.6930%" y="773" width="0.0210%" height="15" fill="rgb(225,194,6)" fg:x="7034" fg:w="2"/><text x="73.9430%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="73.7035%" y="757" width="0.0105%" height="15" fill="rgb(205,159,49)" fg:x="7035" fg:w="1"/><text x="73.9535%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="73.7035%" y="741" width="0.0105%" height="15" fill="rgb(219,69,2)" fg:x="7035" fg:w="1"/><text x="73.9535%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="73.7035%" y="725" width="0.0105%" height="15" fill="rgb(215,107,24)" fg:x="7035" fg:w="1"/><text x="73.9535%" y="735.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3 samples, 0.03%)</title><rect x="73.6930%" y="821" width="0.0314%" height="15" fill="rgb(249,208,29)" fg:x="7034" fg:w="3"/><text x="73.9430%" y="831.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (1 samples, 0.01%)</title><rect x="73.7140%" y="805" width="0.0105%" height="15" fill="rgb(213,147,10)" fg:x="7036" fg:w="1"/><text x="73.9640%" y="815.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::can_start_now (1 samples, 0.01%)</title><rect x="73.7140%" y="789" width="0.0105%" height="15" fill="rgb(254,140,42)" fg:x="7036" fg:w="1"/><text x="73.9640%" y="799.50"></text></g><g><title>fixedbitset::FixedBitSet::is_disjoint (1 samples, 0.01%)</title><rect x="73.7140%" y="773" width="0.0105%" height="15" fill="rgb(249,9,15)" fg:x="7036" fg:w="1"/><text x="73.9640%" y="783.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1 samples, 0.01%)</title><rect x="73.7140%" y="757" width="0.0105%" height="15" fill="rgb(210,19,33)" fg:x="7036" fg:w="1"/><text x="73.9640%" y="767.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1 samples, 0.01%)</title><rect x="73.7140%" y="741" width="0.0105%" height="15" fill="rgb(241,121,22)" fg:x="7036" fg:w="1"/><text x="73.9640%" y="751.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="73.7140%" y="725" width="0.0105%" height="15" fill="rgb(244,69,52)" fg:x="7036" fg:w="1"/><text x="73.9640%" y="735.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="73.7140%" y="709" width="0.0105%" height="15" fill="rgb(244,191,54)" fg:x="7036" fg:w="1"/><text x="73.9640%" y="719.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="73.7245%" y="821" width="0.0105%" height="15" fill="rgb(250,3,53)" fg:x="7037" fg:w="1"/><text x="73.9745%" y="831.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (5 samples, 0.05%)</title><rect x="73.6930%" y="837" width="0.0524%" height="15" fill="rgb(205,77,3)" fg:x="7034" fg:w="5"/><text x="73.9430%" y="847.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::rebuild_active_access (1 samples, 0.01%)</title><rect x="73.7349%" y="821" width="0.0105%" height="15" fill="rgb(207,155,3)" fg:x="7038" fg:w="1"/><text x="73.9849%" y="831.50"></text></g><g><title>bevy_ecs::query::access::Access&lt;T&gt;::extend (1 samples, 0.01%)</title><rect x="73.7349%" y="805" width="0.0105%" height="15" fill="rgb(224,79,2)" fg:x="7038" fg:w="1"/><text x="73.9849%" y="815.50"></text></g><g><title>fixedbitset::FixedBitSet::union_with (1 samples, 0.01%)</title><rect x="73.7349%" y="789" width="0.0105%" height="15" fill="rgb(243,172,5)" fg:x="7038" fg:w="1"/><text x="73.9849%" y="799.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="73.7349%" y="773" width="0.0105%" height="15" fill="rgb(217,23,43)" fg:x="7038" fg:w="1"/><text x="73.9849%" y="783.50"></text></g><g><title>&lt;core::iter::adapters::zip::Zip&lt;A,B&gt; as core::iter::adapters::zip::ZipImpl&lt;A,B&gt;&gt;::next (1 samples, 0.01%)</title><rect x="73.7349%" y="757" width="0.0105%" height="15" fill="rgb(223,109,20)" fg:x="7038" fg:w="1"/><text x="73.9849%" y="767.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get_mut (1 samples, 0.01%)</title><rect x="73.7559%" y="741" width="0.0105%" height="15" fill="rgb(232,159,21)" fg:x="7040" fg:w="1"/><text x="74.0059%" y="751.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (1 samples, 0.01%)</title><rect x="73.7559%" y="725" width="0.0105%" height="15" fill="rgb(219,58,2)" fg:x="7040" fg:w="1"/><text x="74.0059%" y="735.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (1 samples, 0.01%)</title><rect x="73.7559%" y="709" width="0.0105%" height="15" fill="rgb(241,56,8)" fg:x="7040" fg:w="1"/><text x="74.0059%" y="719.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::set_archetype (1 samples, 0.01%)</title><rect x="73.7559%" y="693" width="0.0105%" height="15" fill="rgb(249,10,27)" fg:x="7040" fg:w="1"/><text x="74.0059%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2 samples, 0.02%)</title><rect x="73.7559%" y="821" width="0.0210%" height="15" fill="rgb(248,177,5)" fg:x="7040" fg:w="2"/><text x="74.0059%" y="831.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="73.7559%" y="805" width="0.0210%" height="15" fill="rgb(239,12,30)" fg:x="7040" fg:w="2"/><text x="74.0059%" y="815.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="73.7559%" y="789" width="0.0210%" height="15" fill="rgb(229,164,25)" fg:x="7040" fg:w="2"/><text x="74.0059%" y="799.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="73.7559%" y="773" width="0.0210%" height="15" fill="rgb(231,217,50)" fg:x="7040" fg:w="2"/><text x="74.0059%" y="783.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (2 samples, 0.02%)</title><rect x="73.7559%" y="757" width="0.0210%" height="15" fill="rgb(247,99,32)" fg:x="7040" fg:w="2"/><text x="74.0059%" y="767.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (1 samples, 0.01%)</title><rect x="73.7664%" y="741" width="0.0105%" height="15" fill="rgb(240,74,50)" fg:x="7041" fg:w="1"/><text x="74.0164%" y="751.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::push (1 samples, 0.01%)</title><rect x="73.7664%" y="725" width="0.0105%" height="15" fill="rgb(218,54,8)" fg:x="7041" fg:w="1"/><text x="74.0164%" y="735.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="73.7664%" y="709" width="0.0105%" height="15" fill="rgb(227,132,20)" fg:x="7041" fg:w="1"/><text x="74.0164%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="73.7664%" y="693" width="0.0105%" height="15" fill="rgb(232,134,12)" fg:x="7041" fg:w="1"/><text x="74.0164%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (1 samples, 0.01%)</title><rect x="73.7664%" y="677" width="0.0105%" height="15" fill="rgb(250,129,18)" fg:x="7041" fg:w="1"/><text x="74.0164%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="73.7664%" y="661" width="0.0105%" height="15" fill="rgb(232,129,47)" fg:x="7041" fg:w="1"/><text x="74.0164%" y="671.50"></text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="73.7768%" y="789" width="0.0105%" height="15" fill="rgb(230,31,40)" fg:x="7042" fg:w="1"/><text x="74.0268%" y="799.50"></text></g><g><title>event_listener::Inner::lock (1 samples, 0.01%)</title><rect x="73.7768%" y="773" width="0.0105%" height="15" fill="rgb(232,126,10)" fg:x="7042" fg:w="1"/><text x="74.0268%" y="783.50"></text></g><g><title>event_listener::Spinlock&lt;T&gt;::lock (1 samples, 0.01%)</title><rect x="73.7768%" y="757" width="0.0105%" height="15" fill="rgb(205,46,31)" fg:x="7042" fg:w="1"/><text x="74.0268%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicBool::swap (1 samples, 0.01%)</title><rect x="73.7768%" y="741" width="0.0105%" height="15" fill="rgb(232,37,37)" fg:x="7042" fg:w="1"/><text x="74.0268%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_swap (1 samples, 0.01%)</title><rect x="73.7768%" y="725" width="0.0105%" height="15" fill="rgb(240,91,16)" fg:x="7042" fg:w="1"/><text x="74.0268%" y="735.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::recv::{{closure}} (2 samples, 0.02%)</title><rect x="73.7768%" y="805" width="0.0210%" height="15" fill="rgb(224,160,9)" fg:x="7042" fg:w="2"/><text x="74.0268%" y="815.50"></text></g><g><title>async_channel::Receiver&lt;T&gt;::try_recv (1 samples, 0.01%)</title><rect x="73.7873%" y="789" width="0.0105%" height="15" fill="rgb(215,116,14)" fg:x="7043" fg:w="1"/><text x="74.0373%" y="799.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="73.7873%" y="773" width="0.0105%" height="15" fill="rgb(235,46,36)" fg:x="7043" fg:w="1"/><text x="74.0373%" y="783.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="73.7873%" y="757" width="0.0105%" height="15" fill="rgb(238,39,28)" fg:x="7043" fg:w="1"/><text x="74.0373%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="73.7873%" y="741" width="0.0105%" height="15" fill="rgb(242,125,29)" fg:x="7043" fg:w="1"/><text x="74.0373%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="73.7873%" y="725" width="0.0105%" height="15" fill="rgb(238,211,30)" fg:x="7043" fg:w="1"/><text x="74.0373%" y="735.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="73.7873%" y="709" width="0.0105%" height="15" fill="rgb(227,201,28)" fg:x="7043" fg:w="1"/><text x="74.0373%" y="719.50"></text></g><g><title>async_executor::State::notify (2 samples, 0.02%)</title><rect x="73.7978%" y="709" width="0.0210%" height="15" fill="rgb(238,77,29)" fg:x="7044" fg:w="2"/><text x="74.0478%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_and_swap (2 samples, 0.02%)</title><rect x="73.7978%" y="693" width="0.0210%" height="15" fill="rgb(213,221,40)" fg:x="7044" fg:w="2"/><text x="74.0478%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicBool::compare_exchange (2 samples, 0.02%)</title><rect x="73.7978%" y="677" width="0.0210%" height="15" fill="rgb(226,220,44)" fg:x="7044" fg:w="2"/><text x="74.0478%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (2 samples, 0.02%)</title><rect x="73.7978%" y="661" width="0.0210%" height="15" fill="rgb(228,90,23)" fg:x="7044" fg:w="2"/><text x="74.0478%" y="671.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (3 samples, 0.03%)</title><rect x="73.7978%" y="789" width="0.0314%" height="15" fill="rgb(235,72,29)" fg:x="7044" fg:w="3"/><text x="74.0478%" y="799.50"></text></g><g><title>event_listener::Event::notify (3 samples, 0.03%)</title><rect x="73.7978%" y="773" width="0.0314%" height="15" fill="rgb(248,117,39)" fg:x="7044" fg:w="3"/><text x="74.0478%" y="783.50"></text></g><g><title>event_listener::List::notify (3 samples, 0.03%)</title><rect x="73.7978%" y="757" width="0.0314%" height="15" fill="rgb(225,43,28)" fg:x="7044" fg:w="3"/><text x="74.0478%" y="767.50"></text></g><g><title>core::task::wake::Waker::wake (3 samples, 0.03%)</title><rect x="73.7978%" y="741" width="0.0314%" height="15" fill="rgb(240,93,4)" fg:x="7044" fg:w="3"/><text x="74.0478%" y="751.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (3 samples, 0.03%)</title><rect x="73.7978%" y="725" width="0.0314%" height="15" fill="rgb(234,178,27)" fg:x="7044" fg:w="3"/><text x="74.0478%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="73.8188%" y="709" width="0.0105%" height="15" fill="rgb(254,88,22)" fg:x="7046" fg:w="1"/><text x="74.0688%" y="719.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (1 samples, 0.01%)</title><rect x="73.8188%" y="693" width="0.0105%" height="15" fill="rgb(240,206,50)" fg:x="7046" fg:w="1"/><text x="74.0688%" y="703.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="73.8188%" y="677" width="0.0105%" height="15" fill="rgb(249,103,8)" fg:x="7046" fg:w="1"/><text x="74.0688%" y="687.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (1 samples, 0.01%)</title><rect x="73.8188%" y="661" width="0.0105%" height="15" fill="rgb(241,178,36)" fg:x="7046" fg:w="1"/><text x="74.0688%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="73.8188%" y="645" width="0.0105%" height="15" fill="rgb(246,110,15)" fg:x="7046" fg:w="1"/><text x="74.0688%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="73.8188%" y="629" width="0.0105%" height="15" fill="rgb(207,14,43)" fg:x="7046" fg:w="1"/><text x="74.0688%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (6 samples, 0.06%)</title><rect x="73.7768%" y="821" width="0.0629%" height="15" fill="rgb(253,219,19)" fg:x="7042" fg:w="6"/><text x="74.0268%" y="831.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::send::{{closure}} (4 samples, 0.04%)</title><rect x="73.7978%" y="805" width="0.0419%" height="15" fill="rgb(216,126,5)" fg:x="7044" fg:w="4"/><text x="74.0478%" y="815.50"></text></g><g><title>event_listener::Event::notify (1 samples, 0.01%)</title><rect x="73.8292%" y="789" width="0.0105%" height="15" fill="rgb(218,78,42)" fg:x="7047" fg:w="1"/><text x="74.0792%" y="799.50"></text></g><g><title>event_listener::full_fence (1 samples, 0.01%)</title><rect x="73.8292%" y="773" width="0.0105%" height="15" fill="rgb(215,154,40)" fg:x="7047" fg:w="1"/><text x="74.0792%" y="783.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (1 samples, 0.01%)</title><rect x="73.8292%" y="757" width="0.0105%" height="15" fill="rgb(235,129,32)" fg:x="7047" fg:w="1"/><text x="74.0792%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="73.8292%" y="741" width="0.0105%" height="15" fill="rgb(218,51,8)" fg:x="7047" fg:w="1"/><text x="74.0792%" y="751.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="73.8292%" y="725" width="0.0105%" height="15" fill="rgb(245,48,4)" fg:x="7047" fg:w="1"/><text x="74.0792%" y="735.50"></text></g><g><title>&lt;async_channel::Sender&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.8397%" y="805" width="0.0105%" height="15" fill="rgb(250,175,12)" fg:x="7048" fg:w="1"/><text x="74.0897%" y="815.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="73.8397%" y="789" width="0.0105%" height="15" fill="rgb(237,95,40)" fg:x="7048" fg:w="1"/><text x="74.0897%" y="799.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="73.8397%" y="773" width="0.0105%" height="15" fill="rgb(244,120,0)" fg:x="7048" fg:w="1"/><text x="74.0897%" y="783.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (16 samples, 0.17%)</title><rect x="73.6930%" y="853" width="0.1676%" height="15" fill="rgb(241,19,42)" fg:x="7034" fg:w="16"/><text x="73.9430%" y="863.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (11 samples, 0.12%)</title><rect x="73.7454%" y="837" width="0.1152%" height="15" fill="rgb(217,174,48)" fg:x="7039" fg:w="11"/><text x="73.9954%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Sender&lt;usize&gt;&gt; (2 samples, 0.02%)</title><rect x="73.8397%" y="821" width="0.0210%" height="15" fill="rgb(239,36,38)" fg:x="7048" fg:w="2"/><text x="74.0897%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;async_channel::Channel&lt;usize&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="73.8502%" y="805" width="0.0105%" height="15" fill="rgb(220,63,49)" fg:x="7049" fg:w="1"/><text x="74.1002%" y="815.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="73.8502%" y="789" width="0.0105%" height="15" fill="rgb(240,101,13)" fg:x="7049" fg:w="1"/><text x="74.1002%" y="799.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="73.8502%" y="773" width="0.0105%" height="15" fill="rgb(209,184,51)" fg:x="7049" fg:w="1"/><text x="74.1002%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="73.8502%" y="757" width="0.0105%" height="15" fill="rgb(206,136,39)" fg:x="7049" fg:w="1"/><text x="74.1002%" y="767.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (17 samples, 0.18%)</title><rect x="73.6930%" y="885" width="0.1781%" height="15" fill="rgb(254,47,45)" fg:x="7034" fg:w="17"/><text x="73.9430%" y="895.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (17 samples, 0.18%)</title><rect x="73.6930%" y="869" width="0.1781%" height="15" fill="rgb(252,103,20)" fg:x="7034" fg:w="17"/><text x="73.9430%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (1 samples, 0.01%)</title><rect x="73.8607%" y="853" width="0.0105%" height="15" fill="rgb(230,69,12)" fg:x="7050" fg:w="1"/><text x="74.1107%" y="863.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="73.8607%" y="837" width="0.0105%" height="15" fill="rgb(219,2,28)" fg:x="7050" fg:w="1"/><text x="74.1107%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::drop_ref (1 samples, 0.01%)</title><rect x="73.8711%" y="885" width="0.0105%" height="15" fill="rgb(210,9,12)" fg:x="7051" fg:w="1"/><text x="74.1211%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="73.8711%" y="869" width="0.0105%" height="15" fill="rgb(235,99,33)" fg:x="7051" fg:w="1"/><text x="74.1211%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="73.8711%" y="853" width="0.0105%" height="15" fill="rgb(230,11,38)" fg:x="7051" fg:w="1"/><text x="74.1211%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (19 samples, 0.20%)</title><rect x="73.6930%" y="901" width="0.1991%" height="15" fill="rgb(217,129,0)" fg:x="7034" fg:w="19"/><text x="73.9430%" y="911.50"></text></g><g><title>async_task::utils::abort_on_panic (1 samples, 0.01%)</title><rect x="73.8816%" y="885" width="0.0105%" height="15" fill="rgb(222,198,4)" fg:x="7052" fg:w="1"/><text x="74.1316%" y="895.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (1 samples, 0.01%)</title><rect x="73.8816%" y="869" width="0.0105%" height="15" fill="rgb(246,170,27)" fg:x="7052" fg:w="1"/><text x="74.1316%" y="879.50"></text></g><g><title>core::task::wake::Waker::wake (1 samples, 0.01%)</title><rect x="73.8816%" y="853" width="0.0105%" height="15" fill="rgb(229,17,28)" fg:x="7052" fg:w="1"/><text x="74.1316%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (1 samples, 0.01%)</title><rect x="73.8816%" y="837" width="0.0105%" height="15" fill="rgb(233,198,48)" fg:x="7052" fg:w="1"/><text x="74.1316%" y="847.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake_by_ref (1 samples, 0.01%)</title><rect x="73.8816%" y="821" width="0.0105%" height="15" fill="rgb(238,103,23)" fg:x="7052" fg:w="1"/><text x="74.1316%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="73.8816%" y="805" width="0.0105%" height="15" fill="rgb(206,91,41)" fg:x="7052" fg:w="1"/><text x="74.1316%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="73.8816%" y="789" width="0.0105%" height="15" fill="rgb(227,34,25)" fg:x="7052" fg:w="1"/><text x="74.1316%" y="799.50"></text></g><g><title>concurrent_queue::full_fence (50 samples, 0.52%)</title><rect x="74.0178%" y="869" width="0.5238%" height="15" fill="rgb(210,110,44)" fg:x="7065" fg:w="50"/><text x="74.2678%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (49 samples, 0.51%)</title><rect x="74.0283%" y="853" width="0.5134%" height="15" fill="rgb(216,189,8)" fg:x="7066" fg:w="49"/><text x="74.2783%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (49 samples, 0.51%)</title><rect x="74.0283%" y="837" width="0.5134%" height="15" fill="rgb(234,9,46)" fg:x="7066" fg:w="49"/><text x="74.2783%" y="847.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (49 samples, 0.51%)</title><rect x="74.0283%" y="821" width="0.5134%" height="15" fill="rgb(251,200,5)" fg:x="7066" fg:w="49"/><text x="74.2783%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (7 samples, 0.07%)</title><rect x="74.5416%" y="869" width="0.0733%" height="15" fill="rgb(238,165,37)" fg:x="7115" fg:w="7"/><text x="74.7916%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (7 samples, 0.07%)</title><rect x="74.5416%" y="853" width="0.0733%" height="15" fill="rgb(232,77,38)" fg:x="7115" fg:w="7"/><text x="74.7916%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="74.6150%" y="869" width="0.0105%" height="15" fill="rgb(253,179,33)" fg:x="7122" fg:w="1"/><text x="74.8650%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="74.6150%" y="853" width="0.0105%" height="15" fill="rgb(240,13,35)" fg:x="7122" fg:w="1"/><text x="74.8650%" y="863.50"></text></g><g><title>async_executor::Executor::try_tick (96 samples, 1.01%)</title><rect x="73.6406%" y="917" width="1.0058%" height="15" fill="rgb(242,150,49)" fg:x="7029" fg:w="96"/><text x="73.8906%" y="927.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (72 samples, 0.75%)</title><rect x="73.8921%" y="901" width="0.7543%" height="15" fill="rgb(237,176,28)" fg:x="7053" fg:w="72"/><text x="74.1421%" y="911.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (72 samples, 0.75%)</title><rect x="73.8921%" y="885" width="0.7543%" height="15" fill="rgb(214,176,33)" fg:x="7053" fg:w="72"/><text x="74.1421%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (2 samples, 0.02%)</title><rect x="74.6255%" y="869" width="0.0210%" height="15" fill="rgb(214,25,12)" fg:x="7123" fg:w="2"/><text x="74.8755%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_load (2 samples, 0.02%)</title><rect x="74.6255%" y="853" width="0.0210%" height="15" fill="rgb(238,190,20)" fg:x="7123" fg:w="2"/><text x="74.8755%" y="863.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2 samples, 0.02%)</title><rect x="74.6569%" y="885" width="0.0210%" height="15" fill="rgb(208,11,19)" fg:x="7126" fg:w="2"/><text x="74.9069%" y="895.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="74.6569%" y="869" width="0.0210%" height="15" fill="rgb(239,90,4)" fg:x="7126" fg:w="2"/><text x="74.9069%" y="879.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (2 samples, 0.02%)</title><rect x="74.6569%" y="853" width="0.0210%" height="15" fill="rgb(248,110,3)" fg:x="7126" fg:w="2"/><text x="74.9069%" y="863.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="74.6569%" y="837" width="0.0210%" height="15" fill="rgb(210,41,30)" fg:x="7126" fg:w="2"/><text x="74.9069%" y="847.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2 samples, 0.02%)</title><rect x="74.6569%" y="821" width="0.0210%" height="15" fill="rgb(239,36,8)" fg:x="7126" fg:w="2"/><text x="74.9069%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (2 samples, 0.02%)</title><rect x="74.6569%" y="805" width="0.0210%" height="15" fill="rgb(237,201,47)" fg:x="7126" fg:w="2"/><text x="74.9069%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (2 samples, 0.02%)</title><rect x="74.6569%" y="789" width="0.0210%" height="15" fill="rgb(224,140,29)" fg:x="7126" fg:w="2"/><text x="74.9069%" y="799.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="74.6569%" y="773" width="0.0210%" height="15" fill="rgb(231,209,17)" fg:x="7126" fg:w="2"/><text x="74.9069%" y="783.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="74.6569%" y="757" width="0.0210%" height="15" fill="rgb(249,196,1)" fg:x="7126" fg:w="2"/><text x="74.9069%" y="767.50"></text></g><g><title>concurrent_queue::full_fence (57 samples, 0.60%)</title><rect x="74.7931%" y="853" width="0.5972%" height="15" fill="rgb(223,207,51)" fg:x="7139" fg:w="57"/><text x="75.0431%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (56 samples, 0.59%)</title><rect x="74.8036%" y="837" width="0.5867%" height="15" fill="rgb(210,14,40)" fg:x="7140" fg:w="56"/><text x="75.0536%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (56 samples, 0.59%)</title><rect x="74.8036%" y="821" width="0.5867%" height="15" fill="rgb(250,20,52)" fg:x="7140" fg:w="56"/><text x="75.0536%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (56 samples, 0.59%)</title><rect x="74.8036%" y="805" width="0.5867%" height="15" fill="rgb(241,46,11)" fg:x="7140" fg:w="56"/><text x="75.0536%" y="815.50"></text></g><g><title>async_executor::Executor::try_tick (77 samples, 0.81%)</title><rect x="74.6464%" y="901" width="0.8067%" height="15" fill="rgb(219,105,5)" fg:x="7125" fg:w="77"/><text x="74.8964%" y="911.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (74 samples, 0.78%)</title><rect x="74.6778%" y="885" width="0.7753%" height="15" fill="rgb(252,77,35)" fg:x="7128" fg:w="74"/><text x="74.9278%" y="895.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (71 samples, 0.74%)</title><rect x="74.7093%" y="869" width="0.7438%" height="15" fill="rgb(243,119,2)" fg:x="7131" fg:w="71"/><text x="74.9593%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (6 samples, 0.06%)</title><rect x="75.3903%" y="853" width="0.0629%" height="15" fill="rgb(206,82,28)" fg:x="7196" fg:w="6"/><text x="75.6403%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (6 samples, 0.06%)</title><rect x="75.3903%" y="837" width="0.0629%" height="15" fill="rgb(227,120,12)" fg:x="7196" fg:w="6"/><text x="75.6403%" y="847.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (80 samples, 0.84%)</title><rect x="74.6464%" y="917" width="0.8381%" height="15" fill="rgb(229,134,41)" fg:x="7125" fg:w="80"/><text x="74.8964%" y="927.50"></text></g><g><title>async_executor::LocalExecutor::inner (3 samples, 0.03%)</title><rect x="75.4531%" y="901" width="0.0314%" height="15" fill="rgb(239,96,32)" fg:x="7202" fg:w="3"/><text x="75.7031%" y="911.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (3 samples, 0.03%)</title><rect x="75.4531%" y="885" width="0.0314%" height="15" fill="rgb(225,46,27)" fg:x="7202" fg:w="3"/><text x="75.7031%" y="895.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (3 samples, 0.03%)</title><rect x="75.4531%" y="869" width="0.0314%" height="15" fill="rgb(215,168,2)" fg:x="7202" fg:w="3"/><text x="75.7031%" y="879.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get (3 samples, 0.03%)</title><rect x="75.4531%" y="853" width="0.0314%" height="15" fill="rgb(207,170,52)" fg:x="7202" fg:w="3"/><text x="75.7031%" y="863.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (3 samples, 0.03%)</title><rect x="75.4531%" y="837" width="0.0314%" height="15" fill="rgb(237,198,36)" fg:x="7202" fg:w="3"/><text x="75.7031%" y="847.50"></text></g><g><title>__tls_get_addr (4 samples, 0.04%)</title><rect x="75.5893%" y="853" width="0.0419%" height="15" fill="rgb(213,27,14)" fg:x="7215" fg:w="4"/><text x="75.8393%" y="863.50"></text></g><g><title>__tls_get_addr@plt (4 samples, 0.04%)</title><rect x="75.6312%" y="853" width="0.0419%" height="15" fill="rgb(218,77,5)" fg:x="7219" fg:w="4"/><text x="75.8812%" y="863.50"></text></g><g><title>__tls_get_addr (8 samples, 0.08%)</title><rect x="75.6836%" y="805" width="0.0838%" height="15" fill="rgb(230,219,39)" fg:x="7224" fg:w="8"/><text x="75.9336%" y="815.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (23 samples, 0.24%)</title><rect x="75.5579%" y="869" width="0.2410%" height="15" fill="rgb(245,177,7)" fg:x="7212" fg:w="23"/><text x="75.8079%" y="879.50"></text></g><g><title>std::thread::local::fast::Key&lt;T&gt;::get (12 samples, 0.13%)</title><rect x="75.6731%" y="853" width="0.1257%" height="15" fill="rgb(246,44,46)" fg:x="7223" fg:w="12"/><text x="75.9231%" y="863.50"></text></g><g><title>std::thread::local::lazy::LazyKeyInner&lt;T&gt;::get (11 samples, 0.12%)</title><rect x="75.6836%" y="837" width="0.1152%" height="15" fill="rgb(207,173,15)" fg:x="7224" fg:w="11"/><text x="75.9336%" y="847.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (11 samples, 0.12%)</title><rect x="75.6836%" y="821" width="0.1152%" height="15" fill="rgb(245,170,50)" fg:x="7224" fg:w="11"/><text x="75.9336%" y="831.50"></text></g><g><title>__tls_get_addr@plt (3 samples, 0.03%)</title><rect x="75.7674%" y="805" width="0.0314%" height="15" fill="rgb(233,156,21)" fg:x="7232" fg:w="3"/><text x="76.0174%" y="815.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (1 samples, 0.01%)</title><rect x="75.8512%" y="789" width="0.0105%" height="15" fill="rgb(253,146,27)" fg:x="7240" fg:w="1"/><text x="76.1012%" y="799.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (46 samples, 0.48%)</title><rect x="76.1027%" y="725" width="0.4819%" height="15" fill="rgb(247,66,29)" fg:x="7264" fg:w="46"/><text x="76.3527%" y="735.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (45 samples, 0.47%)</title><rect x="76.1131%" y="709" width="0.4715%" height="15" fill="rgb(218,207,26)" fg:x="7265" fg:w="45"/><text x="76.3631%" y="719.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (42 samples, 0.44%)</title><rect x="76.1446%" y="693" width="0.4400%" height="15" fill="rgb(234,93,26)" fg:x="7268" fg:w="42"/><text x="76.3946%" y="703.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (42 samples, 0.44%)</title><rect x="76.1446%" y="677" width="0.4400%" height="15" fill="rgb(214,75,48)" fg:x="7268" fg:w="42"/><text x="76.3946%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (42 samples, 0.44%)</title><rect x="76.1446%" y="661" width="0.4400%" height="15" fill="rgb(229,119,22)" fg:x="7268" fg:w="42"/><text x="76.3946%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_add (42 samples, 0.44%)</title><rect x="76.1446%" y="645" width="0.4400%" height="15" fill="rgb(226,153,19)" fg:x="7268" fg:w="42"/><text x="76.3946%" y="655.50"></text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (5 samples, 0.05%)</title><rect x="76.5951%" y="661" width="0.0524%" height="15" fill="rgb(220,204,36)" fg:x="7311" fg:w="5"/><text x="76.8451%" y="671.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (5 samples, 0.05%)</title><rect x="76.5951%" y="645" width="0.0524%" height="15" fill="rgb(253,181,43)" fg:x="7311" fg:w="5"/><text x="76.8451%" y="655.50"></text></g><g><title>async_task::utils::abort_on_panic (105 samples, 1.10%)</title><rect x="76.1027%" y="757" width="1.1001%" height="15" fill="rgb(211,41,51)" fg:x="7264" fg:w="105"/><text x="76.3527%" y="767.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (105 samples, 1.10%)</title><rect x="76.1027%" y="741" width="1.1001%" height="15" fill="rgb(207,215,0)" fg:x="7264" fg:w="105"/><text x="76.3527%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (59 samples, 0.62%)</title><rect x="76.5846%" y="725" width="0.6181%" height="15" fill="rgb(212,153,10)" fg:x="7310" fg:w="59"/><text x="76.8346%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (58 samples, 0.61%)</title><rect x="76.5951%" y="709" width="0.6076%" height="15" fill="rgb(251,171,36)" fg:x="7311" fg:w="58"/><text x="76.8451%" y="719.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (58 samples, 0.61%)</title><rect x="76.5951%" y="693" width="0.6076%" height="15" fill="rgb(225,219,41)" fg:x="7311" fg:w="58"/><text x="76.8451%" y="703.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (58 samples, 0.61%)</title><rect x="76.5951%" y="677" width="0.6076%" height="15" fill="rgb(208,200,1)" fg:x="7311" fg:w="58"/><text x="76.8451%" y="687.50"></text></g><g><title>core::mem::drop (53 samples, 0.56%)</title><rect x="76.6475%" y="661" width="0.5553%" height="15" fill="rgb(206,75,47)" fg:x="7316" fg:w="53"/><text x="76.8975%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (53 samples, 0.56%)</title><rect x="76.6475%" y="645" width="0.5553%" height="15" fill="rgb(248,3,16)" fg:x="7316" fg:w="53"/><text x="76.8975%" y="655.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (53 samples, 0.56%)</title><rect x="76.6475%" y="629" width="0.5553%" height="15" fill="rgb(242,157,36)" fg:x="7316" fg:w="53"/><text x="76.8975%" y="639.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (52 samples, 0.54%)</title><rect x="76.6579%" y="613" width="0.5448%" height="15" fill="rgb(215,175,11)" fg:x="7317" fg:w="52"/><text x="76.9079%" y="623.50"></text></g><g><title>core::sync::atomic::atomic_sub (52 samples, 0.54%)</title><rect x="76.6579%" y="597" width="0.5448%" height="15" fill="rgb(252,222,22)" fg:x="7317" fg:w="52"/><text x="76.9079%" y="607.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_none (2 samples, 0.02%)</title><rect x="77.2027%" y="757" width="0.0210%" height="15" fill="rgb(250,121,35)" fg:x="7369" fg:w="2"/><text x="77.4527%" y="767.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (2 samples, 0.02%)</title><rect x="77.2027%" y="741" width="0.0210%" height="15" fill="rgb(233,120,49)" fg:x="7369" fg:w="2"/><text x="77.4527%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (96 samples, 1.01%)</title><rect x="77.2237%" y="757" width="1.0058%" height="15" fill="rgb(205,201,14)" fg:x="7371" fg:w="96"/><text x="77.4737%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (96 samples, 1.01%)</title><rect x="77.2237%" y="741" width="1.0058%" height="15" fill="rgb(219,58,45)" fg:x="7371" fg:w="96"/><text x="77.4737%" y="751.50"></text></g><g><title>async_task::header::Header::register (218 samples, 2.28%)</title><rect x="75.9560%" y="773" width="2.2839%" height="15" fill="rgb(251,65,12)" fg:x="7250" fg:w="218"/><text x="76.2060%" y="783.50">a..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (1 samples, 0.01%)</title><rect x="78.2294%" y="757" width="0.0105%" height="15" fill="rgb(224,47,31)" fg:x="7467" fg:w="1"/><text x="78.4794%" y="767.50"></text></g><g><title>core::sync::atomic::atomic_or (1 samples, 0.01%)</title><rect x="78.2294%" y="741" width="0.0105%" height="15" fill="rgb(233,74,26)" fg:x="7467" fg:w="1"/><text x="78.4794%" y="751.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (22 samples, 0.23%)</title><rect x="78.2399%" y="773" width="0.2305%" height="15" fill="rgb(231,211,31)" fg:x="7468" fg:w="22"/><text x="78.4899%" y="783.50"></text></g><g><title>core::sync::atomic::atomic_load (22 samples, 0.23%)</title><rect x="78.2399%" y="757" width="0.2305%" height="15" fill="rgb(239,167,5)" fg:x="7468" fg:w="22"/><text x="78.4899%" y="767.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (254 samples, 2.66%)</title><rect x="75.8198%" y="853" width="2.6611%" height="15" fill="rgb(241,85,0)" fg:x="7237" fg:w="254"/><text x="76.0698%" y="863.50">&lt;f..</text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (252 samples, 2.64%)</title><rect x="75.8408%" y="837" width="2.6401%" height="15" fill="rgb(229,130,21)" fg:x="7239" fg:w="252"/><text x="76.0908%" y="847.50">&lt;c..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (252 samples, 2.64%)</title><rect x="75.8408%" y="821" width="2.6401%" height="15" fill="rgb(254,84,49)" fg:x="7239" fg:w="252"/><text x="76.0908%" y="831.50">&lt;&amp;..</text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (252 samples, 2.64%)</title><rect x="75.8408%" y="805" width="2.6401%" height="15" fill="rgb(235,85,21)" fg:x="7239" fg:w="252"/><text x="76.0908%" y="815.50">&lt;a..</text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (250 samples, 2.62%)</title><rect x="75.8617%" y="789" width="2.6192%" height="15" fill="rgb(246,128,52)" fg:x="7241" fg:w="250"/><text x="76.1117%" y="799.50">as..</text></g><g><title>core::task::wake::Context::waker (1 samples, 0.01%)</title><rect x="78.4704%" y="773" width="0.0105%" height="15" fill="rgb(243,114,49)" fg:x="7490" fg:w="1"/><text x="78.7204%" y="783.50"></text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (2 samples, 0.02%)</title><rect x="78.4809%" y="853" width="0.0210%" height="15" fill="rgb(240,224,22)" fg:x="7491" fg:w="2"/><text x="78.7309%" y="863.50"></text></g><g><title>core::cell::BorrowRefMut::new (2 samples, 0.02%)</title><rect x="78.4809%" y="837" width="0.0210%" height="15" fill="rgb(247,201,52)" fg:x="7491" fg:w="2"/><text x="78.7309%" y="847.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (1 samples, 0.01%)</title><rect x="78.4914%" y="821" width="0.0105%" height="15" fill="rgb(231,70,45)" fg:x="7492" fg:w="1"/><text x="78.7414%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (1 samples, 0.01%)</title><rect x="78.4914%" y="805" width="0.0105%" height="15" fill="rgb(217,215,20)" fg:x="7492" fg:w="1"/><text x="78.7414%" y="815.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="78.4914%" y="789" width="0.0105%" height="15" fill="rgb(226,170,30)" fg:x="7492" fg:w="1"/><text x="78.7414%" y="799.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="78.4914%" y="773" width="0.0105%" height="15" fill="rgb(220,190,43)" fg:x="7492" fg:w="1"/><text x="78.7414%" y="783.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (2 samples, 0.02%)</title><rect x="78.5018%" y="853" width="0.0210%" height="15" fill="rgb(218,20,18)" fg:x="7493" fg:w="2"/><text x="78.7518%" y="863.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="78.5018%" y="837" width="0.0210%" height="15" fill="rgb(245,37,26)" fg:x="7493" fg:w="2"/><text x="78.7518%" y="847.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (286 samples, 3.00%)</title><rect x="75.5474%" y="885" width="2.9963%" height="15" fill="rgb(241,127,29)" fg:x="7211" fg:w="286"/><text x="75.7974%" y="895.50">std..</text></g><g><title>futures_lite::future::block_on::{{closure}} (262 samples, 2.74%)</title><rect x="75.7988%" y="869" width="2.7449%" height="15" fill="rgb(241,33,26)" fg:x="7235" fg:w="262"/><text x="76.0488%" y="879.50">fu..</text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (2 samples, 0.02%)</title><rect x="78.5228%" y="853" width="0.0210%" height="15" fill="rgb(220,106,21)" fg:x="7495" fg:w="2"/><text x="78.7728%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (2 samples, 0.02%)</title><rect x="78.5228%" y="837" width="0.0210%" height="15" fill="rgb(225,125,35)" fg:x="7495" fg:w="2"/><text x="78.7728%" y="847.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="78.5228%" y="821" width="0.0210%" height="15" fill="rgb(248,80,22)" fg:x="7495" fg:w="2"/><text x="78.7728%" y="831.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (2 samples, 0.02%)</title><rect x="78.5228%" y="805" width="0.0210%" height="15" fill="rgb(231,117,39)" fg:x="7495" fg:w="2"/><text x="78.7728%" y="815.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (2 samples, 0.02%)</title><rect x="78.5228%" y="789" width="0.0210%" height="15" fill="rgb(239,183,16)" fg:x="7495" fg:w="2"/><text x="78.7728%" y="799.50"></text></g><g><title>core::mem::replace (2 samples, 0.02%)</title><rect x="78.5228%" y="773" width="0.0210%" height="15" fill="rgb(221,61,19)" fg:x="7495" fg:w="2"/><text x="78.7728%" y="783.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="78.5228%" y="757" width="0.0210%" height="15" fill="rgb(239,196,44)" fg:x="7495" fg:w="2"/><text x="78.7728%" y="767.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (477 samples, 5.00%)</title><rect x="73.5673%" y="1061" width="4.9974%" height="15" fill="rgb(206,113,19)" fg:x="7022" fg:w="477"/><text x="73.8173%" y="1071.50">bevy_r..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (477 samples, 5.00%)</title><rect x="73.5673%" y="1045" width="4.9974%" height="15" fill="rgb(245,114,12)" fg:x="7022" fg:w="477"/><text x="73.8173%" y="1055.50">&lt;bevy_..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (477 samples, 5.00%)</title><rect x="73.5673%" y="1029" width="4.9974%" height="15" fill="rgb(247,89,39)" fg:x="7022" fg:w="477"/><text x="73.8173%" y="1039.50">bevy_e..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (477 samples, 5.00%)</title><rect x="73.5673%" y="1013" width="4.9974%" height="15" fill="rgb(213,85,14)" fg:x="7022" fg:w="477"/><text x="73.8173%" y="1023.50">&lt;bevy_..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (477 samples, 5.00%)</title><rect x="73.5673%" y="997" width="4.9974%" height="15" fill="rgb(249,206,33)" fg:x="7022" fg:w="477"/><text x="73.8173%" y="1007.50">&lt;bevy_..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (477 samples, 5.00%)</title><rect x="73.5673%" y="981" width="4.9974%" height="15" fill="rgb(235,167,47)" fg:x="7022" fg:w="477"/><text x="73.8173%" y="991.50">bevy_t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (477 samples, 5.00%)</title><rect x="73.5673%" y="965" width="4.9974%" height="15" fill="rgb(217,177,16)" fg:x="7022" fg:w="477"/><text x="73.8173%" y="975.50">std::t..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (477 samples, 5.00%)</title><rect x="73.5673%" y="949" width="4.9974%" height="15" fill="rgb(250,228,29)" fg:x="7022" fg:w="477"/><text x="73.8173%" y="959.50">std::t..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (477 samples, 5.00%)</title><rect x="73.5673%" y="933" width="4.9974%" height="15" fill="rgb(216,195,42)" fg:x="7022" fg:w="477"/><text x="73.8173%" y="943.50">bevy_t..</text></g><g><title>futures_lite::future::block_on (294 samples, 3.08%)</title><rect x="75.4845%" y="917" width="3.0801%" height="15" fill="rgb(232,192,32)" fg:x="7205" fg:w="294"/><text x="75.7345%" y="927.50">fut..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (292 samples, 3.06%)</title><rect x="75.5055%" y="901" width="3.0592%" height="15" fill="rgb(211,8,47)" fg:x="7207" fg:w="292"/><text x="75.7555%" y="911.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2 samples, 0.02%)</title><rect x="78.5437%" y="885" width="0.0210%" height="15" fill="rgb(251,201,9)" fg:x="7497" fg:w="2"/><text x="78.7937%" y="895.50"></text></g><g><title>XGetXCBConnection (1 samples, 0.01%)</title><rect x="78.5856%" y="677" width="0.0105%" height="15" fill="rgb(206,185,47)" fg:x="7501" fg:w="1"/><text x="78.8356%" y="687.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="78.5961%" y="581" width="0.0105%" height="15" fill="rgb(245,54,32)" fg:x="7502" fg:w="1"/><text x="78.8461%" y="591.50"></text></g><g><title>XSync (2 samples, 0.02%)</title><rect x="78.5961%" y="677" width="0.0210%" height="15" fill="rgb(208,1,8)" fg:x="7502" fg:w="2"/><text x="78.8461%" y="687.50"></text></g><g><title>_XReply (2 samples, 0.02%)</title><rect x="78.5961%" y="661" width="0.0210%" height="15" fill="rgb(228,57,24)" fg:x="7502" fg:w="2"/><text x="78.8461%" y="671.50"></text></g><g><title>xcb_wait_for_reply64 (2 samples, 0.02%)</title><rect x="78.5961%" y="645" width="0.0210%" height="15" fill="rgb(251,24,8)" fg:x="7502" fg:w="2"/><text x="78.8461%" y="655.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="78.5961%" y="629" width="0.0210%" height="15" fill="rgb(236,196,50)" fg:x="7502" fg:w="2"/><text x="78.8461%" y="639.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="78.5961%" y="613" width="0.0210%" height="15" fill="rgb(246,222,29)" fg:x="7502" fg:w="2"/><text x="78.8461%" y="623.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="78.5961%" y="597" width="0.0210%" height="15" fill="rgb(211,34,40)" fg:x="7502" fg:w="2"/><text x="78.8461%" y="607.50"></text></g><g><title>__libc_recvmsg (1 samples, 0.01%)</title><rect x="78.6066%" y="581" width="0.0105%" height="15" fill="rgb(210,66,51)" fg:x="7503" fg:w="1"/><text x="78.8566%" y="591.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="78.6276%" y="597" width="0.0105%" height="15" fill="rgb(250,56,43)" fg:x="7505" fg:w="1"/><text x="78.8776%" y="607.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (3 samples, 0.03%)</title><rect x="78.6171%" y="677" width="0.0314%" height="15" fill="rgb(240,111,50)" fg:x="7504" fg:w="3"/><text x="78.8671%" y="687.50"></text></g><g><title>xcb_sync_await_fence (3 samples, 0.03%)</title><rect x="78.6171%" y="661" width="0.0314%" height="15" fill="rgb(209,117,13)" fg:x="7504" fg:w="3"/><text x="78.8671%" y="671.50"></text></g><g><title>xcb_send_request (3 samples, 0.03%)</title><rect x="78.6171%" y="645" width="0.0314%" height="15" fill="rgb(232,164,45)" fg:x="7504" fg:w="3"/><text x="78.8671%" y="655.50"></text></g><g><title>xcb_send_request_with_fds64 (3 samples, 0.03%)</title><rect x="78.6171%" y="629" width="0.0314%" height="15" fill="rgb(205,69,32)" fg:x="7504" fg:w="3"/><text x="78.8671%" y="639.50"></text></g><g><title>xcb_get_extension_data (2 samples, 0.02%)</title><rect x="78.6276%" y="613" width="0.0210%" height="15" fill="rgb(240,147,45)" fg:x="7505" fg:w="2"/><text x="78.8776%" y="623.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="78.6380%" y="597" width="0.0105%" height="15" fill="rgb(221,94,48)" fg:x="7506" fg:w="1"/><text x="78.8880%" y="607.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="78.6485%" y="677" width="0.0105%" height="15" fill="rgb(249,209,17)" fg:x="7507" fg:w="1"/><text x="78.8985%" y="687.50"></text></g><g><title>free@plt (1 samples, 0.01%)</title><rect x="78.6590%" y="677" width="0.0105%" height="15" fill="rgb(228,57,28)" fg:x="7508" fg:w="1"/><text x="78.9090%" y="687.50"></text></g><g><title>xcb_flush (1 samples, 0.01%)</title><rect x="78.6695%" y="677" width="0.0105%" height="15" fill="rgb(250,133,26)" fg:x="7509" fg:w="1"/><text x="78.9195%" y="687.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="78.6695%" y="661" width="0.0105%" height="15" fill="rgb(254,15,16)" fg:x="7509" fg:w="1"/><text x="78.9195%" y="671.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="78.6695%" y="645" width="0.0105%" height="15" fill="rgb(209,147,42)" fg:x="7509" fg:w="1"/><text x="78.9195%" y="655.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="78.6695%" y="629" width="0.0105%" height="15" fill="rgb(208,5,29)" fg:x="7509" fg:w="1"/><text x="78.9195%" y="639.50"></text></g><g><title>__GI___poll (1 samples, 0.01%)</title><rect x="78.6695%" y="613" width="0.0105%" height="15" fill="rgb(250,73,31)" fg:x="7509" fg:w="1"/><text x="78.9195%" y="623.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (11 samples, 0.12%)</title><rect x="78.5856%" y="693" width="0.1152%" height="15" fill="rgb(238,45,10)" fg:x="7501" fg:w="11"/><text x="78.8356%" y="703.50"></text></g><g><title>xcb_wait_for_special_event (2 samples, 0.02%)</title><rect x="78.6799%" y="677" width="0.0210%" height="15" fill="rgb(214,104,5)" fg:x="7510" fg:w="2"/><text x="78.9299%" y="687.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="78.6799%" y="661" width="0.0210%" height="15" fill="rgb(242,217,19)" fg:x="7510" fg:w="2"/><text x="78.9299%" y="671.50"></text></g><g><title>__GI___poll (2 samples, 0.02%)</title><rect x="78.6799%" y="645" width="0.0210%" height="15" fill="rgb(246,113,27)" fg:x="7510" fg:w="2"/><text x="78.9299%" y="655.50"></text></g><g><title>__libc_disable_asynccancel (1 samples, 0.01%)</title><rect x="78.6904%" y="629" width="0.0105%" height="15" fill="rgb(221,34,27)" fg:x="7511" fg:w="1"/><text x="78.9404%" y="639.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (18 samples, 0.19%)</title><rect x="78.5647%" y="1029" width="0.1886%" height="15" fill="rgb(246,109,6)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="1039.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (18 samples, 0.19%)</title><rect x="78.5647%" y="1013" width="0.1886%" height="15" fill="rgb(217,12,25)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="1023.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (18 samples, 0.19%)</title><rect x="78.5647%" y="997" width="0.1886%" height="15" fill="rgb(250,195,5)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (18 samples, 0.19%)</title><rect x="78.5647%" y="981" width="0.1886%" height="15" fill="rgb(244,140,45)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="991.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (18 samples, 0.19%)</title><rect x="78.5647%" y="965" width="0.1886%" height="15" fill="rgb(230,64,14)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="975.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (18 samples, 0.19%)</title><rect x="78.5647%" y="949" width="0.1886%" height="15" fill="rgb(206,27,27)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="959.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (18 samples, 0.19%)</title><rect x="78.5647%" y="933" width="0.1886%" height="15" fill="rgb(230,14,50)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (18 samples, 0.19%)</title><rect x="78.5647%" y="917" width="0.1886%" height="15" fill="rgb(237,172,14)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (18 samples, 0.19%)</title><rect x="78.5647%" y="901" width="0.1886%" height="15" fill="rgb(209,25,21)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (18 samples, 0.19%)</title><rect x="78.5647%" y="885" width="0.1886%" height="15" fill="rgb(248,148,22)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="895.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (18 samples, 0.19%)</title><rect x="78.5647%" y="869" width="0.1886%" height="15" fill="rgb(234,100,22)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="879.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (18 samples, 0.19%)</title><rect x="78.5647%" y="853" width="0.1886%" height="15" fill="rgb(210,20,30)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="863.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (18 samples, 0.19%)</title><rect x="78.5647%" y="837" width="0.1886%" height="15" fill="rgb(232,58,0)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="847.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (18 samples, 0.19%)</title><rect x="78.5647%" y="821" width="0.1886%" height="15" fill="rgb(221,68,13)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="831.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (18 samples, 0.19%)</title><rect x="78.5647%" y="805" width="0.1886%" height="15" fill="rgb(231,194,11)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="815.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (18 samples, 0.19%)</title><rect x="78.5647%" y="789" width="0.1886%" height="15" fill="rgb(235,51,41)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.19%)</title><rect x="78.5647%" y="773" width="0.1886%" height="15" fill="rgb(240,50,32)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.19%)</title><rect x="78.5647%" y="757" width="0.1886%" height="15" fill="rgb(240,185,36)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.19%)</title><rect x="78.5647%" y="741" width="0.1886%" height="15" fill="rgb(211,168,15)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.19%)</title><rect x="78.5647%" y="725" width="0.1886%" height="15" fill="rgb(221,70,0)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (18 samples, 0.19%)</title><rect x="78.5647%" y="709" width="0.1886%" height="15" fill="rgb(205,21,33)" fg:x="7499" fg:w="18"/><text x="78.8147%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="78.7009%" y="693" width="0.0524%" height="15" fill="rgb(225,106,10)" fg:x="7512" fg:w="5"/><text x="78.9509%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="78.7218%" y="677" width="0.0314%" height="15" fill="rgb(236,200,50)" fg:x="7514" fg:w="3"/><text x="78.9718%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="78.7218%" y="661" width="0.0314%" height="15" fill="rgb(249,93,23)" fg:x="7514" fg:w="3"/><text x="78.9718%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="78.7428%" y="645" width="0.0105%" height="15" fill="rgb(244,115,35)" fg:x="7516" fg:w="1"/><text x="78.9928%" y="655.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="78.7428%" y="629" width="0.0105%" height="15" fill="rgb(231,129,47)" fg:x="7516" fg:w="1"/><text x="78.9928%" y="639.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="78.9942%" y="917" width="0.0105%" height="15" fill="rgb(225,160,50)" fg:x="7540" fg:w="1"/><text x="79.2442%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="78.9942%" y="901" width="0.0105%" height="15" fill="rgb(218,135,23)" fg:x="7540" fg:w="1"/><text x="79.2442%" y="911.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::post_inc_start (1 samples, 0.01%)</title><rect x="78.9942%" y="885" width="0.0105%" height="15" fill="rgb(227,119,14)" fg:x="7540" fg:w="1"/><text x="79.2442%" y="895.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="78.9942%" y="869" width="0.0105%" height="15" fill="rgb(242,138,13)" fg:x="7540" fg:w="1"/><text x="79.2442%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::boxed::Box&lt;crossbeam_channel::flavors::list::Block&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="79.0466%" y="853" width="0.0105%" height="15" fill="rgb(215,11,16)" fg:x="7545" fg:w="1"/><text x="79.2966%" y="863.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (13 samples, 0.14%)</title><rect x="79.0571%" y="853" width="0.1362%" height="15" fill="rgb(234,170,50)" fg:x="7546" fg:w="13"/><text x="79.3071%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (13 samples, 0.14%)</title><rect x="79.0571%" y="837" width="0.1362%" height="15" fill="rgb(233,34,20)" fg:x="7546" fg:w="13"/><text x="79.3071%" y="847.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (16 samples, 0.17%)</title><rect x="79.0361%" y="869" width="0.1676%" height="15" fill="rgb(237,100,45)" fg:x="7544" fg:w="16"/><text x="79.2861%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (1 samples, 0.01%)</title><rect x="79.1933%" y="853" width="0.0105%" height="15" fill="rgb(231,184,36)" fg:x="7559" fg:w="1"/><text x="79.4433%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="79.1933%" y="837" width="0.0105%" height="15" fill="rgb(252,93,2)" fg:x="7559" fg:w="1"/><text x="79.4433%" y="847.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (25 samples, 0.26%)</title><rect x="79.0257%" y="901" width="0.2619%" height="15" fill="rgb(248,176,47)" fg:x="7543" fg:w="25"/><text x="79.2757%" y="911.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (24 samples, 0.25%)</title><rect x="79.0361%" y="885" width="0.2514%" height="15" fill="rgb(249,125,23)" fg:x="7544" fg:w="24"/><text x="79.2861%" y="895.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (8 samples, 0.08%)</title><rect x="79.2038%" y="869" width="0.0838%" height="15" fill="rgb(239,67,42)" fg:x="7560" fg:w="8"/><text x="79.4538%" y="879.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (8 samples, 0.08%)</title><rect x="79.2038%" y="853" width="0.0838%" height="15" fill="rgb(244,162,4)" fg:x="7560" fg:w="8"/><text x="79.4538%" y="863.50"></text></g><g><title>core::sync::atomic::atomic_or (8 samples, 0.08%)</title><rect x="79.2038%" y="837" width="0.0838%" height="15" fill="rgb(214,150,38)" fg:x="7560" fg:w="8"/><text x="79.4538%" y="847.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="79.2876%" y="821" width="0.0105%" height="15" fill="rgb(228,211,28)" fg:x="7568" fg:w="1"/><text x="79.5376%" y="831.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="79.2876%" y="805" width="0.0105%" height="15" fill="rgb(212,98,48)" fg:x="7568" fg:w="1"/><text x="79.5376%" y="815.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="79.2876%" y="837" width="0.0210%" height="15" fill="rgb(213,45,13)" fg:x="7568" fg:w="2"/><text x="79.5376%" y="847.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="79.2981%" y="821" width="0.0105%" height="15" fill="rgb(218,35,29)" fg:x="7569" fg:w="1"/><text x="79.5481%" y="831.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="79.2876%" y="853" width="0.0314%" height="15" fill="rgb(244,13,3)" fg:x="7568" fg:w="3"/><text x="79.5376%" y="863.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId as core::hash::Hash&gt;::hash (1 samples, 0.01%)</title><rect x="79.3085%" y="837" width="0.0105%" height="15" fill="rgb(235,170,19)" fg:x="7570" fg:w="1"/><text x="79.5585%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (1 samples, 0.01%)</title><rect x="79.3085%" y="821" width="0.0105%" height="15" fill="rgb(233,193,43)" fg:x="7570" fg:w="1"/><text x="79.5585%" y="831.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="79.3085%" y="805" width="0.0105%" height="15" fill="rgb(228,223,20)" fg:x="7570" fg:w="1"/><text x="79.5585%" y="815.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="79.3085%" y="789" width="0.0105%" height="15" fill="rgb(208,85,54)" fg:x="7570" fg:w="1"/><text x="79.5585%" y="799.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="79.3085%" y="773" width="0.0105%" height="15" fill="rgb(254,14,45)" fg:x="7570" fg:w="1"/><text x="79.5585%" y="783.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="79.3085%" y="757" width="0.0105%" height="15" fill="rgb(247,99,29)" fg:x="7570" fg:w="1"/><text x="79.5585%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="79.3190%" y="805" width="0.0314%" height="15" fill="rgb(225,180,54)" fg:x="7571" fg:w="3"/><text x="79.5690%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="79.3400%" y="789" width="0.0105%" height="15" fill="rgb(239,88,43)" fg:x="7573" fg:w="1"/><text x="79.5900%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="79.3400%" y="773" width="0.0105%" height="15" fill="rgb(209,47,11)" fg:x="7573" fg:w="1"/><text x="79.5900%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="79.3190%" y="821" width="0.0419%" height="15" fill="rgb(219,179,23)" fg:x="7571" fg:w="4"/><text x="79.5690%" y="831.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="79.3504%" y="805" width="0.0105%" height="15" fill="rgb(213,183,19)" fg:x="7574" fg:w="1"/><text x="79.6004%" y="815.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="79.3504%" y="789" width="0.0105%" height="15" fill="rgb(210,11,9)" fg:x="7574" fg:w="1"/><text x="79.6004%" y="799.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="79.3504%" y="773" width="0.0105%" height="15" fill="rgb(239,194,16)" fg:x="7574" fg:w="1"/><text x="79.6004%" y="783.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_neg (1 samples, 0.01%)</title><rect x="79.3504%" y="757" width="0.0105%" height="15" fill="rgb(246,23,50)" fg:x="7574" fg:w="1"/><text x="79.6004%" y="767.50"></text></g><g><title>core::num::&lt;impl isize&gt;::wrapping_sub (1 samples, 0.01%)</title><rect x="79.3504%" y="741" width="0.0105%" height="15" fill="rgb(245,10,41)" fg:x="7574" fg:w="1"/><text x="79.6004%" y="751.50"></text></g><g><title>&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId as core::cmp::PartialEq&gt;::eq (3 samples, 0.03%)</title><rect x="79.3609%" y="805" width="0.0314%" height="15" fill="rgb(228,43,24)" fg:x="7575" fg:w="3"/><text x="79.6109%" y="815.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (5 samples, 0.05%)</title><rect x="79.3609%" y="821" width="0.0524%" height="15" fill="rgb(220,151,0)" fg:x="7575" fg:w="5"/><text x="79.6109%" y="831.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::bind_group::BindGroupId as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="79.3924%" y="805" width="0.0210%" height="15" fill="rgb(232,219,10)" fg:x="7578" fg:w="2"/><text x="79.6424%" y="815.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (5 samples, 0.05%)</title><rect x="79.4133%" y="773" width="0.0524%" height="15" fill="rgb(227,217,48)" fg:x="7580" fg:w="5"/><text x="79.6633%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (5 samples, 0.05%)</title><rect x="79.4133%" y="757" width="0.0524%" height="15" fill="rgb(210,66,35)" fg:x="7580" fg:w="5"/><text x="79.6633%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (5 samples, 0.05%)</title><rect x="79.4133%" y="741" width="0.0524%" height="15" fill="rgb(254,6,7)" fg:x="7580" fg:w="5"/><text x="79.6633%" y="751.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_bind_group (45 samples, 0.47%)</title><rect x="79.0047%" y="917" width="0.4715%" height="15" fill="rgb(235,222,42)" fg:x="7541" fg:w="45"/><text x="79.2547%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (18 samples, 0.19%)</title><rect x="79.2876%" y="901" width="0.1886%" height="15" fill="rgb(245,126,5)" fg:x="7568" fg:w="18"/><text x="79.5376%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (18 samples, 0.19%)</title><rect x="79.2876%" y="885" width="0.1886%" height="15" fill="rgb(215,73,17)" fg:x="7568" fg:w="18"/><text x="79.5376%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (18 samples, 0.19%)</title><rect x="79.2876%" y="869" width="0.1886%" height="15" fill="rgb(219,198,52)" fg:x="7568" fg:w="18"/><text x="79.5376%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (15 samples, 0.16%)</title><rect x="79.3190%" y="853" width="0.1572%" height="15" fill="rgb(217,159,18)" fg:x="7571" fg:w="15"/><text x="79.5690%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (15 samples, 0.16%)</title><rect x="79.3190%" y="837" width="0.1572%" height="15" fill="rgb(212,177,18)" fg:x="7571" fg:w="15"/><text x="79.5690%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (6 samples, 0.06%)</title><rect x="79.4133%" y="821" width="0.0629%" height="15" fill="rgb(241,10,11)" fg:x="7580" fg:w="6"/><text x="79.6633%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (6 samples, 0.06%)</title><rect x="79.4133%" y="805" width="0.0629%" height="15" fill="rgb(232,114,35)" fg:x="7580" fg:w="6"/><text x="79.6633%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (6 samples, 0.06%)</title><rect x="79.4133%" y="789" width="0.0629%" height="15" fill="rgb(238,222,8)" fg:x="7580" fg:w="6"/><text x="79.6633%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="79.4657%" y="773" width="0.0105%" height="15" fill="rgb(251,153,44)" fg:x="7585" fg:w="1"/><text x="79.7157%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="79.4657%" y="757" width="0.0105%" height="15" fill="rgb(210,140,51)" fg:x="7585" fg:w="1"/><text x="79.7157%" y="767.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="79.4657%" y="741" width="0.0105%" height="15" fill="rgb(222,63,0)" fg:x="7585" fg:w="1"/><text x="79.7157%" y="751.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="79.4657%" y="725" width="0.0105%" height="15" fill="rgb(240,18,40)" fg:x="7585" fg:w="1"/><text x="79.7157%" y="735.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="79.4762%" y="837" width="0.0105%" height="15" fill="rgb(237,88,16)" fg:x="7586" fg:w="1"/><text x="79.7262%" y="847.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="79.4762%" y="821" width="0.0105%" height="15" fill="rgb(251,117,13)" fg:x="7586" fg:w="1"/><text x="79.7262%" y="831.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="79.4762%" y="805" width="0.0105%" height="15" fill="rgb(251,228,8)" fg:x="7586" fg:w="1"/><text x="79.7262%" y="815.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (5 samples, 0.05%)</title><rect x="79.4866%" y="741" width="0.0524%" height="15" fill="rgb(205,107,49)" fg:x="7587" fg:w="5"/><text x="79.7366%" y="751.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (6 samples, 0.06%)</title><rect x="79.4866%" y="773" width="0.0629%" height="15" fill="rgb(238,72,41)" fg:x="7587" fg:w="6"/><text x="79.7366%" y="783.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (6 samples, 0.06%)</title><rect x="79.4866%" y="757" width="0.0629%" height="15" fill="rgb(248,183,52)" fg:x="7587" fg:w="6"/><text x="79.7366%" y="767.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="79.5390%" y="741" width="0.0105%" height="15" fill="rgb(215,58,20)" fg:x="7592" fg:w="1"/><text x="79.7890%" y="751.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (7 samples, 0.07%)</title><rect x="79.4866%" y="821" width="0.0733%" height="15" fill="rgb(209,49,13)" fg:x="7587" fg:w="7"/><text x="79.7366%" y="831.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (7 samples, 0.07%)</title><rect x="79.4866%" y="805" width="0.0733%" height="15" fill="rgb(208,113,17)" fg:x="7587" fg:w="7"/><text x="79.7366%" y="815.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (7 samples, 0.07%)</title><rect x="79.4866%" y="789" width="0.0733%" height="15" fill="rgb(208,14,22)" fg:x="7587" fg:w="7"/><text x="79.7366%" y="799.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="79.5495%" y="773" width="0.0105%" height="15" fill="rgb(222,95,2)" fg:x="7593" fg:w="1"/><text x="79.7995%" y="783.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="79.5495%" y="757" width="0.0105%" height="15" fill="rgb(253,180,37)" fg:x="7593" fg:w="1"/><text x="79.7995%" y="767.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="79.5495%" y="741" width="0.0105%" height="15" fill="rgb(250,81,33)" fg:x="7593" fg:w="1"/><text x="79.7995%" y="751.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="79.5495%" y="725" width="0.0105%" height="15" fill="rgb(251,151,41)" fg:x="7593" fg:w="1"/><text x="79.7995%" y="735.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (14 samples, 0.15%)</title><rect x="79.4866%" y="837" width="0.1467%" height="15" fill="rgb(210,135,17)" fg:x="7587" fg:w="14"/><text x="79.7366%" y="847.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u64&gt;::hash (7 samples, 0.07%)</title><rect x="79.5600%" y="821" width="0.0733%" height="15" fill="rgb(239,21,29)" fg:x="7594" fg:w="7"/><text x="79.8100%" y="831.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (7 samples, 0.07%)</title><rect x="79.5600%" y="805" width="0.0733%" height="15" fill="rgb(231,215,16)" fg:x="7594" fg:w="7"/><text x="79.8100%" y="815.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (7 samples, 0.07%)</title><rect x="79.5600%" y="789" width="0.0733%" height="15" fill="rgb(239,151,54)" fg:x="7594" fg:w="7"/><text x="79.8100%" y="799.50"></text></g><g><title>ahash::operations::folded_multiply (5 samples, 0.05%)</title><rect x="79.5809%" y="773" width="0.0524%" height="15" fill="rgb(222,122,38)" fg:x="7596" fg:w="5"/><text x="79.8309%" y="783.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (5 samples, 0.05%)</title><rect x="79.5809%" y="757" width="0.0524%" height="15" fill="rgb(243,128,1)" fg:x="7596" fg:w="5"/><text x="79.8309%" y="767.50"></text></g><g><title>hashbrown::map::make_hash (16 samples, 0.17%)</title><rect x="79.4762%" y="853" width="0.1676%" height="15" fill="rgb(225,74,21)" fg:x="7586" fg:w="16"/><text x="79.7262%" y="863.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (1 samples, 0.01%)</title><rect x="79.6333%" y="837" width="0.0105%" height="15" fill="rgb(216,210,10)" fg:x="7601" fg:w="1"/><text x="79.8833%" y="847.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="79.6857%" y="773" width="0.0105%" height="15" fill="rgb(228,76,19)" fg:x="7606" fg:w="1"/><text x="79.9357%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="79.6752%" y="821" width="0.0314%" height="15" fill="rgb(236,80,34)" fg:x="7605" fg:w="3"/><text x="79.9252%" y="831.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="79.6752%" y="805" width="0.0314%" height="15" fill="rgb(225,173,23)" fg:x="7605" fg:w="3"/><text x="79.9252%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="79.6857%" y="789" width="0.0210%" height="15" fill="rgb(253,38,1)" fg:x="7606" fg:w="2"/><text x="79.9357%" y="799.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="79.6962%" y="773" width="0.0105%" height="15" fill="rgb(206,155,35)" fg:x="7607" fg:w="1"/><text x="79.9462%" y="783.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (4 samples, 0.04%)</title><rect x="79.7067%" y="821" width="0.0419%" height="15" fill="rgb(254,27,53)" fg:x="7608" fg:w="4"/><text x="79.9567%" y="831.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (4 samples, 0.04%)</title><rect x="79.7067%" y="805" width="0.0419%" height="15" fill="rgb(225,52,41)" fg:x="7608" fg:w="4"/><text x="79.9567%" y="815.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (27 samples, 0.28%)</title><rect x="79.4762%" y="917" width="0.2829%" height="15" fill="rgb(244,53,18)" fg:x="7586" fg:w="27"/><text x="79.7262%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (27 samples, 0.28%)</title><rect x="79.4762%" y="901" width="0.2829%" height="15" fill="rgb(254,206,48)" fg:x="7586" fg:w="27"/><text x="79.7262%" y="911.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (27 samples, 0.28%)</title><rect x="79.4762%" y="885" width="0.2829%" height="15" fill="rgb(236,182,23)" fg:x="7586" fg:w="27"/><text x="79.7262%" y="895.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (27 samples, 0.28%)</title><rect x="79.4762%" y="869" width="0.2829%" height="15" fill="rgb(236,191,37)" fg:x="7586" fg:w="27"/><text x="79.7262%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (11 samples, 0.12%)</title><rect x="79.6438%" y="853" width="0.1152%" height="15" fill="rgb(245,53,8)" fg:x="7602" fg:w="11"/><text x="79.8938%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (11 samples, 0.12%)</title><rect x="79.6438%" y="837" width="0.1152%" height="15" fill="rgb(245,147,9)" fg:x="7602" fg:w="11"/><text x="79.8938%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="79.7486%" y="821" width="0.0105%" height="15" fill="rgb(218,24,48)" fg:x="7612" fg:w="1"/><text x="79.9986%" y="831.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="79.7486%" y="805" width="0.0105%" height="15" fill="rgb(254,23,9)" fg:x="7612" fg:w="1"/><text x="79.9986%" y="815.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="79.7486%" y="789" width="0.0105%" height="15" fill="rgb(244,105,9)" fg:x="7612" fg:w="1"/><text x="79.9986%" y="799.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="79.7486%" y="773" width="0.0105%" height="15" fill="rgb(212,142,22)" fg:x="7612" fg:w="1"/><text x="79.9986%" y="783.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="79.7486%" y="757" width="0.0105%" height="15" fill="rgb(221,114,49)" fg:x="7612" fg:w="1"/><text x="79.9986%" y="767.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="79.7486%" y="741" width="0.0105%" height="15" fill="rgb(223,210,25)" fg:x="7612" fg:w="1"/><text x="79.9986%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="79.7800%" y="885" width="0.0105%" height="15" fill="rgb(235,162,44)" fg:x="7615" fg:w="1"/><text x="80.0300%" y="895.50"></text></g><g><title>bevy_render::pipeline::pipeline_layout::PipelineLayout::get_bind_group (4 samples, 0.04%)</title><rect x="79.7590%" y="917" width="0.0419%" height="15" fill="rgb(237,65,45)" fg:x="7613" fg:w="4"/><text x="80.0090%" y="927.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (4 samples, 0.04%)</title><rect x="79.7590%" y="901" width="0.0419%" height="15" fill="rgb(208,79,9)" fg:x="7613" fg:w="4"/><text x="80.0090%" y="911.50"></text></g><g><title>bevy_render::pipeline::pipeline_layout::PipelineLayout::get_bind_group::{{closure}} (1 samples, 0.01%)</title><rect x="79.7905%" y="885" width="0.0105%" height="15" fill="rgb(215,228,8)" fg:x="7616" fg:w="1"/><text x="80.0405%" y="895.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::can_draw_indexed (1 samples, 0.01%)</title><rect x="79.8009%" y="917" width="0.0105%" height="15" fill="rgb(205,185,17)" fg:x="7617" fg:w="1"/><text x="80.0509%" y="927.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::can_draw (1 samples, 0.01%)</title><rect x="79.8009%" y="901" width="0.0105%" height="15" fill="rgb(213,62,36)" fg:x="7617" fg:w="1"/><text x="80.0509%" y="911.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::all (1 samples, 0.01%)</title><rect x="79.8009%" y="885" width="0.0105%" height="15" fill="rgb(209,34,9)" fg:x="7617" fg:w="1"/><text x="80.0509%" y="895.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="79.8009%" y="869" width="0.0105%" height="15" fill="rgb(246,151,27)" fg:x="7617" fg:w="1"/><text x="80.0509%" y="879.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::is_bind_group_set (1 samples, 0.01%)</title><rect x="79.8114%" y="917" width="0.0105%" height="15" fill="rgb(218,206,3)" fg:x="7618" fg:w="1"/><text x="80.0614%" y="927.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::is_index_buffer_set (1 samples, 0.01%)</title><rect x="79.8219%" y="917" width="0.0105%" height="15" fill="rgb(242,202,1)" fg:x="7619" fg:w="1"/><text x="80.0719%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="79.8219%" y="901" width="0.0105%" height="15" fill="rgb(227,185,16)" fg:x="7619" fg:w="1"/><text x="80.0719%" y="911.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (1 samples, 0.01%)</title><rect x="79.8219%" y="885" width="0.0105%" height="15" fill="rgb(241,1,14)" fg:x="7619" fg:w="1"/><text x="80.0719%" y="895.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::is_pipeline_set (13 samples, 0.14%)</title><rect x="79.8324%" y="917" width="0.1362%" height="15" fill="rgb(212,113,25)" fg:x="7620" fg:w="13"/><text x="80.0824%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.12%)</title><rect x="79.8533%" y="901" width="0.1152%" height="15" fill="rgb(247,37,43)" fg:x="7622" fg:w="11"/><text x="80.1033%" y="911.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (11 samples, 0.12%)</title><rect x="79.8533%" y="885" width="0.1152%" height="15" fill="rgb(226,54,8)" fg:x="7622" fg:w="11"/><text x="80.1033%" y="895.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (11 samples, 0.12%)</title><rect x="79.8533%" y="869" width="0.1152%" height="15" fill="rgb(251,205,25)" fg:x="7622" fg:w="11"/><text x="80.1033%" y="879.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (11 samples, 0.12%)</title><rect x="79.8533%" y="853" width="0.1152%" height="15" fill="rgb(246,87,35)" fg:x="7622" fg:w="11"/><text x="80.1033%" y="863.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (11 samples, 0.12%)</title><rect x="79.8533%" y="837" width="0.1152%" height="15" fill="rgb(251,145,46)" fg:x="7622" fg:w="11"/><text x="80.1033%" y="847.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (11 samples, 0.12%)</title><rect x="79.8533%" y="821" width="0.1152%" height="15" fill="rgb(210,210,33)" fg:x="7622" fg:w="11"/><text x="80.1033%" y="831.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::is_vertex_buffer_set (1 samples, 0.01%)</title><rect x="79.9686%" y="917" width="0.0105%" height="15" fill="rgb(221,151,11)" fg:x="7633" fg:w="1"/><text x="80.2186%" y="927.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="79.9686%" y="901" width="0.0105%" height="15" fill="rgb(208,160,28)" fg:x="7633" fg:w="1"/><text x="80.2186%" y="911.50"></text></g><g><title>core::tuple::&lt;impl core::cmp::PartialEq for (A,B)&gt;::eq (1 samples, 0.01%)</title><rect x="79.9686%" y="885" width="0.0105%" height="15" fill="rgb(243,69,29)" fg:x="7633" fg:w="1"/><text x="80.2186%" y="895.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="79.9686%" y="869" width="0.0105%" height="15" fill="rgb(224,144,4)" fg:x="7633" fg:w="1"/><text x="80.2186%" y="879.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (1 samples, 0.01%)</title><rect x="79.9686%" y="853" width="0.0105%" height="15" fill="rgb(211,140,38)" fg:x="7633" fg:w="1"/><text x="80.2186%" y="863.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (1 samples, 0.01%)</title><rect x="79.9686%" y="837" width="0.0105%" height="15" fill="rgb(252,189,15)" fg:x="7633" fg:w="1"/><text x="80.2186%" y="847.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (1 samples, 0.01%)</title><rect x="79.9686%" y="821" width="0.0105%" height="15" fill="rgb(251,175,23)" fg:x="7633" fg:w="1"/><text x="80.2186%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (11 samples, 0.12%)</title><rect x="79.9790%" y="917" width="0.1152%" height="15" fill="rgb(212,184,11)" fg:x="7634" fg:w="11"/><text x="80.2290%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (11 samples, 0.12%)</title><rect x="79.9790%" y="901" width="0.1152%" height="15" fill="rgb(217,205,6)" fg:x="7634" fg:w="11"/><text x="80.2290%" y="911.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (11 samples, 0.12%)</title><rect x="79.9790%" y="885" width="0.1152%" height="15" fill="rgb(235,45,45)" fg:x="7634" fg:w="11"/><text x="80.2290%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (11 samples, 0.12%)</title><rect x="79.9790%" y="869" width="0.1152%" height="15" fill="rgb(211,157,53)" fg:x="7634" fg:w="11"/><text x="80.2290%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_sub (11 samples, 0.12%)</title><rect x="79.9790%" y="853" width="0.1152%" height="15" fill="rgb(212,13,8)" fg:x="7634" fg:w="11"/><text x="80.2290%" y="863.50"></text></g><g><title>&lt;T as core::convert::TryInto&lt;U&gt;&gt;::try_into (1 samples, 0.01%)</title><rect x="80.1048%" y="901" width="0.0105%" height="15" fill="rgb(218,80,36)" fg:x="7646" fg:w="1"/><text x="80.3548%" y="911.50"></text></g><g><title>core::convert::num::&lt;impl core::convert::TryFrom&lt;u32&gt; for u8&gt;::try_from (1 samples, 0.01%)</title><rect x="80.1048%" y="885" width="0.0105%" height="15" fill="rgb(211,123,43)" fg:x="7646" fg:w="1"/><text x="80.3548%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (23 samples, 0.24%)</title><rect x="80.1152%" y="901" width="0.2410%" height="15" fill="rgb(206,165,2)" fg:x="7647" fg:w="23"/><text x="80.3652%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (23 samples, 0.24%)</title><rect x="80.1152%" y="885" width="0.2410%" height="15" fill="rgb(248,63,35)" fg:x="7647" fg:w="23"/><text x="80.3652%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (23 samples, 0.24%)</title><rect x="80.1152%" y="869" width="0.2410%" height="15" fill="rgb(219,133,41)" fg:x="7647" fg:w="23"/><text x="80.3652%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (23 samples, 0.24%)</title><rect x="80.1152%" y="853" width="0.2410%" height="15" fill="rgb(206,175,46)" fg:x="7647" fg:w="23"/><text x="80.3652%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (23 samples, 0.24%)</title><rect x="80.1152%" y="837" width="0.2410%" height="15" fill="rgb(224,41,35)" fg:x="7647" fg:w="23"/><text x="80.3652%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="80.3562%" y="901" width="0.0210%" height="15" fill="rgb(226,113,24)" fg:x="7670" fg:w="2"/><text x="80.6062%" y="911.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="80.3667%" y="885" width="0.0105%" height="15" fill="rgb(219,51,41)" fg:x="7671" fg:w="1"/><text x="80.6167%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;tracing::span::Entered&gt; (1 samples, 0.01%)</title><rect x="80.3772%" y="901" width="0.0105%" height="15" fill="rgb(220,145,47)" fg:x="7672" fg:w="1"/><text x="80.6272%" y="911.50"></text></g><g><title>&lt;tracing::span::Entered as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="80.3772%" y="885" width="0.0105%" height="15" fill="rgb(239,121,47)" fg:x="7672" fg:w="1"/><text x="80.6272%" y="895.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="80.3772%" y="869" width="0.0105%" height="15" fill="rgb(207,60,40)" fg:x="7672" fg:w="1"/><text x="80.6272%" y="879.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (157 samples, 1.64%)</title><rect x="78.7533%" y="933" width="1.6448%" height="15" fill="rgb(224,229,11)" fg:x="7517" fg:w="157"/><text x="79.0033%" y="943.50"></text></g><g><title>wgpu_render_pass_set_bind_group (29 samples, 0.30%)</title><rect x="80.0943%" y="917" width="0.3038%" height="15" fill="rgb(252,28,32)" fg:x="7645" fg:w="29"/><text x="80.3443%" y="927.50"></text></g><g><title>tracing::span::Span::enter (1 samples, 0.01%)</title><rect x="80.3876%" y="901" width="0.0105%" height="15" fill="rgb(207,52,49)" fg:x="7673" fg:w="1"/><text x="80.6376%" y="911.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="80.3876%" y="885" width="0.0105%" height="15" fill="rgb(243,51,50)" fg:x="7673" fg:w="1"/><text x="80.6376%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="80.3981%" y="853" width="0.0105%" height="15" fill="rgb(212,92,21)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="80.3981%" y="837" width="0.0105%" height="15" fill="rgb(230,183,50)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="80.3981%" y="821" width="0.0105%" height="15" fill="rgb(225,48,9)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="831.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="80.3981%" y="805" width="0.0105%" height="15" fill="rgb(254,44,4)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="815.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="80.3981%" y="789" width="0.0105%" height="15" fill="rgb(252,128,37)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="799.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_render_pass::{{closure}} (1 samples, 0.01%)</title><rect x="80.3981%" y="773" width="0.0105%" height="15" fill="rgb(227,178,8)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="783.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_wgpu_color_attachment_descriptor (1 samples, 0.01%)</title><rect x="80.3981%" y="757" width="0.0105%" height="15" fill="rgb(205,206,32)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="767.50"></text></g><g><title>&lt;T as bevy_wgpu::wgpu_type_converter::WgpuInto&lt;U&gt;&gt;::wgpu_into (1 samples, 0.01%)</title><rect x="80.3981%" y="741" width="0.0105%" height="15" fill="rgb(220,218,22)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="751.50"></text></g><g><title>&lt;wgpu::Operations&lt;U&gt; as bevy_wgpu::wgpu_type_converter::WgpuFrom&lt;&amp;bevy_render::pass::ops::Operations&lt;T&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="80.3981%" y="725" width="0.0105%" height="15" fill="rgb(236,41,28)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="735.50"></text></g><g><title>&lt;T as bevy_wgpu::wgpu_type_converter::WgpuInto&lt;U&gt;&gt;::wgpu_into (1 samples, 0.01%)</title><rect x="80.3981%" y="709" width="0.0105%" height="15" fill="rgb(219,37,7)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="719.50"></text></g><g><title>&lt;wgpu::LoadOp&lt;wgpu_types::Color&gt; as bevy_wgpu::wgpu_type_converter::WgpuFrom&lt;&amp;bevy_render::pass::ops::LoadOp&lt;bevy_render::color::Color&gt;&gt;&gt;::from (1 samples, 0.01%)</title><rect x="80.3981%" y="693" width="0.0105%" height="15" fill="rgb(206,160,15)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="703.50"></text></g><g><title>&lt;T as bevy_wgpu::wgpu_type_converter::WgpuInto&lt;U&gt;&gt;::wgpu_into (1 samples, 0.01%)</title><rect x="80.3981%" y="677" width="0.0105%" height="15" fill="rgb(208,82,21)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="687.50"></text></g><g><title>&lt;wgpu_types::Color as bevy_wgpu::wgpu_type_converter::WgpuFrom&lt;bevy_render::color::Color&gt;&gt;::from (1 samples, 0.01%)</title><rect x="80.3981%" y="661" width="0.0105%" height="15" fill="rgb(226,130,25)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="671.50"></text></g><g><title>bevy_render::color::Color::as_linear_rgba_f32 (1 samples, 0.01%)</title><rect x="80.3981%" y="645" width="0.0105%" height="15" fill="rgb(212,72,24)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="655.50"></text></g><g><title>&lt;f32 as bevy_render::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (1 samples, 0.01%)</title><rect x="80.3981%" y="629" width="0.0105%" height="15" fill="rgb(206,28,16)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="639.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (1 samples, 0.01%)</title><rect x="80.3981%" y="613" width="0.0105%" height="15" fill="rgb(249,41,5)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="623.50"></text></g><g><title>[libm-2.33.so] (1 samples, 0.01%)</title><rect x="80.3981%" y="597" width="0.0105%" height="15" fill="rgb(233,96,48)" fg:x="7674" fg:w="1"/><text x="80.6481%" y="607.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (159 samples, 1.67%)</title><rect x="78.7533%" y="965" width="1.6658%" height="15" fill="rgb(240,198,11)" fg:x="7517" fg:w="159"/><text x="79.0033%" y="975.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (159 samples, 1.67%)</title><rect x="78.7533%" y="949" width="1.6658%" height="15" fill="rgb(209,175,35)" fg:x="7517" fg:w="159"/><text x="79.0033%" y="959.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::create_render_pass (2 samples, 0.02%)</title><rect x="80.3981%" y="933" width="0.0210%" height="15" fill="rgb(214,40,51)" fg:x="7674" fg:w="2"/><text x="80.6481%" y="943.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2 samples, 0.02%)</title><rect x="80.3981%" y="917" width="0.0210%" height="15" fill="rgb(252,56,4)" fg:x="7674" fg:w="2"/><text x="80.6481%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="80.3981%" y="901" width="0.0210%" height="15" fill="rgb(219,131,5)" fg:x="7674" fg:w="2"/><text x="80.6481%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="80.3981%" y="885" width="0.0210%" height="15" fill="rgb(223,67,53)" fg:x="7674" fg:w="2"/><text x="80.6481%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2 samples, 0.02%)</title><rect x="80.3981%" y="869" width="0.0210%" height="15" fill="rgb(227,154,8)" fg:x="7674" fg:w="2"/><text x="80.6481%" y="879.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (1 samples, 0.01%)</title><rect x="80.4086%" y="853" width="0.0105%" height="15" fill="rgb(216,174,51)" fg:x="7675" fg:w="1"/><text x="80.6586%" y="863.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="80.4086%" y="837" width="0.0105%" height="15" fill="rgb(239,60,34)" fg:x="7675" fg:w="1"/><text x="80.6586%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (1 samples, 0.01%)</title><rect x="80.4086%" y="821" width="0.0105%" height="15" fill="rgb(236,165,48)" fg:x="7675" fg:w="1"/><text x="80.6586%" y="831.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (1 samples, 0.01%)</title><rect x="80.4086%" y="805" width="0.0105%" height="15" fill="rgb(210,37,26)" fg:x="7675" fg:w="1"/><text x="80.6586%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (1 samples, 0.01%)</title><rect x="80.4086%" y="789" width="0.0105%" height="15" fill="rgb(211,3,17)" fg:x="7675" fg:w="1"/><text x="80.6586%" y="799.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (1 samples, 0.01%)</title><rect x="80.4086%" y="773" width="0.0105%" height="15" fill="rgb(234,88,49)" fg:x="7675" fg:w="1"/><text x="80.6586%" y="783.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="80.4086%" y="757" width="0.0105%" height="15" fill="rgb(233,40,17)" fg:x="7675" fg:w="1"/><text x="80.6586%" y="767.50"></text></g><g><title>__rust_alloc (1 samples, 0.01%)</title><rect x="80.4086%" y="741" width="0.0105%" height="15" fill="rgb(235,127,31)" fg:x="7675" fg:w="1"/><text x="80.6586%" y="751.50"></text></g><g><title>__strcspn_sse42 (1 samples, 0.01%)</title><rect x="80.4191%" y="725" width="0.0105%" height="15" fill="rgb(248,167,17)" fg:x="7676" fg:w="1"/><text x="80.6691%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (2 samples, 0.02%)</title><rect x="80.4191%" y="949" width="0.0210%" height="15" fill="rgb(218,179,8)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="959.50"></text></g><g><title>wgpu::Device::create_swap_chain (2 samples, 0.02%)</title><rect x="80.4191%" y="933" width="0.0210%" height="15" fill="rgb(216,92,14)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (2 samples, 0.02%)</title><rect x="80.4191%" y="917" width="0.0210%" height="15" fill="rgb(221,198,46)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="927.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (2 samples, 0.02%)</title><rect x="80.4191%" y="901" width="0.0210%" height="15" fill="rgb(244,7,25)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="911.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::Surface&lt;gfx_backend_vulkan::Backend&gt;&gt;::supports_queue_family (2 samples, 0.02%)</title><rect x="80.4191%" y="885" width="0.0210%" height="15" fill="rgb(233,75,6)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="895.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_support (2 samples, 0.02%)</title><rect x="80.4191%" y="869" width="0.0210%" height="15" fill="rgb(240,189,41)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="879.50"></text></g><g><title>ash::vk::extensions::KhrSurfaceFn::get_physical_device_surface_support_khr (2 samples, 0.02%)</title><rect x="80.4191%" y="853" width="0.0210%" height="15" fill="rgb(237,157,21)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="80.4191%" y="837" width="0.0210%" height="15" fill="rgb(210,136,49)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="80.4191%" y="821" width="0.0210%" height="15" fill="rgb(210,68,29)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="831.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="80.4191%" y="805" width="0.0210%" height="15" fill="rgb(247,207,20)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="815.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="80.4191%" y="789" width="0.0210%" height="15" fill="rgb(224,73,48)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="799.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="80.4191%" y="773" width="0.0210%" height="15" fill="rgb(215,136,47)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="783.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="80.4191%" y="757" width="0.0210%" height="15" fill="rgb(232,222,16)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="767.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="80.4191%" y="741" width="0.0210%" height="15" fill="rgb(249,202,47)" fg:x="7676" fg:w="2"/><text x="80.6691%" y="751.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="80.4295%" y="725" width="0.0105%" height="15" fill="rgb(236,56,8)" fg:x="7677" fg:w="1"/><text x="80.6795%" y="735.50"></text></g><g><title>ash::device::DeviceV1_0::wait_for_fences (1 samples, 0.01%)</title><rect x="80.4400%" y="853" width="0.0105%" height="15" fill="rgb(222,6,3)" fg:x="7678" fg:w="1"/><text x="80.6900%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="80.4400%" y="837" width="0.0105%" height="15" fill="rgb(254,222,28)" fg:x="7678" fg:w="1"/><text x="80.6900%" y="847.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (4 samples, 0.04%)</title><rect x="80.4505%" y="789" width="0.0419%" height="15" fill="rgb(219,57,23)" fg:x="7679" fg:w="4"/><text x="80.7005%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="80.4819%" y="773" width="0.0105%" height="15" fill="rgb(251,106,48)" fg:x="7682" fg:w="1"/><text x="80.7319%" y="783.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="80.4819%" y="757" width="0.0105%" height="15" fill="rgb(242,2,23)" fg:x="7682" fg:w="1"/><text x="80.7319%" y="767.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (9 samples, 0.09%)</title><rect x="80.4191%" y="965" width="0.0943%" height="15" fill="rgb(212,109,31)" fg:x="7676" fg:w="9"/><text x="80.6691%" y="975.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::next_swap_chain_texture (7 samples, 0.07%)</title><rect x="80.4400%" y="949" width="0.0733%" height="15" fill="rgb(241,9,22)" fg:x="7678" fg:w="7"/><text x="80.6900%" y="959.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::try_next_swap_chain_texture (7 samples, 0.07%)</title><rect x="80.4400%" y="933" width="0.0733%" height="15" fill="rgb(209,64,27)" fg:x="7678" fg:w="7"/><text x="80.6900%" y="943.50"></text></g><g><title>wgpu::SwapChain::get_current_frame (7 samples, 0.07%)</title><rect x="80.4400%" y="917" width="0.0733%" height="15" fill="rgb(248,13,44)" fg:x="7678" fg:w="7"/><text x="80.6900%" y="927.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_get_current_texture_view (7 samples, 0.07%)</title><rect x="80.4400%" y="901" width="0.0733%" height="15" fill="rgb(213,86,6)" fg:x="7678" fg:w="7"/><text x="80.6900%" y="911.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_get_current_texture_view (7 samples, 0.07%)</title><rect x="80.4400%" y="885" width="0.0733%" height="15" fill="rgb(247,11,18)" fg:x="7678" fg:w="7"/><text x="80.6900%" y="895.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::acquire_image (7 samples, 0.07%)</title><rect x="80.4400%" y="869" width="0.0733%" height="15" fill="rgb(252,31,11)" fg:x="7678" fg:w="7"/><text x="80.6900%" y="879.50"></text></g><g><title>gfx_backend_vulkan::window::Swapchain::acquire_image (6 samples, 0.06%)</title><rect x="80.4505%" y="853" width="0.0629%" height="15" fill="rgb(215,63,51)" fg:x="7679" fg:w="6"/><text x="80.7005%" y="863.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::acquire_next_image (6 samples, 0.06%)</title><rect x="80.4505%" y="837" width="0.0629%" height="15" fill="rgb(222,180,4)" fg:x="7679" fg:w="6"/><text x="80.7005%" y="847.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::acquire_next_image_khr (6 samples, 0.06%)</title><rect x="80.4505%" y="821" width="0.0629%" height="15" fill="rgb(233,4,23)" fg:x="7679" fg:w="6"/><text x="80.7005%" y="831.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (6 samples, 0.06%)</title><rect x="80.4505%" y="805" width="0.0629%" height="15" fill="rgb(230,116,22)" fg:x="7679" fg:w="6"/><text x="80.7005%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="80.4924%" y="789" width="0.0210%" height="15" fill="rgb(222,20,14)" fg:x="7683" fg:w="2"/><text x="80.7424%" y="799.50"></text></g><g><title>__GI___pthread_mutex_unlock (1 samples, 0.01%)</title><rect x="80.5029%" y="773" width="0.0105%" height="15" fill="rgb(210,176,43)" fg:x="7684" fg:w="1"/><text x="80.7529%" y="783.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (1 samples, 0.01%)</title><rect x="80.6600%" y="869" width="0.0105%" height="15" fill="rgb(219,67,32)" fg:x="7699" fg:w="1"/><text x="80.9100%" y="879.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="80.6705%" y="869" width="0.0210%" height="15" fill="rgb(228,91,39)" fg:x="7700" fg:w="2"/><text x="80.9205%" y="879.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="80.6705%" y="853" width="0.0210%" height="15" fill="rgb(254,63,14)" fg:x="7700" fg:w="2"/><text x="80.9205%" y="863.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="80.6705%" y="837" width="0.0210%" height="15" fill="rgb(216,171,39)" fg:x="7700" fg:w="2"/><text x="80.9205%" y="847.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="80.8591%" y="837" width="0.0105%" height="15" fill="rgb(248,68,25)" fg:x="7718" fg:w="1"/><text x="81.1091%" y="847.50"></text></g><g><title>&lt;core::iter::sources::once::Once&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="80.8591%" y="821" width="0.0105%" height="15" fill="rgb(239,63,16)" fg:x="7718" fg:w="1"/><text x="81.1091%" y="831.50"></text></g><g><title>&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="80.8591%" y="805" width="0.0105%" height="15" fill="rgb(225,111,43)" fg:x="7718" fg:w="1"/><text x="81.1091%" y="815.50"></text></g><g><title>&lt;core::option::Item&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::size_hint (1 samples, 0.01%)</title><rect x="80.8591%" y="789" width="0.0105%" height="15" fill="rgb(246,165,17)" fg:x="7718" fg:w="1"/><text x="81.1091%" y="799.50"></text></g><g><title>inplace_it::fixed_array::indirect (11 samples, 0.12%)</title><rect x="80.9010%" y="789" width="0.1152%" height="15" fill="rgb(208,124,1)" fg:x="7722" fg:w="11"/><text x="81.1510%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (400 samples, 4.19%)</title><rect x="81.0686%" y="725" width="4.1907%" height="15" fill="rgb(234,147,33)" fg:x="7738" fg:w="400"/><text x="81.3186%" y="735.50">[libn..</text></g><g><title>[libnvidia-glcore.so.470.63.01] (384 samples, 4.02%)</title><rect x="81.2362%" y="709" width="4.0230%" height="15" fill="rgb(240,86,30)" fg:x="7754" fg:w="384"/><text x="81.4862%" y="719.50">[lib..</text></g><g><title>[libnvidia-glcore.so.470.63.01] (20 samples, 0.21%)</title><rect x="85.0498%" y="693" width="0.2095%" height="15" fill="rgb(237,34,51)" fg:x="8118" fg:w="20"/><text x="85.2998%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (10 samples, 0.10%)</title><rect x="85.1545%" y="677" width="0.1048%" height="15" fill="rgb(232,131,41)" fg:x="8128" fg:w="10"/><text x="85.4045%" y="687.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer::{{closure}} (404 samples, 4.23%)</title><rect x="81.0477%" y="757" width="4.2326%" height="15" fill="rgb(227,129,53)" fg:x="7736" fg:w="404"/><text x="81.2977%" y="767.50">&lt;gfx_..</text></g><g><title>ash::device::DeviceV1_0::cmd_copy_buffer (403 samples, 4.22%)</title><rect x="81.0581%" y="741" width="4.2221%" height="15" fill="rgb(230,90,35)" fg:x="7737" fg:w="403"/><text x="81.3081%" y="751.50">ash::..</text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_copy_buffer (2 samples, 0.02%)</title><rect x="85.2593%" y="725" width="0.0210%" height="15" fill="rgb(248,88,27)" fg:x="8138" fg:w="2"/><text x="85.5093%" y="735.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (422 samples, 4.42%)</title><rect x="80.8696%" y="837" width="4.4212%" height="15" fill="rgb(223,18,17)" fg:x="7719" fg:w="422"/><text x="81.1196%" y="847.50">inpla..</text></g><g><title>inplace_it::fixed_array::try_inplace_array (421 samples, 4.41%)</title><rect x="80.8800%" y="821" width="4.4107%" height="15" fill="rgb(241,11,10)" fg:x="7720" fg:w="421"/><text x="81.1300%" y="831.50">inpla..</text></g><g><title>inplace_it::fixed_array::indirect (419 samples, 4.39%)</title><rect x="80.9010%" y="805" width="4.3897%" height="15" fill="rgb(232,111,52)" fg:x="7722" fg:w="419"/><text x="81.1510%" y="815.50">inpla..</text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (408 samples, 4.27%)</title><rect x="81.0162%" y="789" width="4.2745%" height="15" fill="rgb(228,67,8)" fg:x="7733" fg:w="408"/><text x="81.2662%" y="799.50">inpla..</text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (407 samples, 4.26%)</title><rect x="81.0267%" y="773" width="4.2640%" height="15" fill="rgb(251,168,31)" fg:x="7734" fg:w="407"/><text x="81.2767%" y="783.50">inpla..</text></g><g><title>inplace_it::guards::uninitialized_slice_memory_guard::UninitializedSliceMemoryGuard&lt;T&gt;::init_with_dyn_iter (1 samples, 0.01%)</title><rect x="85.2803%" y="757" width="0.0105%" height="15" fill="rgb(249,164,11)" fg:x="8140" fg:w="1"/><text x="85.5303%" y="767.50"></text></g><g><title>inplace_it::guards::slice_memory_guard::SliceMemoryGuard&lt;T&gt;::new_from_iter (1 samples, 0.01%)</title><rect x="85.2803%" y="741" width="0.0105%" height="15" fill="rgb(239,81,9)" fg:x="8140" fg:w="1"/><text x="85.5303%" y="751.50"></text></g><g><title>core::ptr::write (1 samples, 0.01%)</title><rect x="85.2803%" y="725" width="0.0105%" height="15" fill="rgb(222,145,38)" fg:x="8140" fg:w="1"/><text x="85.5303%" y="735.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (442 samples, 4.63%)</title><rect x="80.6915%" y="869" width="4.6307%" height="15" fill="rgb(238,80,54)" fg:x="7702" fg:w="442"/><text x="80.9415%" y="879.50">&lt;gfx_..</text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (439 samples, 4.60%)</title><rect x="80.7229%" y="853" width="4.5993%" height="15" fill="rgb(237,116,16)" fg:x="7705" fg:w="439"/><text x="80.9729%" y="863.50">inpla..</text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (3 samples, 0.03%)</title><rect x="85.2907%" y="837" width="0.0314%" height="15" fill="rgb(218,135,19)" fg:x="8141" fg:w="3"/><text x="85.5407%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (5 samples, 0.05%)</title><rect x="85.3222%" y="869" width="0.0524%" height="15" fill="rgb(216,207,44)" fg:x="8144" fg:w="5"/><text x="85.5722%" y="879.50"></text></g><g><title>core::iter::adapters::chain::Chain&lt;A,B&gt;::new (3 samples, 0.03%)</title><rect x="85.3431%" y="853" width="0.0314%" height="15" fill="rgb(226,152,40)" fg:x="8146" fg:w="3"/><text x="85.5931%" y="863.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (27 samples, 0.28%)</title><rect x="85.3745%" y="869" width="0.2829%" height="15" fill="rgb(219,98,35)" fg:x="8149" fg:w="27"/><text x="85.6245%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::as_ref (1 samples, 0.01%)</title><rect x="85.6574%" y="869" width="0.0105%" height="15" fill="rgb(222,136,46)" fg:x="8176" fg:w="1"/><text x="85.9074%" y="879.50"></text></g><g><title>core::option::Option&lt;T&gt;::ok_or (1 samples, 0.01%)</title><rect x="85.6679%" y="869" width="0.0105%" height="15" fill="rgb(222,71,8)" fg:x="8177" fg:w="1"/><text x="85.9179%" y="879.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="85.6888%" y="821" width="0.0210%" height="15" fill="rgb(209,89,53)" fg:x="8179" fg:w="2"/><text x="85.9388%" y="831.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (2 samples, 0.02%)</title><rect x="85.6888%" y="805" width="0.0210%" height="15" fill="rgb(210,97,51)" fg:x="8179" fg:w="2"/><text x="85.9388%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::iter::adapters::map::Map&lt;alloc::vec::drain::Drain&lt;wgpu_core::track::PendingTransition&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt;,wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;wgpu_core::hub::IdentityManagerFactory&gt;&gt;::command_encoder_copy_buffer_to_buffer&lt;gfx_backend_vulkan::Backend&gt;::{{closure}}&gt;&gt; (5 samples, 0.05%)</title><rect x="85.6784%" y="869" width="0.0524%" height="15" fill="rgb(248,65,21)" fg:x="8178" fg:w="5"/><text x="85.9284%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::drain::Drain&lt;wgpu_core::track::PendingTransition&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt;&gt; (5 samples, 0.05%)</title><rect x="85.6784%" y="853" width="0.0524%" height="15" fill="rgb(222,5,31)" fg:x="8178" fg:w="5"/><text x="85.9284%" y="863.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (5 samples, 0.05%)</title><rect x="85.6784%" y="837" width="0.0524%" height="15" fill="rgb(241,16,30)" fg:x="8178" fg:w="5"/><text x="85.9284%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;wgpu_core::track::PendingTransition&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;,alloc::alloc::Global&gt;&gt; (2 samples, 0.02%)</title><rect x="85.7098%" y="821" width="0.0210%" height="15" fill="rgb(215,86,30)" fg:x="8181" fg:w="2"/><text x="85.9598%" y="831.50"></text></g><g><title>&lt;&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (2 samples, 0.02%)</title><rect x="85.7098%" y="805" width="0.0210%" height="15" fill="rgb(235,26,44)" fg:x="8181" fg:w="2"/><text x="85.9598%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (22 samples, 0.23%)</title><rect x="85.7307%" y="869" width="0.2305%" height="15" fill="rgb(228,147,14)" fg:x="8183" fg:w="22"/><text x="85.9807%" y="879.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (22 samples, 0.23%)</title><rect x="85.7307%" y="853" width="0.2305%" height="15" fill="rgb(253,38,50)" fg:x="8183" fg:w="22"/><text x="85.9807%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (22 samples, 0.23%)</title><rect x="85.7307%" y="837" width="0.2305%" height="15" fill="rgb(251,151,16)" fg:x="8183" fg:w="22"/><text x="85.9807%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (22 samples, 0.23%)</title><rect x="85.7307%" y="821" width="0.2305%" height="15" fill="rgb(224,64,19)" fg:x="8183" fg:w="22"/><text x="85.9807%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_sub (22 samples, 0.23%)</title><rect x="85.7307%" y="805" width="0.2305%" height="15" fill="rgb(235,214,47)" fg:x="8183" fg:w="22"/><text x="85.9807%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (14 samples, 0.15%)</title><rect x="85.9612%" y="869" width="0.1467%" height="15" fill="rgb(218,15,19)" fg:x="8205" fg:w="14"/><text x="86.2112%" y="879.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (14 samples, 0.15%)</title><rect x="85.9612%" y="853" width="0.1467%" height="15" fill="rgb(247,209,3)" fg:x="8205" fg:w="14"/><text x="86.2112%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (14 samples, 0.15%)</title><rect x="85.9612%" y="837" width="0.1467%" height="15" fill="rgb(217,29,2)" fg:x="8205" fg:w="14"/><text x="86.2112%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (14 samples, 0.15%)</title><rect x="85.9612%" y="821" width="0.1467%" height="15" fill="rgb(234,9,9)" fg:x="8205" fg:w="14"/><text x="86.2112%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (14 samples, 0.15%)</title><rect x="85.9612%" y="805" width="0.1467%" height="15" fill="rgb(207,43,14)" fg:x="8205" fg:w="14"/><text x="86.2112%" y="815.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (2 samples, 0.02%)</title><rect x="86.1289%" y="837" width="0.0210%" height="15" fill="rgb(216,219,36)" fg:x="8221" fg:w="2"/><text x="86.3789%" y="847.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (2 samples, 0.02%)</title><rect x="86.1289%" y="821" width="0.0210%" height="15" fill="rgb(238,12,26)" fg:x="8221" fg:w="2"/><text x="86.3789%" y="831.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::get_encoder_mut (7 samples, 0.07%)</title><rect x="86.1079%" y="869" width="0.0733%" height="15" fill="rgb(226,67,30)" fg:x="8219" fg:w="7"/><text x="86.3579%" y="879.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (6 samples, 0.06%)</title><rect x="86.1184%" y="853" width="0.0629%" height="15" fill="rgb(229,154,7)" fg:x="8220" fg:w="6"/><text x="86.3684%" y="863.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (3 samples, 0.03%)</title><rect x="86.1498%" y="837" width="0.0314%" height="15" fill="rgb(249,90,18)" fg:x="8223" fg:w="3"/><text x="86.3998%" y="847.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (2 samples, 0.02%)</title><rect x="86.1603%" y="821" width="0.0210%" height="15" fill="rgb(223,53,15)" fg:x="8224" fg:w="2"/><text x="86.4103%" y="831.50"></text></g><g><title>wgpu_core::device::all_buffer_stages (2 samples, 0.02%)</title><rect x="86.1812%" y="869" width="0.0210%" height="15" fill="rgb(253,86,38)" fg:x="8226" fg:w="2"/><text x="86.4312%" y="879.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="86.2022%" y="805" width="0.0105%" height="15" fill="rgb(222,198,9)" fg:x="8228" fg:w="1"/><text x="86.4522%" y="815.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="86.2022%" y="789" width="0.0105%" height="15" fill="rgb(240,146,25)" fg:x="8228" fg:w="1"/><text x="86.4522%" y="799.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (11 samples, 0.12%)</title><rect x="86.2022%" y="869" width="0.1152%" height="15" fill="rgb(225,38,10)" fg:x="8228" fg:w="11"/><text x="86.4522%" y="879.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (11 samples, 0.12%)</title><rect x="86.2022%" y="853" width="0.1152%" height="15" fill="rgb(246,93,4)" fg:x="8228" fg:w="11"/><text x="86.4522%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (11 samples, 0.12%)</title><rect x="86.2022%" y="837" width="0.1152%" height="15" fill="rgb(222,55,18)" fg:x="8228" fg:w="11"/><text x="86.4522%" y="847.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (11 samples, 0.12%)</title><rect x="86.2022%" y="821" width="0.1152%" height="15" fill="rgb(233,137,48)" fg:x="8228" fg:w="11"/><text x="86.4522%" y="831.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (10 samples, 0.10%)</title><rect x="86.2127%" y="805" width="0.1048%" height="15" fill="rgb(214,8,54)" fg:x="8229" fg:w="10"/><text x="86.4627%" y="815.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (10 samples, 0.10%)</title><rect x="86.2127%" y="789" width="0.1048%" height="15" fill="rgb(206,75,4)" fg:x="8229" fg:w="10"/><text x="86.4627%" y="799.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (18 samples, 0.19%)</title><rect x="86.3174%" y="869" width="0.1886%" height="15" fill="rgb(238,171,14)" fg:x="8239" fg:w="18"/><text x="86.5674%" y="879.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (18 samples, 0.19%)</title><rect x="86.3174%" y="853" width="0.1886%" height="15" fill="rgb(233,70,41)" fg:x="8239" fg:w="18"/><text x="86.5674%" y="863.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (18 samples, 0.19%)</title><rect x="86.3174%" y="837" width="0.1886%" height="15" fill="rgb(214,68,36)" fg:x="8239" fg:w="18"/><text x="86.5674%" y="847.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (18 samples, 0.19%)</title><rect x="86.3174%" y="821" width="0.1886%" height="15" fill="rgb(223,29,5)" fg:x="8239" fg:w="18"/><text x="86.5674%" y="831.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (18 samples, 0.19%)</title><rect x="86.3174%" y="805" width="0.1886%" height="15" fill="rgb(251,22,40)" fg:x="8239" fg:w="18"/><text x="86.5674%" y="815.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (3 samples, 0.03%)</title><rect x="86.5060%" y="853" width="0.0314%" height="15" fill="rgb(210,67,41)" fg:x="8257" fg:w="3"/><text x="86.7560%" y="863.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (2 samples, 0.02%)</title><rect x="86.5165%" y="837" width="0.0210%" height="15" fill="rgb(225,177,31)" fg:x="8258" fg:w="2"/><text x="86.7665%" y="847.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (1 samples, 0.01%)</title><rect x="86.6108%" y="821" width="0.0105%" height="15" fill="rgb(221,229,11)" fg:x="8267" fg:w="1"/><text x="86.8608%" y="831.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (5 samples, 0.05%)</title><rect x="86.6003%" y="837" width="0.0524%" height="15" fill="rgb(247,172,52)" fg:x="8266" fg:w="5"/><text x="86.8503%" y="847.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::iter (3 samples, 0.03%)</title><rect x="86.6213%" y="821" width="0.0314%" height="15" fill="rgb(212,73,19)" fg:x="8268" fg:w="3"/><text x="86.8713%" y="831.50"></text></g><g><title>core::slice::iter::Iter&lt;T&gt;::new (3 samples, 0.03%)</title><rect x="86.6213%" y="805" width="0.0314%" height="15" fill="rgb(244,7,46)" fg:x="8268" fg:w="3"/><text x="86.8713%" y="815.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (3 samples, 0.03%)</title><rect x="86.6213%" y="789" width="0.0314%" height="15" fill="rgb(230,113,20)" fg:x="8268" fg:w="3"/><text x="86.8713%" y="799.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (3 samples, 0.03%)</title><rect x="86.6213%" y="773" width="0.0314%" height="15" fill="rgb(209,97,30)" fg:x="8268" fg:w="3"/><text x="86.8713%" y="783.50"></text></g><g><title>&lt;wgpu_core::id::Id&lt;T&gt; as wgpu_core::id::TypedId&gt;::unzip (3 samples, 0.03%)</title><rect x="86.6841%" y="821" width="0.0314%" height="15" fill="rgb(243,89,12)" fg:x="8274" fg:w="3"/><text x="86.9341%" y="831.50"></text></g><g><title>wgpu_core::id::Id&lt;T&gt;::backend (3 samples, 0.03%)</title><rect x="86.6841%" y="805" width="0.0314%" height="15" fill="rgb(228,32,19)" fg:x="8274" fg:w="3"/><text x="86.9341%" y="815.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="86.7575%" y="773" width="0.0733%" height="15" fill="rgb(248,25,17)" fg:x="8281" fg:w="7"/><text x="87.0075%" y="783.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="86.7575%" y="757" width="0.0733%" height="15" fill="rgb(232,161,29)" fg:x="8281" fg:w="7"/><text x="87.0075%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (3 samples, 0.03%)</title><rect x="86.7994%" y="741" width="0.0314%" height="15" fill="rgb(251,192,11)" fg:x="8285" fg:w="3"/><text x="87.0494%" y="751.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::remove_lowest_bit (1 samples, 0.01%)</title><rect x="86.8203%" y="725" width="0.0105%" height="15" fill="rgb(240,47,32)" fg:x="8287" fg:w="1"/><text x="87.0703%" y="735.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (2 samples, 0.02%)</title><rect x="86.8308%" y="725" width="0.0210%" height="15" fill="rgb(250,16,45)" fg:x="8288" fg:w="2"/><text x="87.0808%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (14 samples, 0.15%)</title><rect x="86.7156%" y="789" width="0.1467%" height="15" fill="rgb(227,217,42)" fg:x="8277" fg:w="14"/><text x="86.9656%" y="799.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="86.8308%" y="773" width="0.0314%" height="15" fill="rgb(206,82,54)" fg:x="8288" fg:w="3"/><text x="87.0808%" y="783.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="86.8308%" y="757" width="0.0314%" height="15" fill="rgb(243,145,25)" fg:x="8288" fg:w="3"/><text x="87.0808%" y="767.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="86.8308%" y="741" width="0.0314%" height="15" fill="rgb(207,166,24)" fg:x="8288" fg:w="3"/><text x="87.0808%" y="751.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="86.8518%" y="725" width="0.0105%" height="15" fill="rgb(215,191,44)" fg:x="8290" fg:w="1"/><text x="87.1018%" y="735.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="86.8518%" y="709" width="0.0105%" height="15" fill="rgb(234,218,51)" fg:x="8290" fg:w="1"/><text x="87.1018%" y="719.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="86.8518%" y="693" width="0.0105%" height="15" fill="rgb(245,133,21)" fg:x="8290" fg:w="1"/><text x="87.1018%" y="703.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="86.8518%" y="677" width="0.0105%" height="15" fill="rgb(230,136,45)" fg:x="8290" fg:w="1"/><text x="87.1018%" y="687.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (16 samples, 0.17%)</title><rect x="86.7156%" y="821" width="0.1676%" height="15" fill="rgb(247,63,43)" fg:x="8277" fg:w="16"/><text x="86.9656%" y="831.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (16 samples, 0.17%)</title><rect x="86.7156%" y="805" width="0.1676%" height="15" fill="rgb(254,223,31)" fg:x="8277" fg:w="16"/><text x="86.9656%" y="815.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (2 samples, 0.02%)</title><rect x="86.8622%" y="789" width="0.0210%" height="15" fill="rgb(236,185,0)" fg:x="8291" fg:w="2"/><text x="87.1122%" y="799.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (23 samples, 0.24%)</title><rect x="86.6527%" y="837" width="0.2410%" height="15" fill="rgb(231,139,46)" fg:x="8271" fg:w="23"/><text x="86.9027%" y="847.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (1 samples, 0.01%)</title><rect x="86.8832%" y="821" width="0.0105%" height="15" fill="rgb(236,147,31)" fg:x="8293" fg:w="1"/><text x="87.1332%" y="831.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (3,129 samples, 32.78%)</title><rect x="54.1435%" y="1237" width="32.7816%" height="15" fill="rgb(225,222,22)" fg:x="5168" fg:w="3129"/><text x="54.3935%" y="1247.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (3,129 samples, 32.78%)</title><rect x="54.1435%" y="1221" width="32.7816%" height="15" fill="rgb(225,193,14)" fg:x="5168" fg:w="3129"/><text x="54.3935%" y="1231.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (3,129 samples, 32.78%)</title><rect x="54.1435%" y="1205" width="32.7816%" height="15" fill="rgb(253,193,46)" fg:x="5168" fg:w="3129"/><text x="54.3935%" y="1215.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (3,129 samples, 32.78%)</title><rect x="54.1435%" y="1189" width="32.7816%" height="15" fill="rgb(218,187,39)" fg:x="5168" fg:w="3129"/><text x="54.3935%" y="1199.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::ru..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (3,129 samples, 32.78%)</title><rect x="54.1435%" y="1173" width="32.7816%" height="15" fill="rgb(227,162,48)" fg:x="5168" fg:w="3129"/><text x="54.3935%" y="1183.50">winit::platform_impl::platform::sticky_exit_callback</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (3,129 samples, 32.78%)</title><rect x="54.1435%" y="1157" width="32.7816%" height="15" fill="rgb(222,25,5)" fg:x="5168" fg:w="3129"/><text x="54.3935%" y="1167.50">bevy_winit::winit_runner_with::{{closure}}</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (3,129 samples, 32.78%)</title><rect x="54.1435%" y="1141" width="32.7816%" height="15" fill="rgb(211,205,16)" fg:x="5168" fg:w="3129"/><text x="54.3935%" y="1151.50">&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (3,129 samples, 32.78%)</title><rect x="54.1435%" y="1125" width="32.7816%" height="15" fill="rgb(244,191,2)" fg:x="5168" fg:w="3129"/><text x="54.3935%" y="1135.50">bevy_ecs::schedule::Schedule::run_once</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (3,129 samples, 32.78%)</title><rect x="54.1435%" y="1109" width="32.7816%" height="15" fill="rgb(248,159,12)" fg:x="5168" fg:w="3129"/><text x="54.3935%" y="1119.50">&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (1,275 samples, 13.36%)</title><rect x="73.5673%" y="1093" width="13.3578%" height="15" fill="rgb(235,204,17)" fg:x="7022" fg:w="1275"/><text x="73.8173%" y="1103.50">&lt;bevy_ecs::system::e..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (1,275 samples, 13.36%)</title><rect x="73.5673%" y="1077" width="13.3578%" height="15" fill="rgb(240,21,27)" fg:x="7022" fg:w="1275"/><text x="73.8173%" y="1087.50">&lt;alloc::boxed::Box&lt;F..</text></g><g><title>bevy_wgpu::get_wgpu_render_system::{{closure}} (798 samples, 8.36%)</title><rect x="78.5647%" y="1061" width="8.3604%" height="15" fill="rgb(224,170,31)" fg:x="7499" fg:w="798"/><text x="78.8147%" y="1071.50">bevy_wgpu::g..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (798 samples, 8.36%)</title><rect x="78.5647%" y="1045" width="8.3604%" height="15" fill="rgb(223,145,32)" fg:x="7499" fg:w="798"/><text x="78.8147%" y="1055.50">bevy_wgpu::w..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (780 samples, 8.17%)</title><rect x="78.7533%" y="1029" width="8.1718%" height="15" fill="rgb(243,100,5)" fg:x="7517" fg:w="780"/><text x="79.0033%" y="1039.50">bevy_wgpu::..</text></g><g><title>bevy_ecs::world::World::resource_scope (780 samples, 8.17%)</title><rect x="78.7533%" y="1013" width="8.1718%" height="15" fill="rgb(242,131,51)" fg:x="7517" fg:w="780"/><text x="79.0033%" y="1023.50">bevy_ecs::w..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (780 samples, 8.17%)</title><rect x="78.7533%" y="997" width="8.1718%" height="15" fill="rgb(223,156,46)" fg:x="7517" fg:w="780"/><text x="79.0033%" y="1007.50">bevy_wgpu::..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (780 samples, 8.17%)</title><rect x="78.7533%" y="981" width="8.1718%" height="15" fill="rgb(215,10,40)" fg:x="7517" fg:w="780"/><text x="79.0033%" y="991.50">bevy_wgpu::..</text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (612 samples, 6.41%)</title><rect x="80.5134%" y="965" width="6.4117%" height="15" fill="rgb(233,155,0)" fg:x="7685" fg:w="612"/><text x="80.7634%" y="975.50">bevy_ren..</text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (612 samples, 6.41%)</title><rect x="80.5134%" y="949" width="6.4117%" height="15" fill="rgb(247,78,6)" fg:x="7685" fg:w="612"/><text x="80.7634%" y="959.50">&lt;bevy_wg..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (612 samples, 6.41%)</title><rect x="80.5134%" y="933" width="6.4117%" height="15" fill="rgb(237,217,21)" fg:x="7685" fg:w="612"/><text x="80.7634%" y="943.50">bevy_wgp..</text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (612 samples, 6.41%)</title><rect x="80.5134%" y="917" width="6.4117%" height="15" fill="rgb(212,1,21)" fg:x="7685" fg:w="612"/><text x="80.7634%" y="927.50">wgpu::Co..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (612 samples, 6.41%)</title><rect x="80.5134%" y="901" width="6.4117%" height="15" fill="rgb(213,7,14)" fg:x="7685" fg:w="612"/><text x="80.7634%" y="911.50">&lt;wgpu::b..</text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (612 samples, 6.41%)</title><rect x="80.5134%" y="885" width="6.4117%" height="15" fill="rgb(225,84,14)" fg:x="7685" fg:w="612"/><text x="80.7634%" y="895.50">wgpu_cor..</text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_replace (40 samples, 0.42%)</title><rect x="86.5060%" y="869" width="0.4191%" height="15" fill="rgb(239,216,39)" fg:x="8257" fg:w="40"/><text x="86.7560%" y="879.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (37 samples, 0.39%)</title><rect x="86.5375%" y="853" width="0.3876%" height="15" fill="rgb(253,29,23)" fg:x="8260" fg:w="37"/><text x="86.7875%" y="863.50"></text></g><g><title>wgpu_core::track::buffer::&lt;impl wgpu_core::track::ResourceState for wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;::change (3 samples, 0.03%)</title><rect x="86.8937%" y="837" width="0.0314%" height="15" fill="rgb(220,167,50)" fg:x="8294" fg:w="3"/><text x="87.1437%" y="847.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (1 samples, 0.01%)</title><rect x="86.9251%" y="933" width="0.0105%" height="15" fill="rgb(232,141,1)" fg:x="8297" fg:w="1"/><text x="87.1751%" y="943.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (1 samples, 0.01%)</title><rect x="86.9251%" y="917" width="0.0105%" height="15" fill="rgb(222,210,1)" fg:x="8297" fg:w="1"/><text x="87.1751%" y="927.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (1 samples, 0.01%)</title><rect x="86.9251%" y="901" width="0.0105%" height="15" fill="rgb(219,84,10)" fg:x="8297" fg:w="1"/><text x="87.1751%" y="911.50"></text></g><g><title>async_executor::Executor::spawn (1 samples, 0.01%)</title><rect x="86.9251%" y="885" width="0.0105%" height="15" fill="rgb(245,188,6)" fg:x="8297" fg:w="1"/><text x="87.1751%" y="895.50"></text></g><g><title>async_task::runnable::spawn_unchecked (1 samples, 0.01%)</title><rect x="86.9251%" y="869" width="0.0105%" height="15" fill="rgb(252,139,39)" fg:x="8297" fg:w="1"/><text x="87.1751%" y="879.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (1 samples, 0.01%)</title><rect x="86.9251%" y="853" width="0.0105%" height="15" fill="rgb(218,42,26)" fg:x="8297" fg:w="1"/><text x="87.1751%" y="863.50"></text></g><g><title>alloc::alloc::alloc (1 samples, 0.01%)</title><rect x="86.9251%" y="837" width="0.0105%" height="15" fill="rgb(237,226,51)" fg:x="8297" fg:w="1"/><text x="87.1751%" y="847.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="86.9251%" y="821" width="0.0105%" height="15" fill="rgb(246,15,17)" fg:x="8297" fg:w="1"/><text x="87.1751%" y="831.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="86.9251%" y="805" width="0.0105%" height="15" fill="rgb(228,170,42)" fg:x="8297" fg:w="1"/><text x="87.1751%" y="815.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="86.9356%" y="709" width="0.0105%" height="15" fill="rgb(248,118,53)" fg:x="8298" fg:w="1"/><text x="87.1856%" y="719.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (1 samples, 0.01%)</title><rect x="86.9356%" y="693" width="0.0105%" height="15" fill="rgb(207,30,10)" fg:x="8298" fg:w="1"/><text x="87.1856%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="86.9356%" y="677" width="0.0105%" height="15" fill="rgb(217,104,38)" fg:x="8298" fg:w="1"/><text x="87.1856%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="86.9356%" y="661" width="0.0105%" height="15" fill="rgb(211,165,26)" fg:x="8298" fg:w="1"/><text x="87.1856%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="86.9356%" y="645" width="0.0105%" height="15" fill="rgb(247,38,9)" fg:x="8298" fg:w="1"/><text x="87.1856%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="86.9356%" y="629" width="0.0105%" height="15" fill="rgb(218,187,8)" fg:x="8298" fg:w="1"/><text x="87.1856%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="86.9356%" y="613" width="0.0105%" height="15" fill="rgb(247,94,28)" fg:x="8298" fg:w="1"/><text x="87.1856%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="86.9356%" y="597" width="0.0105%" height="15" fill="rgb(218,173,30)" fg:x="8298" fg:w="1"/><text x="87.1856%" y="607.50"></text></g><g><title>ioctl@plt (1 samples, 0.01%)</title><rect x="86.9356%" y="581" width="0.0105%" height="15" fill="rgb(245,45,36)" fg:x="8298" fg:w="1"/><text x="87.1856%" y="591.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (2 samples, 0.02%)</title><rect x="86.9356%" y="821" width="0.0210%" height="15" fill="rgb(221,172,44)" fg:x="8298" fg:w="2"/><text x="87.1856%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2 samples, 0.02%)</title><rect x="86.9356%" y="805" width="0.0210%" height="15" fill="rgb(222,45,12)" fg:x="8298" fg:w="2"/><text x="87.1856%" y="815.50"></text></g><g><title>core::ops::function::Fn::call (2 samples, 0.02%)</title><rect x="86.9356%" y="789" width="0.0210%" height="15" fill="rgb(250,10,22)" fg:x="8298" fg:w="2"/><text x="87.1856%" y="799.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (2 samples, 0.02%)</title><rect x="86.9356%" y="773" width="0.0210%" height="15" fill="rgb(239,27,0)" fg:x="8298" fg:w="2"/><text x="87.1856%" y="783.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (2 samples, 0.02%)</title><rect x="86.9356%" y="757" width="0.0210%" height="15" fill="rgb(223,118,22)" fg:x="8298" fg:w="2"/><text x="87.1856%" y="767.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (2 samples, 0.02%)</title><rect x="86.9356%" y="741" width="0.0210%" height="15" fill="rgb(251,81,25)" fg:x="8298" fg:w="2"/><text x="87.1856%" y="751.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (2 samples, 0.02%)</title><rect x="86.9356%" y="725" width="0.0210%" height="15" fill="rgb(237,225,53)" fg:x="8298" fg:w="2"/><text x="87.1856%" y="735.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.01%)</title><rect x="86.9460%" y="709" width="0.0105%" height="15" fill="rgb(237,186,51)" fg:x="8299" fg:w="1"/><text x="87.1960%" y="719.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="86.9460%" y="693" width="0.0105%" height="15" fill="rgb(247,209,11)" fg:x="8299" fg:w="1"/><text x="87.1960%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="86.9460%" y="677" width="0.0105%" height="15" fill="rgb(223,109,27)" fg:x="8299" fg:w="1"/><text x="87.1960%" y="687.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_shared_slow (1 samples, 0.01%)</title><rect x="86.9460%" y="661" width="0.0105%" height="15" fill="rgb(246,181,13)" fg:x="8299" fg:w="1"/><text x="87.1960%" y="671.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::lock_common (1 samples, 0.01%)</title><rect x="86.9460%" y="645" width="0.0105%" height="15" fill="rgb(234,57,44)" fg:x="8299" fg:w="1"/><text x="87.1960%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.01%)</title><rect x="86.9460%" y="629" width="0.0105%" height="15" fill="rgb(211,227,50)" fg:x="8299" fg:w="1"/><text x="87.1960%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.01%)</title><rect x="86.9460%" y="613" width="0.0105%" height="15" fill="rgb(254,57,34)" fg:x="8299" fg:w="1"/><text x="87.1960%" y="623.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.01%)</title><rect x="86.9460%" y="597" width="0.0105%" height="15" fill="rgb(227,212,26)" fg:x="8299" fg:w="1"/><text x="87.1960%" y="607.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.01%)</title><rect x="86.9460%" y="581" width="0.0105%" height="15" fill="rgb(244,169,44)" fg:x="8299" fg:w="1"/><text x="87.1960%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.01%)</title><rect x="86.9460%" y="565" width="0.0105%" height="15" fill="rgb(236,135,50)" fg:x="8299" fg:w="1"/><text x="87.1960%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="86.9460%" y="549" width="0.0105%" height="15" fill="rgb(241,89,30)" fg:x="8299" fg:w="1"/><text x="87.1960%" y="559.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::EntityFetch as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (2 samples, 0.02%)</title><rect x="86.9775%" y="725" width="0.0210%" height="15" fill="rgb(206,113,34)" fg:x="8302" fg:w="2"/><text x="87.2275%" y="735.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (3 samples, 0.03%)</title><rect x="86.9775%" y="741" width="0.0314%" height="15" fill="rgb(218,104,52)" fg:x="8302" fg:w="3"/><text x="87.2275%" y="751.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::ReadFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="86.9984%" y="725" width="0.0105%" height="15" fill="rgb(223,82,32)" fg:x="8304" fg:w="1"/><text x="87.2484%" y="735.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (1 samples, 0.01%)</title><rect x="86.9984%" y="709" width="0.0105%" height="15" fill="rgb(249,219,30)" fg:x="8304" fg:w="1"/><text x="87.2484%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="86.9984%" y="693" width="0.0105%" height="15" fill="rgb(233,141,21)" fg:x="8304" fg:w="1"/><text x="87.2484%" y="703.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="86.9670%" y="757" width="0.0524%" height="15" fill="rgb(252,87,44)" fg:x="8301" fg:w="5"/><text x="87.2170%" y="767.50"></text></g><g><title>&lt;T as bevy_ecs::query::filter::FilterFetch&gt;::table_filter_fetch (1 samples, 0.01%)</title><rect x="87.0089%" y="741" width="0.0105%" height="15" fill="rgb(229,48,33)" fg:x="8305" fg:w="1"/><text x="87.2589%" y="751.50"></text></g><g><title>&lt;bevy_ecs::query::filter::Or&lt;(bevy_ecs::query::filter::OrFetch&lt;F0&gt;,bevy_ecs::query::filter::OrFetch&lt;F1&gt;)&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="87.0089%" y="725" width="0.0105%" height="15" fill="rgb(229,23,22)" fg:x="8305" fg:w="1"/><text x="87.2589%" y="735.50"></text></g><g><title>futures_lite::future::block_on (1 samples, 0.01%)</title><rect x="87.0194%" y="741" width="0.0105%" height="15" fill="rgb(244,116,16)" fg:x="8306" fg:w="1"/><text x="87.2694%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::backend::native_gpu_future::GpuFuture&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.0194%" y="725" width="0.0105%" height="15" fill="rgb(247,45,10)" fg:x="8306" fg:w="1"/><text x="87.2694%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;lock_api::mutex::Mutex&lt;parking_lot::raw_mutex::RawMutex,core::option::Option&lt;wgpu::backend::native_gpu_future::WakerOrResult&lt;core::result::Result&lt;(),wgpu::BufferAsyncError&gt;&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="87.0194%" y="709" width="0.0105%" height="15" fill="rgb(228,60,29)" fg:x="8306" fg:w="1"/><text x="87.2694%" y="719.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.0194%" y="693" width="0.0105%" height="15" fill="rgb(205,129,15)" fg:x="8306" fg:w="1"/><text x="87.2694%" y="703.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="87.0194%" y="677" width="0.0105%" height="15" fill="rgb(206,229,4)" fg:x="8306" fg:w="1"/><text x="87.2694%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="87.0194%" y="661" width="0.0105%" height="15" fill="rgb(249,191,30)" fg:x="8306" fg:w="1"/><text x="87.2694%" y="671.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="87.0299%" y="741" width="0.0105%" height="15" fill="rgb(250,84,54)" fg:x="8307" fg:w="1"/><text x="87.2799%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="87.0299%" y="725" width="0.0105%" height="15" fill="rgb(207,25,53)" fg:x="8307" fg:w="1"/><text x="87.2799%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="87.0299%" y="709" width="0.0105%" height="15" fill="rgb(235,40,8)" fg:x="8307" fg:w="1"/><text x="87.2799%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="87.0299%" y="693" width="0.0105%" height="15" fill="rgb(226,169,33)" fg:x="8307" fg:w="1"/><text x="87.2799%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="87.0299%" y="677" width="0.0105%" height="15" fill="rgb(238,110,8)" fg:x="8307" fg:w="1"/><text x="87.2799%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="87.0299%" y="661" width="0.0105%" height="15" fill="rgb(251,206,12)" fg:x="8307" fg:w="1"/><text x="87.2799%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="87.0299%" y="645" width="0.0105%" height="15" fill="rgb(248,171,18)" fg:x="8307" fg:w="1"/><text x="87.2799%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="87.0299%" y="629" width="0.0105%" height="15" fill="rgb(213,65,46)" fg:x="8307" fg:w="1"/><text x="87.2799%" y="639.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="87.0299%" y="613" width="0.0105%" height="15" fill="rgb(211,154,15)" fg:x="8307" fg:w="1"/><text x="87.2799%" y="623.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life (1 samples, 0.01%)</title><rect x="87.0403%" y="693" width="0.0105%" height="15" fill="rgb(217,75,43)" fg:x="8308" fg:w="1"/><text x="87.2903%" y="703.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::lock_life_internal (1 samples, 0.01%)</title><rect x="87.0403%" y="677" width="0.0105%" height="15" fill="rgb(230,32,33)" fg:x="8308" fg:w="1"/><text x="87.2903%" y="687.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (1 samples, 0.01%)</title><rect x="87.0403%" y="661" width="0.0105%" height="15" fill="rgb(221,100,16)" fg:x="8308" fg:w="1"/><text x="87.2903%" y="671.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (1 samples, 0.01%)</title><rect x="87.0403%" y="645" width="0.0105%" height="15" fill="rgb(212,129,47)" fg:x="8308" fg:w="1"/><text x="87.2903%" y="655.50"></text></g><g><title>parking_lot::raw_mutex::RawMutex::lock_slow (1 samples, 0.01%)</title><rect x="87.0403%" y="629" width="0.0105%" height="15" fill="rgb(239,217,47)" fg:x="8308" fg:w="1"/><text x="87.2903%" y="639.50"></text></g><g><title>parking_lot_core::parking_lot::park (1 samples, 0.01%)</title><rect x="87.0403%" y="613" width="0.0105%" height="15" fill="rgb(230,84,24)" fg:x="8308" fg:w="1"/><text x="87.2903%" y="623.50"></text></g><g><title>parking_lot_core::parking_lot::with_thread_data (1 samples, 0.01%)</title><rect x="87.0403%" y="597" width="0.0105%" height="15" fill="rgb(214,153,51)" fg:x="8308" fg:w="1"/><text x="87.2903%" y="607.50"></text></g><g><title>parking_lot_core::parking_lot::park::{{closure}} (1 samples, 0.01%)</title><rect x="87.0403%" y="581" width="0.0105%" height="15" fill="rgb(231,6,35)" fg:x="8308" fg:w="1"/><text x="87.2903%" y="591.50"></text></g><g><title>&lt;parking_lot_core::thread_parker::imp::ThreadParker as parking_lot_core::thread_parker::ThreadParkerT&gt;::park (1 samples, 0.01%)</title><rect x="87.0403%" y="565" width="0.0105%" height="15" fill="rgb(229,122,30)" fg:x="8308" fg:w="1"/><text x="87.2903%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicI32::load (1 samples, 0.01%)</title><rect x="87.0403%" y="549" width="0.0105%" height="15" fill="rgb(234,71,10)" fg:x="8308" fg:w="1"/><text x="87.2903%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_load (1 samples, 0.01%)</title><rect x="87.0403%" y="533" width="0.0105%" height="15" fill="rgb(215,173,26)" fg:x="8308" fg:w="1"/><text x="87.2903%" y="543.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (4 samples, 0.04%)</title><rect x="87.0194%" y="757" width="0.0419%" height="15" fill="rgb(248,118,52)" fg:x="8306" fg:w="4"/><text x="87.2694%" y="767.50"></text></g><g><title>wgpu::BufferSlice::map_async (2 samples, 0.02%)</title><rect x="87.0403%" y="741" width="0.0210%" height="15" fill="rgb(237,55,46)" fg:x="8308" fg:w="2"/><text x="87.2903%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_map_async (2 samples, 0.02%)</title><rect x="87.0403%" y="725" width="0.0210%" height="15" fill="rgb(243,214,43)" fg:x="8308" fg:w="2"/><text x="87.2903%" y="735.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_map_async (2 samples, 0.02%)</title><rect x="87.0403%" y="709" width="0.0210%" height="15" fill="rgb(252,123,30)" fg:x="8308" fg:w="2"/><text x="87.2903%" y="719.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="87.0508%" y="693" width="0.0105%" height="15" fill="rgb(215,73,39)" fg:x="8309" fg:w="1"/><text x="87.3008%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (1 samples, 0.01%)</title><rect x="87.0613%" y="757" width="0.0105%" height="15" fill="rgb(251,194,29)" fg:x="8310" fg:w="1"/><text x="87.3113%" y="767.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="87.0613%" y="741" width="0.0105%" height="15" fill="rgb(224,58,52)" fg:x="8310" fg:w="1"/><text x="87.3113%" y="751.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="87.0613%" y="725" width="0.0105%" height="15" fill="rgb(248,106,46)" fg:x="8310" fg:w="1"/><text x="87.3113%" y="735.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (1 samples, 0.01%)</title><rect x="87.0613%" y="709" width="0.0105%" height="15" fill="rgb(223,80,29)" fg:x="8310" fg:w="1"/><text x="87.3113%" y="719.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (1 samples, 0.01%)</title><rect x="87.0613%" y="693" width="0.0105%" height="15" fill="rgb(243,137,9)" fg:x="8310" fg:w="1"/><text x="87.3113%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (1 samples, 0.01%)</title><rect x="87.0613%" y="677" width="0.0105%" height="15" fill="rgb(235,121,28)" fg:x="8310" fg:w="1"/><text x="87.3113%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="87.0613%" y="661" width="0.0105%" height="15" fill="rgb(219,121,41)" fg:x="8310" fg:w="1"/><text x="87.3113%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="87.0613%" y="645" width="0.0105%" height="15" fill="rgb(251,60,6)" fg:x="8310" fg:w="1"/><text x="87.3113%" y="655.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (1 samples, 0.01%)</title><rect x="87.0718%" y="757" width="0.0105%" height="15" fill="rgb(208,12,30)" fg:x="8311" fg:w="1"/><text x="87.3218%" y="767.50"></text></g><g><title>wgpu::BufferSlice::get_mapped_range_mut (1 samples, 0.01%)</title><rect x="87.0718%" y="741" width="0.0105%" height="15" fill="rgb(207,176,36)" fg:x="8311" fg:w="1"/><text x="87.3218%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu::MapContext&gt;&gt; (1 samples, 0.01%)</title><rect x="87.0718%" y="725" width="0.0105%" height="15" fill="rgb(211,188,29)" fg:x="8311" fg:w="1"/><text x="87.3218%" y="735.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="87.0718%" y="709" width="0.0105%" height="15" fill="rgb(220,184,37)" fg:x="8311" fg:w="1"/><text x="87.3218%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="87.0718%" y="693" width="0.0105%" height="15" fill="rgb(239,87,37)" fg:x="8311" fg:w="1"/><text x="87.3218%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="87.0718%" y="677" width="0.0105%" height="15" fill="rgb(232,113,44)" fg:x="8311" fg:w="1"/><text x="87.3218%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="87.0718%" y="661" width="0.0105%" height="15" fill="rgb(246,25,39)" fg:x="8311" fg:w="1"/><text x="87.3218%" y="671.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="87.0822%" y="757" width="0.0105%" height="15" fill="rgb(247,30,13)" fg:x="8312" fg:w="1"/><text x="87.3322%" y="767.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="87.0822%" y="741" width="0.0105%" height="15" fill="rgb(230,176,35)" fg:x="8312" fg:w="1"/><text x="87.3322%" y="751.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="87.0822%" y="725" width="0.0105%" height="15" fill="rgb(222,23,18)" fg:x="8312" fg:w="1"/><text x="87.3322%" y="735.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="87.0822%" y="709" width="0.0105%" height="15" fill="rgb(234,86,8)" fg:x="8312" fg:w="1"/><text x="87.3322%" y="719.50"></text></g><g><title>&lt;alloc::vec::drain::Drain&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="87.1032%" y="741" width="0.0105%" height="15" fill="rgb(206,218,47)" fg:x="8314" fg:w="1"/><text x="87.3532%" y="751.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="87.1032%" y="725" width="0.0105%" height="15" fill="rgb(229,35,31)" fg:x="8314" fg:w="1"/><text x="87.3532%" y="735.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::deref::Deref&gt;::deref (1 samples, 0.01%)</title><rect x="87.1137%" y="709" width="0.0105%" height="15" fill="rgb(242,81,7)" fg:x="8315" fg:w="1"/><text x="87.3637%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7 samples, 0.07%)</title><rect x="87.1241%" y="709" width="0.0733%" height="15" fill="rgb(231,11,35)" fg:x="8316" fg:w="7"/><text x="87.3741%" y="719.50"></text></g><g><title>core::ptr::write (7 samples, 0.07%)</title><rect x="87.1241%" y="693" width="0.0733%" height="15" fill="rgb(219,218,17)" fg:x="8316" fg:w="7"/><text x="87.3741%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;bevy_render::render_graph::command::Command&gt;&gt;&gt; (17 samples, 0.18%)</title><rect x="87.1975%" y="709" width="0.1781%" height="15" fill="rgb(221,83,32)" fg:x="8323" fg:w="17"/><text x="87.4475%" y="719.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (17 samples, 0.18%)</title><rect x="87.1975%" y="693" width="0.1781%" height="15" fill="rgb(233,49,54)" fg:x="8323" fg:w="17"/><text x="87.4475%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (17 samples, 0.18%)</title><rect x="87.1975%" y="677" width="0.1781%" height="15" fill="rgb(206,18,51)" fg:x="8323" fg:w="17"/><text x="87.4475%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (17 samples, 0.18%)</title><rect x="87.1975%" y="661" width="0.1781%" height="15" fill="rgb(249,193,15)" fg:x="8323" fg:w="17"/><text x="87.4475%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (17 samples, 0.18%)</title><rect x="87.1975%" y="645" width="0.1781%" height="15" fill="rgb(245,186,19)" fg:x="8323" fg:w="17"/><text x="87.4475%" y="655.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::copy_staging_buffer_to_final_buffers (34 samples, 0.36%)</title><rect x="87.0927%" y="757" width="0.3562%" height="15" fill="rgb(230,4,24)" fg:x="8313" fg:w="34"/><text x="87.3427%" y="767.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (32 samples, 0.34%)</title><rect x="87.1137%" y="741" width="0.3353%" height="15" fill="rgb(234,75,27)" fg:x="8315" fg:w="32"/><text x="87.3637%" y="751.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::push (32 samples, 0.34%)</title><rect x="87.1137%" y="725" width="0.3353%" height="15" fill="rgb(244,187,35)" fg:x="8315" fg:w="32"/><text x="87.3637%" y="735.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (7 samples, 0.07%)</title><rect x="87.3756%" y="709" width="0.0733%" height="15" fill="rgb(241,97,43)" fg:x="8340" fg:w="7"/><text x="87.6256%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (7 samples, 0.07%)</title><rect x="87.3756%" y="693" width="0.0733%" height="15" fill="rgb(236,94,2)" fg:x="8340" fg:w="7"/><text x="87.6256%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (7 samples, 0.07%)</title><rect x="87.3756%" y="677" width="0.0733%" height="15" fill="rgb(231,175,7)" fg:x="8340" fg:w="7"/><text x="87.6256%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (7 samples, 0.07%)</title><rect x="87.3756%" y="661" width="0.0733%" height="15" fill="rgb(236,89,47)" fg:x="8340" fg:w="7"/><text x="87.6256%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="87.5432%" y="741" width="0.0105%" height="15" fill="rgb(213,191,37)" fg:x="8356" fg:w="1"/><text x="87.7932%" y="751.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (1 samples, 0.01%)</title><rect x="87.5432%" y="725" width="0.0105%" height="15" fill="rgb(252,0,34)" fg:x="8356" fg:w="1"/><text x="87.7932%" y="735.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="87.5432%" y="709" width="0.0105%" height="15" fill="rgb(208,145,44)" fg:x="8356" fg:w="1"/><text x="87.7932%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="87.5537%" y="741" width="0.0105%" height="15" fill="rgb(227,95,50)" fg:x="8357" fg:w="1"/><text x="87.8037%" y="751.50"></text></g><g><title>hashbrown::map::make_hash (2 samples, 0.02%)</title><rect x="87.5642%" y="677" width="0.0210%" height="15" fill="rgb(222,136,24)" fg:x="8358" fg:w="2"/><text x="87.8142%" y="687.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="87.5642%" y="661" width="0.0210%" height="15" fill="rgb(218,105,10)" fg:x="8358" fg:w="2"/><text x="87.8142%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (2 samples, 0.02%)</title><rect x="87.5642%" y="645" width="0.0210%" height="15" fill="rgb(216,65,28)" fg:x="8358" fg:w="2"/><text x="87.8142%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u32 (2 samples, 0.02%)</title><rect x="87.5642%" y="629" width="0.0210%" height="15" fill="rgb(229,6,28)" fg:x="8358" fg:w="2"/><text x="87.8142%" y="639.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.02%)</title><rect x="87.5642%" y="613" width="0.0210%" height="15" fill="rgb(222,160,42)" fg:x="8358" fg:w="2"/><text x="87.8142%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="87.5746%" y="597" width="0.0105%" height="15" fill="rgb(235,83,49)" fg:x="8359" fg:w="1"/><text x="87.8246%" y="607.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (23 samples, 0.24%)</title><rect x="87.5851%" y="645" width="0.2410%" height="15" fill="rgb(236,86,36)" fg:x="8360" fg:w="23"/><text x="87.8351%" y="655.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (23 samples, 0.24%)</title><rect x="87.5851%" y="629" width="0.2410%" height="15" fill="rgb(236,19,41)" fg:x="8360" fg:w="23"/><text x="87.8351%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.03%)</title><rect x="87.8366%" y="597" width="0.0314%" height="15" fill="rgb(217,71,31)" fg:x="8384" fg:w="3"/><text x="88.0866%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.03%)</title><rect x="87.8366%" y="581" width="0.0314%" height="15" fill="rgb(236,209,25)" fg:x="8384" fg:w="3"/><text x="88.0866%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="87.8366%" y="565" width="0.0314%" height="15" fill="rgb(247,104,21)" fg:x="8384" fg:w="3"/><text x="88.0866%" y="575.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (41 samples, 0.43%)</title><rect x="87.4489%" y="757" width="0.4295%" height="15" fill="rgb(243,80,38)" fg:x="8347" fg:w="41"/><text x="87.6989%" y="767.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_or_assign_index (30 samples, 0.31%)</title><rect x="87.5642%" y="741" width="0.3143%" height="15" fill="rgb(232,109,38)" fg:x="8358" fg:w="30"/><text x="87.8142%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (30 samples, 0.31%)</title><rect x="87.5642%" y="725" width="0.3143%" height="15" fill="rgb(212,177,53)" fg:x="8358" fg:w="30"/><text x="87.8142%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (30 samples, 0.31%)</title><rect x="87.5642%" y="709" width="0.3143%" height="15" fill="rgb(227,30,34)" fg:x="8358" fg:w="30"/><text x="87.8142%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (30 samples, 0.31%)</title><rect x="87.5642%" y="693" width="0.3143%" height="15" fill="rgb(205,175,25)" fg:x="8358" fg:w="30"/><text x="87.8142%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (28 samples, 0.29%)</title><rect x="87.5851%" y="677" width="0.2933%" height="15" fill="rgb(249,39,54)" fg:x="8360" fg:w="28"/><text x="87.8351%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (28 samples, 0.29%)</title><rect x="87.5851%" y="661" width="0.2933%" height="15" fill="rgb(215,54,37)" fg:x="8360" fg:w="28"/><text x="87.8351%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.05%)</title><rect x="87.8261%" y="645" width="0.0524%" height="15" fill="rgb(205,60,46)" fg:x="8383" fg:w="5"/><text x="88.0761%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.05%)</title><rect x="87.8261%" y="629" width="0.0524%" height="15" fill="rgb(238,89,29)" fg:x="8383" fg:w="5"/><text x="88.0761%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.05%)</title><rect x="87.8261%" y="613" width="0.0524%" height="15" fill="rgb(212,48,10)" fg:x="8383" fg:w="5"/><text x="88.0761%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="87.8680%" y="597" width="0.0105%" height="15" fill="rgb(237,186,28)" fg:x="8387" fg:w="1"/><text x="88.1180%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (1 samples, 0.01%)</title><rect x="87.8680%" y="581" width="0.0105%" height="15" fill="rgb(237,204,4)" fg:x="8387" fg:w="1"/><text x="88.1180%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (1 samples, 0.01%)</title><rect x="87.8680%" y="565" width="0.0105%" height="15" fill="rgb(237,15,47)" fg:x="8387" fg:w="1"/><text x="88.1180%" y="575.50"></text></g><g><title>core::core_arch::simd::i8x16::new (1 samples, 0.01%)</title><rect x="87.8680%" y="549" width="0.0105%" height="15" fill="rgb(244,110,25)" fg:x="8387" fg:w="1"/><text x="88.1180%" y="559.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (112 samples, 1.17%)</title><rect x="86.9565%" y="773" width="1.1734%" height="15" fill="rgb(241,12,16)" fg:x="8300" fg:w="112"/><text x="87.2065%" y="783.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (24 samples, 0.25%)</title><rect x="87.8785%" y="757" width="0.2514%" height="15" fill="rgb(235,25,9)" fg:x="8388" fg:w="24"/><text x="88.1285%" y="767.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="88.0671%" y="741" width="0.0629%" height="15" fill="rgb(245,159,19)" fg:x="8406" fg:w="6"/><text x="88.3171%" y="751.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="88.0775%" y="725" width="0.0524%" height="15" fill="rgb(236,63,32)" fg:x="8407" fg:w="5"/><text x="88.3275%" y="735.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::get_render_resource (4 samples, 0.04%)</title><rect x="88.0880%" y="709" width="0.0419%" height="15" fill="rgb(235,32,52)" fg:x="8408" fg:w="4"/><text x="88.3380%" y="719.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (113 samples, 1.18%)</title><rect x="86.9565%" y="821" width="1.1839%" height="15" fill="rgb(209,176,21)" fg:x="8300" fg:w="113"/><text x="87.2065%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (113 samples, 1.18%)</title><rect x="86.9565%" y="805" width="1.1839%" height="15" fill="rgb(205,90,42)" fg:x="8300" fg:w="113"/><text x="87.2065%" y="815.50"></text></g><g><title>core::ops::function::Fn::call (113 samples, 1.18%)</title><rect x="86.9565%" y="789" width="1.1839%" height="15" fill="rgb(213,132,16)" fg:x="8300" fg:w="113"/><text x="87.2065%" y="799.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="88.1299%" y="773" width="0.0105%" height="15" fill="rgb(232,11,22)" fg:x="8412" fg:w="1"/><text x="88.3799%" y="783.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="88.1613%" y="741" width="0.0105%" height="15" fill="rgb(248,167,41)" fg:x="8415" fg:w="1"/><text x="88.4113%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="88.1613%" y="725" width="0.0105%" height="15" fill="rgb(209,127,6)" fg:x="8415" fg:w="1"/><text x="88.4113%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="88.1613%" y="709" width="0.0105%" height="15" fill="rgb(246,210,34)" fg:x="8415" fg:w="1"/><text x="88.4113%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="88.1613%" y="693" width="0.0105%" height="15" fill="rgb(238,165,13)" fg:x="8415" fg:w="1"/><text x="88.4113%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="88.1613%" y="677" width="0.0105%" height="15" fill="rgb(233,98,15)" fg:x="8415" fg:w="1"/><text x="88.4113%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.1613%" y="661" width="0.0105%" height="15" fill="rgb(215,215,51)" fg:x="8415" fg:w="1"/><text x="88.4113%" y="671.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="88.1613%" y="645" width="0.0105%" height="15" fill="rgb(217,161,25)" fg:x="8415" fg:w="1"/><text x="88.4113%" y="655.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="88.1613%" y="629" width="0.0105%" height="15" fill="rgb(217,167,48)" fg:x="8415" fg:w="1"/><text x="88.4113%" y="639.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="88.1613%" y="613" width="0.0105%" height="15" fill="rgb(205,163,34)" fg:x="8415" fg:w="1"/><text x="88.4113%" y="623.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="88.1613%" y="597" width="0.0105%" height="15" fill="rgb(241,197,31)" fg:x="8415" fg:w="1"/><text x="88.4113%" y="607.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (2 samples, 0.02%)</title><rect x="88.1613%" y="757" width="0.0210%" height="15" fill="rgb(225,123,11)" fg:x="8415" fg:w="2"/><text x="88.4113%" y="767.50"></text></g><g><title>wgpu::BufferSlice::map_async (1 samples, 0.01%)</title><rect x="88.1718%" y="741" width="0.0105%" height="15" fill="rgb(217,4,20)" fg:x="8416" fg:w="1"/><text x="88.4218%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,wgpu::MapContext&gt;&gt; (1 samples, 0.01%)</title><rect x="88.1718%" y="725" width="0.0105%" height="15" fill="rgb(215,55,9)" fg:x="8416" fg:w="1"/><text x="88.4218%" y="735.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.1718%" y="709" width="0.0105%" height="15" fill="rgb(218,165,5)" fg:x="8416" fg:w="1"/><text x="88.4218%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (1 samples, 0.01%)</title><rect x="88.1718%" y="693" width="0.0105%" height="15" fill="rgb(222,175,15)" fg:x="8416" fg:w="1"/><text x="88.4218%" y="703.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (1 samples, 0.01%)</title><rect x="88.1718%" y="677" width="0.0105%" height="15" fill="rgb(223,85,34)" fg:x="8416" fg:w="1"/><text x="88.4218%" y="687.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="88.1718%" y="661" width="0.0105%" height="15" fill="rgb(234,228,29)" fg:x="8416" fg:w="1"/><text x="88.4218%" y="671.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (1 samples, 0.01%)</title><rect x="88.1823%" y="757" width="0.0105%" height="15" fill="rgb(239,7,28)" fg:x="8417" fg:w="1"/><text x="88.4323%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1 samples, 0.01%)</title><rect x="88.1823%" y="741" width="0.0105%" height="15" fill="rgb(252,222,53)" fg:x="8417" fg:w="1"/><text x="88.4323%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1 samples, 0.01%)</title><rect x="88.1823%" y="725" width="0.0105%" height="15" fill="rgb(232,146,44)" fg:x="8417" fg:w="1"/><text x="88.4323%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1 samples, 0.01%)</title><rect x="88.1823%" y="709" width="0.0105%" height="15" fill="rgb(243,223,53)" fg:x="8417" fg:w="1"/><text x="88.4323%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1 samples, 0.01%)</title><rect x="88.1823%" y="693" width="0.0105%" height="15" fill="rgb(219,128,25)" fg:x="8417" fg:w="1"/><text x="88.4323%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="88.1823%" y="677" width="0.0105%" height="15" fill="rgb(223,56,32)" fg:x="8417" fg:w="1"/><text x="88.4323%" y="687.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="88.1928%" y="581" width="0.0105%" height="15" fill="rgb(237,41,3)" fg:x="8418" fg:w="1"/><text x="88.4428%" y="591.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (6 samples, 0.06%)</title><rect x="88.1928%" y="741" width="0.0629%" height="15" fill="rgb(235,138,9)" fg:x="8418" fg:w="6"/><text x="88.4428%" y="751.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (6 samples, 0.06%)</title><rect x="88.1928%" y="725" width="0.0629%" height="15" fill="rgb(214,131,10)" fg:x="8418" fg:w="6"/><text x="88.4428%" y="735.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (6 samples, 0.06%)</title><rect x="88.1928%" y="709" width="0.0629%" height="15" fill="rgb(229,89,7)" fg:x="8418" fg:w="6"/><text x="88.4428%" y="719.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (6 samples, 0.06%)</title><rect x="88.1928%" y="693" width="0.0629%" height="15" fill="rgb(240,24,42)" fg:x="8418" fg:w="6"/><text x="88.4428%" y="703.50"></text></g><g><title>alloc::raw_vec::finish_grow (6 samples, 0.06%)</title><rect x="88.1928%" y="677" width="0.0629%" height="15" fill="rgb(243,188,54)" fg:x="8418" fg:w="6"/><text x="88.4428%" y="687.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (6 samples, 0.06%)</title><rect x="88.1928%" y="661" width="0.0629%" height="15" fill="rgb(246,92,22)" fg:x="8418" fg:w="6"/><text x="88.4428%" y="671.50"></text></g><g><title>alloc::alloc::Global::grow_impl (6 samples, 0.06%)</title><rect x="88.1928%" y="645" width="0.0629%" height="15" fill="rgb(211,176,51)" fg:x="8418" fg:w="6"/><text x="88.4428%" y="655.50"></text></g><g><title>alloc::alloc::realloc (6 samples, 0.06%)</title><rect x="88.1928%" y="629" width="0.0629%" height="15" fill="rgb(246,207,34)" fg:x="8418" fg:w="6"/><text x="88.4428%" y="639.50"></text></g><g><title>__GI___libc_realloc (6 samples, 0.06%)</title><rect x="88.1928%" y="613" width="0.0629%" height="15" fill="rgb(239,95,2)" fg:x="8418" fg:w="6"/><text x="88.4428%" y="623.50"></text></g><g><title>_int_realloc (6 samples, 0.06%)</title><rect x="88.1928%" y="597" width="0.0629%" height="15" fill="rgb(211,124,25)" fg:x="8418" fg:w="6"/><text x="88.4428%" y="607.50"></text></g><g><title>_int_malloc (5 samples, 0.05%)</title><rect x="88.2032%" y="581" width="0.0524%" height="15" fill="rgb(231,221,19)" fg:x="8419" fg:w="5"/><text x="88.4532%" y="591.50"></text></g><g><title>malloc_consolidate (2 samples, 0.02%)</title><rect x="88.2347%" y="565" width="0.0210%" height="15" fill="rgb(239,183,19)" fg:x="8422" fg:w="2"/><text x="88.4847%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (10 samples, 0.10%)</title><rect x="88.1928%" y="757" width="0.1048%" height="15" fill="rgb(221,130,29)" fg:x="8418" fg:w="10"/><text x="88.4428%" y="767.50"></text></g><g><title>core::ptr::write (4 samples, 0.04%)</title><rect x="88.2556%" y="741" width="0.0419%" height="15" fill="rgb(206,130,36)" fg:x="8424" fg:w="4"/><text x="88.5056%" y="751.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="88.3709%" y="661" width="0.0105%" height="15" fill="rgb(215,70,19)" fg:x="8435" fg:w="1"/><text x="88.6209%" y="671.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="88.3709%" y="645" width="0.0105%" height="15" fill="rgb(244,16,43)" fg:x="8435" fg:w="1"/><text x="88.6209%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (3 samples, 0.03%)</title><rect x="88.3709%" y="677" width="0.0314%" height="15" fill="rgb(222,115,32)" fg:x="8435" fg:w="3"/><text x="88.6209%" y="687.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (2 samples, 0.02%)</title><rect x="88.3814%" y="661" width="0.0210%" height="15" fill="rgb(247,48,25)" fg:x="8436" fg:w="2"/><text x="88.6314%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (1 samples, 0.01%)</title><rect x="88.4023%" y="613" width="0.0105%" height="15" fill="rgb(226,180,51)" fg:x="8438" fg:w="1"/><text x="88.6523%" y="623.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="88.4023%" y="597" width="0.0105%" height="15" fill="rgb(217,142,42)" fg:x="8438" fg:w="1"/><text x="88.6523%" y="607.50"></text></g><g><title>core::num::&lt;impl u64&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="88.4023%" y="581" width="0.0105%" height="15" fill="rgb(220,178,3)" fg:x="8438" fg:w="1"/><text x="88.6523%" y="591.50"></text></g><g><title>hashbrown::map::make_hash (5 samples, 0.05%)</title><rect x="88.3709%" y="693" width="0.0524%" height="15" fill="rgb(217,221,4)" fg:x="8435" fg:w="5"/><text x="88.6209%" y="703.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="88.4023%" y="677" width="0.0210%" height="15" fill="rgb(237,63,43)" fg:x="8438" fg:w="2"/><text x="88.6523%" y="687.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (2 samples, 0.02%)</title><rect x="88.4023%" y="661" width="0.0210%" height="15" fill="rgb(220,57,8)" fg:x="8438" fg:w="2"/><text x="88.6523%" y="671.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (2 samples, 0.02%)</title><rect x="88.4023%" y="645" width="0.0210%" height="15" fill="rgb(254,186,27)" fg:x="8438" fg:w="2"/><text x="88.6523%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (2 samples, 0.02%)</title><rect x="88.4023%" y="629" width="0.0210%" height="15" fill="rgb(251,57,28)" fg:x="8438" fg:w="2"/><text x="88.6523%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for usize&gt;::hash (1 samples, 0.01%)</title><rect x="88.4128%" y="613" width="0.0105%" height="15" fill="rgb(215,228,0)" fg:x="8439" fg:w="1"/><text x="88.6628%" y="623.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_usize (1 samples, 0.01%)</title><rect x="88.4128%" y="597" width="0.0105%" height="15" fill="rgb(237,218,39)" fg:x="8439" fg:w="1"/><text x="88.6628%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u64 (1 samples, 0.01%)</title><rect x="88.4128%" y="581" width="0.0105%" height="15" fill="rgb(207,2,54)" fg:x="8439" fg:w="1"/><text x="88.6628%" y="591.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (1 samples, 0.01%)</title><rect x="88.4128%" y="565" width="0.0105%" height="15" fill="rgb(232,76,50)" fg:x="8439" fg:w="1"/><text x="88.6628%" y="575.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="88.4128%" y="549" width="0.0105%" height="15" fill="rgb(211,85,31)" fg:x="8439" fg:w="1"/><text x="88.6628%" y="559.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="88.4128%" y="533" width="0.0105%" height="15" fill="rgb(223,210,27)" fg:x="8439" fg:w="1"/><text x="88.6628%" y="543.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.4337%" y="661" width="0.0105%" height="15" fill="rgb(254,36,8)" fg:x="8441" fg:w="1"/><text x="88.6837%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="88.4337%" y="645" width="0.0105%" height="15" fill="rgb(213,4,25)" fg:x="8441" fg:w="1"/><text x="88.6837%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (36 samples, 0.38%)</title><rect x="88.4442%" y="661" width="0.3772%" height="15" fill="rgb(224,2,39)" fg:x="8442" fg:w="36"/><text x="88.6942%" y="671.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (36 samples, 0.38%)</title><rect x="88.4442%" y="645" width="0.3772%" height="15" fill="rgb(208,8,39)" fg:x="8442" fg:w="36"/><text x="88.6942%" y="655.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (2 samples, 0.02%)</title><rect x="88.8004%" y="629" width="0.0210%" height="15" fill="rgb(216,226,3)" fg:x="8476" fg:w="2"/><text x="89.0504%" y="639.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (2 samples, 0.02%)</title><rect x="88.8004%" y="613" width="0.0210%" height="15" fill="rgb(249,139,31)" fg:x="8476" fg:w="2"/><text x="89.0504%" y="623.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (2 samples, 0.02%)</title><rect x="88.8004%" y="597" width="0.0210%" height="15" fill="rgb(242,170,35)" fg:x="8476" fg:w="2"/><text x="89.0504%" y="607.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (52 samples, 0.54%)</title><rect x="88.2975%" y="757" width="0.5448%" height="15" fill="rgb(238,14,9)" fg:x="8428" fg:w="52"/><text x="88.5475%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (45 samples, 0.47%)</title><rect x="88.3709%" y="741" width="0.4715%" height="15" fill="rgb(251,81,46)" fg:x="8435" fg:w="45"/><text x="88.6209%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (45 samples, 0.47%)</title><rect x="88.3709%" y="725" width="0.4715%" height="15" fill="rgb(230,23,4)" fg:x="8435" fg:w="45"/><text x="88.6209%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (45 samples, 0.47%)</title><rect x="88.3709%" y="709" width="0.4715%" height="15" fill="rgb(211,85,25)" fg:x="8435" fg:w="45"/><text x="88.6209%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (40 samples, 0.42%)</title><rect x="88.4233%" y="693" width="0.4191%" height="15" fill="rgb(252,23,31)" fg:x="8440" fg:w="40"/><text x="88.6733%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (40 samples, 0.42%)</title><rect x="88.4233%" y="677" width="0.4191%" height="15" fill="rgb(234,163,38)" fg:x="8440" fg:w="40"/><text x="88.6733%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (2 samples, 0.02%)</title><rect x="88.8214%" y="661" width="0.0210%" height="15" fill="rgb(210,190,50)" fg:x="8478" fg:w="2"/><text x="89.0714%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (2 samples, 0.02%)</title><rect x="88.8214%" y="645" width="0.0210%" height="15" fill="rgb(228,158,3)" fg:x="8478" fg:w="2"/><text x="89.0714%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (2 samples, 0.02%)</title><rect x="88.8214%" y="629" width="0.0210%" height="15" fill="rgb(216,130,0)" fg:x="8478" fg:w="2"/><text x="89.0714%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="88.8214%" y="613" width="0.0210%" height="15" fill="rgb(224,184,10)" fg:x="8478" fg:w="2"/><text x="89.0714%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="88.8214%" y="597" width="0.0210%" height="15" fill="rgb(214,202,18)" fg:x="8478" fg:w="2"/><text x="89.0714%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="88.8214%" y="581" width="0.0210%" height="15" fill="rgb(213,229,54)" fg:x="8478" fg:w="2"/><text x="89.0714%" y="591.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::iter_mut (1 samples, 0.01%)</title><rect x="88.8423%" y="757" width="0.0105%" height="15" fill="rgb(246,120,0)" fg:x="8480" fg:w="1"/><text x="89.0923%" y="767.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::iter_unchecked_manual (1 samples, 0.01%)</title><rect x="88.8423%" y="741" width="0.0105%" height="15" fill="rgb(237,6,15)" fg:x="8480" fg:w="1"/><text x="89.0923%" y="751.50"></text></g><g><title>bevy_ecs::query::iter::QueryIter&lt;Q,F&gt;::new (1 samples, 0.01%)</title><rect x="88.8423%" y="725" width="0.0105%" height="15" fill="rgb(252,156,15)" fg:x="8480" fg:w="1"/><text x="89.0923%" y="735.50"></text></g><g><title>&lt;(F0,F1) as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="88.8423%" y="709" width="0.0105%" height="15" fill="rgb(249,78,18)" fg:x="8480" fg:w="1"/><text x="89.0923%" y="719.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::init (1 samples, 0.01%)</title><rect x="88.8423%" y="693" width="0.0105%" height="15" fill="rgb(230,223,44)" fg:x="8480" fg:w="1"/><text x="89.0923%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (6 samples, 0.06%)</title><rect x="88.9157%" y="741" width="0.0629%" height="15" fill="rgb(230,222,32)" fg:x="8487" fg:w="6"/><text x="89.1657%" y="751.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (5 samples, 0.05%)</title><rect x="88.9261%" y="725" width="0.0524%" height="15" fill="rgb(247,54,6)" fg:x="8488" fg:w="5"/><text x="89.1761%" y="735.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlas as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::render_resources_len (1 samples, 0.01%)</title><rect x="88.9680%" y="709" width="0.0105%" height="15" fill="rgb(247,115,45)" fg:x="8492" fg:w="1"/><text x="89.2180%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_asset::handle::HandleUntyped,u64)&gt; (1 samples, 0.01%)</title><rect x="88.9890%" y="709" width="0.0105%" height="15" fill="rgb(213,203,37)" fg:x="8494" fg:w="1"/><text x="89.2390%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_asset::handle::HandleUntyped&gt; (1 samples, 0.01%)</title><rect x="88.9890%" y="693" width="0.0105%" height="15" fill="rgb(248,188,18)" fg:x="8494" fg:w="1"/><text x="89.2390%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (1 samples, 0.01%)</title><rect x="88.9890%" y="677" width="0.0105%" height="15" fill="rgb(206,80,8)" fg:x="8494" fg:w="1"/><text x="89.2390%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;(bevy_asset::handle::HandleUntyped,u64),bevy_render::renderer::render_resource::render_resource::RenderResourceId,ahash::random_state::RandomState&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="88.9995%" y="709" width="0.0105%" height="15" fill="rgb(245,217,31)" fg:x="8495" fg:w="1"/><text x="89.2495%" y="719.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="88.9995%" y="693" width="0.0105%" height="15" fill="rgb(220,193,15)" fg:x="8495" fg:w="1"/><text x="89.2495%" y="703.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (1 samples, 0.01%)</title><rect x="88.9995%" y="677" width="0.0105%" height="15" fill="rgb(226,7,19)" fg:x="8495" fg:w="1"/><text x="89.2495%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="88.9995%" y="661" width="0.0105%" height="15" fill="rgb(222,145,31)" fg:x="8495" fg:w="1"/><text x="89.2495%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="88.9995%" y="645" width="0.0105%" height="15" fill="rgb(241,193,36)" fg:x="8495" fg:w="1"/><text x="89.2495%" y="655.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="89.0100%" y="661" width="0.0105%" height="15" fill="rgb(225,123,33)" fg:x="8496" fg:w="1"/><text x="89.2600%" y="671.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="89.0100%" y="645" width="0.0105%" height="15" fill="rgb(246,136,38)" fg:x="8496" fg:w="1"/><text x="89.2600%" y="655.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (4 samples, 0.04%)</title><rect x="89.0100%" y="709" width="0.0419%" height="15" fill="rgb(243,56,24)" fg:x="8496" fg:w="4"/><text x="89.2600%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (4 samples, 0.04%)</title><rect x="89.0100%" y="693" width="0.0419%" height="15" fill="rgb(215,147,2)" fg:x="8496" fg:w="4"/><text x="89.2600%" y="703.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (4 samples, 0.04%)</title><rect x="89.0100%" y="677" width="0.0419%" height="15" fill="rgb(209,155,27)" fg:x="8496" fg:w="4"/><text x="89.2600%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (3 samples, 0.03%)</title><rect x="89.0204%" y="661" width="0.0314%" height="15" fill="rgb(222,177,11)" fg:x="8497" fg:w="3"/><text x="89.2704%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (3 samples, 0.03%)</title><rect x="89.0204%" y="645" width="0.0314%" height="15" fill="rgb(212,227,15)" fg:x="8497" fg:w="3"/><text x="89.2704%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="89.0519%" y="645" width="0.0105%" height="15" fill="rgb(214,138,20)" fg:x="8500" fg:w="1"/><text x="89.3019%" y="655.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="89.0519%" y="629" width="0.0105%" height="15" fill="rgb(221,170,31)" fg:x="8500" fg:w="1"/><text x="89.3019%" y="639.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="89.0519%" y="613" width="0.0105%" height="15" fill="rgb(253,207,5)" fg:x="8500" fg:w="1"/><text x="89.3019%" y="623.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="89.0623%" y="645" width="0.0105%" height="15" fill="rgb(212,64,37)" fg:x="8501" fg:w="1"/><text x="89.3123%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="89.0623%" y="629" width="0.0105%" height="15" fill="rgb(208,113,51)" fg:x="8501" fg:w="1"/><text x="89.3123%" y="639.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="89.0728%" y="613" width="0.0314%" height="15" fill="rgb(237,15,5)" fg:x="8502" fg:w="3"/><text x="89.3228%" y="623.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (2 samples, 0.02%)</title><rect x="89.0833%" y="597" width="0.0210%" height="15" fill="rgb(238,33,18)" fg:x="8503" fg:w="2"/><text x="89.3333%" y="607.50"></text></g><g><title>hashbrown::map::make_hash (7 samples, 0.07%)</title><rect x="89.0519%" y="661" width="0.0733%" height="15" fill="rgb(253,206,50)" fg:x="8500" fg:w="7"/><text x="89.3019%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for (A,B)&gt;::hash (5 samples, 0.05%)</title><rect x="89.0728%" y="645" width="0.0524%" height="15" fill="rgb(242,158,43)" fg:x="8502" fg:w="5"/><text x="89.3228%" y="655.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (5 samples, 0.05%)</title><rect x="89.0728%" y="629" width="0.0524%" height="15" fill="rgb(213,125,27)" fg:x="8502" fg:w="5"/><text x="89.3228%" y="639.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (2 samples, 0.02%)</title><rect x="89.1042%" y="613" width="0.0210%" height="15" fill="rgb(233,161,31)" fg:x="8505" fg:w="2"/><text x="89.3542%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.1252%" y="629" width="0.0105%" height="15" fill="rgb(218,135,6)" fg:x="8507" fg:w="1"/><text x="89.3752%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.1252%" y="613" width="0.0105%" height="15" fill="rgb(222,73,53)" fg:x="8507" fg:w="1"/><text x="89.3752%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_empty (1 samples, 0.01%)</title><rect x="89.1252%" y="597" width="0.0105%" height="15" fill="rgb(229,66,53)" fg:x="8507" fg:w="1"/><text x="89.3752%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (1 samples, 0.01%)</title><rect x="89.1252%" y="581" width="0.0105%" height="15" fill="rgb(208,128,19)" fg:x="8507" fg:w="1"/><text x="89.3752%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (1 samples, 0.01%)</title><rect x="89.1252%" y="565" width="0.0105%" height="15" fill="rgb(235,70,27)" fg:x="8507" fg:w="1"/><text x="89.3752%" y="575.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (15 samples, 0.16%)</title><rect x="88.9890%" y="725" width="0.1572%" height="15" fill="rgb(241,130,30)" fg:x="8494" fg:w="15"/><text x="89.2390%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (9 samples, 0.09%)</title><rect x="89.0519%" y="709" width="0.0943%" height="15" fill="rgb(222,57,48)" fg:x="8500" fg:w="9"/><text x="89.3019%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (9 samples, 0.09%)</title><rect x="89.0519%" y="693" width="0.0943%" height="15" fill="rgb(225,204,29)" fg:x="8500" fg:w="9"/><text x="89.3019%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (9 samples, 0.09%)</title><rect x="89.0519%" y="677" width="0.0943%" height="15" fill="rgb(240,196,35)" fg:x="8500" fg:w="9"/><text x="89.3019%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (2 samples, 0.02%)</title><rect x="89.1252%" y="661" width="0.0210%" height="15" fill="rgb(215,150,16)" fg:x="8507" fg:w="2"/><text x="89.3752%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="89.1252%" y="645" width="0.0210%" height="15" fill="rgb(209,170,13)" fg:x="8507" fg:w="2"/><text x="89.3752%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="89.1357%" y="629" width="0.0105%" height="15" fill="rgb(235,75,31)" fg:x="8508" fg:w="1"/><text x="89.3857%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="89.1357%" y="613" width="0.0105%" height="15" fill="rgb(252,1,47)" fg:x="8508" fg:w="1"/><text x="89.3857%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="89.1357%" y="597" width="0.0105%" height="15" fill="rgb(241,2,36)" fg:x="8508" fg:w="1"/><text x="89.3857%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="89.1357%" y="581" width="0.0105%" height="15" fill="rgb(236,191,4)" fg:x="8508" fg:w="1"/><text x="89.3857%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="89.1357%" y="565" width="0.0105%" height="15" fill="rgb(212,65,35)" fg:x="8508" fg:w="1"/><text x="89.3857%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="89.1357%" y="549" width="0.0105%" height="15" fill="rgb(209,49,33)" fg:x="8508" fg:w="1"/><text x="89.3857%" y="559.50"></text></g><g><title>[libbevy_dylib-7e0daee3ecabe62f.so] (1 samples, 0.01%)</title><rect x="89.1461%" y="725" width="0.0105%" height="15" fill="rgb(208,36,46)" fg:x="8509" fg:w="1"/><text x="89.3961%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (1 samples, 0.01%)</title><rect x="89.1461%" y="709" width="0.0105%" height="15" fill="rgb(210,125,2)" fg:x="8509" fg:w="1"/><text x="89.3961%" y="719.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (23 samples, 0.24%)</title><rect x="88.9785%" y="741" width="0.2410%" height="15" fill="rgb(225,62,6)" fg:x="8493" fg:w="23"/><text x="89.2285%" y="751.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::clone_weak_untyped (6 samples, 0.06%)</title><rect x="89.1566%" y="725" width="0.0629%" height="15" fill="rgb(210,54,27)" fg:x="8510" fg:w="6"/><text x="89.4066%" y="735.50"></text></g><g><title>&lt;glam::vec2::Vec2 as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::resource_type (1 samples, 0.01%)</title><rect x="89.2195%" y="741" width="0.0105%" height="15" fill="rgb(249,189,52)" fg:x="8516" fg:w="1"/><text x="89.4695%" y="751.50"></text></g><g><title>core::fmt::Arguments::estimated_capacity (1 samples, 0.01%)</title><rect x="89.2404%" y="725" width="0.0105%" height="15" fill="rgb(225,134,40)" fg:x="8518" fg:w="1"/><text x="89.4904%" y="735.50"></text></g><g><title>core::iter::traits::iterator::Iterator::sum (1 samples, 0.01%)</title><rect x="89.2404%" y="709" width="0.0105%" height="15" fill="rgb(206,13,37)" fg:x="8518" fg:w="1"/><text x="89.4904%" y="719.50"></text></g><g><title>&lt;usize as core::iter::traits::accum::Sum&gt;::sum (1 samples, 0.01%)</title><rect x="89.2404%" y="693" width="0.0105%" height="15" fill="rgb(232,114,28)" fg:x="8518" fg:w="1"/><text x="89.4904%" y="703.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="89.2404%" y="677" width="0.0105%" height="15" fill="rgb(253,215,8)" fg:x="8518" fg:w="1"/><text x="89.4904%" y="687.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="89.2404%" y="661" width="0.0105%" height="15" fill="rgb(254,64,19)" fg:x="8518" fg:w="1"/><text x="89.4904%" y="671.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="89.2404%" y="645" width="0.0105%" height="15" fill="rgb(242,18,46)" fg:x="8518" fg:w="1"/><text x="89.4904%" y="655.50"></text></g><g><title>&lt;&amp;T as core::fmt::Display&gt;::fmt (3 samples, 0.03%)</title><rect x="89.3033%" y="693" width="0.0314%" height="15" fill="rgb(239,192,30)" fg:x="8524" fg:w="3"/><text x="89.5533%" y="703.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (5 samples, 0.05%)</title><rect x="89.3976%" y="533" width="0.0524%" height="15" fill="rgb(232,73,14)" fg:x="8533" fg:w="5"/><text x="89.6476%" y="543.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (1 samples, 0.01%)</title><rect x="89.4500%" y="533" width="0.0105%" height="15" fill="rgb(225,51,9)" fg:x="8538" fg:w="1"/><text x="89.7000%" y="543.50"></text></g><g><title>__GI___libc_realloc (15 samples, 0.16%)</title><rect x="89.4814%" y="469" width="0.1572%" height="15" fill="rgb(242,217,54)" fg:x="8541" fg:w="15"/><text x="89.7314%" y="479.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="89.6281%" y="453" width="0.0105%" height="15" fill="rgb(216,93,3)" fg:x="8555" fg:w="1"/><text x="89.8781%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (16 samples, 0.17%)</title><rect x="89.4814%" y="517" width="0.1676%" height="15" fill="rgb(230,119,33)" fg:x="8541" fg:w="16"/><text x="89.7314%" y="527.50"></text></g><g><title>alloc::alloc::Global::grow_impl (16 samples, 0.17%)</title><rect x="89.4814%" y="501" width="0.1676%" height="15" fill="rgb(238,170,27)" fg:x="8541" fg:w="16"/><text x="89.7314%" y="511.50"></text></g><g><title>alloc::alloc::realloc (16 samples, 0.17%)</title><rect x="89.4814%" y="485" width="0.1676%" height="15" fill="rgb(229,8,2)" fg:x="8541" fg:w="16"/><text x="89.7314%" y="495.50"></text></g><g><title>__rdl_realloc (1 samples, 0.01%)</title><rect x="89.6386%" y="469" width="0.0105%" height="15" fill="rgb(205,214,42)" fg:x="8556" fg:w="1"/><text x="89.8886%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.29%)</title><rect x="89.3976%" y="549" width="0.2933%" height="15" fill="rgb(245,113,1)" fg:x="8533" fg:w="28"/><text x="89.6476%" y="559.50"></text></g><g><title>alloc::raw_vec::finish_grow (22 samples, 0.23%)</title><rect x="89.4605%" y="533" width="0.2305%" height="15" fill="rgb(252,50,2)" fg:x="8539" fg:w="22"/><text x="89.7105%" y="543.50"></text></g><g><title>__GI___libc_malloc (4 samples, 0.04%)</title><rect x="89.6490%" y="517" width="0.0419%" height="15" fill="rgb(225,122,24)" fg:x="8557" fg:w="4"/><text x="89.8990%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (32 samples, 0.34%)</title><rect x="89.3662%" y="597" width="0.3353%" height="15" fill="rgb(234,129,31)" fg:x="8530" fg:w="32"/><text x="89.6162%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.34%)</title><rect x="89.3662%" y="581" width="0.3353%" height="15" fill="rgb(219,177,4)" fg:x="8530" fg:w="32"/><text x="89.6162%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.31%)</title><rect x="89.3871%" y="565" width="0.3143%" height="15" fill="rgb(225,142,27)" fg:x="8532" fg:w="30"/><text x="89.6371%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="89.6909%" y="549" width="0.0105%" height="15" fill="rgb(205,107,51)" fg:x="8561" fg:w="1"/><text x="89.9409%" y="559.50"></text></g><g><title>__memcpy_sse2_unaligned (1 samples, 0.01%)</title><rect x="89.7014%" y="581" width="0.0105%" height="15" fill="rgb(236,223,15)" fg:x="8562" fg:w="1"/><text x="89.9514%" y="591.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (37 samples, 0.39%)</title><rect x="89.3347%" y="693" width="0.3876%" height="15" fill="rgb(235,133,11)" fg:x="8527" fg:w="37"/><text x="89.5847%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (37 samples, 0.39%)</title><rect x="89.3347%" y="677" width="0.3876%" height="15" fill="rgb(247,172,13)" fg:x="8527" fg:w="37"/><text x="89.5847%" y="687.50"></text></g><g><title>alloc::string::String::push_str (37 samples, 0.39%)</title><rect x="89.3347%" y="661" width="0.3876%" height="15" fill="rgb(233,191,41)" fg:x="8527" fg:w="37"/><text x="89.5847%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (37 samples, 0.39%)</title><rect x="89.3347%" y="645" width="0.3876%" height="15" fill="rgb(250,65,16)" fg:x="8527" fg:w="37"/><text x="89.5847%" y="655.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (37 samples, 0.39%)</title><rect x="89.3347%" y="629" width="0.3876%" height="15" fill="rgb(206,10,27)" fg:x="8527" fg:w="37"/><text x="89.5847%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (37 samples, 0.39%)</title><rect x="89.3347%" y="613" width="0.3876%" height="15" fill="rgb(212,96,22)" fg:x="8527" fg:w="37"/><text x="89.5847%" y="623.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="89.7014%" y="597" width="0.0210%" height="15" fill="rgb(206,50,0)" fg:x="8562" fg:w="2"/><text x="89.9514%" y="607.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="89.7119%" y="581" width="0.0105%" height="15" fill="rgb(249,105,52)" fg:x="8563" fg:w="1"/><text x="89.9619%" y="591.50"></text></g><g><title>&lt;str as core::fmt::Display&gt;::fmt (1 samples, 0.01%)</title><rect x="89.7224%" y="693" width="0.0105%" height="15" fill="rgb(216,93,51)" fg:x="8564" fg:w="1"/><text x="89.9724%" y="703.50"></text></g><g><title>core::fmt::Formatter::new (1 samples, 0.01%)</title><rect x="89.7328%" y="693" width="0.0105%" height="15" fill="rgb(217,172,13)" fg:x="8565" fg:w="1"/><text x="89.9828%" y="703.50"></text></g><g><title>alloc::fmt::format (52 samples, 0.54%)</title><rect x="89.2300%" y="741" width="0.5448%" height="15" fill="rgb(235,199,38)" fg:x="8517" fg:w="52"/><text x="89.4800%" y="751.50"></text></g><g><title>core::fmt::Write::write_fmt (50 samples, 0.52%)</title><rect x="89.2509%" y="725" width="0.5238%" height="15" fill="rgb(221,97,33)" fg:x="8519" fg:w="50"/><text x="89.5009%" y="735.50"></text></g><g><title>core::fmt::write (46 samples, 0.48%)</title><rect x="89.2928%" y="709" width="0.4819%" height="15" fill="rgb(205,156,50)" fg:x="8523" fg:w="46"/><text x="89.5428%" y="719.50"></text></g><g><title>core::fmt::Formatter::pad (3 samples, 0.03%)</title><rect x="89.7433%" y="693" width="0.0314%" height="15" fill="rgb(215,142,19)" fg:x="8566" fg:w="3"/><text x="89.9933%" y="703.50"></text></g><g><title>core::fmt::Arguments::new_v1 (1 samples, 0.01%)</title><rect x="89.7748%" y="741" width="0.0105%" height="15" fill="rgb(232,170,7)" fg:x="8569" fg:w="1"/><text x="90.0248%" y="751.50"></text></g><g><title>__GI___libc_free (9 samples, 0.09%)</title><rect x="89.7852%" y="645" width="0.0943%" height="15" fill="rgb(223,50,17)" fg:x="8570" fg:w="9"/><text x="90.0352%" y="655.50"></text></g><g><title>_int_free (9 samples, 0.09%)</title><rect x="89.7852%" y="629" width="0.0943%" height="15" fill="rgb(230,103,46)" fg:x="8570" fg:w="9"/><text x="90.0352%" y="639.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (99 samples, 1.04%)</title><rect x="88.8528%" y="757" width="1.0372%" height="15" fill="rgb(254,30,34)" fg:x="8481" fg:w="99"/><text x="89.1028%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (10 samples, 0.10%)</title><rect x="89.7852%" y="741" width="0.1048%" height="15" fill="rgb(235,198,1)" fg:x="8570" fg:w="10"/><text x="90.0352%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (10 samples, 0.10%)</title><rect x="89.7852%" y="725" width="0.1048%" height="15" fill="rgb(217,105,47)" fg:x="8570" fg:w="10"/><text x="90.0352%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (10 samples, 0.10%)</title><rect x="89.7852%" y="709" width="0.1048%" height="15" fill="rgb(231,18,12)" fg:x="8570" fg:w="10"/><text x="90.0352%" y="719.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (10 samples, 0.10%)</title><rect x="89.7852%" y="693" width="0.1048%" height="15" fill="rgb(218,196,1)" fg:x="8570" fg:w="10"/><text x="90.0352%" y="703.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (10 samples, 0.10%)</title><rect x="89.7852%" y="677" width="0.1048%" height="15" fill="rgb(210,32,3)" fg:x="8570" fg:w="10"/><text x="90.0352%" y="687.50"></text></g><g><title>alloc::alloc::dealloc (10 samples, 0.10%)</title><rect x="89.7852%" y="661" width="0.1048%" height="15" fill="rgb(227,178,30)" fg:x="8570" fg:w="10"/><text x="90.0352%" y="671.50"></text></g><g><title>__rust_dealloc (1 samples, 0.01%)</title><rect x="89.8795%" y="645" width="0.0105%" height="15" fill="rgb(231,140,27)" fg:x="8579" fg:w="1"/><text x="90.1295%" y="655.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::clone_weak_untyped (7 samples, 0.07%)</title><rect x="89.8900%" y="741" width="0.0733%" height="15" fill="rgb(206,66,35)" fg:x="8580" fg:w="7"/><text x="90.1400%" y="751.50"></text></g><g><title>bevy_asset::handle::HandleUntyped::weak (2 samples, 0.02%)</title><rect x="89.9424%" y="725" width="0.0210%" height="15" fill="rgb(212,34,2)" fg:x="8585" fg:w="2"/><text x="90.1924%" y="735.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (1 samples, 0.01%)</title><rect x="90.0052%" y="693" width="0.0105%" height="15" fill="rgb(207,201,33)" fg:x="8591" fg:w="1"/><text x="90.2552%" y="703.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (1 samples, 0.01%)</title><rect x="90.0052%" y="677" width="0.0105%" height="15" fill="rgb(221,135,32)" fg:x="8591" fg:w="1"/><text x="90.2552%" y="687.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u64 (1 samples, 0.01%)</title><rect x="90.0157%" y="581" width="0.0105%" height="15" fill="rgb(206,77,31)" fg:x="8592" fg:w="1"/><text x="90.2657%" y="591.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (5 samples, 0.05%)</title><rect x="90.0157%" y="677" width="0.0524%" height="15" fill="rgb(252,198,50)" fg:x="8592" fg:w="5"/><text x="90.2657%" y="687.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (5 samples, 0.05%)</title><rect x="90.0157%" y="661" width="0.0524%" height="15" fill="rgb(206,79,27)" fg:x="8592" fg:w="5"/><text x="90.2657%" y="671.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (5 samples, 0.05%)</title><rect x="90.0157%" y="645" width="0.0524%" height="15" fill="rgb(228,108,9)" fg:x="8592" fg:w="5"/><text x="90.2657%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (5 samples, 0.05%)</title><rect x="90.0157%" y="629" width="0.0524%" height="15" fill="rgb(213,9,39)" fg:x="8592" fg:w="5"/><text x="90.2657%" y="639.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (5 samples, 0.05%)</title><rect x="90.0157%" y="613" width="0.0524%" height="15" fill="rgb(252,51,13)" fg:x="8592" fg:w="5"/><text x="90.2657%" y="623.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (5 samples, 0.05%)</title><rect x="90.0157%" y="597" width="0.0524%" height="15" fill="rgb(218,202,39)" fg:x="8592" fg:w="5"/><text x="90.2657%" y="607.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (4 samples, 0.04%)</title><rect x="90.0262%" y="581" width="0.0419%" height="15" fill="rgb(214,122,21)" fg:x="8593" fg:w="4"/><text x="90.2762%" y="591.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="90.0576%" y="565" width="0.0105%" height="15" fill="rgb(217,205,48)" fg:x="8596" fg:w="1"/><text x="90.3076%" y="575.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="90.0576%" y="549" width="0.0105%" height="15" fill="rgb(230,216,13)" fg:x="8596" fg:w="1"/><text x="90.3076%" y="559.50"></text></g><g><title>hashbrown::map::make_insert_hash (9 samples, 0.09%)</title><rect x="90.0052%" y="709" width="0.0943%" height="15" fill="rgb(249,118,4)" fg:x="8591" fg:w="9"/><text x="90.2552%" y="719.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (8 samples, 0.08%)</title><rect x="90.0157%" y="693" width="0.0838%" height="15" fill="rgb(212,207,40)" fg:x="8592" fg:w="8"/><text x="90.2657%" y="703.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (3 samples, 0.03%)</title><rect x="90.0681%" y="677" width="0.0314%" height="15" fill="rgb(217,156,26)" fg:x="8597" fg:w="3"/><text x="90.3181%" y="687.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="90.1100%" y="693" width="0.0210%" height="15" fill="rgb(226,86,34)" fg:x="8601" fg:w="2"/><text x="90.3600%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="90.1100%" y="677" width="0.0210%" height="15" fill="rgb(217,111,30)" fg:x="8601" fg:w="2"/><text x="90.3600%" y="687.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="90.1310%" y="645" width="0.0105%" height="15" fill="rgb(228,64,18)" fg:x="8603" fg:w="1"/><text x="90.3810%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (4 samples, 0.04%)</title><rect x="90.1310%" y="693" width="0.0419%" height="15" fill="rgb(254,217,48)" fg:x="8603" fg:w="4"/><text x="90.3810%" y="703.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (4 samples, 0.04%)</title><rect x="90.1310%" y="677" width="0.0419%" height="15" fill="rgb(226,156,48)" fg:x="8603" fg:w="4"/><text x="90.3810%" y="687.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (4 samples, 0.04%)</title><rect x="90.1310%" y="661" width="0.0419%" height="15" fill="rgb(236,168,20)" fg:x="8603" fg:w="4"/><text x="90.3810%" y="671.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (3 samples, 0.03%)</title><rect x="90.1414%" y="645" width="0.0314%" height="15" fill="rgb(239,210,33)" fg:x="8604" fg:w="3"/><text x="90.3914%" y="655.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (3 samples, 0.03%)</title><rect x="90.1414%" y="629" width="0.0314%" height="15" fill="rgb(242,85,17)" fg:x="8604" fg:w="3"/><text x="90.3914%" y="639.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (3 samples, 0.03%)</title><rect x="90.1414%" y="613" width="0.0314%" height="15" fill="rgb(221,196,15)" fg:x="8604" fg:w="3"/><text x="90.3914%" y="623.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (357 samples, 3.74%)</title><rect x="86.9251%" y="1077" width="3.7402%" height="15" fill="rgb(249,76,21)" fg:x="8297" fg:w="357"/><text x="87.1751%" y="1087.50">bevy..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (357 samples, 3.74%)</title><rect x="86.9251%" y="1061" width="3.7402%" height="15" fill="rgb(243,67,29)" fg:x="8297" fg:w="357"/><text x="87.1751%" y="1071.50">&lt;bev..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (357 samples, 3.74%)</title><rect x="86.9251%" y="1045" width="3.7402%" height="15" fill="rgb(240,159,2)" fg:x="8297" fg:w="357"/><text x="87.1751%" y="1055.50">bevy..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (357 samples, 3.74%)</title><rect x="86.9251%" y="1029" width="3.7402%" height="15" fill="rgb(244,64,3)" fg:x="8297" fg:w="357"/><text x="87.1751%" y="1039.50">&lt;bev..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (357 samples, 3.74%)</title><rect x="86.9251%" y="1013" width="3.7402%" height="15" fill="rgb(220,86,40)" fg:x="8297" fg:w="357"/><text x="87.1751%" y="1023.50">&lt;bev..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (357 samples, 3.74%)</title><rect x="86.9251%" y="997" width="3.7402%" height="15" fill="rgb(222,194,51)" fg:x="8297" fg:w="357"/><text x="87.1751%" y="1007.50">bevy..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (357 samples, 3.74%)</title><rect x="86.9251%" y="981" width="3.7402%" height="15" fill="rgb(207,154,19)" fg:x="8297" fg:w="357"/><text x="87.1751%" y="991.50">std:..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (357 samples, 3.74%)</title><rect x="86.9251%" y="965" width="3.7402%" height="15" fill="rgb(206,178,36)" fg:x="8297" fg:w="357"/><text x="87.1751%" y="975.50">std:..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (357 samples, 3.74%)</title><rect x="86.9251%" y="949" width="3.7402%" height="15" fill="rgb(218,8,24)" fg:x="8297" fg:w="357"/><text x="87.1751%" y="959.50">bevy..</text></g><g><title>async_executor::Executor::try_tick (356 samples, 3.73%)</title><rect x="86.9356%" y="933" width="3.7297%" height="15" fill="rgb(226,83,41)" fg:x="8298" fg:w="356"/><text x="87.1856%" y="943.50">asyn..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (356 samples, 3.73%)</title><rect x="86.9356%" y="917" width="3.7297%" height="15" fill="rgb(224,23,22)" fg:x="8298" fg:w="356"/><text x="87.1856%" y="927.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (356 samples, 3.73%)</title><rect x="86.9356%" y="901" width="3.7297%" height="15" fill="rgb(218,198,45)" fg:x="8298" fg:w="356"/><text x="87.1856%" y="911.50">&lt;cor..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (356 samples, 3.73%)</title><rect x="86.9356%" y="885" width="3.7297%" height="15" fill="rgb(249,147,41)" fg:x="8298" fg:w="356"/><text x="87.1856%" y="895.50">asyn..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (356 samples, 3.73%)</title><rect x="86.9356%" y="869" width="3.7297%" height="15" fill="rgb(244,224,13)" fg:x="8298" fg:w="356"/><text x="87.1856%" y="879.50">&lt;cor..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (356 samples, 3.73%)</title><rect x="86.9356%" y="853" width="3.7297%" height="15" fill="rgb(225,97,27)" fg:x="8298" fg:w="356"/><text x="87.1856%" y="863.50">bevy..</text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (356 samples, 3.73%)</title><rect x="86.9356%" y="837" width="3.7297%" height="15" fill="rgb(254,64,0)" fg:x="8298" fg:w="356"/><text x="87.1856%" y="847.50">&lt;bev..</text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (241 samples, 2.52%)</title><rect x="88.1404%" y="821" width="2.5249%" height="15" fill="rgb(208,130,43)" fg:x="8413" fg:w="241"/><text x="88.3904%" y="831.50">&lt;F..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (241 samples, 2.52%)</title><rect x="88.1404%" y="805" width="2.5249%" height="15" fill="rgb(247,91,25)" fg:x="8413" fg:w="241"/><text x="88.3904%" y="815.50">co..</text></g><g><title>core::ops::function::Fn::call (241 samples, 2.52%)</title><rect x="88.1404%" y="789" width="2.5249%" height="15" fill="rgb(215,218,42)" fg:x="8413" fg:w="241"/><text x="88.3904%" y="799.50">co..</text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (241 samples, 2.52%)</title><rect x="88.1404%" y="773" width="2.5249%" height="15" fill="rgb(233,9,24)" fg:x="8413" fg:w="241"/><text x="88.3904%" y="783.50">be..</text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (74 samples, 0.78%)</title><rect x="89.8900%" y="757" width="0.7753%" height="15" fill="rgb(252,105,38)" fg:x="8580" fg:w="74"/><text x="90.1400%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (67 samples, 0.70%)</title><rect x="89.9633%" y="741" width="0.7019%" height="15" fill="rgb(225,40,49)" fg:x="8587" fg:w="67"/><text x="90.2133%" y="751.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (65 samples, 0.68%)</title><rect x="89.9843%" y="725" width="0.6810%" height="15" fill="rgb(232,196,19)" fg:x="8589" fg:w="65"/><text x="90.2343%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (54 samples, 0.57%)</title><rect x="90.0995%" y="709" width="0.5657%" height="15" fill="rgb(207,35,15)" fg:x="8600" fg:w="54"/><text x="90.3495%" y="719.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (47 samples, 0.49%)</title><rect x="90.1729%" y="693" width="0.4924%" height="15" fill="rgb(238,68,36)" fg:x="8607" fg:w="47"/><text x="90.4229%" y="703.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (47 samples, 0.49%)</title><rect x="90.1729%" y="677" width="0.4924%" height="15" fill="rgb(205,158,20)" fg:x="8607" fg:w="47"/><text x="90.4229%" y="687.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (47 samples, 0.49%)</title><rect x="90.1729%" y="661" width="0.4924%" height="15" fill="rgb(232,32,22)" fg:x="8607" fg:w="47"/><text x="90.4229%" y="671.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (5 samples, 0.05%)</title><rect x="90.6129%" y="645" width="0.0524%" height="15" fill="rgb(210,169,6)" fg:x="8649" fg:w="5"/><text x="90.8629%" y="655.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (5 samples, 0.05%)</title><rect x="90.6129%" y="629" width="0.0524%" height="15" fill="rgb(229,28,12)" fg:x="8649" fg:w="5"/><text x="90.8629%" y="639.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (5 samples, 0.05%)</title><rect x="90.6129%" y="613" width="0.0524%" height="15" fill="rgb(229,78,10)" fg:x="8649" fg:w="5"/><text x="90.8629%" y="623.50"></text></g><g><title>[libxcb.so.1.1.0] (1 samples, 0.01%)</title><rect x="90.6653%" y="645" width="0.0105%" height="15" fill="rgb(223,139,54)" fg:x="8654" fg:w="1"/><text x="90.9153%" y="655.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="90.6653%" y="629" width="0.0105%" height="15" fill="rgb(207,110,4)" fg:x="8654" fg:w="1"/><text x="90.9153%" y="639.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="90.6653%" y="709" width="0.0210%" height="15" fill="rgb(248,30,41)" fg:x="8654" fg:w="2"/><text x="90.9153%" y="719.50"></text></g><g><title>xcb_wait_for_special_event (2 samples, 0.02%)</title><rect x="90.6653%" y="693" width="0.0210%" height="15" fill="rgb(235,54,25)" fg:x="8654" fg:w="2"/><text x="90.9153%" y="703.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="90.6653%" y="677" width="0.0210%" height="15" fill="rgb(213,107,41)" fg:x="8654" fg:w="2"/><text x="90.9153%" y="687.50"></text></g><g><title>[libxcb.so.1.1.0] (2 samples, 0.02%)</title><rect x="90.6653%" y="661" width="0.0210%" height="15" fill="rgb(237,102,9)" fg:x="8654" fg:w="2"/><text x="90.9153%" y="671.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="90.6757%" y="645" width="0.0105%" height="15" fill="rgb(252,137,49)" fg:x="8655" fg:w="1"/><text x="90.9257%" y="655.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (3 samples, 0.03%)</title><rect x="90.6653%" y="1045" width="0.0314%" height="15" fill="rgb(233,202,33)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="1055.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (3 samples, 0.03%)</title><rect x="90.6653%" y="1029" width="0.0314%" height="15" fill="rgb(223,14,51)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="1039.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (3 samples, 0.03%)</title><rect x="90.6653%" y="1013" width="0.0314%" height="15" fill="rgb(248,70,23)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (3 samples, 0.03%)</title><rect x="90.6653%" y="997" width="0.0314%" height="15" fill="rgb(209,207,47)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="1007.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (3 samples, 0.03%)</title><rect x="90.6653%" y="981" width="0.0314%" height="15" fill="rgb(245,124,2)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="991.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (3 samples, 0.03%)</title><rect x="90.6653%" y="965" width="0.0314%" height="15" fill="rgb(249,208,11)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="975.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (3 samples, 0.03%)</title><rect x="90.6653%" y="949" width="0.0314%" height="15" fill="rgb(247,112,7)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (3 samples, 0.03%)</title><rect x="90.6653%" y="933" width="0.0314%" height="15" fill="rgb(209,192,31)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (3 samples, 0.03%)</title><rect x="90.6653%" y="917" width="0.0314%" height="15" fill="rgb(236,55,19)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (3 samples, 0.03%)</title><rect x="90.6653%" y="901" width="0.0314%" height="15" fill="rgb(252,89,41)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="911.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (3 samples, 0.03%)</title><rect x="90.6653%" y="885" width="0.0314%" height="15" fill="rgb(220,172,14)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="895.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (3 samples, 0.03%)</title><rect x="90.6653%" y="869" width="0.0314%" height="15" fill="rgb(252,65,2)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="879.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (3 samples, 0.03%)</title><rect x="90.6653%" y="853" width="0.0314%" height="15" fill="rgb(250,20,8)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="863.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (3 samples, 0.03%)</title><rect x="90.6653%" y="837" width="0.0314%" height="15" fill="rgb(234,149,13)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="847.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (3 samples, 0.03%)</title><rect x="90.6653%" y="821" width="0.0314%" height="15" fill="rgb(223,219,12)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="831.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (3 samples, 0.03%)</title><rect x="90.6653%" y="805" width="0.0314%" height="15" fill="rgb(234,13,49)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="90.6653%" y="789" width="0.0314%" height="15" fill="rgb(214,41,25)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="90.6653%" y="773" width="0.0314%" height="15" fill="rgb(232,198,52)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="90.6653%" y="757" width="0.0314%" height="15" fill="rgb(236,111,46)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="90.6653%" y="741" width="0.0314%" height="15" fill="rgb(253,30,20)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="90.6653%" y="725" width="0.0314%" height="15" fill="rgb(247,141,17)" fg:x="8654" fg:w="3"/><text x="90.9153%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="90.6862%" y="709" width="0.0105%" height="15" fill="rgb(214,195,21)" fg:x="8656" fg:w="1"/><text x="90.9362%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="90.6862%" y="693" width="0.0105%" height="15" fill="rgb(214,98,12)" fg:x="8656" fg:w="1"/><text x="90.9362%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_vertex_buffer (1 samples, 0.01%)</title><rect x="90.6967%" y="933" width="0.0105%" height="15" fill="rgb(239,4,26)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="943.50"></text></g><g><title>wgpu_render_pass_set_vertex_buffer (1 samples, 0.01%)</title><rect x="90.6967%" y="917" width="0.0105%" height="15" fill="rgb(234,210,35)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1 samples, 0.01%)</title><rect x="90.6967%" y="901" width="0.0105%" height="15" fill="rgb(252,178,27)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.6967%" y="885" width="0.0105%" height="15" fill="rgb(217,50,1)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.6967%" y="869" width="0.0105%" height="15" fill="rgb(233,137,5)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="90.6967%" y="853" width="0.0105%" height="15" fill="rgb(217,227,25)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.6967%" y="837" width="0.0105%" height="15" fill="rgb(242,89,38)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="847.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.6967%" y="821" width="0.0105%" height="15" fill="rgb(212,190,30)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="831.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="90.6967%" y="805" width="0.0105%" height="15" fill="rgb(222,120,8)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="815.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="90.6967%" y="789" width="0.0105%" height="15" fill="rgb(227,181,9)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="799.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="90.6967%" y="773" width="0.0105%" height="15" fill="rgb(222,125,29)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="783.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="90.6967%" y="757" width="0.0105%" height="15" fill="rgb(215,153,31)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="767.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="90.6967%" y="741" width="0.0105%" height="15" fill="rgb(228,77,30)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="751.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="90.6967%" y="725" width="0.0105%" height="15" fill="rgb(226,110,9)" fg:x="8657" fg:w="1"/><text x="90.9467%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (1 samples, 0.01%)</title><rect x="90.7072%" y="917" width="0.0105%" height="15" fill="rgb(219,111,7)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="90.7072%" y="901" width="0.0105%" height="15" fill="rgb(229,167,25)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="911.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="90.7072%" y="885" width="0.0105%" height="15" fill="rgb(209,77,43)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.7072%" y="869" width="0.0105%" height="15" fill="rgb(233,70,39)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="90.7072%" y="853" width="0.0105%" height="15" fill="rgb(207,171,44)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="863.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="90.7072%" y="837" width="0.0105%" height="15" fill="rgb(244,91,6)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="847.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="90.7072%" y="821" width="0.0105%" height="15" fill="rgb(234,136,12)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="831.50"></text></g><g><title>alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="90.7072%" y="805" width="0.0105%" height="15" fill="rgb(216,210,38)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="815.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1 samples, 0.01%)</title><rect x="90.7072%" y="789" width="0.0105%" height="15" fill="rgb(241,227,7)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="799.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1 samples, 0.01%)</title><rect x="90.7072%" y="773" width="0.0105%" height="15" fill="rgb(241,222,11)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="783.50"></text></g><g><title>alloc::alloc::realloc (1 samples, 0.01%)</title><rect x="90.7072%" y="757" width="0.0105%" height="15" fill="rgb(246,86,18)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="767.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="90.7072%" y="741" width="0.0105%" height="15" fill="rgb(224,151,49)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="751.50"></text></g><g><title>_int_realloc (1 samples, 0.01%)</title><rect x="90.7072%" y="725" width="0.0105%" height="15" fill="rgb(235,4,41)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="735.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="90.7072%" y="709" width="0.0105%" height="15" fill="rgb(218,30,52)" fg:x="8658" fg:w="1"/><text x="90.9572%" y="719.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="90.7177%" y="741" width="0.0210%" height="15" fill="rgb(205,124,51)" fg:x="8659" fg:w="2"/><text x="90.9677%" y="751.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (5 samples, 0.05%)</title><rect x="90.6967%" y="981" width="0.0524%" height="15" fill="rgb(237,126,51)" fg:x="8657" fg:w="5"/><text x="90.9467%" y="991.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (5 samples, 0.05%)</title><rect x="90.6967%" y="965" width="0.0524%" height="15" fill="rgb(225,32,46)" fg:x="8657" fg:w="5"/><text x="90.9467%" y="975.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (5 samples, 0.05%)</title><rect x="90.6967%" y="949" width="0.0524%" height="15" fill="rgb(251,60,49)" fg:x="8657" fg:w="5"/><text x="90.9467%" y="959.50"></text></g><g><title>wgpu_render_pass_set_bind_group (4 samples, 0.04%)</title><rect x="90.7072%" y="933" width="0.0419%" height="15" fill="rgb(234,18,23)" fg:x="8658" fg:w="4"/><text x="90.9572%" y="943.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (3 samples, 0.03%)</title><rect x="90.7177%" y="917" width="0.0314%" height="15" fill="rgb(234,25,23)" fg:x="8659" fg:w="3"/><text x="90.9677%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="90.7177%" y="901" width="0.0314%" height="15" fill="rgb(210,43,52)" fg:x="8659" fg:w="3"/><text x="90.9677%" y="911.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (3 samples, 0.03%)</title><rect x="90.7177%" y="885" width="0.0314%" height="15" fill="rgb(237,198,21)" fg:x="8659" fg:w="3"/><text x="90.9677%" y="895.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="90.7177%" y="869" width="0.0314%" height="15" fill="rgb(211,20,34)" fg:x="8659" fg:w="3"/><text x="90.9677%" y="879.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (3 samples, 0.03%)</title><rect x="90.7177%" y="853" width="0.0314%" height="15" fill="rgb(221,155,50)" fg:x="8659" fg:w="3"/><text x="90.9677%" y="863.50"></text></g><g><title>alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="90.7177%" y="837" width="0.0314%" height="15" fill="rgb(213,214,53)" fg:x="8659" fg:w="3"/><text x="90.9677%" y="847.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (3 samples, 0.03%)</title><rect x="90.7177%" y="821" width="0.0314%" height="15" fill="rgb(215,229,48)" fg:x="8659" fg:w="3"/><text x="90.9677%" y="831.50"></text></g><g><title>alloc::alloc::Global::grow_impl (3 samples, 0.03%)</title><rect x="90.7177%" y="805" width="0.0314%" height="15" fill="rgb(243,88,5)" fg:x="8659" fg:w="3"/><text x="90.9677%" y="815.50"></text></g><g><title>alloc::alloc::realloc (3 samples, 0.03%)</title><rect x="90.7177%" y="789" width="0.0314%" height="15" fill="rgb(216,199,8)" fg:x="8659" fg:w="3"/><text x="90.9677%" y="799.50"></text></g><g><title>__GI___libc_realloc (3 samples, 0.03%)</title><rect x="90.7177%" y="773" width="0.0314%" height="15" fill="rgb(241,22,4)" fg:x="8659" fg:w="3"/><text x="90.9677%" y="783.50"></text></g><g><title>_int_realloc (3 samples, 0.03%)</title><rect x="90.7177%" y="757" width="0.0314%" height="15" fill="rgb(209,190,22)" fg:x="8659" fg:w="3"/><text x="90.9677%" y="767.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="90.7386%" y="741" width="0.0105%" height="15" fill="rgb(251,138,45)" fg:x="8661" fg:w="1"/><text x="90.9886%" y="751.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (2 samples, 0.02%)</title><rect x="90.7491%" y="981" width="0.0210%" height="15" fill="rgb(219,111,22)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="991.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (2 samples, 0.02%)</title><rect x="90.7491%" y="965" width="0.0210%" height="15" fill="rgb(253,29,49)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="975.50"></text></g><g><title>wgpu::Device::create_swap_chain (2 samples, 0.02%)</title><rect x="90.7491%" y="949" width="0.0210%" height="15" fill="rgb(238,129,49)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (2 samples, 0.02%)</title><rect x="90.7491%" y="933" width="0.0210%" height="15" fill="rgb(240,26,41)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="943.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (2 samples, 0.02%)</title><rect x="90.7491%" y="917" width="0.0210%" height="15" fill="rgb(221,47,33)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="927.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::Surface&lt;gfx_backend_vulkan::Backend&gt;&gt;::supports_queue_family (2 samples, 0.02%)</title><rect x="90.7491%" y="901" width="0.0210%" height="15" fill="rgb(216,200,17)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="911.50"></text></g><g><title>ash::extensions::khr::surface::Surface::get_physical_device_surface_support (2 samples, 0.02%)</title><rect x="90.7491%" y="885" width="0.0210%" height="15" fill="rgb(230,151,26)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="895.50"></text></g><g><title>ash::vk::extensions::KhrSurfaceFn::get_physical_device_surface_support_khr (2 samples, 0.02%)</title><rect x="90.7491%" y="869" width="0.0210%" height="15" fill="rgb(242,182,16)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="90.7491%" y="853" width="0.0210%" height="15" fill="rgb(236,35,53)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="90.7491%" y="837" width="0.0210%" height="15" fill="rgb(214,180,28)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="847.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="90.7491%" y="821" width="0.0210%" height="15" fill="rgb(208,173,36)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="831.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="90.7491%" y="805" width="0.0210%" height="15" fill="rgb(218,39,15)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="815.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="90.7491%" y="789" width="0.0210%" height="15" fill="rgb(213,145,15)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="799.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="90.7491%" y="773" width="0.0210%" height="15" fill="rgb(242,110,37)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="783.50"></text></g><g><title>XGetVisualInfo (2 samples, 0.02%)</title><rect x="90.7491%" y="757" width="0.0210%" height="15" fill="rgb(247,146,22)" fg:x="8662" fg:w="2"/><text x="90.9991%" y="767.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (29 samples, 0.30%)</title><rect x="90.7700%" y="885" width="0.3038%" height="15" fill="rgb(215,191,7)" fg:x="8664" fg:w="29"/><text x="91.0200%" y="895.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (29 samples, 0.30%)</title><rect x="90.7700%" y="869" width="0.3038%" height="15" fill="rgb(240,158,1)" fg:x="8664" fg:w="29"/><text x="91.0200%" y="879.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (29 samples, 0.30%)</title><rect x="90.7700%" y="853" width="0.3038%" height="15" fill="rgb(241,78,32)" fg:x="8664" fg:w="29"/><text x="91.0200%" y="863.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (29 samples, 0.30%)</title><rect x="90.7700%" y="837" width="0.3038%" height="15" fill="rgb(248,83,10)" fg:x="8664" fg:w="29"/><text x="91.0200%" y="847.50"></text></g><g><title>inplace_it::fixed_array::indirect (29 samples, 0.30%)</title><rect x="90.7700%" y="821" width="0.3038%" height="15" fill="rgb(241,52,0)" fg:x="8664" fg:w="29"/><text x="91.0200%" y="831.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (29 samples, 0.30%)</title><rect x="90.7700%" y="805" width="0.3038%" height="15" fill="rgb(238,37,13)" fg:x="8664" fg:w="29"/><text x="91.0200%" y="815.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (29 samples, 0.30%)</title><rect x="90.7700%" y="789" width="0.3038%" height="15" fill="rgb(242,194,17)" fg:x="8664" fg:w="29"/><text x="91.0200%" y="799.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer::{{closure}} (29 samples, 0.30%)</title><rect x="90.7700%" y="773" width="0.3038%" height="15" fill="rgb(236,96,3)" fg:x="8664" fg:w="29"/><text x="91.0200%" y="783.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_copy_buffer (29 samples, 0.30%)</title><rect x="90.7700%" y="757" width="0.3038%" height="15" fill="rgb(235,148,34)" fg:x="8664" fg:w="29"/><text x="91.0200%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (29 samples, 0.30%)</title><rect x="90.7700%" y="741" width="0.3038%" height="15" fill="rgb(254,12,11)" fg:x="8664" fg:w="29"/><text x="91.0200%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (29 samples, 0.30%)</title><rect x="90.7700%" y="725" width="0.3038%" height="15" fill="rgb(207,31,54)" fg:x="8664" fg:w="29"/><text x="91.0200%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (24 samples, 0.25%)</title><rect x="90.8224%" y="709" width="0.2514%" height="15" fill="rgb(252,14,28)" fg:x="8669" fg:w="24"/><text x="91.0724%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="91.0215%" y="693" width="0.0524%" height="15" fill="rgb(252,108,36)" fg:x="8688" fg:w="5"/><text x="91.2715%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="91.0215%" y="677" width="0.0524%" height="15" fill="rgb(214,149,7)" fg:x="8688" fg:w="5"/><text x="91.2715%" y="687.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::deref::Deref&gt;::deref (2 samples, 0.02%)</title><rect x="91.1682%" y="869" width="0.0210%" height="15" fill="rgb(243,94,12)" fg:x="8702" fg:w="2"/><text x="91.4182%" y="879.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::triple (2 samples, 0.02%)</title><rect x="91.1682%" y="853" width="0.0210%" height="15" fill="rgb(208,36,10)" fg:x="8702" fg:w="2"/><text x="91.4182%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (13 samples, 0.14%)</title><rect x="91.1891%" y="869" width="0.1362%" height="15" fill="rgb(233,185,52)" fg:x="8704" fg:w="13"/><text x="91.4391%" y="879.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (5 samples, 0.05%)</title><rect x="91.3253%" y="869" width="0.0524%" height="15" fill="rgb(234,50,45)" fg:x="8717" fg:w="5"/><text x="91.5753%" y="879.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (5 samples, 0.05%)</title><rect x="91.3253%" y="853" width="0.0524%" height="15" fill="rgb(228,92,54)" fg:x="8717" fg:w="5"/><text x="91.5753%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="91.3463%" y="837" width="0.0314%" height="15" fill="rgb(224,85,25)" fg:x="8719" fg:w="3"/><text x="91.5963%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[ash::vk::definitions::BufferMemoryBarrier: 4]&gt;&gt; (1 samples, 0.01%)</title><rect x="91.3777%" y="869" width="0.0105%" height="15" fill="rgb(246,1,45)" fg:x="8722" fg:w="1"/><text x="91.6277%" y="879.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.3777%" y="853" width="0.0105%" height="15" fill="rgb(240,66,23)" fg:x="8722" fg:w="1"/><text x="91.6277%" y="863.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::SmallVec&lt;[ash::vk::definitions::MemoryBarrier: 4]&gt;&gt; (1 samples, 0.01%)</title><rect x="91.3882%" y="869" width="0.0105%" height="15" fill="rgb(222,96,27)" fg:x="8723" fg:w="1"/><text x="91.6382%" y="879.50"></text></g><g><title>&lt;smallvec::SmallVec&lt;A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.3882%" y="853" width="0.0105%" height="15" fill="rgb(212,136,10)" fg:x="8723" fg:w="1"/><text x="91.6382%" y="863.50"></text></g><g><title>&lt;core::iter::adapters::chain::Chain&lt;A,B&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="91.6186%" y="853" width="0.0733%" height="15" fill="rgb(226,192,50)" fg:x="8745" fg:w="7"/><text x="91.8686%" y="863.50"></text></g><g><title>&lt;core::option::IntoIter&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="91.6186%" y="837" width="0.0733%" height="15" fill="rgb(241,182,31)" fg:x="8745" fg:w="7"/><text x="91.8686%" y="847.50"></text></g><g><title>&lt;core::option::Item&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (7 samples, 0.07%)</title><rect x="91.6186%" y="821" width="0.0733%" height="15" fill="rgb(219,205,47)" fg:x="8745" fg:w="7"/><text x="91.8686%" y="831.50"></text></g><g><title>core::option::Option&lt;T&gt;::take (7 samples, 0.07%)</title><rect x="91.6186%" y="805" width="0.0733%" height="15" fill="rgb(207,96,14)" fg:x="8745" fg:w="7"/><text x="91.8686%" y="815.50"></text></g><g><title>core::mem::take (7 samples, 0.07%)</title><rect x="91.6186%" y="789" width="0.0733%" height="15" fill="rgb(216,119,9)" fg:x="8745" fg:w="7"/><text x="91.8686%" y="799.50"></text></g><g><title>core::mem::replace (7 samples, 0.07%)</title><rect x="91.6186%" y="773" width="0.0733%" height="15" fill="rgb(235,62,36)" fg:x="8745" fg:w="7"/><text x="91.8686%" y="783.50"></text></g><g><title>core::ptr::read (7 samples, 0.07%)</title><rect x="91.6186%" y="757" width="0.0733%" height="15" fill="rgb(214,41,27)" fg:x="8745" fg:w="7"/><text x="91.8686%" y="767.50"></text></g><g><title>__memmove_avx_unaligned_erms (18 samples, 0.19%)</title><rect x="91.6920%" y="853" width="0.1886%" height="15" fill="rgb(214,174,37)" fg:x="8752" fg:w="18"/><text x="91.9420%" y="863.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (107 samples, 1.12%)</title><rect x="90.7700%" y="981" width="1.1210%" height="15" fill="rgb(212,11,25)" fg:x="8664" fg:w="107"/><text x="91.0200%" y="991.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (107 samples, 1.12%)</title><rect x="90.7700%" y="965" width="1.1210%" height="15" fill="rgb(217,71,35)" fg:x="8664" fg:w="107"/><text x="91.0200%" y="975.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (107 samples, 1.12%)</title><rect x="90.7700%" y="949" width="1.1210%" height="15" fill="rgb(234,152,9)" fg:x="8664" fg:w="107"/><text x="91.0200%" y="959.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (107 samples, 1.12%)</title><rect x="90.7700%" y="933" width="1.1210%" height="15" fill="rgb(228,32,51)" fg:x="8664" fg:w="107"/><text x="91.0200%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (107 samples, 1.12%)</title><rect x="90.7700%" y="917" width="1.1210%" height="15" fill="rgb(209,14,47)" fg:x="8664" fg:w="107"/><text x="91.0200%" y="927.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (107 samples, 1.12%)</title><rect x="90.7700%" y="901" width="1.1210%" height="15" fill="rgb(218,201,17)" fg:x="8664" fg:w="107"/><text x="91.0200%" y="911.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (78 samples, 0.82%)</title><rect x="91.0739%" y="885" width="0.8172%" height="15" fill="rgb(218,98,15)" fg:x="8693" fg:w="78"/><text x="91.3239%" y="895.50"></text></g><g><title>gfx_backend_vulkan::command::destructure_barriers (47 samples, 0.49%)</title><rect x="91.3986%" y="869" width="0.4924%" height="15" fill="rgb(233,202,29)" fg:x="8724" fg:w="47"/><text x="91.6486%" y="879.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="91.8806%" y="853" width="0.0105%" height="15" fill="rgb(207,196,44)" fg:x="8770" fg:w="1"/><text x="92.1306%" y="863.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (2 samples, 0.02%)</title><rect x="91.9120%" y="917" width="0.0210%" height="15" fill="rgb(218,63,34)" fg:x="8773" fg:w="2"/><text x="92.1620%" y="927.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="91.9120%" y="901" width="0.0210%" height="15" fill="rgb(209,10,5)" fg:x="8773" fg:w="2"/><text x="92.1620%" y="911.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="91.9120%" y="885" width="0.0210%" height="15" fill="rgb(224,36,28)" fg:x="8773" fg:w="2"/><text x="92.1620%" y="895.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (4 samples, 0.04%)</title><rect x="91.9015%" y="933" width="0.0419%" height="15" fill="rgb(249,178,7)" fg:x="8772" fg:w="4"/><text x="92.1515%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;ash::vk::definitions::CommandBuffer&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9329%" y="917" width="0.0105%" height="15" fill="rgb(253,163,10)" fg:x="8775" fg:w="1"/><text x="92.1829%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;ash::vk::definitions::CommandBuffer&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9329%" y="901" width="0.0105%" height="15" fill="rgb(245,67,46)" fg:x="8775" fg:w="1"/><text x="92.1829%" y="911.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="91.9329%" y="885" width="0.0105%" height="15" fill="rgb(225,14,18)" fg:x="8775" fg:w="1"/><text x="92.1829%" y="895.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1 samples, 0.01%)</title><rect x="91.9329%" y="869" width="0.0105%" height="15" fill="rgb(217,41,54)" fg:x="8775" fg:w="1"/><text x="92.1829%" y="879.50"></text></g><g><title>alloc::alloc::dealloc (1 samples, 0.01%)</title><rect x="91.9329%" y="853" width="0.0105%" height="15" fill="rgb(222,111,11)" fg:x="8775" fg:w="1"/><text x="92.1829%" y="863.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="91.9329%" y="837" width="0.0105%" height="15" fill="rgb(211,85,31)" fg:x="8775" fg:w="1"/><text x="92.1829%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.9434%" y="869" width="0.0105%" height="15" fill="rgb(223,29,26)" fg:x="8776" fg:w="1"/><text x="92.1934%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.9434%" y="853" width="0.0105%" height="15" fill="rgb(236,124,50)" fg:x="8776" fg:w="1"/><text x="92.1934%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="91.9434%" y="837" width="0.0105%" height="15" fill="rgb(219,148,15)" fg:x="8776" fg:w="1"/><text x="92.1934%" y="847.50"></text></g><g><title>__memcpy_sse2_unaligned_erms (1 samples, 0.01%)</title><rect x="91.9434%" y="821" width="0.0105%" height="15" fill="rgb(248,159,33)" fg:x="8776" fg:w="1"/><text x="92.1934%" y="831.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::finish (2 samples, 0.02%)</title><rect x="91.9434%" y="933" width="0.0210%" height="15" fill="rgb(252,65,8)" fg:x="8776" fg:w="2"/><text x="92.1934%" y="943.50"></text></g><g><title>ash::device::DeviceV1_0::end_command_buffer (2 samples, 0.02%)</title><rect x="91.9434%" y="917" width="0.0210%" height="15" fill="rgb(236,45,7)" fg:x="8776" fg:w="2"/><text x="92.1934%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="91.9434%" y="901" width="0.0210%" height="15" fill="rgb(244,3,48)" fg:x="8776" fg:w="2"/><text x="92.1934%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="91.9434%" y="885" width="0.0210%" height="15" fill="rgb(224,123,53)" fg:x="8776" fg:w="2"/><text x="92.1934%" y="895.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="91.9539%" y="869" width="0.0105%" height="15" fill="rgb(223,173,15)" fg:x="8777" fg:w="1"/><text x="92.2039%" y="879.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::Index&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index (1 samples, 0.01%)</title><rect x="91.9644%" y="933" width="0.0105%" height="15" fill="rgb(254,181,5)" fg:x="8778" fg:w="1"/><text x="92.2144%" y="943.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (1 samples, 0.01%)</title><rect x="91.9644%" y="917" width="0.0105%" height="15" fill="rgb(243,124,33)" fg:x="8778" fg:w="1"/><text x="92.2144%" y="927.50"></text></g><g><title>&lt;wgpu_core::hub::Storage&lt;T,I&gt; as core::ops::index::IndexMut&lt;wgpu_core::id::Valid&lt;I&gt;&gt;&gt;::index_mut (1 samples, 0.01%)</title><rect x="91.9749%" y="933" width="0.0105%" height="15" fill="rgb(253,220,11)" fg:x="8779" fg:w="1"/><text x="92.2249%" y="943.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (1 samples, 0.01%)</title><rect x="91.9749%" y="917" width="0.0105%" height="15" fill="rgb(217,14,4)" fg:x="8779" fg:w="1"/><text x="92.2249%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;smallvec::Drain&lt;[wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::swap_chain::SwapChain&lt;gfx_backend_empty::Backend&gt;&gt;&gt;: 1]&gt;&gt; (1 samples, 0.01%)</title><rect x="91.9853%" y="933" width="0.0105%" height="15" fill="rgb(209,196,12)" fg:x="8780" fg:w="1"/><text x="92.2353%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="92.0587%" y="789" width="0.0105%" height="15" fill="rgb(237,108,29)" fg:x="8787" fg:w="1"/><text x="92.3087%" y="799.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="92.0587%" y="773" width="0.0105%" height="15" fill="rgb(216,173,20)" fg:x="8787" fg:w="1"/><text x="92.3087%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="92.0377%" y="821" width="0.0419%" height="15" fill="rgb(245,27,6)" fg:x="8785" fg:w="4"/><text x="92.2877%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="92.0587%" y="805" width="0.0210%" height="15" fill="rgb(210,181,20)" fg:x="8787" fg:w="2"/><text x="92.3087%" y="815.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="92.0691%" y="789" width="0.0105%" height="15" fill="rgb(235,213,1)" fg:x="8788" fg:w="1"/><text x="92.3191%" y="799.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_fence (9 samples, 0.09%)</title><rect x="91.9958%" y="933" width="0.0943%" height="15" fill="rgb(239,68,43)" fg:x="8781" fg:w="9"/><text x="92.2458%" y="943.50"></text></g><g><title>ash::device::DeviceV1_0::create_fence (8 samples, 0.08%)</title><rect x="92.0063%" y="917" width="0.0838%" height="15" fill="rgb(254,137,43)" fg:x="8782" fg:w="8"/><text x="92.2563%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="92.0063%" y="901" width="0.0838%" height="15" fill="rgb(252,170,38)" fg:x="8782" fg:w="8"/><text x="92.2563%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="92.0063%" y="885" width="0.0838%" height="15" fill="rgb(234,21,42)" fg:x="8782" fg:w="8"/><text x="92.2563%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="92.0063%" y="869" width="0.0838%" height="15" fill="rgb(216,145,40)" fg:x="8782" fg:w="8"/><text x="92.2563%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (8 samples, 0.08%)</title><rect x="92.0063%" y="853" width="0.0838%" height="15" fill="rgb(251,73,9)" fg:x="8782" fg:w="8"/><text x="92.2563%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (6 samples, 0.06%)</title><rect x="92.0272%" y="837" width="0.0629%" height="15" fill="rgb(242,54,6)" fg:x="8784" fg:w="6"/><text x="92.2772%" y="847.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="92.0796%" y="821" width="0.0105%" height="15" fill="rgb(239,70,7)" fg:x="8789" fg:w="1"/><text x="92.3296%" y="831.50"></text></g><g><title>smallvec::SmallVec&lt;A&gt;::drain (1 samples, 0.01%)</title><rect x="92.0901%" y="933" width="0.0105%" height="15" fill="rgb(216,159,35)" fg:x="8790" fg:w="1"/><text x="92.3401%" y="943.50"></text></g><g><title>wgpu_core::LifeGuard::use_at (1 samples, 0.01%)</title><rect x="92.1006%" y="933" width="0.0105%" height="15" fill="rgb(224,50,39)" fg:x="8791" fg:w="1"/><text x="92.3506%" y="943.50"></text></g><g><title>core::sync::atomic::AtomicUsize::store (1 samples, 0.01%)</title><rect x="92.1006%" y="917" width="0.0105%" height="15" fill="rgb(235,9,35)" fg:x="8791" fg:w="1"/><text x="92.3506%" y="927.50"></text></g><g><title>core::sync::atomic::atomic_store (1 samples, 0.01%)</title><rect x="92.1006%" y="901" width="0.0105%" height="15" fill="rgb(239,34,21)" fg:x="8791" fg:w="1"/><text x="92.3506%" y="911.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (1 samples, 0.01%)</title><rect x="92.1111%" y="917" width="0.0105%" height="15" fill="rgb(218,162,43)" fg:x="8792" fg:w="1"/><text x="92.3611%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (1 samples, 0.01%)</title><rect x="92.1111%" y="901" width="0.0105%" height="15" fill="rgb(219,89,33)" fg:x="8792" fg:w="1"/><text x="92.3611%" y="911.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (1 samples, 0.01%)</title><rect x="92.1111%" y="885" width="0.0105%" height="15" fill="rgb(226,125,37)" fg:x="8792" fg:w="1"/><text x="92.3611%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1 samples, 0.01%)</title><rect x="92.1111%" y="869" width="0.0105%" height="15" fill="rgb(233,149,30)" fg:x="8792" fg:w="1"/><text x="92.3611%" y="879.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="92.1111%" y="853" width="0.0105%" height="15" fill="rgb(236,8,18)" fg:x="8792" fg:w="1"/><text x="92.3611%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="92.1111%" y="837" width="0.0105%" height="15" fill="rgb(205,176,9)" fg:x="8792" fg:w="1"/><text x="92.3611%" y="847.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="92.1111%" y="821" width="0.0105%" height="15" fill="rgb(252,103,44)" fg:x="8792" fg:w="1"/><text x="92.3611%" y="831.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="92.1111%" y="805" width="0.0105%" height="15" fill="rgb(207,68,53)" fg:x="8792" fg:w="1"/><text x="92.3611%" y="815.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="92.1111%" y="789" width="0.0105%" height="15" fill="rgb(218,193,48)" fg:x="8792" fg:w="1"/><text x="92.3611%" y="799.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="92.1111%" y="773" width="0.0105%" height="15" fill="rgb(234,121,52)" fg:x="8792" fg:w="1"/><text x="92.3611%" y="783.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (3 samples, 0.03%)</title><rect x="92.1111%" y="933" width="0.0314%" height="15" fill="rgb(227,218,49)" fg:x="8792" fg:w="3"/><text x="92.3611%" y="943.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (2 samples, 0.02%)</title><rect x="92.1215%" y="917" width="0.0210%" height="15" fill="rgb(221,8,7)" fg:x="8793" fg:w="2"/><text x="92.3715%" y="927.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="92.1215%" y="901" width="0.0210%" height="15" fill="rgb(217,151,36)" fg:x="8793" fg:w="2"/><text x="92.3715%" y="911.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="92.1215%" y="885" width="0.0210%" height="15" fill="rgb(213,71,5)" fg:x="8793" fg:w="2"/><text x="92.3715%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="92.1215%" y="869" width="0.0210%" height="15" fill="rgb(225,145,43)" fg:x="8793" fg:w="2"/><text x="92.3715%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1425%" y="917" width="0.0105%" height="15" fill="rgb(235,118,19)" fg:x="8795" fg:w="1"/><text x="92.3925%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="92.1425%" y="901" width="0.0105%" height="15" fill="rgb(214,102,36)" fg:x="8795" fg:w="1"/><text x="92.3925%" y="911.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.1425%" y="885" width="0.0105%" height="15" fill="rgb(220,56,43)" fg:x="8795" fg:w="1"/><text x="92.3925%" y="895.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="92.1425%" y="869" width="0.0105%" height="15" fill="rgb(246,136,46)" fg:x="8795" fg:w="1"/><text x="92.3925%" y="879.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::after_submit (2 samples, 0.02%)</title><rect x="92.1425%" y="933" width="0.0210%" height="15" fill="rgb(249,99,12)" fg:x="8795" fg:w="2"/><text x="92.3925%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::TrackerSet&gt; (1 samples, 0.01%)</title><rect x="92.1530%" y="917" width="0.0105%" height="15" fill="rgb(224,31,42)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::ResourceTracker&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1530%" y="901" width="0.0105%" height="15" fill="rgb(208,96,21)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;std::collections::hash::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1530%" y="885" width="0.0105%" height="15" fill="rgb(237,229,7)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::map::HashMap&lt;u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;,core::hash::BuildHasherDefault&lt;fxhash::FxHasher&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1530%" y="869" width="0.0105%" height="15" fill="rgb(210,12,6)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="879.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::raw::RawTable&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;)&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1530%" y="853" width="0.0105%" height="15" fill="rgb(240,9,34)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="863.50"></text></g><g><title>&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.1530%" y="837" width="0.0105%" height="15" fill="rgb(211,68,37)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="92.1530%" y="821" width="0.0105%" height="15" fill="rgb(249,138,50)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="831.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="92.1530%" y="805" width="0.0105%" height="15" fill="rgb(243,185,40)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="815.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="92.1530%" y="789" width="0.0105%" height="15" fill="rgb(242,92,35)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;(u32,wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;)&gt; (1 samples, 0.01%)</title><rect x="92.1530%" y="773" width="0.0105%" height="15" fill="rgb(244,98,5)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="783.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::track::Resource&lt;wgpu_core::track::Unit&lt;wgpu_core::resource::BufferUse&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1530%" y="757" width="0.0105%" height="15" fill="rgb(228,186,29)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (1 samples, 0.01%)</title><rect x="92.1530%" y="741" width="0.0105%" height="15" fill="rgb(253,7,44)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="751.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.1530%" y="725" width="0.0105%" height="15" fill="rgb(216,11,45)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="735.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (1 samples, 0.01%)</title><rect x="92.1530%" y="709" width="0.0105%" height="15" fill="rgb(205,67,3)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="719.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (1 samples, 0.01%)</title><rect x="92.1530%" y="693" width="0.0105%" height="15" fill="rgb(250,18,3)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="703.50"></text></g><g><title>core::sync::atomic::atomic_sub (1 samples, 0.01%)</title><rect x="92.1530%" y="677" width="0.0105%" height="15" fill="rgb(241,222,43)" fg:x="8796" fg:w="1"/><text x="92.4030%" y="687.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="92.1634%" y="933" width="0.0105%" height="15" fill="rgb(233,115,3)" fg:x="8797" fg:w="1"/><text x="92.4134%" y="943.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="92.1634%" y="917" width="0.0105%" height="15" fill="rgb(215,165,25)" fg:x="8797" fg:w="1"/><text x="92.4134%" y="927.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (1 samples, 0.01%)</title><rect x="92.1634%" y="901" width="0.0105%" height="15" fill="rgb(234,179,6)" fg:x="8797" fg:w="1"/><text x="92.4134%" y="911.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (502 samples, 5.26%)</title><rect x="86.9251%" y="1237" width="5.2593%" height="15" fill="rgb(215,82,23)" fg:x="8297" fg:w="502"/><text x="87.1751%" y="1247.50">winit:..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (502 samples, 5.26%)</title><rect x="86.9251%" y="1221" width="5.2593%" height="15" fill="rgb(211,47,18)" fg:x="8297" fg:w="502"/><text x="87.1751%" y="1231.50">winit:..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (502 samples, 5.26%)</title><rect x="86.9251%" y="1205" width="5.2593%" height="15" fill="rgb(248,17,9)" fg:x="8297" fg:w="502"/><text x="87.1751%" y="1215.50">winit:..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (502 samples, 5.26%)</title><rect x="86.9251%" y="1189" width="5.2593%" height="15" fill="rgb(210,212,12)" fg:x="8297" fg:w="502"/><text x="87.1751%" y="1199.50">winit:..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (502 samples, 5.26%)</title><rect x="86.9251%" y="1173" width="5.2593%" height="15" fill="rgb(230,135,45)" fg:x="8297" fg:w="502"/><text x="87.1751%" y="1183.50">bevy_w..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (502 samples, 5.26%)</title><rect x="86.9251%" y="1157" width="5.2593%" height="15" fill="rgb(214,121,41)" fg:x="8297" fg:w="502"/><text x="87.1751%" y="1167.50">&lt;bevy_..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (502 samples, 5.26%)</title><rect x="86.9251%" y="1141" width="5.2593%" height="15" fill="rgb(239,165,45)" fg:x="8297" fg:w="502"/><text x="87.1751%" y="1151.50">bevy_e..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (502 samples, 5.26%)</title><rect x="86.9251%" y="1125" width="5.2593%" height="15" fill="rgb(214,85,51)" fg:x="8297" fg:w="502"/><text x="87.1751%" y="1135.50">&lt;bevy_..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (502 samples, 5.26%)</title><rect x="86.9251%" y="1109" width="5.2593%" height="15" fill="rgb(223,90,27)" fg:x="8297" fg:w="502"/><text x="87.1751%" y="1119.50">&lt;bevy_..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (502 samples, 5.26%)</title><rect x="86.9251%" y="1093" width="5.2593%" height="15" fill="rgb(244,84,11)" fg:x="8297" fg:w="502"/><text x="87.1751%" y="1103.50">&lt;alloc..</text></g><g><title>bevy_wgpu::get_wgpu_render_system::{{closure}} (145 samples, 1.52%)</title><rect x="90.6653%" y="1077" width="1.5191%" height="15" fill="rgb(253,41,47)" fg:x="8654" fg:w="145"/><text x="90.9153%" y="1087.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (145 samples, 1.52%)</title><rect x="90.6653%" y="1061" width="1.5191%" height="15" fill="rgb(232,39,5)" fg:x="8654" fg:w="145"/><text x="90.9153%" y="1071.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (142 samples, 1.49%)</title><rect x="90.6967%" y="1045" width="1.4877%" height="15" fill="rgb(211,93,4)" fg:x="8657" fg:w="142"/><text x="90.9467%" y="1055.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (142 samples, 1.49%)</title><rect x="90.6967%" y="1029" width="1.4877%" height="15" fill="rgb(219,50,49)" fg:x="8657" fg:w="142"/><text x="90.9467%" y="1039.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (142 samples, 1.49%)</title><rect x="90.6967%" y="1013" width="1.4877%" height="15" fill="rgb(232,80,19)" fg:x="8657" fg:w="142"/><text x="90.9467%" y="1023.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (142 samples, 1.49%)</title><rect x="90.6967%" y="997" width="1.4877%" height="15" fill="rgb(215,227,39)" fg:x="8657" fg:w="142"/><text x="90.9467%" y="1007.50"></text></g><g><title>wgpu::Queue::submit (28 samples, 0.29%)</title><rect x="91.8910%" y="981" width="0.2933%" height="15" fill="rgb(211,99,12)" fg:x="8771" fg:w="28"/><text x="92.1410%" y="991.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (28 samples, 0.29%)</title><rect x="91.8910%" y="965" width="0.2933%" height="15" fill="rgb(214,158,5)" fg:x="8771" fg:w="28"/><text x="92.1410%" y="975.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (28 samples, 0.29%)</title><rect x="91.8910%" y="949" width="0.2933%" height="15" fill="rgb(242,19,53)" fg:x="8771" fg:w="28"/><text x="92.1410%" y="959.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (1 samples, 0.01%)</title><rect x="92.1739%" y="933" width="0.0105%" height="15" fill="rgb(208,18,20)" fg:x="8798" fg:w="1"/><text x="92.4239%" y="943.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (1 samples, 0.01%)</title><rect x="92.1739%" y="917" width="0.0105%" height="15" fill="rgb(250,44,11)" fg:x="8798" fg:w="1"/><text x="92.4239%" y="927.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (1 samples, 0.01%)</title><rect x="92.1739%" y="901" width="0.0105%" height="15" fill="rgb(238,159,13)" fg:x="8798" fg:w="1"/><text x="92.4239%" y="911.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (1 samples, 0.01%)</title><rect x="92.1739%" y="885" width="0.0105%" height="15" fill="rgb(231,74,18)" fg:x="8798" fg:w="1"/><text x="92.4239%" y="895.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (1 samples, 0.01%)</title><rect x="92.1739%" y="869" width="0.0105%" height="15" fill="rgb(229,219,45)" fg:x="8798" fg:w="1"/><text x="92.4239%" y="879.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (1 samples, 0.01%)</title><rect x="92.1739%" y="853" width="0.0105%" height="15" fill="rgb(210,221,1)" fg:x="8798" fg:w="1"/><text x="92.4239%" y="863.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (1 samples, 0.01%)</title><rect x="92.1844%" y="837" width="0.0105%" height="15" fill="rgb(209,60,51)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1 samples, 0.01%)</title><rect x="92.1844%" y="821" width="0.0105%" height="15" fill="rgb(252,97,34)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (1 samples, 0.01%)</title><rect x="92.1844%" y="805" width="0.0105%" height="15" fill="rgb(243,211,37)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="815.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (1 samples, 0.01%)</title><rect x="92.1844%" y="789" width="0.0105%" height="15" fill="rgb(210,229,37)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="799.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="92.1844%" y="773" width="0.0105%" height="15" fill="rgb(220,208,43)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (1 samples, 0.01%)</title><rect x="92.1844%" y="757" width="0.0105%" height="15" fill="rgb(218,118,50)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (1 samples, 0.01%)</title><rect x="92.1844%" y="741" width="0.0105%" height="15" fill="rgb(254,169,52)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="751.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="92.1844%" y="725" width="0.0105%" height="15" fill="rgb(221,214,37)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="735.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (1 samples, 0.01%)</title><rect x="92.1844%" y="709" width="0.0105%" height="15" fill="rgb(254,186,32)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="719.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::wait_idle (1 samples, 0.01%)</title><rect x="92.1844%" y="693" width="0.0105%" height="15" fill="rgb(215,144,43)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="703.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences (1 samples, 0.01%)</title><rect x="92.1844%" y="677" width="0.0105%" height="15" fill="rgb(252,21,46)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="687.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (1 samples, 0.01%)</title><rect x="92.1844%" y="661" width="0.0105%" height="15" fill="rgb(207,166,46)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="671.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (1 samples, 0.01%)</title><rect x="92.1844%" y="645" width="0.0105%" height="15" fill="rgb(253,37,49)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="655.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (1 samples, 0.01%)</title><rect x="92.1844%" y="629" width="0.0105%" height="15" fill="rgb(222,97,20)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="639.50"></text></g><g><title>inplace_it::fixed_array::indirect (1 samples, 0.01%)</title><rect x="92.1844%" y="613" width="0.0105%" height="15" fill="rgb(244,181,26)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="623.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (1 samples, 0.01%)</title><rect x="92.1844%" y="597" width="0.0105%" height="15" fill="rgb(241,22,29)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="607.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (1 samples, 0.01%)</title><rect x="92.1844%" y="581" width="0.0105%" height="15" fill="rgb(206,200,43)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="591.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::wait_for_fences::{{closure}} (1 samples, 0.01%)</title><rect x="92.1844%" y="565" width="0.0105%" height="15" fill="rgb(226,224,43)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="575.50"></text></g><g><title>ash::device::DeviceV1_0::wait_for_fences (1 samples, 0.01%)</title><rect x="92.1844%" y="549" width="0.0105%" height="15" fill="rgb(253,129,28)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="92.1844%" y="533" width="0.0105%" height="15" fill="rgb(252,99,33)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="92.1844%" y="517" width="0.0105%" height="15" fill="rgb(208,123,45)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="92.1844%" y="501" width="0.0105%" height="15" fill="rgb(251,106,12)" fg:x="8799" fg:w="1"/><text x="92.4344%" y="511.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="92.1949%" y="773" width="0.0105%" height="15" fill="rgb(240,209,35)" fg:x="8800" fg:w="1"/><text x="92.4449%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (1 samples, 0.01%)</title><rect x="92.1949%" y="757" width="0.0105%" height="15" fill="rgb(214,52,50)" fg:x="8800" fg:w="1"/><text x="92.4449%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (1 samples, 0.01%)</title><rect x="92.1949%" y="741" width="0.0105%" height="15" fill="rgb(234,119,4)" fg:x="8800" fg:w="1"/><text x="92.4449%" y="751.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="92.1949%" y="725" width="0.0105%" height="15" fill="rgb(228,181,36)" fg:x="8800" fg:w="1"/><text x="92.4449%" y="735.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::handle_mapping (1 samples, 0.01%)</title><rect x="92.1949%" y="709" width="0.0105%" height="15" fill="rgb(213,171,42)" fg:x="8800" fg:w="1"/><text x="92.4449%" y="719.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="92.1949%" y="693" width="0.0105%" height="15" fill="rgb(239,14,41)" fg:x="8800" fg:w="1"/><text x="92.4449%" y="703.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="92.1949%" y="677" width="0.0105%" height="15" fill="rgb(239,111,46)" fg:x="8800" fg:w="1"/><text x="92.4449%" y="687.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1 samples, 0.01%)</title><rect x="92.1949%" y="661" width="0.0105%" height="15" fill="rgb(214,72,7)" fg:x="8800" fg:w="1"/><text x="92.4449%" y="671.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (1 samples, 0.01%)</title><rect x="92.1949%" y="645" width="0.0105%" height="15" fill="rgb(221,114,1)" fg:x="8800" fg:w="1"/><text x="92.4449%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (1 samples, 0.01%)</title><rect x="92.1949%" y="629" width="0.0105%" height="15" fill="rgb(213,143,14)" fg:x="8800" fg:w="1"/><text x="92.4449%" y="639.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::EntityFetch as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (1 samples, 0.01%)</title><rect x="92.2472%" y="709" width="0.0105%" height="15" fill="rgb(220,221,53)" fg:x="8805" fg:w="1"/><text x="92.4972%" y="719.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (4 samples, 0.04%)</title><rect x="92.2368%" y="741" width="0.0419%" height="15" fill="rgb(236,189,27)" fg:x="8804" fg:w="4"/><text x="92.4868%" y="751.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (3 samples, 0.03%)</title><rect x="92.2472%" y="725" width="0.0314%" height="15" fill="rgb(252,139,49)" fg:x="8805" fg:w="3"/><text x="92.4972%" y="735.50"></text></g><g><title>&lt;bevy_ecs::query::fetch::WriteFetch&lt;T&gt; as bevy_ecs::query::fetch::Fetch&gt;::table_fetch (2 samples, 0.02%)</title><rect x="92.2577%" y="709" width="0.0210%" height="15" fill="rgb(231,158,33)" fg:x="8806" fg:w="2"/><text x="92.5077%" y="719.50"></text></g><g><title>&lt;T as bevy_core::bytes::Bytes&gt;::write_bytes (1 samples, 0.01%)</title><rect x="92.6244%" y="693" width="0.0105%" height="15" fill="rgb(207,201,15)" fg:x="8841" fg:w="1"/><text x="92.8744%" y="703.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::copy_from_slice (1 samples, 0.01%)</title><rect x="92.6244%" y="677" width="0.0105%" height="15" fill="rgb(218,43,48)" fg:x="8841" fg:w="1"/><text x="92.8744%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="92.6244%" y="661" width="0.0105%" height="15" fill="rgb(244,63,52)" fg:x="8841" fg:w="1"/><text x="92.8744%" y="671.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (2 samples, 0.02%)</title><rect x="92.6349%" y="677" width="0.0210%" height="15" fill="rgb(236,60,17)" fg:x="8842" fg:w="2"/><text x="92.8849%" y="687.50"></text></g><g><title>&lt;f32 as bevy_render::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (17 samples, 0.18%)</title><rect x="92.6349%" y="693" width="0.1781%" height="15" fill="rgb(205,206,29)" fg:x="8842" fg:w="17"/><text x="92.8849%" y="703.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (15 samples, 0.16%)</title><rect x="92.6558%" y="677" width="0.1572%" height="15" fill="rgb(205,209,35)" fg:x="8844" fg:w="15"/><text x="92.9058%" y="687.50"></text></g><g><title>[libm-2.33.so] (15 samples, 0.16%)</title><rect x="92.6558%" y="661" width="0.1572%" height="15" fill="rgb(227,112,14)" fg:x="8844" fg:w="15"/><text x="92.9058%" y="671.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (27 samples, 0.28%)</title><rect x="92.5825%" y="725" width="0.2829%" height="15" fill="rgb(248,151,9)" fg:x="8837" fg:w="27"/><text x="92.8325%" y="735.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (25 samples, 0.26%)</title><rect x="92.6035%" y="709" width="0.2619%" height="15" fill="rgb(247,45,40)" fg:x="8839" fg:w="25"/><text x="92.8535%" y="719.50"></text></g><g><title>[libm-2.33.so] (5 samples, 0.05%)</title><rect x="92.8130%" y="693" width="0.0524%" height="15" fill="rgb(232,185,16)" fg:x="8859" fg:w="5"/><text x="93.0630%" y="703.50"></text></g><g><title>glam::core::sse2::vector::&lt;impl glam::core::traits::vector::Vector&lt;f32&gt; for core::core_arch::x86::__m128&gt;::mul_scalar (2 samples, 0.02%)</title><rect x="92.8654%" y="661" width="0.0210%" height="15" fill="rgb(215,45,44)" fg:x="8864" fg:w="2"/><text x="93.1154%" y="671.50"></text></g><g><title>core::core_arch::x86::sse::_mm_set_ps1 (2 samples, 0.02%)</title><rect x="92.8654%" y="645" width="0.0210%" height="15" fill="rgb(206,69,32)" fg:x="8864" fg:w="2"/><text x="93.1154%" y="655.50"></text></g><g><title>core::core_arch::x86::sse::_mm_set1_ps (2 samples, 0.02%)</title><rect x="92.8654%" y="629" width="0.0210%" height="15" fill="rgb(233,98,50)" fg:x="8864" fg:w="2"/><text x="93.1154%" y="639.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (3 samples, 0.03%)</title><rect x="92.8654%" y="725" width="0.0314%" height="15" fill="rgb(232,217,52)" fg:x="8864" fg:w="3"/><text x="93.1154%" y="735.50"></text></g><g><title>bevy_transform::components::global_transform::GlobalTransform::compute_matrix (3 samples, 0.03%)</title><rect x="92.8654%" y="709" width="0.0314%" height="15" fill="rgb(250,42,51)" fg:x="8864" fg:w="3"/><text x="93.1154%" y="719.50"></text></g><g><title>glam::mat4::Mat4::from_scale_rotation_translation (3 samples, 0.03%)</title><rect x="92.8654%" y="693" width="0.0314%" height="15" fill="rgb(241,200,26)" fg:x="8864" fg:w="3"/><text x="93.1154%" y="703.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::from_scale_quaternion_translation (3 samples, 0.03%)</title><rect x="92.8654%" y="677" width="0.0314%" height="15" fill="rgb(207,10,32)" fg:x="8864" fg:w="3"/><text x="93.1154%" y="687.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::quaternion_to_axes (1 samples, 0.01%)</title><rect x="92.8863%" y="661" width="0.0105%" height="15" fill="rgb(214,63,15)" fg:x="8866" fg:w="1"/><text x="93.1363%" y="671.50"></text></g><g><title>&lt;f32 as core::ops::arith::Sub&gt;::sub (1 samples, 0.01%)</title><rect x="92.8863%" y="645" width="0.0105%" height="15" fill="rgb(234,176,14)" fg:x="8866" fg:w="1"/><text x="93.1363%" y="655.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::get_render_resource_name (2 samples, 0.02%)</title><rect x="92.8968%" y="725" width="0.0210%" height="15" fill="rgb(226,104,52)" fg:x="8867" fg:w="2"/><text x="93.1468%" y="735.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResources&gt;::iter (1 samples, 0.01%)</title><rect x="92.9178%" y="725" width="0.0105%" height="15" fill="rgb(211,222,1)" fg:x="8869" fg:w="1"/><text x="93.1678%" y="735.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource::RenderResourceIterator::new (1 samples, 0.01%)</title><rect x="92.9178%" y="709" width="0.0105%" height="15" fill="rgb(237,7,3)" fg:x="8869" fg:w="1"/><text x="93.1678%" y="719.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="92.9282%" y="725" width="0.0210%" height="15" fill="rgb(218,143,7)" fg:x="8870" fg:w="2"/><text x="93.1782%" y="735.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="92.9282%" y="709" width="0.0210%" height="15" fill="rgb(208,25,22)" fg:x="8870" fg:w="2"/><text x="93.1782%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2 samples, 0.02%)</title><rect x="92.9492%" y="725" width="0.0210%" height="15" fill="rgb(228,127,16)" fg:x="8872" fg:w="2"/><text x="93.1992%" y="735.50"></text></g><g><title>core::ptr::write (2 samples, 0.02%)</title><rect x="92.9492%" y="709" width="0.0210%" height="15" fill="rgb(237,86,27)" fg:x="8872" fg:w="2"/><text x="93.1992%" y="719.50"></text></g><g><title>hashbrown::map::make_hash (3 samples, 0.03%)</title><rect x="92.9701%" y="661" width="0.0314%" height="15" fill="rgb(207,125,19)" fg:x="8874" fg:w="3"/><text x="93.2201%" y="671.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::hash::Hash&gt;::hash (3 samples, 0.03%)</title><rect x="92.9701%" y="645" width="0.0314%" height="15" fill="rgb(243,195,0)" fg:x="8874" fg:w="3"/><text x="93.2201%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u32&gt;::hash (3 samples, 0.03%)</title><rect x="92.9701%" y="629" width="0.0314%" height="15" fill="rgb(230,95,18)" fg:x="8874" fg:w="3"/><text x="93.2201%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u32 (3 samples, 0.03%)</title><rect x="92.9701%" y="613" width="0.0314%" height="15" fill="rgb(232,157,21)" fg:x="8874" fg:w="3"/><text x="93.2201%" y="623.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (3 samples, 0.03%)</title><rect x="92.9701%" y="597" width="0.0314%" height="15" fill="rgb(212,120,50)" fg:x="8874" fg:w="3"/><text x="93.2201%" y="607.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="92.9806%" y="581" width="0.0210%" height="15" fill="rgb(222,204,44)" fg:x="8875" fg:w="2"/><text x="93.2306%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="93.0016%" y="613" width="0.0105%" height="15" fill="rgb(236,6,33)" fg:x="8877" fg:w="1"/><text x="93.2516%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="93.0016%" y="597" width="0.0105%" height="15" fill="rgb(247,11,38)" fg:x="8877" fg:w="1"/><text x="93.2516%" y="607.50"></text></g><g><title>hashbrown::raw::bitmask::BitMask::lowest_set_bit (1 samples, 0.01%)</title><rect x="93.0016%" y="581" width="0.0105%" height="15" fill="rgb(215,111,0)" fg:x="8877" fg:w="1"/><text x="93.2516%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="93.0016%" y="629" width="0.0210%" height="15" fill="rgb(211,65,46)" fg:x="8877" fg:w="2"/><text x="93.2516%" y="639.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::bucket (1 samples, 0.01%)</title><rect x="93.0120%" y="613" width="0.0105%" height="15" fill="rgb(216,5,12)" fg:x="8878" fg:w="1"/><text x="93.2620%" y="623.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::from_base_index (1 samples, 0.01%)</title><rect x="93.0120%" y="597" width="0.0105%" height="15" fill="rgb(226,7,2)" fg:x="8878" fg:w="1"/><text x="93.2620%" y="607.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (1 samples, 0.01%)</title><rect x="93.0120%" y="581" width="0.0105%" height="15" fill="rgb(242,116,12)" fg:x="8878" fg:w="1"/><text x="93.2620%" y="591.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (1 samples, 0.01%)</title><rect x="93.0120%" y="565" width="0.0105%" height="15" fill="rgb(249,209,7)" fg:x="8878" fg:w="1"/><text x="93.2620%" y="575.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (14 samples, 0.15%)</title><rect x="93.0225%" y="629" width="0.1467%" height="15" fill="rgb(232,73,17)" fg:x="8879" fg:w="14"/><text x="93.2725%" y="639.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (14 samples, 0.15%)</title><rect x="93.0225%" y="613" width="0.1467%" height="15" fill="rgb(214,13,32)" fg:x="8879" fg:w="14"/><text x="93.2725%" y="623.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding (22 samples, 0.23%)</title><rect x="92.9701%" y="725" width="0.2305%" height="15" fill="rgb(221,125,10)" fg:x="8874" fg:w="22"/><text x="93.2201%" y="735.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (22 samples, 0.23%)</title><rect x="92.9701%" y="709" width="0.2305%" height="15" fill="rgb(246,7,44)" fg:x="8874" fg:w="22"/><text x="93.2201%" y="719.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (22 samples, 0.23%)</title><rect x="92.9701%" y="693" width="0.2305%" height="15" fill="rgb(239,18,35)" fg:x="8874" fg:w="22"/><text x="93.2201%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (22 samples, 0.23%)</title><rect x="92.9701%" y="677" width="0.2305%" height="15" fill="rgb(250,222,16)" fg:x="8874" fg:w="22"/><text x="93.2201%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (19 samples, 0.20%)</title><rect x="93.0016%" y="661" width="0.1991%" height="15" fill="rgb(219,100,8)" fg:x="8877" fg:w="19"/><text x="93.2516%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (19 samples, 0.20%)</title><rect x="93.0016%" y="645" width="0.1991%" height="15" fill="rgb(240,62,13)" fg:x="8877" fg:w="19"/><text x="93.2516%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (3 samples, 0.03%)</title><rect x="93.1692%" y="629" width="0.0314%" height="15" fill="rgb(253,194,2)" fg:x="8893" fg:w="3"/><text x="93.4192%" y="639.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (3 samples, 0.03%)</title><rect x="93.1692%" y="613" width="0.0314%" height="15" fill="rgb(235,58,31)" fg:x="8893" fg:w="3"/><text x="93.4192%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (3 samples, 0.03%)</title><rect x="93.1692%" y="597" width="0.0314%" height="15" fill="rgb(231,37,11)" fg:x="8893" fg:w="3"/><text x="93.4192%" y="607.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="93.1902%" y="581" width="0.0105%" height="15" fill="rgb(235,133,0)" fg:x="8895" fg:w="1"/><text x="93.4402%" y="591.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="93.1902%" y="565" width="0.0105%" height="15" fill="rgb(212,185,40)" fg:x="8895" fg:w="1"/><text x="93.4402%" y="575.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="93.1902%" y="549" width="0.0105%" height="15" fill="rgb(216,68,42)" fg:x="8895" fg:w="1"/><text x="93.4402%" y="559.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (5 samples, 0.05%)</title><rect x="93.2111%" y="709" width="0.0524%" height="15" fill="rgb(239,81,4)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (5 samples, 0.05%)</title><rect x="93.2111%" y="693" width="0.0524%" height="15" fill="rgb(206,86,6)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="703.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (5 samples, 0.05%)</title><rect x="93.2111%" y="677" width="0.0524%" height="15" fill="rgb(249,95,27)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="687.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (5 samples, 0.05%)</title><rect x="93.2111%" y="661" width="0.0524%" height="15" fill="rgb(205,155,45)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="671.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (5 samples, 0.05%)</title><rect x="93.2111%" y="645" width="0.0524%" height="15" fill="rgb(213,55,42)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="655.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (5 samples, 0.05%)</title><rect x="93.2111%" y="629" width="0.0524%" height="15" fill="rgb(249,197,4)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="639.50"></text></g><g><title>alloc::slice::hack::to_vec (5 samples, 0.05%)</title><rect x="93.2111%" y="613" width="0.0524%" height="15" fill="rgb(212,128,32)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="623.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (5 samples, 0.05%)</title><rect x="93.2111%" y="597" width="0.0524%" height="15" fill="rgb(252,47,30)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="607.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (5 samples, 0.05%)</title><rect x="93.2111%" y="581" width="0.0524%" height="15" fill="rgb(209,79,18)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (5 samples, 0.05%)</title><rect x="93.2111%" y="565" width="0.0524%" height="15" fill="rgb(225,81,38)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="575.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (5 samples, 0.05%)</title><rect x="93.2111%" y="549" width="0.0524%" height="15" fill="rgb(205,95,16)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (5 samples, 0.05%)</title><rect x="93.2111%" y="533" width="0.0524%" height="15" fill="rgb(214,30,4)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="543.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (5 samples, 0.05%)</title><rect x="93.2111%" y="517" width="0.0524%" height="15" fill="rgb(232,137,22)" fg:x="8897" fg:w="5"/><text x="93.4611%" y="527.50"></text></g><g><title>alloc::alloc::alloc (3 samples, 0.03%)</title><rect x="93.2321%" y="501" width="0.0314%" height="15" fill="rgb(232,156,19)" fg:x="8899" fg:w="3"/><text x="93.4821%" y="511.50"></text></g><g><title>__GI___libc_malloc (3 samples, 0.03%)</title><rect x="93.2321%" y="485" width="0.0314%" height="15" fill="rgb(248,157,26)" fg:x="8899" fg:w="3"/><text x="93.4821%" y="495.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (9 samples, 0.09%)</title><rect x="93.2635%" y="693" width="0.0943%" height="15" fill="rgb(242,24,3)" fg:x="8902" fg:w="9"/><text x="93.5135%" y="703.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding as core::cmp::PartialEq&gt;::ne (9 samples, 0.09%)</title><rect x="93.2635%" y="677" width="0.0943%" height="15" fill="rgb(218,195,48)" fg:x="8902" fg:w="9"/><text x="93.5135%" y="687.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::buffer::BufferId as core::cmp::PartialEq&gt;::ne (2 samples, 0.02%)</title><rect x="93.3368%" y="661" width="0.0210%" height="15" fill="rgb(214,193,36)" fg:x="8909" fg:w="2"/><text x="93.5868%" y="671.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::ne (2 samples, 0.02%)</title><rect x="93.3368%" y="645" width="0.0210%" height="15" fill="rgb(242,110,40)" fg:x="8909" fg:w="2"/><text x="93.5868%" y="655.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::ne (2 samples, 0.02%)</title><rect x="93.3368%" y="629" width="0.0210%" height="15" fill="rgb(233,150,26)" fg:x="8909" fg:w="2"/><text x="93.5868%" y="639.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_ne (2 samples, 0.02%)</title><rect x="93.3368%" y="613" width="0.0210%" height="15" fill="rgb(239,200,30)" fg:x="8909" fg:w="2"/><text x="93.5868%" y="623.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (2 samples, 0.02%)</title><rect x="93.3368%" y="597" width="0.0210%" height="15" fill="rgb(226,28,11)" fg:x="8909" fg:w="2"/><text x="93.5868%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="93.3892%" y="629" width="0.0105%" height="15" fill="rgb(220,26,48)" fg:x="8914" fg:w="1"/><text x="93.6392%" y="639.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="93.3892%" y="613" width="0.0105%" height="15" fill="rgb(232,10,11)" fg:x="8914" fg:w="1"/><text x="93.6392%" y="623.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (15 samples, 0.16%)</title><rect x="93.3997%" y="629" width="0.1572%" height="15" fill="rgb(252,143,50)" fg:x="8915" fg:w="15"/><text x="93.6497%" y="639.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (15 samples, 0.16%)</title><rect x="93.3997%" y="613" width="0.1572%" height="15" fill="rgb(206,58,22)" fg:x="8915" fg:w="15"/><text x="93.6497%" y="623.50"></text></g><g><title>hashbrown::map::make_hash (20 samples, 0.21%)</title><rect x="93.3578%" y="645" width="0.2095%" height="15" fill="rgb(250,9,45)" fg:x="8911" fg:w="20"/><text x="93.6078%" y="655.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (1 samples, 0.01%)</title><rect x="93.5568%" y="629" width="0.0105%" height="15" fill="rgb(225,148,14)" fg:x="8930" fg:w="1"/><text x="93.8068%" y="639.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (1 samples, 0.01%)</title><rect x="93.5568%" y="613" width="0.0105%" height="15" fill="rgb(205,178,40)" fg:x="8930" fg:w="1"/><text x="93.8068%" y="623.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (1 samples, 0.01%)</title><rect x="93.5673%" y="629" width="0.0105%" height="15" fill="rgb(215,201,4)" fg:x="8931" fg:w="1"/><text x="93.8173%" y="639.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="93.5987%" y="581" width="0.0105%" height="15" fill="rgb(219,223,24)" fg:x="8934" fg:w="1"/><text x="93.8487%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="93.5987%" y="613" width="0.0210%" height="15" fill="rgb(217,19,31)" fg:x="8934" fg:w="2"/><text x="93.8487%" y="623.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2 samples, 0.02%)</title><rect x="93.5987%" y="597" width="0.0210%" height="15" fill="rgb(235,33,3)" fg:x="8934" fg:w="2"/><text x="93.8487%" y="607.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (1 samples, 0.01%)</title><rect x="93.6092%" y="581" width="0.0105%" height="15" fill="rgb(221,39,18)" fg:x="8935" fg:w="1"/><text x="93.8592%" y="591.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (5 samples, 0.05%)</title><rect x="93.6197%" y="597" width="0.0524%" height="15" fill="rgb(242,162,33)" fg:x="8936" fg:w="5"/><text x="93.8697%" y="607.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (5 samples, 0.05%)</title><rect x="93.6197%" y="581" width="0.0524%" height="15" fill="rgb(233,215,28)" fg:x="8936" fg:w="5"/><text x="93.8697%" y="591.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (5 samples, 0.05%)</title><rect x="93.6197%" y="565" width="0.0524%" height="15" fill="rgb(212,117,9)" fg:x="8936" fg:w="5"/><text x="93.8697%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (5 samples, 0.05%)</title><rect x="93.6197%" y="549" width="0.0524%" height="15" fill="rgb(237,70,47)" fg:x="8936" fg:w="5"/><text x="93.8697%" y="559.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (81 samples, 0.85%)</title><rect x="93.6197%" y="613" width="0.8486%" height="15" fill="rgb(206,177,13)" fg:x="8936" fg:w="81"/><text x="93.8697%" y="623.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (76 samples, 0.80%)</title><rect x="93.6721%" y="597" width="0.7962%" height="15" fill="rgb(209,174,33)" fg:x="8941" fg:w="76"/><text x="93.9221%" y="607.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (76 samples, 0.80%)</title><rect x="93.6721%" y="581" width="0.7962%" height="15" fill="rgb(226,6,11)" fg:x="8941" fg:w="76"/><text x="93.9221%" y="591.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (76 samples, 0.80%)</title><rect x="93.6721%" y="565" width="0.7962%" height="15" fill="rgb(240,214,6)" fg:x="8941" fg:w="76"/><text x="93.9221%" y="575.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (76 samples, 0.80%)</title><rect x="93.6721%" y="549" width="0.7962%" height="15" fill="rgb(254,214,40)" fg:x="8941" fg:w="76"/><text x="93.9221%" y="559.50"></text></g><g><title>__memcmp_avx2_movbe (18 samples, 0.19%)</title><rect x="94.2797%" y="533" width="0.1886%" height="15" fill="rgb(230,187,15)" fg:x="8999" fg:w="18"/><text x="94.5297%" y="543.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="94.4788%" y="565" width="0.0105%" height="15" fill="rgb(250,11,27)" fg:x="9018" fg:w="1"/><text x="94.7288%" y="575.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (170 samples, 1.78%)</title><rect x="93.2006%" y="725" width="1.7810%" height="15" fill="rgb(243,107,19)" fg:x="8896" fg:w="170"/><text x="93.4506%" y="735.50">b..</text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::try_set_dirty (164 samples, 1.72%)</title><rect x="93.2635%" y="709" width="1.7182%" height="15" fill="rgb(253,66,26)" fg:x="8902" fg:w="164"/><text x="93.5135%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (155 samples, 1.62%)</title><rect x="93.3578%" y="693" width="1.6239%" height="15" fill="rgb(228,43,8)" fg:x="8911" fg:w="155"/><text x="93.6078%" y="703.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (155 samples, 1.62%)</title><rect x="93.3578%" y="677" width="1.6239%" height="15" fill="rgb(232,197,36)" fg:x="8911" fg:w="155"/><text x="93.6078%" y="687.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (155 samples, 1.62%)</title><rect x="93.3578%" y="661" width="1.6239%" height="15" fill="rgb(221,182,31)" fg:x="8911" fg:w="155"/><text x="93.6078%" y="671.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (135 samples, 1.41%)</title><rect x="93.5673%" y="645" width="1.4144%" height="15" fill="rgb(244,25,36)" fg:x="8931" fg:w="135"/><text x="93.8173%" y="655.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (134 samples, 1.40%)</title><rect x="93.5778%" y="629" width="1.4039%" height="15" fill="rgb(247,101,19)" fg:x="8932" fg:w="134"/><text x="93.8278%" y="639.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (49 samples, 0.51%)</title><rect x="94.4683%" y="613" width="0.5134%" height="15" fill="rgb(223,117,19)" fg:x="9017" fg:w="49"/><text x="94.7183%" y="623.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (49 samples, 0.51%)</title><rect x="94.4683%" y="597" width="0.5134%" height="15" fill="rgb(249,63,38)" fg:x="9017" fg:w="49"/><text x="94.7183%" y="607.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (49 samples, 0.51%)</title><rect x="94.4683%" y="581" width="0.5134%" height="15" fill="rgb(220,143,23)" fg:x="9017" fg:w="49"/><text x="94.7183%" y="591.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (47 samples, 0.49%)</title><rect x="94.4893%" y="565" width="0.4924%" height="15" fill="rgb(252,183,22)" fg:x="9019" fg:w="47"/><text x="94.7393%" y="575.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (47 samples, 0.49%)</title><rect x="94.4893%" y="549" width="0.4924%" height="15" fill="rgb(243,176,15)" fg:x="9019" fg:w="47"/><text x="94.7393%" y="559.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (47 samples, 0.49%)</title><rect x="94.4893%" y="533" width="0.4924%" height="15" fill="rgb(244,204,46)" fg:x="9019" fg:w="47"/><text x="94.7393%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (267 samples, 2.80%)</title><rect x="92.1949%" y="837" width="2.7973%" height="15" fill="rgb(227,28,54)" fg:x="8800" fg:w="267"/><text x="92.4449%" y="847.50">&lt;F..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (267 samples, 2.80%)</title><rect x="92.1949%" y="821" width="2.7973%" height="15" fill="rgb(231,10,15)" fg:x="8800" fg:w="267"/><text x="92.4449%" y="831.50">co..</text></g><g><title>core::ops::function::Fn::call (267 samples, 2.80%)</title><rect x="92.1949%" y="805" width="2.7973%" height="15" fill="rgb(210,200,17)" fg:x="8800" fg:w="267"/><text x="92.4449%" y="815.50">co..</text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (267 samples, 2.80%)</title><rect x="92.1949%" y="789" width="2.7973%" height="15" fill="rgb(251,106,46)" fg:x="8800" fg:w="267"/><text x="92.4449%" y="799.50">be..</text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (266 samples, 2.79%)</title><rect x="92.2053%" y="773" width="2.7868%" height="15" fill="rgb(218,211,15)" fg:x="8801" fg:w="266"/><text x="92.4553%" y="783.50">&lt;b..</text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (266 samples, 2.79%)</title><rect x="92.2053%" y="757" width="2.7868%" height="15" fill="rgb(239,62,10)" fg:x="8801" fg:w="266"/><text x="92.4553%" y="767.50">be..</text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (259 samples, 2.71%)</title><rect x="92.2787%" y="741" width="2.7135%" height="15" fill="rgb(225,53,53)" fg:x="8808" fg:w="259"/><text x="92.5287%" y="751.50">be..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (1 samples, 0.01%)</title><rect x="94.9817%" y="725" width="0.0105%" height="15" fill="rgb(207,16,24)" fg:x="9066" fg:w="1"/><text x="95.2317%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (1 samples, 0.01%)</title><rect x="94.9921%" y="773" width="0.0105%" height="15" fill="rgb(217,52,28)" fg:x="9067" fg:w="1"/><text x="95.2421%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (1 samples, 0.01%)</title><rect x="94.9921%" y="757" width="0.0105%" height="15" fill="rgb(246,1,5)" fg:x="9067" fg:w="1"/><text x="95.2421%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (1 samples, 0.01%)</title><rect x="94.9921%" y="741" width="0.0105%" height="15" fill="rgb(221,29,26)" fg:x="9067" fg:w="1"/><text x="95.2421%" y="751.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="94.9921%" y="725" width="0.0105%" height="15" fill="rgb(250,133,32)" fg:x="9067" fg:w="1"/><text x="95.2421%" y="735.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="94.9921%" y="709" width="0.0105%" height="15" fill="rgb(236,63,16)" fg:x="9067" fg:w="1"/><text x="95.2421%" y="719.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="94.9921%" y="693" width="0.0105%" height="15" fill="rgb(231,159,14)" fg:x="9067" fg:w="1"/><text x="95.2421%" y="703.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::recycle (1 samples, 0.01%)</title><rect x="94.9921%" y="677" width="0.0105%" height="15" fill="rgb(207,102,36)" fg:x="9067" fg:w="1"/><text x="95.2421%" y="687.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::reset (1 samples, 0.01%)</title><rect x="94.9921%" y="661" width="0.0105%" height="15" fill="rgb(230,224,31)" fg:x="9067" fg:w="1"/><text x="95.2421%" y="671.50"></text></g><g><title>ash::device::DeviceV1_0::reset_command_buffer (1 samples, 0.01%)</title><rect x="94.9921%" y="645" width="0.0105%" height="15" fill="rgb(215,182,16)" fg:x="9067" fg:w="1"/><text x="95.2421%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="94.9921%" y="629" width="0.0105%" height="15" fill="rgb(226,113,2)" fg:x="9067" fg:w="1"/><text x="95.2421%" y="639.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::unmap_buffer (1 samples, 0.01%)</title><rect x="95.0026%" y="773" width="0.0105%" height="15" fill="rgb(241,18,35)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="95.0026%" y="757" width="0.0105%" height="15" fill="rgb(240,165,44)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="767.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::buffer_unmap (1 samples, 0.01%)</title><rect x="95.0026%" y="741" width="0.0105%" height="15" fill="rgb(229,130,47)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::device::Device&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::device::Device&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (1 samples, 0.01%)</title><rect x="95.0026%" y="725" width="0.0105%" height="15" fill="rgb(223,93,7)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="735.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (1 samples, 0.01%)</title><rect x="95.0026%" y="709" width="0.0105%" height="15" fill="rgb(205,180,36)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="719.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (1 samples, 0.01%)</title><rect x="95.0026%" y="693" width="0.0105%" height="15" fill="rgb(221,103,28)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="703.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::unlock_exclusive_slow (1 samples, 0.01%)</title><rect x="95.0026%" y="677" width="0.0105%" height="15" fill="rgb(212,4,3)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="687.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::wake_parked_threads (1 samples, 0.01%)</title><rect x="95.0026%" y="661" width="0.0105%" height="15" fill="rgb(209,221,53)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="671.50"></text></g><g><title>parking_lot_core::parking_lot::unpark_filter (1 samples, 0.01%)</title><rect x="95.0026%" y="645" width="0.0105%" height="15" fill="rgb(233,229,52)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="655.50"></text></g><g><title>parking_lot_core::parking_lot::FairTimeout::should_timeout (1 samples, 0.01%)</title><rect x="95.0026%" y="629" width="0.0105%" height="15" fill="rgb(254,127,37)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="639.50"></text></g><g><title>core::cmp::PartialOrd::gt (1 samples, 0.01%)</title><rect x="95.0026%" y="613" width="0.0105%" height="15" fill="rgb(207,161,26)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="623.50"></text></g><g><title>&lt;std::time::Instant as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="95.0026%" y="597" width="0.0105%" height="15" fill="rgb(223,75,5)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="607.50"></text></g><g><title>&lt;std::sys::unix::time::inner::Instant as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="95.0026%" y="581" width="0.0105%" height="15" fill="rgb(235,115,52)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="591.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::PartialOrd&gt;::partial_cmp (1 samples, 0.01%)</title><rect x="95.0026%" y="565" width="0.0105%" height="15" fill="rgb(240,91,46)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="575.50"></text></g><g><title>&lt;std::sys::unix::time::Timespec as core::cmp::Ord&gt;::cmp (1 samples, 0.01%)</title><rect x="95.0026%" y="549" width="0.0105%" height="15" fill="rgb(251,144,21)" fg:x="9068" fg:w="1"/><text x="95.2526%" y="559.50"></text></g><g><title>_int_free (2 samples, 0.02%)</title><rect x="95.0131%" y="453" width="0.0210%" height="15" fill="rgb(247,220,47)" fg:x="9069" fg:w="2"/><text x="95.2631%" y="463.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (10 samples, 0.10%)</title><rect x="95.0131%" y="773" width="0.1048%" height="15" fill="rgb(253,122,1)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="783.50"></text></g><g><title>alloc::fmt::format (10 samples, 0.10%)</title><rect x="95.0131%" y="757" width="0.1048%" height="15" fill="rgb(221,0,24)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="767.50"></text></g><g><title>core::fmt::Write::write_fmt (10 samples, 0.10%)</title><rect x="95.0131%" y="741" width="0.1048%" height="15" fill="rgb(220,204,54)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="751.50"></text></g><g><title>core::fmt::write (10 samples, 0.10%)</title><rect x="95.0131%" y="725" width="0.1048%" height="15" fill="rgb(205,96,25)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="735.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (10 samples, 0.10%)</title><rect x="95.0131%" y="709" width="0.1048%" height="15" fill="rgb(247,77,20)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="719.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (10 samples, 0.10%)</title><rect x="95.0131%" y="693" width="0.1048%" height="15" fill="rgb(245,151,8)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="703.50"></text></g><g><title>alloc::string::String::push_str (10 samples, 0.10%)</title><rect x="95.0131%" y="677" width="0.1048%" height="15" fill="rgb(242,158,39)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="687.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (10 samples, 0.10%)</title><rect x="95.0131%" y="661" width="0.1048%" height="15" fill="rgb(222,214,50)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="671.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (10 samples, 0.10%)</title><rect x="95.0131%" y="645" width="0.1048%" height="15" fill="rgb(229,60,39)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (10 samples, 0.10%)</title><rect x="95.0131%" y="629" width="0.1048%" height="15" fill="rgb(240,148,18)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="639.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (10 samples, 0.10%)</title><rect x="95.0131%" y="613" width="0.1048%" height="15" fill="rgb(215,96,11)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (10 samples, 0.10%)</title><rect x="95.0131%" y="597" width="0.1048%" height="15" fill="rgb(238,162,53)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (10 samples, 0.10%)</title><rect x="95.0131%" y="581" width="0.1048%" height="15" fill="rgb(214,83,18)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="591.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (10 samples, 0.10%)</title><rect x="95.0131%" y="565" width="0.1048%" height="15" fill="rgb(248,117,24)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="575.50"></text></g><g><title>alloc::raw_vec::finish_grow (10 samples, 0.10%)</title><rect x="95.0131%" y="549" width="0.1048%" height="15" fill="rgb(238,190,6)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (10 samples, 0.10%)</title><rect x="95.0131%" y="533" width="0.1048%" height="15" fill="rgb(213,51,6)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="543.50"></text></g><g><title>alloc::alloc::Global::grow_impl (10 samples, 0.10%)</title><rect x="95.0131%" y="517" width="0.1048%" height="15" fill="rgb(212,136,1)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="527.50"></text></g><g><title>alloc::alloc::realloc (10 samples, 0.10%)</title><rect x="95.0131%" y="501" width="0.1048%" height="15" fill="rgb(221,192,14)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="511.50"></text></g><g><title>__GI___libc_realloc (10 samples, 0.10%)</title><rect x="95.0131%" y="485" width="0.1048%" height="15" fill="rgb(244,38,54)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="495.50"></text></g><g><title>_int_realloc (10 samples, 0.10%)</title><rect x="95.0131%" y="469" width="0.1048%" height="15" fill="rgb(240,45,28)" fg:x="9069" fg:w="10"/><text x="95.2631%" y="479.50"></text></g><g><title>_int_malloc (8 samples, 0.08%)</title><rect x="95.0340%" y="453" width="0.0838%" height="15" fill="rgb(240,123,12)" fg:x="9071" fg:w="8"/><text x="95.2840%" y="463.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (287 samples, 3.01%)</title><rect x="92.1844%" y="1093" width="3.0068%" height="15" fill="rgb(216,14,30)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="1103.50">bev..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (287 samples, 3.01%)</title><rect x="92.1844%" y="1077" width="3.0068%" height="15" fill="rgb(212,50,24)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="1087.50">&lt;be..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (287 samples, 3.01%)</title><rect x="92.1844%" y="1061" width="3.0068%" height="15" fill="rgb(253,229,47)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="1071.50">bev..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (287 samples, 3.01%)</title><rect x="92.1844%" y="1045" width="3.0068%" height="15" fill="rgb(214,26,17)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="1055.50">&lt;be..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (287 samples, 3.01%)</title><rect x="92.1844%" y="1029" width="3.0068%" height="15" fill="rgb(252,60,11)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="1039.50">&lt;be..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (287 samples, 3.01%)</title><rect x="92.1844%" y="1013" width="3.0068%" height="15" fill="rgb(209,59,37)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="1023.50">bev..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (287 samples, 3.01%)</title><rect x="92.1844%" y="997" width="3.0068%" height="15" fill="rgb(228,126,53)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="1007.50">std..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (287 samples, 3.01%)</title><rect x="92.1844%" y="981" width="3.0068%" height="15" fill="rgb(233,99,2)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="991.50">std..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (287 samples, 3.01%)</title><rect x="92.1844%" y="965" width="3.0068%" height="15" fill="rgb(217,106,34)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="975.50">bev..</text></g><g><title>async_executor::Executor::try_tick (287 samples, 3.01%)</title><rect x="92.1844%" y="949" width="3.0068%" height="15" fill="rgb(222,46,19)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="959.50">asy..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (287 samples, 3.01%)</title><rect x="92.1844%" y="933" width="3.0068%" height="15" fill="rgb(251,87,31)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="943.50">asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (287 samples, 3.01%)</title><rect x="92.1844%" y="917" width="3.0068%" height="15" fill="rgb(213,70,51)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="927.50">&lt;co..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (287 samples, 3.01%)</title><rect x="92.1844%" y="901" width="3.0068%" height="15" fill="rgb(229,144,18)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="911.50">asy..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (287 samples, 3.01%)</title><rect x="92.1844%" y="885" width="3.0068%" height="15" fill="rgb(254,60,26)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="895.50">&lt;co..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (287 samples, 3.01%)</title><rect x="92.1844%" y="869" width="3.0068%" height="15" fill="rgb(243,127,51)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="879.50">bev..</text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (287 samples, 3.01%)</title><rect x="92.1844%" y="853" width="3.0068%" height="15" fill="rgb(221,51,25)" fg:x="8799" fg:w="287"/><text x="92.4344%" y="863.50">&lt;be..</text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (19 samples, 0.20%)</title><rect x="94.9921%" y="837" width="0.1991%" height="15" fill="rgb(205,42,7)" fg:x="9067" fg:w="19"/><text x="95.2421%" y="847.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (19 samples, 0.20%)</title><rect x="94.9921%" y="821" width="0.1991%" height="15" fill="rgb(236,177,48)" fg:x="9067" fg:w="19"/><text x="95.2421%" y="831.50"></text></g><g><title>core::ops::function::Fn::call (19 samples, 0.20%)</title><rect x="94.9921%" y="805" width="0.1991%" height="15" fill="rgb(226,79,31)" fg:x="9067" fg:w="19"/><text x="95.2421%" y="815.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (19 samples, 0.20%)</title><rect x="94.9921%" y="789" width="0.1991%" height="15" fill="rgb(216,170,12)" fg:x="9067" fg:w="19"/><text x="95.2421%" y="799.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (7 samples, 0.07%)</title><rect x="95.1179%" y="773" width="0.0733%" height="15" fill="rgb(208,62,51)" fg:x="9079" fg:w="7"/><text x="95.3679%" y="783.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (7 samples, 0.07%)</title><rect x="95.1179%" y="757" width="0.0733%" height="15" fill="rgb(254,129,9)" fg:x="9079" fg:w="7"/><text x="95.3679%" y="767.50"></text></g><g><title>std::collections::hash::map::OccupiedEntry&lt;K,V&gt;::into_mut (7 samples, 0.07%)</title><rect x="95.1179%" y="741" width="0.0733%" height="15" fill="rgb(243,209,31)" fg:x="9079" fg:w="7"/><text x="95.3679%" y="751.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.2017%" y="709" width="0.0105%" height="15" fill="rgb(213,159,23)" fg:x="9087" fg:w="1"/><text x="95.4517%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.2017%" y="693" width="0.0105%" height="15" fill="rgb(249,77,39)" fg:x="9087" fg:w="1"/><text x="95.4517%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="95.3169%" y="645" width="0.0314%" height="15" fill="rgb(230,13,33)" fg:x="9098" fg:w="3"/><text x="95.5669%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.3379%" y="629" width="0.0105%" height="15" fill="rgb(215,215,7)" fg:x="9100" fg:w="1"/><text x="95.5879%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.3379%" y="613" width="0.0105%" height="15" fill="rgb(222,92,25)" fg:x="9100" fg:w="1"/><text x="95.5879%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.3379%" y="597" width="0.0105%" height="15" fill="rgb(215,173,22)" fg:x="9100" fg:w="1"/><text x="95.5879%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.3379%" y="581" width="0.0105%" height="15" fill="rgb(247,205,52)" fg:x="9100" fg:w="1"/><text x="95.5879%" y="591.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (16 samples, 0.17%)</title><rect x="95.1912%" y="1061" width="0.1676%" height="15" fill="rgb(240,210,37)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="1071.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (16 samples, 0.17%)</title><rect x="95.1912%" y="1045" width="0.1676%" height="15" fill="rgb(224,13,10)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="1055.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (16 samples, 0.17%)</title><rect x="95.1912%" y="1029" width="0.1676%" height="15" fill="rgb(209,48,33)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (16 samples, 0.17%)</title><rect x="95.1912%" y="1013" width="0.1676%" height="15" fill="rgb(228,219,23)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="1023.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (16 samples, 0.17%)</title><rect x="95.1912%" y="997" width="0.1676%" height="15" fill="rgb(239,46,49)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="1007.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (16 samples, 0.17%)</title><rect x="95.1912%" y="981" width="0.1676%" height="15" fill="rgb(206,172,51)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="991.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (16 samples, 0.17%)</title><rect x="95.1912%" y="965" width="0.1676%" height="15" fill="rgb(213,212,35)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (16 samples, 0.17%)</title><rect x="95.1912%" y="949" width="0.1676%" height="15" fill="rgb(252,40,27)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (16 samples, 0.17%)</title><rect x="95.1912%" y="933" width="0.1676%" height="15" fill="rgb(212,33,41)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (16 samples, 0.17%)</title><rect x="95.1912%" y="917" width="0.1676%" height="15" fill="rgb(232,160,27)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="927.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (16 samples, 0.17%)</title><rect x="95.1912%" y="901" width="0.1676%" height="15" fill="rgb(244,160,20)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="911.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (16 samples, 0.17%)</title><rect x="95.1912%" y="885" width="0.1676%" height="15" fill="rgb(205,66,20)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="895.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (16 samples, 0.17%)</title><rect x="95.1912%" y="869" width="0.1676%" height="15" fill="rgb(236,158,6)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="879.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (16 samples, 0.17%)</title><rect x="95.1912%" y="853" width="0.1676%" height="15" fill="rgb(232,25,36)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="863.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (16 samples, 0.17%)</title><rect x="95.1912%" y="837" width="0.1676%" height="15" fill="rgb(220,153,35)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="847.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (16 samples, 0.17%)</title><rect x="95.1912%" y="821" width="0.1676%" height="15" fill="rgb(216,5,8)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.17%)</title><rect x="95.1912%" y="805" width="0.1676%" height="15" fill="rgb(240,97,3)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.17%)</title><rect x="95.1912%" y="789" width="0.1676%" height="15" fill="rgb(220,99,26)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.17%)</title><rect x="95.1912%" y="773" width="0.1676%" height="15" fill="rgb(237,96,2)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.17%)</title><rect x="95.1912%" y="757" width="0.1676%" height="15" fill="rgb(217,197,47)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.17%)</title><rect x="95.1912%" y="741" width="0.1676%" height="15" fill="rgb(252,133,54)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (16 samples, 0.17%)</title><rect x="95.1912%" y="725" width="0.1676%" height="15" fill="rgb(233,37,30)" fg:x="9086" fg:w="16"/><text x="95.4412%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.15%)</title><rect x="95.2122%" y="709" width="0.1467%" height="15" fill="rgb(239,182,12)" fg:x="9088" fg:w="14"/><text x="95.4622%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (13 samples, 0.14%)</title><rect x="95.2226%" y="693" width="0.1362%" height="15" fill="rgb(245,83,39)" fg:x="9089" fg:w="13"/><text x="95.4726%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (10 samples, 0.10%)</title><rect x="95.2541%" y="677" width="0.1048%" height="15" fill="rgb(222,109,36)" fg:x="9092" fg:w="10"/><text x="95.5041%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="95.3064%" y="661" width="0.0524%" height="15" fill="rgb(237,95,44)" fg:x="9097" fg:w="5"/><text x="95.5564%" y="671.50"></text></g><g><title>__pthread_mutex_unlock_usercnt (1 samples, 0.01%)</title><rect x="95.3483%" y="645" width="0.0105%" height="15" fill="rgb(216,36,54)" fg:x="9101" fg:w="1"/><text x="95.5983%" y="655.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (2 samples, 0.02%)</title><rect x="95.3588%" y="997" width="0.0210%" height="15" fill="rgb(236,164,3)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="1007.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (2 samples, 0.02%)</title><rect x="95.3588%" y="981" width="0.0210%" height="15" fill="rgb(223,15,21)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="991.50"></text></g><g><title>wgpu::Device::create_swap_chain (2 samples, 0.02%)</title><rect x="95.3588%" y="965" width="0.0210%" height="15" fill="rgb(239,191,12)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (2 samples, 0.02%)</title><rect x="95.3588%" y="949" width="0.0210%" height="15" fill="rgb(231,191,37)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="959.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (2 samples, 0.02%)</title><rect x="95.3588%" y="933" width="0.0210%" height="15" fill="rgb(209,155,36)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="943.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::configure_swapchain (2 samples, 0.02%)</title><rect x="95.3588%" y="917" width="0.0210%" height="15" fill="rgb(216,222,49)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="927.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_backend_vulkan::Device&gt;::create_swapchain (2 samples, 0.02%)</title><rect x="95.3588%" y="901" width="0.0210%" height="15" fill="rgb(218,181,2)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="911.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (2 samples, 0.02%)</title><rect x="95.3588%" y="885" width="0.0210%" height="15" fill="rgb(239,125,9)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="895.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::create_swapchain_khr (2 samples, 0.02%)</title><rect x="95.3588%" y="869" width="0.0210%" height="15" fill="rgb(233,103,7)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="879.50"></text></g><g><title>[libvulkan.so.1.2.187] (2 samples, 0.02%)</title><rect x="95.3588%" y="853" width="0.0210%" height="15" fill="rgb(209,223,5)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="863.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="95.3588%" y="837" width="0.0210%" height="15" fill="rgb(234,71,27)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="95.3588%" y="821" width="0.0210%" height="15" fill="rgb(251,202,16)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="95.3588%" y="805" width="0.0210%" height="15" fill="rgb(231,180,0)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="95.3588%" y="789" width="0.0210%" height="15" fill="rgb(223,58,28)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="95.3588%" y="773" width="0.0210%" height="15" fill="rgb(250,34,24)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="95.3588%" y="757" width="0.0210%" height="15" fill="rgb(235,24,16)" fg:x="9102" fg:w="2"/><text x="95.6088%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.3693%" y="741" width="0.0105%" height="15" fill="rgb(219,28,33)" fg:x="9103" fg:w="1"/><text x="95.6193%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.3693%" y="725" width="0.0105%" height="15" fill="rgb(228,150,43)" fg:x="9103" fg:w="1"/><text x="95.6193%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.3693%" y="709" width="0.0105%" height="15" fill="rgb(221,228,36)" fg:x="9103" fg:w="1"/><text x="95.6193%" y="719.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::get_or_create (1 samples, 0.01%)</title><rect x="95.3798%" y="965" width="0.0105%" height="15" fill="rgb(232,116,17)" fg:x="9104" fg:w="1"/><text x="95.6298%" y="975.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (1 samples, 0.01%)</title><rect x="95.3798%" y="949" width="0.0105%" height="15" fill="rgb(220,110,51)" fg:x="9104" fg:w="1"/><text x="95.6298%" y="959.50"></text></g><g><title>wgpu::Device::create_command_encoder (1 samples, 0.01%)</title><rect x="95.3798%" y="933" width="0.0105%" height="15" fill="rgb(207,26,25)" fg:x="9104" fg:w="1"/><text x="95.6298%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (1 samples, 0.01%)</title><rect x="95.3798%" y="917" width="0.0105%" height="15" fill="rgb(223,58,19)" fg:x="9104" fg:w="1"/><text x="95.6298%" y="927.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (1 samples, 0.01%)</title><rect x="95.3798%" y="901" width="0.0105%" height="15" fill="rgb(234,125,39)" fg:x="9104" fg:w="1"/><text x="95.6298%" y="911.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="95.3798%" y="885" width="0.0105%" height="15" fill="rgb(241,48,36)" fg:x="9104" fg:w="1"/><text x="95.6298%" y="895.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (15 samples, 0.16%)</title><rect x="95.3798%" y="997" width="0.1572%" height="15" fill="rgb(217,148,51)" fg:x="9104" fg:w="15"/><text x="95.6298%" y="1007.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (15 samples, 0.16%)</title><rect x="95.3798%" y="981" width="0.1572%" height="15" fill="rgb(247,17,25)" fg:x="9104" fg:w="15"/><text x="95.6298%" y="991.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (14 samples, 0.15%)</title><rect x="95.3903%" y="965" width="0.1467%" height="15" fill="rgb(219,89,38)" fg:x="9105" fg:w="14"/><text x="95.6403%" y="975.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (14 samples, 0.15%)</title><rect x="95.3903%" y="949" width="0.1467%" height="15" fill="rgb(220,145,2)" fg:x="9105" fg:w="14"/><text x="95.6403%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (14 samples, 0.15%)</title><rect x="95.3903%" y="933" width="0.1467%" height="15" fill="rgb(244,66,47)" fg:x="9105" fg:w="14"/><text x="95.6403%" y="943.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (14 samples, 0.15%)</title><rect x="95.3903%" y="917" width="0.1467%" height="15" fill="rgb(226,182,5)" fg:x="9105" fg:w="14"/><text x="95.6403%" y="927.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (14 samples, 0.15%)</title><rect x="95.3903%" y="901" width="0.1467%" height="15" fill="rgb(211,98,20)" fg:x="9105" fg:w="14"/><text x="95.6403%" y="911.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (14 samples, 0.15%)</title><rect x="95.3903%" y="885" width="0.1467%" height="15" fill="rgb(217,103,52)" fg:x="9105" fg:w="14"/><text x="95.6403%" y="895.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (14 samples, 0.15%)</title><rect x="95.3903%" y="869" width="0.1467%" height="15" fill="rgb(208,125,52)" fg:x="9105" fg:w="14"/><text x="95.6403%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (14 samples, 0.15%)</title><rect x="95.3903%" y="853" width="0.1467%" height="15" fill="rgb(244,70,13)" fg:x="9105" fg:w="14"/><text x="95.6403%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.5265%" y="837" width="0.0105%" height="15" fill="rgb(253,124,3)" fg:x="9118" fg:w="1"/><text x="95.7765%" y="847.50"></text></g><g><title>_IO_no_init (1 samples, 0.01%)</title><rect x="95.5369%" y="757" width="0.0105%" height="15" fill="rgb(222,145,32)" fg:x="9119" fg:w="1"/><text x="95.7869%" y="767.50"></text></g><g><title>_IO_old_init (1 samples, 0.01%)</title><rect x="95.5369%" y="741" width="0.0105%" height="15" fill="rgb(232,183,47)" fg:x="9119" fg:w="1"/><text x="95.7869%" y="751.50"></text></g><g><title>__GI___snprintf (2 samples, 0.02%)</title><rect x="95.5369%" y="789" width="0.0210%" height="15" fill="rgb(246,226,4)" fg:x="9119" fg:w="2"/><text x="95.7869%" y="799.50"></text></g><g><title>__vsnprintf_internal (2 samples, 0.02%)</title><rect x="95.5369%" y="773" width="0.0210%" height="15" fill="rgb(228,185,46)" fg:x="9119" fg:w="2"/><text x="95.7869%" y="783.50"></text></g><g><title>__vfprintf_internal (1 samples, 0.01%)</title><rect x="95.5474%" y="757" width="0.0105%" height="15" fill="rgb(213,196,4)" fg:x="9120" fg:w="1"/><text x="95.7974%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3 samples, 0.03%)</title><rect x="95.5369%" y="805" width="0.0314%" height="15" fill="rgb(212,2,45)" fg:x="9119" fg:w="3"/><text x="95.7869%" y="815.50"></text></g><g><title>__ioctl (1 samples, 0.01%)</title><rect x="95.5579%" y="789" width="0.0105%" height="15" fill="rgb(217,145,50)" fg:x="9121" fg:w="1"/><text x="95.8079%" y="799.50"></text></g><g><title>__libc_open64 (1 samples, 0.01%)</title><rect x="95.5684%" y="805" width="0.0105%" height="15" fill="rgb(242,10,46)" fg:x="9122" fg:w="1"/><text x="95.8184%" y="815.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="95.5684%" y="789" width="0.0105%" height="15" fill="rgb(252,91,48)" fg:x="9122" fg:w="1"/><text x="95.8184%" y="799.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_fence (5 samples, 0.05%)</title><rect x="95.5369%" y="949" width="0.0524%" height="15" fill="rgb(216,72,13)" fg:x="9119" fg:w="5"/><text x="95.7869%" y="959.50"></text></g><g><title>ash::device::DeviceV1_0::create_fence (5 samples, 0.05%)</title><rect x="95.5369%" y="933" width="0.0524%" height="15" fill="rgb(219,6,37)" fg:x="9119" fg:w="5"/><text x="95.7869%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="95.5369%" y="917" width="0.0524%" height="15" fill="rgb(236,185,40)" fg:x="9119" fg:w="5"/><text x="95.7869%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="95.5369%" y="901" width="0.0524%" height="15" fill="rgb(208,81,48)" fg:x="9119" fg:w="5"/><text x="95.7869%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="95.5369%" y="885" width="0.0524%" height="15" fill="rgb(211,42,33)" fg:x="9119" fg:w="5"/><text x="95.7869%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="95.5369%" y="869" width="0.0524%" height="15" fill="rgb(211,90,39)" fg:x="9119" fg:w="5"/><text x="95.7869%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="95.5369%" y="853" width="0.0524%" height="15" fill="rgb(218,136,12)" fg:x="9119" fg:w="5"/><text x="95.7869%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="95.5369%" y="837" width="0.0524%" height="15" fill="rgb(234,12,32)" fg:x="9119" fg:w="5"/><text x="95.7869%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="95.5369%" y="821" width="0.0524%" height="15" fill="rgb(221,164,18)" fg:x="9119" fg:w="5"/><text x="95.7869%" y="831.50"></text></g><g><title>fcntl_compat (1 samples, 0.01%)</title><rect x="95.5788%" y="805" width="0.0105%" height="15" fill="rgb(239,135,14)" fg:x="9123" fg:w="1"/><text x="95.8288%" y="815.50"></text></g><g><title>[libpthread-2.33.so] (1 samples, 0.01%)</title><rect x="95.5788%" y="789" width="0.0105%" height="15" fill="rgb(226,198,47)" fg:x="9123" fg:w="1"/><text x="95.8288%" y="799.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::drain (1 samples, 0.01%)</title><rect x="95.5893%" y="917" width="0.0105%" height="15" fill="rgb(244,121,47)" fg:x="9124" fg:w="1"/><text x="95.8393%" y="927.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::insert_barriers (3 samples, 0.03%)</title><rect x="95.5893%" y="949" width="0.0314%" height="15" fill="rgb(226,21,48)" fg:x="9124" fg:w="3"/><text x="95.8393%" y="959.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_replace (3 samples, 0.03%)</title><rect x="95.5893%" y="933" width="0.0314%" height="15" fill="rgb(215,178,47)" fg:x="9124" fg:w="3"/><text x="95.8393%" y="943.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (2 samples, 0.02%)</title><rect x="95.5998%" y="917" width="0.0210%" height="15" fill="rgb(206,212,19)" fg:x="9125" fg:w="2"/><text x="95.8498%" y="927.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (2 samples, 0.02%)</title><rect x="95.5998%" y="901" width="0.0210%" height="15" fill="rgb(230,104,34)" fg:x="9125" fg:w="2"/><text x="95.8498%" y="911.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (2 samples, 0.02%)</title><rect x="95.5998%" y="885" width="0.0210%" height="15" fill="rgb(210,96,51)" fg:x="9125" fg:w="2"/><text x="95.8498%" y="895.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (1 samples, 0.01%)</title><rect x="95.6103%" y="869" width="0.0105%" height="15" fill="rgb(229,111,47)" fg:x="9126" fg:w="1"/><text x="95.8603%" y="879.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (1 samples, 0.01%)</title><rect x="95.6103%" y="853" width="0.0105%" height="15" fill="rgb(218,174,45)" fg:x="9126" fg:w="1"/><text x="95.8603%" y="863.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (1 samples, 0.01%)</title><rect x="95.6103%" y="837" width="0.0105%" height="15" fill="rgb(215,21,32)" fg:x="9126" fg:w="1"/><text x="95.8603%" y="847.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (1 samples, 0.01%)</title><rect x="95.6103%" y="821" width="0.0105%" height="15" fill="rgb(235,72,21)" fg:x="9126" fg:w="1"/><text x="95.8603%" y="831.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (1 samples, 0.01%)</title><rect x="95.6103%" y="805" width="0.0105%" height="15" fill="rgb(250,113,30)" fg:x="9126" fg:w="1"/><text x="95.8603%" y="815.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="95.6103%" y="789" width="0.0105%" height="15" fill="rgb(244,136,34)" fg:x="9126" fg:w="1"/><text x="95.8603%" y="799.50"></text></g><g><title>wgpu_core::command::allocator::CommandAllocator&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="95.6207%" y="933" width="0.0105%" height="15" fill="rgb(213,226,47)" fg:x="9127" fg:w="1"/><text x="95.8707%" y="943.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::maintain (1 samples, 0.01%)</title><rect x="95.6207%" y="917" width="0.0105%" height="15" fill="rgb(224,136,40)" fg:x="9127" fg:w="1"/><text x="95.8707%" y="927.50"></text></g><g><title>wgpu_core::command::allocator::CommandPool&lt;B&gt;::recycle (1 samples, 0.01%)</title><rect x="95.6207%" y="901" width="0.0105%" height="15" fill="rgb(253,124,12)" fg:x="9127" fg:w="1"/><text x="95.8707%" y="911.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::reset (1 samples, 0.01%)</title><rect x="95.6207%" y="885" width="0.0105%" height="15" fill="rgb(210,67,8)" fg:x="9127" fg:w="1"/><text x="95.8707%" y="895.50"></text></g><g><title>ash::device::DeviceV1_0::reset_command_buffer (1 samples, 0.01%)</title><rect x="95.6207%" y="869" width="0.0105%" height="15" fill="rgb(210,204,0)" fg:x="9127" fg:w="1"/><text x="95.8707%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.6207%" y="853" width="0.0105%" height="15" fill="rgb(217,179,22)" fg:x="9127" fg:w="1"/><text x="95.8707%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="95.6207%" y="837" width="0.0105%" height="15" fill="rgb(237,192,33)" fg:x="9127" fg:w="1"/><text x="95.8707%" y="847.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="95.6312%" y="933" width="0.0105%" height="15" fill="rgb(211,104,28)" fg:x="9128" fg:w="1"/><text x="95.8812%" y="943.50"></text></g><g><title>wgpu_core::device::descriptor::DescriptorAllocator&lt;B&gt;::cleanup (1 samples, 0.01%)</title><rect x="95.6312%" y="917" width="0.0105%" height="15" fill="rgb(214,75,30)" fg:x="9128" fg:w="1"/><text x="95.8812%" y="927.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (1 samples, 0.01%)</title><rect x="95.6312%" y="901" width="0.0105%" height="15" fill="rgb(220,227,12)" fg:x="9128" fg:w="1"/><text x="95.8812%" y="911.50"></text></g><g><title>gpu_descriptor::allocator::DescriptorAllocator&lt;P,S&gt;::cleanup (1 samples, 0.01%)</title><rect x="95.6312%" y="885" width="0.0105%" height="15" fill="rgb(233,134,28)" fg:x="9128" fg:w="1"/><text x="95.8812%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="95.6417%" y="917" width="0.0419%" height="15" fill="rgb(215,146,24)" fg:x="9129" fg:w="4"/><text x="95.8917%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="95.6417%" y="901" width="0.0419%" height="15" fill="rgb(248,227,20)" fg:x="9129" fg:w="4"/><text x="95.8917%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="95.6417%" y="885" width="0.0419%" height="15" fill="rgb(250,44,42)" fg:x="9129" fg:w="4"/><text x="95.8917%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="95.6417%" y="869" width="0.0419%" height="15" fill="rgb(219,5,35)" fg:x="9129" fg:w="4"/><text x="95.8917%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="95.6417%" y="853" width="0.0419%" height="15" fill="rgb(241,132,32)" fg:x="9129" fg:w="4"/><text x="95.8917%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="95.6417%" y="837" width="0.0419%" height="15" fill="rgb(234,212,51)" fg:x="9129" fg:w="4"/><text x="95.8917%" y="847.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (7 samples, 0.07%)</title><rect x="95.6207%" y="949" width="0.0733%" height="15" fill="rgb(242,173,29)" fg:x="9127" fg:w="7"/><text x="95.8707%" y="959.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (5 samples, 0.05%)</title><rect x="95.6417%" y="933" width="0.0524%" height="15" fill="rgb(212,159,2)" fg:x="9129" fg:w="5"/><text x="95.8917%" y="943.50"></text></g><g><title>wgpu_core::device::life::NonReferencedResources&lt;B&gt;::extend (1 samples, 0.01%)</title><rect x="95.6836%" y="917" width="0.0105%" height="15" fill="rgb(238,165,31)" fg:x="9133" fg:w="1"/><text x="95.9336%" y="927.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (1 samples, 0.01%)</title><rect x="95.6836%" y="901" width="0.0105%" height="15" fill="rgb(241,57,36)" fg:x="9133" fg:w="1"/><text x="95.9336%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,alloc::vec::into_iter::IntoIter&lt;T&gt;&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="95.6836%" y="885" width="0.0105%" height="15" fill="rgb(249,7,4)" fg:x="9133" fg:w="1"/><text x="95.9336%" y="895.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (1 samples, 0.01%)</title><rect x="95.6836%" y="869" width="0.0105%" height="15" fill="rgb(250,137,44)" fg:x="9133" fg:w="1"/><text x="95.9336%" y="879.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1 samples, 0.01%)</title><rect x="95.6836%" y="853" width="0.0105%" height="15" fill="rgb(244,185,1)" fg:x="9133" fg:w="1"/><text x="95.9336%" y="863.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="95.6836%" y="837" width="0.0105%" height="15" fill="rgb(216,5,53)" fg:x="9133" fg:w="1"/><text x="95.9336%" y="847.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (336 samples, 3.52%)</title><rect x="92.1844%" y="1237" width="3.5202%" height="15" fill="rgb(234,89,21)" fg:x="8799" fg:w="336"/><text x="92.4344%" y="1247.50">win..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (336 samples, 3.52%)</title><rect x="92.1844%" y="1221" width="3.5202%" height="15" fill="rgb(250,81,43)" fg:x="8799" fg:w="336"/><text x="92.4344%" y="1231.50">win..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (336 samples, 3.52%)</title><rect x="92.1844%" y="1205" width="3.5202%" height="15" fill="rgb(243,132,11)" fg:x="8799" fg:w="336"/><text x="92.4344%" y="1215.50">win..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (336 samples, 3.52%)</title><rect x="92.1844%" y="1189" width="3.5202%" height="15" fill="rgb(253,159,28)" fg:x="8799" fg:w="336"/><text x="92.4344%" y="1199.50">bev..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (336 samples, 3.52%)</title><rect x="92.1844%" y="1173" width="3.5202%" height="15" fill="rgb(237,167,34)" fg:x="8799" fg:w="336"/><text x="92.4344%" y="1183.50">&lt;be..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (336 samples, 3.52%)</title><rect x="92.1844%" y="1157" width="3.5202%" height="15" fill="rgb(237,16,50)" fg:x="8799" fg:w="336"/><text x="92.4344%" y="1167.50">bev..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (336 samples, 3.52%)</title><rect x="92.1844%" y="1141" width="3.5202%" height="15" fill="rgb(247,125,2)" fg:x="8799" fg:w="336"/><text x="92.4344%" y="1151.50">&lt;be..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (336 samples, 3.52%)</title><rect x="92.1844%" y="1125" width="3.5202%" height="15" fill="rgb(254,35,3)" fg:x="8799" fg:w="336"/><text x="92.4344%" y="1135.50">&lt;be..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (336 samples, 3.52%)</title><rect x="92.1844%" y="1109" width="3.5202%" height="15" fill="rgb(237,209,21)" fg:x="8799" fg:w="336"/><text x="92.4344%" y="1119.50">&lt;al..</text></g><g><title>bevy_wgpu::get_wgpu_render_system::{{closure}} (49 samples, 0.51%)</title><rect x="95.1912%" y="1093" width="0.5134%" height="15" fill="rgb(224,122,20)" fg:x="9086" fg:w="49"/><text x="95.4412%" y="1103.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (49 samples, 0.51%)</title><rect x="95.1912%" y="1077" width="0.5134%" height="15" fill="rgb(224,11,46)" fg:x="9086" fg:w="49"/><text x="95.4412%" y="1087.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (33 samples, 0.35%)</title><rect x="95.3588%" y="1061" width="0.3457%" height="15" fill="rgb(248,21,33)" fg:x="9102" fg:w="33"/><text x="95.6088%" y="1071.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (33 samples, 0.35%)</title><rect x="95.3588%" y="1045" width="0.3457%" height="15" fill="rgb(222,144,7)" fg:x="9102" fg:w="33"/><text x="95.6088%" y="1055.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (33 samples, 0.35%)</title><rect x="95.3588%" y="1029" width="0.3457%" height="15" fill="rgb(205,141,37)" fg:x="9102" fg:w="33"/><text x="95.6088%" y="1039.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (33 samples, 0.35%)</title><rect x="95.3588%" y="1013" width="0.3457%" height="15" fill="rgb(237,130,8)" fg:x="9102" fg:w="33"/><text x="95.6088%" y="1023.50"></text></g><g><title>wgpu::Queue::submit (16 samples, 0.17%)</title><rect x="95.5369%" y="997" width="0.1676%" height="15" fill="rgb(209,179,39)" fg:x="9119" fg:w="16"/><text x="95.7869%" y="1007.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (16 samples, 0.17%)</title><rect x="95.5369%" y="981" width="0.1676%" height="15" fill="rgb(207,52,17)" fg:x="9119" fg:w="16"/><text x="95.7869%" y="991.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (16 samples, 0.17%)</title><rect x="95.5369%" y="965" width="0.1676%" height="15" fill="rgb(253,158,17)" fg:x="9119" fg:w="16"/><text x="95.7869%" y="975.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::track_submission (1 samples, 0.01%)</title><rect x="95.6941%" y="949" width="0.0105%" height="15" fill="rgb(208,19,53)" fg:x="9134" fg:w="1"/><text x="95.9441%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="95.6941%" y="933" width="0.0105%" height="15" fill="rgb(233,152,13)" fg:x="9134" fg:w="1"/><text x="95.9441%" y="943.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="95.7046%" y="693" width="0.0105%" height="15" fill="rgb(231,84,1)" fg:x="9135" fg:w="1"/><text x="95.9546%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (9 samples, 0.09%)</title><rect x="95.7150%" y="693" width="0.0943%" height="15" fill="rgb(229,142,48)" fg:x="9136" fg:w="9"/><text x="95.9650%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (9 samples, 0.09%)</title><rect x="95.7150%" y="677" width="0.0943%" height="15" fill="rgb(248,70,29)" fg:x="9136" fg:w="9"/><text x="95.9650%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (9 samples, 0.09%)</title><rect x="95.7150%" y="661" width="0.0943%" height="15" fill="rgb(250,85,7)" fg:x="9136" fg:w="9"/><text x="95.9650%" y="671.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (9 samples, 0.09%)</title><rect x="95.7150%" y="645" width="0.0943%" height="15" fill="rgb(235,140,43)" fg:x="9136" fg:w="9"/><text x="95.9650%" y="655.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (7 samples, 0.07%)</title><rect x="95.7360%" y="629" width="0.0733%" height="15" fill="rgb(216,0,5)" fg:x="9138" fg:w="7"/><text x="95.9860%" y="639.50"></text></g><g><title>alloc::alloc::dealloc (7 samples, 0.07%)</title><rect x="95.7360%" y="613" width="0.0733%" height="15" fill="rgb(223,167,29)" fg:x="9138" fg:w="7"/><text x="95.9860%" y="623.50"></text></g><g><title>__GI___libc_free (5 samples, 0.05%)</title><rect x="95.7569%" y="597" width="0.0524%" height="15" fill="rgb(229,150,33)" fg:x="9140" fg:w="5"/><text x="96.0069%" y="607.50"></text></g><g><title>_int_free (4 samples, 0.04%)</title><rect x="95.7674%" y="581" width="0.0419%" height="15" fill="rgb(227,26,52)" fg:x="9141" fg:w="4"/><text x="96.0174%" y="591.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (2 samples, 0.02%)</title><rect x="95.8093%" y="677" width="0.0210%" height="15" fill="rgb(250,60,52)" fg:x="9145" fg:w="2"/><text x="96.0593%" y="687.50"></text></g><g><title>ahash::operations::folded_multiply (2 samples, 0.02%)</title><rect x="95.8093%" y="661" width="0.0210%" height="15" fill="rgb(228,81,46)" fg:x="9145" fg:w="2"/><text x="96.0593%" y="671.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="95.8198%" y="645" width="0.0105%" height="15" fill="rgb(225,218,31)" fg:x="9146" fg:w="1"/><text x="96.0698%" y="655.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (3 samples, 0.03%)</title><rect x="95.8303%" y="645" width="0.0314%" height="15" fill="rgb(230,35,16)" fg:x="9147" fg:w="3"/><text x="96.0803%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (3 samples, 0.03%)</title><rect x="95.8303%" y="629" width="0.0314%" height="15" fill="rgb(247,100,0)" fg:x="9147" fg:w="3"/><text x="96.0803%" y="639.50"></text></g><g><title>ahash::operations::folded_multiply (1 samples, 0.01%)</title><rect x="95.8512%" y="613" width="0.0105%" height="15" fill="rgb(223,135,11)" fg:x="9149" fg:w="1"/><text x="96.1012%" y="623.50"></text></g><g><title>core::num::&lt;impl u128&gt;::wrapping_mul (1 samples, 0.01%)</title><rect x="95.8512%" y="597" width="0.0105%" height="15" fill="rgb(207,136,0)" fg:x="9149" fg:w="1"/><text x="96.1012%" y="607.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write_u8 (2 samples, 0.02%)</title><rect x="95.8617%" y="645" width="0.0210%" height="15" fill="rgb(246,131,25)" fg:x="9150" fg:w="2"/><text x="96.1117%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::update (2 samples, 0.02%)</title><rect x="95.8617%" y="629" width="0.0210%" height="15" fill="rgb(209,47,12)" fg:x="9150" fg:w="2"/><text x="96.1117%" y="639.50"></text></g><g><title>hashbrown::map::make_insert_hash (11 samples, 0.12%)</title><rect x="95.8093%" y="693" width="0.1152%" height="15" fill="rgb(221,25,16)" fg:x="9145" fg:w="11"/><text x="96.0593%" y="703.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (9 samples, 0.09%)</title><rect x="95.8303%" y="677" width="0.0943%" height="15" fill="rgb(223,164,33)" fg:x="9147" fg:w="9"/><text x="96.0803%" y="687.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (9 samples, 0.09%)</title><rect x="95.8303%" y="661" width="0.0943%" height="15" fill="rgb(220,26,23)" fg:x="9147" fg:w="9"/><text x="96.0803%" y="671.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (4 samples, 0.04%)</title><rect x="95.8827%" y="645" width="0.0419%" height="15" fill="rgb(231,224,1)" fg:x="9152" fg:w="4"/><text x="96.1327%" y="655.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="95.9770%" y="661" width="0.0105%" height="15" fill="rgb(229,221,24)" fg:x="9161" fg:w="1"/><text x="96.2270%" y="671.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="95.9770%" y="645" width="0.0105%" height="15" fill="rgb(213,34,10)" fg:x="9161" fg:w="1"/><text x="96.2270%" y="655.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (9 samples, 0.09%)</title><rect x="95.9874%" y="661" width="0.0943%" height="15" fill="rgb(215,33,11)" fg:x="9162" fg:w="9"/><text x="96.2374%" y="671.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (9 samples, 0.09%)</title><rect x="95.9874%" y="645" width="0.0943%" height="15" fill="rgb(216,20,41)" fg:x="9162" fg:w="9"/><text x="96.2374%" y="655.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (9 samples, 0.09%)</title><rect x="95.9874%" y="629" width="0.0943%" height="15" fill="rgb(228,43,31)" fg:x="9162" fg:w="9"/><text x="96.2374%" y="639.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (9 samples, 0.09%)</title><rect x="95.9874%" y="613" width="0.0943%" height="15" fill="rgb(227,83,26)" fg:x="9162" fg:w="9"/><text x="96.2374%" y="623.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (9 samples, 0.09%)</title><rect x="95.9874%" y="597" width="0.0943%" height="15" fill="rgb(217,168,19)" fg:x="9162" fg:w="9"/><text x="96.2374%" y="607.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (9 samples, 0.09%)</title><rect x="95.9874%" y="581" width="0.0943%" height="15" fill="rgb(231,34,33)" fg:x="9162" fg:w="9"/><text x="96.2374%" y="591.50"></text></g><g><title>__memcmp_avx2_movbe (4 samples, 0.04%)</title><rect x="96.0398%" y="565" width="0.0419%" height="15" fill="rgb(230,120,51)" fg:x="9167" fg:w="4"/><text x="96.2898%" y="575.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::probe_seq (1 samples, 0.01%)</title><rect x="96.0817%" y="613" width="0.0105%" height="15" fill="rgb(215,138,27)" fg:x="9171" fg:w="1"/><text x="96.3317%" y="623.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (2 samples, 0.02%)</title><rect x="96.0922%" y="613" width="0.0210%" height="15" fill="rgb(246,80,47)" fg:x="9172" fg:w="2"/><text x="96.3422%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (2 samples, 0.02%)</title><rect x="96.0922%" y="597" width="0.0210%" height="15" fill="rgb(215,57,53)" fg:x="9172" fg:w="2"/><text x="96.3422%" y="607.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (2 samples, 0.02%)</title><rect x="96.0922%" y="581" width="0.0210%" height="15" fill="rgb(229,137,5)" fg:x="9172" fg:w="2"/><text x="96.3422%" y="591.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (41 samples, 0.43%)</title><rect x="95.7046%" y="1109" width="0.4295%" height="15" fill="rgb(210,86,2)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="1119.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (41 samples, 0.43%)</title><rect x="95.7046%" y="1093" width="0.4295%" height="15" fill="rgb(231,226,51)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="1103.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (41 samples, 0.43%)</title><rect x="95.7046%" y="1077" width="0.4295%" height="15" fill="rgb(216,62,29)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="1087.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (41 samples, 0.43%)</title><rect x="95.7046%" y="1061" width="0.4295%" height="15" fill="rgb(248,202,3)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="1071.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (41 samples, 0.43%)</title><rect x="95.7046%" y="1045" width="0.4295%" height="15" fill="rgb(225,181,7)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="1055.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (41 samples, 0.43%)</title><rect x="95.7046%" y="1029" width="0.4295%" height="15" fill="rgb(247,170,54)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="1039.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (41 samples, 0.43%)</title><rect x="95.7046%" y="1013" width="0.4295%" height="15" fill="rgb(236,204,33)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="1023.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (41 samples, 0.43%)</title><rect x="95.7046%" y="997" width="0.4295%" height="15" fill="rgb(216,45,30)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="1007.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (41 samples, 0.43%)</title><rect x="95.7046%" y="981" width="0.4295%" height="15" fill="rgb(213,203,16)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="991.50"></text></g><g><title>async_executor::Executor::try_tick (41 samples, 0.43%)</title><rect x="95.7046%" y="965" width="0.4295%" height="15" fill="rgb(215,46,16)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (41 samples, 0.43%)</title><rect x="95.7046%" y="949" width="0.4295%" height="15" fill="rgb(217,162,46)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="959.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.43%)</title><rect x="95.7046%" y="933" width="0.4295%" height="15" fill="rgb(224,189,20)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="943.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (41 samples, 0.43%)</title><rect x="95.7046%" y="917" width="0.4295%" height="15" fill="rgb(232,35,51)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="927.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (41 samples, 0.43%)</title><rect x="95.7046%" y="901" width="0.4295%" height="15" fill="rgb(243,221,46)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="911.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (41 samples, 0.43%)</title><rect x="95.7046%" y="885" width="0.4295%" height="15" fill="rgb(248,16,16)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="895.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (41 samples, 0.43%)</title><rect x="95.7046%" y="869" width="0.4295%" height="15" fill="rgb(220,168,13)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="879.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (41 samples, 0.43%)</title><rect x="95.7046%" y="853" width="0.4295%" height="15" fill="rgb(243,102,39)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="863.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (41 samples, 0.43%)</title><rect x="95.7046%" y="837" width="0.4295%" height="15" fill="rgb(245,82,32)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="847.50"></text></g><g><title>core::ops::function::Fn::call (41 samples, 0.43%)</title><rect x="95.7046%" y="821" width="0.4295%" height="15" fill="rgb(230,164,19)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="831.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (41 samples, 0.43%)</title><rect x="95.7046%" y="805" width="0.4295%" height="15" fill="rgb(221,9,41)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="815.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (41 samples, 0.43%)</title><rect x="95.7046%" y="789" width="0.4295%" height="15" fill="rgb(216,93,0)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="799.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (41 samples, 0.43%)</title><rect x="95.7046%" y="773" width="0.4295%" height="15" fill="rgb(235,113,9)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="783.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (41 samples, 0.43%)</title><rect x="95.7046%" y="757" width="0.4295%" height="15" fill="rgb(209,224,10)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="767.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (41 samples, 0.43%)</title><rect x="95.7046%" y="741" width="0.4295%" height="15" fill="rgb(226,54,34)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (41 samples, 0.43%)</title><rect x="95.7046%" y="725" width="0.4295%" height="15" fill="rgb(222,60,8)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (41 samples, 0.43%)</title><rect x="95.7046%" y="709" width="0.4295%" height="15" fill="rgb(248,228,41)" fg:x="9135" fg:w="41"/><text x="95.9546%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (20 samples, 0.21%)</title><rect x="95.9246%" y="693" width="0.2095%" height="15" fill="rgb(226,31,32)" fg:x="9156" fg:w="20"/><text x="96.1746%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (20 samples, 0.21%)</title><rect x="95.9246%" y="677" width="0.2095%" height="15" fill="rgb(242,132,49)" fg:x="9156" fg:w="20"/><text x="96.1746%" y="687.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (5 samples, 0.05%)</title><rect x="96.0817%" y="661" width="0.0524%" height="15" fill="rgb(224,194,19)" fg:x="9171" fg:w="5"/><text x="96.3317%" y="671.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (5 samples, 0.05%)</title><rect x="96.0817%" y="645" width="0.0524%" height="15" fill="rgb(232,200,51)" fg:x="9171" fg:w="5"/><text x="96.3317%" y="655.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (5 samples, 0.05%)</title><rect x="96.0817%" y="629" width="0.0524%" height="15" fill="rgb(235,60,46)" fg:x="9171" fg:w="5"/><text x="96.3317%" y="639.50"></text></g><g><title>hashbrown::raw::sse2::Group::match_byte (2 samples, 0.02%)</title><rect x="96.1131%" y="613" width="0.0210%" height="15" fill="rgb(240,109,52)" fg:x="9174" fg:w="2"/><text x="96.3631%" y="623.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (2 samples, 0.02%)</title><rect x="96.1131%" y="597" width="0.0210%" height="15" fill="rgb(215,78,37)" fg:x="9174" fg:w="2"/><text x="96.3631%" y="607.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (2 samples, 0.02%)</title><rect x="96.1131%" y="581" width="0.0210%" height="15" fill="rgb(225,141,7)" fg:x="9174" fg:w="2"/><text x="96.3631%" y="591.50"></text></g><g><title>core::core_arch::simd::i8x16::new (2 samples, 0.02%)</title><rect x="96.1131%" y="565" width="0.0210%" height="15" fill="rgb(216,102,54)" fg:x="9174" fg:w="2"/><text x="96.3631%" y="575.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (1 samples, 0.01%)</title><rect x="96.1341%" y="1077" width="0.0105%" height="15" fill="rgb(238,143,13)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="1087.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (1 samples, 0.01%)</title><rect x="96.1341%" y="1061" width="0.0105%" height="15" fill="rgb(219,45,51)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="1071.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (1 samples, 0.01%)</title><rect x="96.1341%" y="1045" width="0.0105%" height="15" fill="rgb(242,105,46)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="1055.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (1 samples, 0.01%)</title><rect x="96.1341%" y="1029" width="0.0105%" height="15" fill="rgb(206,154,49)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="1039.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (1 samples, 0.01%)</title><rect x="96.1341%" y="1013" width="0.0105%" height="15" fill="rgb(239,215,4)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="1023.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (1 samples, 0.01%)</title><rect x="96.1341%" y="997" width="0.0105%" height="15" fill="rgb(238,82,17)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="1007.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (1 samples, 0.01%)</title><rect x="96.1341%" y="981" width="0.0105%" height="15" fill="rgb(242,49,30)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="991.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (1 samples, 0.01%)</title><rect x="96.1341%" y="965" width="0.0105%" height="15" fill="rgb(248,5,16)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (1 samples, 0.01%)</title><rect x="96.1341%" y="949" width="0.0105%" height="15" fill="rgb(237,138,32)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="959.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (1 samples, 0.01%)</title><rect x="96.1341%" y="933" width="0.0105%" height="15" fill="rgb(235,79,45)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="943.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (1 samples, 0.01%)</title><rect x="96.1341%" y="917" width="0.0105%" height="15" fill="rgb(213,105,25)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="927.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (1 samples, 0.01%)</title><rect x="96.1341%" y="901" width="0.0105%" height="15" fill="rgb(251,131,7)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="911.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (1 samples, 0.01%)</title><rect x="96.1341%" y="885" width="0.0105%" height="15" fill="rgb(211,155,7)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="895.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (1 samples, 0.01%)</title><rect x="96.1341%" y="869" width="0.0105%" height="15" fill="rgb(243,70,15)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="879.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (1 samples, 0.01%)</title><rect x="96.1341%" y="853" width="0.0105%" height="15" fill="rgb(215,171,2)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="863.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="837" width="0.0105%" height="15" fill="rgb(244,121,35)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="821" width="0.0105%" height="15" fill="rgb(249,147,17)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="805" width="0.0105%" height="15" fill="rgb(241,193,52)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="789" width="0.0105%" height="15" fill="rgb(217,159,39)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="773" width="0.0105%" height="15" fill="rgb(248,110,0)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="757" width="0.0105%" height="15" fill="rgb(233,227,0)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="767.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="741" width="0.0105%" height="15" fill="rgb(252,55,2)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="725" width="0.0105%" height="15" fill="rgb(224,194,24)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="735.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="709" width="0.0105%" height="15" fill="rgb(247,5,33)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="693" width="0.0105%" height="15" fill="rgb(242,66,47)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="677" width="0.0105%" height="15" fill="rgb(213,107,12)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1341%" y="661" width="0.0105%" height="15" fill="rgb(206,131,1)" fg:x="9176" fg:w="1"/><text x="96.3841%" y="671.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1446%" y="757" width="0.0105%" height="15" fill="rgb(214,9,36)" fg:x="9177" fg:w="1"/><text x="96.3946%" y="767.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1446%" y="741" width="0.0105%" height="15" fill="rgb(251,215,18)" fg:x="9177" fg:w="1"/><text x="96.3946%" y="751.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (2 samples, 0.02%)</title><rect x="96.1446%" y="1013" width="0.0210%" height="15" fill="rgb(251,64,9)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="1023.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_swap_chain (2 samples, 0.02%)</title><rect x="96.1446%" y="997" width="0.0210%" height="15" fill="rgb(235,68,21)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="1007.50"></text></g><g><title>wgpu::Device::create_swap_chain (2 samples, 0.02%)</title><rect x="96.1446%" y="981" width="0.0210%" height="15" fill="rgb(240,69,38)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="991.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_swap_chain (2 samples, 0.02%)</title><rect x="96.1446%" y="965" width="0.0210%" height="15" fill="rgb(231,18,27)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="975.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_swap_chain (2 samples, 0.02%)</title><rect x="96.1446%" y="949" width="0.0210%" height="15" fill="rgb(215,154,25)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="959.50"></text></g><g><title>&lt;gfx_backend_vulkan::window::Surface as gfx_hal::window::PresentationSurface&lt;gfx_backend_vulkan::Backend&gt;&gt;::configure_swapchain (2 samples, 0.02%)</title><rect x="96.1446%" y="933" width="0.0210%" height="15" fill="rgb(224,33,46)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="943.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_backend_vulkan::Device&gt;::create_swapchain (2 samples, 0.02%)</title><rect x="96.1446%" y="917" width="0.0210%" height="15" fill="rgb(248,191,53)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="927.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::create_swapchain (2 samples, 0.02%)</title><rect x="96.1446%" y="901" width="0.0210%" height="15" fill="rgb(231,3,37)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="911.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::create_swapchain_khr (2 samples, 0.02%)</title><rect x="96.1446%" y="885" width="0.0210%" height="15" fill="rgb(209,152,2)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="895.50"></text></g><g><title>[libvulkan.so.1.2.187] (2 samples, 0.02%)</title><rect x="96.1446%" y="869" width="0.0210%" height="15" fill="rgb(212,208,43)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="879.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (2 samples, 0.02%)</title><rect x="96.1446%" y="853" width="0.0210%" height="15" fill="rgb(208,60,49)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="96.1446%" y="837" width="0.0210%" height="15" fill="rgb(245,135,6)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="96.1446%" y="821" width="0.0210%" height="15" fill="rgb(243,86,23)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="96.1446%" y="805" width="0.0210%" height="15" fill="rgb(223,7,20)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="96.1446%" y="789" width="0.0210%" height="15" fill="rgb(212,182,17)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="96.1446%" y="773" width="0.0210%" height="15" fill="rgb(237,94,50)" fg:x="9177" fg:w="2"/><text x="96.3946%" y="783.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1551%" y="757" width="0.0105%" height="15" fill="rgb(232,185,44)" fg:x="9178" fg:w="1"/><text x="96.4051%" y="767.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1551%" y="741" width="0.0105%" height="15" fill="rgb(205,50,36)" fg:x="9178" fg:w="1"/><text x="96.4051%" y="751.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1551%" y="725" width="0.0105%" height="15" fill="rgb(252,32,32)" fg:x="9178" fg:w="1"/><text x="96.4051%" y="735.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1551%" y="709" width="0.0105%" height="15" fill="rgb(241,123,33)" fg:x="9178" fg:w="1"/><text x="96.4051%" y="719.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1551%" y="693" width="0.0105%" height="15" fill="rgb(212,140,16)" fg:x="9178" fg:w="1"/><text x="96.4051%" y="703.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1551%" y="677" width="0.0105%" height="15" fill="rgb(247,132,5)" fg:x="9178" fg:w="1"/><text x="96.4051%" y="687.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1551%" y="661" width="0.0105%" height="15" fill="rgb(209,137,38)" fg:x="9178" fg:w="1"/><text x="96.4051%" y="671.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1551%" y="645" width="0.0105%" height="15" fill="rgb(248,32,42)" fg:x="9178" fg:w="1"/><text x="96.4051%" y="655.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.1551%" y="629" width="0.0105%" height="15" fill="rgb(216,188,40)" fg:x="9178" fg:w="1"/><text x="96.4051%" y="639.50"></text></g><g><title>ash::device::DeviceV1_0::begin_command_buffer (5 samples, 0.05%)</title><rect x="96.1655%" y="869" width="0.0524%" height="15" fill="rgb(209,127,53)" fg:x="9179" fg:w="5"/><text x="96.4155%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="96.1655%" y="853" width="0.0524%" height="15" fill="rgb(254,162,9)" fg:x="9179" fg:w="5"/><text x="96.4155%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (4 samples, 0.04%)</title><rect x="96.1760%" y="837" width="0.0419%" height="15" fill="rgb(219,183,10)" fg:x="9180" fg:w="4"/><text x="96.4260%" y="847.50"></text></g><g><title>gfx_hal::command::CommandBuffer::begin_primary (6 samples, 0.06%)</title><rect x="96.1655%" y="901" width="0.0629%" height="15" fill="rgb(217,192,21)" fg:x="9179" fg:w="6"/><text x="96.4155%" y="911.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin (6 samples, 0.06%)</title><rect x="96.1655%" y="885" width="0.0629%" height="15" fill="rgb(251,89,27)" fg:x="9179" fg:w="6"/><text x="96.4155%" y="895.50"></text></g><g><title>ash::vk::definitions::CheckpointDataNVBuilder::stage (1 samples, 0.01%)</title><rect x="96.2179%" y="869" width="0.0105%" height="15" fill="rgb(253,55,28)" fg:x="9184" fg:w="1"/><text x="96.4679%" y="879.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::get_or_create (7 samples, 0.07%)</title><rect x="96.1655%" y="981" width="0.0733%" height="15" fill="rgb(216,159,8)" fg:x="9179" fg:w="7"/><text x="96.4155%" y="991.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_context::LazyCommandEncoder::create (7 samples, 0.07%)</title><rect x="96.1655%" y="965" width="0.0733%" height="15" fill="rgb(231,228,44)" fg:x="9179" fg:w="7"/><text x="96.4155%" y="975.50"></text></g><g><title>wgpu::Device::create_command_encoder (7 samples, 0.07%)</title><rect x="96.1655%" y="949" width="0.0733%" height="15" fill="rgb(247,34,48)" fg:x="9179" fg:w="7"/><text x="96.4155%" y="959.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_command_encoder (7 samples, 0.07%)</title><rect x="96.1655%" y="933" width="0.0733%" height="15" fill="rgb(247,222,18)" fg:x="9179" fg:w="7"/><text x="96.4155%" y="943.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_command_encoder (7 samples, 0.07%)</title><rect x="96.1655%" y="917" width="0.0733%" height="15" fill="rgb(227,49,4)" fg:x="9179" fg:w="7"/><text x="96.4155%" y="927.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register_identity (1 samples, 0.01%)</title><rect x="96.2284%" y="901" width="0.0105%" height="15" fill="rgb(219,189,53)" fg:x="9185" fg:w="1"/><text x="96.4784%" y="911.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::register (1 samples, 0.01%)</title><rect x="96.2284%" y="885" width="0.0105%" height="15" fill="rgb(241,160,53)" fg:x="9185" fg:w="1"/><text x="96.4784%" y="895.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert (1 samples, 0.01%)</title><rect x="96.2284%" y="869" width="0.0105%" height="15" fill="rgb(227,115,4)" fg:x="9185" fg:w="1"/><text x="96.4784%" y="879.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::insert_impl (1 samples, 0.01%)</title><rect x="96.2284%" y="853" width="0.0105%" height="15" fill="rgb(215,28,28)" fg:x="9185" fg:w="1"/><text x="96.4784%" y="863.50"></text></g><g><title>core::mem::replace (1 samples, 0.01%)</title><rect x="96.2284%" y="837" width="0.0105%" height="15" fill="rgb(237,143,40)" fg:x="9185" fg:w="1"/><text x="96.4784%" y="847.50"></text></g><g><title>core::ptr::read (1 samples, 0.01%)</title><rect x="96.2284%" y="821" width="0.0105%" height="15" fill="rgb(205,107,24)" fg:x="9185" fg:w="1"/><text x="96.4784%" y="831.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="96.2284%" y="805" width="0.0105%" height="15" fill="rgb(209,112,35)" fg:x="9185" fg:w="1"/><text x="96.4784%" y="815.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (73 samples, 0.76%)</title><rect x="96.1655%" y="1013" width="0.7648%" height="15" fill="rgb(206,135,5)" fg:x="9179" fg:w="73"/><text x="96.4155%" y="1023.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (73 samples, 0.76%)</title><rect x="96.1655%" y="997" width="0.7648%" height="15" fill="rgb(227,217,38)" fg:x="9179" fg:w="73"/><text x="96.4155%" y="1007.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (66 samples, 0.69%)</title><rect x="96.2389%" y="981" width="0.6915%" height="15" fill="rgb(205,0,41)" fg:x="9186" fg:w="66"/><text x="96.4889%" y="991.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (66 samples, 0.69%)</title><rect x="96.2389%" y="965" width="0.6915%" height="15" fill="rgb(220,20,40)" fg:x="9186" fg:w="66"/><text x="96.4889%" y="975.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (66 samples, 0.69%)</title><rect x="96.2389%" y="949" width="0.6915%" height="15" fill="rgb(216,145,3)" fg:x="9186" fg:w="66"/><text x="96.4889%" y="959.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (66 samples, 0.69%)</title><rect x="96.2389%" y="933" width="0.6915%" height="15" fill="rgb(207,130,51)" fg:x="9186" fg:w="66"/><text x="96.4889%" y="943.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (66 samples, 0.69%)</title><rect x="96.2389%" y="917" width="0.6915%" height="15" fill="rgb(252,93,13)" fg:x="9186" fg:w="66"/><text x="96.4889%" y="927.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (66 samples, 0.69%)</title><rect x="96.2389%" y="901" width="0.6915%" height="15" fill="rgb(210,105,15)" fg:x="9186" fg:w="66"/><text x="96.4889%" y="911.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (66 samples, 0.69%)</title><rect x="96.2389%" y="885" width="0.6915%" height="15" fill="rgb(212,126,31)" fg:x="9186" fg:w="66"/><text x="96.4889%" y="895.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (66 samples, 0.69%)</title><rect x="96.2389%" y="869" width="0.6915%" height="15" fill="rgb(241,167,46)" fg:x="9186" fg:w="66"/><text x="96.4889%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (66 samples, 0.69%)</title><rect x="96.2389%" y="853" width="0.6915%" height="15" fill="rgb(217,143,19)" fg:x="9186" fg:w="66"/><text x="96.4889%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (44 samples, 0.46%)</title><rect x="96.4694%" y="837" width="0.4610%" height="15" fill="rgb(235,117,33)" fg:x="9208" fg:w="44"/><text x="96.7194%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (10 samples, 0.10%)</title><rect x="96.8256%" y="821" width="0.1048%" height="15" fill="rgb(247,95,6)" fg:x="9242" fg:w="10"/><text x="97.0756%" y="831.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.9199%" y="805" width="0.0105%" height="15" fill="rgb(243,206,43)" fg:x="9251" fg:w="1"/><text x="97.1699%" y="815.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="96.9199%" y="789" width="0.0105%" height="15" fill="rgb(229,65,54)" fg:x="9251" fg:w="1"/><text x="97.1699%" y="799.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (2 samples, 0.02%)</title><rect x="97.0141%" y="869" width="0.0210%" height="15" fill="rgb(247,137,34)" fg:x="9260" fg:w="2"/><text x="97.2641%" y="879.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="97.0246%" y="853" width="0.0105%" height="15" fill="rgb(245,174,44)" fg:x="9261" fg:w="1"/><text x="97.2746%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (1 samples, 0.01%)</title><rect x="97.0246%" y="837" width="0.0105%" height="15" fill="rgb(223,64,15)" fg:x="9261" fg:w="1"/><text x="97.2746%" y="847.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (128 samples, 1.34%)</title><rect x="95.7046%" y="1237" width="1.3410%" height="15" fill="rgb(243,153,36)" fg:x="9135" fg:w="128"/><text x="95.9546%" y="1247.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (128 samples, 1.34%)</title><rect x="95.7046%" y="1221" width="1.3410%" height="15" fill="rgb(252,23,4)" fg:x="9135" fg:w="128"/><text x="95.9546%" y="1231.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (128 samples, 1.34%)</title><rect x="95.7046%" y="1205" width="1.3410%" height="15" fill="rgb(209,132,13)" fg:x="9135" fg:w="128"/><text x="95.9546%" y="1215.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (128 samples, 1.34%)</title><rect x="95.7046%" y="1189" width="1.3410%" height="15" fill="rgb(209,196,21)" fg:x="9135" fg:w="128"/><text x="95.9546%" y="1199.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (128 samples, 1.34%)</title><rect x="95.7046%" y="1173" width="1.3410%" height="15" fill="rgb(252,197,1)" fg:x="9135" fg:w="128"/><text x="95.9546%" y="1183.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (128 samples, 1.34%)</title><rect x="95.7046%" y="1157" width="1.3410%" height="15" fill="rgb(229,42,46)" fg:x="9135" fg:w="128"/><text x="95.9546%" y="1167.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (128 samples, 1.34%)</title><rect x="95.7046%" y="1141" width="1.3410%" height="15" fill="rgb(219,85,8)" fg:x="9135" fg:w="128"/><text x="95.9546%" y="1151.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (128 samples, 1.34%)</title><rect x="95.7046%" y="1125" width="1.3410%" height="15" fill="rgb(223,185,14)" fg:x="9135" fg:w="128"/><text x="95.9546%" y="1135.50"></text></g><g><title>bevy_wgpu::get_wgpu_render_system::{{closure}} (87 samples, 0.91%)</title><rect x="96.1341%" y="1109" width="0.9115%" height="15" fill="rgb(217,196,18)" fg:x="9176" fg:w="87"/><text x="96.3841%" y="1119.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (87 samples, 0.91%)</title><rect x="96.1341%" y="1093" width="0.9115%" height="15" fill="rgb(220,122,37)" fg:x="9176" fg:w="87"/><text x="96.3841%" y="1103.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (86 samples, 0.90%)</title><rect x="96.1446%" y="1077" width="0.9010%" height="15" fill="rgb(236,135,33)" fg:x="9177" fg:w="86"/><text x="96.3946%" y="1087.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (86 samples, 0.90%)</title><rect x="96.1446%" y="1061" width="0.9010%" height="15" fill="rgb(222,86,54)" fg:x="9177" fg:w="86"/><text x="96.3946%" y="1071.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (86 samples, 0.90%)</title><rect x="96.1446%" y="1045" width="0.9010%" height="15" fill="rgb(227,42,22)" fg:x="9177" fg:w="86"/><text x="96.3946%" y="1055.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (86 samples, 0.90%)</title><rect x="96.1446%" y="1029" width="0.9010%" height="15" fill="rgb(243,101,27)" fg:x="9177" fg:w="86"/><text x="96.3946%" y="1039.50"></text></g><g><title>wgpu::Queue::submit (11 samples, 0.12%)</title><rect x="96.9303%" y="1013" width="0.1152%" height="15" fill="rgb(229,100,8)" fg:x="9252" fg:w="11"/><text x="97.1803%" y="1023.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (11 samples, 0.12%)</title><rect x="96.9303%" y="997" width="0.1152%" height="15" fill="rgb(252,68,10)" fg:x="9252" fg:w="11"/><text x="97.1803%" y="1007.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (11 samples, 0.12%)</title><rect x="96.9303%" y="981" width="0.1152%" height="15" fill="rgb(219,19,31)" fg:x="9252" fg:w="11"/><text x="97.1803%" y="991.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (11 samples, 0.12%)</title><rect x="96.9303%" y="965" width="0.1152%" height="15" fill="rgb(246,150,44)" fg:x="9252" fg:w="11"/><text x="97.1803%" y="975.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (11 samples, 0.12%)</title><rect x="96.9303%" y="949" width="0.1152%" height="15" fill="rgb(211,14,39)" fg:x="9252" fg:w="11"/><text x="97.1803%" y="959.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (11 samples, 0.12%)</title><rect x="96.9303%" y="933" width="0.1152%" height="15" fill="rgb(221,98,29)" fg:x="9252" fg:w="11"/><text x="97.1803%" y="943.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (11 samples, 0.12%)</title><rect x="96.9303%" y="917" width="0.1152%" height="15" fill="rgb(221,70,26)" fg:x="9252" fg:w="11"/><text x="97.1803%" y="927.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (10 samples, 0.10%)</title><rect x="96.9408%" y="901" width="0.1048%" height="15" fill="rgb(236,146,30)" fg:x="9253" fg:w="10"/><text x="97.1908%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (5 samples, 0.05%)</title><rect x="96.9932%" y="885" width="0.0524%" height="15" fill="rgb(226,94,34)" fg:x="9258" fg:w="5"/><text x="97.2432%" y="895.50"></text></g><g><title>__clock_gettime_2 (1 samples, 0.01%)</title><rect x="97.0351%" y="869" width="0.0105%" height="15" fill="rgb(248,132,21)" fg:x="9262" fg:w="1"/><text x="97.2851%" y="879.50"></text></g><g><title>[unknown] (6,451 samples, 67.59%)</title><rect x="29.4709%" y="1253" width="67.5851%" height="15" fill="rgb(245,43,50)" fg:x="2813" fg:w="6451"/><text x="29.7209%" y="1263.50">[unknown]</text></g><g><title>winit::platform_impl::platform::x11::xdisplay::XConnection::new (1 samples, 0.01%)</title><rect x="97.0456%" y="1237" width="0.0105%" height="15" fill="rgb(245,132,31)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1247.50"></text></g><g><title>x11_dl::xcursor::Xcursor::open (1 samples, 0.01%)</title><rect x="97.0456%" y="1221" width="0.0105%" height="15" fill="rgb(230,171,4)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1231.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open_multi (1 samples, 0.01%)</title><rect x="97.0456%" y="1205" width="0.0105%" height="15" fill="rgb(235,6,45)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1215.50"></text></g><g><title>x11_dl::link::DynamicLibrary::open (1 samples, 0.01%)</title><rect x="97.0456%" y="1189" width="0.0105%" height="15" fill="rgb(220,80,28)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1199.50"></text></g><g><title>dlopen (1 samples, 0.01%)</title><rect x="97.0456%" y="1173" width="0.0105%" height="15" fill="rgb(242,171,9)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1183.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="97.0456%" y="1157" width="0.0105%" height="15" fill="rgb(214,135,29)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1167.50"></text></g><g><title>__GI__dl_catch_error (1 samples, 0.01%)</title><rect x="97.0456%" y="1141" width="0.0105%" height="15" fill="rgb(221,229,16)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1151.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="97.0456%" y="1125" width="0.0105%" height="15" fill="rgb(253,59,46)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1135.50"></text></g><g><title>[libdl-2.33.so] (1 samples, 0.01%)</title><rect x="97.0456%" y="1109" width="0.0105%" height="15" fill="rgb(250,147,20)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1119.50"></text></g><g><title>_dl_open (1 samples, 0.01%)</title><rect x="97.0456%" y="1093" width="0.0105%" height="15" fill="rgb(236,64,48)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1103.50"></text></g><g><title>__GI__dl_catch_exception (1 samples, 0.01%)</title><rect x="97.0456%" y="1077" width="0.0105%" height="15" fill="rgb(240,37,42)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1087.50"></text></g><g><title>dl_open_worker (1 samples, 0.01%)</title><rect x="97.0456%" y="1061" width="0.0105%" height="15" fill="rgb(220,41,50)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1071.50"></text></g><g><title>_dl_relocate_object (1 samples, 0.01%)</title><rect x="97.0456%" y="1045" width="0.0105%" height="15" fill="rgb(216,51,14)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1055.50"></text></g><g><title>_dl_lookup_symbol_x (1 samples, 0.01%)</title><rect x="97.0456%" y="1029" width="0.0105%" height="15" fill="rgb(215,83,10)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1039.50"></text></g><g><title>do_lookup_x (1 samples, 0.01%)</title><rect x="97.0456%" y="1013" width="0.0105%" height="15" fill="rgb(206,144,17)" fg:x="9263" fg:w="1"/><text x="97.2956%" y="1023.50"></text></g><g><title>__GI___ctype_init (1 samples, 0.01%)</title><rect x="97.5380%" y="1221" width="0.0105%" height="15" fill="rgb(219,196,37)" fg:x="9310" fg:w="1"/><text x="97.7880%" y="1231.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 0.06%)</title><rect x="97.5485%" y="1205" width="0.0629%" height="15" fill="rgb(226,135,26)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1215.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (6 samples, 0.06%)</title><rect x="97.5485%" y="1189" width="0.0629%" height="15" fill="rgb(237,195,40)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1199.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (6 samples, 0.06%)</title><rect x="97.5485%" y="1173" width="0.0629%" height="15" fill="rgb(228,182,42)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1183.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (6 samples, 0.06%)</title><rect x="97.5485%" y="1157" width="0.0629%" height="15" fill="rgb(224,135,50)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1167.50"></text></g><g><title>std::panic::catch_unwind (6 samples, 0.06%)</title><rect x="97.5485%" y="1141" width="0.0629%" height="15" fill="rgb(236,215,34)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1151.50"></text></g><g><title>std::panicking::try (6 samples, 0.06%)</title><rect x="97.5485%" y="1125" width="0.0629%" height="15" fill="rgb(244,213,27)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1135.50"></text></g><g><title>std::panicking::try::do_call (6 samples, 0.06%)</title><rect x="97.5485%" y="1109" width="0.0629%" height="15" fill="rgb(233,37,53)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1119.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (6 samples, 0.06%)</title><rect x="97.5485%" y="1093" width="0.0629%" height="15" fill="rgb(222,132,14)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1103.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (6 samples, 0.06%)</title><rect x="97.5485%" y="1077" width="0.0629%" height="15" fill="rgb(219,202,29)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1087.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (6 samples, 0.06%)</title><rect x="97.5485%" y="1061" width="0.0629%" height="15" fill="rgb(226,157,39)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1071.50"></text></g><g><title>gilrs::ff::server::init::{{closure}} (6 samples, 0.06%)</title><rect x="97.5485%" y="1045" width="0.0629%" height="15" fill="rgb(235,213,2)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1055.50"></text></g><g><title>gilrs::ff::server::run (6 samples, 0.06%)</title><rect x="97.5485%" y="1029" width="0.0629%" height="15" fill="rgb(250,121,2)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1039.50"></text></g><g><title>std::thread::sleep (6 samples, 0.06%)</title><rect x="97.5485%" y="1013" width="0.0629%" height="15" fill="rgb(206,192,33)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1023.50"></text></g><g><title>std::sys::unix::thread::Thread::sleep (6 samples, 0.06%)</title><rect x="97.5485%" y="997" width="0.0629%" height="15" fill="rgb(240,161,6)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="1007.50"></text></g><g><title>__GI___nanosleep (6 samples, 0.06%)</title><rect x="97.5485%" y="981" width="0.0629%" height="15" fill="rgb(246,53,30)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="991.50"></text></g><g><title>__clock_nanosleep_2 (6 samples, 0.06%)</title><rect x="97.5485%" y="965" width="0.0629%" height="15" fill="rgb(219,123,43)" fg:x="9311" fg:w="6"/><text x="97.7985%" y="975.50"></text></g><g><title>__GI___clone (54 samples, 0.57%)</title><rect x="97.0561%" y="1253" width="0.5657%" height="15" fill="rgb(236,53,49)" fg:x="9264" fg:w="54"/><text x="97.3061%" y="1263.50"></text></g><g><title>start_thread (8 samples, 0.08%)</title><rect x="97.5380%" y="1237" width="0.0838%" height="15" fill="rgb(241,156,1)" fg:x="9310" fg:w="8"/><text x="97.7880%" y="1247.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (7 samples, 0.07%)</title><rect x="97.5485%" y="1221" width="0.0733%" height="15" fill="rgb(209,73,26)" fg:x="9311" fg:w="7"/><text x="97.7985%" y="1231.50"></text></g><g><title>std::sys::unix::stack_overflow::Handler::new (1 samples, 0.01%)</title><rect x="97.6113%" y="1205" width="0.0105%" height="15" fill="rgb(206,114,3)" fg:x="9317" fg:w="1"/><text x="97.8613%" y="1215.50"></text></g><g><title>std::sys::unix::stack_overflow::imp::make_handler (1 samples, 0.01%)</title><rect x="97.6113%" y="1189" width="0.0105%" height="15" fill="rgb(230,214,9)" fg:x="9317" fg:w="1"/><text x="97.8613%" y="1199.50"></text></g><g><title>__sigaltstack (1 samples, 0.01%)</title><rect x="97.6113%" y="1173" width="0.0105%" height="15" fill="rgb(240,184,46)" fg:x="9317" fg:w="1"/><text x="97.8613%" y="1183.50"></text></g><g><title>&lt;bevy_asset::AssetPlugin as bevy_app::plugin::Plugin&gt;::build (1 samples, 0.01%)</title><rect x="97.6742%" y="965" width="0.0105%" height="15" fill="rgb(242,169,54)" fg:x="9323" fg:w="1"/><text x="97.9242%" y="975.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::register_type (1 samples, 0.01%)</title><rect x="97.6742%" y="949" width="0.0105%" height="15" fill="rgb(207,168,50)" fg:x="9323" fg:w="1"/><text x="97.9242%" y="959.50"></text></g><g><title>bevy_reflect::type_registry::TypeRegistry::register (1 samples, 0.01%)</title><rect x="97.6742%" y="933" width="0.0105%" height="15" fill="rgb(240,114,2)" fg:x="9323" fg:w="1"/><text x="97.9242%" y="943.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as bevy_reflect::type_registry::GetTypeRegistration&gt;::get_type_registration (1 samples, 0.01%)</title><rect x="97.6742%" y="917" width="0.0105%" height="15" fill="rgb(211,17,40)" fg:x="9323" fg:w="1"/><text x="97.9242%" y="927.50"></text></g><g><title>bevy_reflect::type_registry::TypeRegistration::of (1 samples, 0.01%)</title><rect x="97.6742%" y="901" width="0.0105%" height="15" fill="rgb(235,97,36)" fg:x="9323" fg:w="1"/><text x="97.9242%" y="911.50"></text></g><g><title>&lt;std::collections::hash::map::HashMap&lt;K,V,S&gt; as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="97.6742%" y="885" width="0.0105%" height="15" fill="rgb(208,164,11)" fg:x="9323" fg:w="1"/><text x="97.9242%" y="895.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::default::Default&gt;::default (1 samples, 0.01%)</title><rect x="97.6742%" y="869" width="0.0105%" height="15" fill="rgb(242,11,17)" fg:x="9323" fg:w="1"/><text x="97.9242%" y="879.50"></text></g><g><title>ahash::random_state::RandomState::new (1 samples, 0.01%)</title><rect x="97.6742%" y="853" width="0.0105%" height="15" fill="rgb(215,86,33)" fg:x="9323" fg:w="1"/><text x="97.9242%" y="863.50"></text></g><g><title>alsa::pcm::HwParams::any (1 samples, 0.01%)</title><rect x="97.6847%" y="773" width="0.0105%" height="15" fill="rgb(245,185,28)" fg:x="9324" fg:w="1"/><text x="97.9347%" y="783.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::and_then (1 samples, 0.01%)</title><rect x="97.6847%" y="757" width="0.0105%" height="15" fill="rgb(231,89,42)" fg:x="9324" fg:w="1"/><text x="97.9347%" y="767.50"></text></g><g><title>alsa::pcm::HwParams::any::{{closure}} (1 samples, 0.01%)</title><rect x="97.6847%" y="741" width="0.0105%" height="15" fill="rgb(210,18,47)" fg:x="9324" fg:w="1"/><text x="97.9347%" y="751.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.6847%" y="725" width="0.0105%" height="15" fill="rgb(214,84,8)" fg:x="9324" fg:w="1"/><text x="97.9347%" y="735.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.6847%" y="709" width="0.0105%" height="15" fill="rgb(214,222,23)" fg:x="9324" fg:w="1"/><text x="97.9347%" y="719.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.6847%" y="693" width="0.0105%" height="15" fill="rgb(213,104,21)" fg:x="9324" fg:w="1"/><text x="97.9347%" y="703.50"></text></g><g><title>[libasound.so.2.0.0] (2 samples, 0.02%)</title><rect x="97.6951%" y="629" width="0.0210%" height="15" fill="rgb(238,138,6)" fg:x="9325" fg:w="2"/><text x="97.9451%" y="639.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7056%" y="613" width="0.0105%" height="15" fill="rgb(205,167,50)" fg:x="9326" fg:w="1"/><text x="97.9556%" y="623.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7056%" y="597" width="0.0105%" height="15" fill="rgb(230,105,27)" fg:x="9326" fg:w="1"/><text x="97.9556%" y="607.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7056%" y="581" width="0.0105%" height="15" fill="rgb(222,97,48)" fg:x="9326" fg:w="1"/><text x="97.9556%" y="591.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7056%" y="565" width="0.0105%" height="15" fill="rgb(222,197,14)" fg:x="9326" fg:w="1"/><text x="97.9556%" y="575.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7056%" y="549" width="0.0105%" height="15" fill="rgb(210,105,47)" fg:x="9326" fg:w="1"/><text x="97.9556%" y="559.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7056%" y="533" width="0.0105%" height="15" fill="rgb(238,158,19)" fg:x="9326" fg:w="1"/><text x="97.9556%" y="543.50"></text></g><g><title>___snprintf_chk (1 samples, 0.01%)</title><rect x="97.7056%" y="517" width="0.0105%" height="15" fill="rgb(226,176,23)" fg:x="9326" fg:w="1"/><text x="97.9556%" y="527.50"></text></g><g><title>__vsnprintf_internal (1 samples, 0.01%)</title><rect x="97.7056%" y="501" width="0.0105%" height="15" fill="rgb(208,79,31)" fg:x="9326" fg:w="1"/><text x="97.9556%" y="511.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::default_output_config (4 samples, 0.04%)</title><rect x="97.6847%" y="853" width="0.0419%" height="15" fill="rgb(221,154,21)" fg:x="9324" fg:w="4"/><text x="97.9347%" y="863.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::default_output_config (4 samples, 0.04%)</title><rect x="97.6847%" y="837" width="0.0419%" height="15" fill="rgb(213,61,41)" fg:x="9324" fg:w="4"/><text x="97.9347%" y="847.50"></text></g><g><title>cpal::host::alsa::Device::default_output_config (4 samples, 0.04%)</title><rect x="97.6847%" y="821" width="0.0419%" height="15" fill="rgb(215,28,33)" fg:x="9324" fg:w="4"/><text x="97.9347%" y="831.50"></text></g><g><title>cpal::host::alsa::Device::default_config (4 samples, 0.04%)</title><rect x="97.6847%" y="805" width="0.0419%" height="15" fill="rgb(231,139,26)" fg:x="9324" fg:w="4"/><text x="97.9347%" y="815.50"></text></g><g><title>cpal::host::alsa::Device::supported_configs (4 samples, 0.04%)</title><rect x="97.6847%" y="789" width="0.0419%" height="15" fill="rgb(232,159,16)" fg:x="9324" fg:w="4"/><text x="97.9347%" y="799.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::get_mut (3 samples, 0.03%)</title><rect x="97.6951%" y="773" width="0.0314%" height="15" fill="rgb(233,80,10)" fg:x="9325" fg:w="3"/><text x="97.9451%" y="783.50"></text></g><g><title>cpal::host::alsa::DeviceHandles::try_open (3 samples, 0.03%)</title><rect x="97.6951%" y="757" width="0.0314%" height="15" fill="rgb(208,147,29)" fg:x="9325" fg:w="3"/><text x="97.9451%" y="767.50"></text></g><g><title>alsa::pcm::PCM::new (3 samples, 0.03%)</title><rect x="97.6951%" y="741" width="0.0314%" height="15" fill="rgb(213,10,12)" fg:x="9325" fg:w="3"/><text x="97.9451%" y="751.50"></text></g><g><title>alsa::pcm::PCM::open (3 samples, 0.03%)</title><rect x="97.6951%" y="725" width="0.0314%" height="15" fill="rgb(231,218,13)" fg:x="9325" fg:w="3"/><text x="97.9451%" y="735.50"></text></g><g><title>snd_pcm_open (3 samples, 0.03%)</title><rect x="97.6951%" y="709" width="0.0314%" height="15" fill="rgb(244,199,44)" fg:x="9325" fg:w="3"/><text x="97.9451%" y="719.50"></text></g><g><title>snd_config_update_ref (3 samples, 0.03%)</title><rect x="97.6951%" y="693" width="0.0314%" height="15" fill="rgb(240,144,53)" fg:x="9325" fg:w="3"/><text x="97.9451%" y="703.50"></text></g><g><title>snd_config_update_r (3 samples, 0.03%)</title><rect x="97.6951%" y="677" width="0.0314%" height="15" fill="rgb(223,57,28)" fg:x="9325" fg:w="3"/><text x="97.9451%" y="687.50"></text></g><g><title>[libasound.so.2.0.0] (3 samples, 0.03%)</title><rect x="97.6951%" y="661" width="0.0314%" height="15" fill="rgb(213,134,38)" fg:x="9325" fg:w="3"/><text x="97.9451%" y="671.50"></text></g><g><title>[libasound.so.2.0.0] (3 samples, 0.03%)</title><rect x="97.6951%" y="645" width="0.0314%" height="15" fill="rgb(251,182,42)" fg:x="9325" fg:w="3"/><text x="97.9451%" y="655.50"></text></g><g><title>snd_config_hook_load (1 samples, 0.01%)</title><rect x="97.7161%" y="629" width="0.0105%" height="15" fill="rgb(229,93,13)" fg:x="9327" fg:w="1"/><text x="97.9661%" y="639.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7161%" y="613" width="0.0105%" height="15" fill="rgb(234,171,3)" fg:x="9327" fg:w="1"/><text x="97.9661%" y="623.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7161%" y="597" width="0.0105%" height="15" fill="rgb(241,105,32)" fg:x="9327" fg:w="1"/><text x="97.9661%" y="607.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7161%" y="581" width="0.0105%" height="15" fill="rgb(221,66,3)" fg:x="9327" fg:w="1"/><text x="97.9661%" y="591.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7161%" y="565" width="0.0105%" height="15" fill="rgb(248,155,29)" fg:x="9327" fg:w="1"/><text x="97.9661%" y="575.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7161%" y="549" width="0.0105%" height="15" fill="rgb(231,31,5)" fg:x="9327" fg:w="1"/><text x="97.9661%" y="559.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7161%" y="533" width="0.0105%" height="15" fill="rgb(213,188,31)" fg:x="9327" fg:w="1"/><text x="97.9661%" y="543.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7161%" y="517" width="0.0105%" height="15" fill="rgb(212,104,33)" fg:x="9327" fg:w="1"/><text x="97.9661%" y="527.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7161%" y="501" width="0.0105%" height="15" fill="rgb(254,77,51)" fg:x="9327" fg:w="1"/><text x="97.9661%" y="511.50"></text></g><g><title>[libasound.so.2.0.0] (1 samples, 0.01%)</title><rect x="97.7161%" y="485" width="0.0105%" height="15" fill="rgb(234,39,26)" fg:x="9327" fg:w="1"/><text x="97.9661%" y="495.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (6 samples, 0.06%)</title><rect x="97.7266%" y="709" width="0.0629%" height="15" fill="rgb(208,88,36)" fg:x="9328" fg:w="6"/><text x="97.9766%" y="719.50"></text></g><g><title>pa_threaded_mainloop_wait (6 samples, 0.06%)</title><rect x="97.7266%" y="693" width="0.0629%" height="15" fill="rgb(243,222,10)" fg:x="9328" fg:w="6"/><text x="97.9766%" y="703.50"></text></g><g><title>__pthread_cond_wait (6 samples, 0.06%)</title><rect x="97.7266%" y="677" width="0.0629%" height="15" fill="rgb(218,133,52)" fg:x="9328" fg:w="6"/><text x="97.9766%" y="687.50"></text></g><g><title>__futex_abstimed_wait_common64 (6 samples, 0.06%)</title><rect x="97.7266%" y="661" width="0.0629%" height="15" fill="rgb(222,25,26)" fg:x="9328" fg:w="6"/><text x="97.9766%" y="671.50"></text></g><g><title>&lt;bevy_audio::AudioPlugin as bevy_app::plugin::Plugin&gt;::build (11 samples, 0.12%)</title><rect x="97.6847%" y="965" width="0.1152%" height="15" fill="rgb(243,174,24)" fg:x="9324" fg:w="11"/><text x="97.9347%" y="975.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::init_non_send_resource (11 samples, 0.12%)</title><rect x="97.6847%" y="949" width="0.1152%" height="15" fill="rgb(233,188,52)" fg:x="9324" fg:w="11"/><text x="97.9347%" y="959.50"></text></g><g><title>&lt;T as bevy_ecs::world::FromWorld&gt;::from_world (11 samples, 0.12%)</title><rect x="97.6847%" y="933" width="0.1152%" height="15" fill="rgb(208,89,14)" fg:x="9324" fg:w="11"/><text x="97.9347%" y="943.50"></text></g><g><title>&lt;bevy_audio::audio_output::AudioOutput&lt;P&gt; as core::default::Default&gt;::default (11 samples, 0.12%)</title><rect x="97.6847%" y="917" width="0.1152%" height="15" fill="rgb(205,204,21)" fg:x="9324" fg:w="11"/><text x="97.9347%" y="927.50"></text></g><g><title>rodio::stream::OutputStream::try_default (11 samples, 0.12%)</title><rect x="97.6847%" y="901" width="0.1152%" height="15" fill="rgb(246,39,28)" fg:x="9324" fg:w="11"/><text x="97.9347%" y="911.50"></text></g><g><title>rodio::stream::OutputStream::try_from_device (11 samples, 0.12%)</title><rect x="97.6847%" y="885" width="0.1152%" height="15" fill="rgb(235,71,19)" fg:x="9324" fg:w="11"/><text x="97.9347%" y="895.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::try_new_output_stream (11 samples, 0.12%)</title><rect x="97.6847%" y="869" width="0.1152%" height="15" fill="rgb(211,62,39)" fg:x="9324" fg:w="11"/><text x="97.9347%" y="879.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format (7 samples, 0.07%)</title><rect x="97.7266%" y="853" width="0.0733%" height="15" fill="rgb(246,118,20)" fg:x="9328" fg:w="7"/><text x="97.9766%" y="863.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream (7 samples, 0.07%)</title><rect x="97.7266%" y="837" width="0.0733%" height="15" fill="rgb(230,82,12)" fg:x="9328" fg:w="7"/><text x="97.9766%" y="847.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as cpal::traits::DeviceTrait&gt;::build_output_stream_raw (7 samples, 0.07%)</title><rect x="97.7266%" y="821" width="0.0733%" height="15" fill="rgb(205,212,34)" fg:x="9328" fg:w="7"/><text x="97.9766%" y="831.50"></text></g><g><title>&lt;cpal::host::alsa::Device as cpal::traits::DeviceTrait&gt;::build_output_stream_raw (7 samples, 0.07%)</title><rect x="97.7266%" y="805" width="0.0733%" height="15" fill="rgb(239,90,1)" fg:x="9328" fg:w="7"/><text x="97.9766%" y="815.50"></text></g><g><title>cpal::host::alsa::Device::build_stream_inner (7 samples, 0.07%)</title><rect x="97.7266%" y="789" width="0.0733%" height="15" fill="rgb(225,198,50)" fg:x="9328" fg:w="7"/><text x="97.9766%" y="799.50"></text></g><g><title>alsa::pcm::PCM::prepare (7 samples, 0.07%)</title><rect x="97.7266%" y="773" width="0.0733%" height="15" fill="rgb(227,208,48)" fg:x="9328" fg:w="7"/><text x="97.9766%" y="783.50"></text></g><g><title>snd_pcm_prepare (7 samples, 0.07%)</title><rect x="97.7266%" y="757" width="0.0733%" height="15" fill="rgb(238,134,41)" fg:x="9328" fg:w="7"/><text x="97.9766%" y="767.50"></text></g><g><title>[libasound.so.2.0.0] (7 samples, 0.07%)</title><rect x="97.7266%" y="741" width="0.0733%" height="15" fill="rgb(241,58,39)" fg:x="9328" fg:w="7"/><text x="97.9766%" y="751.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (7 samples, 0.07%)</title><rect x="97.7266%" y="725" width="0.0733%" height="15" fill="rgb(214,126,4)" fg:x="9328" fg:w="7"/><text x="97.9766%" y="735.50"></text></g><g><title>pa_stream_new_with_proplist (1 samples, 0.01%)</title><rect x="97.7894%" y="709" width="0.0105%" height="15" fill="rgb(235,149,4)" fg:x="9334" fg:w="1"/><text x="98.0394%" y="719.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.01%)</title><rect x="97.7894%" y="693" width="0.0105%" height="15" fill="rgb(236,59,29)" fg:x="9334" fg:w="1"/><text x="98.0394%" y="703.50"></text></g><g><title>pa_proplist_sets (1 samples, 0.01%)</title><rect x="97.7894%" y="677" width="0.0105%" height="15" fill="rgb(246,11,33)" fg:x="9334" fg:w="1"/><text x="98.0394%" y="687.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.01%)</title><rect x="97.7894%" y="661" width="0.0105%" height="15" fill="rgb(232,180,35)" fg:x="9334" fg:w="1"/><text x="98.0394%" y="671.50"></text></g><g><title>&lt;bevy_core::CorePlugin as bevy_app::plugin::Plugin&gt;::build (1 samples, 0.01%)</title><rect x="97.7999%" y="965" width="0.0105%" height="15" fill="rgb(220,35,37)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="975.50"></text></g><g><title>bevy_core::task_pool_options::DefaultTaskPoolOptions::create_default_pools (1 samples, 0.01%)</title><rect x="97.7999%" y="949" width="0.0105%" height="15" fill="rgb(238,107,48)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPoolBuilder::build (1 samples, 0.01%)</title><rect x="97.7999%" y="933" width="0.0105%" height="15" fill="rgb(205,65,21)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="943.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal (1 samples, 0.01%)</title><rect x="97.7999%" y="917" width="0.0105%" height="15" fill="rgb(246,138,48)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="927.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (1 samples, 0.01%)</title><rect x="97.7999%" y="901" width="0.0105%" height="15" fill="rgb(209,220,47)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="911.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="97.7999%" y="885" width="0.0105%" height="15" fill="rgb(222,162,49)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="895.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="97.7999%" y="869" width="0.0105%" height="15" fill="rgb(243,123,11)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="879.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (1 samples, 0.01%)</title><rect x="97.7999%" y="853" width="0.0105%" height="15" fill="rgb(221,229,41)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="863.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (1 samples, 0.01%)</title><rect x="97.7999%" y="837" width="0.0105%" height="15" fill="rgb(216,68,4)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="847.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (1 samples, 0.01%)</title><rect x="97.7999%" y="821" width="0.0105%" height="15" fill="rgb(207,88,35)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="831.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="97.7999%" y="805" width="0.0105%" height="15" fill="rgb(252,2,5)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="815.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (1 samples, 0.01%)</title><rect x="97.7999%" y="789" width="0.0105%" height="15" fill="rgb(209,173,7)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="799.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (1 samples, 0.01%)</title><rect x="97.7999%" y="773" width="0.0105%" height="15" fill="rgb(210,198,52)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="783.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}} (1 samples, 0.01%)</title><rect x="97.7999%" y="757" width="0.0105%" height="15" fill="rgb(228,152,32)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="767.50"></text></g><g><title>std::thread::Builder::spawn (1 samples, 0.01%)</title><rect x="97.7999%" y="741" width="0.0105%" height="15" fill="rgb(249,98,29)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="751.50"></text></g><g><title>std::thread::Builder::spawn_unchecked (1 samples, 0.01%)</title><rect x="97.7999%" y="725" width="0.0105%" height="15" fill="rgb(205,148,48)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="735.50"></text></g><g><title>std::sys::unix::thread::Thread::new (1 samples, 0.01%)</title><rect x="97.7999%" y="709" width="0.0105%" height="15" fill="rgb(236,69,34)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="719.50"></text></g><g><title>__pthread_create_2_1 (1 samples, 0.01%)</title><rect x="97.7999%" y="693" width="0.0105%" height="15" fill="rgb(220,151,41)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="703.50"></text></g><g><title>__GI__dl_allocate_tls (1 samples, 0.01%)</title><rect x="97.7999%" y="677" width="0.0105%" height="15" fill="rgb(254,106,24)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="687.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="97.7999%" y="661" width="0.0105%" height="15" fill="rgb(210,37,48)" fg:x="9335" fg:w="1"/><text x="98.0499%" y="671.50"></text></g><g><title>&lt;core::str::iter::Lines as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.8104%" y="901" width="0.0105%" height="15" fill="rgb(254,131,5)" fg:x="9336" fg:w="1"/><text x="98.0604%" y="911.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.8104%" y="885" width="0.0105%" height="15" fill="rgb(216,55,41)" fg:x="9336" fg:w="1"/><text x="98.0604%" y="895.50"></text></g><g><title>&lt;core::str::iter::SplitTerminator&lt;P&gt; as core::iter::traits::iterator::Iterator&gt;::next (1 samples, 0.01%)</title><rect x="97.8104%" y="869" width="0.0105%" height="15" fill="rgb(250,35,31)" fg:x="9336" fg:w="1"/><text x="98.0604%" y="879.50"></text></g><g><title>core::str::iter::SplitInternal&lt;P&gt;::next (1 samples, 0.01%)</title><rect x="97.8104%" y="853" width="0.0105%" height="15" fill="rgb(207,124,33)" fg:x="9336" fg:w="1"/><text x="98.0604%" y="863.50"></text></g><g><title>&lt;core::str::pattern::CharSearcher as core::str::pattern::Searcher&gt;::next_match (1 samples, 0.01%)</title><rect x="97.8104%" y="837" width="0.0105%" height="15" fill="rgb(249,175,17)" fg:x="9336" fg:w="1"/><text x="98.0604%" y="847.50"></text></g><g><title>core::slice::memchr::memchr (1 samples, 0.01%)</title><rect x="97.8104%" y="821" width="0.0105%" height="15" fill="rgb(224,175,39)" fg:x="9336" fg:w="1"/><text x="98.0604%" y="831.50"></text></g><g><title>core::slice::memchr::memchr_general_case (1 samples, 0.01%)</title><rect x="97.8104%" y="805" width="0.0105%" height="15" fill="rgb(208,67,49)" fg:x="9336" fg:w="1"/><text x="98.0604%" y="815.50"></text></g><g><title>gilrs::mapping::MappingDb::add_included_mappings (2 samples, 0.02%)</title><rect x="97.8104%" y="933" width="0.0210%" height="15" fill="rgb(222,188,41)" fg:x="9336" fg:w="2"/><text x="98.0604%" y="943.50"></text></g><g><title>gilrs::mapping::MappingDb::insert (2 samples, 0.02%)</title><rect x="97.8104%" y="917" width="0.0210%" height="15" fill="rgb(243,213,30)" fg:x="9336" fg:w="2"/><text x="98.0604%" y="927.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1 samples, 0.01%)</title><rect x="97.8208%" y="901" width="0.0105%" height="15" fill="rgb(253,100,45)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="911.50"></text></g><g><title>gilrs::mapping::MappingDb::insert::{{closure}} (1 samples, 0.01%)</title><rect x="97.8208%" y="885" width="0.0105%" height="15" fill="rgb(226,24,44)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="895.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (1 samples, 0.01%)</title><rect x="97.8208%" y="869" width="0.0105%" height="15" fill="rgb(215,41,24)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="879.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (1 samples, 0.01%)</title><rect x="97.8208%" y="853" width="0.0105%" height="15" fill="rgb(254,53,33)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="863.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="97.8208%" y="837" width="0.0105%" height="15" fill="rgb(242,103,10)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="847.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve (1 samples, 0.01%)</title><rect x="97.8208%" y="821" width="0.0105%" height="15" fill="rgb(246,29,21)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="831.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="97.8208%" y="805" width="0.0105%" height="15" fill="rgb(251,154,1)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="815.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::resize (1 samples, 0.01%)</title><rect x="97.8208%" y="789" width="0.0105%" height="15" fill="rgb(254,212,26)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="799.50"></text></g><g><title>hashbrown::map::make_hasher::{{closure}} (1 samples, 0.01%)</title><rect x="97.8208%" y="773" width="0.0105%" height="15" fill="rgb(251,187,46)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="783.50"></text></g><g><title>hashbrown::map::make_hash (1 samples, 0.01%)</title><rect x="97.8208%" y="757" width="0.0105%" height="15" fill="rgb(224,208,14)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="767.50"></text></g><g><title>&lt;std::collections::hash::map::DefaultHasher as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.8208%" y="741" width="0.0105%" height="15" fill="rgb(222,176,26)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="751.50"></text></g><g><title>&lt;core::hash::sip::SipHasher13 as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.8208%" y="725" width="0.0105%" height="15" fill="rgb(241,219,52)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="735.50"></text></g><g><title>&lt;core::hash::sip::Hasher&lt;S&gt; as core::hash::Hasher&gt;::finish (1 samples, 0.01%)</title><rect x="97.8208%" y="709" width="0.0105%" height="15" fill="rgb(252,198,21)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="719.50"></text></g><g><title>&lt;core::hash::sip::Sip13Rounds as core::hash::sip::Sip&gt;::d_rounds (1 samples, 0.01%)</title><rect x="97.8208%" y="693" width="0.0105%" height="15" fill="rgb(244,196,23)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="703.50"></text></g><g><title>core::num::&lt;impl u64&gt;::rotate_left (1 samples, 0.01%)</title><rect x="97.8208%" y="677" width="0.0105%" height="15" fill="rgb(239,121,44)" fg:x="9337" fg:w="1"/><text x="98.0708%" y="687.50"></text></g><g><title>[libudev.so.1.7.1] (13 samples, 0.14%)</title><rect x="97.9361%" y="757" width="0.1362%" height="15" fill="rgb(249,203,23)" fg:x="9348" fg:w="13"/><text x="98.1861%" y="767.50"></text></g><g><title>[libudev.so.1.7.1] (11 samples, 0.12%)</title><rect x="97.9570%" y="741" width="0.1152%" height="15" fill="rgb(238,219,10)" fg:x="9350" fg:w="11"/><text x="98.2070%" y="751.50"></text></g><g><title>[libudev.so.1.7.1] (8 samples, 0.08%)</title><rect x="97.9885%" y="725" width="0.0838%" height="15" fill="rgb(241,35,46)" fg:x="9353" fg:w="8"/><text x="98.2385%" y="735.50"></text></g><g><title>[libudev.so.1.7.1] (4 samples, 0.04%)</title><rect x="98.0304%" y="709" width="0.0419%" height="15" fill="rgb(218,28,6)" fg:x="9357" fg:w="4"/><text x="98.2804%" y="719.50"></text></g><g><title>__GI___pthread_once (1 samples, 0.01%)</title><rect x="98.0723%" y="757" width="0.0105%" height="15" fill="rgb(233,151,50)" fg:x="9361" fg:w="1"/><text x="98.3223%" y="767.50"></text></g><g><title>__GI__IO_file_fopen (1 samples, 0.01%)</title><rect x="98.0828%" y="741" width="0.0105%" height="15" fill="rgb(208,57,8)" fg:x="9362" fg:w="1"/><text x="98.3328%" y="751.50"></text></g><g><title>__GI__IO_file_open (1 samples, 0.01%)</title><rect x="98.0828%" y="725" width="0.0105%" height="15" fill="rgb(253,99,10)" fg:x="9362" fg:w="1"/><text x="98.3328%" y="735.50"></text></g><g><title>__GI___open64 (1 samples, 0.01%)</title><rect x="98.0828%" y="709" width="0.0105%" height="15" fill="rgb(237,196,49)" fg:x="9362" fg:w="1"/><text x="98.3328%" y="719.50"></text></g><g><title>[libudev.so.1.7.1] (20 samples, 0.21%)</title><rect x="97.8942%" y="773" width="0.2095%" height="15" fill="rgb(209,51,3)" fg:x="9344" fg:w="20"/><text x="98.1442%" y="783.50"></text></g><g><title>__fopen_internal (2 samples, 0.02%)</title><rect x="98.0828%" y="757" width="0.0210%" height="15" fill="rgb(238,129,10)" fg:x="9362" fg:w="2"/><text x="98.3328%" y="767.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="98.0932%" y="741" width="0.0105%" height="15" fill="rgb(246,201,16)" fg:x="9363" fg:w="1"/><text x="98.3432%" y="751.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="98.0932%" y="725" width="0.0105%" height="15" fill="rgb(250,160,20)" fg:x="9363" fg:w="1"/><text x="98.3432%" y="735.50"></text></g><g><title>__GI___libc_realloc (1 samples, 0.01%)</title><rect x="98.1037%" y="773" width="0.0105%" height="15" fill="rgb(251,107,25)" fg:x="9364" fg:w="1"/><text x="98.3537%" y="783.50"></text></g><g><title>__GI___strdup (1 samples, 0.01%)</title><rect x="98.1142%" y="773" width="0.0105%" height="15" fill="rgb(212,103,39)" fg:x="9365" fg:w="1"/><text x="98.3642%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="98.1142%" y="757" width="0.0105%" height="15" fill="rgb(207,9,29)" fg:x="9365" fg:w="1"/><text x="98.3642%" y="767.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="98.1142%" y="741" width="0.0105%" height="15" fill="rgb(227,84,3)" fg:x="9365" fg:w="1"/><text x="98.3642%" y="751.50"></text></g><g><title>__calloc (1 samples, 0.01%)</title><rect x="98.1247%" y="773" width="0.0105%" height="15" fill="rgb(242,194,7)" fg:x="9366" fg:w="1"/><text x="98.3747%" y="783.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="98.1247%" y="757" width="0.0105%" height="15" fill="rgb(230,40,4)" fg:x="9366" fg:w="1"/><text x="98.3747%" y="767.50"></text></g><g><title>__libc_close (1 samples, 0.01%)</title><rect x="98.1351%" y="773" width="0.0105%" height="15" fill="rgb(243,229,33)" fg:x="9367" fg:w="1"/><text x="98.3851%" y="783.50"></text></g><g><title>__pthread_enable_asynccancel (1 samples, 0.01%)</title><rect x="98.1351%" y="757" width="0.0105%" height="15" fill="rgb(240,65,24)" fg:x="9367" fg:w="1"/><text x="98.3851%" y="767.50"></text></g><g><title>__memcmp_avx2_movbe (1 samples, 0.01%)</title><rect x="98.1456%" y="773" width="0.0105%" height="15" fill="rgb(212,28,20)" fg:x="9368" fg:w="1"/><text x="98.3956%" y="783.50"></text></g><g><title>__stpcpy_avx2 (1 samples, 0.01%)</title><rect x="98.1561%" y="773" width="0.0105%" height="15" fill="rgb(209,72,3)" fg:x="9369" fg:w="1"/><text x="98.4061%" y="783.50"></text></g><g><title>__strcspn_sse42 (3 samples, 0.03%)</title><rect x="98.1666%" y="773" width="0.0314%" height="15" fill="rgb(238,170,36)" fg:x="9370" fg:w="3"/><text x="98.4166%" y="783.50"></text></g><g><title>[libudev.so.1.7.1] (35 samples, 0.37%)</title><rect x="97.8523%" y="789" width="0.3667%" height="15" fill="rgb(236,19,38)" fg:x="9340" fg:w="35"/><text x="98.1023%" y="799.50"></text></g><g><title>__strspn_sse42 (2 samples, 0.02%)</title><rect x="98.1980%" y="773" width="0.0210%" height="15" fill="rgb(230,67,43)" fg:x="9373" fg:w="2"/><text x="98.4480%" y="783.50"></text></g><g><title>_IO_new_fclose (1 samples, 0.01%)</title><rect x="98.2190%" y="789" width="0.0105%" height="15" fill="rgb(227,14,36)" fg:x="9375" fg:w="1"/><text x="98.4690%" y="799.50"></text></g><g><title>_IO_new_file_close_it (1 samples, 0.01%)</title><rect x="98.2190%" y="773" width="0.0105%" height="15" fill="rgb(247,171,49)" fg:x="9375" fg:w="1"/><text x="98.4690%" y="783.50"></text></g><g><title>__GI__IO_file_close (1 samples, 0.01%)</title><rect x="98.2190%" y="757" width="0.0105%" height="15" fill="rgb(235,164,51)" fg:x="9375" fg:w="1"/><text x="98.4690%" y="767.50"></text></g><g><title>__GI___libc_free (2 samples, 0.02%)</title><rect x="98.2294%" y="789" width="0.0210%" height="15" fill="rgb(246,107,20)" fg:x="9376" fg:w="2"/><text x="98.4794%" y="799.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="98.2399%" y="773" width="0.0105%" height="15" fill="rgb(226,88,18)" fg:x="9377" fg:w="1"/><text x="98.4899%" y="783.50"></text></g><g><title>__GI___openat (3 samples, 0.03%)</title><rect x="98.2504%" y="789" width="0.0314%" height="15" fill="rgb(235,136,9)" fg:x="9378" fg:w="3"/><text x="98.5004%" y="799.50"></text></g><g><title>__libc_disable_asynccancel (1 samples, 0.01%)</title><rect x="98.2713%" y="773" width="0.0105%" height="15" fill="rgb(209,3,34)" fg:x="9380" fg:w="1"/><text x="98.5213%" y="783.50"></text></g><g><title>[libc-2.33.so] (2 samples, 0.02%)</title><rect x="98.2818%" y="773" width="0.0210%" height="15" fill="rgb(213,38,19)" fg:x="9381" fg:w="2"/><text x="98.5318%" y="783.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="98.3028%" y="773" width="0.0105%" height="15" fill="rgb(254,24,24)" fg:x="9383" fg:w="1"/><text x="98.5528%" y="783.50"></text></g><g><title>[libudev.so.1.7.1] (45 samples, 0.47%)</title><rect x="97.8523%" y="805" width="0.4715%" height="15" fill="rgb(219,122,42)" fg:x="9340" fg:w="45"/><text x="98.1023%" y="815.50"></text></g><g><title>__GI___strndup (4 samples, 0.04%)</title><rect x="98.2818%" y="789" width="0.0419%" height="15" fill="rgb(205,128,31)" fg:x="9381" fg:w="4"/><text x="98.5318%" y="799.50"></text></g><g><title>__strnlen_avx2 (1 samples, 0.01%)</title><rect x="98.3133%" y="773" width="0.0105%" height="15" fill="rgb(212,142,0)" fg:x="9384" fg:w="1"/><text x="98.5633%" y="783.50"></text></g><g><title>_IO_ferror (1 samples, 0.01%)</title><rect x="98.3237%" y="805" width="0.0105%" height="15" fill="rgb(211,25,35)" fg:x="9385" fg:w="1"/><text x="98.5737%" y="815.50"></text></g><g><title>__GI__IO_fread (1 samples, 0.01%)</title><rect x="98.3342%" y="805" width="0.0105%" height="15" fill="rgb(220,150,53)" fg:x="9386" fg:w="1"/><text x="98.5842%" y="815.50"></text></g><g><title>_IO_file_xsgetn (1 samples, 0.01%)</title><rect x="98.3342%" y="789" width="0.0105%" height="15" fill="rgb(220,30,24)" fg:x="9386" fg:w="1"/><text x="98.5842%" y="799.50"></text></g><g><title>__GI___underflow (1 samples, 0.01%)</title><rect x="98.3342%" y="773" width="0.0105%" height="15" fill="rgb(218,86,23)" fg:x="9386" fg:w="1"/><text x="98.5842%" y="783.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="98.3447%" y="805" width="0.0105%" height="15" fill="rgb(206,62,27)" fg:x="9387" fg:w="1"/><text x="98.5947%" y="815.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="98.3447%" y="789" width="0.0105%" height="15" fill="rgb(249,174,0)" fg:x="9387" fg:w="1"/><text x="98.5947%" y="799.50"></text></g><g><title>[libc-2.33.so] (1 samples, 0.01%)</title><rect x="98.3552%" y="789" width="0.0105%" height="15" fill="rgb(246,67,27)" fg:x="9388" fg:w="1"/><text x="98.6052%" y="799.50"></text></g><g><title>_IO_new_file_init_internal (1 samples, 0.01%)</title><rect x="98.3656%" y="789" width="0.0105%" height="15" fill="rgb(250,195,30)" fg:x="9389" fg:w="1"/><text x="98.6156%" y="799.50"></text></g><g><title>__GI__IO_link_in (1 samples, 0.01%)</title><rect x="98.3656%" y="773" width="0.0105%" height="15" fill="rgb(251,171,50)" fg:x="9389" fg:w="1"/><text x="98.6156%" y="783.50"></text></g><g><title>__GI__IO_file_fopen (1 samples, 0.01%)</title><rect x="98.3761%" y="789" width="0.0105%" height="15" fill="rgb(236,196,10)" fg:x="9390" fg:w="1"/><text x="98.6261%" y="799.50"></text></g><g><title>__GI__IO_file_open (1 samples, 0.01%)</title><rect x="98.3761%" y="773" width="0.0105%" height="15" fill="rgb(249,228,52)" fg:x="9390" fg:w="1"/><text x="98.6261%" y="783.50"></text></g><g><title>__GI___open64 (1 samples, 0.01%)</title><rect x="98.3761%" y="757" width="0.0105%" height="15" fill="rgb(219,60,51)" fg:x="9390" fg:w="1"/><text x="98.6261%" y="767.50"></text></g><g><title>__libc_enable_asynccancel (1 samples, 0.01%)</title><rect x="98.3761%" y="741" width="0.0105%" height="15" fill="rgb(240,198,24)" fg:x="9390" fg:w="1"/><text x="98.6261%" y="751.50"></text></g><g><title>__fopen_internal (4 samples, 0.04%)</title><rect x="98.3552%" y="805" width="0.0419%" height="15" fill="rgb(240,192,40)" fg:x="9388" fg:w="4"/><text x="98.6052%" y="815.50"></text></g><g><title>__GI__IO_un_link.part.0 (1 samples, 0.01%)</title><rect x="98.3866%" y="789" width="0.0105%" height="15" fill="rgb(219,118,5)" fg:x="9391" fg:w="1"/><text x="98.6366%" y="799.50"></text></g><g><title>__strchr_avx2 (1 samples, 0.01%)</title><rect x="98.3971%" y="805" width="0.0105%" height="15" fill="rgb(205,202,34)" fg:x="9392" fg:w="1"/><text x="98.6471%" y="815.50"></text></g><g><title>[libudev.so.1.7.1] (54 samples, 0.57%)</title><rect x="97.8523%" y="821" width="0.5657%" height="15" fill="rgb(234,153,26)" fg:x="9340" fg:w="54"/><text x="98.1023%" y="831.50"></text></g><g><title>__strlen_avx2 (1 samples, 0.01%)</title><rect x="98.4075%" y="805" width="0.0105%" height="15" fill="rgb(229,26,29)" fg:x="9393" fg:w="1"/><text x="98.6575%" y="815.50"></text></g><g><title>__GI___libc_free (1 samples, 0.01%)</title><rect x="98.4180%" y="821" width="0.0105%" height="15" fill="rgb(237,115,21)" fg:x="9394" fg:w="1"/><text x="98.6680%" y="831.50"></text></g><g><title>_int_free (1 samples, 0.01%)</title><rect x="98.4180%" y="805" width="0.0105%" height="15" fill="rgb(252,144,15)" fg:x="9394" fg:w="1"/><text x="98.6680%" y="815.50"></text></g><g><title>__GI_fnmatch (1 samples, 0.01%)</title><rect x="98.4285%" y="821" width="0.0105%" height="15" fill="rgb(232,26,13)" fg:x="9395" fg:w="1"/><text x="98.6785%" y="831.50"></text></g><g><title>[libudev.so.1.7.1] (59 samples, 0.62%)</title><rect x="97.8313%" y="837" width="0.6181%" height="15" fill="rgb(206,44,19)" fg:x="9338" fg:w="59"/><text x="98.0813%" y="847.50"></text></g><g><title>__strchr_avx2 (1 samples, 0.01%)</title><rect x="98.4390%" y="821" width="0.0105%" height="15" fill="rgb(249,159,2)" fg:x="9396" fg:w="1"/><text x="98.6890%" y="831.50"></text></g><g><title>&lt;bevy_gilrs::GilrsPlugin as bevy_app::plugin::Plugin&gt;::build (62 samples, 0.65%)</title><rect x="97.8104%" y="965" width="0.6496%" height="15" fill="rgb(231,5,32)" fg:x="9336" fg:w="62"/><text x="98.0604%" y="975.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (62 samples, 0.65%)</title><rect x="97.8104%" y="949" width="0.6496%" height="15" fill="rgb(249,210,18)" fg:x="9336" fg:w="62"/><text x="98.0604%" y="959.50"></text></g><g><title>gilrs_core::Gilrs::new (60 samples, 0.63%)</title><rect x="97.8313%" y="933" width="0.6286%" height="15" fill="rgb(215,223,36)" fg:x="9338" fg:w="60"/><text x="98.0813%" y="943.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (60 samples, 0.63%)</title><rect x="97.8313%" y="917" width="0.6286%" height="15" fill="rgb(245,185,20)" fg:x="9338" fg:w="60"/><text x="98.0813%" y="927.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (60 samples, 0.63%)</title><rect x="97.8313%" y="901" width="0.6286%" height="15" fill="rgb(206,224,11)" fg:x="9338" fg:w="60"/><text x="98.0813%" y="911.50"></text></g><g><title>udev_enumerate_scan_devices (60 samples, 0.63%)</title><rect x="97.8313%" y="885" width="0.6286%" height="15" fill="rgb(248,73,42)" fg:x="9338" fg:w="60"/><text x="98.0813%" y="895.50"></text></g><g><title>[libudev.so.1.7.1] (60 samples, 0.63%)</title><rect x="97.8313%" y="869" width="0.6286%" height="15" fill="rgb(219,149,31)" fg:x="9338" fg:w="60"/><text x="98.0813%" y="879.50"></text></g><g><title>[libudev.so.1.7.1] (60 samples, 0.63%)</title><rect x="97.8313%" y="853" width="0.6286%" height="15" fill="rgb(243,104,17)" fg:x="9338" fg:w="60"/><text x="98.0813%" y="863.50"></text></g><g><title>opendir_tail (1 samples, 0.01%)</title><rect x="98.4494%" y="837" width="0.0105%" height="15" fill="rgb(244,117,33)" fg:x="9397" fg:w="1"/><text x="98.6994%" y="847.50"></text></g><g><title>__alloc_dir (1 samples, 0.01%)</title><rect x="98.4494%" y="821" width="0.0105%" height="15" fill="rgb(251,25,47)" fg:x="9397" fg:w="1"/><text x="98.6994%" y="831.50"></text></g><g><title>__GI___libc_malloc (1 samples, 0.01%)</title><rect x="98.4494%" y="805" width="0.0105%" height="15" fill="rgb(249,70,13)" fg:x="9397" fg:w="1"/><text x="98.6994%" y="815.50"></text></g><g><title>_int_malloc (1 samples, 0.01%)</title><rect x="98.4494%" y="789" width="0.0105%" height="15" fill="rgb(217,133,18)" fg:x="9397" fg:w="1"/><text x="98.6994%" y="799.50"></text></g><g><title>malloc_consolidate (1 samples, 0.01%)</title><rect x="98.4494%" y="773" width="0.0105%" height="15" fill="rgb(248,97,28)" fg:x="9397" fg:w="1"/><text x="98.6994%" y="783.50"></text></g><g><title>std::panic::catch_unwind (76 samples, 0.80%)</title><rect x="97.6742%" y="1125" width="0.7962%" height="15" fill="rgb(237,193,4)" fg:x="9323" fg:w="76"/><text x="97.9242%" y="1135.50"></text></g><g><title>std::panicking::try (76 samples, 0.80%)</title><rect x="97.6742%" y="1109" width="0.7962%" height="15" fill="rgb(247,198,45)" fg:x="9323" fg:w="76"/><text x="97.9242%" y="1119.50"></text></g><g><title>std::panicking::try::do_call (76 samples, 0.80%)</title><rect x="97.6742%" y="1093" width="0.7962%" height="15" fill="rgb(245,2,20)" fg:x="9323" fg:w="76"/><text x="97.9242%" y="1103.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (76 samples, 0.80%)</title><rect x="97.6742%" y="1077" width="0.7962%" height="15" fill="rgb(210,71,36)" fg:x="9323" fg:w="76"/><text x="97.9242%" y="1087.50"></text></g><g><title>std::rt::lang_start::{{closure}} (76 samples, 0.80%)</title><rect x="97.6742%" y="1061" width="0.7962%" height="15" fill="rgb(238,114,30)" fg:x="9323" fg:w="76"/><text x="97.9242%" y="1071.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (76 samples, 0.80%)</title><rect x="97.6742%" y="1045" width="0.7962%" height="15" fill="rgb(241,200,2)" fg:x="9323" fg:w="76"/><text x="97.9242%" y="1055.50"></text></g><g><title>core::ops::function::FnOnce::call_once (76 samples, 0.80%)</title><rect x="97.6742%" y="1029" width="0.7962%" height="15" fill="rgb(232,106,18)" fg:x="9323" fg:w="76"/><text x="97.9242%" y="1039.50"></text></g><g><title>game::main (76 samples, 0.80%)</title><rect x="97.6742%" y="1013" width="0.7962%" height="15" fill="rgb(211,141,18)" fg:x="9323" fg:w="76"/><text x="97.9242%" y="1023.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_plugins (76 samples, 0.80%)</title><rect x="97.6742%" y="997" width="0.7962%" height="15" fill="rgb(224,9,9)" fg:x="9323" fg:w="76"/><text x="97.9242%" y="1007.50"></text></g><g><title>bevy_app::plugin_group::PluginGroupBuilder::finish (76 samples, 0.80%)</title><rect x="97.6742%" y="981" width="0.7962%" height="15" fill="rgb(249,137,46)" fg:x="9323" fg:w="76"/><text x="97.9242%" y="991.50"></text></g><g><title>&lt;bevy_ui::UiPlugin as bevy_app::plugin::Plugin&gt;::build (1 samples, 0.01%)</title><rect x="98.4599%" y="965" width="0.0105%" height="15" fill="rgb(236,44,45)" fg:x="9398" fg:w="1"/><text x="98.7099%" y="975.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_system_to_stage (1 samples, 0.01%)</title><rect x="98.4599%" y="949" width="0.0105%" height="15" fill="rgb(205,68,40)" fg:x="9398" fg:w="1"/><text x="98.7099%" y="959.50"></text></g><g><title>__memmove_avx_unaligned_erms (1 samples, 0.01%)</title><rect x="98.4599%" y="933" width="0.0105%" height="15" fill="rgb(214,198,49)" fg:x="9398" fg:w="1"/><text x="98.7099%" y="943.50"></text></g><g><title>__libc_start_main (77 samples, 0.81%)</title><rect x="97.6742%" y="1237" width="0.8067%" height="15" fill="rgb(226,140,45)" fg:x="9323" fg:w="77"/><text x="97.9242%" y="1247.50"></text></g><g><title>main (77 samples, 0.81%)</title><rect x="97.6742%" y="1221" width="0.8067%" height="15" fill="rgb(209,109,20)" fg:x="9323" fg:w="77"/><text x="97.9242%" y="1231.50"></text></g><g><title>std::rt::lang_start_internal (77 samples, 0.81%)</title><rect x="97.6742%" y="1205" width="0.8067%" height="15" fill="rgb(217,33,46)" fg:x="9323" fg:w="77"/><text x="97.9242%" y="1215.50"></text></g><g><title>std::panic::catch_unwind (77 samples, 0.81%)</title><rect x="97.6742%" y="1189" width="0.8067%" height="15" fill="rgb(232,150,33)" fg:x="9323" fg:w="77"/><text x="97.9242%" y="1199.50"></text></g><g><title>std::panicking::try (77 samples, 0.81%)</title><rect x="97.6742%" y="1173" width="0.8067%" height="15" fill="rgb(233,76,25)" fg:x="9323" fg:w="77"/><text x="97.9242%" y="1183.50"></text></g><g><title>std::panicking::try::do_call (77 samples, 0.81%)</title><rect x="97.6742%" y="1157" width="0.8067%" height="15" fill="rgb(254,219,23)" fg:x="9323" fg:w="77"/><text x="97.9242%" y="1167.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (77 samples, 0.81%)</title><rect x="97.6742%" y="1141" width="0.8067%" height="15" fill="rgb(233,108,4)" fg:x="9323" fg:w="77"/><text x="97.9242%" y="1151.50"></text></g><g><title>std::sys_common::rt::init (1 samples, 0.01%)</title><rect x="98.4704%" y="1125" width="0.0105%" height="15" fill="rgb(229,98,6)" fg:x="9399" fg:w="1"/><text x="98.7204%" y="1135.50"></text></g><g><title>std::sys::unix::thread::guard::init (1 samples, 0.01%)</title><rect x="98.4704%" y="1109" width="0.0105%" height="15" fill="rgb(217,40,27)" fg:x="9399" fg:w="1"/><text x="98.7204%" y="1119.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start_aligned (1 samples, 0.01%)</title><rect x="98.4704%" y="1093" width="0.0105%" height="15" fill="rgb(221,35,43)" fg:x="9399" fg:w="1"/><text x="98.7204%" y="1103.50"></text></g><g><title>std::sys::unix::thread::guard::get_stack_start (1 samples, 0.01%)</title><rect x="98.4704%" y="1077" width="0.0105%" height="15" fill="rgb(212,107,11)" fg:x="9399" fg:w="1"/><text x="98.7204%" y="1087.50"></text></g><g><title>__pthread_getattr_np (1 samples, 0.01%)</title><rect x="98.4704%" y="1061" width="0.0105%" height="15" fill="rgb(245,42,44)" fg:x="9399" fg:w="1"/><text x="98.7204%" y="1071.50"></text></g><g><title>__GI___tunables_init (1 samples, 0.01%)</title><rect x="98.4809%" y="1205" width="0.0105%" height="15" fill="rgb(209,31,12)" fg:x="9400" fg:w="1"/><text x="98.7309%" y="1215.50"></text></g><g><title>_dl_map_object_from_fd (3 samples, 0.03%)</title><rect x="98.4914%" y="1125" width="0.0314%" height="15" fill="rgb(210,228,54)" fg:x="9401" fg:w="3"/><text x="98.7414%" y="1135.50"></text></g><g><title>_dl_new_object (1 samples, 0.01%)</title><rect x="98.5123%" y="1109" width="0.0105%" height="15" fill="rgb(241,19,33)" fg:x="9403" fg:w="1"/><text x="98.7623%" y="1119.50"></text></g><g><title>rtld_calloc (1 samples, 0.01%)</title><rect x="98.5123%" y="1093" width="0.0105%" height="15" fill="rgb(229,51,27)" fg:x="9403" fg:w="1"/><text x="98.7623%" y="1103.50"></text></g><g><title>__GI___open_nocancel (6 samples, 0.06%)</title><rect x="98.5228%" y="1093" width="0.0629%" height="15" fill="rgb(214,167,49)" fg:x="9404" fg:w="6"/><text x="98.7728%" y="1103.50"></text></g><g><title>_dl_catch_exception (14 samples, 0.15%)</title><rect x="98.4914%" y="1173" width="0.1467%" height="15" fill="rgb(248,140,47)" fg:x="9401" fg:w="14"/><text x="98.7414%" y="1183.50"></text></g><g><title>openaux (14 samples, 0.15%)</title><rect x="98.4914%" y="1157" width="0.1467%" height="15" fill="rgb(228,6,51)" fg:x="9401" fg:w="14"/><text x="98.7414%" y="1167.50"></text></g><g><title>_dl_map_object (14 samples, 0.15%)</title><rect x="98.4914%" y="1141" width="0.1467%" height="15" fill="rgb(242,44,53)" fg:x="9401" fg:w="14"/><text x="98.7414%" y="1151.50"></text></g><g><title>open_path (11 samples, 0.12%)</title><rect x="98.5228%" y="1125" width="0.1152%" height="15" fill="rgb(249,90,50)" fg:x="9404" fg:w="11"/><text x="98.7728%" y="1135.50"></text></g><g><title>open_verify.constprop.0 (11 samples, 0.12%)</title><rect x="98.5228%" y="1109" width="0.1152%" height="15" fill="rgb(222,84,19)" fg:x="9404" fg:w="11"/><text x="98.7728%" y="1119.50"></text></g><g><title>__read_nocancel (5 samples, 0.05%)</title><rect x="98.5856%" y="1093" width="0.0524%" height="15" fill="rgb(214,140,12)" fg:x="9410" fg:w="5"/><text x="98.8356%" y="1103.50"></text></g><g><title>_dl_map_object_deps (15 samples, 0.16%)</title><rect x="98.4914%" y="1189" width="0.1572%" height="15" fill="rgb(210,20,43)" fg:x="9401" fg:w="15"/><text x="98.7414%" y="1199.50"></text></g><g><title>_dl_dst_count (1 samples, 0.01%)</title><rect x="98.6380%" y="1173" width="0.0105%" height="15" fill="rgb(243,1,40)" fg:x="9415" fg:w="1"/><text x="98.8880%" y="1183.50"></text></g><g><title>index (1 samples, 0.01%)</title><rect x="98.6380%" y="1157" width="0.0105%" height="15" fill="rgb(224,102,26)" fg:x="9415" fg:w="1"/><text x="98.8880%" y="1167.50"></text></g><g><title>_dl_lookup_symbol_x (22 samples, 0.23%)</title><rect x="98.6695%" y="1173" width="0.2305%" height="15" fill="rgb(221,179,1)" fg:x="9418" fg:w="22"/><text x="98.9195%" y="1183.50"></text></g><g><title>do_lookup_x (17 samples, 0.18%)</title><rect x="98.7218%" y="1157" width="0.1781%" height="15" fill="rgb(216,209,47)" fg:x="9423" fg:w="17"/><text x="98.9718%" y="1167.50"></text></g><g><title>check_match (2 samples, 0.02%)</title><rect x="98.8790%" y="1141" width="0.0210%" height="15" fill="rgb(251,135,9)" fg:x="9438" fg:w="2"/><text x="99.1290%" y="1151.50"></text></g><g><title>strcmp (1 samples, 0.01%)</title><rect x="98.8895%" y="1125" width="0.0105%" height="15" fill="rgb(242,9,36)" fg:x="9439" fg:w="1"/><text x="99.1395%" y="1135.50"></text></g><g><title>_start (123 samples, 1.29%)</title><rect x="97.6218%" y="1253" width="1.2886%" height="15" fill="rgb(249,60,37)" fg:x="9318" fg:w="123"/><text x="97.8718%" y="1263.50"></text></g><g><title>_dl_start (41 samples, 0.43%)</title><rect x="98.4809%" y="1237" width="0.4295%" height="15" fill="rgb(230,66,45)" fg:x="9400" fg:w="41"/><text x="98.7309%" y="1247.50"></text></g><g><title>_dl_sysdep_start (41 samples, 0.43%)</title><rect x="98.4809%" y="1221" width="0.4295%" height="15" fill="rgb(216,1,47)" fg:x="9400" fg:w="41"/><text x="98.7309%" y="1231.50"></text></g><g><title>dl_main (40 samples, 0.42%)</title><rect x="98.4914%" y="1205" width="0.4191%" height="15" fill="rgb(235,8,23)" fg:x="9401" fg:w="40"/><text x="98.7414%" y="1215.50"></text></g><g><title>_dl_relocate_object (25 samples, 0.26%)</title><rect x="98.6485%" y="1189" width="0.2619%" height="15" fill="rgb(225,136,11)" fg:x="9416" fg:w="25"/><text x="98.8985%" y="1199.50"></text></g><g><title>strncpy_ifunc (1 samples, 0.01%)</title><rect x="98.8999%" y="1173" width="0.0105%" height="15" fill="rgb(228,63,44)" fg:x="9440" fg:w="1"/><text x="99.1499%" y="1183.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="98.9104%" y="1253" width="0.0105%" height="15" fill="rgb(240,43,52)" fg:x="9441" fg:w="1"/><text x="99.1604%" y="1263.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1 samples, 0.01%)</title><rect x="98.9104%" y="1237" width="0.0105%" height="15" fill="rgb(217,167,36)" fg:x="9441" fg:w="1"/><text x="99.1604%" y="1247.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (1 samples, 0.01%)</title><rect x="98.9104%" y="1221" width="0.0105%" height="15" fill="rgb(250,19,6)" fg:x="9441" fg:w="1"/><text x="99.1604%" y="1231.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (1 samples, 0.01%)</title><rect x="98.9104%" y="1205" width="0.0105%" height="15" fill="rgb(236,60,51)" fg:x="9441" fg:w="1"/><text x="99.1604%" y="1215.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (1 samples, 0.01%)</title><rect x="98.9209%" y="1237" width="0.0105%" height="15" fill="rgb(222,217,20)" fg:x="9442" fg:w="1"/><text x="99.1709%" y="1247.50"></text></g><g><title>anon.106f444b236ec834e19cecd150383aab.1.llvm.6717802543240005628 (3 samples, 0.03%)</title><rect x="98.9209%" y="1253" width="0.0314%" height="15" fill="rgb(242,65,52)" fg:x="9442" fg:w="3"/><text x="99.1709%" y="1263.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (2 samples, 0.02%)</title><rect x="98.9314%" y="1237" width="0.0210%" height="15" fill="rgb(217,5,41)" fg:x="9443" fg:w="2"/><text x="99.1814%" y="1247.50"></text></g><g><title>anon.ee815eff94f618b02e43ccc313c1e645.81.llvm.14979426095405356621 (2 samples, 0.02%)</title><rect x="98.9523%" y="1253" width="0.0210%" height="15" fill="rgb(223,208,53)" fg:x="9445" fg:w="2"/><text x="99.2023%" y="1263.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::apply_buffers (2 samples, 0.02%)</title><rect x="98.9523%" y="1237" width="0.0210%" height="15" fill="rgb(221,104,30)" fg:x="9445" fg:w="2"/><text x="99.2023%" y="1247.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (12 samples, 0.13%)</title><rect x="98.9733%" y="1253" width="0.1257%" height="15" fill="rgb(230,210,42)" fg:x="9447" fg:w="12"/><text x="99.2233%" y="1263.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (12 samples, 0.13%)</title><rect x="98.9733%" y="1237" width="0.1257%" height="15" fill="rgb(206,205,27)" fg:x="9447" fg:w="12"/><text x="99.2233%" y="1247.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (12 samples, 0.13%)</title><rect x="98.9733%" y="1221" width="0.1257%" height="15" fill="rgb(233,114,38)" fg:x="9447" fg:w="12"/><text x="99.2233%" y="1231.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (12 samples, 0.13%)</title><rect x="98.9733%" y="1205" width="0.1257%" height="15" fill="rgb(216,174,36)" fg:x="9447" fg:w="12"/><text x="99.2233%" y="1215.50"></text></g><g><title>core::fmt::Formatter::pad (1 samples, 0.01%)</title><rect x="99.0990%" y="1253" width="0.0105%" height="15" fill="rgb(211,30,9)" fg:x="9459" fg:w="1"/><text x="99.3490%" y="1263.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::render_graph::nodes::pass_node::DrawState&gt; (1 samples, 0.01%)</title><rect x="99.1095%" y="1253" width="0.0105%" height="15" fill="rgb(216,8,21)" fg:x="9460" fg:w="1"/><text x="99.3595%" y="1263.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (4 samples, 0.04%)</title><rect x="99.1200%" y="1253" width="0.0419%" height="15" fill="rgb(237,209,39)" fg:x="9461" fg:w="4"/><text x="99.3700%" y="1263.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (1 samples, 0.01%)</title><rect x="99.1514%" y="1237" width="0.0105%" height="15" fill="rgb(235,111,47)" fg:x="9464" fg:w="1"/><text x="99.4014%" y="1247.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::find_equivalent (1 samples, 0.01%)</title><rect x="99.1514%" y="1221" width="0.0105%" height="15" fill="rgb(216,139,9)" fg:x="9464" fg:w="1"/><text x="99.4014%" y="1231.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T&gt;::find (1 samples, 0.01%)</title><rect x="99.1514%" y="1205" width="0.0105%" height="15" fill="rgb(248,185,4)" fg:x="9464" fg:w="1"/><text x="99.4014%" y="1215.50"></text></g><g><title>inplace_it::fixed_array::indirect (2 samples, 0.02%)</title><rect x="99.1619%" y="1253" width="0.0210%" height="15" fill="rgb(239,185,25)" fg:x="9465" fg:w="2"/><text x="99.4119%" y="1263.50"></text></g><g><title>game (7,240 samples, 75.85%)</title><rect x="23.3421%" y="1269" width="75.8512%" height="15" fill="rgb(233,207,8)" fg:x="2228" fg:w="7240"/><text x="23.5921%" y="1279.50">game</text></g><g><title>inplace_it::fixed_array::try_inplace_array (1 samples, 0.01%)</title><rect x="99.1828%" y="1253" width="0.0105%" height="15" fill="rgb(249,220,24)" fg:x="9467" fg:w="1"/><text x="99.4328%" y="1263.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.01%)</title><rect x="99.2038%" y="1237" width="0.0105%" height="15" fill="rgb(221,50,14)" fg:x="9469" fg:w="1"/><text x="99.4538%" y="1247.50"></text></g><g><title>[[heap]] (2 samples, 0.02%)</title><rect x="99.2038%" y="1253" width="0.0210%" height="15" fill="rgb(227,79,42)" fg:x="9469" fg:w="2"/><text x="99.4538%" y="1263.50"></text></g><g><title>pa_context_get_state (1 samples, 0.01%)</title><rect x="99.2142%" y="1237" width="0.0105%" height="15" fill="rgb(228,218,49)" fg:x="9470" fg:w="1"/><text x="99.4642%" y="1247.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.01%)</title><rect x="99.2247%" y="1237" width="0.0105%" height="15" fill="rgb(249,18,15)" fg:x="9471" fg:w="1"/><text x="99.4747%" y="1247.50"></text></g><g><title>[libpulsecommon-15.0.so] (3 samples, 0.03%)</title><rect x="99.2352%" y="1237" width="0.0314%" height="15" fill="rgb(212,84,27)" fg:x="9472" fg:w="3"/><text x="99.4852%" y="1247.50"></text></g><g><title>pa_context_unref (1 samples, 0.01%)</title><rect x="99.2666%" y="1237" width="0.0105%" height="15" fill="rgb(207,83,24)" fg:x="9475" fg:w="1"/><text x="99.5166%" y="1247.50"></text></g><g><title>pa_flist_push (1 samples, 0.01%)</title><rect x="99.2771%" y="1237" width="0.0105%" height="15" fill="rgb(219,61,7)" fg:x="9476" fg:w="1"/><text x="99.5271%" y="1247.50"></text></g><g><title>pa_mainloop_iterate (1 samples, 0.01%)</title><rect x="99.2876%" y="1237" width="0.0105%" height="15" fill="rgb(211,43,29)" fg:x="9477" fg:w="1"/><text x="99.5376%" y="1247.50"></text></g><g><title>pa_memexport_process_release (1 samples, 0.01%)</title><rect x="99.2981%" y="1237" width="0.0105%" height="15" fill="rgb(243,15,23)" fg:x="9478" fg:w="1"/><text x="99.5481%" y="1247.50"></text></g><g><title>pa_mutex_lock (1 samples, 0.01%)</title><rect x="99.3085%" y="1237" width="0.0105%" height="15" fill="rgb(217,52,28)" fg:x="9479" fg:w="1"/><text x="99.5585%" y="1247.50"></text></g><g><title>pa_mutex_unlock (1 samples, 0.01%)</title><rect x="99.3190%" y="1237" width="0.0105%" height="15" fill="rgb(210,35,6)" fg:x="9480" fg:w="1"/><text x="99.5690%" y="1247.50"></text></g><g><title>pa_pdispatch_run (1 samples, 0.01%)</title><rect x="99.3295%" y="1237" width="0.0105%" height="15" fill="rgb(237,187,28)" fg:x="9481" fg:w="1"/><text x="99.5795%" y="1247.50"></text></g><g><title>pa_queue_pop (1 samples, 0.01%)</title><rect x="99.3400%" y="1237" width="0.0105%" height="15" fill="rgb(231,136,24)" fg:x="9482" fg:w="1"/><text x="99.5900%" y="1247.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.01%)</title><rect x="99.3504%" y="1237" width="0.0105%" height="15" fill="rgb(205,176,52)" fg:x="9483" fg:w="1"/><text x="99.6004%" y="1247.50"></text></g><g><title>[anon] (14 samples, 0.15%)</title><rect x="99.2247%" y="1253" width="0.1467%" height="15" fill="rgb(218,65,12)" fg:x="9471" fg:w="14"/><text x="99.4747%" y="1263.50"></text></g><g><title>pa_tagstruct_new_fixed (1 samples, 0.01%)</title><rect x="99.3609%" y="1237" width="0.0105%" height="15" fill="rgb(234,101,21)" fg:x="9484" fg:w="1"/><text x="99.6109%" y="1247.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="99.3714%" y="1253" width="0.0105%" height="15" fill="rgb(206,13,20)" fg:x="9485" fg:w="1"/><text x="99.6214%" y="1263.50"></text></g><g><title>pa_once_begin (1 samples, 0.01%)</title><rect x="99.3714%" y="1237" width="0.0105%" height="15" fill="rgb(236,89,44)" fg:x="9485" fg:w="1"/><text x="99.6214%" y="1247.50"></text></g><g><title>[libpulse.so.0.24.0] (2 samples, 0.02%)</title><rect x="99.3819%" y="1237" width="0.0210%" height="15" fill="rgb(225,52,17)" fg:x="9486" fg:w="2"/><text x="99.6319%" y="1247.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="99.4028%" y="1237" width="0.0105%" height="15" fill="rgb(214,27,25)" fg:x="9488" fg:w="1"/><text x="99.6528%" y="1247.50"></text></g><g><title>pa_packet_new (1 samples, 0.01%)</title><rect x="99.4133%" y="1237" width="0.0105%" height="15" fill="rgb(240,141,35)" fg:x="9489" fg:w="1"/><text x="99.6633%" y="1247.50"></text></g><g><title>[unknown] (5 samples, 0.05%)</title><rect x="99.3819%" y="1253" width="0.0524%" height="15" fill="rgb(216,126,3)" fg:x="9486" fg:w="5"/><text x="99.6319%" y="1263.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.01%)</title><rect x="99.4238%" y="1237" width="0.0105%" height="15" fill="rgb(249,196,23)" fg:x="9490" fg:w="1"/><text x="99.6738%" y="1247.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.01%)</title><rect x="99.4447%" y="1141" width="0.0105%" height="15" fill="rgb(215,185,43)" fg:x="9492" fg:w="1"/><text x="99.6947%" y="1151.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.01%)</title><rect x="99.4447%" y="1125" width="0.0105%" height="15" fill="rgb(208,194,36)" fg:x="9492" fg:w="1"/><text x="99.6947%" y="1135.50"></text></g><g><title>pa_stream_update_timing_info (1 samples, 0.01%)</title><rect x="99.4447%" y="1109" width="0.0105%" height="15" fill="rgb(245,182,12)" fg:x="9492" fg:w="1"/><text x="99.6947%" y="1119.50"></text></g><g><title>pa_pdispatch_register_reply (1 samples, 0.01%)</title><rect x="99.4447%" y="1093" width="0.0105%" height="15" fill="rgb(244,222,52)" fg:x="9492" fg:w="1"/><text x="99.6947%" y="1103.50"></text></g><g><title>pa_flist_pop (1 samples, 0.01%)</title><rect x="99.4447%" y="1077" width="0.0105%" height="15" fill="rgb(236,222,51)" fg:x="9492" fg:w="1"/><text x="99.6947%" y="1087.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="99.4447%" y="1061" width="0.0105%" height="15" fill="rgb(254,71,22)" fg:x="9492" fg:w="1"/><text x="99.6947%" y="1071.50"></text></g><g><title>[libpulse.so.0.24.0] (1 samples, 0.01%)</title><rect x="99.4762%" y="1093" width="0.0105%" height="15" fill="rgb(250,104,15)" fg:x="9495" fg:w="1"/><text x="99.7262%" y="1103.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (3 samples, 0.03%)</title><rect x="99.4971%" y="1029" width="0.0314%" height="15" fill="rgb(229,223,46)" fg:x="9497" fg:w="3"/><text x="99.7471%" y="1039.50"></text></g><g><title>[libasound_module_pcm_pulse.so] (2 samples, 0.02%)</title><rect x="99.5076%" y="1013" width="0.0210%" height="15" fill="rgb(209,129,18)" fg:x="9498" fg:w="2"/><text x="99.7576%" y="1023.50"></text></g><g><title>[libpulse.so.0.24.0] (5 samples, 0.05%)</title><rect x="99.4866%" y="1077" width="0.0524%" height="15" fill="rgb(224,160,1)" fg:x="9496" fg:w="5"/><text x="99.7366%" y="1087.50"></text></g><g><title>pa_pdispatch_run (5 samples, 0.05%)</title><rect x="99.4866%" y="1061" width="0.0524%" height="15" fill="rgb(237,112,21)" fg:x="9496" fg:w="5"/><text x="99.7366%" y="1071.50"></text></g><g><title>[libpulse.so.0.24.0] (4 samples, 0.04%)</title><rect x="99.4971%" y="1045" width="0.0419%" height="15" fill="rgb(215,198,53)" fg:x="9497" fg:w="4"/><text x="99.7471%" y="1055.50"></text></g><g><title>pa_hashmap_get (1 samples, 0.01%)</title><rect x="99.5285%" y="1029" width="0.0105%" height="15" fill="rgb(218,227,35)" fg:x="9500" fg:w="1"/><text x="99.7785%" y="1039.50"></text></g><g><title>pa_idxset_trivial_hash_func (1 samples, 0.01%)</title><rect x="99.5285%" y="1013" width="0.0105%" height="15" fill="rgb(232,121,22)" fg:x="9500" fg:w="1"/><text x="99.7785%" y="1023.50"></text></g><g><title>pa_packet_new (2 samples, 0.02%)</title><rect x="99.5390%" y="1077" width="0.0210%" height="15" fill="rgb(235,52,54)" fg:x="9501" fg:w="2"/><text x="99.7890%" y="1087.50"></text></g><g><title>pa_run_once (1 samples, 0.01%)</title><rect x="99.5495%" y="1061" width="0.0105%" height="15" fill="rgb(219,21,44)" fg:x="9502" fg:w="1"/><text x="99.7995%" y="1071.50"></text></g><g><title>pa_once_begin (1 samples, 0.01%)</title><rect x="99.5495%" y="1045" width="0.0105%" height="15" fill="rgb(221,51,43)" fg:x="9502" fg:w="1"/><text x="99.7995%" y="1055.50"></text></g><g><title>[libpulsecommon-15.0.so] (10 samples, 0.10%)</title><rect x="99.4762%" y="1109" width="0.1048%" height="15" fill="rgb(225,77,42)" fg:x="9495" fg:w="10"/><text x="99.7262%" y="1119.50"></text></g><g><title>[libpulsecommon-15.0.so] (9 samples, 0.09%)</title><rect x="99.4866%" y="1093" width="0.0943%" height="15" fill="rgb(214,117,53)" fg:x="9496" fg:w="9"/><text x="99.7366%" y="1103.50"></text></g><g><title>pa_srbchannel_read (2 samples, 0.02%)</title><rect x="99.5600%" y="1077" width="0.0210%" height="15" fill="rgb(218,227,27)" fg:x="9503" fg:w="2"/><text x="99.8100%" y="1087.50"></text></g><g><title>__memmove_avx_unaligned_erms (2 samples, 0.02%)</title><rect x="99.5600%" y="1061" width="0.0210%" height="15" fill="rgb(223,214,36)" fg:x="9503" fg:w="2"/><text x="99.8100%" y="1071.50"></text></g><g><title>pa_memblock_get_pool (1 samples, 0.01%)</title><rect x="99.5809%" y="1109" width="0.0105%" height="15" fill="rgb(235,21,7)" fg:x="9505" fg:w="1"/><text x="99.8309%" y="1119.50"></text></g><g><title>pa_queue_pop (1 samples, 0.01%)</title><rect x="99.5914%" y="1109" width="0.0105%" height="15" fill="rgb(244,216,4)" fg:x="9506" fg:w="1"/><text x="99.8414%" y="1119.50"></text></g><g><title>pa_flist_push (1 samples, 0.01%)</title><rect x="99.5914%" y="1093" width="0.0105%" height="15" fill="rgb(249,197,24)" fg:x="9506" fg:w="1"/><text x="99.8414%" y="1103.50"></text></g><g><title>[libpulsecommon-15.0.so] (1 samples, 0.01%)</title><rect x="99.5914%" y="1077" width="0.0105%" height="15" fill="rgb(222,169,49)" fg:x="9506" fg:w="1"/><text x="99.8414%" y="1087.50"></text></g><g><title>[libpulsecommon-15.0.so] (13 samples, 0.14%)</title><rect x="99.4762%" y="1125" width="0.1362%" height="15" fill="rgb(207,137,33)" fg:x="9495" fg:w="13"/><text x="99.7262%" y="1135.50"></text></g><g><title>pa_srbchannel_write (1 samples, 0.01%)</title><rect x="99.6019%" y="1109" width="0.0105%" height="15" fill="rgb(219,180,40)" fg:x="9507" fg:w="1"/><text x="99.8519%" y="1119.50"></text></g><g><title>pa_fdsem_post (1 samples, 0.01%)</title><rect x="99.6019%" y="1093" width="0.0105%" height="15" fill="rgb(250,163,42)" fg:x="9507" fg:w="1"/><text x="99.8519%" y="1103.50"></text></g><g><title>pa_write (1 samples, 0.01%)</title><rect x="99.6019%" y="1077" width="0.0105%" height="15" fill="rgb(239,163,0)" fg:x="9507" fg:w="1"/><text x="99.8519%" y="1087.50"></text></g><g><title>__libc_write (1 samples, 0.01%)</title><rect x="99.6019%" y="1061" width="0.0105%" height="15" fill="rgb(252,38,28)" fg:x="9507" fg:w="1"/><text x="99.8519%" y="1071.50"></text></g><g><title>__pthread_disable_asynccancel (1 samples, 0.01%)</title><rect x="99.6019%" y="1045" width="0.0105%" height="15" fill="rgb(254,203,26)" fg:x="9507" fg:w="1"/><text x="99.8519%" y="1055.50"></text></g><g><title>pa_mainloop_dispatch (18 samples, 0.19%)</title><rect x="99.4343%" y="1157" width="0.1886%" height="15" fill="rgb(209,129,32)" fg:x="9491" fg:w="18"/><text x="99.6843%" y="1167.50"></text></g><g><title>[libpulsecommon-15.0.so] (16 samples, 0.17%)</title><rect x="99.4552%" y="1141" width="0.1676%" height="15" fill="rgb(207,177,52)" fg:x="9493" fg:w="16"/><text x="99.7052%" y="1151.50"></text></g><g><title>pa_fdsem_before_poll (1 samples, 0.01%)</title><rect x="99.6124%" y="1125" width="0.0105%" height="15" fill="rgb(230,209,36)" fg:x="9508" fg:w="1"/><text x="99.8624%" y="1135.50"></text></g><g><title>__GI___poll (26 samples, 0.27%)</title><rect x="99.6438%" y="1125" width="0.2724%" height="15" fill="rgb(238,131,0)" fg:x="9511" fg:w="26"/><text x="99.8938%" y="1135.50"></text></g><g><title>__GI___pthread_mutex_lock (1 samples, 0.01%)</title><rect x="99.9162%" y="1109" width="0.0105%" height="15" fill="rgb(218,61,31)" fg:x="9537" fg:w="1"/><text x="100.1662%" y="1119.50"></text></g><g><title>pa_mainloop_poll (30 samples, 0.31%)</title><rect x="99.6228%" y="1157" width="0.3143%" height="15" fill="rgb(232,6,53)" fg:x="9509" fg:w="30"/><text x="99.8728%" y="1167.50"></text></g><g><title>[libpulse.so.0.24.0] (29 samples, 0.30%)</title><rect x="99.6333%" y="1141" width="0.3038%" height="15" fill="rgb(254,100,32)" fg:x="9510" fg:w="29"/><text x="99.8833%" y="1151.50"></text></g><g><title>pa_mutex_lock (2 samples, 0.02%)</title><rect x="99.9162%" y="1125" width="0.0210%" height="15" fill="rgb(229,194,49)" fg:x="9537" fg:w="2"/><text x="100.1662%" y="1135.50"></text></g><g><title>__pthread_mutex_lock_full (1 samples, 0.01%)</title><rect x="99.9267%" y="1109" width="0.0105%" height="15" fill="rgb(206,208,39)" fg:x="9538" fg:w="1"/><text x="100.1767%" y="1119.50"></text></g><g><title>__errno_location (1 samples, 0.01%)</title><rect x="99.9476%" y="1125" width="0.0105%" height="15" fill="rgb(246,226,14)" fg:x="9540" fg:w="1"/><text x="100.1976%" y="1135.50"></text></g><g><title>pa_read (3 samples, 0.03%)</title><rect x="99.9371%" y="1141" width="0.0314%" height="15" fill="rgb(226,48,32)" fg:x="9539" fg:w="3"/><text x="100.1871%" y="1151.50"></text></g><g><title>__libc_read (1 samples, 0.01%)</title><rect x="99.9581%" y="1125" width="0.0105%" height="15" fill="rgb(252,43,54)" fg:x="9541" fg:w="1"/><text x="100.2081%" y="1135.50"></text></g><g><title>__GI___clone (52 samples, 0.54%)</title><rect x="99.4343%" y="1253" width="0.5448%" height="15" fill="rgb(207,124,0)" fg:x="9491" fg:w="52"/><text x="99.6843%" y="1263.50"></text></g><g><title>start_thread (52 samples, 0.54%)</title><rect x="99.4343%" y="1237" width="0.5448%" height="15" fill="rgb(248,188,30)" fg:x="9491" fg:w="52"/><text x="99.6843%" y="1247.50"></text></g><g><title>[libpulsecommon-15.0.so] (52 samples, 0.54%)</title><rect x="99.4343%" y="1221" width="0.5448%" height="15" fill="rgb(232,14,43)" fg:x="9491" fg:w="52"/><text x="99.6843%" y="1231.50"></text></g><g><title>[libpulse.so.0.24.0] (52 samples, 0.54%)</title><rect x="99.4343%" y="1205" width="0.5448%" height="15" fill="rgb(218,52,29)" fg:x="9491" fg:w="52"/><text x="99.6843%" y="1215.50"></text></g><g><title>pa_mainloop_run (52 samples, 0.54%)</title><rect x="99.4343%" y="1189" width="0.5448%" height="15" fill="rgb(218,176,50)" fg:x="9491" fg:w="52"/><text x="99.6843%" y="1199.50"></text></g><g><title>pa_mainloop_iterate (52 samples, 0.54%)</title><rect x="99.4343%" y="1173" width="0.5448%" height="15" fill="rgb(213,112,0)" fg:x="9491" fg:w="52"/><text x="99.6843%" y="1183.50"></text></g><g><title>pa_mainloop_prepare (4 samples, 0.04%)</title><rect x="99.9371%" y="1157" width="0.0419%" height="15" fill="rgb(244,216,8)" fg:x="9539" fg:w="4"/><text x="100.1871%" y="1167.50"></text></g><g><title>pa_rtclock_now (1 samples, 0.01%)</title><rect x="99.9686%" y="1141" width="0.0105%" height="15" fill="rgb(224,148,53)" fg:x="9542" fg:w="1"/><text x="100.2186%" y="1151.50"></text></g><g><title>pa_timeval_load (1 samples, 0.01%)</title><rect x="99.9686%" y="1125" width="0.0105%" height="15" fill="rgb(241,133,40)" fg:x="9542" fg:w="1"/><text x="100.2186%" y="1135.50"></text></g><g><title>__vdso_clock_gettime (1 samples, 0.01%)</title><rect x="99.9790%" y="1253" width="0.0105%" height="15" fill="rgb(232,17,44)" fg:x="9543" fg:w="1"/><text x="100.2290%" y="1263.50"></text></g><g><title>all (9,545 samples, 100%)</title><rect x="0.0000%" y="1285" width="100.0000%" height="15" fill="rgb(213,32,25)" fg:x="0" fg:w="9545"/><text x="0.2500%" y="1295.50"></text></g><g><title>threaded-ml (77 samples, 0.81%)</title><rect x="99.1933%" y="1269" width="0.8067%" height="15" fill="rgb(249,115,27)" fg:x="9468" fg:w="77"/><text x="99.4433%" y="1279.50"></text></g><g><title>pa_memblock_unref (1 samples, 0.01%)</title><rect x="99.9895%" y="1253" width="0.0105%" height="15" fill="rgb(241,50,1)" fg:x="9544" fg:w="1"/><text x="100.2395%" y="1263.50"></text></g></svg></svg>