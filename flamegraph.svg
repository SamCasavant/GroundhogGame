<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="1062" onload="init(evt)" viewBox="0 0 1200 1062" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:"Verdana"; font-size:12px; fill:rgb(0,0,0); }
#title { text-anchor:middle; font-size:17px; }
#search { opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
          svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            var el = frames.children;
            for(var i = 0; i < el.length; i++) {
                update_text(el[i]);
            }

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad - 100;
            matchedtxt.attributes.x.value = svgWidth - xpad - 100;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));
    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (/^ *\$/.test(txt) || t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                update_text(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                update_text(e);
            }
        }
    }
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
        update_text(el[i]);
    }
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="1062" fill="url(#background)"/><text id="title" x="50.0000%" y="24.00">Flame Graph</text><text id="details" x="10" y="1045.00"> </text><text id="unzoom" class="hide" x="10" y="24.00">Reset Zoom</text><text id="search" x="1090" y="24.00">Search</text><text id="matched" x="1090" y="1045.00"> </text><svg id="frames" x="10" width="1180" total_samples="253957"><g><title>_int_free (42 samples, 0.02%)</title><rect x="0.1941%" y="965" width="0.0165%" height="15" fill="rgb(227,0,7)" fg:x="493" fg:w="42"/><text x="0.4441%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (57 samples, 0.02%)</title><rect x="0.2111%" y="965" width="0.0224%" height="15" fill="rgb(217,0,24)" fg:x="536" fg:w="57"/><text x="0.4611%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (49 samples, 0.02%)</title><rect x="0.2142%" y="949" width="0.0193%" height="15" fill="rgb(221,193,54)" fg:x="544" fg:w="49"/><text x="0.4642%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (253 samples, 0.10%)</title><rect x="0.2343%" y="965" width="0.0996%" height="15" fill="rgb(248,212,6)" fg:x="595" fg:w="253"/><text x="0.4843%" y="975.50"></text></g><g><title>[[heap]] (580 samples, 0.23%)</title><rect x="0.1666%" y="981" width="0.2284%" height="15" fill="rgb(208,68,35)" fg:x="423" fg:w="580"/><text x="0.4166%" y="991.50"></text></g><g><title>__GI___libc_free (132 samples, 0.05%)</title><rect x="0.4123%" y="965" width="0.0520%" height="15" fill="rgb(232,128,0)" fg:x="1047" fg:w="132"/><text x="0.6623%" y="975.50"></text></g><g><title>__GI___libc_malloc (133 samples, 0.05%)</title><rect x="0.4643%" y="965" width="0.0524%" height="15" fill="rgb(207,160,47)" fg:x="1179" fg:w="133"/><text x="0.7143%" y="975.50"></text></g><g><title>__GI___libc_realloc (312 samples, 0.12%)</title><rect x="0.5166%" y="965" width="0.1229%" height="15" fill="rgb(228,23,34)" fg:x="1312" fg:w="312"/><text x="0.7666%" y="975.50"></text></g><g><title>_int_free (405 samples, 0.16%)</title><rect x="0.6477%" y="965" width="0.1595%" height="15" fill="rgb(218,30,26)" fg:x="1645" fg:w="405"/><text x="0.8977%" y="975.50"></text></g><g><title>_int_malloc (104 samples, 0.04%)</title><rect x="0.8072%" y="965" width="0.0410%" height="15" fill="rgb(220,122,19)" fg:x="2050" fg:w="104"/><text x="1.0572%" y="975.50"></text></g><g><title>_int_realloc (33 samples, 0.01%)</title><rect x="0.8482%" y="965" width="0.0130%" height="15" fill="rgb(250,228,42)" fg:x="2154" fg:w="33"/><text x="1.0982%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (351 samples, 0.14%)</title><rect x="0.8627%" y="965" width="0.1382%" height="15" fill="rgb(240,193,28)" fg:x="2191" fg:w="351"/><text x="1.1127%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (209 samples, 0.08%)</title><rect x="0.9187%" y="949" width="0.0823%" height="15" fill="rgb(216,20,37)" fg:x="2333" fg:w="209"/><text x="1.1687%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (68 samples, 0.03%)</title><rect x="0.9742%" y="933" width="0.0268%" height="15" fill="rgb(206,188,39)" fg:x="2474" fg:w="68"/><text x="1.2242%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (68 samples, 0.03%)</title><rect x="0.9742%" y="917" width="0.0268%" height="15" fill="rgb(217,207,13)" fg:x="2474" fg:w="68"/><text x="1.2242%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (614 samples, 0.24%)</title><rect x="1.0041%" y="965" width="0.2418%" height="15" fill="rgb(231,73,38)" fg:x="2550" fg:w="614"/><text x="1.2541%" y="975.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (96 samples, 0.04%)</title><rect x="1.2081%" y="949" width="0.0378%" height="15" fill="rgb(225,20,46)" fg:x="3068" fg:w="96"/><text x="1.4581%" y="959.50"></text></g><g><title>alloc::alloc::Global::grow_impl (96 samples, 0.04%)</title><rect x="1.2081%" y="933" width="0.0378%" height="15" fill="rgb(210,31,41)" fg:x="3068" fg:w="96"/><text x="1.4581%" y="943.50"></text></g><g><title>alloc::alloc::realloc (96 samples, 0.04%)</title><rect x="1.2081%" y="917" width="0.0378%" height="15" fill="rgb(221,200,47)" fg:x="3068" fg:w="96"/><text x="1.4581%" y="927.50"></text></g><g><title>__rdl_realloc (96 samples, 0.04%)</title><rect x="1.2081%" y="901" width="0.0378%" height="15" fill="rgb(226,26,5)" fg:x="3068" fg:w="96"/><text x="1.4581%" y="911.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (96 samples, 0.04%)</title><rect x="1.2081%" y="885" width="0.0378%" height="15" fill="rgb(249,33,26)" fg:x="3068" fg:w="96"/><text x="1.4581%" y="895.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (131 samples, 0.05%)</title><rect x="1.2628%" y="965" width="0.0516%" height="15" fill="rgb(235,183,28)" fg:x="3207" fg:w="131"/><text x="1.5128%" y="975.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (34 samples, 0.01%)</title><rect x="1.3152%" y="965" width="0.0134%" height="15" fill="rgb(221,5,38)" fg:x="3340" fg:w="34"/><text x="1.5652%" y="975.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (29 samples, 0.01%)</title><rect x="1.3467%" y="965" width="0.0114%" height="15" fill="rgb(247,18,42)" fg:x="3420" fg:w="29"/><text x="1.5967%" y="975.50"></text></g><g><title>unlink_chunk.constprop.0 (43 samples, 0.02%)</title><rect x="1.3616%" y="965" width="0.0169%" height="15" fill="rgb(241,131,45)" fg:x="3458" fg:w="43"/><text x="1.6116%" y="975.50"></text></g><g><title>[anon] (2,498 samples, 0.98%)</title><rect x="0.3965%" y="981" width="0.9836%" height="15" fill="rgb(249,31,29)" fg:x="1007" fg:w="2498"/><text x="0.6465%" y="991.50"></text></g><g><title>[engine] (36 samples, 0.01%)</title><rect x="1.3802%" y="981" width="0.0142%" height="15" fill="rgb(225,111,53)" fg:x="3505" fg:w="36"/><text x="1.6302%" y="991.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (29 samples, 0.01%)</title><rect x="1.3998%" y="965" width="0.0114%" height="15" fill="rgb(238,160,17)" fg:x="3555" fg:w="29"/><text x="1.6498%" y="975.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (33 samples, 0.01%)</title><rect x="1.4156%" y="965" width="0.0130%" height="15" fill="rgb(214,148,48)" fg:x="3595" fg:w="33"/><text x="1.6656%" y="975.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (282 samples, 0.11%)</title><rect x="1.4357%" y="965" width="0.1110%" height="15" fill="rgb(232,36,49)" fg:x="3646" fg:w="282"/><text x="1.6857%" y="975.50"></text></g><g><title>__GI___libc_free (291 samples, 0.11%)</title><rect x="1.5510%" y="965" width="0.1146%" height="15" fill="rgb(209,103,24)" fg:x="3939" fg:w="291"/><text x="1.8010%" y="975.50"></text></g><g><title>__GI___libc_malloc (213 samples, 0.08%)</title><rect x="1.6656%" y="965" width="0.0839%" height="15" fill="rgb(229,88,8)" fg:x="4230" fg:w="213"/><text x="1.9156%" y="975.50"></text></g><g><title>__GI___libc_realloc (134 samples, 0.05%)</title><rect x="1.7495%" y="965" width="0.0528%" height="15" fill="rgb(213,181,19)" fg:x="4443" fg:w="134"/><text x="1.9995%" y="975.50"></text></g><g><title>_int_free (473 samples, 0.19%)</title><rect x="1.8070%" y="965" width="0.1863%" height="15" fill="rgb(254,191,54)" fg:x="4589" fg:w="473"/><text x="2.0570%" y="975.50"></text></g><g><title>_int_malloc (314 samples, 0.12%)</title><rect x="1.9933%" y="965" width="0.1236%" height="15" fill="rgb(241,83,37)" fg:x="5062" fg:w="314"/><text x="2.2433%" y="975.50"></text></g><g><title>_int_realloc (394 samples, 0.16%)</title><rect x="2.1169%" y="965" width="0.1551%" height="15" fill="rgb(233,36,39)" fg:x="5376" fg:w="394"/><text x="2.3669%" y="975.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (66 samples, 0.03%)</title><rect x="2.2720%" y="965" width="0.0260%" height="15" fill="rgb(226,3,54)" fg:x="5770" fg:w="66"/><text x="2.5220%" y="975.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (670 samples, 0.26%)</title><rect x="2.2980%" y="965" width="0.2638%" height="15" fill="rgb(245,192,40)" fg:x="5836" fg:w="670"/><text x="2.5480%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (348 samples, 0.14%)</title><rect x="2.5622%" y="965" width="0.1370%" height="15" fill="rgb(238,167,29)" fg:x="6507" fg:w="348"/><text x="2.8122%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (285 samples, 0.11%)</title><rect x="2.5871%" y="949" width="0.1122%" height="15" fill="rgb(232,182,51)" fg:x="6570" fg:w="285"/><text x="2.8371%" y="959.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (130 samples, 0.05%)</title><rect x="2.6481%" y="933" width="0.0512%" height="15" fill="rgb(231,60,39)" fg:x="6725" fg:w="130"/><text x="2.8981%" y="943.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (130 samples, 0.05%)</title><rect x="2.6481%" y="917" width="0.0512%" height="15" fill="rgb(208,69,12)" fg:x="6725" fg:w="130"/><text x="2.8981%" y="927.50"></text></g><g><title>alloc::raw_vec::finish_grow (939 samples, 0.37%)</title><rect x="2.7012%" y="965" width="0.3697%" height="15" fill="rgb(235,93,37)" fg:x="6860" fg:w="939"/><text x="2.9512%" y="975.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (345 samples, 0.14%)</title><rect x="3.1167%" y="965" width="0.1358%" height="15" fill="rgb(213,116,39)" fg:x="7915" fg:w="345"/><text x="3.3667%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (76 samples, 0.03%)</title><rect x="3.2226%" y="949" width="0.0299%" height="15" fill="rgb(222,207,29)" fg:x="8184" fg:w="76"/><text x="3.4726%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.03%)</title><rect x="3.2226%" y="933" width="0.0299%" height="15" fill="rgb(206,96,30)" fg:x="8184" fg:w="76"/><text x="3.4726%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (76 samples, 0.03%)</title><rect x="3.2226%" y="917" width="0.0299%" height="15" fill="rgb(218,138,4)" fg:x="8184" fg:w="76"/><text x="3.4726%" y="927.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.03%)</title><rect x="3.2226%" y="901" width="0.0299%" height="15" fill="rgb(250,191,14)" fg:x="8184" fg:w="76"/><text x="3.4726%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (76 samples, 0.03%)</title><rect x="3.2226%" y="885" width="0.0299%" height="15" fill="rgb(239,60,40)" fg:x="8184" fg:w="76"/><text x="3.4726%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (76 samples, 0.03%)</title><rect x="3.2226%" y="869" width="0.0299%" height="15" fill="rgb(206,27,48)" fg:x="8184" fg:w="76"/><text x="3.4726%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (76 samples, 0.03%)</title><rect x="3.2226%" y="853" width="0.0299%" height="15" fill="rgb(225,35,8)" fg:x="8184" fg:w="76"/><text x="3.4726%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (76 samples, 0.03%)</title><rect x="3.2226%" y="837" width="0.0299%" height="15" fill="rgb(250,213,24)" fg:x="8184" fg:w="76"/><text x="3.4726%" y="847.50"></text></g><g><title>__rdl_dealloc (76 samples, 0.03%)</title><rect x="3.2226%" y="821" width="0.0299%" height="15" fill="rgb(247,123,22)" fg:x="8184" fg:w="76"/><text x="3.4726%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (76 samples, 0.03%)</title><rect x="3.2226%" y="805" width="0.0299%" height="15" fill="rgb(231,138,38)" fg:x="8184" fg:w="76"/><text x="3.4726%" y="815.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (31 samples, 0.01%)</title><rect x="3.2541%" y="965" width="0.0122%" height="15" fill="rgb(231,145,46)" fg:x="8264" fg:w="31"/><text x="3.5041%" y="975.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (60 samples, 0.02%)</title><rect x="3.2679%" y="965" width="0.0236%" height="15" fill="rgb(251,118,11)" fg:x="8299" fg:w="60"/><text x="3.5179%" y="975.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (1,021 samples, 0.40%)</title><rect x="3.3025%" y="965" width="0.4020%" height="15" fill="rgb(217,147,25)" fg:x="8387" fg:w="1021"/><text x="3.5525%" y="975.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (69 samples, 0.03%)</title><rect x="3.7420%" y="949" width="0.0272%" height="15" fill="rgb(247,81,37)" fg:x="9503" fg:w="69"/><text x="3.9920%" y="959.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.03%)</title><rect x="3.7420%" y="933" width="0.0272%" height="15" fill="rgb(209,12,38)" fg:x="9503" fg:w="69"/><text x="3.9920%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (69 samples, 0.03%)</title><rect x="3.7420%" y="917" width="0.0272%" height="15" fill="rgb(227,1,9)" fg:x="9503" fg:w="69"/><text x="3.9920%" y="927.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.03%)</title><rect x="3.7420%" y="901" width="0.0272%" height="15" fill="rgb(248,47,43)" fg:x="9503" fg:w="69"/><text x="3.9920%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (69 samples, 0.03%)</title><rect x="3.7420%" y="885" width="0.0272%" height="15" fill="rgb(221,10,30)" fg:x="9503" fg:w="69"/><text x="3.9920%" y="895.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.03%)</title><rect x="3.7420%" y="869" width="0.0272%" height="15" fill="rgb(210,229,1)" fg:x="9503" fg:w="69"/><text x="3.9920%" y="879.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (69 samples, 0.03%)</title><rect x="3.7420%" y="853" width="0.0272%" height="15" fill="rgb(222,148,37)" fg:x="9503" fg:w="69"/><text x="3.9920%" y="863.50"></text></g><g><title>alloc::alloc::dealloc (69 samples, 0.03%)</title><rect x="3.7420%" y="837" width="0.0272%" height="15" fill="rgb(234,67,33)" fg:x="9503" fg:w="69"/><text x="3.9920%" y="847.50"></text></g><g><title>__rdl_dealloc (69 samples, 0.03%)</title><rect x="3.7420%" y="821" width="0.0272%" height="15" fill="rgb(247,98,35)" fg:x="9503" fg:w="69"/><text x="3.9920%" y="831.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (69 samples, 0.03%)</title><rect x="3.7420%" y="805" width="0.0272%" height="15" fill="rgb(247,138,52)" fg:x="9503" fg:w="69"/><text x="3.9920%" y="815.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (414 samples, 0.16%)</title><rect x="3.7715%" y="949" width="0.1630%" height="15" fill="rgb(213,79,30)" fg:x="9578" fg:w="414"/><text x="4.0215%" y="959.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (414 samples, 0.16%)</title><rect x="3.7715%" y="933" width="0.1630%" height="15" fill="rgb(246,177,23)" fg:x="9578" fg:w="414"/><text x="4.0215%" y="943.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (414 samples, 0.16%)</title><rect x="3.7715%" y="917" width="0.1630%" height="15" fill="rgb(230,62,27)" fg:x="9578" fg:w="414"/><text x="4.0215%" y="927.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (45 samples, 0.02%)</title><rect x="3.9345%" y="949" width="0.0177%" height="15" fill="rgb(216,154,8)" fg:x="9992" fg:w="45"/><text x="4.1845%" y="959.50"></text></g><g><title>pathfinding::directed::astar::astar (619 samples, 0.24%)</title><rect x="3.7093%" y="965" width="0.2437%" height="15" fill="rgb(244,35,45)" fg:x="9420" fg:w="619"/><text x="3.9593%" y="975.50"></text></g><g><title>unlink_chunk.constprop.0 (122 samples, 0.05%)</title><rect x="3.9550%" y="965" width="0.0480%" height="15" fill="rgb(251,115,12)" fg:x="10044" fg:w="122"/><text x="4.2050%" y="975.50"></text></g><g><title>[unknown] (6,622 samples, 2.61%)</title><rect x="1.3971%" y="981" width="2.6075%" height="15" fill="rgb(240,54,50)" fg:x="3548" fg:w="6622"/><text x="1.6471%" y="991.50">[u..</text></g><g><title>&lt;event_listener::EventListener as core::future::future::Future&gt;::poll (54 samples, 0.02%)</title><rect x="4.0113%" y="629" width="0.0213%" height="15" fill="rgb(233,84,52)" fg:x="10187" fg:w="54"/><text x="4.2613%" y="639.50"></text></g><g><title>event_listener::Inner::lock (30 samples, 0.01%)</title><rect x="4.0208%" y="613" width="0.0118%" height="15" fill="rgb(207,117,47)" fg:x="10211" fg:w="30"/><text x="4.2708%" y="623.50"></text></g><g><title>std::sync::mutex::Mutex&lt;T&gt;::lock (30 samples, 0.01%)</title><rect x="4.0208%" y="597" width="0.0118%" height="15" fill="rgb(249,43,39)" fg:x="10211" fg:w="30"/><text x="4.2708%" y="607.50"></text></g><g><title>std::sys_common::mutex::MovableMutex::raw_lock (30 samples, 0.01%)</title><rect x="4.0208%" y="581" width="0.0118%" height="15" fill="rgb(209,38,44)" fg:x="10211" fg:w="30"/><text x="4.2708%" y="591.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (74 samples, 0.03%)</title><rect x="4.0101%" y="645" width="0.0291%" height="15" fill="rgb(236,212,23)" fg:x="10184" fg:w="74"/><text x="4.2601%" y="655.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::len (43 samples, 0.02%)</title><rect x="4.0562%" y="485" width="0.0169%" height="15" fill="rgb(242,79,21)" fg:x="10301" fg:w="43"/><text x="4.3062%" y="495.50"></text></g><g><title>async_executor::steal (68 samples, 0.03%)</title><rect x="4.0558%" y="501" width="0.0268%" height="15" fill="rgb(211,96,35)" fg:x="10300" fg:w="68"/><text x="4.3058%" y="511.50"></text></g><g><title>concurrent_queue::bounded::Bounded&lt;T&gt;::pop (28 samples, 0.01%)</title><rect x="4.0861%" y="485" width="0.0110%" height="15" fill="rgb(253,215,40)" fg:x="10377" fg:w="28"/><text x="4.3361%" y="495.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (62 samples, 0.02%)</title><rect x="4.0826%" y="501" width="0.0244%" height="15" fill="rgb(211,81,21)" fg:x="10368" fg:w="62"/><text x="4.3326%" y="511.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}}::{{closure}} (175 samples, 0.07%)</title><rect x="4.0483%" y="517" width="0.0689%" height="15" fill="rgb(208,190,38)" fg:x="10281" fg:w="175"/><text x="4.2983%" y="527.50"></text></g><g><title>async_executor::State::notify (33 samples, 0.01%)</title><rect x="4.1172%" y="517" width="0.0130%" height="15" fill="rgb(235,213,38)" fg:x="10456" fg:w="33"/><text x="4.3672%" y="527.50"></text></g><g><title>async_executor::Ticker::sleep (39 samples, 0.02%)</title><rect x="4.1302%" y="517" width="0.0154%" height="15" fill="rgb(237,122,38)" fg:x="10489" fg:w="39"/><text x="4.3802%" y="527.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (280 samples, 0.11%)</title><rect x="4.0440%" y="581" width="0.1103%" height="15" fill="rgb(244,218,35)" fg:x="10270" fg:w="280"/><text x="4.2940%" y="591.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}} (278 samples, 0.11%)</title><rect x="4.0448%" y="565" width="0.1095%" height="15" fill="rgb(240,68,47)" fg:x="10272" fg:w="278"/><text x="4.2948%" y="575.50"></text></g><g><title>&lt;futures_lite::future::PollFn&lt;F&gt; as core::future::future::Future&gt;::poll (276 samples, 0.11%)</title><rect x="4.0456%" y="549" width="0.1087%" height="15" fill="rgb(210,16,53)" fg:x="10274" fg:w="276"/><text x="4.2956%" y="559.50"></text></g><g><title>async_executor::Ticker::runnable_with::{{closure}}::{{closure}} (276 samples, 0.11%)</title><rect x="4.0456%" y="533" width="0.1087%" height="15" fill="rgb(235,124,12)" fg:x="10274" fg:w="276"/><text x="4.2956%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (290 samples, 0.11%)</title><rect x="4.0412%" y="613" width="0.1142%" height="15" fill="rgb(224,169,11)" fg:x="10263" fg:w="290"/><text x="4.2912%" y="623.50"></text></g><g><title>async_executor::Runner::runnable::{{closure}} (287 samples, 0.11%)</title><rect x="4.0424%" y="597" width="0.1130%" height="15" fill="rgb(250,166,2)" fg:x="10266" fg:w="287"/><text x="4.2924%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (33 samples, 0.01%)</title><rect x="4.1755%" y="517" width="0.0130%" height="15" fill="rgb(242,216,29)" fg:x="10604" fg:w="33"/><text x="4.4255%" y="527.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (32 samples, 0.01%)</title><rect x="4.1759%" y="501" width="0.0126%" height="15" fill="rgb(230,116,27)" fg:x="10605" fg:w="32"/><text x="4.4259%" y="511.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (89 samples, 0.04%)</title><rect x="4.1668%" y="533" width="0.0350%" height="15" fill="rgb(228,99,48)" fg:x="10582" fg:w="89"/><text x="4.4168%" y="543.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (53 samples, 0.02%)</title><rect x="4.2046%" y="517" width="0.0209%" height="15" fill="rgb(253,11,6)" fg:x="10678" fg:w="53"/><text x="4.4546%" y="527.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::push (39 samples, 0.02%)</title><rect x="4.2271%" y="485" width="0.0154%" height="15" fill="rgb(247,143,39)" fg:x="10735" fg:w="39"/><text x="4.4771%" y="495.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::push (35 samples, 0.01%)</title><rect x="4.2287%" y="469" width="0.0138%" height="15" fill="rgb(236,97,10)" fg:x="10739" fg:w="35"/><text x="4.4787%" y="479.50"></text></g><g><title>event_listener::List::notify (29 samples, 0.01%)</title><rect x="4.2456%" y="469" width="0.0114%" height="15" fill="rgb(233,208,19)" fg:x="10782" fg:w="29"/><text x="4.4956%" y="479.50"></text></g><g><title>core::task::wake::Waker::wake (27 samples, 0.01%)</title><rect x="4.2464%" y="453" width="0.0106%" height="15" fill="rgb(216,164,2)" fg:x="10784" fg:w="27"/><text x="4.4964%" y="463.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (27 samples, 0.01%)</title><rect x="4.2464%" y="437" width="0.0106%" height="15" fill="rgb(220,129,5)" fg:x="10784" fg:w="27"/><text x="4.4964%" y="447.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (87 samples, 0.03%)</title><rect x="4.2263%" y="501" width="0.0343%" height="15" fill="rgb(242,17,10)" fg:x="10733" fg:w="87"/><text x="4.4763%" y="511.50"></text></g><g><title>event_listener::Event::notify (46 samples, 0.02%)</title><rect x="4.2425%" y="485" width="0.0181%" height="15" fill="rgb(242,107,0)" fg:x="10774" fg:w="46"/><text x="4.4925%" y="495.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (92 samples, 0.04%)</title><rect x="4.2255%" y="517" width="0.0362%" height="15" fill="rgb(251,28,31)" fg:x="10731" fg:w="92"/><text x="4.4755%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::draw::RenderCommand]&gt; (214 samples, 0.08%)</title><rect x="4.2755%" y="389" width="0.0843%" height="15" fill="rgb(233,223,10)" fg:x="10858" fg:w="214"/><text x="4.5255%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::draw::RenderCommand&gt; (211 samples, 0.08%)</title><rect x="4.2767%" y="373" width="0.0831%" height="15" fill="rgb(215,21,27)" fg:x="10861" fg:w="211"/><text x="4.5267%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (87 samples, 0.03%)</title><rect x="4.3255%" y="357" width="0.0343%" height="15" fill="rgb(232,23,21)" fg:x="10985" fg:w="87"/><text x="4.5755%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (75 samples, 0.03%)</title><rect x="4.3303%" y="341" width="0.0295%" height="15" fill="rgb(244,5,23)" fg:x="10997" fg:w="75"/><text x="4.5803%" y="351.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (75 samples, 0.03%)</title><rect x="4.3303%" y="325" width="0.0295%" height="15" fill="rgb(226,81,46)" fg:x="10997" fg:w="75"/><text x="4.5803%" y="335.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (75 samples, 0.03%)</title><rect x="4.3303%" y="309" width="0.0295%" height="15" fill="rgb(247,70,30)" fg:x="10997" fg:w="75"/><text x="4.5803%" y="319.50"></text></g><g><title>core::sync::atomic::atomic_sub (75 samples, 0.03%)</title><rect x="4.3303%" y="293" width="0.0295%" height="15" fill="rgb(212,68,19)" fg:x="10997" fg:w="75"/><text x="4.5803%" y="303.50"></text></g><g><title>bevy_render::draw::clear_draw_system (222 samples, 0.09%)</title><rect x="4.2728%" y="453" width="0.0874%" height="15" fill="rgb(240,187,13)" fg:x="10851" fg:w="222"/><text x="4.5228%" y="463.50"></text></g><g><title>bevy_render::draw::Draw::clear_render_commands (218 samples, 0.09%)</title><rect x="4.2743%" y="437" width="0.0858%" height="15" fill="rgb(223,113,26)" fg:x="10855" fg:w="218"/><text x="4.5243%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (217 samples, 0.09%)</title><rect x="4.2747%" y="421" width="0.0854%" height="15" fill="rgb(206,192,2)" fg:x="10856" fg:w="217"/><text x="4.5247%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (217 samples, 0.09%)</title><rect x="4.2747%" y="405" width="0.0854%" height="15" fill="rgb(241,108,4)" fg:x="10856" fg:w="217"/><text x="4.5247%" y="415.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (115 samples, 0.05%)</title><rect x="4.3602%" y="453" width="0.0453%" height="15" fill="rgb(247,173,49)" fg:x="11073" fg:w="115"/><text x="4.6102%" y="463.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (87 samples, 0.03%)</title><rect x="4.3712%" y="437" width="0.0343%" height="15" fill="rgb(224,114,35)" fg:x="11101" fg:w="87"/><text x="4.6212%" y="447.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (87 samples, 0.03%)</title><rect x="4.3712%" y="421" width="0.0343%" height="15" fill="rgb(245,159,27)" fg:x="11101" fg:w="87"/><text x="4.6212%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (87 samples, 0.03%)</title><rect x="4.3712%" y="405" width="0.0343%" height="15" fill="rgb(245,172,44)" fg:x="11101" fg:w="87"/><text x="4.6212%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (87 samples, 0.03%)</title><rect x="4.3712%" y="389" width="0.0343%" height="15" fill="rgb(236,23,11)" fg:x="11101" fg:w="87"/><text x="4.6212%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (78 samples, 0.03%)</title><rect x="4.3748%" y="373" width="0.0307%" height="15" fill="rgb(205,117,38)" fg:x="11110" fg:w="78"/><text x="4.6248%" y="383.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (405 samples, 0.16%)</title><rect x="4.2633%" y="501" width="0.1595%" height="15" fill="rgb(237,72,25)" fg:x="10827" fg:w="405"/><text x="4.5133%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (396 samples, 0.16%)</title><rect x="4.2669%" y="485" width="0.1559%" height="15" fill="rgb(244,70,9)" fg:x="10836" fg:w="396"/><text x="4.5169%" y="495.50"></text></g><g><title>core::ops::function::Fn::call (394 samples, 0.16%)</title><rect x="4.2677%" y="469" width="0.1551%" height="15" fill="rgb(217,125,39)" fg:x="10838" fg:w="394"/><text x="4.5177%" y="479.50"></text></g><g><title>engine::engine::render::animate_sprite_system (35 samples, 0.01%)</title><rect x="4.4090%" y="453" width="0.0138%" height="15" fill="rgb(235,36,10)" fg:x="11197" fg:w="35"/><text x="4.6590%" y="463.50"></text></g><g><title>bevy_asset::loader::update_asset_storage_system (49 samples, 0.02%)</title><rect x="4.4311%" y="453" width="0.0193%" height="15" fill="rgb(251,123,47)" fg:x="11253" fg:w="49"/><text x="4.6811%" y="463.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::update_asset_storage (49 samples, 0.02%)</title><rect x="4.4311%" y="437" width="0.0193%" height="15" fill="rgb(221,13,13)" fg:x="11253" fg:w="49"/><text x="4.6811%" y="447.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (77 samples, 0.03%)</title><rect x="4.4228%" y="501" width="0.0303%" height="15" fill="rgb(238,131,9)" fg:x="11232" fg:w="77"/><text x="4.6728%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (69 samples, 0.03%)</title><rect x="4.4259%" y="485" width="0.0272%" height="15" fill="rgb(211,50,8)" fg:x="11240" fg:w="69"/><text x="4.6759%" y="495.50"></text></g><g><title>core::ops::function::Fn::call (69 samples, 0.03%)</title><rect x="4.4259%" y="469" width="0.0272%" height="15" fill="rgb(245,182,24)" fg:x="11240" fg:w="69"/><text x="4.6759%" y="479.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (26 samples, 0.01%)</title><rect x="4.4614%" y="453" width="0.0102%" height="15" fill="rgb(242,14,37)" fg:x="11330" fg:w="26"/><text x="4.7114%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;engine::engine::world::Position&gt;&gt; (93 samples, 0.04%)</title><rect x="4.5232%" y="437" width="0.0366%" height="15" fill="rgb(246,228,12)" fg:x="11487" fg:w="93"/><text x="4.7732%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (93 samples, 0.04%)</title><rect x="4.5232%" y="421" width="0.0366%" height="15" fill="rgb(213,55,15)" fg:x="11487" fg:w="93"/><text x="4.7732%" y="431.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (93 samples, 0.04%)</title><rect x="4.5232%" y="405" width="0.0366%" height="15" fill="rgb(209,9,3)" fg:x="11487" fg:w="93"/><text x="4.7732%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (92 samples, 0.04%)</title><rect x="4.5236%" y="389" width="0.0362%" height="15" fill="rgb(230,59,30)" fg:x="11488" fg:w="92"/><text x="4.7736%" y="399.50"></text></g><g><title>alloc::alloc::dealloc (92 samples, 0.04%)</title><rect x="4.5236%" y="373" width="0.0362%" height="15" fill="rgb(209,121,21)" fg:x="11488" fg:w="92"/><text x="4.7736%" y="383.50"></text></g><g><title>__rdl_dealloc (92 samples, 0.04%)</title><rect x="4.5236%" y="357" width="0.0362%" height="15" fill="rgb(220,109,13)" fg:x="11488" fg:w="92"/><text x="4.7736%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (92 samples, 0.04%)</title><rect x="4.5236%" y="341" width="0.0362%" height="15" fill="rgb(232,18,1)" fg:x="11488" fg:w="92"/><text x="4.7736%" y="351.50"></text></g><g><title>__GI___libc_free (92 samples, 0.04%)</title><rect x="4.5236%" y="325" width="0.0362%" height="15" fill="rgb(215,41,42)" fg:x="11488" fg:w="92"/><text x="4.7736%" y="335.50"></text></g><g><title>_int_free (82 samples, 0.03%)</title><rect x="4.5275%" y="309" width="0.0323%" height="15" fill="rgb(224,123,36)" fg:x="11498" fg:w="82"/><text x="4.7775%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (35 samples, 0.01%)</title><rect x="4.5972%" y="341" width="0.0138%" height="15" fill="rgb(240,125,3)" fg:x="11675" fg:w="35"/><text x="4.8472%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (33 samples, 0.01%)</title><rect x="4.5980%" y="325" width="0.0130%" height="15" fill="rgb(205,98,50)" fg:x="11677" fg:w="33"/><text x="4.8480%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (38 samples, 0.01%)</title><rect x="4.5968%" y="389" width="0.0150%" height="15" fill="rgb(205,185,37)" fg:x="11674" fg:w="38"/><text x="4.8468%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (38 samples, 0.01%)</title><rect x="4.5968%" y="373" width="0.0150%" height="15" fill="rgb(238,207,15)" fg:x="11674" fg:w="38"/><text x="4.8468%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (37 samples, 0.01%)</title><rect x="4.5972%" y="357" width="0.0146%" height="15" fill="rgb(213,199,42)" fg:x="11675" fg:w="37"/><text x="4.8472%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (49 samples, 0.02%)</title><rect x="4.5945%" y="405" width="0.0193%" height="15" fill="rgb(235,201,11)" fg:x="11668" fg:w="49"/><text x="4.8445%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (30 samples, 0.01%)</title><rect x="4.6236%" y="389" width="0.0118%" height="15" fill="rgb(207,46,11)" fg:x="11742" fg:w="30"/><text x="4.8736%" y="399.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (31 samples, 0.01%)</title><rect x="4.6236%" y="405" width="0.0122%" height="15" fill="rgb(241,35,35)" fg:x="11742" fg:w="31"/><text x="4.8736%" y="415.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_except_entities (201 samples, 0.08%)</title><rect x="4.5811%" y="421" width="0.0791%" height="15" fill="rgb(243,32,47)" fg:x="11634" fg:w="201"/><text x="4.8311%" y="431.50"></text></g><g><title>engine::engine::world::TileWeightMap::get (29 samples, 0.01%)</title><rect x="4.6488%" y="405" width="0.0114%" height="15" fill="rgb(247,202,23)" fg:x="11806" fg:w="29"/><text x="4.8988%" y="415.50"></text></g><g><title>engine::engine::actor::pathfinding::best_nearest_valid_destination (241 samples, 0.09%)</title><rect x="4.5665%" y="437" width="0.0949%" height="15" fill="rgb(219,102,11)" fg:x="11597" fg:w="241"/><text x="4.8165%" y="447.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (34 samples, 0.01%)</title><rect x="4.6756%" y="357" width="0.0134%" height="15" fill="rgb(243,110,44)" fg:x="11874" fg:w="34"/><text x="4.9256%" y="367.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (46 samples, 0.02%)</title><rect x="4.6713%" y="405" width="0.0181%" height="15" fill="rgb(222,74,54)" fg:x="11863" fg:w="46"/><text x="4.9213%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (44 samples, 0.02%)</title><rect x="4.6721%" y="389" width="0.0173%" height="15" fill="rgb(216,99,12)" fg:x="11865" fg:w="44"/><text x="4.9221%" y="399.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (41 samples, 0.02%)</title><rect x="4.6732%" y="373" width="0.0161%" height="15" fill="rgb(226,22,26)" fg:x="11868" fg:w="41"/><text x="4.9232%" y="383.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (46 samples, 0.02%)</title><rect x="4.6894%" y="405" width="0.0181%" height="15" fill="rgb(217,163,10)" fg:x="11909" fg:w="46"/><text x="4.9394%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (26 samples, 0.01%)</title><rect x="4.6973%" y="389" width="0.0102%" height="15" fill="rgb(213,25,53)" fg:x="11929" fg:w="26"/><text x="4.9473%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (39 samples, 0.02%)</title><rect x="4.7075%" y="309" width="0.0154%" height="15" fill="rgb(252,105,26)" fg:x="11955" fg:w="39"/><text x="4.9575%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (39 samples, 0.02%)</title><rect x="4.7075%" y="293" width="0.0154%" height="15" fill="rgb(220,39,43)" fg:x="11955" fg:w="39"/><text x="4.9575%" y="303.50"></text></g><g><title>__rdl_dealloc (39 samples, 0.02%)</title><rect x="4.7075%" y="277" width="0.0154%" height="15" fill="rgb(229,68,48)" fg:x="11955" fg:w="39"/><text x="4.9575%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (39 samples, 0.02%)</title><rect x="4.7075%" y="261" width="0.0154%" height="15" fill="rgb(252,8,32)" fg:x="11955" fg:w="39"/><text x="4.9575%" y="271.50"></text></g><g><title>__GI___libc_free (39 samples, 0.02%)</title><rect x="4.7075%" y="245" width="0.0154%" height="15" fill="rgb(223,20,43)" fg:x="11955" fg:w="39"/><text x="4.9575%" y="255.50"></text></g><g><title>_int_free (37 samples, 0.01%)</title><rect x="4.7083%" y="229" width="0.0146%" height="15" fill="rgb(229,81,49)" fg:x="11957" fg:w="37"/><text x="4.9583%" y="239.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (40 samples, 0.02%)</title><rect x="4.7075%" y="405" width="0.0158%" height="15" fill="rgb(236,28,36)" fg:x="11955" fg:w="40"/><text x="4.9575%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="4.7075%" y="389" width="0.0158%" height="15" fill="rgb(249,185,26)" fg:x="11955" fg:w="40"/><text x="4.9575%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (40 samples, 0.02%)</title><rect x="4.7075%" y="373" width="0.0158%" height="15" fill="rgb(249,174,33)" fg:x="11955" fg:w="40"/><text x="4.9575%" y="383.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="4.7075%" y="357" width="0.0158%" height="15" fill="rgb(233,201,37)" fg:x="11955" fg:w="40"/><text x="4.9575%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (40 samples, 0.02%)</title><rect x="4.7075%" y="341" width="0.0158%" height="15" fill="rgb(221,78,26)" fg:x="11955" fg:w="40"/><text x="4.9575%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (40 samples, 0.02%)</title><rect x="4.7075%" y="325" width="0.0158%" height="15" fill="rgb(250,127,30)" fg:x="11955" fg:w="40"/><text x="4.9575%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (74 samples, 0.03%)</title><rect x="4.7563%" y="277" width="0.0291%" height="15" fill="rgb(230,49,44)" fg:x="12079" fg:w="74"/><text x="5.0063%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (74 samples, 0.03%)</title><rect x="4.7563%" y="261" width="0.0291%" height="15" fill="rgb(229,67,23)" fg:x="12079" fg:w="74"/><text x="5.0063%" y="271.50"></text></g><g><title>alloc::alloc::realloc (74 samples, 0.03%)</title><rect x="4.7563%" y="245" width="0.0291%" height="15" fill="rgb(249,83,47)" fg:x="12079" fg:w="74"/><text x="5.0063%" y="255.50"></text></g><g><title>__rdl_realloc (74 samples, 0.03%)</title><rect x="4.7563%" y="229" width="0.0291%" height="15" fill="rgb(215,43,3)" fg:x="12079" fg:w="74"/><text x="5.0063%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (74 samples, 0.03%)</title><rect x="4.7563%" y="213" width="0.0291%" height="15" fill="rgb(238,154,13)" fg:x="12079" fg:w="74"/><text x="5.0063%" y="223.50"></text></g><g><title>__GI___libc_realloc (74 samples, 0.03%)</title><rect x="4.7563%" y="197" width="0.0291%" height="15" fill="rgb(219,56,2)" fg:x="12079" fg:w="74"/><text x="5.0063%" y="207.50"></text></g><g><title>_int_realloc (48 samples, 0.02%)</title><rect x="4.7666%" y="181" width="0.0189%" height="15" fill="rgb(233,0,4)" fg:x="12105" fg:w="48"/><text x="5.0166%" y="191.50"></text></g><g><title>_int_malloc (31 samples, 0.01%)</title><rect x="4.7732%" y="165" width="0.0122%" height="15" fill="rgb(235,30,7)" fg:x="12122" fg:w="31"/><text x="5.0232%" y="175.50"></text></g><g><title>alloc::raw_vec::finish_grow (94 samples, 0.04%)</title><rect x="4.7551%" y="293" width="0.0370%" height="15" fill="rgb(250,79,13)" fg:x="12076" fg:w="94"/><text x="5.0051%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (106 samples, 0.04%)</title><rect x="4.7512%" y="341" width="0.0417%" height="15" fill="rgb(211,146,34)" fg:x="12066" fg:w="106"/><text x="5.0012%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (106 samples, 0.04%)</title><rect x="4.7512%" y="325" width="0.0417%" height="15" fill="rgb(228,22,38)" fg:x="12066" fg:w="106"/><text x="5.0012%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (106 samples, 0.04%)</title><rect x="4.7512%" y="309" width="0.0417%" height="15" fill="rgb(235,168,5)" fg:x="12066" fg:w="106"/><text x="5.0012%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (107 samples, 0.04%)</title><rect x="4.7512%" y="357" width="0.0421%" height="15" fill="rgb(221,155,16)" fg:x="12066" fg:w="107"/><text x="5.0012%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (134 samples, 0.05%)</title><rect x="4.7457%" y="373" width="0.0528%" height="15" fill="rgb(215,215,53)" fg:x="12052" fg:w="134"/><text x="4.9957%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (33 samples, 0.01%)</title><rect x="4.7996%" y="373" width="0.0130%" height="15" fill="rgb(223,4,10)" fg:x="12189" fg:w="33"/><text x="5.0496%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="4.7996%" y="357" width="0.0130%" height="15" fill="rgb(234,103,6)" fg:x="12189" fg:w="33"/><text x="5.0496%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (33 samples, 0.01%)</title><rect x="4.7996%" y="341" width="0.0130%" height="15" fill="rgb(227,97,0)" fg:x="12189" fg:w="33"/><text x="5.0496%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="4.7996%" y="325" width="0.0130%" height="15" fill="rgb(234,150,53)" fg:x="12189" fg:w="33"/><text x="5.0496%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (33 samples, 0.01%)</title><rect x="4.7996%" y="309" width="0.0130%" height="15" fill="rgb(228,201,54)" fg:x="12189" fg:w="33"/><text x="5.0496%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (33 samples, 0.01%)</title><rect x="4.7996%" y="293" width="0.0130%" height="15" fill="rgb(222,22,37)" fg:x="12189" fg:w="33"/><text x="5.0496%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (33 samples, 0.01%)</title><rect x="4.7996%" y="277" width="0.0130%" height="15" fill="rgb(237,53,32)" fg:x="12189" fg:w="33"/><text x="5.0496%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (33 samples, 0.01%)</title><rect x="4.7996%" y="261" width="0.0130%" height="15" fill="rgb(233,25,53)" fg:x="12189" fg:w="33"/><text x="5.0496%" y="271.50"></text></g><g><title>__rdl_dealloc (33 samples, 0.01%)</title><rect x="4.7996%" y="245" width="0.0130%" height="15" fill="rgb(210,40,34)" fg:x="12189" fg:w="33"/><text x="5.0496%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (33 samples, 0.01%)</title><rect x="4.7996%" y="229" width="0.0130%" height="15" fill="rgb(241,220,44)" fg:x="12189" fg:w="33"/><text x="5.0496%" y="239.50"></text></g><g><title>__GI___libc_free (33 samples, 0.01%)</title><rect x="4.7996%" y="213" width="0.0130%" height="15" fill="rgb(235,28,35)" fg:x="12189" fg:w="33"/><text x="5.0496%" y="223.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (32 samples, 0.01%)</title><rect x="4.8134%" y="373" width="0.0126%" height="15" fill="rgb(210,56,17)" fg:x="12224" fg:w="32"/><text x="5.0634%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.01%)</title><rect x="4.8134%" y="357" width="0.0126%" height="15" fill="rgb(224,130,29)" fg:x="12224" fg:w="32"/><text x="5.0634%" y="367.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (29 samples, 0.01%)</title><rect x="4.8260%" y="373" width="0.0114%" height="15" fill="rgb(235,212,8)" fg:x="12256" fg:w="29"/><text x="5.0760%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (29 samples, 0.01%)</title><rect x="4.8260%" y="357" width="0.0114%" height="15" fill="rgb(223,33,50)" fg:x="12256" fg:w="29"/><text x="5.0760%" y="367.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path_around_entities::{{closure}} (347 samples, 0.14%)</title><rect x="4.7232%" y="405" width="0.1366%" height="15" fill="rgb(219,149,13)" fg:x="11995" fg:w="347"/><text x="4.9732%" y="415.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_except_entities (337 samples, 0.13%)</title><rect x="4.7272%" y="389" width="0.1327%" height="15" fill="rgb(250,156,29)" fg:x="12005" fg:w="337"/><text x="4.9772%" y="399.50"></text></g><g><title>engine::engine::world::TileWeightMap::get (40 samples, 0.02%)</title><rect x="4.8441%" y="373" width="0.0158%" height="15" fill="rgb(216,193,19)" fg:x="12302" fg:w="40"/><text x="5.0941%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.02%)</title><rect x="4.8744%" y="357" width="0.0154%" height="15" fill="rgb(216,135,14)" fg:x="12379" fg:w="39"/><text x="5.1244%" y="367.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (110 samples, 0.04%)</title><rect x="4.8599%" y="405" width="0.0433%" height="15" fill="rgb(241,47,5)" fg:x="12342" fg:w="110"/><text x="5.1099%" y="415.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (106 samples, 0.04%)</title><rect x="4.8615%" y="389" width="0.0417%" height="15" fill="rgb(233,42,35)" fg:x="12346" fg:w="106"/><text x="5.1115%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (105 samples, 0.04%)</title><rect x="4.8618%" y="373" width="0.0413%" height="15" fill="rgb(231,13,6)" fg:x="12347" fg:w="105"/><text x="5.1118%" y="383.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (27 samples, 0.01%)</title><rect x="4.9099%" y="325" width="0.0106%" height="15" fill="rgb(207,181,40)" fg:x="12469" fg:w="27"/><text x="5.1599%" y="335.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (29 samples, 0.01%)</title><rect x="4.9095%" y="357" width="0.0114%" height="15" fill="rgb(254,173,49)" fg:x="12468" fg:w="29"/><text x="5.1595%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (29 samples, 0.01%)</title><rect x="4.9095%" y="341" width="0.0114%" height="15" fill="rgb(221,1,38)" fg:x="12468" fg:w="29"/><text x="5.1595%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (42 samples, 0.02%)</title><rect x="4.9091%" y="373" width="0.0165%" height="15" fill="rgb(206,124,46)" fg:x="12467" fg:w="42"/><text x="5.1591%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (31 samples, 0.01%)</title><rect x="4.9256%" y="357" width="0.0122%" height="15" fill="rgb(249,21,11)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (31 samples, 0.01%)</title><rect x="4.9256%" y="341" width="0.0122%" height="15" fill="rgb(222,201,40)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (31 samples, 0.01%)</title><rect x="4.9256%" y="325" width="0.0122%" height="15" fill="rgb(235,61,29)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (31 samples, 0.01%)</title><rect x="4.9256%" y="309" width="0.0122%" height="15" fill="rgb(219,207,3)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="319.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.01%)</title><rect x="4.9256%" y="293" width="0.0122%" height="15" fill="rgb(222,56,46)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="303.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (31 samples, 0.01%)</title><rect x="4.9256%" y="277" width="0.0122%" height="15" fill="rgb(239,76,54)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (31 samples, 0.01%)</title><rect x="4.9256%" y="261" width="0.0122%" height="15" fill="rgb(231,124,27)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="271.50"></text></g><g><title>alloc::alloc::realloc (31 samples, 0.01%)</title><rect x="4.9256%" y="245" width="0.0122%" height="15" fill="rgb(249,195,6)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="255.50"></text></g><g><title>__rdl_realloc (31 samples, 0.01%)</title><rect x="4.9256%" y="229" width="0.0122%" height="15" fill="rgb(237,174,47)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (31 samples, 0.01%)</title><rect x="4.9256%" y="213" width="0.0122%" height="15" fill="rgb(206,201,31)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="223.50"></text></g><g><title>__GI___libc_realloc (31 samples, 0.01%)</title><rect x="4.9256%" y="197" width="0.0122%" height="15" fill="rgb(231,57,52)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="207.50"></text></g><g><title>_int_realloc (31 samples, 0.01%)</title><rect x="4.9256%" y="181" width="0.0122%" height="15" fill="rgb(248,177,22)" fg:x="12509" fg:w="31"/><text x="5.1756%" y="191.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (84 samples, 0.03%)</title><rect x="4.9052%" y="405" width="0.0331%" height="15" fill="rgb(215,211,37)" fg:x="12457" fg:w="84"/><text x="5.1552%" y="415.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (82 samples, 0.03%)</title><rect x="4.9059%" y="389" width="0.0323%" height="15" fill="rgb(241,128,51)" fg:x="12459" fg:w="82"/><text x="5.1559%" y="399.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (32 samples, 0.01%)</title><rect x="4.9256%" y="373" width="0.0126%" height="15" fill="rgb(227,165,31)" fg:x="12509" fg:w="32"/><text x="5.1756%" y="383.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path_around_entities (720 samples, 0.28%)</title><rect x="4.6614%" y="437" width="0.2835%" height="15" fill="rgb(228,167,24)" fg:x="11838" fg:w="720"/><text x="4.9114%" y="447.50"></text></g><g><title>pathfinding::directed::astar::astar (717 samples, 0.28%)</title><rect x="4.6626%" y="421" width="0.2823%" height="15" fill="rgb(228,143,12)" fg:x="11841" fg:w="717"/><text x="4.9126%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.01%)</title><rect x="4.9737%" y="341" width="0.0122%" height="15" fill="rgb(249,149,8)" fg:x="12631" fg:w="31"/><text x="5.2237%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (33 samples, 0.01%)</title><rect x="4.9733%" y="405" width="0.0130%" height="15" fill="rgb(243,35,44)" fg:x="12630" fg:w="33"/><text x="5.2233%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (33 samples, 0.01%)</title><rect x="4.9733%" y="389" width="0.0130%" height="15" fill="rgb(246,89,9)" fg:x="12630" fg:w="33"/><text x="5.2233%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (33 samples, 0.01%)</title><rect x="4.9733%" y="373" width="0.0130%" height="15" fill="rgb(233,213,13)" fg:x="12630" fg:w="33"/><text x="5.2233%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (33 samples, 0.01%)</title><rect x="4.9733%" y="357" width="0.0130%" height="15" fill="rgb(233,141,41)" fg:x="12630" fg:w="33"/><text x="5.2233%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (45 samples, 0.02%)</title><rect x="4.9729%" y="421" width="0.0177%" height="15" fill="rgb(239,167,4)" fg:x="12629" fg:w="45"/><text x="5.2229%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (36 samples, 0.01%)</title><rect x="4.9945%" y="421" width="0.0142%" height="15" fill="rgb(209,217,16)" fg:x="12684" fg:w="36"/><text x="5.2445%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="4.9945%" y="405" width="0.0142%" height="15" fill="rgb(219,88,35)" fg:x="12684" fg:w="36"/><text x="5.2445%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (36 samples, 0.01%)</title><rect x="4.9945%" y="389" width="0.0142%" height="15" fill="rgb(220,193,23)" fg:x="12684" fg:w="36"/><text x="5.2445%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="4.9945%" y="373" width="0.0142%" height="15" fill="rgb(230,90,52)" fg:x="12684" fg:w="36"/><text x="5.2445%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (36 samples, 0.01%)</title><rect x="4.9945%" y="357" width="0.0142%" height="15" fill="rgb(252,106,19)" fg:x="12684" fg:w="36"/><text x="5.2445%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (36 samples, 0.01%)</title><rect x="4.9945%" y="341" width="0.0142%" height="15" fill="rgb(206,74,20)" fg:x="12684" fg:w="36"/><text x="5.2445%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (36 samples, 0.01%)</title><rect x="4.9945%" y="325" width="0.0142%" height="15" fill="rgb(230,138,44)" fg:x="12684" fg:w="36"/><text x="5.2445%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (36 samples, 0.01%)</title><rect x="4.9945%" y="309" width="0.0142%" height="15" fill="rgb(235,182,43)" fg:x="12684" fg:w="36"/><text x="5.2445%" y="319.50"></text></g><g><title>__rdl_dealloc (36 samples, 0.01%)</title><rect x="4.9945%" y="293" width="0.0142%" height="15" fill="rgb(242,16,51)" fg:x="12684" fg:w="36"/><text x="5.2445%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (36 samples, 0.01%)</title><rect x="4.9945%" y="277" width="0.0142%" height="15" fill="rgb(248,9,4)" fg:x="12684" fg:w="36"/><text x="5.2445%" y="287.50"></text></g><g><title>__GI___libc_free (36 samples, 0.01%)</title><rect x="4.9945%" y="261" width="0.0142%" height="15" fill="rgb(210,31,22)" fg:x="12684" fg:w="36"/><text x="5.2445%" y="271.50"></text></g><g><title>_int_free (34 samples, 0.01%)</title><rect x="4.9953%" y="245" width="0.0134%" height="15" fill="rgb(239,54,39)" fg:x="12686" fg:w="34"/><text x="5.2453%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (79 samples, 0.03%)</title><rect x="5.0221%" y="309" width="0.0311%" height="15" fill="rgb(230,99,41)" fg:x="12754" fg:w="79"/><text x="5.2721%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (79 samples, 0.03%)</title><rect x="5.0221%" y="293" width="0.0311%" height="15" fill="rgb(253,106,12)" fg:x="12754" fg:w="79"/><text x="5.2721%" y="303.50"></text></g><g><title>alloc::alloc::realloc (79 samples, 0.03%)</title><rect x="5.0221%" y="277" width="0.0311%" height="15" fill="rgb(213,46,41)" fg:x="12754" fg:w="79"/><text x="5.2721%" y="287.50"></text></g><g><title>__rdl_realloc (79 samples, 0.03%)</title><rect x="5.0221%" y="261" width="0.0311%" height="15" fill="rgb(215,133,35)" fg:x="12754" fg:w="79"/><text x="5.2721%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (79 samples, 0.03%)</title><rect x="5.0221%" y="245" width="0.0311%" height="15" fill="rgb(213,28,5)" fg:x="12754" fg:w="79"/><text x="5.2721%" y="255.50"></text></g><g><title>__GI___libc_realloc (78 samples, 0.03%)</title><rect x="5.0225%" y="229" width="0.0307%" height="15" fill="rgb(215,77,49)" fg:x="12755" fg:w="78"/><text x="5.2725%" y="239.50"></text></g><g><title>_int_realloc (47 samples, 0.02%)</title><rect x="5.0347%" y="213" width="0.0185%" height="15" fill="rgb(248,100,22)" fg:x="12786" fg:w="47"/><text x="5.2847%" y="223.50"></text></g><g><title>_int_malloc (29 samples, 0.01%)</title><rect x="5.0418%" y="197" width="0.0114%" height="15" fill="rgb(208,67,9)" fg:x="12804" fg:w="29"/><text x="5.2918%" y="207.50"></text></g><g><title>alloc::raw_vec::finish_grow (102 samples, 0.04%)</title><rect x="5.0201%" y="325" width="0.0402%" height="15" fill="rgb(219,133,21)" fg:x="12749" fg:w="102"/><text x="5.2701%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (118 samples, 0.05%)</title><rect x="5.0166%" y="341" width="0.0465%" height="15" fill="rgb(246,46,29)" fg:x="12740" fg:w="118"/><text x="5.2666%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (119 samples, 0.05%)</title><rect x="5.0166%" y="389" width="0.0469%" height="15" fill="rgb(246,185,52)" fg:x="12740" fg:w="119"/><text x="5.2666%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (119 samples, 0.05%)</title><rect x="5.0166%" y="373" width="0.0469%" height="15" fill="rgb(252,136,11)" fg:x="12740" fg:w="119"/><text x="5.2666%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (119 samples, 0.05%)</title><rect x="5.0166%" y="357" width="0.0469%" height="15" fill="rgb(219,138,53)" fg:x="12740" fg:w="119"/><text x="5.2666%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (143 samples, 0.06%)</title><rect x="5.0127%" y="405" width="0.0563%" height="15" fill="rgb(211,51,23)" fg:x="12730" fg:w="143"/><text x="5.2627%" y="415.50"></text></g><g><title>engine::engine::world::Position::neighbors (179 samples, 0.07%)</title><rect x="5.0087%" y="421" width="0.0705%" height="15" fill="rgb(247,221,28)" fg:x="12720" fg:w="179"/><text x="5.2587%" y="431.50"></text></g><g><title>engine::engine::actor::pathfinding::nearby_entities (363 samples, 0.14%)</title><rect x="4.9449%" y="437" width="0.1429%" height="15" fill="rgb(251,222,45)" fg:x="12558" fg:w="363"/><text x="5.1949%" y="447.50"></text></g><g><title>engine::engine::actor::pathfinding::local_avoidance (1,566 samples, 0.62%)</title><rect x="4.4720%" y="453" width="0.6166%" height="15" fill="rgb(217,162,53)" fg:x="11357" fg:w="1566"/><text x="4.7220%" y="463.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (363 samples, 0.14%)</title><rect x="5.0898%" y="389" width="0.1429%" height="15" fill="rgb(229,93,14)" fg:x="12926" fg:w="363"/><text x="5.3398%" y="399.50"></text></g><g><title>alloc::alloc::exchange_malloc (356 samples, 0.14%)</title><rect x="5.0926%" y="373" width="0.1402%" height="15" fill="rgb(209,67,49)" fg:x="12933" fg:w="356"/><text x="5.3426%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (356 samples, 0.14%)</title><rect x="5.0926%" y="357" width="0.1402%" height="15" fill="rgb(213,87,29)" fg:x="12933" fg:w="356"/><text x="5.3426%" y="367.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (356 samples, 0.14%)</title><rect x="5.0926%" y="341" width="0.1402%" height="15" fill="rgb(205,151,52)" fg:x="12933" fg:w="356"/><text x="5.3426%" y="351.50"></text></g><g><title>alloc::alloc::alloc (356 samples, 0.14%)</title><rect x="5.0926%" y="325" width="0.1402%" height="15" fill="rgb(253,215,39)" fg:x="12933" fg:w="356"/><text x="5.3426%" y="335.50"></text></g><g><title>__rdl_alloc (356 samples, 0.14%)</title><rect x="5.0926%" y="309" width="0.1402%" height="15" fill="rgb(221,220,41)" fg:x="12933" fg:w="356"/><text x="5.3426%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (356 samples, 0.14%)</title><rect x="5.0926%" y="293" width="0.1402%" height="15" fill="rgb(218,133,21)" fg:x="12933" fg:w="356"/><text x="5.3426%" y="303.50"></text></g><g><title>__GI___libc_malloc (356 samples, 0.14%)</title><rect x="5.0926%" y="277" width="0.1402%" height="15" fill="rgb(221,193,43)" fg:x="12933" fg:w="356"/><text x="5.3426%" y="287.50"></text></g><g><title>_int_malloc (284 samples, 0.11%)</title><rect x="5.1209%" y="261" width="0.1118%" height="15" fill="rgb(240,128,52)" fg:x="13005" fg:w="284"/><text x="5.3709%" y="271.50"></text></g><g><title>bevy_ecs::system::commands::EntityCommands::insert (388 samples, 0.15%)</title><rect x="5.0898%" y="437" width="0.1528%" height="15" fill="rgb(253,114,12)" fg:x="12926" fg:w="388"/><text x="5.3398%" y="447.50"></text></g><g><title>bevy_ecs::system::commands::Commands::add (388 samples, 0.15%)</title><rect x="5.0898%" y="421" width="0.1528%" height="15" fill="rgb(215,223,47)" fg:x="12926" fg:w="388"/><text x="5.3398%" y="431.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push (388 samples, 0.15%)</title><rect x="5.0898%" y="405" width="0.1528%" height="15" fill="rgb(248,225,23)" fg:x="12926" fg:w="388"/><text x="5.3398%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (88 samples, 0.03%)</title><rect x="5.2627%" y="421" width="0.0347%" height="15" fill="rgb(250,108,0)" fg:x="13365" fg:w="88"/><text x="5.5127%" y="431.50"></text></g><g><title>core::ptr::read (39 samples, 0.02%)</title><rect x="5.2820%" y="405" width="0.0154%" height="15" fill="rgb(228,208,7)" fg:x="13414" fg:w="39"/><text x="5.5320%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (83 samples, 0.03%)</title><rect x="5.3249%" y="405" width="0.0327%" height="15" fill="rgb(244,45,10)" fg:x="13523" fg:w="83"/><text x="5.5749%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (83 samples, 0.03%)</title><rect x="5.5045%" y="213" width="0.0327%" height="15" fill="rgb(207,125,25)" fg:x="13979" fg:w="83"/><text x="5.7545%" y="223.50"></text></g><g><title>_int_free (104 samples, 0.04%)</title><rect x="5.5372%" y="213" width="0.0410%" height="15" fill="rgb(210,195,18)" fg:x="14062" fg:w="104"/><text x="5.7872%" y="223.50"></text></g><g><title>malloc_consolidate (48 samples, 0.02%)</title><rect x="5.8274%" y="197" width="0.0189%" height="15" fill="rgb(249,80,12)" fg:x="14799" fg:w="48"/><text x="6.0774%" y="207.50"></text></g><g><title>_int_malloc (737 samples, 0.29%)</title><rect x="5.5781%" y="213" width="0.2902%" height="15" fill="rgb(221,65,9)" fg:x="14166" fg:w="737"/><text x="5.8281%" y="223.50"></text></g><g><title>unlink_chunk.constprop.0 (56 samples, 0.02%)</title><rect x="5.8463%" y="197" width="0.0221%" height="15" fill="rgb(235,49,36)" fg:x="14847" fg:w="56"/><text x="6.0963%" y="207.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,233 samples, 0.49%)</title><rect x="5.3844%" y="325" width="0.4855%" height="15" fill="rgb(225,32,20)" fg:x="13674" fg:w="1233"/><text x="5.6344%" y="335.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,233 samples, 0.49%)</title><rect x="5.3844%" y="309" width="0.4855%" height="15" fill="rgb(215,141,46)" fg:x="13674" fg:w="1233"/><text x="5.6344%" y="319.50"></text></g><g><title>alloc::alloc::realloc (1,233 samples, 0.49%)</title><rect x="5.3844%" y="293" width="0.4855%" height="15" fill="rgb(250,160,47)" fg:x="13674" fg:w="1233"/><text x="5.6344%" y="303.50"></text></g><g><title>__rdl_realloc (1,233 samples, 0.49%)</title><rect x="5.3844%" y="277" width="0.4855%" height="15" fill="rgb(216,222,40)" fg:x="13674" fg:w="1233"/><text x="5.6344%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,233 samples, 0.49%)</title><rect x="5.3844%" y="261" width="0.4855%" height="15" fill="rgb(234,217,39)" fg:x="13674" fg:w="1233"/><text x="5.6344%" y="271.50"></text></g><g><title>__GI___libc_realloc (1,231 samples, 0.48%)</title><rect x="5.3852%" y="245" width="0.4847%" height="15" fill="rgb(207,178,40)" fg:x="13676" fg:w="1231"/><text x="5.6352%" y="255.50"></text></g><g><title>_int_realloc (990 samples, 0.39%)</title><rect x="5.4801%" y="229" width="0.3898%" height="15" fill="rgb(221,136,13)" fg:x="13917" fg:w="990"/><text x="5.7301%" y="239.50"></text></g><g><title>__GI___libc_malloc (31 samples, 0.01%)</title><rect x="5.8699%" y="325" width="0.0122%" height="15" fill="rgb(249,199,10)" fg:x="14907" fg:w="31"/><text x="6.1199%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,286 samples, 0.51%)</title><rect x="5.3773%" y="341" width="0.5064%" height="15" fill="rgb(249,222,13)" fg:x="13656" fg:w="1286"/><text x="5.6273%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,347 samples, 0.53%)</title><rect x="5.3639%" y="357" width="0.5304%" height="15" fill="rgb(244,185,38)" fg:x="13622" fg:w="1347"/><text x="5.6139%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,366 samples, 0.54%)</title><rect x="5.3576%" y="405" width="0.5379%" height="15" fill="rgb(236,202,9)" fg:x="13606" fg:w="1366"/><text x="5.6076%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,352 samples, 0.53%)</title><rect x="5.3631%" y="389" width="0.5324%" height="15" fill="rgb(250,229,37)" fg:x="13620" fg:w="1352"/><text x="5.6131%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,350 samples, 0.53%)</title><rect x="5.3639%" y="373" width="0.5316%" height="15" fill="rgb(206,174,23)" fg:x="13622" fg:w="1350"/><text x="5.6139%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (1,720 samples, 0.68%)</title><rect x="5.3037%" y="421" width="0.6773%" height="15" fill="rgb(211,33,43)" fg:x="13469" fg:w="1720"/><text x="5.5537%" y="431.50"></text></g><g><title>core::ptr::write (201 samples, 0.08%)</title><rect x="5.9018%" y="405" width="0.0791%" height="15" fill="rgb(245,58,50)" fg:x="14988" fg:w="201"/><text x="6.1518%" y="415.50"></text></g><g><title>core::intrinsics::copy (67 samples, 0.03%)</title><rect x="5.9825%" y="405" width="0.0264%" height="15" fill="rgb(244,68,36)" fg:x="15193" fg:w="67"/><text x="6.2325%" y="415.50"></text></g><g><title>__memmove_avx_unaligned_erms (66 samples, 0.03%)</title><rect x="5.9829%" y="389" width="0.0260%" height="15" fill="rgb(232,229,15)" fg:x="15194" fg:w="66"/><text x="6.2329%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (72 samples, 0.03%)</title><rect x="5.9809%" y="421" width="0.0284%" height="15" fill="rgb(254,30,23)" fg:x="15189" fg:w="72"/><text x="6.2309%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (69 samples, 0.03%)</title><rect x="6.0152%" y="421" width="0.0272%" height="15" fill="rgb(235,160,14)" fg:x="15276" fg:w="69"/><text x="6.2652%" y="431.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.03%)</title><rect x="6.0152%" y="405" width="0.0272%" height="15" fill="rgb(212,155,44)" fg:x="15276" fg:w="69"/><text x="6.2652%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (69 samples, 0.03%)</title><rect x="6.0152%" y="389" width="0.0272%" height="15" fill="rgb(226,2,50)" fg:x="15276" fg:w="69"/><text x="6.2652%" y="399.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.03%)</title><rect x="6.0152%" y="373" width="0.0272%" height="15" fill="rgb(234,177,6)" fg:x="15276" fg:w="69"/><text x="6.2652%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (69 samples, 0.03%)</title><rect x="6.0152%" y="357" width="0.0272%" height="15" fill="rgb(217,24,9)" fg:x="15276" fg:w="69"/><text x="6.2652%" y="367.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (69 samples, 0.03%)</title><rect x="6.0152%" y="341" width="0.0272%" height="15" fill="rgb(220,13,46)" fg:x="15276" fg:w="69"/><text x="6.2652%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (69 samples, 0.03%)</title><rect x="6.0152%" y="325" width="0.0272%" height="15" fill="rgb(239,221,27)" fg:x="15276" fg:w="69"/><text x="6.2652%" y="335.50"></text></g><g><title>alloc::alloc::dealloc (69 samples, 0.03%)</title><rect x="6.0152%" y="309" width="0.0272%" height="15" fill="rgb(222,198,25)" fg:x="15276" fg:w="69"/><text x="6.2652%" y="319.50"></text></g><g><title>__rdl_dealloc (69 samples, 0.03%)</title><rect x="6.0152%" y="293" width="0.0272%" height="15" fill="rgb(211,99,13)" fg:x="15276" fg:w="69"/><text x="6.2652%" y="303.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (69 samples, 0.03%)</title><rect x="6.0152%" y="277" width="0.0272%" height="15" fill="rgb(232,111,31)" fg:x="15276" fg:w="69"/><text x="6.2652%" y="287.50"></text></g><g><title>__GI___libc_free (69 samples, 0.03%)</title><rect x="6.0152%" y="261" width="0.0272%" height="15" fill="rgb(245,82,37)" fg:x="15276" fg:w="69"/><text x="6.2652%" y="271.50"></text></g><g><title>_int_free (59 samples, 0.02%)</title><rect x="6.0191%" y="245" width="0.0232%" height="15" fill="rgb(227,149,46)" fg:x="15286" fg:w="59"/><text x="6.2691%" y="255.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (70 samples, 0.03%)</title><rect x="6.4944%" y="405" width="0.0276%" height="15" fill="rgb(218,36,50)" fg:x="16493" fg:w="70"/><text x="6.7444%" y="415.50"></text></g><g><title>core::ptr::read (339 samples, 0.13%)</title><rect x="6.5759%" y="389" width="0.1335%" height="15" fill="rgb(226,80,48)" fg:x="16700" fg:w="339"/><text x="6.8259%" y="399.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (821 samples, 0.32%)</title><rect x="6.5220%" y="405" width="0.3233%" height="15" fill="rgb(238,224,15)" fg:x="16563" fg:w="821"/><text x="6.7720%" y="415.50"></text></g><g><title>pathfinding::directed::astar::astar (345 samples, 0.14%)</title><rect x="6.7094%" y="389" width="0.1358%" height="15" fill="rgb(241,136,10)" fg:x="17039" fg:w="345"/><text x="6.9594%" y="399.50"></text></g><g><title>&lt;i64 as core::ops::arith::Add&gt;::add (65 samples, 0.03%)</title><rect x="6.8453%" y="405" width="0.0256%" height="15" fill="rgb(208,32,45)" fg:x="17384" fg:w="65"/><text x="7.0953%" y="415.50"></text></g><g><title>__GI___libc_free (308 samples, 0.12%)</title><rect x="6.8720%" y="405" width="0.1213%" height="15" fill="rgb(207,135,9)" fg:x="17452" fg:w="308"/><text x="7.1220%" y="415.50"></text></g><g><title>_int_free (292 samples, 0.11%)</title><rect x="6.8783%" y="389" width="0.1150%" height="15" fill="rgb(206,86,44)" fg:x="17468" fg:w="292"/><text x="7.1283%" y="399.50"></text></g><g><title>unlink_chunk.constprop.0 (26 samples, 0.01%)</title><rect x="6.9831%" y="373" width="0.0102%" height="15" fill="rgb(245,177,15)" fg:x="17734" fg:w="26"/><text x="7.2331%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::pop (82 samples, 0.03%)</title><rect x="6.9957%" y="389" width="0.0323%" height="15" fill="rgb(206,64,50)" fg:x="17766" fg:w="82"/><text x="7.2457%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (44 samples, 0.02%)</title><rect x="7.0106%" y="373" width="0.0173%" height="15" fill="rgb(234,36,40)" fg:x="17804" fg:w="44"/><text x="7.2606%" y="383.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (346 samples, 0.14%)</title><rect x="7.0744%" y="357" width="0.1362%" height="15" fill="rgb(213,64,8)" fg:x="17966" fg:w="346"/><text x="7.3244%" y="367.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (158 samples, 0.06%)</title><rect x="7.3638%" y="341" width="0.0622%" height="15" fill="rgb(210,75,36)" fg:x="18701" fg:w="158"/><text x="7.6138%" y="351.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (708 samples, 0.28%)</title><rect x="7.4674%" y="325" width="0.2788%" height="15" fill="rgb(229,88,21)" fg:x="18964" fg:w="708"/><text x="7.7174%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (225 samples, 0.09%)</title><rect x="7.7462%" y="325" width="0.0886%" height="15" fill="rgb(252,204,47)" fg:x="19672" fg:w="225"/><text x="7.9962%" y="335.50"></text></g><g><title>core::cmp::PartialOrd::le (225 samples, 0.09%)</title><rect x="7.7462%" y="309" width="0.0886%" height="15" fill="rgb(208,77,27)" fg:x="19672" fg:w="225"/><text x="7.9962%" y="319.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (177 samples, 0.07%)</title><rect x="7.7651%" y="293" width="0.0697%" height="15" fill="rgb(221,76,26)" fg:x="19720" fg:w="177"/><text x="8.0151%" y="303.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (177 samples, 0.07%)</title><rect x="7.7651%" y="277" width="0.0697%" height="15" fill="rgb(225,139,18)" fg:x="19720" fg:w="177"/><text x="8.0151%" y="287.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (117 samples, 0.05%)</title><rect x="7.7887%" y="261" width="0.0461%" height="15" fill="rgb(230,137,11)" fg:x="19780" fg:w="117"/><text x="8.0387%" y="271.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (1,103 samples, 0.43%)</title><rect x="7.4261%" y="341" width="0.4343%" height="15" fill="rgb(212,28,1)" fg:x="18859" fg:w="1103"/><text x="7.6761%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (65 samples, 0.03%)</title><rect x="7.8348%" y="325" width="0.0256%" height="15" fill="rgb(248,164,17)" fg:x="19897" fg:w="65"/><text x="8.0848%" y="335.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (65 samples, 0.03%)</title><rect x="7.8348%" y="309" width="0.0256%" height="15" fill="rgb(222,171,42)" fg:x="19897" fg:w="65"/><text x="8.0848%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (65 samples, 0.03%)</title><rect x="7.8348%" y="293" width="0.0256%" height="15" fill="rgb(243,84,45)" fg:x="19897" fg:w="65"/><text x="8.0848%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,025 samples, 0.40%)</title><rect x="7.8604%" y="325" width="0.4036%" height="15" fill="rgb(252,49,23)" fg:x="19962" fg:w="1025"/><text x="8.1104%" y="335.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (1,241 samples, 0.49%)</title><rect x="7.8604%" y="341" width="0.4887%" height="15" fill="rgb(215,19,7)" fg:x="19962" fg:w="1241"/><text x="8.1104%" y="351.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (216 samples, 0.09%)</title><rect x="8.2640%" y="325" width="0.0851%" height="15" fill="rgb(238,81,41)" fg:x="20987" fg:w="216"/><text x="8.5140%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (216 samples, 0.09%)</title><rect x="8.2640%" y="309" width="0.0851%" height="15" fill="rgb(210,199,37)" fg:x="20987" fg:w="216"/><text x="8.5140%" y="319.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (124 samples, 0.05%)</title><rect x="8.3491%" y="341" width="0.0488%" height="15" fill="rgb(244,192,49)" fg:x="21203" fg:w="124"/><text x="8.5991%" y="351.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (1,315 samples, 0.52%)</title><rect x="8.3979%" y="341" width="0.5178%" height="15" fill="rgb(226,211,11)" fg:x="21327" fg:w="1315"/><text x="8.6479%" y="351.50"></text></g><g><title>core::cmp::PartialOrd::le (1,315 samples, 0.52%)</title><rect x="8.3979%" y="325" width="0.5178%" height="15" fill="rgb(236,162,54)" fg:x="21327" fg:w="1315"/><text x="8.6479%" y="335.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (1,013 samples, 0.40%)</title><rect x="8.5168%" y="309" width="0.3989%" height="15" fill="rgb(220,229,9)" fg:x="21629" fg:w="1013"/><text x="8.7668%" y="319.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (762 samples, 0.30%)</title><rect x="8.6156%" y="293" width="0.3001%" height="15" fill="rgb(250,87,22)" fg:x="21880" fg:w="762"/><text x="8.8656%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (309 samples, 0.12%)</title><rect x="8.7940%" y="277" width="0.1217%" height="15" fill="rgb(239,43,17)" fg:x="22333" fg:w="309"/><text x="9.0440%" y="287.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (139 samples, 0.05%)</title><rect x="8.9157%" y="293" width="0.0547%" height="15" fill="rgb(231,177,25)" fg:x="22642" fg:w="139"/><text x="9.1657%" y="303.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (4,476 samples, 1.76%)</title><rect x="7.2107%" y="357" width="1.7625%" height="15" fill="rgb(219,179,1)" fg:x="18312" fg:w="4476"/><text x="7.4607%" y="367.50"></text></g><g><title>core::mem::drop (146 samples, 0.06%)</title><rect x="8.9157%" y="341" width="0.0575%" height="15" fill="rgb(238,219,53)" fg:x="22642" fg:w="146"/><text x="9.1657%" y="351.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (146 samples, 0.06%)</title><rect x="8.9157%" y="325" width="0.0575%" height="15" fill="rgb(232,167,36)" fg:x="22642" fg:w="146"/><text x="9.1657%" y="335.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (146 samples, 0.06%)</title><rect x="8.9157%" y="309" width="0.0575%" height="15" fill="rgb(244,19,51)" fg:x="22642" fg:w="146"/><text x="9.1657%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (44 samples, 0.02%)</title><rect x="8.9732%" y="325" width="0.0173%" height="15" fill="rgb(224,6,22)" fg:x="22788" fg:w="44"/><text x="9.2232%" y="335.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (5,105 samples, 2.01%)</title><rect x="6.9945%" y="405" width="2.0102%" height="15" fill="rgb(224,145,5)" fg:x="17763" fg:w="5105"/><text x="7.2445%" y="415.50">a..</text></g><g><title>core::option::Option&lt;T&gt;::map (5,020 samples, 1.98%)</title><rect x="7.0280%" y="389" width="1.9767%" height="15" fill="rgb(234,130,49)" fg:x="17848" fg:w="5020"/><text x="7.2780%" y="399.50">c..</text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (4,965 samples, 1.96%)</title><rect x="7.0496%" y="373" width="1.9551%" height="15" fill="rgb(254,6,2)" fg:x="17903" fg:w="4965"/><text x="7.2996%" y="383.50">a..</text></g><g><title>core::mem::swap (80 samples, 0.03%)</title><rect x="8.9732%" y="357" width="0.0315%" height="15" fill="rgb(208,96,46)" fg:x="22788" fg:w="80"/><text x="9.2232%" y="367.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (80 samples, 0.03%)</title><rect x="8.9732%" y="341" width="0.0315%" height="15" fill="rgb(239,3,39)" fg:x="22788" fg:w="80"/><text x="9.2232%" y="351.50"></text></g><g><title>core::ptr::write (36 samples, 0.01%)</title><rect x="8.9905%" y="325" width="0.0142%" height="15" fill="rgb(233,210,1)" fg:x="22832" fg:w="36"/><text x="9.2405%" y="335.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::len (27 samples, 0.01%)</title><rect x="9.0775%" y="389" width="0.0106%" height="15" fill="rgb(244,137,37)" fg:x="23053" fg:w="27"/><text x="9.3275%" y="399.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (1,196 samples, 0.47%)</title><rect x="9.0882%" y="389" width="0.4709%" height="15" fill="rgb(240,136,2)" fg:x="23080" fg:w="1196"/><text x="9.3382%" y="399.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::get (451 samples, 0.18%)</title><rect x="10.0363%" y="373" width="0.1776%" height="15" fill="rgb(239,18,37)" fg:x="25488" fg:w="451"/><text x="10.2863%" y="383.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (451 samples, 0.18%)</title><rect x="10.0363%" y="357" width="0.1776%" height="15" fill="rgb(218,185,22)" fg:x="25488" fg:w="451"/><text x="10.2863%" y="367.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (451 samples, 0.18%)</title><rect x="10.0363%" y="341" width="0.1776%" height="15" fill="rgb(225,218,4)" fg:x="25488" fg:w="451"/><text x="10.2863%" y="351.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (451 samples, 0.18%)</title><rect x="10.0363%" y="325" width="0.1776%" height="15" fill="rgb(230,182,32)" fg:x="25488" fg:w="451"/><text x="10.2863%" y="335.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (451 samples, 0.18%)</title><rect x="10.0363%" y="309" width="0.1776%" height="15" fill="rgb(242,56,43)" fg:x="25488" fg:w="451"/><text x="10.2863%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,235 samples, 0.49%)</title><rect x="10.2171%" y="357" width="0.4863%" height="15" fill="rgb(233,99,24)" fg:x="25947" fg:w="1235"/><text x="10.4671%" y="367.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (1,637 samples, 0.64%)</title><rect x="10.2139%" y="373" width="0.6446%" height="15" fill="rgb(234,209,42)" fg:x="25939" fg:w="1637"/><text x="10.4639%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (394 samples, 0.16%)</title><rect x="10.7034%" y="357" width="0.1551%" height="15" fill="rgb(227,7,12)" fg:x="27182" fg:w="394"/><text x="10.9534%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (394 samples, 0.16%)</title><rect x="10.7034%" y="341" width="0.1551%" height="15" fill="rgb(245,203,43)" fg:x="27182" fg:w="394"/><text x="10.9534%" y="351.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (3,749 samples, 1.48%)</title><rect x="10.8585%" y="373" width="1.4762%" height="15" fill="rgb(238,205,33)" fg:x="27576" fg:w="3749"/><text x="11.1085%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (3,916 samples, 1.54%)</title><rect x="12.3348%" y="373" width="1.5420%" height="15" fill="rgb(231,56,7)" fg:x="31325" fg:w="3916"/><text x="12.5848%" y="383.50"></text></g><g><title>core::cmp::PartialOrd::le (3,916 samples, 1.54%)</title><rect x="12.3348%" y="357" width="1.5420%" height="15" fill="rgb(244,186,29)" fg:x="31325" fg:w="3916"/><text x="12.5848%" y="367.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (3,173 samples, 1.25%)</title><rect x="12.6273%" y="341" width="1.2494%" height="15" fill="rgb(234,111,31)" fg:x="32068" fg:w="3173"/><text x="12.8773%" y="351.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (3,173 samples, 1.25%)</title><rect x="12.6273%" y="325" width="1.2494%" height="15" fill="rgb(241,149,10)" fg:x="32068" fg:w="3173"/><text x="12.8773%" y="335.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (1,081 samples, 0.43%)</title><rect x="13.4511%" y="309" width="0.4257%" height="15" fill="rgb(249,206,44)" fg:x="34160" fg:w="1081"/><text x="13.7011%" y="319.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (12,000 samples, 4.73%)</title><rect x="9.5591%" y="389" width="4.7252%" height="15" fill="rgb(251,153,30)" fg:x="24276" fg:w="12000"/><text x="9.8091%" y="399.50">alloc:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (1,035 samples, 0.41%)</title><rect x="13.8768%" y="373" width="0.4075%" height="15" fill="rgb(239,152,38)" fg:x="35241" fg:w="1035"/><text x="14.1268%" y="383.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (1,035 samples, 0.41%)</title><rect x="13.8768%" y="357" width="0.4075%" height="15" fill="rgb(249,139,47)" fg:x="35241" fg:w="1035"/><text x="14.1268%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (1,035 samples, 0.41%)</title><rect x="13.8768%" y="341" width="0.4075%" height="15" fill="rgb(244,64,35)" fg:x="35241" fg:w="1035"/><text x="14.1268%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (82 samples, 0.03%)</title><rect x="14.3678%" y="373" width="0.0323%" height="15" fill="rgb(216,46,15)" fg:x="36488" fg:w="82"/><text x="14.6178%" y="383.50"></text></g><g><title>__memmove_avx_unaligned_erms (427 samples, 0.17%)</title><rect x="14.6387%" y="181" width="0.1681%" height="15" fill="rgb(250,74,19)" fg:x="37176" fg:w="427"/><text x="14.8887%" y="191.50"></text></g><g><title>_int_free (269 samples, 0.11%)</title><rect x="14.8068%" y="181" width="0.1059%" height="15" fill="rgb(249,42,33)" fg:x="37603" fg:w="269"/><text x="15.0568%" y="191.50"></text></g><g><title>unlink_chunk.constprop.0 (42 samples, 0.02%)</title><rect x="14.8962%" y="165" width="0.0165%" height="15" fill="rgb(242,149,17)" fg:x="37830" fg:w="42"/><text x="15.1462%" y="175.50"></text></g><g><title>_int_malloc (902 samples, 0.36%)</title><rect x="14.9128%" y="181" width="0.3552%" height="15" fill="rgb(244,29,21)" fg:x="37872" fg:w="902"/><text x="15.1628%" y="191.50"></text></g><g><title>unlink_chunk.constprop.0 (99 samples, 0.04%)</title><rect x="15.2290%" y="165" width="0.0390%" height="15" fill="rgb(220,130,37)" fg:x="38675" fg:w="99"/><text x="15.4790%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,140 samples, 0.84%)</title><rect x="14.4280%" y="293" width="0.8427%" height="15" fill="rgb(211,67,2)" fg:x="36641" fg:w="2140"/><text x="14.6780%" y="303.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,140 samples, 0.84%)</title><rect x="14.4280%" y="277" width="0.8427%" height="15" fill="rgb(235,68,52)" fg:x="36641" fg:w="2140"/><text x="14.6780%" y="287.50"></text></g><g><title>alloc::alloc::realloc (2,139 samples, 0.84%)</title><rect x="14.4284%" y="261" width="0.8423%" height="15" fill="rgb(246,142,3)" fg:x="36642" fg:w="2139"/><text x="14.6784%" y="271.50"></text></g><g><title>__rdl_realloc (2,139 samples, 0.84%)</title><rect x="14.4284%" y="245" width="0.8423%" height="15" fill="rgb(241,25,7)" fg:x="36642" fg:w="2139"/><text x="14.6784%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2,139 samples, 0.84%)</title><rect x="14.4284%" y="229" width="0.8423%" height="15" fill="rgb(242,119,39)" fg:x="36642" fg:w="2139"/><text x="14.6784%" y="239.50"></text></g><g><title>__GI___libc_realloc (2,134 samples, 0.84%)</title><rect x="14.4304%" y="213" width="0.8403%" height="15" fill="rgb(241,98,45)" fg:x="36647" fg:w="2134"/><text x="14.6804%" y="223.50"></text></g><g><title>_int_realloc (1,722 samples, 0.68%)</title><rect x="14.5926%" y="197" width="0.6781%" height="15" fill="rgb(254,28,30)" fg:x="37059" fg:w="1722"/><text x="14.8426%" y="207.50"></text></g><g><title>__GI___libc_malloc (31 samples, 0.01%)</title><rect x="15.2707%" y="293" width="0.0122%" height="15" fill="rgb(241,142,54)" fg:x="38781" fg:w="31"/><text x="15.5207%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,197 samples, 0.87%)</title><rect x="14.4198%" y="309" width="0.8651%" height="15" fill="rgb(222,85,15)" fg:x="36620" fg:w="2197"/><text x="14.6698%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (2,270 samples, 0.89%)</title><rect x="14.4036%" y="325" width="0.8939%" height="15" fill="rgb(210,85,47)" fg:x="36579" fg:w="2270"/><text x="14.6536%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (2,296 samples, 0.90%)</title><rect x="14.4001%" y="373" width="0.9041%" height="15" fill="rgb(224,206,25)" fg:x="36570" fg:w="2296"/><text x="14.6501%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (2,296 samples, 0.90%)</title><rect x="14.4001%" y="357" width="0.9041%" height="15" fill="rgb(243,201,19)" fg:x="36570" fg:w="2296"/><text x="14.6501%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2,287 samples, 0.90%)</title><rect x="14.4036%" y="341" width="0.9005%" height="15" fill="rgb(236,59,4)" fg:x="36579" fg:w="2287"/><text x="14.6536%" y="351.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (20,823 samples, 8.20%)</title><rect x="9.0047%" y="405" width="8.1994%" height="15" fill="rgb(254,179,45)" fg:x="22868" fg:w="20823"/><text x="9.2547%" y="415.50">alloc::coll..</text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (7,415 samples, 2.92%)</title><rect x="14.2843%" y="389" width="2.9198%" height="15" fill="rgb(226,14,10)" fg:x="36276" fg:w="7415"/><text x="14.5343%" y="399.50">al..</text></g><g><title>core::ptr::write (4,804 samples, 1.89%)</title><rect x="15.3124%" y="373" width="1.8917%" height="15" fill="rgb(244,27,41)" fg:x="38887" fg:w="4804"/><text x="15.5624%" y="383.50">c..</text></g><g><title>core::option::Option&lt;T&gt;::unwrap (50 samples, 0.02%)</title><rect x="17.2072%" y="405" width="0.0197%" height="15" fill="rgb(235,35,32)" fg:x="43699" fg:w="50"/><text x="17.4572%" y="415.50"></text></g><g><title>pathfinding::directed::astar::astar (33 samples, 0.01%)</title><rect x="17.2269%" y="261" width="0.0130%" height="15" fill="rgb(218,68,31)" fg:x="43749" fg:w="33"/><text x="17.4769%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (3,925 samples, 1.55%)</title><rect x="17.2269%" y="309" width="1.5455%" height="15" fill="rgb(207,120,37)" fg:x="43749" fg:w="3925"/><text x="17.4769%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (3,925 samples, 1.55%)</title><rect x="17.2269%" y="293" width="1.5455%" height="15" fill="rgb(227,98,0)" fg:x="43749" fg:w="3925"/><text x="17.4769%" y="303.50"></text></g><g><title>__rdl_dealloc (3,925 samples, 1.55%)</title><rect x="17.2269%" y="277" width="1.5455%" height="15" fill="rgb(207,7,3)" fg:x="43749" fg:w="3925"/><text x="17.4769%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (3,892 samples, 1.53%)</title><rect x="17.2399%" y="261" width="1.5325%" height="15" fill="rgb(206,98,19)" fg:x="43782" fg:w="3892"/><text x="17.4899%" y="271.50"></text></g><g><title>__GI___libc_free (3,892 samples, 1.53%)</title><rect x="17.2399%" y="245" width="1.5325%" height="15" fill="rgb(217,5,26)" fg:x="43782" fg:w="3892"/><text x="17.4899%" y="255.50"></text></g><g><title>_int_free (3,519 samples, 1.39%)</title><rect x="17.3868%" y="229" width="1.3857%" height="15" fill="rgb(235,190,38)" fg:x="44155" fg:w="3519"/><text x="17.6368%" y="239.50"></text></g><g><title>unlink_chunk.constprop.0 (116 samples, 0.05%)</title><rect x="18.7268%" y="213" width="0.0457%" height="15" fill="rgb(247,86,24)" fg:x="47558" fg:w="116"/><text x="18.9768%" y="223.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (43 samples, 0.02%)</title><rect x="18.7725%" y="309" width="0.0169%" height="15" fill="rgb(205,101,16)" fg:x="47674" fg:w="43"/><text x="19.0225%" y="319.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,020 samples, 1.58%)</title><rect x="17.2269%" y="325" width="1.5829%" height="15" fill="rgb(246,168,33)" fg:x="43749" fg:w="4020"/><text x="17.4769%" y="335.50"></text></g><g><title>pathfinding::directed::astar::astar (52 samples, 0.02%)</title><rect x="18.7894%" y="309" width="0.0205%" height="15" fill="rgb(231,114,1)" fg:x="47717" fg:w="52"/><text x="19.0394%" y="319.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (4,044 samples, 1.59%)</title><rect x="17.2269%" y="405" width="1.5924%" height="15" fill="rgb(207,184,53)" fg:x="43749" fg:w="4044"/><text x="17.4769%" y="415.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,044 samples, 1.59%)</title><rect x="17.2269%" y="389" width="1.5924%" height="15" fill="rgb(224,95,51)" fg:x="43749" fg:w="4044"/><text x="17.4769%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (4,044 samples, 1.59%)</title><rect x="17.2269%" y="373" width="1.5924%" height="15" fill="rgb(212,188,45)" fg:x="43749" fg:w="4044"/><text x="17.4769%" y="383.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (4,044 samples, 1.59%)</title><rect x="17.2269%" y="357" width="1.5924%" height="15" fill="rgb(223,154,38)" fg:x="43749" fg:w="4044"/><text x="17.4769%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (4,044 samples, 1.59%)</title><rect x="17.2269%" y="341" width="1.5924%" height="15" fill="rgb(251,22,52)" fg:x="43749" fg:w="4044"/><text x="17.4769%" y="351.50"></text></g><g><title>core::cmp::min (84 samples, 0.03%)</title><rect x="18.9918%" y="373" width="0.0331%" height="15" fill="rgb(229,209,22)" fg:x="48231" fg:w="84"/><text x="19.2418%" y="383.50"></text></g><g><title>core::cmp::Ord::min (84 samples, 0.03%)</title><rect x="18.9918%" y="357" width="0.0331%" height="15" fill="rgb(234,138,34)" fg:x="48231" fg:w="84"/><text x="19.2418%" y="367.50"></text></g><g><title>core::cmp::min_by (84 samples, 0.03%)</title><rect x="18.9918%" y="341" width="0.0331%" height="15" fill="rgb(212,95,11)" fg:x="48231" fg:w="84"/><text x="19.2418%" y="351.50"></text></g><g><title>engine::engine::actor::pathfinding::diagonal_distance (1,328 samples, 0.52%)</title><rect x="18.8937%" y="389" width="0.5229%" height="15" fill="rgb(240,179,47)" fg:x="47982" fg:w="1328"/><text x="19.1437%" y="399.50"></text></g><g><title>pathfinding::utils::absdiff (995 samples, 0.39%)</title><rect x="19.0249%" y="373" width="0.3918%" height="15" fill="rgb(240,163,11)" fg:x="48315" fg:w="995"/><text x="19.2749%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (923 samples, 0.36%)</title><rect x="19.0532%" y="357" width="0.3634%" height="15" fill="rgb(236,37,12)" fg:x="48387" fg:w="923"/><text x="19.3032%" y="367.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (78 samples, 0.03%)</title><rect x="20.4330%" y="341" width="0.0307%" height="15" fill="rgb(232,164,16)" fg:x="51891" fg:w="78"/><text x="20.6830%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::IntoIterator&gt;::into_iter (187 samples, 0.07%)</title><rect x="20.3979%" y="373" width="0.0736%" height="15" fill="rgb(244,205,15)" fg:x="51802" fg:w="187"/><text x="20.6479%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::add (98 samples, 0.04%)</title><rect x="20.4330%" y="357" width="0.0386%" height="15" fill="rgb(223,117,47)" fg:x="51891" fg:w="98"/><text x="20.6830%" y="367.50"></text></g><g><title>core::ptr::read (238 samples, 0.09%)</title><rect x="20.5905%" y="357" width="0.0937%" height="15" fill="rgb(244,107,35)" fg:x="52291" fg:w="238"/><text x="20.8405%" y="367.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (558 samples, 0.22%)</title><rect x="20.4716%" y="373" width="0.2197%" height="15" fill="rgb(205,140,8)" fg:x="51989" fg:w="558"/><text x="20.7216%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (96 samples, 0.04%)</title><rect x="20.9059%" y="357" width="0.0378%" height="15" fill="rgb(228,84,46)" fg:x="53092" fg:w="96"/><text x="21.1559%" y="367.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (74 samples, 0.03%)</title><rect x="21.0162%" y="293" width="0.0291%" height="15" fill="rgb(254,188,9)" fg:x="53372" fg:w="74"/><text x="21.2662%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (101 samples, 0.04%)</title><rect x="21.0453%" y="293" width="0.0398%" height="15" fill="rgb(206,112,54)" fg:x="53446" fg:w="101"/><text x="21.2953%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (335 samples, 0.13%)</title><rect x="21.0851%" y="293" width="0.1319%" height="15" fill="rgb(216,84,49)" fg:x="53547" fg:w="335"/><text x="21.3351%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::capacity_from_bytes (171 samples, 0.07%)</title><rect x="21.1496%" y="277" width="0.0673%" height="15" fill="rgb(214,194,35)" fg:x="53711" fg:w="171"/><text x="21.3996%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.02%)</title><rect x="21.2882%" y="277" width="0.0177%" height="15" fill="rgb(249,28,3)" fg:x="54063" fg:w="45"/><text x="21.5382%" y="287.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.02%)</title><rect x="21.2882%" y="261" width="0.0177%" height="15" fill="rgb(222,56,52)" fg:x="54063" fg:w="45"/><text x="21.5382%" y="271.50"></text></g><g><title>[libc-2.33.so] (60 samples, 0.02%)</title><rect x="22.6420%" y="165" width="0.0236%" height="15" fill="rgb(245,217,50)" fg:x="57501" fg:w="60"/><text x="22.8920%" y="175.50"></text></g><g><title>__memmove_avx_unaligned_erms (718 samples, 0.28%)</title><rect x="22.6656%" y="165" width="0.2827%" height="15" fill="rgb(213,201,24)" fg:x="57561" fg:w="718"/><text x="22.9156%" y="175.50"></text></g><g><title>_int_free (503 samples, 0.20%)</title><rect x="22.9484%" y="165" width="0.1981%" height="15" fill="rgb(248,116,28)" fg:x="58279" fg:w="503"/><text x="23.1984%" y="175.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (8,941 samples, 3.52%)</title><rect x="21.3060%" y="277" width="3.5207%" height="15" fill="rgb(219,72,43)" fg:x="54108" fg:w="8941"/><text x="21.5560%" y="287.50">&lt;al..</text></g><g><title>alloc::alloc::Global::grow_impl (8,941 samples, 3.52%)</title><rect x="21.3060%" y="261" width="3.5207%" height="15" fill="rgb(209,138,14)" fg:x="54108" fg:w="8941"/><text x="21.5560%" y="271.50">all..</text></g><g><title>alloc::alloc::realloc (8,938 samples, 3.52%)</title><rect x="21.3072%" y="245" width="3.5195%" height="15" fill="rgb(222,18,33)" fg:x="54111" fg:w="8938"/><text x="21.5572%" y="255.50">all..</text></g><g><title>__rdl_realloc (8,938 samples, 3.52%)</title><rect x="21.3072%" y="229" width="3.5195%" height="15" fill="rgb(213,199,7)" fg:x="54111" fg:w="8938"/><text x="21.5572%" y="239.50">__r..</text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (8,938 samples, 3.52%)</title><rect x="21.3072%" y="213" width="3.5195%" height="15" fill="rgb(250,110,10)" fg:x="54111" fg:w="8938"/><text x="21.5572%" y="223.50">std..</text></g><g><title>__GI___libc_realloc (8,883 samples, 3.50%)</title><rect x="21.3288%" y="197" width="3.4978%" height="15" fill="rgb(248,123,6)" fg:x="54166" fg:w="8883"/><text x="21.5788%" y="207.50">__G..</text></g><g><title>_int_realloc (6,128 samples, 2.41%)</title><rect x="22.4136%" y="181" width="2.4130%" height="15" fill="rgb(206,91,31)" fg:x="56921" fg:w="6128"/><text x="22.6636%" y="191.50">_i..</text></g><g><title>_int_malloc (4,267 samples, 1.68%)</title><rect x="23.1464%" y="165" width="1.6802%" height="15" fill="rgb(211,154,13)" fg:x="58782" fg:w="4267"/><text x="23.3964%" y="175.50"></text></g><g><title>unlink_chunk.constprop.0 (296 samples, 0.12%)</title><rect x="24.7101%" y="149" width="0.1166%" height="15" fill="rgb(225,148,7)" fg:x="62753" fg:w="296"/><text x="24.9601%" y="159.50"></text></g><g><title>__GI___libc_malloc (978 samples, 0.39%)</title><rect x="24.8266%" y="277" width="0.3851%" height="15" fill="rgb(220,160,43)" fg:x="63049" fg:w="978"/><text x="25.0766%" y="287.50"></text></g><g><title>alloc::raw_vec::finish_grow (10,287 samples, 4.05%)</title><rect x="21.2170%" y="293" width="4.0507%" height="15" fill="rgb(213,52,39)" fg:x="53882" fg:w="10287"/><text x="21.4670%" y="303.50">allo..</text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (142 samples, 0.06%)</title><rect x="25.2117%" y="277" width="0.0559%" height="15" fill="rgb(243,137,7)" fg:x="64027" fg:w="142"/><text x="25.4617%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::array (79 samples, 0.03%)</title><rect x="25.2677%" y="293" width="0.0311%" height="15" fill="rgb(230,79,13)" fg:x="64169" fg:w="79"/><text x="25.5177%" y="303.50"></text></g><g><title>core::alloc::layout::Layout::repeat (79 samples, 0.03%)</title><rect x="25.2677%" y="277" width="0.0311%" height="15" fill="rgb(247,105,23)" fg:x="64169" fg:w="79"/><text x="25.5177%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (76 samples, 0.03%)</title><rect x="25.2688%" y="261" width="0.0299%" height="15" fill="rgb(223,179,41)" fg:x="64172" fg:w="76"/><text x="25.5188%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (76 samples, 0.03%)</title><rect x="25.2688%" y="245" width="0.0299%" height="15" fill="rgb(218,9,34)" fg:x="64172" fg:w="76"/><text x="25.5188%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (130 samples, 0.05%)</title><rect x="25.2988%" y="261" width="0.0512%" height="15" fill="rgb(222,106,8)" fg:x="64248" fg:w="130"/><text x="25.5488%" y="271.50"></text></g><g><title>core::cmp::max (161 samples, 0.06%)</title><rect x="25.2988%" y="293" width="0.0634%" height="15" fill="rgb(211,220,0)" fg:x="64248" fg:w="161"/><text x="25.5488%" y="303.50"></text></g><g><title>core::cmp::Ord::max (161 samples, 0.06%)</title><rect x="25.2988%" y="277" width="0.0634%" height="15" fill="rgb(229,52,16)" fg:x="64248" fg:w="161"/><text x="25.5488%" y="287.50"></text></g><g><title>core::cmp::max_by (31 samples, 0.01%)</title><rect x="25.3500%" y="261" width="0.0122%" height="15" fill="rgb(212,155,18)" fg:x="64378" fg:w="31"/><text x="25.6000%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (11,169 samples, 4.40%)</title><rect x="20.9748%" y="309" width="4.3980%" height="15" fill="rgb(242,21,14)" fg:x="53267" fg:w="11169"/><text x="21.2248%" y="319.50">alloc..</text></g><g><title>core::num::&lt;impl usize&gt;::checked_add (27 samples, 0.01%)</title><rect x="25.3622%" y="293" width="0.0106%" height="15" fill="rgb(222,19,48)" fg:x="64409" fg:w="27"/><text x="25.6122%" y="303.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_add (27 samples, 0.01%)</title><rect x="25.3622%" y="277" width="0.0106%" height="15" fill="rgb(232,45,27)" fg:x="64409" fg:w="27"/><text x="25.6122%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (11,401 samples, 4.49%)</title><rect x="20.9437%" y="341" width="4.4893%" height="15" fill="rgb(249,103,42)" fg:x="53188" fg:w="11401"/><text x="21.1937%" y="351.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11,322 samples, 4.46%)</title><rect x="20.9748%" y="325" width="4.4582%" height="15" fill="rgb(246,81,33)" fg:x="53267" fg:w="11322"/><text x="21.2248%" y="335.50">alloc..</text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (153 samples, 0.06%)</title><rect x="25.3728%" y="309" width="0.0602%" height="15" fill="rgb(252,33,42)" fg:x="64436" fg:w="153"/><text x="25.6228%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (11,443 samples, 4.51%)</title><rect x="20.9437%" y="357" width="4.5059%" height="15" fill="rgb(209,212,41)" fg:x="53188" fg:w="11443"/><text x="21.1937%" y="367.50">alloc..</text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (42 samples, 0.02%)</title><rect x="25.4330%" y="341" width="0.0165%" height="15" fill="rgb(207,154,6)" fg:x="64589" fg:w="42"/><text x="25.6830%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (13,226 samples, 5.21%)</title><rect x="20.6913%" y="373" width="5.2080%" height="15" fill="rgb(223,64,47)" fg:x="52547" fg:w="13226"/><text x="20.9413%" y="383.50">alloc:..</text></g><g><title>core::ptr::write (1,142 samples, 0.45%)</title><rect x="25.4496%" y="357" width="0.4497%" height="15" fill="rgb(211,161,38)" fg:x="64631" fg:w="1142"/><text x="25.6996%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (62 samples, 0.02%)</title><rect x="25.8993%" y="373" width="0.0244%" height="15" fill="rgb(219,138,40)" fg:x="65773" fg:w="62"/><text x="26.1493%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (1,872 samples, 0.74%)</title><rect x="25.9237%" y="277" width="0.7371%" height="15" fill="rgb(241,228,46)" fg:x="65835" fg:w="1872"/><text x="26.1737%" y="287.50"></text></g><g><title>alloc::alloc::dealloc (1,872 samples, 0.74%)</title><rect x="25.9237%" y="261" width="0.7371%" height="15" fill="rgb(223,209,38)" fg:x="65835" fg:w="1872"/><text x="26.1737%" y="271.50"></text></g><g><title>__rdl_dealloc (1,872 samples, 0.74%)</title><rect x="25.9237%" y="245" width="0.7371%" height="15" fill="rgb(236,164,45)" fg:x="65835" fg:w="1872"/><text x="26.1737%" y="255.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (1,872 samples, 0.74%)</title><rect x="25.9237%" y="229" width="0.7371%" height="15" fill="rgb(231,15,5)" fg:x="65835" fg:w="1872"/><text x="26.1737%" y="239.50"></text></g><g><title>__GI___libc_free (1,872 samples, 0.74%)</title><rect x="25.9237%" y="213" width="0.7371%" height="15" fill="rgb(252,35,15)" fg:x="65835" fg:w="1872"/><text x="26.1737%" y="223.50"></text></g><g><title>_int_free (1,192 samples, 0.47%)</title><rect x="26.1914%" y="197" width="0.4694%" height="15" fill="rgb(248,181,18)" fg:x="66515" fg:w="1192"/><text x="26.4414%" y="207.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,873 samples, 0.74%)</title><rect x="25.9237%" y="293" width="0.7375%" height="15" fill="rgb(233,39,42)" fg:x="65835" fg:w="1873"/><text x="26.1737%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (1,885 samples, 0.74%)</title><rect x="25.9237%" y="373" width="0.7423%" height="15" fill="rgb(238,110,33)" fg:x="65835" fg:w="1885"/><text x="26.1737%" y="383.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,885 samples, 0.74%)</title><rect x="25.9237%" y="357" width="0.7423%" height="15" fill="rgb(233,195,10)" fg:x="65835" fg:w="1885"/><text x="26.1737%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (1,885 samples, 0.74%)</title><rect x="25.9237%" y="341" width="0.7423%" height="15" fill="rgb(254,105,3)" fg:x="65835" fg:w="1885"/><text x="26.1737%" y="351.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (1,885 samples, 0.74%)</title><rect x="25.9237%" y="325" width="0.7423%" height="15" fill="rgb(221,225,9)" fg:x="65835" fg:w="1885"/><text x="26.1737%" y="335.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (1,885 samples, 0.74%)</title><rect x="25.9237%" y="309" width="0.7423%" height="15" fill="rgb(224,227,45)" fg:x="65835" fg:w="1885"/><text x="26.1737%" y="319.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (247 samples, 0.10%)</title><rect x="26.6659%" y="373" width="0.0973%" height="15" fill="rgb(229,198,43)" fg:x="67720" fg:w="247"/><text x="26.9159%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (83 samples, 0.03%)</title><rect x="26.8565%" y="341" width="0.0327%" height="15" fill="rgb(206,209,35)" fg:x="68204" fg:w="83"/><text x="27.1065%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (86 samples, 0.03%)</title><rect x="26.9301%" y="277" width="0.0339%" height="15" fill="rgb(245,195,53)" fg:x="68391" fg:w="86"/><text x="27.1801%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (45 samples, 0.02%)</title><rect x="27.0266%" y="261" width="0.0177%" height="15" fill="rgb(240,92,26)" fg:x="68636" fg:w="45"/><text x="27.2766%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (45 samples, 0.02%)</title><rect x="27.0266%" y="245" width="0.0177%" height="15" fill="rgb(207,40,23)" fg:x="68636" fg:w="45"/><text x="27.2766%" y="255.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.01%)</title><rect x="27.0333%" y="229" width="0.0110%" height="15" fill="rgb(223,111,35)" fg:x="68653" fg:w="28"/><text x="27.2833%" y="239.50"></text></g><g><title>__rdl_alloc (28 samples, 0.01%)</title><rect x="27.0333%" y="213" width="0.0110%" height="15" fill="rgb(229,147,28)" fg:x="68653" fg:w="28"/><text x="27.2833%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (28 samples, 0.01%)</title><rect x="27.0333%" y="197" width="0.0110%" height="15" fill="rgb(211,29,28)" fg:x="68653" fg:w="28"/><text x="27.2833%" y="207.50"></text></g><g><title>__GI___libc_malloc (842 samples, 0.33%)</title><rect x="27.0443%" y="261" width="0.3316%" height="15" fill="rgb(228,72,33)" fg:x="68681" fg:w="842"/><text x="27.2943%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,037 samples, 0.41%)</title><rect x="26.9790%" y="277" width="0.4083%" height="15" fill="rgb(205,214,31)" fg:x="68515" fg:w="1037"/><text x="27.2290%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (29 samples, 0.01%)</title><rect x="27.3759%" y="261" width="0.0114%" height="15" fill="rgb(224,111,15)" fg:x="69523" fg:w="29"/><text x="27.6259%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array (107 samples, 0.04%)</title><rect x="27.3873%" y="277" width="0.0421%" height="15" fill="rgb(253,21,26)" fg:x="69552" fg:w="107"/><text x="27.6373%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::repeat (107 samples, 0.04%)</title><rect x="27.3873%" y="261" width="0.0421%" height="15" fill="rgb(245,139,43)" fg:x="69552" fg:w="107"/><text x="27.6373%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (84 samples, 0.03%)</title><rect x="27.3964%" y="245" width="0.0331%" height="15" fill="rgb(252,170,7)" fg:x="69575" fg:w="84"/><text x="27.6464%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (84 samples, 0.03%)</title><rect x="27.3964%" y="229" width="0.0331%" height="15" fill="rgb(231,118,14)" fg:x="69575" fg:w="84"/><text x="27.6464%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (130 samples, 0.05%)</title><rect x="27.4294%" y="245" width="0.0512%" height="15" fill="rgb(238,83,0)" fg:x="69659" fg:w="130"/><text x="27.6794%" y="255.50"></text></g><g><title>core::cmp::max (160 samples, 0.06%)</title><rect x="27.4294%" y="277" width="0.0630%" height="15" fill="rgb(221,39,39)" fg:x="69659" fg:w="160"/><text x="27.6794%" y="287.50"></text></g><g><title>core::cmp::Ord::max (160 samples, 0.06%)</title><rect x="27.4294%" y="261" width="0.0630%" height="15" fill="rgb(222,119,46)" fg:x="69659" fg:w="160"/><text x="27.6794%" y="271.50"></text></g><g><title>core::cmp::max_by (30 samples, 0.01%)</title><rect x="27.4806%" y="245" width="0.0118%" height="15" fill="rgb(222,165,49)" fg:x="69789" fg:w="30"/><text x="27.7306%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,521 samples, 0.60%)</title><rect x="26.9030%" y="293" width="0.5989%" height="15" fill="rgb(219,113,52)" fg:x="68322" fg:w="1521"/><text x="27.1530%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,586 samples, 0.62%)</title><rect x="26.8892%" y="341" width="0.6245%" height="15" fill="rgb(214,7,15)" fg:x="68287" fg:w="1586"/><text x="27.1392%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,586 samples, 0.62%)</title><rect x="26.8892%" y="325" width="0.6245%" height="15" fill="rgb(235,32,4)" fg:x="68287" fg:w="1586"/><text x="27.1392%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,551 samples, 0.61%)</title><rect x="26.9030%" y="309" width="0.6107%" height="15" fill="rgb(238,90,54)" fg:x="68322" fg:w="1551"/><text x="27.1530%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (30 samples, 0.01%)</title><rect x="27.5019%" y="293" width="0.0118%" height="15" fill="rgb(213,208,19)" fg:x="69843" fg:w="30"/><text x="27.7519%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,800 samples, 1.10%)</title><rect x="26.7872%" y="357" width="1.1025%" height="15" fill="rgb(233,156,4)" fg:x="68028" fg:w="2800"/><text x="27.0372%" y="367.50"></text></g><g><title>core::ptr::write (955 samples, 0.38%)</title><rect x="27.5137%" y="341" width="0.3760%" height="15" fill="rgb(207,194,5)" fg:x="69873" fg:w="955"/><text x="27.7637%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (64 samples, 0.03%)</title><rect x="27.8898%" y="357" width="0.0252%" height="15" fill="rgb(206,111,30)" fg:x="70828" fg:w="64"/><text x="28.1398%" y="367.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (2,938 samples, 1.16%)</title><rect x="26.7632%" y="373" width="1.1569%" height="15" fill="rgb(243,70,54)" fg:x="67967" fg:w="2938"/><text x="27.0132%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (54 samples, 0.02%)</title><rect x="28.0028%" y="341" width="0.0213%" height="15" fill="rgb(242,28,8)" fg:x="71115" fg:w="54"/><text x="28.2528%" y="351.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (81 samples, 0.03%)</title><rect x="28.0744%" y="277" width="0.0319%" height="15" fill="rgb(219,106,18)" fg:x="71297" fg:w="81"/><text x="28.3244%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::current_memory (37 samples, 0.01%)</title><rect x="28.1063%" y="277" width="0.0146%" height="15" fill="rgb(244,222,10)" fg:x="71378" fg:w="37"/><text x="28.3563%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::set_ptr (57 samples, 0.02%)</title><rect x="28.1209%" y="277" width="0.0224%" height="15" fill="rgb(236,179,52)" fg:x="71415" fg:w="57"/><text x="28.3709%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.01%)</title><rect x="28.2052%" y="261" width="0.0110%" height="15" fill="rgb(213,23,39)" fg:x="71629" fg:w="28"/><text x="28.4552%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.01%)</title><rect x="28.2052%" y="245" width="0.0110%" height="15" fill="rgb(238,48,10)" fg:x="71629" fg:w="28"/><text x="28.4552%" y="255.50"></text></g><g><title>alloc::alloc::alloc (26 samples, 0.01%)</title><rect x="28.2060%" y="229" width="0.0102%" height="15" fill="rgb(251,196,23)" fg:x="71631" fg:w="26"/><text x="28.4560%" y="239.50"></text></g><g><title>__rdl_alloc (26 samples, 0.01%)</title><rect x="28.2060%" y="213" width="0.0102%" height="15" fill="rgb(250,152,24)" fg:x="71631" fg:w="26"/><text x="28.4560%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (26 samples, 0.01%)</title><rect x="28.2060%" y="197" width="0.0102%" height="15" fill="rgb(209,150,17)" fg:x="71631" fg:w="26"/><text x="28.4560%" y="207.50"></text></g><g><title>__GI___libc_malloc (696 samples, 0.27%)</title><rect x="28.2162%" y="261" width="0.2741%" height="15" fill="rgb(234,202,34)" fg:x="71657" fg:w="696"/><text x="28.4662%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (910 samples, 0.36%)</title><rect x="28.1433%" y="277" width="0.3583%" height="15" fill="rgb(253,148,53)" fg:x="71472" fg:w="910"/><text x="28.3933%" y="287.50"></text></g><g><title>core::result::Result&lt;T,E&gt;::map_err (29 samples, 0.01%)</title><rect x="28.4903%" y="261" width="0.0114%" height="15" fill="rgb(218,129,16)" fg:x="72353" fg:w="29"/><text x="28.7403%" y="271.50"></text></g><g><title>core::alloc::layout::Layout::array (57 samples, 0.02%)</title><rect x="28.5017%" y="277" width="0.0224%" height="15" fill="rgb(216,85,19)" fg:x="72382" fg:w="57"/><text x="28.7517%" y="287.50"></text></g><g><title>core::alloc::layout::Layout::repeat (57 samples, 0.02%)</title><rect x="28.5017%" y="261" width="0.0224%" height="15" fill="rgb(235,228,7)" fg:x="72382" fg:w="57"/><text x="28.7517%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::checked_mul (42 samples, 0.02%)</title><rect x="28.5076%" y="245" width="0.0165%" height="15" fill="rgb(245,175,0)" fg:x="72397" fg:w="42"/><text x="28.7576%" y="255.50"></text></g><g><title>core::num::&lt;impl usize&gt;::overflowing_mul (42 samples, 0.02%)</title><rect x="28.5076%" y="229" width="0.0165%" height="15" fill="rgb(208,168,36)" fg:x="72397" fg:w="42"/><text x="28.7576%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (98 samples, 0.04%)</title><rect x="28.5241%" y="245" width="0.0386%" height="15" fill="rgb(246,171,24)" fg:x="72439" fg:w="98"/><text x="28.7741%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,330 samples, 0.52%)</title><rect x="28.0410%" y="293" width="0.5237%" height="15" fill="rgb(215,142,24)" fg:x="71212" fg:w="1330"/><text x="28.2910%" y="303.50"></text></g><g><title>core::cmp::max (103 samples, 0.04%)</title><rect x="28.5241%" y="277" width="0.0406%" height="15" fill="rgb(250,187,7)" fg:x="72439" fg:w="103"/><text x="28.7741%" y="287.50"></text></g><g><title>core::cmp::Ord::max (103 samples, 0.04%)</title><rect x="28.5241%" y="261" width="0.0406%" height="15" fill="rgb(228,66,33)" fg:x="72439" fg:w="103"/><text x="28.7741%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,432 samples, 0.56%)</title><rect x="28.0240%" y="341" width="0.5639%" height="15" fill="rgb(234,215,21)" fg:x="71169" fg:w="1432"/><text x="28.2740%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,432 samples, 0.56%)</title><rect x="28.0240%" y="325" width="0.5639%" height="15" fill="rgb(222,191,20)" fg:x="71169" fg:w="1432"/><text x="28.2740%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,389 samples, 0.55%)</title><rect x="28.0410%" y="309" width="0.5469%" height="15" fill="rgb(245,79,54)" fg:x="71212" fg:w="1389"/><text x="28.2910%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (59 samples, 0.02%)</title><rect x="28.5647%" y="293" width="0.0232%" height="15" fill="rgb(240,10,37)" fg:x="72542" fg:w="59"/><text x="28.8147%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (2,607 samples, 1.03%)</title><rect x="27.9504%" y="357" width="1.0266%" height="15" fill="rgb(214,192,32)" fg:x="70982" fg:w="2607"/><text x="28.2004%" y="367.50"></text></g><g><title>core::ptr::write (988 samples, 0.39%)</title><rect x="28.5879%" y="341" width="0.3890%" height="15" fill="rgb(209,36,54)" fg:x="72601" fg:w="988"/><text x="28.8379%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::new (44 samples, 0.02%)</title><rect x="28.9770%" y="357" width="0.0173%" height="15" fill="rgb(220,10,11)" fg:x="73589" fg:w="44"/><text x="29.2270%" y="367.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (2,732 samples, 1.08%)</title><rect x="27.9201%" y="373" width="1.0758%" height="15" fill="rgb(221,106,17)" fg:x="70905" fg:w="2732"/><text x="28.1701%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (204 samples, 0.08%)</title><rect x="29.8035%" y="341" width="0.0803%" height="15" fill="rgb(251,142,44)" fg:x="75688" fg:w="204"/><text x="30.0535%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (55 samples, 0.02%)</title><rect x="29.8621%" y="325" width="0.0217%" height="15" fill="rgb(238,13,15)" fg:x="75837" fg:w="55"/><text x="30.1121%" y="335.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path::{{closure}} (28,166 samples, 11.09%)</title><rect x="18.8193%" y="405" width="11.0909%" height="15" fill="rgb(208,107,27)" fg:x="47793" fg:w="28166"/><text x="19.0693%" y="415.50">engine::engine::..</text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (26,649 samples, 10.49%)</title><rect x="19.4167%" y="389" width="10.4935%" height="15" fill="rgb(205,136,37)" fg:x="49310" fg:w="26649"/><text x="19.6667%" y="399.50">engine::engine:..</text></g><g><title>engine::engine::world::TileWeightMap::get (2,322 samples, 0.91%)</title><rect x="28.9959%" y="373" width="0.9143%" height="15" fill="rgb(250,205,27)" fg:x="73637" fg:w="2322"/><text x="29.2459%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (271 samples, 0.11%)</title><rect x="29.8035%" y="357" width="0.1067%" height="15" fill="rgb(210,80,43)" fg:x="75688" fg:w="271"/><text x="30.0535%" y="367.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::Index&lt;I&gt; for [T]&gt;::index (67 samples, 0.03%)</title><rect x="29.8838%" y="341" width="0.0264%" height="15" fill="rgb(247,160,36)" fg:x="75892" fg:w="67"/><text x="30.1338%" y="351.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index (67 samples, 0.03%)</title><rect x="29.8838%" y="325" width="0.0264%" height="15" fill="rgb(234,13,49)" fg:x="75892" fg:w="67"/><text x="30.1338%" y="335.50"></text></g><g><title>core::num::&lt;impl usize&gt;::rotate_left (137 samples, 0.05%)</title><rect x="29.9153%" y="293" width="0.0539%" height="15" fill="rgb(234,122,0)" fg:x="75972" fg:w="137"/><text x="30.1653%" y="303.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (767 samples, 0.30%)</title><rect x="29.9102%" y="389" width="0.3020%" height="15" fill="rgb(207,146,38)" fg:x="75959" fg:w="767"/><text x="30.1602%" y="399.50"></text></g><g><title>&lt;engine::engine::world::Position as core::hash::Hash&gt;::hash (767 samples, 0.30%)</title><rect x="29.9102%" y="373" width="0.3020%" height="15" fill="rgb(207,177,25)" fg:x="75959" fg:w="767"/><text x="30.1602%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (767 samples, 0.30%)</title><rect x="29.9102%" y="357" width="0.3020%" height="15" fill="rgb(211,178,42)" fg:x="75959" fg:w="767"/><text x="30.1602%" y="367.50"></text></g><g><title>core::hash::Hasher::write_i64 (767 samples, 0.30%)</title><rect x="29.9102%" y="341" width="0.3020%" height="15" fill="rgb(230,69,54)" fg:x="75959" fg:w="767"/><text x="30.1602%" y="351.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u64 (767 samples, 0.30%)</title><rect x="29.9102%" y="325" width="0.3020%" height="15" fill="rgb(214,135,41)" fg:x="75959" fg:w="767"/><text x="30.1602%" y="335.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (767 samples, 0.30%)</title><rect x="29.9102%" y="309" width="0.3020%" height="15" fill="rgb(237,67,25)" fg:x="75959" fg:w="767"/><text x="30.1602%" y="319.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (617 samples, 0.24%)</title><rect x="29.9692%" y="293" width="0.2430%" height="15" fill="rgb(222,189,50)" fg:x="76109" fg:w="617"/><text x="30.2192%" y="303.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (85 samples, 0.03%)</title><rect x="30.2122%" y="373" width="0.0335%" height="15" fill="rgb(245,148,34)" fg:x="76726" fg:w="85"/><text x="30.4622%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (82 samples, 0.03%)</title><rect x="30.2134%" y="357" width="0.0323%" height="15" fill="rgb(222,29,6)" fg:x="76729" fg:w="82"/><text x="30.4634%" y="367.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (360 samples, 0.14%)</title><rect x="31.8786%" y="309" width="0.1418%" height="15" fill="rgb(221,189,43)" fg:x="80958" fg:w="360"/><text x="32.1286%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (950 samples, 0.37%)</title><rect x="31.6695%" y="325" width="0.3741%" height="15" fill="rgb(207,36,27)" fg:x="80427" fg:w="950"/><text x="31.9195%" y="335.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::remove_lowest_bit (59 samples, 0.02%)</title><rect x="32.0204%" y="309" width="0.0232%" height="15" fill="rgb(217,90,24)" fg:x="81318" fg:w="59"/><text x="32.2704%" y="319.50"></text></g><g><title>hashbrown::raw::inner::ProbeSeq::move_next (49 samples, 0.02%)</title><rect x="32.0436%" y="325" width="0.0193%" height="15" fill="rgb(224,66,35)" fg:x="81377" fg:w="49"/><text x="32.2936%" y="335.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (52 samples, 0.02%)</title><rect x="32.0641%" y="325" width="0.0205%" height="15" fill="rgb(221,13,50)" fg:x="81429" fg:w="52"/><text x="32.3141%" y="335.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (52 samples, 0.02%)</title><rect x="32.0641%" y="309" width="0.0205%" height="15" fill="rgb(236,68,49)" fg:x="81429" fg:w="52"/><text x="32.3141%" y="319.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (52 samples, 0.02%)</title><rect x="32.0641%" y="293" width="0.0205%" height="15" fill="rgb(229,146,28)" fg:x="81429" fg:w="52"/><text x="32.3141%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (2,364 samples, 0.93%)</title><rect x="31.2309%" y="341" width="0.9309%" height="15" fill="rgb(225,31,38)" fg:x="79313" fg:w="2364"/><text x="31.4809%" y="351.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty (172 samples, 0.07%)</title><rect x="32.0940%" y="325" width="0.0677%" height="15" fill="rgb(250,208,3)" fg:x="81505" fg:w="172"/><text x="32.3440%" y="335.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (172 samples, 0.07%)</title><rect x="32.0940%" y="309" width="0.0677%" height="15" fill="rgb(246,54,23)" fg:x="81505" fg:w="172"/><text x="32.3440%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (172 samples, 0.07%)</title><rect x="32.0940%" y="293" width="0.0677%" height="15" fill="rgb(243,76,11)" fg:x="81505" fg:w="172"/><text x="32.3440%" y="303.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::from_base_index (180 samples, 0.07%)</title><rect x="32.1617%" y="325" width="0.0709%" height="15" fill="rgb(245,21,50)" fg:x="81677" fg:w="180"/><text x="32.4117%" y="335.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (180 samples, 0.07%)</title><rect x="32.1617%" y="309" width="0.0709%" height="15" fill="rgb(228,9,43)" fg:x="81677" fg:w="180"/><text x="32.4117%" y="319.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (180 samples, 0.07%)</title><rect x="32.1617%" y="293" width="0.0709%" height="15" fill="rgb(208,100,47)" fg:x="81677" fg:w="180"/><text x="32.4117%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (3,177 samples, 1.25%)</title><rect x="31.0210%" y="357" width="1.2510%" height="15" fill="rgb(232,26,8)" fg:x="78780" fg:w="3177"/><text x="31.2710%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::bucket (280 samples, 0.11%)</title><rect x="32.1617%" y="341" width="0.1103%" height="15" fill="rgb(216,166,38)" fg:x="81677" fg:w="280"/><text x="32.4117%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::data_end (100 samples, 0.04%)</title><rect x="32.2326%" y="325" width="0.0394%" height="15" fill="rgb(251,202,51)" fg:x="81857" fg:w="100"/><text x="32.4826%" y="335.50"></text></g><g><title>hashbrown::raw::inner::h2 (274 samples, 0.11%)</title><rect x="32.2842%" y="309" width="0.1079%" height="15" fill="rgb(254,216,34)" fg:x="81988" fg:w="274"/><text x="32.5342%" y="319.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (860 samples, 0.34%)</title><rect x="32.3921%" y="309" width="0.3386%" height="15" fill="rgb(251,32,27)" fg:x="82262" fg:w="860"/><text x="32.6421%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (860 samples, 0.34%)</title><rect x="32.3921%" y="293" width="0.3386%" height="15" fill="rgb(208,127,28)" fg:x="82262" fg:w="860"/><text x="32.6421%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (860 samples, 0.34%)</title><rect x="32.3921%" y="277" width="0.3386%" height="15" fill="rgb(224,137,22)" fg:x="82262" fg:w="860"/><text x="32.6421%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (627 samples, 0.25%)</title><rect x="32.7307%" y="293" width="0.2469%" height="15" fill="rgb(254,70,32)" fg:x="83122" fg:w="627"/><text x="32.9807%" y="303.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (999 samples, 0.39%)</title><rect x="32.7307%" y="309" width="0.3934%" height="15" fill="rgb(229,75,37)" fg:x="83122" fg:w="999"/><text x="32.9807%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (372 samples, 0.15%)</title><rect x="32.9776%" y="293" width="0.1465%" height="15" fill="rgb(252,64,23)" fg:x="83749" fg:w="372"/><text x="33.2276%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (372 samples, 0.15%)</title><rect x="32.9776%" y="277" width="0.1465%" height="15" fill="rgb(232,162,48)" fg:x="83749" fg:w="372"/><text x="33.2276%" y="287.50"></text></g><g><title>core::core_arch::simd::i8x16::new (372 samples, 0.15%)</title><rect x="32.9776%" y="261" width="0.1465%" height="15" fill="rgb(246,160,12)" fg:x="83749" fg:w="372"/><text x="33.2276%" y="271.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (2,270 samples, 0.89%)</title><rect x="32.2720%" y="357" width="0.8939%" height="15" fill="rgb(247,166,0)" fg:x="81957" fg:w="2270"/><text x="32.5220%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (2,270 samples, 0.89%)</title><rect x="32.2720%" y="341" width="0.8939%" height="15" fill="rgb(249,219,21)" fg:x="81957" fg:w="2270"/><text x="32.5220%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (2,270 samples, 0.89%)</title><rect x="32.2720%" y="325" width="0.8939%" height="15" fill="rgb(205,209,3)" fg:x="81957" fg:w="2270"/><text x="32.5220%" y="335.50"></text></g><g><title>pathfinding::directed::astar::astar (106 samples, 0.04%)</title><rect x="33.1241%" y="309" width="0.0417%" height="15" fill="rgb(243,44,1)" fg:x="84121" fg:w="106"/><text x="33.3741%" y="319.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (9,032 samples, 3.56%)</title><rect x="29.9102%" y="405" width="3.5565%" height="15" fill="rgb(206,159,16)" fg:x="75959" fg:w="9032"/><text x="30.1602%" y="415.50">inde..</text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (8,265 samples, 3.25%)</title><rect x="30.2122%" y="389" width="3.2545%" height="15" fill="rgb(244,77,30)" fg:x="76726" fg:w="8265"/><text x="30.4622%" y="399.50">ind..</text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (8,180 samples, 3.22%)</title><rect x="30.2457%" y="373" width="3.2210%" height="15" fill="rgb(218,69,12)" fg:x="76811" fg:w="8180"/><text x="30.4957%" y="383.50">has..</text></g><g><title>indexmap::map::core::equivalent::{{closure}} (764 samples, 0.30%)</title><rect x="33.1659%" y="357" width="0.3008%" height="15" fill="rgb(212,87,7)" fg:x="84227" fg:w="764"/><text x="33.4159%" y="367.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (649 samples, 0.26%)</title><rect x="33.2111%" y="341" width="0.2556%" height="15" fill="rgb(245,114,25)" fg:x="84342" fg:w="649"/><text x="33.4611%" y="351.50"></text></g><g><title>&lt;engine::engine::world::Position as core::cmp::PartialEq&gt;::eq (621 samples, 0.24%)</title><rect x="33.2222%" y="325" width="0.2445%" height="15" fill="rgb(210,61,42)" fg:x="84370" fg:w="621"/><text x="33.4722%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (54 samples, 0.02%)</title><rect x="33.4667%" y="389" width="0.0213%" height="15" fill="rgb(211,52,33)" fg:x="84991" fg:w="54"/><text x="33.7167%" y="399.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (139 samples, 0.05%)</title><rect x="33.4667%" y="405" width="0.0547%" height="15" fill="rgb(234,58,33)" fg:x="84991" fg:w="139"/><text x="33.7167%" y="415.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (85 samples, 0.03%)</title><rect x="33.4880%" y="389" width="0.0335%" height="15" fill="rgb(220,115,36)" fg:x="85045" fg:w="85"/><text x="33.7380%" y="399.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (85 samples, 0.03%)</title><rect x="33.4880%" y="373" width="0.0335%" height="15" fill="rgb(243,153,54)" fg:x="85045" fg:w="85"/><text x="33.7380%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (45 samples, 0.02%)</title><rect x="33.5336%" y="341" width="0.0177%" height="15" fill="rgb(251,47,18)" fg:x="85161" fg:w="45"/><text x="33.7836%" y="351.50"></text></g><g><title>core::mem::swap (33 samples, 0.01%)</title><rect x="33.5580%" y="277" width="0.0130%" height="15" fill="rgb(242,102,42)" fg:x="85223" fg:w="33"/><text x="33.8080%" y="287.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (33 samples, 0.01%)</title><rect x="33.5580%" y="261" width="0.0130%" height="15" fill="rgb(234,31,38)" fg:x="85223" fg:w="33"/><text x="33.8080%" y="271.50"></text></g><g><title>core::ptr::swap_nonoverlapping (33 samples, 0.01%)</title><rect x="33.5580%" y="245" width="0.0130%" height="15" fill="rgb(221,117,51)" fg:x="85223" fg:w="33"/><text x="33.8080%" y="255.50"></text></g><g><title>core::ptr::swap_nonoverlapping_bytes (33 samples, 0.01%)</title><rect x="33.5580%" y="229" width="0.0130%" height="15" fill="rgb(212,20,18)" fg:x="85223" fg:w="33"/><text x="33.8080%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (33 samples, 0.01%)</title><rect x="33.5580%" y="213" width="0.0130%" height="15" fill="rgb(245,133,36)" fg:x="85223" fg:w="33"/><text x="33.8080%" y="223.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (70 samples, 0.03%)</title><rect x="33.5557%" y="293" width="0.0276%" height="15" fill="rgb(212,6,19)" fg:x="85217" fg:w="70"/><text x="33.8057%" y="303.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (79 samples, 0.03%)</title><rect x="33.5525%" y="325" width="0.0311%" height="15" fill="rgb(218,1,36)" fg:x="85209" fg:w="79"/><text x="33.8025%" y="335.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (79 samples, 0.03%)</title><rect x="33.5525%" y="309" width="0.0311%" height="15" fill="rgb(246,84,54)" fg:x="85209" fg:w="79"/><text x="33.8025%" y="319.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (36 samples, 0.01%)</title><rect x="33.5836%" y="325" width="0.0142%" height="15" fill="rgb(242,110,6)" fg:x="85288" fg:w="36"/><text x="33.8336%" y="335.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (122 samples, 0.05%)</title><rect x="33.5513%" y="341" width="0.0480%" height="15" fill="rgb(214,47,5)" fg:x="85206" fg:w="122"/><text x="33.8013%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.01%)</title><rect x="33.6006%" y="261" width="0.0110%" height="15" fill="rgb(218,159,25)" fg:x="85331" fg:w="28"/><text x="33.8506%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (33 samples, 0.01%)</title><rect x="33.5998%" y="277" width="0.0130%" height="15" fill="rgb(215,211,28)" fg:x="85329" fg:w="33"/><text x="33.8498%" y="287.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (37 samples, 0.01%)</title><rect x="33.5998%" y="325" width="0.0146%" height="15" fill="rgb(238,59,32)" fg:x="85329" fg:w="37"/><text x="33.8498%" y="335.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (37 samples, 0.01%)</title><rect x="33.5998%" y="309" width="0.0146%" height="15" fill="rgb(226,82,3)" fg:x="85329" fg:w="37"/><text x="33.8498%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (37 samples, 0.01%)</title><rect x="33.5998%" y="293" width="0.0146%" height="15" fill="rgb(240,164,32)" fg:x="85329" fg:w="37"/><text x="33.8498%" y="303.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert (239 samples, 0.09%)</title><rect x="33.5214%" y="405" width="0.0941%" height="15" fill="rgb(232,46,7)" fg:x="85130" fg:w="239"/><text x="33.7714%" y="415.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::insert_full (239 samples, 0.09%)</title><rect x="33.5214%" y="389" width="0.0941%" height="15" fill="rgb(229,129,53)" fg:x="85130" fg:w="239"/><text x="33.7714%" y="399.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::insert_full (235 samples, 0.09%)</title><rect x="33.5230%" y="373" width="0.0925%" height="15" fill="rgb(234,188,29)" fg:x="85134" fg:w="235"/><text x="33.7730%" y="383.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (208 samples, 0.08%)</title><rect x="33.5336%" y="357" width="0.0819%" height="15" fill="rgb(246,141,4)" fg:x="85161" fg:w="208"/><text x="33.7836%" y="367.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (41 samples, 0.02%)</title><rect x="33.5994%" y="341" width="0.0161%" height="15" fill="rgb(229,23,39)" fg:x="85328" fg:w="41"/><text x="33.8494%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::len (183 samples, 0.07%)</title><rect x="33.6155%" y="373" width="0.0721%" height="15" fill="rgb(206,12,3)" fg:x="85369" fg:w="183"/><text x="33.8655%" y="383.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::index (217 samples, 0.09%)</title><rect x="33.6155%" y="405" width="0.0854%" height="15" fill="rgb(252,226,20)" fg:x="85369" fg:w="217"/><text x="33.8655%" y="415.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::len (217 samples, 0.09%)</title><rect x="33.6155%" y="389" width="0.0854%" height="15" fill="rgb(216,123,35)" fg:x="85369" fg:w="217"/><text x="33.8655%" y="399.50"></text></g><g><title>pathfinding::directed::astar::astar (34 samples, 0.01%)</title><rect x="33.6876%" y="373" width="0.0134%" height="15" fill="rgb(212,68,40)" fg:x="85552" fg:w="34"/><text x="33.9376%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (30 samples, 0.01%)</title><rect x="33.8703%" y="373" width="0.0118%" height="15" fill="rgb(254,125,32)" fg:x="86016" fg:w="30"/><text x="34.1203%" y="383.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::index_mut (41 samples, 0.02%)</title><rect x="33.8821%" y="357" width="0.0161%" height="15" fill="rgb(253,97,22)" fg:x="86046" fg:w="41"/><text x="34.1321%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::IndexMut&lt;I&gt;&gt;::index_mut (261 samples, 0.10%)</title><rect x="33.8703%" y="389" width="0.1028%" height="15" fill="rgb(241,101,14)" fg:x="86016" fg:w="261"/><text x="34.1203%" y="399.50"></text></g><g><title>core::slice::index::&lt;impl core::ops::index::IndexMut&lt;I&gt; for [T]&gt;::index_mut (231 samples, 0.09%)</title><rect x="33.8821%" y="373" width="0.0910%" height="15" fill="rgb(238,103,29)" fg:x="86046" fg:w="231"/><text x="34.1321%" y="383.50"></text></g><g><title>pathfinding::directed::astar::astar (190 samples, 0.07%)</title><rect x="33.8983%" y="357" width="0.0748%" height="15" fill="rgb(233,195,47)" fg:x="86087" fg:w="190"/><text x="34.1483%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (198 samples, 0.08%)</title><rect x="34.2117%" y="373" width="0.0780%" height="15" fill="rgb(246,218,30)" fg:x="86883" fg:w="198"/><text x="34.4617%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (276 samples, 0.11%)</title><rect x="34.3838%" y="357" width="0.1087%" height="15" fill="rgb(219,145,47)" fg:x="87320" fg:w="276"/><text x="34.6338%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (974 samples, 0.38%)</title><rect x="34.2897%" y="373" width="0.3835%" height="15" fill="rgb(243,12,26)" fg:x="87081" fg:w="974"/><text x="34.5397%" y="383.50"></text></g><g><title>core::ptr::write (459 samples, 0.18%)</title><rect x="34.4925%" y="357" width="0.1807%" height="15" fill="rgb(214,87,16)" fg:x="87596" fg:w="459"/><text x="34.7425%" y="367.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::write (30 samples, 0.01%)</title><rect x="34.7177%" y="357" width="0.0118%" height="15" fill="rgb(208,99,42)" fg:x="88168" fg:w="30"/><text x="34.9677%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (80 samples, 0.03%)</title><rect x="34.8090%" y="277" width="0.0315%" height="15" fill="rgb(253,99,2)" fg:x="88400" fg:w="80"/><text x="35.0590%" y="287.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::remove_lowest_bit (238 samples, 0.09%)</title><rect x="34.8472%" y="277" width="0.0937%" height="15" fill="rgb(220,168,23)" fg:x="88497" fg:w="238"/><text x="35.0972%" y="287.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (364 samples, 0.14%)</title><rect x="34.8071%" y="309" width="0.1433%" height="15" fill="rgb(242,38,24)" fg:x="88395" fg:w="364"/><text x="35.0571%" y="319.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (364 samples, 0.14%)</title><rect x="34.8071%" y="293" width="0.1433%" height="15" fill="rgb(225,182,9)" fg:x="88395" fg:w="364"/><text x="35.0571%" y="303.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::deallocate (251 samples, 0.10%)</title><rect x="34.9571%" y="245" width="0.0988%" height="15" fill="rgb(243,178,37)" fg:x="88776" fg:w="251"/><text x="35.2071%" y="255.50"></text></g><g><title>alloc::alloc::dealloc (251 samples, 0.10%)</title><rect x="34.9571%" y="229" width="0.0988%" height="15" fill="rgb(232,139,19)" fg:x="88776" fg:w="251"/><text x="35.2071%" y="239.50"></text></g><g><title>__rdl_dealloc (251 samples, 0.10%)</title><rect x="34.9571%" y="213" width="0.0988%" height="15" fill="rgb(225,201,24)" fg:x="88776" fg:w="251"/><text x="35.2071%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (251 samples, 0.10%)</title><rect x="34.9571%" y="197" width="0.0988%" height="15" fill="rgb(221,47,46)" fg:x="88776" fg:w="251"/><text x="35.2071%" y="207.50"></text></g><g><title>__GI___libc_free (251 samples, 0.10%)</title><rect x="34.9571%" y="181" width="0.0988%" height="15" fill="rgb(249,23,13)" fg:x="88776" fg:w="251"/><text x="35.2071%" y="191.50"></text></g><g><title>_int_free (205 samples, 0.08%)</title><rect x="34.9752%" y="165" width="0.0807%" height="15" fill="rgb(219,9,5)" fg:x="88822" fg:w="205"/><text x="35.2252%" y="175.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::free_buckets (258 samples, 0.10%)</title><rect x="34.9571%" y="261" width="0.1016%" height="15" fill="rgb(254,171,16)" fg:x="88776" fg:w="258"/><text x="35.2071%" y="271.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;,hashbrown::raw::inner::RawTableInner&lt;hashbrown::raw::inner::alloc::inner::Global&gt;::prepare_resize::{{closure}}&gt;&gt; (268 samples, 0.11%)</title><rect x="34.9536%" y="309" width="0.1055%" height="15" fill="rgb(230,171,20)" fg:x="88767" fg:w="268"/><text x="35.2036%" y="319.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (268 samples, 0.11%)</title><rect x="34.9536%" y="293" width="0.1055%" height="15" fill="rgb(210,71,41)" fg:x="88767" fg:w="268"/><text x="35.2036%" y="303.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize::{{closure}} (268 samples, 0.11%)</title><rect x="34.9536%" y="277" width="0.1055%" height="15" fill="rgb(206,173,20)" fg:x="88767" fg:w="268"/><text x="35.2036%" y="287.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ref (214 samples, 0.08%)</title><rect x="35.0591%" y="309" width="0.0843%" height="15" fill="rgb(233,88,34)" fg:x="89035" fg:w="214"/><text x="35.3091%" y="319.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::as_ptr (214 samples, 0.08%)</title><rect x="35.0591%" y="293" width="0.0843%" height="15" fill="rgb(223,209,46)" fg:x="89035" fg:w="214"/><text x="35.3091%" y="303.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::sub (214 samples, 0.08%)</title><rect x="35.0591%" y="277" width="0.0843%" height="15" fill="rgb(250,43,18)" fg:x="89035" fg:w="214"/><text x="35.3091%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::offset (214 samples, 0.08%)</title><rect x="35.0591%" y="261" width="0.0843%" height="15" fill="rgb(208,13,10)" fg:x="89035" fg:w="214"/><text x="35.3091%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (377 samples, 0.15%)</title><rect x="35.1461%" y="277" width="0.1485%" height="15" fill="rgb(212,200,36)" fg:x="89256" fg:w="377"/><text x="35.3961%" y="287.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (459 samples, 0.18%)</title><rect x="35.1461%" y="293" width="0.1807%" height="15" fill="rgb(225,90,30)" fg:x="89256" fg:w="459"/><text x="35.3961%" y="303.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (82 samples, 0.03%)</title><rect x="35.2946%" y="277" width="0.0323%" height="15" fill="rgb(236,182,39)" fg:x="89633" fg:w="82"/><text x="35.5446%" y="287.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::copy_from_nonoverlapping (467 samples, 0.18%)</title><rect x="35.1434%" y="309" width="0.1839%" height="15" fill="rgb(212,144,35)" fg:x="89249" fg:w="467"/><text x="35.3934%" y="319.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (119 samples, 0.05%)</title><rect x="35.7344%" y="277" width="0.0469%" height="15" fill="rgb(228,63,44)" fg:x="90750" fg:w="119"/><text x="35.9844%" y="287.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (502 samples, 0.20%)</title><rect x="35.7813%" y="277" width="0.1977%" height="15" fill="rgb(228,109,6)" fg:x="90869" fg:w="502"/><text x="36.0313%" y="287.50"></text></g><g><title>hashbrown::raw::inner::is_full (1,662 samples, 0.65%)</title><rect x="35.9789%" y="277" width="0.6544%" height="15" fill="rgb(238,117,24)" fg:x="91371" fg:w="1662"/><text x="36.2289%" y="287.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (810 samples, 0.32%)</title><rect x="36.6334%" y="277" width="0.3190%" height="15" fill="rgb(242,26,26)" fg:x="93033" fg:w="810"/><text x="36.8834%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (810 samples, 0.32%)</title><rect x="36.6334%" y="261" width="0.3190%" height="15" fill="rgb(221,92,48)" fg:x="93033" fg:w="810"/><text x="36.8834%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (810 samples, 0.32%)</title><rect x="36.6334%" y="245" width="0.3190%" height="15" fill="rgb(209,209,32)" fg:x="93033" fg:w="810"/><text x="36.8834%" y="255.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (4,553 samples, 1.79%)</title><rect x="35.3355%" y="293" width="1.7928%" height="15" fill="rgb(221,70,22)" fg:x="89737" fg:w="4553"/><text x="35.5855%" y="303.50">h..</text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (447 samples, 0.18%)</title><rect x="36.9523%" y="277" width="0.1760%" height="15" fill="rgb(248,145,5)" fg:x="93843" fg:w="447"/><text x="37.2023%" y="287.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (447 samples, 0.18%)</title><rect x="36.9523%" y="261" width="0.1760%" height="15" fill="rgb(226,116,26)" fg:x="93843" fg:w="447"/><text x="37.2023%" y="271.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (586 samples, 0.23%)</title><rect x="37.1283%" y="277" width="0.2307%" height="15" fill="rgb(244,5,17)" fg:x="94290" fg:w="586"/><text x="37.3783%" y="287.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (5,143 samples, 2.03%)</title><rect x="35.3355%" y="309" width="2.0251%" height="15" fill="rgb(252,159,33)" fg:x="89737" fg:w="5143"/><text x="35.5855%" y="319.50">h..</text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (590 samples, 0.23%)</title><rect x="37.1283%" y="293" width="0.2323%" height="15" fill="rgb(206,71,0)" fg:x="94290" fg:w="590"/><text x="37.3783%" y="303.50"></text></g><g><title>core::intrinsics::write_bytes (81 samples, 0.03%)</title><rect x="37.3658%" y="261" width="0.0319%" height="15" fill="rgb(233,118,54)" fg:x="94893" fg:w="81"/><text x="37.6158%" y="271.50"></text></g><g><title>__memset_avx2_unaligned_erms (74 samples, 0.03%)</title><rect x="37.3685%" y="245" width="0.0291%" height="15" fill="rgb(234,83,48)" fg:x="94900" fg:w="74"/><text x="37.6185%" y="255.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::write_bytes (86 samples, 0.03%)</title><rect x="37.3658%" y="277" width="0.0339%" height="15" fill="rgb(228,3,54)" fg:x="94893" fg:w="86"/><text x="37.6158%" y="287.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (778 samples, 0.31%)</title><rect x="37.4217%" y="261" width="0.3064%" height="15" fill="rgb(226,155,13)" fg:x="95035" fg:w="778"/><text x="37.6717%" y="271.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (778 samples, 0.31%)</title><rect x="37.4217%" y="245" width="0.3064%" height="15" fill="rgb(241,28,37)" fg:x="95035" fg:w="778"/><text x="37.6717%" y="255.50"></text></g><g><title>alloc::alloc::alloc (778 samples, 0.31%)</title><rect x="37.4217%" y="229" width="0.3064%" height="15" fill="rgb(233,93,10)" fg:x="95035" fg:w="778"/><text x="37.6717%" y="239.50"></text></g><g><title>__rdl_alloc (778 samples, 0.31%)</title><rect x="37.4217%" y="213" width="0.3064%" height="15" fill="rgb(225,113,19)" fg:x="95035" fg:w="778"/><text x="37.6717%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (778 samples, 0.31%)</title><rect x="37.4217%" y="197" width="0.3064%" height="15" fill="rgb(241,2,18)" fg:x="95035" fg:w="778"/><text x="37.6717%" y="207.50"></text></g><g><title>__GI___libc_malloc (772 samples, 0.30%)</title><rect x="37.4241%" y="181" width="0.3040%" height="15" fill="rgb(228,207,21)" fg:x="95041" fg:w="772"/><text x="37.6741%" y="191.50"></text></g><g><title>_int_malloc (407 samples, 0.16%)</title><rect x="37.5678%" y="165" width="0.1603%" height="15" fill="rgb(213,211,35)" fg:x="95406" fg:w="407"/><text x="37.8178%" y="175.50"></text></g><g><title>unlink_chunk.constprop.0 (59 samples, 0.02%)</title><rect x="37.7048%" y="149" width="0.0232%" height="15" fill="rgb(209,83,10)" fg:x="95754" fg:w="59"/><text x="37.9548%" y="159.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (832 samples, 0.33%)</title><rect x="37.4024%" y="277" width="0.3276%" height="15" fill="rgb(209,164,1)" fg:x="94986" fg:w="832"/><text x="37.6524%" y="287.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (1,031 samples, 0.41%)</title><rect x="37.3607%" y="309" width="0.4060%" height="15" fill="rgb(213,184,43)" fg:x="94880" fg:w="1031"/><text x="37.6107%" y="319.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (1,028 samples, 0.40%)</title><rect x="37.3618%" y="293" width="0.4048%" height="15" fill="rgb(231,61,34)" fg:x="94883" fg:w="1028"/><text x="37.6118%" y="303.50"></text></g><g><title>hashbrown::raw::inner::capacity_to_buckets (93 samples, 0.04%)</title><rect x="37.7300%" y="277" width="0.0366%" height="15" fill="rgb(235,75,3)" fg:x="95818" fg:w="93"/><text x="37.9800%" y="287.50"></text></g><g><title>core::num::&lt;impl usize&gt;::next_power_of_two (27 samples, 0.01%)</title><rect x="37.7560%" y="261" width="0.0106%" height="15" fill="rgb(220,106,47)" fg:x="95884" fg:w="27"/><text x="38.0060%" y="271.50"></text></g><g><title>core::num::&lt;impl usize&gt;::one_less_than_next_power_of_two (27 samples, 0.01%)</title><rect x="37.7560%" y="245" width="0.0106%" height="15" fill="rgb(210,196,33)" fg:x="95884" fg:w="27"/><text x="38.0060%" y="255.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (7,967 samples, 3.14%)</title><rect x="34.7527%" y="325" width="3.1371%" height="15" fill="rgb(229,154,42)" fg:x="88257" fg:w="7967"/><text x="35.0027%" y="335.50">has..</text></g><g><title>indexmap::map::core::get_hash::{{closure}} (313 samples, 0.12%)</title><rect x="37.7666%" y="309" width="0.1232%" height="15" fill="rgb(228,114,26)" fg:x="95911" fg:w="313"/><text x="38.0166%" y="319.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (8,033 samples, 3.16%)</title><rect x="34.7315%" y="357" width="3.1631%" height="15" fill="rgb(208,144,1)" fg:x="88203" fg:w="8033"/><text x="34.9815%" y="367.50">has..</text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (8,025 samples, 3.16%)</title><rect x="34.7346%" y="341" width="3.1600%" height="15" fill="rgb(239,112,37)" fg:x="88211" fg:w="8025"/><text x="34.9846%" y="351.50">has..</text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::probe_seq (254 samples, 0.10%)</title><rect x="38.2663%" y="341" width="0.1000%" height="15" fill="rgb(210,96,50)" fg:x="97180" fg:w="254"/><text x="38.5163%" y="351.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (149 samples, 0.06%)</title><rect x="38.3663%" y="341" width="0.0587%" height="15" fill="rgb(222,178,2)" fg:x="97434" fg:w="149"/><text x="38.6163%" y="351.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (159 samples, 0.06%)</title><rect x="38.4349%" y="341" width="0.0626%" height="15" fill="rgb(226,74,18)" fg:x="97608" fg:w="159"/><text x="38.6849%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (159 samples, 0.06%)</title><rect x="38.4349%" y="325" width="0.0626%" height="15" fill="rgb(225,67,54)" fg:x="97608" fg:w="159"/><text x="38.6849%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (159 samples, 0.06%)</title><rect x="38.4349%" y="309" width="0.0626%" height="15" fill="rgb(251,92,32)" fg:x="97608" fg:w="159"/><text x="38.6849%" y="319.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (375 samples, 0.15%)</title><rect x="38.4990%" y="341" width="0.1477%" height="15" fill="rgb(228,149,22)" fg:x="97771" fg:w="375"/><text x="38.7490%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (375 samples, 0.15%)</title><rect x="38.4990%" y="325" width="0.1477%" height="15" fill="rgb(243,54,13)" fg:x="97771" fg:w="375"/><text x="38.7490%" y="335.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (1,911 samples, 0.75%)</title><rect x="37.8946%" y="357" width="0.7525%" height="15" fill="rgb(243,180,28)" fg:x="96236" fg:w="1911"/><text x="38.1446%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (196 samples, 0.08%)</title><rect x="38.9200%" y="325" width="0.0772%" height="15" fill="rgb(208,167,24)" fg:x="98840" fg:w="196"/><text x="39.1700%" y="335.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (892 samples, 0.35%)</title><rect x="38.6471%" y="357" width="0.3512%" height="15" fill="rgb(245,73,45)" fg:x="98147" fg:w="892"/><text x="38.8971%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (199 samples, 0.08%)</title><rect x="38.9200%" y="341" width="0.0784%" height="15" fill="rgb(237,203,48)" fg:x="98840" fg:w="199"/><text x="39.1700%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (10,996 samples, 4.33%)</title><rect x="34.6732%" y="373" width="4.3299%" height="15" fill="rgb(211,197,16)" fg:x="88055" fg:w="10996"/><text x="34.9232%" y="383.50">hashb..</text></g><g><title>__memmove_avx_unaligned_erms (762 samples, 0.30%)</title><rect x="39.2464%" y="165" width="0.3001%" height="15" fill="rgb(243,99,51)" fg:x="99669" fg:w="762"/><text x="39.4964%" y="175.50"></text></g><g><title>_int_free (211 samples, 0.08%)</title><rect x="39.5465%" y="165" width="0.0831%" height="15" fill="rgb(215,123,29)" fg:x="100431" fg:w="211"/><text x="39.7965%" y="175.50"></text></g><g><title>malloc_consolidate (173 samples, 0.07%)</title><rect x="40.0087%" y="149" width="0.0681%" height="15" fill="rgb(239,186,37)" fg:x="101605" fg:w="173"/><text x="40.2587%" y="159.50"></text></g><g><title>_int_malloc (1,231 samples, 0.48%)</title><rect x="39.6295%" y="165" width="0.4847%" height="15" fill="rgb(252,136,39)" fg:x="100642" fg:w="1231"/><text x="39.8795%" y="175.50"></text></g><g><title>unlink_chunk.constprop.0 (95 samples, 0.04%)</title><rect x="40.0769%" y="149" width="0.0374%" height="15" fill="rgb(223,213,32)" fg:x="101778" fg:w="95"/><text x="40.3269%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (2,754 samples, 1.08%)</title><rect x="39.0346%" y="277" width="1.0844%" height="15" fill="rgb(233,115,5)" fg:x="99131" fg:w="2754"/><text x="39.2846%" y="287.50"></text></g><g><title>alloc::alloc::Global::grow_impl (2,754 samples, 1.08%)</title><rect x="39.0346%" y="261" width="1.0844%" height="15" fill="rgb(207,226,44)" fg:x="99131" fg:w="2754"/><text x="39.2846%" y="271.50"></text></g><g><title>alloc::alloc::realloc (2,752 samples, 1.08%)</title><rect x="39.0353%" y="245" width="1.0836%" height="15" fill="rgb(208,126,0)" fg:x="99133" fg:w="2752"/><text x="39.2853%" y="255.50"></text></g><g><title>__rdl_realloc (2,752 samples, 1.08%)</title><rect x="39.0353%" y="229" width="1.0836%" height="15" fill="rgb(244,66,21)" fg:x="99133" fg:w="2752"/><text x="39.2853%" y="239.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (2,752 samples, 1.08%)</title><rect x="39.0353%" y="213" width="1.0836%" height="15" fill="rgb(222,97,12)" fg:x="99133" fg:w="2752"/><text x="39.2853%" y="223.50"></text></g><g><title>__GI___libc_realloc (2,744 samples, 1.08%)</title><rect x="39.0385%" y="197" width="1.0805%" height="15" fill="rgb(219,213,19)" fg:x="99141" fg:w="2744"/><text x="39.2885%" y="207.50"></text></g><g><title>_int_realloc (2,312 samples, 0.91%)</title><rect x="39.2086%" y="181" width="0.9104%" height="15" fill="rgb(252,169,30)" fg:x="99573" fg:w="2312"/><text x="39.4586%" y="191.50"></text></g><g><title>alloc::raw_vec::finish_grow (2,774 samples, 1.09%)</title><rect x="39.0306%" y="293" width="1.0923%" height="15" fill="rgb(206,32,51)" fg:x="99121" fg:w="2774"/><text x="39.2806%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (2,839 samples, 1.12%)</title><rect x="39.0086%" y="309" width="1.1179%" height="15" fill="rgb(250,172,42)" fg:x="99065" fg:w="2839"/><text x="39.2586%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (2,853 samples, 1.12%)</title><rect x="39.0086%" y="357" width="1.1234%" height="15" fill="rgb(209,34,43)" fg:x="99065" fg:w="2853"/><text x="39.2586%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (2,853 samples, 1.12%)</title><rect x="39.0086%" y="341" width="1.1234%" height="15" fill="rgb(223,11,35)" fg:x="99065" fg:w="2853"/><text x="39.2586%" y="351.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (2,853 samples, 1.12%)</title><rect x="39.0086%" y="325" width="1.1234%" height="15" fill="rgb(251,219,26)" fg:x="99065" fg:w="2853"/><text x="39.2586%" y="335.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (16,346 samples, 6.44%)</title><rect x="33.7010%" y="405" width="6.4365%" height="15" fill="rgb(231,119,3)" fg:x="85586" fg:w="16346"/><text x="33.9510%" y="415.50">indexmap..</text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (15,655 samples, 6.16%)</title><rect x="33.9731%" y="389" width="6.1644%" height="15" fill="rgb(216,97,11)" fg:x="86277" fg:w="15655"/><text x="34.2231%" y="399.50">indexmap..</text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (2,873 samples, 1.13%)</title><rect x="39.0062%" y="373" width="1.1313%" height="15" fill="rgb(223,59,9)" fg:x="99059" fg:w="2873"/><text x="39.2562%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (153 samples, 0.06%)</title><rect x="40.1375%" y="373" width="0.0602%" height="15" fill="rgb(233,93,31)" fg:x="101932" fg:w="153"/><text x="40.3875%" y="383.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (115 samples, 0.05%)</title><rect x="40.1525%" y="357" width="0.0453%" height="15" fill="rgb(239,81,33)" fg:x="101970" fg:w="115"/><text x="40.4025%" y="367.50"></text></g><g><title>indexmap::map::core::raw::OccupiedEntry&lt;K,V&gt;::get (155 samples, 0.06%)</title><rect x="40.1375%" y="405" width="0.0610%" height="15" fill="rgb(213,120,34)" fg:x="101932" fg:w="155"/><text x="40.3875%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::index::Index&lt;I&gt;&gt;::index (155 samples, 0.06%)</title><rect x="40.1375%" y="389" width="0.0610%" height="15" fill="rgb(243,49,53)" fg:x="101932" fg:w="155"/><text x="40.3875%" y="399.50"></text></g><g><title>pathfinding::directed::astar::astar (225 samples, 0.09%)</title><rect x="40.1985%" y="405" width="0.0886%" height="15" fill="rgb(247,216,33)" fg:x="102087" fg:w="225"/><text x="40.4485%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (271 samples, 0.11%)</title><rect x="40.3230%" y="261" width="0.1067%" height="15" fill="rgb(226,26,14)" fg:x="102403" fg:w="271"/><text x="40.5730%" y="271.50"></text></g><g><title>pathfinding::directed::reverse_path::{{closure}}::{{closure}} (271 samples, 0.11%)</title><rect x="40.3230%" y="245" width="0.1067%" height="15" fill="rgb(215,49,53)" fg:x="102403" fg:w="271"/><text x="40.5730%" y="255.50"></text></g><g><title>&lt;itertools::sources::Unfold&lt;St,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (401 samples, 0.16%)</title><rect x="40.3135%" y="293" width="0.1579%" height="15" fill="rgb(245,162,40)" fg:x="102379" fg:w="401"/><text x="40.5635%" y="303.50"></text></g><g><title>pathfinding::directed::reverse_path::{{closure}} (401 samples, 0.16%)</title><rect x="40.3135%" y="277" width="0.1579%" height="15" fill="rgb(229,68,17)" fg:x="102379" fg:w="401"/><text x="40.5635%" y="287.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::get_index (106 samples, 0.04%)</title><rect x="40.4297%" y="261" width="0.0417%" height="15" fill="rgb(213,182,10)" fg:x="102674" fg:w="106"/><text x="40.6797%" y="271.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get (106 samples, 0.04%)</title><rect x="40.4297%" y="245" width="0.0417%" height="15" fill="rgb(245,125,30)" fg:x="102674" fg:w="106"/><text x="40.6797%" y="255.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get (105 samples, 0.04%)</title><rect x="40.4301%" y="229" width="0.0413%" height="15" fill="rgb(232,202,2)" fg:x="102675" fg:w="105"/><text x="40.6801%" y="239.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_mut_ptr (52 samples, 0.02%)</title><rect x="40.4714%" y="293" width="0.0205%" height="15" fill="rgb(237,140,51)" fg:x="102780" fg:w="52"/><text x="40.7214%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::capacity (33 samples, 0.01%)</title><rect x="40.4919%" y="293" width="0.0130%" height="15" fill="rgb(236,157,25)" fg:x="102832" fg:w="33"/><text x="40.7419%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (79 samples, 0.03%)</title><rect x="40.6730%" y="101" width="0.0311%" height="15" fill="rgb(219,209,0)" fg:x="103292" fg:w="79"/><text x="40.9230%" y="111.50"></text></g><g><title>_int_free (144 samples, 0.06%)</title><rect x="40.7041%" y="101" width="0.0567%" height="15" fill="rgb(240,116,54)" fg:x="103371" fg:w="144"/><text x="40.9541%" y="111.50"></text></g><g><title>malloc_consolidate (58 samples, 0.02%)</title><rect x="40.9558%" y="85" width="0.0228%" height="15" fill="rgb(216,10,36)" fg:x="104010" fg:w="58"/><text x="41.2058%" y="95.50"></text></g><g><title>_int_malloc (642 samples, 0.25%)</title><rect x="40.7608%" y="101" width="0.2528%" height="15" fill="rgb(222,72,44)" fg:x="103515" fg:w="642"/><text x="41.0108%" y="111.50"></text></g><g><title>unlink_chunk.constprop.0 (89 samples, 0.04%)</title><rect x="40.9786%" y="85" width="0.0350%" height="15" fill="rgb(232,159,9)" fg:x="104068" fg:w="89"/><text x="41.2286%" y="95.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (1,250 samples, 0.49%)</title><rect x="40.5242%" y="213" width="0.4922%" height="15" fill="rgb(210,39,32)" fg:x="102914" fg:w="1250"/><text x="40.7742%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (1,250 samples, 0.49%)</title><rect x="40.5242%" y="197" width="0.4922%" height="15" fill="rgb(216,194,45)" fg:x="102914" fg:w="1250"/><text x="40.7742%" y="207.50"></text></g><g><title>alloc::alloc::realloc (1,250 samples, 0.49%)</title><rect x="40.5242%" y="181" width="0.4922%" height="15" fill="rgb(218,18,35)" fg:x="102914" fg:w="1250"/><text x="40.7742%" y="191.50"></text></g><g><title>__rdl_realloc (1,250 samples, 0.49%)</title><rect x="40.5242%" y="165" width="0.4922%" height="15" fill="rgb(207,83,51)" fg:x="102914" fg:w="1250"/><text x="40.7742%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (1,250 samples, 0.49%)</title><rect x="40.5242%" y="149" width="0.4922%" height="15" fill="rgb(225,63,43)" fg:x="102914" fg:w="1250"/><text x="40.7742%" y="159.50"></text></g><g><title>__GI___libc_realloc (1,243 samples, 0.49%)</title><rect x="40.5269%" y="133" width="0.4895%" height="15" fill="rgb(207,57,36)" fg:x="102921" fg:w="1243"/><text x="40.7769%" y="143.50"></text></g><g><title>_int_realloc (974 samples, 0.38%)</title><rect x="40.6329%" y="117" width="0.3835%" height="15" fill="rgb(216,99,33)" fg:x="103190" fg:w="974"/><text x="40.8829%" y="127.50"></text></g><g><title>alloc::raw_vec::finish_grow (1,263 samples, 0.50%)</title><rect x="40.5214%" y="229" width="0.4973%" height="15" fill="rgb(225,42,16)" fg:x="102907" fg:w="1263"/><text x="40.7714%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (1,320 samples, 0.52%)</title><rect x="40.5061%" y="245" width="0.5198%" height="15" fill="rgb(220,201,45)" fg:x="102868" fg:w="1320"/><text x="40.7561%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (1,325 samples, 0.52%)</title><rect x="40.5049%" y="293" width="0.5217%" height="15" fill="rgb(225,33,4)" fg:x="102865" fg:w="1325"/><text x="40.7549%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (1,325 samples, 0.52%)</title><rect x="40.5049%" y="277" width="0.5217%" height="15" fill="rgb(224,33,50)" fg:x="102865" fg:w="1325"/><text x="40.7549%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1,322 samples, 0.52%)</title><rect x="40.5061%" y="261" width="0.5206%" height="15" fill="rgb(246,198,51)" fg:x="102868" fg:w="1322"/><text x="40.7561%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (1,876 samples, 0.74%)</title><rect x="40.3096%" y="309" width="0.7387%" height="15" fill="rgb(205,22,4)" fg:x="102369" fg:w="1876"/><text x="40.5596%" y="319.50"></text></g><g><title>core::ptr::write (51 samples, 0.02%)</title><rect x="41.0282%" y="293" width="0.0201%" height="15" fill="rgb(206,3,8)" fg:x="104194" fg:w="51"/><text x="41.2782%" y="303.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::double_ended::DoubleEndedIterator&gt;::next_back (33 samples, 0.01%)</title><rect x="41.0609%" y="229" width="0.0130%" height="15" fill="rgb(251,23,15)" fg:x="104277" fg:w="33"/><text x="41.3109%" y="239.50"></text></g><g><title>core::ptr::read (30 samples, 0.01%)</title><rect x="41.0621%" y="213" width="0.0118%" height="15" fill="rgb(252,88,28)" fg:x="104280" fg:w="30"/><text x="41.3121%" y="223.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (47 samples, 0.02%)</title><rect x="41.0739%" y="229" width="0.0185%" height="15" fill="rgb(212,127,14)" fg:x="104310" fg:w="47"/><text x="41.3239%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each::call::{{closure}} (47 samples, 0.02%)</title><rect x="41.0739%" y="213" width="0.0185%" height="15" fill="rgb(247,145,37)" fg:x="104310" fg:w="47"/><text x="41.3239%" y="223.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend::{{closure}} (47 samples, 0.02%)</title><rect x="41.0739%" y="197" width="0.0185%" height="15" fill="rgb(209,117,53)" fg:x="104310" fg:w="47"/><text x="41.3239%" y="207.50"></text></g><g><title>core::ptr::write (47 samples, 0.02%)</title><rect x="41.0739%" y="181" width="0.0185%" height="15" fill="rgb(212,90,42)" fg:x="104310" fg:w="47"/><text x="41.3239%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;&amp;engine::engine::world::Position&gt;&gt; (124 samples, 0.05%)</title><rect x="41.0924%" y="229" width="0.0488%" height="15" fill="rgb(218,164,37)" fg:x="104357" fg:w="124"/><text x="41.3424%" y="239.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 samples, 0.05%)</title><rect x="41.0924%" y="213" width="0.0488%" height="15" fill="rgb(246,65,34)" fg:x="104357" fg:w="124"/><text x="41.3424%" y="223.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;&amp;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (124 samples, 0.05%)</title><rect x="41.0924%" y="197" width="0.0488%" height="15" fill="rgb(231,100,33)" fg:x="104357" fg:w="124"/><text x="41.3424%" y="207.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 samples, 0.05%)</title><rect x="41.0924%" y="181" width="0.0488%" height="15" fill="rgb(228,126,14)" fg:x="104357" fg:w="124"/><text x="41.3424%" y="191.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;&amp;engine::engine::world::Position&gt;&gt; (124 samples, 0.05%)</title><rect x="41.0924%" y="165" width="0.0488%" height="15" fill="rgb(215,173,21)" fg:x="104357" fg:w="124"/><text x="41.3424%" y="175.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (124 samples, 0.05%)</title><rect x="41.0924%" y="149" width="0.0488%" height="15" fill="rgb(210,6,40)" fg:x="104357" fg:w="124"/><text x="41.3424%" y="159.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (124 samples, 0.05%)</title><rect x="41.0924%" y="133" width="0.0488%" height="15" fill="rgb(212,48,18)" fg:x="104357" fg:w="124"/><text x="41.3424%" y="143.50"></text></g><g><title>alloc::alloc::dealloc (124 samples, 0.05%)</title><rect x="41.0924%" y="117" width="0.0488%" height="15" fill="rgb(230,214,11)" fg:x="104357" fg:w="124"/><text x="41.3424%" y="127.50"></text></g><g><title>__rdl_dealloc (124 samples, 0.05%)</title><rect x="41.0924%" y="101" width="0.0488%" height="15" fill="rgb(254,105,39)" fg:x="104357" fg:w="124"/><text x="41.3424%" y="111.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (124 samples, 0.05%)</title><rect x="41.0924%" y="85" width="0.0488%" height="15" fill="rgb(245,158,5)" fg:x="104357" fg:w="124"/><text x="41.3424%" y="95.50"></text></g><g><title>__GI___libc_free (124 samples, 0.05%)</title><rect x="41.0924%" y="69" width="0.0488%" height="15" fill="rgb(249,208,11)" fg:x="104357" fg:w="124"/><text x="41.3424%" y="79.50"></text></g><g><title>_int_free (113 samples, 0.04%)</title><rect x="41.0967%" y="53" width="0.0445%" height="15" fill="rgb(210,39,28)" fg:x="104368" fg:w="113"/><text x="41.3467%" y="63.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (2,117 samples, 0.83%)</title><rect x="40.3092%" y="325" width="0.8336%" height="15" fill="rgb(211,56,53)" fg:x="102368" fg:w="2117"/><text x="40.5592%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (240 samples, 0.09%)</title><rect x="41.0483%" y="309" width="0.0945%" height="15" fill="rgb(226,201,30)" fg:x="104245" fg:w="240"/><text x="41.2983%" y="319.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (239 samples, 0.09%)</title><rect x="41.0487%" y="293" width="0.0941%" height="15" fill="rgb(239,101,34)" fg:x="104246" fg:w="239"/><text x="41.2987%" y="303.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (239 samples, 0.09%)</title><rect x="41.0487%" y="277" width="0.0941%" height="15" fill="rgb(226,209,5)" fg:x="104246" fg:w="239"/><text x="41.2987%" y="287.50"></text></g><g><title>&lt;core::iter::adapters::rev::Rev&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (239 samples, 0.09%)</title><rect x="41.0487%" y="261" width="0.0941%" height="15" fill="rgb(250,105,47)" fg:x="104246" fg:w="239"/><text x="41.2987%" y="271.50"></text></g><g><title>core::iter::traits::double_ended::DoubleEndedIterator::rfold (239 samples, 0.09%)</title><rect x="41.0487%" y="245" width="0.0941%" height="15" fill="rgb(230,72,3)" fg:x="104246" fg:w="239"/><text x="41.2987%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (250 samples, 0.10%)</title><rect x="41.1487%" y="261" width="0.0984%" height="15" fill="rgb(232,218,39)" fg:x="104500" fg:w="250"/><text x="41.3987%" y="271.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (250 samples, 0.10%)</title><rect x="41.1487%" y="245" width="0.0984%" height="15" fill="rgb(248,166,6)" fg:x="104500" fg:w="250"/><text x="41.3987%" y="255.50"></text></g><g><title>alloc::alloc::alloc (250 samples, 0.10%)</title><rect x="41.1487%" y="229" width="0.0984%" height="15" fill="rgb(247,89,20)" fg:x="104500" fg:w="250"/><text x="41.3987%" y="239.50"></text></g><g><title>__rdl_alloc (250 samples, 0.10%)</title><rect x="41.1487%" y="213" width="0.0984%" height="15" fill="rgb(248,130,54)" fg:x="104500" fg:w="250"/><text x="41.3987%" y="223.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (250 samples, 0.10%)</title><rect x="41.1487%" y="197" width="0.0984%" height="15" fill="rgb(234,196,4)" fg:x="104500" fg:w="250"/><text x="41.3987%" y="207.50"></text></g><g><title>__GI___libc_malloc (250 samples, 0.10%)</title><rect x="41.1487%" y="181" width="0.0984%" height="15" fill="rgb(250,143,31)" fg:x="104500" fg:w="250"/><text x="41.3987%" y="191.50"></text></g><g><title>_int_malloc (95 samples, 0.04%)</title><rect x="41.2097%" y="165" width="0.0374%" height="15" fill="rgb(211,110,34)" fg:x="104655" fg:w="95"/><text x="41.4597%" y="175.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (93,444 samples, 36.80%)</title><rect x="4.4531%" y="501" width="36.7952%" height="15" fill="rgb(215,124,48)" fg:x="11309" fg:w="93444"/><text x="4.7031%" y="511.50">&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (93,441 samples, 36.79%)</title><rect x="4.4543%" y="485" width="36.7940%" height="15" fill="rgb(216,46,13)" fg:x="11312" fg:w="93441"/><text x="4.7043%" y="495.50">core::ops::function::impls::&lt;impl core::ops::function::FnMut..</text></g><g><title>core::ops::function::Fn::call (93,441 samples, 36.79%)</title><rect x="4.4543%" y="469" width="36.7940%" height="15" fill="rgb(205,184,25)" fg:x="11312" fg:w="93441"/><text x="4.7043%" y="479.50">core::ops::function::Fn::call</text></g><g><title>engine::engine::actor::pathfinding::plan_path (91,830 samples, 36.16%)</title><rect x="5.0887%" y="453" width="36.1597%" height="15" fill="rgb(228,1,10)" fg:x="12923" fg:w="91830"/><text x="5.3387%" y="463.50">engine::engine::actor::pathfinding::plan_path</text></g><g><title>engine::engine::actor::pathfinding::get_path (91,422 samples, 36.00%)</title><rect x="5.2493%" y="437" width="35.9990%" height="15" fill="rgb(213,116,27)" fg:x="13331" fg:w="91422"/><text x="5.4993%" y="447.50">engine::engine::actor::pathfinding::get_path</text></g><g><title>pathfinding::directed::astar::astar (89,403 samples, 35.20%)</title><rect x="6.0443%" y="421" width="35.2040%" height="15" fill="rgb(241,95,50)" fg:x="15350" fg:w="89403"/><text x="6.2943%" y="431.50">pathfinding::directed::astar::astar</text></g><g><title>pathfinding::directed::reverse_path (2,441 samples, 0.96%)</title><rect x="40.2871%" y="405" width="0.9612%" height="15" fill="rgb(238,48,32)" fg:x="102312" fg:w="2441"/><text x="40.5371%" y="415.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (2,441 samples, 0.96%)</title><rect x="40.2871%" y="389" width="0.9612%" height="15" fill="rgb(235,113,49)" fg:x="102312" fg:w="2441"/><text x="40.5371%" y="399.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (2,441 samples, 0.96%)</title><rect x="40.2871%" y="373" width="0.9612%" height="15" fill="rgb(205,127,43)" fg:x="102312" fg:w="2441"/><text x="40.5371%" y="383.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (2,430 samples, 0.96%)</title><rect x="40.2915%" y="357" width="0.9569%" height="15" fill="rgb(250,162,2)" fg:x="102323" fg:w="2430"/><text x="40.5415%" y="367.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (2,414 samples, 0.95%)</title><rect x="40.2978%" y="341" width="0.9506%" height="15" fill="rgb(220,13,41)" fg:x="102339" fg:w="2414"/><text x="40.5478%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T&gt;::with_capacity (256 samples, 0.10%)</title><rect x="41.1475%" y="325" width="0.1008%" height="15" fill="rgb(249,221,25)" fg:x="104497" fg:w="256"/><text x="41.3975%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (256 samples, 0.10%)</title><rect x="41.1475%" y="309" width="0.1008%" height="15" fill="rgb(215,208,19)" fg:x="104497" fg:w="256"/><text x="41.3975%" y="319.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (255 samples, 0.10%)</title><rect x="41.1479%" y="293" width="0.1004%" height="15" fill="rgb(236,175,2)" fg:x="104498" fg:w="255"/><text x="41.3979%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (253 samples, 0.10%)</title><rect x="41.1487%" y="277" width="0.0996%" height="15" fill="rgb(241,52,2)" fg:x="104500" fg:w="253"/><text x="41.3987%" y="287.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (30 samples, 0.01%)</title><rect x="41.2534%" y="437" width="0.0118%" height="15" fill="rgb(248,140,14)" fg:x="104766" fg:w="30"/><text x="41.5034%" y="447.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (44 samples, 0.02%)</title><rect x="41.2534%" y="453" width="0.0173%" height="15" fill="rgb(253,22,42)" fg:x="104766" fg:w="44"/><text x="41.5034%" y="463.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (34 samples, 0.01%)</title><rect x="41.2771%" y="437" width="0.0134%" height="15" fill="rgb(234,61,47)" fg:x="104826" fg:w="34"/><text x="41.5271%" y="447.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (34 samples, 0.01%)</title><rect x="41.2771%" y="421" width="0.0134%" height="15" fill="rgb(208,226,15)" fg:x="104826" fg:w="34"/><text x="41.5271%" y="431.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (51 samples, 0.02%)</title><rect x="41.2716%" y="453" width="0.0201%" height="15" fill="rgb(217,221,4)" fg:x="104812" fg:w="51"/><text x="41.5216%" y="463.50"></text></g><g><title>engine::engine::actor::move_actor (31 samples, 0.01%)</title><rect x="41.2916%" y="453" width="0.0122%" height="15" fill="rgb(212,174,34)" fg:x="104863" fg:w="31"/><text x="41.5416%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (147 samples, 0.06%)</title><rect x="41.2483%" y="501" width="0.0579%" height="15" fill="rgb(253,83,4)" fg:x="104753" fg:w="147"/><text x="41.4983%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (142 samples, 0.06%)</title><rect x="41.2503%" y="485" width="0.0559%" height="15" fill="rgb(250,195,49)" fg:x="104758" fg:w="142"/><text x="41.5003%" y="495.50"></text></g><g><title>core::ops::function::Fn::call (142 samples, 0.06%)</title><rect x="41.2503%" y="469" width="0.0559%" height="15" fill="rgb(241,192,25)" fg:x="104758" fg:w="142"/><text x="41.5003%" y="479.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (44 samples, 0.02%)</title><rect x="41.3511%" y="437" width="0.0173%" height="15" fill="rgb(208,124,10)" fg:x="105014" fg:w="44"/><text x="41.6011%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (34 samples, 0.01%)</title><rect x="41.3550%" y="421" width="0.0134%" height="15" fill="rgb(222,33,0)" fg:x="105024" fg:w="34"/><text x="41.6050%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (33 samples, 0.01%)</title><rect x="41.3554%" y="405" width="0.0130%" height="15" fill="rgb(234,209,28)" fg:x="105025" fg:w="33"/><text x="41.6054%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (33 samples, 0.01%)</title><rect x="41.3554%" y="389" width="0.0130%" height="15" fill="rgb(224,11,23)" fg:x="105025" fg:w="33"/><text x="41.6054%" y="399.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (28 samples, 0.01%)</title><rect x="41.3850%" y="389" width="0.0110%" height="15" fill="rgb(232,99,1)" fg:x="105100" fg:w="28"/><text x="41.6350%" y="399.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (28 samples, 0.01%)</title><rect x="41.3850%" y="373" width="0.0110%" height="15" fill="rgb(237,95,45)" fg:x="105100" fg:w="28"/><text x="41.6350%" y="383.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (52 samples, 0.02%)</title><rect x="41.3850%" y="405" width="0.0205%" height="15" fill="rgb(208,109,11)" fg:x="105100" fg:w="52"/><text x="41.6350%" y="415.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (41 samples, 0.02%)</title><rect x="41.4054%" y="389" width="0.0161%" height="15" fill="rgb(216,190,48)" fg:x="105152" fg:w="41"/><text x="41.6554%" y="399.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (39 samples, 0.02%)</title><rect x="41.4062%" y="373" width="0.0154%" height="15" fill="rgb(251,171,36)" fg:x="105154" fg:w="39"/><text x="41.6562%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (39 samples, 0.02%)</title><rect x="41.4062%" y="357" width="0.0154%" height="15" fill="rgb(230,62,22)" fg:x="105154" fg:w="39"/><text x="41.6562%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_add (39 samples, 0.02%)</title><rect x="41.4062%" y="341" width="0.0154%" height="15" fill="rgb(225,114,35)" fg:x="105154" fg:w="39"/><text x="41.6562%" y="351.50"></text></g><g><title>bevy_render::draw::Draw::set_bind_group (43 samples, 0.02%)</title><rect x="41.4054%" y="405" width="0.0169%" height="15" fill="rgb(215,118,42)" fg:x="105152" fg:w="43"/><text x="41.6554%" y="415.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (63 samples, 0.02%)</title><rect x="41.4239%" y="309" width="0.0248%" height="15" fill="rgb(243,119,21)" fg:x="105199" fg:w="63"/><text x="41.6739%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (73 samples, 0.03%)</title><rect x="41.4232%" y="341" width="0.0287%" height="15" fill="rgb(252,177,53)" fg:x="105197" fg:w="73"/><text x="41.6732%" y="351.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (71 samples, 0.03%)</title><rect x="41.4239%" y="325" width="0.0280%" height="15" fill="rgb(237,209,29)" fg:x="105199" fg:w="71"/><text x="41.6739%" y="335.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (104 samples, 0.04%)</title><rect x="41.4535%" y="277" width="0.0410%" height="15" fill="rgb(212,65,23)" fg:x="105274" fg:w="104"/><text x="41.7035%" y="287.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (111 samples, 0.04%)</title><rect x="41.4535%" y="309" width="0.0437%" height="15" fill="rgb(230,222,46)" fg:x="105274" fg:w="111"/><text x="41.7035%" y="319.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (111 samples, 0.04%)</title><rect x="41.4535%" y="293" width="0.0437%" height="15" fill="rgb(215,135,32)" fg:x="105274" fg:w="111"/><text x="41.7035%" y="303.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_mut_untyped (207 samples, 0.08%)</title><rect x="41.4224%" y="405" width="0.0815%" height="15" fill="rgb(246,101,22)" fg:x="105195" fg:w="207"/><text x="41.6724%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (207 samples, 0.08%)</title><rect x="41.4224%" y="389" width="0.0815%" height="15" fill="rgb(206,107,13)" fg:x="105195" fg:w="207"/><text x="41.6724%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (207 samples, 0.08%)</title><rect x="41.4224%" y="373" width="0.0815%" height="15" fill="rgb(250,100,44)" fg:x="105195" fg:w="207"/><text x="41.6724%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (205 samples, 0.08%)</title><rect x="41.4232%" y="357" width="0.0807%" height="15" fill="rgb(231,147,38)" fg:x="105197" fg:w="205"/><text x="41.6732%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (132 samples, 0.05%)</title><rect x="41.4519%" y="341" width="0.0520%" height="15" fill="rgb(229,8,40)" fg:x="105270" fg:w="132"/><text x="41.7019%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (132 samples, 0.05%)</title><rect x="41.4519%" y="325" width="0.0520%" height="15" fill="rgb(221,135,30)" fg:x="105270" fg:w="132"/><text x="41.7019%" y="335.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (80 samples, 0.03%)</title><rect x="41.5043%" y="293" width="0.0315%" height="15" fill="rgb(249,193,18)" fg:x="105403" fg:w="80"/><text x="41.7543%" y="303.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (80 samples, 0.03%)</title><rect x="41.5043%" y="277" width="0.0315%" height="15" fill="rgb(209,133,39)" fg:x="105403" fg:w="80"/><text x="41.7543%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (87 samples, 0.03%)</title><rect x="41.5039%" y="309" width="0.0343%" height="15" fill="rgb(232,100,14)" fg:x="105402" fg:w="87"/><text x="41.7539%" y="319.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::iter_assets (96 samples, 0.04%)</title><rect x="41.5039%" y="405" width="0.0378%" height="15" fill="rgb(224,185,1)" fg:x="105402" fg:w="96"/><text x="41.7539%" y="415.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (96 samples, 0.04%)</title><rect x="41.5039%" y="389" width="0.0378%" height="15" fill="rgb(223,139,8)" fg:x="105402" fg:w="96"/><text x="41.7539%" y="399.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (96 samples, 0.04%)</title><rect x="41.5039%" y="373" width="0.0378%" height="15" fill="rgb(232,213,38)" fg:x="105402" fg:w="96"/><text x="41.7539%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (96 samples, 0.04%)</title><rect x="41.5039%" y="357" width="0.0378%" height="15" fill="rgb(207,94,22)" fg:x="105402" fg:w="96"/><text x="41.7539%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (96 samples, 0.04%)</title><rect x="41.5039%" y="341" width="0.0378%" height="15" fill="rgb(219,183,54)" fg:x="105402" fg:w="96"/><text x="41.7539%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (96 samples, 0.04%)</title><rect x="41.5039%" y="325" width="0.0378%" height="15" fill="rgb(216,185,54)" fg:x="105402" fg:w="96"/><text x="41.7539%" y="335.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (31 samples, 0.01%)</title><rect x="41.5421%" y="389" width="0.0122%" height="15" fill="rgb(254,217,39)" fg:x="105499" fg:w="31"/><text x="41.7921%" y="399.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (31 samples, 0.01%)</title><rect x="41.5421%" y="373" width="0.0122%" height="15" fill="rgb(240,178,23)" fg:x="105499" fg:w="31"/><text x="41.7921%" y="383.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get_bind_group (105 samples, 0.04%)</title><rect x="41.5543%" y="389" width="0.0413%" height="15" fill="rgb(218,11,47)" fg:x="105530" fg:w="105"/><text x="41.8043%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (105 samples, 0.04%)</title><rect x="41.5543%" y="373" width="0.0413%" height="15" fill="rgb(218,51,51)" fg:x="105530" fg:w="105"/><text x="41.8043%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (105 samples, 0.04%)</title><rect x="41.5543%" y="357" width="0.0413%" height="15" fill="rgb(238,126,27)" fg:x="105530" fg:w="105"/><text x="41.8043%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (105 samples, 0.04%)</title><rect x="41.5543%" y="341" width="0.0413%" height="15" fill="rgb(249,202,22)" fg:x="105530" fg:w="105"/><text x="41.8043%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (103 samples, 0.04%)</title><rect x="41.5551%" y="325" width="0.0406%" height="15" fill="rgb(254,195,49)" fg:x="105532" fg:w="103"/><text x="41.8051%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (103 samples, 0.04%)</title><rect x="41.5551%" y="309" width="0.0406%" height="15" fill="rgb(208,123,14)" fg:x="105532" fg:w="103"/><text x="41.8051%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (43 samples, 0.02%)</title><rect x="41.5787%" y="293" width="0.0169%" height="15" fill="rgb(224,200,8)" fg:x="105592" fg:w="43"/><text x="41.8287%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (43 samples, 0.02%)</title><rect x="41.5787%" y="277" width="0.0169%" height="15" fill="rgb(217,61,36)" fg:x="105592" fg:w="43"/><text x="41.8287%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (43 samples, 0.02%)</title><rect x="41.5787%" y="261" width="0.0169%" height="15" fill="rgb(206,35,45)" fg:x="105592" fg:w="43"/><text x="41.8287%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (41 samples, 0.02%)</title><rect x="41.5795%" y="245" width="0.0161%" height="15" fill="rgb(217,65,33)" fg:x="105594" fg:w="41"/><text x="41.8295%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (41 samples, 0.02%)</title><rect x="41.5795%" y="229" width="0.0161%" height="15" fill="rgb(222,158,48)" fg:x="105594" fg:w="41"/><text x="41.8295%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (41 samples, 0.02%)</title><rect x="41.5795%" y="213" width="0.0161%" height="15" fill="rgb(254,2,54)" fg:x="105594" fg:w="41"/><text x="41.8295%" y="223.50"></text></g><g><title>hashbrown::map::make_hash (55 samples, 0.02%)</title><rect x="41.5972%" y="325" width="0.0217%" height="15" fill="rgb(250,143,38)" fg:x="105639" fg:w="55"/><text x="41.8472%" y="335.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (35 samples, 0.01%)</title><rect x="41.6051%" y="309" width="0.0138%" height="15" fill="rgb(248,25,0)" fg:x="105659" fg:w="35"/><text x="41.8551%" y="319.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (88 samples, 0.03%)</title><rect x="41.6464%" y="245" width="0.0347%" height="15" fill="rgb(206,152,27)" fg:x="105764" fg:w="88"/><text x="41.8964%" y="255.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (88 samples, 0.03%)</title><rect x="41.6464%" y="229" width="0.0347%" height="15" fill="rgb(240,77,30)" fg:x="105764" fg:w="88"/><text x="41.8964%" y="239.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (88 samples, 0.03%)</title><rect x="41.6464%" y="213" width="0.0347%" height="15" fill="rgb(231,5,3)" fg:x="105764" fg:w="88"/><text x="41.8964%" y="223.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (216 samples, 0.09%)</title><rect x="41.5972%" y="373" width="0.0851%" height="15" fill="rgb(207,226,32)" fg:x="105639" fg:w="216"/><text x="41.8472%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (216 samples, 0.09%)</title><rect x="41.5972%" y="357" width="0.0851%" height="15" fill="rgb(222,207,47)" fg:x="105639" fg:w="216"/><text x="41.8472%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (216 samples, 0.09%)</title><rect x="41.5972%" y="341" width="0.0851%" height="15" fill="rgb(229,115,45)" fg:x="105639" fg:w="216"/><text x="41.8472%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (161 samples, 0.06%)</title><rect x="41.6189%" y="325" width="0.0634%" height="15" fill="rgb(224,191,6)" fg:x="105694" fg:w="161"/><text x="41.8689%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (156 samples, 0.06%)</title><rect x="41.6208%" y="309" width="0.0614%" height="15" fill="rgb(230,227,24)" fg:x="105699" fg:w="156"/><text x="41.8708%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (103 samples, 0.04%)</title><rect x="41.6417%" y="293" width="0.0406%" height="15" fill="rgb(228,80,19)" fg:x="105752" fg:w="103"/><text x="41.8917%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (103 samples, 0.04%)</title><rect x="41.6417%" y="277" width="0.0406%" height="15" fill="rgb(247,229,0)" fg:x="105752" fg:w="103"/><text x="41.8917%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (103 samples, 0.04%)</title><rect x="41.6417%" y="261" width="0.0406%" height="15" fill="rgb(237,194,15)" fg:x="105752" fg:w="103"/><text x="41.8917%" y="271.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (799 samples, 0.31%)</title><rect x="41.3688%" y="437" width="0.3146%" height="15" fill="rgb(219,203,20)" fg:x="105059" fg:w="799"/><text x="41.6188%" y="447.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (798 samples, 0.31%)</title><rect x="41.3692%" y="421" width="0.3142%" height="15" fill="rgb(234,128,8)" fg:x="105060" fg:w="798"/><text x="41.6192%" y="431.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (360 samples, 0.14%)</title><rect x="41.5417%" y="405" width="0.1418%" height="15" fill="rgb(248,202,8)" fg:x="105498" fg:w="360"/><text x="41.7917%" y="415.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group_status (223 samples, 0.09%)</title><rect x="41.5956%" y="389" width="0.0878%" height="15" fill="rgb(206,104,37)" fg:x="105635" fg:w="223"/><text x="41.8456%" y="399.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (62 samples, 0.02%)</title><rect x="41.7063%" y="133" width="0.0244%" height="15" fill="rgb(223,8,27)" fg:x="105916" fg:w="62"/><text x="41.9563%" y="143.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (77 samples, 0.03%)</title><rect x="41.7063%" y="149" width="0.0303%" height="15" fill="rgb(216,217,28)" fg:x="105916" fg:w="77"/><text x="41.9563%" y="159.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout as core::cmp::PartialEq&gt;::eq (92 samples, 0.04%)</title><rect x="41.7023%" y="309" width="0.0362%" height="15" fill="rgb(249,199,1)" fg:x="105906" fg:w="92"/><text x="41.9523%" y="319.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (91 samples, 0.04%)</title><rect x="41.7027%" y="293" width="0.0358%" height="15" fill="rgb(240,85,17)" fg:x="105907" fg:w="91"/><text x="41.9527%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (89 samples, 0.04%)</title><rect x="41.7035%" y="277" width="0.0350%" height="15" fill="rgb(206,108,45)" fg:x="105909" fg:w="89"/><text x="41.9535%" y="287.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (89 samples, 0.04%)</title><rect x="41.7035%" y="261" width="0.0350%" height="15" fill="rgb(245,210,41)" fg:x="105909" fg:w="89"/><text x="41.9535%" y="271.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (89 samples, 0.04%)</title><rect x="41.7035%" y="245" width="0.0350%" height="15" fill="rgb(206,13,37)" fg:x="105909" fg:w="89"/><text x="41.9535%" y="255.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (89 samples, 0.04%)</title><rect x="41.7035%" y="229" width="0.0350%" height="15" fill="rgb(250,61,18)" fg:x="105909" fg:w="89"/><text x="41.9535%" y="239.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (84 samples, 0.03%)</title><rect x="41.7055%" y="213" width="0.0331%" height="15" fill="rgb(235,172,48)" fg:x="105914" fg:w="84"/><text x="41.9555%" y="223.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (84 samples, 0.03%)</title><rect x="41.7055%" y="197" width="0.0331%" height="15" fill="rgb(249,201,17)" fg:x="105914" fg:w="84"/><text x="41.9555%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (84 samples, 0.03%)</title><rect x="41.7055%" y="181" width="0.0331%" height="15" fill="rgb(219,208,6)" fg:x="105914" fg:w="84"/><text x="41.9555%" y="191.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute as core::cmp::PartialEq&gt;::eq (84 samples, 0.03%)</title><rect x="41.7055%" y="165" width="0.0331%" height="15" fill="rgb(248,31,23)" fg:x="105914" fg:w="84"/><text x="41.9555%" y="175.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (145 samples, 0.06%)</title><rect x="41.7583%" y="133" width="0.0571%" height="15" fill="rgb(245,15,42)" fg:x="106048" fg:w="145"/><text x="42.0083%" y="143.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (145 samples, 0.06%)</title><rect x="41.7583%" y="117" width="0.0571%" height="15" fill="rgb(222,217,39)" fg:x="106048" fg:w="145"/><text x="42.0083%" y="127.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (134 samples, 0.05%)</title><rect x="41.7626%" y="101" width="0.0528%" height="15" fill="rgb(210,219,27)" fg:x="106059" fg:w="134"/><text x="42.0126%" y="111.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (134 samples, 0.05%)</title><rect x="41.7626%" y="85" width="0.0528%" height="15" fill="rgb(252,166,36)" fg:x="106059" fg:w="134"/><text x="42.0126%" y="95.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (134 samples, 0.05%)</title><rect x="41.7626%" y="69" width="0.0528%" height="15" fill="rgb(245,132,34)" fg:x="106059" fg:w="134"/><text x="42.0126%" y="79.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (134 samples, 0.05%)</title><rect x="41.7626%" y="53" width="0.0528%" height="15" fill="rgb(236,54,3)" fg:x="106059" fg:w="134"/><text x="42.0126%" y="63.50"></text></g><g><title>__memcmp_avx2_movbe (101 samples, 0.04%)</title><rect x="41.7756%" y="37" width="0.0398%" height="15" fill="rgb(241,173,43)" fg:x="106092" fg:w="101"/><text x="42.0256%" y="47.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (264 samples, 0.10%)</title><rect x="41.7488%" y="293" width="0.1040%" height="15" fill="rgb(215,190,9)" fg:x="106024" fg:w="264"/><text x="41.9988%" y="303.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (264 samples, 0.10%)</title><rect x="41.7488%" y="277" width="0.1040%" height="15" fill="rgb(242,101,16)" fg:x="106024" fg:w="264"/><text x="41.9988%" y="287.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (261 samples, 0.10%)</title><rect x="41.7500%" y="261" width="0.1028%" height="15" fill="rgb(223,190,21)" fg:x="106027" fg:w="261"/><text x="42.0000%" y="271.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (261 samples, 0.10%)</title><rect x="41.7500%" y="245" width="0.1028%" height="15" fill="rgb(215,228,25)" fg:x="106027" fg:w="261"/><text x="42.0000%" y="255.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (261 samples, 0.10%)</title><rect x="41.7500%" y="229" width="0.1028%" height="15" fill="rgb(225,36,22)" fg:x="106027" fg:w="261"/><text x="42.0000%" y="239.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (261 samples, 0.10%)</title><rect x="41.7500%" y="213" width="0.1028%" height="15" fill="rgb(251,106,46)" fg:x="106027" fg:w="261"/><text x="42.0000%" y="223.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (261 samples, 0.10%)</title><rect x="41.7500%" y="197" width="0.1028%" height="15" fill="rgb(208,90,1)" fg:x="106027" fg:w="261"/><text x="42.0000%" y="207.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (261 samples, 0.10%)</title><rect x="41.7500%" y="181" width="0.1028%" height="15" fill="rgb(243,10,4)" fg:x="106027" fg:w="261"/><text x="42.0000%" y="191.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (243 samples, 0.10%)</title><rect x="41.7571%" y="165" width="0.0957%" height="15" fill="rgb(212,137,27)" fg:x="106045" fg:w="243"/><text x="42.0071%" y="175.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (243 samples, 0.10%)</title><rect x="41.7571%" y="149" width="0.0957%" height="15" fill="rgb(231,220,49)" fg:x="106045" fg:w="243"/><text x="42.0071%" y="159.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (93 samples, 0.04%)</title><rect x="41.8161%" y="133" width="0.0366%" height="15" fill="rgb(237,96,20)" fg:x="106195" fg:w="93"/><text x="42.0661%" y="143.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (93 samples, 0.04%)</title><rect x="41.8161%" y="117" width="0.0366%" height="15" fill="rgb(239,229,30)" fg:x="106195" fg:w="93"/><text x="42.0661%" y="127.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (93 samples, 0.04%)</title><rect x="41.8161%" y="101" width="0.0366%" height="15" fill="rgb(219,65,33)" fg:x="106195" fg:w="93"/><text x="42.0661%" y="111.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (92 samples, 0.04%)</title><rect x="41.8165%" y="85" width="0.0362%" height="15" fill="rgb(243,134,7)" fg:x="106196" fg:w="92"/><text x="42.0665%" y="95.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (92 samples, 0.04%)</title><rect x="41.8165%" y="69" width="0.0362%" height="15" fill="rgb(216,177,54)" fg:x="106196" fg:w="92"/><text x="42.0665%" y="79.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (92 samples, 0.04%)</title><rect x="41.8165%" y="53" width="0.0362%" height="15" fill="rgb(211,160,20)" fg:x="106196" fg:w="92"/><text x="42.0665%" y="63.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (407 samples, 0.16%)</title><rect x="41.6937%" y="373" width="0.1603%" height="15" fill="rgb(239,85,39)" fg:x="105884" fg:w="407"/><text x="41.9437%" y="383.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}}::{{closure}} (407 samples, 0.16%)</title><rect x="41.6937%" y="357" width="0.1603%" height="15" fill="rgb(232,125,22)" fg:x="105884" fg:w="407"/><text x="41.9437%" y="367.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (407 samples, 0.16%)</title><rect x="41.6937%" y="341" width="0.1603%" height="15" fill="rgb(244,57,34)" fg:x="105884" fg:w="407"/><text x="41.9437%" y="351.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (407 samples, 0.16%)</title><rect x="41.6937%" y="325" width="0.1603%" height="15" fill="rgb(214,203,32)" fg:x="105884" fg:w="407"/><text x="41.9437%" y="335.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (292 samples, 0.11%)</title><rect x="41.7390%" y="309" width="0.1150%" height="15" fill="rgb(207,58,43)" fg:x="105999" fg:w="292"/><text x="41.9890%" y="319.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (409 samples, 0.16%)</title><rect x="41.6933%" y="405" width="0.1611%" height="15" fill="rgb(215,193,15)" fg:x="105883" fg:w="409"/><text x="41.9433%" y="415.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}} (408 samples, 0.16%)</title><rect x="41.6937%" y="389" width="0.1607%" height="15" fill="rgb(232,15,44)" fg:x="105884" fg:w="408"/><text x="41.9437%" y="399.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.01%)</title><rect x="41.8547%" y="357" width="0.0106%" height="15" fill="rgb(212,3,48)" fg:x="106293" fg:w="27"/><text x="42.1047%" y="367.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (473 samples, 0.19%)</title><rect x="41.6834%" y="437" width="0.1863%" height="15" fill="rgb(218,128,7)" fg:x="105858" fg:w="473"/><text x="41.9334%" y="447.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (451 samples, 0.18%)</title><rect x="41.6921%" y="421" width="0.1776%" height="15" fill="rgb(226,216,39)" fg:x="105880" fg:w="451"/><text x="41.9421%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (38 samples, 0.01%)</title><rect x="41.8547%" y="405" width="0.0150%" height="15" fill="rgb(243,47,51)" fg:x="106293" fg:w="38"/><text x="42.1047%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (38 samples, 0.01%)</title><rect x="41.8547%" y="389" width="0.0150%" height="15" fill="rgb(241,183,40)" fg:x="106293" fg:w="38"/><text x="42.1047%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (38 samples, 0.01%)</title><rect x="41.8547%" y="373" width="0.0150%" height="15" fill="rgb(231,217,32)" fg:x="106293" fg:w="38"/><text x="42.1047%" y="383.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (59 samples, 0.02%)</title><rect x="41.8697%" y="437" width="0.0232%" height="15" fill="rgb(229,61,38)" fg:x="106331" fg:w="59"/><text x="42.1197%" y="447.50"></text></g><g><title>bevy_render::draw::Draw::set_vertex_buffer (28 samples, 0.01%)</title><rect x="41.8819%" y="421" width="0.0110%" height="15" fill="rgb(225,210,5)" fg:x="106362" fg:w="28"/><text x="42.1319%" y="431.50"></text></g><g><title>bevy_render::draw::Draw::render_command (28 samples, 0.01%)</title><rect x="41.8819%" y="405" width="0.0110%" height="15" fill="rgb(231,79,45)" fg:x="106362" fg:w="28"/><text x="42.1319%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28 samples, 0.01%)</title><rect x="41.8819%" y="389" width="0.0110%" height="15" fill="rgb(224,100,7)" fg:x="106362" fg:w="28"/><text x="42.1319%" y="399.50"></text></g><g><title>core::ptr::write (28 samples, 0.01%)</title><rect x="41.8819%" y="373" width="0.0110%" height="15" fill="rgb(241,198,18)" fg:x="106362" fg:w="28"/><text x="42.1319%" y="383.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (1,473 samples, 0.58%)</title><rect x="41.3133%" y="453" width="0.5800%" height="15" fill="rgb(252,97,53)" fg:x="104918" fg:w="1473"/><text x="41.5633%" y="463.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.01%)</title><rect x="41.8961%" y="437" width="0.0114%" height="15" fill="rgb(220,88,7)" fg:x="106398" fg:w="29"/><text x="42.1461%" y="447.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (47 samples, 0.02%)</title><rect x="41.9421%" y="389" width="0.0185%" height="15" fill="rgb(213,176,14)" fg:x="106515" fg:w="47"/><text x="42.1921%" y="399.50"></text></g><g><title>bevy_transform::components::global_transform::GlobalTransform::compute_matrix (28 samples, 0.01%)</title><rect x="41.9496%" y="373" width="0.0110%" height="15" fill="rgb(246,73,7)" fg:x="106534" fg:w="28"/><text x="42.1996%" y="383.50"></text></g><g><title>glam::mat4::Mat4::from_scale_rotation_translation (28 samples, 0.01%)</title><rect x="41.9496%" y="357" width="0.0110%" height="15" fill="rgb(245,64,36)" fg:x="106534" fg:w="28"/><text x="42.1996%" y="367.50"></text></g><g><title>glam::core::traits::matrix::FloatMatrix4x4::from_scale_quaternion_translation (28 samples, 0.01%)</title><rect x="41.9496%" y="341" width="0.0110%" height="15" fill="rgb(245,80,10)" fg:x="106534" fg:w="28"/><text x="42.1996%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (44 samples, 0.02%)</title><rect x="41.9732%" y="293" width="0.0173%" height="15" fill="rgb(232,107,50)" fg:x="106594" fg:w="44"/><text x="42.2232%" y="303.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (44 samples, 0.02%)</title><rect x="41.9732%" y="277" width="0.0173%" height="15" fill="rgb(253,3,0)" fg:x="106594" fg:w="44"/><text x="42.2232%" y="287.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding (90 samples, 0.04%)</title><rect x="41.9634%" y="389" width="0.0354%" height="15" fill="rgb(212,99,53)" fg:x="106569" fg:w="90"/><text x="42.2134%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (83 samples, 0.03%)</title><rect x="41.9662%" y="373" width="0.0327%" height="15" fill="rgb(249,111,54)" fg:x="106576" fg:w="83"/><text x="42.2162%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (83 samples, 0.03%)</title><rect x="41.9662%" y="357" width="0.0327%" height="15" fill="rgb(249,55,30)" fg:x="106576" fg:w="83"/><text x="42.2162%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (83 samples, 0.03%)</title><rect x="41.9662%" y="341" width="0.0327%" height="15" fill="rgb(237,47,42)" fg:x="106576" fg:w="83"/><text x="42.2162%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (74 samples, 0.03%)</title><rect x="41.9697%" y="325" width="0.0291%" height="15" fill="rgb(211,20,18)" fg:x="106585" fg:w="74"/><text x="42.2197%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (74 samples, 0.03%)</title><rect x="41.9697%" y="309" width="0.0291%" height="15" fill="rgb(231,203,46)" fg:x="106585" fg:w="74"/><text x="42.2197%" y="319.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (91 samples, 0.04%)</title><rect x="42.0154%" y="293" width="0.0358%" height="15" fill="rgb(237,142,3)" fg:x="106701" fg:w="91"/><text x="42.2654%" y="303.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (91 samples, 0.04%)</title><rect x="42.0154%" y="277" width="0.0358%" height="15" fill="rgb(241,107,1)" fg:x="106701" fg:w="91"/><text x="42.2654%" y="287.50"></text></g><g><title>hashbrown::map::make_hash (113 samples, 0.04%)</title><rect x="42.0118%" y="309" width="0.0445%" height="15" fill="rgb(229,83,13)" fg:x="106692" fg:w="113"/><text x="42.2618%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (318 samples, 0.13%)</title><rect x="42.0674%" y="213" width="0.1252%" height="15" fill="rgb(241,91,40)" fg:x="106833" fg:w="318"/><text x="42.3174%" y="223.50"></text></g><g><title>__memcmp_avx2_movbe (140 samples, 0.06%)</title><rect x="42.1374%" y="197" width="0.0551%" height="15" fill="rgb(225,3,45)" fg:x="107011" fg:w="140"/><text x="42.3874%" y="207.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (339 samples, 0.13%)</title><rect x="42.0599%" y="277" width="0.1335%" height="15" fill="rgb(244,223,14)" fg:x="106814" fg:w="339"/><text x="42.3099%" y="287.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (320 samples, 0.13%)</title><rect x="42.0674%" y="261" width="0.1260%" height="15" fill="rgb(224,124,37)" fg:x="106833" fg:w="320"/><text x="42.3174%" y="271.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (320 samples, 0.13%)</title><rect x="42.0674%" y="245" width="0.1260%" height="15" fill="rgb(251,171,30)" fg:x="106833" fg:w="320"/><text x="42.3174%" y="255.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (320 samples, 0.13%)</title><rect x="42.0674%" y="229" width="0.1260%" height="15" fill="rgb(236,46,54)" fg:x="106833" fg:w="320"/><text x="42.3174%" y="239.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (193 samples, 0.08%)</title><rect x="42.1957%" y="229" width="0.0760%" height="15" fill="rgb(245,213,5)" fg:x="107159" fg:w="193"/><text x="42.4457%" y="239.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (193 samples, 0.08%)</title><rect x="42.1957%" y="213" width="0.0760%" height="15" fill="rgb(230,144,27)" fg:x="107159" fg:w="193"/><text x="42.4457%" y="223.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (193 samples, 0.08%)</title><rect x="42.1957%" y="197" width="0.0760%" height="15" fill="rgb(220,86,6)" fg:x="107159" fg:w="193"/><text x="42.4457%" y="207.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::try_set_dirty (674 samples, 0.27%)</title><rect x="42.0087%" y="373" width="0.2654%" height="15" fill="rgb(240,20,13)" fg:x="106684" fg:w="674"/><text x="42.2587%" y="383.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (666 samples, 0.26%)</title><rect x="42.0118%" y="357" width="0.2622%" height="15" fill="rgb(217,89,34)" fg:x="106692" fg:w="666"/><text x="42.2618%" y="367.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (666 samples, 0.26%)</title><rect x="42.0118%" y="341" width="0.2622%" height="15" fill="rgb(229,13,5)" fg:x="106692" fg:w="666"/><text x="42.2618%" y="351.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (666 samples, 0.26%)</title><rect x="42.0118%" y="325" width="0.2622%" height="15" fill="rgb(244,67,35)" fg:x="106692" fg:w="666"/><text x="42.2618%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (553 samples, 0.22%)</title><rect x="42.0563%" y="309" width="0.2178%" height="15" fill="rgb(221,40,2)" fg:x="106805" fg:w="553"/><text x="42.3063%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (553 samples, 0.22%)</title><rect x="42.0563%" y="293" width="0.2178%" height="15" fill="rgb(237,157,21)" fg:x="106805" fg:w="553"/><text x="42.3063%" y="303.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (204 samples, 0.08%)</title><rect x="42.1938%" y="277" width="0.0803%" height="15" fill="rgb(222,94,11)" fg:x="107154" fg:w="204"/><text x="42.4438%" y="287.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (204 samples, 0.08%)</title><rect x="42.1938%" y="261" width="0.0803%" height="15" fill="rgb(249,113,6)" fg:x="107154" fg:w="204"/><text x="42.4438%" y="271.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (204 samples, 0.08%)</title><rect x="42.1938%" y="245" width="0.0803%" height="15" fill="rgb(238,137,36)" fg:x="107154" fg:w="204"/><text x="42.4438%" y="255.50"></text></g><g><title>hashbrown::map::make_insert_hash (34 samples, 0.01%)</title><rect x="42.2859%" y="341" width="0.0134%" height="15" fill="rgb(210,102,26)" fg:x="107388" fg:w="34"/><text x="42.5359%" y="351.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (806 samples, 0.32%)</title><rect x="41.9992%" y="389" width="0.3174%" height="15" fill="rgb(218,30,30)" fg:x="106660" fg:w="806"/><text x="42.2492%" y="399.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (108 samples, 0.04%)</title><rect x="42.2741%" y="373" width="0.0425%" height="15" fill="rgb(214,67,26)" fg:x="107358" fg:w="108"/><text x="42.5241%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (102 samples, 0.04%)</title><rect x="42.2764%" y="357" width="0.0402%" height="15" fill="rgb(251,9,53)" fg:x="107364" fg:w="102"/><text x="42.5264%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (44 samples, 0.02%)</title><rect x="42.2993%" y="341" width="0.0173%" height="15" fill="rgb(228,204,25)" fg:x="107422" fg:w="44"/><text x="42.5493%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (41 samples, 0.02%)</title><rect x="42.3005%" y="325" width="0.0161%" height="15" fill="rgb(207,153,8)" fg:x="107425" fg:w="41"/><text x="42.5505%" y="335.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (39 samples, 0.02%)</title><rect x="42.3166%" y="389" width="0.0154%" height="15" fill="rgb(242,9,16)" fg:x="107466" fg:w="39"/><text x="42.5666%" y="399.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (1,070 samples, 0.42%)</title><rect x="41.9110%" y="437" width="0.4213%" height="15" fill="rgb(217,211,10)" fg:x="106436" fg:w="1070"/><text x="42.1610%" y="447.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (1,070 samples, 0.42%)</title><rect x="41.9110%" y="421" width="0.4213%" height="15" fill="rgb(219,228,52)" fg:x="106436" fg:w="1070"/><text x="42.1610%" y="431.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (1,044 samples, 0.41%)</title><rect x="41.9213%" y="405" width="0.4111%" height="15" fill="rgb(231,92,29)" fg:x="106462" fg:w="1044"/><text x="42.1713%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;bevy_render::render_graph::command::Command&gt;&gt;&gt; (66 samples, 0.03%)</title><rect x="42.3438%" y="389" width="0.0260%" height="15" fill="rgb(232,8,23)" fg:x="107535" fg:w="66"/><text x="42.5938%" y="399.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (66 samples, 0.03%)</title><rect x="42.3438%" y="373" width="0.0260%" height="15" fill="rgb(216,211,34)" fg:x="107535" fg:w="66"/><text x="42.5938%" y="383.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (66 samples, 0.03%)</title><rect x="42.3438%" y="357" width="0.0260%" height="15" fill="rgb(236,151,0)" fg:x="107535" fg:w="66"/><text x="42.5938%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (66 samples, 0.03%)</title><rect x="42.3438%" y="341" width="0.0260%" height="15" fill="rgb(209,168,3)" fg:x="107535" fg:w="66"/><text x="42.5938%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (66 samples, 0.03%)</title><rect x="42.3438%" y="325" width="0.0260%" height="15" fill="rgb(208,129,28)" fg:x="107535" fg:w="66"/><text x="42.5938%" y="335.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::copy_staging_buffer_to_final_buffers (116 samples, 0.05%)</title><rect x="42.3355%" y="437" width="0.0457%" height="15" fill="rgb(229,78,22)" fg:x="107514" fg:w="116"/><text x="42.5855%" y="447.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (110 samples, 0.04%)</title><rect x="42.3379%" y="421" width="0.0433%" height="15" fill="rgb(228,187,13)" fg:x="107520" fg:w="110"/><text x="42.5879%" y="431.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::push (108 samples, 0.04%)</title><rect x="42.3387%" y="405" width="0.0425%" height="15" fill="rgb(240,119,24)" fg:x="107522" fg:w="108"/><text x="42.5887%" y="415.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (29 samples, 0.01%)</title><rect x="42.3698%" y="389" width="0.0114%" height="15" fill="rgb(209,194,42)" fg:x="107601" fg:w="29"/><text x="42.6198%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (29 samples, 0.01%)</title><rect x="42.3698%" y="373" width="0.0114%" height="15" fill="rgb(247,200,46)" fg:x="107601" fg:w="29"/><text x="42.6198%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (29 samples, 0.01%)</title><rect x="42.3698%" y="357" width="0.0114%" height="15" fill="rgb(218,76,16)" fg:x="107601" fg:w="29"/><text x="42.6198%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (29 samples, 0.01%)</title><rect x="42.3698%" y="341" width="0.0114%" height="15" fill="rgb(225,21,48)" fg:x="107601" fg:w="29"/><text x="42.6198%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (59 samples, 0.02%)</title><rect x="42.3981%" y="325" width="0.0232%" height="15" fill="rgb(239,223,50)" fg:x="107673" fg:w="59"/><text x="42.6481%" y="335.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (59 samples, 0.02%)</title><rect x="42.3981%" y="309" width="0.0232%" height="15" fill="rgb(244,45,21)" fg:x="107673" fg:w="59"/><text x="42.6481%" y="319.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (107 samples, 0.04%)</title><rect x="42.3812%" y="437" width="0.0421%" height="15" fill="rgb(232,33,43)" fg:x="107630" fg:w="107"/><text x="42.6312%" y="447.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_or_assign_index (97 samples, 0.04%)</title><rect x="42.3851%" y="421" width="0.0382%" height="15" fill="rgb(209,8,3)" fg:x="107640" fg:w="97"/><text x="42.6351%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (93 samples, 0.04%)</title><rect x="42.3867%" y="405" width="0.0366%" height="15" fill="rgb(214,25,53)" fg:x="107644" fg:w="93"/><text x="42.6367%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (93 samples, 0.04%)</title><rect x="42.3867%" y="389" width="0.0366%" height="15" fill="rgb(254,186,54)" fg:x="107644" fg:w="93"/><text x="42.6367%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (93 samples, 0.04%)</title><rect x="42.3867%" y="373" width="0.0366%" height="15" fill="rgb(208,174,49)" fg:x="107644" fg:w="93"/><text x="42.6367%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (81 samples, 0.03%)</title><rect x="42.3914%" y="357" width="0.0319%" height="15" fill="rgb(233,191,51)" fg:x="107656" fg:w="81"/><text x="42.6414%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (77 samples, 0.03%)</title><rect x="42.3930%" y="341" width="0.0303%" height="15" fill="rgb(222,134,10)" fg:x="107660" fg:w="77"/><text x="42.6430%" y="351.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (1,355 samples, 0.53%)</title><rect x="41.8933%" y="453" width="0.5336%" height="15" fill="rgb(230,226,20)" fg:x="106391" fg:w="1355"/><text x="42.1433%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (2,850 samples, 1.12%)</title><rect x="41.3062%" y="501" width="1.1222%" height="15" fill="rgb(251,111,25)" fg:x="104900" fg:w="2850"/><text x="41.5562%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,844 samples, 1.12%)</title><rect x="41.3086%" y="485" width="1.1199%" height="15" fill="rgb(224,40,46)" fg:x="104906" fg:w="2844"/><text x="41.5586%" y="495.50"></text></g><g><title>core::ops::function::Fn::call (2,844 samples, 1.12%)</title><rect x="41.3086%" y="469" width="1.1199%" height="15" fill="rgb(236,108,47)" fg:x="104906" fg:w="2844"/><text x="41.5586%" y="479.50"></text></g><g><title>wgpu_core::device::life::LifetimeTracker&lt;B&gt;::triage_submissions (34 samples, 0.01%)</title><rect x="42.4560%" y="357" width="0.0134%" height="15" fill="rgb(234,93,0)" fg:x="107820" fg:w="34"/><text x="42.7060%" y="367.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (93 samples, 0.04%)</title><rect x="42.4343%" y="437" width="0.0366%" height="15" fill="rgb(224,213,32)" fg:x="107765" fg:w="93"/><text x="42.6843%" y="447.50"></text></g><g><title>wgpu::Device::poll (71 samples, 0.03%)</title><rect x="42.4430%" y="421" width="0.0280%" height="15" fill="rgb(251,11,48)" fg:x="107787" fg:w="71"/><text x="42.6930%" y="431.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_poll (71 samples, 0.03%)</title><rect x="42.4430%" y="405" width="0.0280%" height="15" fill="rgb(236,173,5)" fg:x="107787" fg:w="71"/><text x="42.6930%" y="415.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_poll (70 samples, 0.03%)</title><rect x="42.4434%" y="389" width="0.0276%" height="15" fill="rgb(230,95,12)" fg:x="107788" fg:w="70"/><text x="42.6934%" y="399.50"></text></g><g><title>wgpu_core::device::Device&lt;B&gt;::maintain (67 samples, 0.03%)</title><rect x="42.4446%" y="373" width="0.0264%" height="15" fill="rgb(232,209,1)" fg:x="107791" fg:w="67"/><text x="42.6946%" y="383.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_buffer (26 samples, 0.01%)</title><rect x="42.4753%" y="389" width="0.0102%" height="15" fill="rgb(232,6,1)" fg:x="107869" fg:w="26"/><text x="42.7253%" y="399.50"></text></g><g><title>wgpu::Device::create_buffer (26 samples, 0.01%)</title><rect x="42.4753%" y="373" width="0.0102%" height="15" fill="rgb(210,224,50)" fg:x="107869" fg:w="26"/><text x="42.7253%" y="383.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::device_create_buffer (26 samples, 0.01%)</title><rect x="42.4753%" y="357" width="0.0102%" height="15" fill="rgb(228,127,35)" fg:x="107869" fg:w="26"/><text x="42.7253%" y="367.50"></text></g><g><title>wgpu_core::device::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::device_create_buffer (26 samples, 0.01%)</title><rect x="42.4753%" y="341" width="0.0102%" height="15" fill="rgb(245,102,45)" fg:x="107869" fg:w="26"/><text x="42.7253%" y="351.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (30 samples, 0.01%)</title><rect x="42.4753%" y="405" width="0.0118%" height="15" fill="rgb(214,1,49)" fg:x="107869" fg:w="30"/><text x="42.7253%" y="415.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system::{{closure}} (33 samples, 0.01%)</title><rect x="42.4745%" y="421" width="0.0130%" height="15" fill="rgb(226,163,40)" fg:x="107867" fg:w="33"/><text x="42.7245%" y="431.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (38 samples, 0.01%)</title><rect x="42.4737%" y="437" width="0.0150%" height="15" fill="rgb(239,212,28)" fg:x="107865" fg:w="38"/><text x="42.7237%" y="447.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (85 samples, 0.03%)</title><rect x="42.5040%" y="325" width="0.0335%" height="15" fill="rgb(220,20,13)" fg:x="107942" fg:w="85"/><text x="42.7540%" y="335.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (88 samples, 0.03%)</title><rect x="42.5040%" y="341" width="0.0347%" height="15" fill="rgb(210,164,35)" fg:x="107942" fg:w="88"/><text x="42.7540%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (96 samples, 0.04%)</title><rect x="42.5033%" y="357" width="0.0378%" height="15" fill="rgb(248,109,41)" fg:x="107940" fg:w="96"/><text x="42.7533%" y="367.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (119 samples, 0.05%)</title><rect x="42.4946%" y="437" width="0.0469%" height="15" fill="rgb(238,23,50)" fg:x="107918" fg:w="119"/><text x="42.7446%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (110 samples, 0.04%)</title><rect x="42.4981%" y="421" width="0.0433%" height="15" fill="rgb(211,48,49)" fg:x="107927" fg:w="110"/><text x="42.7481%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (110 samples, 0.04%)</title><rect x="42.4981%" y="405" width="0.0433%" height="15" fill="rgb(223,36,21)" fg:x="107927" fg:w="110"/><text x="42.7481%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (110 samples, 0.04%)</title><rect x="42.4981%" y="389" width="0.0433%" height="15" fill="rgb(207,123,46)" fg:x="107927" fg:w="110"/><text x="42.7481%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (97 samples, 0.04%)</title><rect x="42.5033%" y="373" width="0.0382%" height="15" fill="rgb(240,218,32)" fg:x="107940" fg:w="97"/><text x="42.7533%" y="383.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (29 samples, 0.01%)</title><rect x="42.5529%" y="405" width="0.0114%" height="15" fill="rgb(252,5,43)" fg:x="108066" fg:w="29"/><text x="42.8029%" y="415.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (44 samples, 0.02%)</title><rect x="42.5529%" y="421" width="0.0173%" height="15" fill="rgb(252,84,19)" fg:x="108066" fg:w="44"/><text x="42.8029%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (52 samples, 0.02%)</title><rect x="42.5816%" y="197" width="0.0205%" height="15" fill="rgb(243,152,39)" fg:x="108139" fg:w="52"/><text x="42.8316%" y="207.50"></text></g><g><title>alloc::alloc::Global::grow_impl (52 samples, 0.02%)</title><rect x="42.5816%" y="181" width="0.0205%" height="15" fill="rgb(234,160,15)" fg:x="108139" fg:w="52"/><text x="42.8316%" y="191.50"></text></g><g><title>alloc::alloc::realloc (51 samples, 0.02%)</title><rect x="42.5820%" y="165" width="0.0201%" height="15" fill="rgb(237,34,20)" fg:x="108140" fg:w="51"/><text x="42.8320%" y="175.50"></text></g><g><title>__rdl_realloc (51 samples, 0.02%)</title><rect x="42.5820%" y="149" width="0.0201%" height="15" fill="rgb(229,97,13)" fg:x="108140" fg:w="51"/><text x="42.8320%" y="159.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (51 samples, 0.02%)</title><rect x="42.5820%" y="133" width="0.0201%" height="15" fill="rgb(234,71,50)" fg:x="108140" fg:w="51"/><text x="42.8320%" y="143.50"></text></g><g><title>__GI___libc_realloc (51 samples, 0.02%)</title><rect x="42.5820%" y="117" width="0.0201%" height="15" fill="rgb(253,155,4)" fg:x="108140" fg:w="51"/><text x="42.8320%" y="127.50"></text></g><g><title>_int_realloc (35 samples, 0.01%)</title><rect x="42.5883%" y="101" width="0.0138%" height="15" fill="rgb(222,185,37)" fg:x="108156" fg:w="35"/><text x="42.8383%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (60 samples, 0.02%)</title><rect x="42.5812%" y="213" width="0.0236%" height="15" fill="rgb(251,177,13)" fg:x="108138" fg:w="60"/><text x="42.8312%" y="223.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (81 samples, 0.03%)</title><rect x="42.5745%" y="277" width="0.0319%" height="15" fill="rgb(250,179,40)" fg:x="108121" fg:w="81"/><text x="42.8245%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (80 samples, 0.03%)</title><rect x="42.5749%" y="261" width="0.0315%" height="15" fill="rgb(242,44,2)" fg:x="108122" fg:w="80"/><text x="42.8249%" y="271.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (80 samples, 0.03%)</title><rect x="42.5749%" y="245" width="0.0315%" height="15" fill="rgb(216,177,13)" fg:x="108122" fg:w="80"/><text x="42.8249%" y="255.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (80 samples, 0.03%)</title><rect x="42.5749%" y="229" width="0.0315%" height="15" fill="rgb(216,106,43)" fg:x="108122" fg:w="80"/><text x="42.8249%" y="239.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (85 samples, 0.03%)</title><rect x="42.5741%" y="373" width="0.0335%" height="15" fill="rgb(216,183,2)" fg:x="108120" fg:w="85"/><text x="42.8241%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (85 samples, 0.03%)</title><rect x="42.5741%" y="357" width="0.0335%" height="15" fill="rgb(249,75,3)" fg:x="108120" fg:w="85"/><text x="42.8241%" y="367.50"></text></g><g><title>alloc::string::String::push_str (85 samples, 0.03%)</title><rect x="42.5741%" y="341" width="0.0335%" height="15" fill="rgb(219,67,39)" fg:x="108120" fg:w="85"/><text x="42.8241%" y="351.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (85 samples, 0.03%)</title><rect x="42.5741%" y="325" width="0.0335%" height="15" fill="rgb(253,228,2)" fg:x="108120" fg:w="85"/><text x="42.8241%" y="335.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (85 samples, 0.03%)</title><rect x="42.5741%" y="309" width="0.0335%" height="15" fill="rgb(235,138,27)" fg:x="108120" fg:w="85"/><text x="42.8241%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (84 samples, 0.03%)</title><rect x="42.5745%" y="293" width="0.0331%" height="15" fill="rgb(236,97,51)" fg:x="108121" fg:w="84"/><text x="42.8245%" y="303.50"></text></g><g><title>alloc::fmt::format (100 samples, 0.04%)</title><rect x="42.5702%" y="421" width="0.0394%" height="15" fill="rgb(240,80,30)" fg:x="108110" fg:w="100"/><text x="42.8202%" y="431.50"></text></g><g><title>core::fmt::Write::write_fmt (99 samples, 0.04%)</title><rect x="42.5706%" y="405" width="0.0390%" height="15" fill="rgb(230,178,19)" fg:x="108111" fg:w="99"/><text x="42.8206%" y="415.50"></text></g><g><title>core::fmt::write (93 samples, 0.04%)</title><rect x="42.5730%" y="389" width="0.0366%" height="15" fill="rgb(210,190,27)" fg:x="108117" fg:w="93"/><text x="42.8230%" y="399.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (185 samples, 0.07%)</title><rect x="42.5462%" y="437" width="0.0728%" height="15" fill="rgb(222,107,31)" fg:x="108049" fg:w="185"/><text x="42.7962%" y="447.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (112 samples, 0.04%)</title><rect x="42.6222%" y="405" width="0.0441%" height="15" fill="rgb(216,127,34)" fg:x="108242" fg:w="112"/><text x="42.8722%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (102 samples, 0.04%)</title><rect x="42.6261%" y="389" width="0.0402%" height="15" fill="rgb(234,116,52)" fg:x="108252" fg:w="102"/><text x="42.8761%" y="399.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (89 samples, 0.04%)</title><rect x="42.6312%" y="373" width="0.0350%" height="15" fill="rgb(222,124,15)" fg:x="108265" fg:w="89"/><text x="42.8812%" y="383.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (89 samples, 0.04%)</title><rect x="42.6312%" y="357" width="0.0350%" height="15" fill="rgb(231,179,28)" fg:x="108265" fg:w="89"/><text x="42.8812%" y="367.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (89 samples, 0.04%)</title><rect x="42.6312%" y="341" width="0.0350%" height="15" fill="rgb(226,93,45)" fg:x="108265" fg:w="89"/><text x="42.8812%" y="351.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (121 samples, 0.05%)</title><rect x="42.6190%" y="437" width="0.0476%" height="15" fill="rgb(215,8,51)" fg:x="108234" fg:w="121"/><text x="42.8690%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (120 samples, 0.05%)</title><rect x="42.6194%" y="421" width="0.0473%" height="15" fill="rgb(223,106,5)" fg:x="108235" fg:w="120"/><text x="42.8694%" y="431.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (602 samples, 0.24%)</title><rect x="42.4304%" y="453" width="0.2370%" height="15" fill="rgb(250,191,5)" fg:x="107755" fg:w="602"/><text x="42.6804%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (605 samples, 0.24%)</title><rect x="42.4300%" y="501" width="0.2382%" height="15" fill="rgb(242,132,44)" fg:x="107754" fg:w="605"/><text x="42.6800%" y="511.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (604 samples, 0.24%)</title><rect x="42.4304%" y="485" width="0.2378%" height="15" fill="rgb(251,152,29)" fg:x="107755" fg:w="604"/><text x="42.6804%" y="495.50"></text></g><g><title>core::ops::function::Fn::call (604 samples, 0.24%)</title><rect x="42.4304%" y="469" width="0.2378%" height="15" fill="rgb(218,179,5)" fg:x="107755" fg:w="604"/><text x="42.6804%" y="479.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (97,556 samples, 38.41%)</title><rect x="4.2617%" y="517" width="38.4144%" height="15" fill="rgb(227,67,19)" fg:x="10823" fg:w="97556"/><text x="4.5117%" y="527.50">&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Mar..</text></g><g><title>&lt;event_listener::EventListener as core::ops::drop::Drop&gt;::drop (29 samples, 0.01%)</title><rect x="42.6805%" y="469" width="0.0114%" height="15" fill="rgb(233,119,31)" fg:x="108390" fg:w="29"/><text x="42.9305%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_channel::Recv&lt;()&gt;&gt; (32 samples, 0.01%)</title><rect x="42.6801%" y="517" width="0.0126%" height="15" fill="rgb(241,120,22)" fg:x="108389" fg:w="32"/><text x="42.9301%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;event_listener::EventListener&gt;&gt; (32 samples, 0.01%)</title><rect x="42.6801%" y="501" width="0.0126%" height="15" fill="rgb(224,102,30)" fg:x="108389" fg:w="32"/><text x="42.9301%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;event_listener::EventListener&gt; (31 samples, 0.01%)</title><rect x="42.6805%" y="485" width="0.0122%" height="15" fill="rgb(210,164,37)" fg:x="108390" fg:w="31"/><text x="42.9305%" y="495.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (97,849 samples, 38.53%)</title><rect x="4.1668%" y="549" width="38.5298%" height="15" fill="rgb(226,191,16)" fg:x="10582" fg:w="97849"/><text x="4.4168%" y="559.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::fu..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (97,759 samples, 38.49%)</title><rect x="4.2023%" y="533" width="38.4943%" height="15" fill="rgb(214,40,45)" fg:x="10672" fg:w="97759"/><text x="4.4523%" y="543.50">bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepar..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (97,893 samples, 38.55%)</title><rect x="4.1613%" y="581" width="38.5471%" height="15" fill="rgb(244,29,26)" fg:x="10568" fg:w="97893"/><text x="4.4113%" y="591.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::fu..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (97,890 samples, 38.55%)</title><rect x="4.1625%" y="565" width="38.5459%" height="15" fill="rgb(216,16,5)" fg:x="10571" fg:w="97890"/><text x="4.4125%" y="575.50">async_executor::Executor::spawn::{{closure}}</text></g><g><title>core::ptr::drop_in_place&lt;async_executor::CallOnDrop&lt;async_executor::Executor::spawn&lt;(),core::future::from_generator::GenFuture&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}}&gt;&gt;::{{closure}}::{{closure}}&gt;&gt; (28 samples, 0.01%)</title><rect x="42.6974%" y="549" width="0.0110%" height="15" fill="rgb(249,76,35)" fg:x="108433" fg:w="28"/><text x="42.9474%" y="559.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::wake (27 samples, 0.01%)</title><rect x="42.7143%" y="533" width="0.0106%" height="15" fill="rgb(207,11,44)" fg:x="108476" fg:w="27"/><text x="42.9643%" y="543.50"></text></g><g><title>async_task::utils::abort_on_panic (32 samples, 0.01%)</title><rect x="42.7139%" y="581" width="0.0126%" height="15" fill="rgb(228,190,49)" fg:x="108475" fg:w="32"/><text x="42.9639%" y="591.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run::{{closure}} (32 samples, 0.01%)</title><rect x="42.7139%" y="565" width="0.0126%" height="15" fill="rgb(214,173,12)" fg:x="108475" fg:w="32"/><text x="42.9639%" y="575.50"></text></g><g><title>core::task::wake::Waker::wake (32 samples, 0.01%)</title><rect x="42.7139%" y="549" width="0.0126%" height="15" fill="rgb(218,26,35)" fg:x="108475" fg:w="32"/><text x="42.9639%" y="559.50"></text></g><g><title>async_task::runnable::Runnable::run (97,975 samples, 38.58%)</title><rect x="4.1554%" y="613" width="38.5794%" height="15" fill="rgb(220,200,19)" fg:x="10553" fg:w="97975"/><text x="4.4054%" y="623.50">async_task::runnable::Runnable::run</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (97,969 samples, 38.58%)</title><rect x="4.1578%" y="597" width="38.5770%" height="15" fill="rgb(239,95,49)" fg:x="10559" fg:w="97969"/><text x="4.4078%" y="607.50">async_task::raw::RawTask&lt;F,T,S&gt;::run</text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (98,346 samples, 38.73%)</title><rect x="4.0101%" y="661" width="38.7255%" height="15" fill="rgb(235,85,53)" fg:x="10184" fg:w="98346"/><text x="4.2601%" y="671.50">&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Futur..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (98,272 samples, 38.70%)</title><rect x="4.0393%" y="645" width="38.6963%" height="15" fill="rgb(233,133,31)" fg:x="10258" fg:w="98272"/><text x="4.2893%" y="655.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::fu..</text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (98,271 samples, 38.70%)</title><rect x="4.0397%" y="629" width="38.6959%" height="15" fill="rgb(218,25,20)" fg:x="10259" fg:w="98271"/><text x="4.2897%" y="639.50">async_executor::Executor::run::{{closure}}::{{closure}}</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (98,360 samples, 38.73%)</title><rect x="4.0050%" y="693" width="38.7310%" height="15" fill="rgb(252,210,38)" fg:x="10171" fg:w="98360"/><text x="4.2550%" y="703.50">&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::fu..</text></g><g><title>async_executor::Executor::run::{{closure}} (98,358 samples, 38.73%)</title><rect x="4.0058%" y="677" width="38.7302%" height="15" fill="rgb(242,134,21)" fg:x="10173" fg:w="98358"/><text x="4.2558%" y="687.50">async_executor::Executor::run::{{closure}}</text></g><g><title>__futex_abstimed_wait_common64 (121 samples, 0.05%)</title><rect x="42.7616%" y="597" width="0.0476%" height="15" fill="rgb(213,28,48)" fg:x="108596" fg:w="121"/><text x="43.0116%" y="607.50"></text></g><g><title>std::sync::condvar::Condvar::wait (165 samples, 0.06%)</title><rect x="42.7478%" y="661" width="0.0650%" height="15" fill="rgb(250,196,2)" fg:x="108561" fg:w="165"/><text x="42.9978%" y="671.50"></text></g><g><title>std::sys_common::condvar::Condvar::wait (158 samples, 0.06%)</title><rect x="42.7505%" y="645" width="0.0622%" height="15" fill="rgb(227,5,17)" fg:x="108568" fg:w="158"/><text x="43.0005%" y="655.50"></text></g><g><title>std::sys::unix::condvar::Condvar::wait (158 samples, 0.06%)</title><rect x="42.7505%" y="629" width="0.0622%" height="15" fill="rgb(221,226,24)" fg:x="108568" fg:w="158"/><text x="43.0005%" y="639.50"></text></g><g><title>__pthread_cond_wait (158 samples, 0.06%)</title><rect x="42.7505%" y="613" width="0.0622%" height="15" fill="rgb(211,5,48)" fg:x="108568" fg:w="158"/><text x="43.0005%" y="623.50"></text></g><g><title>std::panic::catch_unwind (98,560 samples, 38.81%)</title><rect x="4.0046%" y="869" width="38.8097%" height="15" fill="rgb(219,150,6)" fg:x="10170" fg:w="98560"/><text x="4.2546%" y="879.50">std::panic::catch_unwind</text></g><g><title>std::panicking::try (98,560 samples, 38.81%)</title><rect x="4.0046%" y="853" width="38.8097%" height="15" fill="rgb(251,46,16)" fg:x="10170" fg:w="98560"/><text x="4.2546%" y="863.50">std::panicking::try</text></g><g><title>std::panicking::try::do_call (98,560 samples, 38.81%)</title><rect x="4.0046%" y="837" width="38.8097%" height="15" fill="rgb(220,204,40)" fg:x="10170" fg:w="98560"/><text x="4.2546%" y="847.50">std::panicking::try::do_call</text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (98,560 samples, 38.81%)</title><rect x="4.0046%" y="821" width="38.8097%" height="15" fill="rgb(211,85,2)" fg:x="10170" fg:w="98560"/><text x="4.2546%" y="831.50">&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::fu..</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (98,560 samples, 38.81%)</title><rect x="4.0046%" y="805" width="38.8097%" height="15" fill="rgb(229,17,7)" fg:x="10170" fg:w="98560"/><text x="4.2546%" y="815.50">std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}}</text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (98,560 samples, 38.81%)</title><rect x="4.0046%" y="789" width="38.8097%" height="15" fill="rgb(239,72,28)" fg:x="10170" fg:w="98560"/><text x="4.2546%" y="799.50">std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (98,560 samples, 38.81%)</title><rect x="4.0046%" y="773" width="38.8097%" height="15" fill="rgb(230,47,54)" fg:x="10170" fg:w="98560"/><text x="4.2546%" y="783.50">bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{c..</text></g><g><title>futures_lite::future::block_on (98,560 samples, 38.81%)</title><rect x="4.0046%" y="757" width="38.8097%" height="15" fill="rgb(214,50,8)" fg:x="10170" fg:w="98560"/><text x="4.2546%" y="767.50">futures_lite::future::block_on</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (98,560 samples, 38.81%)</title><rect x="4.0046%" y="741" width="38.8097%" height="15" fill="rgb(216,198,43)" fg:x="10170" fg:w="98560"/><text x="4.2546%" y="751.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (98,560 samples, 38.81%)</title><rect x="4.0046%" y="725" width="38.8097%" height="15" fill="rgb(234,20,35)" fg:x="10170" fg:w="98560"/><text x="4.2546%" y="735.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>futures_lite::future::block_on::{{closure}} (98,560 samples, 38.81%)</title><rect x="4.0046%" y="709" width="38.8097%" height="15" fill="rgb(254,45,19)" fg:x="10170" fg:w="98560"/><text x="4.2546%" y="719.50">futures_lite::future::block_on::{{closure}}</text></g><g><title>parking::Parker::park (193 samples, 0.08%)</title><rect x="42.7383%" y="693" width="0.0760%" height="15" fill="rgb(219,14,44)" fg:x="108537" fg:w="193"/><text x="42.9883%" y="703.50"></text></g><g><title>parking::Inner::park (190 samples, 0.07%)</title><rect x="42.7395%" y="677" width="0.0748%" height="15" fill="rgb(217,220,26)" fg:x="108540" fg:w="190"/><text x="42.9895%" y="687.50"></text></g><g><title>__GI___clone (98,561 samples, 38.81%)</title><rect x="4.0046%" y="981" width="38.8101%" height="15" fill="rgb(213,158,28)" fg:x="10170" fg:w="98561"/><text x="4.2546%" y="991.50">__GI___clone</text></g><g><title>start_thread (98,561 samples, 38.81%)</title><rect x="4.0046%" y="965" width="38.8101%" height="15" fill="rgb(252,51,52)" fg:x="10170" fg:w="98561"/><text x="4.2546%" y="975.50">start_thread</text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (98,561 samples, 38.81%)</title><rect x="4.0046%" y="949" width="38.8101%" height="15" fill="rgb(246,89,16)" fg:x="10170" fg:w="98561"/><text x="4.2546%" y="959.50">std::sys::unix::thread::Thread::new::thread_start</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (98,561 samples, 38.81%)</title><rect x="4.0046%" y="933" width="38.8101%" height="15" fill="rgb(216,158,49)" fg:x="10170" fg:w="98561"/><text x="4.2546%" y="943.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (98,561 samples, 38.81%)</title><rect x="4.0046%" y="917" width="38.8101%" height="15" fill="rgb(236,107,19)" fg:x="10170" fg:w="98561"/><text x="4.2546%" y="927.50">&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::..</text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (98,561 samples, 38.81%)</title><rect x="4.0046%" y="901" width="38.8101%" height="15" fill="rgb(228,185,30)" fg:x="10170" fg:w="98561"/><text x="4.2546%" y="911.50">core::ops::function::FnOnce::call_once{{vtable.shim}}</text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (98,561 samples, 38.81%)</title><rect x="4.0046%" y="885" width="38.8101%" height="15" fill="rgb(246,134,8)" fg:x="10170" fg:w="98561"/><text x="4.2546%" y="895.50">std::thread::Builder::spawn_unchecked::{{closure}}</text></g><g><title>Compute_Task_Po (108,765 samples, 42.83%)</title><rect x="0.0004%" y="997" width="42.8281%" height="15" fill="rgb(214,143,50)" fg:x="1" fg:w="108765"/><text x="0.2504%" y="1007.50">Compute_Task_Po</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (28 samples, 0.01%)</title><rect x="42.8395%" y="549" width="0.0110%" height="15" fill="rgb(228,75,8)" fg:x="108794" fg:w="28"/><text x="43.0895%" y="559.50"></text></g><g><title>bevy_asset::asset_server::AssetServer::load_untracked::{{closure}} (27 samples, 0.01%)</title><rect x="42.8399%" y="533" width="0.0106%" height="15" fill="rgb(207,175,4)" fg:x="108795" fg:w="27"/><text x="43.0899%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="42.8395%" y="581" width="0.0134%" height="15" fill="rgb(205,108,24)" fg:x="108794" fg:w="34"/><text x="43.0895%" y="591.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (34 samples, 0.01%)</title><rect x="42.8395%" y="565" width="0.0134%" height="15" fill="rgb(244,120,49)" fg:x="108794" fg:w="34"/><text x="43.0895%" y="575.50"></text></g><g><title>&lt;futures_lite::future::Or&lt;F1,F2&gt; as core::future::future::Future&gt;::poll (48 samples, 0.02%)</title><rect x="42.8387%" y="661" width="0.0189%" height="15" fill="rgb(223,47,38)" fg:x="108792" fg:w="48"/><text x="43.0887%" y="671.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (47 samples, 0.02%)</title><rect x="42.8391%" y="645" width="0.0185%" height="15" fill="rgb(229,179,11)" fg:x="108793" fg:w="47"/><text x="43.0891%" y="655.50"></text></g><g><title>async_executor::Executor::run::{{closure}}::{{closure}} (47 samples, 0.02%)</title><rect x="42.8391%" y="629" width="0.0185%" height="15" fill="rgb(231,122,1)" fg:x="108793" fg:w="47"/><text x="43.0891%" y="639.50"></text></g><g><title>async_task::runnable::Runnable::run (46 samples, 0.02%)</title><rect x="42.8395%" y="613" width="0.0181%" height="15" fill="rgb(245,119,9)" fg:x="108794" fg:w="46"/><text x="43.0895%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (46 samples, 0.02%)</title><rect x="42.8395%" y="597" width="0.0181%" height="15" fill="rgb(241,163,25)" fg:x="108794" fg:w="46"/><text x="43.0895%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (49 samples, 0.02%)</title><rect x="42.8387%" y="693" width="0.0193%" height="15" fill="rgb(217,214,3)" fg:x="108792" fg:w="49"/><text x="43.0887%" y="703.50"></text></g><g><title>async_executor::Executor::run::{{closure}} (49 samples, 0.02%)</title><rect x="42.8387%" y="677" width="0.0193%" height="15" fill="rgb(240,86,28)" fg:x="108792" fg:w="49"/><text x="43.0887%" y="687.50"></text></g><g><title>IO_Task_Pool_(1 (57 samples, 0.02%)</title><rect x="42.8376%" y="997" width="0.0224%" height="15" fill="rgb(215,47,9)" fg:x="108789" fg:w="57"/><text x="43.0876%" y="1007.50"></text></g><g><title>__GI___clone (54 samples, 0.02%)</title><rect x="42.8387%" y="981" width="0.0213%" height="15" fill="rgb(252,25,45)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="991.50"></text></g><g><title>start_thread (54 samples, 0.02%)</title><rect x="42.8387%" y="965" width="0.0213%" height="15" fill="rgb(251,164,9)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="975.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (54 samples, 0.02%)</title><rect x="42.8387%" y="949" width="0.0213%" height="15" fill="rgb(233,194,0)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 0.02%)</title><rect x="42.8387%" y="933" width="0.0213%" height="15" fill="rgb(249,111,24)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (54 samples, 0.02%)</title><rect x="42.8387%" y="917" width="0.0213%" height="15" fill="rgb(250,223,3)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (54 samples, 0.02%)</title><rect x="42.8387%" y="901" width="0.0213%" height="15" fill="rgb(236,178,37)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="911.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (54 samples, 0.02%)</title><rect x="42.8387%" y="885" width="0.0213%" height="15" fill="rgb(241,158,50)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="895.50"></text></g><g><title>std::panic::catch_unwind (54 samples, 0.02%)</title><rect x="42.8387%" y="869" width="0.0213%" height="15" fill="rgb(213,121,41)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="879.50"></text></g><g><title>std::panicking::try (54 samples, 0.02%)</title><rect x="42.8387%" y="853" width="0.0213%" height="15" fill="rgb(240,92,3)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="863.50"></text></g><g><title>std::panicking::try::do_call (54 samples, 0.02%)</title><rect x="42.8387%" y="837" width="0.0213%" height="15" fill="rgb(205,123,3)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (54 samples, 0.02%)</title><rect x="42.8387%" y="821" width="0.0213%" height="15" fill="rgb(205,97,47)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (54 samples, 0.02%)</title><rect x="42.8387%" y="805" width="0.0213%" height="15" fill="rgb(247,152,14)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (54 samples, 0.02%)</title><rect x="42.8387%" y="789" width="0.0213%" height="15" fill="rgb(248,195,53)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="799.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::new_internal::{{closure}}::{{closure}} (54 samples, 0.02%)</title><rect x="42.8387%" y="773" width="0.0213%" height="15" fill="rgb(226,201,16)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="783.50"></text></g><g><title>futures_lite::future::block_on (54 samples, 0.02%)</title><rect x="42.8387%" y="757" width="0.0213%" height="15" fill="rgb(205,98,0)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="767.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (54 samples, 0.02%)</title><rect x="42.8387%" y="741" width="0.0213%" height="15" fill="rgb(214,191,48)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="751.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (54 samples, 0.02%)</title><rect x="42.8387%" y="725" width="0.0213%" height="15" fill="rgb(237,112,39)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="735.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (54 samples, 0.02%)</title><rect x="42.8387%" y="709" width="0.0213%" height="15" fill="rgb(247,203,27)" fg:x="108792" fg:w="54"/><text x="43.0887%" y="719.50"></text></g><g><title>[unknown] (29 samples, 0.01%)</title><rect x="42.8793%" y="981" width="0.0114%" height="15" fill="rgb(235,124,28)" fg:x="108895" fg:w="29"/><text x="43.1293%" y="991.50"></text></g><g><title>cpal::host::alsa::poll_descriptors_and_prepare_buffer (61 samples, 0.02%)</title><rect x="42.8911%" y="741" width="0.0240%" height="15" fill="rgb(208,207,46)" fg:x="108925" fg:w="61"/><text x="43.1411%" y="751.50"></text></g><g><title>[libasound.so.2.0.0] (29 samples, 0.01%)</title><rect x="42.9151%" y="709" width="0.0114%" height="15" fill="rgb(234,176,4)" fg:x="108986" fg:w="29"/><text x="43.1651%" y="719.50"></text></g><g><title>[libasound.so.2.0.0] (29 samples, 0.01%)</title><rect x="42.9151%" y="693" width="0.0114%" height="15" fill="rgb(230,133,28)" fg:x="108986" fg:w="29"/><text x="43.1651%" y="703.50"></text></g><g><title>[libasound.so.2.0.0] (28 samples, 0.01%)</title><rect x="42.9155%" y="677" width="0.0110%" height="15" fill="rgb(211,137,40)" fg:x="108987" fg:w="28"/><text x="43.1655%" y="687.50"></text></g><g><title>alsa::pcm::IO&lt;S&gt;::writei (31 samples, 0.01%)</title><rect x="42.9151%" y="725" width="0.0122%" height="15" fill="rgb(254,35,13)" fg:x="108986" fg:w="31"/><text x="43.1651%" y="735.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}}::{{closure}} (35 samples, 0.01%)</title><rect x="42.9293%" y="677" width="0.0138%" height="15" fill="rgb(225,49,51)" fg:x="109022" fg:w="35"/><text x="43.1793%" y="687.50"></text></g><g><title>__GI___clone (137 samples, 0.05%)</title><rect x="42.8907%" y="981" width="0.0539%" height="15" fill="rgb(251,10,15)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="991.50"></text></g><g><title>start_thread (137 samples, 0.05%)</title><rect x="42.8907%" y="965" width="0.0539%" height="15" fill="rgb(228,207,15)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="975.50"></text></g><g><title>std::sys::unix::thread::Thread::new::thread_start (137 samples, 0.05%)</title><rect x="42.8907%" y="949" width="0.0539%" height="15" fill="rgb(241,99,19)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (137 samples, 0.05%)</title><rect x="42.8907%" y="933" width="0.0539%" height="15" fill="rgb(207,104,49)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="943.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnOnce&lt;Args&gt;&gt;::call_once (137 samples, 0.05%)</title><rect x="42.8907%" y="917" width="0.0539%" height="15" fill="rgb(234,99,18)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="927.50"></text></g><g><title>core::ops::function::FnOnce::call_once{{vtable.shim}} (137 samples, 0.05%)</title><rect x="42.8907%" y="901" width="0.0539%" height="15" fill="rgb(213,191,49)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="911.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}} (137 samples, 0.05%)</title><rect x="42.8907%" y="885" width="0.0539%" height="15" fill="rgb(210,226,19)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="895.50"></text></g><g><title>std::panic::catch_unwind (137 samples, 0.05%)</title><rect x="42.8907%" y="869" width="0.0539%" height="15" fill="rgb(229,97,18)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="879.50"></text></g><g><title>std::panicking::try (137 samples, 0.05%)</title><rect x="42.8907%" y="853" width="0.0539%" height="15" fill="rgb(211,167,15)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="863.50"></text></g><g><title>std::panicking::try::do_call (137 samples, 0.05%)</title><rect x="42.8907%" y="837" width="0.0539%" height="15" fill="rgb(210,169,34)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="847.50"></text></g><g><title>&lt;core::panic::unwind_safe::AssertUnwindSafe&lt;F&gt; as core::ops::function::FnOnce&lt;()&gt;&gt;::call_once (137 samples, 0.05%)</title><rect x="42.8907%" y="821" width="0.0539%" height="15" fill="rgb(241,121,31)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="831.50"></text></g><g><title>std::thread::Builder::spawn_unchecked::{{closure}}::{{closure}} (137 samples, 0.05%)</title><rect x="42.8907%" y="805" width="0.0539%" height="15" fill="rgb(232,40,11)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="815.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (137 samples, 0.05%)</title><rect x="42.8907%" y="789" width="0.0539%" height="15" fill="rgb(205,86,26)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="799.50"></text></g><g><title>cpal::host::alsa::Stream::new_output::{{closure}} (137 samples, 0.05%)</title><rect x="42.8907%" y="773" width="0.0539%" height="15" fill="rgb(231,126,28)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="783.50"></text></g><g><title>cpal::host::alsa::output_stream_worker (137 samples, 0.05%)</title><rect x="42.8907%" y="757" width="0.0539%" height="15" fill="rgb(219,221,18)" fg:x="108924" fg:w="137"/><text x="43.1407%" y="767.50"></text></g><g><title>cpal::host::alsa::process_output (75 samples, 0.03%)</title><rect x="42.9151%" y="741" width="0.0295%" height="15" fill="rgb(211,40,0)" fg:x="108986" fg:w="75"/><text x="43.1651%" y="751.50"></text></g><g><title>cpal::traits::DeviceTrait::build_output_stream::{{closure}} (40 samples, 0.02%)</title><rect x="42.9289%" y="725" width="0.0158%" height="15" fill="rgb(239,85,43)" fg:x="109021" fg:w="40"/><text x="43.1789%" y="735.50"></text></g><g><title>&lt;cpal::platform::platform_impl::Device as rodio::stream::CpalDeviceExt&gt;::new_output_stream_with_format::{{closure}} (40 samples, 0.02%)</title><rect x="42.9289%" y="709" width="0.0158%" height="15" fill="rgb(231,55,21)" fg:x="109021" fg:w="40"/><text x="43.1789%" y="719.50"></text></g><g><title>&lt;core::slice::iter::IterMut&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::for_each (40 samples, 0.02%)</title><rect x="42.9289%" y="693" width="0.0158%" height="15" fill="rgb(225,184,43)" fg:x="109021" fg:w="40"/><text x="43.1789%" y="703.50"></text></g><g><title>cpal_alsa_out (217 samples, 0.09%)</title><rect x="42.8600%" y="997" width="0.0854%" height="15" fill="rgb(251,158,41)" fg:x="108846" fg:w="217"/><text x="43.1100%" y="1007.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (127 samples, 0.05%)</title><rect x="43.0537%" y="965" width="0.0500%" height="15" fill="rgb(234,159,37)" fg:x="109338" fg:w="127"/><text x="43.3037%" y="975.50"></text></g><g><title>_int_free (52 samples, 0.02%)</title><rect x="43.1167%" y="965" width="0.0205%" height="15" fill="rgb(216,204,22)" fg:x="109498" fg:w="52"/><text x="43.3667%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (39 samples, 0.02%)</title><rect x="43.1467%" y="965" width="0.0154%" height="15" fill="rgb(214,17,3)" fg:x="109574" fg:w="39"/><text x="43.3967%" y="975.50"></text></g><g><title>async_executor::Executor::try_tick (464 samples, 0.18%)</title><rect x="43.1664%" y="965" width="0.1827%" height="15" fill="rgb(212,111,17)" fg:x="109624" fg:w="464"/><text x="43.4164%" y="975.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (480 samples, 0.19%)</title><rect x="43.3491%" y="965" width="0.1890%" height="15" fill="rgb(221,157,24)" fg:x="110088" fg:w="480"/><text x="43.5991%" y="975.50"></text></g><g><title>async_task::header::Header::register (285 samples, 0.11%)</title><rect x="43.5389%" y="965" width="0.1122%" height="15" fill="rgb(252,16,13)" fg:x="110570" fg:w="285"/><text x="43.7889%" y="975.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_and_forget_missing_unchecked (36 samples, 0.01%)</title><rect x="43.6613%" y="965" width="0.0142%" height="15" fill="rgb(221,62,2)" fg:x="110881" fg:w="36"/><text x="43.9113%" y="975.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (27 samples, 0.01%)</title><rect x="43.6649%" y="949" width="0.0106%" height="15" fill="rgb(247,87,22)" fg:x="110890" fg:w="27"/><text x="43.9149%" y="959.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (27 samples, 0.01%)</title><rect x="43.6649%" y="933" width="0.0106%" height="15" fill="rgb(215,73,9)" fg:x="110890" fg:w="27"/><text x="43.9149%" y="943.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (29 samples, 0.01%)</title><rect x="43.7082%" y="965" width="0.0114%" height="15" fill="rgb(207,175,33)" fg:x="111000" fg:w="29"/><text x="43.9582%" y="975.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (30 samples, 0.01%)</title><rect x="43.7346%" y="965" width="0.0118%" height="15" fill="rgb(243,129,54)" fg:x="111067" fg:w="30"/><text x="43.9846%" y="975.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (33 samples, 0.01%)</title><rect x="43.7562%" y="965" width="0.0130%" height="15" fill="rgb(227,119,45)" fg:x="111122" fg:w="33"/><text x="44.0062%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (515 samples, 0.20%)</title><rect x="43.8303%" y="965" width="0.2028%" height="15" fill="rgb(205,109,36)" fg:x="111310" fg:w="515"/><text x="44.0803%" y="975.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (69 samples, 0.03%)</title><rect x="44.0598%" y="965" width="0.0272%" height="15" fill="rgb(205,6,39)" fg:x="111893" fg:w="69"/><text x="44.3098%" y="975.50"></text></g><g><title>[[heap]] (2,799 samples, 1.10%)</title><rect x="42.9923%" y="981" width="1.1022%" height="15" fill="rgb(221,32,16)" fg:x="109182" fg:w="2799"/><text x="43.2423%" y="991.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (38 samples, 0.01%)</title><rect x="44.1138%" y="965" width="0.0150%" height="15" fill="rgb(228,144,50)" fg:x="112030" fg:w="38"/><text x="44.3638%" y="975.50"></text></g><g><title>__GI___libc_free (26 samples, 0.01%)</title><rect x="44.1295%" y="965" width="0.0102%" height="15" fill="rgb(229,201,53)" fg:x="112070" fg:w="26"/><text x="44.3795%" y="975.50"></text></g><g><title>__GI___libc_realloc (37 samples, 0.01%)</title><rect x="44.1437%" y="965" width="0.0146%" height="15" fill="rgb(249,153,27)" fg:x="112106" fg:w="37"/><text x="44.3937%" y="975.50"></text></g><g><title>alloc::raw_vec::finish_grow (30 samples, 0.01%)</title><rect x="44.1724%" y="965" width="0.0118%" height="15" fill="rgb(227,106,25)" fg:x="112179" fg:w="30"/><text x="44.4224%" y="975.50"></text></g><g><title>async_executor::Executor::try_tick (481 samples, 0.19%)</title><rect x="44.1858%" y="965" width="0.1894%" height="15" fill="rgb(230,65,29)" fg:x="112213" fg:w="481"/><text x="44.4358%" y="975.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (501 samples, 0.20%)</title><rect x="44.3756%" y="965" width="0.1973%" height="15" fill="rgb(221,57,46)" fg:x="112695" fg:w="501"/><text x="44.6256%" y="975.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (495 samples, 0.19%)</title><rect x="44.7788%" y="917" width="0.1949%" height="15" fill="rgb(229,161,17)" fg:x="113719" fg:w="495"/><text x="45.0288%" y="927.50"></text></g><g><title>async_task::header::Header::register (1,534 samples, 0.60%)</title><rect x="44.5737%" y="965" width="0.6040%" height="15" fill="rgb(222,213,11)" fg:x="113198" fg:w="1534"/><text x="44.8237%" y="975.50"></text></g><g><title>async_task::utils::abort_on_panic (1,013 samples, 0.40%)</title><rect x="44.7788%" y="949" width="0.3989%" height="15" fill="rgb(235,35,13)" fg:x="113719" fg:w="1013"/><text x="45.0288%" y="959.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (1,013 samples, 0.40%)</title><rect x="44.7788%" y="933" width="0.3989%" height="15" fill="rgb(233,158,34)" fg:x="113719" fg:w="1013"/><text x="45.0288%" y="943.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (518 samples, 0.20%)</title><rect x="44.9738%" y="917" width="0.2040%" height="15" fill="rgb(215,151,48)" fg:x="114214" fg:w="518"/><text x="45.2238%" y="927.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (518 samples, 0.20%)</title><rect x="44.9738%" y="901" width="0.2040%" height="15" fill="rgb(229,84,14)" fg:x="114214" fg:w="518"/><text x="45.2238%" y="911.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (518 samples, 0.20%)</title><rect x="44.9738%" y="885" width="0.2040%" height="15" fill="rgb(229,68,14)" fg:x="114214" fg:w="518"/><text x="45.2238%" y="895.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (507 samples, 0.20%)</title><rect x="45.1777%" y="965" width="0.1996%" height="15" fill="rgb(243,106,26)" fg:x="114732" fg:w="507"/><text x="45.4277%" y="975.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (161 samples, 0.06%)</title><rect x="45.4030%" y="965" width="0.0634%" height="15" fill="rgb(206,45,38)" fg:x="115304" fg:w="161"/><text x="45.6530%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,447 samples, 0.57%)</title><rect x="45.4935%" y="965" width="0.5698%" height="15" fill="rgb(226,6,15)" fg:x="115534" fg:w="1447"/><text x="45.7435%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (985 samples, 0.39%)</title><rect x="45.6754%" y="949" width="0.3879%" height="15" fill="rgb(232,22,54)" fg:x="115996" fg:w="985"/><text x="45.9254%" y="959.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (474 samples, 0.19%)</title><rect x="45.8767%" y="933" width="0.1866%" height="15" fill="rgb(229,222,32)" fg:x="116507" fg:w="474"/><text x="46.1267%" y="943.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (474 samples, 0.19%)</title><rect x="45.8767%" y="917" width="0.1866%" height="15" fill="rgb(228,62,29)" fg:x="116507" fg:w="474"/><text x="46.1267%" y="927.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (474 samples, 0.19%)</title><rect x="45.8767%" y="901" width="0.1866%" height="15" fill="rgb(251,103,34)" fg:x="116507" fg:w="474"/><text x="46.1267%" y="911.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (474 samples, 0.19%)</title><rect x="45.8767%" y="885" width="0.1866%" height="15" fill="rgb(233,12,30)" fg:x="116507" fg:w="474"/><text x="46.1267%" y="895.50"></text></g><g><title>[[stack]] (5,035 samples, 1.98%)</title><rect x="44.0945%" y="981" width="1.9826%" height="15" fill="rgb(238,52,0)" fg:x="111981" fg:w="5035"/><text x="44.3445%" y="991.50">[..</text></g><g><title>async_executor::LocalExecutor::try_tick (517 samples, 0.20%)</title><rect x="46.0858%" y="965" width="0.2036%" height="15" fill="rgb(223,98,5)" fg:x="117038" fg:w="517"/><text x="46.3358%" y="975.50"></text></g><g><title>[anon] (605 samples, 0.24%)</title><rect x="46.0771%" y="981" width="0.2382%" height="15" fill="rgb(228,75,37)" fg:x="117016" fg:w="605"/><text x="46.3271%" y="991.50"></text></g><g><title>async_task::header::Header::register (429 samples, 0.17%)</title><rect x="46.3240%" y="965" width="0.1689%" height="15" fill="rgb(205,115,49)" fg:x="117643" fg:w="429"/><text x="46.5740%" y="975.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (2,898 samples, 1.14%)</title><rect x="46.5098%" y="965" width="1.1411%" height="15" fill="rgb(250,154,43)" fg:x="118115" fg:w="2898"/><text x="46.7598%" y="975.50"></text></g><g><title>[engine] (3,416 samples, 1.35%)</title><rect x="46.3153%" y="981" width="1.3451%" height="15" fill="rgb(226,43,29)" fg:x="117621" fg:w="3416"/><text x="46.5653%" y="991.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (26 samples, 0.01%)</title><rect x="47.7305%" y="709" width="0.0102%" height="15" fill="rgb(249,228,39)" fg:x="121215" fg:w="26"/><text x="47.9805%" y="719.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (152 samples, 0.06%)</title><rect x="47.6986%" y="965" width="0.0599%" height="15" fill="rgb(216,79,43)" fg:x="121134" fg:w="152"/><text x="47.9486%" y="975.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (141 samples, 0.06%)</title><rect x="47.7030%" y="949" width="0.0555%" height="15" fill="rgb(228,95,12)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="959.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (141 samples, 0.06%)</title><rect x="47.7030%" y="933" width="0.0555%" height="15" fill="rgb(249,221,15)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="943.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (141 samples, 0.06%)</title><rect x="47.7030%" y="917" width="0.0555%" height="15" fill="rgb(233,34,13)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="927.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (141 samples, 0.06%)</title><rect x="47.7030%" y="901" width="0.0555%" height="15" fill="rgb(214,103,39)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="911.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (141 samples, 0.06%)</title><rect x="47.7030%" y="885" width="0.0555%" height="15" fill="rgb(251,126,39)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="895.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (141 samples, 0.06%)</title><rect x="47.7030%" y="869" width="0.0555%" height="15" fill="rgb(214,216,36)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="879.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (141 samples, 0.06%)</title><rect x="47.7030%" y="853" width="0.0555%" height="15" fill="rgb(220,221,8)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="863.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (141 samples, 0.06%)</title><rect x="47.7030%" y="837" width="0.0555%" height="15" fill="rgb(240,216,3)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="847.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (141 samples, 0.06%)</title><rect x="47.7030%" y="821" width="0.0555%" height="15" fill="rgb(232,218,17)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (141 samples, 0.06%)</title><rect x="47.7030%" y="805" width="0.0555%" height="15" fill="rgb(229,163,45)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="815.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (141 samples, 0.06%)</title><rect x="47.7030%" y="789" width="0.0555%" height="15" fill="rgb(231,110,42)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="799.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (141 samples, 0.06%)</title><rect x="47.7030%" y="773" width="0.0555%" height="15" fill="rgb(208,170,48)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="783.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (141 samples, 0.06%)</title><rect x="47.7030%" y="757" width="0.0555%" height="15" fill="rgb(239,116,25)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (141 samples, 0.06%)</title><rect x="47.7030%" y="741" width="0.0555%" height="15" fill="rgb(219,200,50)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="751.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (141 samples, 0.06%)</title><rect x="47.7030%" y="725" width="0.0555%" height="15" fill="rgb(245,200,0)" fg:x="121145" fg:w="141"/><text x="47.9530%" y="735.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (32 samples, 0.01%)</title><rect x="47.7459%" y="709" width="0.0126%" height="15" fill="rgb(245,119,33)" fg:x="121254" fg:w="32"/><text x="47.9959%" y="719.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (51 samples, 0.02%)</title><rect x="47.7585%" y="965" width="0.0201%" height="15" fill="rgb(231,125,12)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="975.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (51 samples, 0.02%)</title><rect x="47.7585%" y="949" width="0.0201%" height="15" fill="rgb(216,96,41)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="959.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (51 samples, 0.02%)</title><rect x="47.7585%" y="933" width="0.0201%" height="15" fill="rgb(248,43,45)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="943.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (51 samples, 0.02%)</title><rect x="47.7585%" y="917" width="0.0201%" height="15" fill="rgb(217,222,7)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="927.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (51 samples, 0.02%)</title><rect x="47.7585%" y="901" width="0.0201%" height="15" fill="rgb(233,28,6)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="911.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (51 samples, 0.02%)</title><rect x="47.7585%" y="885" width="0.0201%" height="15" fill="rgb(231,218,15)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="895.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (51 samples, 0.02%)</title><rect x="47.7585%" y="869" width="0.0201%" height="15" fill="rgb(226,171,48)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="879.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (51 samples, 0.02%)</title><rect x="47.7585%" y="853" width="0.0201%" height="15" fill="rgb(235,201,9)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="863.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (51 samples, 0.02%)</title><rect x="47.7585%" y="837" width="0.0201%" height="15" fill="rgb(217,80,15)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="847.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (51 samples, 0.02%)</title><rect x="47.7585%" y="821" width="0.0201%" height="15" fill="rgb(219,152,8)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="831.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (51 samples, 0.02%)</title><rect x="47.7585%" y="805" width="0.0201%" height="15" fill="rgb(243,107,38)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="815.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (51 samples, 0.02%)</title><rect x="47.7585%" y="789" width="0.0201%" height="15" fill="rgb(231,17,5)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="799.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (51 samples, 0.02%)</title><rect x="47.7585%" y="773" width="0.0201%" height="15" fill="rgb(209,25,54)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="783.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (51 samples, 0.02%)</title><rect x="47.7585%" y="757" width="0.0201%" height="15" fill="rgb(219,0,2)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="767.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (51 samples, 0.02%)</title><rect x="47.7585%" y="741" width="0.0201%" height="15" fill="rgb(246,9,5)" fg:x="121286" fg:w="51"/><text x="48.0085%" y="751.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_extend (50 samples, 0.02%)</title><rect x="47.7589%" y="725" width="0.0197%" height="15" fill="rgb(226,159,4)" fg:x="121287" fg:w="50"/><text x="48.0089%" y="735.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_extend (35 samples, 0.01%)</title><rect x="47.7648%" y="709" width="0.0138%" height="15" fill="rgb(219,175,34)" fg:x="121302" fg:w="35"/><text x="48.0148%" y="719.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (35 samples, 0.01%)</title><rect x="47.7648%" y="693" width="0.0138%" height="15" fill="rgb(236,10,46)" fg:x="121302" fg:w="35"/><text x="48.0148%" y="703.50"></text></g><g><title>[libX11.so.6.4.0] (28 samples, 0.01%)</title><rect x="47.8676%" y="949" width="0.0110%" height="15" fill="rgb(240,211,16)" fg:x="121563" fg:w="28"/><text x="48.1176%" y="959.50"></text></g><g><title>[libX11.so.6.4.0] (47 samples, 0.02%)</title><rect x="47.8609%" y="965" width="0.0185%" height="15" fill="rgb(205,3,43)" fg:x="121546" fg:w="47"/><text x="48.1109%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (212 samples, 0.08%)</title><rect x="47.8802%" y="965" width="0.0835%" height="15" fill="rgb(245,7,22)" fg:x="121595" fg:w="212"/><text x="48.1302%" y="975.50"></text></g><g><title>__GI___libc_free (48 samples, 0.02%)</title><rect x="47.9699%" y="965" width="0.0189%" height="15" fill="rgb(239,132,32)" fg:x="121823" fg:w="48"/><text x="48.2199%" y="975.50"></text></g><g><title>__GI___libc_malloc (41 samples, 0.02%)</title><rect x="47.9888%" y="965" width="0.0161%" height="15" fill="rgb(228,202,34)" fg:x="121871" fg:w="41"/><text x="48.2388%" y="975.50"></text></g><g><title>__memmove_avx_unaligned_erms (32 samples, 0.01%)</title><rect x="48.0125%" y="965" width="0.0126%" height="15" fill="rgb(254,200,22)" fg:x="121931" fg:w="32"/><text x="48.2625%" y="975.50"></text></g><g><title>_int_free (72 samples, 0.03%)</title><rect x="48.0255%" y="965" width="0.0284%" height="15" fill="rgb(219,10,39)" fg:x="121964" fg:w="72"/><text x="48.2755%" y="975.50"></text></g><g><title>_int_malloc (33 samples, 0.01%)</title><rect x="48.0538%" y="965" width="0.0130%" height="15" fill="rgb(226,210,39)" fg:x="122036" fg:w="33"/><text x="48.3038%" y="975.50"></text></g><g><title>_int_realloc (43 samples, 0.02%)</title><rect x="48.0668%" y="965" width="0.0169%" height="15" fill="rgb(208,219,16)" fg:x="122069" fg:w="43"/><text x="48.3168%" y="975.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (45 samples, 0.02%)</title><rect x="48.0861%" y="965" width="0.0177%" height="15" fill="rgb(216,158,51)" fg:x="122118" fg:w="45"/><text x="48.3361%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (44 samples, 0.02%)</title><rect x="48.1050%" y="965" width="0.0173%" height="15" fill="rgb(233,14,44)" fg:x="122166" fg:w="44"/><text x="48.3550%" y="975.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (40 samples, 0.02%)</title><rect x="48.1066%" y="949" width="0.0158%" height="15" fill="rgb(237,97,39)" fg:x="122170" fg:w="40"/><text x="48.3566%" y="959.50"></text></g><g><title>alloc::raw_vec::finish_grow (112 samples, 0.04%)</title><rect x="48.1223%" y="965" width="0.0441%" height="15" fill="rgb(218,198,43)" fg:x="122210" fg:w="112"/><text x="48.3723%" y="975.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (473 samples, 0.19%)</title><rect x="48.1688%" y="965" width="0.1863%" height="15" fill="rgb(231,104,20)" fg:x="122328" fg:w="473"/><text x="48.4188%" y="975.50"></text></g><g><title>async_task::header::Header::register (174 samples, 0.07%)</title><rect x="48.3550%" y="965" width="0.0685%" height="15" fill="rgb(254,36,13)" fg:x="122801" fg:w="174"/><text x="48.6050%" y="975.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (35 samples, 0.01%)</title><rect x="48.4236%" y="965" width="0.0138%" height="15" fill="rgb(248,14,50)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="975.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.01%)</title><rect x="48.4236%" y="949" width="0.0138%" height="15" fill="rgb(217,107,29)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="959.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (35 samples, 0.01%)</title><rect x="48.4236%" y="933" width="0.0138%" height="15" fill="rgb(251,169,33)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="943.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (35 samples, 0.01%)</title><rect x="48.4236%" y="917" width="0.0138%" height="15" fill="rgb(217,108,32)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="927.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (35 samples, 0.01%)</title><rect x="48.4236%" y="901" width="0.0138%" height="15" fill="rgb(219,66,42)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="911.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (35 samples, 0.01%)</title><rect x="48.4236%" y="885" width="0.0138%" height="15" fill="rgb(206,180,7)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="895.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (35 samples, 0.01%)</title><rect x="48.4236%" y="869" width="0.0138%" height="15" fill="rgb(208,226,31)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="879.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (35 samples, 0.01%)</title><rect x="48.4236%" y="853" width="0.0138%" height="15" fill="rgb(218,26,49)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="863.50"></text></g><g><title>core::ops::function::Fn::call (35 samples, 0.01%)</title><rect x="48.4236%" y="837" width="0.0138%" height="15" fill="rgb(233,197,48)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="847.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (35 samples, 0.01%)</title><rect x="48.4236%" y="821" width="0.0138%" height="15" fill="rgb(252,181,51)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="831.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (35 samples, 0.01%)</title><rect x="48.4236%" y="805" width="0.0138%" height="15" fill="rgb(253,90,19)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="815.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::compile_pipeline (35 samples, 0.01%)</title><rect x="48.4236%" y="789" width="0.0138%" height="15" fill="rgb(215,171,30)" fg:x="122975" fg:w="35"/><text x="48.6736%" y="799.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;wgpu_core::command::bind::BindGroupPair&gt;&gt; (52 samples, 0.02%)</title><rect x="48.4881%" y="757" width="0.0205%" height="15" fill="rgb(214,222,9)" fg:x="123139" fg:w="52"/><text x="48.7381%" y="767.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::command::bind::BindGroupPair&gt; (52 samples, 0.02%)</title><rect x="48.4881%" y="741" width="0.0205%" height="15" fill="rgb(223,3,22)" fg:x="123139" fg:w="52"/><text x="48.7381%" y="751.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::Stored&lt;wgpu_core::id::Id&lt;wgpu_core::binding_model::BindGroup&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt; (52 samples, 0.02%)</title><rect x="48.4881%" y="725" width="0.0205%" height="15" fill="rgb(225,196,46)" fg:x="123139" fg:w="52"/><text x="48.7381%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu_core::RefCount&gt; (52 samples, 0.02%)</title><rect x="48.4881%" y="709" width="0.0205%" height="15" fill="rgb(209,110,37)" fg:x="123139" fg:w="52"/><text x="48.7381%" y="719.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::ops::drop::Drop&gt;::drop (52 samples, 0.02%)</title><rect x="48.4881%" y="693" width="0.0205%" height="15" fill="rgb(249,89,12)" fg:x="123139" fg:w="52"/><text x="48.7381%" y="703.50"></text></g><g><title>wgpu_core::RefCount::rich_drop_inner (52 samples, 0.02%)</title><rect x="48.4881%" y="677" width="0.0205%" height="15" fill="rgb(226,27,33)" fg:x="123139" fg:w="52"/><text x="48.7381%" y="687.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (52 samples, 0.02%)</title><rect x="48.4881%" y="661" width="0.0205%" height="15" fill="rgb(213,82,22)" fg:x="123139" fg:w="52"/><text x="48.7381%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_sub (52 samples, 0.02%)</title><rect x="48.4881%" y="645" width="0.0205%" height="15" fill="rgb(248,140,0)" fg:x="123139" fg:w="52"/><text x="48.7381%" y="655.50"></text></g><g><title>wgpu_core::command::bind::Binder::provide_entry (146 samples, 0.06%)</title><rect x="48.4716%" y="789" width="0.0575%" height="15" fill="rgb(228,106,3)" fg:x="123097" fg:w="146"/><text x="48.7216%" y="799.50"></text></g><g><title>wgpu_core::command::bind::BindGroupEntry::provide (146 samples, 0.06%)</title><rect x="48.4716%" y="773" width="0.0575%" height="15" fill="rgb(209,23,37)" fg:x="123097" fg:w="146"/><text x="48.7216%" y="783.50"></text></g><g><title>wgpu_core::LifeGuard::add_ref (52 samples, 0.02%)</title><rect x="48.5086%" y="757" width="0.0205%" height="15" fill="rgb(241,93,50)" fg:x="123191" fg:w="52"/><text x="48.7586%" y="767.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (52 samples, 0.02%)</title><rect x="48.5086%" y="741" width="0.0205%" height="15" fill="rgb(253,46,43)" fg:x="123191" fg:w="52"/><text x="48.7586%" y="751.50"></text></g><g><title>&lt;wgpu_core::RefCount as core::clone::Clone&gt;::clone (52 samples, 0.02%)</title><rect x="48.5086%" y="725" width="0.0205%" height="15" fill="rgb(226,206,43)" fg:x="123191" fg:w="52"/><text x="48.7586%" y="735.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (51 samples, 0.02%)</title><rect x="48.5090%" y="709" width="0.0201%" height="15" fill="rgb(217,54,7)" fg:x="123192" fg:w="51"/><text x="48.7590%" y="719.50"></text></g><g><title>core::sync::atomic::atomic_add (51 samples, 0.02%)</title><rect x="48.5090%" y="693" width="0.0201%" height="15" fill="rgb(223,5,52)" fg:x="123192" fg:w="51"/><text x="48.7590%" y="703.50"></text></g><g><title>&lt;hashbrown::raw::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="48.5437%" y="725" width="0.0142%" height="15" fill="rgb(206,52,46)" fg:x="123280" fg:w="36"/><text x="48.7937%" y="735.50"></text></g><g><title>&lt;hashbrown::raw::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (36 samples, 0.01%)</title><rect x="48.5437%" y="709" width="0.0142%" height="15" fill="rgb(253,136,11)" fg:x="123280" fg:w="36"/><text x="48.7937%" y="719.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (41 samples, 0.02%)</title><rect x="48.5421%" y="741" width="0.0161%" height="15" fill="rgb(208,106,33)" fg:x="123276" fg:w="41"/><text x="48.7921%" y="751.50"></text></g><g><title>&lt;std::collections::hash::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.02%)</title><rect x="48.5421%" y="757" width="0.0165%" height="15" fill="rgb(206,54,4)" fg:x="123276" fg:w="42"/><text x="48.7921%" y="767.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (32 samples, 0.01%)</title><rect x="48.5724%" y="709" width="0.0126%" height="15" fill="rgb(213,3,15)" fg:x="123353" fg:w="32"/><text x="48.8224%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (79 samples, 0.03%)</title><rect x="48.5649%" y="757" width="0.0311%" height="15" fill="rgb(252,211,39)" fg:x="123334" fg:w="79"/><text x="48.8149%" y="767.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (79 samples, 0.03%)</title><rect x="48.5649%" y="741" width="0.0311%" height="15" fill="rgb(223,6,36)" fg:x="123334" fg:w="79"/><text x="48.8149%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (75 samples, 0.03%)</title><rect x="48.5665%" y="725" width="0.0295%" height="15" fill="rgb(252,169,45)" fg:x="123338" fg:w="75"/><text x="48.8165%" y="735.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (27 samples, 0.01%)</title><rect x="48.5960%" y="709" width="0.0106%" height="15" fill="rgb(212,48,26)" fg:x="123413" fg:w="27"/><text x="48.8460%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::iter (30 samples, 0.01%)</title><rect x="48.5960%" y="757" width="0.0118%" height="15" fill="rgb(251,102,48)" fg:x="123413" fg:w="30"/><text x="48.8460%" y="767.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (30 samples, 0.01%)</title><rect x="48.5960%" y="741" width="0.0118%" height="15" fill="rgb(243,208,16)" fg:x="123413" fg:w="30"/><text x="48.8460%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (30 samples, 0.01%)</title><rect x="48.5960%" y="725" width="0.0118%" height="15" fill="rgb(219,96,24)" fg:x="123413" fg:w="30"/><text x="48.8460%" y="735.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (376 samples, 0.15%)</title><rect x="48.4653%" y="965" width="0.1481%" height="15" fill="rgb(219,33,29)" fg:x="123081" fg:w="376"/><text x="48.7153%" y="975.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (375 samples, 0.15%)</title><rect x="48.4657%" y="949" width="0.1477%" height="15" fill="rgb(223,176,5)" fg:x="123082" fg:w="375"/><text x="48.7157%" y="959.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (373 samples, 0.15%)</title><rect x="48.4665%" y="933" width="0.1469%" height="15" fill="rgb(228,140,14)" fg:x="123084" fg:w="373"/><text x="48.7165%" y="943.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (373 samples, 0.15%)</title><rect x="48.4665%" y="917" width="0.1469%" height="15" fill="rgb(217,179,31)" fg:x="123084" fg:w="373"/><text x="48.7165%" y="927.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (373 samples, 0.15%)</title><rect x="48.4665%" y="901" width="0.1469%" height="15" fill="rgb(230,9,30)" fg:x="123084" fg:w="373"/><text x="48.7165%" y="911.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass&gt; (373 samples, 0.15%)</title><rect x="48.4665%" y="885" width="0.1469%" height="15" fill="rgb(230,136,20)" fg:x="123084" fg:w="373"/><text x="48.7165%" y="895.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::RenderPass&gt; (373 samples, 0.15%)</title><rect x="48.4665%" y="869" width="0.1469%" height="15" fill="rgb(215,210,22)" fg:x="123084" fg:w="373"/><text x="48.7165%" y="879.50"></text></g><g><title>&lt;wgpu::RenderPass as core::ops::drop::Drop&gt;::drop (373 samples, 0.15%)</title><rect x="48.4665%" y="853" width="0.1469%" height="15" fill="rgb(218,43,5)" fg:x="123084" fg:w="373"/><text x="48.7165%" y="863.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_end_render_pass (373 samples, 0.15%)</title><rect x="48.4665%" y="837" width="0.1469%" height="15" fill="rgb(216,11,5)" fg:x="123084" fg:w="373"/><text x="48.7165%" y="847.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass (373 samples, 0.15%)</title><rect x="48.4665%" y="821" width="0.1469%" height="15" fill="rgb(209,82,29)" fg:x="123084" fg:w="373"/><text x="48.7165%" y="831.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (373 samples, 0.15%)</title><rect x="48.4665%" y="805" width="0.1469%" height="15" fill="rgb(244,115,12)" fg:x="123084" fg:w="373"/><text x="48.7165%" y="815.50"></text></g><g><title>wgpu_core::track::TrackerSet::merge_extend (211 samples, 0.08%)</title><rect x="48.5303%" y="789" width="0.0831%" height="15" fill="rgb(222,82,18)" fg:x="123246" fg:w="211"/><text x="48.7803%" y="799.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::merge_extend (211 samples, 0.08%)</title><rect x="48.5303%" y="773" width="0.0831%" height="15" fill="rgb(249,227,8)" fg:x="123246" fg:w="211"/><text x="48.7803%" y="783.50"></text></g><g><title>&lt;async_channel::Receiver&lt;T&gt; as core::clone::Clone&gt;::clone (36 samples, 0.01%)</title><rect x="49.2461%" y="677" width="0.0142%" height="15" fill="rgb(253,141,45)" fg:x="125064" fg:w="36"/><text x="49.4961%" y="687.50"></text></g><g><title>async_executor::Executor::schedule::{{closure}} (27 samples, 0.01%)</title><rect x="49.2745%" y="613" width="0.0106%" height="15" fill="rgb(234,184,4)" fg:x="125136" fg:w="27"/><text x="49.5245%" y="623.50"></text></g><g><title>async_task::runnable::Runnable::schedule (39 samples, 0.02%)</title><rect x="49.2745%" y="645" width="0.0154%" height="15" fill="rgb(218,194,23)" fg:x="125136" fg:w="39"/><text x="49.5245%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::schedule (39 samples, 0.02%)</title><rect x="49.2745%" y="629" width="0.0154%" height="15" fill="rgb(235,66,41)" fg:x="125136" fg:w="39"/><text x="49.5245%" y="639.50"></text></g><g><title>alloc::alloc::alloc (29 samples, 0.01%)</title><rect x="49.2950%" y="613" width="0.0114%" height="15" fill="rgb(245,217,1)" fg:x="125188" fg:w="29"/><text x="49.5450%" y="623.50"></text></g><g><title>__rdl_alloc (29 samples, 0.01%)</title><rect x="49.2950%" y="597" width="0.0114%" height="15" fill="rgb(229,91,1)" fg:x="125188" fg:w="29"/><text x="49.5450%" y="607.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (29 samples, 0.01%)</title><rect x="49.2950%" y="581" width="0.0114%" height="15" fill="rgb(207,101,30)" fg:x="125188" fg:w="29"/><text x="49.5450%" y="591.50"></text></g><g><title>__GI___libc_malloc (29 samples, 0.01%)</title><rect x="49.2950%" y="565" width="0.0114%" height="15" fill="rgb(223,82,49)" fg:x="125188" fg:w="29"/><text x="49.5450%" y="575.50"></text></g><g><title>async_task::runnable::spawn_unchecked (32 samples, 0.01%)</title><rect x="49.2950%" y="645" width="0.0126%" height="15" fill="rgb(218,167,17)" fg:x="125188" fg:w="32"/><text x="49.5450%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::allocate (32 samples, 0.01%)</title><rect x="49.2950%" y="629" width="0.0126%" height="15" fill="rgb(208,103,14)" fg:x="125188" fg:w="32"/><text x="49.5450%" y="639.50"></text></g><g><title>bevy_tasks::task_pool::Scope&lt;T&gt;::spawn (116 samples, 0.05%)</title><rect x="49.2646%" y="677" width="0.0457%" height="15" fill="rgb(238,20,8)" fg:x="125111" fg:w="116"/><text x="49.5146%" y="687.50"></text></g><g><title>async_executor::Executor::spawn (99 samples, 0.04%)</title><rect x="49.2713%" y="661" width="0.0390%" height="15" fill="rgb(218,80,54)" fg:x="125128" fg:w="99"/><text x="49.5213%" y="671.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems (174 samples, 0.07%)</title><rect x="49.2450%" y="693" width="0.0685%" height="15" fill="rgb(240,144,17)" fg:x="125061" fg:w="174"/><text x="49.4950%" y="703.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}} (187 samples, 0.07%)</title><rect x="49.2450%" y="709" width="0.0736%" height="15" fill="rgb(245,27,50)" fg:x="125061" fg:w="187"/><text x="49.4950%" y="719.50"></text></g><g><title>async_executor::Executor::try_tick (432 samples, 0.17%)</title><rect x="49.6990%" y="693" width="0.1701%" height="15" fill="rgb(251,51,7)" fg:x="126214" fg:w="432"/><text x="49.9490%" y="703.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (42 samples, 0.02%)</title><rect x="49.8762%" y="597" width="0.0165%" height="15" fill="rgb(245,217,29)" fg:x="126664" fg:w="42"/><text x="50.1262%" y="607.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (50 samples, 0.02%)</title><rect x="49.8943%" y="565" width="0.0197%" height="15" fill="rgb(221,176,29)" fg:x="126710" fg:w="50"/><text x="50.1443%" y="575.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (50 samples, 0.02%)</title><rect x="49.8943%" y="549" width="0.0197%" height="15" fill="rgb(212,180,24)" fg:x="126710" fg:w="50"/><text x="50.1443%" y="559.50"></text></g><g><title>event_listener::Event::notify (40 samples, 0.02%)</title><rect x="49.8982%" y="533" width="0.0158%" height="15" fill="rgb(254,24,2)" fg:x="126720" fg:w="40"/><text x="50.1482%" y="543.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (86 samples, 0.03%)</title><rect x="49.8927%" y="597" width="0.0339%" height="15" fill="rgb(230,100,2)" fg:x="126706" fg:w="86"/><text x="50.1427%" y="607.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::process_queued_systems::{{closure}} (86 samples, 0.03%)</title><rect x="49.8927%" y="581" width="0.0339%" height="15" fill="rgb(219,142,25)" fg:x="126706" fg:w="86"/><text x="50.1427%" y="591.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems::{{closure}}::{{closure}} (169 samples, 0.07%)</title><rect x="49.8758%" y="613" width="0.0665%" height="15" fill="rgb(240,73,43)" fg:x="126663" fg:w="169"/><text x="50.1258%" y="623.50"></text></g><g><title>&lt;async_channel::Recv&lt;T&gt; as core::future::future::Future&gt;::poll (73 samples, 0.03%)</title><rect x="49.9447%" y="597" width="0.0287%" height="15" fill="rgb(214,114,15)" fg:x="126838" fg:w="73"/><text x="50.1947%" y="607.50"></text></g><g><title>event_listener::Event::listen (47 samples, 0.02%)</title><rect x="49.9549%" y="581" width="0.0185%" height="15" fill="rgb(207,130,4)" fg:x="126864" fg:w="47"/><text x="50.2049%" y="591.50"></text></g><g><title>async_channel::Sender&lt;T&gt;::try_send (41 samples, 0.02%)</title><rect x="49.9742%" y="581" width="0.0161%" height="15" fill="rgb(221,25,40)" fg:x="126913" fg:w="41"/><text x="50.2242%" y="591.50"></text></g><g><title>&lt;async_channel::Send&lt;T&gt; as core::future::future::Future&gt;::poll (44 samples, 0.02%)</title><rect x="49.9734%" y="597" width="0.0173%" height="15" fill="rgb(241,184,7)" fg:x="126911" fg:w="44"/><text x="50.2234%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;[bevy_render::draw::RenderCommand]&gt; (351 samples, 0.14%)</title><rect x="50.0061%" y="469" width="0.1382%" height="15" fill="rgb(235,159,4)" fg:x="126994" fg:w="351"/><text x="50.2561%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;bevy_render::draw::RenderCommand&gt; (348 samples, 0.14%)</title><rect x="50.0073%" y="453" width="0.1370%" height="15" fill="rgb(214,87,48)" fg:x="126997" fg:w="348"/><text x="50.2573%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (186 samples, 0.07%)</title><rect x="50.0711%" y="437" width="0.0732%" height="15" fill="rgb(246,198,24)" fg:x="127159" fg:w="186"/><text x="50.3211%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (164 samples, 0.06%)</title><rect x="50.0797%" y="421" width="0.0646%" height="15" fill="rgb(209,66,40)" fg:x="127181" fg:w="164"/><text x="50.3297%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (164 samples, 0.06%)</title><rect x="50.0797%" y="405" width="0.0646%" height="15" fill="rgb(233,147,39)" fg:x="127181" fg:w="164"/><text x="50.3297%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (163 samples, 0.06%)</title><rect x="50.0801%" y="389" width="0.0642%" height="15" fill="rgb(231,145,52)" fg:x="127182" fg:w="163"/><text x="50.3301%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_sub (163 samples, 0.06%)</title><rect x="50.0801%" y="373" width="0.0642%" height="15" fill="rgb(206,20,26)" fg:x="127182" fg:w="163"/><text x="50.3301%" y="383.50"></text></g><g><title>bevy_render::draw::clear_draw_system (368 samples, 0.14%)</title><rect x="50.0006%" y="533" width="0.1449%" height="15" fill="rgb(238,220,4)" fg:x="126980" fg:w="368"/><text x="50.2506%" y="543.50"></text></g><g><title>bevy_render::draw::Draw::clear_render_commands (365 samples, 0.14%)</title><rect x="50.0018%" y="517" width="0.1437%" height="15" fill="rgb(252,195,42)" fg:x="126983" fg:w="365"/><text x="50.2518%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::clear (362 samples, 0.14%)</title><rect x="50.0030%" y="501" width="0.1425%" height="15" fill="rgb(209,10,6)" fg:x="126986" fg:w="362"/><text x="50.2530%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::truncate (362 samples, 0.14%)</title><rect x="50.0030%" y="485" width="0.1425%" height="15" fill="rgb(229,3,52)" fg:x="126986" fg:w="362"/><text x="50.2530%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::DerefMut&gt;::deref_mut (69 samples, 0.03%)</title><rect x="50.1581%" y="517" width="0.0272%" height="15" fill="rgb(253,49,37)" fg:x="127380" fg:w="69"/><text x="50.4081%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;hashbrown::scopeguard::ScopeGuard&lt;&amp;mut hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;,hashbrown::raw::RawTable&lt;(alloc::string::String,())&gt;::clear::{{closure}}&gt;&gt; (28 samples, 0.01%)</title><rect x="50.1892%" y="453" width="0.0110%" height="15" fill="rgb(240,103,49)" fg:x="127459" fg:w="28"/><text x="50.4392%" y="463.50"></text></g><g><title>&lt;hashbrown::scopeguard::ScopeGuard&lt;T,F&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="50.1892%" y="437" width="0.0110%" height="15" fill="rgb(250,182,30)" fg:x="127459" fg:w="28"/><text x="50.4392%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear::{{closure}} (28 samples, 0.01%)</title><rect x="50.1892%" y="421" width="0.0110%" height="15" fill="rgb(248,8,30)" fg:x="127459" fg:w="28"/><text x="50.4392%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear_no_drop (28 samples, 0.01%)</title><rect x="50.1892%" y="405" width="0.0110%" height="15" fill="rgb(237,120,30)" fg:x="127459" fg:w="28"/><text x="50.4392%" y="415.50"></text></g><g><title>hashbrown::raw::RawTableInner&lt;A&gt;::clear_no_drop (28 samples, 0.01%)</title><rect x="50.1892%" y="389" width="0.0110%" height="15" fill="rgb(221,146,34)" fg:x="127459" fg:w="28"/><text x="50.4392%" y="399.50"></text></g><g><title>bevy_render::shader::shader_defs::clear_shader_defs_system (350 samples, 0.14%)</title><rect x="50.1455%" y="533" width="0.1378%" height="15" fill="rgb(242,55,13)" fg:x="127348" fg:w="350"/><text x="50.3955%" y="543.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::clear (239 samples, 0.09%)</title><rect x="50.1892%" y="517" width="0.0941%" height="15" fill="rgb(242,112,31)" fg:x="127459" fg:w="239"/><text x="50.4392%" y="527.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::clear (239 samples, 0.09%)</title><rect x="50.1892%" y="501" width="0.0941%" height="15" fill="rgb(249,192,27)" fg:x="127459" fg:w="239"/><text x="50.4392%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (239 samples, 0.09%)</title><rect x="50.1892%" y="485" width="0.0941%" height="15" fill="rgb(208,204,44)" fg:x="127459" fg:w="239"/><text x="50.4392%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (239 samples, 0.09%)</title><rect x="50.1892%" y="469" width="0.0941%" height="15" fill="rgb(208,93,54)" fg:x="127459" fg:w="239"/><text x="50.4392%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (211 samples, 0.08%)</title><rect x="50.2002%" y="453" width="0.0831%" height="15" fill="rgb(242,1,31)" fg:x="127487" fg:w="211"/><text x="50.4502%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,),()&gt;&gt;::run (814 samples, 0.32%)</title><rect x="49.9931%" y="581" width="0.3205%" height="15" fill="rgb(241,83,25)" fg:x="126961" fg:w="814"/><text x="50.2431%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (813 samples, 0.32%)</title><rect x="49.9935%" y="565" width="0.3201%" height="15" fill="rgb(205,169,50)" fg:x="126962" fg:w="813"/><text x="50.2435%" y="575.50"></text></g><g><title>core::ops::function::Fn::call (801 samples, 0.32%)</title><rect x="49.9982%" y="549" width="0.3154%" height="15" fill="rgb(239,186,37)" fg:x="126974" fg:w="801"/><text x="50.2482%" y="559.50"></text></g><g><title>engine::engine::render::animate_sprite_system (55 samples, 0.02%)</title><rect x="50.2920%" y="533" width="0.0217%" height="15" fill="rgb(205,221,10)" fg:x="127720" fg:w="55"/><text x="50.5420%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1),()&gt;&gt;::run (30 samples, 0.01%)</title><rect x="50.3136%" y="581" width="0.0118%" height="15" fill="rgb(218,196,15)" fg:x="127775" fg:w="30"/><text x="50.5636%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (26 samples, 0.01%)</title><rect x="50.3152%" y="565" width="0.0102%" height="15" fill="rgb(218,196,35)" fg:x="127779" fg:w="26"/><text x="50.5652%" y="575.50"></text></g><g><title>core::ops::function::Fn::call (26 samples, 0.01%)</title><rect x="50.3152%" y="549" width="0.0102%" height="15" fill="rgb(233,63,24)" fg:x="127779" fg:w="26"/><text x="50.5652%" y="559.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (59 samples, 0.02%)</title><rect x="50.3254%" y="581" width="0.0232%" height="15" fill="rgb(225,8,4)" fg:x="127805" fg:w="59"/><text x="50.5754%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (55 samples, 0.02%)</title><rect x="50.3270%" y="565" width="0.0217%" height="15" fill="rgb(234,105,35)" fg:x="127809" fg:w="55"/><text x="50.5770%" y="575.50"></text></g><g><title>core::ops::function::Fn::call (55 samples, 0.02%)</title><rect x="50.3270%" y="549" width="0.0217%" height="15" fill="rgb(236,21,32)" fg:x="127809" fg:w="55"/><text x="50.5770%" y="559.50"></text></g><g><title>engine::engine::actor::pathfinding::plan_path (47 samples, 0.02%)</title><rect x="50.3302%" y="533" width="0.0185%" height="15" fill="rgb(228,109,6)" fg:x="127817" fg:w="47"/><text x="50.5802%" y="543.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path (39 samples, 0.02%)</title><rect x="50.3333%" y="517" width="0.0154%" height="15" fill="rgb(229,215,31)" fg:x="127825" fg:w="39"/><text x="50.5833%" y="527.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (67 samples, 0.03%)</title><rect x="50.3629%" y="517" width="0.0264%" height="15" fill="rgb(221,52,54)" fg:x="127900" fg:w="67"/><text x="50.6129%" y="527.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (66 samples, 0.03%)</title><rect x="50.3633%" y="501" width="0.0260%" height="15" fill="rgb(252,129,43)" fg:x="127901" fg:w="66"/><text x="50.6133%" y="511.50"></text></g><g><title>bevy_transform::transform_propagate_system::transform_propagate_system (91 samples, 0.04%)</title><rect x="50.3550%" y="533" width="0.0358%" height="15" fill="rgb(248,183,27)" fg:x="127880" fg:w="91"/><text x="50.6050%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (108 samples, 0.04%)</title><rect x="50.3487%" y="581" width="0.0425%" height="15" fill="rgb(250,0,22)" fg:x="127864" fg:w="108"/><text x="50.5987%" y="591.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (105 samples, 0.04%)</title><rect x="50.3499%" y="565" width="0.0413%" height="15" fill="rgb(213,166,10)" fg:x="127867" fg:w="105"/><text x="50.5999%" y="575.50"></text></g><g><title>core::ops::function::Fn::call (105 samples, 0.04%)</title><rect x="50.3499%" y="549" width="0.0413%" height="15" fill="rgb(207,163,36)" fg:x="127867" fg:w="105"/><text x="50.5999%" y="559.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (1,033 samples, 0.41%)</title><rect x="49.9907%" y="597" width="0.4068%" height="15" fill="rgb(208,122,22)" fg:x="126955" fg:w="1033"/><text x="50.2407%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,344 samples, 0.53%)</title><rect x="49.8758%" y="629" width="0.5292%" height="15" fill="rgb(207,104,49)" fg:x="126663" fg:w="1344"/><text x="50.1258%" y="639.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (1,175 samples, 0.46%)</title><rect x="49.9423%" y="613" width="0.4627%" height="15" fill="rgb(248,211,50)" fg:x="126832" fg:w="1175"/><text x="50.1923%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (1,367 samples, 0.54%)</title><rect x="49.8726%" y="661" width="0.5383%" height="15" fill="rgb(217,13,45)" fg:x="126655" fg:w="1367"/><text x="50.1226%" y="671.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (1,366 samples, 0.54%)</title><rect x="49.8730%" y="645" width="0.5379%" height="15" fill="rgb(211,216,49)" fg:x="126656" fg:w="1366"/><text x="50.1230%" y="655.50"></text></g><g><title>async_task::runnable::Runnable::run (1,399 samples, 0.55%)</title><rect x="49.8703%" y="693" width="0.5509%" height="15" fill="rgb(221,58,53)" fg:x="126649" fg:w="1399"/><text x="50.1203%" y="703.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (1,399 samples, 0.55%)</title><rect x="49.8703%" y="677" width="0.5509%" height="15" fill="rgb(220,112,41)" fg:x="126649" fg:w="1399"/><text x="50.1203%" y="687.50"></text></g><g><title>concurrent_queue::full_fence (9,422 samples, 3.71%)</title><rect x="51.3678%" y="661" width="3.7101%" height="15" fill="rgb(236,38,28)" fg:x="130452" fg:w="9422"/><text x="51.6178%" y="671.50">conc..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (8,994 samples, 3.54%)</title><rect x="51.5363%" y="645" width="3.5415%" height="15" fill="rgb(227,195,22)" fg:x="130880" fg:w="8994"/><text x="51.7863%" y="655.50">core..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (8,994 samples, 3.54%)</title><rect x="51.5363%" y="629" width="3.5415%" height="15" fill="rgb(214,55,33)" fg:x="130880" fg:w="8994"/><text x="51.7863%" y="639.50">core..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (8,994 samples, 3.54%)</title><rect x="51.5363%" y="613" width="3.5415%" height="15" fill="rgb(248,80,13)" fg:x="130880" fg:w="8994"/><text x="51.7863%" y="623.50">core..</text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (471 samples, 0.19%)</title><rect x="55.0790%" y="661" width="0.1855%" height="15" fill="rgb(238,52,6)" fg:x="139877" fg:w="471"/><text x="55.3290%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (471 samples, 0.19%)</title><rect x="55.0790%" y="645" width="0.1855%" height="15" fill="rgb(224,198,47)" fg:x="139877" fg:w="471"/><text x="55.3290%" y="655.50"></text></g><g><title>async_executor::Executor::try_tick (15,635 samples, 6.16%)</title><rect x="49.3190%" y="709" width="6.1566%" height="15" fill="rgb(233,171,20)" fg:x="125249" fg:w="15635"/><text x="49.5690%" y="719.50">async_ex..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (12,836 samples, 5.05%)</title><rect x="50.4211%" y="693" width="5.0544%" height="15" fill="rgb(241,30,25)" fg:x="128048" fg:w="12836"/><text x="50.6711%" y="703.50">concur..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (11,890 samples, 4.68%)</title><rect x="50.7936%" y="677" width="4.6819%" height="15" fill="rgb(207,171,38)" fg:x="128994" fg:w="11890"/><text x="51.0436%" y="687.50">concu..</text></g><g><title>core::sync::atomic::AtomicUsize::load (521 samples, 0.21%)</title><rect x="55.2704%" y="661" width="0.2052%" height="15" fill="rgb(234,70,1)" fg:x="140363" fg:w="521"/><text x="55.5204%" y="671.50"></text></g><g><title>core::sync::atomic::atomic_load (521 samples, 0.21%)</title><rect x="55.2704%" y="645" width="0.2052%" height="15" fill="rgb(232,178,18)" fg:x="140363" fg:w="521"/><text x="55.5204%" y="655.50"></text></g><g><title>once_cell::imp::OnceCell&lt;T&gt;::get_unchecked (472 samples, 0.19%)</title><rect x="55.4834%" y="629" width="0.1859%" height="15" fill="rgb(241,78,40)" fg:x="140904" fg:w="472"/><text x="55.7334%" y="639.50"></text></g><g><title>async_executor::Executor::state (474 samples, 0.19%)</title><rect x="55.4834%" y="677" width="0.1866%" height="15" fill="rgb(222,35,25)" fg:x="140904" fg:w="474"/><text x="55.7334%" y="687.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_init (474 samples, 0.19%)</title><rect x="55.4834%" y="661" width="0.1866%" height="15" fill="rgb(207,92,16)" fg:x="140904" fg:w="474"/><text x="55.7334%" y="671.50"></text></g><g><title>once_cell::sync::OnceCell&lt;T&gt;::get_or_try_init (474 samples, 0.19%)</title><rect x="55.4834%" y="645" width="0.1866%" height="15" fill="rgb(216,59,51)" fg:x="140904" fg:w="474"/><text x="55.7334%" y="655.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (438 samples, 0.17%)</title><rect x="55.6701%" y="677" width="0.1725%" height="15" fill="rgb(213,80,28)" fg:x="141378" fg:w="438"/><text x="55.9201%" y="687.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (27 samples, 0.01%)</title><rect x="55.8449%" y="565" width="0.0106%" height="15" fill="rgb(220,93,7)" fg:x="141822" fg:w="27"/><text x="56.0949%" y="575.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (26 samples, 0.01%)</title><rect x="55.8453%" y="549" width="0.0102%" height="15" fill="rgb(225,24,44)" fg:x="141823" fg:w="26"/><text x="56.0953%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (61 samples, 0.02%)</title><rect x="55.8441%" y="597" width="0.0240%" height="15" fill="rgb(243,74,40)" fg:x="141820" fg:w="61"/><text x="56.0941%" y="607.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}}::{{closure}} (61 samples, 0.02%)</title><rect x="55.8441%" y="581" width="0.0240%" height="15" fill="rgb(228,39,7)" fg:x="141820" fg:w="61"/><text x="56.0941%" y="591.50"></text></g><g><title>core::ptr::drop_in_place&lt;async_task::task::Task&lt;()&gt;&gt; (27 samples, 0.01%)</title><rect x="55.8575%" y="565" width="0.0106%" height="15" fill="rgb(227,79,8)" fg:x="141854" fg:w="27"/><text x="56.1075%" y="575.50"></text></g><g><title>&lt;core::pin::Pin&lt;P&gt; as core::future::future::Future&gt;::poll (62 samples, 0.02%)</title><rect x="55.8441%" y="613" width="0.0244%" height="15" fill="rgb(236,58,11)" fg:x="141820" fg:w="62"/><text x="56.0941%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (68 samples, 0.03%)</title><rect x="55.8441%" y="645" width="0.0268%" height="15" fill="rgb(249,63,35)" fg:x="141820" fg:w="68"/><text x="56.0941%" y="655.50"></text></g><g><title>async_executor::LocalExecutor::spawn::{{closure}} (68 samples, 0.03%)</title><rect x="55.8441%" y="629" width="0.0268%" height="15" fill="rgb(252,114,16)" fg:x="141820" fg:w="68"/><text x="56.0941%" y="639.50"></text></g><g><title>async_task::runnable::Runnable::run (81 samples, 0.03%)</title><rect x="55.8433%" y="677" width="0.0319%" height="15" fill="rgb(254,151,24)" fg:x="141818" fg:w="81"/><text x="56.0933%" y="687.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (81 samples, 0.03%)</title><rect x="55.8433%" y="661" width="0.0319%" height="15" fill="rgb(253,54,39)" fg:x="141818" fg:w="81"/><text x="56.0933%" y="671.50"></text></g><g><title>concurrent_queue::full_fence (10,724 samples, 4.22%)</title><rect x="56.8498%" y="645" width="4.2228%" height="15" fill="rgb(243,25,45)" fg:x="144374" fg:w="10724"/><text x="57.0998%" y="655.50">concu..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (10,236 samples, 4.03%)</title><rect x="57.0419%" y="629" width="4.0306%" height="15" fill="rgb(234,134,9)" fg:x="144862" fg:w="10236"/><text x="57.2919%" y="639.50">core..</text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (10,236 samples, 4.03%)</title><rect x="57.0419%" y="613" width="4.0306%" height="15" fill="rgb(227,166,31)" fg:x="144862" fg:w="10236"/><text x="57.2919%" y="623.50">core..</text></g><g><title>core::sync::atomic::atomic_compare_exchange (10,236 samples, 4.03%)</title><rect x="57.0419%" y="597" width="4.0306%" height="15" fill="rgb(245,143,41)" fg:x="144862" fg:w="10236"/><text x="57.2919%" y="607.50">core..</text></g><g><title>core::sync::atomic::AtomicPtr&lt;T&gt;::load (491 samples, 0.19%)</title><rect x="61.0741%" y="645" width="0.1933%" height="15" fill="rgb(238,181,32)" fg:x="155102" fg:w="491"/><text x="61.3241%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (491 samples, 0.19%)</title><rect x="61.0741%" y="629" width="0.1933%" height="15" fill="rgb(224,113,18)" fg:x="155102" fg:w="491"/><text x="61.3241%" y="639.50"></text></g><g><title>async_executor::Executor::try_tick (15,219 samples, 5.99%)</title><rect x="55.4810%" y="693" width="5.9927%" height="15" fill="rgb(240,229,28)" fg:x="140898" fg:w="15219"/><text x="55.7310%" y="703.50">async_ex..</text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (14,218 samples, 5.60%)</title><rect x="55.8752%" y="677" width="5.5986%" height="15" fill="rgb(250,185,3)" fg:x="141899" fg:w="14218"/><text x="56.1252%" y="687.50">concurr..</text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (13,715 samples, 5.40%)</title><rect x="56.0733%" y="661" width="5.4005%" height="15" fill="rgb(212,59,25)" fg:x="142402" fg:w="13715"/><text x="56.3233%" y="671.50">concurr..</text></g><g><title>core::sync::atomic::AtomicUsize::load (515 samples, 0.20%)</title><rect x="61.2710%" y="645" width="0.2028%" height="15" fill="rgb(221,87,20)" fg:x="155602" fg:w="515"/><text x="61.5210%" y="655.50"></text></g><g><title>core::sync::atomic::atomic_load (515 samples, 0.20%)</title><rect x="61.2710%" y="629" width="0.2028%" height="15" fill="rgb(213,74,28)" fg:x="155602" fg:w="515"/><text x="61.5210%" y="639.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (15,687 samples, 6.18%)</title><rect x="55.4803%" y="709" width="6.1770%" height="15" fill="rgb(224,132,34)" fg:x="140896" fg:w="15687"/><text x="55.7303%" y="719.50">async_ex..</text></g><g><title>async_executor::LocalExecutor::inner (466 samples, 0.18%)</title><rect x="61.4738%" y="693" width="0.1835%" height="15" fill="rgb(222,101,24)" fg:x="156117" fg:w="466"/><text x="61.7238%" y="703.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_init (466 samples, 0.18%)</title><rect x="61.4738%" y="677" width="0.1835%" height="15" fill="rgb(254,142,4)" fg:x="156117" fg:w="466"/><text x="61.7238%" y="687.50"></text></g><g><title>once_cell::unsync::OnceCell&lt;T&gt;::get_or_try_init (466 samples, 0.18%)</title><rect x="61.4738%" y="661" width="0.1835%" height="15" fill="rgb(230,229,49)" fg:x="156117" fg:w="466"/><text x="61.7238%" y="671.50"></text></g><g><title>futures_lite::future::block_on::CACHE::__getit (479 samples, 0.19%)</title><rect x="62.5622%" y="661" width="0.1886%" height="15" fill="rgb(238,70,47)" fg:x="158881" fg:w="479"/><text x="62.8122%" y="671.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (10,006 samples, 3.94%)</title><rect x="65.4312%" y="501" width="3.9400%" height="15" fill="rgb(231,160,17)" fg:x="166167" fg:w="10006"/><text x="65.6812%" y="511.50">&lt;cor..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (10,006 samples, 3.94%)</title><rect x="65.4312%" y="485" width="3.9400%" height="15" fill="rgb(218,68,53)" fg:x="166167" fg:w="10006"/><text x="65.6812%" y="495.50">&lt;all..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (9,963 samples, 3.92%)</title><rect x="65.4481%" y="469" width="3.9231%" height="15" fill="rgb(236,111,10)" fg:x="166210" fg:w="9963"/><text x="65.6981%" y="479.50">core..</text></g><g><title>core::sync::atomic::atomic_add (9,963 samples, 3.92%)</title><rect x="65.4481%" y="453" width="3.9231%" height="15" fill="rgb(224,34,41)" fg:x="166210" fg:w="9963"/><text x="65.6981%" y="463.50">core..</text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (11,031 samples, 4.34%)</title><rect x="65.0283%" y="533" width="4.3436%" height="15" fill="rgb(241,118,19)" fg:x="165144" fg:w="11031"/><text x="65.2783%" y="543.50">&lt;core..</text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (10,468 samples, 4.12%)</title><rect x="65.2500%" y="517" width="4.1220%" height="15" fill="rgb(238,129,25)" fg:x="165707" fg:w="10468"/><text x="65.5000%" y="527.50">wake..</text></g><g><title>alloc::sync::Arc&lt;T&gt;::from_raw (483 samples, 0.19%)</title><rect x="69.5527%" y="469" width="0.1902%" height="15" fill="rgb(238,22,31)" fg:x="176634" fg:w="483"/><text x="69.8027%" y="479.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (483 samples, 0.19%)</title><rect x="69.5527%" y="453" width="0.1902%" height="15" fill="rgb(222,174,48)" fg:x="176634" fg:w="483"/><text x="69.8027%" y="463.50"></text></g><g><title>async_task::utils::abort_on_panic (22,912 samples, 9.02%)</title><rect x="65.0272%" y="565" width="9.0220%" height="15" fill="rgb(206,152,40)" fg:x="165141" fg:w="22912"/><text x="65.2772%" y="575.50">async_task::u..</text></g><g><title>async_task::header::Header::register::{{closure}} (22,910 samples, 9.02%)</title><rect x="65.0279%" y="549" width="9.0212%" height="15" fill="rgb(218,99,54)" fg:x="165143" fg:w="22910"/><text x="65.2779%" y="559.50">async_task::h..</text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (11,878 samples, 4.68%)</title><rect x="69.3720%" y="533" width="4.6772%" height="15" fill="rgb(220,174,26)" fg:x="176175" fg:w="11878"/><text x="69.6220%" y="543.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (11,419 samples, 4.50%)</title><rect x="69.5527%" y="517" width="4.4964%" height="15" fill="rgb(245,116,9)" fg:x="176634" fg:w="11419"/><text x="69.8027%" y="527.50">core:..</text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (11,419 samples, 4.50%)</title><rect x="69.5527%" y="501" width="4.4964%" height="15" fill="rgb(209,72,35)" fg:x="176634" fg:w="11419"/><text x="69.8027%" y="511.50">&lt;core..</text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (11,419 samples, 4.50%)</title><rect x="69.5527%" y="485" width="4.4964%" height="15" fill="rgb(226,126,21)" fg:x="176634" fg:w="11419"/><text x="69.8027%" y="495.50">waker..</text></g><g><title>core::mem::drop (10,936 samples, 4.31%)</title><rect x="69.7429%" y="469" width="4.3062%" height="15" fill="rgb(227,192,1)" fg:x="177117" fg:w="10936"/><text x="69.9929%" y="479.50">core:..</text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (10,936 samples, 4.31%)</title><rect x="69.7429%" y="453" width="4.3062%" height="15" fill="rgb(237,180,29)" fg:x="177117" fg:w="10936"/><text x="69.9929%" y="463.50">core:..</text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (10,936 samples, 4.31%)</title><rect x="69.7429%" y="437" width="4.3062%" height="15" fill="rgb(230,197,35)" fg:x="177117" fg:w="10936"/><text x="69.9929%" y="447.50">&lt;allo..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (10,901 samples, 4.29%)</title><rect x="69.7567%" y="421" width="4.2925%" height="15" fill="rgb(246,193,31)" fg:x="177152" fg:w="10901"/><text x="70.0067%" y="431.50">core:..</text></g><g><title>core::sync::atomic::atomic_sub (10,901 samples, 4.29%)</title><rect x="69.7567%" y="405" width="4.2925%" height="15" fill="rgb(241,36,4)" fg:x="177152" fg:w="10901"/><text x="70.0067%" y="415.50">core:..</text></g><g><title>core::option::Option&lt;T&gt;::is_none (473 samples, 0.19%)</title><rect x="74.0492%" y="565" width="0.1863%" height="15" fill="rgb(241,130,17)" fg:x="188053" fg:w="473"/><text x="74.2992%" y="575.50"></text></g><g><title>core::option::Option&lt;T&gt;::is_some (473 samples, 0.19%)</title><rect x="74.0492%" y="549" width="0.1863%" height="15" fill="rgb(206,137,32)" fg:x="188053" fg:w="473"/><text x="74.2992%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (20,015 samples, 7.88%)</title><rect x="74.2354%" y="565" width="7.8813%" height="15" fill="rgb(237,228,51)" fg:x="188526" fg:w="20015"/><text x="74.4854%" y="575.50">core::sync:..</text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (20,015 samples, 7.88%)</title><rect x="74.2354%" y="549" width="7.8813%" height="15" fill="rgb(243,6,42)" fg:x="188526" fg:w="20015"/><text x="74.4854%" y="559.50">core::sync:..</text></g><g><title>async_task::header::Header::register (45,962 samples, 18.10%)</title><rect x="64.0313%" y="581" width="18.0983%" height="15" fill="rgb(251,74,28)" fg:x="162612" fg:w="45962"/><text x="64.2813%" y="591.50">async_task::header::Header::..</text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (33 samples, 0.01%)</title><rect x="82.1167%" y="565" width="0.0130%" height="15" fill="rgb(218,20,49)" fg:x="208541" fg:w="33"/><text x="82.3667%" y="575.50"></text></g><g><title>core::sync::atomic::atomic_or (33 samples, 0.01%)</title><rect x="82.1167%" y="549" width="0.0130%" height="15" fill="rgb(238,28,14)" fg:x="208541" fg:w="33"/><text x="82.3667%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (4,993 samples, 1.97%)</title><rect x="82.1297%" y="581" width="1.9661%" height="15" fill="rgb(229,40,46)" fg:x="208574" fg:w="4993"/><text x="82.3797%" y="591.50">c..</text></g><g><title>core::sync::atomic::atomic_load (4,993 samples, 1.97%)</title><rect x="82.1297%" y="565" width="1.9661%" height="15" fill="rgb(244,195,20)" fg:x="208574" fg:w="4993"/><text x="82.3797%" y="575.50">c..</text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (54,195 samples, 21.34%)</title><rect x="62.7567%" y="629" width="21.3402%" height="15" fill="rgb(253,56,35)" fg:x="159375" fg:w="54195"/><text x="63.0067%" y="639.50">&lt;&amp;mut F as core::future::future::F..</text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (54,186 samples, 21.34%)</title><rect x="62.7602%" y="613" width="21.3367%" height="15" fill="rgb(210,149,44)" fg:x="159384" fg:w="54186"/><text x="63.0102%" y="623.50">&lt;async_task::task::Task&lt;T&gt; as core..</text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (53,751 samples, 21.17%)</title><rect x="62.9315%" y="597" width="21.1654%" height="15" fill="rgb(240,135,12)" fg:x="159819" fg:w="53751"/><text x="63.1815%" y="607.50">async_task::task::Task&lt;T&gt;::poll_t..</text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (54,202 samples, 21.34%)</title><rect x="62.7567%" y="645" width="21.3430%" height="15" fill="rgb(251,24,50)" fg:x="159375" fg:w="54202"/><text x="63.0067%" y="655.50">&lt;futures_lite::future::PollOnce&lt;F&gt;..</text></g><g><title>core::cell::RefCell&lt;T&gt;::try_borrow_mut (528 samples, 0.21%)</title><rect x="84.0997%" y="645" width="0.2079%" height="15" fill="rgb(243,200,47)" fg:x="213577" fg:w="528"/><text x="84.3497%" y="655.50"></text></g><g><title>core::cell::BorrowRefMut::new (528 samples, 0.21%)</title><rect x="84.0997%" y="629" width="0.2079%" height="15" fill="rgb(224,166,26)" fg:x="213577" fg:w="528"/><text x="84.3497%" y="639.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (493 samples, 0.19%)</title><rect x="84.1135%" y="613" width="0.1941%" height="15" fill="rgb(233,0,47)" fg:x="213612" fg:w="493"/><text x="84.3635%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (493 samples, 0.19%)</title><rect x="84.1135%" y="597" width="0.1941%" height="15" fill="rgb(253,80,5)" fg:x="213612" fg:w="493"/><text x="84.3635%" y="607.50"></text></g><g><title>core::mem::replace (493 samples, 0.19%)</title><rect x="84.1135%" y="581" width="0.1941%" height="15" fill="rgb(214,133,25)" fg:x="213612" fg:w="493"/><text x="84.3635%" y="591.50"></text></g><g><title>core::ptr::write (493 samples, 0.19%)</title><rect x="84.1135%" y="565" width="0.1941%" height="15" fill="rgb(209,27,14)" fg:x="213612" fg:w="493"/><text x="84.3635%" y="575.50"></text></g><g><title>core::pin::Pin&lt;P&gt;::as_mut (448 samples, 0.18%)</title><rect x="84.3076%" y="645" width="0.1764%" height="15" fill="rgb(219,102,51)" fg:x="214105" fg:w="448"/><text x="84.5576%" y="655.50"></text></g><g><title>&lt;&amp;mut T as core::ops::deref::DerefMut&gt;::deref_mut (448 samples, 0.18%)</title><rect x="84.3076%" y="629" width="0.1764%" height="15" fill="rgb(237,18,16)" fg:x="214105" fg:w="448"/><text x="84.5576%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::RefMut&lt;(parking::Parker,core::task::wake::Waker)&gt;&gt; (507 samples, 0.20%)</title><rect x="84.4840%" y="645" width="0.1996%" height="15" fill="rgb(241,85,17)" fg:x="214553" fg:w="507"/><text x="84.7340%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::cell::BorrowRefMut&gt; (507 samples, 0.20%)</title><rect x="84.4840%" y="629" width="0.1996%" height="15" fill="rgb(236,90,42)" fg:x="214553" fg:w="507"/><text x="84.7340%" y="639.50"></text></g><g><title>&lt;core::cell::BorrowRefMut as core::ops::drop::Drop&gt;::drop (507 samples, 0.20%)</title><rect x="84.4840%" y="613" width="0.1996%" height="15" fill="rgb(249,57,21)" fg:x="214553" fg:w="507"/><text x="84.7340%" y="623.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::set (507 samples, 0.20%)</title><rect x="84.4840%" y="597" width="0.1996%" height="15" fill="rgb(243,12,36)" fg:x="214553" fg:w="507"/><text x="84.7340%" y="607.50"></text></g><g><title>core::cell::Cell&lt;T&gt;::replace (507 samples, 0.20%)</title><rect x="84.4840%" y="581" width="0.1996%" height="15" fill="rgb(253,128,47)" fg:x="214553" fg:w="507"/><text x="84.7340%" y="591.50"></text></g><g><title>core::mem::replace (507 samples, 0.20%)</title><rect x="84.4840%" y="565" width="0.1996%" height="15" fill="rgb(207,33,20)" fg:x="214553" fg:w="507"/><text x="84.7340%" y="575.50"></text></g><g><title>core::ptr::write (507 samples, 0.20%)</title><rect x="84.4840%" y="549" width="0.1996%" height="15" fill="rgb(233,215,35)" fg:x="214553" fg:w="507"/><text x="84.7340%" y="559.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (55,715 samples, 21.94%)</title><rect x="62.7508%" y="661" width="21.9388%" height="15" fill="rgb(249,188,52)" fg:x="159360" fg:w="55715"/><text x="63.0008%" y="671.50">futures_lite::future::block_on::{{c..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (91,864 samples, 36.17%)</title><rect x="48.6823%" y="789" width="36.1731%" height="15" fill="rgb(225,12,32)" fg:x="123632" fg:w="91864"/><text x="48.9323%" y="799.50">&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (91,864 samples, 36.17%)</title><rect x="48.6823%" y="773" width="36.1731%" height="15" fill="rgb(247,98,14)" fg:x="123632" fg:w="91864"/><text x="48.9323%" y="783.50">bevy_tasks::task_pool::TaskPool::scope</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (91,864 samples, 36.17%)</title><rect x="48.6823%" y="757" width="36.1731%" height="15" fill="rgb(247,219,48)" fg:x="123632" fg:w="91864"/><text x="48.9323%" y="767.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (91,864 samples, 36.17%)</title><rect x="48.6823%" y="741" width="36.1731%" height="15" fill="rgb(253,60,48)" fg:x="123632" fg:w="91864"/><text x="48.9323%" y="751.50">std::thread::local::LocalKey&lt;T&gt;::try_with</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (91,864 samples, 36.17%)</title><rect x="48.6823%" y="725" width="36.1731%" height="15" fill="rgb(245,15,52)" fg:x="123632" fg:w="91864"/><text x="48.9323%" y="735.50">bevy_tasks::task_pool::TaskPool::scope::{{closure}}</text></g><g><title>futures_lite::future::block_on (58,909 samples, 23.20%)</title><rect x="61.6589%" y="709" width="23.1964%" height="15" fill="rgb(220,133,28)" fg:x="156587" fg:w="58909"/><text x="61.9089%" y="719.50">futures_lite::future::block_on</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (58,052 samples, 22.86%)</title><rect x="61.9963%" y="693" width="22.8590%" height="15" fill="rgb(217,180,4)" fg:x="157444" fg:w="58052"/><text x="62.2463%" y="703.50">std::thread::local::LocalKey&lt;T&gt;::with</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (57,125 samples, 22.49%)</title><rect x="62.3613%" y="677" width="22.4940%" height="15" fill="rgb(251,24,1)" fg:x="158371" fg:w="57125"/><text x="62.6113%" y="687.50">std::thread::local::LocalKey&lt;T&gt;::try..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (421 samples, 0.17%)</title><rect x="84.6895%" y="661" width="0.1658%" height="15" fill="rgb(212,185,49)" fg:x="215075" fg:w="421"/><text x="84.9395%" y="671.50"></text></g><g><title>bevy_ecs::archetype::Archetype::swap_remove (36 samples, 0.01%)</title><rect x="84.8758%" y="709" width="0.0142%" height="15" fill="rgb(215,175,22)" fg:x="215548" fg:w="36"/><text x="85.1258%" y="719.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (34 samples, 0.01%)</title><rect x="84.8766%" y="693" width="0.0134%" height="15" fill="rgb(250,205,14)" fg:x="215550" fg:w="34"/><text x="85.1266%" y="703.50"></text></g><g><title>bevy_ecs::storage::table::Column::set_unchecked (40 samples, 0.02%)</title><rect x="84.9026%" y="661" width="0.0158%" height="15" fill="rgb(225,211,22)" fg:x="215616" fg:w="40"/><text x="85.1526%" y="671.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::set_unchecked (40 samples, 0.02%)</title><rect x="84.9026%" y="645" width="0.0158%" height="15" fill="rgb(251,179,42)" fg:x="215616" fg:w="40"/><text x="85.1526%" y="655.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (31 samples, 0.01%)</title><rect x="84.9061%" y="629" width="0.0122%" height="15" fill="rgb(208,216,51)" fg:x="215625" fg:w="31"/><text x="85.1561%" y="639.50"></text></g><g><title>__memmove_avx_unaligned_erms (31 samples, 0.01%)</title><rect x="84.9061%" y="613" width="0.0122%" height="15" fill="rgb(235,36,11)" fg:x="215625" fg:w="31"/><text x="85.1561%" y="623.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components (79 samples, 0.03%)</title><rect x="84.8931%" y="709" width="0.0311%" height="15" fill="rgb(213,189,28)" fg:x="215592" fg:w="79"/><text x="85.1431%" y="719.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::get_components (72 samples, 0.03%)</title><rect x="84.8959%" y="693" width="0.0284%" height="15" fill="rgb(227,203,42)" fg:x="215599" fg:w="72"/><text x="85.1459%" y="703.50"></text></g><g><title>bevy_ecs::bundle::BundleInfo::write_components::{{closure}} (65 samples, 0.03%)</title><rect x="84.8986%" y="677" width="0.0256%" height="15" fill="rgb(244,72,36)" fg:x="215606" fg:w="65"/><text x="85.1486%" y="687.50"></text></g><g><title>hashbrown::map::make_insert_hash (29 samples, 0.01%)</title><rect x="84.9278%" y="661" width="0.0114%" height="15" fill="rgb(213,53,17)" fg:x="215680" fg:w="29"/><text x="85.1778%" y="671.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (49 samples, 0.02%)</title><rect x="84.9258%" y="677" width="0.0193%" height="15" fill="rgb(207,167,3)" fg:x="215675" fg:w="49"/><text x="85.1758%" y="687.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (54 samples, 0.02%)</title><rect x="84.9242%" y="709" width="0.0213%" height="15" fill="rgb(216,98,30)" fg:x="215671" fg:w="54"/><text x="85.1742%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (51 samples, 0.02%)</title><rect x="84.9254%" y="693" width="0.0201%" height="15" fill="rgb(236,123,15)" fg:x="215674" fg:w="51"/><text x="85.1754%" y="703.50"></text></g><g><title>bevy_ecs::storage::table::Column::set_unchecked (268 samples, 0.11%)</title><rect x="84.9727%" y="693" width="0.1055%" height="15" fill="rgb(248,81,50)" fg:x="215794" fg:w="268"/><text x="85.2227%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::set_unchecked (268 samples, 0.11%)</title><rect x="84.9727%" y="677" width="0.1055%" height="15" fill="rgb(214,120,4)" fg:x="215794" fg:w="268"/><text x="85.2227%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (244 samples, 0.10%)</title><rect x="84.9821%" y="661" width="0.0961%" height="15" fill="rgb(208,179,34)" fg:x="215818" fg:w="244"/><text x="85.2321%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (244 samples, 0.10%)</title><rect x="84.9821%" y="645" width="0.0961%" height="15" fill="rgb(227,140,7)" fg:x="215818" fg:w="244"/><text x="85.2321%" y="655.50"></text></g><g><title>core::ptr::read (128 samples, 0.05%)</title><rect x="85.0884%" y="661" width="0.0504%" height="15" fill="rgb(214,22,6)" fg:x="216088" fg:w="128"/><text x="85.3384%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (237 samples, 0.09%)</title><rect x="85.0782%" y="677" width="0.0933%" height="15" fill="rgb(207,137,27)" fg:x="216062" fg:w="237"/><text x="85.3282%" y="687.50"></text></g><g><title>core::ptr::replace (83 samples, 0.03%)</title><rect x="85.1388%" y="661" width="0.0327%" height="15" fill="rgb(210,8,46)" fg:x="216216" fg:w="83"/><text x="85.3888%" y="671.50"></text></g><g><title>core::mem::swap (83 samples, 0.03%)</title><rect x="85.1388%" y="645" width="0.0327%" height="15" fill="rgb(240,16,54)" fg:x="216216" fg:w="83"/><text x="85.3888%" y="655.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (83 samples, 0.03%)</title><rect x="85.1388%" y="629" width="0.0327%" height="15" fill="rgb(211,209,29)" fg:x="216216" fg:w="83"/><text x="85.3888%" y="639.50"></text></g><g><title>core::ptr::read (81 samples, 0.03%)</title><rect x="85.1396%" y="613" width="0.0319%" height="15" fill="rgb(226,228,24)" fg:x="216218" fg:w="81"/><text x="85.3896%" y="623.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (46 samples, 0.02%)</title><rect x="85.1798%" y="661" width="0.0181%" height="15" fill="rgb(222,84,9)" fg:x="216320" fg:w="46"/><text x="85.4298%" y="671.50"></text></g><g><title>core::intrinsics::copy (311 samples, 0.12%)</title><rect x="85.1979%" y="661" width="0.1225%" height="15" fill="rgb(234,203,30)" fg:x="216366" fg:w="311"/><text x="85.4479%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (298 samples, 0.12%)</title><rect x="85.2030%" y="645" width="0.1173%" height="15" fill="rgb(238,109,14)" fg:x="216379" fg:w="298"/><text x="85.4530%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (1,016 samples, 0.40%)</title><rect x="85.0782%" y="693" width="0.4001%" height="15" fill="rgb(233,206,34)" fg:x="216062" fg:w="1016"/><text x="85.3282%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (779 samples, 0.31%)</title><rect x="85.1715%" y="677" width="0.3067%" height="15" fill="rgb(220,167,47)" fg:x="216299" fg:w="779"/><text x="85.4215%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (401 samples, 0.16%)</title><rect x="85.3203%" y="661" width="0.1579%" height="15" fill="rgb(238,105,10)" fg:x="216677" fg:w="401"/><text x="85.5703%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (394 samples, 0.16%)</title><rect x="85.3231%" y="645" width="0.1551%" height="15" fill="rgb(213,227,17)" fg:x="216684" fg:w="394"/><text x="85.5731%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (73 samples, 0.03%)</title><rect x="85.4901%" y="677" width="0.0287%" height="15" fill="rgb(217,132,38)" fg:x="217108" fg:w="73"/><text x="85.7401%" y="687.50"></text></g><g><title>core::ptr::write (26 samples, 0.01%)</title><rect x="85.5086%" y="661" width="0.0102%" height="15" fill="rgb(242,146,4)" fg:x="217155" fg:w="26"/><text x="85.7586%" y="671.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (111 samples, 0.04%)</title><rect x="85.4783%" y="693" width="0.0437%" height="15" fill="rgb(212,61,9)" fg:x="217078" fg:w="111"/><text x="85.7283%" y="703.50"></text></g><g><title>bevy_ecs::storage::sparse_set::SparseSet&lt;I,V&gt;::get_mut (48 samples, 0.02%)</title><rect x="85.5220%" y="677" width="0.0189%" height="15" fill="rgb(247,126,22)" fg:x="217189" fg:w="48"/><text x="85.7720%" y="687.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_superset_unchecked (1,514 samples, 0.60%)</title><rect x="84.9459%" y="709" width="0.5962%" height="15" fill="rgb(220,196,2)" fg:x="215726" fg:w="1514"/><text x="85.1959%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column_mut (51 samples, 0.02%)</title><rect x="85.5220%" y="693" width="0.0201%" height="15" fill="rgb(208,46,4)" fg:x="217189" fg:w="51"/><text x="85.7720%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (1,761 samples, 0.69%)</title><rect x="84.8553%" y="757" width="0.6934%" height="15" fill="rgb(252,104,46)" fg:x="215496" fg:w="1761"/><text x="85.1053%" y="767.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert (1,761 samples, 0.69%)</title><rect x="84.8553%" y="741" width="0.6934%" height="15" fill="rgb(237,152,48)" fg:x="215496" fg:w="1761"/><text x="85.1053%" y="751.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::insert_bundle (1,758 samples, 0.69%)</title><rect x="84.8565%" y="725" width="0.6922%" height="15" fill="rgb(221,59,37)" fg:x="215499" fg:w="1758"/><text x="85.1065%" y="735.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (32 samples, 0.01%)</title><rect x="85.5558%" y="661" width="0.0126%" height="15" fill="rgb(209,202,51)" fg:x="217275" fg:w="32"/><text x="85.8058%" y="671.50"></text></g><g><title>&lt;(C0,) as bevy_ecs::bundle::Bundle&gt;::from_components (68 samples, 0.03%)</title><rect x="85.5487%" y="709" width="0.0268%" height="15" fill="rgb(228,81,30)" fg:x="217257" fg:w="68"/><text x="85.7987%" y="719.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove_bundle::{{closure}} (62 samples, 0.02%)</title><rect x="85.5511%" y="693" width="0.0244%" height="15" fill="rgb(227,42,39)" fg:x="217263" fg:w="62"/><text x="85.8011%" y="703.50"></text></g><g><title>bevy_ecs::world::entity_ref::remove_component (53 samples, 0.02%)</title><rect x="85.5546%" y="677" width="0.0209%" height="15" fill="rgb(221,26,2)" fg:x="217272" fg:w="53"/><text x="85.8046%" y="687.50"></text></g><g><title>hashbrown::map::make_insert_hash (34 samples, 0.01%)</title><rect x="85.5787%" y="661" width="0.0134%" height="15" fill="rgb(254,61,31)" fg:x="217333" fg:w="34"/><text x="85.8287%" y="671.50"></text></g><g><title>bevy_ecs::bundle::Bundles::init_info (59 samples, 0.02%)</title><rect x="85.5755%" y="709" width="0.0232%" height="15" fill="rgb(222,173,38)" fg:x="217325" fg:w="59"/><text x="85.8255%" y="719.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (58 samples, 0.02%)</title><rect x="85.5759%" y="693" width="0.0228%" height="15" fill="rgb(218,50,12)" fg:x="217326" fg:w="58"/><text x="85.8259%" y="703.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (56 samples, 0.02%)</title><rect x="85.5767%" y="677" width="0.0221%" height="15" fill="rgb(223,88,40)" fg:x="217328" fg:w="56"/><text x="85.8267%" y="687.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (29 samples, 0.01%)</title><rect x="85.6121%" y="661" width="0.0114%" height="15" fill="rgb(237,54,19)" fg:x="217418" fg:w="29"/><text x="85.8621%" y="671.50"></text></g><g><title>bevy_ecs::storage::table::Column::set_unchecked (242 samples, 0.10%)</title><rect x="85.6121%" y="693" width="0.0953%" height="15" fill="rgb(251,129,25)" fg:x="217418" fg:w="242"/><text x="85.8621%" y="703.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::set_unchecked (242 samples, 0.10%)</title><rect x="85.6121%" y="677" width="0.0953%" height="15" fill="rgb(238,97,19)" fg:x="217418" fg:w="242"/><text x="85.8621%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (206 samples, 0.08%)</title><rect x="85.6263%" y="661" width="0.0811%" height="15" fill="rgb(240,169,18)" fg:x="217454" fg:w="206"/><text x="85.8763%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (206 samples, 0.08%)</title><rect x="85.6263%" y="645" width="0.0811%" height="15" fill="rgb(230,187,49)" fg:x="217454" fg:w="206"/><text x="85.8763%" y="655.50"></text></g><g><title>core::ptr::read (80 samples, 0.03%)</title><rect x="85.7114%" y="661" width="0.0315%" height="15" fill="rgb(209,44,26)" fg:x="217670" fg:w="80"/><text x="85.9614%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::swap_remove (261 samples, 0.10%)</title><rect x="85.7074%" y="677" width="0.1028%" height="15" fill="rgb(244,0,6)" fg:x="217660" fg:w="261"/><text x="85.9574%" y="687.50"></text></g><g><title>core::ptr::replace (171 samples, 0.07%)</title><rect x="85.7429%" y="661" width="0.0673%" height="15" fill="rgb(248,18,21)" fg:x="217750" fg:w="171"/><text x="85.9929%" y="671.50"></text></g><g><title>core::mem::swap (171 samples, 0.07%)</title><rect x="85.7429%" y="645" width="0.0673%" height="15" fill="rgb(245,180,19)" fg:x="217750" fg:w="171"/><text x="85.9929%" y="655.50"></text></g><g><title>core::ptr::swap_nonoverlapping_one (171 samples, 0.07%)</title><rect x="85.7429%" y="629" width="0.0673%" height="15" fill="rgb(252,118,36)" fg:x="217750" fg:w="171"/><text x="85.9929%" y="639.50"></text></g><g><title>core::ptr::read (162 samples, 0.06%)</title><rect x="85.7464%" y="613" width="0.0638%" height="15" fill="rgb(210,224,19)" fg:x="217759" fg:w="162"/><text x="85.9964%" y="623.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::get_unchecked (37 samples, 0.01%)</title><rect x="85.8173%" y="661" width="0.0146%" height="15" fill="rgb(218,30,24)" fg:x="217939" fg:w="37"/><text x="86.0673%" y="671.50"></text></g><g><title>core::intrinsics::copy (294 samples, 0.12%)</title><rect x="85.8334%" y="661" width="0.1158%" height="15" fill="rgb(219,75,50)" fg:x="217980" fg:w="294"/><text x="86.0834%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (289 samples, 0.11%)</title><rect x="85.8354%" y="645" width="0.1138%" height="15" fill="rgb(234,72,50)" fg:x="217985" fg:w="289"/><text x="86.0854%" y="655.50"></text></g><g><title>bevy_ecs::storage::blob_vec::BlobVec::swap_remove_and_forget_unchecked (836 samples, 0.33%)</title><rect x="85.8102%" y="677" width="0.3292%" height="15" fill="rgb(219,100,48)" fg:x="217921" fg:w="836"/><text x="86.0602%" y="687.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (483 samples, 0.19%)</title><rect x="85.9492%" y="661" width="0.1902%" height="15" fill="rgb(253,5,41)" fg:x="218274" fg:w="483"/><text x="86.1992%" y="671.50"></text></g><g><title>__memmove_avx_unaligned_erms (463 samples, 0.18%)</title><rect x="85.9571%" y="645" width="0.1823%" height="15" fill="rgb(247,181,11)" fg:x="218294" fg:w="463"/><text x="86.2071%" y="655.50"></text></g><g><title>bevy_ecs::storage::table::Column::swap_remove_and_forget_unchecked (1,098 samples, 0.43%)</title><rect x="85.7074%" y="693" width="0.4324%" height="15" fill="rgb(222,223,25)" fg:x="217660" fg:w="1098"/><text x="85.9574%" y="703.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (80 samples, 0.03%)</title><rect x="86.1492%" y="677" width="0.0315%" height="15" fill="rgb(214,198,28)" fg:x="218782" fg:w="80"/><text x="86.3992%" y="687.50"></text></g><g><title>core::ptr::write (28 samples, 0.01%)</title><rect x="86.1697%" y="661" width="0.0110%" height="15" fill="rgb(230,46,43)" fg:x="218834" fg:w="28"/><text x="86.4197%" y="671.50"></text></g><g><title>bevy_ecs::storage::table::Table::allocate (107 samples, 0.04%)</title><rect x="86.1398%" y="693" width="0.0421%" height="15" fill="rgb(233,65,53)" fg:x="218758" fg:w="107"/><text x="86.3898%" y="703.50"></text></g><g><title>bevy_ecs::storage::table::Table::move_to_and_forget_missing_unchecked (1,510 samples, 0.59%)</title><rect x="85.5987%" y="709" width="0.5946%" height="15" fill="rgb(221,121,27)" fg:x="217384" fg:w="1510"/><text x="85.8487%" y="719.50"></text></g><g><title>bevy_ecs::storage::table::Table::get_column_mut (29 samples, 0.01%)</title><rect x="86.1819%" y="693" width="0.0114%" height="15" fill="rgb(247,70,47)" fg:x="218865" fg:w="29"/><text x="86.4319%" y="703.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (3,426 samples, 1.35%)</title><rect x="84.8553%" y="789" width="1.3490%" height="15" fill="rgb(228,85,35)" fg:x="215496" fg:w="3426"/><text x="85.1053%" y="799.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (3,426 samples, 1.35%)</title><rect x="84.8553%" y="773" width="1.3490%" height="15" fill="rgb(209,50,18)" fg:x="215496" fg:w="3426"/><text x="85.1053%" y="783.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Remove&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (1,665 samples, 0.66%)</title><rect x="85.5487%" y="757" width="0.6556%" height="15" fill="rgb(250,19,35)" fg:x="217257" fg:w="1665"/><text x="85.7987%" y="767.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove (1,665 samples, 0.66%)</title><rect x="85.5487%" y="741" width="0.6556%" height="15" fill="rgb(253,107,29)" fg:x="217257" fg:w="1665"/><text x="85.7987%" y="751.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove_bundle (1,665 samples, 0.66%)</title><rect x="85.5487%" y="725" width="0.6556%" height="15" fill="rgb(252,179,29)" fg:x="217257" fg:w="1665"/><text x="85.7987%" y="735.50"></text></g><g><title>bevy_ecs::world::entity_ref::remove_bundle_from_archetype (28 samples, 0.01%)</title><rect x="86.1933%" y="709" width="0.0110%" height="15" fill="rgb(238,194,6)" fg:x="218894" fg:w="28"/><text x="86.4433%" y="719.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (42 samples, 0.02%)</title><rect x="86.2071%" y="533" width="0.0165%" height="15" fill="rgb(238,164,29)" fg:x="218929" fg:w="42"/><text x="86.4571%" y="543.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (42 samples, 0.02%)</title><rect x="86.2071%" y="517" width="0.0165%" height="15" fill="rgb(224,25,9)" fg:x="218929" fg:w="42"/><text x="86.4571%" y="527.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (42 samples, 0.02%)</title><rect x="86.2071%" y="501" width="0.0165%" height="15" fill="rgb(244,153,23)" fg:x="218929" fg:w="42"/><text x="86.4571%" y="511.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (42 samples, 0.02%)</title><rect x="86.2071%" y="485" width="0.0165%" height="15" fill="rgb(212,203,14)" fg:x="218929" fg:w="42"/><text x="86.4571%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (40 samples, 0.02%)</title><rect x="86.2079%" y="469" width="0.0158%" height="15" fill="rgb(220,164,20)" fg:x="218931" fg:w="40"/><text x="86.4579%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (40 samples, 0.02%)</title><rect x="86.2079%" y="453" width="0.0158%" height="15" fill="rgb(222,203,48)" fg:x="218931" fg:w="40"/><text x="86.4579%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (39 samples, 0.02%)</title><rect x="86.2083%" y="437" width="0.0154%" height="15" fill="rgb(215,159,22)" fg:x="218932" fg:w="39"/><text x="86.4583%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (38 samples, 0.01%)</title><rect x="86.2087%" y="421" width="0.0150%" height="15" fill="rgb(216,183,47)" fg:x="218933" fg:w="38"/><text x="86.4587%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (35 samples, 0.01%)</title><rect x="86.2099%" y="405" width="0.0138%" height="15" fill="rgb(229,195,25)" fg:x="218936" fg:w="35"/><text x="86.4599%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (28 samples, 0.01%)</title><rect x="86.2126%" y="389" width="0.0110%" height="15" fill="rgb(224,132,51)" fg:x="218943" fg:w="28"/><text x="86.4626%" y="399.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (45 samples, 0.02%)</title><rect x="86.2071%" y="741" width="0.0177%" height="15" fill="rgb(240,63,7)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="751.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (45 samples, 0.02%)</title><rect x="86.2071%" y="725" width="0.0177%" height="15" fill="rgb(249,182,41)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="735.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (45 samples, 0.02%)</title><rect x="86.2071%" y="709" width="0.0177%" height="15" fill="rgb(243,47,26)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (45 samples, 0.02%)</title><rect x="86.2071%" y="693" width="0.0177%" height="15" fill="rgb(233,48,2)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="703.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (45 samples, 0.02%)</title><rect x="86.2071%" y="677" width="0.0177%" height="15" fill="rgb(244,165,34)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="687.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (45 samples, 0.02%)</title><rect x="86.2071%" y="661" width="0.0177%" height="15" fill="rgb(207,89,7)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="671.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (45 samples, 0.02%)</title><rect x="86.2071%" y="645" width="0.0177%" height="15" fill="rgb(244,117,36)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (45 samples, 0.02%)</title><rect x="86.2071%" y="629" width="0.0177%" height="15" fill="rgb(226,144,34)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (45 samples, 0.02%)</title><rect x="86.2071%" y="613" width="0.0177%" height="15" fill="rgb(213,23,19)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="623.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (45 samples, 0.02%)</title><rect x="86.2071%" y="597" width="0.0177%" height="15" fill="rgb(217,75,12)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="607.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (45 samples, 0.02%)</title><rect x="86.2071%" y="581" width="0.0177%" height="15" fill="rgb(224,159,17)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="591.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (45 samples, 0.02%)</title><rect x="86.2071%" y="565" width="0.0177%" height="15" fill="rgb(217,118,1)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="575.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (45 samples, 0.02%)</title><rect x="86.2071%" y="549" width="0.0177%" height="15" fill="rgb(232,180,48)" fg:x="218929" fg:w="45"/><text x="86.4571%" y="559.50"></text></g><g><title>&lt;bevy_render::render_graph::schedule::DependentNodeStager as bevy_render::render_graph::schedule::RenderGraphStager&gt;::get_stages (47 samples, 0.02%)</title><rect x="86.2288%" y="693" width="0.0185%" height="15" fill="rgb(230,27,33)" fg:x="218984" fg:w="47"/><text x="86.4788%" y="703.50"></text></g><g><title>bevy_render::render_graph::schedule::stage_node (38 samples, 0.01%)</title><rect x="86.2323%" y="677" width="0.0150%" height="15" fill="rgb(205,31,21)" fg:x="218993" fg:w="38"/><text x="86.4823%" y="687.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::iter::traits::collect::Extend&lt;T&gt;&gt;::extend (50 samples, 0.02%)</title><rect x="86.2634%" y="629" width="0.0197%" height="15" fill="rgb(253,59,4)" fg:x="219072" fg:w="50"/><text x="86.5134%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (50 samples, 0.02%)</title><rect x="86.2634%" y="613" width="0.0197%" height="15" fill="rgb(224,201,9)" fg:x="219072" fg:w="50"/><text x="86.5134%" y="623.50"></text></g><g><title>core::iter::traits::iterator::Iterator::for_each (47 samples, 0.02%)</title><rect x="86.2646%" y="597" width="0.0185%" height="15" fill="rgb(229,206,30)" fg:x="219075" fg:w="47"/><text x="86.5146%" y="607.50"></text></g><g><title>&lt;core::iter::adapters::cloned::Cloned&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 0.02%)</title><rect x="86.2646%" y="581" width="0.0185%" height="15" fill="rgb(212,67,47)" fg:x="219075" fg:w="47"/><text x="86.5146%" y="591.50"></text></g><g><title>&lt;core::iter::adapters::map::Map&lt;I,F&gt; as core::iter::traits::iterator::Iterator&gt;::fold (47 samples, 0.02%)</title><rect x="86.2646%" y="565" width="0.0185%" height="15" fill="rgb(211,96,50)" fg:x="219075" fg:w="47"/><text x="86.5146%" y="575.50"></text></g><g><title>core::iter::traits::iterator::Iterator::fold (42 samples, 0.02%)</title><rect x="86.2666%" y="549" width="0.0165%" height="15" fill="rgb(252,114,18)" fg:x="219080" fg:w="42"/><text x="86.5166%" y="559.50"></text></g><g><title>core::iter::adapters::map::map_fold::{{closure}} (42 samples, 0.02%)</title><rect x="86.2666%" y="533" width="0.0165%" height="15" fill="rgb(223,58,37)" fg:x="219080" fg:w="42"/><text x="86.5166%" y="543.50"></text></g><g><title>core::ops::function::FnMut::call_mut (26 samples, 0.01%)</title><rect x="86.2729%" y="517" width="0.0102%" height="15" fill="rgb(237,70,4)" fg:x="219096" fg:w="26"/><text x="86.5229%" y="527.50"></text></g><g><title>&lt;bevy_render::draw::RenderCommand as core::clone::Clone&gt;::clone (26 samples, 0.01%)</title><rect x="86.2729%" y="501" width="0.0102%" height="15" fill="rgb(244,85,46)" fg:x="219096" fg:w="26"/><text x="86.5229%" y="511.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::clone::Clone&gt;::clone (34 samples, 0.01%)</title><rect x="86.4465%" y="613" width="0.0134%" height="15" fill="rgb(223,39,52)" fg:x="219537" fg:w="34"/><text x="86.6965%" y="623.50"></text></g><g><title>&lt;bevy_render::draw::RenderCommand as core::clone::Clone&gt;::clone (703 samples, 0.28%)</title><rect x="86.2867%" y="629" width="0.2768%" height="15" fill="rgb(218,200,14)" fg:x="219131" fg:w="703"/><text x="86.5367%" y="639.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (252 samples, 0.10%)</title><rect x="86.4642%" y="613" width="0.0992%" height="15" fill="rgb(208,171,16)" fg:x="219582" fg:w="252"/><text x="86.7142%" y="623.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (247 samples, 0.10%)</title><rect x="86.4662%" y="597" width="0.0973%" height="15" fill="rgb(234,200,18)" fg:x="219587" fg:w="247"/><text x="86.7162%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (247 samples, 0.10%)</title><rect x="86.4662%" y="581" width="0.0973%" height="15" fill="rgb(228,45,11)" fg:x="219587" fg:w="247"/><text x="86.7162%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_add (245 samples, 0.10%)</title><rect x="86.4670%" y="565" width="0.0965%" height="15" fill="rgb(237,182,11)" fg:x="219589" fg:w="245"/><text x="86.7170%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (329 samples, 0.13%)</title><rect x="86.5654%" y="629" width="0.1295%" height="15" fill="rgb(241,175,49)" fg:x="219839" fg:w="329"/><text x="86.8154%" y="639.50"></text></g><g><title>core::ptr::write (317 samples, 0.12%)</title><rect x="86.5702%" y="613" width="0.1248%" height="15" fill="rgb(247,38,35)" fg:x="219851" fg:w="317"/><text x="86.8202%" y="623.50"></text></g><g><title>bevy_ecs::entity::Entities::get (31 samples, 0.01%)</title><rect x="86.7040%" y="581" width="0.0122%" height="15" fill="rgb(228,39,49)" fg:x="220191" fg:w="31"/><text x="86.9540%" y="591.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (56 samples, 0.02%)</title><rect x="86.6954%" y="597" width="0.0221%" height="15" fill="rgb(226,101,26)" fg:x="220169" fg:w="56"/><text x="86.9454%" y="607.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get (66 samples, 0.03%)</title><rect x="86.6950%" y="629" width="0.0260%" height="15" fill="rgb(206,141,19)" fg:x="220168" fg:w="66"/><text x="86.9450%" y="639.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked (66 samples, 0.03%)</title><rect x="86.6950%" y="613" width="0.0260%" height="15" fill="rgb(211,200,13)" fg:x="220168" fg:w="66"/><text x="86.9450%" y="623.50"></text></g><g><title>bevy_ecs::component::Components::get_id (26 samples, 0.01%)</title><rect x="86.7269%" y="581" width="0.0102%" height="15" fill="rgb(241,121,6)" fg:x="220249" fg:w="26"/><text x="86.9769%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (26 samples, 0.01%)</title><rect x="86.7269%" y="565" width="0.0102%" height="15" fill="rgb(234,221,29)" fg:x="220249" fg:w="26"/><text x="86.9769%" y="575.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (26 samples, 0.01%)</title><rect x="86.7269%" y="549" width="0.0102%" height="15" fill="rgb(229,136,5)" fg:x="220249" fg:w="26"/><text x="86.9769%" y="559.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (26 samples, 0.01%)</title><rect x="86.7269%" y="533" width="0.0102%" height="15" fill="rgb(238,36,11)" fg:x="220249" fg:w="26"/><text x="86.9769%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (26 samples, 0.01%)</title><rect x="86.7269%" y="517" width="0.0102%" height="15" fill="rgb(251,55,41)" fg:x="220249" fg:w="26"/><text x="86.9769%" y="527.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component (42 samples, 0.02%)</title><rect x="86.7371%" y="581" width="0.0165%" height="15" fill="rgb(242,34,40)" fg:x="220275" fg:w="42"/><text x="86.9871%" y="591.50"></text></g><g><title>bevy_ecs::world::World::get (130 samples, 0.05%)</title><rect x="86.7210%" y="629" width="0.0512%" height="15" fill="rgb(215,42,17)" fg:x="220234" fg:w="130"/><text x="86.9710%" y="639.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityRef::get (122 samples, 0.05%)</title><rect x="86.7241%" y="613" width="0.0480%" height="15" fill="rgb(207,44,46)" fg:x="220242" fg:w="122"/><text x="86.9741%" y="623.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (119 samples, 0.05%)</title><rect x="86.7253%" y="597" width="0.0469%" height="15" fill="rgb(211,206,28)" fg:x="220245" fg:w="119"/><text x="86.9753%" y="607.50"></text></g><g><title>bevy_ecs::world::entity_ref::get_component_with_type (47 samples, 0.02%)</title><rect x="86.7537%" y="581" width="0.0185%" height="15" fill="rgb(237,167,16)" fg:x="220317" fg:w="47"/><text x="87.0037%" y="591.50"></text></g><g><title>std::collections::hash::map::Entry&lt;K,V&gt;::or_insert_with (27 samples, 0.01%)</title><rect x="86.7769%" y="629" width="0.0106%" height="15" fill="rgb(233,66,6)" fg:x="220376" fg:w="27"/><text x="87.0269%" y="639.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (42 samples, 0.02%)</title><rect x="86.7907%" y="613" width="0.0165%" height="15" fill="rgb(246,123,29)" fg:x="220411" fg:w="42"/><text x="87.0407%" y="623.50"></text></g><g><title>&lt;[u8] as ahash::convert::ReadFromSlice&gt;::read_u64 (52 samples, 0.02%)</title><rect x="86.8186%" y="469" width="0.0205%" height="15" fill="rgb(209,62,40)" fg:x="220482" fg:w="52"/><text x="87.0686%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (73 samples, 0.03%)</title><rect x="86.8186%" y="501" width="0.0287%" height="15" fill="rgb(218,4,25)" fg:x="220482" fg:w="73"/><text x="87.0686%" y="511.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (73 samples, 0.03%)</title><rect x="86.8186%" y="485" width="0.0287%" height="15" fill="rgb(253,91,49)" fg:x="220482" fg:w="73"/><text x="87.0686%" y="495.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (77 samples, 0.03%)</title><rect x="86.8186%" y="565" width="0.0303%" height="15" fill="rgb(228,155,29)" fg:x="220482" fg:w="77"/><text x="87.0686%" y="575.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (77 samples, 0.03%)</title><rect x="86.8186%" y="549" width="0.0303%" height="15" fill="rgb(243,57,37)" fg:x="220482" fg:w="77"/><text x="87.0686%" y="559.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (77 samples, 0.03%)</title><rect x="86.8186%" y="533" width="0.0303%" height="15" fill="rgb(244,167,17)" fg:x="220482" fg:w="77"/><text x="87.0686%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (77 samples, 0.03%)</title><rect x="86.8186%" y="517" width="0.0303%" height="15" fill="rgb(207,181,38)" fg:x="220482" fg:w="77"/><text x="87.0686%" y="527.50"></text></g><g><title>hashbrown::map::make_insert_hash (109 samples, 0.04%)</title><rect x="86.8115%" y="597" width="0.0429%" height="15" fill="rgb(211,8,23)" fg:x="220464" fg:w="109"/><text x="87.0615%" y="607.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (91 samples, 0.04%)</title><rect x="86.8186%" y="581" width="0.0358%" height="15" fill="rgb(235,11,44)" fg:x="220482" fg:w="91"/><text x="87.0686%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (66 samples, 0.03%)</title><rect x="86.8545%" y="597" width="0.0260%" height="15" fill="rgb(248,18,52)" fg:x="220573" fg:w="66"/><text x="87.1045%" y="607.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (26 samples, 0.01%)</title><rect x="86.8702%" y="581" width="0.0102%" height="15" fill="rgb(208,4,7)" fg:x="220613" fg:w="26"/><text x="87.1202%" y="591.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (26 samples, 0.01%)</title><rect x="86.8702%" y="565" width="0.0102%" height="15" fill="rgb(240,17,39)" fg:x="220613" fg:w="26"/><text x="87.1202%" y="575.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (26 samples, 0.01%)</title><rect x="86.8702%" y="549" width="0.0102%" height="15" fill="rgb(207,170,3)" fg:x="220613" fg:w="26"/><text x="87.1202%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (193 samples, 0.08%)</title><rect x="86.8072%" y="613" width="0.0760%" height="15" fill="rgb(236,100,52)" fg:x="220453" fg:w="193"/><text x="87.0572%" y="623.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare::{{closure}} (1,619 samples, 0.64%)</title><rect x="86.2473%" y="645" width="0.6375%" height="15" fill="rgb(246,78,51)" fg:x="219031" fg:w="1619"/><text x="86.4973%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (247 samples, 0.10%)</title><rect x="86.7875%" y="629" width="0.0973%" height="15" fill="rgb(211,17,15)" fg:x="220403" fg:w="247"/><text x="87.0375%" y="639.50"></text></g><g><title>bevy_render::render_graph::graph::RenderGraph::prepare (1,645 samples, 0.65%)</title><rect x="86.2473%" y="693" width="0.6477%" height="15" fill="rgb(209,59,46)" fg:x="219031" fg:w="1645"/><text x="86.4973%" y="703.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::prepare (1,645 samples, 0.65%)</title><rect x="86.2473%" y="677" width="0.6477%" height="15" fill="rgb(210,92,25)" fg:x="219031" fg:w="1645"/><text x="86.4973%" y="687.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (1,645 samples, 0.65%)</title><rect x="86.2473%" y="661" width="0.6477%" height="15" fill="rgb(238,174,52)" fg:x="219031" fg:w="1645"/><text x="86.4973%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::renderer::render_resource::buffer::BufferId,alloc::sync::Arc&lt;wgpu::Buffer&gt;,ahash::random_state::RandomState&gt;&gt;&gt; (74 samples, 0.03%)</title><rect x="86.9505%" y="629" width="0.0291%" height="15" fill="rgb(230,73,7)" fg:x="220817" fg:w="74"/><text x="87.2005%" y="639.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (74 samples, 0.03%)</title><rect x="86.9505%" y="613" width="0.0291%" height="15" fill="rgb(243,124,40)" fg:x="220817" fg:w="74"/><text x="87.2005%" y="623.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (74 samples, 0.03%)</title><rect x="86.9505%" y="597" width="0.0291%" height="15" fill="rgb(244,170,11)" fg:x="220817" fg:w="74"/><text x="87.2005%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (66 samples, 0.03%)</title><rect x="86.9537%" y="581" width="0.0260%" height="15" fill="rgb(207,114,54)" fg:x="220825" fg:w="66"/><text x="87.2037%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_sub (66 samples, 0.03%)</title><rect x="86.9537%" y="565" width="0.0260%" height="15" fill="rgb(205,42,20)" fg:x="220825" fg:w="66"/><text x="87.2037%" y="575.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (114 samples, 0.04%)</title><rect x="86.9797%" y="629" width="0.0449%" height="15" fill="rgb(230,30,28)" fg:x="220891" fg:w="114"/><text x="87.2297%" y="639.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (114 samples, 0.04%)</title><rect x="86.9797%" y="613" width="0.0449%" height="15" fill="rgb(205,73,54)" fg:x="220891" fg:w="114"/><text x="87.2297%" y="623.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (114 samples, 0.04%)</title><rect x="86.9797%" y="597" width="0.0449%" height="15" fill="rgb(254,227,23)" fg:x="220891" fg:w="114"/><text x="87.2297%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (112 samples, 0.04%)</title><rect x="86.9805%" y="581" width="0.0441%" height="15" fill="rgb(228,202,34)" fg:x="220893" fg:w="112"/><text x="87.2305%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (112 samples, 0.04%)</title><rect x="86.9805%" y="565" width="0.0441%" height="15" fill="rgb(222,225,37)" fg:x="220893" fg:w="112"/><text x="87.2305%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (43 samples, 0.02%)</title><rect x="87.0246%" y="581" width="0.0169%" height="15" fill="rgb(221,14,54)" fg:x="221005" fg:w="43"/><text x="87.2746%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (122 samples, 0.05%)</title><rect x="87.0246%" y="629" width="0.0480%" height="15" fill="rgb(254,102,2)" fg:x="221005" fg:w="122"/><text x="87.2746%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (122 samples, 0.05%)</title><rect x="87.0246%" y="613" width="0.0480%" height="15" fill="rgb(232,104,17)" fg:x="221005" fg:w="122"/><text x="87.2746%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (122 samples, 0.05%)</title><rect x="87.0246%" y="597" width="0.0480%" height="15" fill="rgb(250,220,14)" fg:x="221005" fg:w="122"/><text x="87.2746%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (79 samples, 0.03%)</title><rect x="87.0415%" y="581" width="0.0311%" height="15" fill="rgb(241,158,9)" fg:x="221048" fg:w="79"/><text x="87.2915%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (76 samples, 0.03%)</title><rect x="87.0427%" y="565" width="0.0299%" height="15" fill="rgb(246,9,43)" fg:x="221051" fg:w="76"/><text x="87.2927%" y="575.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (401 samples, 0.16%)</title><rect x="86.9265%" y="661" width="0.1579%" height="15" fill="rgb(206,73,33)" fg:x="220756" fg:w="401"/><text x="87.1765%" y="671.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (382 samples, 0.15%)</title><rect x="86.9340%" y="645" width="0.1504%" height="15" fill="rgb(222,79,8)" fg:x="220775" fg:w="382"/><text x="87.1840%" y="655.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (30 samples, 0.01%)</title><rect x="87.0726%" y="629" width="0.0118%" height="15" fill="rgb(234,8,54)" fg:x="221127" fg:w="30"/><text x="87.3226%" y="639.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (450 samples, 0.18%)</title><rect x="86.9092%" y="677" width="0.1772%" height="15" fill="rgb(209,134,38)" fg:x="220712" fg:w="450"/><text x="87.1592%" y="687.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (514 samples, 0.20%)</title><rect x="86.8990%" y="693" width="0.2024%" height="15" fill="rgb(230,127,29)" fg:x="220686" fg:w="514"/><text x="87.1490%" y="703.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (2,276 samples, 0.90%)</title><rect x="86.2071%" y="757" width="0.8962%" height="15" fill="rgb(242,44,41)" fg:x="218929" fg:w="2276"/><text x="86.4571%" y="767.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (2,221 samples, 0.87%)</title><rect x="86.2288%" y="741" width="0.8746%" height="15" fill="rgb(222,56,43)" fg:x="218984" fg:w="2221"/><text x="86.4788%" y="751.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (2,221 samples, 0.87%)</title><rect x="86.2288%" y="725" width="0.8746%" height="15" fill="rgb(238,39,47)" fg:x="218984" fg:w="2221"/><text x="86.4788%" y="735.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (2,221 samples, 0.87%)</title><rect x="86.2288%" y="709" width="0.8746%" height="15" fill="rgb(226,79,43)" fg:x="218984" fg:w="2221"/><text x="86.4788%" y="719.50"></text></g><g><title>bevy_winit::run (97,586 samples, 38.43%)</title><rect x="48.6799%" y="965" width="38.4262%" height="15" fill="rgb(242,105,53)" fg:x="123626" fg:w="97586"/><text x="48.9299%" y="975.50">bevy_winit::run</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (97,586 samples, 38.43%)</title><rect x="48.6799%" y="949" width="38.4262%" height="15" fill="rgb(251,132,46)" fg:x="123626" fg:w="97586"/><text x="48.9299%" y="959.50">winit::event_loop::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (97,586 samples, 38.43%)</title><rect x="48.6799%" y="933" width="38.4262%" height="15" fill="rgb(231,77,14)" fg:x="123626" fg:w="97586"/><text x="48.9299%" y="943.50">winit::platform_impl::platform::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (97,586 samples, 38.43%)</title><rect x="48.6799%" y="917" width="38.4262%" height="15" fill="rgb(240,135,9)" fg:x="123626" fg:w="97586"/><text x="48.9299%" y="927.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (97,586 samples, 38.43%)</title><rect x="48.6799%" y="901" width="38.4262%" height="15" fill="rgb(248,109,14)" fg:x="123626" fg:w="97586"/><text x="48.9299%" y="911.50">winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (97,586 samples, 38.43%)</title><rect x="48.6799%" y="885" width="38.4262%" height="15" fill="rgb(227,146,52)" fg:x="123626" fg:w="97586"/><text x="48.9299%" y="895.50">winit::platform_impl::platform::sticky_exit_callback</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (97,586 samples, 38.43%)</title><rect x="48.6799%" y="869" width="38.4262%" height="15" fill="rgb(232,54,3)" fg:x="123626" fg:w="97586"/><text x="48.9299%" y="879.50">bevy_winit::winit_runner_with::{{closure}}</text></g><g><title>bevy_app::app::App::update (97,586 samples, 38.43%)</title><rect x="48.6799%" y="853" width="38.4262%" height="15" fill="rgb(229,201,43)" fg:x="123626" fg:w="97586"/><text x="48.9299%" y="863.50">bevy_app::app::App::update</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (97,586 samples, 38.43%)</title><rect x="48.6799%" y="837" width="38.4262%" height="15" fill="rgb(252,161,33)" fg:x="123626" fg:w="97586"/><text x="48.9299%" y="847.50">&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Sta..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (97,586 samples, 38.43%)</title><rect x="48.6799%" y="821" width="38.4262%" height="15" fill="rgb(226,146,40)" fg:x="123626" fg:w="97586"/><text x="48.9299%" y="831.50">bevy_ecs::schedule::Schedule::run_once</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (97,580 samples, 38.42%)</title><rect x="48.6823%" y="805" width="38.4238%" height="15" fill="rgb(219,47,25)" fg:x="123632" fg:w="97580"/><text x="48.9323%" y="815.50">&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (2,290 samples, 0.90%)</title><rect x="86.2044%" y="789" width="0.9017%" height="15" fill="rgb(250,135,13)" fg:x="218922" fg:w="2290"/><text x="86.4544%" y="799.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (2,290 samples, 0.90%)</title><rect x="86.2044%" y="773" width="0.9017%" height="15" fill="rgb(219,229,18)" fg:x="218922" fg:w="2290"/><text x="86.4544%" y="783.50"></text></g><g><title>alloc::alloc::box_free (73 samples, 0.03%)</title><rect x="87.1640%" y="725" width="0.0287%" height="15" fill="rgb(217,152,27)" fg:x="221359" fg:w="73"/><text x="87.4140%" y="735.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (73 samples, 0.03%)</title><rect x="87.1640%" y="709" width="0.0287%" height="15" fill="rgb(225,71,47)" fg:x="221359" fg:w="73"/><text x="87.4140%" y="719.50"></text></g><g><title>alloc::alloc::dealloc (73 samples, 0.03%)</title><rect x="87.1640%" y="693" width="0.0287%" height="15" fill="rgb(220,139,14)" fg:x="221359" fg:w="73"/><text x="87.4140%" y="703.50"></text></g><g><title>__rdl_dealloc (73 samples, 0.03%)</title><rect x="87.1640%" y="677" width="0.0287%" height="15" fill="rgb(247,54,32)" fg:x="221359" fg:w="73"/><text x="87.4140%" y="687.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (73 samples, 0.03%)</title><rect x="87.1640%" y="661" width="0.0287%" height="15" fill="rgb(252,131,39)" fg:x="221359" fg:w="73"/><text x="87.4140%" y="671.50"></text></g><g><title>__GI___libc_free (73 samples, 0.03%)</title><rect x="87.1640%" y="645" width="0.0287%" height="15" fill="rgb(210,108,39)" fg:x="221359" fg:w="73"/><text x="87.4140%" y="655.50"></text></g><g><title>_int_free (57 samples, 0.02%)</title><rect x="87.1703%" y="629" width="0.0224%" height="15" fill="rgb(205,23,29)" fg:x="221375" fg:w="57"/><text x="87.4203%" y="639.50"></text></g><g><title>bevy_ecs::world::World::get_entity_mut (62 samples, 0.02%)</title><rect x="87.1927%" y="709" width="0.0244%" height="15" fill="rgb(246,139,46)" fg:x="221432" fg:w="62"/><text x="87.4427%" y="719.50"></text></g><g><title>bevy_ecs::entity::Entities::get (62 samples, 0.02%)</title><rect x="87.1927%" y="693" width="0.0244%" height="15" fill="rgb(250,81,26)" fg:x="221432" fg:w="62"/><text x="87.4427%" y="703.50"></text></g><g><title>bevy_ecs::world::World::entity_mut (66 samples, 0.03%)</title><rect x="87.1927%" y="725" width="0.0260%" height="15" fill="rgb(214,104,7)" fg:x="221432" fg:w="66"/><text x="87.4427%" y="735.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Insert&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (203 samples, 0.08%)</title><rect x="87.1396%" y="741" width="0.0799%" height="15" fill="rgb(233,189,8)" fg:x="221297" fg:w="203"/><text x="87.3896%" y="751.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove_bundle (96 samples, 0.04%)</title><rect x="87.2455%" y="709" width="0.0378%" height="15" fill="rgb(228,141,17)" fg:x="221566" fg:w="96"/><text x="87.4955%" y="719.50"></text></g><g><title>bevy_ecs::world::entity_ref::EntityMut::remove (103 samples, 0.04%)</title><rect x="87.2435%" y="725" width="0.0406%" height="15" fill="rgb(247,157,1)" fg:x="221561" fg:w="103"/><text x="87.4935%" y="735.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::boxed::Box&lt;bevy_ecs::system::commands::Remove&lt;engine::engine::actor::pathfinding::Path&gt;&gt;&gt; (57 samples, 0.02%)</title><rect x="87.2841%" y="725" width="0.0224%" height="15" fill="rgb(249,225,5)" fg:x="221664" fg:w="57"/><text x="87.5341%" y="735.50"></text></g><g><title>alloc::alloc::box_free (57 samples, 0.02%)</title><rect x="87.2841%" y="709" width="0.0224%" height="15" fill="rgb(242,55,13)" fg:x="221664" fg:w="57"/><text x="87.5341%" y="719.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.02%)</title><rect x="87.2841%" y="693" width="0.0224%" height="15" fill="rgb(230,49,50)" fg:x="221664" fg:w="57"/><text x="87.5341%" y="703.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.02%)</title><rect x="87.2841%" y="677" width="0.0224%" height="15" fill="rgb(241,111,38)" fg:x="221664" fg:w="57"/><text x="87.5341%" y="687.50"></text></g><g><title>__rdl_dealloc (57 samples, 0.02%)</title><rect x="87.2841%" y="661" width="0.0224%" height="15" fill="rgb(252,155,4)" fg:x="221664" fg:w="57"/><text x="87.5341%" y="671.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (57 samples, 0.02%)</title><rect x="87.2841%" y="645" width="0.0224%" height="15" fill="rgb(212,69,32)" fg:x="221664" fg:w="57"/><text x="87.5341%" y="655.50"></text></g><g><title>__GI___libc_free (57 samples, 0.02%)</title><rect x="87.2841%" y="629" width="0.0224%" height="15" fill="rgb(243,107,47)" fg:x="221664" fg:w="57"/><text x="87.5341%" y="639.50"></text></g><g><title>_int_free (47 samples, 0.02%)</title><rect x="87.2880%" y="613" width="0.0185%" height="15" fill="rgb(247,130,12)" fg:x="221674" fg:w="47"/><text x="87.5380%" y="623.50"></text></g><g><title>&lt;bevy_ecs::system::commands::Remove&lt;T&gt; as bevy_ecs::system::commands::Command&gt;::write (226 samples, 0.09%)</title><rect x="87.2195%" y="741" width="0.0890%" height="15" fill="rgb(233,74,16)" fg:x="221500" fg:w="226"/><text x="87.4695%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::commands::CommandQueue as bevy_ecs::system::system_param::SystemParamState&gt;::apply (455 samples, 0.18%)</title><rect x="87.1297%" y="773" width="0.1792%" height="15" fill="rgb(208,58,18)" fg:x="221272" fg:w="455"/><text x="87.3797%" y="783.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::apply (454 samples, 0.18%)</title><rect x="87.1301%" y="757" width="0.1788%" height="15" fill="rgb(242,225,1)" fg:x="221273" fg:w="454"/><text x="87.3801%" y="767.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (44 samples, 0.02%)</title><rect x="87.3286%" y="629" width="0.0173%" height="15" fill="rgb(249,39,40)" fg:x="221777" fg:w="44"/><text x="87.5786%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_or (44 samples, 0.02%)</title><rect x="87.3286%" y="613" width="0.0173%" height="15" fill="rgb(207,72,44)" fg:x="221777" fg:w="44"/><text x="87.5786%" y="623.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::read (56 samples, 0.02%)</title><rect x="87.3270%" y="645" width="0.0221%" height="15" fill="rgb(215,193,12)" fg:x="221773" fg:w="56"/><text x="87.5770%" y="655.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (57 samples, 0.02%)</title><rect x="87.3597%" y="629" width="0.0224%" height="15" fill="rgb(248,41,39)" fg:x="221856" fg:w="57"/><text x="87.6097%" y="639.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (57 samples, 0.02%)</title><rect x="87.3597%" y="613" width="0.0224%" height="15" fill="rgb(253,85,4)" fg:x="221856" fg:w="57"/><text x="87.6097%" y="623.50"></text></g><g><title>crossbeam_channel::channel::Receiver&lt;T&gt;::try_recv (161 samples, 0.06%)</title><rect x="87.3195%" y="677" width="0.0634%" height="15" fill="rgb(243,70,31)" fg:x="221754" fg:w="161"/><text x="87.5695%" y="687.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::try_recv (154 samples, 0.06%)</title><rect x="87.3223%" y="661" width="0.0606%" height="15" fill="rgb(253,195,26)" fg:x="221761" fg:w="154"/><text x="87.5723%" y="671.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_recv (86 samples, 0.03%)</title><rect x="87.3490%" y="645" width="0.0339%" height="15" fill="rgb(243,42,11)" fg:x="221829" fg:w="86"/><text x="87.5990%" y="655.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::remove_stale_bind_groups (191 samples, 0.08%)</title><rect x="87.3179%" y="725" width="0.0752%" height="15" fill="rgb(239,66,17)" fg:x="221750" fg:w="191"/><text x="87.5679%" y="735.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::remove_stale_bind_groups (191 samples, 0.08%)</title><rect x="87.3179%" y="709" width="0.0752%" height="15" fill="rgb(217,132,21)" fg:x="221750" fg:w="191"/><text x="87.5679%" y="719.50"></text></g><g><title>bevy_wgpu::wgpu_resources::BindGroupCounter::remove_stale_bind_groups (191 samples, 0.08%)</title><rect x="87.3179%" y="693" width="0.0752%" height="15" fill="rgb(252,202,21)" fg:x="221750" fg:w="191"/><text x="87.5679%" y="703.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (207 samples, 0.08%)</title><rect x="87.3175%" y="741" width="0.0815%" height="15" fill="rgb(233,98,36)" fg:x="221749" fg:w="207"/><text x="87.5675%" y="751.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (227 samples, 0.09%)</title><rect x="87.3108%" y="773" width="0.0894%" height="15" fill="rgb(216,153,54)" fg:x="221732" fg:w="227"/><text x="87.5608%" y="783.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (224 samples, 0.09%)</title><rect x="87.3120%" y="757" width="0.0882%" height="15" fill="rgb(250,99,7)" fg:x="221735" fg:w="224"/><text x="87.5620%" y="767.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (726 samples, 0.29%)</title><rect x="87.1171%" y="789" width="0.2859%" height="15" fill="rgb(207,56,50)" fg:x="221240" fg:w="726"/><text x="87.3671%" y="799.50"></text></g><g><title>bevy_app::app::App::update (749 samples, 0.29%)</title><rect x="87.1159%" y="837" width="0.2949%" height="15" fill="rgb(244,61,34)" fg:x="221237" fg:w="749"/><text x="87.3659%" y="847.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (749 samples, 0.29%)</title><rect x="87.1159%" y="821" width="0.2949%" height="15" fill="rgb(241,50,38)" fg:x="221237" fg:w="749"/><text x="87.3659%" y="831.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (749 samples, 0.29%)</title><rect x="87.1159%" y="805" width="0.2949%" height="15" fill="rgb(212,166,30)" fg:x="221237" fg:w="749"/><text x="87.3659%" y="815.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (756 samples, 0.30%)</title><rect x="87.1155%" y="869" width="0.2977%" height="15" fill="rgb(249,127,32)" fg:x="221236" fg:w="756"/><text x="87.3655%" y="879.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (755 samples, 0.30%)</title><rect x="87.1159%" y="853" width="0.2973%" height="15" fill="rgb(209,103,0)" fg:x="221237" fg:w="755"/><text x="87.3659%" y="863.50"></text></g><g><title>bevy_winit::winit_runner_with (779 samples, 0.31%)</title><rect x="87.1132%" y="965" width="0.3067%" height="15" fill="rgb(238,209,51)" fg:x="221230" fg:w="779"/><text x="87.3632%" y="975.50"></text></g><g><title>bevy_winit::run (779 samples, 0.31%)</title><rect x="87.1132%" y="949" width="0.3067%" height="15" fill="rgb(237,56,23)" fg:x="221230" fg:w="779"/><text x="87.3632%" y="959.50"></text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (779 samples, 0.31%)</title><rect x="87.1132%" y="933" width="0.3067%" height="15" fill="rgb(215,153,46)" fg:x="221230" fg:w="779"/><text x="87.3632%" y="943.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (779 samples, 0.31%)</title><rect x="87.1132%" y="917" width="0.3067%" height="15" fill="rgb(224,49,31)" fg:x="221230" fg:w="779"/><text x="87.3632%" y="927.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (779 samples, 0.31%)</title><rect x="87.1132%" y="901" width="0.3067%" height="15" fill="rgb(250,18,42)" fg:x="221230" fg:w="779"/><text x="87.3632%" y="911.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (779 samples, 0.31%)</title><rect x="87.1132%" y="885" width="0.3067%" height="15" fill="rgb(215,176,39)" fg:x="221230" fg:w="779"/><text x="87.3632%" y="895.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (55 samples, 0.02%)</title><rect x="87.4900%" y="965" width="0.0217%" height="15" fill="rgb(223,77,29)" fg:x="222187" fg:w="55"/><text x="87.7400%" y="975.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (33 samples, 0.01%)</title><rect x="87.5211%" y="949" width="0.0130%" height="15" fill="rgb(234,94,52)" fg:x="222266" fg:w="33"/><text x="87.7711%" y="959.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (33 samples, 0.01%)</title><rect x="87.5211%" y="933" width="0.0130%" height="15" fill="rgb(220,154,50)" fg:x="222266" fg:w="33"/><text x="87.7711%" y="943.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (33 samples, 0.01%)</title><rect x="87.5211%" y="917" width="0.0130%" height="15" fill="rgb(212,11,10)" fg:x="222266" fg:w="33"/><text x="87.7711%" y="927.50"></text></g><g><title>pathfinding::directed::astar::astar (43 samples, 0.02%)</title><rect x="87.5180%" y="965" width="0.0169%" height="15" fill="rgb(205,166,19)" fg:x="222258" fg:w="43"/><text x="87.7680%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (501 samples, 0.20%)</title><rect x="87.5424%" y="965" width="0.1973%" height="15" fill="rgb(244,198,16)" fg:x="222320" fg:w="501"/><text x="87.7924%" y="975.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (499 samples, 0.20%)</title><rect x="87.5432%" y="949" width="0.1965%" height="15" fill="rgb(219,69,12)" fg:x="222322" fg:w="499"/><text x="87.7932%" y="959.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (497 samples, 0.20%)</title><rect x="87.5440%" y="933" width="0.1957%" height="15" fill="rgb(245,30,7)" fg:x="222324" fg:w="497"/><text x="87.7940%" y="943.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (453 samples, 0.18%)</title><rect x="87.7471%" y="965" width="0.1784%" height="15" fill="rgb(218,221,48)" fg:x="222840" fg:w="453"/><text x="87.9971%" y="975.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (33 samples, 0.01%)</title><rect x="87.9306%" y="853" width="0.0130%" height="15" fill="rgb(216,66,15)" fg:x="223306" fg:w="33"/><text x="88.1806%" y="863.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (28 samples, 0.01%)</title><rect x="87.9326%" y="837" width="0.0110%" height="15" fill="rgb(226,122,50)" fg:x="223311" fg:w="28"/><text x="88.1826%" y="847.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (41 samples, 0.02%)</title><rect x="87.9291%" y="869" width="0.0161%" height="15" fill="rgb(239,156,16)" fg:x="223302" fg:w="41"/><text x="88.1791%" y="879.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::begin_render_pass (47 samples, 0.02%)</title><rect x="87.9271%" y="933" width="0.0185%" height="15" fill="rgb(224,27,38)" fg:x="223297" fg:w="47"/><text x="88.1771%" y="943.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_begin_render_pass (45 samples, 0.02%)</title><rect x="87.9279%" y="917" width="0.0177%" height="15" fill="rgb(224,39,27)" fg:x="223299" fg:w="45"/><text x="88.1779%" y="927.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_begin_render_pass (45 samples, 0.02%)</title><rect x="87.9279%" y="901" width="0.0177%" height="15" fill="rgb(215,92,29)" fg:x="223299" fg:w="45"/><text x="88.1779%" y="911.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (45 samples, 0.02%)</title><rect x="87.9279%" y="885" width="0.0177%" height="15" fill="rgb(207,159,16)" fg:x="223299" fg:w="45"/><text x="88.1779%" y="895.50"></text></g><g><title>wgpu_core::command::render::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_run_render_pass_impl (64 samples, 0.03%)</title><rect x="87.9263%" y="965" width="0.0252%" height="15" fill="rgb(238,163,47)" fg:x="223295" fg:w="64"/><text x="88.1763%" y="975.50"></text></g><g><title>wgpu_core::command::render::RenderPassInfo&lt;B&gt;::start (62 samples, 0.02%)</title><rect x="87.9271%" y="949" width="0.0244%" height="15" fill="rgb(219,91,49)" fg:x="223297" fg:w="62"/><text x="88.1771%" y="959.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (59 samples, 0.02%)</title><rect x="87.9515%" y="965" width="0.0232%" height="15" fill="rgb(227,167,31)" fg:x="223359" fg:w="59"/><text x="88.2015%" y="975.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_replace (27 samples, 0.01%)</title><rect x="87.9641%" y="949" width="0.0106%" height="15" fill="rgb(234,80,54)" fg:x="223391" fg:w="27"/><text x="88.2141%" y="959.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (27 samples, 0.01%)</title><rect x="87.9641%" y="933" width="0.0106%" height="15" fill="rgb(212,114,2)" fg:x="223391" fg:w="27"/><text x="88.2141%" y="943.50"></text></g><g><title>ash::entry::EntryV1_0::enumerate_instance_extension_properties (42 samples, 0.02%)</title><rect x="87.9810%" y="917" width="0.0165%" height="15" fill="rgb(234,50,24)" fg:x="223434" fg:w="42"/><text x="88.2310%" y="927.50"></text></g><g><title>ash::vk::features::EntryFnV1_0::enumerate_instance_extension_properties (42 samples, 0.02%)</title><rect x="87.9810%" y="901" width="0.0165%" height="15" fill="rgb(221,68,8)" fg:x="223434" fg:w="42"/><text x="88.2310%" y="911.50"></text></g><g><title>vkEnumerateInstanceExtensionProperties (42 samples, 0.02%)</title><rect x="87.9810%" y="885" width="0.0165%" height="15" fill="rgb(254,180,31)" fg:x="223434" fg:w="42"/><text x="88.2310%" y="895.50"></text></g><g><title>[libvulkan.so.1.2.191] (42 samples, 0.02%)</title><rect x="87.9810%" y="869" width="0.0165%" height="15" fill="rgb(247,130,50)" fg:x="223434" fg:w="42"/><text x="88.2310%" y="879.50"></text></g><g><title>[libvulkan.so.1.2.191] (42 samples, 0.02%)</title><rect x="87.9810%" y="853" width="0.0165%" height="15" fill="rgb(211,109,4)" fg:x="223434" fg:w="42"/><text x="88.2310%" y="863.50"></text></g><g><title>wgpu_core::hub::Global&lt;G&gt;::new (56 samples, 0.02%)</title><rect x="87.9779%" y="965" width="0.0221%" height="15" fill="rgb(238,50,21)" fg:x="223426" fg:w="56"/><text x="88.2279%" y="975.50"></text></g><g><title>wgpu_core::instance::Instance::new (56 samples, 0.02%)</title><rect x="87.9779%" y="949" width="0.0221%" height="15" fill="rgb(225,57,45)" fg:x="223426" fg:w="56"/><text x="88.2279%" y="959.50"></text></g><g><title>&lt;gfx_backend_vulkan::Instance as gfx_hal::Instance&lt;gfx_backend_vulkan::Backend&gt;&gt;::create (56 samples, 0.02%)</title><rect x="87.9779%" y="933" width="0.0221%" height="15" fill="rgb(209,196,50)" fg:x="223426" fg:w="56"/><text x="88.2279%" y="943.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (27 samples, 0.01%)</title><rect x="88.0110%" y="965" width="0.0106%" height="15" fill="rgb(242,140,13)" fg:x="223510" fg:w="27"/><text x="88.2610%" y="975.50"></text></g><g><title>malloc_consolidate (101 samples, 0.04%)</title><rect x="88.0811%" y="309" width="0.0398%" height="15" fill="rgb(217,111,7)" fg:x="223688" fg:w="101"/><text x="88.3311%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (123 samples, 0.05%)</title><rect x="88.0732%" y="517" width="0.0484%" height="15" fill="rgb(253,193,51)" fg:x="223668" fg:w="123"/><text x="88.3232%" y="527.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (123 samples, 0.05%)</title><rect x="88.0732%" y="501" width="0.0484%" height="15" fill="rgb(252,70,29)" fg:x="223668" fg:w="123"/><text x="88.3232%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (123 samples, 0.05%)</title><rect x="88.0732%" y="485" width="0.0484%" height="15" fill="rgb(232,127,12)" fg:x="223668" fg:w="123"/><text x="88.3232%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (123 samples, 0.05%)</title><rect x="88.0732%" y="469" width="0.0484%" height="15" fill="rgb(211,180,21)" fg:x="223668" fg:w="123"/><text x="88.3232%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (123 samples, 0.05%)</title><rect x="88.0732%" y="453" width="0.0484%" height="15" fill="rgb(229,72,13)" fg:x="223668" fg:w="123"/><text x="88.3232%" y="463.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (123 samples, 0.05%)</title><rect x="88.0732%" y="437" width="0.0484%" height="15" fill="rgb(240,211,49)" fg:x="223668" fg:w="123"/><text x="88.3232%" y="447.50"></text></g><g><title>alloc::alloc::Global::grow_impl (123 samples, 0.05%)</title><rect x="88.0732%" y="421" width="0.0484%" height="15" fill="rgb(219,149,40)" fg:x="223668" fg:w="123"/><text x="88.3232%" y="431.50"></text></g><g><title>alloc::alloc::realloc (123 samples, 0.05%)</title><rect x="88.0732%" y="405" width="0.0484%" height="15" fill="rgb(210,127,46)" fg:x="223668" fg:w="123"/><text x="88.3232%" y="415.50"></text></g><g><title>__rdl_realloc (123 samples, 0.05%)</title><rect x="88.0732%" y="389" width="0.0484%" height="15" fill="rgb(220,106,7)" fg:x="223668" fg:w="123"/><text x="88.3232%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (123 samples, 0.05%)</title><rect x="88.0732%" y="373" width="0.0484%" height="15" fill="rgb(249,31,22)" fg:x="223668" fg:w="123"/><text x="88.3232%" y="383.50"></text></g><g><title>__GI___libc_realloc (123 samples, 0.05%)</title><rect x="88.0732%" y="357" width="0.0484%" height="15" fill="rgb(253,1,49)" fg:x="223668" fg:w="123"/><text x="88.3232%" y="367.50"></text></g><g><title>_int_realloc (122 samples, 0.05%)</title><rect x="88.0736%" y="341" width="0.0480%" height="15" fill="rgb(227,144,33)" fg:x="223669" fg:w="122"/><text x="88.3236%" y="351.50"></text></g><g><title>_int_malloc (117 samples, 0.05%)</title><rect x="88.0755%" y="325" width="0.0461%" height="15" fill="rgb(249,163,44)" fg:x="223674" fg:w="117"/><text x="88.3255%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (125 samples, 0.05%)</title><rect x="88.0732%" y="533" width="0.0492%" height="15" fill="rgb(234,15,39)" fg:x="223668" fg:w="125"/><text x="88.3232%" y="543.50"></text></g><g><title>bevy_ecs::system::query::Query&lt;Q,F&gt;::get (62 samples, 0.02%)</title><rect x="88.1224%" y="533" width="0.0244%" height="15" fill="rgb(207,66,16)" fg:x="223793" fg:w="62"/><text x="88.3724%" y="543.50"></text></g><g><title>bevy_ecs::query::state::QueryState&lt;Q,F&gt;::get_unchecked_manual (61 samples, 0.02%)</title><rect x="88.1228%" y="517" width="0.0240%" height="15" fill="rgb(233,112,24)" fg:x="223794" fg:w="61"/><text x="88.3728%" y="527.50"></text></g><g><title>bevy_render::camera::visible_entities::visible_entities_system (280 samples, 0.11%)</title><rect x="88.0373%" y="549" width="0.1103%" height="15" fill="rgb(230,90,22)" fg:x="223577" fg:w="280"/><text x="88.2873%" y="559.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (35 samples, 0.01%)</title><rect x="88.2134%" y="533" width="0.0138%" height="15" fill="rgb(229,61,13)" fg:x="224024" fg:w="35"/><text x="88.4634%" y="543.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (135 samples, 0.05%)</title><rect x="88.2291%" y="501" width="0.0532%" height="15" fill="rgb(225,57,24)" fg:x="224064" fg:w="135"/><text x="88.4791%" y="511.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (134 samples, 0.05%)</title><rect x="88.2295%" y="485" width="0.0528%" height="15" fill="rgb(208,169,48)" fg:x="224065" fg:w="134"/><text x="88.4795%" y="495.50"></text></g><g><title>alloc::alloc::dealloc (134 samples, 0.05%)</title><rect x="88.2295%" y="469" width="0.0528%" height="15" fill="rgb(244,218,51)" fg:x="224065" fg:w="134"/><text x="88.4795%" y="479.50"></text></g><g><title>__rdl_dealloc (134 samples, 0.05%)</title><rect x="88.2295%" y="453" width="0.0528%" height="15" fill="rgb(214,148,10)" fg:x="224065" fg:w="134"/><text x="88.4795%" y="463.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (134 samples, 0.05%)</title><rect x="88.2295%" y="437" width="0.0528%" height="15" fill="rgb(225,174,27)" fg:x="224065" fg:w="134"/><text x="88.4795%" y="447.50"></text></g><g><title>__GI___libc_free (134 samples, 0.05%)</title><rect x="88.2295%" y="421" width="0.0528%" height="15" fill="rgb(230,96,26)" fg:x="224065" fg:w="134"/><text x="88.4795%" y="431.50"></text></g><g><title>_int_free (126 samples, 0.05%)</title><rect x="88.2327%" y="405" width="0.0496%" height="15" fill="rgb(232,10,30)" fg:x="224073" fg:w="126"/><text x="88.4827%" y="415.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;engine::engine::world::Position&gt;&gt; (136 samples, 0.05%)</title><rect x="88.2291%" y="533" width="0.0536%" height="15" fill="rgb(222,8,50)" fg:x="224064" fg:w="136"/><text x="88.4791%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (136 samples, 0.05%)</title><rect x="88.2291%" y="517" width="0.0536%" height="15" fill="rgb(213,81,27)" fg:x="224064" fg:w="136"/><text x="88.4791%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;&gt;&gt; (26 samples, 0.01%)</title><rect x="88.2827%" y="533" width="0.0102%" height="15" fill="rgb(245,50,10)" fg:x="224200" fg:w="26"/><text x="88.5327%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;bevy_ecs::entity::Entity&gt;&gt; (26 samples, 0.01%)</title><rect x="88.2827%" y="517" width="0.0102%" height="15" fill="rgb(216,100,18)" fg:x="224200" fg:w="26"/><text x="88.5327%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;bevy_ecs::entity::Entity&gt;&gt; (26 samples, 0.01%)</title><rect x="88.2827%" y="501" width="0.0102%" height="15" fill="rgb(236,147,54)" fg:x="224200" fg:w="26"/><text x="88.5327%" y="511.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (26 samples, 0.01%)</title><rect x="88.2827%" y="485" width="0.0102%" height="15" fill="rgb(205,143,26)" fg:x="224200" fg:w="26"/><text x="88.5327%" y="495.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (26 samples, 0.01%)</title><rect x="88.2827%" y="469" width="0.0102%" height="15" fill="rgb(236,26,9)" fg:x="224200" fg:w="26"/><text x="88.5327%" y="479.50"></text></g><g><title>alloc::alloc::dealloc (26 samples, 0.01%)</title><rect x="88.2827%" y="453" width="0.0102%" height="15" fill="rgb(221,165,53)" fg:x="224200" fg:w="26"/><text x="88.5327%" y="463.50"></text></g><g><title>__rdl_dealloc (26 samples, 0.01%)</title><rect x="88.2827%" y="437" width="0.0102%" height="15" fill="rgb(214,110,17)" fg:x="224200" fg:w="26"/><text x="88.5327%" y="447.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (26 samples, 0.01%)</title><rect x="88.2827%" y="421" width="0.0102%" height="15" fill="rgb(237,197,12)" fg:x="224200" fg:w="26"/><text x="88.5327%" y="431.50"></text></g><g><title>__GI___libc_free (26 samples, 0.01%)</title><rect x="88.2827%" y="405" width="0.0102%" height="15" fill="rgb(205,84,17)" fg:x="224200" fg:w="26"/><text x="88.5327%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (31 samples, 0.01%)</title><rect x="88.3335%" y="421" width="0.0122%" height="15" fill="rgb(237,18,45)" fg:x="224329" fg:w="31"/><text x="88.5835%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (34 samples, 0.01%)</title><rect x="88.3331%" y="485" width="0.0134%" height="15" fill="rgb(221,87,14)" fg:x="224328" fg:w="34"/><text x="88.5831%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (34 samples, 0.01%)</title><rect x="88.3331%" y="469" width="0.0134%" height="15" fill="rgb(238,186,15)" fg:x="224328" fg:w="34"/><text x="88.5831%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.01%)</title><rect x="88.3331%" y="453" width="0.0134%" height="15" fill="rgb(208,115,11)" fg:x="224328" fg:w="34"/><text x="88.5831%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (34 samples, 0.01%)</title><rect x="88.3331%" y="437" width="0.0134%" height="15" fill="rgb(254,175,0)" fg:x="224328" fg:w="34"/><text x="88.5831%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (47 samples, 0.02%)</title><rect x="88.3307%" y="501" width="0.0185%" height="15" fill="rgb(227,24,42)" fg:x="224322" fg:w="47"/><text x="88.5807%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (28 samples, 0.01%)</title><rect x="88.3492%" y="501" width="0.0110%" height="15" fill="rgb(223,211,37)" fg:x="224369" fg:w="28"/><text x="88.5992%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="88.3492%" y="485" width="0.0110%" height="15" fill="rgb(235,49,27)" fg:x="224369" fg:w="28"/><text x="88.5992%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (28 samples, 0.01%)</title><rect x="88.3492%" y="469" width="0.0110%" height="15" fill="rgb(254,97,51)" fg:x="224369" fg:w="28"/><text x="88.5992%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="88.3492%" y="453" width="0.0110%" height="15" fill="rgb(249,51,40)" fg:x="224369" fg:w="28"/><text x="88.5992%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (28 samples, 0.01%)</title><rect x="88.3492%" y="437" width="0.0110%" height="15" fill="rgb(210,128,45)" fg:x="224369" fg:w="28"/><text x="88.5992%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (28 samples, 0.01%)</title><rect x="88.3492%" y="421" width="0.0110%" height="15" fill="rgb(224,137,50)" fg:x="224369" fg:w="28"/><text x="88.5992%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (28 samples, 0.01%)</title><rect x="88.3492%" y="405" width="0.0110%" height="15" fill="rgb(242,15,9)" fg:x="224369" fg:w="28"/><text x="88.5992%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (28 samples, 0.01%)</title><rect x="88.3492%" y="389" width="0.0110%" height="15" fill="rgb(233,187,41)" fg:x="224369" fg:w="28"/><text x="88.5992%" y="399.50"></text></g><g><title>__rdl_dealloc (28 samples, 0.01%)</title><rect x="88.3492%" y="373" width="0.0110%" height="15" fill="rgb(227,2,29)" fg:x="224369" fg:w="28"/><text x="88.5992%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (28 samples, 0.01%)</title><rect x="88.3492%" y="357" width="0.0110%" height="15" fill="rgb(222,70,3)" fg:x="224369" fg:w="28"/><text x="88.5992%" y="367.50"></text></g><g><title>__GI___libc_free (28 samples, 0.01%)</title><rect x="88.3492%" y="341" width="0.0110%" height="15" fill="rgb(213,11,42)" fg:x="224369" fg:w="28"/><text x="88.5992%" y="351.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (34 samples, 0.01%)</title><rect x="88.3618%" y="501" width="0.0134%" height="15" fill="rgb(225,150,9)" fg:x="224401" fg:w="34"/><text x="88.6118%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (34 samples, 0.01%)</title><rect x="88.3618%" y="485" width="0.0134%" height="15" fill="rgb(230,162,45)" fg:x="224401" fg:w="34"/><text x="88.6118%" y="495.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (26 samples, 0.01%)</title><rect x="88.3752%" y="501" width="0.0102%" height="15" fill="rgb(222,14,52)" fg:x="224435" fg:w="26"/><text x="88.6252%" y="511.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_except_entities (244 samples, 0.10%)</title><rect x="88.3114%" y="517" width="0.0961%" height="15" fill="rgb(254,198,14)" fg:x="224273" fg:w="244"/><text x="88.5614%" y="527.50"></text></g><g><title>engine::engine::world::TileWeightMap::get (35 samples, 0.01%)</title><rect x="88.3937%" y="501" width="0.0138%" height="15" fill="rgb(220,217,30)" fg:x="224482" fg:w="35"/><text x="88.6437%" y="511.50"></text></g><g><title>engine::engine::actor::pathfinding::best_nearest_valid_destination (296 samples, 0.12%)</title><rect x="88.2929%" y="533" width="0.1166%" height="15" fill="rgb(215,146,41)" fg:x="224226" fg:w="296"/><text x="88.5429%" y="543.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (53 samples, 0.02%)</title><rect x="88.4213%" y="453" width="0.0209%" height="15" fill="rgb(217,27,36)" fg:x="224552" fg:w="53"/><text x="88.6713%" y="463.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (60 samples, 0.02%)</title><rect x="88.4189%" y="501" width="0.0236%" height="15" fill="rgb(219,218,39)" fg:x="224546" fg:w="60"/><text x="88.6689%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (60 samples, 0.02%)</title><rect x="88.4189%" y="485" width="0.0236%" height="15" fill="rgb(219,4,42)" fg:x="224546" fg:w="60"/><text x="88.6689%" y="495.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (60 samples, 0.02%)</title><rect x="88.4189%" y="469" width="0.0236%" height="15" fill="rgb(249,119,36)" fg:x="224546" fg:w="60"/><text x="88.6689%" y="479.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (26 samples, 0.01%)</title><rect x="88.4445%" y="485" width="0.0102%" height="15" fill="rgb(209,23,33)" fg:x="224611" fg:w="26"/><text x="88.6945%" y="495.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (67 samples, 0.03%)</title><rect x="88.4425%" y="501" width="0.0264%" height="15" fill="rgb(211,10,0)" fg:x="224606" fg:w="67"/><text x="88.6925%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (36 samples, 0.01%)</title><rect x="88.4547%" y="485" width="0.0142%" height="15" fill="rgb(208,99,37)" fg:x="224637" fg:w="36"/><text x="88.7047%" y="495.50"></text></g><g><title>core::ptr::write (26 samples, 0.01%)</title><rect x="88.4587%" y="469" width="0.0102%" height="15" fill="rgb(213,132,31)" fg:x="224647" fg:w="26"/><text x="88.7087%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (55 samples, 0.02%)</title><rect x="88.4697%" y="501" width="0.0217%" height="15" fill="rgb(243,129,40)" fg:x="224675" fg:w="55"/><text x="88.7197%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.02%)</title><rect x="88.4697%" y="485" width="0.0217%" height="15" fill="rgb(210,66,33)" fg:x="224675" fg:w="55"/><text x="88.7197%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (55 samples, 0.02%)</title><rect x="88.4697%" y="469" width="0.0217%" height="15" fill="rgb(209,189,4)" fg:x="224675" fg:w="55"/><text x="88.7197%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.02%)</title><rect x="88.4697%" y="453" width="0.0217%" height="15" fill="rgb(214,107,37)" fg:x="224675" fg:w="55"/><text x="88.7197%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (55 samples, 0.02%)</title><rect x="88.4697%" y="437" width="0.0217%" height="15" fill="rgb(245,88,54)" fg:x="224675" fg:w="55"/><text x="88.7197%" y="447.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.02%)</title><rect x="88.4697%" y="421" width="0.0217%" height="15" fill="rgb(205,146,20)" fg:x="224675" fg:w="55"/><text x="88.7197%" y="431.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (55 samples, 0.02%)</title><rect x="88.4697%" y="405" width="0.0217%" height="15" fill="rgb(220,161,25)" fg:x="224675" fg:w="55"/><text x="88.7197%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (55 samples, 0.02%)</title><rect x="88.4697%" y="389" width="0.0217%" height="15" fill="rgb(215,152,15)" fg:x="224675" fg:w="55"/><text x="88.7197%" y="399.50"></text></g><g><title>__rdl_dealloc (55 samples, 0.02%)</title><rect x="88.4697%" y="373" width="0.0217%" height="15" fill="rgb(233,192,44)" fg:x="224675" fg:w="55"/><text x="88.7197%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (55 samples, 0.02%)</title><rect x="88.4697%" y="357" width="0.0217%" height="15" fill="rgb(240,170,46)" fg:x="224675" fg:w="55"/><text x="88.7197%" y="367.50"></text></g><g><title>__GI___libc_free (55 samples, 0.02%)</title><rect x="88.4697%" y="341" width="0.0217%" height="15" fill="rgb(207,104,33)" fg:x="224675" fg:w="55"/><text x="88.7197%" y="351.50"></text></g><g><title>_int_free (47 samples, 0.02%)</title><rect x="88.4729%" y="325" width="0.0185%" height="15" fill="rgb(219,21,39)" fg:x="224683" fg:w="47"/><text x="88.7229%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (105 samples, 0.04%)</title><rect x="88.5327%" y="373" width="0.0413%" height="15" fill="rgb(214,133,29)" fg:x="224835" fg:w="105"/><text x="88.7827%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (105 samples, 0.04%)</title><rect x="88.5327%" y="357" width="0.0413%" height="15" fill="rgb(226,93,6)" fg:x="224835" fg:w="105"/><text x="88.7827%" y="367.50"></text></g><g><title>alloc::alloc::realloc (105 samples, 0.04%)</title><rect x="88.5327%" y="341" width="0.0413%" height="15" fill="rgb(252,222,34)" fg:x="224835" fg:w="105"/><text x="88.7827%" y="351.50"></text></g><g><title>__rdl_realloc (105 samples, 0.04%)</title><rect x="88.5327%" y="325" width="0.0413%" height="15" fill="rgb(252,92,48)" fg:x="224835" fg:w="105"/><text x="88.7827%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (105 samples, 0.04%)</title><rect x="88.5327%" y="309" width="0.0413%" height="15" fill="rgb(245,223,24)" fg:x="224835" fg:w="105"/><text x="88.7827%" y="319.50"></text></g><g><title>__GI___libc_realloc (105 samples, 0.04%)</title><rect x="88.5327%" y="293" width="0.0413%" height="15" fill="rgb(205,176,3)" fg:x="224835" fg:w="105"/><text x="88.7827%" y="303.50"></text></g><g><title>_int_realloc (54 samples, 0.02%)</title><rect x="88.5528%" y="277" width="0.0213%" height="15" fill="rgb(235,151,15)" fg:x="224886" fg:w="54"/><text x="88.8028%" y="287.50"></text></g><g><title>_int_malloc (27 samples, 0.01%)</title><rect x="88.5634%" y="261" width="0.0106%" height="15" fill="rgb(237,209,11)" fg:x="224913" fg:w="27"/><text x="88.8134%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (133 samples, 0.05%)</title><rect x="88.5311%" y="389" width="0.0524%" height="15" fill="rgb(243,227,24)" fg:x="224831" fg:w="133"/><text x="88.7811%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (150 samples, 0.06%)</title><rect x="88.5252%" y="453" width="0.0591%" height="15" fill="rgb(239,193,16)" fg:x="224816" fg:w="150"/><text x="88.7752%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (150 samples, 0.06%)</title><rect x="88.5252%" y="437" width="0.0591%" height="15" fill="rgb(231,27,9)" fg:x="224816" fg:w="150"/><text x="88.7752%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (150 samples, 0.06%)</title><rect x="88.5252%" y="421" width="0.0591%" height="15" fill="rgb(219,169,10)" fg:x="224816" fg:w="150"/><text x="88.7752%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (150 samples, 0.06%)</title><rect x="88.5252%" y="405" width="0.0591%" height="15" fill="rgb(244,229,43)" fg:x="224816" fg:w="150"/><text x="88.7752%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (175 samples, 0.07%)</title><rect x="88.5217%" y="469" width="0.0689%" height="15" fill="rgb(254,38,20)" fg:x="224807" fg:w="175"/><text x="88.7717%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (27 samples, 0.01%)</title><rect x="88.6044%" y="437" width="0.0106%" height="15" fill="rgb(250,47,30)" fg:x="225017" fg:w="27"/><text x="88.8544%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (27 samples, 0.01%)</title><rect x="88.6044%" y="421" width="0.0106%" height="15" fill="rgb(224,124,36)" fg:x="225017" fg:w="27"/><text x="88.8544%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (27 samples, 0.01%)</title><rect x="88.6044%" y="405" width="0.0106%" height="15" fill="rgb(246,68,51)" fg:x="225017" fg:w="27"/><text x="88.8544%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (27 samples, 0.01%)</title><rect x="88.6044%" y="389" width="0.0106%" height="15" fill="rgb(253,43,49)" fg:x="225017" fg:w="27"/><text x="88.8544%" y="399.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (41 samples, 0.02%)</title><rect x="88.6028%" y="469" width="0.0161%" height="15" fill="rgb(219,54,36)" fg:x="225013" fg:w="41"/><text x="88.8528%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (40 samples, 0.02%)</title><rect x="88.6032%" y="453" width="0.0158%" height="15" fill="rgb(227,133,34)" fg:x="225014" fg:w="40"/><text x="88.8532%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (40 samples, 0.02%)</title><rect x="88.6193%" y="453" width="0.0158%" height="15" fill="rgb(247,227,15)" fg:x="225055" fg:w="40"/><text x="88.8693%" y="463.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (42 samples, 0.02%)</title><rect x="88.6189%" y="469" width="0.0165%" height="15" fill="rgb(229,96,14)" fg:x="225054" fg:w="42"/><text x="88.8689%" y="479.50"></text></g><g><title>engine::engine::world::TileEntityMap::get (34 samples, 0.01%)</title><rect x="88.6355%" y="469" width="0.0134%" height="15" fill="rgb(220,79,17)" fg:x="225096" fg:w="34"/><text x="88.8855%" y="479.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path_around_entities::{{closure}} (431 samples, 0.17%)</title><rect x="88.4914%" y="501" width="0.1697%" height="15" fill="rgb(205,131,53)" fg:x="224730" fg:w="431"/><text x="88.7414%" y="511.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_except_entities (416 samples, 0.16%)</title><rect x="88.4973%" y="485" width="0.1638%" height="15" fill="rgb(209,50,29)" fg:x="224745" fg:w="416"/><text x="88.7473%" y="495.50"></text></g><g><title>engine::engine::world::TileWeightMap::get (31 samples, 0.01%)</title><rect x="88.6489%" y="469" width="0.0122%" height="15" fill="rgb(245,86,46)" fg:x="225130" fg:w="31"/><text x="88.8989%" y="479.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (28 samples, 0.01%)</title><rect x="88.6914%" y="453" width="0.0110%" height="15" fill="rgb(235,66,46)" fg:x="225238" fg:w="28"/><text x="88.9414%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (28 samples, 0.01%)</title><rect x="88.6914%" y="437" width="0.0110%" height="15" fill="rgb(232,148,31)" fg:x="225238" fg:w="28"/><text x="88.9414%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (28 samples, 0.01%)</title><rect x="88.6914%" y="421" width="0.0110%" height="15" fill="rgb(217,149,8)" fg:x="225238" fg:w="28"/><text x="88.9414%" y="431.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (118 samples, 0.05%)</title><rect x="88.6611%" y="501" width="0.0465%" height="15" fill="rgb(209,183,11)" fg:x="225161" fg:w="118"/><text x="88.9111%" y="511.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (105 samples, 0.04%)</title><rect x="88.6662%" y="485" width="0.0413%" height="15" fill="rgb(208,55,20)" fg:x="225174" fg:w="105"/><text x="88.9162%" y="495.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (103 samples, 0.04%)</title><rect x="88.6670%" y="469" width="0.0406%" height="15" fill="rgb(218,39,14)" fg:x="225176" fg:w="103"/><text x="88.9170%" y="479.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (37 samples, 0.01%)</title><rect x="88.7190%" y="389" width="0.0146%" height="15" fill="rgb(216,169,33)" fg:x="225308" fg:w="37"/><text x="88.9690%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (39 samples, 0.02%)</title><rect x="88.7190%" y="405" width="0.0154%" height="15" fill="rgb(233,80,24)" fg:x="225308" fg:w="39"/><text x="88.9690%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (60 samples, 0.02%)</title><rect x="88.7142%" y="453" width="0.0236%" height="15" fill="rgb(213,179,31)" fg:x="225296" fg:w="60"/><text x="88.9642%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (60 samples, 0.02%)</title><rect x="88.7142%" y="437" width="0.0236%" height="15" fill="rgb(209,19,5)" fg:x="225296" fg:w="60"/><text x="88.9642%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (60 samples, 0.02%)</title><rect x="88.7142%" y="421" width="0.0236%" height="15" fill="rgb(219,18,35)" fg:x="225296" fg:w="60"/><text x="88.9642%" y="431.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (81 samples, 0.03%)</title><rect x="88.7138%" y="469" width="0.0319%" height="15" fill="rgb(209,169,16)" fg:x="225295" fg:w="81"/><text x="88.9638%" y="479.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (130 samples, 0.05%)</title><rect x="88.7083%" y="501" width="0.0512%" height="15" fill="rgb(245,90,51)" fg:x="225281" fg:w="130"/><text x="88.9583%" y="511.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (123 samples, 0.05%)</title><rect x="88.7111%" y="485" width="0.0484%" height="15" fill="rgb(220,99,45)" fg:x="225288" fg:w="123"/><text x="88.9611%" y="495.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (35 samples, 0.01%)</title><rect x="88.7457%" y="469" width="0.0138%" height="15" fill="rgb(249,89,25)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (35 samples, 0.01%)</title><rect x="88.7457%" y="453" width="0.0138%" height="15" fill="rgb(239,193,0)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (35 samples, 0.01%)</title><rect x="88.7457%" y="437" width="0.0138%" height="15" fill="rgb(231,126,1)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (35 samples, 0.01%)</title><rect x="88.7457%" y="421" width="0.0138%" height="15" fill="rgb(243,166,3)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (35 samples, 0.01%)</title><rect x="88.7457%" y="405" width="0.0138%" height="15" fill="rgb(223,22,34)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (35 samples, 0.01%)</title><rect x="88.7457%" y="389" width="0.0138%" height="15" fill="rgb(251,52,51)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (35 samples, 0.01%)</title><rect x="88.7457%" y="373" width="0.0138%" height="15" fill="rgb(221,165,28)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (35 samples, 0.01%)</title><rect x="88.7457%" y="357" width="0.0138%" height="15" fill="rgb(218,121,47)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="367.50"></text></g><g><title>alloc::alloc::realloc (35 samples, 0.01%)</title><rect x="88.7457%" y="341" width="0.0138%" height="15" fill="rgb(209,120,9)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="351.50"></text></g><g><title>__rdl_realloc (35 samples, 0.01%)</title><rect x="88.7457%" y="325" width="0.0138%" height="15" fill="rgb(236,68,12)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (35 samples, 0.01%)</title><rect x="88.7457%" y="309" width="0.0138%" height="15" fill="rgb(225,194,26)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="319.50"></text></g><g><title>__GI___libc_realloc (35 samples, 0.01%)</title><rect x="88.7457%" y="293" width="0.0138%" height="15" fill="rgb(231,84,39)" fg:x="225376" fg:w="35"/><text x="88.9957%" y="303.50"></text></g><g><title>_int_realloc (29 samples, 0.01%)</title><rect x="88.7481%" y="277" width="0.0114%" height="15" fill="rgb(210,11,45)" fg:x="225382" fg:w="29"/><text x="88.9981%" y="287.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path_around_entities (906 samples, 0.36%)</title><rect x="88.4095%" y="533" width="0.3568%" height="15" fill="rgb(224,54,52)" fg:x="224522" fg:w="906"/><text x="88.6595%" y="543.50"></text></g><g><title>pathfinding::directed::astar::astar (902 samples, 0.36%)</title><rect x="88.4110%" y="517" width="0.3552%" height="15" fill="rgb(238,102,14)" fg:x="224526" fg:w="902"/><text x="88.6610%" y="527.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (58 samples, 0.02%)</title><rect x="88.8040%" y="421" width="0.0228%" height="15" fill="rgb(243,160,52)" fg:x="225524" fg:w="58"/><text x="89.0540%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (58 samples, 0.02%)</title><rect x="88.8040%" y="405" width="0.0228%" height="15" fill="rgb(216,114,19)" fg:x="225524" fg:w="58"/><text x="89.0540%" y="415.50"></text></g><g><title>alloc::alloc::realloc (58 samples, 0.02%)</title><rect x="88.8040%" y="389" width="0.0228%" height="15" fill="rgb(244,166,37)" fg:x="225524" fg:w="58"/><text x="89.0540%" y="399.50"></text></g><g><title>__rdl_realloc (58 samples, 0.02%)</title><rect x="88.8040%" y="373" width="0.0228%" height="15" fill="rgb(246,29,44)" fg:x="225524" fg:w="58"/><text x="89.0540%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (58 samples, 0.02%)</title><rect x="88.8040%" y="357" width="0.0228%" height="15" fill="rgb(215,56,53)" fg:x="225524" fg:w="58"/><text x="89.0540%" y="367.50"></text></g><g><title>__GI___libc_realloc (58 samples, 0.02%)</title><rect x="88.8040%" y="341" width="0.0228%" height="15" fill="rgb(217,60,2)" fg:x="225524" fg:w="58"/><text x="89.0540%" y="351.50"></text></g><g><title>_int_realloc (30 samples, 0.01%)</title><rect x="88.8150%" y="325" width="0.0118%" height="15" fill="rgb(207,26,24)" fg:x="225552" fg:w="30"/><text x="89.0650%" y="335.50"></text></g><g><title>alloc::raw_vec::finish_grow (72 samples, 0.03%)</title><rect x="88.8028%" y="437" width="0.0284%" height="15" fill="rgb(252,210,15)" fg:x="225521" fg:w="72"/><text x="89.0528%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (80 samples, 0.03%)</title><rect x="88.8024%" y="453" width="0.0315%" height="15" fill="rgb(253,209,26)" fg:x="225520" fg:w="80"/><text x="89.0524%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (82 samples, 0.03%)</title><rect x="88.8020%" y="501" width="0.0323%" height="15" fill="rgb(238,170,14)" fg:x="225519" fg:w="82"/><text x="89.0520%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (82 samples, 0.03%)</title><rect x="88.8020%" y="485" width="0.0323%" height="15" fill="rgb(216,178,15)" fg:x="225519" fg:w="82"/><text x="89.0520%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (81 samples, 0.03%)</title><rect x="88.8024%" y="469" width="0.0319%" height="15" fill="rgb(250,197,2)" fg:x="225520" fg:w="81"/><text x="89.0524%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (94 samples, 0.04%)</title><rect x="88.8009%" y="517" width="0.0370%" height="15" fill="rgb(212,70,42)" fg:x="225516" fg:w="94"/><text x="89.0509%" y="527.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (55 samples, 0.02%)</title><rect x="88.8418%" y="517" width="0.0217%" height="15" fill="rgb(227,213,9)" fg:x="225620" fg:w="55"/><text x="89.0918%" y="527.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.02%)</title><rect x="88.8418%" y="501" width="0.0217%" height="15" fill="rgb(245,99,25)" fg:x="225620" fg:w="55"/><text x="89.0918%" y="511.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (55 samples, 0.02%)</title><rect x="88.8418%" y="485" width="0.0217%" height="15" fill="rgb(250,82,29)" fg:x="225620" fg:w="55"/><text x="89.0918%" y="495.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.02%)</title><rect x="88.8418%" y="469" width="0.0217%" height="15" fill="rgb(241,226,54)" fg:x="225620" fg:w="55"/><text x="89.0918%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (55 samples, 0.02%)</title><rect x="88.8418%" y="453" width="0.0217%" height="15" fill="rgb(221,99,41)" fg:x="225620" fg:w="55"/><text x="89.0918%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (55 samples, 0.02%)</title><rect x="88.8418%" y="437" width="0.0217%" height="15" fill="rgb(213,90,21)" fg:x="225620" fg:w="55"/><text x="89.0918%" y="447.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (55 samples, 0.02%)</title><rect x="88.8418%" y="421" width="0.0217%" height="15" fill="rgb(205,208,24)" fg:x="225620" fg:w="55"/><text x="89.0918%" y="431.50"></text></g><g><title>alloc::alloc::dealloc (55 samples, 0.02%)</title><rect x="88.8418%" y="405" width="0.0217%" height="15" fill="rgb(246,31,12)" fg:x="225620" fg:w="55"/><text x="89.0918%" y="415.50"></text></g><g><title>__rdl_dealloc (55 samples, 0.02%)</title><rect x="88.8418%" y="389" width="0.0217%" height="15" fill="rgb(213,154,6)" fg:x="225620" fg:w="55"/><text x="89.0918%" y="399.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (55 samples, 0.02%)</title><rect x="88.8418%" y="373" width="0.0217%" height="15" fill="rgb(222,163,29)" fg:x="225620" fg:w="55"/><text x="89.0918%" y="383.50"></text></g><g><title>__GI___libc_free (55 samples, 0.02%)</title><rect x="88.8418%" y="357" width="0.0217%" height="15" fill="rgb(227,201,8)" fg:x="225620" fg:w="55"/><text x="89.0918%" y="367.50"></text></g><g><title>_int_free (51 samples, 0.02%)</title><rect x="88.8434%" y="341" width="0.0201%" height="15" fill="rgb(233,9,32)" fg:x="225624" fg:w="51"/><text x="89.0934%" y="351.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (123 samples, 0.05%)</title><rect x="88.8741%" y="405" width="0.0484%" height="15" fill="rgb(217,54,24)" fg:x="225702" fg:w="123"/><text x="89.1241%" y="415.50"></text></g><g><title>alloc::alloc::Global::grow_impl (123 samples, 0.05%)</title><rect x="88.8741%" y="389" width="0.0484%" height="15" fill="rgb(235,192,0)" fg:x="225702" fg:w="123"/><text x="89.1241%" y="399.50"></text></g><g><title>alloc::alloc::realloc (123 samples, 0.05%)</title><rect x="88.8741%" y="373" width="0.0484%" height="15" fill="rgb(235,45,9)" fg:x="225702" fg:w="123"/><text x="89.1241%" y="383.50"></text></g><g><title>__rdl_realloc (123 samples, 0.05%)</title><rect x="88.8741%" y="357" width="0.0484%" height="15" fill="rgb(246,42,40)" fg:x="225702" fg:w="123"/><text x="89.1241%" y="367.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (123 samples, 0.05%)</title><rect x="88.8741%" y="341" width="0.0484%" height="15" fill="rgb(248,111,24)" fg:x="225702" fg:w="123"/><text x="89.1241%" y="351.50"></text></g><g><title>__GI___libc_realloc (122 samples, 0.05%)</title><rect x="88.8745%" y="325" width="0.0480%" height="15" fill="rgb(249,65,22)" fg:x="225703" fg:w="122"/><text x="89.1245%" y="335.50"></text></g><g><title>_int_realloc (77 samples, 0.03%)</title><rect x="88.8922%" y="309" width="0.0303%" height="15" fill="rgb(238,111,51)" fg:x="225748" fg:w="77"/><text x="89.1422%" y="319.50"></text></g><g><title>_int_malloc (50 samples, 0.02%)</title><rect x="88.9028%" y="293" width="0.0197%" height="15" fill="rgb(250,118,22)" fg:x="225775" fg:w="50"/><text x="89.1528%" y="303.50"></text></g><g><title>alloc::raw_vec::finish_grow (139 samples, 0.05%)</title><rect x="88.8733%" y="421" width="0.0547%" height="15" fill="rgb(234,84,26)" fg:x="225700" fg:w="139"/><text x="89.1233%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (153 samples, 0.06%)</title><rect x="88.8702%" y="437" width="0.0602%" height="15" fill="rgb(243,172,12)" fg:x="225692" fg:w="153"/><text x="89.1202%" y="447.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (155 samples, 0.06%)</title><rect x="88.8702%" y="485" width="0.0610%" height="15" fill="rgb(236,150,49)" fg:x="225692" fg:w="155"/><text x="89.1202%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (155 samples, 0.06%)</title><rect x="88.8702%" y="469" width="0.0610%" height="15" fill="rgb(225,197,26)" fg:x="225692" fg:w="155"/><text x="89.1202%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (155 samples, 0.06%)</title><rect x="88.8702%" y="453" width="0.0610%" height="15" fill="rgb(214,17,42)" fg:x="225692" fg:w="155"/><text x="89.1202%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (168 samples, 0.07%)</title><rect x="88.8682%" y="501" width="0.0662%" height="15" fill="rgb(224,165,40)" fg:x="225687" fg:w="168"/><text x="89.1182%" y="511.50"></text></g><g><title>&lt;core::ops::range::RangeInclusive&lt;T&gt; as core::iter::range::RangeInclusiveIteratorImpl&gt;::spec_next (27 samples, 0.01%)</title><rect x="88.9343%" y="485" width="0.0106%" height="15" fill="rgb(246,100,4)" fg:x="225855" fg:w="27"/><text x="89.1843%" y="495.50"></text></g><g><title>engine::engine::world::Position::neighbors (208 samples, 0.08%)</title><rect x="88.8635%" y="517" width="0.0819%" height="15" fill="rgb(222,103,0)" fg:x="225675" fg:w="208"/><text x="89.1135%" y="527.50"></text></g><g><title>core::iter::range::&lt;impl core::iter::traits::iterator::Iterator for core::ops::range::RangeInclusive&lt;A&gt;&gt;::next (28 samples, 0.01%)</title><rect x="88.9343%" y="501" width="0.0110%" height="15" fill="rgb(227,189,26)" fg:x="225855" fg:w="28"/><text x="89.1843%" y="511.50"></text></g><g><title>engine::engine::actor::pathfinding::nearby_entities (471 samples, 0.19%)</title><rect x="88.7662%" y="533" width="0.1855%" height="15" fill="rgb(214,202,17)" fg:x="225428" fg:w="471"/><text x="89.0162%" y="543.50"></text></g><g><title>engine::engine::actor::pathfinding::local_avoidance (2,048 samples, 0.81%)</title><rect x="88.1504%" y="549" width="0.8064%" height="15" fill="rgb(229,111,3)" fg:x="223864" fg:w="2048"/><text x="88.4004%" y="559.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (77 samples, 0.03%)</title><rect x="88.9631%" y="421" width="0.0303%" height="15" fill="rgb(229,172,15)" fg:x="225928" fg:w="77"/><text x="89.2131%" y="431.50"></text></g><g><title>alloc::alloc::Global::grow_impl (77 samples, 0.03%)</title><rect x="88.9631%" y="405" width="0.0303%" height="15" fill="rgb(230,224,35)" fg:x="225928" fg:w="77"/><text x="89.2131%" y="415.50"></text></g><g><title>alloc::alloc::realloc (77 samples, 0.03%)</title><rect x="88.9631%" y="389" width="0.0303%" height="15" fill="rgb(251,141,6)" fg:x="225928" fg:w="77"/><text x="89.2131%" y="399.50"></text></g><g><title>__rdl_realloc (77 samples, 0.03%)</title><rect x="88.9631%" y="373" width="0.0303%" height="15" fill="rgb(225,208,6)" fg:x="225928" fg:w="77"/><text x="89.2131%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (77 samples, 0.03%)</title><rect x="88.9631%" y="357" width="0.0303%" height="15" fill="rgb(246,181,16)" fg:x="225928" fg:w="77"/><text x="89.2131%" y="367.50"></text></g><g><title>__GI___libc_realloc (77 samples, 0.03%)</title><rect x="88.9631%" y="341" width="0.0303%" height="15" fill="rgb(227,129,36)" fg:x="225928" fg:w="77"/><text x="89.2131%" y="351.50"></text></g><g><title>_int_realloc (62 samples, 0.02%)</title><rect x="88.9690%" y="325" width="0.0244%" height="15" fill="rgb(248,117,24)" fg:x="225943" fg:w="62"/><text x="89.2190%" y="335.50"></text></g><g><title>_int_malloc (48 samples, 0.02%)</title><rect x="88.9745%" y="309" width="0.0189%" height="15" fill="rgb(214,185,35)" fg:x="225957" fg:w="48"/><text x="89.2245%" y="319.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (78 samples, 0.03%)</title><rect x="88.9631%" y="517" width="0.0307%" height="15" fill="rgb(236,150,34)" fg:x="225928" fg:w="78"/><text x="89.2131%" y="527.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (78 samples, 0.03%)</title><rect x="88.9631%" y="501" width="0.0307%" height="15" fill="rgb(243,228,27)" fg:x="225928" fg:w="78"/><text x="89.2131%" y="511.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (78 samples, 0.03%)</title><rect x="88.9631%" y="485" width="0.0307%" height="15" fill="rgb(245,77,44)" fg:x="225928" fg:w="78"/><text x="89.2131%" y="495.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (78 samples, 0.03%)</title><rect x="88.9631%" y="469" width="0.0307%" height="15" fill="rgb(235,214,42)" fg:x="225928" fg:w="78"/><text x="89.2131%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (78 samples, 0.03%)</title><rect x="88.9631%" y="453" width="0.0307%" height="15" fill="rgb(221,74,3)" fg:x="225928" fg:w="78"/><text x="89.2131%" y="463.50"></text></g><g><title>alloc::raw_vec::finish_grow (78 samples, 0.03%)</title><rect x="88.9631%" y="437" width="0.0307%" height="15" fill="rgb(206,121,29)" fg:x="225928" fg:w="78"/><text x="89.2131%" y="447.50"></text></g><g><title>core::ptr::read (26 samples, 0.01%)</title><rect x="89.0257%" y="485" width="0.0102%" height="15" fill="rgb(249,131,53)" fg:x="226087" fg:w="26"/><text x="89.2757%" y="495.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (65 samples, 0.03%)</title><rect x="89.0214%" y="501" width="0.0256%" height="15" fill="rgb(236,170,29)" fg:x="226076" fg:w="65"/><text x="89.2714%" y="511.50"></text></g><g><title>pathfinding::directed::astar::astar (28 samples, 0.01%)</title><rect x="89.0359%" y="485" width="0.0110%" height="15" fill="rgb(247,96,15)" fg:x="226113" fg:w="28"/><text x="89.2859%" y="495.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (26 samples, 0.01%)</title><rect x="89.0584%" y="453" width="0.0102%" height="15" fill="rgb(211,210,7)" fg:x="226170" fg:w="26"/><text x="89.3084%" y="463.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (43 samples, 0.02%)</title><rect x="89.0828%" y="421" width="0.0169%" height="15" fill="rgb(240,88,50)" fg:x="226232" fg:w="43"/><text x="89.3328%" y="431.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (57 samples, 0.02%)</title><rect x="89.0800%" y="437" width="0.0224%" height="15" fill="rgb(209,229,26)" fg:x="226225" fg:w="57"/><text x="89.3300%" y="447.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (60 samples, 0.02%)</title><rect x="89.1025%" y="421" width="0.0236%" height="15" fill="rgb(210,68,23)" fg:x="226282" fg:w="60"/><text x="89.3525%" y="431.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (76 samples, 0.03%)</title><rect x="89.1025%" y="437" width="0.0299%" height="15" fill="rgb(229,180,13)" fg:x="226282" fg:w="76"/><text x="89.3525%" y="447.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (76 samples, 0.03%)</title><rect x="89.1367%" y="437" width="0.0299%" height="15" fill="rgb(236,53,44)" fg:x="226369" fg:w="76"/><text x="89.3867%" y="447.50"></text></g><g><title>core::cmp::PartialOrd::le (76 samples, 0.03%)</title><rect x="89.1367%" y="421" width="0.0299%" height="15" fill="rgb(244,214,29)" fg:x="226369" fg:w="76"/><text x="89.3867%" y="431.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (54 samples, 0.02%)</title><rect x="89.1454%" y="405" width="0.0213%" height="15" fill="rgb(220,75,29)" fg:x="226391" fg:w="54"/><text x="89.3954%" y="415.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (41 samples, 0.02%)</title><rect x="89.1505%" y="389" width="0.0161%" height="15" fill="rgb(214,183,37)" fg:x="226404" fg:w="41"/><text x="89.4005%" y="399.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_down_to_bottom (259 samples, 0.10%)</title><rect x="89.0686%" y="453" width="0.1020%" height="15" fill="rgb(239,117,29)" fg:x="226196" fg:w="259"/><text x="89.3186%" y="463.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop (299 samples, 0.12%)</title><rect x="89.0544%" y="501" width="0.1177%" height="15" fill="rgb(237,171,35)" fg:x="226160" fg:w="299"/><text x="89.3044%" y="511.50"></text></g><g><title>core::option::Option&lt;T&gt;::map (294 samples, 0.12%)</title><rect x="89.0564%" y="485" width="0.1158%" height="15" fill="rgb(229,178,53)" fg:x="226165" fg:w="294"/><text x="89.3064%" y="495.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::pop::{{closure}} (292 samples, 0.11%)</title><rect x="89.0572%" y="469" width="0.1150%" height="15" fill="rgb(210,102,19)" fg:x="226167" fg:w="292"/><text x="89.3072%" y="479.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (82 samples, 0.03%)</title><rect x="89.1785%" y="485" width="0.0323%" height="15" fill="rgb(235,127,22)" fg:x="226475" fg:w="82"/><text x="89.4285%" y="495.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::get (28 samples, 0.01%)</title><rect x="89.2486%" y="469" width="0.0110%" height="15" fill="rgb(244,31,31)" fg:x="226653" fg:w="28"/><text x="89.4986%" y="479.50"></text></g><g><title>core::slice::&lt;impl [T]&gt;::get_unchecked (28 samples, 0.01%)</title><rect x="89.2486%" y="453" width="0.0110%" height="15" fill="rgb(231,43,21)" fg:x="226653" fg:w="28"/><text x="89.4986%" y="463.50"></text></g><g><title>&lt;usize as core::slice::index::SliceIndex&lt;[T]&gt;&gt;::get_unchecked (28 samples, 0.01%)</title><rect x="89.2486%" y="437" width="0.0110%" height="15" fill="rgb(217,131,35)" fg:x="226653" fg:w="28"/><text x="89.4986%" y="447.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::add (28 samples, 0.01%)</title><rect x="89.2486%" y="421" width="0.0110%" height="15" fill="rgb(221,149,4)" fg:x="226653" fg:w="28"/><text x="89.4986%" y="431.50"></text></g><g><title>core::ptr::const_ptr::&lt;impl *const T&gt;::offset (28 samples, 0.01%)</title><rect x="89.2486%" y="405" width="0.0110%" height="15" fill="rgb(232,170,28)" fg:x="226653" fg:w="28"/><text x="89.4986%" y="415.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (70 samples, 0.03%)</title><rect x="89.2596%" y="453" width="0.0276%" height="15" fill="rgb(238,56,10)" fg:x="226681" fg:w="70"/><text x="89.5096%" y="463.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::move_to (92 samples, 0.04%)</title><rect x="89.2596%" y="469" width="0.0362%" height="15" fill="rgb(235,196,14)" fg:x="226681" fg:w="92"/><text x="89.5096%" y="479.50"></text></g><g><title>alloc::collections::binary_heap::Hole&lt;T&gt;::new (236 samples, 0.09%)</title><rect x="89.2958%" y="469" width="0.0929%" height="15" fill="rgb(216,45,48)" fg:x="226773" fg:w="236"/><text x="89.5458%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd&lt;&amp;B&gt; for &amp;A&gt;::le (257 samples, 0.10%)</title><rect x="89.3888%" y="469" width="0.1012%" height="15" fill="rgb(238,213,17)" fg:x="227009" fg:w="257"/><text x="89.6388%" y="479.50"></text></g><g><title>core::cmp::PartialOrd::le (257 samples, 0.10%)</title><rect x="89.3888%" y="453" width="0.1012%" height="15" fill="rgb(212,13,2)" fg:x="227009" fg:w="257"/><text x="89.6388%" y="463.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::PartialOrd&gt;::partial_cmp (209 samples, 0.08%)</title><rect x="89.4077%" y="437" width="0.0823%" height="15" fill="rgb(240,114,20)" fg:x="227057" fg:w="209"/><text x="89.6577%" y="447.50"></text></g><g><title>&lt;pathfinding::directed::astar::SmallestCostHolder&lt;K&gt; as core::cmp::Ord&gt;::cmp (209 samples, 0.08%)</title><rect x="89.4077%" y="421" width="0.0823%" height="15" fill="rgb(228,41,40)" fg:x="227057" fg:w="209"/><text x="89.6577%" y="431.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::Ord for i64&gt;::cmp (74 samples, 0.03%)</title><rect x="89.4608%" y="405" width="0.0291%" height="15" fill="rgb(244,132,35)" fg:x="227192" fg:w="74"/><text x="89.7108%" y="415.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::sift_up (765 samples, 0.30%)</title><rect x="89.2108%" y="485" width="0.3012%" height="15" fill="rgb(253,189,4)" fg:x="226557" fg:w="765"/><text x="89.4608%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::collections::binary_heap::Hole&lt;pathfinding::directed::astar::SmallestCostHolder&lt;i64&gt;&gt;&gt; (56 samples, 0.02%)</title><rect x="89.4900%" y="469" width="0.0221%" height="15" fill="rgb(224,37,19)" fg:x="227266" fg:w="56"/><text x="89.7400%" y="479.50"></text></g><g><title>&lt;alloc::collections::binary_heap::Hole&lt;T&gt; as core::ops::drop::Drop&gt;::drop (56 samples, 0.02%)</title><rect x="89.4900%" y="453" width="0.0221%" height="15" fill="rgb(235,223,18)" fg:x="227266" fg:w="56"/><text x="89.7400%" y="463.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (56 samples, 0.02%)</title><rect x="89.4900%" y="437" width="0.0221%" height="15" fill="rgb(235,163,25)" fg:x="227266" fg:w="56"/><text x="89.7400%" y="447.50"></text></g><g><title>__memmove_avx_unaligned_erms (28 samples, 0.01%)</title><rect x="89.5305%" y="277" width="0.0110%" height="15" fill="rgb(217,145,28)" fg:x="227369" fg:w="28"/><text x="89.7805%" y="287.50"></text></g><g><title>_int_malloc (77 samples, 0.03%)</title><rect x="89.5486%" y="277" width="0.0303%" height="15" fill="rgb(223,223,32)" fg:x="227415" fg:w="77"/><text x="89.7986%" y="287.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (153 samples, 0.06%)</title><rect x="89.5195%" y="389" width="0.0602%" height="15" fill="rgb(227,189,39)" fg:x="227341" fg:w="153"/><text x="89.7695%" y="399.50"></text></g><g><title>alloc::alloc::Global::grow_impl (153 samples, 0.06%)</title><rect x="89.5195%" y="373" width="0.0602%" height="15" fill="rgb(248,10,22)" fg:x="227341" fg:w="153"/><text x="89.7695%" y="383.50"></text></g><g><title>alloc::alloc::realloc (153 samples, 0.06%)</title><rect x="89.5195%" y="357" width="0.0602%" height="15" fill="rgb(248,46,39)" fg:x="227341" fg:w="153"/><text x="89.7695%" y="367.50"></text></g><g><title>__rdl_realloc (153 samples, 0.06%)</title><rect x="89.5195%" y="341" width="0.0602%" height="15" fill="rgb(248,113,48)" fg:x="227341" fg:w="153"/><text x="89.7695%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (153 samples, 0.06%)</title><rect x="89.5195%" y="325" width="0.0602%" height="15" fill="rgb(245,16,25)" fg:x="227341" fg:w="153"/><text x="89.7695%" y="335.50"></text></g><g><title>__GI___libc_realloc (153 samples, 0.06%)</title><rect x="89.5195%" y="309" width="0.0602%" height="15" fill="rgb(249,152,16)" fg:x="227341" fg:w="153"/><text x="89.7695%" y="319.50"></text></g><g><title>_int_realloc (133 samples, 0.05%)</title><rect x="89.5274%" y="293" width="0.0524%" height="15" fill="rgb(250,16,1)" fg:x="227361" fg:w="133"/><text x="89.7774%" y="303.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (158 samples, 0.06%)</title><rect x="89.5187%" y="469" width="0.0622%" height="15" fill="rgb(249,138,3)" fg:x="227339" fg:w="158"/><text x="89.7687%" y="479.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (158 samples, 0.06%)</title><rect x="89.5187%" y="453" width="0.0622%" height="15" fill="rgb(227,71,41)" fg:x="227339" fg:w="158"/><text x="89.7687%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (157 samples, 0.06%)</title><rect x="89.5191%" y="437" width="0.0618%" height="15" fill="rgb(209,184,23)" fg:x="227340" fg:w="157"/><text x="89.7691%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (157 samples, 0.06%)</title><rect x="89.5191%" y="421" width="0.0618%" height="15" fill="rgb(223,215,31)" fg:x="227340" fg:w="157"/><text x="89.7691%" y="431.50"></text></g><g><title>alloc::raw_vec::finish_grow (156 samples, 0.06%)</title><rect x="89.5195%" y="405" width="0.0614%" height="15" fill="rgb(210,146,28)" fg:x="227341" fg:w="156"/><text x="89.7695%" y="415.50"></text></g><g><title>alloc::collections::binary_heap::BinaryHeap&lt;T&gt;::push (1,347 samples, 0.53%)</title><rect x="89.1722%" y="501" width="0.5304%" height="15" fill="rgb(209,183,41)" fg:x="226459" fg:w="1347"/><text x="89.4222%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (484 samples, 0.19%)</title><rect x="89.5120%" y="485" width="0.1906%" height="15" fill="rgb(209,224,45)" fg:x="227322" fg:w="484"/><text x="89.7620%" y="495.50"></text></g><g><title>core::ptr::write (309 samples, 0.12%)</title><rect x="89.5809%" y="469" width="0.1217%" height="15" fill="rgb(224,209,51)" fg:x="227497" fg:w="309"/><text x="89.8309%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (204 samples, 0.08%)</title><rect x="89.7038%" y="405" width="0.0803%" height="15" fill="rgb(223,17,39)" fg:x="227809" fg:w="204"/><text x="89.9538%" y="415.50"></text></g><g><title>alloc::alloc::dealloc (204 samples, 0.08%)</title><rect x="89.7038%" y="389" width="0.0803%" height="15" fill="rgb(234,204,37)" fg:x="227809" fg:w="204"/><text x="89.9538%" y="399.50"></text></g><g><title>__rdl_dealloc (204 samples, 0.08%)</title><rect x="89.7038%" y="373" width="0.0803%" height="15" fill="rgb(236,120,5)" fg:x="227809" fg:w="204"/><text x="89.9538%" y="383.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (201 samples, 0.08%)</title><rect x="89.7050%" y="357" width="0.0791%" height="15" fill="rgb(248,97,27)" fg:x="227812" fg:w="201"/><text x="89.9550%" y="367.50"></text></g><g><title>__GI___libc_free (201 samples, 0.08%)</title><rect x="89.7050%" y="341" width="0.0791%" height="15" fill="rgb(240,66,17)" fg:x="227812" fg:w="201"/><text x="89.9550%" y="351.50"></text></g><g><title>_int_free (186 samples, 0.07%)</title><rect x="89.7109%" y="325" width="0.0732%" height="15" fill="rgb(210,79,3)" fg:x="227827" fg:w="186"/><text x="89.9609%" y="335.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (207 samples, 0.08%)</title><rect x="89.7038%" y="421" width="0.0815%" height="15" fill="rgb(214,176,27)" fg:x="227809" fg:w="207"/><text x="89.9538%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;(engine::engine::world::Position,i64)&gt;&gt; (209 samples, 0.08%)</title><rect x="89.7038%" y="501" width="0.0823%" height="15" fill="rgb(235,185,3)" fg:x="227809" fg:w="209"/><text x="89.9538%" y="511.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (209 samples, 0.08%)</title><rect x="89.7038%" y="485" width="0.0823%" height="15" fill="rgb(227,24,12)" fg:x="227809" fg:w="209"/><text x="89.9538%" y="495.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;(engine::engine::world::Position,i64),alloc::alloc::Global&gt;&gt; (209 samples, 0.08%)</title><rect x="89.7038%" y="469" width="0.0823%" height="15" fill="rgb(252,169,48)" fg:x="227809" fg:w="209"/><text x="89.9538%" y="479.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (209 samples, 0.08%)</title><rect x="89.7038%" y="453" width="0.0823%" height="15" fill="rgb(212,65,1)" fg:x="227809" fg:w="209"/><text x="89.9538%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;(engine::engine::world::Position,i64)&gt;&gt; (209 samples, 0.08%)</title><rect x="89.7038%" y="437" width="0.0823%" height="15" fill="rgb(242,39,24)" fg:x="227809" fg:w="209"/><text x="89.9538%" y="447.50"></text></g><g><title>engine::engine::actor::pathfinding::diagonal_distance (91 samples, 0.04%)</title><rect x="89.7892%" y="485" width="0.0358%" height="15" fill="rgb(249,32,23)" fg:x="228026" fg:w="91"/><text x="90.0392%" y="495.50"></text></g><g><title>pathfinding::utils::absdiff (72 samples, 0.03%)</title><rect x="89.7967%" y="469" width="0.0284%" height="15" fill="rgb(251,195,23)" fg:x="228045" fg:w="72"/><text x="90.0467%" y="479.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialOrd for i64&gt;::lt (67 samples, 0.03%)</title><rect x="89.7987%" y="453" width="0.0264%" height="15" fill="rgb(236,174,8)" fg:x="228050" fg:w="67"/><text x="90.0487%" y="463.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (39 samples, 0.02%)</title><rect x="89.8869%" y="469" width="0.0154%" height="15" fill="rgb(220,197,8)" fg:x="228274" fg:w="39"/><text x="90.1369%" y="479.50"></text></g><g><title>_int_free (39 samples, 0.02%)</title><rect x="90.0223%" y="261" width="0.0154%" height="15" fill="rgb(240,108,37)" fg:x="228618" fg:w="39"/><text x="90.2723%" y="271.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (417 samples, 0.16%)</title><rect x="89.9333%" y="373" width="0.1642%" height="15" fill="rgb(232,176,24)" fg:x="228392" fg:w="417"/><text x="90.1833%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (417 samples, 0.16%)</title><rect x="89.9333%" y="357" width="0.1642%" height="15" fill="rgb(243,35,29)" fg:x="228392" fg:w="417"/><text x="90.1833%" y="367.50"></text></g><g><title>alloc::alloc::realloc (417 samples, 0.16%)</title><rect x="89.9333%" y="341" width="0.1642%" height="15" fill="rgb(210,37,18)" fg:x="228392" fg:w="417"/><text x="90.1833%" y="351.50"></text></g><g><title>__rdl_realloc (417 samples, 0.16%)</title><rect x="89.9333%" y="325" width="0.1642%" height="15" fill="rgb(224,184,40)" fg:x="228392" fg:w="417"/><text x="90.1833%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (417 samples, 0.16%)</title><rect x="89.9333%" y="309" width="0.1642%" height="15" fill="rgb(236,39,29)" fg:x="228392" fg:w="417"/><text x="90.1833%" y="319.50"></text></g><g><title>__GI___libc_realloc (413 samples, 0.16%)</title><rect x="89.9349%" y="293" width="0.1626%" height="15" fill="rgb(232,48,39)" fg:x="228396" fg:w="413"/><text x="90.1849%" y="303.50"></text></g><g><title>_int_realloc (245 samples, 0.10%)</title><rect x="90.0011%" y="277" width="0.0965%" height="15" fill="rgb(236,34,42)" fg:x="228564" fg:w="245"/><text x="90.2511%" y="287.50"></text></g><g><title>_int_malloc (152 samples, 0.06%)</title><rect x="90.0377%" y="261" width="0.0599%" height="15" fill="rgb(243,106,37)" fg:x="228657" fg:w="152"/><text x="90.2877%" y="271.50"></text></g><g><title>__GI___libc_malloc (54 samples, 0.02%)</title><rect x="90.0975%" y="373" width="0.0213%" height="15" fill="rgb(218,96,6)" fg:x="228809" fg:w="54"/><text x="90.3475%" y="383.50"></text></g><g><title>alloc::raw_vec::finish_grow (492 samples, 0.19%)</title><rect x="89.9282%" y="389" width="0.1937%" height="15" fill="rgb(235,130,12)" fg:x="228379" fg:w="492"/><text x="90.1782%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (544 samples, 0.21%)</title><rect x="89.9160%" y="405" width="0.2142%" height="15" fill="rgb(231,95,0)" fg:x="228348" fg:w="544"/><text x="90.1660%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (558 samples, 0.22%)</title><rect x="89.9144%" y="437" width="0.2197%" height="15" fill="rgb(228,12,23)" fg:x="228344" fg:w="558"/><text x="90.1644%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (554 samples, 0.22%)</title><rect x="89.9160%" y="421" width="0.2181%" height="15" fill="rgb(216,12,1)" fg:x="228348" fg:w="554"/><text x="90.1660%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (561 samples, 0.22%)</title><rect x="89.9144%" y="453" width="0.2209%" height="15" fill="rgb(219,59,3)" fg:x="228344" fg:w="561"/><text x="90.1644%" y="463.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (652 samples, 0.26%)</title><rect x="89.9022%" y="469" width="0.2567%" height="15" fill="rgb(215,208,46)" fg:x="228313" fg:w="652"/><text x="90.1522%" y="479.50"></text></g><g><title>core::ptr::write (60 samples, 0.02%)</title><rect x="90.1353%" y="453" width="0.0236%" height="15" fill="rgb(254,224,29)" fg:x="228905" fg:w="60"/><text x="90.3853%" y="463.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (90 samples, 0.04%)</title><rect x="90.1590%" y="389" width="0.0354%" height="15" fill="rgb(232,14,29)" fg:x="228965" fg:w="90"/><text x="90.4090%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (90 samples, 0.04%)</title><rect x="90.1590%" y="373" width="0.0354%" height="15" fill="rgb(208,45,52)" fg:x="228965" fg:w="90"/><text x="90.4090%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (90 samples, 0.04%)</title><rect x="90.1590%" y="357" width="0.0354%" height="15" fill="rgb(234,191,28)" fg:x="228965" fg:w="90"/><text x="90.4090%" y="367.50"></text></g><g><title>__rdl_dealloc (90 samples, 0.04%)</title><rect x="90.1590%" y="341" width="0.0354%" height="15" fill="rgb(244,67,43)" fg:x="228965" fg:w="90"/><text x="90.4090%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (90 samples, 0.04%)</title><rect x="90.1590%" y="325" width="0.0354%" height="15" fill="rgb(236,189,24)" fg:x="228965" fg:w="90"/><text x="90.4090%" y="335.50"></text></g><g><title>__GI___libc_free (90 samples, 0.04%)</title><rect x="90.1590%" y="309" width="0.0354%" height="15" fill="rgb(239,214,33)" fg:x="228965" fg:w="90"/><text x="90.4090%" y="319.50"></text></g><g><title>_int_free (60 samples, 0.02%)</title><rect x="90.1708%" y="293" width="0.0236%" height="15" fill="rgb(226,176,41)" fg:x="228995" fg:w="60"/><text x="90.4208%" y="303.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::into_iter::IntoIter&lt;engine::engine::world::Position&gt;&gt; (91 samples, 0.04%)</title><rect x="90.1590%" y="469" width="0.0358%" height="15" fill="rgb(248,47,8)" fg:x="228965" fg:w="91"/><text x="90.4090%" y="479.50"></text></g><g><title>&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.04%)</title><rect x="90.1590%" y="453" width="0.0358%" height="15" fill="rgb(218,81,44)" fg:x="228965" fg:w="91"/><text x="90.4090%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;engine::engine::world::Position,alloc::alloc::Global&gt;&gt; (91 samples, 0.04%)</title><rect x="90.1590%" y="437" width="0.0358%" height="15" fill="rgb(213,98,6)" fg:x="228965" fg:w="91"/><text x="90.4090%" y="447.50"></text></g><g><title>&lt;&lt;alloc::vec::into_iter::IntoIter&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop::DropGuard&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (91 samples, 0.04%)</title><rect x="90.1590%" y="421" width="0.0358%" height="15" fill="rgb(222,85,22)" fg:x="228965" fg:w="91"/><text x="90.4090%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;engine::engine::world::Position&gt;&gt; (91 samples, 0.04%)</title><rect x="90.1590%" y="405" width="0.0358%" height="15" fill="rgb(239,46,39)" fg:x="228965" fg:w="91"/><text x="90.4090%" y="415.50"></text></g><g><title>alloc::raw_vec::finish_grow (76 samples, 0.03%)</title><rect x="90.2117%" y="373" width="0.0299%" height="15" fill="rgb(237,12,29)" fg:x="229099" fg:w="76"/><text x="90.4617%" y="383.50"></text></g><g><title>__GI___libc_malloc (68 samples, 0.03%)</title><rect x="90.2149%" y="357" width="0.0268%" height="15" fill="rgb(214,77,8)" fg:x="229107" fg:w="68"/><text x="90.4649%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (112 samples, 0.04%)</title><rect x="90.2070%" y="389" width="0.0441%" height="15" fill="rgb(217,168,37)" fg:x="229087" fg:w="112"/><text x="90.4570%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (116 samples, 0.05%)</title><rect x="90.2070%" y="437" width="0.0457%" height="15" fill="rgb(221,217,23)" fg:x="229087" fg:w="116"/><text x="90.4570%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (116 samples, 0.05%)</title><rect x="90.2070%" y="421" width="0.0457%" height="15" fill="rgb(243,229,36)" fg:x="229087" fg:w="116"/><text x="90.4570%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (116 samples, 0.05%)</title><rect x="90.2070%" y="405" width="0.0457%" height="15" fill="rgb(251,163,40)" fg:x="229087" fg:w="116"/><text x="90.4570%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (188 samples, 0.07%)</title><rect x="90.2019%" y="453" width="0.0740%" height="15" fill="rgb(237,222,12)" fg:x="229074" fg:w="188"/><text x="90.4519%" y="463.50"></text></g><g><title>core::ptr::write (59 samples, 0.02%)</title><rect x="90.2527%" y="437" width="0.0232%" height="15" fill="rgb(248,132,6)" fg:x="229203" fg:w="59"/><text x="90.5027%" y="447.50"></text></g><g><title>engine::engine::world::Position::corner_neighbors (195 samples, 0.08%)</title><rect x="90.2003%" y="469" width="0.0768%" height="15" fill="rgb(227,167,50)" fg:x="229070" fg:w="195"/><text x="90.4503%" y="479.50"></text></g><g><title>alloc::raw_vec::finish_grow (55 samples, 0.02%)</title><rect x="90.2925%" y="373" width="0.0217%" height="15" fill="rgb(242,84,37)" fg:x="229304" fg:w="55"/><text x="90.5425%" y="383.50"></text></g><g><title>__GI___libc_malloc (43 samples, 0.02%)</title><rect x="90.2972%" y="357" width="0.0169%" height="15" fill="rgb(212,4,50)" fg:x="229316" fg:w="43"/><text x="90.5472%" y="367.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (80 samples, 0.03%)</title><rect x="90.2862%" y="389" width="0.0315%" height="15" fill="rgb(230,228,32)" fg:x="229288" fg:w="80"/><text x="90.5362%" y="399.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (84 samples, 0.03%)</title><rect x="90.2850%" y="437" width="0.0331%" height="15" fill="rgb(248,217,23)" fg:x="229285" fg:w="84"/><text x="90.5350%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (84 samples, 0.03%)</title><rect x="90.2850%" y="421" width="0.0331%" height="15" fill="rgb(238,197,32)" fg:x="229285" fg:w="84"/><text x="90.5350%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (81 samples, 0.03%)</title><rect x="90.2862%" y="405" width="0.0319%" height="15" fill="rgb(236,106,1)" fg:x="229288" fg:w="81"/><text x="90.5362%" y="415.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (172 samples, 0.07%)</title><rect x="90.2799%" y="453" width="0.0677%" height="15" fill="rgb(219,228,13)" fg:x="229272" fg:w="172"/><text x="90.5299%" y="463.50"></text></g><g><title>core::ptr::write (75 samples, 0.03%)</title><rect x="90.3180%" y="437" width="0.0295%" height="15" fill="rgb(238,30,35)" fg:x="229369" fg:w="75"/><text x="90.5680%" y="447.50"></text></g><g><title>engine::engine::world::Position::side_neighbors (183 samples, 0.07%)</title><rect x="90.2771%" y="469" width="0.0721%" height="15" fill="rgb(236,70,23)" fg:x="229265" fg:w="183"/><text x="90.5271%" y="479.50"></text></g><g><title>engine::engine::actor::pathfinding::get_path::{{closure}} (1,595 samples, 0.63%)</title><rect x="89.7861%" y="501" width="0.6281%" height="15" fill="rgb(249,104,48)" fg:x="228018" fg:w="1595"/><text x="90.0361%" y="511.50"></text></g><g><title>engine::engine::actor::pathfinding::neighbors_with_weights (1,496 samples, 0.59%)</title><rect x="89.8250%" y="485" width="0.5891%" height="15" fill="rgb(254,117,50)" fg:x="228117" fg:w="1496"/><text x="90.0750%" y="495.50"></text></g><g><title>engine::engine::world::TileWeightMap::get (165 samples, 0.06%)</title><rect x="90.3492%" y="469" width="0.0650%" height="15" fill="rgb(223,152,4)" fg:x="229448" fg:w="165"/><text x="90.5992%" y="479.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::hash (48 samples, 0.02%)</title><rect x="90.4141%" y="485" width="0.0189%" height="15" fill="rgb(245,6,2)" fg:x="229613" fg:w="48"/><text x="90.6641%" y="495.50"></text></g><g><title>&lt;engine::engine::world::Position as core::hash::Hash&gt;::hash (48 samples, 0.02%)</title><rect x="90.4141%" y="469" width="0.0189%" height="15" fill="rgb(249,150,24)" fg:x="229613" fg:w="48"/><text x="90.6641%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for i64&gt;::hash (48 samples, 0.02%)</title><rect x="90.4141%" y="453" width="0.0189%" height="15" fill="rgb(228,185,42)" fg:x="229613" fg:w="48"/><text x="90.6641%" y="463.50"></text></g><g><title>core::hash::Hasher::write_i64 (48 samples, 0.02%)</title><rect x="90.4141%" y="437" width="0.0189%" height="15" fill="rgb(226,39,33)" fg:x="229613" fg:w="48"/><text x="90.6641%" y="447.50"></text></g><g><title>&lt;rustc_hash::FxHasher as core::hash::Hasher&gt;::write_u64 (48 samples, 0.02%)</title><rect x="90.4141%" y="421" width="0.0189%" height="15" fill="rgb(221,166,19)" fg:x="229613" fg:w="48"/><text x="90.6641%" y="431.50"></text></g><g><title>rustc_hash::FxHasher::add_to_hash (48 samples, 0.02%)</title><rect x="90.4141%" y="405" width="0.0189%" height="15" fill="rgb(209,109,2)" fg:x="229613" fg:w="48"/><text x="90.6641%" y="415.50"></text></g><g><title>core::num::&lt;impl usize&gt;::wrapping_mul (39 samples, 0.02%)</title><rect x="90.4177%" y="389" width="0.0154%" height="15" fill="rgb(252,216,26)" fg:x="229622" fg:w="39"/><text x="90.6677%" y="399.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (33 samples, 0.01%)</title><rect x="90.5354%" y="405" width="0.0130%" height="15" fill="rgb(227,173,36)" fg:x="229921" fg:w="33"/><text x="90.7854%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::inner::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (66 samples, 0.03%)</title><rect x="90.5240%" y="421" width="0.0260%" height="15" fill="rgb(209,90,7)" fg:x="229892" fg:w="66"/><text x="90.7740%" y="431.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (150 samples, 0.06%)</title><rect x="90.4992%" y="437" width="0.0591%" height="15" fill="rgb(250,194,11)" fg:x="229829" fg:w="150"/><text x="90.7492%" y="447.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (197 samples, 0.08%)</title><rect x="90.4874%" y="453" width="0.0776%" height="15" fill="rgb(220,72,50)" fg:x="229799" fg:w="197"/><text x="90.7374%" y="463.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (50 samples, 0.02%)</title><rect x="90.5701%" y="405" width="0.0197%" height="15" fill="rgb(222,106,48)" fg:x="230009" fg:w="50"/><text x="90.8201%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (50 samples, 0.02%)</title><rect x="90.5701%" y="389" width="0.0197%" height="15" fill="rgb(216,220,45)" fg:x="230009" fg:w="50"/><text x="90.8201%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (50 samples, 0.02%)</title><rect x="90.5701%" y="373" width="0.0197%" height="15" fill="rgb(234,112,18)" fg:x="230009" fg:w="50"/><text x="90.8201%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_cmpeq_epi8 (37 samples, 0.01%)</title><rect x="90.5897%" y="389" width="0.0146%" height="15" fill="rgb(206,179,9)" fg:x="230059" fg:w="37"/><text x="90.8397%" y="399.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_byte (66 samples, 0.03%)</title><rect x="90.5897%" y="405" width="0.0260%" height="15" fill="rgb(215,115,40)" fg:x="230059" fg:w="66"/><text x="90.8397%" y="415.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set1_epi8 (29 samples, 0.01%)</title><rect x="90.6043%" y="389" width="0.0114%" height="15" fill="rgb(222,69,34)" fg:x="230096" fg:w="29"/><text x="90.8543%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_set_epi8 (29 samples, 0.01%)</title><rect x="90.6043%" y="373" width="0.0114%" height="15" fill="rgb(209,161,10)" fg:x="230096" fg:w="29"/><text x="90.8543%" y="383.50"></text></g><g><title>core::core_arch::simd::i8x16::new (29 samples, 0.01%)</title><rect x="90.6043%" y="357" width="0.0114%" height="15" fill="rgb(217,6,38)" fg:x="230096" fg:w="29"/><text x="90.8543%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::iter_hash (138 samples, 0.05%)</title><rect x="90.5649%" y="453" width="0.0543%" height="15" fill="rgb(229,229,48)" fg:x="229996" fg:w="138"/><text x="90.8149%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawIterHash&lt;T,A&gt;::new (138 samples, 0.05%)</title><rect x="90.5649%" y="437" width="0.0543%" height="15" fill="rgb(225,21,28)" fg:x="229996" fg:w="138"/><text x="90.8149%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawIterHashInner&lt;A&gt;::new (138 samples, 0.05%)</title><rect x="90.5649%" y="421" width="0.0543%" height="15" fill="rgb(206,33,13)" fg:x="229996" fg:w="138"/><text x="90.8149%" y="431.50"></text></g><g><title>indexmap::map::IndexMap&lt;K,V,S&gt;::entry (566 samples, 0.22%)</title><rect x="90.4141%" y="501" width="0.2229%" height="15" fill="rgb(242,178,17)" fg:x="229613" fg:w="566"/><text x="90.6641%" y="511.50"></text></g><g><title>indexmap::map::core::raw::&lt;impl indexmap::map::core::IndexMapCore&lt;K,V&gt;&gt;::entry (518 samples, 0.20%)</title><rect x="90.4330%" y="485" width="0.2040%" height="15" fill="rgb(220,162,5)" fg:x="229661" fg:w="518"/><text x="90.6830%" y="495.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::find (515 samples, 0.20%)</title><rect x="90.4342%" y="469" width="0.2028%" height="15" fill="rgb(210,33,43)" fg:x="229664" fg:w="515"/><text x="90.6842%" y="479.50"></text></g><g><title>indexmap::map::core::equivalent::{{closure}} (45 samples, 0.02%)</title><rect x="90.6193%" y="453" width="0.0177%" height="15" fill="rgb(216,116,54)" fg:x="230134" fg:w="45"/><text x="90.8693%" y="463.50"></text></g><g><title>&lt;Q as indexmap::equivalent::Equivalent&lt;K&gt;&gt;::equivalent (38 samples, 0.01%)</title><rect x="90.6220%" y="437" width="0.0150%" height="15" fill="rgb(249,92,24)" fg:x="230141" fg:w="38"/><text x="90.8720%" y="447.50"></text></g><g><title>&lt;engine::engine::world::Position as core::cmp::PartialEq&gt;::eq (38 samples, 0.01%)</title><rect x="90.6220%" y="421" width="0.0150%" height="15" fill="rgb(231,189,14)" fg:x="230141" fg:w="38"/><text x="90.8720%" y="431.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (50 samples, 0.02%)</title><rect x="90.6760%" y="469" width="0.0197%" height="15" fill="rgb(230,8,41)" fg:x="230278" fg:w="50"/><text x="90.9260%" y="479.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="90.7035%" y="405" width="0.0102%" height="15" fill="rgb(249,7,27)" fg:x="230348" fg:w="26"/><text x="90.9535%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::inner::RawIterRange&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="90.7035%" y="389" width="0.0102%" height="15" fill="rgb(232,86,5)" fg:x="230348" fg:w="26"/><text x="90.9535%" y="399.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (29 samples, 0.01%)</title><rect x="90.7240%" y="373" width="0.0114%" height="15" fill="rgb(224,175,18)" fg:x="230400" fg:w="29"/><text x="90.9740%" y="383.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::copy_from_nonoverlapping (32 samples, 0.01%)</title><rect x="90.7240%" y="389" width="0.0126%" height="15" fill="rgb(220,129,12)" fg:x="230400" fg:w="32"/><text x="90.9740%" y="399.50"></text></g><g><title>hashbrown::raw::inner::Bucket&lt;T&gt;::copy_from_nonoverlapping (33 samples, 0.01%)</title><rect x="90.7240%" y="405" width="0.0130%" height="15" fill="rgb(210,19,36)" fg:x="230400" fg:w="33"/><text x="90.9740%" y="415.50"></text></g><g><title>hashbrown::raw::inner::bitmask::BitMask::lowest_set_bit (38 samples, 0.01%)</title><rect x="90.7701%" y="373" width="0.0150%" height="15" fill="rgb(219,96,14)" fg:x="230517" fg:w="38"/><text x="91.0201%" y="383.50"></text></g><g><title>hashbrown::raw::inner::is_full (99 samples, 0.04%)</title><rect x="90.7851%" y="373" width="0.0390%" height="15" fill="rgb(249,106,1)" fg:x="230555" fg:w="99"/><text x="91.0351%" y="383.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::load (54 samples, 0.02%)</title><rect x="90.8240%" y="373" width="0.0213%" height="15" fill="rgb(249,155,20)" fg:x="230654" fg:w="54"/><text x="91.0740%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (54 samples, 0.02%)</title><rect x="90.8240%" y="357" width="0.0213%" height="15" fill="rgb(244,168,9)" fg:x="230654" fg:w="54"/><text x="91.0740%" y="367.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.02%)</title><rect x="90.8240%" y="341" width="0.0213%" height="15" fill="rgb(216,23,50)" fg:x="230654" fg:w="54"/><text x="91.0740%" y="351.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (300 samples, 0.12%)</title><rect x="90.7378%" y="389" width="0.1181%" height="15" fill="rgb(224,219,20)" fg:x="230435" fg:w="300"/><text x="90.9878%" y="399.50"></text></g><g><title>hashbrown::raw::inner::sse2::Group::match_empty_or_deleted (27 samples, 0.01%)</title><rect x="90.8453%" y="373" width="0.0106%" height="15" fill="rgb(222,156,15)" fg:x="230708" fg:w="27"/><text x="91.0953%" y="383.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_movemask_epi8 (27 samples, 0.01%)</title><rect x="90.8453%" y="357" width="0.0106%" height="15" fill="rgb(231,97,17)" fg:x="230708" fg:w="27"/><text x="91.0953%" y="367.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_insert_slot (328 samples, 0.13%)</title><rect x="90.7378%" y="405" width="0.1292%" height="15" fill="rgb(218,70,48)" fg:x="230435" fg:w="328"/><text x="90.9878%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl_h2 (28 samples, 0.01%)</title><rect x="90.8559%" y="389" width="0.0110%" height="15" fill="rgb(212,196,52)" fg:x="230735" fg:w="28"/><text x="91.1059%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::set_ctrl (28 samples, 0.01%)</title><rect x="90.8559%" y="373" width="0.0110%" height="15" fill="rgb(243,203,18)" fg:x="230735" fg:w="28"/><text x="91.1059%" y="383.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::new_uninitialized (71 samples, 0.03%)</title><rect x="90.8689%" y="373" width="0.0280%" height="15" fill="rgb(252,125,41)" fg:x="230768" fg:w="71"/><text x="91.1189%" y="383.50"></text></g><g><title>hashbrown::raw::inner::alloc::inner::do_alloc (68 samples, 0.03%)</title><rect x="90.8701%" y="357" width="0.0268%" height="15" fill="rgb(223,180,33)" fg:x="230771" fg:w="68"/><text x="91.1201%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::inner::alloc::inner::Global as hashbrown::raw::inner::alloc::inner::Allocator&gt;::allocate (68 samples, 0.03%)</title><rect x="90.8701%" y="341" width="0.0268%" height="15" fill="rgb(254,159,46)" fg:x="230771" fg:w="68"/><text x="91.1201%" y="351.50"></text></g><g><title>alloc::alloc::alloc (68 samples, 0.03%)</title><rect x="90.8701%" y="325" width="0.0268%" height="15" fill="rgb(254,38,10)" fg:x="230771" fg:w="68"/><text x="91.1201%" y="335.50"></text></g><g><title>__rdl_alloc (68 samples, 0.03%)</title><rect x="90.8701%" y="309" width="0.0268%" height="15" fill="rgb(208,217,32)" fg:x="230771" fg:w="68"/><text x="91.1201%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (68 samples, 0.03%)</title><rect x="90.8701%" y="293" width="0.0268%" height="15" fill="rgb(221,120,13)" fg:x="230771" fg:w="68"/><text x="91.1201%" y="303.50"></text></g><g><title>__GI___libc_malloc (66 samples, 0.03%)</title><rect x="90.8709%" y="277" width="0.0260%" height="15" fill="rgb(246,54,52)" fg:x="230773" fg:w="66"/><text x="91.1209%" y="287.50"></text></g><g><title>_int_malloc (39 samples, 0.02%)</title><rect x="90.8815%" y="261" width="0.0154%" height="15" fill="rgb(242,34,25)" fg:x="230800" fg:w="39"/><text x="91.1315%" y="271.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::prepare_resize (87 samples, 0.03%)</title><rect x="90.8670%" y="405" width="0.0343%" height="15" fill="rgb(247,209,9)" fg:x="230763" fg:w="87"/><text x="91.1170%" y="415.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::fallible_with_capacity (86 samples, 0.03%)</title><rect x="90.8674%" y="389" width="0.0339%" height="15" fill="rgb(228,71,26)" fg:x="230764" fg:w="86"/><text x="91.1174%" y="399.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve (532 samples, 0.21%)</title><rect x="90.7008%" y="453" width="0.2095%" height="15" fill="rgb(222,145,49)" fg:x="230341" fg:w="532"/><text x="90.9508%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::reserve_rehash (532 samples, 0.21%)</title><rect x="90.7008%" y="437" width="0.2095%" height="15" fill="rgb(218,121,17)" fg:x="230341" fg:w="532"/><text x="90.9508%" y="447.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::resize (531 samples, 0.21%)</title><rect x="90.7012%" y="421" width="0.2091%" height="15" fill="rgb(244,50,7)" fg:x="230342" fg:w="531"/><text x="90.9512%" y="431.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::find_insert_slot (114 samples, 0.04%)</title><rect x="90.9103%" y="453" width="0.0449%" height="15" fill="rgb(246,229,37)" fg:x="230873" fg:w="114"/><text x="91.1603%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTableInner&lt;A&gt;::record_item_insert_at (60 samples, 0.02%)</title><rect x="90.9552%" y="453" width="0.0236%" height="15" fill="rgb(225,18,5)" fg:x="230987" fg:w="60"/><text x="91.2052%" y="463.50"></text></g><g><title>hashbrown::raw::inner::RawTable&lt;T,A&gt;::insert (720 samples, 0.28%)</title><rect x="90.6957%" y="469" width="0.2835%" height="15" fill="rgb(213,204,8)" fg:x="230328" fg:w="720"/><text x="90.9457%" y="479.50"></text></g><g><title>__memmove_avx_unaligned_erms (57 samples, 0.02%)</title><rect x="90.9965%" y="261" width="0.0224%" height="15" fill="rgb(238,103,6)" fg:x="231092" fg:w="57"/><text x="91.2465%" y="271.50"></text></g><g><title>alloc::raw_vec::finish_grow (195 samples, 0.08%)</title><rect x="90.9800%" y="389" width="0.0768%" height="15" fill="rgb(222,25,35)" fg:x="231050" fg:w="195"/><text x="91.2300%" y="399.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (191 samples, 0.08%)</title><rect x="90.9815%" y="373" width="0.0752%" height="15" fill="rgb(213,203,35)" fg:x="231054" fg:w="191"/><text x="91.2315%" y="383.50"></text></g><g><title>alloc::alloc::Global::grow_impl (191 samples, 0.08%)</title><rect x="90.9815%" y="357" width="0.0752%" height="15" fill="rgb(221,79,53)" fg:x="231054" fg:w="191"/><text x="91.2315%" y="367.50"></text></g><g><title>alloc::alloc::realloc (191 samples, 0.08%)</title><rect x="90.9815%" y="341" width="0.0752%" height="15" fill="rgb(243,200,35)" fg:x="231054" fg:w="191"/><text x="91.2315%" y="351.50"></text></g><g><title>__rdl_realloc (191 samples, 0.08%)</title><rect x="90.9815%" y="325" width="0.0752%" height="15" fill="rgb(248,60,25)" fg:x="231054" fg:w="191"/><text x="91.2315%" y="335.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (191 samples, 0.08%)</title><rect x="90.9815%" y="309" width="0.0752%" height="15" fill="rgb(227,53,46)" fg:x="231054" fg:w="191"/><text x="91.2315%" y="319.50"></text></g><g><title>__GI___libc_realloc (189 samples, 0.07%)</title><rect x="90.9823%" y="293" width="0.0744%" height="15" fill="rgb(216,120,32)" fg:x="231056" fg:w="189"/><text x="91.2323%" y="303.50"></text></g><g><title>_int_realloc (161 samples, 0.06%)</title><rect x="90.9934%" y="277" width="0.0634%" height="15" fill="rgb(220,134,1)" fg:x="231084" fg:w="161"/><text x="91.2434%" y="287.50"></text></g><g><title>_int_malloc (83 samples, 0.03%)</title><rect x="91.0241%" y="261" width="0.0327%" height="15" fill="rgb(237,168,5)" fg:x="231162" fg:w="83"/><text x="91.2741%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve_exact (197 samples, 0.08%)</title><rect x="90.9796%" y="453" width="0.0776%" height="15" fill="rgb(231,100,33)" fg:x="231049" fg:w="197"/><text x="91.2296%" y="463.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve_exact (197 samples, 0.08%)</title><rect x="90.9796%" y="437" width="0.0776%" height="15" fill="rgb(236,177,47)" fg:x="231049" fg:w="197"/><text x="91.2296%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::try_reserve_exact (197 samples, 0.08%)</title><rect x="90.9796%" y="421" width="0.0776%" height="15" fill="rgb(235,7,49)" fg:x="231049" fg:w="197"/><text x="91.2296%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_exact (197 samples, 0.08%)</title><rect x="90.9796%" y="405" width="0.0776%" height="15" fill="rgb(232,119,22)" fg:x="231049" fg:w="197"/><text x="91.2296%" y="415.50"></text></g><g><title>indexmap::map::core::VacantEntry&lt;K,V&gt;::insert (1,040 samples, 0.41%)</title><rect x="90.6480%" y="501" width="0.4095%" height="15" fill="rgb(254,73,53)" fg:x="230207" fg:w="1040"/><text x="90.8980%" y="511.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::push (1,007 samples, 0.40%)</title><rect x="90.6610%" y="485" width="0.3965%" height="15" fill="rgb(251,35,20)" fg:x="230240" fg:w="1007"/><text x="90.9110%" y="495.50"></text></g><g><title>indexmap::map::core::IndexMapCore&lt;K,V&gt;::reserve_entries (198 samples, 0.08%)</title><rect x="90.9796%" y="469" width="0.0780%" height="15" fill="rgb(241,119,20)" fg:x="231049" fg:w="198"/><text x="91.2296%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (124 samples, 0.05%)</title><rect x="91.0820%" y="309" width="0.0488%" height="15" fill="rgb(207,102,14)" fg:x="231309" fg:w="124"/><text x="91.3320%" y="319.50"></text></g><g><title>alloc::alloc::Global::grow_impl (124 samples, 0.05%)</title><rect x="91.0820%" y="293" width="0.0488%" height="15" fill="rgb(248,201,50)" fg:x="231309" fg:w="124"/><text x="91.3320%" y="303.50"></text></g><g><title>alloc::alloc::realloc (124 samples, 0.05%)</title><rect x="91.0820%" y="277" width="0.0488%" height="15" fill="rgb(222,185,44)" fg:x="231309" fg:w="124"/><text x="91.3320%" y="287.50"></text></g><g><title>__rdl_realloc (124 samples, 0.05%)</title><rect x="91.0820%" y="261" width="0.0488%" height="15" fill="rgb(218,107,18)" fg:x="231309" fg:w="124"/><text x="91.3320%" y="271.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (124 samples, 0.05%)</title><rect x="91.0820%" y="245" width="0.0488%" height="15" fill="rgb(237,177,39)" fg:x="231309" fg:w="124"/><text x="91.3320%" y="255.50"></text></g><g><title>__GI___libc_realloc (123 samples, 0.05%)</title><rect x="91.0823%" y="229" width="0.0484%" height="15" fill="rgb(246,69,6)" fg:x="231310" fg:w="123"/><text x="91.3323%" y="239.50"></text></g><g><title>_int_realloc (101 samples, 0.04%)</title><rect x="91.0910%" y="213" width="0.0398%" height="15" fill="rgb(234,208,37)" fg:x="231332" fg:w="101"/><text x="91.3410%" y="223.50"></text></g><g><title>_int_malloc (70 samples, 0.03%)</title><rect x="91.1032%" y="197" width="0.0276%" height="15" fill="rgb(225,4,6)" fg:x="231363" fg:w="70"/><text x="91.3532%" y="207.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (130 samples, 0.05%)</title><rect x="91.0800%" y="341" width="0.0512%" height="15" fill="rgb(233,45,0)" fg:x="231304" fg:w="130"/><text x="91.3300%" y="351.50"></text></g><g><title>alloc::raw_vec::finish_grow (126 samples, 0.05%)</title><rect x="91.0816%" y="325" width="0.0496%" height="15" fill="rgb(226,136,5)" fg:x="231308" fg:w="126"/><text x="91.3316%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (131 samples, 0.05%)</title><rect x="91.0800%" y="389" width="0.0516%" height="15" fill="rgb(211,91,47)" fg:x="231304" fg:w="131"/><text x="91.3300%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (131 samples, 0.05%)</title><rect x="91.0800%" y="373" width="0.0516%" height="15" fill="rgb(242,88,51)" fg:x="231304" fg:w="131"/><text x="91.3300%" y="383.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (131 samples, 0.05%)</title><rect x="91.0800%" y="357" width="0.0516%" height="15" fill="rgb(230,91,28)" fg:x="231304" fg:w="131"/><text x="91.3300%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_desugared (161 samples, 0.06%)</title><rect x="91.0694%" y="405" width="0.0634%" height="15" fill="rgb(254,186,29)" fg:x="231277" fg:w="161"/><text x="91.3194%" y="415.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;T,I&gt;&gt;::spec_extend (174 samples, 0.07%)</title><rect x="91.0694%" y="421" width="0.0685%" height="15" fill="rgb(238,6,4)" fg:x="231277" fg:w="174"/><text x="91.3194%" y="431.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2),()&gt;&gt;::run (7,897 samples, 3.11%)</title><rect x="88.0373%" y="597" width="3.1096%" height="15" fill="rgb(221,151,16)" fg:x="223577" fg:w="7897"/><text x="88.2873%" y="607.50">&lt;Fu..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (7,897 samples, 3.11%)</title><rect x="88.0373%" y="581" width="3.1096%" height="15" fill="rgb(251,143,52)" fg:x="223577" fg:w="7897"/><text x="88.2873%" y="591.50">cor..</text></g><g><title>core::ops::function::Fn::call (7,897 samples, 3.11%)</title><rect x="88.0373%" y="565" width="3.1096%" height="15" fill="rgb(206,90,15)" fg:x="223577" fg:w="7897"/><text x="88.2873%" y="575.50">cor..</text></g><g><title>engine::engine::actor::pathfinding::plan_path (5,562 samples, 2.19%)</title><rect x="88.9568%" y="549" width="2.1901%" height="15" fill="rgb(218,35,8)" fg:x="225912" fg:w="5562"/><text x="89.2068%" y="559.50">e..</text></g><g><title>engine::engine::actor::pathfinding::get_path (5,546 samples, 2.18%)</title><rect x="88.9631%" y="533" width="2.1838%" height="15" fill="rgb(239,215,6)" fg:x="225928" fg:w="5546"/><text x="89.2131%" y="543.50">e..</text></g><g><title>pathfinding::directed::astar::astar (5,464 samples, 2.15%)</title><rect x="88.9954%" y="517" width="2.1515%" height="15" fill="rgb(245,116,39)" fg:x="226010" fg:w="5464"/><text x="89.2454%" y="527.50">p..</text></g><g><title>pathfinding::directed::reverse_path (202 samples, 0.08%)</title><rect x="91.0674%" y="501" width="0.0795%" height="15" fill="rgb(242,65,28)" fg:x="231272" fg:w="202"/><text x="91.3174%" y="511.50"></text></g><g><title>core::iter::traits::iterator::Iterator::collect (202 samples, 0.08%)</title><rect x="91.0674%" y="485" width="0.0795%" height="15" fill="rgb(252,132,53)" fg:x="231272" fg:w="202"/><text x="91.3174%" y="495.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as core::iter::traits::collect::FromIterator&lt;T&gt;&gt;::from_iter (202 samples, 0.08%)</title><rect x="91.0674%" y="469" width="0.0795%" height="15" fill="rgb(224,159,50)" fg:x="231272" fg:w="202"/><text x="91.3174%" y="479.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter::SpecFromIter&lt;T,I&gt;&gt;::from_iter (202 samples, 0.08%)</title><rect x="91.0674%" y="453" width="0.0795%" height="15" fill="rgb(224,93,4)" fg:x="231272" fg:w="202"/><text x="91.3174%" y="463.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T&gt; as alloc::vec::spec_from_iter_nested::SpecFromIterNested&lt;T,I&gt;&gt;::from_iter (201 samples, 0.08%)</title><rect x="91.0678%" y="437" width="0.0791%" height="15" fill="rgb(208,81,34)" fg:x="231273" fg:w="201"/><text x="91.3178%" y="447.50"></text></g><g><title>core::intrinsics::copy (38 samples, 0.01%)</title><rect x="91.1646%" y="517" width="0.0150%" height="15" fill="rgb(233,92,54)" fg:x="231519" fg:w="38"/><text x="91.4146%" y="527.50"></text></g><g><title>__memmove_avx_unaligned_erms (38 samples, 0.01%)</title><rect x="91.1646%" y="501" width="0.0150%" height="15" fill="rgb(237,21,14)" fg:x="231519" fg:w="38"/><text x="91.4146%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::remove (64 samples, 0.03%)</title><rect x="91.1646%" y="533" width="0.0252%" height="15" fill="rgb(249,128,51)" fg:x="231519" fg:w="64"/><text x="91.4146%" y="543.50"></text></g><g><title>core::ptr::read (26 samples, 0.01%)</title><rect x="91.1796%" y="517" width="0.0102%" height="15" fill="rgb(223,129,24)" fg:x="231557" fg:w="26"/><text x="91.4296%" y="527.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (168 samples, 0.07%)</title><rect x="91.1898%" y="485" width="0.0662%" height="15" fill="rgb(231,168,25)" fg:x="231583" fg:w="168"/><text x="91.4398%" y="495.50"></text></g><g><title>alloc::alloc::exchange_malloc (168 samples, 0.07%)</title><rect x="91.1898%" y="469" width="0.0662%" height="15" fill="rgb(224,39,20)" fg:x="231583" fg:w="168"/><text x="91.4398%" y="479.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (168 samples, 0.07%)</title><rect x="91.1898%" y="453" width="0.0662%" height="15" fill="rgb(225,152,53)" fg:x="231583" fg:w="168"/><text x="91.4398%" y="463.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (168 samples, 0.07%)</title><rect x="91.1898%" y="437" width="0.0662%" height="15" fill="rgb(252,17,24)" fg:x="231583" fg:w="168"/><text x="91.4398%" y="447.50"></text></g><g><title>alloc::alloc::alloc (168 samples, 0.07%)</title><rect x="91.1898%" y="421" width="0.0662%" height="15" fill="rgb(250,114,30)" fg:x="231583" fg:w="168"/><text x="91.4398%" y="431.50"></text></g><g><title>__rdl_alloc (168 samples, 0.07%)</title><rect x="91.1898%" y="405" width="0.0662%" height="15" fill="rgb(229,5,4)" fg:x="231583" fg:w="168"/><text x="91.4398%" y="415.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (168 samples, 0.07%)</title><rect x="91.1898%" y="389" width="0.0662%" height="15" fill="rgb(225,176,49)" fg:x="231583" fg:w="168"/><text x="91.4398%" y="399.50"></text></g><g><title>__GI___libc_malloc (168 samples, 0.07%)</title><rect x="91.1898%" y="373" width="0.0662%" height="15" fill="rgb(224,221,49)" fg:x="231583" fg:w="168"/><text x="91.4398%" y="383.50"></text></g><g><title>_int_malloc (104 samples, 0.04%)</title><rect x="91.2150%" y="357" width="0.0410%" height="15" fill="rgb(253,169,27)" fg:x="231647" fg:w="104"/><text x="91.4650%" y="367.50"></text></g><g><title>unlink_chunk.constprop.0 (70 samples, 0.03%)</title><rect x="91.2284%" y="341" width="0.0276%" height="15" fill="rgb(211,206,16)" fg:x="231681" fg:w="70"/><text x="91.4784%" y="351.50"></text></g><g><title>bevy_ecs::system::commands::Commands::add (174 samples, 0.07%)</title><rect x="91.1898%" y="517" width="0.0685%" height="15" fill="rgb(244,87,35)" fg:x="231583" fg:w="174"/><text x="91.4398%" y="527.50"></text></g><g><title>bevy_ecs::system::commands::CommandQueue::push (174 samples, 0.07%)</title><rect x="91.1898%" y="501" width="0.0685%" height="15" fill="rgb(246,28,10)" fg:x="231583" fg:w="174"/><text x="91.4398%" y="511.50"></text></g><g><title>bevy_ecs::system::commands::EntityCommands::remove (178 samples, 0.07%)</title><rect x="91.1898%" y="533" width="0.0701%" height="15" fill="rgb(229,12,44)" fg:x="231583" fg:w="178"/><text x="91.4398%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (294 samples, 0.12%)</title><rect x="91.1469%" y="597" width="0.1158%" height="15" fill="rgb(210,145,37)" fg:x="231474" fg:w="294"/><text x="91.3969%" y="607.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (294 samples, 0.12%)</title><rect x="91.1469%" y="581" width="0.1158%" height="15" fill="rgb(227,112,52)" fg:x="231474" fg:w="294"/><text x="91.3969%" y="591.50"></text></g><g><title>core::ops::function::Fn::call (294 samples, 0.12%)</title><rect x="91.1469%" y="565" width="0.1158%" height="15" fill="rgb(238,155,34)" fg:x="231474" fg:w="294"/><text x="91.3969%" y="575.50"></text></g><g><title>engine::engine::actor::move_actor (288 samples, 0.11%)</title><rect x="91.1493%" y="549" width="0.1134%" height="15" fill="rgb(239,226,36)" fg:x="231480" fg:w="288"/><text x="91.3993%" y="559.50"></text></g><g><title>&lt;(F0,F1,F2,F3) as bevy_ecs::query::fetch::Fetch&gt;::archetype_fetch (30 samples, 0.01%)</title><rect x="91.4462%" y="517" width="0.0118%" height="15" fill="rgb(230,16,23)" fg:x="232234" fg:w="30"/><text x="91.6962%" y="527.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (35 samples, 0.01%)</title><rect x="91.4454%" y="533" width="0.0138%" height="15" fill="rgb(236,171,36)" fg:x="232232" fg:w="35"/><text x="91.6954%" y="543.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (27 samples, 0.01%)</title><rect x="91.4655%" y="517" width="0.0106%" height="15" fill="rgb(221,22,14)" fg:x="232283" fg:w="27"/><text x="91.7155%" y="527.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (27 samples, 0.01%)</title><rect x="91.4655%" y="501" width="0.0106%" height="15" fill="rgb(242,43,11)" fg:x="232283" fg:w="27"/><text x="91.7155%" y="511.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (50 samples, 0.02%)</title><rect x="91.4808%" y="341" width="0.0197%" height="15" fill="rgb(232,69,23)" fg:x="232322" fg:w="50"/><text x="91.7308%" y="351.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (60 samples, 0.02%)</title><rect x="91.4785%" y="357" width="0.0236%" height="15" fill="rgb(216,180,54)" fg:x="232316" fg:w="60"/><text x="91.7285%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (61 samples, 0.02%)</title><rect x="91.4785%" y="389" width="0.0240%" height="15" fill="rgb(216,5,24)" fg:x="232316" fg:w="61"/><text x="91.7285%" y="399.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (61 samples, 0.02%)</title><rect x="91.4785%" y="373" width="0.0240%" height="15" fill="rgb(225,89,9)" fg:x="232316" fg:w="61"/><text x="91.7285%" y="383.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (64 samples, 0.03%)</title><rect x="91.4785%" y="437" width="0.0252%" height="15" fill="rgb(243,75,33)" fg:x="232316" fg:w="64"/><text x="91.7285%" y="447.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (64 samples, 0.03%)</title><rect x="91.4785%" y="421" width="0.0252%" height="15" fill="rgb(247,141,45)" fg:x="232316" fg:w="64"/><text x="91.7285%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (64 samples, 0.03%)</title><rect x="91.4785%" y="405" width="0.0252%" height="15" fill="rgb(232,177,36)" fg:x="232316" fg:w="64"/><text x="91.7285%" y="415.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (66 samples, 0.03%)</title><rect x="91.4781%" y="453" width="0.0260%" height="15" fill="rgb(219,125,36)" fg:x="232315" fg:w="66"/><text x="91.7281%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (72 samples, 0.03%)</title><rect x="91.4765%" y="469" width="0.0284%" height="15" fill="rgb(227,94,9)" fg:x="232311" fg:w="72"/><text x="91.7265%" y="479.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (128 samples, 0.05%)</title><rect x="91.4655%" y="533" width="0.0504%" height="15" fill="rgb(240,34,52)" fg:x="232283" fg:w="128"/><text x="91.7155%" y="543.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (101 samples, 0.04%)</title><rect x="91.4761%" y="517" width="0.0398%" height="15" fill="rgb(216,45,12)" fg:x="232310" fg:w="101"/><text x="91.7261%" y="527.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (100 samples, 0.04%)</title><rect x="91.4765%" y="501" width="0.0394%" height="15" fill="rgb(246,21,19)" fg:x="232311" fg:w="100"/><text x="91.7265%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (100 samples, 0.04%)</title><rect x="91.4765%" y="485" width="0.0394%" height="15" fill="rgb(213,98,42)" fg:x="232311" fg:w="100"/><text x="91.7265%" y="495.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (28 samples, 0.01%)</title><rect x="91.5049%" y="469" width="0.0110%" height="15" fill="rgb(250,136,47)" fg:x="232383" fg:w="28"/><text x="91.7549%" y="479.50"></text></g><g><title>&lt;std::collections::hash::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="91.5667%" y="501" width="0.0102%" height="15" fill="rgb(251,124,27)" fg:x="232540" fg:w="26"/><text x="91.8167%" y="511.50"></text></g><g><title>&lt;hashbrown::set::Iter&lt;K&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="91.5667%" y="485" width="0.0102%" height="15" fill="rgb(229,180,14)" fg:x="232540" fg:w="26"/><text x="91.8167%" y="495.50"></text></g><g><title>&lt;hashbrown::map::Keys&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="91.5667%" y="469" width="0.0102%" height="15" fill="rgb(245,216,25)" fg:x="232540" fg:w="26"/><text x="91.8167%" y="479.50"></text></g><g><title>&lt;hashbrown::map::Iter&lt;K,V&gt; as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="91.5667%" y="453" width="0.0102%" height="15" fill="rgb(251,43,5)" fg:x="232540" fg:w="26"/><text x="91.8167%" y="463.50"></text></g><g><title>&lt;T as core::convert::Into&lt;U&gt;&gt;::into (99 samples, 0.04%)</title><rect x="91.5781%" y="485" width="0.0390%" height="15" fill="rgb(250,128,24)" fg:x="232569" fg:w="99"/><text x="91.8281%" y="495.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::convert::From&lt;&amp;bevy_asset::handle::Handle&lt;T&gt;&gt;&gt;::from (99 samples, 0.04%)</title><rect x="91.5781%" y="469" width="0.0390%" height="15" fill="rgb(217,117,27)" fg:x="232569" fg:w="99"/><text x="91.8281%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (38 samples, 0.01%)</title><rect x="91.6210%" y="357" width="0.0150%" height="15" fill="rgb(245,147,4)" fg:x="232678" fg:w="38"/><text x="91.8710%" y="367.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (38 samples, 0.01%)</title><rect x="91.6210%" y="341" width="0.0150%" height="15" fill="rgb(242,201,35)" fg:x="232678" fg:w="38"/><text x="91.8710%" y="351.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (38 samples, 0.01%)</title><rect x="91.6210%" y="325" width="0.0150%" height="15" fill="rgb(218,181,1)" fg:x="232678" fg:w="38"/><text x="91.8710%" y="335.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (42 samples, 0.02%)</title><rect x="91.6210%" y="405" width="0.0165%" height="15" fill="rgb(222,6,29)" fg:x="232678" fg:w="42"/><text x="91.8710%" y="415.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (42 samples, 0.02%)</title><rect x="91.6210%" y="389" width="0.0165%" height="15" fill="rgb(208,186,3)" fg:x="232678" fg:w="42"/><text x="91.8710%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (42 samples, 0.02%)</title><rect x="91.6210%" y="373" width="0.0165%" height="15" fill="rgb(216,36,26)" fg:x="232678" fg:w="42"/><text x="91.8710%" y="383.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (44 samples, 0.02%)</title><rect x="91.6210%" y="421" width="0.0173%" height="15" fill="rgb(248,201,23)" fg:x="232678" fg:w="44"/><text x="91.8710%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (57 samples, 0.02%)</title><rect x="91.6175%" y="437" width="0.0224%" height="15" fill="rgb(251,170,31)" fg:x="232669" fg:w="57"/><text x="91.8675%" y="447.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (213 samples, 0.08%)</title><rect x="91.5781%" y="501" width="0.0839%" height="15" fill="rgb(207,110,25)" fg:x="232569" fg:w="213"/><text x="91.8281%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (114 samples, 0.04%)</title><rect x="91.6171%" y="485" width="0.0449%" height="15" fill="rgb(250,54,15)" fg:x="232668" fg:w="114"/><text x="91.8671%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (113 samples, 0.04%)</title><rect x="91.6175%" y="469" width="0.0445%" height="15" fill="rgb(227,68,33)" fg:x="232669" fg:w="113"/><text x="91.8675%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (113 samples, 0.04%)</title><rect x="91.6175%" y="453" width="0.0445%" height="15" fill="rgb(238,34,41)" fg:x="232669" fg:w="113"/><text x="91.8675%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (56 samples, 0.02%)</title><rect x="91.6399%" y="437" width="0.0221%" height="15" fill="rgb(220,11,15)" fg:x="232726" fg:w="56"/><text x="91.8899%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (54 samples, 0.02%)</title><rect x="91.6407%" y="421" width="0.0213%" height="15" fill="rgb(246,111,35)" fg:x="232728" fg:w="54"/><text x="91.8907%" y="431.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::clone::Clone&gt;::clone (147 samples, 0.06%)</title><rect x="91.6620%" y="485" width="0.0579%" height="15" fill="rgb(209,88,53)" fg:x="232782" fg:w="147"/><text x="91.9120%" y="495.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (137 samples, 0.05%)</title><rect x="91.6659%" y="469" width="0.0539%" height="15" fill="rgb(231,185,47)" fg:x="232792" fg:w="137"/><text x="91.9159%" y="479.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (137 samples, 0.05%)</title><rect x="91.6659%" y="453" width="0.0539%" height="15" fill="rgb(233,154,1)" fg:x="232792" fg:w="137"/><text x="91.9159%" y="463.50"></text></g><g><title>core::sync::atomic::atomic_add (137 samples, 0.05%)</title><rect x="91.6659%" y="437" width="0.0539%" height="15" fill="rgb(225,15,46)" fg:x="232792" fg:w="137"/><text x="91.9159%" y="447.50"></text></g><g><title>bevy_render::draw::Draw::set_bind_group (153 samples, 0.06%)</title><rect x="91.6620%" y="501" width="0.0602%" height="15" fill="rgb(211,135,41)" fg:x="232782" fg:w="153"/><text x="91.9120%" y="511.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (27 samples, 0.01%)</title><rect x="91.8167%" y="341" width="0.0106%" height="15" fill="rgb(208,54,0)" fg:x="233175" fg:w="27"/><text x="92.0667%" y="351.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (27 samples, 0.01%)</title><rect x="91.8167%" y="325" width="0.0106%" height="15" fill="rgb(244,136,14)" fg:x="233175" fg:w="27"/><text x="92.0667%" y="335.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (30 samples, 0.01%)</title><rect x="91.8167%" y="389" width="0.0118%" height="15" fill="rgb(241,56,14)" fg:x="233175" fg:w="30"/><text x="92.0667%" y="399.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (30 samples, 0.01%)</title><rect x="91.8167%" y="373" width="0.0118%" height="15" fill="rgb(205,80,24)" fg:x="233175" fg:w="30"/><text x="92.0667%" y="383.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (30 samples, 0.01%)</title><rect x="91.8167%" y="357" width="0.0118%" height="15" fill="rgb(220,57,4)" fg:x="233175" fg:w="30"/><text x="92.0667%" y="367.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (251 samples, 0.10%)</title><rect x="91.7321%" y="405" width="0.0988%" height="15" fill="rgb(226,193,50)" fg:x="232960" fg:w="251"/><text x="91.9821%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (280 samples, 0.11%)</title><rect x="91.7250%" y="437" width="0.1103%" height="15" fill="rgb(231,168,22)" fg:x="232942" fg:w="280"/><text x="91.9750%" y="447.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (262 samples, 0.10%)</title><rect x="91.7321%" y="421" width="0.1032%" height="15" fill="rgb(254,215,14)" fg:x="232960" fg:w="262"/><text x="91.9821%" y="431.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (475 samples, 0.19%)</title><rect x="91.8467%" y="373" width="0.1870%" height="15" fill="rgb(211,115,16)" fg:x="233251" fg:w="475"/><text x="92.0967%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (508 samples, 0.20%)</title><rect x="91.8467%" y="405" width="0.2000%" height="15" fill="rgb(236,210,16)" fg:x="233251" fg:w="508"/><text x="92.0967%" y="415.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (508 samples, 0.20%)</title><rect x="91.8467%" y="389" width="0.2000%" height="15" fill="rgb(221,94,12)" fg:x="233251" fg:w="508"/><text x="92.0967%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (33 samples, 0.01%)</title><rect x="92.0337%" y="373" width="0.0130%" height="15" fill="rgb(235,218,49)" fg:x="233726" fg:w="33"/><text x="92.2837%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (54 samples, 0.02%)</title><rect x="92.0510%" y="357" width="0.0213%" height="15" fill="rgb(217,114,14)" fg:x="233770" fg:w="54"/><text x="92.3010%" y="367.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (54 samples, 0.02%)</title><rect x="92.0510%" y="341" width="0.0213%" height="15" fill="rgb(216,145,22)" fg:x="233770" fg:w="54"/><text x="92.3010%" y="351.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (54 samples, 0.02%)</title><rect x="92.0510%" y="325" width="0.0213%" height="15" fill="rgb(217,112,39)" fg:x="233770" fg:w="54"/><text x="92.3010%" y="335.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_mut_untyped (891 samples, 0.35%)</title><rect x="91.7242%" y="501" width="0.3508%" height="15" fill="rgb(225,85,32)" fg:x="232940" fg:w="891"/><text x="91.9742%" y="511.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get_mut (891 samples, 0.35%)</title><rect x="91.7242%" y="485" width="0.3508%" height="15" fill="rgb(245,209,47)" fg:x="232940" fg:w="891"/><text x="91.9742%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_mut (891 samples, 0.35%)</title><rect x="91.7242%" y="469" width="0.3508%" height="15" fill="rgb(218,220,15)" fg:x="232940" fg:w="891"/><text x="91.9742%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner_mut (889 samples, 0.35%)</title><rect x="91.7250%" y="453" width="0.3501%" height="15" fill="rgb(222,202,31)" fg:x="232942" fg:w="889"/><text x="91.9750%" y="463.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (609 samples, 0.24%)</title><rect x="91.8352%" y="437" width="0.2398%" height="15" fill="rgb(243,203,4)" fg:x="233222" fg:w="609"/><text x="92.0852%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (601 samples, 0.24%)</title><rect x="91.8384%" y="421" width="0.2367%" height="15" fill="rgb(237,92,17)" fg:x="233230" fg:w="601"/><text x="92.0884%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (65 samples, 0.03%)</title><rect x="92.0494%" y="405" width="0.0256%" height="15" fill="rgb(231,119,7)" fg:x="233766" fg:w="65"/><text x="92.2994%" y="415.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (65 samples, 0.03%)</title><rect x="92.0494%" y="389" width="0.0256%" height="15" fill="rgb(237,82,41)" fg:x="233766" fg:w="65"/><text x="92.2994%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (65 samples, 0.03%)</title><rect x="92.0494%" y="373" width="0.0256%" height="15" fill="rgb(226,81,48)" fg:x="233766" fg:w="65"/><text x="92.2994%" y="383.50"></text></g><g><title>hashbrown::raw::sse2::Group::load_aligned (251 samples, 0.10%)</title><rect x="92.0766%" y="389" width="0.0988%" height="15" fill="rgb(234,70,51)" fg:x="233835" fg:w="251"/><text x="92.3266%" y="399.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_load_si128 (251 samples, 0.10%)</title><rect x="92.0766%" y="373" width="0.0988%" height="15" fill="rgb(251,86,4)" fg:x="233835" fg:w="251"/><text x="92.3266%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterRange&lt;T&gt;::new (265 samples, 0.10%)</title><rect x="92.0750%" y="405" width="0.1043%" height="15" fill="rgb(244,144,28)" fg:x="233831" fg:w="265"/><text x="92.3250%" y="415.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::iter_assets (285 samples, 0.11%)</title><rect x="92.0750%" y="501" width="0.1122%" height="15" fill="rgb(232,161,39)" fg:x="233831" fg:w="285"/><text x="92.3250%" y="511.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::iter (285 samples, 0.11%)</title><rect x="92.0750%" y="485" width="0.1122%" height="15" fill="rgb(247,34,51)" fg:x="233831" fg:w="285"/><text x="92.3250%" y="495.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::iter (285 samples, 0.11%)</title><rect x="92.0750%" y="469" width="0.1122%" height="15" fill="rgb(225,132,2)" fg:x="233831" fg:w="285"/><text x="92.3250%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::keys (285 samples, 0.11%)</title><rect x="92.0750%" y="453" width="0.1122%" height="15" fill="rgb(209,159,44)" fg:x="233831" fg:w="285"/><text x="92.3250%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::iter (285 samples, 0.11%)</title><rect x="92.0750%" y="437" width="0.1122%" height="15" fill="rgb(251,214,1)" fg:x="233831" fg:w="285"/><text x="92.3250%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter (285 samples, 0.11%)</title><rect x="92.0750%" y="421" width="0.1122%" height="15" fill="rgb(247,84,47)" fg:x="233831" fg:w="285"/><text x="92.3250%" y="431.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (152 samples, 0.06%)</title><rect x="92.3176%" y="341" width="0.0599%" height="15" fill="rgb(240,111,43)" fg:x="234447" fg:w="152"/><text x="92.5676%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (152 samples, 0.06%)</title><rect x="92.3176%" y="325" width="0.0599%" height="15" fill="rgb(215,214,35)" fg:x="234447" fg:w="152"/><text x="92.5676%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (152 samples, 0.06%)</title><rect x="92.3176%" y="309" width="0.0599%" height="15" fill="rgb(248,207,23)" fg:x="234447" fg:w="152"/><text x="92.5676%" y="319.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::get_bind_group (454 samples, 0.18%)</title><rect x="92.1995%" y="485" width="0.1788%" height="15" fill="rgb(214,186,4)" fg:x="234147" fg:w="454"/><text x="92.4495%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (454 samples, 0.18%)</title><rect x="92.1995%" y="469" width="0.1788%" height="15" fill="rgb(220,133,22)" fg:x="234147" fg:w="454"/><text x="92.4495%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (454 samples, 0.18%)</title><rect x="92.1995%" y="453" width="0.1788%" height="15" fill="rgb(239,134,19)" fg:x="234147" fg:w="454"/><text x="92.4495%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (454 samples, 0.18%)</title><rect x="92.1995%" y="437" width="0.1788%" height="15" fill="rgb(250,140,9)" fg:x="234147" fg:w="454"/><text x="92.4495%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (452 samples, 0.18%)</title><rect x="92.2003%" y="421" width="0.1780%" height="15" fill="rgb(225,59,14)" fg:x="234149" fg:w="452"/><text x="92.4503%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (452 samples, 0.18%)</title><rect x="92.2003%" y="405" width="0.1780%" height="15" fill="rgb(214,152,51)" fg:x="234149" fg:w="452"/><text x="92.4503%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (157 samples, 0.06%)</title><rect x="92.3164%" y="389" width="0.0618%" height="15" fill="rgb(251,227,43)" fg:x="234444" fg:w="157"/><text x="92.5664%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (157 samples, 0.06%)</title><rect x="92.3164%" y="373" width="0.0618%" height="15" fill="rgb(241,96,17)" fg:x="234444" fg:w="157"/><text x="92.5664%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (157 samples, 0.06%)</title><rect x="92.3164%" y="357" width="0.0618%" height="15" fill="rgb(234,198,43)" fg:x="234444" fg:w="157"/><text x="92.5664%" y="367.50"></text></g><g><title>ahash::operations::folded_multiply (30 samples, 0.01%)</title><rect x="92.3849%" y="389" width="0.0118%" height="15" fill="rgb(220,108,29)" fg:x="234618" fg:w="30"/><text x="92.6349%" y="399.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::finish (41 samples, 0.02%)</title><rect x="92.3849%" y="405" width="0.0161%" height="15" fill="rgb(226,163,33)" fg:x="234618" fg:w="41"/><text x="92.6349%" y="415.50"></text></g><g><title>&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId as core::hash::Hash&gt;::hash (28 samples, 0.01%)</title><rect x="92.4011%" y="405" width="0.0110%" height="15" fill="rgb(205,194,45)" fg:x="234659" fg:w="28"/><text x="92.6511%" y="415.50"></text></g><g><title>hashbrown::map::make_hash (246 samples, 0.10%)</title><rect x="92.3849%" y="421" width="0.0969%" height="15" fill="rgb(206,143,44)" fg:x="234618" fg:w="246"/><text x="92.6349%" y="431.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (177 samples, 0.07%)</title><rect x="92.4121%" y="405" width="0.0697%" height="15" fill="rgb(236,136,36)" fg:x="234687" fg:w="177"/><text x="92.6621%" y="415.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHashInner&lt;A&gt; as core::iter::traits::iterator::Iterator&gt;::next (46 samples, 0.02%)</title><rect x="92.5598%" y="373" width="0.0181%" height="15" fill="rgb(249,172,42)" fg:x="235062" fg:w="46"/><text x="92.8098%" y="383.50"></text></g><g><title>&lt;hashbrown::raw::bitmask::BitMaskIter as core::iter::traits::iterator::Iterator&gt;::next (26 samples, 0.01%)</title><rect x="92.5676%" y="357" width="0.0102%" height="15" fill="rgb(216,139,23)" fg:x="235082" fg:w="26"/><text x="92.8176%" y="367.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (67 samples, 0.03%)</title><rect x="92.5598%" y="389" width="0.0264%" height="15" fill="rgb(207,166,20)" fg:x="235062" fg:w="67"/><text x="92.8098%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (373 samples, 0.15%)</title><rect x="92.5924%" y="341" width="0.1469%" height="15" fill="rgb(210,209,22)" fg:x="235145" fg:w="373"/><text x="92.8424%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (373 samples, 0.15%)</title><rect x="92.5924%" y="325" width="0.1469%" height="15" fill="rgb(232,118,20)" fg:x="235145" fg:w="373"/><text x="92.8424%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (373 samples, 0.15%)</title><rect x="92.5924%" y="309" width="0.1469%" height="15" fill="rgb(238,113,42)" fg:x="235145" fg:w="373"/><text x="92.8424%" y="319.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (906 samples, 0.36%)</title><rect x="92.3849%" y="469" width="0.3568%" height="15" fill="rgb(231,42,5)" fg:x="234618" fg:w="906"/><text x="92.6349%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (906 samples, 0.36%)</title><rect x="92.3849%" y="453" width="0.3568%" height="15" fill="rgb(243,166,24)" fg:x="234618" fg:w="906"/><text x="92.6349%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (906 samples, 0.36%)</title><rect x="92.3849%" y="437" width="0.3568%" height="15" fill="rgb(237,226,12)" fg:x="234618" fg:w="906"/><text x="92.6349%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (660 samples, 0.26%)</title><rect x="92.4818%" y="421" width="0.2599%" height="15" fill="rgb(229,133,24)" fg:x="234864" fg:w="660"/><text x="92.7318%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (635 samples, 0.25%)</title><rect x="92.4916%" y="405" width="0.2500%" height="15" fill="rgb(238,33,43)" fg:x="234889" fg:w="635"/><text x="92.7416%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (395 samples, 0.16%)</title><rect x="92.5861%" y="389" width="0.1555%" height="15" fill="rgb(227,59,38)" fg:x="235129" fg:w="395"/><text x="92.8361%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (395 samples, 0.16%)</title><rect x="92.5861%" y="373" width="0.1555%" height="15" fill="rgb(230,97,0)" fg:x="235129" fg:w="395"/><text x="92.8361%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (395 samples, 0.16%)</title><rect x="92.5861%" y="357" width="0.1555%" height="15" fill="rgb(250,173,50)" fg:x="235129" fg:w="395"/><text x="92.8361%" y="367.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (1,430 samples, 0.56%)</title><rect x="92.1873%" y="501" width="0.5631%" height="15" fill="rgb(240,15,50)" fg:x="234116" fg:w="1430"/><text x="92.4373%" y="511.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group_status (945 samples, 0.37%)</title><rect x="92.3782%" y="485" width="0.3721%" height="15" fill="rgb(221,93,22)" fg:x="234601" fg:w="945"/><text x="92.6282%" y="495.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (3,127 samples, 1.23%)</title><rect x="91.5194%" y="533" width="1.2313%" height="15" fill="rgb(245,180,53)" fg:x="232420" fg:w="3127"/><text x="91.7694%" y="543.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (3,122 samples, 1.23%)</title><rect x="91.5214%" y="517" width="1.2293%" height="15" fill="rgb(231,88,51)" fg:x="232425" fg:w="3122"/><text x="91.7714%" y="527.50"></text></g><g><title>bevy_render::draw::Draw::set_pipeline (101 samples, 0.04%)</title><rect x="92.7547%" y="517" width="0.0398%" height="15" fill="rgb(240,58,21)" fg:x="235557" fg:w="101"/><text x="93.0047%" y="527.50"></text></g><g><title>bevy_render::draw::Draw::render_command (99 samples, 0.04%)</title><rect x="92.7555%" y="501" width="0.0390%" height="15" fill="rgb(237,21,10)" fg:x="235559" fg:w="99"/><text x="93.0055%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (44 samples, 0.02%)</title><rect x="92.7771%" y="485" width="0.0173%" height="15" fill="rgb(218,43,11)" fg:x="235614" fg:w="44"/><text x="93.0271%" y="495.50"></text></g><g><title>core::ptr::write (33 samples, 0.01%)</title><rect x="92.7815%" y="469" width="0.0130%" height="15" fill="rgb(218,221,29)" fg:x="235625" fg:w="33"/><text x="93.0315%" y="479.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::ShaderSpecialization as core::cmp::PartialEq&gt;::eq (71 samples, 0.03%)</title><rect x="92.7964%" y="405" width="0.0280%" height="15" fill="rgb(214,118,42)" fg:x="235663" fg:w="71"/><text x="93.0464%" y="415.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (70 samples, 0.03%)</title><rect x="92.7968%" y="389" width="0.0276%" height="15" fill="rgb(251,200,26)" fg:x="235664" fg:w="70"/><text x="93.0468%" y="399.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::ops::deref::Deref&gt;::deref (254 samples, 0.10%)</title><rect x="92.8460%" y="229" width="0.1000%" height="15" fill="rgb(237,101,39)" fg:x="235789" fg:w="254"/><text x="93.0960%" y="239.50"></text></g><g><title>&lt;alloc::borrow::Cow&lt;B&gt; as core::cmp::PartialEq&lt;alloc::borrow::Cow&lt;C&gt;&gt;&gt;::eq (330 samples, 0.13%)</title><rect x="92.8460%" y="245" width="0.1299%" height="15" fill="rgb(251,117,11)" fg:x="235789" fg:w="330"/><text x="93.0960%" y="255.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (73 samples, 0.03%)</title><rect x="92.9472%" y="229" width="0.0287%" height="15" fill="rgb(216,223,23)" fg:x="236046" fg:w="73"/><text x="93.1972%" y="239.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (73 samples, 0.03%)</title><rect x="92.9472%" y="213" width="0.0287%" height="15" fill="rgb(251,54,12)" fg:x="236046" fg:w="73"/><text x="93.1972%" y="223.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (73 samples, 0.03%)</title><rect x="92.9472%" y="197" width="0.0287%" height="15" fill="rgb(254,176,54)" fg:x="236046" fg:w="73"/><text x="93.1972%" y="207.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (73 samples, 0.03%)</title><rect x="92.9472%" y="181" width="0.0287%" height="15" fill="rgb(210,32,8)" fg:x="236046" fg:w="73"/><text x="93.1972%" y="191.50"></text></g><g><title>__memcmp_avx2_movbe (38 samples, 0.01%)</title><rect x="92.9610%" y="165" width="0.0150%" height="15" fill="rgb(235,52,38)" fg:x="236081" fg:w="38"/><text x="93.2110%" y="175.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (388 samples, 0.15%)</title><rect x="92.8354%" y="325" width="0.1528%" height="15" fill="rgb(231,4,44)" fg:x="235762" fg:w="388"/><text x="93.0854%" y="335.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (376 samples, 0.15%)</title><rect x="92.8401%" y="309" width="0.1481%" height="15" fill="rgb(249,2,32)" fg:x="235774" fg:w="376"/><text x="93.0901%" y="319.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal::{{closure}} (376 samples, 0.15%)</title><rect x="92.8401%" y="293" width="0.1481%" height="15" fill="rgb(224,65,26)" fg:x="235774" fg:w="376"/><text x="93.0901%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (376 samples, 0.15%)</title><rect x="92.8401%" y="277" width="0.1481%" height="15" fill="rgb(250,73,40)" fg:x="235774" fg:w="376"/><text x="93.0901%" y="287.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexAttribute as core::cmp::PartialEq&gt;::eq (376 samples, 0.15%)</title><rect x="92.8401%" y="261" width="0.1481%" height="15" fill="rgb(253,177,16)" fg:x="235774" fg:w="376"/><text x="93.0901%" y="271.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_format::VertexFormat as core::cmp::PartialEq&gt;::eq (31 samples, 0.01%)</title><rect x="92.9760%" y="245" width="0.0122%" height="15" fill="rgb(217,32,34)" fg:x="236119" fg:w="31"/><text x="93.2260%" y="255.50"></text></g><g><title>&lt;bevy_render::pipeline::vertex_buffer_descriptor::VertexBufferLayout as core::cmp::PartialEq&gt;::eq (417 samples, 0.16%)</title><rect x="92.8260%" y="405" width="0.1642%" height="15" fill="rgb(212,7,10)" fg:x="235738" fg:w="417"/><text x="93.0760%" y="415.50"></text></g><g><title>alloc::vec::partial_eq::&lt;impl core::cmp::PartialEq&lt;alloc::vec::Vec&lt;U,A&gt;&gt; for alloc::vec::Vec&lt;T,A&gt;&gt;::eq (398 samples, 0.16%)</title><rect x="92.8334%" y="389" width="0.1567%" height="15" fill="rgb(245,89,8)" fg:x="235757" fg:w="398"/><text x="93.0834%" y="399.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (395 samples, 0.16%)</title><rect x="92.8346%" y="373" width="0.1555%" height="15" fill="rgb(237,16,53)" fg:x="235760" fg:w="395"/><text x="93.0846%" y="383.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (394 samples, 0.16%)</title><rect x="92.8350%" y="357" width="0.1551%" height="15" fill="rgb(250,204,30)" fg:x="235761" fg:w="394"/><text x="93.0850%" y="367.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (393 samples, 0.15%)</title><rect x="92.8354%" y="341" width="0.1548%" height="15" fill="rgb(208,77,27)" fg:x="235762" fg:w="393"/><text x="93.0854%" y="351.50"></text></g><g><title>hashbrown::map::make_hash (70 samples, 0.03%)</title><rect x="93.0303%" y="261" width="0.0276%" height="15" fill="rgb(250,204,28)" fg:x="236257" fg:w="70"/><text x="93.2803%" y="271.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (45 samples, 0.02%)</title><rect x="93.0402%" y="245" width="0.0177%" height="15" fill="rgb(244,63,21)" fg:x="236282" fg:w="45"/><text x="93.2902%" y="255.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (43 samples, 0.02%)</title><rect x="93.0409%" y="229" width="0.0169%" height="15" fill="rgb(236,85,44)" fg:x="236284" fg:w="43"/><text x="93.2909%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (42 samples, 0.02%)</title><rect x="93.0705%" y="197" width="0.0165%" height="15" fill="rgb(215,98,4)" fg:x="236359" fg:w="42"/><text x="93.3205%" y="207.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (42 samples, 0.02%)</title><rect x="93.0705%" y="181" width="0.0165%" height="15" fill="rgb(235,38,11)" fg:x="236359" fg:w="42"/><text x="93.3205%" y="191.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (42 samples, 0.02%)</title><rect x="93.0705%" y="165" width="0.0165%" height="15" fill="rgb(254,186,25)" fg:x="236359" fg:w="42"/><text x="93.3205%" y="175.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (468 samples, 0.18%)</title><rect x="93.0870%" y="149" width="0.1843%" height="15" fill="rgb(225,55,31)" fg:x="236401" fg:w="468"/><text x="93.3370%" y="159.50"></text></g><g><title>__memcmp_avx2_movbe (350 samples, 0.14%)</title><rect x="93.1335%" y="133" width="0.1378%" height="15" fill="rgb(211,15,21)" fg:x="236519" fg:w="350"/><text x="93.3835%" y="143.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (514 samples, 0.20%)</title><rect x="93.0705%" y="229" width="0.2024%" height="15" fill="rgb(215,187,41)" fg:x="236359" fg:w="514"/><text x="93.3205%" y="239.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (514 samples, 0.20%)</title><rect x="93.0705%" y="213" width="0.2024%" height="15" fill="rgb(248,69,32)" fg:x="236359" fg:w="514"/><text x="93.3205%" y="223.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (472 samples, 0.19%)</title><rect x="93.0870%" y="197" width="0.1859%" height="15" fill="rgb(252,102,52)" fg:x="236401" fg:w="472"/><text x="93.3370%" y="207.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (472 samples, 0.19%)</title><rect x="93.0870%" y="181" width="0.1859%" height="15" fill="rgb(253,140,32)" fg:x="236401" fg:w="472"/><text x="93.3370%" y="191.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (472 samples, 0.19%)</title><rect x="93.0870%" y="165" width="0.1859%" height="15" fill="rgb(216,56,42)" fg:x="236401" fg:w="472"/><text x="93.3370%" y="175.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (417 samples, 0.16%)</title><rect x="93.2752%" y="181" width="0.1642%" height="15" fill="rgb(216,184,14)" fg:x="236879" fg:w="417"/><text x="93.5252%" y="191.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (417 samples, 0.16%)</title><rect x="93.2752%" y="165" width="0.1642%" height="15" fill="rgb(237,187,27)" fg:x="236879" fg:w="417"/><text x="93.5252%" y="175.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (417 samples, 0.16%)</title><rect x="93.2752%" y="149" width="0.1642%" height="15" fill="rgb(219,65,3)" fg:x="236879" fg:w="417"/><text x="93.5252%" y="159.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all (1,062 samples, 0.42%)</title><rect x="93.0228%" y="389" width="0.4182%" height="15" fill="rgb(245,83,25)" fg:x="236238" fg:w="1062"/><text x="93.2728%" y="399.50"></text></g><g><title>core::iter::traits::iterator::Iterator::try_fold (1,062 samples, 0.42%)</title><rect x="93.0228%" y="373" width="0.4182%" height="15" fill="rgb(214,205,45)" fg:x="236238" fg:w="1062"/><text x="93.2728%" y="383.50"></text></g><g><title>core::iter::traits::iterator::Iterator::all::check::{{closure}} (1,046 samples, 0.41%)</title><rect x="93.0291%" y="357" width="0.4119%" height="15" fill="rgb(241,20,18)" fg:x="236254" fg:w="1046"/><text x="93.2791%" y="367.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq::{{closure}} (1,046 samples, 0.41%)</title><rect x="93.0291%" y="341" width="0.4119%" height="15" fill="rgb(232,163,23)" fg:x="236254" fg:w="1046"/><text x="93.2791%" y="351.50"></text></g><g><title>std::collections::hash::set::HashSet&lt;T,S&gt;::contains (1,046 samples, 0.41%)</title><rect x="93.0291%" y="325" width="0.4119%" height="15" fill="rgb(214,5,46)" fg:x="236254" fg:w="1046"/><text x="93.2791%" y="335.50"></text></g><g><title>hashbrown::set::HashSet&lt;T,S,A&gt;::contains (1,046 samples, 0.41%)</title><rect x="93.0291%" y="309" width="0.4119%" height="15" fill="rgb(229,78,17)" fg:x="236254" fg:w="1046"/><text x="93.2791%" y="319.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,043 samples, 0.41%)</title><rect x="93.0303%" y="293" width="0.4107%" height="15" fill="rgb(248,89,10)" fg:x="236257" fg:w="1043"/><text x="93.2803%" y="303.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,043 samples, 0.41%)</title><rect x="93.0303%" y="277" width="0.4107%" height="15" fill="rgb(248,54,15)" fg:x="236257" fg:w="1043"/><text x="93.2803%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (973 samples, 0.38%)</title><rect x="93.0579%" y="261" width="0.3831%" height="15" fill="rgb(223,116,6)" fg:x="236327" fg:w="973"/><text x="93.3079%" y="271.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (973 samples, 0.38%)</title><rect x="93.0579%" y="245" width="0.3831%" height="15" fill="rgb(205,125,38)" fg:x="236327" fg:w="973"/><text x="93.3079%" y="255.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (425 samples, 0.17%)</title><rect x="93.2737%" y="229" width="0.1674%" height="15" fill="rgb(251,78,38)" fg:x="236875" fg:w="425"/><text x="93.5237%" y="239.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (425 samples, 0.17%)</title><rect x="93.2737%" y="213" width="0.1674%" height="15" fill="rgb(253,78,28)" fg:x="236875" fg:w="425"/><text x="93.5237%" y="223.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (425 samples, 0.17%)</title><rect x="93.2737%" y="197" width="0.1674%" height="15" fill="rgb(209,120,3)" fg:x="236875" fg:w="425"/><text x="93.5237%" y="207.50"></text></g><g><title>&lt;core::slice::iter::Iter&lt;T&gt; as core::iter::traits::iterator::Iterator&gt;::find (1,647 samples, 0.65%)</title><rect x="92.7952%" y="469" width="0.6485%" height="15" fill="rgb(238,229,9)" fg:x="235660" fg:w="1647"/><text x="93.0452%" y="479.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}}::{{closure}} (1,646 samples, 0.65%)</title><rect x="92.7956%" y="453" width="0.6481%" height="15" fill="rgb(253,159,18)" fg:x="235661" fg:w="1646"/><text x="93.0456%" y="463.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (1,646 samples, 0.65%)</title><rect x="92.7956%" y="437" width="0.6481%" height="15" fill="rgb(244,42,34)" fg:x="235661" fg:w="1646"/><text x="93.0456%" y="447.50"></text></g><g><title>&lt;bevy_render::pipeline::pipeline_compiler::PipelineSpecialization as core::cmp::PartialEq&gt;::eq (1,646 samples, 0.65%)</title><rect x="92.7956%" y="421" width="0.6481%" height="15" fill="rgb(224,8,7)" fg:x="235661" fg:w="1646"/><text x="93.0456%" y="431.50"></text></g><g><title>&lt;std::collections::hash::set::HashSet&lt;T,S&gt; as core::cmp::PartialEq&gt;::eq (1,147 samples, 0.45%)</title><rect x="92.9921%" y="405" width="0.4517%" height="15" fill="rgb(210,201,45)" fg:x="236160" fg:w="1147"/><text x="93.2421%" y="415.50"></text></g><g><title>core::option::Option&lt;T&gt;::and_then (1,649 samples, 0.65%)</title><rect x="92.7948%" y="501" width="0.6493%" height="15" fill="rgb(252,185,21)" fg:x="235659" fg:w="1649"/><text x="93.0448%" y="511.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline::{{closure}} (1,649 samples, 0.65%)</title><rect x="92.7948%" y="485" width="0.6493%" height="15" fill="rgb(223,131,1)" fg:x="235659" fg:w="1649"/><text x="93.0448%" y="495.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (30 samples, 0.01%)</title><rect x="93.4843%" y="405" width="0.0118%" height="15" fill="rgb(245,141,16)" fg:x="237410" fg:w="30"/><text x="93.7343%" y="415.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (30 samples, 0.01%)</title><rect x="93.4843%" y="389" width="0.0118%" height="15" fill="rgb(229,55,45)" fg:x="237410" fg:w="30"/><text x="93.7343%" y="399.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (30 samples, 0.01%)</title><rect x="93.4843%" y="373" width="0.0118%" height="15" fill="rgb(208,92,15)" fg:x="237410" fg:w="30"/><text x="93.7343%" y="383.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (108 samples, 0.04%)</title><rect x="93.4540%" y="421" width="0.0425%" height="15" fill="rgb(234,185,47)" fg:x="237333" fg:w="108"/><text x="93.7040%" y="431.50"></text></g><g><title>hashbrown::map::make_hash (134 samples, 0.05%)</title><rect x="93.4461%" y="453" width="0.0528%" height="15" fill="rgb(253,104,50)" fg:x="237313" fg:w="134"/><text x="93.6961%" y="463.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::hash::Hash&gt;::hash (114 samples, 0.04%)</title><rect x="93.4540%" y="437" width="0.0449%" height="15" fill="rgb(205,70,7)" fg:x="237333" fg:w="114"/><text x="93.7040%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (49 samples, 0.02%)</title><rect x="93.4989%" y="437" width="0.0193%" height="15" fill="rgb(240,178,43)" fg:x="237447" fg:w="49"/><text x="93.7489%" y="447.50"></text></g><g><title>bevy_render::pipeline::pipeline_compiler::PipelineCompiler::get_specialized_pipeline (1,843 samples, 0.73%)</title><rect x="92.7944%" y="517" width="0.7257%" height="15" fill="rgb(214,112,2)" fg:x="235658" fg:w="1843"/><text x="93.0444%" y="527.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (188 samples, 0.07%)</title><rect x="93.4461%" y="501" width="0.0740%" height="15" fill="rgb(206,46,17)" fg:x="237313" fg:w="188"/><text x="93.6961%" y="511.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (188 samples, 0.07%)</title><rect x="93.4461%" y="485" width="0.0740%" height="15" fill="rgb(225,220,16)" fg:x="237313" fg:w="188"/><text x="93.6961%" y="495.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (188 samples, 0.07%)</title><rect x="93.4461%" y="469" width="0.0740%" height="15" fill="rgb(238,65,40)" fg:x="237313" fg:w="188"/><text x="93.6961%" y="479.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (54 samples, 0.02%)</title><rect x="93.4989%" y="453" width="0.0213%" height="15" fill="rgb(230,151,21)" fg:x="237447" fg:w="54"/><text x="93.7489%" y="463.50"></text></g><g><title>bevy_render::draw::DrawContext::set_pipeline (1,956 samples, 0.77%)</title><rect x="92.7507%" y="533" width="0.7702%" height="15" fill="rgb(218,58,49)" fg:x="235547" fg:w="1956"/><text x="93.0007%" y="543.50"></text></g><g><title>bevy_render::draw::Draw::set_index_buffer (77 samples, 0.03%)</title><rect x="93.5328%" y="517" width="0.0303%" height="15" fill="rgb(219,179,14)" fg:x="237533" fg:w="77"/><text x="93.7828%" y="527.50"></text></g><g><title>bevy_render::draw::Draw::render_command (77 samples, 0.03%)</title><rect x="93.5328%" y="501" width="0.0303%" height="15" fill="rgb(223,72,1)" fg:x="237533" fg:w="77"/><text x="93.7828%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (75 samples, 0.03%)</title><rect x="93.5336%" y="485" width="0.0295%" height="15" fill="rgb(238,126,10)" fg:x="237535" fg:w="75"/><text x="93.7836%" y="495.50"></text></g><g><title>core::ptr::write (72 samples, 0.03%)</title><rect x="93.5347%" y="469" width="0.0284%" height="15" fill="rgb(224,206,38)" fg:x="237538" fg:w="72"/><text x="93.7847%" y="479.50"></text></g><g><title>bevy_render::draw::DrawContext::set_vertex_buffers_from_bindings (191 samples, 0.08%)</title><rect x="93.5210%" y="533" width="0.0752%" height="15" fill="rgb(212,201,54)" fg:x="237503" fg:w="191"/><text x="93.7710%" y="543.50"></text></g><g><title>bevy_render::draw::Draw::set_vertex_buffer (84 samples, 0.03%)</title><rect x="93.5631%" y="517" width="0.0331%" height="15" fill="rgb(218,154,48)" fg:x="237610" fg:w="84"/><text x="93.8131%" y="527.50"></text></g><g><title>bevy_render::draw::Draw::render_command (84 samples, 0.03%)</title><rect x="93.5631%" y="501" width="0.0331%" height="15" fill="rgb(232,93,24)" fg:x="237610" fg:w="84"/><text x="93.8131%" y="511.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (83 samples, 0.03%)</title><rect x="93.5635%" y="485" width="0.0327%" height="15" fill="rgb(245,30,21)" fg:x="237611" fg:w="83"/><text x="93.8135%" y="495.50"></text></g><g><title>core::ptr::write (81 samples, 0.03%)</title><rect x="93.5643%" y="469" width="0.0319%" height="15" fill="rgb(242,148,29)" fg:x="237613" fg:w="81"/><text x="93.8143%" y="479.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (5,928 samples, 2.33%)</title><rect x="91.2651%" y="549" width="2.3343%" height="15" fill="rgb(244,153,54)" fg:x="231774" fg:w="5928"/><text x="91.5151%" y="559.50">b..</text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (5,936 samples, 2.34%)</title><rect x="91.2627%" y="597" width="2.3374%" height="15" fill="rgb(252,87,22)" fg:x="231768" fg:w="5936"/><text x="91.5127%" y="607.50">&lt;..</text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (5,936 samples, 2.34%)</title><rect x="91.2627%" y="581" width="2.3374%" height="15" fill="rgb(210,51,29)" fg:x="231768" fg:w="5936"/><text x="91.5127%" y="591.50">c..</text></g><g><title>core::ops::function::Fn::call (5,936 samples, 2.34%)</title><rect x="91.2627%" y="565" width="2.3374%" height="15" fill="rgb(242,136,47)" fg:x="231768" fg:w="5936"/><text x="91.5127%" y="575.50">c..</text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (14,168 samples, 5.58%)</title><rect x="88.0326%" y="805" width="5.5789%" height="15" fill="rgb(238,68,4)" fg:x="223565" fg:w="14168"/><text x="88.2826%" y="815.50">&lt;bevy_e..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (14,168 samples, 5.58%)</title><rect x="88.0326%" y="789" width="5.5789%" height="15" fill="rgb(242,161,30)" fg:x="223565" fg:w="14168"/><text x="88.2826%" y="799.50">bevy_ta..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (14,168 samples, 5.58%)</title><rect x="88.0326%" y="773" width="5.5789%" height="15" fill="rgb(218,58,44)" fg:x="223565" fg:w="14168"/><text x="88.2826%" y="783.50">std::th..</text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (14,168 samples, 5.58%)</title><rect x="88.0326%" y="757" width="5.5789%" height="15" fill="rgb(252,125,32)" fg:x="223565" fg:w="14168"/><text x="88.2826%" y="767.50">std::th..</text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (14,168 samples, 5.58%)</title><rect x="88.0326%" y="741" width="5.5789%" height="15" fill="rgb(219,178,0)" fg:x="223565" fg:w="14168"/><text x="88.2826%" y="751.50">bevy_ta..</text></g><g><title>async_executor::Executor::try_tick (14,164 samples, 5.58%)</title><rect x="88.0342%" y="725" width="5.5773%" height="15" fill="rgb(213,152,7)" fg:x="223569" fg:w="14164"/><text x="88.2842%" y="735.50">async_e..</text></g><g><title>async_task::runnable::Runnable::run (14,164 samples, 5.58%)</title><rect x="88.0342%" y="709" width="5.5773%" height="15" fill="rgb(249,109,34)" fg:x="223569" fg:w="14164"/><text x="88.2842%" y="719.50">async_t..</text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (14,164 samples, 5.58%)</title><rect x="88.0342%" y="693" width="5.5773%" height="15" fill="rgb(232,96,21)" fg:x="223569" fg:w="14164"/><text x="88.2842%" y="703.50">async_t..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,164 samples, 5.58%)</title><rect x="88.0342%" y="677" width="5.5773%" height="15" fill="rgb(228,27,39)" fg:x="223569" fg:w="14164"/><text x="88.2842%" y="687.50">&lt;core::..</text></g><g><title>async_executor::Executor::spawn::{{closure}} (14,164 samples, 5.58%)</title><rect x="88.0342%" y="661" width="5.5773%" height="15" fill="rgb(211,182,52)" fg:x="223569" fg:w="14164"/><text x="88.2842%" y="671.50">async_e..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (14,164 samples, 5.58%)</title><rect x="88.0342%" y="645" width="5.5773%" height="15" fill="rgb(234,178,38)" fg:x="223569" fg:w="14164"/><text x="88.2842%" y="655.50">&lt;core::..</text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (14,164 samples, 5.58%)</title><rect x="88.0342%" y="629" width="5.5773%" height="15" fill="rgb(221,111,3)" fg:x="223569" fg:w="14164"/><text x="88.2842%" y="639.50">bevy_ec..</text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (14,164 samples, 5.58%)</title><rect x="88.0342%" y="613" width="5.5773%" height="15" fill="rgb(228,175,21)" fg:x="223569" fg:w="14164"/><text x="88.2842%" y="623.50">&lt;bevy_e..</text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (34 samples, 0.01%)</title><rect x="93.6308%" y="549" width="0.0134%" height="15" fill="rgb(228,174,43)" fg:x="237782" fg:w="34"/><text x="93.8808%" y="559.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (36 samples, 0.01%)</title><rect x="93.6304%" y="581" width="0.0142%" height="15" fill="rgb(211,191,0)" fg:x="237781" fg:w="36"/><text x="93.8804%" y="591.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (36 samples, 0.01%)</title><rect x="93.6304%" y="565" width="0.0142%" height="15" fill="rgb(253,117,3)" fg:x="237781" fg:w="36"/><text x="93.8804%" y="575.50"></text></g><g><title>async_task::runnable::Runnable::run (38 samples, 0.01%)</title><rect x="93.6304%" y="613" width="0.0150%" height="15" fill="rgb(241,127,19)" fg:x="237781" fg:w="38"/><text x="93.8804%" y="623.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (38 samples, 0.01%)</title><rect x="93.6304%" y="597" width="0.0150%" height="15" fill="rgb(218,103,12)" fg:x="237781" fg:w="38"/><text x="93.8804%" y="607.50"></text></g><g><title>concurrent_queue::full_fence (171 samples, 0.07%)</title><rect x="93.6607%" y="581" width="0.0673%" height="15" fill="rgb(236,214,43)" fg:x="237858" fg:w="171"/><text x="93.9107%" y="591.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (169 samples, 0.07%)</title><rect x="93.6615%" y="565" width="0.0665%" height="15" fill="rgb(244,144,19)" fg:x="237860" fg:w="169"/><text x="93.9115%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (169 samples, 0.07%)</title><rect x="93.6615%" y="549" width="0.0665%" height="15" fill="rgb(246,188,10)" fg:x="237860" fg:w="169"/><text x="93.9115%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (169 samples, 0.07%)</title><rect x="93.6615%" y="533" width="0.0665%" height="15" fill="rgb(212,193,33)" fg:x="237860" fg:w="169"/><text x="93.9115%" y="543.50"></text></g><g><title>async_executor::Executor::try_tick (275 samples, 0.11%)</title><rect x="93.6253%" y="629" width="0.1083%" height="15" fill="rgb(241,51,29)" fg:x="237768" fg:w="275"/><text x="93.8753%" y="639.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (224 samples, 0.09%)</title><rect x="93.6454%" y="613" width="0.0882%" height="15" fill="rgb(211,58,19)" fg:x="237819" fg:w="224"/><text x="93.8954%" y="623.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (213 samples, 0.08%)</title><rect x="93.6497%" y="597" width="0.0839%" height="15" fill="rgb(229,111,26)" fg:x="237830" fg:w="213"/><text x="93.8997%" y="607.50"></text></g><g><title>concurrent_queue::full_fence (198 samples, 0.08%)</title><rect x="93.7580%" y="565" width="0.0780%" height="15" fill="rgb(213,115,40)" fg:x="238105" fg:w="198"/><text x="94.0080%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_and_swap (189 samples, 0.07%)</title><rect x="93.7615%" y="549" width="0.0744%" height="15" fill="rgb(209,56,44)" fg:x="238114" fg:w="189"/><text x="94.0115%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (189 samples, 0.07%)</title><rect x="93.7615%" y="533" width="0.0744%" height="15" fill="rgb(230,108,32)" fg:x="238114" fg:w="189"/><text x="94.0115%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (189 samples, 0.07%)</title><rect x="93.7615%" y="517" width="0.0744%" height="15" fill="rgb(216,165,31)" fg:x="238114" fg:w="189"/><text x="94.0115%" y="527.50"></text></g><g><title>async_executor::Executor::try_tick (281 samples, 0.11%)</title><rect x="93.7336%" y="613" width="0.1106%" height="15" fill="rgb(218,122,21)" fg:x="238043" fg:w="281"/><text x="93.9836%" y="623.50"></text></g><g><title>concurrent_queue::ConcurrentQueue&lt;T&gt;::pop (259 samples, 0.10%)</title><rect x="93.7422%" y="597" width="0.1020%" height="15" fill="rgb(223,224,47)" fg:x="238065" fg:w="259"/><text x="93.9922%" y="607.50"></text></g><g><title>concurrent_queue::unbounded::Unbounded&lt;T&gt;::pop (246 samples, 0.10%)</title><rect x="93.7474%" y="581" width="0.0969%" height="15" fill="rgb(238,102,44)" fg:x="238078" fg:w="246"/><text x="93.9974%" y="591.50"></text></g><g><title>async_executor::LocalExecutor::try_tick (284 samples, 0.11%)</title><rect x="93.7336%" y="629" width="0.1118%" height="15" fill="rgb(236,46,40)" fg:x="238043" fg:w="284"/><text x="93.9836%" y="639.50"></text></g><g><title>&lt;core::task::wake::Waker as core::clone::Clone&gt;::clone (212 samples, 0.08%)</title><rect x="93.9017%" y="453" width="0.0835%" height="15" fill="rgb(247,202,50)" fg:x="238470" fg:w="212"/><text x="94.1517%" y="463.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::clone_waker (206 samples, 0.08%)</title><rect x="93.9041%" y="437" width="0.0811%" height="15" fill="rgb(209,99,20)" fg:x="238476" fg:w="206"/><text x="94.1541%" y="447.50"></text></g><g><title>&lt;core::mem::manually_drop::ManuallyDrop&lt;T&gt; as core::clone::Clone&gt;::clone (199 samples, 0.08%)</title><rect x="93.9068%" y="421" width="0.0784%" height="15" fill="rgb(252,27,34)" fg:x="238483" fg:w="199"/><text x="94.1568%" y="431.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::clone::Clone&gt;::clone (199 samples, 0.08%)</title><rect x="93.9068%" y="405" width="0.0784%" height="15" fill="rgb(215,206,23)" fg:x="238483" fg:w="199"/><text x="94.1568%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_add (193 samples, 0.08%)</title><rect x="93.9092%" y="389" width="0.0760%" height="15" fill="rgb(212,135,36)" fg:x="238489" fg:w="193"/><text x="94.1592%" y="399.50"></text></g><g><title>core::sync::atomic::atomic_add (193 samples, 0.08%)</title><rect x="93.9092%" y="373" width="0.0760%" height="15" fill="rgb(240,189,1)" fg:x="238489" fg:w="193"/><text x="94.1592%" y="383.50"></text></g><g><title>async_task::utils::abort_on_panic (410 samples, 0.16%)</title><rect x="93.9017%" y="485" width="0.1614%" height="15" fill="rgb(242,56,20)" fg:x="238470" fg:w="410"/><text x="94.1517%" y="495.50"></text></g><g><title>async_task::header::Header::register::{{closure}} (410 samples, 0.16%)</title><rect x="93.9017%" y="469" width="0.1614%" height="15" fill="rgb(247,132,33)" fg:x="238470" fg:w="410"/><text x="94.1517%" y="479.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;core::task::wake::Waker&gt;&gt; (198 samples, 0.08%)</title><rect x="93.9852%" y="453" width="0.0780%" height="15" fill="rgb(208,149,11)" fg:x="238682" fg:w="198"/><text x="94.2352%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::task::wake::Waker&gt; (189 samples, 0.07%)</title><rect x="93.9887%" y="437" width="0.0744%" height="15" fill="rgb(211,33,11)" fg:x="238691" fg:w="189"/><text x="94.2387%" y="447.50"></text></g><g><title>&lt;core::task::wake::Waker as core::ops::drop::Drop&gt;::drop (189 samples, 0.07%)</title><rect x="93.9887%" y="421" width="0.0744%" height="15" fill="rgb(221,29,38)" fg:x="238691" fg:w="189"/><text x="94.2387%" y="431.50"></text></g><g><title>waker_fn::Helper&lt;F&gt;::drop_waker (189 samples, 0.07%)</title><rect x="93.9887%" y="405" width="0.0744%" height="15" fill="rgb(206,182,49)" fg:x="238691" fg:w="189"/><text x="94.2387%" y="415.50"></text></g><g><title>core::mem::drop (182 samples, 0.07%)</title><rect x="93.9915%" y="389" width="0.0717%" height="15" fill="rgb(216,140,1)" fg:x="238698" fg:w="182"/><text x="94.2415%" y="399.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;futures_lite::future::block_on::parker_and_waker::{{closure}}&gt;&gt; (182 samples, 0.07%)</title><rect x="93.9915%" y="373" width="0.0717%" height="15" fill="rgb(232,57,40)" fg:x="238698" fg:w="182"/><text x="94.2415%" y="383.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (182 samples, 0.07%)</title><rect x="93.9915%" y="357" width="0.0717%" height="15" fill="rgb(224,186,18)" fg:x="238698" fg:w="182"/><text x="94.2415%" y="367.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (180 samples, 0.07%)</title><rect x="93.9923%" y="341" width="0.0709%" height="15" fill="rgb(215,121,11)" fg:x="238700" fg:w="180"/><text x="94.2423%" y="351.50"></text></g><g><title>core::sync::atomic::atomic_sub (180 samples, 0.07%)</title><rect x="93.9923%" y="325" width="0.0709%" height="15" fill="rgb(245,147,10)" fg:x="238700" fg:w="180"/><text x="94.2423%" y="335.50"></text></g><g><title>async_task::header::Header::register (807 samples, 0.32%)</title><rect x="93.8864%" y="501" width="0.3178%" height="15" fill="rgb(238,153,13)" fg:x="238431" fg:w="807"/><text x="94.1364%" y="511.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (352 samples, 0.14%)</title><rect x="94.0655%" y="485" width="0.1386%" height="15" fill="rgb(233,108,0)" fg:x="238886" fg:w="352"/><text x="94.3155%" y="495.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (352 samples, 0.14%)</title><rect x="94.0655%" y="469" width="0.1386%" height="15" fill="rgb(212,157,17)" fg:x="238886" fg:w="352"/><text x="94.3155%" y="479.50"></text></g><g><title>&lt;futures_lite::future::PollOnce&lt;F&gt; as core::future::future::Future&gt;::poll (957 samples, 0.38%)</title><rect x="93.8627%" y="565" width="0.3768%" height="15" fill="rgb(225,213,38)" fg:x="238371" fg:w="957"/><text x="94.1127%" y="575.50"></text></g><g><title>&lt;&amp;mut F as core::future::future::Future&gt;::poll (957 samples, 0.38%)</title><rect x="93.8627%" y="549" width="0.3768%" height="15" fill="rgb(248,16,11)" fg:x="238371" fg:w="957"/><text x="94.1127%" y="559.50"></text></g><g><title>&lt;async_task::task::Task&lt;T&gt; as core::future::future::Future&gt;::poll (957 samples, 0.38%)</title><rect x="93.8627%" y="533" width="0.3768%" height="15" fill="rgb(241,33,4)" fg:x="238371" fg:w="957"/><text x="94.1127%" y="543.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (950 samples, 0.37%)</title><rect x="93.8655%" y="517" width="0.3741%" height="15" fill="rgb(222,26,43)" fg:x="238378" fg:w="950"/><text x="94.1155%" y="527.50"></text></g><g><title>core::sync::atomic::AtomicUsize::load (90 samples, 0.04%)</title><rect x="94.2041%" y="501" width="0.0354%" height="15" fill="rgb(243,29,36)" fg:x="239238" fg:w="90"/><text x="94.4541%" y="511.50"></text></g><g><title>core::sync::atomic::atomic_load (90 samples, 0.04%)</title><rect x="94.2041%" y="485" width="0.0354%" height="15" fill="rgb(241,9,27)" fg:x="239238" fg:w="90"/><text x="94.4541%" y="495.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (1,620 samples, 0.64%)</title><rect x="93.6115%" y="773" width="0.6379%" height="15" fill="rgb(205,117,26)" fg:x="237733" fg:w="1620"/><text x="93.8615%" y="783.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (1,620 samples, 0.64%)</title><rect x="93.6115%" y="757" width="0.6379%" height="15" fill="rgb(209,80,39)" fg:x="237733" fg:w="1620"/><text x="93.8615%" y="767.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (1,620 samples, 0.64%)</title><rect x="93.6115%" y="741" width="0.6379%" height="15" fill="rgb(239,155,6)" fg:x="237733" fg:w="1620"/><text x="93.8615%" y="751.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (1,620 samples, 0.64%)</title><rect x="93.6115%" y="725" width="0.6379%" height="15" fill="rgb(212,104,12)" fg:x="237733" fg:w="1620"/><text x="93.8615%" y="735.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (1,620 samples, 0.64%)</title><rect x="93.6115%" y="709" width="0.6379%" height="15" fill="rgb(234,204,3)" fg:x="237733" fg:w="1620"/><text x="93.8615%" y="719.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (1,620 samples, 0.64%)</title><rect x="93.6115%" y="693" width="0.6379%" height="15" fill="rgb(251,218,7)" fg:x="237733" fg:w="1620"/><text x="93.8615%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,620 samples, 0.64%)</title><rect x="93.6115%" y="677" width="0.6379%" height="15" fill="rgb(221,81,32)" fg:x="237733" fg:w="1620"/><text x="93.8615%" y="687.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (1,620 samples, 0.64%)</title><rect x="93.6115%" y="661" width="0.6379%" height="15" fill="rgb(214,152,26)" fg:x="237733" fg:w="1620"/><text x="93.8615%" y="671.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (1,620 samples, 0.64%)</title><rect x="93.6115%" y="645" width="0.6379%" height="15" fill="rgb(223,22,3)" fg:x="237733" fg:w="1620"/><text x="93.8615%" y="655.50"></text></g><g><title>futures_lite::future::block_on (1,026 samples, 0.40%)</title><rect x="93.8454%" y="629" width="0.4040%" height="15" fill="rgb(207,174,7)" fg:x="238327" fg:w="1026"/><text x="94.0954%" y="639.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (1,012 samples, 0.40%)</title><rect x="93.8509%" y="613" width="0.3985%" height="15" fill="rgb(224,19,52)" fg:x="238341" fg:w="1012"/><text x="94.1009%" y="623.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (999 samples, 0.39%)</title><rect x="93.8560%" y="597" width="0.3934%" height="15" fill="rgb(228,24,14)" fg:x="238354" fg:w="999"/><text x="94.1060%" y="607.50"></text></g><g><title>futures_lite::future::block_on::{{closure}} (984 samples, 0.39%)</title><rect x="93.8620%" y="581" width="0.3875%" height="15" fill="rgb(230,153,43)" fg:x="238369" fg:w="984"/><text x="94.1120%" y="591.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (32 samples, 0.01%)</title><rect x="94.2494%" y="757" width="0.0126%" height="15" fill="rgb(231,106,12)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="767.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (32 samples, 0.01%)</title><rect x="94.2494%" y="741" width="0.0126%" height="15" fill="rgb(215,92,2)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="751.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (32 samples, 0.01%)</title><rect x="94.2494%" y="725" width="0.0126%" height="15" fill="rgb(249,143,25)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="735.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (32 samples, 0.01%)</title><rect x="94.2494%" y="709" width="0.0126%" height="15" fill="rgb(252,7,35)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="719.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (32 samples, 0.01%)</title><rect x="94.2494%" y="693" width="0.0126%" height="15" fill="rgb(216,69,40)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="703.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (32 samples, 0.01%)</title><rect x="94.2494%" y="677" width="0.0126%" height="15" fill="rgb(240,36,33)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="687.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (32 samples, 0.01%)</title><rect x="94.2494%" y="661" width="0.0126%" height="15" fill="rgb(231,128,14)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (32 samples, 0.01%)</title><rect x="94.2494%" y="645" width="0.0126%" height="15" fill="rgb(245,143,14)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (32 samples, 0.01%)</title><rect x="94.2494%" y="629" width="0.0126%" height="15" fill="rgb(222,130,28)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="639.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (32 samples, 0.01%)</title><rect x="94.2494%" y="613" width="0.0126%" height="15" fill="rgb(212,10,48)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="623.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (32 samples, 0.01%)</title><rect x="94.2494%" y="597" width="0.0126%" height="15" fill="rgb(254,118,45)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="607.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (32 samples, 0.01%)</title><rect x="94.2494%" y="581" width="0.0126%" height="15" fill="rgb(228,6,45)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="591.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (32 samples, 0.01%)</title><rect x="94.2494%" y="565" width="0.0126%" height="15" fill="rgb(241,18,35)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="575.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (32 samples, 0.01%)</title><rect x="94.2494%" y="549" width="0.0126%" height="15" fill="rgb(227,214,53)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="559.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (32 samples, 0.01%)</title><rect x="94.2494%" y="533" width="0.0126%" height="15" fill="rgb(224,107,51)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="543.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (32 samples, 0.01%)</title><rect x="94.2494%" y="517" width="0.0126%" height="15" fill="rgb(248,60,28)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="527.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (32 samples, 0.01%)</title><rect x="94.2494%" y="501" width="0.0126%" height="15" fill="rgb(249,101,23)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.01%)</title><rect x="94.2494%" y="485" width="0.0126%" height="15" fill="rgb(228,51,19)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.01%)</title><rect x="94.2494%" y="469" width="0.0126%" height="15" fill="rgb(213,20,6)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.01%)</title><rect x="94.2494%" y="453" width="0.0126%" height="15" fill="rgb(212,124,10)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.01%)</title><rect x="94.2494%" y="437" width="0.0126%" height="15" fill="rgb(248,3,40)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.01%)</title><rect x="94.2494%" y="421" width="0.0126%" height="15" fill="rgb(223,178,23)" fg:x="239353" fg:w="32"/><text x="94.4994%" y="431.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (103 samples, 0.04%)</title><rect x="94.3305%" y="597" width="0.0406%" height="15" fill="rgb(240,132,45)" fg:x="239559" fg:w="103"/><text x="94.5805%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (91 samples, 0.04%)</title><rect x="94.3353%" y="581" width="0.0358%" height="15" fill="rgb(245,164,36)" fg:x="239571" fg:w="91"/><text x="94.5853%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (91 samples, 0.04%)</title><rect x="94.3353%" y="565" width="0.0358%" height="15" fill="rgb(231,188,53)" fg:x="239571" fg:w="91"/><text x="94.5853%" y="575.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (174 samples, 0.07%)</title><rect x="94.3262%" y="629" width="0.0685%" height="15" fill="rgb(237,198,39)" fg:x="239548" fg:w="174"/><text x="94.5762%" y="639.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (170 samples, 0.07%)</title><rect x="94.3278%" y="613" width="0.0669%" height="15" fill="rgb(223,120,35)" fg:x="239552" fg:w="170"/><text x="94.5778%" y="623.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::write (60 samples, 0.02%)</title><rect x="94.3711%" y="597" width="0.0236%" height="15" fill="rgb(253,107,49)" fg:x="239662" fg:w="60"/><text x="94.6211%" y="607.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_or (52 samples, 0.02%)</title><rect x="94.3742%" y="581" width="0.0205%" height="15" fill="rgb(216,44,31)" fg:x="239670" fg:w="52"/><text x="94.6242%" y="591.50"></text></g><g><title>core::sync::atomic::atomic_or (52 samples, 0.02%)</title><rect x="94.3742%" y="565" width="0.0205%" height="15" fill="rgb(253,87,21)" fg:x="239670" fg:w="52"/><text x="94.6242%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (42 samples, 0.02%)</title><rect x="94.3947%" y="581" width="0.0165%" height="15" fill="rgb(226,18,2)" fg:x="239722" fg:w="42"/><text x="94.6447%" y="591.50"></text></g><g><title>&lt;hashbrown::raw::RawIterHash&lt;T,A&gt; as core::iter::traits::iterator::Iterator&gt;::next (29 samples, 0.01%)</title><rect x="94.4239%" y="549" width="0.0114%" height="15" fill="rgb(216,8,46)" fg:x="239796" fg:w="29"/><text x="94.6739%" y="559.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (141 samples, 0.06%)</title><rect x="94.3947%" y="629" width="0.0555%" height="15" fill="rgb(226,140,39)" fg:x="239722" fg:w="141"/><text x="94.6447%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (141 samples, 0.06%)</title><rect x="94.3947%" y="613" width="0.0555%" height="15" fill="rgb(221,194,54)" fg:x="239722" fg:w="141"/><text x="94.6447%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (141 samples, 0.06%)</title><rect x="94.3947%" y="597" width="0.0555%" height="15" fill="rgb(213,92,11)" fg:x="239722" fg:w="141"/><text x="94.6447%" y="607.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (99 samples, 0.04%)</title><rect x="94.4113%" y="581" width="0.0390%" height="15" fill="rgb(229,162,46)" fg:x="239764" fg:w="99"/><text x="94.6613%" y="591.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (93 samples, 0.04%)</title><rect x="94.4136%" y="565" width="0.0366%" height="15" fill="rgb(214,111,36)" fg:x="239770" fg:w="93"/><text x="94.6636%" y="575.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_bind_group (323 samples, 0.13%)</title><rect x="94.3238%" y="645" width="0.1272%" height="15" fill="rgb(207,6,21)" fg:x="239542" fg:w="323"/><text x="94.5738%" y="655.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (26 samples, 0.01%)</title><rect x="94.4569%" y="469" width="0.0102%" height="15" fill="rgb(213,127,38)" fg:x="239880" fg:w="26"/><text x="94.7069%" y="479.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (34 samples, 0.01%)</title><rect x="94.4569%" y="501" width="0.0134%" height="15" fill="rgb(238,118,32)" fg:x="239880" fg:w="34"/><text x="94.7069%" y="511.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (34 samples, 0.01%)</title><rect x="94.4569%" y="485" width="0.0134%" height="15" fill="rgb(240,139,39)" fg:x="239880" fg:w="34"/><text x="94.7069%" y="495.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (36 samples, 0.01%)</title><rect x="94.4569%" y="549" width="0.0142%" height="15" fill="rgb(235,10,37)" fg:x="239880" fg:w="36"/><text x="94.7069%" y="559.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (36 samples, 0.01%)</title><rect x="94.4569%" y="533" width="0.0142%" height="15" fill="rgb(249,171,38)" fg:x="239880" fg:w="36"/><text x="94.7069%" y="543.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (36 samples, 0.01%)</title><rect x="94.4569%" y="517" width="0.0142%" height="15" fill="rgb(242,144,32)" fg:x="239880" fg:w="36"/><text x="94.7069%" y="527.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (39 samples, 0.02%)</title><rect x="94.4569%" y="565" width="0.0154%" height="15" fill="rgb(217,117,21)" fg:x="239880" fg:w="39"/><text x="94.7069%" y="575.50"></text></g><g><title>hashbrown::map::make_hash (54 samples, 0.02%)</title><rect x="94.4526%" y="581" width="0.0213%" height="15" fill="rgb(249,87,1)" fg:x="239869" fg:w="54"/><text x="94.7026%" y="591.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (77 samples, 0.03%)</title><rect x="94.4522%" y="645" width="0.0303%" height="15" fill="rgb(248,196,48)" fg:x="239868" fg:w="77"/><text x="94.7022%" y="655.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (76 samples, 0.03%)</title><rect x="94.4526%" y="629" width="0.0299%" height="15" fill="rgb(251,206,33)" fg:x="239869" fg:w="76"/><text x="94.7026%" y="639.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (76 samples, 0.03%)</title><rect x="94.4526%" y="613" width="0.0299%" height="15" fill="rgb(232,141,28)" fg:x="239869" fg:w="76"/><text x="94.7026%" y="623.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (76 samples, 0.03%)</title><rect x="94.4526%" y="597" width="0.0299%" height="15" fill="rgb(209,167,14)" fg:x="239869" fg:w="76"/><text x="94.7026%" y="607.50"></text></g><g><title>bevy_render::render_graph::nodes::pass_node::DrawState::is_pipeline_set (61 samples, 0.02%)</title><rect x="94.4991%" y="645" width="0.0240%" height="15" fill="rgb(225,11,50)" fg:x="239987" fg:w="61"/><text x="94.7491%" y="655.50"></text></g><g><title>&lt;core::option::Option&lt;T&gt; as core::cmp::PartialEq&gt;::eq (56 samples, 0.02%)</title><rect x="94.5010%" y="629" width="0.0221%" height="15" fill="rgb(209,50,20)" fg:x="239992" fg:w="56"/><text x="94.7510%" y="639.50"></text></g><g><title>&lt;bevy_asset::handle::Handle&lt;T&gt; as core::cmp::PartialEq&gt;::eq (56 samples, 0.02%)</title><rect x="94.5010%" y="613" width="0.0221%" height="15" fill="rgb(212,17,46)" fg:x="239992" fg:w="56"/><text x="94.7510%" y="623.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (56 samples, 0.02%)</title><rect x="94.5010%" y="597" width="0.0221%" height="15" fill="rgb(216,101,39)" fg:x="239992" fg:w="56"/><text x="94.7510%" y="607.50"></text></g><g><title>&lt;uuid::Uuid as core::cmp::PartialEq&gt;::eq (52 samples, 0.02%)</title><rect x="94.5026%" y="581" width="0.0205%" height="15" fill="rgb(212,228,48)" fg:x="239996" fg:w="52"/><text x="94.7526%" y="591.50"></text></g><g><title>core::array::equality::&lt;impl core::cmp::PartialEq&lt;[B: N]&gt; for [A: N]&gt;::eq (52 samples, 0.02%)</title><rect x="94.5026%" y="565" width="0.0205%" height="15" fill="rgb(250,6,50)" fg:x="239996" fg:w="52"/><text x="94.7526%" y="575.50"></text></g><g><title>&lt;T as core::array::equality::SpecArrayEq&lt;U,_&gt;&gt;::spec_eq (52 samples, 0.02%)</title><rect x="94.5026%" y="549" width="0.0205%" height="15" fill="rgb(250,160,48)" fg:x="239996" fg:w="52"/><text x="94.7526%" y="559.50"></text></g><g><title>core::ptr::drop_in_place&lt;core::option::Option&lt;alloc::sync::Arc&lt;[u32]&gt;&gt;&gt; (92 samples, 0.04%)</title><rect x="94.5306%" y="645" width="0.0362%" height="15" fill="rgb(244,216,33)" fg:x="240067" fg:w="92"/><text x="94.7806%" y="655.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::sync::Arc&lt;[u32]&gt;&gt; (89 samples, 0.04%)</title><rect x="94.5318%" y="629" width="0.0350%" height="15" fill="rgb(207,157,5)" fg:x="240070" fg:w="89"/><text x="94.7818%" y="639.50"></text></g><g><title>&lt;alloc::sync::Arc&lt;T&gt; as core::ops::drop::Drop&gt;::drop (89 samples, 0.04%)</title><rect x="94.5318%" y="613" width="0.0350%" height="15" fill="rgb(228,199,8)" fg:x="240070" fg:w="89"/><text x="94.7818%" y="623.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (89 samples, 0.04%)</title><rect x="94.5318%" y="597" width="0.0350%" height="15" fill="rgb(227,80,20)" fg:x="240070" fg:w="89"/><text x="94.7818%" y="607.50"></text></g><g><title>core::sync::atomic::atomic_sub (89 samples, 0.04%)</title><rect x="94.5318%" y="581" width="0.0350%" height="15" fill="rgb(222,9,33)" fg:x="240070" fg:w="89"/><text x="94.7818%" y="591.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (143 samples, 0.06%)</title><rect x="94.5707%" y="581" width="0.0563%" height="15" fill="rgb(239,44,28)" fg:x="240169" fg:w="143"/><text x="94.8207%" y="591.50"></text></g><g><title>__memmove_avx_unaligned_erms (143 samples, 0.06%)</title><rect x="94.5707%" y="565" width="0.0563%" height="15" fill="rgb(249,187,43)" fg:x="240169" fg:w="143"/><text x="94.8207%" y="575.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (151 samples, 0.06%)</title><rect x="94.5703%" y="629" width="0.0595%" height="15" fill="rgb(216,141,28)" fg:x="240168" fg:w="151"/><text x="94.8203%" y="639.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (151 samples, 0.06%)</title><rect x="94.5703%" y="613" width="0.0595%" height="15" fill="rgb(230,154,53)" fg:x="240168" fg:w="151"/><text x="94.8203%" y="623.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (151 samples, 0.06%)</title><rect x="94.5703%" y="597" width="0.0595%" height="15" fill="rgb(227,82,4)" fg:x="240168" fg:w="151"/><text x="94.8203%" y="607.50"></text></g><g><title>wgpu_render_pass_set_bind_group (167 samples, 0.07%)</title><rect x="94.5668%" y="645" width="0.0658%" height="15" fill="rgb(220,107,16)" fg:x="240159" fg:w="167"/><text x="94.8168%" y="655.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (941 samples, 0.37%)</title><rect x="94.2624%" y="661" width="0.3705%" height="15" fill="rgb(207,187,2)" fg:x="239386" fg:w="941"/><text x="94.5124%" y="671.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (944 samples, 0.37%)</title><rect x="94.2624%" y="693" width="0.3717%" height="15" fill="rgb(210,162,52)" fg:x="239386" fg:w="944"/><text x="94.5124%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (944 samples, 0.37%)</title><rect x="94.2624%" y="677" width="0.3717%" height="15" fill="rgb(217,216,49)" fg:x="239386" fg:w="944"/><text x="94.5124%" y="687.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::window_swapchain_node::WindowSwapChainNode as bevy_render::render_graph::node::Node&gt;::update (28 samples, 0.01%)</title><rect x="94.6341%" y="693" width="0.0110%" height="15" fill="rgb(218,146,49)" fg:x="240330" fg:w="28"/><text x="94.8841%" y="703.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::next_swap_chain_texture (26 samples, 0.01%)</title><rect x="94.6349%" y="677" width="0.0102%" height="15" fill="rgb(216,55,40)" fg:x="240332" fg:w="26"/><text x="94.8849%" y="687.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::try_next_swap_chain_texture (26 samples, 0.01%)</title><rect x="94.6349%" y="661" width="0.0102%" height="15" fill="rgb(208,196,21)" fg:x="240332" fg:w="26"/><text x="94.8849%" y="671.50"></text></g><g><title>inplace_it::fixed_array::indirect (52 samples, 0.02%)</title><rect x="94.7546%" y="517" width="0.0205%" height="15" fill="rgb(242,117,42)" fg:x="240636" fg:w="52"/><text x="95.0046%" y="527.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer::{{closure}} (3,644 samples, 1.43%)</title><rect x="94.7806%" y="485" width="1.4349%" height="15" fill="rgb(210,11,23)" fg:x="240702" fg:w="3644"/><text x="95.0306%" y="495.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_copy_buffer (3,638 samples, 1.43%)</title><rect x="94.7830%" y="469" width="1.4325%" height="15" fill="rgb(217,110,2)" fg:x="240708" fg:w="3638"/><text x="95.0330%" y="479.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_copy_buffer (3,638 samples, 1.43%)</title><rect x="94.7830%" y="453" width="1.4325%" height="15" fill="rgb(229,77,54)" fg:x="240708" fg:w="3638"/><text x="95.0330%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3,638 samples, 1.43%)</title><rect x="94.7830%" y="437" width="1.4325%" height="15" fill="rgb(218,53,16)" fg:x="240708" fg:w="3638"/><text x="95.0330%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (3,496 samples, 1.38%)</title><rect x="94.8389%" y="421" width="1.3766%" height="15" fill="rgb(215,38,13)" fg:x="240850" fg:w="3496"/><text x="95.0889%" y="431.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (110 samples, 0.04%)</title><rect x="96.1722%" y="405" width="0.0433%" height="15" fill="rgb(235,42,18)" fg:x="244236" fg:w="110"/><text x="96.4222%" y="415.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (52 samples, 0.02%)</title><rect x="96.1950%" y="389" width="0.0205%" height="15" fill="rgb(219,66,54)" fg:x="244294" fg:w="52"/><text x="96.4450%" y="399.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (3,669 samples, 1.44%)</title><rect x="94.7767%" y="501" width="1.4447%" height="15" fill="rgb(222,205,4)" fg:x="240692" fg:w="3669"/><text x="95.0267%" y="511.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (3,907 samples, 1.54%)</title><rect x="94.6837%" y="597" width="1.5384%" height="15" fill="rgb(227,213,46)" fg:x="240456" fg:w="3907"/><text x="94.9337%" y="607.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (3,900 samples, 1.54%)</title><rect x="94.6865%" y="581" width="1.5357%" height="15" fill="rgb(250,145,42)" fg:x="240463" fg:w="3900"/><text x="94.9365%" y="591.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (3,900 samples, 1.54%)</title><rect x="94.6865%" y="565" width="1.5357%" height="15" fill="rgb(219,15,2)" fg:x="240463" fg:w="3900"/><text x="94.9365%" y="575.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (3,813 samples, 1.50%)</title><rect x="94.7208%" y="549" width="1.5014%" height="15" fill="rgb(231,181,52)" fg:x="240550" fg:w="3813"/><text x="94.9708%" y="559.50"></text></g><g><title>inplace_it::fixed_array::indirect (3,727 samples, 1.47%)</title><rect x="94.7546%" y="533" width="1.4676%" height="15" fill="rgb(235,1,42)" fg:x="240636" fg:w="3727"/><text x="95.0046%" y="543.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (3,675 samples, 1.45%)</title><rect x="94.7751%" y="517" width="1.4471%" height="15" fill="rgb(249,88,27)" fg:x="240688" fg:w="3675"/><text x="95.0251%" y="527.50"></text></g><g><title>core::iter::traits::iterator::Iterator::chain (44 samples, 0.02%)</title><rect x="96.2230%" y="597" width="0.0173%" height="15" fill="rgb(235,145,16)" fg:x="244365" fg:w="44"/><text x="96.4730%" y="607.50"></text></g><g><title>core::iter::traits::iterator::Iterator::map (97 samples, 0.04%)</title><rect x="96.2403%" y="597" width="0.0382%" height="15" fill="rgb(237,114,19)" fg:x="244409" fg:w="97"/><text x="96.4903%" y="607.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::resource::Buffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::resource::Buffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (105 samples, 0.04%)</title><rect x="96.2813%" y="597" width="0.0413%" height="15" fill="rgb(238,51,50)" fg:x="244513" fg:w="105"/><text x="96.5313%" y="607.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (105 samples, 0.04%)</title><rect x="96.2813%" y="581" width="0.0413%" height="15" fill="rgb(205,194,25)" fg:x="244513" fg:w="105"/><text x="96.5313%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (105 samples, 0.04%)</title><rect x="96.2813%" y="565" width="0.0413%" height="15" fill="rgb(215,203,17)" fg:x="244513" fg:w="105"/><text x="96.5313%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (101 samples, 0.04%)</title><rect x="96.2828%" y="549" width="0.0398%" height="15" fill="rgb(233,112,49)" fg:x="244517" fg:w="101"/><text x="96.5328%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_sub (101 samples, 0.04%)</title><rect x="96.2828%" y="533" width="0.0398%" height="15" fill="rgb(241,130,26)" fg:x="244517" fg:w="101"/><text x="96.5328%" y="543.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockWriteGuard&lt;parking_lot::raw_rwlock::RawRwLock,wgpu_core::hub::Storage&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;,wgpu_core::id::Id&lt;wgpu_core::command::CommandBuffer&lt;gfx_backend_empty::Backend&gt;&gt;&gt;&gt;&gt; (97 samples, 0.04%)</title><rect x="96.3226%" y="597" width="0.0382%" height="15" fill="rgb(252,223,19)" fg:x="244618" fg:w="97"/><text x="96.5726%" y="607.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockWriteGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (97 samples, 0.04%)</title><rect x="96.3226%" y="581" width="0.0382%" height="15" fill="rgb(211,95,25)" fg:x="244618" fg:w="97"/><text x="96.5726%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_exclusive (97 samples, 0.04%)</title><rect x="96.3226%" y="565" width="0.0382%" height="15" fill="rgb(251,182,27)" fg:x="244618" fg:w="97"/><text x="96.5726%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange (97 samples, 0.04%)</title><rect x="96.3226%" y="549" width="0.0382%" height="15" fill="rgb(238,24,4)" fg:x="244618" fg:w="97"/><text x="96.5726%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (97 samples, 0.04%)</title><rect x="96.3226%" y="533" width="0.0382%" height="15" fill="rgb(224,220,25)" fg:x="244618" fg:w="97"/><text x="96.5726%" y="543.50"></text></g><g><title>wgpu_core::command::CommandBuffer&lt;B&gt;::get_encoder_mut (33 samples, 0.01%)</title><rect x="96.3754%" y="597" width="0.0130%" height="15" fill="rgb(239,133,26)" fg:x="244752" fg:w="33"/><text x="96.6254%" y="607.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get_mut (27 samples, 0.01%)</title><rect x="96.3777%" y="581" width="0.0106%" height="15" fill="rgb(211,94,48)" fg:x="244758" fg:w="27"/><text x="96.6277%" y="591.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::read (79 samples, 0.03%)</title><rect x="96.3951%" y="597" width="0.0311%" height="15" fill="rgb(239,87,6)" fg:x="244802" fg:w="79"/><text x="96.6451%" y="607.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (79 samples, 0.03%)</title><rect x="96.3951%" y="581" width="0.0311%" height="15" fill="rgb(227,62,0)" fg:x="244802" fg:w="79"/><text x="96.6451%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (79 samples, 0.03%)</title><rect x="96.3951%" y="565" width="0.0311%" height="15" fill="rgb(211,226,4)" fg:x="244802" fg:w="79"/><text x="96.6451%" y="575.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (79 samples, 0.03%)</title><rect x="96.3951%" y="549" width="0.0311%" height="15" fill="rgb(253,38,52)" fg:x="244802" fg:w="79"/><text x="96.6451%" y="559.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (74 samples, 0.03%)</title><rect x="96.3970%" y="533" width="0.0291%" height="15" fill="rgb(229,126,40)" fg:x="244807" fg:w="74"/><text x="96.6470%" y="543.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (74 samples, 0.03%)</title><rect x="96.3970%" y="517" width="0.0291%" height="15" fill="rgb(229,165,44)" fg:x="244807" fg:w="74"/><text x="96.6470%" y="527.50"></text></g><g><title>wgpu_core::hub::Registry&lt;T,I,F&gt;::write (113 samples, 0.04%)</title><rect x="96.4262%" y="597" width="0.0445%" height="15" fill="rgb(247,95,47)" fg:x="244881" fg:w="113"/><text x="96.6762%" y="607.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::write (112 samples, 0.04%)</title><rect x="96.4266%" y="581" width="0.0441%" height="15" fill="rgb(216,140,30)" fg:x="244882" fg:w="112"/><text x="96.6766%" y="591.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_exclusive (112 samples, 0.04%)</title><rect x="96.4266%" y="565" width="0.0441%" height="15" fill="rgb(246,214,8)" fg:x="244882" fg:w="112"/><text x="96.6766%" y="575.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (112 samples, 0.04%)</title><rect x="96.4266%" y="549" width="0.0441%" height="15" fill="rgb(227,224,15)" fg:x="244882" fg:w="112"/><text x="96.6766%" y="559.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (112 samples, 0.04%)</title><rect x="96.4266%" y="533" width="0.0441%" height="15" fill="rgb(233,175,4)" fg:x="244882" fg:w="112"/><text x="96.6766%" y="543.50"></text></g><g><title>wgpu_core::hub::Storage&lt;T,I&gt;::get (44 samples, 0.02%)</title><rect x="96.4774%" y="581" width="0.0173%" height="15" fill="rgb(221,66,45)" fg:x="245011" fg:w="44"/><text x="96.7274%" y="591.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (63 samples, 0.02%)</title><rect x="96.5199%" y="549" width="0.0248%" height="15" fill="rgb(221,178,18)" fg:x="245119" fg:w="63"/><text x="96.7699%" y="559.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (63 samples, 0.02%)</title><rect x="96.5199%" y="533" width="0.0248%" height="15" fill="rgb(213,81,29)" fg:x="245119" fg:w="63"/><text x="96.7699%" y="543.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (58 samples, 0.02%)</title><rect x="96.5219%" y="517" width="0.0228%" height="15" fill="rgb(220,89,49)" fg:x="245124" fg:w="58"/><text x="96.7719%" y="527.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (26 samples, 0.01%)</title><rect x="96.5345%" y="501" width="0.0102%" height="15" fill="rgb(227,60,33)" fg:x="245156" fg:w="26"/><text x="96.7845%" y="511.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (26 samples, 0.01%)</title><rect x="96.5345%" y="485" width="0.0102%" height="15" fill="rgb(205,113,12)" fg:x="245156" fg:w="26"/><text x="96.7845%" y="495.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (26 samples, 0.01%)</title><rect x="96.5345%" y="469" width="0.0102%" height="15" fill="rgb(211,32,1)" fg:x="245156" fg:w="26"/><text x="96.7845%" y="479.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::get_or_insert (96 samples, 0.04%)</title><rect x="96.5104%" y="565" width="0.0378%" height="15" fill="rgb(246,2,12)" fg:x="245095" fg:w="96"/><text x="96.7604%" y="575.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::use_replace (213 samples, 0.08%)</title><rect x="96.4707%" y="597" width="0.0839%" height="15" fill="rgb(243,37,27)" fg:x="244994" fg:w="213"/><text x="96.7207%" y="607.50"></text></g><g><title>wgpu_core::track::ResourceTracker&lt;S&gt;::change_replace (152 samples, 0.06%)</title><rect x="96.4947%" y="581" width="0.0599%" height="15" fill="rgb(248,211,31)" fg:x="245055" fg:w="152"/><text x="96.7447%" y="591.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (7,478 samples, 2.94%)</title><rect x="93.6115%" y="805" width="2.9446%" height="15" fill="rgb(242,146,47)" fg:x="237733" fg:w="7478"/><text x="93.8615%" y="815.50">&lt;b..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (7,478 samples, 2.94%)</title><rect x="93.6115%" y="789" width="2.9446%" height="15" fill="rgb(206,70,20)" fg:x="237733" fg:w="7478"/><text x="93.8615%" y="799.50">&lt;a..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (5,858 samples, 2.31%)</title><rect x="94.2494%" y="773" width="2.3067%" height="15" fill="rgb(215,10,51)" fg:x="239353" fg:w="5858"/><text x="94.4994%" y="783.50">b..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (5,826 samples, 2.29%)</title><rect x="94.2620%" y="757" width="2.2941%" height="15" fill="rgb(243,178,53)" fg:x="239385" fg:w="5826"/><text x="94.5120%" y="767.50">b..</text></g><g><title>bevy_ecs::world::World::resource_scope (5,826 samples, 2.29%)</title><rect x="94.2620%" y="741" width="2.2941%" height="15" fill="rgb(233,221,20)" fg:x="239385" fg:w="5826"/><text x="94.5120%" y="751.50">b..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (5,826 samples, 2.29%)</title><rect x="94.2620%" y="725" width="2.2941%" height="15" fill="rgb(218,95,35)" fg:x="239385" fg:w="5826"/><text x="94.5120%" y="735.50">b..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (5,825 samples, 2.29%)</title><rect x="94.2624%" y="709" width="2.2937%" height="15" fill="rgb(229,13,5)" fg:x="239386" fg:w="5825"/><text x="94.5124%" y="719.50">b..</text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (4,853 samples, 1.91%)</title><rect x="94.6452%" y="693" width="1.9110%" height="15" fill="rgb(252,164,30)" fg:x="240358" fg:w="4853"/><text x="94.8952%" y="703.50">b..</text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (4,853 samples, 1.91%)</title><rect x="94.6452%" y="677" width="1.9110%" height="15" fill="rgb(232,68,36)" fg:x="240358" fg:w="4853"/><text x="94.8952%" y="687.50">&lt;..</text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (4,853 samples, 1.91%)</title><rect x="94.6452%" y="661" width="1.9110%" height="15" fill="rgb(219,59,54)" fg:x="240358" fg:w="4853"/><text x="94.8952%" y="671.50">b..</text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (4,853 samples, 1.91%)</title><rect x="94.6452%" y="645" width="1.9110%" height="15" fill="rgb(250,92,33)" fg:x="240358" fg:w="4853"/><text x="94.8952%" y="655.50">w..</text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (4,853 samples, 1.91%)</title><rect x="94.6452%" y="629" width="1.9110%" height="15" fill="rgb(229,162,54)" fg:x="240358" fg:w="4853"/><text x="94.8952%" y="639.50">&lt;..</text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (4,853 samples, 1.91%)</title><rect x="94.6452%" y="613" width="1.9110%" height="15" fill="rgb(244,114,52)" fg:x="240358" fg:w="4853"/><text x="94.8952%" y="623.50">w..</text></g><g><title>winit::event_loop::EventLoop&lt;T&gt;::run (21,650 samples, 8.53%)</title><rect x="88.0314%" y="965" width="8.5251%" height="15" fill="rgb(212,211,43)" fg:x="223562" fg:w="21650"/><text x="88.2814%" y="975.50">winit::event..</text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (21,650 samples, 8.53%)</title><rect x="88.0314%" y="949" width="8.5251%" height="15" fill="rgb(226,147,8)" fg:x="223562" fg:w="21650"/><text x="88.2814%" y="959.50">winit::platf..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (21,650 samples, 8.53%)</title><rect x="88.0314%" y="933" width="8.5251%" height="15" fill="rgb(226,23,13)" fg:x="223562" fg:w="21650"/><text x="88.2814%" y="943.50">winit::platf..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (21,650 samples, 8.53%)</title><rect x="88.0314%" y="917" width="8.5251%" height="15" fill="rgb(240,63,4)" fg:x="223562" fg:w="21650"/><text x="88.2814%" y="927.50">winit::platf..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (21,650 samples, 8.53%)</title><rect x="88.0314%" y="901" width="8.5251%" height="15" fill="rgb(221,1,32)" fg:x="223562" fg:w="21650"/><text x="88.2814%" y="911.50">winit::platf..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (21,650 samples, 8.53%)</title><rect x="88.0314%" y="885" width="8.5251%" height="15" fill="rgb(242,117,10)" fg:x="223562" fg:w="21650"/><text x="88.2814%" y="895.50">bevy_winit::..</text></g><g><title>bevy_app::app::App::update (21,650 samples, 8.53%)</title><rect x="88.0314%" y="869" width="8.5251%" height="15" fill="rgb(249,172,44)" fg:x="223562" fg:w="21650"/><text x="88.2814%" y="879.50">bevy_app::ap..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (21,650 samples, 8.53%)</title><rect x="88.0314%" y="853" width="8.5251%" height="15" fill="rgb(244,46,45)" fg:x="223562" fg:w="21650"/><text x="88.2814%" y="863.50">&lt;bevy_ecs::s..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (21,650 samples, 8.53%)</title><rect x="88.0314%" y="837" width="8.5251%" height="15" fill="rgb(206,43,17)" fg:x="223562" fg:w="21650"/><text x="88.2814%" y="847.50">bevy_ecs::sc..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (21,647 samples, 8.52%)</title><rect x="88.0326%" y="821" width="8.5239%" height="15" fill="rgb(239,218,39)" fg:x="223565" fg:w="21647"/><text x="88.2826%" y="831.50">&lt;bevy_ecs::s..</text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;bevy_render::pipeline::bind_group::BindGroupDescriptorId,bevy_wgpu::wgpu_resources::WgpuBindGroupInfo,ahash::random_state::RandomState&gt;&gt;&gt; (35 samples, 0.01%)</title><rect x="96.5616%" y="469" width="0.0138%" height="15" fill="rgb(208,169,54)" fg:x="245225" fg:w="35"/><text x="96.8116%" y="479.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (35 samples, 0.01%)</title><rect x="96.5616%" y="453" width="0.0138%" height="15" fill="rgb(247,25,42)" fg:x="245225" fg:w="35"/><text x="96.8116%" y="463.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (35 samples, 0.01%)</title><rect x="96.5616%" y="437" width="0.0138%" height="15" fill="rgb(226,23,31)" fg:x="245225" fg:w="35"/><text x="96.8116%" y="447.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (33 samples, 0.01%)</title><rect x="96.5624%" y="421" width="0.0130%" height="15" fill="rgb(247,16,28)" fg:x="245227" fg:w="33"/><text x="96.8124%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_sub (33 samples, 0.01%)</title><rect x="96.5624%" y="405" width="0.0130%" height="15" fill="rgb(231,147,38)" fg:x="245227" fg:w="33"/><text x="96.8124%" y="415.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (91 samples, 0.04%)</title><rect x="96.5762%" y="421" width="0.0358%" height="15" fill="rgb(253,81,48)" fg:x="245262" fg:w="91"/><text x="96.8262%" y="431.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (91 samples, 0.04%)</title><rect x="96.5762%" y="405" width="0.0358%" height="15" fill="rgb(249,222,43)" fg:x="245262" fg:w="91"/><text x="96.8262%" y="415.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (94 samples, 0.04%)</title><rect x="96.5754%" y="469" width="0.0370%" height="15" fill="rgb(221,3,27)" fg:x="245260" fg:w="94"/><text x="96.8254%" y="479.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (94 samples, 0.04%)</title><rect x="96.5754%" y="453" width="0.0370%" height="15" fill="rgb(228,180,5)" fg:x="245260" fg:w="94"/><text x="96.8254%" y="463.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (93 samples, 0.04%)</title><rect x="96.5758%" y="437" width="0.0366%" height="15" fill="rgb(227,131,42)" fg:x="245261" fg:w="93"/><text x="96.8258%" y="447.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::create_bind_group (179 samples, 0.07%)</title><rect x="96.5589%" y="501" width="0.0705%" height="15" fill="rgb(212,3,39)" fg:x="245218" fg:w="179"/><text x="96.8089%" y="511.50"></text></g><g><title>bevy_wgpu::wgpu_resources::WgpuResources::has_bind_group (175 samples, 0.07%)</title><rect x="96.5604%" y="485" width="0.0689%" height="15" fill="rgb(226,45,5)" fg:x="245222" fg:w="175"/><text x="96.8104%" y="495.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (43 samples, 0.02%)</title><rect x="96.6124%" y="469" width="0.0169%" height="15" fill="rgb(215,167,45)" fg:x="245354" fg:w="43"/><text x="96.8624%" y="479.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (43 samples, 0.02%)</title><rect x="96.6124%" y="453" width="0.0169%" height="15" fill="rgb(250,218,53)" fg:x="245354" fg:w="43"/><text x="96.8624%" y="463.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (43 samples, 0.02%)</title><rect x="96.6124%" y="437" width="0.0169%" height="15" fill="rgb(207,140,0)" fg:x="245354" fg:w="43"/><text x="96.8624%" y="447.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (32 samples, 0.01%)</title><rect x="96.6168%" y="421" width="0.0126%" height="15" fill="rgb(238,133,51)" fg:x="245365" fg:w="32"/><text x="96.8668%" y="431.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (28 samples, 0.01%)</title><rect x="96.6183%" y="405" width="0.0110%" height="15" fill="rgb(218,203,53)" fg:x="245369" fg:w="28"/><text x="96.8683%" y="415.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (181 samples, 0.07%)</title><rect x="96.5589%" y="613" width="0.0713%" height="15" fill="rgb(226,184,25)" fg:x="245218" fg:w="181"/><text x="96.8089%" y="623.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (181 samples, 0.07%)</title><rect x="96.5589%" y="597" width="0.0713%" height="15" fill="rgb(231,121,21)" fg:x="245218" fg:w="181"/><text x="96.8089%" y="607.50"></text></g><g><title>core::ops::function::Fn::call (181 samples, 0.07%)</title><rect x="96.5589%" y="581" width="0.0713%" height="15" fill="rgb(251,14,34)" fg:x="245218" fg:w="181"/><text x="96.8089%" y="591.50"></text></g><g><title>bevy_render::pipeline::render_pipelines::draw_render_pipelines_system (181 samples, 0.07%)</title><rect x="96.5589%" y="565" width="0.0713%" height="15" fill="rgb(249,193,11)" fg:x="245218" fg:w="181"/><text x="96.8089%" y="575.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings (181 samples, 0.07%)</title><rect x="96.5589%" y="549" width="0.0713%" height="15" fill="rgb(220,172,37)" fg:x="245218" fg:w="181"/><text x="96.8089%" y="559.50"></text></g><g><title>bevy_render::draw::DrawContext::set_bind_groups_from_bindings_internal (181 samples, 0.07%)</title><rect x="96.5589%" y="533" width="0.0713%" height="15" fill="rgb(231,229,43)" fg:x="245218" fg:w="181"/><text x="96.8089%" y="543.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::update_bind_group (181 samples, 0.07%)</title><rect x="96.5589%" y="517" width="0.0713%" height="15" fill="rgb(250,161,5)" fg:x="245218" fg:w="181"/><text x="96.8089%" y="527.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (187 samples, 0.07%)</title><rect x="96.5581%" y="821" width="0.0736%" height="15" fill="rgb(218,225,18)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="831.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (187 samples, 0.07%)</title><rect x="96.5581%" y="805" width="0.0736%" height="15" fill="rgb(245,45,42)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="815.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (187 samples, 0.07%)</title><rect x="96.5581%" y="789" width="0.0736%" height="15" fill="rgb(211,115,1)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="799.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (187 samples, 0.07%)</title><rect x="96.5581%" y="773" width="0.0736%" height="15" fill="rgb(248,133,52)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="783.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (187 samples, 0.07%)</title><rect x="96.5581%" y="757" width="0.0736%" height="15" fill="rgb(238,100,21)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="767.50"></text></g><g><title>async_executor::Executor::try_tick (187 samples, 0.07%)</title><rect x="96.5581%" y="741" width="0.0736%" height="15" fill="rgb(247,144,11)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="751.50"></text></g><g><title>async_task::runnable::Runnable::run (187 samples, 0.07%)</title><rect x="96.5581%" y="725" width="0.0736%" height="15" fill="rgb(206,164,16)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="735.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (187 samples, 0.07%)</title><rect x="96.5581%" y="709" width="0.0736%" height="15" fill="rgb(222,34,3)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="719.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (187 samples, 0.07%)</title><rect x="96.5581%" y="693" width="0.0736%" height="15" fill="rgb(248,82,4)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="703.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (187 samples, 0.07%)</title><rect x="96.5581%" y="677" width="0.0736%" height="15" fill="rgb(228,81,46)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="687.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (187 samples, 0.07%)</title><rect x="96.5581%" y="661" width="0.0736%" height="15" fill="rgb(227,67,47)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="671.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (187 samples, 0.07%)</title><rect x="96.5581%" y="645" width="0.0736%" height="15" fill="rgb(215,93,53)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="655.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (187 samples, 0.07%)</title><rect x="96.5581%" y="629" width="0.0736%" height="15" fill="rgb(248,194,39)" fg:x="245216" fg:w="187"/><text x="96.8081%" y="639.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::map_buffer (30 samples, 0.01%)</title><rect x="96.6317%" y="453" width="0.0118%" height="15" fill="rgb(215,5,19)" fg:x="245403" fg:w="30"/><text x="96.8817%" y="463.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3),()&gt;&gt;::run (33 samples, 0.01%)</title><rect x="96.6317%" y="517" width="0.0130%" height="15" fill="rgb(226,215,51)" fg:x="245403" fg:w="33"/><text x="96.8817%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (33 samples, 0.01%)</title><rect x="96.6317%" y="501" width="0.0130%" height="15" fill="rgb(225,56,26)" fg:x="245403" fg:w="33"/><text x="96.8817%" y="511.50"></text></g><g><title>core::ops::function::Fn::call (33 samples, 0.01%)</title><rect x="96.6317%" y="485" width="0.0130%" height="15" fill="rgb(222,75,29)" fg:x="245403" fg:w="33"/><text x="96.8817%" y="495.50"></text></g><g><title>bevy_render::render_graph::nodes::camera_node::camera_node_system (33 samples, 0.01%)</title><rect x="96.6317%" y="469" width="0.0130%" height="15" fill="rgb(236,139,6)" fg:x="245403" fg:w="33"/><text x="96.8817%" y="479.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (49 samples, 0.02%)</title><rect x="96.6601%" y="453" width="0.0193%" height="15" fill="rgb(223,137,36)" fg:x="245475" fg:w="49"/><text x="96.9101%" y="463.50"></text></g><g><title>&lt;bevy_ecs::query::iter::QueryIter&lt;Q,F&gt; as core::iter::traits::iterator::Iterator&gt;::next (51 samples, 0.02%)</title><rect x="96.6963%" y="421" width="0.0201%" height="15" fill="rgb(226,99,2)" fg:x="245567" fg:w="51"/><text x="96.9463%" y="431.50"></text></g><g><title>&lt;bevy_transform::components::global_transform::GlobalTransform as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (31 samples, 0.01%)</title><rect x="96.7640%" y="405" width="0.0122%" height="15" fill="rgb(206,133,23)" fg:x="245739" fg:w="31"/><text x="97.0140%" y="415.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (135 samples, 0.05%)</title><rect x="96.8176%" y="309" width="0.0532%" height="15" fill="rgb(243,173,15)" fg:x="245875" fg:w="135"/><text x="97.0676%" y="319.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (134 samples, 0.05%)</title><rect x="96.8180%" y="293" width="0.0528%" height="15" fill="rgb(228,69,28)" fg:x="245876" fg:w="134"/><text x="97.0680%" y="303.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (27 samples, 0.01%)</title><rect x="96.8723%" y="261" width="0.0106%" height="15" fill="rgb(212,51,22)" fg:x="246014" fg:w="27"/><text x="97.1223%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (27 samples, 0.01%)</title><rect x="96.8723%" y="245" width="0.0106%" height="15" fill="rgb(227,113,0)" fg:x="246014" fg:w="27"/><text x="97.1223%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (27 samples, 0.01%)</title><rect x="96.8723%" y="229" width="0.0106%" height="15" fill="rgb(252,84,27)" fg:x="246014" fg:w="27"/><text x="97.1223%" y="239.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_binding (249 samples, 0.10%)</title><rect x="96.7876%" y="405" width="0.0980%" height="15" fill="rgb(223,145,39)" fg:x="245799" fg:w="249"/><text x="97.0376%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (233 samples, 0.09%)</title><rect x="96.7939%" y="389" width="0.0917%" height="15" fill="rgb(239,219,30)" fg:x="245815" fg:w="233"/><text x="97.0439%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (233 samples, 0.09%)</title><rect x="96.7939%" y="373" width="0.0917%" height="15" fill="rgb(224,196,39)" fg:x="245815" fg:w="233"/><text x="97.0439%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (233 samples, 0.09%)</title><rect x="96.7939%" y="357" width="0.0917%" height="15" fill="rgb(205,35,43)" fg:x="245815" fg:w="233"/><text x="97.0439%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (217 samples, 0.09%)</title><rect x="96.8002%" y="341" width="0.0854%" height="15" fill="rgb(228,201,21)" fg:x="245831" fg:w="217"/><text x="97.0502%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (217 samples, 0.09%)</title><rect x="96.8002%" y="325" width="0.0854%" height="15" fill="rgb(237,118,16)" fg:x="245831" fg:w="217"/><text x="97.0502%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (37 samples, 0.01%)</title><rect x="96.8711%" y="309" width="0.0146%" height="15" fill="rgb(241,17,19)" fg:x="246011" fg:w="37"/><text x="97.1211%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (37 samples, 0.01%)</title><rect x="96.8711%" y="293" width="0.0146%" height="15" fill="rgb(214,10,25)" fg:x="246011" fg:w="37"/><text x="97.1211%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (37 samples, 0.01%)</title><rect x="96.8711%" y="277" width="0.0146%" height="15" fill="rgb(238,37,29)" fg:x="246011" fg:w="37"/><text x="97.1211%" y="287.50"></text></g><g><title>core::option::Option&lt;T&gt;::unwrap (89 samples, 0.04%)</title><rect x="96.8869%" y="405" width="0.0350%" height="15" fill="rgb(253,83,25)" fg:x="246051" fg:w="89"/><text x="97.1369%" y="415.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (595 samples, 0.23%)</title><rect x="96.6896%" y="453" width="0.2343%" height="15" fill="rgb(234,192,12)" fg:x="245550" fg:w="595"/><text x="96.9396%" y="463.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (595 samples, 0.23%)</title><rect x="96.6896%" y="437" width="0.2343%" height="15" fill="rgb(241,216,45)" fg:x="245550" fg:w="595"/><text x="96.9396%" y="447.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (520 samples, 0.20%)</title><rect x="96.7191%" y="421" width="0.2048%" height="15" fill="rgb(242,22,33)" fg:x="245625" fg:w="520"/><text x="96.9691%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::mutex::MutexGuard&lt;parking_lot::raw_mutex::RawMutex,alloc::vec::Vec&lt;bevy_render::render_graph::command::Command&gt;&gt;&gt; (151 samples, 0.06%)</title><rect x="96.9424%" y="405" width="0.0595%" height="15" fill="rgb(231,105,49)" fg:x="246192" fg:w="151"/><text x="97.1924%" y="415.50"></text></g><g><title>&lt;lock_api::mutex::MutexGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (151 samples, 0.06%)</title><rect x="96.9424%" y="389" width="0.0595%" height="15" fill="rgb(218,204,15)" fg:x="246192" fg:w="151"/><text x="97.1924%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::unlock (151 samples, 0.06%)</title><rect x="96.9424%" y="373" width="0.0595%" height="15" fill="rgb(235,138,41)" fg:x="246192" fg:w="151"/><text x="97.1924%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange (151 samples, 0.06%)</title><rect x="96.9424%" y="357" width="0.0595%" height="15" fill="rgb(246,0,9)" fg:x="246192" fg:w="151"/><text x="97.1924%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange (151 samples, 0.06%)</title><rect x="96.9424%" y="341" width="0.0595%" height="15" fill="rgb(210,74,4)" fg:x="246192" fg:w="151"/><text x="97.1924%" y="351.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::copy_staging_buffer_to_final_buffers (270 samples, 0.11%)</title><rect x="96.9255%" y="453" width="0.1063%" height="15" fill="rgb(250,60,41)" fg:x="246149" fg:w="270"/><text x="97.1755%" y="463.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::copy_buffer_to_buffer (263 samples, 0.10%)</title><rect x="96.9282%" y="437" width="0.1036%" height="15" fill="rgb(220,115,12)" fg:x="246156" fg:w="263"/><text x="97.1782%" y="447.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::push (252 samples, 0.10%)</title><rect x="96.9326%" y="421" width="0.0992%" height="15" fill="rgb(237,100,13)" fg:x="246167" fg:w="252"/><text x="97.1826%" y="431.50"></text></g><g><title>lock_api::mutex::Mutex&lt;R,T&gt;::lock (76 samples, 0.03%)</title><rect x="97.0019%" y="405" width="0.0299%" height="15" fill="rgb(213,55,26)" fg:x="246343" fg:w="76"/><text x="97.2519%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_mutex::RawMutex as lock_api::mutex::RawMutex&gt;::lock (76 samples, 0.03%)</title><rect x="97.0019%" y="389" width="0.0299%" height="15" fill="rgb(216,17,4)" fg:x="246343" fg:w="76"/><text x="97.2519%" y="399.50"></text></g><g><title>core::sync::atomic::AtomicU8::compare_exchange_weak (76 samples, 0.03%)</title><rect x="97.0019%" y="373" width="0.0299%" height="15" fill="rgb(220,153,47)" fg:x="246343" fg:w="76"/><text x="97.2519%" y="383.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (76 samples, 0.03%)</title><rect x="97.0019%" y="357" width="0.0299%" height="15" fill="rgb(215,131,9)" fg:x="246343" fg:w="76"/><text x="97.2519%" y="367.50"></text></g><g><title>hashbrown::map::make_hash (27 samples, 0.01%)</title><rect x="97.0448%" y="373" width="0.0106%" height="15" fill="rgb(233,46,42)" fg:x="246452" fg:w="27"/><text x="97.2948%" y="383.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (127 samples, 0.05%)</title><rect x="97.0700%" y="341" width="0.0500%" height="15" fill="rgb(226,86,7)" fg:x="246516" fg:w="127"/><text x="97.3200%" y="351.50"></text></g><g><title>&lt;bevy_ecs::entity::Entity as core::cmp::PartialEq&gt;::eq (124 samples, 0.05%)</title><rect x="97.0712%" y="325" width="0.0488%" height="15" fill="rgb(239,226,21)" fg:x="246519" fg:w="124"/><text x="97.3212%" y="335.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::prepare_uniform_buffers (246 samples, 0.10%)</title><rect x="97.0318%" y="453" width="0.0969%" height="15" fill="rgb(244,137,22)" fg:x="246419" fg:w="246"/><text x="97.2818%" y="463.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::BufferArray&lt;I&gt;::get_or_assign_index (218 samples, 0.09%)</title><rect x="97.0428%" y="437" width="0.0858%" height="15" fill="rgb(211,139,35)" fg:x="246447" fg:w="218"/><text x="97.2928%" y="447.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (213 samples, 0.08%)</title><rect x="97.0448%" y="421" width="0.0839%" height="15" fill="rgb(214,62,50)" fg:x="246452" fg:w="213"/><text x="97.2948%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (213 samples, 0.08%)</title><rect x="97.0448%" y="405" width="0.0839%" height="15" fill="rgb(212,113,44)" fg:x="246452" fg:w="213"/><text x="97.2948%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (213 samples, 0.08%)</title><rect x="97.0448%" y="389" width="0.0839%" height="15" fill="rgb(226,150,43)" fg:x="246452" fg:w="213"/><text x="97.2948%" y="399.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (186 samples, 0.07%)</title><rect x="97.0554%" y="373" width="0.0732%" height="15" fill="rgb(250,71,37)" fg:x="246479" fg:w="186"/><text x="97.3054%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (183 samples, 0.07%)</title><rect x="97.0566%" y="357" width="0.0721%" height="15" fill="rgb(219,76,19)" fg:x="246482" fg:w="183"/><text x="97.3066%" y="367.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (1,245 samples, 0.49%)</title><rect x="96.6447%" y="517" width="0.4902%" height="15" fill="rgb(250,39,11)" fg:x="245436" fg:w="1245"/><text x="96.8947%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (1,245 samples, 0.49%)</title><rect x="96.6447%" y="501" width="0.4902%" height="15" fill="rgb(230,64,31)" fg:x="245436" fg:w="1245"/><text x="96.8947%" y="511.50"></text></g><g><title>core::ops::function::Fn::call (1,245 samples, 0.49%)</title><rect x="96.6447%" y="485" width="0.4902%" height="15" fill="rgb(208,222,23)" fg:x="245436" fg:w="1245"/><text x="96.8947%" y="495.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (1,245 samples, 0.49%)</title><rect x="96.6447%" y="469" width="0.4902%" height="15" fill="rgb(227,125,18)" fg:x="245436" fg:w="1245"/><text x="96.8947%" y="479.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="97.1546%" y="437" width="0.0126%" height="15" fill="rgb(234,210,9)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="447.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (32 samples, 0.01%)</title><rect x="97.1546%" y="421" width="0.0126%" height="15" fill="rgb(217,127,24)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="431.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (32 samples, 0.01%)</title><rect x="97.1546%" y="405" width="0.0126%" height="15" fill="rgb(239,141,48)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="415.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (32 samples, 0.01%)</title><rect x="97.1546%" y="389" width="0.0126%" height="15" fill="rgb(227,109,8)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="399.50"></text></g><g><title>alloc::raw_vec::finish_grow (32 samples, 0.01%)</title><rect x="97.1546%" y="373" width="0.0126%" height="15" fill="rgb(235,184,23)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="383.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (32 samples, 0.01%)</title><rect x="97.1546%" y="357" width="0.0126%" height="15" fill="rgb(227,226,48)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="367.50"></text></g><g><title>alloc::alloc::Global::grow_impl (32 samples, 0.01%)</title><rect x="97.1546%" y="341" width="0.0126%" height="15" fill="rgb(206,150,11)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="351.50"></text></g><g><title>alloc::alloc::realloc (32 samples, 0.01%)</title><rect x="97.1546%" y="325" width="0.0126%" height="15" fill="rgb(254,2,33)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="335.50"></text></g><g><title>__rdl_realloc (32 samples, 0.01%)</title><rect x="97.1546%" y="309" width="0.0126%" height="15" fill="rgb(243,160,20)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="319.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (32 samples, 0.01%)</title><rect x="97.1546%" y="293" width="0.0126%" height="15" fill="rgb(218,208,30)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="303.50"></text></g><g><title>__GI___libc_realloc (32 samples, 0.01%)</title><rect x="97.1546%" y="277" width="0.0126%" height="15" fill="rgb(224,120,49)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="287.50"></text></g><g><title>_int_realloc (32 samples, 0.01%)</title><rect x="97.1546%" y="261" width="0.0126%" height="15" fill="rgb(246,12,2)" fg:x="246731" fg:w="32"/><text x="97.4046%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (35 samples, 0.01%)</title><rect x="97.1542%" y="453" width="0.0138%" height="15" fill="rgb(236,117,3)" fg:x="246730" fg:w="35"/><text x="97.4042%" y="463.50"></text></g><g><title>hashbrown::map::make_hash (30 samples, 0.01%)</title><rect x="97.1893%" y="389" width="0.0118%" height="15" fill="rgb(216,128,52)" fg:x="246819" fg:w="30"/><text x="97.4393%" y="399.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (432 samples, 0.17%)</title><rect x="97.2098%" y="341" width="0.1701%" height="15" fill="rgb(246,145,19)" fg:x="246871" fg:w="432"/><text x="97.4598%" y="351.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (448 samples, 0.18%)</title><rect x="97.2098%" y="357" width="0.1764%" height="15" fill="rgb(222,11,46)" fg:x="246871" fg:w="448"/><text x="97.4598%" y="367.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (36 samples, 0.01%)</title><rect x="97.3881%" y="309" width="0.0142%" height="15" fill="rgb(245,82,36)" fg:x="247324" fg:w="36"/><text x="97.6381%" y="319.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (36 samples, 0.01%)</title><rect x="97.3881%" y="293" width="0.0142%" height="15" fill="rgb(250,73,51)" fg:x="247324" fg:w="36"/><text x="97.6381%" y="303.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (36 samples, 0.01%)</title><rect x="97.3881%" y="277" width="0.0142%" height="15" fill="rgb(221,189,23)" fg:x="247324" fg:w="36"/><text x="97.6381%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (515 samples, 0.20%)</title><rect x="97.2011%" y="373" width="0.2028%" height="15" fill="rgb(210,33,7)" fg:x="246849" fg:w="515"/><text x="97.4511%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (41 samples, 0.02%)</title><rect x="97.3877%" y="357" width="0.0161%" height="15" fill="rgb(210,107,22)" fg:x="247323" fg:w="41"/><text x="97.6377%" y="367.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (41 samples, 0.02%)</title><rect x="97.3877%" y="341" width="0.0161%" height="15" fill="rgb(222,116,37)" fg:x="247323" fg:w="41"/><text x="97.6377%" y="351.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (41 samples, 0.02%)</title><rect x="97.3877%" y="325" width="0.0161%" height="15" fill="rgb(254,17,48)" fg:x="247323" fg:w="41"/><text x="97.6377%" y="335.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (546 samples, 0.21%)</title><rect x="97.1893%" y="421" width="0.2150%" height="15" fill="rgb(224,36,32)" fg:x="246819" fg:w="546"/><text x="97.4393%" y="431.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (546 samples, 0.21%)</title><rect x="97.1893%" y="405" width="0.2150%" height="15" fill="rgb(232,90,46)" fg:x="246819" fg:w="546"/><text x="97.4393%" y="415.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (516 samples, 0.20%)</title><rect x="97.2011%" y="389" width="0.2032%" height="15" fill="rgb(241,66,40)" fg:x="246849" fg:w="516"/><text x="97.4511%" y="399.50"></text></g><g><title>bevy_asset::assets::Assets&lt;T&gt;::get (601 samples, 0.24%)</title><rect x="97.1680%" y="453" width="0.2367%" height="15" fill="rgb(249,184,29)" fg:x="246765" fg:w="601"/><text x="97.4180%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (547 samples, 0.22%)</title><rect x="97.1893%" y="437" width="0.2154%" height="15" fill="rgb(231,181,1)" fg:x="246819" fg:w="547"/><text x="97.4393%" y="447.50"></text></g><g><title>&lt;core::iter::adapters::enumerate::Enumerate&lt;I&gt; as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.02%)</title><rect x="97.4169%" y="437" width="0.0165%" height="15" fill="rgb(224,94,2)" fg:x="247397" fg:w="42"/><text x="97.6669%" y="447.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource::RenderResourceIterator as core::iter::traits::iterator::Iterator&gt;::next (42 samples, 0.02%)</title><rect x="97.4169%" y="421" width="0.0165%" height="15" fill="rgb(229,170,15)" fg:x="247397" fg:w="42"/><text x="97.6669%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;lock_api::rwlock::RwLockReadGuard&lt;parking_lot::raw_rwlock::RawRwLock,std::collections::hash::map::HashMap&lt;(bevy_asset::handle::HandleUntyped,u64),bevy_render::renderer::render_resource::render_resource::RenderResourceId,ahash::random_state::RandomState&gt;&gt;&gt; (39 samples, 0.02%)</title><rect x="97.4397%" y="405" width="0.0154%" height="15" fill="rgb(240,127,35)" fg:x="247455" fg:w="39"/><text x="97.6897%" y="415.50"></text></g><g><title>&lt;lock_api::rwlock::RwLockReadGuard&lt;R,T&gt; as core::ops::drop::Drop&gt;::drop (39 samples, 0.02%)</title><rect x="97.4397%" y="389" width="0.0154%" height="15" fill="rgb(248,196,34)" fg:x="247455" fg:w="39"/><text x="97.6897%" y="399.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::unlock_shared (39 samples, 0.02%)</title><rect x="97.4397%" y="373" width="0.0154%" height="15" fill="rgb(236,137,7)" fg:x="247455" fg:w="39"/><text x="97.6897%" y="383.50"></text></g><g><title>core::sync::atomic::AtomicUsize::fetch_sub (37 samples, 0.01%)</title><rect x="97.4405%" y="357" width="0.0146%" height="15" fill="rgb(235,127,16)" fg:x="247457" fg:w="37"/><text x="97.6905%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_sub (37 samples, 0.01%)</title><rect x="97.4405%" y="341" width="0.0146%" height="15" fill="rgb(250,192,54)" fg:x="247457" fg:w="37"/><text x="97.6905%" y="351.50"></text></g><g><title>core::sync::atomic::AtomicUsize::compare_exchange_weak (42 samples, 0.02%)</title><rect x="97.4555%" y="357" width="0.0165%" height="15" fill="rgb(218,98,20)" fg:x="247495" fg:w="42"/><text x="97.7055%" y="367.50"></text></g><g><title>core::sync::atomic::atomic_compare_exchange_weak (42 samples, 0.02%)</title><rect x="97.4555%" y="341" width="0.0165%" height="15" fill="rgb(230,176,47)" fg:x="247495" fg:w="42"/><text x="97.7055%" y="351.50"></text></g><g><title>lock_api::rwlock::RwLock&lt;R,T&gt;::read (45 samples, 0.02%)</title><rect x="97.4551%" y="405" width="0.0177%" height="15" fill="rgb(244,2,33)" fg:x="247494" fg:w="45"/><text x="97.7051%" y="415.50"></text></g><g><title>&lt;parking_lot::raw_rwlock::RawRwLock as lock_api::rwlock::RawRwLock&gt;::lock_shared (45 samples, 0.02%)</title><rect x="97.4551%" y="389" width="0.0177%" height="15" fill="rgb(231,100,17)" fg:x="247494" fg:w="45"/><text x="97.7051%" y="399.50"></text></g><g><title>parking_lot::raw_rwlock::RawRwLock::try_lock_shared_fast (45 samples, 0.02%)</title><rect x="97.4551%" y="373" width="0.0177%" height="15" fill="rgb(245,23,12)" fg:x="247494" fg:w="45"/><text x="97.7051%" y="383.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource_untyped (141 samples, 0.06%)</title><rect x="97.4346%" y="421" width="0.0555%" height="15" fill="rgb(249,55,22)" fg:x="247442" fg:w="141"/><text x="97.6846%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (44 samples, 0.02%)</title><rect x="97.4728%" y="405" width="0.0173%" height="15" fill="rgb(207,134,9)" fg:x="247539" fg:w="44"/><text x="97.7228%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (44 samples, 0.02%)</title><rect x="97.4728%" y="389" width="0.0173%" height="15" fill="rgb(218,134,0)" fg:x="247539" fg:w="44"/><text x="97.7228%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (44 samples, 0.02%)</title><rect x="97.4728%" y="373" width="0.0173%" height="15" fill="rgb(213,212,33)" fg:x="247539" fg:w="44"/><text x="97.7228%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (27 samples, 0.01%)</title><rect x="97.4795%" y="357" width="0.0106%" height="15" fill="rgb(252,106,18)" fg:x="247556" fg:w="27"/><text x="97.7295%" y="367.50"></text></g><g><title>&lt;dyn bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::get_asset_resource (235 samples, 0.09%)</title><rect x="97.4334%" y="437" width="0.0925%" height="15" fill="rgb(208,126,42)" fg:x="247439" fg:w="235"/><text x="97.6834%" y="447.50"></text></g><g><title>bevy_asset::handle::Handle&lt;T&gt;::clone_weak_untyped (90 samples, 0.04%)</title><rect x="97.4905%" y="421" width="0.0354%" height="15" fill="rgb(246,175,29)" fg:x="247584" fg:w="90"/><text x="97.7405%" y="431.50"></text></g><g><title>&lt;core::result::Result&lt;T,E&gt; as core::ops::try_trait::Try&gt;::branch (59 samples, 0.02%)</title><rect x="97.5657%" y="229" width="0.0232%" height="15" fill="rgb(215,13,50)" fg:x="247775" fg:w="59"/><text x="97.8157%" y="239.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (227 samples, 0.09%)</title><rect x="97.5964%" y="213" width="0.0894%" height="15" fill="rgb(216,172,15)" fg:x="247853" fg:w="227"/><text x="97.8464%" y="223.50"></text></g><g><title>alloc::alloc::Global::grow_impl (227 samples, 0.09%)</title><rect x="97.5964%" y="197" width="0.0894%" height="15" fill="rgb(212,103,13)" fg:x="247853" fg:w="227"/><text x="97.8464%" y="207.50"></text></g><g><title>alloc::alloc::realloc (226 samples, 0.09%)</title><rect x="97.5968%" y="181" width="0.0890%" height="15" fill="rgb(231,171,36)" fg:x="247854" fg:w="226"/><text x="97.8468%" y="191.50"></text></g><g><title>__rdl_realloc (226 samples, 0.09%)</title><rect x="97.5968%" y="165" width="0.0890%" height="15" fill="rgb(250,123,20)" fg:x="247854" fg:w="226"/><text x="97.8468%" y="175.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (226 samples, 0.09%)</title><rect x="97.5968%" y="149" width="0.0890%" height="15" fill="rgb(212,53,50)" fg:x="247854" fg:w="226"/><text x="97.8468%" y="159.50"></text></g><g><title>__GI___libc_realloc (223 samples, 0.09%)</title><rect x="97.5980%" y="133" width="0.0878%" height="15" fill="rgb(243,54,12)" fg:x="247857" fg:w="223"/><text x="97.8480%" y="143.50"></text></g><g><title>_int_realloc (136 samples, 0.05%)</title><rect x="97.6323%" y="117" width="0.0536%" height="15" fill="rgb(234,101,34)" fg:x="247944" fg:w="136"/><text x="97.8823%" y="127.50"></text></g><g><title>_int_malloc (84 samples, 0.03%)</title><rect x="97.6528%" y="101" width="0.0331%" height="15" fill="rgb(254,67,22)" fg:x="247996" fg:w="84"/><text x="97.9028%" y="111.50"></text></g><g><title>alloc::raw_vec::finish_grow (262 samples, 0.10%)</title><rect x="97.5917%" y="229" width="0.1032%" height="15" fill="rgb(250,35,47)" fg:x="247841" fg:w="262"/><text x="97.8417%" y="239.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (339 samples, 0.13%)</title><rect x="97.5645%" y="245" width="0.1335%" height="15" fill="rgb(226,126,38)" fg:x="247772" fg:w="339"/><text x="97.8145%" y="255.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (350 samples, 0.14%)</title><rect x="97.5614%" y="293" width="0.1378%" height="15" fill="rgb(216,138,53)" fg:x="247764" fg:w="350"/><text x="97.8114%" y="303.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (347 samples, 0.14%)</title><rect x="97.5626%" y="277" width="0.1366%" height="15" fill="rgb(246,199,43)" fg:x="247767" fg:w="347"/><text x="97.8126%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (343 samples, 0.14%)</title><rect x="97.5642%" y="261" width="0.1351%" height="15" fill="rgb(232,125,11)" fg:x="247771" fg:w="343"/><text x="97.8142%" y="271.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (32 samples, 0.01%)</title><rect x="97.6992%" y="293" width="0.0126%" height="15" fill="rgb(218,219,45)" fg:x="248114" fg:w="32"/><text x="97.9492%" y="303.50"></text></g><g><title>__memmove_avx_unaligned_erms (32 samples, 0.01%)</title><rect x="97.6992%" y="277" width="0.0126%" height="15" fill="rgb(216,102,54)" fg:x="248114" fg:w="32"/><text x="97.9492%" y="287.50"></text></g><g><title>&lt;&amp;mut W as core::fmt::Write&gt;::write_str (401 samples, 0.16%)</title><rect x="97.5555%" y="389" width="0.1579%" height="15" fill="rgb(250,228,7)" fg:x="247749" fg:w="401"/><text x="97.8055%" y="399.50"></text></g><g><title>&lt;alloc::string::String as core::fmt::Write&gt;::write_str (399 samples, 0.16%)</title><rect x="97.5563%" y="373" width="0.1571%" height="15" fill="rgb(226,125,25)" fg:x="247751" fg:w="399"/><text x="97.8063%" y="383.50"></text></g><g><title>alloc::string::String::push_str (399 samples, 0.16%)</title><rect x="97.5563%" y="357" width="0.1571%" height="15" fill="rgb(224,165,27)" fg:x="247751" fg:w="399"/><text x="97.8063%" y="367.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::extend_from_slice (399 samples, 0.16%)</title><rect x="97.5563%" y="341" width="0.1571%" height="15" fill="rgb(233,86,3)" fg:x="247751" fg:w="399"/><text x="97.8063%" y="351.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as alloc::vec::spec_extend::SpecExtend&lt;&amp;T,core::slice::iter::Iter&lt;T&gt;&gt;&gt;::spec_extend (399 samples, 0.16%)</title><rect x="97.5563%" y="325" width="0.1571%" height="15" fill="rgb(228,116,20)" fg:x="247751" fg:w="399"/><text x="97.8063%" y="335.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::append_elements (391 samples, 0.15%)</title><rect x="97.5594%" y="309" width="0.1540%" height="15" fill="rgb(209,192,17)" fg:x="247759" fg:w="391"/><text x="97.8094%" y="319.50"></text></g><g><title>alloc::fmt::format (493 samples, 0.19%)</title><rect x="97.5260%" y="437" width="0.1941%" height="15" fill="rgb(224,88,34)" fg:x="247674" fg:w="493"/><text x="97.7760%" y="447.50"></text></g><g><title>core::fmt::Write::write_fmt (477 samples, 0.19%)</title><rect x="97.5323%" y="421" width="0.1878%" height="15" fill="rgb(233,38,6)" fg:x="247690" fg:w="477"/><text x="97.7823%" y="431.50"></text></g><g><title>core::fmt::write (442 samples, 0.17%)</title><rect x="97.5460%" y="405" width="0.1740%" height="15" fill="rgb(212,59,30)" fg:x="247725" fg:w="442"/><text x="97.7960%" y="415.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (75 samples, 0.03%)</title><rect x="97.7217%" y="373" width="0.0295%" height="15" fill="rgb(213,80,3)" fg:x="248171" fg:w="75"/><text x="97.9717%" y="383.50"></text></g><g><title>alloc::alloc::dealloc (75 samples, 0.03%)</title><rect x="97.7217%" y="357" width="0.0295%" height="15" fill="rgb(251,178,7)" fg:x="248171" fg:w="75"/><text x="97.9717%" y="367.50"></text></g><g><title>__rdl_dealloc (75 samples, 0.03%)</title><rect x="97.7217%" y="341" width="0.0295%" height="15" fill="rgb(213,154,26)" fg:x="248171" fg:w="75"/><text x="97.9717%" y="351.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (73 samples, 0.03%)</title><rect x="97.7224%" y="325" width="0.0287%" height="15" fill="rgb(238,165,49)" fg:x="248173" fg:w="73"/><text x="97.9724%" y="335.50"></text></g><g><title>__GI___libc_free (73 samples, 0.03%)</title><rect x="97.7224%" y="309" width="0.0287%" height="15" fill="rgb(248,91,46)" fg:x="248173" fg:w="73"/><text x="97.9724%" y="319.50"></text></g><g><title>_int_free (63 samples, 0.02%)</title><rect x="97.7264%" y="293" width="0.0248%" height="15" fill="rgb(244,21,52)" fg:x="248183" fg:w="63"/><text x="97.9764%" y="303.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::setup_uniform_texture_resources (877 samples, 0.35%)</title><rect x="97.4070%" y="453" width="0.3453%" height="15" fill="rgb(247,122,20)" fg:x="247372" fg:w="877"/><text x="97.6570%" y="463.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (78 samples, 0.03%)</title><rect x="97.7217%" y="437" width="0.0307%" height="15" fill="rgb(218,27,9)" fg:x="248171" fg:w="78"/><text x="97.9717%" y="447.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (78 samples, 0.03%)</title><rect x="97.7217%" y="421" width="0.0307%" height="15" fill="rgb(246,7,6)" fg:x="248171" fg:w="78"/><text x="97.9717%" y="431.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (78 samples, 0.03%)</title><rect x="97.7217%" y="405" width="0.0307%" height="15" fill="rgb(227,135,54)" fg:x="248171" fg:w="78"/><text x="97.9717%" y="415.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (78 samples, 0.03%)</title><rect x="97.7217%" y="389" width="0.0307%" height="15" fill="rgb(247,14,11)" fg:x="248171" fg:w="78"/><text x="97.9717%" y="399.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (35 samples, 0.01%)</title><rect x="97.7748%" y="421" width="0.0138%" height="15" fill="rgb(206,149,34)" fg:x="248306" fg:w="35"/><text x="98.0248%" y="431.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for u8&gt;::hash_slice (43 samples, 0.02%)</title><rect x="97.7969%" y="309" width="0.0169%" height="15" fill="rgb(227,228,4)" fg:x="248362" fg:w="43"/><text x="98.0469%" y="319.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (43 samples, 0.02%)</title><rect x="97.7969%" y="293" width="0.0169%" height="15" fill="rgb(238,218,28)" fg:x="248362" fg:w="43"/><text x="98.0469%" y="303.50"></text></g><g><title>ahash::fallback_hash::AHasher::large_update (28 samples, 0.01%)</title><rect x="97.8028%" y="277" width="0.0110%" height="15" fill="rgb(252,86,40)" fg:x="248377" fg:w="28"/><text x="98.0528%" y="287.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::hash::Hash&gt;::hash (51 samples, 0.02%)</title><rect x="97.7953%" y="373" width="0.0201%" height="15" fill="rgb(251,225,11)" fg:x="248358" fg:w="51"/><text x="98.0453%" y="383.50"></text></g><g><title>&lt;uuid::Uuid as core::hash::Hash&gt;::hash (47 samples, 0.02%)</title><rect x="97.7969%" y="357" width="0.0185%" height="15" fill="rgb(206,46,49)" fg:x="248362" fg:w="47"/><text x="98.0469%" y="367.50"></text></g><g><title>core::array::&lt;impl core::hash::Hash for [T: N]&gt;::hash (47 samples, 0.02%)</title><rect x="97.7969%" y="341" width="0.0185%" height="15" fill="rgb(245,128,24)" fg:x="248362" fg:w="47"/><text x="98.0469%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for [T]&gt;::hash (47 samples, 0.02%)</title><rect x="97.7969%" y="325" width="0.0185%" height="15" fill="rgb(219,177,34)" fg:x="248362" fg:w="47"/><text x="98.0469%" y="335.50"></text></g><g><title>hashbrown::map::make_insert_hash (74 samples, 0.03%)</title><rect x="97.7914%" y="405" width="0.0291%" height="15" fill="rgb(218,60,48)" fg:x="248348" fg:w="74"/><text x="98.0414%" y="415.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::hash::Hash&gt;::hash (64 samples, 0.03%)</title><rect x="97.7953%" y="389" width="0.0252%" height="15" fill="rgb(221,11,5)" fg:x="248358" fg:w="64"/><text x="98.0453%" y="399.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (38 samples, 0.01%)</title><rect x="97.8303%" y="341" width="0.0150%" height="15" fill="rgb(220,148,13)" fg:x="248447" fg:w="38"/><text x="98.0803%" y="351.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (38 samples, 0.01%)</title><rect x="97.8303%" y="325" width="0.0150%" height="15" fill="rgb(210,16,3)" fg:x="248447" fg:w="38"/><text x="98.0803%" y="335.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (38 samples, 0.01%)</title><rect x="97.8303%" y="309" width="0.0150%" height="15" fill="rgb(236,80,2)" fg:x="248447" fg:w="38"/><text x="98.0803%" y="319.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (44 samples, 0.02%)</title><rect x="97.8303%" y="389" width="0.0173%" height="15" fill="rgb(239,129,19)" fg:x="248447" fg:w="44"/><text x="98.0803%" y="399.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (44 samples, 0.02%)</title><rect x="97.8303%" y="373" width="0.0173%" height="15" fill="rgb(220,106,35)" fg:x="248447" fg:w="44"/><text x="98.0803%" y="383.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (44 samples, 0.02%)</title><rect x="97.8303%" y="357" width="0.0173%" height="15" fill="rgb(252,139,45)" fg:x="248447" fg:w="44"/><text x="98.0803%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (541 samples, 0.21%)</title><rect x="97.8205%" y="405" width="0.2130%" height="15" fill="rgb(229,8,36)" fg:x="248422" fg:w="541"/><text x="98.0705%" y="415.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry::{{closure}} (472 samples, 0.19%)</title><rect x="97.8477%" y="389" width="0.1859%" height="15" fill="rgb(230,126,33)" fg:x="248491" fg:w="472"/><text x="98.0977%" y="399.50"></text></g><g><title>&lt;bevy_asset::handle::HandleUntyped as core::cmp::PartialEq&gt;::eq (472 samples, 0.19%)</title><rect x="97.8477%" y="373" width="0.1859%" height="15" fill="rgb(239,140,21)" fg:x="248491" fg:w="472"/><text x="98.0977%" y="383.50"></text></g><g><title>&lt;bevy_asset::handle::HandleId as core::cmp::PartialEq&gt;::eq (472 samples, 0.19%)</title><rect x="97.8477%" y="357" width="0.1859%" height="15" fill="rgb(254,104,9)" fg:x="248491" fg:w="472"/><text x="98.0977%" y="367.50"></text></g><g><title>hashbrown::rustc_entry::&lt;impl hashbrown::map::HashMap&lt;K,V,S,A&gt;&gt;::rustc_entry (630 samples, 0.25%)</title><rect x="97.7886%" y="421" width="0.2481%" height="15" fill="rgb(239,52,14)" fg:x="248341" fg:w="630"/><text x="98.0386%" y="431.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::AssetRenderResourceBindings::get_or_insert_mut (726 samples, 0.29%)</title><rect x="97.7524%" y="453" width="0.2859%" height="15" fill="rgb(208,227,44)" fg:x="248249" fg:w="726"/><text x="98.0024%" y="463.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::entry (711 samples, 0.28%)</title><rect x="97.7583%" y="437" width="0.2800%" height="15" fill="rgb(246,18,19)" fg:x="248264" fg:w="711"/><text x="98.0083%" y="447.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (3,577 samples, 1.41%)</title><rect x="96.6317%" y="789" width="1.4085%" height="15" fill="rgb(235,228,25)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="799.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (3,577 samples, 1.41%)</title><rect x="96.6317%" y="773" width="1.4085%" height="15" fill="rgb(240,156,20)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="783.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (3,577 samples, 1.41%)</title><rect x="96.6317%" y="757" width="1.4085%" height="15" fill="rgb(224,8,20)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="767.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (3,577 samples, 1.41%)</title><rect x="96.6317%" y="741" width="1.4085%" height="15" fill="rgb(214,12,52)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="751.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (3,577 samples, 1.41%)</title><rect x="96.6317%" y="725" width="1.4085%" height="15" fill="rgb(211,220,47)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="735.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (3,577 samples, 1.41%)</title><rect x="96.6317%" y="709" width="1.4085%" height="15" fill="rgb(250,173,5)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (3,577 samples, 1.41%)</title><rect x="96.6317%" y="693" width="1.4085%" height="15" fill="rgb(250,125,52)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="703.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (3,577 samples, 1.41%)</title><rect x="96.6317%" y="677" width="1.4085%" height="15" fill="rgb(209,133,18)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="687.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (3,577 samples, 1.41%)</title><rect x="96.6317%" y="661" width="1.4085%" height="15" fill="rgb(216,173,22)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="671.50"></text></g><g><title>async_executor::Executor::try_tick (3,577 samples, 1.41%)</title><rect x="96.6317%" y="645" width="1.4085%" height="15" fill="rgb(205,3,22)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="655.50"></text></g><g><title>async_task::runnable::Runnable::run (3,577 samples, 1.41%)</title><rect x="96.6317%" y="629" width="1.4085%" height="15" fill="rgb(248,22,20)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="639.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (3,577 samples, 1.41%)</title><rect x="96.6317%" y="613" width="1.4085%" height="15" fill="rgb(233,6,29)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="623.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,577 samples, 1.41%)</title><rect x="96.6317%" y="597" width="1.4085%" height="15" fill="rgb(240,22,54)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="607.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (3,577 samples, 1.41%)</title><rect x="96.6317%" y="581" width="1.4085%" height="15" fill="rgb(231,133,32)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="591.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (3,577 samples, 1.41%)</title><rect x="96.6317%" y="565" width="1.4085%" height="15" fill="rgb(248,193,4)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="575.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (3,577 samples, 1.41%)</title><rect x="96.6317%" y="549" width="1.4085%" height="15" fill="rgb(211,178,46)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="559.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (3,577 samples, 1.41%)</title><rect x="96.6317%" y="533" width="1.4085%" height="15" fill="rgb(224,5,42)" fg:x="245403" fg:w="3577"/><text x="96.8817%" y="543.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4,F5,F6,F7),()&gt;&gt;::run (2,299 samples, 0.91%)</title><rect x="97.1349%" y="517" width="0.9053%" height="15" fill="rgb(239,176,25)" fg:x="246681" fg:w="2299"/><text x="97.3849%" y="527.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,299 samples, 0.91%)</title><rect x="97.1349%" y="501" width="0.9053%" height="15" fill="rgb(245,187,50)" fg:x="246681" fg:w="2299"/><text x="97.3849%" y="511.50"></text></g><g><title>core::ops::function::Fn::call (2,299 samples, 0.91%)</title><rect x="97.1349%" y="485" width="0.9053%" height="15" fill="rgb(248,24,15)" fg:x="246681" fg:w="2299"/><text x="97.3849%" y="495.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::asset_render_resources_node_system (2,299 samples, 0.91%)</title><rect x="97.1349%" y="469" width="0.9053%" height="15" fill="rgb(205,166,13)" fg:x="246681" fg:w="2299"/><text x="97.3849%" y="479.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::start_send (28 samples, 0.01%)</title><rect x="98.0418%" y="613" width="0.0110%" height="15" fill="rgb(208,114,23)" fg:x="248984" fg:w="28"/><text x="98.2918%" y="623.50"></text></g><g><title>alloc::boxed::Box&lt;T&gt;::new (28 samples, 0.01%)</title><rect x="98.0418%" y="597" width="0.0110%" height="15" fill="rgb(239,127,18)" fg:x="248984" fg:w="28"/><text x="98.2918%" y="607.50"></text></g><g><title>alloc::alloc::exchange_malloc (28 samples, 0.01%)</title><rect x="98.0418%" y="581" width="0.0110%" height="15" fill="rgb(219,154,28)" fg:x="248984" fg:w="28"/><text x="98.2918%" y="591.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (28 samples, 0.01%)</title><rect x="98.0418%" y="565" width="0.0110%" height="15" fill="rgb(225,157,23)" fg:x="248984" fg:w="28"/><text x="98.2918%" y="575.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (28 samples, 0.01%)</title><rect x="98.0418%" y="549" width="0.0110%" height="15" fill="rgb(219,8,6)" fg:x="248984" fg:w="28"/><text x="98.2918%" y="559.50"></text></g><g><title>alloc::alloc::alloc (28 samples, 0.01%)</title><rect x="98.0418%" y="533" width="0.0110%" height="15" fill="rgb(212,47,6)" fg:x="248984" fg:w="28"/><text x="98.2918%" y="543.50"></text></g><g><title>__rdl_alloc (28 samples, 0.01%)</title><rect x="98.0418%" y="517" width="0.0110%" height="15" fill="rgb(224,190,4)" fg:x="248984" fg:w="28"/><text x="98.2918%" y="527.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (28 samples, 0.01%)</title><rect x="98.0418%" y="501" width="0.0110%" height="15" fill="rgb(239,183,29)" fg:x="248984" fg:w="28"/><text x="98.2918%" y="511.50"></text></g><g><title>__GI___libc_malloc (28 samples, 0.01%)</title><rect x="98.0418%" y="485" width="0.0110%" height="15" fill="rgb(213,57,7)" fg:x="248984" fg:w="28"/><text x="98.2918%" y="495.50"></text></g><g><title>&lt;bevy_wgpu::wgpu_render_pass::WgpuRenderPass as bevy_render::pass::render_pass::RenderPass&gt;::set_bind_group (29 samples, 0.01%)</title><rect x="98.0418%" y="661" width="0.0114%" height="15" fill="rgb(216,148,1)" fg:x="248984" fg:w="29"/><text x="98.2918%" y="671.50"></text></g><g><title>crossbeam_channel::channel::Sender&lt;T&gt;::send (29 samples, 0.01%)</title><rect x="98.0418%" y="645" width="0.0114%" height="15" fill="rgb(236,182,29)" fg:x="248984" fg:w="29"/><text x="98.2918%" y="655.50"></text></g><g><title>crossbeam_channel::flavors::list::Channel&lt;T&gt;::send (29 samples, 0.01%)</title><rect x="98.0418%" y="629" width="0.0114%" height="15" fill="rgb(244,120,48)" fg:x="248984" fg:w="29"/><text x="98.2918%" y="639.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update::{{closure}} (79 samples, 0.03%)</title><rect x="98.0418%" y="677" width="0.0311%" height="15" fill="rgb(206,71,34)" fg:x="248984" fg:w="79"/><text x="98.2918%" y="687.50"></text></g><g><title>wgpu_render_pass_set_bind_group (50 samples, 0.02%)</title><rect x="98.0532%" y="661" width="0.0197%" height="15" fill="rgb(242,32,6)" fg:x="249013" fg:w="50"/><text x="98.3032%" y="671.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::push (28 samples, 0.01%)</title><rect x="98.0619%" y="645" width="0.0110%" height="15" fill="rgb(241,35,3)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="655.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::reserve (28 samples, 0.01%)</title><rect x="98.0619%" y="629" width="0.0110%" height="15" fill="rgb(222,62,19)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="639.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve (28 samples, 0.01%)</title><rect x="98.0619%" y="613" width="0.0110%" height="15" fill="rgb(223,110,41)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="623.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (28 samples, 0.01%)</title><rect x="98.0619%" y="597" width="0.0110%" height="15" fill="rgb(208,224,4)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="607.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::grow_amortized (28 samples, 0.01%)</title><rect x="98.0619%" y="581" width="0.0110%" height="15" fill="rgb(241,137,19)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="591.50"></text></g><g><title>alloc::raw_vec::finish_grow (28 samples, 0.01%)</title><rect x="98.0619%" y="565" width="0.0110%" height="15" fill="rgb(244,24,17)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="575.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::grow (28 samples, 0.01%)</title><rect x="98.0619%" y="549" width="0.0110%" height="15" fill="rgb(245,178,49)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="559.50"></text></g><g><title>alloc::alloc::Global::grow_impl (28 samples, 0.01%)</title><rect x="98.0619%" y="533" width="0.0110%" height="15" fill="rgb(219,160,38)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="543.50"></text></g><g><title>alloc::alloc::realloc (28 samples, 0.01%)</title><rect x="98.0619%" y="517" width="0.0110%" height="15" fill="rgb(228,137,14)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="527.50"></text></g><g><title>__rdl_realloc (28 samples, 0.01%)</title><rect x="98.0619%" y="501" width="0.0110%" height="15" fill="rgb(237,134,11)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="511.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::realloc (28 samples, 0.01%)</title><rect x="98.0619%" y="485" width="0.0110%" height="15" fill="rgb(211,126,44)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="495.50"></text></g><g><title>__GI___libc_realloc (28 samples, 0.01%)</title><rect x="98.0619%" y="469" width="0.0110%" height="15" fill="rgb(226,171,33)" fg:x="249035" fg:w="28"/><text x="98.3119%" y="479.50"></text></g><g><title>&lt;bevy_render::render_graph::nodes::pass_node::PassNode&lt;Q&gt; as bevy_render::render_graph::node::Node&gt;::update (87 samples, 0.03%)</title><rect x="98.0418%" y="709" width="0.0343%" height="15" fill="rgb(253,99,13)" fg:x="248984" fg:w="87"/><text x="98.2918%" y="719.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::begin_pass (87 samples, 0.03%)</title><rect x="98.0418%" y="693" width="0.0343%" height="15" fill="rgb(244,48,7)" fg:x="248984" fg:w="87"/><text x="98.2918%" y="703.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer (115 samples, 0.05%)</title><rect x="98.0859%" y="613" width="0.0453%" height="15" fill="rgb(244,217,54)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="623.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter (115 samples, 0.05%)</title><rect x="98.0859%" y="597" width="0.0453%" height="15" fill="rgb(224,15,18)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="607.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_array (115 samples, 0.05%)</title><rect x="98.0859%" y="581" width="0.0453%" height="15" fill="rgb(244,99,12)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="591.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array (115 samples, 0.05%)</title><rect x="98.0859%" y="565" width="0.0453%" height="15" fill="rgb(233,226,8)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="575.50"></text></g><g><title>inplace_it::fixed_array::indirect (115 samples, 0.05%)</title><rect x="98.0859%" y="549" width="0.0453%" height="15" fill="rgb(229,211,3)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="559.50"></text></g><g><title>inplace_it::fixed_array::try_inplace_array::{{closure}} (115 samples, 0.05%)</title><rect x="98.0859%" y="533" width="0.0453%" height="15" fill="rgb(216,140,21)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="543.50"></text></g><g><title>inplace_it::alloc_array::inplace_or_alloc_from_iter::{{closure}} (115 samples, 0.05%)</title><rect x="98.0859%" y="517" width="0.0453%" height="15" fill="rgb(234,122,30)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="527.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::copy_buffer::{{closure}} (115 samples, 0.05%)</title><rect x="98.0859%" y="501" width="0.0453%" height="15" fill="rgb(236,25,46)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="511.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_copy_buffer (115 samples, 0.05%)</title><rect x="98.0859%" y="485" width="0.0453%" height="15" fill="rgb(217,52,54)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="495.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_copy_buffer (115 samples, 0.05%)</title><rect x="98.0859%" y="469" width="0.0453%" height="15" fill="rgb(222,29,26)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (115 samples, 0.05%)</title><rect x="98.0859%" y="453" width="0.0453%" height="15" fill="rgb(216,177,29)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (115 samples, 0.05%)</title><rect x="98.0859%" y="437" width="0.0453%" height="15" fill="rgb(247,136,51)" fg:x="249096" fg:w="115"/><text x="98.3359%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (89 samples, 0.04%)</title><rect x="98.0961%" y="421" width="0.0350%" height="15" fill="rgb(231,47,47)" fg:x="249122" fg:w="89"/><text x="98.3461%" y="431.50"></text></g><g><title>__memmove_avx_unaligned_erms (239 samples, 0.09%)</title><rect x="98.1544%" y="597" width="0.0941%" height="15" fill="rgb(211,192,36)" fg:x="249270" fg:w="239"/><text x="98.4044%" y="607.50"></text></g><g><title>__memmove_avx_unaligned_erms (121 samples, 0.05%)</title><rect x="98.3044%" y="581" width="0.0476%" height="15" fill="rgb(229,156,32)" fg:x="249651" fg:w="121"/><text x="98.5544%" y="591.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (695 samples, 0.27%)</title><rect x="98.0792%" y="709" width="0.2737%" height="15" fill="rgb(248,213,20)" fg:x="249079" fg:w="695"/><text x="98.3292%" y="719.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (695 samples, 0.27%)</title><rect x="98.0792%" y="693" width="0.2737%" height="15" fill="rgb(217,64,7)" fg:x="249079" fg:w="695"/><text x="98.3292%" y="703.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (678 samples, 0.27%)</title><rect x="98.0859%" y="677" width="0.2670%" height="15" fill="rgb(232,142,8)" fg:x="249096" fg:w="678"/><text x="98.3359%" y="687.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (678 samples, 0.27%)</title><rect x="98.0859%" y="661" width="0.2670%" height="15" fill="rgb(224,92,44)" fg:x="249096" fg:w="678"/><text x="98.3359%" y="671.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (678 samples, 0.27%)</title><rect x="98.0859%" y="645" width="0.2670%" height="15" fill="rgb(214,169,17)" fg:x="249096" fg:w="678"/><text x="98.3359%" y="655.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (678 samples, 0.27%)</title><rect x="98.0859%" y="629" width="0.2670%" height="15" fill="rgb(210,59,37)" fg:x="249096" fg:w="678"/><text x="98.3359%" y="639.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (563 samples, 0.22%)</title><rect x="98.1312%" y="613" width="0.2217%" height="15" fill="rgb(214,116,48)" fg:x="249211" fg:w="563"/><text x="98.3812%" y="623.50"></text></g><g><title>gfx_backend_vulkan::command::destructure_barriers (229 samples, 0.09%)</title><rect x="98.2627%" y="597" width="0.0902%" height="15" fill="rgb(244,191,6)" fg:x="249545" fg:w="229"/><text x="98.5127%" y="607.50"></text></g><g><title>gfx_backend_vulkan::device::&lt;impl gfx_hal::device::Device&lt;gfx_backend_vulkan::Backend&gt; for gfx_backend_vulkan::Device&gt;::create_fence (34 samples, 0.01%)</title><rect x="98.3698%" y="661" width="0.0134%" height="15" fill="rgb(241,50,52)" fg:x="249817" fg:w="34"/><text x="98.6198%" y="671.50"></text></g><g><title>ash::device::DeviceV1_0::create_fence (34 samples, 0.01%)</title><rect x="98.3698%" y="645" width="0.0134%" height="15" fill="rgb(236,75,39)" fg:x="249817" fg:w="34"/><text x="98.6198%" y="655.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::create_fence (34 samples, 0.01%)</title><rect x="98.3698%" y="629" width="0.0134%" height="15" fill="rgb(236,99,0)" fg:x="249817" fg:w="34"/><text x="98.6198%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (34 samples, 0.01%)</title><rect x="98.3698%" y="613" width="0.0134%" height="15" fill="rgb(207,202,15)" fg:x="249817" fg:w="34"/><text x="98.6198%" y="623.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (34 samples, 0.01%)</title><rect x="98.3698%" y="597" width="0.0134%" height="15" fill="rgb(233,207,14)" fg:x="249817" fg:w="34"/><text x="98.6198%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (34 samples, 0.01%)</title><rect x="98.3698%" y="581" width="0.0134%" height="15" fill="rgb(226,27,51)" fg:x="249817" fg:w="34"/><text x="98.6198%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (32 samples, 0.01%)</title><rect x="98.3706%" y="565" width="0.0126%" height="15" fill="rgb(206,104,42)" fg:x="249819" fg:w="32"/><text x="98.6206%" y="575.50"></text></g><g><title>winit::platform_impl::platform::EventLoop&lt;T&gt;::run (4,688 samples, 1.85%)</title><rect x="96.5565%" y="965" width="1.8460%" height="15" fill="rgb(212,225,4)" fg:x="245212" fg:w="4688"/><text x="96.8065%" y="975.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (4,688 samples, 1.85%)</title><rect x="96.5565%" y="949" width="1.8460%" height="15" fill="rgb(233,96,42)" fg:x="245212" fg:w="4688"/><text x="96.8065%" y="959.50">w..</text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (4,688 samples, 1.85%)</title><rect x="96.5565%" y="933" width="1.8460%" height="15" fill="rgb(229,21,32)" fg:x="245212" fg:w="4688"/><text x="96.8065%" y="943.50">w..</text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (4,688 samples, 1.85%)</title><rect x="96.5565%" y="917" width="1.8460%" height="15" fill="rgb(226,216,24)" fg:x="245212" fg:w="4688"/><text x="96.8065%" y="927.50">w..</text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (4,688 samples, 1.85%)</title><rect x="96.5565%" y="901" width="1.8460%" height="15" fill="rgb(221,163,17)" fg:x="245212" fg:w="4688"/><text x="96.8065%" y="911.50">b..</text></g><g><title>bevy_app::app::App::update (4,688 samples, 1.85%)</title><rect x="96.5565%" y="885" width="1.8460%" height="15" fill="rgb(216,216,42)" fg:x="245212" fg:w="4688"/><text x="96.8065%" y="895.50">b..</text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (4,688 samples, 1.85%)</title><rect x="96.5565%" y="869" width="1.8460%" height="15" fill="rgb(240,118,7)" fg:x="245212" fg:w="4688"/><text x="96.8065%" y="879.50">&lt;..</text></g><g><title>bevy_ecs::schedule::Schedule::run_once (4,688 samples, 1.85%)</title><rect x="96.5565%" y="853" width="1.8460%" height="15" fill="rgb(221,67,37)" fg:x="245212" fg:w="4688"/><text x="96.8065%" y="863.50">b..</text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (4,684 samples, 1.84%)</title><rect x="96.5581%" y="837" width="1.8444%" height="15" fill="rgb(241,32,44)" fg:x="245216" fg:w="4684"/><text x="96.8081%" y="847.50">&lt;..</text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (4,497 samples, 1.77%)</title><rect x="96.6317%" y="821" width="1.7708%" height="15" fill="rgb(235,204,43)" fg:x="245403" fg:w="4497"/><text x="96.8817%" y="831.50">&lt;..</text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (4,497 samples, 1.77%)</title><rect x="96.6317%" y="805" width="1.7708%" height="15" fill="rgb(213,116,10)" fg:x="245403" fg:w="4497"/><text x="96.8817%" y="815.50">&lt;..</text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (920 samples, 0.36%)</title><rect x="98.0402%" y="789" width="0.3623%" height="15" fill="rgb(239,15,48)" fg:x="248980" fg:w="920"/><text x="98.2902%" y="799.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (916 samples, 0.36%)</title><rect x="98.0418%" y="773" width="0.3607%" height="15" fill="rgb(207,123,36)" fg:x="248984" fg:w="916"/><text x="98.2918%" y="783.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (916 samples, 0.36%)</title><rect x="98.0418%" y="757" width="0.3607%" height="15" fill="rgb(209,103,30)" fg:x="248984" fg:w="916"/><text x="98.2918%" y="767.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (916 samples, 0.36%)</title><rect x="98.0418%" y="741" width="0.3607%" height="15" fill="rgb(238,100,19)" fg:x="248984" fg:w="916"/><text x="98.2918%" y="751.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (916 samples, 0.36%)</title><rect x="98.0418%" y="725" width="0.3607%" height="15" fill="rgb(244,30,14)" fg:x="248984" fg:w="916"/><text x="98.2918%" y="735.50"></text></g><g><title>wgpu::Queue::submit (126 samples, 0.05%)</title><rect x="98.3529%" y="709" width="0.0496%" height="15" fill="rgb(249,174,6)" fg:x="249774" fg:w="126"/><text x="98.6029%" y="719.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (126 samples, 0.05%)</title><rect x="98.3529%" y="693" width="0.0496%" height="15" fill="rgb(235,213,41)" fg:x="249774" fg:w="126"/><text x="98.6029%" y="703.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (126 samples, 0.05%)</title><rect x="98.3529%" y="677" width="0.0496%" height="15" fill="rgb(213,118,6)" fg:x="249774" fg:w="126"/><text x="98.6029%" y="687.50"></text></g><g><title>&lt;f32 as bevy_render::colorspace::SrgbColorSpace&gt;::nonlinear_to_linear_srgb (177 samples, 0.07%)</title><rect x="98.4174%" y="389" width="0.0697%" height="15" fill="rgb(235,44,51)" fg:x="249938" fg:w="177"/><text x="98.6674%" y="399.50"></text></g><g><title>std::f32::&lt;impl f32&gt;::powf (167 samples, 0.07%)</title><rect x="98.4214%" y="373" width="0.0658%" height="15" fill="rgb(217,9,53)" fg:x="249948" fg:w="167"/><text x="98.6714%" y="383.50"></text></g><g><title>[libm-2.33.so] (167 samples, 0.07%)</title><rect x="98.4214%" y="357" width="0.0658%" height="15" fill="rgb(237,172,34)" fg:x="249948" fg:w="167"/><text x="98.6714%" y="367.50"></text></g><g><title>&lt;bevy_sprite::texture_atlas::TextureAtlasSprite as bevy_render::renderer::render_resource::render_resource::RenderResource&gt;::write_buffer_bytes (297 samples, 0.12%)</title><rect x="98.4052%" y="421" width="0.1169%" height="15" fill="rgb(206,206,11)" fg:x="249907" fg:w="297"/><text x="98.6552%" y="431.50"></text></g><g><title>&lt;bevy_render::color::Color as bevy_core::bytes::Bytes&gt;::write_bytes (297 samples, 0.12%)</title><rect x="98.4052%" y="405" width="0.1169%" height="15" fill="rgb(214,149,29)" fg:x="249907" fg:w="297"/><text x="98.6552%" y="415.50"></text></g><g><title>[libm-2.33.so] (89 samples, 0.04%)</title><rect x="98.4871%" y="389" width="0.0350%" height="15" fill="rgb(208,123,3)" fg:x="250115" fg:w="89"/><text x="98.7371%" y="399.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::allocate_in (27 samples, 0.01%)</title><rect x="98.5234%" y="245" width="0.0106%" height="15" fill="rgb(229,126,4)" fg:x="250207" fg:w="27"/><text x="98.7734%" y="255.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::allocate (27 samples, 0.01%)</title><rect x="98.5234%" y="229" width="0.0106%" height="15" fill="rgb(222,92,36)" fg:x="250207" fg:w="27"/><text x="98.7734%" y="239.50"></text></g><g><title>alloc::alloc::Global::alloc_impl (27 samples, 0.01%)</title><rect x="98.5234%" y="213" width="0.0106%" height="15" fill="rgb(216,39,41)" fg:x="250207" fg:w="27"/><text x="98.7734%" y="223.50"></text></g><g><title>alloc::alloc::alloc (27 samples, 0.01%)</title><rect x="98.5234%" y="197" width="0.0106%" height="15" fill="rgb(253,127,28)" fg:x="250207" fg:w="27"/><text x="98.7734%" y="207.50"></text></g><g><title>__rdl_alloc (27 samples, 0.01%)</title><rect x="98.5234%" y="181" width="0.0106%" height="15" fill="rgb(249,152,51)" fg:x="250207" fg:w="27"/><text x="98.7734%" y="191.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::alloc (27 samples, 0.01%)</title><rect x="98.5234%" y="165" width="0.0106%" height="15" fill="rgb(209,123,42)" fg:x="250207" fg:w="27"/><text x="98.7734%" y="175.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="98.5234%" y="277" width="0.0114%" height="15" fill="rgb(241,118,22)" fg:x="250207" fg:w="29"/><text x="98.7734%" y="287.50"></text></g><g><title>alloc::raw_vec::RawVec&lt;T,A&gt;::with_capacity_in (29 samples, 0.01%)</title><rect x="98.5234%" y="261" width="0.0114%" height="15" fill="rgb(208,25,7)" fg:x="250207" fg:w="29"/><text x="98.7734%" y="271.50"></text></g><g><title>&lt;str as alloc::string::ToString&gt;::to_string (41 samples, 0.02%)</title><rect x="98.5234%" y="405" width="0.0161%" height="15" fill="rgb(243,144,39)" fg:x="250207" fg:w="41"/><text x="98.7734%" y="415.50"></text></g><g><title>&lt;alloc::string::String as core::convert::From&lt;&amp;str&gt;&gt;::from (41 samples, 0.02%)</title><rect x="98.5234%" y="389" width="0.0161%" height="15" fill="rgb(250,50,5)" fg:x="250207" fg:w="41"/><text x="98.7734%" y="399.50"></text></g><g><title>alloc::str::&lt;impl alloc::borrow::ToOwned for str&gt;::to_owned (41 samples, 0.02%)</title><rect x="98.5234%" y="373" width="0.0161%" height="15" fill="rgb(207,67,11)" fg:x="250207" fg:w="41"/><text x="98.7734%" y="383.50"></text></g><g><title>alloc::slice::&lt;impl alloc::borrow::ToOwned for [T]&gt;::to_owned (41 samples, 0.02%)</title><rect x="98.5234%" y="357" width="0.0161%" height="15" fill="rgb(245,204,40)" fg:x="250207" fg:w="41"/><text x="98.7734%" y="367.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec (41 samples, 0.02%)</title><rect x="98.5234%" y="341" width="0.0161%" height="15" fill="rgb(238,228,24)" fg:x="250207" fg:w="41"/><text x="98.7734%" y="351.50"></text></g><g><title>alloc::slice::&lt;impl [T]&gt;::to_vec_in (41 samples, 0.02%)</title><rect x="98.5234%" y="325" width="0.0161%" height="15" fill="rgb(217,116,22)" fg:x="250207" fg:w="41"/><text x="98.7734%" y="335.50"></text></g><g><title>alloc::slice::hack::to_vec (41 samples, 0.02%)</title><rect x="98.5234%" y="309" width="0.0161%" height="15" fill="rgb(234,98,12)" fg:x="250207" fg:w="41"/><text x="98.7734%" y="319.50"></text></g><g><title>&lt;T as alloc::slice::hack::ConvertVec&gt;::to_vec (41 samples, 0.02%)</title><rect x="98.5234%" y="293" width="0.0161%" height="15" fill="rgb(242,170,50)" fg:x="250207" fg:w="41"/><text x="98.7734%" y="303.50"></text></g><g><title>&lt;bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBinding as core::cmp::PartialEq&gt;::ne (28 samples, 0.01%)</title><rect x="98.5407%" y="373" width="0.0110%" height="15" fill="rgb(235,7,5)" fg:x="250251" fg:w="28"/><text x="98.7907%" y="383.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::ne (35 samples, 0.01%)</title><rect x="98.5407%" y="389" width="0.0138%" height="15" fill="rgb(241,114,28)" fg:x="250251" fg:w="35"/><text x="98.7907%" y="399.50"></text></g><g><title>&lt;ahash::random_state::RandomState as core::hash::BuildHasher&gt;::build_hasher (214 samples, 0.08%)</title><rect x="98.5620%" y="325" width="0.0843%" height="15" fill="rgb(246,112,42)" fg:x="250305" fg:w="214"/><text x="98.8120%" y="335.50"></text></g><g><title>ahash::fallback_hash::AHasher::from_random_state (214 samples, 0.08%)</title><rect x="98.5620%" y="309" width="0.0843%" height="15" fill="rgb(248,228,14)" fg:x="250305" fg:w="214"/><text x="98.8120%" y="319.50"></text></g><g><title>hashbrown::map::make_hash (272 samples, 0.11%)</title><rect x="98.5545%" y="341" width="0.1071%" height="15" fill="rgb(208,133,18)" fg:x="250286" fg:w="272"/><text x="98.8045%" y="351.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (39 samples, 0.02%)</title><rect x="98.6462%" y="325" width="0.0154%" height="15" fill="rgb(207,35,49)" fg:x="250519" fg:w="39"/><text x="98.8962%" y="335.50"></text></g><g><title>alloc::str::&lt;impl core::borrow::Borrow&lt;str&gt; for alloc::string::String&gt;::borrow (47 samples, 0.02%)</title><rect x="98.6785%" y="293" width="0.0185%" height="15" fill="rgb(205,68,36)" fg:x="250601" fg:w="47"/><text x="98.9285%" y="303.50"></text></g><g><title>&lt;alloc::string::String as core::ops::index::Index&lt;core::ops::range::RangeFull&gt;&gt;::index (47 samples, 0.02%)</title><rect x="98.6785%" y="277" width="0.0185%" height="15" fill="rgb(245,62,40)" fg:x="250601" fg:w="47"/><text x="98.9285%" y="287.50"></text></g><g><title>&lt;alloc::vec::Vec&lt;T,A&gt; as core::ops::deref::Deref&gt;::deref (47 samples, 0.02%)</title><rect x="98.6785%" y="261" width="0.0185%" height="15" fill="rgb(228,27,24)" fg:x="250601" fg:w="47"/><text x="98.9285%" y="271.50"></text></g><g><title>alloc::vec::Vec&lt;T,A&gt;::as_ptr (46 samples, 0.02%)</title><rect x="98.6789%" y="245" width="0.0181%" height="15" fill="rgb(253,19,12)" fg:x="250602" fg:w="46"/><text x="98.9289%" y="255.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (959 samples, 0.38%)</title><rect x="98.6970%" y="245" width="0.3776%" height="15" fill="rgb(232,28,20)" fg:x="250648" fg:w="959"/><text x="98.9470%" y="255.50"></text></g><g><title>__memcmp_avx2_movbe (498 samples, 0.20%)</title><rect x="98.8786%" y="229" width="0.1961%" height="15" fill="rgb(218,35,51)" fg:x="251109" fg:w="498"/><text x="99.1286%" y="239.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (1,013 samples, 0.40%)</title><rect x="98.6785%" y="309" width="0.3989%" height="15" fill="rgb(212,90,40)" fg:x="250601" fg:w="1013"/><text x="98.9285%" y="319.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (966 samples, 0.38%)</title><rect x="98.6970%" y="293" width="0.3804%" height="15" fill="rgb(220,172,12)" fg:x="250648" fg:w="966"/><text x="98.9470%" y="303.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (966 samples, 0.38%)</title><rect x="98.6970%" y="277" width="0.3804%" height="15" fill="rgb(226,159,20)" fg:x="250648" fg:w="966"/><text x="98.9470%" y="287.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (966 samples, 0.38%)</title><rect x="98.6970%" y="261" width="0.3804%" height="15" fill="rgb(234,205,16)" fg:x="250648" fg:w="966"/><text x="98.9470%" y="271.50"></text></g><g><title>hashbrown::raw::sse2::Group::load (383 samples, 0.15%)</title><rect x="99.0884%" y="261" width="0.1508%" height="15" fill="rgb(207,9,39)" fg:x="251642" fg:w="383"/><text x="99.3384%" y="271.50"></text></g><g><title>core::core_arch::x86::sse2::_mm_loadu_si128 (383 samples, 0.15%)</title><rect x="99.0884%" y="245" width="0.1508%" height="15" fill="rgb(249,143,15)" fg:x="251642" fg:w="383"/><text x="99.3384%" y="255.50"></text></g><g><title>core::intrinsics::copy_nonoverlapping (383 samples, 0.15%)</title><rect x="99.0884%" y="229" width="0.1508%" height="15" fill="rgb(253,133,29)" fg:x="251642" fg:w="383"/><text x="99.3384%" y="239.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::try_set_dirty (1,779 samples, 0.70%)</title><rect x="98.5407%" y="405" width="0.7005%" height="15" fill="rgb(221,187,0)" fg:x="250251" fg:w="1779"/><text x="98.7907%" y="415.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::get (1,744 samples, 0.69%)</title><rect x="98.5545%" y="389" width="0.6867%" height="15" fill="rgb(205,204,26)" fg:x="250286" fg:w="1744"/><text x="98.8045%" y="399.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get (1,744 samples, 0.69%)</title><rect x="98.5545%" y="373" width="0.6867%" height="15" fill="rgb(224,68,54)" fg:x="250286" fg:w="1744"/><text x="98.8045%" y="383.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::get_inner (1,744 samples, 0.69%)</title><rect x="98.5545%" y="357" width="0.6867%" height="15" fill="rgb(209,67,4)" fg:x="250286" fg:w="1744"/><text x="98.8045%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get (1,472 samples, 0.58%)</title><rect x="98.6616%" y="341" width="0.5796%" height="15" fill="rgb(228,229,18)" fg:x="250558" fg:w="1472"/><text x="98.9116%" y="351.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (1,465 samples, 0.58%)</title><rect x="98.6643%" y="325" width="0.5769%" height="15" fill="rgb(231,89,13)" fg:x="250565" fg:w="1465"/><text x="98.9143%" y="335.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (413 samples, 0.16%)</title><rect x="99.0786%" y="309" width="0.1626%" height="15" fill="rgb(210,182,18)" fg:x="251617" fg:w="413"/><text x="99.3286%" y="319.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (413 samples, 0.16%)</title><rect x="99.0786%" y="293" width="0.1626%" height="15" fill="rgb(240,105,2)" fg:x="251617" fg:w="413"/><text x="99.3286%" y="303.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (413 samples, 0.16%)</title><rect x="99.0786%" y="277" width="0.1626%" height="15" fill="rgb(207,170,50)" fg:x="251617" fg:w="413"/><text x="99.3286%" y="287.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::string::String&gt; (57 samples, 0.02%)</title><rect x="99.2554%" y="373" width="0.0224%" height="15" fill="rgb(232,133,24)" fg:x="252066" fg:w="57"/><text x="99.5054%" y="383.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::vec::Vec&lt;u8&gt;&gt; (57 samples, 0.02%)</title><rect x="99.2554%" y="357" width="0.0224%" height="15" fill="rgb(235,166,27)" fg:x="252066" fg:w="57"/><text x="99.5054%" y="367.50"></text></g><g><title>core::ptr::drop_in_place&lt;alloc::raw_vec::RawVec&lt;u8&gt;&gt; (57 samples, 0.02%)</title><rect x="99.2554%" y="341" width="0.0224%" height="15" fill="rgb(209,19,13)" fg:x="252066" fg:w="57"/><text x="99.5054%" y="351.50"></text></g><g><title>&lt;alloc::raw_vec::RawVec&lt;T,A&gt; as core::ops::drop::Drop&gt;::drop (57 samples, 0.02%)</title><rect x="99.2554%" y="325" width="0.0224%" height="15" fill="rgb(226,79,39)" fg:x="252066" fg:w="57"/><text x="99.5054%" y="335.50"></text></g><g><title>&lt;alloc::alloc::Global as core::alloc::Allocator&gt;::deallocate (57 samples, 0.02%)</title><rect x="99.2554%" y="309" width="0.0224%" height="15" fill="rgb(222,163,10)" fg:x="252066" fg:w="57"/><text x="99.5054%" y="319.50"></text></g><g><title>alloc::alloc::dealloc (57 samples, 0.02%)</title><rect x="99.2554%" y="293" width="0.0224%" height="15" fill="rgb(214,44,19)" fg:x="252066" fg:w="57"/><text x="99.5054%" y="303.50"></text></g><g><title>__rdl_dealloc (57 samples, 0.02%)</title><rect x="99.2554%" y="277" width="0.0224%" height="15" fill="rgb(210,217,13)" fg:x="252066" fg:w="57"/><text x="99.5054%" y="287.50"></text></g><g><title>std::sys::unix::alloc::&lt;impl core::alloc::global::GlobalAlloc for std::alloc::System&gt;::dealloc (53 samples, 0.02%)</title><rect x="99.2570%" y="261" width="0.0209%" height="15" fill="rgb(237,61,54)" fg:x="252070" fg:w="53"/><text x="99.5070%" y="271.50"></text></g><g><title>__GI___libc_free (53 samples, 0.02%)</title><rect x="99.2570%" y="245" width="0.0209%" height="15" fill="rgb(226,184,24)" fg:x="252070" fg:w="53"/><text x="99.5070%" y="255.50"></text></g><g><title>_int_free (37 samples, 0.01%)</title><rect x="99.2633%" y="229" width="0.0146%" height="15" fill="rgb(223,226,4)" fg:x="252086" fg:w="37"/><text x="99.5133%" y="239.50"></text></g><g><title>&lt;ahash::fallback_hash::AHasher as core::hash::Hasher&gt;::write (26 samples, 0.01%)</title><rect x="99.2928%" y="325" width="0.0102%" height="15" fill="rgb(210,26,41)" fg:x="252161" fg:w="26"/><text x="99.5428%" y="335.50"></text></g><g><title>hashbrown::map::make_insert_hash (105 samples, 0.04%)</title><rect x="99.2778%" y="373" width="0.0413%" height="15" fill="rgb(220,221,6)" fg:x="252123" fg:w="105"/><text x="99.5278%" y="383.50"></text></g><g><title>&lt;alloc::string::String as core::hash::Hash&gt;::hash (79 samples, 0.03%)</title><rect x="99.2881%" y="357" width="0.0311%" height="15" fill="rgb(225,89,49)" fg:x="252149" fg:w="79"/><text x="99.5381%" y="367.50"></text></g><g><title>core::hash::impls::&lt;impl core::hash::Hash for str&gt;::hash (72 samples, 0.03%)</title><rect x="99.2908%" y="341" width="0.0284%" height="15" fill="rgb(218,70,45)" fg:x="252156" fg:w="72"/><text x="99.5408%" y="351.50"></text></g><g><title>&lt;[A] as core::slice::cmp::SlicePartialEq&lt;B&gt;&gt;::equal (66 samples, 0.03%)</title><rect x="99.3345%" y="261" width="0.0260%" height="15" fill="rgb(238,166,21)" fg:x="252267" fg:w="66"/><text x="99.5845%" y="271.50"></text></g><g><title>__memcmp_avx2_movbe (53 samples, 0.02%)</title><rect x="99.3397%" y="245" width="0.0209%" height="15" fill="rgb(224,141,44)" fg:x="252280" fg:w="53"/><text x="99.5897%" y="255.50"></text></g><g><title>hashbrown::map::equivalent_key::{{closure}} (77 samples, 0.03%)</title><rect x="99.3341%" y="341" width="0.0303%" height="15" fill="rgb(230,12,49)" fg:x="252266" fg:w="77"/><text x="99.5841%" y="351.50"></text></g><g><title>&lt;alloc::string::String as core::cmp::PartialEq&gt;::eq (77 samples, 0.03%)</title><rect x="99.3341%" y="325" width="0.0303%" height="15" fill="rgb(212,174,12)" fg:x="252266" fg:w="77"/><text x="99.5841%" y="335.50"></text></g><g><title>core::str::traits::&lt;impl core::cmp::PartialEq for str&gt;::eq (76 samples, 0.03%)</title><rect x="99.3345%" y="309" width="0.0299%" height="15" fill="rgb(246,67,9)" fg:x="252267" fg:w="76"/><text x="99.5845%" y="319.50"></text></g><g><title>core::cmp::impls::&lt;impl core::cmp::PartialEq&lt;&amp;B&gt; for &amp;A&gt;::eq (76 samples, 0.03%)</title><rect x="99.3345%" y="293" width="0.0299%" height="15" fill="rgb(239,35,23)" fg:x="252267" fg:w="76"/><text x="99.5845%" y="303.50"></text></g><g><title>core::slice::cmp::&lt;impl core::cmp::PartialEq&lt;[B]&gt; for [A]&gt;::eq (76 samples, 0.03%)</title><rect x="99.3345%" y="277" width="0.0299%" height="15" fill="rgb(211,167,0)" fg:x="252267" fg:w="76"/><text x="99.5845%" y="287.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::get_mut (148 samples, 0.06%)</title><rect x="99.3192%" y="373" width="0.0583%" height="15" fill="rgb(225,119,45)" fg:x="252228" fg:w="148"/><text x="99.5692%" y="383.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::find (146 samples, 0.06%)</title><rect x="99.3200%" y="357" width="0.0575%" height="15" fill="rgb(210,162,6)" fg:x="252230" fg:w="146"/><text x="99.5700%" y="367.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::iter_hash (31 samples, 0.01%)</title><rect x="99.3652%" y="341" width="0.0122%" height="15" fill="rgb(208,118,35)" fg:x="252345" fg:w="31"/><text x="99.6152%" y="351.50"></text></g><g><title>hashbrown::raw::RawIterHash&lt;T,A&gt;::new (31 samples, 0.01%)</title><rect x="99.3652%" y="325" width="0.0122%" height="15" fill="rgb(239,4,53)" fg:x="252345" fg:w="31"/><text x="99.6152%" y="335.50"></text></g><g><title>hashbrown::raw::RawIterHashInner&lt;A&gt;::new (30 samples, 0.01%)</title><rect x="99.3656%" y="309" width="0.0118%" height="15" fill="rgb(213,130,21)" fg:x="252346" fg:w="30"/><text x="99.6156%" y="319.50"></text></g><g><title>&lt;Func as bevy_ecs::system::into_system::SystemParamFunction&lt;(),Out,(F0,F1,F2,F3,F4),()&gt;&gt;::run (2,471 samples, 0.97%)</title><rect x="98.4048%" y="533" width="0.9730%" height="15" fill="rgb(235,148,0)" fg:x="249906" fg:w="2471"/><text x="98.6548%" y="543.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnMut&lt;A&gt; for &amp;F&gt;::call_mut (2,471 samples, 0.97%)</title><rect x="98.4048%" y="517" width="0.9730%" height="15" fill="rgb(244,224,18)" fg:x="249906" fg:w="2471"/><text x="98.6548%" y="527.50"></text></g><g><title>core::ops::function::Fn::call (2,471 samples, 0.97%)</title><rect x="98.4048%" y="501" width="0.9730%" height="15" fill="rgb(211,214,4)" fg:x="249906" fg:w="2471"/><text x="98.6548%" y="511.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system (2,471 samples, 0.97%)</title><rect x="98.4048%" y="485" width="0.9730%" height="15" fill="rgb(206,119,25)" fg:x="249906" fg:w="2471"/><text x="98.6548%" y="495.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::write_mapped_buffer (2,470 samples, 0.97%)</title><rect x="98.4052%" y="469" width="0.9726%" height="15" fill="rgb(243,93,47)" fg:x="249907" fg:w="2470"/><text x="98.6552%" y="479.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::render_resources_node_system::{{closure}} (2,470 samples, 0.97%)</title><rect x="98.4052%" y="453" width="0.9726%" height="15" fill="rgb(224,194,6)" fg:x="249907" fg:w="2470"/><text x="98.6552%" y="463.50"></text></g><g><title>bevy_render::render_graph::nodes::render_resources_node::UniformBufferArrays&lt;I,T&gt;::write_uniform_buffers (2,470 samples, 0.97%)</title><rect x="98.4052%" y="437" width="0.9726%" height="15" fill="rgb(243,229,6)" fg:x="249907" fg:w="2470"/><text x="98.6552%" y="447.50"></text></g><g><title>bevy_render::renderer::render_resource::render_resource_bindings::RenderResourceBindings::set (2,173 samples, 0.86%)</title><rect x="98.5222%" y="421" width="0.8557%" height="15" fill="rgb(207,23,50)" fg:x="250204" fg:w="2173"/><text x="98.7722%" y="431.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::insert (347 samples, 0.14%)</title><rect x="99.2412%" y="405" width="0.1366%" height="15" fill="rgb(253,192,32)" fg:x="252030" fg:w="347"/><text x="99.4912%" y="415.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::insert (331 samples, 0.13%)</title><rect x="99.2475%" y="389" width="0.1303%" height="15" fill="rgb(213,21,6)" fg:x="252046" fg:w="331"/><text x="99.4975%" y="399.50"></text></g><g><title>bevy_render::render_graph::system::render_graph_schedule_executor_system (2,478 samples, 0.98%)</title><rect x="98.4041%" y="805" width="0.9758%" height="15" fill="rgb(243,151,13)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="815.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (2,478 samples, 0.98%)</title><rect x="98.4041%" y="789" width="0.9758%" height="15" fill="rgb(233,165,41)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="799.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,478 samples, 0.98%)</title><rect x="98.4041%" y="773" width="0.9758%" height="15" fill="rgb(246,176,45)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="783.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (2,478 samples, 0.98%)</title><rect x="98.4041%" y="757" width="0.9758%" height="15" fill="rgb(217,170,52)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="767.50"></text></g><g><title>&lt;bevy_ecs::schedule::executor_parallel::ParallelExecutor as bevy_ecs::schedule::executor::ParallelSystemExecutor&gt;::run_systems (2,478 samples, 0.98%)</title><rect x="98.4041%" y="741" width="0.9758%" height="15" fill="rgb(214,203,54)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="751.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope (2,478 samples, 0.98%)</title><rect x="98.4041%" y="725" width="0.9758%" height="15" fill="rgb(248,215,49)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="735.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::with (2,478 samples, 0.98%)</title><rect x="98.4041%" y="709" width="0.9758%" height="15" fill="rgb(208,46,10)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="719.50"></text></g><g><title>std::thread::local::LocalKey&lt;T&gt;::try_with (2,478 samples, 0.98%)</title><rect x="98.4041%" y="693" width="0.9758%" height="15" fill="rgb(254,5,31)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="703.50"></text></g><g><title>bevy_tasks::task_pool::TaskPool::scope::{{closure}} (2,478 samples, 0.98%)</title><rect x="98.4041%" y="677" width="0.9758%" height="15" fill="rgb(222,104,33)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="687.50"></text></g><g><title>async_executor::Executor::try_tick (2,478 samples, 0.98%)</title><rect x="98.4041%" y="661" width="0.9758%" height="15" fill="rgb(248,49,16)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="671.50"></text></g><g><title>async_task::runnable::Runnable::run (2,478 samples, 0.98%)</title><rect x="98.4041%" y="645" width="0.9758%" height="15" fill="rgb(232,198,41)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="655.50"></text></g><g><title>async_task::raw::RawTask&lt;F,T,S&gt;::run (2,478 samples, 0.98%)</title><rect x="98.4041%" y="629" width="0.9758%" height="15" fill="rgb(214,125,3)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="639.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,478 samples, 0.98%)</title><rect x="98.4041%" y="613" width="0.9758%" height="15" fill="rgb(229,220,28)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="623.50"></text></g><g><title>async_executor::Executor::spawn::{{closure}} (2,478 samples, 0.98%)</title><rect x="98.4041%" y="597" width="0.9758%" height="15" fill="rgb(222,64,37)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="607.50"></text></g><g><title>&lt;core::future::from_generator::GenFuture&lt;T&gt; as core::future::future::Future&gt;::poll (2,478 samples, 0.98%)</title><rect x="98.4041%" y="581" width="0.9758%" height="15" fill="rgb(249,184,13)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="591.50"></text></g><g><title>bevy_ecs::schedule::executor_parallel::ParallelExecutor::prepare_systems::{{closure}} (2,478 samples, 0.98%)</title><rect x="98.4041%" y="565" width="0.9758%" height="15" fill="rgb(252,176,6)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="575.50"></text></g><g><title>&lt;bevy_ecs::system::into_system::FunctionSystem&lt;In,Out,Param,Marker,F&gt; as bevy_ecs::system::system::System&gt;::run_unsafe (2,478 samples, 0.98%)</title><rect x="98.4041%" y="549" width="0.9758%" height="15" fill="rgb(228,153,7)" fg:x="249904" fg:w="2478"/><text x="98.6541%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (26 samples, 0.01%)</title><rect x="99.3838%" y="405" width="0.0102%" height="15" fill="rgb(242,193,5)" fg:x="252392" fg:w="26"/><text x="99.6338%" y="415.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext as bevy_render::renderer::render_resource_context::RenderResourceContext&gt;::drop_all_swap_chain_textures (37 samples, 0.01%)</title><rect x="99.3798%" y="789" width="0.0146%" height="15" fill="rgb(232,140,9)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="799.50"></text></g><g><title>std::collections::hash::map::HashMap&lt;K,V,S&gt;::clear (37 samples, 0.01%)</title><rect x="99.3798%" y="773" width="0.0146%" height="15" fill="rgb(213,222,16)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="783.50"></text></g><g><title>hashbrown::map::HashMap&lt;K,V,S,A&gt;::clear (37 samples, 0.01%)</title><rect x="99.3798%" y="757" width="0.0146%" height="15" fill="rgb(222,75,50)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="767.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::clear (37 samples, 0.01%)</title><rect x="99.3798%" y="741" width="0.0146%" height="15" fill="rgb(205,180,2)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="751.50"></text></g><g><title>hashbrown::raw::RawTable&lt;T,A&gt;::drop_elements (37 samples, 0.01%)</title><rect x="99.3798%" y="725" width="0.0146%" height="15" fill="rgb(216,34,7)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="735.50"></text></g><g><title>hashbrown::raw::Bucket&lt;T&gt;::drop (37 samples, 0.01%)</title><rect x="99.3798%" y="709" width="0.0146%" height="15" fill="rgb(253,16,32)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="719.50"></text></g><g><title>core::ptr::mut_ptr::&lt;impl *mut T&gt;::drop_in_place (37 samples, 0.01%)</title><rect x="99.3798%" y="693" width="0.0146%" height="15" fill="rgb(208,97,28)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="703.50"></text></g><g><title>core::ptr::drop_in_place&lt;(bevy_render::renderer::render_resource::texture::TextureId,wgpu::SwapChainFrame)&gt; (37 samples, 0.01%)</title><rect x="99.3798%" y="677" width="0.0146%" height="15" fill="rgb(225,92,11)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="687.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainFrame&gt; (37 samples, 0.01%)</title><rect x="99.3798%" y="661" width="0.0146%" height="15" fill="rgb(243,38,12)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="671.50"></text></g><g><title>core::ptr::drop_in_place&lt;wgpu::SwapChainTexture&gt; (37 samples, 0.01%)</title><rect x="99.3798%" y="645" width="0.0146%" height="15" fill="rgb(208,139,16)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="655.50"></text></g><g><title>&lt;wgpu::SwapChainTexture as core::ops::drop::Drop&gt;::drop (37 samples, 0.01%)</title><rect x="99.3798%" y="629" width="0.0146%" height="15" fill="rgb(227,24,9)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="639.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::swap_chain_present (37 samples, 0.01%)</title><rect x="99.3798%" y="613" width="0.0146%" height="15" fill="rgb(206,62,11)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="623.50"></text></g><g><title>wgpu_core::swap_chain::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::swap_chain_present (37 samples, 0.01%)</title><rect x="99.3798%" y="597" width="0.0146%" height="15" fill="rgb(228,134,27)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="607.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::present (37 samples, 0.01%)</title><rect x="99.3798%" y="581" width="0.0146%" height="15" fill="rgb(205,55,33)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="591.50"></text></g><g><title>ash::extensions::khr::swapchain::Swapchain::queue_present (37 samples, 0.01%)</title><rect x="99.3798%" y="565" width="0.0146%" height="15" fill="rgb(243,75,43)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="575.50"></text></g><g><title>ash::vk::extensions::KhrSwapchainFn::queue_present_khr (37 samples, 0.01%)</title><rect x="99.3798%" y="549" width="0.0146%" height="15" fill="rgb(223,27,42)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="559.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (37 samples, 0.01%)</title><rect x="99.3798%" y="533" width="0.0146%" height="15" fill="rgb(232,189,33)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="543.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (37 samples, 0.01%)</title><rect x="99.3798%" y="517" width="0.0146%" height="15" fill="rgb(210,9,39)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="527.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (37 samples, 0.01%)</title><rect x="99.3798%" y="501" width="0.0146%" height="15" fill="rgb(242,85,26)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="511.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (37 samples, 0.01%)</title><rect x="99.3798%" y="485" width="0.0146%" height="15" fill="rgb(248,44,4)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="495.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (37 samples, 0.01%)</title><rect x="99.3798%" y="469" width="0.0146%" height="15" fill="rgb(250,96,46)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="479.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (37 samples, 0.01%)</title><rect x="99.3798%" y="453" width="0.0146%" height="15" fill="rgb(229,116,26)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="463.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (37 samples, 0.01%)</title><rect x="99.3798%" y="437" width="0.0146%" height="15" fill="rgb(246,94,34)" fg:x="252382" fg:w="37"/><text x="99.6298%" y="447.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (29 samples, 0.01%)</title><rect x="99.3830%" y="421" width="0.0114%" height="15" fill="rgb(251,73,21)" fg:x="252390" fg:w="29"/><text x="99.6330%" y="431.50"></text></g><g><title>bevy_render::render_graph::command::CommandQueue::execute (420 samples, 0.17%)</title><rect x="99.3952%" y="725" width="0.1654%" height="15" fill="rgb(254,121,25)" fg:x="252421" fg:w="420"/><text x="99.6452%" y="735.50"></text></g><g><title>&lt;bevy_wgpu::renderer::wgpu_render_context::WgpuRenderContext as bevy_render::renderer::render_context::RenderContext&gt;::copy_buffer_to_buffer (420 samples, 0.17%)</title><rect x="99.3952%" y="709" width="0.1654%" height="15" fill="rgb(215,161,49)" fg:x="252421" fg:w="420"/><text x="99.6452%" y="719.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_resource_context::WgpuRenderResourceContext::copy_buffer_to_buffer (415 samples, 0.16%)</title><rect x="99.3971%" y="693" width="0.1634%" height="15" fill="rgb(221,43,13)" fg:x="252426" fg:w="415"/><text x="99.6471%" y="703.50"></text></g><g><title>wgpu::CommandEncoder::copy_buffer_to_buffer (415 samples, 0.16%)</title><rect x="99.3971%" y="677" width="0.1634%" height="15" fill="rgb(249,5,37)" fg:x="252426" fg:w="415"/><text x="99.6471%" y="687.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::command_encoder_copy_buffer_to_buffer (415 samples, 0.16%)</title><rect x="99.3971%" y="661" width="0.1634%" height="15" fill="rgb(226,25,44)" fg:x="252426" fg:w="415"/><text x="99.6471%" y="671.50"></text></g><g><title>wgpu_core::command::transfer::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::command_encoder_copy_buffer_to_buffer (415 samples, 0.16%)</title><rect x="99.3971%" y="645" width="0.1634%" height="15" fill="rgb(238,189,16)" fg:x="252426" fg:w="415"/><text x="99.6471%" y="655.50"></text></g><g><title>&lt;gfx_backend_vulkan::command::CommandBuffer as gfx_hal::command::CommandBuffer&lt;gfx_backend_vulkan::Backend&gt;&gt;::pipeline_barrier (415 samples, 0.16%)</title><rect x="99.3971%" y="629" width="0.1634%" height="15" fill="rgb(251,186,8)" fg:x="252426" fg:w="415"/><text x="99.6471%" y="639.50"></text></g><g><title>ash::device::DeviceV1_0::cmd_pipeline_barrier (415 samples, 0.16%)</title><rect x="99.3971%" y="613" width="0.1634%" height="15" fill="rgb(254,34,31)" fg:x="252426" fg:w="415"/><text x="99.6471%" y="623.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::cmd_pipeline_barrier (415 samples, 0.16%)</title><rect x="99.3971%" y="597" width="0.1634%" height="15" fill="rgb(225,215,27)" fg:x="252426" fg:w="415"/><text x="99.6471%" y="607.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (415 samples, 0.16%)</title><rect x="99.3971%" y="581" width="0.1634%" height="15" fill="rgb(221,192,48)" fg:x="252426" fg:w="415"/><text x="99.6471%" y="591.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (327 samples, 0.13%)</title><rect x="99.4318%" y="565" width="0.1288%" height="15" fill="rgb(219,137,20)" fg:x="252514" fg:w="327"/><text x="99.6818%" y="575.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (172 samples, 0.07%)</title><rect x="99.4928%" y="549" width="0.0677%" height="15" fill="rgb(219,84,11)" fg:x="252669" fg:w="172"/><text x="99.7428%" y="559.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (77 samples, 0.03%)</title><rect x="99.5302%" y="533" width="0.0303%" height="15" fill="rgb(224,10,23)" fg:x="252764" fg:w="77"/><text x="99.7802%" y="543.50"></text></g><g><title>&lt;gfx_backend_vulkan::CommandQueue as gfx_hal::queue::CommandQueue&lt;gfx_backend_vulkan::Backend&gt;&gt;::submit (26 samples, 0.01%)</title><rect x="99.5606%" y="677" width="0.0102%" height="15" fill="rgb(248,22,39)" fg:x="252841" fg:w="26"/><text x="99.8106%" y="687.50"></text></g><g><title>ash::device::DeviceV1_0::queue_submit (26 samples, 0.01%)</title><rect x="99.5606%" y="661" width="0.0102%" height="15" fill="rgb(212,154,20)" fg:x="252841" fg:w="26"/><text x="99.8106%" y="671.50"></text></g><g><title>ash::vk::features::DeviceFnV1_0::queue_submit (26 samples, 0.01%)</title><rect x="99.5606%" y="645" width="0.0102%" height="15" fill="rgb(236,199,50)" fg:x="252841" fg:w="26"/><text x="99.8106%" y="655.50"></text></g><g><title>[libGLX_nvidia.so.470.63.01] (26 samples, 0.01%)</title><rect x="99.5606%" y="629" width="0.0102%" height="15" fill="rgb(211,9,17)" fg:x="252841" fg:w="26"/><text x="99.8106%" y="639.50"></text></g><g><title>[libnvidia-glcore.so.470.63.01] (26 samples, 0.01%)</title><rect x="99.5606%" y="613" width="0.0102%" height="15" fill="rgb(243,216,36)" fg:x="252841" fg:w="26"/><text x="99.8106%" y="623.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run (2,976 samples, 1.17%)</title><rect x="98.4025%" y="965" width="1.1719%" height="15" fill="rgb(250,2,10)" fg:x="249900" fg:w="2976"/><text x="98.6525%" y="975.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (2,976 samples, 1.17%)</title><rect x="98.4025%" y="949" width="1.1719%" height="15" fill="rgb(226,50,48)" fg:x="249900" fg:w="2976"/><text x="98.6525%" y="959.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (2,976 samples, 1.17%)</title><rect x="98.4025%" y="933" width="1.1719%" height="15" fill="rgb(243,81,16)" fg:x="249900" fg:w="2976"/><text x="98.6525%" y="943.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (2,976 samples, 1.17%)</title><rect x="98.4025%" y="917" width="1.1719%" height="15" fill="rgb(250,14,2)" fg:x="249900" fg:w="2976"/><text x="98.6525%" y="927.50"></text></g><g><title>bevy_app::app::App::update (2,976 samples, 1.17%)</title><rect x="98.4025%" y="901" width="1.1719%" height="15" fill="rgb(233,135,29)" fg:x="249900" fg:w="2976"/><text x="98.6525%" y="911.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (2,976 samples, 1.17%)</title><rect x="98.4025%" y="885" width="1.1719%" height="15" fill="rgb(224,64,43)" fg:x="249900" fg:w="2976"/><text x="98.6525%" y="895.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (2,976 samples, 1.17%)</title><rect x="98.4025%" y="869" width="1.1719%" height="15" fill="rgb(238,84,13)" fg:x="249900" fg:w="2976"/><text x="98.6525%" y="879.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (2,975 samples, 1.17%)</title><rect x="98.4029%" y="853" width="1.1715%" height="15" fill="rgb(253,48,26)" fg:x="249901" fg:w="2975"/><text x="98.6529%" y="863.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (2,972 samples, 1.17%)</title><rect x="98.4041%" y="837" width="1.1703%" height="15" fill="rgb(205,223,31)" fg:x="249904" fg:w="2972"/><text x="98.6541%" y="847.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (2,972 samples, 1.17%)</title><rect x="98.4041%" y="821" width="1.1703%" height="15" fill="rgb(221,41,32)" fg:x="249904" fg:w="2972"/><text x="98.6541%" y="831.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (494 samples, 0.19%)</title><rect x="99.3798%" y="805" width="0.1945%" height="15" fill="rgb(213,158,31)" fg:x="252382" fg:w="494"/><text x="99.6298%" y="815.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (457 samples, 0.18%)</title><rect x="99.3944%" y="789" width="0.1800%" height="15" fill="rgb(245,126,43)" fg:x="252419" fg:w="457"/><text x="99.6444%" y="799.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (457 samples, 0.18%)</title><rect x="99.3944%" y="773" width="0.1800%" height="15" fill="rgb(227,7,22)" fg:x="252419" fg:w="457"/><text x="99.6444%" y="783.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (457 samples, 0.18%)</title><rect x="99.3944%" y="757" width="0.1800%" height="15" fill="rgb(252,90,44)" fg:x="252419" fg:w="457"/><text x="99.6444%" y="767.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (457 samples, 0.18%)</title><rect x="99.3944%" y="741" width="0.1800%" height="15" fill="rgb(253,91,0)" fg:x="252419" fg:w="457"/><text x="99.6444%" y="751.50"></text></g><g><title>wgpu::Queue::submit (35 samples, 0.01%)</title><rect x="99.5606%" y="725" width="0.0138%" height="15" fill="rgb(252,175,49)" fg:x="252841" fg:w="35"/><text x="99.8106%" y="735.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (35 samples, 0.01%)</title><rect x="99.5606%" y="709" width="0.0138%" height="15" fill="rgb(246,150,1)" fg:x="252841" fg:w="35"/><text x="99.8106%" y="719.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (35 samples, 0.01%)</title><rect x="99.5606%" y="693" width="0.0138%" height="15" fill="rgb(241,192,25)" fg:x="252841" fg:w="35"/><text x="99.8106%" y="703.50"></text></g><g><title>winit::platform_impl::platform::x11::EventLoop&lt;T&gt;::run_return (69 samples, 0.03%)</title><rect x="99.5743%" y="965" width="0.0272%" height="15" fill="rgb(239,187,11)" fg:x="252876" fg:w="69"/><text x="99.8243%" y="975.50"></text></g><g><title>winit::platform_impl::platform::sticky_exit_callback (69 samples, 0.03%)</title><rect x="99.5743%" y="949" width="0.0272%" height="15" fill="rgb(218,202,51)" fg:x="252876" fg:w="69"/><text x="99.8243%" y="959.50"></text></g><g><title>bevy_winit::winit_runner_with::{{closure}} (69 samples, 0.03%)</title><rect x="99.5743%" y="933" width="0.0272%" height="15" fill="rgb(225,176,8)" fg:x="252876" fg:w="69"/><text x="99.8243%" y="943.50"></text></g><g><title>bevy_app::app::App::update (69 samples, 0.03%)</title><rect x="99.5743%" y="917" width="0.0272%" height="15" fill="rgb(219,122,41)" fg:x="252876" fg:w="69"/><text x="99.8243%" y="927.50"></text></g><g><title>&lt;bevy_ecs::schedule::Schedule as bevy_ecs::schedule::stage::Stage&gt;::run (69 samples, 0.03%)</title><rect x="99.5743%" y="901" width="0.0272%" height="15" fill="rgb(248,140,20)" fg:x="252876" fg:w="69"/><text x="99.8243%" y="911.50"></text></g><g><title>bevy_ecs::schedule::Schedule::run_once (69 samples, 0.03%)</title><rect x="99.5743%" y="885" width="0.0272%" height="15" fill="rgb(245,41,37)" fg:x="252876" fg:w="69"/><text x="99.8243%" y="895.50"></text></g><g><title>&lt;bevy_ecs::schedule::stage::SystemStage as bevy_ecs::schedule::stage::Stage&gt;::run (67 samples, 0.03%)</title><rect x="99.5751%" y="869" width="0.0264%" height="15" fill="rgb(235,82,39)" fg:x="252878" fg:w="67"/><text x="99.8251%" y="879.50"></text></g><g><title>&lt;bevy_ecs::system::exclusive_system::ExclusiveSystemFn as bevy_ecs::system::exclusive_system::ExclusiveSystem&gt;::run (64 samples, 0.03%)</title><rect x="99.5763%" y="853" width="0.0252%" height="15" fill="rgb(230,108,42)" fg:x="252881" fg:w="64"/><text x="99.8263%" y="863.50"></text></g><g><title>&lt;alloc::boxed::Box&lt;F,A&gt; as core::ops::function::FnMut&lt;Args&gt;&gt;::call_mut (64 samples, 0.03%)</title><rect x="99.5763%" y="837" width="0.0252%" height="15" fill="rgb(215,150,50)" fg:x="252881" fg:w="64"/><text x="99.8263%" y="847.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::update (61 samples, 0.02%)</title><rect x="99.5775%" y="821" width="0.0240%" height="15" fill="rgb(233,212,5)" fg:x="252884" fg:w="61"/><text x="99.8275%" y="831.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph (49 samples, 0.02%)</title><rect x="99.5822%" y="805" width="0.0193%" height="15" fill="rgb(245,80,22)" fg:x="252896" fg:w="49"/><text x="99.8322%" y="815.50"></text></g><g><title>bevy_ecs::world::World::resource_scope (49 samples, 0.02%)</title><rect x="99.5822%" y="789" width="0.0193%" height="15" fill="rgb(238,129,16)" fg:x="252896" fg:w="49"/><text x="99.8322%" y="799.50"></text></g><g><title>bevy_wgpu::wgpu_renderer::WgpuRenderer::run_graph::{{closure}} (49 samples, 0.02%)</title><rect x="99.5822%" y="773" width="0.0193%" height="15" fill="rgb(240,19,0)" fg:x="252896" fg:w="49"/><text x="99.8322%" y="783.50"></text></g><g><title>bevy_wgpu::renderer::wgpu_render_graph_executor::WgpuRenderGraphExecutor::execute (49 samples, 0.02%)</title><rect x="99.5822%" y="757" width="0.0193%" height="15" fill="rgb(232,42,35)" fg:x="252896" fg:w="49"/><text x="99.8322%" y="767.50"></text></g><g><title>wgpu::Queue::submit (46 samples, 0.02%)</title><rect x="99.5834%" y="741" width="0.0181%" height="15" fill="rgb(223,130,24)" fg:x="252899" fg:w="46"/><text x="99.8334%" y="751.50"></text></g><g><title>&lt;wgpu::backend::direct::Context as wgpu::Context&gt;::queue_submit (46 samples, 0.02%)</title><rect x="99.5834%" y="725" width="0.0181%" height="15" fill="rgb(237,16,22)" fg:x="252899" fg:w="46"/><text x="99.8334%" y="735.50"></text></g><g><title>wgpu_core::device::queue::&lt;impl wgpu_core::hub::Global&lt;G&gt;&gt;::queue_submit (46 samples, 0.02%)</title><rect x="99.5834%" y="709" width="0.0181%" height="15" fill="rgb(248,192,20)" fg:x="252899" fg:w="46"/><text x="99.8334%" y="719.50"></text></g><g><title>glslang::TPpContext::tokenize (28 samples, 0.01%)</title><rect x="99.6228%" y="917" width="0.0110%" height="15" fill="rgb(233,167,2)" fg:x="252999" fg:w="28"/><text x="99.8728%" y="927.50"></text></g><g><title>[unknown] (131,954 samples, 51.96%)</title><rect x="47.6809%" y="981" width="51.9592%" height="15" fill="rgb(252,71,44)" fg:x="121089" fg:w="131954"/><text x="47.9309%" y="991.50">[unknown]</text></g><g><title>yyparse (93 samples, 0.04%)</title><rect x="99.6035%" y="965" width="0.0366%" height="15" fill="rgb(238,37,47)" fg:x="252950" fg:w="93"/><text x="99.8535%" y="975.50"></text></g><g><title>yylex (45 samples, 0.02%)</title><rect x="99.6224%" y="949" width="0.0177%" height="15" fill="rgb(214,202,54)" fg:x="252998" fg:w="45"/><text x="99.8724%" y="959.50"></text></g><g><title>glslang::TScanContext::tokenize (45 samples, 0.02%)</title><rect x="99.6224%" y="933" width="0.0177%" height="15" fill="rgb(254,165,40)" fg:x="252998" fg:w="45"/><text x="99.8724%" y="943.50"></text></g><g><title>__GI___clone (81 samples, 0.03%)</title><rect x="99.6409%" y="981" width="0.0319%" height="15" fill="rgb(246,173,38)" fg:x="253045" fg:w="81"/><text x="99.8909%" y="991.50"></text></g><g><title>[libudev.so.1.7.2] (34 samples, 0.01%)</title><rect x="99.6807%" y="517" width="0.0134%" height="15" fill="rgb(215,3,27)" fg:x="253146" fg:w="34"/><text x="99.9307%" y="527.50"></text></g><g><title>[libudev.so.1.7.2] (47 samples, 0.02%)</title><rect x="99.6799%" y="533" width="0.0185%" height="15" fill="rgb(239,169,51)" fg:x="253144" fg:w="47"/><text x="99.9299%" y="543.50"></text></g><g><title>[libudev.so.1.7.2] (49 samples, 0.02%)</title><rect x="99.6799%" y="549" width="0.0193%" height="15" fill="rgb(212,5,25)" fg:x="253144" fg:w="49"/><text x="99.9299%" y="559.50"></text></g><g><title>&lt;bevy_gilrs::GilrsPlugin as bevy_app::plugin::Plugin&gt;::build (54 samples, 0.02%)</title><rect x="99.6787%" y="693" width="0.0213%" height="15" fill="rgb(243,45,17)" fg:x="253141" fg:w="54"/><text x="99.9287%" y="703.50"></text></g><g><title>gilrs::gamepad::GilrsBuilder::build (54 samples, 0.02%)</title><rect x="99.6787%" y="677" width="0.0213%" height="15" fill="rgb(242,97,9)" fg:x="253141" fg:w="54"/><text x="99.9287%" y="687.50"></text></g><g><title>gilrs_core::Gilrs::new (54 samples, 0.02%)</title><rect x="99.6787%" y="661" width="0.0213%" height="15" fill="rgb(228,71,31)" fg:x="253141" fg:w="54"/><text x="99.9287%" y="671.50"></text></g><g><title>gilrs_core::platform::platform::gamepad::Gilrs::new (54 samples, 0.02%)</title><rect x="99.6787%" y="645" width="0.0213%" height="15" fill="rgb(252,184,16)" fg:x="253141" fg:w="54"/><text x="99.9287%" y="655.50"></text></g><g><title>gilrs_core::platform::platform::udev::Enumerate::scan_devices (54 samples, 0.02%)</title><rect x="99.6787%" y="629" width="0.0213%" height="15" fill="rgb(236,169,46)" fg:x="253141" fg:w="54"/><text x="99.9287%" y="639.50"></text></g><g><title>udev_enumerate_scan_devices (54 samples, 0.02%)</title><rect x="99.6787%" y="613" width="0.0213%" height="15" fill="rgb(207,17,47)" fg:x="253141" fg:w="54"/><text x="99.9287%" y="623.50"></text></g><g><title>[libudev.so.1.7.2] (54 samples, 0.02%)</title><rect x="99.6787%" y="597" width="0.0213%" height="15" fill="rgb(206,201,28)" fg:x="253141" fg:w="54"/><text x="99.9287%" y="607.50"></text></g><g><title>[libudev.so.1.7.2] (54 samples, 0.02%)</title><rect x="99.6787%" y="581" width="0.0213%" height="15" fill="rgb(224,184,23)" fg:x="253141" fg:w="54"/><text x="99.9287%" y="591.50"></text></g><g><title>[libudev.so.1.7.2] (53 samples, 0.02%)</title><rect x="99.6791%" y="565" width="0.0209%" height="15" fill="rgb(208,139,48)" fg:x="253142" fg:w="53"/><text x="99.9291%" y="575.50"></text></g><g><title>__libc_start_main (57 samples, 0.02%)</title><rect x="99.6779%" y="965" width="0.0224%" height="15" fill="rgb(208,130,10)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="975.50"></text></g><g><title>main (57 samples, 0.02%)</title><rect x="99.6779%" y="949" width="0.0224%" height="15" fill="rgb(211,213,45)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="959.50"></text></g><g><title>std::rt::lang_start_internal (57 samples, 0.02%)</title><rect x="99.6779%" y="933" width="0.0224%" height="15" fill="rgb(235,100,30)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="943.50"></text></g><g><title>std::panic::catch_unwind (57 samples, 0.02%)</title><rect x="99.6779%" y="917" width="0.0224%" height="15" fill="rgb(206,144,31)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="927.50"></text></g><g><title>std::panicking::try (57 samples, 0.02%)</title><rect x="99.6779%" y="901" width="0.0224%" height="15" fill="rgb(224,200,26)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="911.50"></text></g><g><title>std::panicking::try::do_call (57 samples, 0.02%)</title><rect x="99.6779%" y="885" width="0.0224%" height="15" fill="rgb(247,104,53)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="895.50"></text></g><g><title>std::rt::lang_start_internal::{{closure}} (57 samples, 0.02%)</title><rect x="99.6779%" y="869" width="0.0224%" height="15" fill="rgb(220,14,17)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="879.50"></text></g><g><title>std::panic::catch_unwind (57 samples, 0.02%)</title><rect x="99.6779%" y="853" width="0.0224%" height="15" fill="rgb(230,140,40)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="863.50"></text></g><g><title>std::panicking::try (57 samples, 0.02%)</title><rect x="99.6779%" y="837" width="0.0224%" height="15" fill="rgb(229,2,41)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="847.50"></text></g><g><title>std::panicking::try::do_call (57 samples, 0.02%)</title><rect x="99.6779%" y="821" width="0.0224%" height="15" fill="rgb(232,89,16)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="831.50"></text></g><g><title>core::ops::function::impls::&lt;impl core::ops::function::FnOnce&lt;A&gt; for &amp;F&gt;::call_once (57 samples, 0.02%)</title><rect x="99.6779%" y="805" width="0.0224%" height="15" fill="rgb(247,59,52)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="815.50"></text></g><g><title>std::rt::lang_start::{{closure}} (57 samples, 0.02%)</title><rect x="99.6779%" y="789" width="0.0224%" height="15" fill="rgb(226,110,21)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="799.50"></text></g><g><title>std::sys_common::backtrace::__rust_begin_short_backtrace (57 samples, 0.02%)</title><rect x="99.6779%" y="773" width="0.0224%" height="15" fill="rgb(224,176,43)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="783.50"></text></g><g><title>core::ops::function::FnOnce::call_once (57 samples, 0.02%)</title><rect x="99.6779%" y="757" width="0.0224%" height="15" fill="rgb(221,73,6)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="767.50"></text></g><g><title>engine::main (57 samples, 0.02%)</title><rect x="99.6779%" y="741" width="0.0224%" height="15" fill="rgb(232,78,19)" fg:x="253139" fg:w="57"/><text x="99.9279%" y="751.50"></text></g><g><title>bevy_app::app_builder::AppBuilder::add_plugins (56 samples, 0.02%)</title><rect x="99.6783%" y="725" width="0.0221%" height="15" fill="rgb(233,112,48)" fg:x="253140" fg:w="56"/><text x="99.9283%" y="735.50"></text></g><g><title>bevy_app::plugin_group::PluginGroupBuilder::finish (56 samples, 0.02%)</title><rect x="99.6783%" y="709" width="0.0221%" height="15" fill="rgb(243,131,47)" fg:x="253140" fg:w="56"/><text x="99.9283%" y="719.50"></text></g><g><title>_start (65 samples, 0.03%)</title><rect x="99.6759%" y="981" width="0.0256%" height="15" fill="rgb(226,51,1)" fg:x="253134" fg:w="65"/><text x="99.9259%" y="991.50"></text></g><g><title>async_task::task::Task&lt;T&gt;::poll_task (486 samples, 0.19%)</title><rect x="99.7082%" y="981" width="0.1914%" height="15" fill="rgb(247,58,7)" fg:x="253216" fg:w="486"/><text x="99.9582%" y="991.50"></text></g><g><title>engine (144,684 samples, 56.97%)</title><rect x="42.9455%" y="997" width="56.9718%" height="15" fill="rgb(209,7,32)" fg:x="109063" fg:w="144684"/><text x="43.1955%" y="1007.50">engine</text></g><g><title>[anon] (32 samples, 0.01%)</title><rect x="99.9240%" y="981" width="0.0126%" height="15" fill="rgb(209,39,41)" fg:x="253764" fg:w="32"/><text x="100.1740%" y="991.50"></text></g><g><title>[libpulsecommon-15.0.so] (35 samples, 0.01%)</title><rect x="99.9500%" y="821" width="0.0138%" height="15" fill="rgb(226,182,46)" fg:x="253830" fg:w="35"/><text x="100.2000%" y="831.50"></text></g><g><title>[libpulsecommon-15.0.so] (42 samples, 0.02%)</title><rect x="99.9492%" y="837" width="0.0165%" height="15" fill="rgb(230,219,10)" fg:x="253828" fg:w="42"/><text x="100.1992%" y="847.50"></text></g><g><title>[libpulsecommon-15.0.so] (52 samples, 0.02%)</title><rect x="99.9480%" y="853" width="0.0205%" height="15" fill="rgb(227,175,30)" fg:x="253825" fg:w="52"/><text x="100.1980%" y="863.50"></text></g><g><title>[libpulsecommon-15.0.so] (60 samples, 0.02%)</title><rect x="99.9476%" y="869" width="0.0236%" height="15" fill="rgb(217,2,50)" fg:x="253824" fg:w="60"/><text x="100.1976%" y="879.50"></text></g><g><title>pa_mainloop_dispatch (72 samples, 0.03%)</title><rect x="99.9453%" y="885" width="0.0284%" height="15" fill="rgb(229,160,0)" fg:x="253818" fg:w="72"/><text x="100.1953%" y="895.50"></text></g><g><title>__GI___poll (48 samples, 0.02%)</title><rect x="99.9756%" y="853" width="0.0189%" height="15" fill="rgb(207,78,37)" fg:x="253895" fg:w="48"/><text x="100.2256%" y="863.50"></text></g><g><title>pa_mainloop_poll (56 samples, 0.02%)</title><rect x="99.9736%" y="885" width="0.0221%" height="15" fill="rgb(225,57,0)" fg:x="253890" fg:w="56"/><text x="100.2236%" y="895.50"></text></g><g><title>[libpulse.so.0.24.0] (54 samples, 0.02%)</title><rect x="99.9744%" y="869" width="0.0213%" height="15" fill="rgb(232,154,2)" fg:x="253892" fg:w="54"/><text x="100.2244%" y="879.50"></text></g><g><title>__GI___clone (137 samples, 0.05%)</title><rect x="99.9441%" y="981" width="0.0539%" height="15" fill="rgb(241,212,25)" fg:x="253815" fg:w="137"/><text x="100.1941%" y="991.50"></text></g><g><title>start_thread (137 samples, 0.05%)</title><rect x="99.9441%" y="965" width="0.0539%" height="15" fill="rgb(226,69,20)" fg:x="253815" fg:w="137"/><text x="100.1941%" y="975.50"></text></g><g><title>[libpulsecommon-15.0.so] (137 samples, 0.05%)</title><rect x="99.9441%" y="949" width="0.0539%" height="15" fill="rgb(247,184,54)" fg:x="253815" fg:w="137"/><text x="100.1941%" y="959.50"></text></g><g><title>[libpulse.so.0.24.0] (137 samples, 0.05%)</title><rect x="99.9441%" y="933" width="0.0539%" height="15" fill="rgb(210,145,0)" fg:x="253815" fg:w="137"/><text x="100.1941%" y="943.50"></text></g><g><title>pa_mainloop_run (137 samples, 0.05%)</title><rect x="99.9441%" y="917" width="0.0539%" height="15" fill="rgb(253,82,12)" fg:x="253815" fg:w="137"/><text x="100.1941%" y="927.50"></text></g><g><title>pa_mainloop_iterate (136 samples, 0.05%)</title><rect x="99.9445%" y="901" width="0.0536%" height="15" fill="rgb(245,42,11)" fg:x="253816" fg:w="136"/><text x="100.1945%" y="911.50"></text></g><g><title>all (253,957 samples, 100%)</title><rect x="0.0000%" y="1013" width="100.0000%" height="15" fill="rgb(219,147,32)" fg:x="0" fg:w="253957"/><text x="0.2500%" y="1023.50"></text></g><g><title>threaded-ml (210 samples, 0.08%)</title><rect x="99.9173%" y="997" width="0.0827%" height="15" fill="rgb(246,12,7)" fg:x="253747" fg:w="210"/><text x="100.1673%" y="1007.50"></text></g></svg></svg>